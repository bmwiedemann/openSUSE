From 08ce0d63c343f7db9a504d37de25391a997b46e2 Mon Sep 17 00:00:00 2001
From: Tom de Vries <tdevries@suse.de>
Date: Mon, 8 Jan 2024 13:01:50 +0100
Subject: [PATCH] [gdb/testsuite] Add missing -no-prompt-anchor in
 gdb.base/vfork-follow-parent.exp

When running test-case gdb.base/vfork-follow-parent.exp it passes fine, but
when running it with "taskset -c 0" I run into:
...
(gdb) inferior 1^M
[Switching to inferior 1 [process 26606] (vfork-follow-parent-exit)]^M
[Switching to thread 1.1 (process 26606)]^M
(gdb) Reading symbols from vfork-follow-parent-exit...^M
FAIL: $exp: exec_file=vfork-follow-parent-exit: target-non-stop=on: \
  non-stop=off: resolution_method=schedule-multiple: inferior 1 (timeout)
...

Fix this by using -no-prompt-anchor.

Tested on x86_64-linux.

PR testsuite/31166
Bug: https://sourceware.org/bugzilla/show_bug.cgi?id=31166
---
 gdb/testsuite/gdb.base/vfork-follow-parent.exp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/gdb/testsuite/gdb.base/vfork-follow-parent.exp b/gdb/testsuite/gdb.base/vfork-follow-parent.exp
index 89c38001dac..ee6f2835d8e 100644
--- a/gdb/testsuite/gdb.base/vfork-follow-parent.exp
+++ b/gdb/testsuite/gdb.base/vfork-follow-parent.exp
@@ -64,7 +64,7 @@ proc do_test { resolution_method } {
 	gdb_test "set schedule-multiple on"
 	gdb_test "continue" "$::inferior_exited_re normally.*" \
 	    "continue to end of inferior 2"
-	gdb_test "inferior 1" ".*Switching to inferior 1.*"
+	gdb_test -no-prompt-anchor "inferior 1" ".*Switching to inferior 1.*"
 	gdb_test "print unblock_parent = 1" " = 1"
     } else {
 	error "invalid resolution method: $resolution_method"

base-commit: 19185006cfe0901da907da4f09fbc197aba976a2
-- 
2.35.3

