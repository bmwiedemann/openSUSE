From: Hari Bathini <hbathini@linux.ibm.com>
Date: Mon, 20 Aug 2018 16:12:51 +0200
Subject: fadump: fix network bring up issue during default boot
References: bsc#1101730
Upstream: merged
Git-commit: 0ad221c8a81ee812b3afec6a9c873bd5bd1c228b

If ssh is used for dump target, kdump module enforces bringing up the
network (rd.neednet=1). If bringing up the network fails, it drops to
emergency shell. This sounds ok for a kdump kernel as it's only job is
to save dump to the specified dump target and reboot. But in case of
FADump, kdump module, which adds dump capturing support in the initrd,
is added to the regular initrd. If network bring up fails, production
kernel also falls to emergency shell while booting. Considering this
requirement has no relevance in booting a production kerne, that could
have been avoided. Fix it here by enforcing rd.neednet=1 only while
booting a capture kernel.

Signed-off-by: Hari Bathini <hbathini@linux.ibm.com>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 init/kdump-boot.sh |    8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

--- a/init/kdump-boot.sh
+++ b/init/kdump-boot.sh
@@ -3,8 +3,9 @@
 # ex: ts=8 sw=4 sts=4 et filetype=sh
 
 # An Initrd with dump capturing support can boot a production kernel
-# as well (FADump). In such scenario, apply optimizations only while
-# booting the capture kernel - this is a kernel that
+# as well (FADump). In such scenario, apply optimizations and enforce
+# bringing up dump target only while booting the capture kernel - this
+# is a kernel that
 #   a) has a /proc/vmcore file waiting to be saved.
 #   b) reboots after saving the dump.
 
@@ -13,4 +14,7 @@ if [ -s /proc/vmcore ]; then
     # Replace the multipath.conf file with the one optimized for kdump.
     rm -f /etc/multipath.conf
     mv /etc/multipath.conf.kdump /etc/multipath.conf
+else
+    # avoid enforing network bring up while booting production kernel.
+    rm -f /etc/cmdline.d/99kdump-net.conf
 fi
