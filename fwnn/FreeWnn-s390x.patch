--- BUILD/FreeWnn-1.1.1-a021/Wnn/jserver/error.c
+++ BUILD/FreeWnn-1.1.1-a021/Wnn/jserver/error.c
@@ -82,7 +82,7 @@
 void
 error_exit1 (x, y1, y2, y3, y4, y5)
      char *x;
-     int y1, y2, y3, y4, y5;
+     long y1, y2, y3, y4, y5;
 {
   /* Need care with buffer size */
   char buf[512];
@@ -270,7 +270,7 @@
 void
 out (x, y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12)
      char *x;
-     int y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12;
+     long y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12;
 {
   if (!noisy)
     return;
--- BUILD/FreeWnn-1.1.1-a021/Xwnmo/xwnmo/do_socket.c
+++ BUILD/FreeWnn-1.1.1-a021/Xwnmo/xwnmo/do_socket.c
@@ -90,9 +90,9 @@
 XIMCmblk *cblk;
 XIMCmblk *cur_cblk = NULL;
 
-int *all_socks;
-int *ready_socks;
-static int *dummy1_socks, *dummy2_socks;
+fd_set *all_socks;
+fd_set *ready_socks;
+static fd_set *dummy1_socks, *dummy2_socks;
 static int sel_width;
 
 static int nofile;
@@ -114,9 +114,14 @@
 static int rc = 0;
 
 #define BINTSIZE        (sizeof(int)*8)
+/*
 #define sock_set(array,pos)     (array[pos/BINTSIZE] |= (1<<(pos%BINTSIZE)))
 #define sock_clr(array,pos)     (array[pos/BINTSIZE] &= ~(1<<(pos%BINTSIZE)))
-#define sock_tst(array,pos)     (array[pos/BINTSIZE] & (1<<(pos%BINTSIZE)))
+#define sock_tst(array,pos)     (array[pos/BINTSIZE] &  (1<<(pos%BINTSIZE)))
+*/
+#define sock_set(array,pos)     FD_SET(pos,array)
+#define sock_clr(array,pos)     FD_CLR(pos,array)
+#define sock_tst(array,pos)     FD_ISSET(pos,array)
 
 extern int read (), write ();
 
