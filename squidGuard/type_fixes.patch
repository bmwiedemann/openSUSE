Index: squidGuard-1.4/src/sg.y.in
===================================================================
--- squidGuard-1.4.orig/src/sg.y.in
+++ squidGuard-1.4/src/sg.y.in
@@ -20,8 +20,11 @@
 %{
 #include "sg.h"
 extern int globalDebug;
+struct UserInfo *setuserinfo();
+void sgSourceUserQuery(char *query, ...);
 
 #ifdef HAVE_LIBLDAP
+#define LDAP_DEPRECATED 1
 #include "lber.h"
 #include "ldap.h"
 #endif
@@ -667,17 +670,12 @@ void sgSourceUserList(file)
 
 /* MySQLsupport */
 #ifdef HAVE_MYSQL
-#if __STDC__
-void sgSourceUserQuery(char *query)
-#else
-void sgSourceUserQuery(query)
-     char *query;
-#endif
+void sgSourceUserQuery(char *query, ...)
 {
   char *dbhome = NULL, *f;
   MYSQL *conn;
   MYSQL_RES *res;
-  MYSQL_ROW *row;
+  MYSQL_ROW row;
   char line[MAX_BUF];
   char *my_query, *my_user, *my_pass, *my_db;
   char *str=";";
@@ -2021,11 +2019,12 @@ void sgTimeSetAcl()
   for(rew = Rewrite; rew != NULL; rew = rew->next){
     if(rew->time != NULL){
       rew->active = rew->time->active;
-      if(rew->within == OUTSIDE)
+      if(rew->within == OUTSIDE) {
 	if(rew->active)
 	  rew->active = 0;
 	else
 	  rew->active = 1;
+	  }
     }
   }
 }
Index: squidGuard-1.4/src/sg.h.in
===================================================================
--- squidGuard-1.4.orig/src/sg.h.in
+++ squidGuard-1.4/src/sg.h.in
@@ -394,7 +394,7 @@ void   sgFreePatternBuffer __P((struct s
 int    sgRegExpMatch __P((struct sgRegExp *, char *));
 char   *sgRegExpSubst __P((struct sgRegExp *, char *));
 
-void   sgDbInit __P(());
+void   sgDbInit __P((struct sgDb *Db, char *file));
 void   sgDbLoadTextFile __P((struct sgDb *, char *, int));
 void   sgDbUpdate __P((struct sgDb *, char *, char *, size_t));
 
Index: squidGuard-1.4/src/sgDiv.c.in
===================================================================
--- squidGuard-1.4.orig/src/sgDiv.c.in
+++ squidGuard-1.4/src/sgDiv.c.in
@@ -18,6 +18,7 @@
 
 #include "sg.h"
 #include "sgEx.h"
+#include "HTEscape.h"
 
 /* #define METEST 8; */
 
@@ -692,7 +693,7 @@ char *sgParseRedirect(redirect, req, acl
        struct UserInfo *userquota;
 	if(defined(s->userDb, req->ident, (char **) &userquota) == 1){
 	  char qbuf[150];
-	  sprintf(qbuf, "%d-%d-%d-%d-%d-%d", s->userquota.renew, s->userquota.seconds, userquota->status, userquota->time, userquota->last, userquota->consumed);
+	  sprintf(qbuf, "%d-%ld-%d-%ld-%ld-%d", s->userquota.renew, (long)s->userquota.seconds, userquota->status, (long)userquota->time, (long)userquota->last, userquota->consumed);
 	  strcat(buf, qbuf);
 	} else {
 	  strcat(buf, "noquota");
