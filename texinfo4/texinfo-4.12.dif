Index: .pkgextract
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ .pkgextract	2015-07-18 15:47:54.671239339 +0200
@@ -0,0 +1,2 @@
+patch -p0 -b --suffix=.zlib < ../texinfo-4.11-zlib.patch
+patch -p0 -b --suffix=.echo < ../texinfo-4.8-echo.patch
Index: info/filesys.h
===================================================================
--- info/filesys.h.orig	2007-07-01 23:20:29.000000000 +0200
+++ info/filesys.h	2015-07-18 15:47:54.671239339 +0200
@@ -78,7 +78,7 @@ extern int is_dir_name (char *filename);
 
 /* The default value of INFOPATH. */
 #if !defined (DEFAULT_INFOPATH)
-#  define DEFAULT_INFOPATH ".:/usr/local/info:/usr/info:/usr/local/lib/info:/usr/lib/info:/usr/local/gnu/info:/usr/local/gnu/lib/info:/usr/gnu/info:/usr/gnu/lib/info:/opt/gnu/info:/usr/share/info:/usr/share/lib/info:/usr/local/share/info:/usr/local/share/lib/info:/usr/gnu/lib/emacs/info:/usr/local/gnu/lib/emacs/info:/usr/local/lib/emacs/info:/usr/local/emacs/info"
+#  define DEFAULT_INFOPATH "/usr/local/share/info:/usr/local/info:/usr/local/lib/info:/usr/share/info:/usr/info:/usr/lib/info:/opt/gnu/info:/usr/share/xemacs/info:."
 #endif /* !DEFAULT_INFOPATH */
 
 #if !defined (S_ISREG) && defined (S_IFREG)
Index: install-info/install-info.c
===================================================================
--- install-info/install-info.c.orig	2015-07-18 15:47:40.709966095 +0200
+++ install-info/install-info.c	2015-07-18 15:47:54.672239359 +0200
@@ -2253,7 +2253,7 @@ There is NO WARRANTY, to the extent perm
 
   /* Now Read the Info file and parse it into lines, unless we're 
      removing exactly.  */
-  if (!remove_exactly)
+  if (!delete_flag)
     {
       if (debug_flag)
         printf ("debug: reading input file %s\n", infile);
Index: util/texi2dvi
===================================================================
--- util/texi2dvi.orig	2015-07-18 15:47:49.423136626 +0200
+++ util/texi2dvi	2015-07-18 15:47:54.677239456 +0200
@@ -220,25 +220,7 @@ error ()
 # Return true if PROG is somewhere in PATH, else false.
 findprog ()
 {
-  local saveIFS="$IFS"
-  IFS=$path_sep  # break path components at the path separator
-  for dir in $PATH; do
-    IFS=$saveIFS
-    # The basic test for an executable is `test -f $f && test -x $f'.
-    # (`test -x' is not enough, because it can also be true for directories.)
-    # We have to try this both for $1 and $1.exe.
-    #
-    # Note: On Cygwin and DJGPP, `test -x' also looks for .exe.  On Cygwin,
-    # also `test -f' has this enhancement, bot not on DJGPP.  (Both are
-    # design decisions, so there is little chance to make them consistent.)
-    # Thusly, it seems to be difficult to make use of these enhancements.
-    #
-    if  { test -f "$dir/$1"	&& test -x "$dir/$1"; } ||
-	{ test -f "$dir/$1.exe"	&& test -x "$dir/$1.exe"; }; then
-      return 0
-    fi
-  done
-  return 1
+  type -p $1 > /dev/null 2>&1
 }
 
 # report LINE1 LINE2...
@@ -883,6 +865,11 @@ run_tex ()
     *) error 1 "$0: $out_lang not supported for $in_lang";;
   esac
 
+  if ! type -p $tex > /dev/null 2>&1 ; then
+    echo "${0##*/}: requires $tex, please install texlive and texlive-latex" 1>&2
+    exit 1
+  fi
+
   # Beware of aux files in subdirectories that require the
   # subdirectory to exist.
   case $in_lang:$tidy in
@@ -995,6 +982,11 @@ run_bibtex ()
     texinfo) return;;
   esac
 
+  if ! type -p $bibtex > /dev/null 2>&1 ; then
+     echo "${0##*/}: requires $bibtex, please install texlive and texlive-latex" 1>&2
+     exit 1
+  fi
+
   # "Citation undefined" is for LaTeX, "Undefined citation" for btxmac.tex.
   # The no .aux && \bibdata test is also for btxmac, in case it was the
   # first run of a bibtex-using document.  Otherwise, it's possible that
@@ -1749,7 +1741,7 @@ do
 	     sed 's,/,!,g'`
   esac
   # Remove it at exit if clean mode.
-  trap "cleanup" 0 1 2 15
+  trap "cleanup" EXIT SIGHUP SIGINT SIGQUIT SIGBUS SIGPIPE SIGTERM
 
   ensure_dir "$build_dir" "$t2ddir"
 
