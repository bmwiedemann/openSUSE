In a distribution you don't want to compile for the CPU you happen
to build the code on. So add an optionb to disable automatic tuning.

Index: configure.ac
===================================================================
--- configure.ac.orig
+++ configure.ac
@@ -451,27 +451,34 @@ dnl done with the helper script cpuinfo.
 dnl correctly is complex and lengthy (about as long as the entire configure.ac
 dnl file).
 
-if test x$have_x86cpu = xtrue -o x$have_ppccpu = xtrue; then
-  if test x$host_alias != x; then
-    dnl This is to allow cross compiling
-    AC_MSG_CHECKING(sub-architecture settings)
-    if test x$have_x86cpu = xtrue; then
-       host_mod_cpu=`echo $host_cpu | tr _ -`
-       ARCHFLAGS="-march=$host_mod_cpu -mcpu=$host_mod_cpu"
-    fi
-  else
-    if test ! -r $srcdir/cpuinfo.sh; then
-       AC_MSG_ERROR([cpuinfo.sh script not found - do a cvs update])
-    fi
-    AC_MSG_CHECKING(sub-architecture settings)
-    chmod +x $srcdir/cpuinfo.sh
-    if test x$have_x86cpu = xtrue; then
-       ARCHFLAGS=`$srcdir/cpuinfo.sh x86`
-    elif test x$have_ppccpu = xtrue; then
-       ARCHFLAGS=`$srcdir/cpuinfo.sh ppc`
+AC_ARG_ENABLE([arch_tuning],
+	       AS_HELP_STRING([--disable-arch_tuning],
+	       		      [Disable automatic tuning of code generation for specific processors])
+	       [arch_tuning=$enableval], [arch_tuning=$enableval])
+
+if test x$arch_tuning != xno; then
+  if test x$have_x86cpu = xtrue -o x$have_ppccpu = xtrue; then
+    if test x$host_alias != x; then
+      dnl This is to allow cross compiling
+      AC_MSG_CHECKING(sub-architecture settings)
+      if test x$have_x86cpu = xtrue; then
+         host_mod_cpu=`echo $host_cpu | tr _ -`
+         ARCHFLAGS="-march=$host_mod_cpu -mcpu=$host_mod_cpu"
+      fi
+    else
+      if test ! -r $srcdir/cpuinfo.sh; then
+         AC_MSG_ERROR([cpuinfo.sh script not found - do a cvs update])
+      fi
+      AC_MSG_CHECKING(sub-architecture settings)
+      chmod +x $srcdir/cpuinfo.sh
+      if test x$have_x86cpu = xtrue; then
+         ARCHFLAGS=`$srcdir/cpuinfo.sh x86`
+      elif test x$have_ppccpu = xtrue; then
+         ARCHFLAGS=`$srcdir/cpuinfo.sh ppc`
+      fi
     fi
+    AC_MSG_RESULT($ARCHFLAGS)
   fi
-  AC_MSG_RESULT($ARCHFLAGS)
 fi
 
 dnl **********************************************************************
