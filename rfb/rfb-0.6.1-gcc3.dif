--- include/rfbClient.h
+++ include/rfbClient.h	2002/04/11 23:03:59
@@ -257,7 +257,7 @@
 
  protected:
   Rectangle rectangle;
-  friend ClientStateDecodingRaw;
+  friend class ClientStateDecodingRaw;
 };
 
 
--- include/rfbServer.h
+++ include/rfbServer.h	2002/04/11 23:03:59
@@ -325,7 +325,7 @@
   
   bool framebufferUpdateRequested;
   bool incrementalFramebufferUpdateRequested;
-  list< Hint > hintList;
+  std::list< Hint > hintList;
 
   void RequestRegionRefresh( unsigned int x,
                              unsigned int y,
--- lib/Framebuffer.cc
+++ lib/Framebuffer.cc	2002/04/11 23:03:59
@@ -161,7 +161,7 @@
                             unsigned int r,
                             unsigned int g,
                             unsigned int b,
-                            unsigned int m = 255 )
+                            unsigned int m )
 {
     FramebufferPixel(this,x,y).setColor(r,g,b,m);
 }
@@ -172,7 +172,7 @@
                             unsigned int &r,
                             unsigned int &g,
                             unsigned int &b,
-                            unsigned int m = 255 )
+                            unsigned int m )
 {
     FramebufferPixel(this,x,y).getColor(r,g,b,m);
 }
@@ -181,7 +181,7 @@
 void FramebufferPixel::setColor( unsigned int r,
                                  unsigned int g,
                                  unsigned int b,
-                                 unsigned int m = 255 )
+                                 unsigned int m )
 {
     unsigned int r_max =   fb->pixelFormat.red_max;
     unsigned int g_max =   fb->pixelFormat.green_max;
@@ -246,7 +246,7 @@
 void FramebufferPixel::getColor( unsigned int &r,
                                  unsigned int &g,
                                  unsigned int &b,
-                                 unsigned int m = 255 )
+                                 unsigned int m )
 {
     unsigned int r_max =   fb->pixelFormat.red_max;
     unsigned int g_max =   fb->pixelFormat.green_max;
@@ -288,10 +288,10 @@
 
 
 int saveFramebufferAsPPM( int file, Framebuffer *fb,
-                          int x0 = 0,
-                          int y0 = 0,
-                          int width = -1,
-                          int height = -1 ) {
+                          int x0 ,
+                          int y0 ,
+                          int width ,
+                          int height ) {
     if ( width < 0 ) width = fb->width;
     if ( height < 0 ) height = fb->height;
     char tmp[255] = "";
--- lib/rfb.cc
+++ lib/rfb.cc	2002/04/11 23:03:59
@@ -28,7 +28,7 @@
 /* CARD16                                         */
 /**************************************************/
 
-CARD16::CARD16( unsigned int _value = 0 )
+CARD16::CARD16( unsigned int _value )
 {
   value[1] = _value;
   _value >>= 8;
@@ -55,7 +55,7 @@
 /* CARD32                                         */
 /**************************************************/
 
-CARD32::CARD32( unsigned int _value = 0 )
+CARD32::CARD32( unsigned int _value )
 {
   value[3] = _value;
   _value >>= 8;
--- lib/rfbServer.cc
+++ lib/rfbServer.cc	2002/04/11 23:03:59
@@ -23,7 +23,8 @@
 #include <stdlib.h>
 #include <string.h>
 #include "d3des.h"
-
+#include <iostream>
+#include <list>
 
 namespace rfb {
 
@@ -104,8 +105,8 @@
 void Server::RequestBlockRefresh( unsigned int block, int x, int y,
                                   int width, int height )
 {
-//  cout << "old x: " << x << endl;
-//  cout << "old width: " << width << endl;
+//  std::cout << "old x: " << x << std::endl;
+//  std::cout << "old width: " << width << std::endl;
   if ( x < 0 ) { width += x; x = 0; }
   if ( y < 0 ) { height += y; y = 0; }
   if ( x + width > blockWidth ) width = blockWidth - x;
@@ -126,8 +127,8 @@
   blocks[block].y = y;
   blocks[block].width = width;
   blocks[block].height = height;
-//  cout << "x: " << x << endl;
-//  cout << "width: " << width << endl;
+//  std::cout << "x: " << x << std::endl;
+//  std::cout << "width: " << width << std::endl;
 }
 
 
@@ -138,13 +139,13 @@
   blocksX = (framebuffer->width + blockWidth - 1) / blockWidth;
   blocksY = (framebuffer->height + blockHeight - 1) / blockHeight;
   blocks = (Block*) malloc( sizeof(Block) * blocksX * blocksY );
-  cerr << "framebuffer->width: " << framebuffer->width << endl;
-  cerr << "framebuffer->height: " << framebuffer->height << endl;
-  cerr << "blockWidth: " << blockWidth << endl;
-  cerr << "blockHeight: " << blockHeight << endl;
-  cerr << "blocksX: " << blocksX << endl;
-  cerr << "blocksY: " << blocksY << endl;
-  cerr << "blocks: " << blocks << endl;
+  std::cerr << "framebuffer->width: " << framebuffer->width << std::endl;
+  std::cerr << "framebuffer->height: " << framebuffer->height << std::endl;
+  std::cerr << "blockWidth: " << blockWidth << std::endl;
+  std::cerr << "blockHeight: " << blockHeight << std::endl;
+  std::cerr << "blocksX: " << blocksX << std::endl;
+  std::cerr << "blocksY: " << blocksY << std::endl;
+  std::cerr << "blocks: " << blocks << std::endl;
 //  ResetBlocks();
 }
 
@@ -230,8 +231,8 @@
 
 void Server::handleClientInitialisation( ClientInitialisation &clientInitialisation )
 {
-  cout << "-> handleClientInitialisation" << endl;
-  cout << "shared flag: " << (int) clientInitialisation.shared_flag << endl;
+  std::cout << "-> handleClientInitialisation" << std::endl;
+  std::cout << "shared flag: " << (int) clientInitialisation.shared_flag << std::endl;
   
   ServerInitialisation serverInitialisation;
   getServerInitialisation( serverInitialisation );
@@ -349,7 +350,7 @@
   message.framebufferUpdate.number_of_rectangles = hintList.size();
   connection->send( (unsigned char*) &message, 4 );
 
-  list< Hint >::iterator i = hintList.begin();
+  std::list< Hint >::iterator i = hintList.begin();
   while ( i != hintList.end() ) {
       sendEncodedRectangle( *i );
       i++;
@@ -670,7 +671,7 @@
   }
   if ( size == 4 ) {
     if ( offset == size ) {
-      cerr << "encoding: " << (int) encodings.encoding[encodings.count] << endl;
+      std::cerr << "encoding: " << (int) encodings.encoding[encodings.count] << std::endl;
       encodings.count = encodings.count + 1;
       data = (unsigned char*) &(encodings.encoding[encodings.count]);
       offset = 0;
--- rfbcat/rfbcat.cc
+++ rfbcat/rfbcat.cc	2002/04/13 01:03:16
@@ -45,7 +45,7 @@
 
 #ifdef DEBUG
 #include <iostream>
-#define debug(msg) (cerr << msg << endl)
+#define debug(msg) (std::cerr << msg << std::endl)
 #else // DEBUG
 #define debug(msg)
 #endif // DEBUG
@@ -180,7 +180,7 @@
 
 void rfbcat::handleAuthenticationFailed()
 {
-  cerr << "WRONG PASSWORD" << endl;
+  std::cerr << "WRONG PASSWORD" << std::endl;
   exit( 1 );
 }
 
@@ -200,31 +200,31 @@
 
 void printVersion_xrfbviewer()
 {
-  cerr << endl << "heXoNet RFB viewer for the X Window System"
-       << endl << "Version " << VERSION_xrfbviewer
-       << endl;
+  std::cerr << std::endl << "heXoNet RFB viewer for the X Window System"
+       << std::endl << "Version " << VERSION_xrfbviewer
+       << std::endl;
 }
 
 void printHelp_xrfbviewer()
 {
   printVersion_xrfbviewer();
-  cerr 
-    << endl
-    << "usage: rfbcat [options] [host]:<display>" << endl
-    << "       rfbcat [options] -fbs <file>" << endl
-    << "       rfbcat [options] -rfb <file>" << endl
-    << endl
-    << "       -o <file>   default is -o - for STDOUT" << endl
-    << "       -x <program>" << endl
-    << "       -f <format> format ::= PPM | RFB | FBS"  << endl
-    << "                   default is PPM"  << endl
-    << "       -d <delay> delay in ms"  << endl
-    << endl
-    << "<options>" << endl
-    << "       -shared" << endl
-    << "       -viewonly" << endl
-    << "       -bgr233 | -spf" << endl
-    << "       -scale <num>/<denum>" << endl;
+  std::cerr 
+    << std::endl
+    << "usage: rfbcat [options] [host]:<display>" << std::endl
+    << "       rfbcat [options] -fbs <file>" << std::endl
+    << "       rfbcat [options] -rfb <file>" << std::endl
+    << std::endl
+    << "       -o <file>   default is -o - for STDOUT" << std::endl
+    << "       -x <program>" << std::endl
+    << "       -f <format> format ::= PPM | RFB | FBS"  << std::endl
+    << "                   default is PPM"  << std::endl
+    << "       -d <delay> delay in ms"  << std::endl
+    << std::endl
+    << "<options>" << std::endl
+    << "       -shared" << std::endl
+    << "       -viewonly" << std::endl
+    << "       -bgr233 | -spf" << std::endl
+    << "       -scale <num>/<denum>" << std::endl;
   ;
   exit( 1 );
 }
--- x0rfbserver/XUpdateScanner.cc
+++ x0rfbserver/XUpdateScanner.cc	2002/04/13 00:55:20
@@ -17,6 +17,7 @@
  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307,
  *  USA.
  */
+#include <iostream>
 
 #include <sys/ipc.h>
 #include <sys/shm.h>
@@ -148,7 +149,7 @@
 }
 
 
-void XUpdateScanner::checkTile( int x, int y, list< Hint > &hintList )
+void XUpdateScanner::checkTile( int x, int y, std::list< Hint > &hintList )
 {
   unsigned int maxWidth = fb->width - x;
   unsigned int maxHeight = fb->height - y;
@@ -314,7 +315,7 @@
 }
 
 
-void XUpdateScanner::searchUpdates( list< Hint > &hintList )
+void XUpdateScanner::searchUpdates( std::list< Hint > &hintList )
 {
   restoreRegion();
 
@@ -382,7 +383,7 @@
     }
   }
 
-  cerr << "TILES: " << tilec << endl;
+  std::cerr << "TILES: " << tilec << std::endl;
   
   if ( properties.showMousePointer ) {
 
--- x0rfbserver/XUpdateScanner.h
+++ x0rfbserver/XUpdateScanner.h	2002/04/13 00:53:33
@@ -40,8 +40,8 @@
 
     ~XUpdateScanner();
 
-    void checkTile( int x, int y, list< Hint > &hintList );
-    void searchUpdates( list< Hint > &hintList );
+    void checkTile( int x, int y, std::list< Hint > &hintList );
+    void searchUpdates( std::list< Hint > &hintList );
     
     void paintMousePointer(int x, int y);
     void saveRegion(int x, int y, int w, int h);
--- x0rfbserver/x0rfbserver.cc
+++ x0rfbserver/x0rfbserver.cc	2002/04/13 01:00:09
@@ -62,6 +62,7 @@
 
 #include <map>
 #include <list>
+#include <iostream>
 
 Properties properties;
 
@@ -112,8 +113,8 @@
     
     OXServiceApplet *serviceApplet;
     
-    map< OFileHandler*, BaseServer* > handleServerMap;
-    list< BaseServer* > serverList;
+    std::map< OFileHandler*, BaseServer* > handleServerMap;
+    std::list< BaseServer* > serverList;
 };
 
 
@@ -343,11 +344,11 @@
 
 void OXServerMainFrame::CreateFramebuffer()
 {
-  cerr << "CreateFramebuffer() start" << endl;
-  cerr << "dpy" << dpy << endl;
-  cerr << "id " << root->GetId() << endl;
-  cerr << "w  " << clientX->GetDisplayWidth() << endl;
-  cerr << "h  " << clientX->GetDisplayHeight() << endl;
+  std::cerr << "CreateFramebuffer() start" << std::endl;
+  std::cerr << "dpy" << dpy << std::endl;
+  std::cerr << "id " << root->GetId() << std::endl;
+  std::cerr << "w  " << clientX->GetDisplayWidth() << std::endl;
+  std::cerr << "h  " << clientX->GetDisplayHeight() << std::endl;
   framebufferImage = XGetImage( dpy,
                                 root->GetId(),
 				0,
@@ -356,7 +357,7 @@
 				clientX->GetDisplayHeight(),
 				AllPlanes,
 				ZPixmap );
-  cerr << "FI " << framebufferImage << endl;
+  std::cerr << "FI " << framebufferImage << std::endl;
   framebuffer.width        = framebufferImage->width;
   framebuffer.height       = framebufferImage->height;
   framebuffer.bytesPerLine = framebufferImage->bytes_per_line;
@@ -393,9 +394,9 @@
   }
   scanner = new XUpdateScanner( dpy, root->GetId(), &framebuffer );
 
-  cerr << "fpf " << int(framebuffer.pixelFormat.bits_per_pixel) << endl;
+  std::cerr << "fpf " << int(framebuffer.pixelFormat.bits_per_pixel) << std::endl;
 
-  cerr << "CreateFramebuffer() end" << endl;
+  std::cerr << "CreateFramebuffer() end" << std::endl;
 }
 
 
@@ -410,7 +411,7 @@
 int OXServerMainFrame::HandleTimer( OTimer *_timer )
 {
   if ( _timer == timer ) {
-//      cerr << "TIMER" << endl;
+//      std::cerr << "TIMER" << std::endl;
       delete ( timer );
       timer = NULL;
       idle = new OIdleHandler( this );
@@ -430,7 +431,7 @@
   if ( properties.scanDelay ) {
       if (!timer) timer = new OTimer( this, properties.scanDelay );
   }
-  list< BaseServer* >::iterator s;
+  std::list< BaseServer* >::iterator s;
   int wantsUpdate = 0;
   for ( s = serverList.begin(); s != serverList.end(); s++ )
       if ( (*s)->framebufferUpdateRequested 
@@ -451,17 +452,17 @@
 
 void OXServerMainFrame::ScanUpdates()
 {
-    list< BaseServer* >::iterator s;
-//    cerr << "StartUpdates() start" << endl;
-    list< Hint > hintList;
+    std::list< BaseServer* >::iterator s;
+//    std::cerr << "StartUpdates() start" << std::endl;
+    std::list< Hint > hintList;
 
     scanner->searchUpdates( hintList );
 
-    list< Hint >::iterator i;
+    std::list< Hint >::iterator i;
     for ( i = hintList.begin(); i != hintList.end(); i++ )
         for ( s = serverList.begin(); s != serverList.end(); s++ )
             (*s)->handleHint( *i );
-//    cerr << "StartUpdates() end" << endl;
+//    std::cerr << "StartUpdates() end" << std::endl;
 };
 
 
@@ -532,7 +533,7 @@
 //      return true;
     }
     if ( bytesWritten == 0 ) {
-//        cerr << "XCM_WRITABLE : 0" << endl;
+//        std::cerr << "XCM_WRITABLE : 0" << std::endl;
         _fh->SetEventMask(XCM_READABLE);
     }
   }
@@ -612,7 +613,7 @@
             event.same_screen = True;
             event.state = modifier;
             event.keycode = kc;
-            cerr << "XSendEvent (XKeyEvent)" << endl;
+            std::cerr << "XSendEvent (XKeyEvent)" << std::endl;
             if ( kc != NoSymbol )
                 XSendEvent( dpy,
                             dest,
@@ -699,7 +700,7 @@
             }
         }
         else {
-            cerr << "XWarpPointer" << endl;
+            std::cerr << "XWarpPointer" << std::endl;
             XWarpPointer( dpy,
                           None,
                           root->GetId(),
@@ -747,10 +748,10 @@
 #ifdef USE_ZLIB_WARREN
 void BaseServer::handleEnableZlib( CARD8 level )
 {
-  cerr << "EnableZlib: level " << (int) level << endl;
+  std::cerr << "EnableZlib: level " << (int) level << std::endl;
   Server::handleEnableZlib( level );
   bufferedConnection->enableSenderDeflation( level );
-  cerr << "Zlib enabled" << endl;
+  std::cerr << "Zlib enabled" << std::endl;
 }
 #endif // USE_ZLIB_WARREN
 
@@ -799,7 +800,7 @@
   , key_Hyper_L( 0 )
   , key_Hyper_R( 0 )
 {
-  cerr << "BaseServer() start" << endl;
+  std::cerr << "BaseServer() start" << std::endl;
   memcpy( password, "\0\0\0\0\0\0\0\0", 8 );
   strncpy( password, properties.password, 8 );
 #ifdef USE_ZLIB_WARREN
@@ -816,20 +817,20 @@
   fh = new OSocketFileHandler( mainFrame, fd, XCM_READABLE | XCM_WRITABLE );
   mainFrame->RegisterServer( this );
   connection->send( (unsigned char*) RFB_PROTOCOL_VERSION, 12 );
-  cerr << "BaseServer() end" << endl;
+  std::cerr << "BaseServer() end" << std::endl;
 }
 
 
 BaseServer::~BaseServer()
 {
-  cerr << "~BaseServer() start" << endl;
+  std::cerr << "~BaseServer() start" << std::endl;
   DeleteBlocks();
   mainFrame->UnregisterServer( this );
   delete bufferedConnection;
   delete fh;
   shutdown( fd, 2 );
   close( fd );
-  cerr << "~BaseServer() end" << endl;
+  std::cerr << "~BaseServer() end" << std::endl;
 }
 
 
@@ -841,25 +842,25 @@
 
 void printVersion_x0rfbserver()
 {
-  cerr << "x0rfbserver:" << endl
-       << endl << "heXoNet RFB server exporting a running X session"
-       << endl << "Version " << VERSION_x0rfbserver
-       << endl;
+  std::cerr << "x0rfbserver:" << std::endl
+       << std::endl << "heXoNet RFB server exporting a running X session"
+       << std::endl << "Version " << VERSION_x0rfbserver
+       << std::endl;
 }
 
 void printHelp_x0rfbserver()
 {
   printVersion_x0rfbserver();
-  cerr 
-    << endl 
-    << "usage: x0rfbserver [<options>]" << endl
-    << "       x0rfbserver -stdio" << endl
-    << "       x0rfbserver -about" << endl
-    << "       x0rfbserver -help" << endl
-    << endl
-    << "<options>" << endl
-    << "       -shared" << endl
-    << "       -viewonly" << endl;
+  std::cerr 
+    << std::endl 
+    << "usage: x0rfbserver [<options>]" << std::endl
+    << "       x0rfbserver -stdio" << std::endl
+    << "       x0rfbserver -about" << std::endl
+    << "       x0rfbserver -help" << std::endl
+    << std::endl
+    << "<options>" << std::endl
+    << "       -shared" << std::endl
+    << "       -viewonly" << std::endl;
   ;
   exit( 1 );
 }
--- x0rfbserver/xclass++.h
+++ x0rfbserver/xclass++.h	2002/04/11 23:03:59
@@ -4,7 +4,7 @@
 #include <map>
 
 
-#define LAYOUT_HINTS map< OXFrame*, OLayoutHints* > layoutHints
+#define LAYOUT_HINTS std::map< OXFrame*, OLayoutHints* > layoutHints
 
 #define DELETE_LAYOUT_HINTS                                       \
     while ( layoutHints.begin() != layoutHints.end() ) {          \
--- xrfbviewer/OXViewerApplet.cc
+++ xrfbviewer/OXViewerApplet.cc	2002/04/11 23:03:59
@@ -195,7 +195,7 @@
 int OXViewerApplet::HandleFileEvent( OFileHandler *_fh, unsigned int _mask )
 {
   if ( _fh == fhSocket ) {
-    cout << "Connection request" << endl;
+    std::cout << "Connection request" << std::endl;
     struct sockaddr addr;
     size_t laddr = sizeof(addr);
     int fdClient = accept(_fh->GetFd(), &addr, &laddr);
@@ -253,21 +253,21 @@
           switch(wmsg->id) {
 
             case 100: {
-              cout << "new connection" << endl;
+              std::cout << "new connection" << std::endl;
               char tmp[1024];
-              cout << xrfbviewerCommand << endl;
+              std::cout << xrfbviewerCommand << std::endl;
               sprintf( tmp, "exec %s &", xrfbviewerCommand );
               system( tmp );
               return true;
             }
 
             case 101:
-              cout << "connection options" << endl;
+              std::cout << "connection options" << std::endl;
               getConnectionOptions( connectionInfo, _client->GetRoot(), this );              
               return true;
 
             case 102: {
-              cout << "about" << endl;
+              std::cout << "about" << std::endl;
               OXAbout *about = new OXAbout( _client->GetRoot(),
 	                                    this,
 					    "About: heXoNet xrfbviewer V" VERSION_xrfbviewer,
@@ -280,7 +280,7 @@
             }
 
             case 103:
-              cout << "close" << endl;
+              std::cout << "close" << std::endl;
               delete this;
               return true;
           }
--- xrfbviewer/OXViewerApplet.h
+++ xrfbviewer/OXViewerApplet.h	2002/04/11 23:04:19
@@ -51,7 +51,7 @@
   private:
     char *xrfbviewerCommand;
   
-    map< OXFrame*, OLayoutHints* > layoutHints;
+    std::map< OXFrame*, OLayoutHints* > layoutHints;
 
     OXPopupMenu *popupMenu;
     rfb::ConnectionInfo connectionInfo;
--- xrfbviewer/xclass++.h
+++ xrfbviewer/xclass++.h	2002/04/11 23:03:59
@@ -4,7 +4,7 @@
 #include <map>
 
 
-#define LAYOUT_HINTS map< OXFrame*, OLayoutHints* > layoutHints
+#define LAYOUT_HINTS std::map< OXFrame*, OLayoutHints* > layoutHints
 
 #define DELETE_LAYOUT_HINTS                                       \
     while ( layoutHints.begin() != layoutHints.end() ) {          \
--- xrfbviewer/xplayfbs.cc
+++ xrfbviewer/xplayfbs.cc	2002/04/13 01:01:34
@@ -312,24 +312,24 @@
 
 void printVersion_xplayfbs()
 {
-  cerr << endl << "heXoNet FBS player"
-       << endl << "Version " << VERSION_xplayfbs
-       << endl;
+  std::cerr << std::endl << "heXoNet FBS player"
+       << std::endl << "Version " << VERSION_xplayfbs
+       << std::endl;
 }
 
 
 void printHelp_xplayfbs()
 {
   printVersion_xplayfbs();
-  cerr 
-    << endl 
-    << "usage: xplayfbs [<options>] [file]" << endl
-    << "       xplayfbs [<options>] -stdout [file]" << endl
-    << "       xplayfbs [<options>] -connect [<host>][:<display>] [file]" << endl
-    << "       xplayfbs -about" << endl
-    << endl
-    << "<options>" << endl
-    << "       " << endl
+  std::cerr 
+    << std::endl 
+    << "usage: xplayfbs [<options>] [file]" << std::endl
+    << "       xplayfbs [<options>] -stdout [file]" << std::endl
+    << "       xplayfbs [<options>] -connect [<host>][:<display>] [file]" << std::endl
+    << "       xplayfbs -about" << std::endl
+    << std::endl
+    << "<options>" << std::endl
+    << "       " << std::endl
   ;
   exit( 1 );
 }
--- xrfbviewer/xrfbviewer.cc
+++ xrfbviewer/xrfbviewer.cc	2002/04/13 00:50:57
@@ -84,7 +84,7 @@
 
 #ifdef DEBUG
 #include <iostream>
-#define debug(msg) (cerr << msg << endl)
+#define debug(msg) (std::cerr << msg << std::endl)
 #else // DEBUG
 #define debug(msg)
 #endif // DEBUG
@@ -284,7 +284,7 @@
 
   virtual int send( unsigned char* _data, unsigned int _size )
     {
-//      cerr << "send() " << _size << endl;
+//      std::cerr << "send() " << _size << std::endl;
       if ( !client->fh1 )
         if ( client->fd0 == client->fd1 ) {
 	  delete client->fh0;
@@ -300,7 +300,7 @@
           client->fh1 = new OFileHandler( client->mainFrame,
 	                                  client->fd1,
 		                          XCM_WRITABLE | XCM_EXCEPTION );
-//      cerr << "return send()" << endl;
+//      std::cerr << "return send()" << std::endl;
       return connection->send( _data, _size );
     }
 
@@ -526,18 +526,18 @@
   BufferedConnection *connection = client->connectionLayer.buffered;
   int fd = _fh->GetFd();
   
-//  cerr << "HandleFileEvent() " << fd << endl;
+//  std::cerr << "HandleFileEvent() " << fd << std::endl;
 
   if ( (mask & XCM_EXCEPTION) ) {
-//    cerr << "XCM_EXCEPTION" << endl;
+//    std::cerr << "XCM_EXCEPTION" << std::endl;
 
-//    cerr << "return HandleFileEvent() XCM_EXCEPTION " << endl;
+//    std::cerr << "return HandleFileEvent() XCM_EXCEPTION " << std::endl;
     delete this;
     return true;
   }
 
   if ( (mask & XCM_READABLE) && (fd == client->fd0) ) {
-//    cerr << "XCM_READABLE" << endl;
+//    std::cerr << "XCM_READABLE" << std::endl;
 
     int readSize = connection->receiverBuffer.size - connection->receiverBuffer.end;
     int bytesRead;
@@ -546,7 +546,7 @@
                       readSize );
     
     if (bytesRead <= 0) {
-//      cerr << "return HandleFileEvent() XCM_READABLE" << endl;
+//      std::cerr << "return HandleFileEvent() XCM_READABLE" << std::endl;
       delete this;
       return true;
     }
@@ -560,7 +560,7 @@
 
 
   if ( (mask & XCM_WRITABLE) && (fd == client->fd1) ) {
-//    cerr << "XCM_WRITEABLE" << endl;
+//    std::cerr << "XCM_WRITEABLE" << std::endl;
 
     int writeSize = connection->senderBuffer.end - connection->senderBuffer.pos;
     if ( writeSize > 0 ) {
@@ -569,7 +569,7 @@
                connection->senderBuffer.data + connection->senderBuffer.pos,
                writeSize );
       if (bytesWritten < 0) {
-//        cerr << "return HandleFileEvent() XCM_WRITABLE" << endl;
+//        std::cerr << "return HandleFileEvent() XCM_WRITABLE" << std::endl;
         delete this;
         return true;
       }
@@ -583,7 +583,7 @@
     }
   }
 
-//  cerr << "return HandleFileEvent() " << endl;
+//  std::cerr << "return HandleFileEvent() " << std::endl;
   return True;
 }
 
@@ -593,7 +593,7 @@
 {
   Client::handleProtocolVersion( protocolVersion );
   protocolVersion[12] = 0;
-//  cerr << "RFB protocol version: " << protocolVersion;
+//  std::cerr << "RFB protocol version: " << protocolVersion;
 }
 
 
@@ -607,7 +607,7 @@
 #ifdef USE_ZLIB_WARREN
 void Client95::handleZlibEnabled()
 {
-//  cerr << "Zlib (WARREN) enabled" << endl;
+//  std::cerr << "Zlib (WARREN) enabled" << std::endl;
   connectionLayer.buffered->enableReceiverInflation();
 }
 #endif
@@ -660,7 +660,7 @@
     connectionInfo->recordFBS = (finfo.filename)? 1 : 0;
     if ( connectionInfo->recordFBS ) {
       sprintf( connectionInfo->filenameFBS, "%s/%s", finfo.ini_dir, finfo.filename );
-//      cerr << "FBS - filename: " << connectionInfo->filenameFBS << endl;
+//      std::cerr << "FBS - filename: " << connectionInfo->filenameFBS << std::endl;
       
       fbsRecorder = new FBStreamRecorder( connectionInfo->filenameFBS );
       fbsRecorder->record( (unsigned char*) "RFB 003.003\n", 12 );
@@ -682,7 +682,7 @@
     connectionInfo->recordRFM = (finfo.filename)? 1 : 0;
     if ( connectionInfo->recordRFM ) {
       sprintf( connectionInfo->filenameRFM, "%s/%s", finfo.ini_dir, finfo.filename );
-//      cerr << "RFM - filename: " << connectionInfo->filenameRFM << endl;
+//      std::cerr << "RFM - filename: " << connectionInfo->filenameRFM << std::endl;
       
       rfmRecorder = new RFMacroRecorder( connectionInfo->filenameRFM );
     }
@@ -702,9 +702,9 @@
 {
   Client::handleServerInitialisation( serverInitialisation );
 
-//  cerr << "Desktop: " << serverInitialisation.name_string << endl;
-//  cerr << "FB-Width: " << serverInitialisation.framebuffer_width << endl;
-//  cerr << "FB-Height: " << serverInitialisation.framebuffer_height << endl;
+//  std::cerr << "Desktop: " << serverInitialisation.name_string << std::endl;
+//  std::cerr << "FB-Width: " << serverInitialisation.framebuffer_width << std::endl;
+//  std::cerr << "FB-Height: " << serverInitialisation.framebuffer_height << std::endl;
 
   
   mainFrame->canvas = new OXCanvas( mainFrame,
@@ -912,26 +912,26 @@
 
 void printVersion_xrfbviewer()
 {
-  cerr << endl << "heXoNet RFB viewer for the X Window System"
-       << endl << "Version " << VERSION_xrfbviewer
-       << endl;
+  std::cerr << std::endl << "heXoNet RFB viewer for the X Window System"
+       << std::endl << "Version " << VERSION_xrfbviewer
+       << std::endl;
 }
 
 void printHelp_xrfbviewer()
 {
   printVersion_xrfbviewer();
-  cerr 
-    << endl 
-    << "usage: xrfbviewer [<options>] [<host>][:<display>]" << endl
-    << "       xrfbviewer [<options>] -listen [<display>]" << endl
-    << "       xrfbviewer [<options>] -stdio" << endl
-    << "       xrfbviewer -about" << endl
-    << endl
-    << "<options>" << endl
-    << "       -shared" << endl
-    << "       -viewonly" << endl
-    << "       -bgr233 | -spf" << endl
-    << "       -scale <num>/<denum>" << endl;
+  std::cerr 
+    << std::endl 
+    << "usage: xrfbviewer [<options>] [<host>][:<display>]" << std::endl
+    << "       xrfbviewer [<options>] -listen [<display>]" << std::endl
+    << "       xrfbviewer [<options>] -stdio" << std::endl
+    << "       xrfbviewer -about" << std::endl
+    << std::endl
+    << "<options>" << std::endl
+    << "       -shared" << std::endl
+    << "       -viewonly" << std::endl
+    << "       -bgr233 | -spf" << std::endl
+    << "       -scale <num>/<denum>" << std::endl;
   ;
   exit( 1 );
 }
