Author: Adam Majer <adam.majer@suse.de>
Date: Wed Jan 18 13:26:11 CET 2017
Upstream: http://bugzilla.abisource.com/show_bug.cgi?id=13839
Summary: Allow compilation with Boost::Asio

Index: plugins/collab/backends/service/xp/AsyncWorker.h
===================================================================
--- plugins/collab/backends/service/xp/AsyncWorker.h.orig
+++ plugins/collab/backends/service/xp/AsyncWorker.h
@@ -19,7 +19,12 @@
 #ifndef __ASYNC_WORKER__
 #define __ASYNC_WORKER__
 
-#include <asio.hpp>
+#if defined(HAVE_BOOST_ASIO_HPP)
+# include <boost/asio.hpp>
+#else
+# include <asio.hpp>
+#endif
+
 #include <boost/bind.hpp>
 #include <boost/function.hpp>
 #include <boost/noncopyable.hpp>
Index: plugins/collab/backends/service/xp/RealmConnection.h
===================================================================
--- plugins/collab/backends/service/xp/RealmConnection.h.orig
+++ plugins/collab/backends/service/xp/RealmConnection.h
@@ -21,7 +21,11 @@
 
 #include <boost/shared_ptr.hpp>
 #include <boost/enable_shared_from_this.hpp>
-#include <asio.hpp>
+#if defined(HAVE_BOOST_ASIO_HPP)
+# include <boost/asio.hpp>
+#else
+# include <asio.hpp>
+#endif
 #include <vector>
 #include <string>
 #include "ut_types.h"
Index: plugins/collab/backends/service/xp/RealmProtocol.h
===================================================================
--- plugins/collab/backends/service/xp/RealmProtocol.h.orig
+++ plugins/collab/backends/service/xp/RealmProtocol.h
@@ -9,7 +9,11 @@
 #include <stdint.h>
 #endif
 #include <boost/shared_ptr.hpp>
-#include <asio.hpp>
+#if defined(HAVE_BOOST_ASIO_HPP)
+# include <boost/asio.hpp>
+#else
+# include <asio.hpp>
+#endif
 
 namespace realm {
 
Index: plugins/collab/backends/service/xp/tls_tunnel.h
===================================================================
--- plugins/collab/backends/service/xp/tls_tunnel.h.orig
+++ plugins/collab/backends/service/xp/tls_tunnel.h
@@ -33,7 +33,11 @@
 #include <boost/function.hpp>
 #include <boost/lexical_cast.hpp>
 #include <boost/enable_shared_from_this.hpp>
-#include <asio.hpp>
+#if defined(HAVE_BOOST_ASIO_HPP)
+# include <boost/asio.hpp>
+#else
+# include <asio.hpp>
+#endif
 #include <string>
 #include <vector>
 #ifdef _MSC_VER
Index: plugins/collab/backends/tcp/xp/IOServerHandler.h
===================================================================
--- plugins/collab/backends/tcp/xp/IOServerHandler.h.orig
+++ plugins/collab/backends/tcp/xp/IOServerHandler.h
@@ -23,7 +23,11 @@
 
 #include <boost/bind.hpp>
 #include <boost/function.hpp>
-#include <asio.hpp>
+#if defined(HAVE_BOOST_ASIO_HPP)
+# include <boost/asio.hpp>
+#else
+# include <asio.hpp>
+#endif
 
 #include <sync/xp/Synchronizer.h>
 #include "Session.h"
Index: plugins/collab/plugin.m4
===================================================================
--- plugins/collab/plugin.m4.orig
+++ plugins/collab/plugin.m4
@@ -59,18 +59,20 @@ AC_ARG_ENABLE([collab-backend-tcp],
 	enable_collab_backend_tcp=$enableval
 	if test "$enable_collab_backend_tcp" != "no"; then
 		AC_LANG_PUSH(C++)
-		AC_CHECK_HEADERS([asio.hpp], [], 
+		AC_CHECK_HEADERS([asio.hpp], [],
+			[AC_CHECK_HEADERS([boost/asio.hpp], [AC_DEFINE([HAVE_BOOST_ASIO_HPP])],
 		[
 			AC_MSG_ERROR([collab plugin: asio is required for the collab plugin TCP backend, see http://think-async.com/])
-		])
+		])])
 		AC_LANG_POP
 	fi
 ], [
 	AC_LANG_PUSH(C++)
 	AC_CHECK_HEADERS([asio.hpp], 
+			[AC_CHECK_HEADERS([boost/asio.hpp], [AC_DEFINE([HAVE_BOOST_ASIO_HPP])],
 	[
 		enable_collab_backend_tcp="yes"
-	])
+	])])
 	AC_LANG_POP
 ])
 AC_MSG_CHECKING([for collab tcp backend])
@@ -99,17 +101,19 @@ AC_ARG_ENABLE([collab-backend-service],
 	if test "$enable_collab_backend_service" != "no"; then
 		AC_LANG_PUSH(C++)
 		AC_CHECK_HEADERS([asio.hpp], [], 
+			[AC_CHECK_HEADERS([boost/asio.hpp], [AC_DEFINE([HAVE_BOOST_ASIO_HPP])],
 		[
 			AC_MSG_ERROR([collab plugin: asio is required for the the abicollab.net backend, see http://think-async.com/])
-		])
+		])])
 		AC_LANG_POP
 	fi
 ], [
 	AC_LANG_PUSH(C++)
 	AC_CHECK_HEADERS([asio.hpp],
+			[AC_CHECK_HEADERS([boost/asio.hpp], [AC_DEFINE([HAVE_BOOST_ASIO_HPP])],
 	[
 		enable_collab_backend_service="yes"
-	])
+	])])
 	AC_LANG_POP
 ])
 test "$enable_collab_backend_service" = "yes" && collab_pkgs="$collab_pkgs $collab_service_req"
