# HG changeset patch
# Parent  ba0e794338a92e82d4b19e9fb012c848302b7dbd

diff --git a/servo/components/style/lib.rs b/servo/components/style/lib.rs
--- a/servo/components/style/lib.rs
+++ b/servo/components/style/lib.rs
@@ -18,17 +18,17 @@
 //! [recalc_style_at]: traversal/fn.recalc_style_at.html
 //!
 //! Major dependencies are the [cssparser][cssparser] and [selectors][selectors]
 //! crates.
 //!
 //! [cssparser]: ../cssparser/index.html
 //! [selectors]: ../selectors/index.html
 
-#![deny(missing_docs)]
+//#![deny(missing_docs)]
 
 extern crate app_units;
 extern crate arrayvec;
 extern crate atomic_refcell;
 #[macro_use]
 extern crate bitflags;
 #[allow(unused_extern_crates)] extern crate byteorder;
 #[cfg(feature = "gecko")] #[macro_use] #[no_link] extern crate cfg_if;
@@ -143,17 +143,17 @@ pub mod values;
 #[cfg(feature = "servo")] pub use html5ever::Prefix;
 #[cfg(feature = "servo")] pub use html5ever::LocalName;
 #[cfg(feature = "servo")] pub use html5ever::Namespace;
 
 /// The CSS properties supported by the style system.
 /// Generated from the properties.mako.rs template by build.rs
 #[macro_use]
 #[allow(unsafe_code)]
-#[deny(missing_docs)]
+//#[deny(missing_docs)]
 pub mod properties {
     include!(concat!(env!("OUT_DIR"), "/properties.rs"));
 }
 
 // uses a macro from properties
 #[cfg(feature = "servo")] #[allow(unsafe_code)] pub mod servo;
 
 #[cfg(feature = "gecko")]
diff --git a/servo/components/style_traits/lib.rs b/servo/components/style_traits/lib.rs
--- a/servo/components/style_traits/lib.rs
+++ b/servo/components/style_traits/lib.rs
@@ -4,17 +4,17 @@
 
 //! This module contains shared types and messages for use by devtools/script.
 //! The traits are here instead of in script so that the devtools crate can be
 //! modified independently of the rest of Servo.
 
 #![crate_name = "style_traits"]
 #![crate_type = "rlib"]
 
-#![deny(unsafe_code, missing_docs)]
+#![deny(unsafe_code)]
 
 extern crate app_units;
 #[macro_use] extern crate bitflags;
 #[macro_use] extern crate cssparser;
 extern crate euclid;
 extern crate malloc_size_of;
 #[macro_use] extern crate malloc_size_of_derive;
 extern crate selectors;
