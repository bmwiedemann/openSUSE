diff -ruN -x '*~' -x '*.o' -x '*.a' -x '*.so' -x '*.so.[0-9]' -x autom4te.cache -x .deps -x .libs ../orig-pcsx_rearmed-0~20160921.9766e77/libpcsxcore/cdriso.c ./libpcsxcore/cdriso.c
--- ../orig-pcsx_rearmed-0~20160921.9766e77/libpcsxcore/cdriso.c	2016-09-21 01:24:37.000000000 +0200
+++ ./libpcsxcore/cdriso.c	2017-05-31 14:24:00.120846983 +0200
@@ -1093,7 +1093,7 @@
 	return ret;
 }
 
-static int uncompress2(void *out, unsigned long *out_size, void *in, unsigned long in_size)
+static int uncompress2_static(void *out, unsigned long *out_size, void *in, unsigned long in_size)
 {
 	static z_stream z;
 	int ret = 0;
@@ -1173,7 +1173,7 @@
 	if (is_compressed) {
 		cdbuffer_size_expect = sizeof(compr_img->buff_raw[0]) << compr_img->block_shift;
 		cdbuffer_size = cdbuffer_size_expect;
-		ret = uncompress2(compr_img->buff_raw[0], &cdbuffer_size, compr_img->buff_compressed, size);
+		ret = uncompress2_static(compr_img->buff_raw[0], &cdbuffer_size, compr_img->buff_compressed, size);
 		if (ret != 0) {
 			SysPrintf("uncompress failed with %d for block %d, sector %d\n",
 					ret, block, sector);
diff -ruN -x '*~' -x '*.o' -x '*.a' -x '*.so' -x '*.so.[0-9]' -x autom4te.cache -x .deps -x .libs ../orig-pcsx_rearmed-0~20160921.9766e77/plugins/cdrcimg/cdrcimg.c ./plugins/cdrcimg/cdrcimg.c
--- ../orig-pcsx_rearmed-0~20160921.9766e77/plugins/cdrcimg/cdrcimg.c	2016-09-21 01:24:37.000000000 +0200
+++ ./plugins/cdrcimg/cdrcimg.c	2017-05-31 15:19:18.584107439 +0200
@@ -100,7 +100,7 @@
 	return 0;
 }
 
-int uncompress2(void *out, unsigned long *out_size, void *in, unsigned long in_size)
+static int uncompress2_static(void *out, unsigned long *out_size, void *in, unsigned long in_size)
 {
 	static z_stream z;
 	int ret = 0;
@@ -201,7 +201,7 @@
 		ret = uncompress(cdbuffer->raw[0], &cdbuffer_size, cdbuffer->compressed, size);
 		break;
 	case CDRC_ZLIB2:
-		ret = uncompress2(cdbuffer->raw[0], &cdbuffer_size, cdbuffer->compressed, size);
+		ret = uncompress2_static(cdbuffer->raw[0], &cdbuffer_size, cdbuffer->compressed, size);
 		break;
 	case CDRC_BZ:
 		ret = pBZ2_bzBuffToBuffDecompress((char *)cdbuffer->raw, (unsigned int *)&cdbuffer_size,
