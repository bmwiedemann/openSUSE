---
 CMakeLists.txt                        |    4 ++--
 runtime/lua/vim/uri.lua               |    2 +-
 src/nvim/ex_cmds.lua                  |    2 +-
 src/nvim/generators/gen_ex_cmds.lua   |    2 +-
 test/unit/charset/vim_str2nr_spec.lua |    2 +-
 test/unit/eval/typval_spec.lua        |    2 +-
 test/unit/os/fs_spec.lua              |    2 +-
 7 files changed, 8 insertions(+), 8 deletions(-)

--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -413,7 +413,7 @@ endif()
 option(PREFER_LUA "Prefer Lua over LuaJIT in the nvim executable." OFF)
 
 if(PREFER_LUA)
-  find_package(Lua 5.1 REQUIRED)
+  find_package(Lua 5.1 EXACT REQUIRED)
   set(LUA_PREFERRED_INCLUDE_DIRS ${LUA_INCLUDE_DIR})
   set(LUA_PREFERRED_LIBRARIES ${LUA_LIBRARIES})
   # Passive (not REQUIRED): if LUAJIT_FOUND is not set, nvim-test is skipped.
@@ -517,7 +517,7 @@ endforeach()
 
 # Find Lua interpreter
 include(LuaHelpers)
-set(LUA_DEPENDENCIES lpeg mpack bit)
+set(LUA_DEPENDENCIES lpeg mpack bit32)
 if(NOT LUA_PRG)
   foreach(CURRENT_LUA_PRG luajit lua5.1 lua5.2 lua)
     unset(_CHECK_LUA_PRG CACHE)
--- a/runtime/lua/vim/uri.lua
+++ b/runtime/lua/vim/uri.lua
@@ -33,7 +33,7 @@ do
   }
   local sbyte, tohex = string.byte
   if jit then
-    tohex = require'bit'.tohex
+    tohex = require'bit32'.tohex
   else
     tohex = function(b) return string.format("%02x", b) end
   end
--- a/src/nvim/ex_cmds.lua
+++ b/src/nvim/ex_cmds.lua
@@ -1,4 +1,4 @@
-local bit = require 'bit'
+local bit = require 'bit32'
 
 local module = {}
 
--- a/src/nvim/generators/gen_ex_cmds.lua
+++ b/src/nvim/generators/gen_ex_cmds.lua
@@ -22,7 +22,7 @@ local defsfname = autodir .. '/ex_cmds_d
 local enumfile = io.open(enumfname, 'w')
 local defsfile = io.open(defsfname, 'w')
 
-local bit = require 'bit'
+local bit = require 'bit32'
 local ex_cmds = require('ex_cmds')
 local defs = ex_cmds.cmds
 local flags = ex_cmds.flags
--- a/test/unit/charset/vim_str2nr_spec.lua
+++ b/test/unit/charset/vim_str2nr_spec.lua
@@ -1,5 +1,5 @@
 local helpers = require("test.unit.helpers")(after_each)
-local bit = require('bit')
+local bit = require('bit32')
 
 local itp = helpers.gen_itp(it)
 
--- a/test/unit/eval/typval_spec.lua
+++ b/test/unit/eval/typval_spec.lua
@@ -1,4 +1,4 @@
-local bit = require('bit')
+local bit = require('bit32')
 local helpers = require('test.unit.helpers')(after_each)
 local eval_helpers = require('test.unit.eval.helpers')
 
--- a/test/unit/os/fs_spec.lua
+++ b/test/unit/os/fs_spec.lua
@@ -1,5 +1,5 @@
 local lfs = require('lfs')
-local bit = require('bit')
+local bit = require('bit32')
 
 local helpers = require('test.unit.helpers')(after_each)
 local itp = helpers.gen_itp(it)
