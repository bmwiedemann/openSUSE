--- pipenv-2018.11.26.1543215385.742ae1b9-orig/tests/integration/test_cli.py	2018-11-26 13:56:25.000000000 +0700
+++ pipenv-2018.11.26.1543215385.742ae1b9/tests/integration/test_cli.py	2019-03-25 08:48:46.398971974 +0700
@@ -66,40 +66,42 @@
 @pytest.mark.cli
 def test_pipenv_graph(PipenvInstance, pypi):
     with PipenvInstance(pypi=pypi) as p:
-        c = p.pipenv('install requests')
+        c = p.pipenv('install tablib')
         assert c.ok
         graph = p.pipenv("graph")
         assert graph.ok
-        assert "requests" in graph.out
+        assert "tablib" in graph.out
         graph_json = p.pipenv("graph --json")
         assert graph_json.ok
-        assert "requests" in graph_json.out
+        assert "tablib" in graph_json.out
         graph_json_tree = p.pipenv("graph --json-tree")
         assert graph_json_tree.ok
-        assert "requests" in graph_json_tree.out
+        assert "tablib" in graph_json_tree.out
 
 
 @pytest.mark.cli
 def test_pipenv_graph_reverse(PipenvInstance, pypi):
     with PipenvInstance(pypi=pypi) as p:
-        c = p.pipenv('install requests==2.18.4')
+        c = p.pipenv('install tablib==0.12.1')
         assert c.ok
         c = p.pipenv('graph --reverse')
         assert c.ok
         output = c.out
 
         requests_dependency = [
-            ('certifi', 'certifi>=2017.4.17'),
-            ('chardet', 'chardet(>=3.0.2,<3.1.0|<3.1.0,>=3.0.2)'),
-            ('idna', 'idna(>=2.5,<2.7|<2.7,>=2.5)'),
-            ('urllib3', 'urllib3(>=1.21.1,<1.23|<1.23,>=1.21.1)')
+            ('odfpy', 'odfpy'),
+            ('unicodecsv', 'unicodecsv'),
+            ('xlrd', 'xlrd'),
+            ('xlwt', 'xlwt'),
+            ('pyyaml', 'pyyaml'),
         ]
 
+        assert 'openpyxl' in output
         for dep_name, dep_constraint in requests_dependency:
             dep_match = re.search(r'^{}==[\d.]+$'.format(dep_name), output, flags=re.MULTILINE)
-            dep_requests_match = re.search(r'^  - requests==2.18.4 \[requires: {}\]$'.format(dep_constraint), output, flags=re.MULTILINE)
-            assert dep_match is not None
-            assert dep_requests_match is not None
+            assert dep_match is not None, '{} not found in {}'.format(dep_name, output)
+            dep_requests_match = re.search(r'  - tablib==0.12.1 \[requires: {}\]$'.format(dep_constraint), output, flags=re.MULTILINE)
+            assert dep_requests_match is not None, 'constraint {} not found in {}'.format(dep_constraint, output)
             assert dep_requests_match.start() > dep_match.start()
 
         c = p.pipenv('graph --reverse --json')
