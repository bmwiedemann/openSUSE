From 66129b1155188b4c2b1d3b34641a7118fd99eb51 Mon Sep 17 00:00:00 2001
From: Michal Srb <msrb@redhat.com>
Date: Thu, 27 Mar 2014 10:59:08 +0100
Subject: [PATCH] Port to objectweb-asm 5.0.1

---
 .../src/main/java/org/parboiled/transform/ParserClassNode.java         | 2 ++
 parboiled-java/src/main/java/org/parboiled/transform/RuleMethod.java   | 3 ++-
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/parboiled-java/src/main/java/org/parboiled/transform/ParserClassNode.java b/parboiled-java/src/main/java/org/parboiled/transform/ParserClassNode.java
index 6534f24..3da751b 100644
--- a/parboiled-java/src/main/java/org/parboiled/transform/ParserClassNode.java
+++ b/parboiled-java/src/main/java/org/parboiled/transform/ParserClassNode.java
@@ -26,6 +26,7 @@ import static org.parboiled.common.Preconditions.*;
 import org.objectweb.asm.Type;
 import org.objectweb.asm.tree.ClassNode;
 import org.objectweb.asm.tree.MethodNode;
+import org.objectweb.asm.Opcodes;
 
 import java.util.*;
 
@@ -39,6 +40,7 @@ class ParserClassNode extends ClassNode {
     private Class<?> extendedClass;
 
     public ParserClassNode(Class<?> parentClass) {
+        super(Opcodes.ASM4);
         this.parentClass = checkArgNotNull(parentClass, "parentClass");
         parentType = Type.getType(parentClass);
     }
diff --git a/parboiled-java/src/main/java/org/parboiled/transform/RuleMethod.java b/parboiled-java/src/main/java/org/parboiled/transform/RuleMethod.java
index c60ef8a..8c023ca 100644
--- a/parboiled-java/src/main/java/org/parboiled/transform/RuleMethod.java
+++ b/parboiled-java/src/main/java/org/parboiled/transform/RuleMethod.java
@@ -31,6 +31,7 @@ import org.objectweb.asm.tree.LabelNode;
 import org.objectweb.asm.tree.LocalVariableNode;
 import org.objectweb.asm.tree.MethodNode;
 import org.objectweb.asm.tree.analysis.BasicValue;
+import org.objectweb.asm.Opcodes;
 import org.parboiled.BaseParser;
 import org.parboiled.common.StringUtils;
 import org.parboiled.support.Var;
@@ -71,7 +72,7 @@ class RuleMethod extends MethodNode {
 
     public RuleMethod(Class<?> ownerClass, int access, String name, String desc, String signature, String[] exceptions,
                       boolean hasExplicitActionOnlyAnno, boolean hasDontLabelAnno, boolean hasSkipActionsInPredicates) {
-        super(access, name, desc, signature, exceptions);
+        super(Opcodes.ASM4, access, name, desc, signature, exceptions);
         this.ownerClass = ownerClass;
         parameterCount = Type.getArgumentTypes(desc).length;
         hasCachedAnnotation = parameterCount == 0;
-- 
1.9.0

