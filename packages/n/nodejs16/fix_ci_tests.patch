Author: Adam Majer <amajer@suse.de>
Date: Dec 20 09:18:49 UTC 2017
Summary: Fix CI unit tests framework for OBS building

Index: node-v16.13.1/test/parallel/test-module-loading-globalpaths.js
===================================================================
--- node-v16.13.1.orig/test/parallel/test-module-loading-globalpaths.js
+++ node-v16.13.1/test/parallel/test-module-loading-globalpaths.js
@@ -11,6 +11,9 @@ const { addLibraryPath } = require('../c
 
 addLibraryPath(process.env);
 
+common.skip('hardcoded global paths');
+return;
+
 if (process.argv[2] === 'child') {
   console.log(require(pkgName).string);
 } else {
Index: node-v16.13.1/test/parallel/test-tls-passphrase.js
===================================================================
--- node-v16.13.1.orig/test/parallel/test-tls-passphrase.js
+++ node-v16.13.1/test/parallel/test-tls-passphrase.js
@@ -224,7 +224,7 @@ server.listen(0, common.mustCall(functio
 })).unref();
 
 const errMessagePassword = common.hasOpenSSL3 ?
-  /Error: error:1400006B:UI routines::processing error/ : /bad decrypt/;
+  /Error: error:1400006B:UI routines::processing error/ : /bad (decrypt|password read)/;
 
 // Missing passphrase
 assert.throws(function() {
@@ -254,7 +254,7 @@ assert.throws(function() {
   });
 }, errMessagePassword);
 
-const errMessageDecrypt = /bad decrypt/;
+const errMessageDecrypt = /bad (decrypt|password read)/;
 
 // Invalid passphrase
 assert.throws(function() {
Index: node-v16.13.1/test/parallel/test-repl-envvars.js
===================================================================
--- node-v16.13.1.orig/test/parallel/test-repl-envvars.js
+++ node-v16.13.1/test/parallel/test-repl-envvars.js
@@ -2,7 +2,9 @@
 
 // Flags: --expose-internals
 
-require('../common');
+const common = require('../common');
+common.skip('Not running test in OBS');
+
 const stream = require('stream');
 const REPL = require('internal/repl');
 const assert = require('assert');
Index: node-v16.13.1/test/common/index.mjs
===================================================================
--- node-v16.13.1.orig/test/common/index.mjs
+++ node-v16.13.1/test/common/index.mjs
@@ -42,6 +42,7 @@ const {
   expectsError,
   skipIfInspectorDisabled,
   skipIf32Bits,
+  skipIfWorker,
   getArrayBufferViews,
   getBufferSources,
   getTTYfd,
@@ -87,6 +88,7 @@ export {
   expectsError,
   skipIfInspectorDisabled,
   skipIf32Bits,
+  skipIfWorker,
   getArrayBufferViews,
   getBufferSources,
   getTTYfd,
Index: node-v16.13.1/Makefile
===================================================================
--- node-v16.13.1.orig/Makefile
+++ node-v16.13.1/Makefile
@@ -508,7 +508,8 @@ test-ci-js: | clear-stalled
 .PHONY: test-ci
 # Related CI jobs: most CI tests, excluding node-test-commit-arm-fanned
 test-ci: LOGLEVEL := info
-test-ci: | clear-stalled bench-addons-build build-addons build-js-native-api-tests build-node-api-tests doc-only
+test-ci: | clear-stalled bench-addons-build build-addons build-js-native-api-tests build-node-api-tests
+	strip $(NODE_EXE)
 	out/Release/cctest --gtest_output=xml:out/junit/cctest.xml
 	$(PYTHON) tools/test.py $(PARALLEL_ARGS) -p tap --logfile test.tap \
 		--mode=$(BUILDTYPE_LOWER) --flaky-tests=$(FLAKY_TESTS) \
@@ -684,7 +685,8 @@ apidocs_json = $(addprefix out/,$(apidoc
 apiassets = $(subst api_assets,api/assets,$(addprefix out/,$(wildcard doc/api_assets/*)))
 
 tools/doc/node_modules: tools/doc/package.json
-	@if [ "$(shell $(node_use_openssl))" != "true" ]; then \
+	echo "Skipping tools/doc/node_modules"
+#	@if [ "$(shell $(node_use_openssl))" != "true" ]; then \
 		echo "Skipping tools/doc/node_modules (no crypto)"; \
 	else \
 		cd tools/doc && $(call available-node,$(run-npm-ci)) \
Index: node-v16.13.1/test/parallel/test-crypto-dh.js
===================================================================
--- node-v16.13.1.orig/test/parallel/test-crypto-dh.js
+++ node-v16.13.1/test/parallel/test-crypto-dh.js
@@ -167,7 +167,7 @@ assert.throws(() => {
   dh3.computeSecret('');
 }, { message: common.hasOpenSSL3 ?
   'error:02800080:Diffie-Hellman routines::invalid secret' :
-  'Supplied key is too small' });
+  /Supplied key is too small|error:05066066:Diffie-Hellman routines:compute_key:invalid public key/ });
 
 // Invalid test: curve argument is undefined
 assert.throws(
Index: node-v16.13.1/test/parallel/test-zlib-dictionary-fail.js
===================================================================
--- node-v16.13.1.orig/test/parallel/test-zlib-dictionary-fail.js
+++ node-v16.13.1/test/parallel/test-zlib-dictionary-fail.js
@@ -53,7 +53,7 @@ const input = Buffer.from([0x78, 0xBB, 0
   stream.on('error', common.mustCall(function(err) {
     // It's not possible to separate invalid dict and invalid data when using
     // the raw format
-    assert.match(err.message, /invalid/);
+    assert.match(err.message, /(invalid|Operation-Ending-Supplemental Code is 0x12)/);
   }));
 
   stream.write(input);
Index: node-v16.13.1/test/parallel/test-zlib-flush-drain-longblock.js
===================================================================
--- node-v16.13.1.orig/test/parallel/test-zlib-flush-drain-longblock.js
+++ node-v16.13.1/test/parallel/test-zlib-flush-drain-longblock.js
@@ -16,7 +16,7 @@ zipper.write('A'.repeat(17000));
 zipper.flush();
 
 let received = 0;
-unzipper.on('data', common.mustCall((d) => {
+unzipper.on('data', common.mustCallAtLeast((d) => {
   received += d.length;
 }, 2));
 
Index: node-v16.13.1/test/parallel/test-zlib-from-string.js
===================================================================
--- node-v16.13.1.orig/test/parallel/test-zlib-from-string.js
+++ node-v16.13.1/test/parallel/test-zlib-from-string.js
@@ -55,7 +55,9 @@ const expectedBase64Gzip = 'H4sIAAAAAAAA
                            'sHnHNzRtagj5AQAA';
 
 zlib.deflate(inputString, common.mustCall((err, buffer) => {
-  assert.strictEqual(buffer.toString('base64'), expectedBase64Deflate);
+  zlib.unzip(buffer, common.mustCall((err, unzipped) => {
+    assert.strictEqual(unzipped.toString(), inputString);
+  }));
 }));
 
 zlib.gzip(inputString, common.mustCall((err, buffer) => {
