From: Egbert Eich <eich@suse.com>
Date: Mon Jul 12 09:58:28 2021 +0200
Subject: Fix type punning in val_NC_check_voff() by using memcpy instead of assignment
Patch-mainline: Not yet
Git-repo: https://github.com/Unidata/netcdf-c
Git-commit: 3e3712ecf4cd9f98d65e00324c2bc8640c1af565
References: 

gcc11 explicitly warns about this strict aliasing violation:
daux.c:903:30: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
   903 |         params[nparams++] = *(unsigned int*)&valf;
       |
       |                              ^~~~~~~~~~~~~~~~~~~~

Signed-off-by: Egbert Eich <eich@suse.com>
Signed-off-by: Egbert Eich <eich@suse.de>
---
 libdispatch/daux.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
diff --git a/libdispatch/daux.c b/libdispatch/daux.c
index aa9eb0d8..5478ee06 100644
--- a/libdispatch/daux.c
+++ b/libdispatch/daux.c
@@ -900,7 +900,8 @@ filterspec_cvt(const char* txt, size_t* nparamsp, unsigned int* params)
         sstat = sscanf(p,"%lf",&vald);
         if(sstat != 1) {stat = NC_EINVAL; goto done;}
         valf = (float)vald;
-        params[nparams++] = *(unsigned int*)&valf;
+	/* avoid type punning */
+	memcpy(&params[nparams++], &valf, sizeof(unsigned int));
         break;
     /* The following are 8-byte values, so we must swap pieces if this
     is a little endian machine */        
