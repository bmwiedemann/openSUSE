--- src/sandbox/linux/BUILD.gn.orig	2025-08-15 17:32:28.529405249 +0200
+++ src/sandbox/linux/BUILD.gn	2025-08-16 19:07:14.523083090 +0200
@@ -205,6 +205,26 @@ test("sandbox_linux_unittests") {
   }
 }
 
+static_library("seccomp_bpf_asm") {
+  sources = [
+    "seccomp-bpf/syscall.cc",
+    "seccomp-bpf/syscall.h",
+  ]
+  defines = [ "SANDBOX_IMPLEMENTATION" ]
+  public_deps = [
+    ":sandbox_services_headers",
+    "//sandbox:sandbox_export",
+  ]
+  deps = [
+    ":sandbox_services",
+    "//base",
+    "//sandbox:sandbox_buildflags",
+  ]
+  if (gcc_lto) {
+    configs -= [ "//build/config/compiler:gcc_lto" ]
+  }
+}
+
 component("seccomp_bpf") {
   sources = [
     "bpf_dsl/bpf_dsl.cc",
@@ -236,8 +256,6 @@ component("seccomp_bpf") {
     "seccomp-bpf/die.h",
     "seccomp-bpf/sandbox_bpf.cc",
     "seccomp-bpf/sandbox_bpf.h",
-    "seccomp-bpf/syscall.cc",
-    "seccomp-bpf/syscall.h",
     "seccomp-bpf/trap.cc",
     "seccomp-bpf/trap.h",
   ]
@@ -249,6 +267,7 @@ component("seccomp_bpf") {
   ]
   deps = [
     ":sandbox_services",
+    ":seccomp_bpf_asm",
     "//base",
     "//sandbox:sandbox_buildflags",
   ]
