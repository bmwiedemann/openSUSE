--- src/electron/shell/browser/plugins/plugin_utils.cc.orig	2025-04-16 14:34:09.220241915 +0200
+++ src/electron/shell/browser/plugins/plugin_utils.cc	2025-04-18 21:59:05.472058588 +0200
@@ -33,6 +33,8 @@ std::string PluginUtils::GetExtensionIdF
 base::flat_map<std::string, std::string>
 PluginUtils::GetMimeTypeToExtensionIdMap(
     content::BrowserContext* browser_context) {
+  base::flat_map<std::string, std::string> mime_type_to_extension_id_map;
+
 #if BUILDFLAG(ENABLE_ELECTRON_EXTENSIONS)
   const auto& allowed_extension_ids = MimeTypesHandler::GetMIMETypeAllowlist();
   if (allowed_extension_ids.empty())
@@ -41,8 +43,6 @@ PluginUtils::GetMimeTypeToExtensionIdMap
   const extensions::ExtensionSet& enabled_extensions =
       extensions::ExtensionRegistry::Get(browser_context)->enabled_extensions();
 
-  base::flat_map<std::string, std::string> mime_type_to_extension_id_map;
-
   // Go through the white-listed extensions and try to use them to intercept
   // the URL request.
   for (const std::string& id : allowed_extension_ids) {
