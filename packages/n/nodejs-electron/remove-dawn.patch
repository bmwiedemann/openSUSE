Remove this unused component which brings a huge dependency on //third_party/dawn/native which we don't want to build

--- src/content/utility/BUILD.gn.orig
+++ src/content/utility/BUILD.gn
@@ -64,9 +64,6 @@ source_set("utility") {
     "//services/data_decoder:lib",
     "//services/data_decoder/public/cpp",
     "//services/network:network_service",
-    "//services/on_device_model:on_device_model_service",
-    "//services/on_device_model/public/cpp",
-    "//services/on_device_model/public/mojom",
     "//services/screen_ai/buildflags",
     "//services/service_manager/public/cpp",
     "//services/service_manager/public/mojom",
--- src/content/utility/services.cc.orig	2024-12-08 18:34:58.184673416 +0100
+++ src/content/utility/services.cc	2024-12-18 12:44:27.424691055 +0100
@@ -32,7 +32,6 @@
 #include "services/audio/service_factory.h"
 #include "services/data_decoder/data_decoder_service.h"
 #include "services/network/network_service.h"
-#include "services/on_device_model/on_device_model_service.h"
 #include "services/tracing/public/mojom/tracing_service.mojom.h"
 #include "services/tracing/tracing_service.h"
 #include "services/video_capture/public/mojom/video_capture_service.mojom.h"
@@ -371,12 +370,6 @@ auto RunVideoEffects(
 }
 #endif
 
-auto RunOnDeviceModel(
-    mojo::PendingReceiver<on_device_model::mojom::OnDeviceModelService>
-        receiver) {
-  return on_device_model::OnDeviceModelService::Create(std::move(receiver));
-}
-
 #if BUILDFLAG(ENABLE_VR) && !BUILDFLAG(IS_ANDROID)
 auto RunXrDeviceService(
     mojo::PendingReceiver<device::mojom::XRDeviceService> receiver) {
@@ -455,9 +448,6 @@ void RegisterMainThreadServices(mojo::Se
   services.Add(RunVideoEffects);
 #endif
 
-  if (optimization_guide::features::CanLaunchOnDeviceModelService()) {
-    services.Add(RunOnDeviceModel);
-  }
 
 #if BUILDFLAG(GOOGLE_CHROME_BRANDING) && BUILDFLAG(IS_CHROMEOS)
   services.Add(RunShapeDetectionService);
--- src/content/utility/utility_main.cc.orig	2024-12-08 18:34:58.184673416 +0100
+++ src/content/utility/utility_main.cc	2024-12-18 12:43:43.314689968 +0100
@@ -32,7 +32,6 @@
 #include "sandbox/policy/mojom/sandbox.mojom.h"
 #include "sandbox/policy/sandbox.h"
 #include "sandbox/policy/sandbox_type.h"
-#include "services/on_device_model/on_device_model_service.h"
 #include "services/screen_ai/buildflags/buildflags.h"
 #include "services/tracing/public/cpp/trace_startup.h"
 
@@ -238,9 +237,6 @@ int UtilityMain(MainFunctionParams param
     }
   }
 
-  if (utility_sub_type == on_device_model::mojom::OnDeviceModelService::Name_) {
-    CHECK(on_device_model::OnDeviceModelService::PreSandboxInit());
-  }
 
 #if BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS)
   // Thread type delegate of the process should be registered before first
@@ -275,11 +271,6 @@ int UtilityMain(MainFunctionParams param
     case sandbox::mojom::Sandbox::kAudio:
       pre_sandbox_hook = base::BindOnce(&audio::AudioPreSandboxHook);
       break;
-    case sandbox::mojom::Sandbox::kOnDeviceModelExecution:
-      on_device_model::OnDeviceModelService::AddSandboxLinuxOptions(
-          sandbox_options);
-      pre_sandbox_hook = base::BindOnce(&GpuPreSandboxHook);
-      break;
     case sandbox::mojom::Sandbox::kSpeechRecognition:
       pre_sandbox_hook =
           base::BindOnce(&speech::SpeechRecognitionPreSandboxHook);
@@ -440,9 +431,6 @@ int UtilityMain(MainFunctionParams param
 
   run_loop.Run();
 
-  if (utility_sub_type == on_device_model::mojom::OnDeviceModelService::Name_) {
-    CHECK(on_device_model::OnDeviceModelService::Shutdown());
-  }
 
 #if defined(LEAK_SANITIZER)
   // Invoke LeakSanitizer before shutting down the utility thread, to avoid
