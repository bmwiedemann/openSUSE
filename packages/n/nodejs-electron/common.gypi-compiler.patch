--- src/third_party/electron_node/common.gypi.orig	2024-12-08 18:45:44.261359453 +0100
+++ src/third_party/electron_node/common.gypi	2024-12-18 11:12:53.414653184 +0100
@@ -487,10 +487,15 @@
         'ldflags': [ '-pthread' ],
       }],
       [ 'OS in "linux freebsd openbsd solaris android aix os400 cloudabi"', {
-        'cflags': [ '-Wall', '-Wextra', '-Wno-unused-parameter', ],
+        # Add some useful flags which need to be specified on all modules anyway.
+        # `-fpic -fno-semantic-interposition` is the best relocation model for code that will live in a dlopened library
+        # If a downstream package needs capital `-fPIC` (unlikely) it can still override this (unlike CFLAGS which are injected at the very end)
+        # `-fvisibility=hidden` is something we're adding to fix downstream overzealous exports.
+        # The electron headers annotate their visibility correctly, but many third-party code does not which leads to bloated builds.
+        'cflags': [ '-Wall', '-Wextra', '-Wno-unused-parameter', '-fpic', '-fno-semantic-interposition', '-fvisibility=hidden' ],
         'cflags_cc': [ '-fno-rtti', '-fno-exceptions', '-std=gnu++20' ],
         'defines': [ '__STDC_FORMAT_MACROS' ],
-        'ldflags': [ '-rdynamic' ],
+        #'ldflags': [ '-rdynamic' ], this is totally bogus â€” we are building a plugin, not a plugin host
         'target_conditions': [
           # The 1990s toolchain on SmartOS can't handle thin archives.
           ['_type=="static_library" and OS=="solaris"', {
@@ -670,29 +675,7 @@
           '-Wl,--export-dynamic',
         ],
       }],
-      # if node is built as an executable,
-      #      the openssl mechanism for keeping itself "dload"-ed to ensure proper
-      #      atexit cleanup does not apply
-      ['node_shared_openssl!="true" and node_shared!="true"', {
-        'defines': [
-          # `OPENSSL_NO_PINSHARED` prevents openssl from dload
-          #      current node executable,
-          #      see https://github.com/nodejs/node/pull/21848
-          #      or https://github.com/nodejs/node/issues/27925
-          'OPENSSL_NO_PINSHARED'
-        ],
-      }],
-      ['node_shared_openssl!="true"', {
-        # `OPENSSL_THREADS` is defined via GYP for openSSL for all architectures.
-        'defines': [
-          'OPENSSL_THREADS',
-        ],
-      }],
-      ['node_shared_openssl!="true" and openssl_no_asm==1', {
-        'defines': [
-          'OPENSSL_NO_ASM',
-        ],
-      }],
+      # Electron does not export its openssl fork (boringssl). Removing these defines which are bogus and can interfere with modules actually using openssl (signal-desktop is known to use it)
       ['OS == "zos"', {
         'defines': [
           '_XOPEN_SOURCE_EXTENDED',
