Do not build single-executable builder, it is useless on distro electron and fails to compile

--- src/third_party/electron_node/src/node_sea.cc.orig	2025-09-10 22:20:53.329753565 +0200
+++ src/third_party/electron_node/src/node_sea.cc	2025-09-11 12:06:23.007498591 +0200
@@ -289,6 +289,7 @@ struct SeaConfig {
   std::unordered_map<std::string, std::string> assets;
 };
 
+#if 0
 std::optional<SeaConfig> ParseSingleExecutableConfig(
     const std::string& config_path) {
   std::string config;
@@ -432,6 +433,7 @@ std::optional<SeaConfig> ParseSingleExec
 
   return result;
 }
+#endif
 
 ExitCode GenerateSnapshotForSEA(const SeaConfig& config,
                                 const std::vector<std::string>& args,
@@ -627,6 +629,7 @@ ExitCode GenerateSingleExecutableBlob(
 
 }  // anonymous namespace
 
+#if 0
 ExitCode BuildSingleExecutableBlob(const std::string& config_path,
                                    const std::vector<std::string>& args,
                                    const std::vector<std::string>& exec_args) {
@@ -640,6 +643,7 @@ ExitCode BuildSingleExecutableBlob(const
 
   return ExitCode::kGenericUserError;
 }
+#endif
 
 void GetAsset(const FunctionCallbackInfo<Value>& args) {
   CHECK_EQ(args.Length(), 1);
--- src/third_party/electron_node/unofficial.gni.orig	2025-09-10 22:31:58.561822889 +0200
+++ src/third_party/electron_node/unofficial.gni	2025-09-11 12:03:47.577452435 +0200
@@ -48,6 +48,7 @@ template("node_gn_build") {
     if (v8_enable_i18n_support) {
       defines += [ "NODE_HAVE_I18N_SUPPORT=1" ]
     }
+    defines += ["DISABLE_SINGLE_EXECUTABLE_APPLICATION=1"]
   }
 
   config("node_external_config") {
