diff '--color=auto' -urp src/build/linux/unbundle.orig/absl_flags.gn src/build/linux/unbundle/absl_flags.gn
--- src/build/linux/unbundle.orig/absl_flags.gn
+++ src/build/linux/unbundle/absl_flags.gn
@@ -5,14 +5,36 @@ pkg_config("system_absl_flags") {
   packages = [ "absl_flags" ]
 }
 
+pkg_config("absl_flags_config") {
+  packages = [ "absl_flags_config" ]
+}
+
 pkg_config("system_absl_flags_parse") {
   packages = [ "absl_flags_parse" ]
 }
 
+pkg_config("system_absl_flags_reflection") {
+  packages = [ "absl_flags_reflection" ]
+}
+
 pkg_config("system_absl_flags_usage") {
   packages = [ "absl_flags_usage" ]
 }
 
+shim_headers("flags_config_shim") {
+  root_path = "."
+  prefix = "absl/flags/"
+  headers = [
+    "config.h",
+    "usage_config.h",
+  ]
+}
+
+source_set("config") {
+  deps = [ ":flags_config_shim" ]
+  public_configs = [ ":absl_flags_config" ]
+}
+
 shim_headers("flag_shim") {
   root_path = "."
   prefix = "absl/flags/"
@@ -38,6 +60,20 @@ source_set("parse") {
   public_configs = [ ":system_absl_flags_parse" ]
 }
 
+shim_headers("flags_reflection_shim") {
+  root_path = "."
+  prefix = "absl/flags/"
+  headers = [
+    "internal/registry.h",
+    "reflection.h",
+  ]
+}
+
+source_set("reflection") {
+  deps = [ ":flags_reflection_shim" ]
+  public_configs = [ ":system_absl_flags_reflection" ]
+}
+
 shim_headers("usage_shim") {
   root_path = "."
   prefix = "absl/flags/"
diff '--color=auto' -urp src/build/linux/unbundle.orig/absl_log.gn src/build/linux/unbundle/absl_log.gn
--- src/build/linux/unbundle.orig/absl_log.gn
+++ src/build/linux/unbundle/absl_log.gn
@@ -13,9 +13,22 @@ pkg_config("system_absl_die_if_null") {
   packages = [ "absl_die_if_null" ]
 }
 
+pkg_config("system_absl_check") {
+  packages = [ "absl_check" ]
+}
+
 pkg_config("system_absl_log") {
   packages = [ "absl_log" ]
 }
+
+pkg_config("system_absl_log_globals") {
+  packages = [ "absl_log_globals" ]
+}
+
+pkg_config("system_absl_log_initialize") {
+  packages = [ "absl_log_initialize" ]
+}
+
 shim_headers("absl_check_shim") {
   root_path = "."
   prefix = "absl/log/"
@@ -49,6 +62,39 @@ source_set("die_if_null") {
   public_configs = [ ":system_absl_die_if_null" ]
 }
 
+shim_headers("check_shim") {
+  root_path = "."
+  prefix = "absl/log/"
+  headers = [ "check.h" ]
+}
+
+source_set("check") {
+  deps = [ ":check_shim" ]
+  public_configs = [ ":system_absl_check" ]
+}
+
+shim_headers("globals_shim") {
+  root_path = "."
+  prefix = "absl/log/"
+  headers = [ "globals.h" ]
+}
+
+source_set("globals") {
+  deps = [ ":globals_shim" ]
+  public_configs = [ ":system_absl_log_globals" ]
+}
+
+shim_headers("initialize_shim") {
+  root_path = "."
+  prefix = "absl/log/"
+  headers = [ "initialize.h" ]
+}
+
+source_set("initialize") {
+  deps = [ ":initialize_shim" ]
+  public_configs = [ ":system_absl_log_initialize" ]
+}
+
 shim_headers("log_shim") {
   root_path = "."
   prefix = "absl/log/"
diff '--color=auto' -urp src/build/linux/unbundle.orig/re2.gn src/build/linux/unbundle/re2.gn
--- src/build/linux/unbundle.orig/re2.gn
+++ src/build/linux/unbundle/re2.gn
@@ -3,6 +3,7 @@
 # found in the LICENSE file.
 
 import("//build/config/c++/c++.gni")
+import("//build/config/linux/pkg_config.gni")
 import("//build/shim_headers.gni")
 
 assert(!use_custom_libcxx,
@@ -10,6 +11,10 @@ assert(!use_custom_libcxx,
            "use_custom_libcxx=true because the library's interface relies on " +
            "libstdc++'s std::string and std::vector.")
 
+pkg_config("re2_config") {
+  packages = [ "re2" ]
+}
+
 shim_headers("re2_shim") {
   root_path = "src"
   headers = [
@@ -23,5 +28,5 @@ shim_headers("re2_shim") {
 
 source_set("re2") {
   deps = [ ":re2_shim" ]
-  libs = [ "re2" ]
+  public_configs = [ ":re2_config" ]
 }
--- src/build/linux/unbundle/absl_container.gn.orig
+++ src/build/linux/unbundle/absl_container.gn
@@ -117,6 +117,8 @@ source_set("flat_hash_map_test") {
 }
 source_set("flat_hash_set_test") {
 }
+source_set("hash_function_defaults_test") {
+}
 source_set("inlined_vector_test") {
 }
 source_set("node_slot_policy_test") {
--- src/build/linux/unbundle/replace_gn_files.py.orig
+++ src/build/linux/unbundle/replace_gn_files.py
@@ -80,6 +80,7 @@ REPLACEMENTS = {
   'vulkan_memory_allocator' : 'third_party/vulkan_memory_allocator/BUILD.gn',
   'woff2': 'third_party/woff2/BUILD.gn',
   'zlib': 'third_party/zlib/BUILD.gn',
+  'zstd': 'third_party/zstd/BUILD.gn',
 }
 
 
--- /dev/null
+++ src/build/linux/unbundle/zstd.gn
@@ -0,0 +1,28 @@
+import("//build/config/linux/pkg_config.gni")
+import("//build/shim_headers.gni")
+
+pkg_config("system_zstd") {
+  packages = [ "libzstd" ]
+}
+
+shim_headers("zstd_shim") {
+  root_path = "src/lib"
+  headers = [
+    "zstd.h",
+    "zstd_errors.h",
+  ]
+}
+
+source_set("compress") {
+  deps = [ ":zstd_shim" ]
+  public_configs = [ ":system_zstd" ]
+}
+source_set("decompress") {
+  deps = [ ":zstd_shim" ]
+  public_configs = [ ":system_zstd" ]
+}
+
+source_set("headers") {
+  deps = [ ":zstd_shim" ]
+  public_configs = [ ":system_zstd" ]
+}
