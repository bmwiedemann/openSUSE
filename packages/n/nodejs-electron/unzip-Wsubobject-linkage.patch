--- src/components/services/unzip/public/cpp/unzip.cc.old	2022-10-12 18:06:29.371412000 +0200
+++ src/components/services/unzip/public/cpp/unzip.cc	2022-10-19 21:52:31.365276500 +0200
@@ -29,11 +29,6 @@
 #include "mojo/public/cpp/bindings/self_owned_receiver.h"
 
 namespace unzip {
-namespace {
-
-std::string Redact(const base::FilePath& path) {
-  return LOG_IS_ON(INFO) ? "'" + path.AsUTF8Unsafe() + "'" : "(redacted)";
-}
 
 class UnzipParams : public base::RefCounted<UnzipParams>,
                     public unzip::mojom::UnzipFilter,
@@ -100,6 +95,12 @@
   UnzipCallback callback_;
 };
 
+namespace {
+
+std::string Redact(const base::FilePath& path) {
+  return LOG_IS_ON(INFO) ? "'" + path.AsUTF8Unsafe() + "'" : "(redacted)";
+}
+
 class DetectEncodingParams : public base::RefCounted<DetectEncodingParams> {
  public:
   DetectEncodingParams(mojo::PendingRemote<mojom::Unzipper> unzipper,
--- src/components/services/unzip/public/cpp/unzip.h.old	2022-10-12 18:06:29.371412000 +0200
+++ src/components/services/unzip/public/cpp/unzip.h	2022-10-19 21:50:20.576045300 +0200
@@ -52,9 +52,7 @@
                       const base::FilePath& zip_file,
                       GetExtractedInfoCallback result_callback);
 
-namespace {
 class UnzipParams;
-}
 
 // Class that wraps the unzip service to manage the lifetime of its
 // mojo conncections to enable cancellation, etc.
