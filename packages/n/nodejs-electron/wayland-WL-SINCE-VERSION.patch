From ce85cd0009fc01aa463db9919c66c5c91eb648ac Mon Sep 17 00:00:00 2001
From: Max Ihlenfeldt <max@igalia.com>
Date: Mon, 21 Nov 2022 19:24:45 +0000
Subject: [PATCH] ozone/wayland: remove obsolete `#ifdef ..._SINCE_VERSION`
 guards

Since dropping support for building with `use_system_libwayland=true`,
we always build with the Wayland headers from //third_party. This means
we can remove the #ifdef guards that ensured support for building with
older Wayland header versions (and running these builds without
crashing).

Fixed: 1385736
Change-Id: I8083f5e849a6b52233e907e865d3d1766e903c3a
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4043143
Reviewed-by: Alexander Dunaev <adunaev@igalia.com>
Commit-Queue: Max Ihlenfeldt <max@igalia.com>
Cr-Commit-Position: refs/heads/main@{#1074142}
---
 .../platform/wayland/host/wayland_output.cc   | 14 ++-----------
 .../platform/wayland/host/wayland_output.h    |  4 ----
 .../platform/wayland/host/wayland_pointer.cc  |  9 ++-------
 .../platform/wayland/host/wayland_pointer.h   |  2 --
 .../platform/wayland/host/wayland_touch.cc    | 12 +----------
 .../platform/wayland/host/wayland_touch.h     |  4 ----
 .../wayland/host/xdg_toplevel_wrapper_impl.cc | 20 ++++++-------------
 .../wayland/host/xdg_toplevel_wrapper_impl.h  |  6 ------
 8 files changed, 11 insertions(+), 60 deletions(-)

diff --git a/ui/ozone/platform/wayland/host/wayland_output.cc b/ui/ozone/platform/wayland/host/wayland_output.cc
index 715a1da7d962b..6f87fde5fddb1 100644
--- a/ui/ozone/platform/wayland/host/wayland_output.cc
+++ b/ui/ozone/platform/wayland/host/wayland_output.cc
@@ -118,14 +118,8 @@ void WaylandOutput::Initialize(Delegate* delegate) {
   DCHECK(!delegate_);
   delegate_ = delegate;
   static constexpr wl_output_listener output_listener = {
-      &OutputHandleGeometry,    &OutputHandleMode,
-      &OutputHandleDone,        &OutputHandleScale,
-#ifdef WL_OUTPUT_NAME_SINCE_VERSION
-      &OutputHandleName,
-#endif
-#ifdef WL_OUTPUT_DESCRIPTION_SINCE_VERSION
-      &OutputHandleDescription,
-#endif
+      &OutputHandleGeometry, &OutputHandleMode, &OutputHandleDone,
+      &OutputHandleScale,    &OutputHandleName, &OutputHandleDescription,
 
   };
   wl_output_add_listener(output_.get(), &output_listener, this);
@@ -266,7 +260,6 @@ void WaylandOutput::OutputHandleScale(void* data,
     wayland_output->scale_factor_ = factor;
 }
 
-#ifdef WL_OUTPUT_NAME_SINCE_VERSION
 // static
 void WaylandOutput::OutputHandleName(void* data,
                                      struct wl_output* wl_output,
@@ -274,9 +267,7 @@ void WaylandOutput::OutputHandleName(void* data,
   if (WaylandOutput* wayland_output = static_cast<WaylandOutput*>(data))
     wayland_output->name_ = name ? std::string(name) : std::string{};
 }
-#endif
 
-#ifdef WL_OUTPUT_DESCRIPTION_SINCE_VERSION
 // static
 void WaylandOutput::OutputHandleDescription(void* data,
                                             struct wl_output* wl_output,
@@ -286,6 +277,5 @@ void WaylandOutput::OutputHandleDescription(void* data,
         description ? std::string(description) : std::string{};
   }
 }
-#endif
 
 }  // namespace ui
diff --git a/ui/ozone/platform/wayland/host/wayland_output.h b/ui/ozone/platform/wayland/host/wayland_output.h
index 8f052fa0e5859..e1b1beec9ddf9 100644
--- a/ui/ozone/platform/wayland/host/wayland_output.h
+++ b/ui/ozone/platform/wayland/host/wayland_output.h
@@ -154,16 +154,12 @@ class WaylandOutput : public wl::GlobalObjectRegistrar<WaylandOutput> {
   static void OutputHandleScale(void* data,
                                 struct wl_output* wl_output,
                                 int32_t factor);
-#ifdef WL_OUTPUT_NAME_SINCE_VERSION
   static void OutputHandleName(void* data,
                                struct wl_output* wl_output,
                                const char* name);
-#endif
-#ifdef WL_OUTPUT_DESCRIPTION_SINCE_VERSION
   static void OutputHandleDescription(void* data,
                                       struct wl_output* wl_output,
                                       const char* description);
-#endif
 
   const Id output_id_ = 0;
   wl::Object<wl_output> output_;
diff --git a/ui/ozone/platform/wayland/host/wayland_pointer.cc b/ui/ozone/platform/wayland/host/wayland_pointer.cc
index c8271487beea3..ba9832cd52324 100644
--- a/ui/ozone/platform/wayland/host/wayland_pointer.cc
+++ b/ui/ozone/platform/wayland/host/wayland_pointer.cc
@@ -37,11 +37,8 @@ WaylandPointer::WaylandPointer(wl_pointer* pointer,
                                Delegate* delegate)
     : obj_(pointer), connection_(connection), delegate_(delegate) {
   static constexpr wl_pointer_listener listener = {
-      &Enter,        &Leave,      &Motion,   &Button,       &Axis,
-      &Frame,        &AxisSource, &AxisStop, &AxisDiscrete,
-#ifdef WL_POINTER_AXIS_VALUE120_SINCE_VERSION
-      &AxisValue120,
-#endif
+      &Enter, &Leave,      &Motion,   &Button,       &Axis,
+      &Frame, &AxisSource, &AxisStop, &AxisDiscrete, &AxisValue120,
   };
 
   wl_pointer_add_listener(obj_.get(), &listener, this);
@@ -225,7 +222,6 @@ void WaylandPointer::AxisDiscrete(void* data,
   NOTIMPLEMENTED_LOG_ONCE();
 }
 
-#ifdef WL_POINTER_AXIS_VALUE120_SINCE_VERSION
 // --- Version 8 ---
 
 // static
@@ -237,7 +233,6 @@ void WaylandPointer::AxisValue120(void* data,
   // events.
   NOTIMPLEMENTED_LOG_ONCE();
 }
-#endif
 
 void WaylandPointer::SetupStylus() {
   auto* stylus_v2 = connection_->stylus_v2();
diff --git a/ui/ozone/platform/wayland/host/wayland_pointer.h b/ui/ozone/platform/wayland/host/wayland_pointer.h
index ec80f29908724..9448d2159662c 100644
--- a/ui/ozone/platform/wayland/host/wayland_pointer.h
+++ b/ui/ozone/platform/wayland/host/wayland_pointer.h
@@ -82,12 +82,10 @@ class WaylandPointer {
                            wl_pointer* obj,
                            uint32_t axis,
                            int32_t discrete);
-#ifdef WL_POINTER_AXIS_VALUE120_SINCE_VERSION
   static void AxisValue120(void* data,
                            wl_pointer* obj,
                            uint32_t axis,
                            int32_t value120);
-#endif
 
   void SetupStylus();
 
diff --git a/ui/ozone/platform/wayland/host/wayland_touch.cc b/ui/ozone/platform/wayland/host/wayland_touch.cc
index b3b3664043925..503ef90695405 100644
--- a/ui/ozone/platform/wayland/host/wayland_touch.cc
+++ b/ui/ozone/platform/wayland/host/wayland_touch.cc
@@ -42,13 +42,7 @@ WaylandTouch::WaylandTouch(wl_touch* touch,
                            Delegate* delegate)
     : obj_(touch), connection_(connection), delegate_(delegate) {
   static constexpr wl_touch_listener listener = {
-      &Down,        &Up, &Motion, &Frame, &Cancel,
-#ifdef WL_TOUCH_SHAPE_SINCE_VERSION
-      &Shape,
-#endif
-#ifdef WL_TOUCH_ORIENTATION_SINCE_VERSION
-      &Orientation,
-#endif
+      &Down, &Up, &Motion, &Frame, &Cancel, &Shape, &Orientation,
   };
 
   wl_touch_add_listener(obj_.get(), &listener, this);
@@ -122,7 +116,6 @@ void WaylandTouch::Motion(void* data,
                                        EventDispatchPolicyForPlatform());
 }
 
-#ifdef WL_TOUCH_SHAPE_SINCE_VERSION
 // static
 void WaylandTouch::Shape(void* data,
                          wl_touch* obj,
@@ -131,9 +124,7 @@ void WaylandTouch::Shape(void* data,
                          wl_fixed_t minor) {
   NOTIMPLEMENTED_LOG_ONCE();
 }
-#endif
 
-#ifdef WL_TOUCH_ORIENTATION_SINCE_VERSION
 // static
 void WaylandTouch::Orientation(void* data,
                                wl_touch* obj,
@@ -141,7 +132,6 @@ void WaylandTouch::Orientation(void* data,
                                wl_fixed_t orientation) {
   NOTIMPLEMENTED_LOG_ONCE();
 }
-#endif
 
 // static
 void WaylandTouch::Cancel(void* data, wl_touch* obj) {
diff --git a/ui/ozone/platform/wayland/host/wayland_touch.h b/ui/ozone/platform/wayland/host/wayland_touch.h
index fda7076a0610e..4b8c4b0a5ccba 100644
--- a/ui/ozone/platform/wayland/host/wayland_touch.h
+++ b/ui/ozone/platform/wayland/host/wayland_touch.h
@@ -59,19 +59,15 @@ class WaylandTouch {
                      int32_t id,
                      wl_fixed_t x,
                      wl_fixed_t y);
-#ifdef WL_TOUCH_SHAPE_SINCE_VERSION
   static void Shape(void* data,
                     wl_touch* obj,
                     int32_t id,
                     wl_fixed_t major,
                     wl_fixed_t minor);
-#endif
-#ifdef WL_TOUCH_ORIENTATION_SINCE_VERSION
   static void Orientation(void* data,
                           wl_touch* obj,
                           int32_t id,
                           wl_fixed_t orientation);
-#endif
   static void Cancel(void* data, wl_touch* obj);
   static void Frame(void* data, wl_touch* obj);
 
diff --git a/ui/ozone/platform/wayland/host/xdg_toplevel_wrapper_impl.cc b/ui/ozone/platform/wayland/host/xdg_toplevel_wrapper_impl.cc
index e604780b93f9c..9116980aa068a 100644
--- a/ui/ozone/platform/wayland/host/xdg_toplevel_wrapper_impl.cc
+++ b/ui/ozone/platform/wayland/host/xdg_toplevel_wrapper_impl.cc
@@ -98,16 +98,12 @@ bool XDGToplevelWrapperImpl::Initialize() {
   }
 
   static constexpr xdg_toplevel_listener xdg_toplevel_listener = {
-    &ConfigureTopLevel,
-    &CloseTopLevel,
-#if defined(XDG_TOPLEVEL_CONFIGURE_BOUNDS_SINCE_VERSION)
-    // Since v4
-    &ConfigureBounds,
-#endif
-#if defined(XDG_TOPLEVEL_WM_CAPABILITIES_SINCE_VERSION)
-    // Since v5
-    &WmCapabilities,
-#endif
+      &ConfigureTopLevel,
+      &CloseTopLevel,
+      // Since v4
+      &ConfigureBounds,
+      // Since v5
+      &WmCapabilities,
   };
 
   if (!xdg_surface_wrapper_)
@@ -324,7 +320,6 @@ void XDGToplevelWrapperImpl::CloseTopLevel(void* data,
   surface->wayland_window_->OnCloseRequest();
 }
 
-#if defined(XDG_TOPLEVEL_CONFIGURE_BOUNDS_SINCE_VERSION)
 // static
 void XDGToplevelWrapperImpl::ConfigureBounds(void* data,
                                              struct xdg_toplevel* xdg_toplevel,
@@ -332,16 +327,13 @@ void XDGToplevelWrapperImpl::ConfigureBounds(void* data,
                                              int32_t height) {
   NOTIMPLEMENTED_LOG_ONCE();
 }
-#endif
 
-#if defined(XDG_TOPLEVEL_WM_CAPABILITIES_SINCE_VERSION)
 // static
 void XDGToplevelWrapperImpl::WmCapabilities(void* data,
                                             struct xdg_toplevel* xdg_toplevel,
                                             struct wl_array* capabilities) {
   NOTIMPLEMENTED_LOG_ONCE();
 }
-#endif
 
 void XDGToplevelWrapperImpl::SetTopLevelDecorationMode(
     DecorationMode requested_mode) {
diff --git a/ui/ozone/platform/wayland/host/xdg_toplevel_wrapper_impl.h b/ui/ozone/platform/wayland/host/xdg_toplevel_wrapper_impl.h
index 03cbeba08a0f9..a9a0bc1cb6bf7 100644
--- a/ui/ozone/platform/wayland/host/xdg_toplevel_wrapper_impl.h
+++ b/ui/ozone/platform/wayland/host/xdg_toplevel_wrapper_impl.h
@@ -69,19 +69,13 @@ class XDGToplevelWrapperImpl : public ShellToplevelWrapper {
                                 int32_t height,
                                 struct wl_array* states);
   static void CloseTopLevel(void* data, struct xdg_toplevel* xdg_toplevel);
-
-#if defined(XDG_TOPLEVEL_CONFIGURE_BOUNDS_SINCE_VERSION)
   static void ConfigureBounds(void* data,
                               struct xdg_toplevel* xdg_toplevel,
                               int32_t width,
                               int32_t height);
-#endif
-
-#if defined(XDG_TOPLEVEL_WM_CAPABILITIES_SINCE_VERSION)
   static void WmCapabilities(void* data,
                              struct xdg_toplevel* xdg_toplevel,
                              struct wl_array* capabilities);
-#endif
 
   // zxdg_decoration_listener
   static void ConfigureDecoration(
