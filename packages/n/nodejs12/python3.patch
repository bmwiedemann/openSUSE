Index: node-v12.19.0/configure
===================================================================
--- node-v12.19.0.orig/configure
+++ node-v12.19.0/configure
@@ -1,28 +1,35 @@
 #!/bin/sh
 
-# Locate python2 interpreter and re-execute the script.  Note that the
-# mix of single and double quotes is intentional, as is the fact that
-# the ] goes on a new line.
+# Locate an acceptable python interpreter and then re-execute the script.
+# Note that the mix of single and double quotes is intentional,
+# as is the fact that the ] goes on a new line.
 _=[ 'exec' '/bin/sh' '-c' '''
-which python2.7 >/dev/null && exec python2.7 "$0" "$@"
-which python2 >/dev/null && exec python2 "$0" "$@"
+test ${FORCE_PYTHON2} && exec python2 "$0" "$@"  # workaround for gclient
+command -v python3.9 >/dev/null && exec python3.9 "$0" "$@"
+command -v python3.8 >/dev/null && exec python3.8 "$0" "$@"
+command -v python3.7 >/dev/null && exec python3.7 "$0" "$@"
+command -v python3.6 >/dev/null && exec python3.6 "$0" "$@"
+command -v python3.5 >/dev/null && exec python3.5 "$0" "$@"
+command -v python3.4 >/dev/null && exec python3.4 "$0" "$@"
+command -v python2.7 >/dev/null && exec python2.7 "$0" "$@"
 exec python "$0" "$@"
 ''' "$0" "$@"
 ]
 del _
 
 import sys
-from distutils.spawn import find_executable as which
-if sys.version_info[:2] != (2, 7):
-  sys.stderr.write('Please use Python 2.7')
+from distutils.spawn import find_executable
 
-  python2 = which('python2') or which('python2.7')
-
-  if python2:
-    sys.stderr.write(':\n\n')
-    sys.stderr.write('  ' + python2 + ' ' + ' '.join(sys.argv))
-
-  sys.stderr.write('\n')
+print('Node.js configure: Found Python {0}.{1}.{2}...'.format(*sys.version_info))
+acceptable_pythons = ((3, 9), (3, 8), (3, 7), (3, 6), (3, 5), (3, 4), (2, 7))
+if sys.version_info[:2] in acceptable_pythons:
+  import configure
+else:
+  python_cmds = ['python{0}.{1}'.format(*vers) for vers in acceptable_pythons]
+  sys.stderr.write('Please use {0}.\n'.format(' or '.join(python_cmds)))
+  for python_cmd in python_cmds:
+      python_cmd_path = find_executable(python_cmd)
+      if python_cmd_path and 'pyenv/shims' not in python_cmd_path:
+        sys.stderr.write('\t{0} {1}\n'.format(python_cmd_path,
+                                              ' '.join(sys.argv[:1])))
   sys.exit(1)
-
-import configure
Index: node-v12.19.0/deps/npm/node_modules/node-gyp/lib/find-python.js
===================================================================
--- node-v12.19.0.orig/deps/npm/node_modules/node-gyp/lib/find-python.js
+++ node-v12.19.0/deps/npm/node_modules/node-gyp/lib/find-python.js
@@ -18,7 +18,7 @@ PythonFinder.prototype = {
   log: logWithPrefix(log, 'find Python'),
   argsExecutable: ['-c', 'import sys; print(sys.executable);'],
   argsVersion: ['-c', 'import sys; print("%s.%s.%s" % sys.version_info[:3]);'],
-  semverRange: '^2.6.0 || >=3.5.0',
+  semverRange: '^2.6.0 || >=3.4.0',
 
   // These can be overridden for testing:
   execFile: cp.execFile,
