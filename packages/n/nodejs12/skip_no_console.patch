Index: node-git.6ffe4ed3b5/test/parallel/test-console-clear.js
===================================================================
--- node-git.6ffe4ed3b5.orig/test/parallel/test-console-clear.js
+++ node-git.6ffe4ed3b5/test/parallel/test-console-clear.js
@@ -18,5 +18,6 @@ function doTest(isTTY, check) {
 }
 
 // Fake TTY
-doTest(true, check);
+if (process.env.TERM !== 'dumb')
+	doTest(true, check);
 doTest(false, '');
Index: node-git.6ffe4ed3b5/test/parallel/test-readline-position.js
===================================================================
--- node-git.6ffe4ed3b5.orig/test/parallel/test-readline-position.js
+++ node-git.6ffe4ed3b5/test/parallel/test-readline-position.js
@@ -1,6 +1,6 @@
 // Flags: --expose-internals
 'use strict';
-require('../common');
+const common = require('../common');
 const { internalBinding } = require('internal/test/binding');
 const { PassThrough } = require('stream');
 const readline = require('readline');
@@ -8,6 +8,12 @@ const assert = require('assert');
 
 const ctrlU = { ctrl: true, name: 'u' };
 
+if (process.env.TERM == 'dumb')
+{
+  common.skip('Skipping test - dumb console');
+  return;
+}
+
 {
   const input = new PassThrough();
   const rl = readline.createInterface({
Index: node-git.6ffe4ed3b5/test/parallel/test-readline-interface.js
===================================================================
--- node-git.6ffe4ed3b5.orig/test/parallel/test-readline-interface.js
+++ node-git.6ffe4ed3b5/test/parallel/test-readline-interface.js
@@ -32,6 +32,12 @@ const {
 const EventEmitter = require('events').EventEmitter;
 const { Writable, Readable } = require('stream');
 
+if (process.env.TERM == 'dumb')
+{
+  common.skip('Skipping test - dumb console');
+  return;
+}
+
 class FakeInput extends EventEmitter {
   resume() {}
   pause() {}
Index: node-git.6ffe4ed3b5/test/parallel/test-readline-undefined-columns.js
===================================================================
--- node-git.6ffe4ed3b5.orig/test/parallel/test-readline-undefined-columns.js
+++ node-git.6ffe4ed3b5/test/parallel/test-readline-undefined-columns.js
@@ -11,6 +11,12 @@ const readline = require('readline');
 const iStream = new PassThrough();
 const oStream = new PassThrough();
 
+if (process.env.TERM == 'dumb')
+{
+  common.skip('Skipping test - dumb console');
+  return;
+}
+
 readline.createInterface({
   terminal: true,
   input: iStream,
Index: node-git.6ffe4ed3b5/test/parallel/test-readline.js
===================================================================
--- node-git.6ffe4ed3b5.orig/test/parallel/test-readline.js
+++ node-git.6ffe4ed3b5/test/parallel/test-readline.js
@@ -4,6 +4,13 @@ const { PassThrough } = require('stream'
 const readline = require('readline');
 const assert = require('assert');
 
+if (process.env.TERM == 'dumb')
+{
+  common.skip('Skipping test - dumb console');
+  return;
+}
+
+
 {
   const input = new PassThrough();
   const rl = readline.createInterface({
Index: node-git.6ffe4ed3b5/test/parallel/test-repl-editor.js
===================================================================
--- node-git.6ffe4ed3b5.orig/test/parallel/test-repl-editor.js
+++ node-git.6ffe4ed3b5/test/parallel/test-repl-editor.js
@@ -1,6 +1,6 @@
 'use strict';
 
-require('../common');
+const common = require('../common');
 const assert = require('assert');
 const repl = require('repl');
 const ArrayStream = require('../common/arraystream');
@@ -11,6 +11,12 @@ const ArrayStream = require('../common/a
 const terminalCode = '\u001b[1G\u001b[0J> \u001b[3G';
 const terminalCodeRegex = new RegExp(terminalCode.replace(/\[/g, '\\['), 'g');
 
+if (process.env.TERM == 'dumb')
+{
+  common.skip('Skipping test - dumb console');
+  return;
+}
+
 function run({ input, output, event, checkTerminalCodes = true }) {
   const stream = new ArrayStream();
   let found = '';
Index: node-git.6ffe4ed3b5/test/parallel/test-repl-history-navigation.js
===================================================================
--- node-git.6ffe4ed3b5.orig/test/parallel/test-repl-history-navigation.js
+++ node-git.6ffe4ed3b5/test/parallel/test-repl-history-navigation.js
@@ -10,6 +10,12 @@ const fs = require('fs');
 const path = require('path');
 const { inspect } = require('util');
 
+if (process.env.TERM == 'dumb')
+{
+  common.skip('Skipping test - dumb console');
+  return;
+}
+
 const tmpdir = require('../common/tmpdir');
 tmpdir.refresh();
 
Index: node-git.6ffe4ed3b5/test/parallel/test-repl-load-multiline.js
===================================================================
--- node-git.6ffe4ed3b5.orig/test/parallel/test-repl-load-multiline.js
+++ node-git.6ffe4ed3b5/test/parallel/test-repl-load-multiline.js
@@ -1,10 +1,16 @@
 'use strict';
-require('../common');
+const common = require('../common');
 const ArrayStream = require('../common/arraystream');
 const fixtures = require('../common/fixtures');
 const assert = require('assert');
 const repl = require('repl');
 
+if (process.env.TERM == 'dumb')
+{
+  common.skip('Skipping test - dumb console');
+  return;
+}
+
 const command = `.load ${fixtures.path('repl-load-multiline.js')}`;
 const terminalCode = '\u001b[1G\u001b[0J \u001b[1G';
 const terminalCodeRegex = new RegExp(terminalCode.replace(/\[/g, '\\['), 'g');
Index: node-git.6ffe4ed3b5/test/parallel/test-repl-persistent-history.js
===================================================================
--- node-git.6ffe4ed3b5.orig/test/parallel/test-repl-persistent-history.js
+++ node-git.6ffe4ed3b5/test/parallel/test-repl-persistent-history.js
@@ -12,6 +12,12 @@ const path = require('path');
 const os = require('os');
 const util = require('util');
 
+if (process.env.TERM == 'dumb')
+{
+  common.skip('Skipping test - dumb console');
+  return;
+}
+
 const tmpdir = require('../common/tmpdir');
 tmpdir.refresh();
 
Index: node-git.6ffe4ed3b5/test/parallel/test-repl-programmatic-history.js
===================================================================
--- node-git.6ffe4ed3b5.orig/test/parallel/test-repl-programmatic-history.js
+++ node-git.6ffe4ed3b5/test/parallel/test-repl-programmatic-history.js
@@ -10,6 +10,12 @@ const path = require('path');
 const os = require('os');
 const util = require('util');
 
+if (process.env.TERM == 'dumb')
+{
+  common.skip('Skipping test - dumb console');
+  return;
+}
+
 const tmpdir = require('../common/tmpdir');
 tmpdir.refresh();
 
Index: node-git.6ffe4ed3b5/test/parallel/test-readline-tab-complete.js
===================================================================
--- node-git.6ffe4ed3b5.orig/test/parallel/test-readline-tab-complete.js
+++ node-git.6ffe4ed3b5/test/parallel/test-readline-tab-complete.js
@@ -8,6 +8,12 @@ const assert = require('assert');
 const EventEmitter = require('events').EventEmitter;
 const { getStringWidth } = require('internal/util/inspect');
 
+if (process.env.TERM == 'dumb')
+{
+  common.skip('Skipping test - dumb console');
+  return;
+}
+
 // This test verifies that the tab completion supports unicode and the writes
 // are limited to the minimum.
 [
Index: node-git.6ffe4ed3b5/test/parallel/test-repl-preview.js
===================================================================
--- node-git.6ffe4ed3b5.orig/test/parallel/test-repl-preview.js
+++ node-git.6ffe4ed3b5/test/parallel/test-repl-preview.js
@@ -6,6 +6,12 @@ const { REPLServer } = require('repl');
 const { Stream } = require('stream');
 const { inspect } = require('util');
 
+if (process.env.TERM == 'dumb')
+{
+  common.skip('Skipping test - dumb console');
+  return;
+}
+
 common.skipIfInspectorDisabled();
 
 const PROMPT = 'repl > ';
Index: node-git.6ffe4ed3b5/test/parallel/test-repl-reverse-search.js
===================================================================
--- node-git.6ffe4ed3b5.orig/test/parallel/test-repl-reverse-search.js
+++ node-git.6ffe4ed3b5/test/parallel/test-repl-reverse-search.js
@@ -10,6 +10,12 @@ const fs = require('fs');
 const path = require('path');
 const { inspect } = require('util');
 
+if (process.env.TERM == 'dumb')
+{
+  common.skip('Skipping test - dumb console');
+  return;
+}
+
 common.allowGlobals('aaaa');
 
 const tmpdir = require('../common/tmpdir');
