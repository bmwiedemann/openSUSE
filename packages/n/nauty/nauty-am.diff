From: Jan Engelhardt <jengelh@inai.de>
Date: 2019-08-24 18:40 +0200

build: produce shared libraries

Partly based on Debian's upstream-autotoolization.patch.
---
 Makefile.am  |  123 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 configure.ac |   11 ++++-
 2 files changed, 132 insertions(+), 2 deletions(-)

Index: nauty2_8_9/Makefile.am
===================================================================
--- /dev/null
+++ nauty2_8_9/Makefile.am
@@ -0,0 +1,123 @@
+ACLOCAL_AMFLAGS = -I m4
+bin_PROGRAMS = addedgeg amtog assembleg biplabg catg checks6 complg converseg copyg \
+	countg countneg cubhamg deledgeg delptg directg dreadnaut dretodot \
+	dretog edgetransg genbg genbgL geng gengL genktreeg genquarticg \
+	genrang genspecialg gentourng gentreeg hamheuristic labelg \
+	linegraphg listg multig newedgeg NRswitchg pickg planarg ranlabg \
+	ransubg shortg showg subdivideg twohamg underlyingg uniqg vcolg \
+	watercluster2
+
+nautyA1_flavor_CPPFLAGS = -DMAXN=WORDSIZE
+nautyS0_flavor_CPPFLAGS = -DWORDSIZE=16
+nautyS1_flavor_CPPFLAGS = -DWORDSIZE=16 -DMAXN=WORDSIZE
+nautyW0_flavor_CPPFLAGS = -DWORDSIZE=32
+nautyW1_flavor_CPPFLAGS = -DWORDSIZE=32 -DMAXN=WORDSIZE
+nautyL0_flavor_CPPFLAGS = -DWORDSIZE=64
+nautyL1_flavor_CPPFLAGS = -DWORDSIZE=64 -DMAXN=WORDSIZE
+nautyQ0_flavor_CPPFLAGS = -DWORDSIZE=128
+nautyQ1_flavor_CPPFLAGS = -DWORDSIZE=128 -DMAXN=WORDSIZE
+genbg_CPPFLAGS = ${nautyW1_flavor_CPPFLAGS}
+genbgL_CPPFLAGS = ${nautyL1_flavor_CPPFLAGS} -DMAXN1=30
+geng_CPPFLAGS = ${nautyW1_flavor_CPPFLAGS}
+genquarticg_CPPFLAGS = ${nautyL1_flavor_CPPFLAGS}
+gentourng_CPPFLAGS = -DMAXN=24
+watercluster2_CPPFLAGS = -DMAXN=32
+NRswitchg_LDADD = libnauty.la
+addedgeg_LDADD = libnauty.la
+amtog_LDADD = libnauty.la
+assembleg_LDADD = libnauty.la
+biplabg_LDADD = libnauty.la
+catg_LDADD = libnauty.la
+checks6_LDADD = libnauty.la
+complg_LDADD = libnauty.la
+converseg_LDADD = libnauty.la
+copyg_LDADD = libnauty.la
+countg_LDADD = libnauty.la
+countg_SOURCES = testg.c
+countneg_SOURCES = countneg.c
+countneg_LDADD = libnauty.la
+cubhamg_LDADD = libnauty.la
+deledgeg_LDADD = libnauty.la
+delptg_LDADD = libnauty.la
+directg_LDADD = libnauty.la
+dreadnaut_LDADD = libnauty.la
+dretodot_LDADD = -lm libnauty.la
+dretog_LDADD = libnauty.la
+edgetransg_LDADD = libnauty.la
+genbgL_LDADD = libnautyL1.la
+genbgL_SOURCES = genbg.c
+genbg_LDADD = libnautyW1.la
+gengL_LDADD = libnautyL1.la
+gengL_SOURCES = geng.c
+geng_LDADD = libnautyW1.la
+genktreeg_LDADD = libnautyA1.la
+genquarticg_LDADD = libnautyL1.la
+genrang_LDADD = libnauty.la
+genspecialg_LDADD = libnauty.la
+gentourng_LDADD = libnauty.la
+gentreeg_LDADD = libnauty.la
+hamheuristic_LDADD = libnauty.la
+labelg_LDADD = libnauty.la
+linegraphg_LDADD = libnauty.la
+listg_LDADD = libnauty.la
+multig_LDADD = libnauty.la
+newedgeg_LDADD = libnauty.la
+pickg_LDADD = libnauty.la
+pickg_SOURCES = testg.c
+planarg_LDADD = libnauty.la
+planarg_SOURCES = planarg.c planarity.c
+ranlabg_LDADD = libnauty.la
+ransubg_LDADD = libnauty.la
+shortg_LDADD = libnauty.la
+subdivideg_LDADD = libnauty.la
+twohamg_LDADD = libnauty.la
+underlyingg_LDADD = libnauty.la
+uniqg_LDADD = libnauty.la
+vcolg_LDADD = libnauty.la
+watercluster2_LDADD = libnauty.la
+
+pkginclude_HEADERS = nauty.h nautinv.h naurng.h nausparse.h naututil.h naugroup.h schreier.h traces.h gtools.h gutils.h
+
+lib_LTLIBRARIES = libnauty.la libnautyA1.la libnautyL0.la libnautyL1.la libnautyS0.la libnautyS1.la libnautyW0.la libnautyW1.la
+if HAVE_U128
+lib_LTLIBRARIES += libnautyQ0.la libnautyQ1.la
+endif
+libnauty_la_SOURCES = nauty.c nautil.c nausparse.c naugraph.c naurng.c schreier.c traces.c gtools.c nauchromatic.c nauconnect.c naututil.c nautinv.c gutil1.c gutil2.c gtnauty.c naugroup.c nautycliquer.c
+libnauty_la_LIBADD = -lpthread
+libnauty_la_LDFLAGS = -release ${PACKAGE_VERSION}
+libnautyA1_la_CPPFLAGS = ${nautyA1_flavor_CPPFLAGS}
+libnautyA1_la_SOURCES  = ${libnauty_la_SOURCES}
+libnautyA1_la_LIBADD   = -lpthread
+libnautyA1_la_LDFLAGS  = ${libnauty_la_LDFLAGS}
+libnautyQ0_la_CPPFLAGS = ${nautyQ0_flavor_CPPFLAGS}
+libnautyQ0_la_SOURCES  = ${libnauty_la_SOURCES}
+libnautyQ0_la_LIBADD   = -lpthread
+libnautyQ0_la_LDFLAGS  = ${libnauty_la_LDFLAGS}
+libnautyQ1_la_CPPFLAGS = ${nautyQ1_flavor_CPPFLAGS}
+libnautyQ1_la_SOURCES  = ${libnauty_la_SOURCES}
+libnautyQ1_la_LIBADD   = -lpthread
+libnautyQ1_la_LDFLAGS  = ${libnauty_la_LDFLAGS}
+libnautyS0_la_CPPFLAGS = ${nautyS0_flavor_CPPFLAGS}
+libnautyS0_la_SOURCES  = ${libnauty_la_SOURCES}
+libnautyS0_la_LIBADD   = -lpthread
+libnautyS0_la_LDFLAGS  = ${libnauty_la_LDFLAGS}
+libnautyS1_la_CPPFLAGS = ${nautyS1_flavor_CPPFLAGS}
+libnautyS1_la_SOURCES  = ${libnauty_la_SOURCES}
+libnautyS1_la_LIBADD   = -lpthread
+libnautyS1_la_LDFLAGS  = ${libnauty_la_LDFLAGS}
+libnautyL0_la_CPPFLAGS = ${nautyL0_flavor_CPPFLAGS}
+libnautyL0_la_SOURCES  = ${libnauty_la_SOURCES}
+libnautyL0_la_LIBADD   = -lpthread
+libnautyL0_la_LDFLAGS  = ${libnauty_la_LDFLAGS}
+libnautyL1_la_CPPFLAGS = ${nautyL1_flavor_CPPFLAGS}
+libnautyL1_la_SOURCES  = ${libnauty_la_SOURCES}
+libnautyL1_la_LIBADD   = -lpthread
+libnautyL1_la_LDFLAGS  = ${libnauty_la_LDFLAGS}
+libnautyW0_la_CPPFLAGS = ${nautyW0_flavor_CPPFLAGS}
+libnautyW0_la_SOURCES  = ${libnauty_la_SOURCES}
+libnautyW0_la_LIBADD   = -lpthread
+libnautyW0_la_LDFLAGS  = ${libnauty_la_LDFLAGS}
+libnautyW1_la_CPPFLAGS = ${nautyW1_flavor_CPPFLAGS}
+libnautyW1_la_SOURCES  = ${libnauty_la_SOURCES}
+libnautyW1_la_LIBADD   = -lpthread
+libnautyW1_la_LDFLAGS  = ${libnauty_la_LDFLAGS}
Index: nauty2_8_9/configure.ac
===================================================================
--- nauty2_8_9.orig/configure.ac
+++ nauty2_8_9/configure.ac
@@ -1,6 +1,12 @@
 # Process this file with autoconf to produce a configure script.
 AC_INIT([nauty],[2.8.9],[brendan.mckay@anu.edu.au])
 AC_CONFIG_SRCDIR([nauty-h.in])
+AC_CONFIG_AUX_DIR([build-aux])
+AC_CONFIG_MACRO_DIR([m4])
+AM_INIT_AUTOMAKE([-Wall foreign subdir-objects])
+AC_PROG_INSTALL
+AM_PROG_AR
+LT_INIT([disable-static])
 
 # ======================================================================
 # First we define some functions
@@ -26,7 +32,7 @@ AC_DEFUN([CVT_YESNO],[if test "x$$1" = x
 else
   $2=0
 fi
-AC_SUBST($2)])
+AC_SUBST([$2])])
 
 dnl Check for noreturn attribute.  Note that this is the attribute for C and
 dnl might not work for C++. nauty.h does not use it.
@@ -311,6 +317,7 @@ AC_SUBST(Qlibs_or_null)
 AC_SUBST(TLSQlibs_or_null)
 AC_SUBST(testprogs)
 AC_SUBST(nautests)
+AM_CONDITIONAL([HAVE_U128], [test "$ac_cv_sizeof___uint128_t" != "0"])
 
 dnl Checks for library functions.
 AC_CHECK_FUNC(isatty,have_isatty=1,have_isatty=0)
@@ -567,7 +574,7 @@ AC_SUBST(have_gunzip)
 
 LT_INIT
 
-AC_CONFIG_FILES([makefile:makefile.in nauty.h:nauty-h.in
+AC_CONFIG_FILES([Makefile nauty.h:nauty-h.in
     naututil.h:naututil-h.in gtools.h:gtools-h.in
     nauty.pc:nauty-pc.in runalltests:runalltests.in])
 AC_OUTPUT
