reverts a patch from v8:

commit cf209e2a082533e2d4a774ea474570a28a43ee23
Author: Frank Tang <ftang@chromium.org>
Date:   Wed Jun 3 22:30:53 2020 +0000

    Reland "[Intl] Use new getDefaultHourCycle to replace old hack"
    
    This reverts commit 3b1d24cf472a2006bd53a68b2327bbcf03ac369e.
    
    Reason for revert: The problem is fixed

Index: node-v15.0.1/tools/icu/icu_versions.json
===================================================================
--- node-v15.0.1.orig/tools/icu/icu_versions.json
+++ node-v15.0.1/tools/icu/icu_versions.json
@@ -1,3 +1,3 @@
 {
-    "minimum_icu": 67
+    "minimum_icu": 65
 }
Index: node-v15.0.1/deps/v8/src/objects/intl-objects.h
===================================================================
--- node-v15.0.1.orig/deps/v8/src/objects/intl-objects.h
+++ node-v15.0.1/deps/v8/src/objects/intl-objects.h
@@ -21,7 +21,7 @@
 #include "unicode/locid.h"
 #include "unicode/uversion.h"
 
-#define V8_MINIMUM_ICU_VERSION 67
+#define V8_MINIMUM_ICU_VERSION 65
 
 namespace U_ICU_NAMESPACE {
 class BreakIterator;
Index: node-v15.0.1/deps/v8/src/objects/js-date-time-format.cc
===================================================================
--- node-v15.0.1.orig/deps/v8/src/objects/js-date-time-format.cc
+++ node-v15.0.1/deps/v8/src/objects/js-date-time-format.cc
@@ -59,21 +59,6 @@ JSDateTimeFormat::HourCycle ToHourCycle(
   return JSDateTimeFormat::HourCycle::kUndefined;
 }
 
-JSDateTimeFormat::HourCycle ToHourCycle(UDateFormatHourCycle hc) {
-  switch (hc) {
-    case UDAT_HOUR_CYCLE_11:
-      return JSDateTimeFormat::HourCycle::kH11;
-    case UDAT_HOUR_CYCLE_12:
-      return JSDateTimeFormat::HourCycle::kH12;
-    case UDAT_HOUR_CYCLE_23:
-      return JSDateTimeFormat::HourCycle::kH23;
-    case UDAT_HOUR_CYCLE_24:
-      return JSDateTimeFormat::HourCycle::kH24;
-    default:
-      return JSDateTimeFormat::HourCycle::kUndefined;
-  }
-}
-
 Maybe<JSDateTimeFormat::HourCycle> GetHourCycle(Isolate* isolate,
                                                 Handle<JSReceiver> options,
                                                 const char* method) {
@@ -1571,8 +1556,9 @@ MaybeHandle<JSDateTimeFormat> JSDateTime
       generator_cache.Pointer()->CreateGenerator(icu_locale));
 
   // 15.Let hcDefault be dataLocaleData.[[hourCycle]].
-  HourCycle hc_default = ToHourCycle(generator->getDefaultHourCycle(status));
+  icu::UnicodeString hour_pattern = generator->getBestPattern("jjmm", status);
   DCHECK(U_SUCCESS(status));
+  HourCycle hc_default = HourCycleFromPattern(hour_pattern);
 
   // 16.Let hc be r.[[hc]].
   HourCycle hc = HourCycle::kUndefined;
