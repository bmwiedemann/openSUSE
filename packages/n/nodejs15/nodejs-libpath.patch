Index: node-v15.4.0/tools/install.py
===================================================================
--- node-v15.4.0.orig/tools/install.py
+++ node-v15.4.0/tools/install.py
@@ -7,6 +7,7 @@ import errno
 import os
 import shutil
 import sys
+from distutils import sysconfig
 
 # set at init time
 node_prefix = '/usr/local' # PREFIX variable from Makefile
@@ -80,7 +81,7 @@ def uninstall(paths, dst):
     try_remove(path, dst)
 
 def npm_files(action):
-  target_path = 'lib/node_modules/npm/'
+  target_path = sysconfig.get_config_var("LIB") + '/node_modules/npm/'
 
   # don't install npm if the target path is a symlink, it probably means
   # that a dev version of npm is installed there
@@ -98,7 +99,7 @@ def npm_files(action):
   if action == uninstall:
     action([link_path], 'bin/npm')
   elif action == install:
-    try_symlink('../lib/node_modules/npm/bin/npm-cli.js', link_path)
+    try_symlink("../" + sysconfig.get_config_var("LIB") + '/node_modules/npm/bin/npm-cli.js',link_path)
   else:
     assert 0  # unhandled action type
 
@@ -107,7 +108,7 @@ def npm_files(action):
   if action == uninstall:
     action([link_path], 'bin/npx')
   elif action == install:
-    try_symlink('../lib/node_modules/npm/bin/npx-cli.js', link_path)
+    try_symlink('../' + sysconfig.get_config_var("LIB") + '/node_modules/npm/bin/npx-cli.js', link_path)
   else:
     assert 0 # unhandled action type
 
@@ -139,7 +140,7 @@ def files(action):
     action([output_prefix + output_file], 'lib/' + output_file)
 
   if 'true' == variables.get('node_use_dtrace'):
-    action(['out/Release/node.d'], 'lib/dtrace/node.d')
+    action(['out/Release/node.d'], sysconfig.get_config_var("LIB") + '/dtrace/node.d')
 
   # behave similarly for systemtap
   action(['src/node.stp'], 'share/systemtap/tapset/')
Index: node-v15.4.0/lib/internal/modules/cjs/loader.js
===================================================================
--- node-v15.4.0.orig/lib/internal/modules/cjs/loader.js
+++ node-v15.4.0/lib/internal/modules/cjs/loader.js
@@ -1225,7 +1225,7 @@ Module._initPaths = function() {
     path.resolve(process.execPath, '..') :
     path.resolve(process.execPath, '..', '..');
 
-  let paths = [path.resolve(prefixDir, 'lib', 'node')];
+  let paths = ['/usr/lib/node'];
 
   if (homeDir) {
     ArrayPrototypeUnshift(paths, path.resolve(homeDir, '.node_libraries'));
