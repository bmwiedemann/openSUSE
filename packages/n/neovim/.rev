<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>6b10745b60f7fdae61a4019e21f5cb9f</srcmd5>
    <version>0.1.3</version>
    <time>1461855234</time>
    <user>dimstar_suse</user>
    <comment>Neovim is a refactor - and sometimes redactor - in the tradition of Vim, which itself derives from Stevie. It is not a rewrite, but a continuation and extension of Vim. Many rewrites, clones, emulators and imitators exist; some are very clever, but none are Vim. Neovim strives to be a superset of Vim, notwithstanding some intentionally removed misfeatures; excepting those few and carefully-considered excisions, Neovim is Vim. It is built for users who want the good parts of Vim, without compromise, and more. </comment>
    <requestid>389693</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>971b86e00801e64cd0bc8f53a0af8206</srcmd5>
    <version>0.1.4</version>
    <time>1462865267</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>394210</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>52817908e2509b3ac03b9af720a4a0e9</srcmd5>
    <version>0.1.5</version>
    <time>1472595074</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>423755</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>5308b7f58c0f94d8561ee8d37dedc542</srcmd5>
    <version>0.1.6</version>
    <time>1478087279</time>
    <user>dimstar_suse</user>
    <comment>Version bump to 0.1.6.</comment>
    <requestid>438146</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>bf1ff5798818442b99f27d42884c4703</srcmd5>
    <version>0.1.7</version>
    <time>1480420193</time>
    <user>dimstar_suse</user>
    <comment>Version bump to 0.1.7.</comment>
    <requestid>442480</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>fa40bb8ace2328fa22f56d5d96357b5a</srcmd5>
    <version>0.2.0</version>
    <time>1495011216</time>
    <user>dimstar_suse</user>
    <comment>Version bump to 0.2.0.</comment>
    <requestid>493804</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>10ca1a62fde2a42735668b56713dac0c</srcmd5>
    <version>0.2.0</version>
    <time>1505920007</time>
    <user>dimstar_suse</user>
    <comment>- Run spec-cleaner.
- Add `libnsl` as a build requirement.
  The new glibc version in Factory deprecated support to libnsl.
</comment>
    <requestid>526392</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>52bebfa33f2a4622a30ae0a37feb8c7d</srcmd5>
    <version>0.2.1</version>
    <time>1510960918</time>
    <user>dimstar_suse</user>
    <comment>- Change license to `Apache-2.0 AND Vim` as per babelworx request.
- Run spec-cleaner.
- Remove files `neovim.svg` and `neovim.desktop` since upstream
  included `nvim.png` and `nvim.desktop` that provide the same
  functionality.
- Update to version 0.2.1:
  * Features
    - 0e873a3 Lua(Jit) built-in #4411
    - 5b32bce Windows: `:terminal` #7007
    - 7b0ceb3 UI/API: externalize cmdline #7173
    - b67f58b UI/API: externalize wildmenu #7454
    - b23aa1c UI: 'winhighlight' #6597
    - 17531ed UI: command-line coloring (`:help input()-highlight`)
      #6364
    - 244a1f9 API: execute lua directly from the remote api #6704
    - 45626de API: `get_keymap()` #6236
    - db99982 API: `nvim_get_hl_by_name()`, `nvim_get_hl_by_id()`
      #7082
    - dc68538 menu_get() function #6322
    - 9db42d4 :cquit : take an error code argument #7336
    - 9cc185d job-control: serverstart(): support ipv6 #6680
    - 1b7a9bf job-control: sockopen() #6594
    - 6efe84a clipboard: fallback to tmux clipboard #6894
    - 6016ac2 clipboard: customize clipboard with `g:clipboard`
      #6030
    - 3a86dd5 ruby: override ruby host via `g:ruby_host_prog` #6841
    - 16cce1a debug: $NVIM_LOG_FILE #6827
    - 0cba3da `:checkhealth` built-in, validates $VIMRUNTIME #7399
  * Fixes
    - 105d680 TUI: more terminals, improve scroll/resize #6816
    - cb912a3 :terminal : handle F1-F12, other keys #7241
    - 619838f inccommand: improve performance #6949
    - 04b3c32 inccommand: Fix matches for zero-width #7487
    - 60b1e8a inccommand: multiline, other fixes #7315
    - f1f7f3b inccommand: Ignore leading modifiers in the command
      #6967
    - 1551f71 inccommand: fix 'gdefault' lockup #7262
    - 6338199 API: bufhl: support creating new groups #7414
    - 541dde3 API: allow K_EVENT during operator-pending
    - 8c732f7 terminal: adjust for 'number' #7440
    - 5bec946 UI: preserve wildmenu during jobs/events #7110
    - c349083 UI: disable 'lazyredraw' during ui_refresh. #6259
    - 51808a2 send FocusGained/FocusLost event instead of pseudokey
      #7221
    - 133f8bc shada: preserve unnamed register on restart #4700
    - 1b70a1d shada: avoid assertion on corrupt shada file #6958
    - 9f534f3 mksession: Restore tab-local working directory #6859
    - de1084f fix buf_write() crash #7140
    - 7f76986 syntax: register 'Normal' highlight group #6973
    - 6e7a8c3 RPC: close channel if stream was closed #7081
    - 85f3084 clipboard: disallow recursion; show hint only once
      #7203
    - 8d1ccb6 clipboard: performance, avoid weird edge-cases #7193
    - 01487d4 'titleold' #7358
    - 01e53a5 Windows: better path-handling, separator (slash)
      hygiene #7349
    - 0f2873c Windows: multibyte startup arguments #7060
  * Changes
    - 9ff0cc7 :terminal : start in normal-mode #6808
    - 032b088 lower priority of 'cursorcolumn', 'colorcolumn' #7364
    - 2a3bcd1 RPC: Don't delay notifications when request is
      pending #6544
    - 023f67c :terminal : Do not change 'number', 'relativenumber'
      #6796
    - 1ef2d76 socket.c: Disable Nagle's algorithm on TCP sockets
      #6915
    - 6720fe2 help: `K` tries Vim help instead of manpage #3104
    - 7068370 help, man.vim: change &quot;outline&quot; map to `gO` #7405
</comment>
    <requestid>542660</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>0a282253514ce23098f7787969385924</srcmd5>
    <version>0.2.2</version>
    <time>1511595770</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>545074</requestid>
  </revision>
  <revision rev="10" vrev="2">
    <srcmd5>56374d8a61af7b3a8d5289ed5de00dc1</srcmd5>
    <version>0.2.2</version>
    <time>1512386188</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>547888</requestid>
  </revision>
  <revision rev="11" vrev="3">
    <srcmd5>80644aa56986417f33d3ba7fc9ac973a</srcmd5>
    <version>0.2.2</version>
    <time>1527675773</time>
    <user>dimstar_suse</user>
    <comment>- The library bump fixes boo#1094627.
- Require libtermkey version &gt;= 0.20.
</comment>
    <requestid>612196</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>a57294e865a86c06c5ffc1627898abc2</srcmd5>
    <version>0.3.0</version>
    <time>1530303926</time>
    <user>dimstar_suse</user>
    <comment>- Remove update-alternatives as it's not 1:1.
  Upstream is not willing to do that:
  https://github.com/neovim/neovim/issues/8535
- Update to version 0.3.0
- Add a support for update-alternatives, so users can change their
  &quot;vim&quot; to neovim
- Mark LICENSE file as %license
</comment>
    <requestid>616304</requestid>
  </revision>
  <revision rev="13" vrev="2">
    <srcmd5>b1f3e0375e88d329a54f76d5035e61a9</srcmd5>
    <version>0.3.0</version>
    <time>1531947292</time>
    <user>dimstar_suse</user>
    <comment>- Require exact version of libtermkey1 because it does not
  bump SONAME (boo#1100496).
</comment>
    <requestid>623146</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>60105faf1b02b8e0d68ab05292297364</srcmd5>
    <version>0.3.1</version>
    <time>1532361683</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>624578</requestid>
  </revision>
  <revision rev="15" vrev="2">
    <srcmd5>672211237e3f56e9c94ab95166bcad90</srcmd5>
    <version>0.3.1</version>
    <time>1534774782</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>630323</requestid>
  </revision>
  <revision rev="16" vrev="3">
    <srcmd5>271f869cd78172a941bc6158d2338232</srcmd5>
    <version>0.3.1</version>
    <time>1536094651</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>632915</requestid>
  </revision>
  <revision rev="17" vrev="4">
    <srcmd5>d7b9da4b98039b844e37e4190863bf0f</srcmd5>
    <version>0.3.1</version>
    <time>1539342633</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>639972</requestid>
  </revision>
  <revision rev="18" vrev="5">
    <srcmd5>b4b12dbed37cf2301184161152598ffa</srcmd5>
    <version>0.3.1</version>
    <time>1544189697</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>655637</requestid>
  </revision>
  <revision rev="19" vrev="6">
    <srcmd5>e3ee60742f32850c9c1e469b08a8c8a4</srcmd5>
    <version>0.3.1</version>
    <time>1545376954</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>660297</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>d48938150eb2ef2070b05fd9d92edb14</srcmd5>
    <version>0.3.4</version>
    <time>1548064299</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>665369</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>2346e95b3a4039dacede1cf59fd8df50</srcmd5>
    <version>0.3.5</version>
    <time>1556622385</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>699427</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>82f6c316252bc5f603511b7351dee645</srcmd5>
    <version>0.3.7</version>
    <time>1559375526</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>706270</requestid>
  </revision>
  <revision rev="23" vrev="2">
    <srcmd5>b91a80b9d9dcb420ec6bb9d9ebdb1395</srcmd5>
    <version>0.3.7</version>
    <time>1560339118</time>
    <user>dimstar_suse</user>
    <comment>    (CVE-2019-12735 boo#1137443)</comment>
    <requestid>709379</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>40bd3bd6b010978458cc00f754822a91</srcmd5>
    <version>0.3.8</version>
    <time>1562591569</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.3.8:
  * 5b47e4d #10341 security: 'modeline', 'modelineexpr'
  * e4ecb70 #10345 Disallow API calls in the sandbox.</comment>
    <requestid>714013</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>a590730b7f6ae4e1386a5782ad2b919b</srcmd5>
    <version>0.4.2</version>
    <time>1569234554</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>731915</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>6b3d240493c7db0c75c6cb084f21b2c2</srcmd5>
    <version>0.4.3</version>
    <time>1573473672</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>747295</requestid>
  </revision>
  <revision rev="27" vrev="2">
    <srcmd5>165b7296473627489e80200a1aae70da</srcmd5>
    <version>0.4.3</version>
    <time>1576322317</time>
    <user>dimstar_suse</user>
    <comment>- Unconditionally use luajit-devle instead of sometimes
  luajit-devel and sometimes lua51-luajit-devel. (forwarded request 756815 from dimstar)</comment>
    <requestid>756816</requestid>
  </revision>
  <revision rev="28" vrev="3">
    <srcmd5>723d951e1efe6381d4cfd0247896261a</srcmd5>
    <version>0.4.3</version>
    <time>1579729505</time>
    <user>dimstar_suse</user>
    <comment>- Add fix-buf_set_term_title.patch in order to fix build issue.
- Set CFLAGS and CXXFLAGS in order to respect $optflags.</comment>
    <requestid>766157</requestid>
  </revision>
  <revision rev="29" vrev="4">
    <srcmd5>347fc4828814e37a72f04979f77fa5cc</srcmd5>
    <version>0.4.3</version>
    <time>1586248257</time>
    <user>dimstar_suse</user>
    <comment>- Remove unnecessary fix-buf_set_term_title.patch, which actually
  breaks the build.</comment>
    <requestid>791748</requestid>
  </revision>
  <revision rev="30" vrev="5">
    <srcmd5>1e27c4bf85ea4331d752e5c9cdbfe47b</srcmd5>
    <version>0.4.3</version>
    <time>1589993125</time>
    <user>dimstar_suse</user>
    <comment>- For compatibility with Leap 15.2 add libuv-compat.patch
  (applied conditionally only on the appropriate distribution),
  which works around too old version of libuv on Leap 15.*
  by not using UV_FS_COPYFILE_FICLONE flag to uv_fs_copyfile,
  and not using uv_stream_get_write_queue_size at all.
  sr#793088 gh#neovim/neovim#12108</comment>
    <requestid>807386</requestid>
  </revision>
  <revision rev="31" vrev="6">
    <srcmd5>3206712a4cc217f53f2780355d77ef79</srcmd5>
    <version>0.4.3</version>
    <time>1591101726</time>
    <user>dimstar_suse</user>
    <comment>- Enable -fcommon in order to fix gh#neovim/neovim#12423.</comment>
    <requestid>810727</requestid>
  </revision>
  <revision rev="32" vrev="1">
    <srcmd5>552a20df4f348ab1035098b1f61cd815</srcmd5>
    <version>0.4.4</version>
    <time>1596652215</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.4.4:
  bugfixes only
</comment>
    <requestid>824515</requestid>
  </revision>
  <revision rev="33" vrev="2">
    <srcmd5>86740e64ec9324cf44d2cea25a1a27cd</srcmd5>
    <version>0.4.4</version>
    <time>1610736388</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>863148</requestid>
  </revision>
  <revision rev="34" vrev="3">
    <srcmd5>0cacf47f84bdcdbc78a264c9c0b52ee5</srcmd5>
    <version>0.4.4</version>
    <time>1617910359</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>883845</requestid>
  </revision>
  <revision rev="35" vrev="4">
    <srcmd5>e6e5b095d02960faccd81e868b8ee2e6</srcmd5>
    <version>0.4.4</version>
    <time>1622536765</time>
    <user>dimstar_suse</user>
    <comment>- Add vim7188-fix-netrw-command.patch to fix gh#vim/vim#4738.
</comment>
    <requestid>896317</requestid>
  </revision>
  <revision rev="36" vrev="1">
    <srcmd5>44413b38e1b8387a089911868c39cf3b</srcmd5>
    <version>0.5.0</version>
    <time>1625950474</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.5.0 (FINALLY!!!):
  This release represents ~4000 commits since v0.4.4, the
  previous non-maintenance release. Highlights include builtin
  support for LSP, new APIs for extended marks (with byte
  resolution tracking of changes) and buffer decorations, as
  well as vast improvements to lua as a plugin and configuration
  language. Experimental support for tree-sitter as a syntax
  engine is also included, building on the new core APIs for byte
  tracking and decorations. There is also very visible shift
  towards using more of Lua.
  The full list of all changes is truly huge, the
  best list is the 0.5.0 commit message on
  https://github.com/neovim/neovim/commit/a5ac2f45ff84.
- Removes upstreamed patches:
  - libuv-compat.patch
  - neovim-0.4.4-findlua54.patch</comment>
    <requestid>905327</requestid>
  </revision>
  <revision rev="37" vrev="1">
    <srcmd5>e7955e3ea7b5bfb18a20b3be84be93bc</srcmd5>
    <version>0.5.1</version>
    <time>1632766134</time>
    <user>dimstar_suse</user>
    <comment>- Temporarily switch off failing builds on aarch64
- Update to 0.5.1:
BREAKING CHANGES:
  - feat(lua)!: register_keystroke_callback =&gt; on_key
  - feat(lsp)!: change handler signature #15504
FEATURES:
  - feat(jobstart): add parameter to close stdin
FIXES:
  - #15732 fix(inccommand): ignore trailing commands only for *previewed* command
  - backport: fix(windowing): positioning of relative floats
  - #15495 backport: tests(lua/on_yank): assert conditions that fail correctly
  - #15482 backport: fix(lua): verify buffer in highlight.on_yank
  - #15454 backport: fix(window.c): win_close from other tabpage
  - #15372 backport: fix(autocmd.c): fix conditions in block_autocmds, unblock_autocmds
  - backport: refactor(sign): include longer sign column option
  - backport: fix(sign): reset auto sign column with minimum in float win minimal style
  - backport: fix(decorations): crash when :bdelete (extmark_free_all) after clear_namespace
  - #15111 backport: fix(:source): copy curbuf lines to memory before sourcing
  - #14809 backport: fix(:source, nvim_exec): handle Vimscript line continuations
  - #15043 backport: test/memory_usage_spec: skip on MacOS
  - #14984 backport: fixup(clipboard): Fix error not properly handled
  - #14982 backport: fix(vim.opt): vimL map string values not trimmed
  - #14962 backport: fixup(clipboard): Use case matching
  - #15489 fix(man.vim): filetype=man is too eager
  - build: use RelWithDebInfo build for nightlies, Release for releases
  - build: update appdata.xml version in release commit
  - test(treesitter): skip all parsers tests if parsers aren't installed
  - Rename stdin to stdin_mode (fixes Windows build)
FIXES (LSP):
  - #15523 backport: fix(lsp): resolve bufnr in buf_is_attached
  - backport: fix(lsp): Ensure human readable errors are printed
  - backport: fix(lsp): Ensure users get feedback on references/symbols errors or empty results
  - #14954 backport: fix(lsp): correctly check for windows in lsp logger
  - #15023 backport: fix(lsp): restore diagnostics extmarks that were moved to the last edit line
  - #15011 backport: fix(lsp): restore diagnostics extmarks on buffer changes
  - backport: fix(lsp): prevent double &lt;text&gt; for cached plaintext markup
  - feat(lsp): allow root_dir to be nil (#15430) (Mathias Fußenegger)
  - lsp(start_client): Allow passing custom workspaceFolders to the LSP (#15132) (sim)
  - fix(lsp): check if buffer is valid in changetracking (#15505) (Jose Alvarez)
  - fix(lsp): avoid ipairs on non-sequential tables (#15059) (Michael Lingelbach)
  - feat(lsp): improve vim.lsp.util.apply_text_edits (#15561) (hrsh7th)
  - feat(lsp): improve logging (#15636) (Michael Lingelbach)
</comment>
    <requestid>921678</requestid>
  </revision>
  <revision rev="38" vrev="2">
    <srcmd5>af5da3591b77f4592a437fead28a9177</srcmd5>
    <version>0.5.1</version>
    <time>1637108024</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>931572</requestid>
  </revision>
  <revision rev="39" vrev="3">
    <srcmd5>b479bd33280fc7c2240ce880c4e04222</srcmd5>
    <version>0.5.1</version>
    <time>1637228082</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>932014</requestid>
  </revision>
  <revision rev="40" vrev="1">
    <srcmd5>1ec1e8beb9f64255134c363293060ab6</srcmd5>
    <version>0.6.0</version>
    <time>1638388028</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.6.0 (details on
  - Diagnostics and LSP changes
    Initially, diagnostic module is part of vim.lsp module. In
    order to support external plugins such as null-ls.nvim, the
    nvim team has refactor the diagnostic module to its module
    vim.diagnostic. So we need to change our config accordingly.
    vim.lsp.diagnostic.show_line_diagnostics() has been changed
    to vim.diagnostic.open_float(). Previously, there is no easy
    to show diagnostic source unless with some hack, you can now
    show source in diagnostics in open_float() easily:
    vim.diagnostic.open_float(nil, {
        source = 'always'
    })
    vim.lsp.diagnostic.goto_prev() and
    vim.lsp.diagnostic.goto_next() has been renamed to
    vim.diagnostic.goto_prev() and vim.diagnostic.goto_next()
    respectively.
    vim.lsp.diagnostic.set_loclist() and
    vim.lsp.diagnostic.set_qflist() has been renamed to
    vim.diagnostic.setloclist() and vim.diagnostic.setqflist()
    instead.
    Diagnostics signs has been renamed, for example (old –&gt; new):
        LspDiagnosticsSignError –&gt; DiagnosticSignError (Lsp is
            removed, Diagnostics is changed to singular from
            Diagnostic)
        LspDiagnosticsSignWarning –&gt; DiagnosticSignWarn
        LspDiagnosticsSignInformation –&gt; DiagnosticSignInfo
        LspDiagnosticsSignHint –&gt; DiagnosticSignHint
    Also, related highlight has been renamed too:
        DiagnosticsDefaultError –&gt; DiagnosticSignError</comment>
    <requestid>935013</requestid>
  </revision>
  <revision rev="41" vrev="1">
    <srcmd5>c7b97c291629f5c8b5c7a88f1ddd9c40</srcmd5>
    <version>0.6.1</version>
    <time>1641203379</time>
    <user>dimstar_suse</user>
    <comment>- Upgrade to 0.6.1:
  - api: allow nvim_buf_set_extmark to accept end_row key
  - diagnostic: assert that diagnostics have line number and
    column
  - diagnostic: clamp diagnostics on negative line numbers
  - diagnostic: escape special chars in file names
  - diagnostic: respect &quot;if_many&quot; source option for virtual text
  - diagnostic: set effective buffer number for DiagnosticChanged
    autocmd
  - diagnostic: set effective buffer number in autocmd (again)
  - lua: do not cast offset to char_u in str_utf_start
  - lsp: avoid attaching to unloaded buffers
  - lsp: call config on_exit handler before context is cleared
  - lsp: fix nil-index behavior for UTF-8 in _str_*index_enc
    methods
  - lsp: handle offset encoding
  - lsp: progress handlers should return vim.NIL on error
  - options: disallow empty 'fdc' and 'scl'
  - quickfix: avoid O(N^2) when filling from string typval
  - screenpos, float: add top and left border adjustment
  - terminal: fix resize crash with pending scrollback
  - ui: close floating window on BufLeave event
  - uri: change scheme pattern to not include the comma character
  - lsp,diagnostic: open folds in jump-related functions
  - lsp: add buf_detach_client
  - lsp: use vim.ui.select for selecting lsp client
  - runtime: new checkhealth filetype
</comment>
    <requestid>943404</requestid>
  </revision>
  <revision rev="42" vrev="1">
    <srcmd5>676fd6b47f8fb11816fab041b791ceba</srcmd5>
    <version>0.7.0</version>
    <time>1650466478</time>
    <user>dimstar_suse</user>
    <comment>- Tests fail on aarch64 gh#neovim/neovim#18176
- Add 7657-run-tests-aarch64.patch fixing some tests on aarch64
  (gh#neovim/neovim#7423).
- Instead of patch, just provide fake busted shell script which
  runs luajit. TESTS ARE ON!
- Only recommend python3-neovim.
- Upgrade to 0.7.0:
    - api: add support for lua function &amp; description in keymap (b411f43)
    - api: add api and lua autocmds (991e472)
    - api: nvim_clear_autocmd (b80651e)
    - api: pass args table to autocommand callbacks (30bc02c)
    - api: remove Lua autocommand callbacks when they return true (#17784) (be35d3c)
    - api: implement nvim_{add,del}_user_command (eff11b3)
    - api: implement nvim_buf_get_text (#15181) (11f7aee)
    - api: add nvim_get_option_value (71ac00c)
    - highlight: ns=0 to set :highlight namespace (4aa0cdd)
    - highlight: support for blend in nvim_set_hl (#17516) (b5bf487)
    - api: add strikethrough, nocombine to set_hl (cb18545)
    - api: relax statusline fillchar width check (3011794)
    - lua: add vim.keymap (6d41f65)
    - lua: add vim.spell (#16620) (e11a44a)
    - lua: add proper support of luv threads (b87867e)
    - lua: make :lua =expr print result of expr (d442546)
    - lua: handle lazy submodules in :lua vim. wildmenu completion (5ed6080)
    - lua: add notify_once() (#16956) (d78e466)
    - lua: add support for multiple optional types in vim.validate (#16864) (55c4393)
    - lua: show proper verbose output for lua configuration (ebfe083)
    - lua: more conversions between LuaRef and Vim Funcref (c8656e4)
    - lua: support converting nested Funcref back to LuaRef (#17749) (cac90d2)
    - call __tostring on lua errors if possible before reporting to user (81bffbd)
    - filetype.lua (#16600) (3fd454b)
    - filetype.lua: add support for files under .git (7a574e5)
    - filetype.lua: add support for patch files (27b664a)
    - filetype.lua: add support for tmux.conf files (94d5358)
    - filetype.lua: add support for txt files (#16926) (a45b578)
    - filetype.lua: Add typescript extension to filetype detection (#16923) (8ade800)
    - filetype.lua: fix .cc file not detected (c38d602)
    - filetype.lua: fix .env file not detected (19864bd)
    - filetype: convert patterns for mail buffers (#17238) (4458413)
    - filetype: support scripts.vim with filetype.lua (#17517) (fdea157)
    - decorations: support signs (30e4cc3)
    - extmarks: add strict option (11142f6)
    - api: expose extmark more details (5971b86)
    - api: expose extmark right_gravity and end_right_gravity (3d9ae9d)
    - use nvim_buf_set_extmark for vim.highlight (#16963) (b455e01)
    - statusline: support multibyte fillchar (be15ac0)
    - add support for global statusline (5ab1229), closes #9342
    - ui: allow conceal to be defined in decorations and tree-sitter queries (6eca9b6)
    - tree-sitter: allow Atom-style capture fallbacks (#14196) (8ab5ec4)
    - treesitter: add more default groups to highlight map (#17835) (6d648f5)
    - treesitter: multiline match predicates (6e6c36c)
    - treesitter: set allocator when possible (b1e0aa6)
    - ts: add support for multiline nodes in get_node_text (#14999) (1f3c059)
    - ts: expose minimum language version to lua (#17186) (8c140be)
    - runtime: add query filetype (#17905) (2e85af4)
    - diagnostic: add &quot;code&quot; to the diagnostic structure (#17510) (5d6006f)
    - diagnostic: allow retrieving current diagnostic config (c915571)
    - lsp,diagnostic: open folds in jump-related functions (#16520) (222ef0c)
    - lsp: add buf_detach_client (#16250) (1b04da5)
    - lsp: add handler for workspace/workspaceFolders (#17149) (8e702c1)
    - lsp: dynamically generate list title in response_to_list (#17081) (574a582)
    - lsp: enable default debounce of 150 ms (#16908) (55a59e5)
    - lsp: skip or reduce debounce after idle (#16881) (b680392)
    - lsp: use vim.ui.select for selecting lsp client (#16531) (f99f3d9)
    - ui_client: connect to remote ui (a4400bf)
    - ui_client: implement event handlers (794d274)
    - ui_client: handle resize events (c6640d0)
    - ui_client: implement async paste handling (55b6ade)
    - ui_client: pass user input to remote server (6636160)
    - --headless: add on_print callback to stdioopen (a4069a3)
    - add autocommand event when search wraps around (#8487) (8ad6015)
    - add vim.tbl_get (#17831) (69f1de8)
    - autocmd: add Recording autocmds (8a4e26c)
    - autocmd: populate v:event in RecordingLeave (#16828) (f65b0d4)
    - completion: support selecting item via API from Lua mapping (c7aa646)
    - eval/method: partially port v8.1.1993 (4efcb72), closes #10848
    - eval/method: partially port v8.1.1996 (2ee0bc0)
    - eval/method: partially port v8.1.2004 (0f4510c)
    - eval: partially port v8.2.0878 (d746f5a), closes vim/vim#5481
    - eval: port emsg from v8.2.3284 (8adbba7)
    - events: add DirChangedPre (059d36e), closes vim/vim#9721
    - events: support SIGWINCH for Signal event #18029 (b2cb05b), closes #15411
    - hardcopy: check gui colours for highlights first (e5b5cbd)
    - highlight: support color names for cterm (dc24eeb)
    - ignore nore on maps (0347875)
    - input: delay some conversions to vgetc() (d7488bf)
    - input: enable /, /, /&lt;c-[&gt; pairs unconditionally (ed88ca7)
    - keymap: add F38-F63 keys (#17893) (9da0023)
    - keymap: return nil from an expr keymap (58140a9)
    - mappings: considering map description when filtering (#17423) (9a74c2b)
    - provider: remove support for python2 and python3.[3-5] (baec0d3)
    - remote: add basic --remote support (5862176)
    - runtime: import cleanadd.vim from Vim (#17699) (d33aebb)
    - runtime: include Lua in C++ ftplugin (#17843) (02fd00c)
    - runtime: new checkhealth filetype (#16660) (734fba0)
    - term: use vterm_output_set_callback() (7813b48)
    - test: use nvim_exec in helpers.source() #16064 (72652cb), closes #16071
    - trigger ModeChanged for terminal modes (fdfd1ed)
    - tui: add error logging (#16615) (34d88ed)
    - tui: add support for CSI 4 : [2,4,5] m (f89fb41), closes #17362
    - tui: enable CSI u keys (a11ff55)
    - vim-patch.sh: support additional args for -s (0ec92bb)
    - lsp: request only changed portions of the buffer in changetracking (#17118) (9055ec5)
    - only redraw concealed line if cursor has moved horizontally (595c1a7), closes #17889
    - pre-compile embedded Lua source into bytecode (#16631) (4240ce8)
    - screen: reduce cursorline redrawing when jumping around (c29a14d), closes vim/vim#9996
    - treesitter: cache query parsing (9c26939)
    - api: elide luaref copy when setting 'callback' in nvim_set_keymap (9f489f5)
    - --headless: do not block on press-enter prompts when no UI (5b34c2a), closes #9358 #11718 #15910
    - not shown in :map commands (07a98b1)
    - add forkpty for SunOS variants (2c8f4d0)
    - add STRNLEN compatability macro (8f1fdbc)
    - anonymous sid not working (7b6ee3e)
    - api, lua: return NIL on failure to find converted function (#17779) (77eb6f9)
    - api/nvim_win_call: share common win_execute logic (452b46f)
    - api: allow empty list for cterm in nvim_set_hl (e35a2d8)
    - api: allow nvim_buf_set_extmark to accept end_row key (#16548) (cf32053)
    - api: convert blob to NUL-terminated API string (f6cc604)
    - api: correctly handle negative line numbers for nvim_buf_set_text (#17498) (1500447), closes #15181
    - api: correctly pass f-args for nvim_create_user_command (#18098) (e463eb8)
    - api: delete all autocmds with the same ID (dc3bbd3)
    - api: force redefinition of user commands by default (#16918) (3923843)
    - api: highlight attribute for underline (96bb178), closes #17624
    - api: improve autocmd error handling (9292938)
    - api: include event in get_autocmds (#17553) (37a86a2)
    - api: make nil value in nvim_set_option_value clear local value (#16710) (33cd1ba)
    - api: nvim__set_hl_ns causes extra redraws (505c12c)
    - api: nvim_win_set_cursor() redraw for cursorline and statusline (f92e749)
    - api: re-route nvim_get_runtime_file errors (d512be5)
    - api: use changedir_func() in nvim_set_current_dir() (23c3f7f)
    - api: validate command names in nvim_add_user_command (#17406) (238b944)
    - api: validate user_command name (#17004) (a34652e)
    - append test for checking zero width node range (58d81ef)
    - aucmd_win: always make aucmd_win the last window (89712dc)
    - aucmd_win: ensure aucmd_win stays floating (2deffb5)
    - autocmd: clean up autocmds only when needed (#17593) (d5bd7ff)
    - autocmd: restore autocmd showing behavior (74a2774)
    - autoload variables not loaded with vim.g &amp; nvim_get_var (f292dd2)
    - bounds check for underdot (7fd1182)
    - build: check for empty value of LUAC_PRG (#16711) (eceb0b3)
    - build: check that LuaJIT has required modules for compilation (#16714) (abdf3a8)
    - build: install luajit modules on windows (#16658) (2abd178)
    - channel: fix channel consistency (5051510)
    - check for interrupt in nvim_echo, write_msg and nlua_print (#16537) (db4bc32)
    - checkhealth: make provider checkhealth output more consistent (#17722) (33ada23)
    - ci/backport: check for event_name == &quot;pull_request_target&quot; (50c8cc3)
    - ci: provide necessary permissions for calling workflow (b55e659)
    - clang/'Dead store': do not assign endcol (#17788) (876d22f)
    - close floating windows when calling win_close() (85ae04d)
    - completion: prevent K_LUA from closing pum (42e5fd3)
    - completion: update submode message when selecting from API (#17022) (69f3719)
    - correct vertical dragging room calculation with global statusline (#17928) (0d4bd42)
    - coverity/175977: big parameter passed by value (da89725)
    - coverity/188749: nullify pointer to fix use-after-free (d224957)
    - coverity/340720: error if nvim_eval_statusline given invalid winid (e850a92)
    - coverity: dead code and operands don't affect result #17662 (c3a6ff6)
    - decorations: do not put empty virt_text (#17872) (ba257d7)
    - define NAME_MAX from _XOPEN_NAME_MAX (8fdf1b2)
    - diagnostic: allow setting arbitrary config values (984270c)
    - diagnostic: assert that diagnostics have line number and column (#16683) (b515160)
    - diagnostic: clamp diagnostics on negative line numbers (#16496) (254c22a)
    - diagnostic: escape special chars in file names (#16527) (62f0157)
    - diagnostic: improve validation for list arguments (#16855) (838631e)
    - diagnostic: make open_float respect global diagnostic options (#17879) (a8e2c45), closes #17878
    - diagnostic: only set default handler config if unset (8a27205)
    - diagnostic: resolve nil opts tables (fc8af96)
    - diagnostic: respect &quot;if_many&quot; source option for virtual text (#16653) (818ae74)
    - diagnostic: set effective buffer number for DiagnosticChanged autocmd (#16474) (99f6260)
    - diagnostic: set effective buffer number in autocmd (again) (#16589) (6063e07), closes #16474
    - diagnostic: use botright copen for qflist (#17475) (d80c9b9)
    - diff: make algorithm work for vim.diff (#17300) (92e92f0), closes #17207
    - do not cast offset to char_u (1a88729)
    - do not pass aucmd to the callback (#17650) (4f007a7)
    - do not save K_EVENT as lastc in Insert mode (ab1ceaa)
    - docs: add bufnr and user_data to diagnostic-structure (#16619) (3aff3d6)
    - docs: spelling in new underlines docs (4472820)
    - don't include pty.h on SunOS (435dd04)
    - don't use cfsetspeed, use i and o variants (05f9f63)
    - enable filetype detection and syntax highlighting with --clean (#17566) (ed1a9c3)
    - eval/method: add missing method support for existing built-ins (752ca2c)
    - eval: v:lua support for - in module names (fb8cd34)
    - event-loop: call vpeekc() directly first to check for character (74998b0)
    - event-loop: check if executed register has ended (64802da)
    - event-loop: duplicate display updating logic in vgetorpeek() (#17913) (a9665bb)
    - events: make v:event readonly in more events (#18070) (f89ca71)
    - ex_normal: spam \n in Ex mode only if in Cmdline mode (#17977) (a783cdd)
    - extmarks: fix signs (2ab2af5), closes #17638
    - extmarks: splice extmarks on accepting spell (ea71c26)
    - filetype.lua: always return a string in getline helper function (#17852) (5e64d65)
    - filetype: expand tildes in filetype patterns (#17091) (59ea8fa)
    - filetype: fix foam pattern detection (6e04c86)
    - filetype: match negative priority patterns after extensions (#16980) (e92b816)
    - filetype: match on rather than (#16943) (f40ce34)
    - filetype: normalize slashes in file paths (6c86079)
    - filetype: set default ft_ignore_pat in filetype.lua (#16917) (60d3bb7)
    - float: do not switch window before deleting last listed buffer (#17840) (a72f338)
    - float: don't always switch window when deleting last listed buffer (#17836) (ff82b27)
    - float: handle buffer deletion with floating windows (3fdb7b5)
    - float: make laststatus=1 behave consistently with floating windows (a9359dc)
    - healthcheck: handle empty reports (300b009)
    - health: do not run external processes in a shell (a87ecf5)
    - highlight: accept NONE as a color name (#17487) (1e7cb2d), closes #17478
    - highlight: allow globals to be cleared (876aaf2), closes #17420
    - highlight: always update window highlight if highlight changed (23dcef9)
    - inccommand: do not change reg_prev_sub when previewing (d11bbac)
    - input: do not translate scroll keys into multiclicks (5499736)
    - input: fix clearing of reg_executing (2a574f7)
    - input: never escape CSI bytes (ff7c3d1)
    - input: put modifiers back into typeahead buffer when needed (8184564)
    - input: remove reinterpreted ALT/META chords from recorded macro (75f4741)
    - keymap: don't coerce false to '' (3cc29b7)
    - keywordprg: retain terminal buffer after K (#17046) (3ee1ba3)
    - line continuation: set growsize to correct value (#17655) (f24121a)
    - lsp and diagnostic highlight priority (#17461) (791e400)
    - lsp: always split text edits on \r, \r\n, and \n (#17087) (b72aae8)
    - lsp: always use target bufnr in location handler (#16876) (e42c906)
    - lsp: avoid attaching to unloaded buffers (#16723) (d6b939a)
    - lsp: avoid nil workspace/symbol query (#17107) (7085e5b)
    - lsp: call config on_exit handler before context is cleared (#16638) (6a92a53)
    - lsp: correct prefix when filterText is present (#17051) (f6329ea)
    - lsp: correctly align start and end range to codepoints during incremental sync (#16670) (36c401d), closes #16624
    - lsp: create lsp requests with position offsets considering client encoding (#16382) (22d7dd2)
    - lsp: ensure pending changes are flushed on skipped debounce (#17015) (3f2fbb8)
    - lsp: explicitly pass bufnr in didSave handler (#16906) (207307d)
    - lsp: fetch offset_encoding from client in references (#17104) (a0201b6)
    - lsp: fix nil-index behavior for UTF-8 in _str_*index_enc methods (#16731) (9625832)
    - lsp: fix applying multiple out-of-range TextEdits (#17037) (43ef7df)
    - lsp: fix lookup of boolean values in workspace/configuration (#18026) (6160973)
    - lsp: forward offset_encoding in rename handler (#17079) (8066abc)
    - lsp: forward offset_encoding to apply_text_edits (#17075) (9304ee3)
    - lsp: handle insertion of previous line (#17618) (3800615)
    - lsp: handle negative activeSignature in signatureHelp (#17064) (e7cd811)
    - lsp: only send valid params in executeCommand (#16987) (e41e8b3)
    - lsp: pass offset_encoding in formatexpr() (#18084) (392cb7a)
    - lsp: progress handlers should return vim.NIL on error (#16472) (730a951)
    - lsp: resolve bufnr for get_lines (#16986) (b65a23a)
    - lsp: resolve nil bufnr (#16902) (e6c1545), closes #16889 #16745
    - lsp: respect all of 'fixeol', 'eol', and 'binary' applying edits (#17574) (d477788)
    - lsp: set tabSize from 'shiftwidth', not 'softtabstop' (#17787) (af427de)
    - lsp: start incremental sync range at previous newline character (#17610) (a5e475f)
    - lsp: strictly enforce passing offset encoding (#17049) (bc722c8)
    - lsp: suppress ContentModified errors from UI (#16904) (d6f0c95)
    - lsp: use &quot;text&quot; filetype for plaintext (#17898) (4d3acd6)
    - lsp: use botright copen for all handlers (#17471) (6a3accc)
    - lua: don't use nlua_error when exiting early (1479083)
    - lua: print multiple return values with =expr (#16933) (287d356)
    - lua: restore priority of the preloader (b518b57)
    - lua: stricter type check when calling API function (#16745) (297ff97), closes #13651
    - make mode() return correct value in ex mode (600e7e3)
    - man.vim: fix search function on some systems (#13709) (7165e77)
    - man.vim: support calling :Man without a section again (#17119) (ad2dbd4)
    - msgpack#strptime: use calendar.timegm to get seconds since epoch (fb14e2a)
    - ops: str_to_reg passing NULL to memcpy (8170260)
    - options: disallow empty 'fdc' and 'scl' (#16765) (70a68dc)
    - paste: avoid edges cases caused by empty chunk (fcc6f66)
    - paste: deal with eol and eof in Visual mode (bfb7754)
    - paste: deal with trailing new line in chunk (a6eafc7)
    - paste: don't move cursor past the end of pasted text in Normal mode (2601e08)
    - paste: escape control characters in Cmdline mode (e263afc)
    - paste: use getcmdtype() to determine whether in cmdline mode (9b1e1fb)
    - prompt: add missing changes from v8.1.0036 (d6ea074)
    - pty_process_win/wait_eof_timer_cb: also check for proc-&gt;out.did_eof (4154bf9)
    - pum_redraw: use grid_puts_len() to truncate the text (e6d35b9)
    - PVS/V1019: compound assignment expression is used inside condition (93e0d9b)
    - PVS/V560: ignore false &quot;conditional expression is always false&quot; (#17830) (d3af109), closes /github.com/vim/vim/pull/9993#issuecomment-1076544168
    - PVS/V583: the '?:' operator always returns one and the same value (#17790) (e9b53f3)
    - query.lua: check empty table for lines (afcf644)
    - quickfix: avoid O(N^2) when filling from string typval (#16654) (5ba45a7)
    - remote: make compile again (70d2ab1)
    - remote: report connection error, missing return values (2be938a)
    - remote: report on missing wait commands, typecheck lua results (29c3632)
    - remote: respect silent in error reporting (1dbf867)
    - remote: use STATIC_CSTR_AS_STRING (1201145)
    - resolve nil arguments to API functions (#16889) (36662c9), closes #16745 #16745
    - respect os_proc_children rv of pid not found (045422e)
    - runtime: add missing release metadata (5c1b8b7)
    - runtime: add syntax file for query (#18101) (7d1142b), closes #17905
    - runtime: check markdownError before syn-clear (#16930) (b435755)
    - screen: do not do syntax highlighting at filler or folded lines (#17818) (7735163)
    - screen: do not draw filler lines post eof if already at last row (b326bf5)
    - screen: do not update syntax_last_parsed when drawing folded line (#17826) (52fe8ea)
    - screen: don't put empty sign text in line number column (4ddd6c5)
    - screenpos, float: add top and left border adjustment (ffe3003)
    - screen: truncate double-width character correctly (bc75544)
    - screen: truncate when overwriting right half of a double-width char (28dadd5)
    - set nested before executing callback (#17801) (7fb2310)
    - set RedrawingDisabled before entering aucmd_win (dd21e21)
    - signcol: always trigger a redraw (8ba8f1a), closes #17693
    - signcol: handle edge case with maximum value (e67cd22)
    - signcol: update cursor when signcol changes (9d53791), closes #14195
    - skip libutil on SunOS (b8ae43d)
    - substitute: properly check for empty command line (9955209)
    - syntax.c: correct hunk from Vim patch 8.0.0647 (#17761) (9e66d27)
    - syntax: remove trailing spaces in vim.vim (6795c97)
    - tabpage: correct check for failure to close window (ae0a43e)
    - termdebug: handle exiting during startup properly (#16790) (315858b)
    - terminal: correctly forward mouse events (e0956f7)
    - terminal: fix resize crash with pending scrollback (#14891) (0a1391f)
    - terminal: ignore left-release mouse action (c96f7e2), closes #9483 #8691
    - terminal: return early if there are no invalid rows (c83fedf)
    - terminal: use coladvance() to calculate buffer cursor position (2784a5d)
    - test: only use buffer completion in popupmenu timer test (5ecb2cb)
    - tests: update legacy tab switch test to be sane (6dc31ee)
    - translation: po file for Russian (#17767) (e0fe91f)
    - translation: po file for Ukrainian (#18100) (4dc09f3)
    - ts: escape lang when loading parsers (#16668) (f9080b2)
    - tui: avoid using uninitialized memory in kitty (#17866) (a70b399)
    - tui: correct CSI sequence (#17844) (b81c310), closes #17771 /invisible-island.net/xterm/manpage/xterm.html#VT100
    - tui: end streamed paste correctly when key buffer is empty (40ed2b5)
    - tui: remove ESC NUL forced escape (#17198) (a2f1572)
    - ui: close floating window on BufLeave event (#16557) (576408d)
    - ui: inccomand performance degradation (54cec45)
    - ui: make window resize commands manage cmdheight (463174b)
    - update last cursor on first CursorMoved (#16698) (b42e0c4)
    - uri: change scheme pattern to not include the comma character (#16797) (56f3c41)
    - use normal! in default mapping (#17695) (f291a03)
    - vim-patch.sh: fix N/A files patterns (#18073) (8f95f3e)
    - win_close: count the window the be closed instead of curwin (3539456)
    - win_split_ins: do not fail when oldwin is not valid (0cf2dc6), closes #14240
</comment>
    <requestid>970881</requestid>
  </revision>
  <revision rev="43" vrev="1">
    <srcmd5>9c65e1e0b9318bedb1d515db2905c822</srcmd5>
    <version>0.7.2</version>
    <time>1656587894</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>985779</requestid>
  </revision>
  <revision rev="44" vrev="2">
    <srcmd5>2962ba04718b7ee64f9103fd76c4cf43</srcmd5>
    <version>0.7.2</version>
    <time>1662405695</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1001084</requestid>
  </revision>
  <revision rev="45" vrev="1">
    <srcmd5>4706b2403f327809bace697dc5defe93</srcmd5>
    <version>0.8.0</version>
    <time>1664908655</time>
    <user>RBrownFactory</user>
    <comment>Has to go together with sr#1007734.

- Update to 0.8.0:
  - Breaking changes:
    - Remove 'insertmode' 'remap' and 'terse' options
    - highlight: Rename attributes to match Vim (#19159)
    - highlight: Error on invalid names and allow '.' and '@'
    - terminal: Drop winpty, require Windows 10 #18253
    - treesitter: Use @foo.bar style highlight groups
    - treesitter: Do not merge queries by default (#20105)
  - Features:
    - runtime: Enable filetype.lua by default (#19216)
    - Add undo!
    - Add &quot;prerelease&quot; to version dict
    - Click support for 'statusline', 'winbar' #18650
    - Add preview functionality to user commands
    - allow Cmdheight=0 (EXPERIMENTAL) #16251
    - Stdpath('run'), /tmp/nvim.user/ #18993
    - Add 'mousescroll' option (#12355)
    - Allow :wincmd to accept a count (#19815)
    - Multibuffer preview support for inccommand
    - Man: Port to Lua (#19912)
    - api: Ui options relevant for remote TUI
    - api: Add nvim_parse_cmd And nvim_cmd
    - api: Support handling stdin stream in remote ui
    - api: Add group_name to nvim_get_autocmds
    - api: Enable nvim_exec_autocmds to pass arbitrary data
      (#18613)
    - api: Support pattern array for exec_autocmds
    - api: Add unsilent to command APIs
    - api: Add replace_keycodes to nvim_set_keymap (#19598)
    - api: Add support for :horizontal modifier
    - api: Add &quot;move&quot; to nvim_input_mouse
    - api/ui: &quot;ui_watched&quot; option for ui-side extmarks
    - build: Add_glob_target runs only on changed files #19070
    - checkhealth: Check for slow shell #17829
    - defaults: Session data in $XDG_STATE_HOME #15583
    - defaults: Search selection by * and # in visual mode
      (#18538)
    - defaults: Nnoremap &amp; :&amp;&amp; #19365
    - defaults: enable mouse by default (set mouse=nvi) #19290
    - diagnostic: Pass diagnostics as data to DiagnosticChanged
      autocmd (#20173)
    - docs: Gen_help_html.lua
    - edit: Insert an unsimplified key using CTRL-SHIFT-V
    - treesitter: Full support for spelling
    - filetype: Convert more patterns to filetype.lua
    - filetype: Remove side effects from vim.filetype.match
      (#18894)
    - filetype: Expand environment variables in filetype patterns
      (#20145)
    - fs: Add vim.fs functions: parents() dirname() basename()
      dir() find() normalize()
    - highlight: Implement CurSearch highlight
    - highlight: Support scoped @spam.eggs.baked_beans groups
    - input: Delay all simplifications
    - l10n: Turkish translations #19441
    - l10n: Improve zh_CN translations (#19483)
    - lsp: Remove capabilities sanitization (#17814)
    - lsp: Show feedback on empty hover response (#18308)
    - lsp: Options to filter and auto-apply code actions (#18221)
    - lsp: Add vim.lsp.buf.format (#18193)
    - lsp: Add logging level &quot;OFF&quot; (#18379)
    - lsp: Add LspAttach and LspDetach autocommands
    - lsp: Add filter to vim.lsp.get_active_clients()
    - lsp: Option to reuse_win for jump actions (#18577)
    - lsp: Add a start function (#18631)
    - lsp: Send didChangeConfiguration after init (#18847)
    - lsp: Defaults: tagfunc, omnifunc, formatexpr (#19003,
      #19677)
    - lsp: Allow passing custom list handler to LSP functions
      that return lists (#19213)
    - lsp: Provide feedback if server can't compute rename result
      (#19546)
    - lsp: Add range option to code_action; deprecate
      range_code_action (#19551)
    - lsp: Disable exit_timeout by default (#19672)
    - lsp: Add tcp support
    - lua: Vim.deprecate() #18320
    - lua: Vim.cmd() with kwargs acts like nvim_cmd() #18523
    - lua: Allow some vim script functions to run in fast
      callbacks
    - lua: Measure require in --startuptime
    - lua: Allow vim.cmd to be indexed (#19238)
    - lua: Print source locations of lua callbacks (#19597)
    - lua: Add vim.iconv (#18286)
    - lua: Vim.ui_attach to get ui events from lua (EXPERIMENTAL)
    - man.vim: List command flags in &quot;gO&quot; outline #17558
    - mappings: Do not replace existing mapping for simplified
      form
    - mappings: Allow special keys and modifiers in mapping
    - mapset: Support restoring &quot;replace_keycodes&quot; and &quot;desc&quot;
    - mapset: Support restoring Lua callback (#20024)
    - marks: Restore viewport on jump #15831
    - nvim_create_user_command: Pass structured modifiers to
      commands
    - pum: Pretend 'mousemoveevent' is set when showing
      right-click menu
    - server: Set $NVIM, unset $NVIM_LISTEN_ADDRESS #11009
    - server: Instance &quot;name&quot;, store pipes in stdpath(state)
    - term: Add support for libvterm &gt;= 0.2
    - terminal: Implement &lt;c-&gt; for terminal mode
    - terminal: Recognize underdouble and undercurl
    - terminfo: Bump built-in terminfo entries (#18570)
    - treesitter: Allow customizing language symbol name
    - treesitter: Add ability to retreive a tree/node given a
      range
    - treesitter: Upstream node methods from nvim-treesitter
    - treesitter: Include language in invalid query error
      (#14053)
    - treesitter: Bundle Lua parser and queries
    - treesitter: Add viml parser and queries
    - treesitter: Add injections
    - treesitter: Add vim.treesitter.start(), enable for Lua
    - treesitter: Bundle :help parser and queries
    - tui: Query terminal for CSI u support (#18181)
    - tui: Recognize keypad keys when using kitty keyboard
      protocol
    - tui: Try terminfo for [re]set_cursor_color OSC #19255
    - tui: Allow grid and host to disagree on ambiguous-width
      chars (#19686)
    - tui: Recognize sidescroll events (#19992)
    - tui: Support 'mousemoveevent'
    - ui: Add 'winbar'
    - ui: Clear message history explicitly with msg_history_clear
      event
    - ui: Make right-click menu work properly with ext_multigrid
    - ui: Allow to set the highlight namespace per window
    - ui: Use msg_grid based implementation for cmdheight=0
    - ui-ext: Make 'mousemoveevent' a ui_option
    - eval: Make Lua Funcref work as method and in substitute()
      (#20217)
    - eval: Input() support any type for &quot;cancelreturn&quot; in a dict
      (#19357)
- Remove neovim-0.1.7-bitop.patch (bsc#1202958), we actually
  don't need it (luajit has bit module) and it hurts us.
- Remove unnecessary neovim.patch
- Remove upstreamed 7657-run-tests-aarch64.patch.
</comment>
    <requestid>1007737</requestid>
  </revision>
  <revision rev="46" vrev="2">
    <srcmd5>c61787e6d38be6ff969aee052018d1de</srcmd5>
    <version>0.8.0</version>
    <time>1669193287</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1037365</requestid>
  </revision>
  <revision rev="47" vrev="1">
    <srcmd5>cdc296ba0f7dfae82bb18e91bae28bdc</srcmd5>
    <version>0.8.1</version>
    <time>1671564069</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1043914</requestid>
  </revision>
  <revision rev="48" vrev="1">
    <srcmd5>c62b456088b2f756bcc2ee3a1defe81e</srcmd5>
    <version>0.8.2</version>
    <time>1672394926</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.8.2:
  - This primarily a bug fix release but some improvements to
    documentation has been back-ported as well.
  - Features
    help: Highlighted codeblocks
  - Documentation
    - lua: Add guide to using Lua in Neovim
    - Mention how to remove the &quot;How-to disable mouse&quot; menu item
    - Fix order of numbers in syntax.txt
    - lua: Correct the tags for vim.opt_local and vim.opt_global
  - Bug Fixes
    - api: Set correct curbuf when temporarily changing curwin
    - api: &quot;emsg_silent&quot; should imply &quot;silent&quot; in nvim_cmd
    - decoration: Do not reset must_redraw after calling
      providers
    - diagnostic: Clear stale cache on reset
    - events: Save v:event for cmdline autocommands separately
    - float: Fix ml_get error with bufpos
    - float: Fix crash with bufpos and non-existent window
    - folds: Use long for number of folded lines
    - mappings: Use all buckets in second round of unmap
    - memory: Fix memory alignment for dynamic allocation
    - options: Fix local 'sidescrolloff' doesn't work for mouse
    - options: Restore exists() behavior for options
    - terminal: Fix 'mousescroll' not respected in terminal mode
    - tui: Set cursor color parameter as string when required
    - win_close: Remove float grid after closing buffer
  - Build System Fixes
    - Restrict git describe to top level source directory
</comment>
    <requestid>1045759</requestid>
  </revision>
  <revision rev="49" vrev="2">
    <srcmd5>fa4d3a1c98680e56968e904db9694595</srcmd5>
    <version>0.8.2</version>
    <time>1674737905</time>
    <user>dimstar_suse</user>
    <comment>Forwarded request #1060833 from kukuk

- Remove useless BuildRequire libnsl, our version does not provide
    gethostbyname and libnsl is deprecated</comment>
    <requestid>1061030</requestid>
  </revision>
  <revision rev="50" vrev="1">
    <srcmd5>8d6c8024e0b7b02cfd0c0da9a31fec1d</srcmd5>
    <version>0.8.3</version>
    <time>1675458322</time>
    <user>dimstar_suse</user>
    <comment>- Update 0.8.3:
  - clipboard: Show provider warning when not during batch
    changes
  - diff: Avoid restoring invalid 'foldcolumn' value
  - filetype: Don't pass empty string to detect
  - messages: Reset msg_grid_scroll_discount when redrawing
  - rbuffer: Handle edge case where write_ptr has wrapped around
  - rpc: Don't parse msgpack if buflen is 0
  - treesitter: Properly restore 'syntax' (#21358)
  - treesitter: Validate language name
</comment>
    <requestid>1062687</requestid>
  </revision>
  <revision rev="51" vrev="2">
    <srcmd5>03e63d53b8fbd861192a4f55b33cd09d</srcmd5>
    <version>0.8.3</version>
    <time>1679766932</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1074186</requestid>
  </revision>
  <revision rev="52" vrev="3">
    <srcmd5>b0d140be2c473e61b6fe3c041a0f4a13</srcmd5>
    <version>0.8.3</version>
    <time>1679933864</time>
    <user>dimstar_suse</user>
    <comment>- Add snprintf-buf-ovrflw-FORTIFY-3.patch to fix
  gh#neovim/neovim#22779 in the released 0.8
</comment>
    <requestid>1074680</requestid>
  </revision>
  <revision rev="53" vrev="1">
    <srcmd5>5c8a68bfe12d3ebacbfc9c5f903d86b2</srcmd5>
    <version>0.9.0</version>
    <time>1681654022</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1079504</requestid>
  </revision>
  <revision rev="54" vrev="1">
    <srcmd5>04f870d157119d9afed852e6a1540e3a</srcmd5>
    <version>0.9.1</version>
    <time>1687272572</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1093942</requestid>
  </revision>
  <revision rev="55" vrev="1">
    <srcmd5>e6554b851ee843ca163c1e0b8e2b36a3</srcmd5>
    <version>0.9.2</version>
    <time>1694114043</time>
    <user>anag+factory</user>
    <comment>- Update to version 0.9.2:
  - Bram: Nvim is a fork of the Vim editor, created and developed by Bram Moolenaar.
    On August 3, 2023, he passed away at the age of 62. If Vim or Nvim have been of
    use to you in your life, read :help Bram and :help Uganda and consider honoring
    his memory in a way you see fit.
  - Breaking change:
    - An adjustment was made to the grid_line event as part of
      the exernal UI protocol: the cells array might now end with
      a [' ', attr, 0] item with a repeat count of zero. This is
      needed by the TUI to disambiguate final spaces from a line
      from just clearing the line, which will make a difference
      when copying text using the terminal emulators builtin
      primary selection support.
      External UI:s can safely ignore such an empty item and most
      UIs already handle this fine. But it could break UI:s which
      has an assert to validate the cell count to be bigger than
      zero, or similar.
  - Features:
    - tui: Support Super and Meta modifiers
    - terminal: forward more special keys and modifier-mouse
      combinations
  - Bug Fixes:
    - lua: Always set arg0 to lua scripts
    - api: Redundant error when using nvim_cmd
    - api, lua: Make blank lines in a message work properly
    - column: fix bugs related to signs in 'statuscol'
    - completion: Don't add backslash in runtime completion
    - diff: Filler lines for hunks bigger than linematch limit
    - edit: Fix K_EVENT interfering with 'digraph'
    - editorconfig: Better validation and error handling
    - events: Don't expand non-file as file name
    - events: Trigger VimResume on next UI request
    - extmarks: Wrong display when changing text with virt_lines
    - folds: Update folds in Insert mode with fdm=indent
    - helptags: Make multibyte help tags work properly
    - highlight: Make CurSearch work properly with 'winhl'
    - inccommand: Fix saving of undo info
    - keycodes: Recognize &lt;t_xx&gt; as a key
    - lsp: Do not assume client capability exists in watchfiles
      check (#24558)
    - mouse: Handle folded lines with virt_lines attached to line
      above
    - remote: Make --remote-expr print to stdout
    - remote: Restore previous --remote-expr output formatting
    - spell: Splice extmarks on :spellrepall
    - startup: Don't truncate when printing with -l
    - startup: Run embedded Nvim with real path
    - statusline: Redraw when Visual submode changes
    - statusline: Fill for double-width char after moving items
    - treesitter: updates to queries and injections
    - treesitter: Fix TSNode:tree() double free
    - ui: Propagate line wrapping state on grid_line events
    - ui: Avoid ambiguity about chunk that clears part of line
  - Performance:
    - extmarks: Avoid unnecessary marktree traversal with folds
    - substitute: Don't reallocate new_start every time
- Remove unnecessary neovim-rpmlintrc.
</comment>
    <requestid>1109538</requestid>
  </revision>
  <revision rev="56" vrev="1">
    <srcmd5>dac74a400c3f10aead5b1ceaf7db2c41</srcmd5>
    <version>0.9.4</version>
    <time>1697390854</time>
    <user>anag+factory</user>
    <comment>- Update to version 0.9.4:
  This is a maintenance release, focusing on bug fixes.
  - build: Fix exporting symbols on macOS Sonoma
  - api: Handle NUL in nvim_err_write() and nvim_out_write()
  - autocmd: Api functions accepting garbage after event name
  - clang: Null pointer dereference in parse_msgpack
  - clipboard: Don't pass --foreground to wl-copy
  - exception: Remember whether message is multiline
  - float: Update position of anchored windows first
  - float: Fix some other crashes with :unhide or :all
  - lua: Not using global value in vim.opt_global
  - lua: Show error message when failing to set variable
  - mouse: Click on 'statuscolumn' with 'rightleft'
  - path: Accept special characters on Windows
  - provider: Fix python3 provider cannot detect python3.12
  - provider/pythonx: Import the correct module
  - rpc: Fix race condition
  - runtime: Add commentstring for D ftplugin
  - statuscolumn: Update number hl for each screen line
  - terminal: Check terminal size at end of screen update
  - treesitter: Remove more double recursion
  - ui: &quot;resize -1&quot; with cmdheight=0
  - unhide: Close floating windows first
  - unittests: Ignore __s128 and __u128 types in ffi
  - tutor: Clarify the meaning of ✗ and ✓
</comment>
    <requestid>1117794</requestid>
  </revision>
  <revision rev="57" vrev="2">
    <srcmd5>bcde6aa64f2944458c8690d7740fa8d1</srcmd5>
    <version>0.9.4</version>
    <time>1701377999</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1125802</requestid>
  </revision>
  <revision rev="58" vrev="1">
    <srcmd5>de0508a94b8901f583bafdd063622904</srcmd5>
    <version>0.9.5</version>
    <time>1704281447</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1136267</requestid>
  </revision>
  <revision rev="59" vrev="2">
    <srcmd5>4719d84b34eba1c6c3cf210e74af4de6</srcmd5>
    <version>0.9.5</version>
    <time>1709145928</time>
    <user>anag+factory</user>
    <comment>- Update license field based on legaldb review 
  - GPL-3.0+ for neovim-0.8.3/runtime/syntax/poke.vim
  - CC-BY-3.0 for neovim-0.8.3/runtime/doc/dev_style.txt
</comment>
    <requestid>1152969</requestid>
  </revision>
  <revision rev="60" vrev="3">
    <srcmd5>a606f14a8f84ca3eae1bee48e856df91</srcmd5>
    <version>0.9.5</version>
    <time>1710364716</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1157204</requestid>
  </revision>
  <revision rev="61" vrev="1">
    <srcmd5>d4c34c5f604742b49474044e37eab7db</srcmd5>
    <version>0.10.0</version>
    <time>1716803801</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1177072</requestid>
  </revision>
  <revision rev="62" vrev="2">
    <srcmd5>24b8220c0925b08a7e07a0929f7bfbdc</srcmd5>
    <version>0.10.0</version>
    <time>1717669904</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1178579</requestid>
  </revision>
  <revision rev="63" vrev="3">
    <srcmd5>4c1001e2857c357e0f1b0f807988a26d</srcmd5>
    <version>0.10.0</version>
    <time>1719349653</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1182975</requestid>
  </revision>
  <revision rev="64" vrev="1">
    <srcmd5>9697d3efe86b3ee5f25def83a3d40e52</srcmd5>
    <version>0.10.1</version>
    <time>1722612410</time>
    <user>dimstar_suse</user>
    <comment>- add versioning to some dependencies, as neovim is quite picky
- fix template.spec so when creating a new spec file, it doesn't pull in
  vims skeleton.spec
- Update to 0.10.1
- Features
  * lsp: Update LSP healthcheck format
- Build System
  * deps: Bump tree-sitter-query to v0.4.0
  * deps: Bump tree-sitter-c to v0.21.3
  * deps: Bump tree-sitter-vimdoc to v3.0.0
  * deps: Drop unused bundled bash, python parsers and queries
  * macos: Disable deduplication in link step
  * &quot;popcount&quot; name conflict on NetBSD
  * Remove -O2 from gen_cflags
  * Reuse code for deps.txt for both deps and main build
- Bug Fixes
  * Show swapfile warning as a warning
  * Assert failure in VimL expression parser
  * api: Alloc and draw cursor window in nvim__redraw
  * colorscheme: Underline StatusLineNC with 'notermguicolors'
  * column: Crash with 'signcolumn' set to &quot;number&quot;
  * column: Clamp line number for legacy signs
  * column: Modifying a sign should update placed signs
  * comment: Fall back to using trimmed comment markers
  * defaults: Default @/Q broken when 'ignorecase' is set
  * drawline: Don't draw beyond end of window
  * drawline: Don't draw beyond end of window with 'rnu'
  * extmarks: Issues with revalidating marks
  * filetype: Fix typos in filetype detection
  * float: Handle error in win_float_create()
  * fs: Make vim.fs.root work for relative paths and unnamed buffers
  * health: Broken ruby detect
  * health: Fix fetching url with python in provider health
  * input: Handle vim.on_key() properly with ALT and K_SPECIAL
  * lsp: Add textDocument/documentLink to capability map
  * lsp: Hide layout in codelenses in virtual text
  * lsp: Detach all clients on_reload to force buf_state reload
  * lsp: Trigger LspDetach on buffer delete
  * lsp: Check if buffer was detached in on_init callback
  * lsp: Handle nil root_dir in health check
  * lsp: Do not detach from buffer if there are uninitialized clients
  * lsp: Clear lsp client diagnostics
  * lsp: Remove superfluous on_detach callback from semantic tokens module
  * lsp: Do not reset buf version when detaching client
  * lsp: Avoid vim.keymap.del error when stopping a client
  * lsp: Don't show codelens for buffers that don't support it
  * lsp: Inlay hints are rendered in the correct order
  * lua: Change some vim.fn.expand() to vim.fs.normalize()
  * marks: Revalidate marks whose position did not change
  * mouse: Early return when clicking in padded 'statuscolumn'
  * move: Half-page scrolling with resized grid at eob
  * path: Avoid chdir() when resolving path
  * quickfix: Make shortmess+=O work with cmdheight=0 
  * runtime: Source c ftplugin properly for cpp on Windows
  * runtime: Add commentstring for glsl ftplugin
  * snippet: Don't override unnamed register on tabstop select
  * snippet: Cancel snippet session when leaving the buffer
  * snippet: Modify base indentation when there's actually whitespace
  * tohtml: Replace ipairs with pairs
  * tohtml: Ignore lsp inlay hints
  * tohtml: Show how many warnings are hidden
  * tohtml: Properly handle multiple hl groups
  * tohtml: Extmark text may be out of bounds
  * tohtml: Support ranges again
  * treesitter: Do not modify highlight state for _on_spell_nav
  * treesitter: Ensure syntaxset augroup exists
  * treesitter: Display fields for anonymous nodes in :InspectTree
  * treesitter: Recognize aliased parsers in omnifunc, query linter
  * tui: Remove duplicate disabling of synchronized output
  * tui: Move $COLORTERM check to _defaults.lua
  * tui: Skip TUI in ui_rgb_attached
  * ui: Flush ext_cmdline events before doing cmdpreview
  * ui: Superfluous showmode / excessive grid_cursor_goto
  * ui: Avoid ambiguity about last chunk when flushing halfway
  * version: Fix vim.version().prerelease
  * vim.text: Remove assert from vim.text.hexdecode
  * win-msi: Add bin to PATH per-machine after installation
- Documentation
  * Update LSP quickstart
  * Misc
  * Document 'list' behavior when 'listchars' excludes &quot;tab&quot;
  * Fix more treesitter parsing errors
  * Misc
  * lpeg: Merge upstream changes
  * lsp: Format the handwritten part
* Refactor
  * Replace deprecated vim.loop with vim.uv
  * lsp: Reuse buf_detach_client logic in on_detach
  * path.c: Add nonnull attributes
  * tests: Use more global highlight definitions
  * tests: More global highlight definitions
</comment>
    <requestid>1191018</requestid>
  </revision>
  <revision rev="65" vrev="2">
    <srcmd5>79967a552fae8d3ee775e8f47037cae3</srcmd5>
    <version>0.10.1</version>
    <time>1723803810</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1194028</requestid>
  </revision>
  <revision rev="66" vrev="3">
    <srcmd5>6fa73fa61497ff3889d70bd65a29ecce</srcmd5>
    <version>0.10.1</version>
    <time>1726995967</time>
    <user>anag+factory</user>
    <comment>- fix the post scriptlet (forwarded request 1202252 from rrahl0)</comment>
    <requestid>1202253</requestid>
  </revision>
  <revision rev="67" vrev="1">
    <srcmd5>620f31830f642aa73b55d21ff1845f35</srcmd5>
    <version>0.10.2</version>
    <time>1728054663</time>
    <user>anag+factory</user>
    <comment>- Update to 0.10.2
- Features
 * jumplist: Allow opting out of removing unloaded buffers (#30419)
- Bug Fixes
 * api: Error properly with invalid field in nvim_open_win (#30078)
 * api: Nvim_buf_get_text() crashes with large negative column #28740
 * api: Fix crash/leak with float title/footer on error (#30543)
 * channel: Handle writing to file instead of pipe (#30520)
 * column: Set signcolumn width after splitting window (#30556)
 * completion: Don't include &lt;Lua function&gt; in -complete= (#30209)
 * decor: Don't use separate DecorSignHighlight for url (#30096)
 * decor: Exclude invalid marks from meta total
 * diagnostics: Don't apply extmarks to invalid lines #29321
 * diff: Use mmfile_t in linematch
 * filetype: Handle .in files with no filename (#30487)
 * float: Properly find last window of tabpage (#30571)
 * health: Fix pyenv root and python exepath detect issue
 * health: Return correct name from 'path2name()'
 * lsp: Don't send foreign diagnostics to servers in buf.code_action (#29501)
 * lsp: Avoid reusing diagnostics from different servers in actions (#30002)
 * lsp: Return call hierarchy item, not the index (#30145)
 * lsp: Handle out-of-bounds character positions #30288
 * lsp: Handle encoding bounds in str_utfindex_enc
 * lsp: Handle nil bytes in strings
 * lua: Ignore stdout and stderr for xdg-open
 * man: Avoid setting v:errmsg (#30052)
 * man: Check if buffer is valid before restoring 'tagfunc' (#30180)
 * regexp: Fix typo in E888 error message (#30161)
 * runtime: Sync bundled treesitter queries
 * runtime: Sync bundled treesitter queries (forwarded request 1205561 from mvyskocil)</comment>
    <requestid>1205619</requestid>
  </revision>
  <revision rev="68" vrev="2">
    <srcmd5>e5ade2f2c50e296732b890a564d0ade0</srcmd5>
    <version>0.10.2</version>
    <time>1734262667</time>
    <user>anag+factory</user>
    <comment>- now that s390x has tree-sitter, we can remove make-tree-sitter-optional.patch (forwarded request 1230959 from rrahl0)</comment>
    <requestid>1230960</requestid>
  </revision>
  <revision rev="69" vrev="1">
    <srcmd5>03c04648f21520e58dffe39e48d20795</srcmd5>
    <version>0.10.3</version>
    <time>1734969273</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1233145</requestid>
  </revision>
  <revision rev="70" vrev="1">
    <srcmd5>121c3271d9a67cc398447c0fa8c83746</srcmd5>
    <version>0.10.4</version>
    <time>1738245131</time>
    <user>anag+factory</user>
    <comment>- Update to 0.10.4
- Bug Fixes
 * checkhealth: Failed if 'lua' in plugin name
 ...
- Packaging changes:
 * add a %check section with make oldtest
 * require tree-sitter module vimdoc for a build
 * add 0001-neovim-0.10.4-install-treesitter-vimdoc.patch ensuring
   tested nvim has installed tree sitter plugin enabled. (forwarded request 1241216 from mvyskocil)</comment>
    <requestid>1241252</requestid>
  </revision>
</revisionlist>
