-------------------------------------------------------------------
Wed Jun 18 12:25:55 UTC 2025 - rguenther@suse.com

- Update to version 1.0+git.20240904.a0c1fff: [bsc#1244683]
  * Auto packing the repository in background for optimum performance.
  * See "git help gc" for manual housekeeping.
  * as: Switch to standard formatting of guard predicates
  * as: Make processing of guard predicates idempotent
  * Add 'test/as/guard_predicates-1.test'
  * as: Make order of symbol emission deterministic
  * as: Only 'symbol_hash_lookup' 'def_token' if we're actually using it
  * Add 'test/as/order-2.test'
  * Rename 'test/as/order-1.test' artifacts
  * as: Don't keep 'sym' in 'Stmt'
  * as: Get rid of global variables 'Stmt *decls', 'Stmt *fns'
  * as, ld, nm: Use a constant for "initial symbol table size"
  * as: Strengthen static typing in 'symbol_hash_lookup'
  * as: C++-ify writing to the output file
  * as: Don't call 'fatal_error' from 'output_symbol'
  * as: Don't call 'fatal_error' from 'parse_file'
  * as: Don't call 'fatal_error' from 'verify_preamble'
  * as: Don't call 'fatal_error' from 'tokenize'
  * as: Move "Minimalistic verification of the preamble as generated by GCC" into a separate function
  * C++-ify: 'fatal_error'
  * Add 'test/as/circular_reference.test'
  * Add 'test/as/parser-expected_identifier.test' [#19]
  * Add 'test/as/tokenizer-non-ascii.test' [#19]
  * Add 'test/as/invoke-1.test'
  * ld: Diagnose multiple definitions
  * ld, nm: Some support for "weak" symbols
  * Add 'test/nm/sort-2.test'
  * ld: Implement '--ignore-unresolved-symbol SYMBOL'
  * ld: Every 'included' symbol must have a 'def'
  * ld: Make explicit the context if which 'process_refs_defs' is called
  * ld: Turn 'process_refs_defs' logic inside out
  * ld: First 'process_refs_defs', then write the output file
  * ld: Tell how we're resolving unresolved symbols
  * ld: Handle 'inputfiles' via 'unresolved' symbols
  * ld, nm: Clarify terminology: context if which 'process_refs_defs' is called
  * Update Copyright notes, to reflect reality
  * Remove "Contributed by [...]" lines from source files
  * C++-ify: use 'std::cout', 'std::cerr' for diagnostics
  * Support '--enable-werror-always' to enable '-Werror'
  * Build with '-Wall -Wextra', if supported
  * Import 'config/warnings.m4' from GCC
  * Import 'config/ax_cxx_compile_stdcxx.m4' from GCC: Update 'config/ChangeLog'
  * Update imported files: GCC, 2024-04-26 [#1]
  * ld: Polish resolving
  * Harden 'test/nm/truncated_marker_line-1.test'
  * ld: Use standard search order for unresolved symbols
  * ld, nm: Polish 'ptx' scanning in 'process_refs_defs'
  * ld, nm: Error out for "truncated marker line"
  * Add 'test/ld/resolve-1.test'
  * ld, nm: Document 'process_refs_defs'
  * ld: Rename 'file_hash_entry *f' to 'fhe' etc.
  * Don't 'typedef' 'enum's and 'struct's
  * ld: Global constructor/destructor support: Restore GCC 4.8 build

-------------------------------------------------------------------
Fri May 31 13:48:51 UTC 2024 - rguenther@suse.com

- Update to version 1.0+git.20240530.96f8fc5:
  * ld: Global constructor/destructor support
  * Build in C++11 mode
  * Import 'config/ax_cxx_compile_stdcxx.m4' from GCC
  * Replace 'nvptx-none-run-single' with a locking mechanism in 'nvptx-none-run.exp'
  * Change github.com/MentorEmbedded to github.com/SourceryTools

-------------------------------------------------------------------
Tue May 07 12:46:17 UTC 2024 - rguenther@suse.com

- Update to version 1.0+git.20240419.9962793:
  * as: Document current handling of '//:IND_FUNC_MAP' [#45]
  * Handle ":IND_FUNC_MAP" in nvptx-as to ensure map-directive order is kept
  * Handle --hash-style argument in nvptx-ld

-------------------------------------------------------------------
Tue Sep 26 07:13:08 UTC 2023 - rguenther@suse.com

- Update to version 1.0+git.20230913.c321f1a:
  * as: Allow for arbitrary number of tokens in a 'stmt'
  * Ensure :VAR_MAP and :FUNC_MAP are output in order, part II [#29]
  * Ensure :VAR_MAP and :FUNC_MAP are output in order: add more test cases [#29]
  * as: Pass 'Vis' into 'parse_line_nosemi'
  * as: Inline 'alloc_comment'
  * as: When tokenizing a block comment, don't lose a preceding end of line marker
  * as: Add 'test/as/block_comment-1.test'
  * Bump architecture baseline from sm_35 to sm_50 [#30]
  * as: Remove unused 'FUNC_MAP', 'VAR_MAP' scanning
  * as: Clean up 'symbol's via C++ destructor
  * Enable 'test/as/ptxas/missing-1.test' also if 'ptxas' is available
  * Adjust for 'pex_run' error message change in "Update imported files: GCC, 2018-10-29 [#1, #42]"
  * Update imported files: GCC, 2023-06-16 [#1, #42]
  * Update imported files: GCC, 2022-05-18, II [#1, #42]
  * Update imported files: GCC, 2022-05-18 [#1, #42]
  * Update imported files: GCC, 2022-04-06 [#1, #42]
  * Update imported files: GCC, 2022-03-20 [#1, #42]
  * Switch to Autoconf 2.69, Automake 1.15.1 [#42]
  * Update imported files: GCC, 2018-10-31 [#1, #42]
  * Update imported files: GCC, 2018-10-29 [#1, #42]
  * Update imported files: GCC, 2016-07-29 [#1, #42]
  * Update imported files: GCC, 2014-05-01 [#1, #42]
  * Note "Imported Files" in 'README-development' [#1]
  * Add 'move-if-change' [#1]
  * Remove 'acinclude.m4'
  * Don't use 'gcc_AC_PROG_INSTALL'; use standard 'AC_PROG_INSTALL'
  * Don't use 'gcc_AC_PROG_LN_S'; assume that 'ln -s' does work
  * Have 'aclocal.m4' be "generated automatically by aclocal"
  * Move 'ACX_PKGVERSION', 'ACX_BUGURL' into 'config/acx.m4'
  * Regenerate 'configure'
  * Ensure :VAR_MAP and :FUNC_MAP are output in order

-------------------------------------------------------------------
Fri Jul 21 12:00:05 UTC 2023 - rguenther@suse.com

- Update to version 1.0+git.20230718.bbb6fe6:
  * Document "Program Instrumentation: Sanitizers" in 'README-development'
  * run: Move 'cuModuleGetFunction' for '__main' out of 'compile_file'
  * run: Plug 'compile_file' memory leaks
  * run: Localize 'cuda_lib'
  * as: Localize 'collect_wait'
  * as: Don't 'unlink (NULL)'
  * as: Don't use an obstack for 'ptxas' invocation [#1]
  * ld: Remove unused '#include "obstack.h"' [#1]
  * ld, nm: Stop 'using namespace std;'
  * run: For auto '--stack-size', consider free instead of total device memory [#8]
  * ld: Support archives appearing as input files
  * ld: Don't reject empty archives
  * ld: Make resolving of '-l'ibraries a separate step
  * ld: Verify no NUL-separated parts for 'process_refs_defs'
  * ld: Fix undefined behavior reading objects from archives
  * ld: Document padding of objects in archives
  * as: Plug 'alloc_stmt' memory leak
  * as: Plug 'read_file' memory leak
  * as: Plug 'tokenize' memory leak
  * as: Conceptually simplify capture of preamble '.target' directive's argument
  * 'test/GLOBAL_FUNCTION_DECL_f.s': 'f' is '.extern', not '.visible' [#38]

-------------------------------------------------------------------
Tue Mar 21 21:44:49 UTC 2023 - mliska@suse.cz

- Start using tar_scm OBS server for a tarball.
- Update to version 1.0+git.20230122.93e0090:
  * nm: '#define __STDC_FORMAT_MACROS' for '#include <inttypes.h>' [#40]
  * 'nm'
  * ld: Clean up the 'symbol_table' when we're done
  * as: Clean up the 'symbol_table' when we're done
  * ld: Clean up 'file_hash_entry' instances when we're done with the 'symbol_table'
  * as: Always 'free' the 'tok_preamble_target_arg'-deduced 'target_arg' string after 'ptxas' verification
  * as: 'obstack_free' after 'ptxas' verification
  * run: Close files after use

-------------------------------------------------------------------
Thu Oct 13 09:34:42 UTC 2022 - Richard Biener <rguenther@suse.com>

- Update nvptx-tools tarball from git
  * includes changes in nvptx-tools.patch
  * deals with CUDA 11 dropping support for NVIDIA Kepler sm_30 and sm_32
- Remove nvptx-tools.patch as it is included in the above tarball update
- Package nvptx-none-run and nvptx-none-run-single tools

-------------------------------------------------------------------
Wed Jun  3 12:02:34 UTC 2020 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Enable build on aarch64

-------------------------------------------------------------------
Tue Sep  5 07:03:59 UTC 2017 - rguenther@suse.com

- Update nvptx-tools.patch to check for getopt to avoid providing
  an incompatible declaration.

-------------------------------------------------------------------
Mon Feb  6 14:56:34 UTC 2017 - jengelh@inai.de

- Update description

-------------------------------------------------------------------
Mon Feb  6 11:18:26 UTC 2017 - rguenther@suse.com

- Package COPYING3.

-------------------------------------------------------------------
Thu Jan 26 11:30:32 UTC 2017 - rguenther@suse.com

- Initial version.
- Add nvptx-tools.patch to avoid errors when ptxas is not available.

