-------------------------------------------------------------------
Sun Oct 25 14:50:56 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.0.2
  * Add `ncvisual_decode_loop()`, which returns to the first frame
    upon reaching the end of a file.

-------------------------------------------------------------------
Mon Oct 19 07:31:58 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.0.1
  * Add ncmenu_item_set_status() for disabling or enabling menu
    items.
    + Disabled menu items cannot be selected.
    + Menu sections consisting only of disabled items are
      themselves disabled, and cannot be unrolled.
  * Add ncinput_equal_p() for comparison of ncinput structure data.
    ncmenu_offer_input() now recognizes the shortcuts for
    registered sections, and will unroll the appropriate section
    when given input.
  * Added notcurses_stddim_yx_const() (notcurses_stddim_yx() const
    form).

- Update to version 2.0.0
  * API STABILITY! The API expressed in 2.0.0 will be maintained
    throughout at least 2.x.x. A program compiled against 2.0.0
    will continue to compile and function properly against all
    2.x.x releases. Thanks for putting up with the freewheeling
    API breakage until now.
  * NOTCURSES_VERSION_{MAJOR, MINOR, PATCH, TWEAK} are now
    available from notcurses/version.h. These represent the
    version your program was compiled against. The version your
    program is linked to can still be acquired with
    notcurses_version_components() (or as a human-readable string
    via notcurses_version()).

-------------------------------------------------------------------
Sat Oct 10 08:28:17 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.7.6
  * `ncstats` added the new stats `writeout_ns`, `writeout_min_ns`,
    and `writeout_max_ns`. The `render_*ns` stats now only cover
    the rendering and rasterizing process. The `writeout*ns` stats
    cover the time spent writing data out to the terminal.
    `notcurses_render()` involves both of these processes.
  * `notcurses_render_to_buffer()` has been added, allowing user
    control of the process of writing frames out to the terminal.
  * `notcurses_stats_alloc()` has been added, to allocate an
    `ncstats` object.  `notcurses_reset_stats()` has been renamed
    `notcurses_stats_reset()`.
  * Two flags have been defined for `ncdirect_init()`:
    `NCDIRECT_OPTION_INHIBIT_SETLOCALE` and
    `NCDIRECT_OPTION_INHIBIT_CBREAK`.
    The former is similar to `NCOPTION_INHIBIT_SETLOCALE`. The
    latter keeps `ncdirect_init()` from touching the termios and
    entering cbreak mode.
  * The C++ wrapper `Ncplane::putwc()` has been renamed
    `Ncplane::putwch()`, so as not to clash with standard
    libraries implementing `putwc()` as a macro.

-------------------------------------------------------------------
Tue Sep 29 20:05:54 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.7.5
  * `ncreel_destroy()` now returns `void` rather than `int`.
  * `nctablet_ncplane()` has been renamed `nctablet_plane()`.
  * The standard plane now has the name `std`.
  * Removed long-deprecated `ncplane_set_attrs()` and
    `ncplane_attrs()`.
  * Renamed `ncplane_styles_*()` to `ncplane_*_styles()`, to
    conform with every other `ncplane_set_*()` function, but
    retained the old versions as (deprecated) aliases.
  * Renamed `cell_styles_*()` to `cell_*_styles()`, to conform with
    every other `cell_set_*()` function. Since these were inline
    functions, I've not bothered to retain the old versions.
- Update to version 1.7.4
  * All `_rgb_clipped()` functions have been renamed
   `_rgb8_clipped()`, to match the changes made in 1.7.2.
  * `ncplane_create()` has been introduced, taking a
    `struct ncplane_options` parameter. This replaces
    `ncplane_aligned()`, and will replace `ncplane_new()`. The
    latter ought be considered deprecated, and will be removed in
    the future. To align a place as previously done with
    `ncplane_aligned()`, use the `NCPLANE_OPTION_HORALIGNED` flag.
  * The `ncplane_options` struct includes a function pointer
    member, `resizecb`. If not `NULL`, this function will be
    called after the parent plane is resized.
    See `notcurses_plane.3` for more information.
  * `ncplane_resize_realign()` has been added, suitable for use as
    a `resizecb`. It realigns the plane against its parent.
  * `NCCHANNEL_ALPHA_MASK` has been renamed `CHANNEL_ALPHA_MASK`,
    to match the other declarations.
- Update to version 1.7.3
  * API changes pursuant to 2.0 API finalization:
  * `mbswidth()` has been renamed `ncstrwidth()`.
  * The long-promised/dreaded Great Widget Review, normalizing
    behavior across all widgets, has been effected. Sorry, there
    was no getting around this one. Pretty much all widgets have
    slightly changed, because pretty much all widgets previously
    behaved slightly differently:
    + `ncselector_create()` and `ncmultiselector_create()` now
      take ownership of the provided `ncplane`. On an error in
      these functions, the `ncplane` will be destroyed. Otherwise,
      the `ncplane` is destroyed by `ncselector_destroy()` or
      `ncmultiselector_destroy()`.
    + `ncselector_create()`, `ncmultiselector_create()`, and
      `ncreader_create()` no longer accept `int y, int x` placement
      parameters. Just place the `ncplane`.
    + `ncselector_options`, `ncmultiselector_options`, and
      `ncreel_options` have lost their `bgchannels` members. Just
      set the base character for the `ncplane`.
    + `ncreader_options` has lost its `echannels`, `eattrword`,
      `egc`, `physrows`, and `physcols` fields. Just set the base
      character and size for the `ncplane`.
  * Functions which set a 24-bit RGB value have had the suffix `g`
    replaced with `g_rgb`. Functions which set three 8-bit RGB
    components have had the suffix `rgb` replaced with `rgb8`.
    This was done because e.g.
    `channels_set_fg()` and `channels_set_fchannel()` were
    indistinguishable on sight. Failure to make the necessary
    conversions will result in compiler errors.
  * Functions ending in `_stainable()` now end in `_stained()`.
  * `ncplane_putwc_stained()` and `ncplane_putwstr_stained()` have
    been added in the interest of orthogonality.
  * `ncplane_new_named()` has been eliminated. `ncplane_new()` now
    takes a `const char* name` argument. `ncplane_bound()` and
    `ncplane_bound_named()` have both been eliminated.
    `ncplane_new()` now accepts an `ncplane*` instead of a
    `notcurses*`. All functionality exposed by the removed
    functions is thus now present in `ncplane_new()`.
  * `ncplane_aligned_named()` has been removed. `ncplane_aligned()`
    now accepts a `const char* name` argument.
- Update to version 1.7.2
  * Exported `ncvisual_default_blitter()`, so that the effective
    value of `NCBLIT_DEFAULT` can be determined.
  * Added `NCREADER_OPTION_CURSOR`, instructing the `ncreader` to
    make the terminal cursor visible, and manage the cursor's
    placement.

-------------------------------------------------------------------
Thu Sep 10 18:39:19 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.7.2
  * Exported `ncvisual_default_blitter()`, so that the effective
    value of `NCBLIT_DEFAULT` can be determined.
  * Added `NCREADER_OPTION_CURSOR`, instructing the `ncreader` to
    make the terminal cursor visible, and manage the cursor's
    placement.

-------------------------------------------------------------------
Tue Sep  1 05:58:46 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.7.1
  * Renamed `CELL_SIMPLE_INITIALIZER` to `CELL_CHAR_INITIALIZER`,
    and `cell_load_simple()` to `cell_load_char()`.
  * Renamed `ncplane_putsimple()` to `ncplane_putchar()`,
    `ncplane_putsimple_stainable()` to `ncplane_putchar_stainable()`,
    and `ncplane_putsimple_yx()` to `ncplane_putchar_yx()`.

-------------------------------------------------------------------
Mon Aug 31 13:19:40 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Run unittest

-------------------------------------------------------------------
Mon Aug 31 06:49:27 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.7.0
  * Added `notcurses_ucs32_to_utf8()` conversion helper.
  * `ncdirect_init()` now takes a third `uint64_t flags` parameter.
    No flags have been defined, and this parameter ought be set
    to 0.

-------------------------------------------------------------------
Sun Aug 30 08:21:56 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.6.20
  * Added convenience functions `ncplane_y()` and `ncplane_x()`,
    components of longstanding `ncplane_yx()`.
  * `ncreel` functions now generally call `ncreel_redraw()`
    themselves. This includes `ncreel_add()`, `ncreel_del()`,
    `ncreel_next()`, and `ncreel_prev()`. `ncreel_redraw()` need
    only be called to update tablets.
  * In order to conform with CMake naming conventions, our CMake
    package is now accessed as "Notcurses" rather than "notcurses".

-------------------------------------------------------------------
Fri Aug 28 18:40:02 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.6.19
  * among other things, fixes numerous subtle bugs on big-endian
    architectures resulting from EGC inlining.

-------------------------------------------------------------------
Thu Aug 27 15:07:24 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Use pkg-config style BR for libavutil

-------------------------------------------------------------------
Thu Aug 27 11:56:01 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.6.18.2

-------------------------------------------------------------------
Sun Jun 21 09:50:12 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Initial package, version 1.5.2
