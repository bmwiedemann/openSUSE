From dff965465ca9d9c4edaf0f90eadd9a6de335b354 Mon Sep 17 00:00:00 2001
From: Niklas Schnelle <schnelle@linux.ibm.com>
Date: Fri, 6 Dec 2024 15:28:08 +0100
Subject: [PATCH] opticsmon: Fix runaway loop in on_link_change()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

When on_link_change() gets called with a netdev that would be monitored
but hasn't entered zpci_list yet, reloads is 1 after the loops and
a reload occurs. Then the netdev is found in the list and reloads
becomes -1 which incorrectly triggers more reloads until underflow.
Fix this by returning once the device is found. Also just check for
reloads being larger than zero.

Fixes: c34adb9cabee ("opticsmon: Introduce opticsmon tool")
Reviewed-by: Halil Pasic <pasic@linux.ibm.com>
Signed-off-by: Niklas Schnelle <schnelle@linux.ibm.com>
Signed-off-by: Jan HÃ¶ppner <hoeppner@linux.ibm.com>
---
 opticsmon/opticsmon.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/opticsmon/opticsmon.c b/opticsmon/opticsmon.c
index c2f355e2..50dd8d7f 100644
--- a/opticsmon/opticsmon.c
+++ b/opticsmon/opticsmon.c
@@ -280,16 +280,15 @@ void on_link_change(struct zpci_netdev *netdev, void *arg)
 	if (!ctx->zpci_list || util_list_is_empty(ctx->zpci_list))
 		zpci_list_reload(&ctx->zpci_list);
 
-reload:
+find:
 	util_list_iterate(ctx->zpci_list, zdev) {
 		for (i = 0; i < zdev->num_netdevs; i++) {
 			if (!strcmp(zdev->netdevs[i].name, netdev->name)) {
-				reloads--;
 				/* Skip data collection if operational state is
 				 * unchanged
 				 */
 				if (zdev->netdevs[i].operstate == netdev->operstate)
-					continue;
+					return;
 				/* Update operation state for VFs even though
 				 * they are skipped just for a consistent view
 				 */
@@ -297,14 +296,15 @@ void on_link_change(struct zpci_netdev *netdev, void *arg)
 				/* Only collect optics data for PFs */
 				if (!zpci_is_vf(zdev))
 					dump_adapter_data(ctx, zdev);
+				return;
 			}
 		}
 	}
 	/* Might be a new device, reload list of devices and retry */
-	if (reloads) {
+	if (reloads > 0) {
 		zpci_list_reload(&ctx->zpci_list);
 		reloads--;
-		goto reload;
+		goto find;
 	}
 }
 
