Subject: [PATCH] [FEAT VS1804] zipl: Make use of __noreturn macro
From: Marc Hartmayer <mhartmay@linux.ibm.com>

Summary:     genprotimg: Introduce new tool for the creation of PV images
Description: genprotimg takes a kernel, host-key documents, optionally an
             initrd, optionally a file with the kernel command line, and it
             generates a single, loadable image file. The image consists of a
             concatenation of a plain text boot loader, the encrypted
             components for kernel, initrd, and cmdline, and the
             integrity-protected PV header, containing metadata necessary for
             running the guest in PV mode. It's possible to use this image file
             as a kernel for zIPL or for a direct kernel boot using QEMU.
Upstream-ID: 86856f98dbe3f68e34b91b58e9fc92f7cdc8a0d4
Problem-ID:  VS1804

Upstream-Description:

             zipl: Make use of __noreturn macro

             Signed-off-by: Philipp Rudo <prudo@linux.ibm.com>
             Reviewed-by: Stefan Haberland <sth@linux.ibm.com>
             Signed-off-by: Jan HÃ¶ppner <hoeppner@linux.ibm.com>


Signed-off-by: Marc Hartmayer <mhartmay@linux.ibm.com>
---
 zipl/boot/libc.c |    4 +++-
 zipl/boot/libc.h |    2 +-
 2 files changed, 4 insertions(+), 2 deletions(-)

--- a/zipl/boot/libc.c
+++ b/zipl/boot/libc.c
@@ -11,6 +11,8 @@
 
 #include <stdarg.h>
 
+#include "lib/zt_common.h"
+
 #include "error.h"
 #include "libc.h"
 #include "sclp.h"
@@ -511,7 +513,7 @@ void initialize(void)
 /*
  * Load disabled wait PSW with reason code in address field
  */
-void libc_stop(unsigned long reason)
+void __noreturn libc_stop(unsigned long reason)
 {
 	struct psw_t psw;
 
--- a/zipl/boot/libc.h
+++ b/zipl/boot/libc.h
@@ -60,7 +60,7 @@ char *strcpy(char *, const char *);
 unsigned long get_zeroed_page(void);
 void free_page(unsigned long);
 void initialize(void);
-void libc_stop(unsigned long) __attribute__((noreturn));
+void libc_stop(unsigned long);
 void start(void);
 void pgm_check_handler(void);
 void pgm_check_handler_fn(void);
