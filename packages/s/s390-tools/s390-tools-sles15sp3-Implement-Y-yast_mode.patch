From eabcb26fa4a91d410a6f75a9915a9ebb9f702c6b Mon Sep 17 00:00:00 2001
From: Hannes Reinecke <hare@suse.de>
Date: Fri, 6 Oct 2017 09:55:40 +0200
Subject: [PATCH] dasdfmt: Implement '-Y/--yast_mode'

Implement an option '-Y' to suppress most output.

Signed-off-by: Hannes Reinecke <hare@suse.com>
---
 dasdfmt/dasdfmt.8 |    7 ++++-
 dasdfmt/dasdfmt.c |   73 ++++++++++++++++++++++++++++++++++++++++++++++++------
 2 files changed, 72 insertions(+), 8 deletions(-)

--- a/dasdfmt/dasdfmt.8
+++ b/dasdfmt/dasdfmt.8
@@ -7,7 +7,7 @@
 dasdfmt \- formatting of DASD (ECKD) disk drives.
 
 .SH SYNOPSIS
-\fBdasdfmt\fR [\-h] [\-t] [\-v] [\-y] [\-p] [\-Q] [\-P] [\-m \fIstep\fR]
+\fBdasdfmt\fR [\-h] [\-t] [\-v] [\-y] [\-p] [\-Q] [\-P] [\-Y] [\-m \fIstep\fR]
 .br
         [\-r \fIcylinder\fR] [\-b \fIblksize\fR] [\-l \fIvolser\fR] [\-d \fIlayout\fR]
 .br
@@ -112,6 +112,11 @@
 .br
 
 .TP
+\fB-Y\fR or \fB--yast_mode\fR
+YaST mode; suppress most output.
+.br
+
+.TP
 \fB\-M\fR \fImode\fR or \fB\-\-mode\fR=\fImode\fR
 Specify the \fImode\fR to be used to format the device. Valid modes are:
 .RS
--- a/dasdfmt/dasdfmt.c
+++ b/dasdfmt/dasdfmt.c
@@ -83,6 +83,7 @@
 	int   ese;
 	int   no_discard;
 	int   procnum;
+	int   yast_mode;
 } g = {
 	.dasd_info = { 0 },
 };
@@ -172,6 +173,10 @@
 		.option = { "percentage", no_argument, NULL, 'Q' },
 		.desc = "Show progress in percent",
 	},
+	{
+		.option = { "yast_mode", no_argument, NULL, 'Y' },
+		.desc = "YaST mode",
+	},
 	UTIL_OPT_SECTION("MISC"),
 	{
 		.option = { "check_host_count", no_argument, NULL, 'C' },
@@ -318,7 +323,9 @@
 	}
 
 	if (g.print_hashmarks && (cyl / g.hashstep - hashcount) != 0) {
-		printf("%d|", g.procnum);
+		if (g.yast_mode)
+			printf("%d|", g.procnum);
+		else printf("#");
 		fflush(stdout);
 		hashcount++;
 	}
@@ -392,7 +399,7 @@
 	unsigned int kl = 0;
 	int blksize = cdata->expect.blksize;
 
-	if (g.print_progressbar || g.print_hashmarks)
+	if ((g.print_progressbar || g.print_hashmarks) && !g.yast_mode)
 		printf("\n");
 
 	/*
@@ -780,8 +787,9 @@
 			g.hashstep = 10;
 		}
 
-		printf("Printing hashmark every %d cylinders.\n",
-		       g.hashstep);
+		if (!g.yast_mode)
+			printf("Printing hashmark every %d cylinders.\n",
+			       g.hashstep);
 	}
 }
 
@@ -1462,17 +1470,19 @@
 			break;
 		}
 
-		printf("Finished formatting the %s device.\n", g.dev_path);
+		if (!g.yast_mode)
+			printf("Finished formatting the %s device.\n", g.dev_path);
 
 		if (!(g.writenolabel || mode == EXPAND))
 			dasdfmt_write_labels(vlabel, cylinders, heads);
 
-		printf("Rereading the partition table for %s... ", g.dev_path);
+		if (!g.yast_mode)
+			printf("Rereading the partition table for %s... ", g.dev_path);
 		err = dasd_reread_partition_table(g.dev_node, 5);
 		if (err != 0) {
 			ERRMSG("%s: error during rereading the partition "
 			       "table: %s.\n", prog_name, strerror(err));
-		} else {
+		} else if (!g.yast_mode) {
 			printf("ok\n");
 		}
 	}
@@ -1548,6 +1558,7 @@
 		error("%s", str);
 
 	set_geo(&cylinders, &heads);
+
 	set_label(&vlabel, &format_params, cylinders);
 
 	if (g.check)
@@ -1557,6 +1568,29 @@
 
 }
 
+static void yast_print_cylinfo(const char *dev_filename)
+{
+	unsigned int cylinders = -1u;
+	int fd;
+	dasd_information2_t dasd_info;
+	struct dasd_eckd_characteristics *characteristics;
+
+	fd = open(dev_filename, O_RDONLY);
+	if ((fd != -1) && ( ! ioctl(fd, BIODASDINFO2, &dasd_info))) {
+
+		characteristics = (struct dasd_eckd_characteristics *) &dasd_info.characteristics;
+		if (characteristics->no_cyl == LV_COMPAT_CYL && characteristics->long_no_cyl)
+			cylinders = characteristics->long_no_cyl;
+		else
+			cylinders = characteristics->no_cyl;
+	}
+
+	if (fd != -1)
+		close(fd);
+	printf("%u\n", cylinders);
+	fflush(stdout);
+}
+
 int main(int argc, char *argv[])
 {
 	volume_label_t vlabel;
@@ -1693,6 +1727,10 @@
 		case OPT_NODISCARD:
 			g.no_discard = 1;
 			break;
+		case 'Y':
+			/* YaST mode */
+			g.yast_mode = 1;
+			break;
 		case 'P':
 			max_parallel = atoi(optarg);
 			break;
@@ -1728,6 +1766,21 @@
 		reqsize = DEFAULT_REQUESTSIZE;
 	}
 
+/* If -Y (YaST mode) was specified by the caller, then we need to suppress
+ * most of all the other output that might be generated. But, we _do_ want
+ * hashmarks printed so that YaST can track what's going on. If it wasn't
+ * specified on the command line, set it to a default of 10 cylinders.
+ */
+	if (g.yast_mode) {
+		g.verbosity = 0;
+		g.print_progressbar = 0;
+		g.print_percentage = 0;
+		if (! g.print_hashmarks) {
+			g.print_hashmarks = 1;
+			hashstep_str = "10";
+		}
+	}
+
 	if (g.print_hashmarks)
 		PARSE_PARAM_INTO(g.hashstep, hashstep_str, 10, "hashstep");
 
@@ -1747,6 +1800,12 @@
 	if (numdev > 1 && g.labelspec)
 		error("Specifying a volser to be written doesn't make sense when formatting multiple DASD volumes.");
 
+	if (g.yast_mode) {
+		for (numproc = 0; numproc < numdev; numproc++)
+			yast_print_cylinfo(g.dev_path_array[numproc]);
+
+	}
+
 	for (numproc = 0; numproc < numdev; numproc++) {
 		chpid = fork();
 		if (chpid == -1 )
