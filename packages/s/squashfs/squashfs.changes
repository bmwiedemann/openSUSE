-------------------------------------------------------------------
Mon Oct 21 13:45:56 UTC 2019 - Philipp Seiler <p.seiler@linuxmail.org>

- Version 4.4 - 2019-08-29:
 * Reproducible builds, new compressors,
   CVE fixes, security hardening and new options
   for Mksquashfs/Unsquashfs.

- Overall improvements:
 * Mksquashfs now generates reproducible images by default.
 * Mkfs time and file timestamps can also be specified.
 * Support for the Zstandard (ZSTD) compression algorithm.
 * CVE-2015-4645 and CVE-2015-4646 have been fixed.

- Mksquashfs improvements and major bug fixes:
 * Pseudo files now support symbolic links.
 * New -mkfs-time option.
 * New -all-time option.
 * New -root-mode option.
 * New -quiet option.
 * New -noId option.
 * New -offset option.
 * Update lz4 wrapper to use new functions introduced
   in 1.7.0.
 * Bug fix, don't allow "/" pseudo filenames.
 * Bug fix, allow quoting of pseudo files, to
   better handle filenames with spaces.
 * Fix compilation with glibc 2.25+.

- Unsquashfs improvements and major bug fixes:
 * CVE-2015-4645 and CVE-2015-4646 have been fixed.
 * Unsquashfs has been further hardened against corrupted
   filestems.
 * Unsquashfs is now more strict about error handling.
 * New -ignore-errors option.
 * New -strict-errors option.
 * New -lln[umeric] option.
 * New -lc option.
 * New -llc option.
 * New -mkfs-time option.
 * New -UTC option.
 * New -offset option.
 * New -quiet option.
 * Update lz4 wrapper to use new functions introduced
   in 1.7.0.
 * Bug fix, fatal and non-fatal errors now set the exit
   code to 1.
 * Bug fix, fix time setting for symlinks.
 * Bug fix, try to set sticky-bit when running as a
   user process.
 * Fix compilation with glibc 2.25+.

- build changes:
* re-created patches to fit squashfs 4.4
* removed 0001-mksquashfs-fix-rare-race-in-fragment-waiting-in-file.patch
  (new version includes this change)
* removed 0002-Fix-2GB-limit-of-the-is_fragment-.-function.patch
  (new version includes this change)
* removed 0003-Add-offset-function-to-skip-n-bytes.patch
  (new version includes this change)
* removed sysmacros.patch
  (new version includes this change)

-------------------------------------------------------------------
Wed Jun  5 20:21:30 UTC 2019 - Philipp <p.seiler@linuxmail.org>

-  Add -offset function to skip n bytes at the beginning of the squashfs…
   https://github.com/plougher/squashfs-tools/commit/5a498ad24dcfeac9f3d747e894f22901f3ac10
   (0003-Add-offset-function-to-skip-n-bytes.patch)

-------------------------------------------------------------------
Wed Apr 24 17:41:17 UTC 2019 - Martin Liška <mliska@suse.cz>

- Disable LTO (boo#1133284).

-------------------------------------------------------------------
Thu Mar 21 00:00:00 CET 2019 - dsterba@suse.cz

- Use | instead of / that can be part of -L or -I options.

-------------------------------------------------------------------
Wed Mar 20 15:51:14 UTC 2019 - Dominique Leuenberger <dimstar@opensuse.org>

- Use / as sed command delimiter. Comma can actually show up in
  optflags (think -Wl,…), which then breaks the sed command line
  parsing.

-------------------------------------------------------------------
Wed Aug  1 14:36:31 UTC 2018 - schwab@suse.de

- sysmacros.patch: Include <sys/sysmacros.h> for major/minor/makedev

-------------------------------------------------------------------
Thu Jun 16 15:18:06 UTC 2016 - duwe@suse.com

- Machines with 1024 processors or more reach the limit of maximum
  file descriptors (bsc#984136). Other limits apply that may be
  hit for no good reason. Simply limit the number of used threads
  to an arbitrary number, squashfs-thread-limit.

-------------------------------------------------------------------
Thu Jan 21 16:45:45 UTC 2016 - dmueller@suse.com

- fix build for SLE12 and older

-------------------------------------------------------------------
Thu Nov  5 08:29:56 UTC 2015 - seife+obs@b1-systems.com

- add patches to fix eventual file corruption (boo#953723)
  0001-mksquashfs-fix-rare-race-in-fragment-waiting-in-file.patch
  0002-Fix-2GB-limit-of-the-is_fragment-.-function.patch

-------------------------------------------------------------------
Tue Sep  1 08:23:28 UTC 2015 - 9@cirno.systems

- Enable LZ4 support 

-------------------------------------------------------------------
Fri Mar  6 08:31:28 UTC 2015 - mpluskal@suse.com

- Use url for source
- Cleanup spec file with spec-cleaner

-------------------------------------------------------------------
Mon Jun 23 18:58:00 UTC 2014 - crrodriguez@opensuse.org

- Since version 4.3, squasfs does not require attr-devel 
 but uses glibc instead.

-------------------------------------------------------------------
Fri May 16 13:09:05 UTC 2014 - duwe@suse.com

- update to 4.3:
	- unsquashfs: add checks for corrupted data in opendir functions
	- unsquashfs: completely empty filesystems incorrectly generate an error
	- unsquashfs: fix open file limit
	- mksquashfs: Use linked list to store directory entries rather
	- mksquashfs: Remove qsort and add a bottom up linked list merge sort
	- mksquashfs: optimise lookup_inode2() for dirs
	- pseudo: fix handling of modify pseudo files
	- pseudo: fix handling of directory pseudo files
	- xattr: Fix ERROR() so that it is synchronised with the progress bar
	- mksquashfs/sort: Fix INFO() so that it is synced with the progress bar
	- mksquashfs: Add -progress to force progress bar when using -info
	- error.h: consolidate the various error macros into one header file
	- mksquashfs: fix stack overflow in write_fragment_table()
	- mksquashfs: move list allocation from off the stack
	- unsquashfs: fix oversight in directory permission setting
	- mksquashfs: dynamically allocate recovery_file
	- mksquashfs: dynamically allocate buffer in subpathname()
	- mksquashfs: dynamically allocate buffer in pathname()
	- unsquashfs: fix CVE-2012-4024
	- unsquashfs: fix CVE-2012-4025
	- mksquashfs: fix potential stack overflow in get_component()
	- mksquashfs: add parse_number() helper for numeric command line options
	- mksquasfs: check return value of fstat() in reader_read_file()
	- mksquashfs: dynamically allocate filename in old_add_exclude()
	- unsquashfs: dynamically allocate pathname in dir_scan()
	- unsquashfs: dynamically allocate pathname in pre_scan()
	- sort: dynamically allocate filename in add_sort_list()
	- mksquashfs: fix dir_scan() exit if lstat of source directory fails
	- pseudo: fix memory leak in read_pseudo_def() if exec_file() fails
	- pseudo: dynamically allocate path in dump_pseudo()
	- mksquashfs: dynamically allocate path in display_path2()
	- mksquashfs: dynamically allocate b_buffer in getbase()
	- pseudo: fix potential stack overflow in get_component()
	- pseudo: avoid buffer overflow in read_pseudo_def() using sscanf()
	- pseudo: dynamically allocate filename in exec_file()
	- pseudo: avoid buffer overflow in read_sort_file() using fscanf()
	- sort: tighten up sort file parsing
	- unsquashfs: fix name under-allocation in process_extract_files()
	- unsquashfs: avoid buffer overflow in print_filename() using sprintf()
	- Fix some limits in the file parsing routines
	- pseudo: Rewrite pseudo file processing
	- read_fs: fix small memory leaks in read_filesystem()
	- mksquashfs: fix fclose leak in reader_read_file() on I/O error
	- mksquashfs: fix frag struct leak in write_file_{process|blocks|frag}
	- unsquashfs_xattr: fix memory leak in write_xattr()
	- read_xattrs: fix xattr free in get_xattr() in error path
	- unsquashfs: add -user-xattrs option to only extract user.xxx xattrs
	- unsquashfs: add code to only print "not superuser" error message once
	- unsquashfs: check for integer overflow in user input
	- mksquashfs: check for integer overflow in user input
	- mksquashfs: fix "new" variable leak in dir_scan1()
	- read_fs: prevent buffer {over|under}flow in read_block() with
	  corrupted filesystems
	- read_fs: check metadata blocks are expected size in scan_inode_table()
	- read_fs: check the root inode block is found in scan_inode_table()
	- read_fs: Further harden scan_inode_table() against corrupted
	  filesystems
	- unsquashfs: prevent buffer {over|under}flow in read_block() with
	  corrupted filesystems
	- read_xattrs: harden xattr data reading against corrupted filesystems
	- unsquash-[23]: harden frag table reading against corrupted filesystems
	- unsquash-4.c: harden uid/gid & frag table reading against corruption
	- unsquashfs: harden inode/directory table reading against corruption
	- mksquashfs: improve out of space in output filesystem handling
	- mksquashfs: flag lseek error in writer as probable out of space
	- mksquashfs: flag lseek error in write_destination as probable out of
	  space
	- mksquashfs: print file being squashed when ^\ (SIGQUIT) typed
	- mksquashfs: make EXIT_MKSQUASHFS() etc restore via new restore thread
	- mksquashfs: fix recursive restore failure check
	- info: dump queue and cache status if ^\ hit twice within one second
	- mksquashfs: fix rare race condition in "locked fragment" queueing
	- lz4: add experimental support for lz4 compression
	- lz4: add support for lz4 "high compression"
	- lzo_wrapper: new implementation with compression options
	- gzip_wrapper: add compression options
	- mksquashfs: redo -comp <compressor> parsing
	- mksquashfs: display compressor options when -X option isn't recognised
	- mksquashfs: add -Xhelp option
	- mksquashfs/unsquashfs: fix mtime signedness
	- Mksquashfs: optimise duplicate checking when appending
	- Mksquashfs: introduce additional per CPU fragment process threads
	- Mksquashfs: significantly optimise fragment duplicate checking
	- read_fs: scan_inode_table(), fix memory leak on filesystem corruption
	- pseudo: add_pseudo(), fix use of freed variable
	- mksquashfs/unsquashfs: exclude/extract/pseudo files, fix handling of
	  leaf name
	- mksquashfs: rewrite default queue size so it's based on physical mem
	- mksquashfs: add a new -mem <mbytes> option
	- mksquashfs: fix limit on the number of dynamic pseudo files
	- mksquashfs: make -mem take a normal byte value, optionally with a
	  K, M or G 

-------------------------------------------------------------------
Sat May 26 08:45:57 UTC 2012 - jengelh@inai.de

- Remove redundant tags/sections from specfile
- Parallel build with %_smp_mflags

-------------------------------------------------------------------
Sun Jan 22 17:01:12 CET 2012 - dmueller@suse.de

- enable support for xz and lzo (kernel has support already)

-------------------------------------------------------------------
Thu Nov  3 19:00:03 UTC 2011 - dvaleev@suse.com

- The ppc64 kernel uses a page size of 64kB but mksquashfs only
  pads to a 4kB boundary. When we loopback mount a squashfs file
  that isn't 64kB aligned and access the last sector of the
  associated loopback device we see a stream of errors.
  Disk partitioning tools seem to like accessing the last 512
  bytes of partitions.

  This should fix warnings seen during starting installation on
  ppc64 and IA64
 
-------------------------------------------------------------------
Tue May 24 16:41:14 CEST 2011 - dimstar@opensuse.org

- Update to version 4.2:
  + Filesystem improvements:
    - Added XZ compression
    - Added compression options support
  + Miscellaneous improvements/bug fixes:
    - Add missing NO_XATTR filesystem flag to indicate no-xattrs
      option was specified and no xattrs should be stored when
      appending.
    - Add suppport in Unquashfs -stat option for displaying
      NO_XATTR flag.
    - Remove checkdata entry from Unsquashfs -stat option if a 4.0
      filesystem - checkdata is no longer supported.
    - Fix appending bug when appending to an empty filesystem -
      this would be incorrectly treated as an error.
    - Use glibc sys/xattr.h include rather than using attr/xattr.h
      which isn't present by default on some distributions.
    - Unsquashfs, fix block calculation error with regular files
      when file size is between 2^32-block_size+1 and 2^32-1.
    - Unsquashfs, fix sparse file writing when holes are larger
      than 2^31-1.
    - Add external CFLAGS and LDFLAGS support to Makefile, and
      allow build options to be specified on command line.
      Also don't over-write passed in CFLAGS definition.

-------------------------------------------------------------------
Tue Nov  2 18:41:08 UTC 2010 - coolo@novell.com

- update to 4.1
  - support for lzo (>= 2.6.36) and lzma (not yet mainline)
  - xattr support
  - misc fixes for the tools

-------------------------------------------------------------------
Mon Sep 21 14:47:01 CEST 2009 - snwint@suse.de

- removed obsolete source file

-------------------------------------------------------------------
Thu Sep 17 12:49:44 CEST 2009 - snwint@suse.de

- update to squashfs 4.0 (unsquashfs actually works)

-------------------------------------------------------------------
Wed Feb 25 16:27:55 CET 2009 - coolo@suse.de

- update to squashfs pre 4.0 to create squashfs that 2.6.29 can
  actually read
- (there is no documentation in CVS)

-------------------------------------------------------------------
Thu Aug 23 14:57:03 CEST 2007 - olh@suse.de

- move kernel driver to kernel-binary.rpm

-------------------------------------------------------------------
Thu Aug 16 14:06:32 CEST 2007 - cthiel@suse.de

- Supplements: filesystem(squashfs)

-------------------------------------------------------------------
Wed Jun  6 01:36:49 CEST 2007 - ro@suse.de

- fix build with current kernel 

-------------------------------------------------------------------
Wed Apr  4 22:09:34 CEST 2007 - lrupp@suse.de

- added module-init-tools to BuildRequires

-------------------------------------------------------------------
Thu Mar 29 16:21:12 CEST 2007 - rguenther@suse.de

- added zlib-devel BuildRequires.

-------------------------------------------------------------------
Tue Jan 23 15:45:15 CET 2007 - ro@suse.de

- update to 3.2r2
  - Kernel patches 2.6.19/2.6.20 have been updated to use
    const structures and mutexes rather than older semaphores.
  - Minor SMP bug fixes.
  - Progress bar broken on x86-64.  Fixed.
- update to 3.2
  - Improvements:
    - Squashfs filesystems can now be exported via NFS.
    - Unsquashfs now supports 2.x filesystems.
    - Mksquashfs now displays a progress bar.
    - Squashfs kernel code has been hardened against accidently or
      maliciously corrupted Squashfs filesystems.
  - Bug fixes:
    - Race condition occurring on S390 in readpage() fixed.
    - Odd behaviour of MIPS memcpy in read_data() routine worked-around.
    - Missing cache_flush in Squashfs symlink_readpage() added.

- update to 3.1r2
  - A code optimisation after testing unfortunately
    broke sorting in Mksquashfs.  This has been fixed.

-------------------------------------------------------------------
Mon Aug 21 16:54:16 CEST 2006 - ro@suse.de

- update to version 3.1 to fix build on 2.6.18 

-------------------------------------------------------------------
Thu May 11 16:58:59 CEST 2006 - duwe@suse.de

- packaged current version for SuSE Linux.

