From 7ba1050efe7a79181d30337efe957100b4bdaac8 Mon Sep 17 00:00:00 2001
From: Mark Cutler <mark@kittyhawk.aero>
Date: Thu, 22 Feb 2018 11:27:52 -0800
Subject: [PATCH] adding optional support for armv8 by removing bitness
 compiler flag

---
 CMakeLists.txt | 18 ++++++++++++------
 1 file changed, 12 insertions(+), 6 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index a1d3154..7798969 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -59,12 +59,18 @@ endif()
 
 # Set bitness
 if(${ARCH} STREQUAL "x86-64")
-	set(BITNESS "64")
+    set(BITNESS "64")
+    set(BITNESS_FLAG "-m${BITNESS}")
 elseif(${ARCH} STREQUAL "x86")
-	set(BITNESS "32")
+    set(BITNESS "32")
+    set(BITNESS_FLAG "-m${BITNESS}")
+elseif(${ARCH} STREQUAL "armv8")
+    set(BITNESS "64")
+    set(BITNESS_FLAG "")
 else()
     set(BITNESS "32")
     set(ARCH "x86")
+    set(BITNESS_FLAG "-m${BITNESS}")
     message("Unknown architecture selected, defaulting to x86")
 endif()
 
@@ -91,7 +97,7 @@ if(WINDOWS AND GCC)
 		# -fipa-cp-clone causes a SegFault in Eigen when enabled with MinGW i686 4.9.2 with dwarf exception model
 		#set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fipa-cp-clone")
 	endif()
-	
+
 	# To avoid an external dependency (libgcc_s_seh11.dll or libgcc_s_dw2-1.dll)
 	# we statically link the libraries required by MinGW runtimes
 	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -static")
@@ -110,11 +116,11 @@ if(MSVC)
 elseif(GCC OR CLANG)
     # Treat warning return-type as error to avoid undefined behaviour
     # when a non-void function does not return a value.
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m${BITNESS} -std=c++11 -Werror=return-type")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${BITNESS_FLAG} -std=c++11 -Werror=return-type")
     set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall -Wno-long-long")
 
 elseif(INTEL)
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m${BITNESS} -std=c++11")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${BITNESS_FLAG} -std=c++11")
     set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall")
 endif()
 
@@ -299,7 +305,7 @@ if(DOXYGEN_FOUND)
     ${PROJECT_BINARY_DIR}/Doxyfile
     COMMENT "Generating API documentation with Doxygen"
     VERBATIM)
-    
+
 endif()
 
 if(CMAKE_BUILD_TYPE STREQUAL DEBUG)
