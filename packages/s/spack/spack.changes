-------------------------------------------------------------------
Thu Mar 23 09:59:40 UTC 2023 - Egbert Eich <eich@suse.com>

- run-find-external.sh: Extend the range of versions of MPI
  flavors to be searched for when asking Spack to look
  for external packages (bsc#1208751).

-------------------------------------------------------------------
Wed Mar  8 19:54:55 UTC 2023 - Egbert Eich <eich@suse.com>

- Improve run-find-external.sh:
  * Extend to run 'spack compiler find'.
  * Separate triggers for packages and compilers.
  * Better handle when search patterns match multiple directories.

-------------------------------------------------------------------
Wed Mar  1 13:13:34 UTC 2023 - Christian Goll <cgoll@suse.com>

- Udpate to 0.19.1 with following bug fixes:
  * buildcache create: make "file exists" less verbose
  * spack mirror create: don't change paths to urls
  * Improve error message for requirements
  * Fix libtool filter for Fujitsu compilers
  * FileCache: delete the new cache file on exception
- using `--all` flag for `spack external find` in the %triggrin
  section, as MPI packages were not recognized any more, fixing
  (bsc#1208751)

-------------------------------------------------------------------
Tue Jan 31 08:29:00 UTC 2023 - Egbert Eich <eich@suse.com>

- Make sure the spack environment is set up correctly in
  spack-generated Dockerfiles (boo#1207784):
  Make-sure-spack-environment-is-set-up-in-Dockerfile-template.patch

-------------------------------------------------------------------
Wed Jan 11 13:04:37 UTC 2023 - Egbert Eich <eich@suse.com>

- Fix var_path: this regression was introduced with the update
  to the 0.19.0 release (boo#1207053).
- Move repos to /usr/share/spack: /var is strictly for local data.

-------------------------------------------------------------------
Tue Nov 22 11:16:26 UTC 2022 - Christian Goll <cgoll@suse.com>

- updated to version 0.19.0 with the following changes:
  * Spack's traditional package preferences are soft, but we've added hard
    requriements to packages.yaml and spack.yaml
  * spack install in an environment will no longer add to the specs: list; you'll
    need to either use spack add <spec> or spack install --add <spec>.
  * spack uninstall will not remove from your environment's specs:
    list; you'll need to use spack remove or spack uninstall --remove.
  * concretizer:unify:true is now the default mode for new environments
  * include environment configuration from URLs
  * An increasing number of packages in the ecosystem need the ability to
    support multiple build systems
  * package ++variant:
    enabled variant that will be propagated to dependencies
  * git. prefix to specify git tags or branches as versions. All of these are
    valid git versions in
  * spack ci generate --tests will generate a .gitlab-ci.yml file that not only
    does builds but also runs tests for built packages
  * spack test run --explicit will only run tests for packages that are
    explicitly installed, instead of all packages.
  * You can add a new shared_linking option to config.yaml to make Spack embed absolute paths
    to needed shared libraries in ELF executables and shared libraries on Linux
  * spack spec prints dependencies more legibly. Dependencies in the output now
    appear at the earliest level of indentation possible (#33406)
  * You can override package.py attributes like url, directly in packages.yaml
  * There are a number of new architecture-related format strings you can use
    in Spack configuration files to specify paths
- Improvements from v0.18.0
  * spack install --reuse was introduced in v0.17.0, and --reuse is now the
    default concretization mode. Spack will try hard to resolve dependencies
    using installed packages or binaries
  * Spack hashes now include link, run, and build dependencies, as well as a
    canonical hash of package recipes. Previously, hashes only included link
    and run dependencies (though build dependencies were stored by
    environments). We coarsened the hash to reduce churn in user installations,
    but the new default concretizer behavior mitigates this concern and gets us
    reuse and provenance.  You will be able to see the build dependencies of
    new installations
  * concretizer:unify:when_possible will try to resolve a fully unified
    environment, but if it cannot, it will create multiple configurations of
    some packages where it has to.  with spack find.
  * Spack now has an updated binary format, with improvements for security. The
    new format has a detached signature file, and Spack verifies the signature
    before untarring or decompressing the binary package. The previous format
    embedded the signature in a tar file, which required the client to run tar
    before verifying (#30750). Spack can still install from build caches using
    the old format, but we encourage users to switch to the new format going
    forward.
  * The spack bootstrap mirror command can automatically create a mirror for
    bootstrapping the concretizer and other needed dependencies in an
    air-gapped environment.
  * spack env depfile can be used to generate a Makefile from an environment,
    which can be used to build packages the environment in parallel on a single
    node
  * In addition to being conditional themselves, variants can now have
    conditional values that are only possible for certain configurations of a
    package.
- removed following patches as incorporated upstream:
  * fix-tumbleweed-naming.patch

-------------------------------------------------------------------
Mon Aug 15 19:39:22 UTC 2022 - Dirk MÃ¼ller <dmueller@suse.com>

- avoid bashism in post scripts (bsc#1195391)

-------------------------------------------------------------------
Thu Apr  7 12:56:45 UTC 2022 - Egbert Eich <eich@suse.com>

- Fix: Fix-error-during-documentation-build-due-to-recursive-module-inclusion.patch
  This is needed to prevent an AttributeError during
  'import spack.environment as some_name'
  when building Sphinx documentation - due to an outdated
  Python on SLE.
  The original version caused errors:
  'NameError: name 'uenv' is not defined'
  when using 'spack env activate' et.al. (bsc#1198212).

-------------------------------------------------------------------
Wed Mar  2 12:41:12 UTC 2022 - Egbert Eich <eich@suse.com>

- Remove unneeded build dependency.
- Make dependencies of spack and spack-recipes symetrical.

-------------------------------------------------------------------
Thu Feb 10 13:58:04 UTC 2022 - Egbert Eich <eich@suse.com>

- Add openssl-devel, xz-devel and libzip-devel as recommends
  bsc#1195789.

-------------------------------------------------------------------
Wed Jan 12 09:50:56 UTC 2022 - Egbert Eich <eich@suse.com>

- Fix run-find-external.sh script: RPM macros are not expanded
  in external scripts.
  * Rename: run-find-external.sh to run-find-external.sh.in
- Fix list of recommended packages.
- Add support for container building using a SLE base container.
  * Add-support-for-container-building-using-a-SLE-base-container.patch

-------------------------------------------------------------------
Mon Jan 10 12:45:19 UTC 2022 - Christian Goll <cgoll@suse.com>

- updated to spack 0.17.1 with following chnages:
  * Allow locks to work under high contention (#27846)
  * Improve errors messages from clingo (#27707 #27970)
  * Respect package permissions for sbang (#25764)
  * Fix --enable-locks behavior (#24675)
  * Fix log-format reporter ignoring install errors (#25961)
  * Fix overloaded argparse keys (#27379)
  * Allow style commands to run with targets other than "develop" (#27472)
  * Log lock messages to debug level, instead of verbose level (#27408)
  * Handle invalid unicode while logging (#21447)
  * spack audit: fix API calls to variants (#27713)
  * Provide meaningful message for empty environment installs (#28031)
  * Added opensuse leap containers to spack containerize (#27837)
  * Revert "patches: make re-applied patches idempotent" (#27625)
  * MANPATH can use system defaults (#21682)
  * Add "setdefault" subcommand to `spack module tcl` (#14686)
  * Regenerate views when specs already installed (#28113)
- removed leap-container.patch as incoperated upstream

-------------------------------------------------------------------
Tue Dec 14 11:13:37 UTC 2021 - Christian Goll <cgoll@suse.com>

- fixed the configuration files /etc/skel/.spack/{config|modules}.yaml
  so that spack writes to $HOME if started as user

-------------------------------------------------------------------
Mon Dec 13 08:19:33 UTC 2021 - Christian Goll <cgoll@suse.com>

- made objects.inv (Source5) to be static as the online version is changed
  dynamically

-------------------------------------------------------------------
Tue Dec  7 15:34:12 UTC 2021 - Christian Goll <cgoll@suse.com>

- added leap-container.patch which adds leap15 as os to the
  spack containerize command. 

-------------------------------------------------------------------
Mon Nov  8 14:55:34 UTC 2021 - Christian Goll <cgoll@suse.com>

- updated to version 0.17.0
  (Upstream feature/bug references (<ID>) are relative to
   https://github.com/spack/spack/issues/<ID>).
  * New concretizer is now default
    The new concretizer introduced as an experimental feature in v0.16.0
    is now the default (#25502). The new concretizer is based on the
    clingo logic programming system,
    and it enables us to do much higher quality and faster dependency solving
    The old concretizer is still available via the concretizer: original
    setting, but it is deprecated and will be removed in v0.18.0.
  * Binary Bootstrapping
    To make it easier to use the new concretizer and binary packages,
    Spack now bootstraps clingo and GnuPG from public binaries. If it
    is not able to bootstrap them from binaries, it installs them from
    source code. With these changes, you should still be able to clone Spack
    and start using it almost immediately.
  * Reuse existing packages (experimental)
    The most wanted feature from our
    2020 user survey and
    the most wanted Spack feature of all time (#25310). spack install,
    spack spec, and spack concretize now have a --reuse option, which
    causes Spack to minimize the number of rebuilds it does. The --reuse
    option will try to find existing installations and binary packages locally
    and in registered mirrors, and will prefer to use them over building new
    versions. This will allow users to build from source far less than in
    prior versions of Spack. This feature will continue to be improved, with
    configuration options and better CLI expected in v0.17.1. It will become
    the default concretization mode in v0.18.0.
  * Better error messages
    We have improved the error messages generated by the new concretizer by
    using unsatisfiable cores. Spack will now print a summary of the types
    of constraints that were violated to make a spec unsatisfiable (#26719).
  * Conditional variants
    Variants can now have a when="<spec>" clause, allowing them to be
    conditional based on the version or other attributes of a package (#24858).
  * Git commit versions
    In an environment and on the command-line, you can now provide a full,
    40-character git commit as a version for any package with a top-level
    git URL. e.g., spack install hdf5@45bb27f58240a8da7ebb4efc821a1a964d7712a8.
    Spack will compare the commit to tags in the git repository to understand
    what versions it is ahead of or behind.
  * Override local config and cache directories
    You can now set SPACK_DISABLE_LOCAL_CONFIG to disable the ~/.spack and
    /etc/spack configuration scopes. SPACK_USER_CACHE_PATH allows you to
    move caches out of ~/.spack, as well (#27022, #26735). This addresses
    common problems where users could not isolate CI environments from local
    configuration.
  * Improvements to Spack Containerize
    For added reproducibility, you can now pin the Spack version used by
    spack containerize (#21910). The container build will only build
    with the Spack version pinned at build recipe creation instead of the
    latest Spack version.
  * New commands for dealing with tags
    The spack tags command allows you to list tags on packages (#26136), and you
    can list tests and filter tags with spack test list (#26842).
  * Copy and relocate environment views as stand-alone installations (#24832)
  * spack diff command can diff two installed specs (#22283, #25169)
  * spack -c <config> can set one-off config parameters on CLI (#22251)
  * spack load --list is an alias for spack find --loaded (#27184)
  * spack gpg can export private key with --secret (#22557)
  * spack style automatically bootstraps dependencies (#24819)
  * spack style --fix automatically invokes isort (#24071)
  * build dependencies can be installed from build caches with --include-build-deps (#19955)
  * spack audit command for checking package constraints (#23053)
  * spack can now fetch from CVS repositories (yep, really) (#23212)
  * spack monitor lets you upload analysis about installations to a
  * spack monitor server (#23804, #24321, #23777, #25928))
  * spack python --path shows which python Spack is using (#22006)
  * spack env activate --temp can create temporary environments (#25388)
  * --preferred and --latest options for spack checksum (#25830)
  * SPACK_PYTHON environment variable sets which python spack uses (#21222)
  * SPACK_SKIP_MODULES lets you source setup-env.sh faster if you don't need modules (#24545)
- removed following patches as incomperated upstream:
  * added-dockerfile-for-opensuse-leap-15.patch
- removed as not needed any more:
  * basic-exclude-pattern-for-external-find.patch
  * Fix-documentation-so-that-parser-doesn-t-stumble.patch
- updated patches:
  * Adapt-shell-scripts-that-set-up-the-environment-for-different-shells.patch
  * added-target-and-os-calls-to-output-of-spack-spec-co.patch
  * Fix-error-during-documentation-build-due-to-recursive-module-inclusion.patch
  * fix-tumbleweed-naming.patch
  * Make-spack-paths-compliant-to-distro-installation.patch
- added:
  * Fix-Spinx-configuration-to-avoid-throwing-errors.patch
  * Set-modules-default-to-lmod.patch
- updated requires to actual sphinx version, so that the documentation
  builds
- Included source:
  objects.inv

-------------------------------------------------------------------
Fri Oct 15 17:00:57 UTC 2021 - Egbert Eich <eich@suse.com>

- Fix sysuser file name.

-------------------------------------------------------------------
Fri Oct  1 05:55:10 UTC 2021 - Egbert Eich <eich@suse.com>

- Utilize sysuser infrastructure to set group spack. 

-------------------------------------------------------------------
Wed Sep 29 20:32:58 UTC 2021 - Antoine Ginies <aginies@suse.com>

- update to version 0.16.3 (JSC#SLE-22137):
  * clang/llvm: fix version detection
  * Fix use of quotes in Python build system
  * Ensure all roots of an installed environment are marked explicit in db
  * Fix fetching for Python 3.8 and 3.9
  * locks: only open lockfiles once instead of for every lock held

-------------------------------------------------------------------
Fri Aug  6 14:28:20 UTC 2021 - Christian Goll <cgoll@suse.com>

- added tar and make as requirement 

-------------------------------------------------------------------
Wed Jul  7 16:09:21 UTC 2021 - Christian Goll <cgoll@suse.com>

- added README-oo-wiki which is the raw version of the opensuse wiki 

-------------------------------------------------------------------
Tue Jul  6 21:45:21 UTC 2021 - Egbert Eich <eich@suse.com>

- Fix patch
  Fix-error-during-documentation-build-due-to-recursive-module-inclusion.patch
  to actually work correctly.
  The updated version makes sure modules are not called recursively even
  if modules are loaded in an out-of-order fashion from python-Sphinx.
- Remove duplicates in spec file.

-------------------------------------------------------------------
Wed Jun  2 14:04:26 UTC 2021 - Antoine Ginies <aginies@suse.com>

- fix typo to export prefix in patch (bsc#1191395):
  Adapt-shell-scripts-that-set-up-the-environment-for-different-shells.patch

-------------------------------------------------------------------
Tue May 25 08:55:42 UTC 2021 - Christian Goll <cgoll@suse.com>

- update to version 0.16.1
  * Major performance improvement for spack load and other commands.
  * spack fetch is now environment-aware. (#19166)
  * Numerous fixes for the new, clingo-based concretizer.
  * Supoprt for automatically bootstrapping clingo from source.
  * Python 3.10 support: collections.abc
  * Fix import issues by using __import__ instead of Spack package import.
  * Bugfixes and --source-dir argument for spack location.
  * Better support for externals in shared prefixes.
  * spack build-env now prefers specs defined in the active environment. 
  * Remove erroneous warnings about quotes in from_sourcing_files.
  * Fix clearing cache of InternalConfigScope.
  * Bugfix for active when pkg is already active error.
  * Make SingleFileScope able to repopulate the cache after clearing it.
  * Channelflow: Fix the package.
  * More descriptive error message for bugs in package.py
  * Use package-supplied autogen.sh
  * Respect -k/verify-ssl-false in _existing_url method.
 

-------------------------------------------------------------------
Mon May  3 06:34:46 UTC 2021 - Egbert Eich <eich@suse.com>

- Add gcc-c++ to the required packages (bsc#1185519).
- Add alternative c++ & fortran compilers to the triggers list.

-------------------------------------------------------------------
Tue Mar 30 14:31:26 UTC 2021 - Christian Goll <cgoll@suse.com>

- added run-find-external.sh which calls the command in post
  `spack external find` as nobody and not as root

-------------------------------------------------------------------
Tue Mar 23 08:32:49 UTC 2021 - Christian Goll <cgoll@suse.com>

- added libbz2-devel as dependency as spack requires this, as soon
  as the bzip2 binary is found and removed warning for this 
  corner case in rpmlinrc

-------------------------------------------------------------------
Fri Mar 19 15:04:20 UTC 2021 - Christian Goll <cgoll@suse.com>

- set the right MODULEPATH in /etc/profile.d/spack.[cs]h 

-------------------------------------------------------------------
Fri Feb 26 22:06:36 UTC 2021 - Egbert Eich <eich@suse.com>

- Remove BuildRequires for patterns-base-basesystem and
  distribution-release.

-------------------------------------------------------------------
Fri Feb 26 10:40:00 UTC 2021 - Christian Goll <cgoll@suse.com>

- update to version 0.16.1
  * intel-oneapi support through new packages 
  * HIP/ROCm support (#19715, #20095)
  * concretization enhancements
  * environment install reporting fix (#20004)
  * avoid import in ABI compatibility info (#20236)
  * restore ability of dev-build to skip patches (#20351)
  * spack find -d spec grouping (#20028)
  * spack smoke test support (#19987, #20298)
  * abstract spec comparisons (#20341)
  * performance improvements for binary relocation (#19690, #20768)
  * additional sanity checks for variants in builtin packages (#20373)
  * do not pollute auto-generated configuration files with empty lists or
    dicts
- added file: basic-exclude-pattern-for-external-find.patch 
  * adds the functionality to exclude binaries for external search 
    so that the call 'installdbgsymbols' can be prohibited as this
    leads to an endless loop when drkonqui is installed
  
-------------------------------------------------------------------
Thu Feb  4 06:54:13 UTC 2021 - Egbert Eich <eich@suse.com>

- Add
  * Fix-documentation-so-that-parser-doesn-t-stumble.patch:
  * Fix-error-during-documentation-build-due-to-recursive-module-inclusion.patch
    Fix documentation building.
- Fix texinfo file installation.

-------------------------------------------------------------------
Fri Dec 11 15:09:07 UTC 2020 - Christian Goll <cgoll@suse.com>

- added patch for more reproduceable output for the doc package
  * added file: added-target-and-os-calls-to-output-of-spack-spec-co.patch

-------------------------------------------------------------------
Tue Dec  8 14:19:00 UTC 2020 - Christian Goll <cgoll@suse.com>

- added test for /etc/spack/no_rpm_trigger 

-------------------------------------------------------------------
Wed Dec  2 12:33:44 UTC 2020 - Christian Goll <cgoll@suse.com>

- added %triggerin and %triggerpostun for the packages which 
  can be detected by spack

-------------------------------------------------------------------
Wed Nov 25 10:58:48 UTC 2020 - Christian Goll <cgoll@suse.com>

- updated to 0.16.0
- added find for external packages
- added dockerfile for leap
  * added patchfile added-dockerfile-for-opensuse-leap-15.patch

-------------------------------------------------------------------
Tue Nov 24 13:45:24 UTC 2020 - Egbert Eich <eich@suse.com>

- Add documentation (man and info pages, pdf doesn't build
  currently).
  * Do not ship documentation sources.
- Do not distribute Dockerfiles and other container related
  material, yet. This needs to be fixed so that the samples
  work with SUSE.
- Fully integrate spack into SUSE directory structure, fix
  paths where required.
  * Fix setup scripts to work correctly in above environment.

-------------------------------------------------------------------
Mon Nov 16 14:42:32 UTC 2020 - Christian Goll <cgoll@suse.com>

- added profile file for csh 
- enabled projections 
- updated README.SUSE

-------------------------------------------------------------------
Wed Nov 11 19:56:11 UTC 2020 - Christian Goll <cgoll@suse.com>

- added patches to be more on the traditional file system hierarchy 
  and avoid explicit version in tumbleweed.
  * added file Make-spack-paths-compliant-to-distro-installation.patch
  * added file fix-tumbleweed-naming.patch


-------------------------------------------------------------------
Fri Sep 11 07:50:30 UTC 2020 - Ana Guerrero Lopez <aguerrero@suse.com>

- Initial release. Version 0.15.4 
  * Make-spack-paths-compliant-to-distro-installation.patch
    Make spack paths compliant to distro installation.
