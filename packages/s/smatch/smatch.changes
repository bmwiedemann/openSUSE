-------------------------------------------------------------------
Thu Feb 22 07:20:02 UTC 2024 - jslaby@suse.cz

- Update to version 1.73+20240222:
  * db/kernel.return_fixes: add cred scoped guard annotations
  * mtag: fix a bug on 32 bit systems
  * kernel_irq_context: add (struct irqaction)->handler as an ignored function
  * kernel_irq_context: mark the IRQ handler in the function
  * points_to_user_data: Add __wbuf() as setting a user buffer
  * double_checking: ignore known/constant conditions
  * err_ptr_deref: silence impossible checks
  * function_hooks: add missing return states
  * refcount_info: add xe_device_mem_access_get/put()
  * kernel.unconstant_macros: add __GFP_SKIP_ZERO
  * sleep_info: add mas_alloc_cyclic() as a weird function
  * points_to_container: white space change
  * db/kernel.delete.return_states: lets say that bio_alloc_bioset() can't fail
  * db/kernel.return_fixes: fix up copy_from_user() on 32bit systems
  * db/kernel.return_fixes: add __kthread_create_on_node() and of_graph_get_endpoint_count()
  * db/kernel.return_fixes: delete __hci_cmd_sync_sk()
  * db/kernel.return_fixes: add more guard lock annotations
  * flow: set prev_stream
  * irq_context: ignore (struct flexcop_device)->read_ibi_reg
  * data/kernel.unconstant_macros: add VM_USWAP and some others
  * and much more

-------------------------------------------------------------------
Thu Jun 15 07:05:18 UTC 2023 - jslaby@suse.cz

- Update to version 1.73+20230517:
  * checking_for_null_instead_of_err_ptr: use smatch_kernel_err_ptr.c
  * kernel_err_ptr: hack around for_each_gpio_desc_with_flag()
  * scripts/generisize.pl: generisize function names
  * kernel.unreachable.turn_off: add some kunit stuff
  * preempt_info: add __bit_spin_unlock()
  * check_list/err_ptr: register the err_ptr code
  * debug/units: hook in the __smatch_units() code
  * validation/sm_err_ptr: make IS_ERR() an inline function
  * dereference: find more cross function dereferences
  * err_ptr_deref: re-write the check
  * kernel_err_ptr: track error pointers in the database
  * kernel.no_return_funcs: update to the latest linux-next functions
  * kernel.no_return_funcs: add kunit_do_failed_assertion()
  * comparison: store modified comparisons
  * units: move checks to check_ file and hide under the --spammy option
  * and much more

-------------------------------------------------------------------
Mon May 09 08:32:16 UTC 2022 - jslaby@suse.cz

- Update to version 1.72+20220506:
  * logical_instead_of_bitwise: add some more warnings
  * uninitialized: fix checking for fake calls and don't save global states
  * assigned_expr: don't modify the expression until later
  * rosenberg,assigned_expr: don't store pointless global data
  * uninitialized: fix false positive "passing uninitialized" warnings
  * data/kernel.ignore_uninitialized_param: add more functions
  * free: don't warn about %p printing of freed pointers
  * free: do not warn when freed pointers are part of a condition
  * function_hooks: export is_condition_call()
  * comparison: fix copying comparisons
- switch to obs_scm
- switch versioning to include version number
- add
  * Makefile-allow-CFLAGS-to-be-redefined.patch (fix build)
  * Makefile-use-CFLAGS-when-linking.patch (improve build)
  * check_free-declare-is_percent_p_print-before-use.patch (fix warnings)

-------------------------------------------------------------------
Tue Jun 09 07:42:58 UTC 2020 - jslaby@suse.com

- Update to version 20200608+git.e92d9e00:
  * db: Fix buffer overflow in state_name_to_param_name()
  * atomic_inc_dec: remove an unused parameter
  * atomic_inc_dec: don't warn about impossible paths
  * atomic_inc_dec: ignore local static variables
  * atomic_inc_dec: unknown values are not failures
  * atomic_inc_dec: don't record increment/decrement if they are reset
  * atomic_inc_dec: record potential decrements as a decrement
  * atomic_inc_dec: don't store information in impossible paths
  * atomic_inc_dec: add more functions
  * atomic_inc_dec: don't double set states to &inc/&dec
  * and much more...

-------------------------------------------------------------------
Thu Jan 30 10:33:05 UTC 2020 - jslaby@suse.com

- Update to version 20200127+git.2f013029:
  * fresh_alloc: mark used data as unfresh
  * fresh_alloc: export is_fresh_alloc() and is_fresh_alloc_var_sym()
  * fresh_alloc: NULL pointers are not fresh
  * mtag: export str_to_mtag()
  * type: improve debug output for NULL types
  * slist: fix __print_stree() debug output
  * predefine "i386" if needed
  * correct sparcv9 defines
  * pre-define __unix__ and friends
  * add necessary defined for sunos-derived systems
  * define __PRAGMA_REDEFINE_EXTNAME
  * and much more...

-------------------------------------------------------------------
Mon Nov 04 07:08:34 UTC 2019 - jslaby@suse.com

- Update to version 20191028:
  * rosenberg: initialization and struct assignments don't fill holes
  * rosenberg: add snd_timer_append_to_tqueue() and __send_signal()
  * rosenberg: add skb_put() to the list of copy functions
  * extra: it's not a dereference if we're just getting the address
  * helper: improve getting_address()
  * parse_call_math: don't return constant allocation sizes
  * extra: limit get_other_name_sym_helper() some more
  * hooks: add EXPR_HOOK_AFTER
  * Makefile: rebuild smatch_*.o files when smatch.h changes
  * Makefile: build quietly again
  * Makefile: organize the smatch_*.o objects better
  * Makefile: allow CC to be a shell variable
  * function_ptr: save pointers to pointers
  * function_ptrs: save function return assignments
  * ranges: silence Smatch warning (uninitialized variable)
  * db: fix an off by one bug
  * check_deref/deref_check: warn about likely/unlikely() conditions as well
  * readl_infinite_loops: silence a GCC warning by adding a cast
  * integer_overflow: fix uninitialized variable bug
  * ranges: add casts to silence compile warnings
  * and many more...

-------------------------------------------------------------------
Thu Nov 22 13:54:10 UTC 2018 - Martin Pluskal <mpluskal@suse.com>

- Update to version 20181114:
  * trinity: Proof of concept to auto-generate trinity spec files
  * user_data: rename to smatch_kernel_user_data.c
  * assigned_expr: rename to smatch_assigned_expr.c
  * smatch: make the --enable/disable options take strings
  * clock() is already defined on illumos, so rename the local function.
  * Ignore "#ident" as found in some old sources.
  * Use $(CFLAGS) when compiling smatch.c itself.
  * smatch_nul_terminated: fix compile
  * untracked_param: fix a NULL dereference
  * uninitialized: fix a crashing bug parsing "return (foo);"
  * nul_terminator: track when strings have a NUL terminator
  * and many more small fixes and updates

-------------------------------------------------------------------
Sat Mar 24 00:00:00 CET 2018 - dsterba@suse.cz

- Update to version 20180125

-------------------------------------------------------------------
Wed Aug 10 13:44:22 UTC 2016 - jslaby@suse.com

- Update to version 20160715:
  * capped: set it to uncapped if it's modified
  * smatch.h: silence a compile warning
  * smatch.h: shuffle some declarations around
  * smatch.h: reserve some db types for later
  * *new* continue_vs_break: complain if continue is used in a do {} while (0)
  * smatch_address: don't crash on invalid code
  * continue_vs_break: add it checklist.h
  * dma_mapping_error: add pci_dma_mapping_error() to this check
  * user_data: short circuit a bunch of code
  * debug: add a __smatch_absolute()

-------------------------------------------------------------------
Wed Mar  9 14:10:10 UTC 2016 - jslaby@suse.com

- update to 20160307

-------------------------------------------------------------------
Wed Dec 16 07:50:48 UTC 2015 - jslaby@suse.com

- update to 20151208

-------------------------------------------------------------------
Fri Oct  9 10:20:11 UTC 2015 - jslaby@suse.com

- initial package (taken over from morbidrsa)

