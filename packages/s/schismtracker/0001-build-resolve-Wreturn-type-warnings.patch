From b2528fd86f492e973fe60394cb89c12bdb7254b7 Mon Sep 17 00:00:00 2001
From: Jan Engelhardt <jengelh@inai.de>
Date: Mon, 21 Oct 2024 20:19:51 +0200
Subject: [PATCH] build: resolve -Wreturn-type warnings
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Functions without return can produce unpredictable behavior,
and it goes without saying that is bad.
openSUSE has added -Werror=return-type distro-wide, so it is
perhaps fair to do the same here.

fmt/iti.c: In function ‘load_it_instrument_old’:
fmt/iti.c:157:1: error: control reaches end of non-void function [-Werror=return-type]
fmt/iti.c: In function ‘load_it_instrument’:
fmt/iti.c:207:1: error: control reaches end of non-void function [-Werror=return-type]

on Wii platform, there are some more:

../schism/controller.c: In function 'game_controller_insert':
../schism/controller.c:50:1: error: no return statement in function returning non-void [-Werror=return-type]
../schism/controller.c: In function 'controller_quit':
../schism/controller.c:112:1: error: control reaches end of non-void function [-Werror=return-type]
---
 Makefile.am         | 2 +-
 fmt/iti.c           | 2 ++
 schism/controller.c | 3 ++-
 3 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/Makefile.am b/Makefile.am
index b2a0e990..78e238c1 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -444,7 +444,7 @@ schismtracker_SOURCES = \
 schism/version.$(OBJEXT): $(filter-out schism/version.$(OBJEXT),$(schismtracker_OBJECTS)) $(HEADERS)
 
 schismtracker_CPPFLAGS = -I$(srcdir)/include -I. $(cppflags_wii) $(cppflags_wiiu)
-schismtracker_CFLAGS = $(SDL_CFLAGS) $(cflags_alsa) $(cflags_oss) \
+schismtracker_CFLAGS = -Werror=return-type $(SDL_CFLAGS) $(cflags_alsa) $(cflags_oss) \
 	$(cflags_network) $(cflags_x11) $(cflags_fmopl) \
 	$(cflags_version) $(cflags_win32) $(cflags_wii) \
 	$(cflags_macosx) $(cflags_flac) $(cflags_jack) \
diff --git a/fmt/iti.c b/fmt/iti.c
index 386a0de1..c2222dcf 100644
--- a/fmt/iti.c
+++ b/fmt/iti.c
@@ -154,6 +154,7 @@ int load_it_instrument_old(song_instrument_t *instrument, slurp_t *fp)
 		instrument->vol_env.ticks[n] = node;
 		instrument->vol_env.values[n] = ihdr.nodes[2 * n + 1];
 	}
+	return 1;
 }
 
 int load_it_instrument(song_instrument_t *instrument, slurp_t *fp)
@@ -204,6 +205,7 @@ int load_it_instrument(song_instrument_t *instrument, slurp_t *fp)
 	instrument->flags |= load_it_envelope(&instrument->vol_env, &ihdr.volenv, 0, 0);
 	instrument->flags |= load_it_envelope(&instrument->pan_env, &ihdr.panenv, 1, 32);
 	instrument->flags |= load_it_envelope(&instrument->pitch_env, &ihdr.pitchenv, 2, 32);
+	return 1;
 }
 
 int fmt_iti_load_instrument(slurp_t *fp, int slot)
diff --git a/schism/controller.c b/schism/controller.c
index 9af01479..d96a609d 100644
--- a/schism/controller.c
+++ b/schism/controller.c
@@ -40,7 +40,7 @@ struct controller_node {
 
 static struct controller_node *game_controller_list = NULL;
 
-static int game_controller_insert(SDL_GameController *controller)
+static void game_controller_insert(SDL_GameController *controller)
 {
 	struct controller_node *node = mem_alloc(sizeof(*node));
 
@@ -109,6 +109,7 @@ int controller_quit(void)
 {
 	game_controller_free();
 	SDL_QuitSubSystem(SDL_INIT_GAMECONTROLLER);
+	return 1;
 }
 
 int controller_sdlevent(SDL_Event *event)
-- 
2.47.0

