From ec310cbe342ee492b78578db846ca18ef288b0a5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?La=C3=A9rcio=20de=20Sousa?=
 <laerciosousa@sme-mogidascruzes.sp.gov.br>
Date: Tue, 23 Jul 2019 16:27:17 -0300
Subject: [PATCH 2/3] Only allocate VTs for seat0

---
 src/daemon/Display.cpp | 26 ++++++++++++++------------
 src/daemon/Greeter.cpp |  3 ++-
 src/daemon/Seat.cpp    | 28 +++++++++++++++++-----------
 3 files changed, 33 insertions(+), 24 deletions(-)

diff --git a/src/daemon/Display.cpp b/src/daemon/Display.cpp
index c2ea728..6cd8fd6 100644
--- a/src/daemon/Display.cpp
+++ b/src/daemon/Display.cpp
@@ -308,13 +308,17 @@ namespace SDDM {
         // some information
         qDebug() << "Session" << m_sessionName << "selected, command:" << session.exec();
 
+        QProcessEnvironment env;
+
         // create new VT for Wayland sessions otherwise use greeter vt
-        int vt = terminalId();
-        if (session.xdgSessionType() == QLatin1String("wayland"))
-            vt = VirtualTerminal::setUpNewVt();
-        m_lastSession.setVt(vt);
+        if (seat()->name() == QLatin1String("seat0")) {
+            int vt = terminalId();
+            if (session.xdgSessionType() == QLatin1String("wayland"))
+                vt = VirtualTerminal::setUpNewVt();
+            m_lastSession.setVt(vt);
+            env.insert(QStringLiteral("XDG_VTNR"), QString::number(vt));
+	}
 
-        QProcessEnvironment env;
         env.insert(QStringLiteral("PATH"), mainConfig.Users.DefaultPath.get());
         if (session.xdgSessionType() == QLatin1String("x11"))
             env.insert(QStringLiteral("DISPLAY"), name());
@@ -325,11 +329,7 @@ namespace SDDM {
         env.insert(QStringLiteral("XDG_SESSION_CLASS"), QStringLiteral("user"));
         env.insert(QStringLiteral("XDG_SESSION_TYPE"), session.xdgSessionType());
         env.insert(QStringLiteral("XDG_SEAT"), seat()->name());
-
         env.insert(QStringLiteral("XDG_SESSION_DESKTOP"), session.desktopNames());
-        if (seat()->name() == QLatin1String("seat0")) {
-            env.insert(QStringLiteral("XDG_VTNR"), QString::number(vt));
-        }
 
         m_auth->insertEnvironment(env);
 
@@ -364,9 +364,11 @@ namespace SDDM {
             stateConfig.save();
 
             // switch to the new VT for Wayland sessions
-            if (m_lastSession.xdgSessionType() == QLatin1String("wayland"))
-                // set vt_auto to false, so handle the vt switch yourself (VT_PROCESS)
-                VirtualTerminal::jumpToVt(m_lastSession.vt(), false);
+            if (seat()->name() == QLatin1String("seat0")) {
+                if (m_lastSession.xdgSessionType() == QLatin1String("wayland"))
+                    // set vt_auto to false, so handle the vt switch yourself (VT_PROCESS)
+                    VirtualTerminal::jumpToVt(m_lastSession.vt(), false);
+            }
 
             if (m_socket)
                 emit loginSucceeded(m_socket);
diff --git a/src/daemon/Greeter.cpp b/src/daemon/Greeter.cpp
index 11ec19d..ed7983e 100644
--- a/src/daemon/Greeter.cpp
+++ b/src/daemon/Greeter.cpp
@@ -179,7 +179,8 @@ namespace SDDM {
             env.insert(QStringLiteral("XDG_SEAT"), m_display->seat()->name());
             env.insert(QStringLiteral("XDG_SEAT_PATH"), daemonApp->displayManager()->seatPath(m_display->seat()->name()));
             env.insert(QStringLiteral("XDG_SESSION_PATH"), daemonApp->displayManager()->sessionPath(QStringLiteral("Session%1").arg(daemonApp->newSessionId())));
-            env.insert(QStringLiteral("XDG_VTNR"), QString::number(m_display->terminalId()));
+            if (m_display->seat()->name() == QLatin1String("seat0"))
+                env.insert(QStringLiteral("XDG_VTNR"), QString::number(m_display->terminalId()));
             env.insert(QStringLiteral("XDG_SESSION_CLASS"), QStringLiteral("greeter"));
             env.insert(QStringLiteral("XDG_SESSION_TYPE"), m_display->sessionType());
             env.insert(QStringLiteral("QT_IM_MODULE"), mainConfig.InputMethod.get());
diff --git a/src/daemon/Seat.cpp b/src/daemon/Seat.cpp
index 8aef2cd..d0e9dde 100644
--- a/src/daemon/Seat.cpp
+++ b/src/daemon/Seat.cpp
@@ -55,19 +55,24 @@ namespace SDDM {
     void Seat::createDisplay(int terminalId) {
         //reload config if needed
         mainConfig.load();
-        
-        if (terminalId == -1) {
+
+        if (m_name == QLatin1String("seat0")) {
+            if (terminalId == -1) {
                 // find unused terminal
-            terminalId = findUnused(mainConfig.X11.MinimumVT.get(), [&](const int number) {
-                return m_terminalIds.contains(number);
-            });
-        }
+                terminalId = findUnused(mainConfig.X11.MinimumVT.get(), [&](const int number) {
+                    return m_terminalIds.contains(number);
+                });
+            }
 
-        // mark terminal as used
-        m_terminalIds << terminalId;
+            // mark terminal as used
+            m_terminalIds << terminalId;
 
-        // log message
-        qDebug() << "Adding new display" << "on vt" << terminalId << "...";
+            // log message
+            qDebug() << "Adding new display" << "on vt" << terminalId << "...";
+        }
+        else {
+            qDebug() << "Adding new VT-less display...";
+        }
 
         // create a new display
         Display *display = new Display(terminalId, this);
@@ -117,7 +122,8 @@ namespace SDDM {
         // vt switch automatically (VT_AUTO).
         else {
             int disp = m_displays.last()->terminalId();
-            VirtualTerminal::jumpToVt(disp, true);
+            if (disp != -1)
+                VirtualTerminal::jumpToVt(disp, true);
         }
     }
 }
-- 
2.25.1

