Index: sc-7.16/abbrev.c
===================================================================
--- sc-7.16.orig/abbrev.c
+++ sc-7.16/abbrev.c
@@ -25,6 +25,8 @@
 
 static	struct abbrev *abbr_base;
 
+int are_abbrevs();
+
 void
 add_abbr(char *string)
 {
Index: sc-7.16/sc.h
===================================================================
--- sc-7.16.orig/sc.h
+++ sc-7.16/sc.h
@@ -566,6 +566,20 @@ extern	int yyparse();
 #ifdef DOBACKUPS
 extern	int backup_file(char *path);
 #endif
+extern void yankr(struct ent *v1, struct ent *v2);
+extern void list_frames(FILE *f);
+extern void yankrow(int arg);
+extern void yankcol(int arg);
+extern void ljustify(int sr, int sc, int er, int ec);
+extern void rjustify(int sr, int sc, int er, int ec);
+extern void center(int sr, int sc, int er, int ec);
+extern void gotonote();
+extern void add_abbr(char *string);
+extern void getframe(int fd);
+extern void getrange(char *name, int fd);
+extern void doeval(struct enode *e, char *fmt, int row, int col, int fd);
+extern void doseval(struct enode *e, int row, int col, int fd);
+extern void dogetkey();
 
 extern	int modflg;
 #if !defined(VMS) && !defined(MSDOS) && defined(CRYPT_PATH)
Index: sc-7.16/sc.c
===================================================================
--- sc-7.16.orig/sc.c
+++ sc-7.16/sc.c
@@ -85,7 +85,7 @@ int	wasforw	= FALSE;
 #endif
 
 void		update();
-void		repaint();
+void		repaint(int x, int y, int len, int attron, int attroff);
 extern void	doshell();
 extern void	gohome();
 extern void	leftlimit();
@@ -827,7 +827,7 @@ main (int argc, char  **argv)
 			    break;
 			case 'c':
 			    showcell = (!showcell);
-			    repaint(lastmx, lastmy, fwidth[lastcol]);
+			    repaint(lastmx, lastmy, fwidth[lastcol], 0, 0);
 			    error("Cell highlighting %sabled.",
 				    showcell ? "en" : "dis");
 			    --modflg;	/* negate the modflg++ */
Index: sc-7.16/xmalloc.c
===================================================================
--- sc-7.16.orig/xmalloc.c
+++ sc-7.16/xmalloc.c
@@ -7,7 +7,7 @@
 #include <curses.h>
 #include "sc.h"
 
-void		fatal();
+void		fatal(char *str);
 
 #ifdef SYSV3
 extern void	free();
