Index: sc-7.16/cmds.c
===================================================================
--- sc-7.16.orig/cmds.c
+++ sc-7.16/cmds.c
@@ -2407,7 +2407,7 @@ syncref(register struct enode *e)
     } else {
 	switch (e->op) {
 	    case 'v':
-		if (e->e.v.vp->flags & is_cleared) {
+		if (e->e.v.vp->flags & is_cleared_sc) {
 		    e->op = ERR_;
 		    e->e.o.left = NULL;
 		    e->e.o.right = NULL;
Index: sc-7.16/interp.c
===================================================================
--- sc-7.16.orig/interp.c
+++ sc-7.16/interp.c
@@ -2158,7 +2158,7 @@ fill(struct ent *v1, struct ent *v2, dou
 	    n->v = start;
 	    start += inc;
 	    n->flags |= (is_changed|is_valid);
-	    n->flags &= ~(is_cleared);
+	    n->flags &= ~(is_cleared_sc);
 	}
     }
     else if (calc_order == BYCOLS) {
@@ -2169,7 +2169,7 @@ fill(struct ent *v1, struct ent *v2, dou
 	    n->v = start;
 	    start += inc;
 	    n->flags |= (is_changed|is_valid);
-	    n->flags &= ~(is_cleared);
+	    n->flags &= ~(is_cleared_sc);
 	}
     }
     else error(" Internal error calc_order");
@@ -2460,7 +2460,7 @@ clearent(struct ent *v)
     if (v->format)
 	scxfree(v->format);
     v->format = NULL;
-    v->flags = (is_changed|is_cleared);
+    v->flags = (is_changed|is_cleared_sc);
     changed++;
     modflg++;
 }
Index: sc-7.16/sc.c
===================================================================
--- sc-7.16.orig/sc.c
+++ sc-7.16/sc.c
@@ -165,7 +165,7 @@ lookat(int row, int col)
     if (*pp == NULL) {
         if (freeents != NULL) {
 	    *pp = freeents;
-	    (*pp)->flags &= ~is_cleared;
+	    (*pp)->flags &= ~is_cleared_sc;
 	    (*pp)->flags |= may_sync;
 	    freeents = freeents->next;
 	} else
Index: sc-7.16/sc.h
===================================================================
--- sc-7.16.orig/sc.h
+++ sc-7.16/sc.h
@@ -304,7 +304,7 @@ struct go_save {
 #define is_deleted   0020
 #define is_locked    0040
 #define is_label     0100
-#define is_cleared   0200
+#define is_cleared_sc 0200
 #define may_sync     0400
 
 /* cell error (1st generation (ERROR) or 2nd+ (INVALID)) */
