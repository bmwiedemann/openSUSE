-------------------------------------------------------------------
Tue Oct 29 22:11:44 UTC 2024 - Jan Engelhardt <jengelh@inai.de>

- Update to release 2.3.0
  * Improved fast-decode level 1 option to increase its AV1 software
    cycle reduction by ~10% while maintaining the same quality
    levels.
  * New fast-decode level 2 to allow for an average AV1 software
    cycle reduction of 25-50% vs fast-decode 0 with a 1-3% BD-Rate
    loss across the presets.
  * Improved --lp settings for high resolutions, with CRF gaining a
    ~4% improvement in speed and VBR gaining ~15%.
  * Further ARM-based optimizations improving the efficiency of
    previously written NEON implementations by an average of 30%.

-------------------------------------------------------------------
Fri Aug 23 20:39:25 UTC 2024 - Jan Engelhardt <jengelh@inai.de>

- Update to release 2.2.1
  * Bug fixes for ARM-based macOS only

-------------------------------------------------------------------
Mon Aug 19 20:39:27 UTC 2024 - Jan Engelhardt <jengelh@inai.de>

- Update to release 2.2.0
  * Improve the tradeoffs for the random access mode across presets:
  * Speedup of ~15% across presets M0 - M8 while maintaining
    similar quality levels
  * Improve the tradeoffs for the low-delay mode across presets
  * Increased temporal resolution setting to 6L for 4k
    resolutions by default
  * Added ARM optimizations for functions with c_only equivalent
    yielding an average speedup of ~13% for 4k10bit

-------------------------------------------------------------------
Thu Jul 11 08:47:36 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 2.1.2:
  * Cleanup, bug fixes:
  * Fixed profile-guided-optimization build by removing the
    remaining decoder path

-------------------------------------------------------------------
Tue Jun 25 20:46:15 UTC 2024 - Jan Engelhardt <jengelh@inai.de>

- Update to release 2.1.1
  * Removed the SVT-AV1 Decoder portion of the project.
  * Improved documentation.

-------------------------------------------------------------------
Mon May 20 10:20:18 UTC 2024 - Jan Engelhardt <jengelh@inai.de>

- Update to release 2.1
  * Presets 6 and 12 are now pointing to presets 7 and 13
    respectively due to the lack of spacing between the presets.
  * Added variance boost support to improve visual quality for
    the tune vq mode.
  * Speedup of 12–40% presets M0, M3, M5 and M6 while maintaining
    similar quality levels.
  * Improved the compression efficiency of presets M11-M13 by 1-2%.

-------------------------------------------------------------------
Wed Mar 13 23:32:09 UTC 2024 - Jan Engelhardt <jengelh@inai.de>

- Update to release 2.0
  * Changed the API signaling the End Of Stream (EOS) with the
    last frame vs with an empty frame
  * Removed the 3-pass VBR mode which changed the calling
    mechanism of multi-pass VBR
  * Improve the tradeoffs for the random access mode across
    presets:
  * Improved the compression efficiency of presets M9-M13 by 1-4%
  * Replaced the 3-pass VBR with a 2-pass VBR
  * Memory savings of 20-35% for LP 8 mode in preset M6 and below
    and 1-5% in other modes/presets

-------------------------------------------------------------------
Tue Dec 12 09:46:46 UTC 2023 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.8.0
  * Improve the tradeoffs for the random access mode across presets:
  * Speedup CRF presets M6 to M0 by 17-53% while maintaining
    similar quality levels
  * Re-adjust CRF presets M7 to M13 for better quality with BD-rate
    gains ranging from 1-4%
  * Improve the quality and speed of the 1-pass VBR mode
  * Add API allowing to update bitrate / CRF and Key_frame
    placement during the encoding session for CBR lowdelay mode and
    CRF Random Access mode
  * ARM Neon SIMD optimizations for most critical kernels allowing
    for a 4.5-8x fps speedup vs the c implementation

-------------------------------------------------------------------
Fri Nov  3 09:31:24 UTC 2023 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.7.0
  * Encoder:
  * Improve the tradeoffs for the random access mode across
    presets MR-M13
  * Quality improvements across all presets and metrics ranging
    from 0.3% to 4.5% in BD-rate
  * Added an experimental tune SSIM mode yielding ~3-4%
    additional SSIM BD-rate gains

-------------------------------------------------------------------
Mon Jun 26 08:53:46 UTC 2023 - Andreas Schwab <schwab@suse.de>

- Enable build on riscv64

-------------------------------------------------------------------
Mon Jun 19 23:25:45 UTC 2023 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.6.0
  * Improved the tradeoffs for the random access mode across
    presets M1-M13:
  * Speeding up the higher quality presets by 30-40%
  * Improving the BD-rate by 1-4% for the faster presets
  * Improved the tradeoffs for the low delay mode for both screen
    content and non-screen content encoding modes
  * Added a toggle to remove the legacy one-frame buffer at the
    input of the pipeline allowing the low delay mode to operate
    at sub-frame processing latencies
  * Added a new API allowing the user to specify quantization
    offsets for a region of interest per frame

-------------------------------------------------------------------
Thu Mar 30 09:10:48 UTC 2023 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Enable build on aarch64

-------------------------------------------------------------------
Mon Jan  2 21:17:48 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 1.4.1:
  * Fix CRF with maxrate bug causing bitrate to be significantly limited for
    CRF encodings
  * Fix command line parsing forcing 1-pass in a 2-pass encoding mode when
    the --keyint=`x`s format is used
  * Fix decoder segfault due to assuming aligned buffers in the inverse
    transform assembly

-------------------------------------------------------------------
Mon Dec  5 19:55:53 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 1.4.0:
  * Adopted the 6L / 32-picture mini-GOP configuraion as default and
    adjusted MD feature levels accordingly yielding higher compression
    efficiency gains
  * Update the TPL model to account for the larger mini-gop size
  * Re-tune presets M0-M12 using the gained coding efficiency for improved
    quality vs cycles tradeoffs
  * Allow duplicate commandline parameters to be parsed and take into
    consideration the latter to allow AWCY integration
  * Build, Cleanup and Documentation
  * Make include and lib paths friendly to abs and rel paths
  * Update preset and API documentation
  * Various functional bug fixes
  * Remove manual prediction structure support

-------------------------------------------------------------------
Thu Oct 20 11:51:11 UTC 2022 - Bjørn Lie <bjorn.lie@gmail.com>

- Update to release 1.3.0:
  * Encoder:
    - Port SIMD optimizations from libDav1D making the conformant
      path (Inv. Transform) faster
    - Enabling smaller mini-GOP size configurations and tuning it
      for the low delay mode
    - Tuning the low-latency mode in random access targeting
      latencies from 250ms to 1s
    - Adding GOP-constrained Rate Control targeting low-latency
      streaming applications
    - Optimize mode decision features levels for depth
      partitioning, RDOQ, MD stage0 pruning in-loop filtering
      temporal filtering and TPL adding more granularity and
      gaining further quality
    - Preset tuning M0-M13 to smooth the spacing and utilize the
      quality improvements towards better tradeoffs
  * Build, Cleanup and Documentation:
    - Update preset and API documentation
    - Various functional bug fixes
    - Remove the use of GLOB in cmake and use file names
- Changes from release 1.2.1:
  * Encoder: Fix a crash at the end of the encode that may occur
    when an invalid metadata packet is sent with the EOS packet
  * Build, Cleanup:
    - y4m header pasring code cleanup
    - API cleanup and enhancements adding string options for RC
      mode
    - Added option to build without app / dec / enc using the
      build.sh / build.bat scripts

-------------------------------------------------------------------
Wed Aug  3 15:07:11 UTC 2022 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.0
  * TPL tradeoff optimizations for 4L pred structure
  * Quality-vs-cycles tradeoff improvements across all presets
  * Add ability to force key_frame positions through ffmpeg for
    CRF mode
  * Minimize the quality impact of fast-decode while maintaining
    the decoder speedup
  * AVX2 optimizations for low delay mode
  * Improve CRF preset tradeoffs for both the default and
    fast-decode modes
  * Improve the SSIM-based tradeoffs of the presets without
    impacting those of PSNR / VMAF
  * Improve CBR mode by enhancing the bit-distribution within the
    GOP
  * Added support for reference frame scaling
  * Added support for quantization matrices
  * AVX2 optimizations for low-delay mode
  * TPL-based VBR mode improvements
  * Improved Chroma RDOQ
  * Improve TPL QP Scaling
  * Add length info to ivf header
  * Fix support for metadata pass-through
  * Add ability to specify Chroma and Luma qindex offsets
    independently on top of CRF qp assignments

-------------------------------------------------------------------
Fri Apr 22 21:47:04 UTC 2022 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.0.0
  * Added S-frames support
  * Added CBR Rate control mode for low delay
  * Added support for chroma position signaling
  * Added support for skipping denoising pictures after film
    grain synthesis
  * Extend fast-decode support to cover presets M0-M10

-------------------------------------------------------------------
Wed Feb 16 10:01:52 UTC 2022 - Mia Herkt <mia@0x0.st>

- Disable forced realtime scheduler priority
  By default, the encoder library will attempt to set realtime
  scheduler priority. Disable this behavior, as it serves no
  practical purpose (video encoding does not benefit from reduced
  process latency) and will only make the system unresponsive.
  (Additionally, it is arguably not a video encoder library’s job
  to manage scheduler priorities for the calling process.)
  See https://gitlab.com/AOMediaCodec/SVT-AV1/-/issues/1714

-------------------------------------------------------------------
Wed Jan 26 08:27:06 UTC 2022 - Enrico Belleri <idesmi@protonmail.com>

- Update to 0.9.0
  * New faster presets M9-M12, M12 reaching similar complexity level to that of x264 veryfast
  * New multi-pass and single pass VBR implementation minimizing the quality difference vs CRF while reducing the cycle overhead
  * Quality vs density tradeoffs improvements across all presets in CRF mode
  * Added support for CRF with capped bitrate
  * Added support for overlay frames and super resolution
  * Fixed film grain synthesis bugs
  * Added experimental support for > 4k resolutions
  * Added experimental support for the low delay prediction structure
  * Significant memory reduction especially for faster presets in a multi-threaded environment
  * API configuration structure cleanup removing all invalid or out of date parameters
  * Speedup legacy CPUs for faster development by adding SSE code for corresponding C-kernels
  * Updated the code license from BSD 2-clause to BSD 3-clause clear

-------------------------------------------------------------------
Fri May 28 09:52:23 UTC 2021 - Jan Engelhardt <jengelh@inai.de>

- Update to release 0.8.7
  * Feature optimizations: creating new mode decision /
    encode-decode feature levels allowing better speed / quality
    trade-off granularity.
  * Preset repositioning after adopting new levels.
  * Preset 8 achieving similar speed levels to that of x265
    medium in the VOD (shot-based encoding) use-case while
    maintaining quality gains.
  * New 1-pass and 2-pass VBR implementation ported from libaom
    and adapted to the SVT architecture.
- Drop 1568-backport.patch (no longer applies)
- Remove wrong Obsoletes/Provides

-------------------------------------------------------------------
Tue Nov 10 11:04:19 UTC 2020 - Andreas Schneider <asn@cryptomilk.org>

- Update to version 0.8.5
  * https://github.com/AOMediaCodec/SVT-AV1/blob/v0.8.5/CHANGELOG.md
- Added 1568-backport.patch
- Added manpages

-------------------------------------------------------------------
Wed May  1 09:09:48 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Go back to tar_scm; obs_scm does not work with quilt.
- Bump SO version for change from Apr 25/29 2019.

-------------------------------------------------------------------
Tue Apr 30 20:56:41 UTC 2019 - Hans-Peter Jansen <hpj@urpla.net>

- fix missing parts for decode lib

-------------------------------------------------------------------
Thu Apr 25 08:47:09 UTC 2019 - Adrian Schröter <adrian@suse.de>

- update to b4ca700d36c9655e37e9f091bfe983a23ec0c1bd
  * new decode sub package
- use obs_scm again (it is on purpose for git snapshots)

-------------------------------------------------------------------
Mon Feb 18 11:59:38 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Use %cmake macro

-------------------------------------------------------------------
Sat Feb 16 12:18:45 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Update descriptions, make it fit for Factory.
- Use the same macro style everywhere.
- Edit fix-build.patch to conform to SLPP.

-------------------------------------------------------------------
Tue Feb  5 08:58:20 UTC 2019 - Adrian Schröter <adrian@suse.de>

- initial package of current git master (no tags yet)
