
Unbundle cddlib, lrslib and permlib,
and adjust code for new boost 1.69, lrslib-0.7.0.

---
 CMakeLists.txt                                              |    6 ++----
 sympol/CMakeLists.txt                                       |    6 +++---
 sympol/raycomputationlrs.cpp                                |    3 ---
 sympol/symmetrycomputation.cpp                              |    2 +-
 sympol/symmetrygroupconstruction/graphconstructionbliss.cpp |    1 +
 sympol/sympol.cpp                                           |    2 +-
 6 files changed, 8 insertions(+), 12 deletions(-)

Index: sympol-0.1.8/CMakeLists.txt
===================================================================
--- sympol-0.1.8.orig/CMakeLists.txt
+++ sympol-0.1.8/CMakeLists.txt
@@ -15,15 +15,13 @@ IF( NOT CMAKE_BUILD_TYPE )
 ENDIF( NOT CMAKE_BUILD_TYPE )
 
 add_definitions(-Wall)
-set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -O3 -g -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG")
-set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG")
+set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -g -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -DGMP")
+set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -DBOOST_DISABLE_ASSERTS -DEIGEN_NO_DEBUG -DGMP")
 
 enable_testing()
 add_test(NAME perltest WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/contrib COMMAND perl test-sympol.pl ${PROJECT_BINARY_DIR})
 
 add_subdirectory(sympol)
-add_subdirectory(external/lrslib-042c)
-add_subdirectory(external/cddlib-094f)
 add_subdirectory(test)
 
 exec_program( ${CMAKE_COMMAND} ARGS -E copy_directory ${PROJECT_SOURCE_DIR}/data ${PROJECT_BINARY_DIR}/data )
Index: sympol-0.1.8/sympol/CMakeLists.txt
===================================================================
--- sympol-0.1.8.orig/sympol/CMakeLists.txt
+++ sympol-0.1.8/sympol/CMakeLists.txt
@@ -38,10 +38,10 @@ SET (Boost_USE_MULTITHREADED TRUE)
 find_package(Boost 1.34.1 COMPONENTS program_options REQUIRED)
 include_directories(${Boost_INCLUDE_DIRS})
 
-include_directories(../external/boost ../external/permlib ../external/lrslib-042c ../external/cddlib-094f ${CMAKE_CURRENT_BINARY_DIR})
+include_directories(../external/boost /usr/include/lrslib /usr/include/cdd ${CMAKE_CURRENT_BINARY_DIR})
 add_definitions(-Woverloaded-virtual)
 # lrs flags
-add_definitions(-DGMP -DLRS_QUIET)
+add_definitions(-DGMP -DMA -DLRS_QUIET)
 # cdd flags
 add_definitions(-DGMPRATIONAL)
 
@@ -73,7 +73,7 @@ set_target_properties(sympol PROPERTIES
 add_executable(sympolbin sympol.cpp)
 set_target_properties(sympolbin PROPERTIES OUTPUT_NAME sympol)
 
-set(TARGET_LIBS ${TARGET_LIBS} lrsgmp cddgmp ${GMP_LIBRARIES} ${Boost_LIBRARIES})
+set(TARGET_LIBS ${TARGET_LIBS} lrs cddgmp ${GMP_LIBRARIES} ${Boost_LIBRARIES})
 target_link_libraries(sympol ${TARGET_LIBS})
 target_link_libraries(sympolbin sympol)
 
Index: sympol-0.1.8/sympol/raycomputationlrs.cpp
===================================================================
--- sympol-0.1.8.orig/sympol/raycomputationlrs.cpp
+++ sympol-0.1.8/sympol/raycomputationlrs.cpp
@@ -65,9 +65,6 @@ bool RayComputationLRS::finish() {
     if (!RayComputationLRS::ms_bInitialized) {
         return true;
     }
-
-    lrs_mp_close();
-    
     if (RayComputationLRS::ms_fIn != NULL) {
         if (std::fclose(RayComputationLRS::ms_fIn)) {
             return false;
Index: sympol-0.1.8/sympol/symmetrycomputation.cpp
===================================================================
--- sympol-0.1.8.orig/sympol/symmetrycomputation.cpp
+++ sympol-0.1.8/sympol/symmetrycomputation.cpp
@@ -84,7 +84,7 @@ bool SymmetryComputation::equivalentFace
   backtrackSearch.construct(setF1.begin(), setF1.end(), setF2.begin(), setF2.end());
   boost::shared_ptr<PERM> repr = backtrackSearch.searchCosetRepresentative();
     
-  return repr;
+  return repr.get();
 }
 
 
Index: sympol-0.1.8/sympol/symmetrygroupconstruction/graphconstructionbliss.cpp
===================================================================
--- sympol-0.1.8.orig/sympol/symmetrygroupconstruction/graphconstructionbliss.cpp
+++ sympol-0.1.8/sympol/symmetrygroupconstruction/graphconstructionbliss.cpp
@@ -7,6 +7,7 @@
 
 #if HAVE_BLISS
 
+#include <cmath> // std::ceil, log2
 #include <bliss/graph.hh>
 
 using namespace sympol;
Index: sympol-0.1.8/sympol/sympol.cpp
===================================================================
--- sympol-0.1.8.orig/sympol/sympol.cpp
+++ sympol-0.1.8/sympol/sympol.cpp
@@ -89,7 +89,7 @@ uint correct_id(uint id, uint apexIndex)
 
 
 int main(int argc, char* argv[]) {
-	std::cout << "SymPol " << SYMPOL_VERSION << " and PermLib " << PERMLIB_VERSION << " with lrs 4.2c and cddlib 0.94f";
+	std::cout << "SymPol " << SYMPOL_VERSION << " and PermLib " << PERMLIB_VERSION << " with lrs and cddlib";
 #if HAVE_BLISS
 	std::cout << " and bliss";
 #endif
