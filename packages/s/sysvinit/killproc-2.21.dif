---
 Makefile    |    6 ++----
 libinit.c   |    7 ++++---
 startproc.c |    4 ++--
 3 files changed, 8 insertions(+), 9 deletions(-)

--- Makefile
+++ Makefile	2016-01-25 15:42:08.730864821 +0000
@@ -15,10 +15,8 @@ DESTDIR	 =
 VERSION	 =	2.21
 DATE	 =	$(shell date +'%d%b%y' | tr '[:lower:]' '[:upper:]')
 
-ifneq ($(INC),)
-   LIBS  +=	-lblogger
-   COPTS +=	-DUSE_BLOGD
-endif
+  LIBS  +=	-lblogger -lpthread
+  COPTS +=	-DUSE_BLOGD
 
 #
 # Architecture
--- libinit.c
+++ libinit.c	2016-10-04 13:22:04.272083140 +0000
@@ -265,7 +265,7 @@ static inline boolean isnetfs(const char
 static void init_mounts(void)
 {
     char point[PATH_MAX+1];
-    char fstype[126];
+    char fstype[257];
     struct stat st;
     int mid, parid, max = 0;
     uint maj, min;
@@ -280,7 +280,7 @@ static void init_mounts(void)
 
     if ((mnt = fopen("/proc/self/mountinfo", "re")) == (FILE*)0)
 	return;
-    while (fscanf(mnt, "%i %i %u:%u %*s %s %*s - %*s %s %*[^\n]", &mid, &parid, &maj, &min, &point[0], &fstype[0]) == 6) {
+    while (fscanf(mnt, "%i %i %u:%u %*s %s %*s - %s %*s %*[^\n]", &mid, &parid, &maj, &min, &point[0], &fstype[0]) == 6) {
 	const size_t nlen = strlen(point);
 	MNTINFO *restrict p;
 	if (posix_memalign((void*)&p, sizeof(void*), alignof(MNTINFO)+(nlen+1)) != 0) {
@@ -626,7 +626,8 @@ static pid_t getsession(const pid_t pid)
 {
     pid_t session = getsid(pid);
     if ((long)session < 0) {
-	warn("can not get session id for process %ld!\n", (long)pid);
+	if (errno != ESRCH)
+	    warn("can not get session id for process %ld!\n", (long)pid);
 	session = 1;
     }
     return session;
--- startproc.c
+++ startproc.c	2014-05-27 12:08:10.000000000 +0000
@@ -778,7 +778,7 @@ retry:
 	     * to see a process damage.
 	     */
 	    usleep(10*1000);	/* 10 ms time for the child and its child */
-	    if (++n < 10)
+	    if (++n < 50)
 		goto retry;
 	    break;
 	default:
