-------------------------------------------------------------------
Sun Dec  8 18:15:12 UTC 2024 - Andreas Stieger <andreas.stieger@gmx.de>

- Add patch from upstream to fix regression affecting hamlib
  swig-4.3.0-Fix-precedence-of-casts.patch

-------------------------------------------------------------------
Mon Oct 21 11:49:43 UTC 2024 - Klaus Kämpf <kkaempf@suse.de>

- Update to 4.3.0 (final)

-------------------------------------------------------------------
Tue Oct  8 09:43:32 UTC 2024 - Klaus Kämpf <kkaempf@suse.de>

- Update to 4.3.0~beta1
  - Add experimental support for C as a target language.
  - MzScheme/Racket is deprecated and planned for removal in SWIG-4.4.
  - The distributed Windows binary is now a 64-bit executable.
  - Add some missing use of move semantics for performance improvements.
  - Enhanced handling of namespaces when using the nspace feature.
  - STL wrapper enhancements for std::unique_ptr, std::string_view,
    std::filesystem.
  - Various enum and enum class wrapping improvements.
  - Other C++ handling improvements around templates, friends, C++11
    trailing return types and C++17 fold expressions.
  - Many parser improvements for both C and C++, especially
    expressions.
  - Improvements to handling of string and character literals.
  - Minor preprocessor fixes.
  - Python: Stricter stable ABI conformance, add support for python-3.13.
  - C#: Add support for converting Doxygen comments into XML C# comments.
  - Various other target language specific enhancements and updates for
    Java, Javascript, Lua, MzScheme, Ocaml, Octave, Perl, Python, R, Ruby.

-------------------------------------------------------------------
Sun Feb 25 09:25:59 UTC 2024 - Andreas Stieger <andreas.stieger@gmx.de>

- update to 4.2.1:
  * Tcl 9.0 support
  * Octave 9.0 support
  * Improvements wrapping friend functions
  * Variadic templated functions within a template support
  * Type deduction enhancements
  * Stability and regression fixes
- package examples as noarch

-------------------------------------------------------------------
Thu Jan 25 11:22:31 UTC 2024 - ecsos <ecsos@opensuse.org>

- Fix build error on Leap.

-------------------------------------------------------------------
Tue Jan 02 08:33:49 UTC 2024 - kkaempf@suse.com

- Update to version 4.2.0:
  * Drop version number from index.html
  * Visual C++ warning suppression
  * Fix some warnings for Py_LIMITED_API
  * Ruby 3.3 released and works now in GHA
  * Visual C++ warning fixes
  * Add 4.2.0 release date
  * Revert mistaken commit
  * Document -std= options
  * [Tcl] Prepare `load` command usage for TIP 595 (#2737)
  * Python castmode minor tweaks
  * CHANGES file correction
  * Remove removed -stable-abi option from --help output
  * [PHP] Fix %feature(php:allowdynamicproperties, 0)
  * Add Node-API to release notes
  * Create tarball in one step
  * Fix maybe uninitialized warnings
  * Document directorout std::string_view limitations
  * python/cast_mode: Add tests for min/max of double -> int convertions.
  * python/cast_mode: Fix integer overflow of LONG_MAX+1.

-------------------------------------------------------------------
Thu Dec 21 12:30:52 UTC 2023 - kkaempf@suse.com

- Update to version 4.2.0-beta1:
  * HTML fixes
  * Update release notes summary
  * Expand director_string_runme.*
  * Sort out directorout typemaps for std::string_view
  * Fix testcase comment typo
  * Make csharp_argument_defaults_feature testcase c++98 compatible
  * Changes file update for Ruby negative number checks
  * Minor tweaks and docs for the cs:defaultargs feature
  * Reworked python limited api when checking type of a PyObject
  * Python stable ABI notes
  * Avoid testing python_runtime_data.multicpptest for builtin and stable abi
  * Stable abi and std::string_view
  * docstring example for stable abi
  * Corrections for using EXTRA_CXXFLAGS in GHA
  * Fix for python-3.11+ and stable abi
  * Fix seg fault using stable abi for Python < 3.10 for invalid unicode
  * Document Python stable ABI support
  * SWIG_AsCharPtrAndSize simplification and performance improvement
  * Revert mistaken directorout std::string_view typemap change
  * Fix std::string_view typemaps for Py_LIMITED_API
  * -Werror=declaration-after-statement fix for Python 2
  * Rename SWIG’s Tcl_GetBoolFromObj()
  * Replace SWIG_Python_str_AsChar with SWIG_PyUnicode_AsUTF8AndSize
  * Simpler SWIG_AsCharPtrAndSize implementation - remove usage of SWIG_Python_str_AsChar
  * CHANGES.current: Add entry for previous commit
  * Use Tcl_GetString() instead of Tcl_GetStringFromObj(…, NULL)
  * [perl] Fix compiler warnings
  * Expand cpp_decltype_unsupported error testcase
  * Update references to libv8-dev
  * Remove incorrect ticket reference
  * Fix typo
  * Rename -py3-stable-abi option to -stable-abi
  * Expand cpp_decltype_unsupported error testcase
  * feature("cs:defaultargs") interface test
  * [Tcl] Add missing casts to NULL sentinel
  * Python stable abi memory leak fix
  * Python stable abi for std::filesystem
  * Merge conflict fixes and consistent error reporting in stable abi checks
  * Workaround SWIG/Go bug triggered by extended testcase
  * Add testcase for decltype cases we don't yet deduce
  * Extend type deduction
  * Fix deduced type of unary *
  * [Ocaml] Remove deprecated -suffix command line option
  * Fix minor doc typos
  * Remove deprecated shared_ptr and intrusive_ptr macros
  * Remove specialize_std_map_on_* for guile and mzscheme
  * Remove deprecated map and vector specialisation macros
  * Remove long-deprecated %attribute_ref
  * feature("cs:defaultargs") review changes
  * Add changes entry for python potential multi-thread crash
  * Update comment referencing removed GH API
  * [guile] Remove unnecessary (char*) casts
  * Eliminate lingering use of removed GH API
  * Fix out-dated developer docs
  * Removed unused T_ENUM code
  * Support type deduction of enums
  * Address decltype(foo(0)) segfault better
  * feature("cs:defaultargs")
  * Fix segfault on decltype(foo(0))
  * Update type inference documentation
  * Fix typos in comments and docs
  * Add missing cpp20_constexpr_destructor testcase
  * Add support for C++20 constexpr destructors
  * Only suppress -Wbool-compare for GCC >= 5
  * Avoid warning in cpp11_decltype
  * Deduce type of TYPE(EXPRESSION)
  * Fix director_classes testcase failures on x86
  * Suppress -Wbool-comapre warnings in constant_expr_c testcase
  * Fix testcase addition in previous commit
  * Fix dropping of parentheses around < and > expressions
  * Fix deduced result type of bitwise not
  * Add <type_traits> fragment for traits usage in std::filesystem
  * Correct const std::filesystem & typemaps
  * Improve type deduction
  * Fix memory leak wrapping const std::filesystem&
  * std::filesystem pointer handling correction
  * Python std::filesystem cleanup
  * Cosmetic whitespace corrections
  * GHA allow fail for ruby-3.3
  * Fix for closing off C# property declaration
  * Fix random doubled spaces in code
  * Add CHANGES entries for previous two commits
  * [Tcl] Avoid `-Wmissing-braces` warning
  * [Tcl] Migrate `CONST` to `const`
  * Enhance the C# std::unordered_set testcase
  * CMake: Bump required version (#2696)
  * Replace empty() method with IsEmpty C# property in STL containers
  * Add C# std_unordered_set.i for wrapping std::std_unordered_set
  * [Tcl] Remove docs for CONSTANT typemaps
  * Fix text formatting
  * Support -std= command line option
  * Add runtime tests for C# std::unordered_map
  * Add csbegin, dbegin, javabegin for %module
  * Modify testcase to be c++98 compliant
  * $typemap() fix for handling variable overrides
  * Improvements to $typemap() special variable replacement overrides
  * [ci] Fix Ruby 3.3 job
  * Remove reintroduced reference to BOTH
  * Correct the implementation of Python PEP 207.
  * csharp: Added std_unordered_map.i
  * Correct initialization order in Language
  * Correct github issue link
  * C++11 enum base type is now used for D enum base type
  * C++11 enum base type is now used for C# underlying enum type
  * Use single characters instead of strings where possible
  * Call swig_msg.c_str() directly rather than virtual method
  * Remove redundant initialization code
  * Further using declarations fix for inheritance hierarchies
  * Swig_symbol_clookup_check bug fix
  * Fix minor typos in manual
  * [ci] Add Ruby 3.3 build
  * [doc] Update "known to work" for Ruby
  * Fix redundant cast warning in Java std::map wrapper put method
  * carrays.i library modified to use size_t instead of int
  * D size_t typecheck
  * [ci] Add job for PHP 8.3
  * [PHP] Fix testcase director_finalizer with PHP 8.3
  * Fix misindented line
  * Fix comment typos
  * Give https: URL for PCRE download
  * Fix suggested replacement for -feature
  * Java STL changes to use Java int, support 64-bit size_t
  * Improved C long handling for C#
  * simplify swigarch
  * Slim down swigarch.i
  * Java - SWIGWORDSIZE64 for long type
  * Simplify inttypes.i
  * Enhanced std::map for non-default constructible types changes entry
  * Add missing exception.i for std::map wrappers for MzScheme and Guile
  * std::map wrappers and non-default constructible
  * Changes file update for array variable initialisation
  * Upgrade boost version to fix appveyor testing
  * to run the CI
  * Add test for C++ boolean types in preprocessor
  * Source/Preprocessor/expr.c: Support boolean values in preprocessor expressions
  * Rtest3 (#2448)
  * Complete transition to rtypecheck typemaps from hard coded logic
  * Redundant code removal in nested.cxx
  * Ruby constants and uppercasing regression fix
  * Fix incorrect variable setters being generated when wrapping arrays
  * Non-assignable detection fixes when wrapping const 2D arrays
  * Non-assignable detection fixes when wrapping const member variables
  * Restore missing variable setters for types containing non-assignable static members
  * Correct instantiate of std::basic_istream and std::basic_ostream
  * Non-assignable detection fixes when wrapping rvalue reference variables
  * Non-assignable detection fixes when wrapping reference variables
  * Assignment operator detection fixes when wrapping static member variables
  * Replace Language::is_assignable with Language::is_immutable
  * Implicit assignment operator detection fixes.
  * template_private_assign
  * Add tests for C++11 deleted assignment operators and member variables
  * Private assignment for templates testcase
  * Variable setters for non-assignable types
  * Guile, Ocaml, Perl - add missing use of is_assignment() for variable wrappers
  * Fix testcase for C++20
  * C++11 deleted destructors fixes
  * Tidy up internal "has_copy_constructor" attribute
  * Tidy up internal "has_destructor" attributes
  * Remove unused "has_constructor" internal attribute
  * Fix %copyctor feature and C++11 deleted copy constructors
  * C++11 single default deleted constructor fix
  * C++11 default deleted constructors fix
  * Fixed make file ordering
  * Language module sections clarification
  * Fixed line endings
  * Remove debug output from Octave test
  * Fix for gcc-13 warning in SWIGTYPE[ANY][ANY] typemaps
  * Remove incorrect fragment dependency
  * Fix testcase warning with gcc-13
  * Fix gcc-13 warning in scilab example
  * CCache mdfour refactor to fix gcc-13 warning
  * GHA: Add node 20, add gcc-13, test with clang-14
  * Fix python 3.12 tests
  * Add in missing feature:python:tp_watched for python-3.12
  * Test python-3.12 on GHA, fix missing field initialization for builtin
  * Fix testcase for python-3.12
  * Testcase fix for python-3.12
  * Fix missing-field-initializers warning with Py3.12
  * Correct attempts to not run tests in Javascript and Octave
  * Add some missing tests not being run
  * Suppress clang warnings in test-suite
  * Add reference to fixed SF bug
  * Remove lingering bit of except typemap support
  * [Ruby] Remove -feature command line option
  * handle `"tmap:in" == NULL`
  * Work around Visual Studio 2017 bug in testcase
  * Add support for using declarations to introduce templated members
  * Fix using declarations for deep inheritance hierarchies
  * Missing scope restore in Allocate::classDeclaration
  * Fix missing constructor generation due to abstract class test failure
  * Comment correction since recent code refactor
  * Corrected type returned from calling nodeType
  * Fail at compile time for multiple typemap substitution
  * [PHP] Add missing overloading functionality
  * [php] Fix new template_construct testcase warning
  * Fix comments to match actual function return value
  * Documentation clarification about $action in Python "shadow" feature
  * Fix %copyctor used on class hierarchies with non-const copy constructor
  * Fix duplicate sym:overname values using %copyctor
  * Fix duplicate sym:overname values using %copyctor
  * Warning 302 rewording update for %extend
  * Warnings 302 and 322 code refactor
  * Reword and simplify warnings 302 and 322
  * Correct display of redundant typedefs in Warnings 302 and 322
  * Correct display of class names in Warnings 302 and 322
  * More redefinition/redeclaration warning message improvements
  * Redefinition/redeclaration warning message improvements
  * Consistency in warnings for ambiguous/redefined templated constructors
  * Fix display of template names in error messages in parser
  * Expand constructor runtime tests to Ruby
  * Javascript - ignore constructor renaming
  * More refactoring for internal destructor and constructor names
  * C++11 using declarations for inheriting implicit base templated constructors
  * Default constructor detection fix for templated constructors
  * Constructors and destructors declared with template parameters
  * More director protected constructor tests
  * C++11 using declarations for inheriting constructors
  * Document change in Allocate module
  * Add warning for incorrect using declarations for inheriting constructors
  * Fix C++11 using declarations for inheriting implicit base constructors
  * Move adding members due to using declaration from Allocate to TypePass
  * Move addCopyConstructor, addDefaultConstructor, addDestructor from Language to Allocate
  * Replace Language::directorsEnabled() with Swig_directors_enabled()
  * Fix using declarations and templates with explicitly declared constructors
  * Add testcase for using declarations and templates
  * C++11 using declarations for inheriting constructors - template classes with template base classes
  * Internal destructor name no longer contains template parameters
  * Internal constructor name no longer contains template parameters
  * Visual C++ warning fixes in testcases
  * Appveyor - upgrade boost
  * settle for an abort
  * Clean up and comment template parameter patching code
  * use SWIG_Exception_fail
  * guard against applying in typemaps twice
  * Temporarily disable access_change test for D
  * C++11 using declarations for template classes with non-template base classes
  * [ocaml] Rename value in cpp11_function_objects.i to avoid clash
  * [ocaml] Rename value in bools.i to avoid clash
  * Add missing testcase
  * C++11 using declarations for inheriting overloaded constructors
  * Refactor accessDeclaration methods
  * Add support for C++11 using declarations for inheriting constructors
  * Added unit test
  * Using #ifdef instead of #if to prevent warnings
  * Fix for #2625 Using c++17 insert_or_assign for std::map when available.
  * Try to use wstring/wchar_t on windows
  * Reformat
  * Rename the helpers within the fragment to be more uniquely named
  * Make CI rerun (and output all failed cases for the specialPath)
  * Address review comments
  * Need to see which assert is failing on mingw
  * Verbose assert to try and see the failure on mingw
  * path::string() returns a copy not a const ref.
  * Remove cpp17_std_filesystem from common.mk, only defined for Python for now
  * Extend roundtrip test
  * Address review comment by @degasus on #1999 originally
  * Had trouble getting the test to be properly ignored. If I wrap the inline line 35 in #if __cplusplus the wrapper code isn't generated
  * Tweak tests setup
  * Cherry pick from yasamoka/master
  * Fix syntax error parsing an expression
  * Syntax error parsing expression calling function using ()
  * HTML fixes
  * Rework napi.h header file detection
  * Update COPYRIGHT file
  * Minor Javascript doc typo fixes
  * Remove trace output from Javascript testcase
  * .gitignore javascript cleanup
  * Cosmetic formatting after using make beautify
  * Javascript Node-API support added
  * Remove -dump_xml command line option
  * Fix function definition to match declaration
  * Remove more long-deprecated command line options
  * Eliminate duplicate scanner codes
  * Document missing tokens to Doc/Devel/scanner.html
  * Remove override of CXXLINK
  * [Java] Completely remove ancient pragmas
  * Eliminate T_ERROR
  * Fix directors and allprotected mode and using declarations.
  * Remove unused T_NUMERIC and T_SYMBOL
  * Fix incorrect indentation
  * Distinguish return value of <=> from int
  * Remove redundant break after return
  * Adjust parser to always treat $N as const
  * Remove some unreachable code in parser
  * Fix `make partialcheck-go-test-suite`
  * Fix typo and trailing whitespace
  * Add test that `<(`...`)>` in expression is handled
  * Fix handling of template in array size
  * [Java] Remove deprecated command line options
  * [Guile] Drop support for -Linkage ltdlmod
  * Remove superfluous casts
  * Make result variable for parser void*
  * Fix copy-and-pasted debug messages
  * Remove set but not used variable
  * Remove unused TYPE_TYPEDEF
  * Fix bogus code in C++14 auto return type handling
  * Clean up after removal of ignore typemaps
  * [Guile] Remove -gh and -scm command line options
  * Remove pointer.i from the SWIG library
  * Lib/python/embed.i: Note doesn't work with Python 3
  * Fix mislocated text in Lua docs
  * Remove deprecated BOTH typemap rule
  * Remove deprecated fallback to using include path
  * Remove deprecated -make_default, -no_default, etc
  * Remove support for -xml out.xml
  * Add CHANGES.current entry
  * Eliminate reference to old SWIG doc system
  * Add test coverage for #error and #warning
  * Remove long deprecated features
  * Use non-Doh-prefixed symbols outside of DOH itself
  * [Guile] Fix freearg typemaps for INOUT typemaps
  * char_binary_runme.m, char_binary_runme.rb
  * char_binary_runme.php: Fill in missing parts
  * Add 'char_binary' test to Ruby, PHP, Octave
  * Drop now unnecessary removal of autom4te.cache
  * Make a release distribution by running configure
  * Fix clean-d-examples for in-source-tree build
  * Fix PHP test suite error reporting
  * Make use of bison typed midrule actions
  * Mark parser rules that conflict with %expect
  * Enable bison api.token.raw option
  * Require Bison 3.5
  * [ci] Use newer bison for appveyor builds with old version
  * Remove unnecessary casting away of const
  * Fix type of c_enum_key
  * Stop defining yylex to itself
  * Stop redefining alloca
  * Remove pointless zero-ing of $$ before Exit()
  * Remove redundant explicit $$ = 0 actions
  * Make use of Bison's default action being $$ = $1;
  * Eliminate pointless zeroings of $$
  * Remove commented out testcase line
  * Fix type of parser symbol cpp_alternate_rettype
  * auto type warning improvements
  * auto without return type warning suppression
  * auto without return type cleanup
  * Fix comment typo
  * Remove INIT token which is entirely unused
  * Run bison with -Werror
  * Fix bison -Wmidrule-values warning
  * Fix bison -Wprecedence warnings
  * Run bison with -Wall
  * Use Bison %empty to mark empty rules
  * [doc] Add note that Mingw instructions are outdated
  * Remove erroneous reference to lex
  * Require Bison 3.5
  * Fix bug in previous commit
  * Fix preprocessor scanning bug
  * Fix parsing of <= and >= in templated lambda
  * Remove commented out reference to old doc system
  * Perl.html: Remove memberout from list of typemaps
  * Revert attempt to improve parsing of &&
  * Fix regression from previous change
  * Handle && in template parameter expressions
  * Fix bogus code in C++11 trailing return type handling
  * Add CHANGES.current entry for #2626
  * fix the JSC incompatibilities
  * add the last bulk batch of Python tests to JS
  * [Perl] Fix some warnings in generated wrappers
  * batch of JS run tests
  * add overload + extend + default args run test
  * bring in the `size_t` `cmalloc` in JS
  * remove hacks and implement default arguments
  * Avoid setting python error for bytes input
  * Remove commented out code left over from development
  * [python] Support bytes in std::string_view typemaps
  * use NULL instead of nullptr
  * add more JS run tests
  * Fix passing a Lua number for C++ std::string
  * Add CHANGES.current entry
  * remove the check from free
  * reset the persistent in the weak callback
  * fix JSC too
  * remove debugging leftovers
  * fix member pointers
  * another batch of run tests
  * add two Python tests
  * first batch of tests
  * [mzscheme] Document lack of support for Racket 8
  * Add missing newlines at end on new files
  * Remove lingering uses of ancient documentation system
  * Update lingering uses of %addmethods
  * add a missing rename
  * try using finally as JS keyword
  * add two Python unit tests to JS
  * add more JS run tests
  * Hook up cpp17_director_string_view testcase
  * Remove obsolete Python version checks
  * [Python] Add string_view support
  * Lib/php/std_string_view.i: Tweak order of typemaps
  * Expand std::string_view test coverage
  * [tcl] Expand li_std_string_runme.tcl
  * Fix std::string mentions in string_view testcases
  * Allow `using typename Foo;`
  * Update preproc_constants_c_runme.php
  * Update preproc_constants* testcases
  * Support deducing type of some expressions
  * Support parsing C++11 auto variables
  * [R] argcargv.i: Remove noblock=1 to support C90
  * fix a copy & paste blunder
  * [Ruby] Fix deprecation warnings with Ruby 3.x
  * Suppress syntax error after skip_balanced() fails
  * unit test for resolving abstract types inside a namespace (#2554)
  * [R] argcargv.i: Simplify in typemap
  * Fix indentation
  * argcargv.i: NULL terminate argv with empty input
  * Comment fixes
  * Add argc and argv multi-argument typemap.
  * [R] Fix use of %typemap(rtypecheck).
  * Tweak comment formatting
  * [D] Rename internal c_dstring* to SWIG_c_dstring*
  * [D] argcagv.i: Allow empty D array as input
  * Test empty array and empty string with argcargv.i
  * [scilab] Allow empty matrix as input
  * [mzscheme] argcargv.i: Allow empty array
  * [js] argcargv.i: Allow empty array or empty string
  * [Java] Handle empty Java array
  * [guile] argcargv.i: Allow empty array or empty string
  * [go] argcargv.i: Allow empty array or empty string
  * [c#] argcargv.i: Allow empty array or empty string
  * [octave] Fix argcargv.i bug
  * [MzScheme] Add throw capture for std::out_of_range.
  * [MzScheme] Add argc and argv multi-argument typemap.
  * [MzScheme] Resolve compiler warning:  control reaches end of non-void function [-Werror=return-type]
  * Clean up naming of csharp array helpers
  * Put csharp string array helpers in a fragment
  * Tweak comment formatting
  * [C#] Update argv argc typemap to generic format.
  * Drop extra tokens after #endif
  * [js] Add _runme.js files for ynit tests that pass
  * Remove another redundant NULL check before free()
  * Eliminate docs implying free() doesn't accept NULL
  * Remove more redundant NULL checks before free()
  * Add missing CHANGES entry for additional argcargv support
  * Correct to standard approach to mentioning SWIG version info in docs
  * Keep tests in alphabetical order
  * Remove redundant NULL checks before free()
  * Add D language typemaps  - "char *STRING, size_t LENGTH"  - argc and argv multi-argument
  * Fix comment typo
  * Add argc and argv multi-argument typemap to Java, Guile, JavaScript, Scilab and C#
  * Add li_constraints test for D Language.
  * Add D language to 'can throw' exceptions flag.
  * [D] Fix D examples to work when srcdir != builddir
  * Fix typo ('not' -> 'now')
  * [D] Note fixes in CHANGES.current and RELEASENOTES
  * [D] Require gdmd to be used to run tests with gdc
  * [D] Drop explicit -fversion=/-version=
  * [D] Fix to support recent D releases
  * Remove marker comment left over from debugging
  * CHANGES.current: Restore accidentally deleted lines
  * Relocate a comment to where it makes sense
  * Support deducing decltype for false and true
  * Improve #2446 fix
  * Add CHANGES.current entry for #2446
  * Stop defining SWIGOPT_* preprocessor symbols
  * [Perl] Add string_view support
  * Implement cpp11_decltype_runme.php
  * Add missing new file for Ruby string_view support
  * [Ruby] Add string_view support
  * Add comment explaining new parser rule
  * Partial support for auto without trailing return type
  * Add test that __cplusplus isn't defined in C mode
  * Define __STDC__ to 1 rather than an empty value
  * Allow defining __cplusplus on the command line
  * Define all predefined symbols after option parsing
  * Relocate comment to where it makes sense
  * Add new -U command line option
  * Clean up handling of -D a little
  * Improve --help output for -D
  * Remove duplicate defining of __cplusplus
  * Add CHANGES.current entry
  * More maintainable warning message
  * Update comment wrt #1589
  * Simplify grammar rules for alternative start symbols
  * Support parsing arbitrary expression in decltype
  * Remove obsolete debug line from callback_runme.py
  * [tcl] Add string_view support
  * Use Putc instead of Append on a temp 1 or 2 char string
  * Document what c_spaceship.i is testing
  * Improve docs for Scanner_skip_balanced() return value
  * Clean up double spaces between words in comments
  * Emit extra message for missing typecheck typemap
  * Use strchr/Strchr for single character searches
  * Add %rename to %pythoncode example
  * Add CHANGES.current entry
  * Expand li_std_string_runme.*
  * Add li_constraints test, testing 'constraints.i'. For: JavaScript, C#, go, Java, Lua, Perl, PHP, python, Ruby, TCL and Octave.
  * support check typemaps in JS
  * [java] Suppress removal warnings for finalize()
  * Fix SWIG warning from testcase cpp11_constexpr
  * Parse storage class more flexibly
  * [doc] Fix SWIG_AsCharPtrAndSize arg types
  * Initial support for std::string_view
  * Removed unused default parameter value
  * [PHP] Wrap method with both static and non-static overloads
  * Tweak to struct name in testcase for R
  * Partial revert of previous commit for typedefs
  * add an unit test
  * tentative fix for typedef/using declaration to struct typedef
  * Add #366 reference to fix for #1037
  * Fix testcase comment typo
  * [D] Stop generating Examples/d/example.mk
  * [D] Fix typo in -d2 option description
  * [D] Update docs for D1 removal
  * Drop D version 1
  * Fix CHANGES.current factual error
  * Fix typo: "temporal" which should be "temporary"
  * Allow using snprintf() instead of sprintf() in wrappers
  * [Lua] Alternative SWIG_LUA_CONSTTAB_INT fix
  * Revert "Lua variadic templates sizeof... constants fix"
  * Finish removal of SwigPySequence_Cont
  * Remove undocumented and non-existent STL std::carray
  * Remove assign method uses by the removed Python Sequence Protocol
  * Remove now redundant use of Python Sequence protocol in STL wrappers
  * Add support for all STL containers to be constructible from a Python set
  * Iterator Protocol support for std::array wrappers
  * try to ninja fix jsc
  * take into account numinputs when counting arguments
  * catches_strings_runme.php: Check exact exception message
  * [php] Add throws typemaps for string* + const string*
  * Make typemaps consistently use string::data() vs c_str()
  * [doc] Update sample swig -debug-tags output
  * Update CHANGES.current for Javascript changes
  * [js] Stop using swig -c++ for C examples
  * [js] Improve default for JSENGINE
  * [js] Turn on C++ output for node too
  * Add CHANGES.current entry
  * use the renamed name when creating a constant
  * [perl,ruby] Test OUTPUT string& typemap
  * [lua] Test INPUT,INOUT,OUTPUT for std::string&
  * [php] Support INPUT,INOUT,OUTPUT for std::string&
  * Warnings.html: Add missing warning numbers 472,473
  * Fix CanCastAsInteger if errno is set.
  * Add CHANGES.current entry for Ocaml std::string changes
  * [ci] Update to latest actions/checkout
  * Python: Suggest argcargv.i to handle char**
  * C#: Add missing explicit `global::System` in manual
  * [OCaml] Fix reference typemaps for std::string
  * [ocaml] Use CXXFLAGS when compiling C++ testcases
  * Fix #ifdef and #ifndef to work inside a %define
  * Add regression test for << in array size bug
  * Restore handling for '<<' in array size
  * Add missing newline on new error message
  * Improve error for array size with a '<' character
  * Remove remaining traces of PHP7 support
  * [php] Remove unused exception.i include
  * Make string& consistent in PHP's std_string.i
  * Clarify comment in _runme.go
  * Drop __cplusplus conditionals from testcase
  * [ci] Fix scilab 2023.0.0 download URL
  * Note that #1882 is fixed by recent change
  * scilab: add a gateway xml v6 with full function names
  * scilab: detect version 2023 correctly
  * [ci] Add scilab 6.1 build
  * Add argc and argv multi-argument to go. Make argc and argv test works in C.
  * Make y const in new testcase
  * Add CHANGES.current entry
  * Adjust new tests
  * Copy over missing parts of macro expansion code
  * Add CHANGES.current entry
  * Really fix "mixed declarations and code" warning
  * [ci] Resurrect Ruby 2.0-2.3 jobs and add 3.2 job
  * [scilab] Extract values with ":"
  * [ci] Resurrect scilab 6.0 build
  * [ci] Disable ubuntu-18.04 jobs
  * inline the header into the interface file
  * [ci] Update to latest actions/checkout
  * actually test the value
  * suppress a warning
  * save missing files from previous commit
  * move the unit tests
  * fix code readability issues
  * Remove support for PHP7
  * Fix "ISO C90 forbids mixed declarations and code" warning
  * Fix "undefining the allocator of T_DATA" error seen in Ruby 3.2
  * restore the unit test
  * alternative, much cleaner, approach
  * STL support for copying Python objects supporting Iterator protocol
  * Octave 8.1 support
  * Use $self instead of self
  * document C# std_array.i enhancements
  * std_array.i std_vector.i tweaks
  * Update octruntime.swg
  * Update octrun.swg to work with Octave v8.1.0
  * Update octruntime.swg to work with Octave v8.1.0
  * Improved error checking when defining classes and using %template.
  * Redefined identifer testcase now correctly errors
  * Update errors tests to use new template error
  * Fix duplicate const in generated code wrapping templates
  * Cosmetic change in template terminology
  * Update partial specialization test
  * Partial template specialization fixes to support default arguments
  * Revert "Allow Scilab 5.5 failure since downloads have moved"
  * Duplicate parameter name handling improvements
  * Improved variadic parameter names expansion
  * Make new testcase c++98 compliant
  * Template partial specialization improvements
  * Fix deduction of partially specialized template parameters
  * Rewrite does_parm_match used in template partial specialization
  * Add missing template_function_parm testcase
  * Added usage of nullptr instead of NULL
  * Drop configure probe for popen()
  * Fix a couple of typos in CHANGES
  * Add CHANGES.current entry for previous commit
  * Avoid unused parameter self warning
  * configure: Check for php8.2 too
  * CCache: Do not rely on C89-only features in configure.ac
  * Lib/csharp: Resolve a few warnings about unused parameters
  * Lib/csharp: Better standardized std_vector.i and std_array.i
  * Fix seg fault using %template
  * Instantiation of C++11 variadic function templates
  * Move variadic function template tests to separate testcase
  * Complete copy of testcase from Python
  * Allow Scilab 5.5 failure since downloads have moved
  * More variadic template testing
  * Slight simplification parsing variadic template parameters
  * Syntax error fixes parsing more elaborate parameter pack arguments
  * Fix instantiation of variadic class templates
  * Fix syntax error parsing variadic template parameter pack arguments
  * Lua variadic templates sizeof... constants fix
  * Parser code refactor around variadic types
  * Document improved variadic template support
  * Extend variadic template support to various type combinations
  * Support multiple arguments in variadic templates.
  * Refactor Swig_cparse_template_parms_expand()
  * Refactor %template parameters handling
  * Eliminate sprintf in generated python code
  * Fix syntax error for misplaced Doxygen comment after struct/class member. Fix syntax error using Doxygen member groups syntax, "///*}", when used after final struct/class member.
  * Improved handling of Doxygen comments in parameter lists
  * [OCaml] Runtime tests for rename_rstrip_encoder and using2
  * Fix syntax error parsing of Doxygen comments after last enum item
  * Fix parsing of unconventional Doxygen post comments for enum items.
  * Testcase fix for -Wdelete-non-virtual-dtor
  * swig-4.1.1 changes
  * Template parameters handling tidy up
  * Improved template template parameters support.
  * Add ccache-swig hash fix to RELEASENOTES
  * Ocaml name mangling fix
  * Fix push/pop mismatch
  * Add SWIG-4.1.1 RELEASENOTES summary
  * Fix UBSAN errors in ccache-swig
  * Test case fix for std::complex and non-floating types deprecation
  * Test cases fix
  * Add missing testcase cpp11_template_parameters_decltype
  * Slightly better decltype() support for expressions
  * Fix syntax error parsing unnamed template parameters with a default.
  * Follow-on fix for previous change
  * Fix undefined behaviour in parser
  * Variadic template docs correction
  * Optimise SwigType_base implementation
  * Restore testing template_expr testcase
  * Fix seg fault handling template parameter expressions containing '>='
  * Fix seg fault handling template parameter expressions containing '<='
  * more r tests
  * SwigType * handling corrections - Python builtin mangling
  * Duplicate class template instantiations via %template changes
  * more r tests
  * added testcase pointer_reference
  * [PHP] Update docs for removal of -noproxy in SWIG 4.1.0
  * Minor refactor of D, C#, Java director code
  * Simpler names when using SwigType_manglestr for templates
  * Consolidate name mangling functions
  * Remove unused code in mzscheme.cxx
  * SwigType * handling corrections - mangling
  * SwigType * handling corrections
  * SwigValueWrapper and SwigType * correction
  * Workaround for incomplete or/and keyword support in VC++
  * more tests for R
  * rename cpp14_enable_if_t to cpp17_enable_if_t
  * Add changes entry for -swiglib CMake fix
  * Correct ordering in CHANGES.current file
  * Fix infinite loop handling non-type template parameters
  * R rtypecheck typemaps
  * Overloading fixes for R and rtypecheck typemap
  * Improve R wrapper error message calling overloaded methods
  * Fix memory leak in R shared_ptr wrappers
  * li_boost_shared_ptr testcase for R
  * cpp11_attribute_specifiers testcase warning suppression
  * Bump version to 4.2.0 and migrate CHANGES to CHANGES.current
  * Use more portable PyUnicode_AsUTF8* methods.
  * Document that -php7 is for PHP 7 *or later*
  * build: harden nuget.yml permissions
  * CMake: Fix -swiglib on win32
  * [python] Prevent a potential multithreading crash
  * Add CI build using -py3-stable-abi option
  * Make Python buffer typemaps compatible with limited API
  * Don't use PyUnicode_AsUTF8() when python limited API is used
  * Make directors implementation for Python work with limited API
  * Support using stable Python ABI
  * Ruby: Add check for lower bounds of unsigned long (long) parameters
  * Ruby: Add test case for checking bounds of integral function parameters

-------------------------------------------------------------------
Thu Mar  2 12:42:07 UTC 2023 - Martin Liška <mliska@suse.cz>

- Use -fexcess-precision=fast as GCC 13 changes the default
  for C++ compiler and without the change some tests fail on i586.
  More info can be seen here:
  https://gcc.gnu.org/gcc-13/porting_to.html#excess-precision

-------------------------------------------------------------------
Thu Dec  1 08:30:26 UTC 2022 - Klaus Kämpf <kkaempf@suse.com>

- Update to 4.1.1
  * Couple of stability fixes.
  * Stability fix in ccache-swig when calculating hashes of inputs.
  * Some template handling improvements.
  * R - minor fixes plus deprecation for rtypecheck typemaps being
    optional.

-------------------------------------------------------------------
Wed Nov  2 10:54:51 UTC 2022 - Klaus Kämpf <kkaempf@suse.com>

- adapt source name to please build service

-------------------------------------------------------------------
Tue Oct 25 07:44:08 UTC 2022 - kkaempf@suse.com

- Update to version 4.1.0 from 4.1.0-beta1

-------------------------------------------------------------------
Sun Oct 16 12:50:55 UTC 2022 - Klaus Kämpf <kkaempf@suse.com>

- Update to 4.1.0~beta1
  * Add Javascript Node v12-v18 support, remove support prior to v6.
  * Octave 6.0 to 6.4 support added.
  * Add PHP 8 support.
  * PHP wrapping is now done entirely via PHP's C API
    - no more .php wrapper.
  * Perl 5.8.0 is now the oldest version SWIG supports.
  * Python 3.3 is now the oldest Python 3 version SWIG supports.
  * Python 3.9-3.11 support added.
  * Various memory leak fixes in Python generated code.
  * Scilab 5.5-6.1 support improved.
  * Many improvements for each and every target language.
  * Various preprocessor expression handling improvements.
  * Improved C99, C++11, C++14, C++17 support.
    Start adding C++20 standard.
  * Make SWIG much more move semantics friendly.
  * Add C++ std::unique_ptr support.
  * Few minor C++ template handling improvements.
  * Various C++ using declaration fixes.
  * Few fixes for handling Doxygen comments.
  * GitHub Actions is now used instead of Travis CI for continuous
    integration.
  * Add building SWIG using CMake as a secondary build system.
  * Update optional SWIG build dependency for regex support
    from PCRE to PCRE2.

- dropped patches, all upstream
  * 15515f390c5e3316a7faf0cf85d661a297d45a50.patch
  * fix-gcc12-error.patch
  * swig-Define-PY_SSIZE_T_CLEAN-macro.patch
  * swig-Define-PY_SSIZE_T_CLEAN-only-when-not-defined-yet.patch
  * swig-Python-define-PY_SSIZE_T_CLEAN.patch
  * swig-octave-6.patch
  * swig-python310.patch
  * swig308-isfinite.diff

-------------------------------------------------------------------
Fri Oct 14 14:06:08 UTC 2022 - kkaempf@suse.com

- Update to version rel-4.0.2:
  * [R] Run destructors of local C++ objects on SWIG_fail
  * [php] Update exception_memory_leak_runme.php
  * [lua] Run destructors of local C++ objects on SWIG_fail
  * Fix issues with exception_memory_leak testcase
  * Define PY_SSIZE_T_CLEAN only when not defined yet
  * Add missing SWIGTYPE *const& typemaps
  * Revert "[xml] Move to "Experimental" target language status"
  * Cleanup SWIG_VERSION definition
  * Additional SWIG_VERSION testing

-------------------------------------------------------------------
Thu Sep  8 13:23:05 UTC 2022 - Stephan Kulow <coolo@suse.com>

- Cherrypick 15515f390c5e3316a7faf0cf85d661a297d45a50.patch from
  upstream to replace obsolete pcre1 with pcre2

-------------------------------------------------------------------
Sun May  8 18:12:21 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Add swig-python310.patch -- gh#swig/swig#2064, Fix swig test
  suite with Python 3.10

-------------------------------------------------------------------
Wed Jan 19 09:23:35 UTC 2022 - Martin Liška <mliska@suse.cz>

- Add fix-gcc12-error.patch in order to fix GCC 12 compilation error.

-------------------------------------------------------------------
Tue Jun  8 22:19:19 UTC 2021 - Atri Bhattacharya <badshah400@gmail.com>

- Add swig-octave-6.patch -- Allow swig to work with octave 6 and
  above; patch part of upstream merge request [gh#swig/swig#2020].

-------------------------------------------------------------------
Thu Nov 26 20:34:33 UTC 2020 - Michael Behrisch <oss@behrisch.de>

- Fixing package dependencies for CentOS

-------------------------------------------------------------------
Mon Nov 23 10:08:22 UTC 2020 - Klaus Kämpf <kkaempf@suse.com>

- move examples to /usr/share/swig/examples

-------------------------------------------------------------------
Wed Jun 10 07:27:02 UTC 2020 - Klaus Kämpf <kkaempf@suse.com>

- Update to 4.0.2
  - A few fixes around doxygen comment handling.
  - Ruby 2.7 support added.
  - Various minor improvements to C#, D, Java, OCaml, Octave, Python,
    R, Ruby.
  - Considerable performance improvement running SWIG on large
    interface files.

- drop upstreamed patches
  ruby-std-wstring-byte-order.patch
  0001-Fix-code-generated-for-Ruby-global-variables.patch
  0002-Add-support-for-Ruby-2.7.patch
  0003-Move-new-macros-for-Ruby-to-their-dedicated-namespac.patch
  0004-Improve-description-of-cast-macros-for-Ruby.patch
        
-------------------------------------------------------------------
Sat May 23 07:04:09 UTC 2020 - Andreas Schwab <schwab@suse.de>

- Revert last change, drop 0005-disable_li_std_wstring.patch
- ruby-std-wstring-byte-order.patch: fix wstring encoding boo#1171368

-------------------------------------------------------------------
Mon May 18 15:46:46 UTC 2020 - Michel Normand <normand@linux.vnet.ibm.com>

- Add 0005-disable_li_std_wstring.patch for BE arches
  (ppc64 s390 s390x) as bypass boo#1171368

-------------------------------------------------------------------
Wed Apr 15 08:52:15 UTC 2020 - Klaus Kämpf <kkaempf@suse.com>

- Ruby 2.7 support (cherry-picked from upstream)
  0001-Fix-code-generated-for-Ruby-global-variables.patch
  0002-Add-support-for-Ruby-2.7.patch
  0003-Move-new-macros-for-Ruby-to-their-dedicated-namespac.patch
  0004-Improve-description-of-cast-macros-for-Ruby.patch

-------------------------------------------------------------------
Mon Sep  9 08:17:39 UTC 2019 - Klaus Kämpf <kkaempf@suse.com>

- Update to 4.0.1
  - SWIG now cleans up on error by removing all generated files.
  - Add Python 3.8 support.
  - Python Sphinx compatibility added for Doxygen comments.
  - Some minor regressions introduced in 4.0.0 were fixed.
  - Fix some C++17 compatibility problems in Python and Ruby generated
    code.
  - Minor improvements/fixes for C#, Java, Javascript, Lua, MzScheme,
    Ocaml, Octave and Python.
  
  See https://raw.githubusercontent.com/swig/swig/master/CHANGES

-------------------------------------------------------------------
Wed May  8 12:57:04 UTC 2019 - Klaus Kämpf <kkaempf@suse.com>

- Update to 4.0.0
  - Support for Doxygen documentation comments which are parsed and
    converted into JavaDoc or PyDoc comments.
  - STL wrappers improved for C#, Java and Ruby.
  - C++11 STL containers added for Java, Python and Ruby.
  - Improved support for parsing C++11 and C++14 code.
  - Various fixes for shared_ptr.
  - Various C preprocessor corner case fixes.
  - Corner case fixes for member function pointers.
  - Python module overhaul by simplifying the generated code and turning
    most optimizations on by default.
  - %template improvements wrt scoping to align with C++ explicit
    template instantiations.
  - Added support for a command-line options file (sometimes
    called a response file).
  - Numerous enhancements and fixes for all supported target languages.
  - SWIG now classifies the status of target languages into either
    'Experimental' or 'Supported' to indicate the expected maturity
    level.
  - Support for CFFI, Allegrocl, Chicken, CLISP, S-EXP, UFFI, Pike,
    Modula3 has been removed.
  - Octave 4.4-5.1 support added.
  - PHP5 support removed, PHP7 is now the supported PHP version.
  - Minimum Python version required is now 2.7, 3.2-3.7 are the only
    other versions supported.
  - Added support for Javascript NodeJS versions 2-10.
  - OCaml support is much improved and updated, minimum OCaml version
    required is now 3.12.0.

  See https://raw.githubusercontent.com/swig/swig/master/CHANGES

- Drop patches (all included)
  swig-3.0.12-Coverity-fix-issue-reported-for-SWIG_Python_FixMetho.patch
  swig-3.0.12-Fix-generated-code-for-constant-expressions-containi.patch
  swig-perl526.patch
  swig-3.0.12-fix-collections.patch
  swig-3.0.12-Fix-Coverity-issue-reported-for-setslice-pycontainer.patch
  swig-3.0.12-Coverity-fix-issue-reported-for-wrapper-argument-che.patch
  swig-3.0.12-support-octave-4.4.patch
  swig-ocaml-int64.patch
  swig-3.0.12-Coverity-fix-issue-reported-for-SWIG_Python_ConvertF.patch

-------------------------------------------------------------------
Fri Nov 30 12:58:08 UTC 2018 - badshah400@gmail.com

- Add swig-3.0.12-support-octave-4.4.patch to add support for
  octave 4.4; patch taken from upstream git (gh#swig/swig#1256).

-------------------------------------------------------------------
Mon Sep 17 12:15:04 UTC 2018 - Tomáš Chvátal <tchvatal@suse.com>

- Add patches to build with python 3.7 properly:
  * swig-3.0.12-Coverity-fix-issue-reported-for-SWIG_Python_ConvertF.patch
  * swig-3.0.12-Coverity-fix-issue-reported-for-SWIG_Python_FixMetho.patch
  * swig-3.0.12-Coverity-fix-issue-reported-for-wrapper-argument-che.patch
  * swig-3.0.12-Fix-Coverity-issue-reported-for-setslice-pycontainer.patch
  * swig-3.0.12-Fix-generated-code-for-constant-expressions-containi.patch
  * swig-3.0.12-fix-collections.patch
- Use version req to check for 1500 instead for non-existing release
- Move to generic requires those that are true under both conditions
- Use autopatch to apply all the patches at once

-------------------------------------------------------------------
Wed Jan  3 14:30:52 UTC 2018 - tchvatal@suse.com

- Reduce some conditionals for old distros lets consider sle11/rhel6
  as minimal supported configuration
- Make sure we can be built and distributed with python3 only
  present in the system

-------------------------------------------------------------------
Tue Nov  7 20:07:12 UTC 2017 - mpluskal@suse.com

- Run python2 and python3 tests for Factory

-------------------------------------------------------------------
Sun Sep 24 10:47:22 UTC 2017 - coolo@suse.com

- add swig-perl526.patch from upstream to work with perl 5.26

-------------------------------------------------------------------
Thu Feb  2 14:56:53 UTC 2017 - adam.majer@suse.de

- use individual libboost-*-devel packages instead of boost-devel

-------------------------------------------------------------------
Mon Jan 30 07:58:10 UTC 2017 - kkaempf@suse.com

- Update to 3.0.12
  - Add support for Octave-4.2.
  - Enhance %extend to support template functions.
  - Language specific enhancements and fixes for C#, D, Guile,
    Java, PHP7.

-------------------------------------------------------------------
Fri Dec 30 08:01:35 UTC 2016 - kkaempf@suse.com

- Update to 3.0.11
  - PHP 7 support added.
  - C++11 alias templates and type aliasing support added.
  - Minor fixes and enhancements for C# Go Guile Java Javascript
    Octave PHP Python R Ruby Scilab XML.

-------------------------------------------------------------------
Mon Jun 13 06:10:47 UTC 2016 - kkaempf@suse.com

- Update to 3.0.10
  - Regression fixes for smart pointers and importing Python modules.

-------------------------------------------------------------------
Mon May 30 09:51:37 UTC 2016 - kkaempf@suse.com

- Update to 3.0.9
  - Add support for Python's implicit namespace packages.
  - Fixes to support Go 1.6.
  - C++11 std::array support added for Java.
  - Improved C++ multiple inheritance support for Java/C# wrappers.
  - Various other minor fixes and improvements for C#, D, Go, Java,
    Javascript, Lua, Python, R, Ruby, Scilab.

- drop swig308-Fix-li_boost_array-test.patch, upstream

-------------------------------------------------------------------
Mon May 23 15:19:08 UTC 2016 - olaf@aepfle.de

- Add disabled build conditional for ocaml support (fate#320836)
- Add swig-ocaml-int64.patch (ocaml PR#6517, fate#320836)

-------------------------------------------------------------------
Tue Feb  2 14:45:14 UTC 2016 - rguenther@suse.com

- Add swig308-isfinite.diff to fix isfinite issue with new glibc.

-------------------------------------------------------------------
Thu Jan  7 21:08:33 UTC 2016 - idonmez@suse.com

- Add swig308-Fix-li_boost_array-test.patch to fix boost::array
  test on PPC.

-------------------------------------------------------------------
Thu Jan  7 08:13:38 UTC 2016 - kkaempf@suse.com

- Update to 3.0.8
  - pdf documentation enhancements.
  - Various Python 3.5 issues fixed.
  - std::array support added for Ruby and Python.
  - shared_ptr support added for Ruby.
  - Minor improvements for CFFI, Go, Java, Perl, Python, Ruby.

-------------------------------------------------------------------
Tue Aug  4 07:43:49 UTC 2015 - kkaempf@suse.com

- Update to 3.0.7
  - Add support for Octave-4.0.0.
  - Remove potential Android security exploit in generated Java classes.
  - Minor new features and bug fixes.

- drop swig-octave4.patch and swig-3.0.6.patch, upstream now

-------------------------------------------------------------------
Fri Jul 10 14:02:07 UTC 2015 - badshah400@gmail.com

- Add swig-octave4.patch to fix swig bindings for octave >= 4.0
  (patch taken from Fedora, and has been submitted upstream).

-------------------------------------------------------------------
Mon Jul  6 08:43:00 UTC 2015 - kkaempf@suse.com

- Fix ocaml check (swig-3.0.6.patch)

-------------------------------------------------------------------
Mon Jul  6 06:22:21 UTC 2015 - kkaempf@suse.com

- Update to 3.0.6
  - Stability and regression fixes.
  - Fixed parsing of C++ corner cases.
  - Language improvements and bug fixes for C#, Go, Java, Lua,
    Python, R.

- explicitly disable ocaml (bug in configure script)

-------------------------------------------------------------------
Sun Feb  1 18:32:16 UTC 2015 - dmitry_r@opensuse.org

- Update to version 3.0.5 
  * Added support for Scilab.
  * Important Python regression fix when wrapping C++ default arguments.
  * Minor improvements for C#, Go, Octave, PHP and Python.

-------------------------------------------------------------------
Thu Jan 15 06:57:56 UTC 2015 - kkaempf@suse.com

- Update to 3.0.4
  - Python regression fix when wrapping C++ default arguments.
  - Improved error messages.

-------------------------------------------------------------------
Wed Jan  7 08:23:35 UTC 2015 - kkaempf@suse.com

- Update to 3.0.3
  - Add support for C++11 strongly typed enumerations.
  - Numerous bug fixes and minor enhancements for C#, D, Go, Java,
    Javascript, PHP, Perl and Python wrappers.

- drop nested_classes.diff, patch is upstream

-------------------------------------------------------------------
Sun Sep 14 15:34:33 UTC 2014 - schwab@linux-m68k.org

- Fix syntax error in find command

-------------------------------------------------------------------
Mon Aug 25 14:17:29 CEST 2014 - mls@suse.de

- support nested classes in ruby [bnc#892480]
  new patch: nested_classes.diff

-------------------------------------------------------------------
Thu Jun  5 07:20:40 UTC 2014 - kkaempf@suse.com

- Update to 3.0.2
  - Bug fix during install and a couple of other minor changes.

-------------------------------------------------------------------
Wed May 28 06:33:31 UTC 2014 - kkaempf@suse.com

- Update to 3.0.1
  - Javascript module added. This supports JavascriptCore (Safari/Webkit),
    v8 (Chromium) and node.js currently.
  - A few notable regressions introduced in 3.0.0 have been fixed - in
    Lua, nested classes and parsing of operator <<.
  - The usual round of bug fixes and minor improvements for:
    C#, GCJ, Go, Java, Lua, PHP and Python.      

-------------------------------------------------------------------
Mon Mar 17 07:46:53 UTC 2014 - kkaempf@suse.com

- Update to 3.0.0
  - This is a major new release focusing primarily on C++
    improvements.
  - C++11 support added. Please see documentation for details of
    supported features:
    http://www.swig.org/Doc3.0/CPlusPlus11.html
  - Nested class support added. This has been taken full advantage
    of in Java and C#. Other languages can use the nested classes,
    but require further work for a more natural integration into
    the target language.
  - We urge folk knowledgeable in the other target languages to
    step forward and help with this effort.
  - Lua: improved metatables and support for %nspace.
  - Go 1.3 support added.
  - Python import improvements including relative imports.
  - Python 3.3 support completed.
  - Perl director support added.
  - C# .NET 2 support is now the minimum. Generated using statements
    are replaced by fully qualified names.
  - Bug fixes and improvements to the following languages:
    C#, Go, Guile, Java, Lua, Perl, PHP, Python, Octave, R, Ruby, Tcl
  - Various other bug fixes and improvements affecting all
    languages.
  - Note that this release contains some backwards incompatible
    changes in some languages.
  - Full detailed release notes are in the changes file.

- drop 0001-Fix-Ruby-tracking-code-to-use-C-hash.patch,
  ruby-1.8.6-newobject.patch, and swig-fix_ocaml_type.patch.
  All upstreamed.

-------------------------------------------------------------------
Mon Mar 10 01:00:30 CET 2014 - ro@suse.de

- set CCSHARED to "-fPIC" on s390/s390x 

-------------------------------------------------------------------
Sun Feb  9 18:30:13 UTC 2014 - kkaempf@suse.com

- Update to 2.0.12
  - This is a maintenance release backporting some fixes from the
    pending 3.0.0 release.
  - Octave 3.8 support added.
  - C++11 support for new versions of erase/insert in the STL
    containers.
  - Compilation fixes on some systems for the generated Lua, PHP,
    Python and R wrappers.
 
  - Drop upstreamed patches:
    swig-lua-fix-void-return-for-int-functions.patch
    swig-support-octave-3.8.0.patch
    ruby-2.0-encoding-utf8.patch

-------------------------------------------------------------------
Wed Jan 29 19:57:02 UTC 2014 - badshah400@gmail.com

- Add patch swig-support-octave-3.8.0.patch: adds support for
  octave version 3.8.0 to swig; patch taken from upstream git
  and rebased for present version. 

-------------------------------------------------------------------
Mon Sep 30 20:18:08 UTC 2013 - badshah400@gmail.com

- Add swig-lua-fix-void-return-for-int-functions.patch to fix
  void returns in non-void functions for its lua binding; patch
  submitted upstream (bnc#84331,
  https://github.com/swig/swig/issues/93).

-------------------------------------------------------------------
Thu Sep 26 07:04:29 UTC 2013 - kkaempf@suse.com

- Update to SWIG 2.0.11
  - Minor bug fixes and enhancements mostly in Python, but also
    C#, Lua, Ocaml, Octave, Perl, PHP, Python, R, Ruby, Tcl.

-------------------------------------------------------------------
Wed May 29 08:10:19 UTC 2013 - kkaempf@suse.com

- Ruby 1.8.6 (SLE10) tracks objects differently
  Add ruby-1.8.6-newobject.patch

- Remove skip-python-li_std_containers_int.patch, fixed upstream
- Remove python-2.4.patch, fixed upstream

- Fix Fedora/RHEL builds (BuildRequires:  perl-Test-Simple)

-------------------------------------------------------------------
Tue May 28 14:37:51 UTC 2013 - kkaempf@suse.com

- Change Ruby 1.9+ object tracking to use C hashes, fixes all
  failed Ruby tests.
  Patch added:   0001-Fix-Ruby-tracking-code-to-use-C-hash.patch
  Patch removed: 0008-Ruby-Disable-broken-tests.patch

-------------------------------------------------------------------
Tue May 28 13:04:21 UTC 2013 - kkaempf@suse.com

- Ruby 2.0 strictly enforces encoding
  Add ruby-2.0-encoding-utf8.patch

-------------------------------------------------------------------
Tue May 28 06:43:48 UTC 2013 - kkaempf@suse.com

- Update to SWIG 2.0.10
  - Ruby 1.9 support is now complete.
  - Add support for Guile 2.0 and Guile 1.6 support (GH interface) has
    been dropped.
  - Various small language neutral improvements and fixes.
  - Various bug fixes and minor improvements specific to C#, CFFI, D,
    Java, Octave, PHP, Python,
  - Minor bug fix in ccache-swig.
  - Development has moved to Github with Travis continuous integration
    testing - patches using https://github.com/swig/swig are welcome.     

- drop 0012-Python-Disable-broken-test-in-threads_exception.patch

-------------------------------------------------------------------
Thu Mar 28 11:56:54 CET 2013 - pth@suse.de

- Add swig-fix_ocaml_type.patch to change the declaration of 
  caml_array_length to match that in ocaml's header.

-------------------------------------------------------------------
Thu Dec 20 09:40:06 UTC 2012 - kkaempf@suse.com

- Fix RHEL4 and 6 build

-------------------------------------------------------------------
Mon Dec 17 12:52:34 UTC 2012 - kkaempf@suse.com

- Update to SWIG 2.0.9
  SWIG-2.0.9 summary:
  - Improved typemap matching.
  - Ruby 1.9 support is much improved.
  - Various bug fixes and minor improvements in C#, CFFI, Go, Java,
    Modula3, Octave, Perl, Python, R, Ruby, Tcl and in ccache-swig.

- Removed patches (included in 2.0.9 release)
  - 0001-Ruby-replace-obsolete-STR2CSTR-macro-with-StringValu.patch
  - 0002-Ruby-use-RbConfig-instead-of-deprecated-Config-modul.patch
  - 0003-Ruby-Fix-include-pathes-for-Ruby-1.9.patch
  - 0004-Ruby-Add-local-dir-to-loadpath-for-Ruby-1.9.patch
  - 0007-Ruby-1.9-methods-returns-array-of-Symbols-now.patch

- Removed broken patch
  - swig-2.0.4-guile2.patch

- Disable tests failing on (deprecated) Python 2.4
  - new patch: python-2.4.patch

-------------------------------------------------------------------
Mon Nov  5 09:57:55 UTC 2012 - kkaempf@suse.com

- fix build on SLE10: disable autogen.sh
  Add patch: PyInt_FromSize_t unavailable under Python 2.4

-------------------------------------------------------------------
Sun Nov  4 21:21:01 UTC 2012 - kkaempf@suse.com

- Update to 2.0.8
  * Fix a couple of regressions introduced in 2.0.5 and 2.0.7.
  * Improved using declarations and using directives support.
  * Minor fixes/enhancements for C#, Java, Octave, Perl and Python.

-------------------------------------------------------------------
Sun May 27 13:31:49 UTC 2012 - kkaempf@suse.com

- Fix segfault in constructor/destructor warning (upstream ID 3530078)

-------------------------------------------------------------------
Sat May 26 11:55:46 UTC 2012 - kkaempf@suse.com

- Port SWIG to Ruby 1.9 (various patches)
- Disable broken tests

-------------------------------------------------------------------
Sat May 26 11:32:12 UTC 2012 - kkaempf@suse.com

- Update to 2.0.7
  * Important regression fixes since 2.0.5 for typemaps in general and
    in Python.
  * Fixes and enhancements for Go, Java, Octave and PHP.

-------------------------------------------------------------------
Mon Apr 30 08:30:32 UTC 2012 - idonmez@suse.com

- Update to 2.0.6
  * Various fixes with templates and typedef types.
  * Some template lookup problems fixed.
  * Templated type fixes to use correct typemaps.
  * Autodoc documentation generation improvements.
  * Python STL container wrappers improvements including addition of
    stepped slicing.
  * Approximately 70 fixes and minor enhancements for the following
    target languages: AllegroCL, C#, D, Go, Java, Lua, Ocaml, Octave,
    Perl, PHP, Python, R, Ruby, Tcl, Xml.

-------------------------------------------------------------------
Mon Apr  9 19:29:34 UTC 2012 - asterios.dramis@gmail.com

- Added a patch (r12814.patch) to fix regression leading to uncompilable code
  when using typedef and function pointer references (taken from Debian).

-------------------------------------------------------------------
Tue Mar  6 19:24:07 UTC 2012 - dvaleev@suse.com

- The perl 5.12 packages are compiled with -Duse64bitint, which 
  means that IVs are 64-bits even on 32-bit architectures. When 
  converting IVs, SWIG assumes that an IV is the same size as a 
  long, which causes OverflowErrors with  unsigned longs when 
  the value is greater than 2^31. 

-------------------------------------------------------------------
Tue Mar  6 09:15:47 UTC 2012 - kkaempf@suse.com

- fix SLES 10 build, disable failing test (bnc#750618)

-------------------------------------------------------------------
Mon Mar  5 13:19:56 UTC 2012 - kkaempf@suse.com

- fix build, add Group field to subpackages

-------------------------------------------------------------------
Fri Dec  9 08:55:59 UTC 2011 - coolo@suse.com

- fix license to be in spdx.org format

-------------------------------------------------------------------
Mon Dec  5 13:37:26 UTC 2011 - pgajdos@suse.com

- generate guile 2 friendly code

-------------------------------------------------------------------
Tue Sep 20 09:31:28 UTC 2011 - kkaempf@suse.com

- Update to swig 2.0.4
  (see CHANGES.current for complete list)
  * [Perl] Patch #3260265 fixing overloading of non-primitive types and integers in 
    Perl 5.12 and later.
  * [Ruby] Fix %import where one of the imported files %include one of the STL include
    files such as std_vector.i.
  * [python] Additional fixes for python3.2 support.
  * [python] Fixed PyGetSetDescr for python3.2.
  * Bug 2635919: Convenience method to convert std::map to a python dict.
  * Fixed bug 1163440: vararg typemaps.
  * [Python] Applied patch #1932484: migrate PyCObject to PyCapsule.
  * [Python] Merged in the szager-python-builtin branch, adding the -builtin feature
    for python.  The -builtin option may provide a significant performance gain
    in python wrappers.  For full details and limitations, refer to Doc/Manual/Python.html.
    A small test suite designed to demonstrate the performance gain is in
    Examples/python/performance.

-------------------------------------------------------------------
Tue Sep 20 08:46:19 UTC 2011 - kkaempf@suse.com

- Fix RHEL/Fedora build

-------------------------------------------------------------------
Thu May 19 19:50:42 UTC 2011 - idoenmez@novell.com

- Drop adapt-perl512.diff and replace it with swig-2.0.3-perl512.patch
  which is applied upstream.

-------------------------------------------------------------------
Thu May 19 08:47:42 UTC 2011 - idoenmez@novell.com

- Add swig-2.0.3-perl514.patch: fix test failures with Perl 5.14 

-------------------------------------------------------------------
Mon May  2 15:36:04 UTC 2011 - idoenmez@novell.com

- Update to swig 2.0.3 
  * Much better nested class/struct support.
  * Much improved template partial specialization and explicit 
    specialization handling.
  * Namespace support improved with the 'nspace' feature where 
    namespaces can be automatically translated into Java packages or C# namespaces.
  * Improved typemap and symbol table debugging.
  * Numerous subtle typemap matching rule changes when using the 
    default (SWIGTYPE) type. These now work much like C++ class template 
    partial specialization matching.
  * Other small enhancements for typemaps. 
    Typemap fragments are also now official and documented.
  * Warning and error display refinements.
  * Wrapping of shared_ptr is improved and documented now.
  * Numerous C++ unary scope operator (::) fixes.
  * Better support for boolean expressions.
  * Various bug fixes and improvements in the Allegrocl, C#, Java, 
    Lua, Octave, PHP, Python, R, Ruby and XML modules.

-------------------------------------------------------------------
Tue Apr  6 13:38:47 UTC 2010 - coolo@novell.com

- fix build with new perl 5.12: there is no Reference type anymore,
  but references and integers are the same, so a 0L was seen as 0
  pointer - breaking the test suite. The fix is to remove the check

-------------------------------------------------------------------
Sun Feb 14 09:54:04 UTC 2010 - coolo@novell.com

- take patch from swig svn to fix assertion on -xmlout (fix
  yast2-storage build)

-------------------------------------------------------------------
Thu Dec 17 10:21:40 UTC 2009 - kkaempf@novell.com

- tune .spec file to build on multiple distros

-------------------------------------------------------------------
Wed Dec 16 10:29:50 CET 2009 - jengelh@medozas.de

- package documentation as noarch

-------------------------------------------------------------------
Tue Nov 24 14:16:48 CET 2009 - kkaempf@suse.de

- updated to 1.3.40
  * SWIG now supports directors for PHP.
  * PHP support improved in general.
  * Octave 3.2 support added.
  * Various bug fixes/enhancements for Allegrocl, C#, Java, Octave,
    Perl, Python, Ruby and Tcl.
  * Other generic fixes and minor new features.

-------------------------------------------------------------------
Wed Aug 12 14:31:43 CEST 2009 - mmarek@suse.cz

- updated to 1.3.39
  * Python 3 support added
  * PHP4 support dropped
  * many bugfixes and improvements
- ccache support disabled as it didn't work (todo after 11.2)

-------------------------------------------------------------------
Tue Oct 21 10:01:26 CEST 2008 - mmarek@suse.cz

- fixed two integer overflows in perlprimtypes.swg. These were
  actually why the two tests on ppc failed. *sigh* (bnc#431945)

-------------------------------------------------------------------
Fri Sep 26 11:21:13 CEST 2008 - mmarek@suse.cz

- disable two perl tests on ppc

-------------------------------------------------------------------
Wed Sep 24 15:29:33 CEST 2008 - mmarek@suse.cz

- updated to 1.3.36
  * Enhancement to directors to wrap all protected members
  * Optimisation feature for objects returned by value
  * A few bugs fixes in the PHP, Java, Ruby, R, C#, Python, Lua and
    Perl modules
  * Other minor generic bug fixes

-------------------------------------------------------------------
Tue Apr  8 09:55:39 CEST 2008 - mmarek@suse.cz

- updated to 1.3.35
  * Octave language module added
  * Bug fixes in Python, Lua, Java, C#, Perl modules
  * A few other generic bugs and runtime assertions fixed

-------------------------------------------------------------------
Wed Mar 26 15:04:30 CET 2008 - mmarek@suse.cz

- remove the croak patch, croak(Nullch) is correct (see
  https://sourceforge.net/tracker/?func=detail&atid=301645&aid=1925121&group_id=1645)
- testsuite-warnings.patch not needed

-------------------------------------------------------------------
Thu Mar 20 14:28:40 CET 2008 - pth@suse.de

- define SWIG_croak_null as croak("%s","") not croak(Nullch)
  as croak is defined to take a string constant as 1st arg.
- Don't return an unitialized local variable in template code.
- Bracket if clauses so that the compiler doesn't warn in template code.

-------------------------------------------------------------------
Fri Feb 29 14:21:25 CET 2008 - mmarek@suse.cz

- updated to 1.3.34
  + shared_ptr support for Python
  + Support for latest R - version 2.6
  + Various minor improvements/bug fixes for R, Lua, Python, Java,
    C#
  + A few other generic bug fixes, mainly for templates and using
    statements


-------------------------------------------------------------------
Wed Nov 28 17:48:16 CET 2007 - mmarek@suse.cz

- updated to 1.3.33
  + shared_ptr support for Java and C#
  + Enhanced STL support for Ruby
  + Fixed long-standing memory leak in PHP Module
  + Numerous fixes and minor enhancements for Allegrocl, C#, cffi,
    Chicken, Guile, Java, Lua, Ocaml, Perl, PHP, Python, Ruby, Tcl
  + Improved warning support

-------------------------------------------------------------------
Wed Sep 19 16:54:03 CEST 2007 - mmarek@suse.cz

- don't "update" autofoo when building for  older dists in the
  buildservice

-------------------------------------------------------------------
Tue May 29 11:13:24 CEST 2007 - mmarek@suse.cz

- install examples in '%%_libdir/swig/examples' (not Examples) to
  pass the devel-file-in-non-devel-package rpmlint check

-------------------------------------------------------------------
Thu May 24 12:04:24 CEST 2007 - mmarek@suse.cz

- fixed some rpmlint errors

-------------------------------------------------------------------
Wed Apr  4 16:23:51 CEST 2007 - mmarek@suse.cz

- install the precompiled examples to %%_libdir/swig

-------------------------------------------------------------------
Wed Jan 24 12:22:40 CET 2007 - mmarek@suse.cz

- temporarily disabled li_std_string run test under perl5 on ix86
  and s390
- build examples and testsuite with -fno-strict-aliasing (packages
  using swig & python should do the same for now)
- fixed testsuite-warnings.patch

-------------------------------------------------------------------
Fri Dec 15 10:19:15 CET 2006 - mmarek@suse.cz

- updated to 1.3.31, for changes see
  http://swig.svn.sourceforge.net/viewvc/swig/trunk/CHANGES?r1=9073&r2=9585&diff_format=u

-------------------------------------------------------------------
Wed Nov  8 15:23:27 CET 2006 - mmarek@suse.cz

- fixed bug in the python module that caused aborts on some
  architectures

-------------------------------------------------------------------
Tue Nov  7 13:59:52 CET 2006 - mmarek@suse.cz

- don't install executable documentation files

-------------------------------------------------------------------
Fri Sep  8 11:00:48 CEST 2006 - mmarek@suse.cz

- fixed for Python 2.5 (further fixes may be needed, at least it
  builds again)
  (python25.patch)
- use $RPM_OPT_FLAGS, unhide compilation of test wrappers (ditto)
  (testsuite.patch)

-------------------------------------------------------------------
Wed Sep  6 09:30:14 CEST 2006 - mmarek@suse.de

- fixed build

-------------------------------------------------------------------
Wed Jul 26 13:21:08 CEST 2006 - mmarek@suse.cz

- update to version 1.3.29
  * support for Common Lisp with CFFI
  * new %extend_smart_pointer() directive to extend SWIG smart
    pointer support in Python
  * new %bang directive for methods ending with exclamation marks
    in Ruby
  * New -autorename option for Ruby to rename methods to match
    Ruby naming conventions
  * enhancements to the %rename directive
  * initial support for wrappint Java code in scripting languages
    using gcj
  * new %copyctor directive for automatic generation of copy
    constructors
  * many more enhancements + bugfixes
- fixed top-level Makefile.in to work with autoconf-2.60
  (autoconf260.patch)
- added python-devel to buildrequires to test the Python module
  during build
  
-------------------------------------------------------------------
Thu Jul 20 16:06:53 CEST 2006 - schwab@suse.de

- Fix missing slash.

-------------------------------------------------------------------
Mon Feb 27 12:00:20 CET 2006 - mmarek@suse.cz

- split documentation into swig-doc and swig-examples
  [#153015]

-------------------------------------------------------------------
Mon Jan 30 11:04:51 CET 2006 - mmarek@suse.cz

- fix build with perl-5.8.8 (thanks to Olaf Hering)

-------------------------------------------------------------------
Wed Jan 25 21:41:57 CET 2006 - mls@suse.de

- converted neededforbuild to BuildRequires

-------------------------------------------------------------------
Mon Jan 23 15:28:45 CET 2006 - mmarek@suse.cz

- use -fPIC instead of -fpic (-fpic didn't pass testsuite on s390x)

-------------------------------------------------------------------
Tue Jan 10 17:51:17 CET 2006 - mmarek@suse.cz

- fix endless loop when write fails
  [#141754] (write-loop.patch)

-------------------------------------------------------------------
Wed Nov 16 15:09:33 CET 2005 - ro@suse.de

- fix build on x86_64 (fPIC in gifplot) 

-------------------------------------------------------------------
Wed Nov  2 22:27:06 CET 2005 - dmueller@suse.de

- don't build as root 

-------------------------------------------------------------------
Wed Nov  2 17:48:11 CET 2005 - uli@suse.de

- update -> 1.3.27
- parallelize build
- run test suite

-------------------------------------------------------------------
Mon Apr 11 11:56:46 CEST 2005 - mcihar@suse.cz

- update to 1.3.24 again, I hope that subversion guys will fix their
  problems till next release

-------------------------------------------------------------------
Mon Jan 24 01:49:21 CET 2005 - ro@suse.de

- fix swigpy build on lib64 

-------------------------------------------------------------------
Thu Jan  6 11:51:21 CET 2005 - mcihar@suse.cz

- back to 1.3.21 due to subversion incompatibility

-------------------------------------------------------------------
Tue Dec 21 16:51:38 CET 2004 - mcihar@suse.cz

- update to 1.3.24
- our python now has sys.lib, so no need for patching
- spec file cleanup
- swiglibdir is now same as upstream - $datadir/swig/version

-------------------------------------------------------------------
Tue Nov 23 17:05:25 CET 2004 - mcihar@suse.cz

- update to 1.3.23
- runtime no more included
- remove most of buildrequires, as they're needed just for examples and
  they anyway don't compile out of the source directory

-------------------------------------------------------------------
Mon Apr 19 13:04:38 CEST 2004 - mcihar@suse.cz

- -fno-strict-aliasing

-------------------------------------------------------------------
Mon Mar  8 14:49:52 CET 2004 - ro@suse.de

- added php4 to neededforbuild
- renamed mod_php4-devel to php4-devel in neededforbuild

-------------------------------------------------------------------
Fri Jan 23 15:19:38 CET 2004 - mcihar@suse.cz

- updated to 1.3.21

-------------------------------------------------------------------
Thu Dec 18 12:37:25 CET 2003 - mcihar@suse.cz

- Updated to 1.3.20. This release includes a large number of
  enhancements including improved C++ support, directors, contracts, and
  more.

-------------------------------------------------------------------
Fri Aug 15 12:21:49 CEST 2003 - mcihar@suse.cz

- handle libdir correctly

-------------------------------------------------------------------
Thu Aug 14 19:27:27 CEST 2003 - mcihar@suse.cz

- try to force swig compilation to accept CFLAGS
- cleaned up specfile

-------------------------------------------------------------------
Wed May 28 16:26:51 CEST 2003 - mcihar@suse.cz

- add -fPIC
- fix libtool problems

-------------------------------------------------------------------
Tue May 27 19:23:41 CEST 2003 - mcihar@suse.cz

- fixed permissions for files in lib

-------------------------------------------------------------------
Thu May 15 12:22:38 CEST 2003 - mcihar@suse.cz

- fix permissions for documentation

-------------------------------------------------------------------
Mon May 12 17:23:12 CEST 2003 - mcihar@suse.cz

- use swiglibdir to have save setup as previous versions

-------------------------------------------------------------------
Mon May 12 13:01:30 CEST 2003 - mcihar@suse.cz

- updated to 1.3.19
- compile with -fPIC (should fix #26765)

-------------------------------------------------------------------
Thu Feb 13 12:54:18 CET 2003 - mcihar@suse.cz

- configure scripts finds correctly more requirements:
    - java includes
    - python on lib64
    - ocaml on lib64
- build more runtimes:
    - added php4
    - fixed perl

-------------------------------------------------------------------
Wed Jan 22 16:34:50 CET 2003 - mcihar@suse.cz

- not marking files as config, as they do not contain configuration
- simplified file list

-------------------------------------------------------------------
Mon Jan 06 12:20:08 CET 2003 - mcihar@suse.cz

- updated to 1.3.17:
    * added pike and ocaml bindings
    * many bugfixes

-------------------------------------------------------------------
Tue Sep 17 17:34:28 CEST 2002 - ro@suse.de

- removed bogus self-provides 

-------------------------------------------------------------------
Wed Aug 14 14:39:41 MEST 2002 - mls@suse.de

- made it work with threaded perl-5.8

-------------------------------------------------------------------
Thu Jun 27 13:57:22 CEST 2002 - mcihar@suse.cz

- updated to 1.3.13
- added more documentation (html manual and some others)

-------------------------------------------------------------------
Tue Jun 11 16:46:48 MEST 2002 - mls@suse.de

- delete bogus config.{log,status} from Examples/GIFPlot

-------------------------------------------------------------------
Tue May 21 14:41:20 CEST 2002 - meissner@suse.de

- compile with tcl again (needs --with-tclconfig)

-------------------------------------------------------------------
Tue May 21 13:39:50 CEST 2002 - ro@suse.de

- fix libdir usage 

-------------------------------------------------------------------
Mon Jan 28 10:58:32 CET 2002 - tcrhak@suse.cz

- fixed parser.yxx to compile with bison 1.32

-------------------------------------------------------------------
Tue Jan  8 11:29:12 CET 2002 - cihlar@suse.cz

- fixed to compile with python 2.2

-------------------------------------------------------------------
Thu Dec  6 11:00:16 CET 2001 - cihlar@suse.cz

- update to version 1.3.9:
  * many fixes and improvements
- added libraries in /usr/lib

-------------------------------------------------------------------
Fri Jul 27 08:21:51 CEST 2001 - cihlar@suse.cz

- update to version 1.3.6
- fixed call of suse_update_config
- call autoconf also in subdirs
- added xf86 to neededforbuild

-------------------------------------------------------------------
Sat Jan 20 19:38:42 CET 2001 - schwab@suse.de

- Fix last change to do it right.

-------------------------------------------------------------------
Fri Jan 19 08:38:33 CET 2001 - cihlar@suse.cz

- added swig1.3a5-Printv.dif.bz2 - fixed to work on ia64

-------------------------------------------------------------------
Wed Nov 29 17:26:51 CET 2000 - ro@suse.de

- changed neededforbuild <tcld> to <tcl-devel>

-------------------------------------------------------------------
Mon Nov 27 08:14:56 CET 2000 - cihlar@suse.cz

- removed kaffe from neededforbuild

-------------------------------------------------------------------
Fri Nov 17 09:23:28 CET 2000 - ro@suse.de

- fixed filelist 

-------------------------------------------------------------------
Thu Nov 16 10:34:29 CET 2000 - cihlar@suse.cz

- fixed neededforbuild

-------------------------------------------------------------------
Thu Nov 16 08:46:06 CET 2000 - cihlar@suse.cz

- update to version 1.3a5
- fixed file list
- fixed neededforbuild
- improved optimalization

-------------------------------------------------------------------
Thu Aug 24 08:33:09 CEST 2000 - cihlar@suse.cz

- update to version 1.3a3
- bzipped sources

-------------------------------------------------------------------
Wed Aug 16 14:31:54 CEST 2000 - cihlar@suse.cz

- added BuildRoot

-------------------------------------------------------------------
Fri Jun  2 11:28:17 CEST 2000 - kukuk@suse.de

- Use doc macro

-------------------------------------------------------------------
Mon Jan 31 18:39:02 CET 2000 - ro@suse.de

- fixed to compile
- man to /usr/share 

-------------------------------------------------------------------
Sun Oct 17 02:24:35 CEST 1999 - ro@suse.de

- fixed neededforbuild 

-------------------------------------------------------------------                                 
Fri Sep 17 11:28:09 MEST 1999 - kettner@suse.de

- Reinserted old # Commandline: line.

-------------------------------------------------------------------
Mon Sep 13 17:23:57 CEST 1999 - bs@suse.de

- ran old prepare_spec on spec file to switch to new prepare_spec.

-------------------------------------------------------------------
Mon May  3 15:43:56 MEST 1999 - kettner@suse.de

 - Spec file created from swig1.1p5.tar.gz by autospec
