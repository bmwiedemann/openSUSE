-------------------------------------------------------------------
Tue Aug 25 13:06:16 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- update to 1.1.8:
  * Small performance improvements.
  * Removed snappy::string alias for std::string.
  * Improved CMake configuration.
- remove snappy-pcfile.patch (never went upstream)

-------------------------------------------------------------------
Thu Feb  8 15:00:05 UTC 2018 - jengelh@inai.de

- Better neutrality of from description. Quantify "Core i7".
  Trim description of SRPM and -devel as the user already has an
  idea what to look for.
- Fix RPM groups.

-------------------------------------------------------------------
Thu Feb  8 11:23:03 UTC 2018 - tchvatal@suse.com

- Version update to 1.1.7:
  * Aarch64 fixes
  * ppc speedups
  * PIE improvements
  * Switch to cmake build system
- Add patch snappy-pcfile.patch:
  * Pull 55 on upstream github, was dropped when moving to cmake
    of course we still need it
- Fix license install wrt bsc#1080040

-------------------------------------------------------------------
Sat Apr 15 23:55:17 UTC 2017 - toddrme2178@gmail.com

- Version bump to 1.1.4
  * Fix a 1% performance regression when snappy is used in PIE executables.
  * Improve compression performance by 5%.
  * Improve decompression performance by 20%.
- Use better download url.

-------------------------------------------------------------------
Wed Jul 29 10:42:56 UTC 2015 - tchvatal@suse.com

- Version bump to 1.1.3:
  * See the NEWS file for full details
- Switch to distribution from github
- Remove upstreamed patch:
  * snappy-1.1.1-random-return.patch

-------------------------------------------------------------------
Wed Jul 29 09:58:16 UTC 2015 - dimstar@opensuse.org

- Add baselibs.conf: build snappy1-32bit, as needed by
  libqt5-qtwebengine-32bit.

-------------------------------------------------------------------
Thu Sep 11 09:34:36 UTC 2014 - toddrme2178@gmail.com

- Update to version 1.1.2
  - This is a maintenance release with no changes to the actual 
    library source code.
    * Stop distributing benchmark data files that have unclear
      or unsuitable licensing.
    * Add support for padding chunks in the framing format.

-------------------------------------------------------------------
Wed Nov 13 12:44:42 UTC 2013 - p.drouand@gmail.com

- Update to version 1.1.1
  * Add support for uncompressing to iovecs (scatter I/O).
  * Speed up decompression by ~2%; much more so (~13-20%) on
    a few benchmarks on given compilers and CPUs.
  * Fix a few issues with MSVC compilation.
  * Support truncated test data in the benchmark.
- Adapt patch to upstream changes
  * snappy-random-return.patch > snappy-1.1.1-random-return.patch

-------------------------------------------------------------------
Thu Aug 22 12:56:27 UTC 2013 - cdenicolo@suse.com

- license update: BSD-3-Clause
  correct license is BSD-3-Clause.

-------------------------------------------------------------------
Thu Aug 15 11:41:25 UTC 2013 - mvyskocil@suse.com

- Update to 1.1.0 (FATE#315420)
  * Snappy now uses 64 kB block size instead of 32 kB. On average,
    this means it compresses about 3% denser (more so for some
    inputs), at the same or better speeds.
  * libsnappy no longer depends on iostream.
  * Some small performance improvements in compression on x86
    (0.5–1%).
  * Various portability fixes for ARM-based platforms, for MSVC,
    and for GNU/Hurd.
- refresh and rename random-return.patch
  * snappy-random-return.patch
- reformat spec file
- build with NDEBUG to speedup a library
- install COPYING alongside so file

-------------------------------------------------------------------
Fri Nov 23 02:19:58 UTC 2012 - mrueckert@suse.de

- update to 1.0.5
  * More speed improvements. Exactly how big will depend on
    the architecture:

    - 3–10% faster decompression for the base case (x86-64).

    - ARMv7 and higher can now use unaligned accesses,
      and will see about 30% faster decompression and
      20–40% faster compression.

    - 32-bit platforms (ARM and 32-bit x86) will see 2–5%
      faster compression.

    These are all cumulative (e.g., ARM gets all three speedups).

  * Fixed an issue where the unit test would crash on system
    with less than 256 MB address space available,
    e.g. some embedded platforms.

  * Added a framing format description, for use over e.g. HTTP,
    or for a command-line compressor. We do not have any
    implementations of this at the current point, but there seems
    to be enough of a general interest in the topic.
    Also make the format description slightly clearer.

  * Remove some compile-time warnings in -Wall
    (mostly signed/unsigned comparisons), for easier embedding
    into projects that use -Wall -Werror.

-------------------------------------------------------------------
Wed Feb  8 16:36:29 UTC 2012 - mrueckert@suse.de

- initial package (v1.0.4)

