<?xml version="1.0" encoding="UTF-8"?>

<project name="snakeyaml" default="package" basedir=".">

  <!-- ====================================================================== -->
  <!-- Build environment properties                                           -->
  <!-- ====================================================================== -->

  <property file="build.properties"/>

  <property name="project.name" value="SnakeYAML"/>
  <property name="project.description" value="YAML 1.1 parser and emitter for Java"/>
  <property name="project.groupId" value="org.yaml"/>
  <property name="project.artifactId" value="snakeyaml"/>
  <property name="project.version" value="2.2"/>
  <property name="bundle.version" value="${project.version}.0"/>
  
  <property name="compiler.release" value="8"/>
  <property name="compiler.source" value="1.${compiler.release}"/>
  <property name="compiler.target" value="${compiler.source}"/>

  <property name="build.finalName" value="${project.artifactId}-${project.version}"/>
  <property name="build.dir" value="target"/>
  <property name="build.outputDir" value="${build.dir}/classes"/>
  <property name="build.outputDirJava9" value="${build.outputDir}/META-INF/versions/9"/>
  <property name="build.srcDir" value="src/main/java"/>
  <property name="build.srcDirJava9" value="src/main/java9"/>
  <property name="build.resourceDir" value="src/main/resources"/>

  <property name="reporting.outputDirectory" value="${build.dir}/site"/>

  <!-- ====================================================================== -->
  <!-- Defining classpaths                                                    -->
  <!-- ====================================================================== -->

  <path id="build.classpath">
    <fileset dir="lib">
      <include name="**/*"/>
    </fileset>
  </path>

  <!-- ====================================================================== -->
  <!-- Cleaning up target                                                     -->
  <!-- ====================================================================== -->

  <target name="clean" description="Clean the output directory">
    <delete dir="${build.dir}"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Compilation target                                                     -->
  <!-- ====================================================================== -->

  <target name="compile" description="Compile the code">
    <mkdir dir="${build.outputDir}"/>
    <javac destdir="${build.outputDir}"
           nowarn="false"
           debug="true"
           encoding="utf-8"
           optimize="false"
           deprecation="true"
           target="${compiler.target}"
           verbose="false"
           fork="false"
           source="${compiler.source}">
      <src>
        <pathelement location="${build.srcDir}"/>
      </src>
      <classpath refid="build.classpath"/>
    </javac>
    <mkdir dir="${build.outputDirJava9}"/>
	<!-- All java9 files without the module-info.java -->
    <javac destdir="${build.outputDirJava9}"
           nowarn="false"
           debug="true"
           encoding="utf-8"
           optimize="false"
           deprecation="true"
           target="${compiler.target}"
           verbose="false"
           fork="false"
           source="${compiler.source}">
      <src>
        <pathelement location="${build.srcDirJava9}"/>
      </src>
	  <exclude name="**/module-info.java"/>
      <classpath>
        <path refid="build.classpath"/>
        <pathelement location="${build.outputDir}"/>
      </classpath>
    </javac>
	<!-- Special compilation of module-info.java that needs modulepath -->
    <javac destdir="${build.outputDirJava9}"
           nowarn="false"
           debug="true"
           encoding="utf-8"
           optimize="false"
           deprecation="true"
           target="9"
           verbose="false"
           fork="false"
           source="9">
      <src>
        <pathelement location="${build.srcDirJava9}"/>
        <pathelement location="${build.srcDir}"/>
      </src>
	  <include name="**/module-info.java"/>
      <modulepath>
        <path refid="build.classpath"/>
        <pathelement location="${build.outputDirJava9}"/>
        <pathelement location="${build.outputDir}"/>
      </modulepath>
    </javac>
  </target>

  <!-- ====================================================================== -->
  <!-- Javadoc target                                                         -->
  <!-- ====================================================================== -->

  <target name="javadoc" description="Generates the Javadoc of the application">
    <javadoc sourcepath="${build.srcDir}" 
             packagenames="*" 
             destdir="${reporting.outputDirectory}/apidocs" 
             access="protected" 
             encoding="UTF-8" 
             source="${compiler.source}" 
             verbose="false" 
             version="true" 
             use="true" 
             author="true" 
             splitindex="false" 
             nodeprecated="false" 
             nodeprecatedlist="false" 
             notree="false" 
             noindex="false" 
             nohelp="false" 
             nonavbar="false" 
             serialwarn="false" 
             charset="UTF-8" 
             linksource="false" 
             breakiterator="false">
      <classpath refid="build.classpath"/>
    </javadoc>
  </target>

  <!-- ====================================================================== -->
  <!-- Package target                                                         -->
  <!-- ====================================================================== -->

  <target name="package" depends="compile" description="Package the application">
    <jar jarfile="${build.dir}/${build.finalName}.jar" 
         compress="true" 
         index="false" 
         basedir="${build.outputDir}" 
         excludes="**/package.html">
      <manifest>
		<attribute name="Bundle-Description" value="${project.description}"/>
		<attribute name="Bundle-License" value="http://www.apache.org/licenses/LICENSE-2.0.txt"/>
		<attribute name="Bundle-ManifestVersion" value="2"/>
		<attribute name="Bundle-Name" value="${project.name}"/>
		<attribute name="Bundle-SymbolicName" value="${project.groupId}.${project.artifactId}"/>
		<attribute name="Bundle-Version" value="${bundle.version}"/>
		<attribute name="Export-Package" value="org.yaml.snakeyaml.comments;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.composer;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.constructor;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.emitter;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.env;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.error;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.events;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.extensions.compactnotation;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.inspector;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.internal;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.introspector;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.nodes;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.parser;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.reader;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.representer;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.resolver;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.scanner;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.serializer;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.tokens;version=&quot;${project.version}&quot;,org.yaml.snakeyaml.util;version=&quot;${project.version}&quot;,org.yaml.snakeyaml;version=&quot;${project.version}&quot;"/>
		<attribute name="Import-Package" value="org.apache.commons.codec.net,org.yaml.snakeyaml.comments,org.yaml.snakeyaml.composer,org.yaml.snakeyaml.constructor,org.yaml.snakeyaml.emitter,org.yaml.snakeyaml.error,org.yaml.snakeyaml.events,org.yaml.snakeyaml.inspector,org.yaml.snakeyaml.internal,org.yaml.snakeyaml.introspector,org.yaml.snakeyaml.nodes,org.yaml.snakeyaml.parser,org.yaml.snakeyaml.reader,org.yaml.snakeyaml.representer,org.yaml.snakeyaml.resolver,org.yaml.snakeyaml.scanner,org.yaml.snakeyaml.serializer,org.yaml.snakeyaml.tokens,org.yaml.snakeyaml.util,org.yaml.snakeyaml"/>
		<attribute name="JavaPackages-GroupId" value="${project.groupId}"/>
		<attribute name="JavaPackages-Version" value="${project.version}"/>
		<attribute name="Multi-Release" value="true"/>
		<attribute name="Require-Capability" value="osgi.ee;filter:=&quot;(&amp;(osgi.ee=JavaSE)(version=${compiler.target}))&quot;"/>
	  </manifest>
	</jar>
  </target>

  <!-- ====================================================================== -->
  <!-- A dummy target for the package named after the type it creates         -->
  <!-- ====================================================================== -->

  <target name="jar" depends="package" description="Builds the jar for the application"/>

</project>
