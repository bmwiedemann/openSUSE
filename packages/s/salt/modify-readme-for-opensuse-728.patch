From ffc966a4173e9f359f9d00cb8bc86826c5749d8f Mon Sep 17 00:00:00 2001
From: Marek Czernek <marek.czernek@suse.com>
Date: Wed, 3 Sep 2025 10:20:38 +0200
Subject: [PATCH] Modify README for openSUSE (#728)

---
 AUTHORS          | 110 +-------
 CONTRIBUTING.rst | 701 -----------------------------------------------
 README.rst       | 117 ++------
 SECURITY.md      | 129 ---------
 SUPPORT.rst      |  26 +-
 5 files changed, 40 insertions(+), 1043 deletions(-)
 delete mode 100644 CONTRIBUTING.rst
 delete mode 100644 SECURITY.md

diff --git a/AUTHORS b/AUTHORS
index e6d611cf2a9..7d645d49670 100644
--- a/AUTHORS
+++ b/AUTHORS
@@ -8,114 +8,28 @@ Whos Who in Salt
 The Man With the Plan
 ----------------------------
 
-Thomas S. Hatch is the main developer of Salt. He is the founder, owner,
-maintainer and lead of the Salt project, as well as author of the majority
-of the Salt code and documentation.
+Thomas S. Hatch is the creator of Salt. He was the founder, owner,
+maintainer that lead Salt project, as well as author of the majority
+of initial Salt code and documentation.
 
-Documentation System
-----------------------------
+SaltStack, Inc. was acquired by VMware in 2020. In 2023, VMware was
+acquired by Broadcom.
 
-The documentation system was put together by Seth House, much of the
-documentation is being maintained by Seth.
+The Salt Project core team of developers are employed by Broadcom.
 
-Developers
+Documentation System
 ----------------------------
 
-Aaron Bull Schaefer <aaron@elasticdog.com>
-Aaron Toponce <aaron.toponce@gmail.com>
-Andrew Hammond <andrew.george.hammond@gmail.com>
-Aditya Kulkarni <adi@saltstack.com>
-Alexander Pyatkin <asp@thexyz.net>
-Andre Sachs <andre@sachs.nom.za>
-Andrew Colin Kissa <andrew@topdog.za.net>
-Andrew Kuhnhausen <trane@errstr.com>
-Antti Kaihola <akaihol+github@ambitone.com>
-archme <archme.mail@gmail.com>
-Brad Barden <brad@mifflinet.net>
-Bret Palsson <bretep@gmail.com>
-Brian Wagner <wags@wagsworld.net>
-C. R. Oldham <cr@saltstack.com>
-Carl Loa Odin <carlodin@gmail.com>
-Carlo Pires <carlopires@gmail.com>
-Chris Rebert <chris.rebert@hulu.com>
-Chris Scheller <schelcj@umich.edu>
-Christer Edwards <christer.edwards@gmail.com>
-Clint Savage <herlo1@gmail.com>
-Colton Myers <cmyers@saltstack.com>
-Corey Quinn <corey@sequestered.net>
-Corin Kochenower <ckochenower@saltstack.com>
-Dan Garthwaite <dan@garthwaite.org>
-Daniel Wallace <danielwallace at gtmanfred dot com>
-David Boucha <boucha@gmail.com>
-David Pravec <alekibango@pravec.tk>
-deutsche
-Dmitry Kuzmenko <dkuzmenko@saltstack.com>
-Doug Renn <renn@nestegg.com>
-Eivind Uggedal <eivind@uggedal.com>
-epoelke@gmail.com <epoelke@heartflow.com>
-Eric Poelke <epoelke@gmail.com>
-Erik Nolte <enolte@beyondoblivion.com>
-Evan Borgstrom <evan@fatbox.ca>
-Forrest Alvarez <forrest.alvarez@gmail.com>
-Fred Reimer <freimer@freimer.org>
-Henrik Holmboe <henrik@holmboe.se>
-Gareth J. Greenaway <gareth@wiked.org>
-Jacob Albretsen <jakea@xmission.com>
-Jed Glazner <jglazner@coldcrow.com>
-Jeff Bauer <jbauer@rubic.com>
-Jeff Hutchins <jhutchins@getjive.com>
-Jeffrey C. Ollie <jeff@ocjtech.us>
-Jeff Schroeder <jeffschroeder@computer.org>
-Johnny Bergstr√∂m
-Jonas Buckner <buckner.jonas@gmail.com>
-Jonathan Harker <k.jonathan.harker@hp.com>
-Joseph Hall <joseph@saltstack.com>
-Josmar Dias <josmarnet@gmail.com>
-Kent Tenney <ktenney@gmail.com>
-lexual
-Marat Shakirov
-Marc Abramowitz <marc+github@marc-abramowitz.com>
-Martin Schnabel <mb0@mb0.org>
-Mathieu Le Marec - Pasquet <kiorky@cryptelium.net>
-Matt Black
-Matthew Printz <hipokrit@gmail.com>
-Matthias Teege <matthias-git@mteege.de>
-Maxim Burgerhout <maxim@wzzrd.com>
-Mickey Malone <mickey.malone@gmail.com>
-Michael Steed <msteed@saltstack.com>
-Mike Place <mp@saltstack.com>
-Mircea Ulinic <ping@mirceaulinic.net>
-Mitch Anderson <mitch@metauser.net>
-Mostafa Hussein <mostafa.hussein91@gmail.com>
-Nathaniel Whiteinge <seth@eseth.com>
-Nicolas Delaby <nicolas.delaby@ezeep.com>
-Nicole Thomas <nicole@saltstack.com>
-Nigel Owen <nigelowen2.gmail.com>
-Nitin Madhok <nmadhok@g.clemson.edu>
-Oleg Anashkin <oleg.anashkin@gmail.com>
-Pedro Algarvio <pedro@algarvio.me>
-Peter Baumgartner
-Pierre Carrier <pierre@spotify.com>
-Rhys Elsmore <me@rhys.io>
-Rafael Caricio <rafael@caricio.com>
-Robert Fielding
-Sean Channel <pentabular@gmail.com>
-Seth House <seth@eseth.com>
-Seth Vidal <skvidal@fedoraproject.org>
-Stas Alekseev <stas.alekseev@gmail.com>
-Thibault Cohen <titilambert@gmail.com>
-Thomas Schreiber <tom@rizumu.us>
-Thomas S Hatch <thatch45@gmail.com>
-Tor Hveem <xt@bash.no>
-Travis Cline <travis.cline@gmail.com>
-Wieland Hoffmann <themineo+github@gmail.com>
+The initial documentation system was put together by Seth House.
 
+Documentation is now primarily maintained by the Salt Project core team and
+community members.
 
 Growing Community
 --------------------------------
 
-Salt is a rapidly growing project with a large community, to view all
-contributors please check Github, this file can sometimes be out of date:
+Salt is a rapidly growing project with a large community, and has had more than
+2,400 contributors over the years. To view all contributors, please check Github:
 
 https://github.com/saltstack/salt/graphs/contributors
 
diff --git a/CONTRIBUTING.rst b/CONTRIBUTING.rst
deleted file mode 100644
index cd24612df49..00000000000
--- a/CONTRIBUTING.rst
+++ /dev/null
@@ -1,701 +0,0 @@
-============
-Contributing
-============
-
-So you want to contribute to the Salt project? Excellent! You can help
-in a number of ways:
-
--  Use Salt and open well-written bug reports.
--  Join a `working group <https://github.com/saltstack/community>`__.
--  Answer questions on `irc <https://web.libera.chat/#salt>`__,
-   the `community Slack <https://join.slack.com/t/saltstackcommunity/shared_invite/zt-3av8jjyf-oBQ2M0vhXOhJpNpRkPWBvg>`__,
-   the `salt-users mailing
-   list <https://groups.google.com/forum/#!forum/salt-users>`__,
-   `Server Fault <https://serverfault.com/questions/tagged/saltstack>`__,
-   or `r/saltstack on Reddit <https://www.reddit.com/r/saltstack/>`__.
--  Fix bugs.
--  `Improve the documentation <https://saltstack.gitlab.io/open/docs/docs-hub/topics/contributing.html>`__.
-- Provide workarounds, patches, or other code without tests.
-- Tell other people about problems you solved using Salt.
-
-If you'd like to update docs or fix an issue, you're going to need the
-Salt repo. The best way to contribute is using
-`Git <https://git-scm.com/>`__.
-
-
-Environment setup
-=================
-To hack on Salt or the docs you're going to need to set up your
-development environment. If you already have a workflow that you're
-comfortable with, you can use that, but otherwise this is an opinionated
-guide for setting up your dev environment. Follow these steps and you'll
-end out with a functioning dev environment and be able to submit your
-first PR.
-
-This guide assumes at least a passing familiarity with
-`Git <https://git-scm.com/>`__, a common version control tool used
-across many open source projects, and is necessary for contributing to
-Salt. For an introduction to Git, watch `Salt Docs Clinic - Git For the
-True
-Beginner <https://www.youtube.com/watch?v=zJw6KNvmuq4&ab_channel=SaltStack>`__.
-Because of its widespread use, there are many resources for learning
-more about Git. One popular resource is the free online book `Learn Git
-in a Month of
-Lunches <https://www.manning.com/books/learn-git-in-a-month-of-lunches>`__.
-
-
-pyenv, Virtual Environments, and you
-------------------------------------
-We recommend `pyenv <https://github.com/pyenv/pyenv>`__, since it allows
-installing multiple different Python versions, which is important for
-testing Salt across all the versions of Python that we support.
-
-On Linux
-^^^^^^^^
-Install pyenv:
-
-::
-
-   git clone https://github.com/pyenv/pyenv.git ~/.pyenv
-   export PATH="$HOME/.pyenv/bin:$PATH"
-   git clone https://github.com/pyenv/pyenv-virtualenv.git $(pyenv root)/plugins/pyenv-virtualenv
-
-On Mac
-^^^^^^
-Install pyenv using brew:
-
-::
-
-   brew update
-   brew install pyenv
-   brew install pyenv-virtualenv
-
---------------
-
-Now add pyenv to your ``.bashrc``:
-
-::
-
-   echo 'export PATH="$HOME/.pyenv/bin:$PATH"' >> ~/.bashrc
-   pyenv init 2>> ~/.bashrc
-   pyenv virtualenv-init 2>> ~/.bashrc
-
-For other shells, see `the pyenv
-instructions <https://github.com/pyenv/pyenv#basic-github-checkout>`__.
-
-Go ahead and restart your shell. Now you should be able to install a new
-version of Python:
-
-::
-
-   pyenv install 3.7.0
-
-If that fails, don't panic! You're probably just missing some build
-dependencies. Check out `pyenv common build
-problems <https://github.com/pyenv/pyenv/wiki/Common-build-problems>`__.
-
-Now that you've got your version of Python installed, you can create a
-new virtual environment with this command:
-
-::
-
-   pyenv virtualenv 3.7.0 salt
-
-Then activate it:
-
-::
-
-   pyenv activate salt
-
-Sweet! Now you're ready to clone Salt so you can start hacking away! If
-you get stuck at any point, check out the resources at the beginning of
-this guide. IRC and Slack are particularly helpful places to go.
-
-
-Get the source!
----------------
-Salt uses the fork and clone workflow for Git contributions. See `Using
-the Fork-and-Branch Git
-Workflow <https://blog.scottlowe.org/2015/01/27/using-fork-branch-git-workflow/>`__
-for how to implement it. But if you just want to hurry and get started
-you can go ahead and follow these steps:
-
-Clones are so shallow. Well, this one is anyway:
-
-::
-
-   git clone --depth=1 --origin salt https://github.com/saltstack/salt.git
-
-This creates a shallow clone of Salt, which should be fast. Most of the
-time that's all you'll need, and you can start building out other
-commits as you go. If you *really* want all 108,300+ commits you can
-just run ``git fetch --unshallow``. Then go make a sandwich because it's
-gonna be a while.
-
-You're also going to want to head over to GitHub and create your own
-`fork of Salt <https://github.com/saltstack/salt/fork>`__. Once you've
-got that set up you can add it as a remote:
-
-::
-
-   git remote add yourname <YOUR SALT REMOTE>
-
-If you use your name to refer to your fork, and ``salt`` to refer to the
-official Salt repo you'll never get ``upstream`` or ``origin`` confused.
-
-.. note::
-
-   Each time you start work on a new issue you should fetch the most recent
-   changes from ``salt/upstream``.
-
-
-Set up ``pre-commit`` and ``nox``
----------------------------------
-Here at Salt we use `pre-commit <https://pre-commit.com/>`__ and
-`nox <https://nox.thea.codes/en/stable/>`__ to make it easier for
-contributors to get quick feedback, for quality control, and to increase
-the chance that your merge request will get reviewed and merged. Nox
-enables us to run multiple different test configurations, as well as
-other common tasks. You can think of it as Make with superpowers.
-Pre-commit does what it sounds like: it configures some Git pre-commit
-hooks to run ``black`` for formatting, ``isort`` for keeping our imports
-sorted, and ``pylint`` to catch issues like unused imports, among
-others. You can easily install them in your virtualenv with:
-
-::
-
-   python -m pip install pre-commit nox
-   pre-commit install
-
-.. warning::
-    Currently there is an issue with the pip-tools-compile pre-commit hook on Windows.
-    The details around this issue are included here:
-    https://github.com/saltstack/salt/issues/56642.
-    Please ensure you export ``SKIP=pip-tools-compile`` to skip pip-tools-compile.
-
-Now before each commit, it will ensure that your code at least *looks*
-right before you open a pull request. And with that step, it's time to
-start hacking on Salt!
-
-
-Set up imagemagick
-------------------
-One last prerequisite is to have ``imagemagick`` installed, as it is required
-by Sphinx for generating the HTML documentation.
-
-::
-
-   # On Mac, via homebrew
-   brew install imagemagick
-
-::
-
-   # Example Linux installation: Debian-based
-   sudo apt install imagemagick
-
-
-Salt issues
-===========
-
-Create your own
----------------
-
-Perhaps you've come to this guide because you found a problem in Salt,
-and you've diagnosed the cause. Maybe you need some help figuring out
-the problem. In any case, creating quality bug reports is a great way to
-contribute to Salt even if you lack the skills, time, or inclination to
-fix it yourself. If that's the case, head on over to `Salt's issue
-tracker on
-GitHub <https://github.com/saltstack/salt/issues/new/choose>`__.
-
-Creating a **good** report can take a little bit of time - but every
-minute you invest in making it easier for others to reproduce and
-understand your issue is time well spent. The faster someone can
-understand your issue, the faster it will be able to get fixed
-correctly.
-
-The thing that every issue needs goes by many names, but one at least as
-good as any other is MCVE - **M**\ inimum **C**\ omplete
-**V**\ erifiable **E**\ xample.
-
-In a nutshell:
-
--  **Minimum**: All of the **extra** information has been removed. Will
-   2 or 3 lines of master/minion config still exhibit the behavior?
--  **Complete**: Minimum also means complete. If your example is missing
-   information, then it's not complete. Salt, Python, and OS versions
-   are all bits of information that make your example complete. Have you
-   provided the commands that you ran?
--  **Verifiable**: Can someone take your report and reproduce it?
-
-Slow is smooth, and smooth is fast - it may feel like you're taking a
-long time to create your issue if you're creating a proper MCVE, but a
-MCVE eliminates back and forth required to reproduce/verify the issue so
-someone can actually create a fix.
-
-Pick an issue
--------------
-
-If you don't already have an issue in mind, you can search for `help
-wanted <https://github.com/saltstack/salt/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22>`__
-issues. If you also search for `good first
-issue <https://github.com/saltstack/salt/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22+label%3A%22good+first+issue%22>`__
-then you should be able to find some issues that are good for getting
-started contributing to Salt. `Documentation
-issues <https://github.com/saltstack/salt/issues?q=is%3Aissue+is%3Aopen+label%3Adocumentation+>`__
-are also good starter issues. When you find an issue that catches your
-eye (or one of your own), it's a good idea to comment on the issue and
-mention that you're working on it. Good communication is key to
-collaboration - so if you don't have time to complete work on the issue,
-just leaving some information about when you expect to pick things up
-again is a great idea!
-
-Hacking away
-============
-
-Salt, tests, documentation, and you
------------------------------------
-
-Before approving code contributions, Salt requires:
-
--  documentation
--  meaningful passing tests
--  correct code
-
-Documentation fixes just require correct documentation.
-
-What if I don't write tests or docs?
-------------------------------------
-
-If you aren't into writing documentation or tests, we still welcome your
-contributions! But your PR will be labeled ``Needs Testcase`` and
-``Help Wanted`` until someone can get to write the tests/documentation.
-Of course, if you have a desire but just lack the skill we are more than
-happy to collaborate and help out! There's the `documentation working
-group <https://saltstack.gitlab.io/open/docs/docs-hub/topics/home.html>`__
-and the `testing working group <https://github.com/saltstack/community/tree/master/working_groups/wg-Testing>`__.
-We also regularly stream our test clinic `live on
-Twitch <https://www.twitch.tv/saltprojectoss>`__ every Tuesday afternoon
-and Thursday morning, Central Time. If you'd like specific help with
-tests, bring them to the clinic. If no community members need help, you
-can also just watch tests written in real time.
-
-
-Documentation
--------------
-
-Salt uses both docstrings, as well as normal reStructuredText files in
-the ``salt/doc`` folder for documentation. Sphinx is used to generate the
-documentation, and does require ``imagemagick``. See `Set up imagemagick`_ for
-more information.
-
-Before submitting a documentation PR, it helps to first build the Salt docs
-locally on your machine and preview them. Local previews helps you:
-
-- Debug potential documentation output errors before submitting a PR.
-- Saves you time by not needing to use the Salt CI/CD test suite to debug, which takes
-  more than 30 minutes to run on a PR.
-- Ensures the final output looks the way you intended it to look.
-
-To set up your local environment to preview the core Salt and module
-documentation:
-
-#. Install the documentation dependencies. For example, on Ubuntu:
-
-   ::
-
-       sudo apt-get update
-
-       sudo apt-get install -y enchant-2 git gcc imagemagick make zlib1g-dev libc-dev libffi-dev g++ libxml2 libxml2-dev libxslt-dev libcurl4-openssl-dev libssl-dev libgnutls28-dev xz-utils inkscape
-
-#. Navigate to the folder where you store your Salt repository and remove any
-   `.nox` directories that might be in that folder:
-
-   ::
-
-       rm -rf .nox
-
-#. Install `pyenv` for the version of Python needed to run the docs. As of the
-   time of writing, the Salt docs theme is not compatible with Python 3.10, so
-   you'll need to run 3.9 or earlier. For example:
-
-   ::
-
-       pyenv install 3.7.15
-       pyenv virtualenv 3.7.15 salt-docs
-       echo 'salt-docs' > .python-version
-
-#. Activate `pyenv` if it's not auto-activated:
-
-   ::
-
-       pyenv exec pip install -U pip setuptools wheel
-
-#. Install `nox` into your pyenv environment, which is the utility that will
-   build the Salt documentation:
-
-   ::
-
-       pyenv exec pip install nox
-
-
-Since we use ``nox``, you can build your docs and view them in your browser
-with this one-liner:
-
-::
-
-   python -m nox -e 'docs-html(compress=False, clean=False)'; cd doc/_build/html; python -m webbrowser http://localhost:8000/contents.html; python -m http.server
-
-The first time you build the docs, it will take a while because there are a
-*lot* of modules. Maybe you should go grab some dessert if you already finished
-that sandwich. But once nox and Sphinx are done building the docs, python should
-launch your default browser with the URL
-http://localhost:8000/contents.html. Now you can navigate to your docs
-and ensure your changes exist. If you make changes, you can simply run
-this:
-
-::
-
-   cd -; python -m nox -e 'docs-html(compress=False, clean=False)'; cd doc/_build/html; python -m http.server
-
-And then refresh your browser to get your updated docs. This one should
-be quite a bit faster since Sphinx won't need to rebuild everything.
-
-Alternatively, you could build the docs on your local machine and then preview
-the build output. To build the docs locally:
-
-::
-
-    pyenv exec nox -e 'docs-html(compress=False, clean=True)'
-
-The output from this command will put the preview files in: ``doc > _build > html``.
-
-If your change is a docs-only change, you can go ahead and commit/push
-your code and open a PR. You can indicate that it's a docs-only change by
-adding ``[Documentation]`` to the title of your PR. Otherwise, you'll
-want to write some tests and code.
-
-
-Running development Salt
-------------------------
-Note: If you run into any issues in this section, check the
-Troubleshooting section.
-
-If you're going to hack on the Salt codebase you're going to want to be
-able to run Salt locally. The first thing you need to do is install Salt
-as an editable pip install:
-
-::
-
-   python -m pip install -e .
-
-This will let you make changes to Salt without having to re-install it.
-
-After all of the dependencies and Salt are installed, it's time to set
-up the config for development. Typically Salt runs as ``root``, but you
-can specify which user to run as. To configure that, just copy the
-master and minion configs. We have .gitignore setup to ignore the
-``local/`` directory, so we can put all of our personal files there.
-
-::
-
-   mkdir -p local/etc/salt/
-
-Create a master config file as ``local/etc/salt/master``:
-
-::
-
-   cat <<EOF >local/etc/salt/master
-   user: $(whoami)
-   root_dir: $PWD/local/
-   publish_port: 55505
-   ret_port: 55506
-   EOF
-
-And a minion config as ``local/etc/salt/minion``:
-
-::
-
-   cat <<EOF >local/etc/salt/minion
-   user: $(whoami)
-   root_dir: $PWD/local/
-   master: localhost
-   id: saltdev
-   master_port: 55506
-   EOF
-
-Now you can start your Salt master and minion, specifying the config
-dir.
-
-::
-
-   salt-master --config-dir=local/etc/salt/ --log-level=debug --daemon
-   salt-minion --config-dir=local/etc/salt/ --log-level=debug --daemon
-
-Now you should be able to accept the minion key:
-
-::
-
-   salt-key -c local/etc/salt -Ay
-
-And check that your master/minion are communicating:
-
-::
-
-   salt -c local/etc/salt \* test.version
-
-Rather than running ``test.version`` from your master, you can run it
-from the minion instead:
-
-::
-
-   salt-call -c local/etc/salt test.version
-
-Note that you're running ``salt-call`` instead of ``salt``, and you're
-not specifying the minion (``\*``), but if you're running the dev
-version then you still will need to pass in the config dir. Now that
-you've got Salt running, you can hack away on the Salt codebase!
-
-If you need to restart Salt for some reason, if you've made changes and
-they don't appear to be reflected, this is one option:
-
-::
-
-   kill -INT $(pgrep salt-master)
-   kill -INT $(pgrep salt-minion)
-
-If you'd rather not use ``kill``, you can have a couple of terminals
-open with your salt virtualenv activated and omit the ``--daemon``
-argument. Salt will run in the foreground, so you can just use ctrl+c to
-quit.
-
-
-Test first? Test last? Test meaningfully!
------------------------------------------
-You can write tests first or tests last, as long as your tests are
-meaningful and complete! *Typically* the best tests for Salt are going
-to be unit tests. Testing is `a whole topic on its
-own <https://docs.saltproject.io/en/master/topics/tutorials/writing_tests.html>`__,
-But you may also want to write functional or integration tests. You'll
-find those in the ``salt/tests`` directory.
-
-When you're thinking about tests to write, the most important thing to
-keep in mind is, ‚ÄúWhat, exactly, am I testing?‚Äù When a test fails, you
-should know:
-
--  What, specifically, failed?
--  Why did it fail?
--  As much as possible, what do I need to do to fix this failure?
-
-If you can't answer those questions then you might need to refactor your
-tests.
-
-When you're running tests locally, you should make sure that if you
-remove your code changes your tests are failing. If your tests *aren't*
-failing when you haven't yet made changes, then it's possible that
-you're testing the wrong thing.
-
-But whether you adhere to TDD/BDD, or you write your code first and your
-tests last, ensure that your tests are meaningful.
-
-
-Running tests
--------------
-As previously mentioned, we use ``nox``, and that's how we run our
-tests. You should have it installed by this point but if not you can
-install it with this:
-
-::
-
-   python -m pip install nox
-
-Now you can run your tests:
-
-::
-
-   python -m nox -e "test-3(coverage=False)" -- tests/unit/cli/test_batch.py
-
-It's a good idea to install
-`espeak <https://github.com/espeak-ng/espeak-ng>`__ or use ``say`` on
-Mac if you're running some long-running tests. You can do something like
-this:
-
-::
-
-   python -m nox -e "test-3(coverage=False)" -- tests/unit/cli/test_batch.py; espeak "Tests done, woohoo!"
-
-That way you don't have to keep monitoring the actual test run.
-
-
-::
-
-   python -m nox -e "test-3(coverage=False)" -- --core-tests
-
-You can enable or disable test groups locally by passing their respected flag:
-
-* --no-fast-tests - Tests that are ~10s or faster. Fast tests make up ~75% of tests and can run in 10 to 20 minutes.
-* --slow-tests - Tests that are ~10s or slower.
-* --core-tests - Tests of any speed that test the root parts of salt.
-* --flaky-jail - Test that need to be temporarily skipped.
-
-In Your PR, you can enable or disable test groups by setting a label.
-All fast, slow, and core tests specified in the change file will always run.
-
-* test:no-fast
-* test:core
-* test:slow
-* test:flaky-jail
-
-
-Changelog and commit!
----------------------
-When you write your commit message you should use imperative style. Do
-this:
-
-   Add frobnosticate capability
-
-Don't do this:
-
-   Added frobnosticate capability
-
-But that advice is backwards for the changelog. We follow the
-`keepachangelog <https://keepachangelog.com/en/1.0.0/>`__ approach for
-our changelog, and use towncrier to generate it for each release. As a
-contributor, all that means is that you need to add a file to the
-``salt/changelog`` directory, using the ``<issue #>.<type>`` format. For
-instanch, if you fixed issue 123, you would do:
-
-::
-
-   echo "Made sys.doc inform when no minions return" > changelog/123.fixed
-
-And that's all that would go into your file. When it comes to your
-commit message, it's usually a good idea to add other information, such as
-
-- What does a reviewer need to know about the change that you made?
-- If someone isn't an expert in this area, what will they need to know?
-
-This will also help you out, because when you go to create the PR it
-will automatically insert the body of your commit messages.
-
-
-Pull request time!
-------------------
-Once you've done all your dev work and tested locally, you should check
-out our `PR
-guidelines <https://docs.saltproject.io/en/master/topics/development/pull_requests.html>`__.
-After you read that page, it's time to `open a new
-PR <https://github.com/saltstack/salt/compare>`__. Fill out the PR
-template - you should have updated or created any necessary docs, and
-written tests if you're providing a code change. When you submit your
-PR, we have a suite of tests that will run across different platforms to
-help ensure that no known bugs were introduced.
-
-
-Now what?
----------
-You've made your changes, added documentation, opened your PR, and have
-passing tests‚Ä¶ now what? When can you expect your code to be merged?
-
-When you open your PR, a reviewer will get automatically assigned. If
-your PR is submitted during the week you should be able to expect some
-kind of communication within that business day. If your tests are
-passing and we're not in a code freeze, ideally your code will be merged
-that week or month. If you haven't heard from your assigned reviewer, ping them
-on GitHub, `irc <https://web.libera.chat/#salt>`__, or Community Slack.
-
-It's likely that your reviewer will leave some comments that need
-addressing - it may be a style change, or you forgot a changelog entry,
-or need to update the docs. Maybe it's something more fundamental -
-perhaps you encountered the rare case where your PR has a much larger
-scope than initially assumed.
-
-Whatever the case, simply make the requested changes (or discuss why the
-requests are incorrect), and push up your new commits. If your PR is
-open for a significant period of time it may be worth rebasing your
-changes on the most recent changes to Salt. If you need help, the
-previously linked Git resources will be valuable.
-
-But if, for whatever reason, you're not interested in driving your PR to
-completion then just note that in your PR. Something like, ‚ÄúI'm not
-interested in writing docs/tests, I just wanted to provide this fix -
-someone else will need to complete this PR.‚Äù If you do that then we'll
-add a ‚ÄúHelp Wanted‚Äù label and someone will be able to pick up the PR,
-make the required changes, and it can eventually get merged in.
-
-In any case, now that you have a PR open, congrats! You're a Salt
-developer! You rock!
-
-
-Troubleshooting
-===============
-
-
-zmq.core.error.ZMQError
------------------------
-Once the minion starts, you may see an error like the following::
-
-::
-
-   zmq.core.error.ZMQError: ipc path "/path/to/your/virtualenv/var/run/salt/minion/minion_event_7824dcbcfd7a8f6755939af70b96249f_pub.ipc" is longer than 107 characters (sizeof(sockaddr_un.sun_path)).
-
-This means that the path to the socket the minion is using is too long.
-This is a system limitation, so the only workaround is to reduce the
-length of this path. This can be done in a couple different ways:
-
-1. Create your virtualenv in a path that is short enough.
-2. Edit the :conf_minion:``sock_dir`` minion config variable and reduce
-   its length. Remember that this path is relative to the value you set
-   in :conf_minion:``root_dir``.
-
-NOTE: The socket path is limited to 107 characters on Solaris and Linux,
-and 103 characters on BSD-based systems.
-
-
-No permissions to access ...
-----------------------------
-If you forget to pass your config path to any of the ``salt*`` commands,
-you might see
-
-::
-
-   No permissions to access "/var/log/salt/master", are you running as the
-   correct user?
-
-Just pass ``-c local/etc/salt`` (or whatever you named it)
-
-
-File descriptor limit
----------------------
-You might need to raise your file descriptor limit. You can check it
-with:
-
-::
-
-   ulimit -n
-
-If the value is less than 3072, you should increase it with:
-
-::
-
-   ulimit -n 3072
-   # For c-shell:
-   limit descriptors 3072
-
-
-Pygit2 or other dependency install fails
-----------------------------------------
-You may see some failure messages when installing requirements. You can
-directly access your nox environment and possibly install pygit (or
-other dependency) that way. When you run nox, you'll see a message like
-this:
-
-::
-
-   nox > Re-using existing virtual environment at .nox/pytest-parametrized-3-crypto-none-transport-zeromq-coverage-false.
-
-For this, you would be able to install with:
-
-::
-
-   .nox/pytest-parametrized-3-crypto-none-transport-zeromq-coverage-false/bin/python -m pip install pygit2
diff --git a/README.rst b/README.rst
index 77806aa14a3..1a7c5690ce6 100644
--- a/README.rst
+++ b/README.rst
@@ -1,18 +1,6 @@
 .. image:: https://img.shields.io/github/license/saltstack/salt
    :alt: Salt Project License: Apache v2.0
-   :target: https://github.com/saltstack/salt/blob/master/LICENSE
-
-.. image:: https://img.shields.io/pypi/dm/salt?label=pypi%20downloads
-   :alt: PyPi Package Downloads
-   :target: https://pypi.org/project/salt
-
-.. image:: https://img.shields.io/lgtm/grade/python/github/saltstack/salt
-   :alt: PyPi Package Downloads
-   :target: https://lgtm.com/projects/g/saltstack/salt/context:python
-
-.. image:: https://img.shields.io/badge/slack-@saltstackcommunity-blue.svg?logo=slack
-   :alt: Salt Project Slack Community
-   :target: https://join.slack.com/t/saltstackcommunity/shared_invite/zt-3av8jjyf-oBQ2M0vhXOhJpNpRkPWBvg
+   :target: https://github.com/openSUSE/salt/blob/master/LICENSE
 
 .. image:: https://img.shields.io/twitch/status/saltprojectoss
    :alt: Salt Project Twitch Channel
@@ -34,7 +22,7 @@
    :alt: Salt Project Logo
 
 * `Latest Salt Documentation`_
-* `Open an issue`_ (bug report, feature request, etc.)
+* `Open an issue <https://github.com/openSUSE/salt/issues/new/choose>`_ (bug report, feature request, etc.)
 
 *Salt is the world's fastest, most intelligent and scalable automation*
 *engine.*
@@ -69,56 +57,40 @@ In addition to configuration management Salt can also:
   outages, common administration problems, or other important events.
 
 
-About our sponsors
-==================
-Salt powers VMware's `vRealize Automation SaltStack Config`_, and can be found
-under the hood of products from Juniper, Cisco, Cloudflare, Nutanix, SUSE, and
-Tieto, to name a few.
-
-The original sponsor of our community, SaltStack, was `acquired by VMware in 2020 <https://www.vmware.com/company/acquisitions/saltstack.html>`_.
-The Salt Project remains an open source ecosystem that VMware supports and
-contributes to. VMware ensures the code integrity and quality of the Salt
-modules by acting as the official sponsor and manager of the Salt project. Many
-of the core Salt Project contributors are also VMware employees. This team
-carefully reviews and enhances the Salt modules to ensure speed, quality, and
-security.
-
-
 Download and install Salt
 =========================
-Salt is tested and packaged to run on CentOS, Debian, RHEL, Ubuntu, MacOS,
-Windows, and more. Download Salt and get started now. See
-`supported operating systems <https://docs.saltproject.io/salt/install-guide/en/latest/topics/salt-supported-operating-systems.html>`_
-for more information.
+Salt is distributed for most currently supported SUSE and openSUSE operating systems.
 
-To download and install Salt, see:
-* `The Salt install guide <https://docs.saltproject.io/salt/install-guide/en/latest/index.html>`_
-* `Salt Project repository <https://packages.broadcom.com/artifactory/saltproject-generic/>`_
-* `Salt Project debian repository <https://packages.broadcom.com/artifactory/saltproject-deb/>`_
-* `Salt Project redhat repository <https://packages.broadcom.com/artifactory/saltproject-rpm/>`_
+Execute the following commands to install Salt:
+
+.. code-block:: shell
+
+   zypper ref
+   zypper install salt salt-master salt-minion
 
 
 Technical support
 =================
-Report bugs or problems using Salt by opening an issue: `<https://github.com/saltstack/salt/issues>`_
-
-To join our community forum where you can exchange ideas, best practices,
-discuss technical support questions, and talk to project maintainers, join our
-Slack workspace: `Salt Project Community Slack`_
+Report bugs or problems using Salt by opening an issue: `<https://github.com/openSUSE/salt/issues>`_
 
 
 Salt Project documentation
 ==========================
 Installation instructions, tutorials, in-depth API and module documentation:
 
-* `The Salt install guide <https://docs.saltproject.io/salt/install-guide/en/latest/index.html>`_
 * `The Salt user guide <https://docs.saltproject.io/salt/user-guide/en/latest/>`_
-* `Latest Salt documentation`_
+* `Latest Salt documentation <https://docs.saltproject.io/en/latest/contents.html>`_
 * `Salt's contributing guide <https://docs.saltproject.io/en/master/topics/development/contributing.html>`_
 
 
 Security advisories
 ===================
+For reporting security issues, see
+`SUSE Security Contacts <https://www.suse.com/support/security/contact/>`_.
+
+For receiving security reports, see the
+`openSUSE/SUSE Security Announce mailing list <https://lists.opensuse.org/archives/list/security-announce@lists.opensuse.org/>`_.
+
 Keep an eye on the Salt Project
 `Security Announcements <https://saltproject.io/security-announcements/>`_
 landing page. Salt Project recommends subscribing to the
@@ -126,65 +98,14 @@ landing page. Salt Project recommends subscribing to the
 to receive notification when new information is available regarding security
 announcements.
 
-Other channels to receive security announcements include the
-`Salt Community mailing list <https://groups.google.com/forum/#!forum/salt-users>`_
-and the `Salt Project Community Slack`_.
-
-
-Responsibly reporting security vulnerabilities
-++++++++++++++++++++++++++++++++++++++++++++++
-When reporting security vulnerabilities for Salt or other SaltStack projects,
-refer to the `SECURITY.md`_ file found in this repository.
-
-
-Join our community
-==================
-Salt is built by the Salt Project community, which includes more than 3,000
-contributors working in roles just like yours. This well-known and trusted
-community works together to improve the underlying technology and extend Salt by
-creating a variety of execution and state modules to accomplish the most common
-tasks or solve the most important problems that people in your role are likely
-to face.
-
-If you want to help extend Salt or solve a problem with Salt, you can join our
-community and contribute today.
-
-Please be sure to review our
-`Code of Conduct <https://github.com/saltstack/salt/blob/master/CODE_OF_CONDUCT.md>`_.
-Also, check out some of our community resources including:
-
-* `Salt Project Community Wiki <https://github.com/saltstack/community/wiki>`_
-* `Salt Project Community Slack`_
-* `Salt Project: IRC on LiberaChat <https://web.libera.chat/#salt>`_
-* `Salt Project YouTube channel <https://www.youtube.com/channel/UCpveTIucFx9ljGelW63-BWg>`_
-* `Salt Project Twitch channel <https://www.twitch.tv/saltprojectoss>`_
-
-There are lots of ways to get involved in our community. Every month, there are
-around a dozen opportunities to meet with other contributors and the Salt Core
-team and collaborate in real time. The best way to keep track is by subscribing
-to the **Salt Project Community Events Calendar** on the main
-`<https://saltproject.io>`_ website.
-
-If you have additional questions, email us at saltproject@vmware.com or reach out
-directly to the Community Manager, Jimmy Chunga via Slack. We'd be glad to
-have you join our community!
-
 
 License
 =======
 Salt is licensed under the Apache 2.0 license. Please
 see the
-`LICENSE file <https://github.com/saltstack/salt/blob/master/LICENSE>`_ for the
+`LICENSE file <https://github.com/openSUSE/salt/blob/master/LICENSE>`_ for the
 full text of the Apache license, followed by a full summary of the licensing
 used by external modules.
 
 A complete list of attributions and dependencies can be found here:
-`salt/DEPENDENCIES.md <https://github.com/saltstack/salt/blob/master/DEPENDENCIES.md>`_
-
-.. _Salt Project Community Slack: https://join.slack.com/t/saltstackcommunity/shared_invite/zt-3av8jjyf-oBQ2M0vhXOhJpNpRkPWBvg
-.. _vRealize Automation SaltStack Config: https://www.vmware.com/products/vrealize-automation/saltstack-config.html
-.. _Latest Salt Documentation: https://docs.saltproject.io/en/latest/
-.. _Open an issue: https://github.com/saltstack/salt/issues/new/choose
-.. _SECURITY.md: https://github.com/saltstack/salt/blob/master/SECURITY.md
-.. _Calendar html: https://outlook.office365.com/owa/calendar/105f69bacd4541baa849529aed37eb2d@vmware.com/434ec2155b2b4cce90144c87f0dd03d56626754050155294962/calendar.html
-.. _Calendar ics: https://outlook.office365.com/owa/calendar/105f69bacd4541baa849529aed37eb2d@vmware.com/434ec2155b2b4cce90144c87f0dd03d56626754050155294962/calendar.ics
+`salt/DEPENDENCIES.md <https://github.com/openSUSE/salt/blob/master/DEPENDENCIES.md>`_
diff --git a/SECURITY.md b/SECURITY.md
deleted file mode 100644
index b161605e9f0..00000000000
--- a/SECURITY.md
+++ /dev/null
@@ -1,129 +0,0 @@
-# SaltStack's Security Disclosure Policy
-
-**Email**
-- security@saltstack.com
-
-**GPG key ID:**
-- 4EA0793D
-
-**GPG key fingerprint:**
-- `8ABE 4EFC F0F4 B24B FF2A  AF90 D570 F2D3 4EA0 793D`
-
-**GPG Public Key**
-
-```
------BEGIN PGP PUBLIC KEY BLOCK-----
-
-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
-vtBIWO4LPeGEvb2Gs65PL2eouOqU6yvBr5Y=
-=F/97
------END PGP PUBLIC KEY BLOCK-----
-```
-
-The SaltStack Security Team is available at security@saltstack.com for
-security-related bug reports or questions.
-
-We request the disclosure of any security-related bugs or issues be reported
-non-publicly until such time as the issue can be resolved and a security-fix
-release can be prepared. At that time we will release the fix and make a public
-announcement with upgrade instructions and download locations.
-
-## Security response procedure
-
-SaltStack takes security and the trust of our customers and users very
-seriously. Our disclosure policy is intended to resolve security issues as
-quickly and safely as is possible.
-
-1.  A security report sent to security@saltstack.com is assigned to a team
-    member. This person is the primary contact for questions and will
-    coordinate the fix, release, and announcement.
-
-2.  The reported issue is reproduced and confirmed. A list of affected projects
-    and releases is made.
-
-3.  Fixes are implemented for all affected projects and releases that are
-    actively supported. Back-ports of the fix are made to any old releases that
-    are actively supported.
-
-4.  Packagers are notified via the [salt-packagers](https://groups.google.com/forum/#!forum/salt-packagers) mailing list that an issue
-    was reported and resolved, and that an announcement is incoming.
-
-5.  A new release is created and pushed to all affected repositories. The
-    release documentation provides a full description of the issue, plus any
-    upgrade instructions or other relevant details.
-
-6.  An announcement is made to the [salt-users](https://groups.google.com/forum/#!forum/salt-users) and [salt-announce](https://groups.google.com/forum/#!forum/salt-announce) mailing
-    lists. The announcement contains a description of the issue and a link to
-    the full release documentation and download locations.
-
-## Receiving security announcements
-
-The fastest place to receive security announcements is via the [salt-announce](https://groups.google.com/forum/#!forum/salt-announce)
-mailing list. This list is low-traffic.
-
-## Guidance on Salt and security best practices
-
-Reference the following documentation to ensure Salt best practices are being
-implemented in your infrastructure:
-
-- [Docs: Hardening Salt](https://docs.saltproject.io/en/master/topics/hardening.html)
-- [Docs: Salt Best Practices](https://docs.saltproject.io/en/master/topics/best_practices.html)
-- [Blog: How I Hardened My Salt Environment](https://saltproject.io/blog/how-i-hardened-my-salt-environment/)
diff --git a/SUPPORT.rst b/SUPPORT.rst
index bfe9d1cbeae..8731c1f6a3c 100644
--- a/SUPPORT.rst
+++ b/SUPPORT.rst
@@ -1,17 +1,10 @@
-Get SaltStack Support and Help
-==============================
+Get Salt Project Support and Help
+=================================
 
-**IRC Chat** - Join the vibrant, helpful and positive SaltStack chat room in
-LiberaChat at #salt. There is no need to introduce yourself, or ask permission
-to join in, just help and be helped! Make sure to wait for an answer, sometimes
-it may take a few moments for someone to reply.
+**Salt Project Discord** - Join the Salt Project Community Discord!
+Use the following link to join the Discord server:
 
-`<https://web.libera.chat/#salt>`_
-
-**SaltStack Slack** - Alongside IRC is our SaltStack Community Slack for the
-SaltStack Working groups. Use the following link to request an invitation.
-
-`<https://join.slack.com/t/saltstackcommunity/shared_invite/zt-3av8jjyf-oBQ2M0vhXOhJpNpRkPWBvg>`_
+`<https://discord.com/invite/J7b7EscrAs>`_
 
 **Mailing List** - The SaltStack community users mailing list is hosted by
 Google groups. Anyone can post to ask questions about SaltStack products and
@@ -20,13 +13,12 @@ anyone can help answer. Join the conversation!
 `<https://groups.google.com/forum/#!forum/salt-users>`_
 
 You may subscribe to the list without a Google account by emailing
-salt-users+subscribe@googlegroups.com and you may post to the list by emailing
-salt-users@googlegroups.com
+``salt-users+subscribe@googlegroups.com`` and you may post to the list by emailing
+``salt-users@googlegroups.com``
 
 **Reporting Issues** - To report an issue with Salt, please follow the
 guidelines for filing bug reports:
 `<https://docs.saltproject.io/en/master/topics/development/reporting_bugs.html>`_
 
-**SaltStack Support** - If you need dedicated, prioritized support, please
-consider a SaltStack Support package that fits your needs:
-`<http://www.saltstack.com/support>`_
+**Salt Project Support** - If you need dedicated, prioritized support, please
+consider contacting `SUSE <https://www.suse.com/contact/>`_ for premium support plans.
-- 
2.51.0

