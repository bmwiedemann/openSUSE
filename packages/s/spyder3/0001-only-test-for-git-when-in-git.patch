From 71a81ae1d434019e6758fcce8e8c75b81362c2da Mon Sep 17 00:00:00 2001
From: bnavigator <code@bnavigator.de>
Date: Wed, 12 Feb 2020 22:45:33 -0800
Subject: [PATCH] only test for git when in git

---
 spyder/utils/tests/test_vcs.py | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/spyder/utils/tests/test_vcs.py b/spyder/utils/tests/test_vcs.py
index 5d39b04de..901968a76 100644
--- a/spyder/utils/tests/test_vcs.py
+++ b/spyder/utils/tests/test_vcs.py
@@ -25,7 +25,10 @@ from spyder.utils.vcs import (ActionToolNotFound, get_git_refs,
 
 HERE = os.path.abspath(os.path.dirname(__file__))
 
+skipnogit=pytest.mark.skipif(not(get_vcs_root(HERE)),
+                             reason="Not installing from git repo")
 
+@skipnogit
 @pytest.mark.skipif(os.environ.get('CI', None) is None,
                     reason="Not to be run outside of CIs")
 def test_vcs_tool():
@@ -36,13 +39,13 @@ def test_vcs_tool():
         assert run_vcs_tool(osp.dirname(__file__), 'browse')
         assert run_vcs_tool(osp.dirname(__file__), 'commit')
 
-
+@skipnogit
 def test_vcs_root(tmpdir):
     directory = tmpdir.mkdir('foo')
     assert get_vcs_root(str(directory)) == None
     assert get_vcs_root(osp.dirname(__file__)) != None
 
-
+@skipnogit
 @pytest.mark.skipif(os.name == 'nt' and os.environ.get('AZURE') is not None,
                     reason="Fails on Windows/Azure")
 def test_git_revision():
@@ -62,7 +65,7 @@ def test_no_git(monkeypatch):
     assert branch == ''
     assert len(files_modified) == 0
 
-
+@skipnogit
 def test_get_git_refs():
     branch_tags, branch, files_modified = get_git_refs(__file__)
     assert bool(branch)  # This must always return a branch_name
@@ -73,7 +76,7 @@ def test_get_git_refs():
     if not os.environ.get('TRAVIS_TAG'):
         assert any(['master' in b for b in branch_tags])
 
-
+@skipnogit
 def test_get_git_remotes():
     remotes = get_git_remotes(HERE)
     assert 'origin' in remotes
-- 
2.25.0

