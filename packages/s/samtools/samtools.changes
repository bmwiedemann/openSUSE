-------------------------------------------------------------------
Wed Jan  3 01:46:12 UTC 2024 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to version 1.19
  Too many changes to list, for details see
  https://github.com/samtools/samtools/releases/tag/1.19
- Update to version 1.18
  Too many changes to list, for details see
  https://github.com/samtools/samtools/releases/tag/1.18
- Update to version 1.17
  Too many changes to list, for details see
  https://github.com/samtools/samtools/releases/tag/1.17

-------------------------------------------------------------------
Thu Sep 15 00:59:03 UTC 2022 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to version 1.16.1
  * Fixed a bug with the template-coordinate sort which caused
    incorrect ordering when using threads, or processing large
    files that don't fit completely in memory.
  * Fixed a crash that occurred when trying to use samtools merge
  in template-coordinate mode.
- Update to version 1.16.0
  * New work and changes:
    - samtools reference command added. This subcommand extracts
      the embedded reference out of a CRAM file.
    - samtools import now adds grouped by query-name to the header
    - Made samtools view read error messages more generic. Former
      error message would claim that there was a "truncated file
      or corrupt BAM index file" with no real justification. Also
      reset errno in stream_view which could lead to confusing
      error messages.
    - Make samtools view -p also clear mqual, tlen and cigar.
    - Add bedcov option -c to report read count.
    - Add UMI/barcode handling to samtools markdup.
    - Add a new template coordinate sort order to samtools sort
      and samtools merge. This is useful when working with unique
      molecular identifiers (UMIs).
    - Rename mpileup --ignore-overlaps to
      --ignore-overlaps-removal or --disable-overlap-removal.
    - The dict command can now read BWA's .alt file and add AH:*
      tags indicating reference sequences that represent
      alternate loci.
    - The samtools index command can now accept multiple alignment
      filenames with the new -M option, and will index each of
      them separately.
    - Allow samtools fastq -T "*". This allows all tags from SAM
      records to be written to fastq headers.
  * Bug Fixes:
    - Re-enable --reference option for samtools depth. The
      reference is not used but this makes the command line
      usage compatible with older releases.
    - Fix regex coordinate bug in samtools markdup.
    - Fix divide by zero in plot-bamstats -m, on unmapped data.
    - Fix missing RG headers when using samtools merge -r.
    - Fix a possible unaligned access in samtools reference.
  * Documentation:
    - Add documentation on CRAM compression profiles and some
      of the newer options that appear in CRAM 3.1 and above.
    - Add sclen filter expression keyword documentation.
    - Extend FILTER EXPRESSION man page section to match the
      changes made in HTSlib.


-------------------------------------------------------------------
Wed Apr 20 20:13:07 UTC 2022 - Ferdinand Thiessen <rpm@fthiessen.de>

- Update to version 1.15.1
  * Samtools mpileup VCF and BCF output (deprecated in release 1.9)
    has been removed. Please use bcftools mpileup instead.
  * Added --min-BQ and --min-MQ options to depth.
  * Improved automatic file type detection with view -u or
    view -1.
  * For markdup optical duplicate marking add regex options for
    custom coordinates.
  * New samtools consensus subcommand for generating consensus
    from SAM, BAM or CRAM files based on the contents of the
    alignment records.
  * New samtools view --fetch-pairs option.
  * New samtools head subcommand for conveniently displaying
    the headers of a SAM, BAM, or CRAM file.
  * Bug fixes
- Update to version 1.14
  * The legacy samtools API has been removed:
    libbam.a, bam_endian.h, sam.h and most of bam.h
  * New samtools samples command to list the samples used in a
    SAM/BAM/CRAM file.
  * mpileup now supports base modifications via the SAM Mm/MM
    auxiliary tag. Please see the --output-mods option.
  * Added mpileup --output-BP-5 option to output the BP field in
    5' to 3' order instead of left to right.
  * Added samtools view --rf option as an additional FLAG
    filtering method.
  * New samtools import -N option to use the second word on
    a FASTQ header line, matching the SRA/ENA FASTQ variant.
  * Improve view -x option to simplify specifying multiple tags,
    and added the reverse --keep-tag option to include rather
    than exclude.
  * Switched the processing order of view -x (tag filtering)
    and -e (expression) handling.
  * Added filter expression endpos keyword.
  * samtools view errors now appear after any SAM output,
    improving their visibility.
  * Improved samtools sort use of temporary files, both tidying
    up if it fails and recovery when facing pre-existing
    temporary files.
  * Filtering in samtools view now sets the UNMAP BAM flag
    when given the -p option.
  * Make CRAM references shared during samtools merge so
    merging many files has a lower memory usage.
  * Bug fixes
- Update to version 1.13
  * Fixed samtools view FILE REGION, mpileup -r REGION,
    coverage -r REGION and other region queries
  * Added options to set and clear flags to samtools view
  * samtools view now has long option equivalents for most of its
    single-letter options
  * A new tool, samtools import, has been added.
    It reads one or more FASTQ files and converts them into unmapped
    SAM, BAM or CRAM.
  * Fixed samtools coverage error message when the target region name#
    is not present in the file header.
  * Made samtools coverage ASCII mode produce true ASCII output.
  * samtools coverage now allows setting the maximum depth,
    using the -d/--depth option.
  * samtools flags now accepts any number of command line arguments,
    allowing multiple SAM flag combinations to be converted at once.
  * samtools ampliconclip, ampliconstats and plot-ampliconstats now support
    inputs that list more than one reference.
  * samtools ampliconclip now accepts the --tolerance option,
    which allows the user to set the number of bases within which a region
    is matched.
  * Fixed negative depth values in ampliconstats output.
  * samtools addreplacerg now allows for updating (replacing) an
    existing @RG line in the output header, if a new @RG line is provided
    in the command line, via the -r argument.
  * Stopped samtools cat from outputting multiple CRAM EOF markers.
  * Three new counts have been added to samtools flagstat:
    primary, mapped primary and duplicate primary.
  * samtools merge now accepts a -o FILE option specifying the output file,
    similarly to most other subcommands.

-------------------------------------------------------------------
Wed Apr 28 15:57:19 UTC 2021 - Ferdinand Thiessen <rpm@fthiessen.de>

- Update to version 1.12
  * The legacy samtools API (libbam.a, bam.h, sam.h, etc) is
    deprecated and will be removed entirely in a future SAMtools
    release. It is recommend coding against the HTSlib API directly.
  * I/O errors and record parsing errors during the reading of
    SAM/BAM/CRAM files are now always detected.
  * samtools --version now displays a summary of the compilation
    details and available features, including flags, used libraries
    and enabled plugins from HTSlib.
  * samtools stats now displays the number of supplementary reads
    in the SN section. Also, supplementary reads are no longer
    considered when splitting read pairs by orientation.
  * samtools stats now counts only the filtered alignments that
    overlap target regions, if any are specified.
  * samtools view now accepts option -N, which takes a file containing
    read names of interest. This allows the output of only the reads
    with names contained in the given file.
  * samtools view -d option now works without a tag associated value,
    which allows it to output all the reads with the given tag.
  * samtools view -d and -D options now accept integer and single
    character values associated with tags, not just strings.
  * samtools view now works with the filtering expressions introduced
    by HTSlib. The filtering expression is passed to the program using
    the specific option -e or the global long option --input-fmt-option.
  * samtools markdup now benefits from an increase in performance
    in the situation when a single read has tens or hundreds of
    thousands of duplicates.
  * A new FASTA/FASTQ sanitizer script (fasta-sanitize.pl) was
    added, which corrects the invalid characters in the reference
    names.
  * Fixed a bug in samtools cat, which prevented the command from
    running in multi-threaded mode.
  * Fixed a samtools merge segmentation fault when it failed to
    merge header @PG records.
  * Ampliconclip and ampliconstats now guard against the BED file
    containing more than one reference (chromosome) and fail when
    found. Adding proper support for multiple references will
    appear later.

-------------------------------------------------------------------
Fri Mar 19 09:18:00 UTC 2021 - Wang Jun <jgwang@suse.com>

- Update to version 1.11
  * New samtools ampliconclip sub-command for removing primers from
    amplicon-based sequencing experiments, including the current
    COVID-19 projects.  The primers are listed in a BED file and can be
    either soft-clipped or hard-clipped. (#1219)
  * New samtools ampliconstats sub-command to produce a textual summary
    of primer and amplicon usage, in a similar style to "samtools
    stats". The misc/plot-ampliconstats script can generate PNG
    images based on this text report. (#1227)
  * Samtools fixmate, addreplacerg, markdup, ampliconclip and sort now
    accept a -u option to enable uncompressed output, which is useful when
    sending data over a pipe to another process.  Other subcommands which
    already support this option for the same purpose are calmd, collate,
    merge, view and depad. (#1265)
  * samtools stats has a new GCT section, where it reports ACGT content
    percentages, similar to GCC but taking into account the read orientation.
    (#1274)
  * Samtools split now supports splitting by tag content with the -d
    option (#1211)
  * samtools merge now accepts a BED file as a command line argument (-L) and
    does the merging only with reads overlapping the specified regions (#1156)
  * Samtools sort now has a minhash collation (-M) to group unmapped
    reads with similar sequence together.  This can sometimes
    significantly reduce the file size. (#1093)
  * Samtools bedcov now has -g and -G options to filter-in and
    filter-out based on the FLAG field.  Also the new -d option adds
    an extra column per file counting the number of bases with a depth
    greater than or equal to a given threshold. (#1214)
  * Fixed samtools bedcov -j option (discard deletions and ref-skips)
    with multiple input files (#1212)
  * samtools bedcov will now accept BED files with columns separated by
    spaces as well as tabs (#1246; #1188 reported by Mary Carmack)
  * samtools depth can now include deletions (D) when computing the base
    coverage depth, if the user adds the -J option to the command
    line (#1163).
  * samtools depth will count only the bases of one read, for the overlapping
    section of a read pair, if the -s option is used in the command line
    (#1241, thanks to Teng Li).
  * samtools depth will now write zeros for the entire reference length,
    when "samtools depth -aa" is run on a file with no alignments. (#1252;
    #1249 reported by Paul Donovan)
  * Stopped depth from closing stdout, which triggered test fails
    in pysam (#1208, thanks to John Marshall).
  * samtools view now accepts remote URIs for FASTA and FAI files.
    Furthermore, the reference and index file can be provided in a single
    argument, such as
    samtools view -T ftp://x.com/ref.fa##idx##ftp://y.com/index.fa.fai a.cram
    (#1176; samtools/htslib#933 reported by @uitde007)
  * samtools faidx gets new options --fai-idx and --gzi-idx to allow
    specification of the locations of the .fai and (if needed) .gzi index
    files. (#1283)
  * The samtools fasta/fastq '-T' option can now add SAM array (type 'B') tags
    to the output header lines. (#1301)
  * samtools mpileup can now display MAPQ either as ASCII characters (with
    -s/--output-MQ; column now restored to its documented order as in 1.9 and
    previous versions) or comma-separated numbers (with --output-extra MAPQ;
    in SAM column order alongside other selected --output-extra columns).
    When both -s/--output-MQ and -O/--output-BP are used, samtools 1.10 printed
    the extra columns in the opposite order.  This changes the format produced
    by 1.10's --output-extra MAPQ. (#1281, thanks to John Marshall; reported
    by Christoffer Flensburg)
  * samtools tview now accepts a -w option to set the output width in
    text mode (-d T). (#1280)
  * The dict command can now add AN tags containing alternative names with
    "chr" prefixes added to or removed from each sequence name as appropriate
    and listing both "M" and "MT" alternatives for mitochondria. (#1164,
    thanks to John Marshall)
  * The samtools import command, labelled as obsolete in May 2009 and
    removed from all help and documentation later that year, has
    finally been removed.  Use samtools view instead. (#1185)
  * Replaced the remaining usage of the Samtools 0.1 legacy API with
    htslib calls. (#1187, thanks to John Marshall)
  * Documentation / help improvements (#1154; #1168; #1191; #1199;
    #1204; #1313):
    - Fixed a few man-page table layout issues
    - Added <file>##idx##<index> filename documentation
    - Fixed usage statement for samtools addreplacerg
    - Miscellaneous spelling and grammar fixes
    - Note fixmate/markdup name collated rather than name sorted input
    - Note that fastq and fasta inputs should also be name collated
    - Reshuffled order of main man-page and added -@ to more sub-pages
    - The misc/seq_cache_populate.pl script now gives REF_CACHE guidance
  * Additional documentation improvements, thanks to John Marshall (#1181;
    #1224; #1248; #1262; #1300)
    - Emphasise that samtools index requires a position-sorted file
    - Document 2^29 chromosome length limit in BAI indexes
    - Numerous typing, spelling and formatting fixes
  * Improved the message printed when samtools view fails to read its
    input (#1296)
  * Added build support for the OpenIndiana OS (#1165, thanks to John Marshall)
  * Fixed failing tests on OpenBSD (#1151, thanks to John Marshall)
  * The samtools sort tests now use less memory so the test suite works better
    on small virtual machines. (#1159)
  * Improved markdup's calculation of insert sizes (#1161)
    Also improved tests (#1150) and made it run faster when not checking
    for optical duplicates or adding 'do' tags (#1308)
  * Fixed samtools coverage minor inconsistency vs idxstats (#1205; #1203
    reported by @calliza)
  * Fixed samtools coverage quality thresholding options which were the
    wrong way round compared to mpileup (-q is the mapping quality threshold
    and -Q is base quality). (#1279; #1278 reported by @kaspernie)
  * Fixed bug where `samtools fastq -i` would add two copies of the barcode
    in the fastq header if both reads in a pair had a "BC:Z" tag (#1309;
    #1307 reported by @mattsoup)
  * Samtools calmd no longer errors with a SEQ of "*" (#1230; #1229
    reported by Bob Harris)
  * Samtools tview now honours $COLUMNS, fixing some CI tests (#1171; #1162
    reported by @cljacobs)
  * Fixed a samtools depad overflow condition (#1200)
  * Improved curses detection in configure script (#1170, #577, #940)
  * Fixed samtools stats integer overflows and added support for long
    references (#1174; #1173)
  * Fixed a 1-byte undersized memory allocation in samtools merge. (#1302)

-------------------------------------------------------------------
Wed Feb  5 15:01:48 UTC 2020 - Todd R <toddrme2178@gmail.com>

  + Changes affecting the whole of samtools, or multiple sub-commands:
    * Samtools now uses the new HTSlib header API.  As this adds more checks
      for invalid headers, it is possible that some illegal files will now
      be rejected when they would have been allowed by earlier versions.
      Examples of problems that will now be rejected include @SQ lines with
      no SN: tag, and @RG or @PG lines with no ID: tag.
    * samtools sub-commands will now add '@PG' header lines to output sam/bam/cram
      files.  To disable this, use the '--no-PG' option.
    * samtools now supports alignment records with reference positions greater
      than 2 gigabases.  This allows samtools to process alignments for
      species which have large chromosomes, like axolotl and lungfish.  Note that
      due to file format limitations, data with large reference positions
      must use the SAM format.
    * Improved the efficiency of reading and writing SAM format data by 2 fold
      (single thread). This is further improved by the ability to use multiple
      threads, as previously done with BAM and CRAM.
    * samtools can now write BGZF-compressed SAM format.  To enable this,
      either save files with a '.sam.gz' suffix, or use '--output-fmt sam.gz'.
    * samtools can now index BGZF-compressed SAM files.
    * The region parsing code has been improved to handle colons in reference
      names.  Strings can be disambiguated by the use of braces, so for
      example when reference sequences called "chr1" and "chr1:100-200"
      are both present, the regions "{chr1}:100-200" and "{chr1:100-200}"
      unambiguously indicate which reference is being used.
    * samtools flags, flagstats, idxstats and stats now have aliases
      flag, flagstat, idxstat and stat.
    * A new global '--write-index' option has been added.  This allows output
      sam.gz/bam/cram files to be indexed while they are being written out.
      This should work with addreplacerg, depad, markdup, merge, sort, split,
      and view.
    * A global '--verbosity' option has been added to enable/disable
      debugging output.
    * It is now possible to have data and index files stored in different
      locations.
    * HTSlib (and therefore SAMtools) now uses version 4 signatures by default
      for its s3:// plug-in.  It can also write to S3 buckets, as long as
      version 4 signatures are in use.  See HTSlib's NEWS file and
      htslib-s3-plugin manual page for more information.
    * HTSlib (and therefore SAMtools) no longer considers a zero-length
      file to be a valid SAM file.  This has been changed so that pipelines such
      as `somecmd | samtools ...` with `somecmd` aborting before outputting
      anything will now propagate the error to the second command.
    * The samtools manual page has been split up into one for each
      sub-command.  The main samtools.1 manual page now lists the sub-commands
      and describes the common global options.
    * The meaning of decode_md, store_md and store_nm in the fmt-option section
      of the samtools.1 man page has been clarified.
    * Fixed numerous memory leaks.
    * Fixed incorrect macro definition on Windows.
    * bedcov, phase, misc/ace2sam and misc/wgsim now check for failure to open
      files.
  + Changes affecting specific sub-commands:
    * A new "coverage" sub-command has been added.  This prints a tabular format
      of the average coverage and percent coverage for each reference sequence,
      as well as number of aligned reads, average mapping quality and base
      quality.  It can also (with the '-m' option) plot a histogram of
      coverage across the genome.
    * samtools calmd:
      > Reference bases in MD: tags are now converted to upper case.
    * samtools depth:
      > Add new options to write a header to the output (-H) and to direct
        the output to a file (-o).
      > New options '-g' and '-G' can be used to filter reads.
      > Fix memory leak when failing to set CRAM options.
      > Fix bug when using region filters where the '-a' option did not
        work for regions with no coverage.
    * samtools fasta and fastq:
      > '-1 FILE -2 FILE' with the same filename now works properly.
      > '-o FILE' is added as a synonym for '-1 FILE -2 FILE'.
      > The '-F' option now defaults to 0x900 (SECONDARY,SUPPLEMENTARY).
        Previously secondary and supplementary records were filtered internally
        in a way that could not be turned off.
      > Allow reading from a pipe without an explicit '-' on the command line.
      > Turn on multi-threading for bgzf compressed output files.
      > Fixed bug where the samtools fastq -i would output incorrect information
        in the Casava tags for dual-index reads.  It also now prints the tags
        for dual indices in the same way as bcl2fastq, using a '+' sign between
        the two parts of the index.
    * samtools flagstat:
      > Samtools flagstat can now optionally write its output in JSON format or
        as a tab-separated values file..
    * samtools markdup:
      > It can optionally tag optical duplicates (reads following Illumina
        naming conventions only).  The is enabled with the '-d' option,
        which sets the distance for duplicates to be considered as optical.
      > The report stats (-s) option now outputs counts for optical and
        non-primary (supplementary / secondary) duplicates.  It also reports
        the Picard "estimate library size" statistic.  A new '-f' option
        can be used to save the statistics in a given file.
      > The rules for calling duplicates can be changed using the new --mode
        option.  This mainly changes the position associated with each read in
        a pair.  '--mode t' (the default) is the existing behaviour where the
        position used is that of the outermost template base associated with the
        read. Alternatively '--mode s' always uses the first unclipped sequence
        base.  In practice, this only makes a difference for read pairs where the
        two reads are aligned in the same direction.
      > A new '-c' option can be used to clear any existing duplicate tags.
      > A new '--include-fails' option makes markdup include QC-failed reads.
      > Fixed buffer overflow in temporary file writer when writing a mixture
        of long and short alignment records.
    * samtools mpileup:
      > mpileup can now process alignments including CIGAR P (pad) operators
        correctly.  They will now also produce the correct output for alignments
        where insertions are immediately followed by deletions, or deletions by
        insertions.  Note that due to limitations in HTSlib, they are still
        unable to output sequences that have been inserted before the first
        aligned base of a read..
      > In samtools mpileup, a deletion or pad on the reverse strand is now
        marked with a different character ('#') than the one used on a forward
        strand ('*'), if the '--reverse-del' option is used.
      > New option '--output-extra' can be used to add columns for user
        selected alignment fields or aux tags.
      > Fixed double-counting of overlapping bases in alignment records with
        deletions or reference skips longer than twice the insert size.
      > Improved manual page with documentation about what each output column
        means.
    * samtools quickcheck:
      > Add unmapped (-u) option, which disables the check for @SQ lines in
        the header.
    * samtools reheader:
      > A new option '-c' allows the input header to be passed to a given
        command.  Samtools then takes the output of this command and uses it
        as the replacement header.
      > Make it clear in help message that reheader --in-place only works on
        CRAM files.
      > Refuse to in-place reheader BAM files, instead of unexpectedly writing
        a BAM file to stdout.
    * samtools split:
      > In samtools split, the '-u' option no longer accepts an extra file name
        from which a replacement header was read.  The two file names were
        separated using a colon, which caused problems on Windows and prevented
        the use of URLs.  A new '-h' option has been added to allow the replacement
        header file to be specified in its own option.
      > Fixed bug where samtools split would crash if it read a SAM header that
        contained an @RG line with no ID tag.
    * samtools stats:
      > stats will now compute base compositions for BC, CR, OX and RX tags,
        and quality histograms for QT, CY, BZ and QX tags.
      > New stats FTC and LTC showing total number of nucleotides for first and
        last fragments.
      > The rules for classifying reads as "first" or "last" fragment have been
        tightened up.
      > Fixed bug where stats could over-estimate coverage when using the
        target-regions option or when a region was specified on the command-line..
      > Fixed error in stats GCD percentile depth calculation when the depth to be
        reported fell between two bins.  It would report the depth entirely from
        the lower bin instead of taking a weighted average of the two.
      > Better catching and reporting of out of memory conditions.
      > Improved manual page.
    * samtools tview:
      > tview can now display alignments including CIGAR P operators, D followed
        by I and I followed by D correctly.  See mpileup above for more
        information.
      > The "go to position" text entry box has been made wider.
      > Fixed samtools tview -s option which was not filtering reads correctly.
        It now only shows reads from the requested sample or read group.
    * samtools view:
      > New options '-d' and '-D' to only output alignments which have a tag
        with a given type and value.
    * misc/plot-bamstats script:
      > Fixed merge (-m) option.
      > Made the quality heatmap work with gnuplot version 5.2.7 and later.
      > Fixed --do-ref-stats bug where fasta header lines would be counted
        as part of the sequence when the --targets option was used.
    * Removed the misc/varfilter.py Python script, as it takes consensus-pileup
      as input, which was removed from samtools in release 0.1.17 in 2011.

-------------------------------------------------------------------
Thu Sep  6 08:41:09 UTC 2018 - flyos@mailoo.org

- Update to 1.9
 * Samtools mpileup VCF and BCF output is now deprecated.  It is still
   functional, but will warn.  Please use bcftools mpileup instead. (#884)
 * Samtools mpileup now handles the '-d' max_depth option differently.  There
   is no longer an enforced minimum, and '-d 0' is interpreted as limitless
   (no maximum - warning this may be slow).  The default per-file depth is
   now 8000, which matches the value mpileup used to use when processing
   a single sample.  To get the previous default behaviour use the higher
   of 8000 divided by the number of samples across all input files, or 250.
   (#859)
 * Samtools stats new features:
   - The '--remove-overlaps' option discounts overlapping portions of
     templates when computing coverage and mapped base counting. (#855)
   - When a target file is in use, the number of bases inside the
     target is printed and the percentage of target bases with coverage
     above a given threshold specified by the '--cov-threshold' option. (#855)
   - Split base composition and length statistics by first and last reads.
     (#814, #816)
 * Samtools faidx new features:
   - Now takes long options. (#509, thanks to Pierre Lindenbaum)
   - Now warns about zero-length and truncated sequences due to the
     requested range being beyond the end of the sequence. (#834)
   - Gets a new option (--continue) that allows it to carry on
     when a requested sequence was not in the index. (#834)
   - It is now possible to supply the list of regions to output in a text
     file using the new '--region-file' option. (#840)
   - New '-i' option to make faidx return the reverse complement of
     the regions requested. (#878)
   - faidx now works on FASTQ (returning FASTA) and added a new
     fqidx command to index and return FASTQ. (#852)
 * Samtools collate now has a fast option '-f' that only operates on
   primary pairs, dropping secondary and supplementary.  It tries to write
   pairs to the final output file as soon as both reads have been found. (#818)
 * Samtools bedcov gets a new '-j' option to make it ignore deletions (D) and
   reference skips (N) when computing coverage. (#843)
 * Small speed up to samtools coordinate sort, by converting it to use
   radix sort. (#835, thanks to Zhuravleva Aleksandra)
 * Samtools idxstats now works on SAM and CRAM files, however this
   isn't fast due to some information lacking from indices. (#832)
 * Compression levels may now be specified with the level=N
   output-fmt-option.  E.g. with -O bam,level=3.
 * Various documentation improvements.
 * Bug-fixes:
   - Improved error reporting in several places. (#827, #834, #877, cd7197)
   - Various test improvements.
   - Fixed failures in the multi-region iterator (view -M) when regions
     provided via BED files include overlaps (#819, reported by Dave Larson).
   - Samtools stats now counts '=' and 'X' CIGAR operators when
     counting mapped bases. (#855)
   - Samtools stats has fixes for insert size filtering (-m, -i). (#845; #697
     reported by Soumitra Pal)
   - Samtools stats -F now longer negates an earlier -d option. (#830)
   - Fix samtools stats crash when using a target region. (#875, reported by
     John Marshall)
   - Samtools sort now keeps to a single thread when the -@ option is absent.
     Previously it would spawn a writer thread, which could cause the CPU
     usage to go slightly over 100%. (#833, reported by Matthias Bernt)
   - Fixed samtools phase '-A' option which was incorrectly defined to take
     a parameter. (#850; #846 reported by Dianne Velasco)
   - Fixed compilation problems when using C_INCLUDE_PATH. (#870; #817 reported
     by Robert Boissy)
   - Fixed --version when built from a Git repository. (#844, thanks to John
     Marshall)
   - Use noenhanced mode for title in plot-bamstats.  Prevents unwanted
     interpretation of characters like underscore in gnuplot version 5. (#829,
     thanks to M. Zapukhlyak)
   - blast2sam.pl now reports perfect match hits (no indels or mismatches).
     (#873, thanks to Nils Homer)
   - Fixed bug in fasta and fastq subcommands where stdout would not be flushed
     correctly if the -0 option was used.
   - Fixed invalid memory access in mpileup and depth on alignment records
     where the sequence is absent.

-------------------------------------------------------------------
Thu Jul 12 09:02:17 UTC 2018 - flyos@mailoo.org

- Cleaned spec file using spec-cleaner
- Update to 1.8
 * samtools calmd now has a quiet mode.  This can be enabled by passing `-Q` to
   calmd. (Thanks to Colin Davenport)
 * In samtools depth `-d 0` will effectively remove the depth limit. (#764)
 * Improvements made to samtools collate's interface and documentation.  It is
   now possible to specify an output file name using `-o`, instead of deriving  
   it from the prefix used for temporary files.  The prefix itself is now
   optional if `-o` or `-O` (to stdout) is used. (#780)
 * Bug-fixes:
   - Make samtools addreplacerg choose output format by file extension. (#767; 
     reported by Argy Megalios)
   - Merge tests now work on ungzipped data, allowing tests to be run against
     different deflate libraries.
   - samtools markdup error messages about missing tags have been updated with
     the suggestion that samtools fixmate is run beforehand. (#765; reported by
     Yudong Cai)
   - Enables the `--reference` option for samtools fastq.  Now works like other
     programs when a reference sequence is needed for CRAM files. (#791,
     reported by Milana Kaljevic)
 * HTSlib, and so samtools, now support BAMs which include CIGARs with more
   than 65535 operations as per HTS-Specs 18th November (dab57f4 and 2f915a8).
 * samtools quickcheck will now write a warning to stderr if it finds
   any problems.  These messages can be suppressed with a new `-q` option.
 * samtools markdup can now mark supplementary alignments of reads where
   the primary alignment is found to be a duplicate.  Supplementary marking
   can be turned on by passing the `-S` option to markdup.  When this
   option is enabled, all the alignment data will be written to a temporary
   file so that supplementary alignments that occur before a duplicated
   primary can be correctly marked in the final output.  The location
   of this temporary file can be influenced using the new `-T` option.
 * samtools view now supports HTSlib's new multi-region iterator.
   This can be enabled by passing the `-M` option to view.  When using
   this option:
   - The BED filter (`-L` option) will use the index to skip through the file
   - Reads from overlapping regions will only be output once
 * samtools bedcov will now ignore BED comment and header lines (#571; thanks
   to Daniel Baker).
 * samtools collate now updates the @HD SO: and GO: tags, and sort will
   remove a GO: tag if present.  (#757; reported by Imran Haque).
 * Bug-fixes:
   - maq2sam now checks for input files that end early.  (#751; patch supplied
     by Alexandre Rebert of the Mayhem team, via Andreas Tille from Debian.)
   - Fixed incorrect check when looking up header tags that could lead
     to a crash in samtools stats. (#208; thanks to Dave Larson.)
   - Fixed bug in samtools fastq `-O` option where it would fail if
     the OQ tag in the input file had an unexpected type. (#758;
     reported by Taejeong Bae)
   - The MD5 calculations in samtools dict and md5fa did not handle
     non-alphabetic characters in the same way as the CRAM MD5 function.
     They have now been updated to match. (#704; reported by Chris Norman).
   - Fix possible infinite loop in samtools targetcut.
   - Building bam_tview_curses should no longer fail if a curses header file
     cannot be found.
 * Added new markdup sub-command and '-m' option for fixmate.  Used together,
   they allow duplicates to be marked and optionally removed.  This
   fixes a number of problems with the old 'rmdup' sub-command, for
   example samtools issue #497.  'rmdup' is kept for backwards compatibility
   but 'markdup' should be used in preference.
 * Sort is now much better at keeping within the requested memory limit.  It
   should also be slightly faster and need fewer temporary files when the file
   to be sorted does not fit in memory.  (#593; thanks to Nathan Weeks.)
 * Sort no longer rewrites the header when merging from files.  It can also
   now merge from memory, so fewer temporary files need to be written and
   it is better at sorting in parallel when everything fits in memory.
 * Both sort and merge now resolve ties when merging based on the position
   in the input file(s).  This makes them fully stable for all ordering
   options.  (Previously position sort was stable, but name and by tag
   sorts were not).
 * New --output-qname option for mpileup.
 * Support for building on Windows using msys2/mingw64 or cygwin has
   been improved.

-------------------------------------------------------------------
Mon Jul 10 21:26:49 UTC 2017 - flyos@mailoo.org

- Update to 1.5
- Fixed some runtime dependencies (perl and python)

-------------------------------------------------------------------
Wed May  4 17:08:15 UTC 2016 - flyos@mailoo.org

- Fixed Perl dependency

-------------------------------------------------------------------
Sat Apr 30 16:40:04 UTC 2016 - flyos@mailoo.org

- Update to 1.3.1

-------------------------------------------------------------------
Sat Apr 30 16:25:54 UTC 2016 - flyos@mailoo.org

- Cleaner spec file


-------------------------------------------------------------------
Thu Apr 21 15:12:02 UTC 2016 - flyos@mailoo.org

- Changed "./configure" and "make install" for "%configure" and
  "%make_install".

-------------------------------------------------------------------
Wed Apr 20 18:48:19 UTC 2016 - flyos@mailoo.org

Initial release.- 

