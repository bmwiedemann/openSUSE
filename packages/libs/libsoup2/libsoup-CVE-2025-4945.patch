Backport of https://gitlab.gnome.org/GNOME/libsoup/-/commit/8988379984e33dcc7d3aa58551db13e48755959f

diff -urp libsoup-2.74.3.orig/libsoup/soup-date.c libsoup-2.74.3/libsoup/soup-date.c
--- libsoup-2.74.3.orig/libsoup/soup-date.c	2022-10-11 13:27:22.000000000 -0500
+++ libsoup-2.74.3/libsoup/soup-date.c	2025-06-18 11:56:02.916383979 -0500
@@ -284,7 +284,7 @@ parse_day (SoupDate *date, const char **
 	while (*end == ' ' || *end == '-')
 		end++;
 	*date_string = end;
-	return TRUE;
+	return date->day >= 1 && date->day <= 31;
 }
 
 static inline gboolean
@@ -324,7 +324,7 @@ parse_year (SoupDate *date, const char *
 	while (*end == ' ' || *end == '-')
 		end++;
 	*date_string = end;
-	return TRUE;
+	return date->year > 0 && date->year < 9999;
 }
 
 static inline gboolean
@@ -348,7 +348,7 @@ parse_time (SoupDate *date, const char *
 	while (*p == ' ')
 		p++;
 	*date_string = p;
-	return TRUE;
+	return date->hour >= 0 && date->hour < 24 && date->minute >= 0 && date->minute < 60 && date->second >= 0 && date->second < 60;
 }
 
 static inline gboolean
@@ -361,9 +361,14 @@ parse_timezone (SoupDate *date, const ch
 		gulong val;
 		int sign = (**date_string == '+') ? -1 : 1;
 		val = strtoul (*date_string + 1, (char **)date_string, 10);
-		if (**date_string == ':')
-			val = 60 * val + strtoul (*date_string + 1, (char **)date_string, 10);
-		else
+		if (val > 9999)
+			return FALSE;
+		if (**date_string == ':') {
+			gulong val2 = strtoul (*date_string + 1, (char **)date_string, 10);
+			if (val > 99 || val2 > 99)
+				return FALSE;
+			val = 60 * val + val2;
+		} else
 			val =  60 * (val / 100) + (val % 100);
 		date->offset = sign * val;
 		date->utc = (sign == -1) && !val;
@@ -407,7 +412,8 @@ parse_textual_date (SoupDate *date, cons
 		if (!parse_month (date, &date_string) ||
 		    !parse_day (date, &date_string) ||
 		    !parse_time (date, &date_string) ||
-		    !parse_year (date, &date_string))
+		    !parse_year (date, &date_string) ||
+		    !g_date_valid_dmy (date->day, date->month, date->year))
 			return FALSE;
 
 		/* There shouldn't be a timezone, but check anyway */
@@ -419,7 +425,8 @@ parse_textual_date (SoupDate *date, cons
 		if (!parse_day (date, &date_string) ||
 		    !parse_month (date, &date_string) ||
 		    !parse_year (date, &date_string) ||
-		    !parse_time (date, &date_string))
+		    !parse_time (date, &date_string) ||
+		    !g_date_valid_dmy (date->day, date->month, date->year))
 			return FALSE;
 
 		/* This time there *should* be a timezone, but we
diff -urp libsoup-2.74.3.orig/tests/cookies-test.c libsoup-2.74.3/tests/cookies-test.c
--- libsoup-2.74.3.orig/tests/cookies-test.c	2022-10-11 13:27:22.000000000 -0500
+++ libsoup-2.74.3/tests/cookies-test.c	2025-06-18 11:13:49.363862484 -0500
@@ -389,6 +389,15 @@ send_callback (GObject *source_object,
 }
 
 static void
+do_cookies_parsing_int32_overflow (void)
+{
+	SoupCookie *cookie = soup_cookie_parse ("Age=1;expires=3Mar9    999:9:9+ 999999999-age=main=gne=", NULL);
+	g_assert_nonnull (cookie);
+	g_assert_null (soup_cookie_get_expires (cookie));
+	soup_cookie_free (cookie);
+}
+
+static void
 do_remove_feature_test (void)
 {
 	SoupSession *session;
@@ -434,6 +443,7 @@ main (int argc, char **argv)
 	g_test_add_func ("/cookies/accept-policy-subdomains", do_cookies_subdomain_policy_test);
 	g_test_add_func ("/cookies/parsing", do_cookies_parsing_test);
 	g_test_add_func ("/cookies/parsing/no-path-null-origin", do_cookies_parsing_nopath_nullorigin);
+	g_test_add_func ("/cookies/parsing/int32-overflow", do_cookies_parsing_int32_overflow);
 	g_test_add_func ("/cookies/get-cookies/empty-host", do_get_cookies_empty_host_test);
 	g_test_add_func ("/cookies/remove-feature", do_remove_feature_test);
 	g_test_add_func ("/cookies/secure-cookies", do_cookies_strict_secure_test);
