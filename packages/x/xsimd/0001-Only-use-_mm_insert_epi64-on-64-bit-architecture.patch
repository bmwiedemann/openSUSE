From 3813ed8ae3dff161335a37be70dae13963c0a07e Mon Sep 17 00:00:00 2001
From: serge-sans-paille <serge.guelton@telecom-bretagne.eu>
Date: Thu, 10 Nov 2022 22:43:56 +0100
Subject: [PATCH] Only use _mm_insert_epi64 on 64 bit architecture

Provide a fallback based on _mm_insert_epi32 on 32 bit architecture.

Fix #860
---
 include/xsimd/arch/xsimd_sse4_1.hpp | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/include/xsimd/arch/xsimd_sse4_1.hpp b/include/xsimd/arch/xsimd_sse4_1.hpp
index 654f640..c0e2878 100644
--- a/include/xsimd/arch/xsimd_sse4_1.hpp
+++ b/include/xsimd/arch/xsimd_sse4_1.hpp
@@ -115,11 +115,16 @@ namespace xsimd
             else XSIMD_IF_CONSTEXPR(sizeof(T) == 4)
             {
                 return _mm_insert_epi32(self, val, I);
-#if !defined(_MSC_VER) || _MSC_VER > 1900 && defined(_M_X64)
             }
             else XSIMD_IF_CONSTEXPR(sizeof(T) == 8)
             {
+#if (!defined(_MSC_VER) && __x86_64__) || (_MSC_VER > 1900 && defined(_M_X64))
                 return _mm_insert_epi64(self, val, I);
+#else
+                uint32_t lo, hi;
+                memcpy(&lo, (reinterpret_cast<uint32_t*>(&val)), sizeof(lo));
+                memcpy(&hi, (reinterpret_cast<uint32_t*>(&val)) + 1, sizeof(hi));
+                return _mm_insert_epi32(_mm_insert_epi32(self, lo, 2 * I), hi, 2 * I + 1);
 #endif
             }
             else
-- 
2.38.1

