--- lisp/cus-face.el
+++ lisp/cus-face.el	2009-06-17 11:35:21.427694043 +0000
@@ -236,19 +236,20 @@ If FRAME is nil, use the default face."
     (and spec (vector spec) (aref spec 0))))
 
 ;; This consistently fails to dtrt
-;;(defun custom-set-face-font-size (face size &optional locale tags)
-;;  "Set the font of FACE to SIZE."
-;;  ;; #### should this call have tags in it?
-;;  (let* ((font (apply 'face-font-name face (list locale)))
-;;	 ;; Gag
-;;	 (fontobj (font-create-object font)))
-;;    (set-font-size fontobj size)
-;;    (apply 'font-set-face-font face fontobj locale tags)))
-
-;; From Jan Vroonhof -- see faces.el
 (defun custom-set-face-font-size (face size &optional locale tags)
   "Set the font of FACE to SIZE."
-  (make-face-size face size locale tags))
+  ;; #### should this call have tags in it?
+  (let* ((font (apply 'face-font-name face (list locale)))
+	 ;; Gag
+	 (fontobj (font-create-object font)))
+    (make-face-size face size locale tags)
+    (set-font-size fontobj size)
+    (apply 'font-set-face-font face fontobj locale tags)))
+
+;; From Jan Vroonhof -- see faces.el
+;;(defun custom-set-face-font-size (face size &optional locale tags)
+;;  "Set the font of FACE to SIZE."
+;;  (make-face-size face size locale tags))
 
 (defun custom-face-font-size (face &rest args)
   "Return the size of the font of FACE as a string."
@@ -258,19 +259,20 @@ If FRAME is nil, use the default face."
     (format "%s" (font-size fontobj))))
 
 ;; Jan suggests this may not dtrt
-;;(defun custom-set-face-font-family (face family &optional locale tags)
-;;  "Set the font of FACE to FAMILY."
-;;  ;; #### should this call have tags in it?
-;;  (let* ((font (apply 'face-font-name face (list locale)))
-;;	 ;; Gag
-;;	 (fontobj (font-create-object font)))
-;;    (set-font-family fontobj family)
-;;    (apply 'font-set-face-font face fontobj locale tags)))
-
-;; From Jan Vroonhof -- see faces.el
 (defun custom-set-face-font-family (face family &optional locale tags)
   "Set the font of FACE to FAMILY."
-  (make-face-family face family locale tags))
+  ;; #### should this call have tags in it?
+  (let* ((font (apply 'face-font-name face (list locale)))
+	 ;; Gag
+	 (fontobj (font-create-object font)))
+    (make-face-family face family locale tags)
+    (set-font-family fontobj family)
+    (apply 'font-set-face-font face fontobj locale tags)))
+
+;; From Jan Vroonhof -- see faces.el
+;;(defun custom-set-face-font-family (face family &optional locale tags)
+;;  "Set the font of FACE to FAMILY."
+;;  (make-face-family face family locale tags))
 
 (defun custom-face-font-family (face &rest args)
   "Return the name of the font family of FACE."
