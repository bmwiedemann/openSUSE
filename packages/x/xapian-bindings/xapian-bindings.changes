-------------------------------------------------------------------
Thu Aug 27 10:52:20 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- spec-cleaner run

-------------------------------------------------------------------
Thu Aug 27 06:20:47 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to version 1.4.17:
  * No user-visible change except for bumping the version to indicate
    compatibility with Xapian-core 1.4.17.

- Update to version 1.4.16:
  + General:
    * Remove code to support SVN snapshots since we stopped using SVN more than 5
      years ago.
    * Ignore overloads for logical ops, *, /.  These were already ignored for
      several languages, and aren't actually usefully wrapped for any of the other
      languages.
  + CSharp:
    * Work around mono terminfo parsing bug in more cases.  With this, "make",
      "make check", "make install" and "make uninstall" all work on Ubuntu 18.10.
      Patch from Dipanshu Garg, fixes https://github.com/xapian/xapian/pull/287 and
      #801.
  + Lua:
    * Allow passing a Lua function as a MatchSpy.  This was supposed to be
      supported already, but the typemaps weren't set up.
    * On platforms where sizeof(long) is 4, SWIG was wrapping Xapian::BAD_VALUENO
      as a negative constant in Lua, which was then rejected by a check which
      disallows passing negative values for unsigned C++ types.  We now direct SWIG
      to handle Xapian::valueno as double (which is what numbers in Lua usually
      actually are) which gives us an unsigned constant, and also eliminates the
      negative value check.
    * Correct documentation - get_description() is wrapped as tostring() in Lua,
      not str() as we previously claimed.
    * Add test coverage for passing Lua function for a Stopper.
  + Perl:
    * Resolve the remaining issues and remove the "experimental" marker:
      + Add search_xapian_compat() function which sets up aliases in the
        Search::Xapian namespace to aid writing code which uses either
        Search::Xapian or this module.
      + Allow passing Perl sub for simpler Xapian functor classes.  This fills in a
        missing feature compared to Search::Xapian.  See #523.
      + Remove useless PerlStopper class which was an incomplete copy of the
        apparently non-functional Search::Xapian::PerlStopper.  We now support
        passing a Perl sub for a Stopper object.
      + Adjust some method names to match Search::Xapian.  Iterators now support
        inc() (and dec() where the C++ class supports operator--) like
        Search::Xapian, rather than increment() and prev().  Reported by Eric Wong
        in #523.
      + Drop undocumented and unexpected extra equals() method.
      + Provide compatibility with ENQ_ASCENDING, etc constants.  SWIG wraps these
        as $Xapian::Enquire::ASCENDING, which better matches the C++ API, but
        Search::Xapian wraps this as Search::Xapian::ENQ_ASCENDING, etc so provide
        those too for compatibility.  Reported by Eric Wong in #523.
      + Drop stringification and int conversion overloads.  These seem more
        confusing than helpful, and overloading stringification works badly
        with SWIG-generated bindings.
      + Document remaining known differences from Search::Xapian.
    * Update recently tested versions in README.
    * Improve documentation.
    * Fix t/02pod.t to look for files in right directory.
  + Ruby:
    * Don't print iterator sizes to stdout.  This was some debugging accidentally
      left in as part of a change in 1.4.12.  Patch from Dan Callaghan.

-------------------------------------------------------------------
Wed Apr 29 16:58:36 UTC 2020 - Dominique Leuenberger <dimstar@opensuse.org>

- Update to version 1.4.15:
  + Perl: Improve comment about App::Prove.
  + Ruby: Support Ruby 2.7 (boo#1169447).

-------------------------------------------------------------------
Wed Jan 15 10:00:03 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to 1.4.14:
  * Python3:
    + Remove broken replicationtest.py.  It's never worked reliably, and because
      of that was disabled shortly after being added over a decade ago.
      Unsurprisingly it's bit-rotted at least a bit since.  Nobody seems interested
      in fixing it, so it's time to just get rid of it.
- Remove the python2 bindings
- Rebase patch:
  * do-not-use-sphinx.diff

- Update to 1.4.13:
  * General:
    + Omit SWIG exception handling for destructors.  Since C++11, destructors can't
      throw by default and we don't override that default, so there's no point
      adding exception handling code for them.
    + Ensure doccomments.i is distributed.  If you unpacked a distribution tarball,
      configured it and then ran "make dist" python/doccomments.i and
      python3/doccomments.i would be missing unless you configured the tree with
      --enable-maintainer-mode.
  * PHP:
    + Check for php-config5.6 and php-config5.5 in configure as these versioned
      names are used in some packages (such as those from the ondrej/php PPA).
  * PHP7:
    + Work around build failure on Illuminos.  Fixes
      https://trac.xapian.org/ticket/793, reported by Amitai Schleier.
  * Ruby:
    + smoketest.rb: Use #push not #append on Array to restore compatibility with
      Ruby < 2.5 (broken by changes in 1.4.12).
    + Expand tabs in Ruby code since using spaces for indentation seems to be
      preferred Ruby style.
    + Remove trailing `;` from Ruby code.

- Update to 1.4.12:
  * Documentation:
    + Update bindings HACKING document.  Reported as out of date by Niwesh Gupta.
  * CSharp:
    + Work around mono terminfo parsing bug - older cli-sn fails with e.g.
      TERM=xterm-256color due to: https://github.com/mono/mono/issues/6752
      Encountered on Kubuntu 18.10 and debugged by Tejasvi Tomar.  Seems to be
      fixed in the mono version in Debian buster.
  * Perl:
    + Suppress warnings from older Perl headers due to use of constructs which look
      like C++11 user-defined literals.  They're fixed in newer versions so they're
      just noise in our build.  We were working around these in the CI build, so
      drop that workaround as we want to make the build warning-clean for users
      too.  Reported by daniel93 on #xapian.
  * Python3:
    + Fix build for changes in Sphinx 2.0 (which drops support for sphinx.main()).
      Fixes #778, reported by karolyi.  Also reported by Gaurav Arora.
    + We now throw UnicodeEncodeError for bad Unicode string input.  Previously
      cases such as a lone surrogate would be handled by quietly skipping the bad
      codepoints when converting to UTF-8 to pass to Xapian.
    + We no longer use the deprecated old-style Py_UNICODE API, which currently
      gives deprecation warnings and is slated to be removed in Python 4.0.
  * Ruby:
    + Add support for block iteration.  All the iterator methods in the Ruby API
      now accept an optional block.  If no block is given an array is returned so
      existing code will still work.  Partly based on a patch in
      https://github.com/xapian/xapian/pull/232 from Cong Ding.
    + Add missing wrappers for all the C++ methods returning iterators which
      weren't wrapped for Ruby.  Fixes #777, reported by do.
    + Suppress warnings from Ruby 2.3 headers due to use of register and
      constructs which look like C++11 user-defined literals.  They're fixed in
      newer versions so they're just noise in our build.  We were working around
      these in the CI build, so drop that workaround as we want to make the build
      warning-clean for users too.  Reported by daniel93 on #xapian.
    + smoketest.rb: Don't leave temporary databases behind in /tmp.

- Update to 1.4.11:
  * CSharp:
    + Make MatchAll and MatchNothing readonly.
  * Java:
    + Simplify load-time setup of Query.OP_OR, etc which are provided for
      compatibility with the original hand-written JNI bindings.
  * PHP:
    + We now load the module for "make check" using -d extension=xapian which
      avoids needing to turn off safe_mode and turn on enable_dl, and matches how
      the module is usually loaded in production use.
  * PHP7:
    + Fix access to already released memory during PHP module shutdown, which often
      didn't cause visible problems, but could result in segmentation faults, bus
      errors, etc.
    + Fix generated code to compile when using a ZTS-enabled build of PHP.
    + We now load the module for "make check" using -d extension=xapian which
      avoids needing to turn off safe_mode and turn on enable_dl, and matches how
      the module is usually loaded in production use.

- Update to 1.4.10:
  * Documentation:
    + Use https for URLs where supported.
  * General:
    + Wrap new DatabaseClosedError and DatabaseNotFoundError exceptions.
      See #772 and #773.  Patches from Vaibhav Kansagara.
    + Update expected query descriptions in tests for the xapian-core
      change to produce flatter Query trees.
    + Workaround Perl 5.28 -i quirk when postprocessing SWIG-generated code.
      The commands in question are only run when maintainer-mode is enabled.
  * CSharp:
    + C++ constant Xapian::BAD_VALUENO is now wrapped without using a getter.
      This shouldn't affect existing user code.
  * Java:
    + C++ constant Xapian::BAD_VALUENO is now wrapped as Java constant
      Xapian.BAD_VALUENO.  The previous Java wrapping as function
      Xapian.getBAD_VALUENO() is still supported for compatibility with
      existing code.
    + Remove redundant std::string initialisation.
  * Lua:
    + C++ constant Xapian::BAD_VALUENO is now wrapped as a constant rather than
      an immutable attribute.  This shouldn't affect existing user code.
  * Perl:
    + C++ constant Xapian::BAD_VALUENO is now wrapped as Perl constant
      Xapian::BAD_VALUENO.  The previous Perl wrapping as variable
      $Xapian::BAD_VALUENO is still supported for compatibility with existing
      code.
    + Note in the POD documentation that the Error base classes which are abstract
      in C++ don't have a new method in Perl.
  * PHP:
    + C++ constant Xapian::BAD_VALUENO is now wrapped as PHP constant
      Xapian::BAD_VALUENO.  The previous PHP wrapping as function
      Xapian::BAD_VALUENO_get() is still supported for compatibility with existing
      code.
    + Remove code to work around a SWIG bug which was fixed in 2006.
  * PHP7:
    + C++ constant Xapian::BAD_VALUENO is now wrapped as PHP constant
      Xapian::BAD_VALUENO.  The previous PHP wrapping as function
      Xapian::BAD_VALUENO_get() is still supported for compatibility with existing
      code.
    + configure: Check for php-config7.3 and php-config7.2 as well as
      php-config7.1, php-config7.0 and php-config.
    + Correct references to PHP5 in PHP7 script comments.
    + Remove some C code which is no longer needed with PHP7.
  * Ruby:
    + C++ constant Xapian::BAD_VALUENO is now wrapped as Ruby constant
      Xapian::BAD_VALUENO.  The previous Ruby wrapping as function
      Xapian::BAD_VALUENO() is still supported for compatibility with existing
      code.
    + We now recommend using String#encode instead of the Iconv class, since the
      latter is no longer included with Ruby.
  * Tcl:
    + C++ constant Xapian::BAD_VALUENO is now wrapped as a constant rather than
      variable which can't be written to.  This shouldn't affect existing user
      code.

-------------------------------------------------------------------
Wed Jun 12 09:47:29 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Always disable the sphinx module as it causes trouble whenever
  we update Sphinx (like now to 2.0)

-------------------------------------------------------------------
Tue Nov 20 09:11:16 UTC 2018 - Antonio Larrosa <alarrosa@suse.com>

- Update to 1.4.9
  * PHP7:
    + Fix to build with upcoming PHP 7.3 release, which changes array_init()
      to not return a value instead of always returning the constant SUCCESS.
      We were checking this return value but no longer do.

- Update to 1.4.8
  * Perl:
    + Wrap new STEM_SOME_FULL_POS constant.
    + Add STEM_ALL_Z to qpstem export tag and POD docs.
    + Fix Perl bindings documentation typos.
  * Python:
    + Fix RST formatting warning during build.
  * Python3:
    + Fix RST formatting warning during build.

-------------------------------------------------------------------
Thu Jul 26 14:03:27 UTC 2018 - alarrosa@suse.com

- Update to 1.4.7
  * see http://xapian.org/docs/xapian-bindings-1.4.7/NEWS

-------------------------------------------------------------------
Tue Jul  3 09:25:26 UTC 2018 - alarrosa@suse.com

- Update to 1.4.6
  * see http://xapian.org/docs/xapian-bindings-1.4.6/NEWS

-------------------------------------------------------------------
Thu Dec 14 10:47:34 UTC 2017 - alarrosa@suse.com

- Update to 1.4.5
  * see http://xapian.org/docs/xapian-bindings-1.4.5/NEWS

-------------------------------------------------------------------
Mon Sep 11 15:55:18 UTC 2017 - alarrosa@suse.com

- Create a new php7-xapian package in Tumbleweed instead of using php5
  which will be removed soon (boo#1058105)
- Add fix-php7-directory.patch to install xapian.php to the right directory.
- Disable creation of php bindings by default due to
  https://trac.xapian.org/wiki/FAQ/PHP%20Bindings%20Package
- To build the php bindings locally, use :
  * osc build --with=php
  or download the src.rpm file and use:
  * rpmbuild --rebuild xapian-bindings-1.4.4-0.src.rpm -D "with_php 1"

-------------------------------------------------------------------
Fri Jun 30 15:56:06 UTC 2017 - alarrosa@suse.com

- Update to 1.4.4
  * see http://xapian.org/docs/xapian-bindings-1.4.4/NEWS
- Rebase do-not-use-sphinx.diff

-------------------------------------------------------------------
Fri Jun 30 15:00:17 UTC 2017 - jengelh@inai.de

- Trim filler words from descriptions.
- %packages need not be %if guarded (only their %files),
  so trim that too.

-------------------------------------------------------------------
Mon Jun 26 10:00:17 UTC 2017 - tbechtold@suse.com

- add Provides for python2-xapian

-------------------------------------------------------------------
Wed Feb  1 09:48:05 UTC 2017 - alarrosa@suse.com

- Update to 1.4.3 
  * see http://xapian.org/docs/xapian-bindings-1.4.3/NEWS
- xapian-bindings 1.4.3 requires Python >= 2.6
- Update to 1.4.2
  * see http://xapian.org/docs/xapian-bindings-1.4.2/NEWS
- Added BuildRequire python3-Sphinx
- Drop automake.patch, which is not needed anymore
- Added do-not-use-sphinx.diff to remove the need of python3-Sphinx 
  on distributions that don't have it

-------------------------------------------------------------------
Tue Nov 22 13:15:37 UTC 2016 - bosim@opensuse.org

- Python3 support
- Added automake patch for building with python3 (github PR 126)

-------------------------------------------------------------------
Fri Nov 11 10:10:28 UTC 2016 - alarrosa@suse.com

- Update to 1.4.1
  * see http://xapian.org/docs/xapian-bindings-1.4.1/NEWS
- Specify in BuildRequires that php >= 5.5 is needed .

-------------------------------------------------------------------
Sat Jul  9 06:29:24 UTC 2016 - tittiatcoke@gmail.com

- Update to 1.4.0
  * see http://xapian.org/docs/xapian-bindings-1.4.0/NEWS
  
- Drop patch replaced-swig-zend-error-noreturn-flag.patch

-------------------------------------------------------------------
Wed Apr 13 07:09:20 UTC 2016 - tittiatcoke@gmail.com

- Update to 1.2.23
  * see http://xapian.org/docs/xapian-bindings-1.2.23/NEWS

-------------------------------------------------------------------
Tue Jul 21 12:25:15 UTC 2015 - jengelh@inai.de

- Remove unnecessary buildrequire on update-alternatives:
  there are no scriptlets that make use of it.
  Drop %clean, it too is unnecessary for OBS.

-------------------------------------------------------------------
Thu May 21 09:19:17 UTC 2015 - tittiatcoke@gmail.com

- Update to 1.2.21
  * see http://xapian.org/docs/xapian-bindings-1.2.21/NEWS

-------------------------------------------------------------------
Thu Apr  2 10:41:05 UTC 2015 - dmueller@suse.com

- make building of csharp bindings optional for architectures
  that do not provide mono

-------------------------------------------------------------------
Thu Mar 12 07:33:29 UTC 2015 - mpluskal@suse.com

- Update to 1.2.20
  * See http://xapian.org/docs/xapian-bindings-1.2.20/NEWS 

-------------------------------------------------------------------
Thu Feb 19 16:44:48 UTC 2015 - mpluskal@suse.com

- Tiny spec file cleanups
- Enable tests during build
- Add gpg signature

-------------------------------------------------------------------
Tue Oct 21 12:24:10 UTC 2014 - tittiatcoke@gmail.com

- Update to version 1.2.19
  ? http://xapian.org/docs/xapian-bindings-1.2.19/NEWS

-------------------------------------------------------------------
Wed Jan 29 22:21:26 UTC 2014 - hrvoje.senjan@gmail.com

- Update to version 1.2.17
  * http://svn.xapian.org/*checkout*/tags/1.2.17/xapian-bindings/NEWS

-------------------------------------------------------------------
Wed Dec 18 13:29:26 UTC 2013 - tittiatcoke@gmail.com

- Update to version 1.2.16
  * http://svn.xapian.org/*checkout*/tags/1.2.16/xapian-bindings/NEWS
-------------------------------------------------------------------
Thu May 30 17:39:26 UTC 2013 - tittiatcoke@gmail.com

- Update to version 1.2.15
  * http://svn.xapian.org/*checkout*/tags/1.2.15/xapian-bindings/NEWS

-------------------------------------------------------------------
Tue Dec 25 06:55:45 UTC 2012 - mlin@suse.com

- Added patch (replaced-swig-zend-error-noreturn-flag.patch)  that 
  is replacing the -DSWIG_ZEND_ERROR_NORETURN=zend_error_noreturn 
  flag to workaround a PHP bug on some platforms/architectures by 
  compiling with -DSWIG_ZEND_ERROR_NORETURN=zend_error, for example 
  no-return-in-nonvoid-function issue

-------------------------------------------------------------------
Fri Dec 21 10:24:58 UTC 2012 - mlin@suse.com

- Update to version 1.2.12
  * No changes since 1.2.11 except to bump the version - this release 
    was made to fix an incorrect library version information update 
    in xapian-core 1.2.11.
 Perl:
  * In generated C++ code, pass 0 instead of NULL for non-pointer 
    parameter to av_fetch() (spotted due to GCC 4.7 warning).
 PHP:
  * Fix "make check" to work for PHP when building from a release 
    tarball with srcdir != builddir.
  * Work around "undefined symbol: zend_error_noreturn" error.
 CSharp:
  * Use -keyfile and -keycontainer options to the C# compiler, 
    because it warns us to do this instead of setting them in 
    AssemblyInfo.cs.
  * Use diff's -c option when comparing the files SWIG generated 
    against those we were expecting to get as the output should be 
    easier to understand.
  * Sort both the lists of expected and of found SWIG-generated 
    sources with Perl, to avoid problems with locale-specific sort 
    orders.
 Java-SWIG:
  * Remove now superfluous old check that SWIG generated at least the 
    sources we want - we now check it generated *exactly* the sources 
    we want.
  * Use diff's -c option when comparing the files SWIG generated against 
    those we were expecting to get as the output should be easier to 
    understand.
  * Sort both the lists of expected and of found SWIG-generated sources 
    with Perl, to avoid problems with locale-specific sort orders.
  * See http://svn.xapian.org/*checkout*/tags/1.2.12/xapian-bindings/NEWS

-------------------------------------------------------------------
Thu Dec 29 11:33:52 CET 2011 - dmueller@suse.de

- update to 1.2.8:
  * Wrap user-subclassable functor objects by allowing the user to pass a
    Lua function where the functor object would be passed in the C++ API.
  * Fix "PHP Notice:  Undefined variable: r in xapian.php".  (Fixes bug#576)
  * The PHP bindings will now work again with a version of PHP built with ZTS
    enabled (which is the default on Microsoft Windows).  This was broken by
    the changes to support subclassing in PHP in the version of SWIG used since
    1.2.6.
  * Add a module docstring.  (Fixes bug #573)
  * The python testsuite now checks for object leaks during each testcase.
  * In test_matchingterms_iter, run the code we're testing for leaks twice, and
    only check for leaks the second time to avoid falsely reporting a leak when
    some cached value gets initialised under Python 2.5.
  * Wrap optional prefix parameter to Database::allterms.

-------------------------------------------------------------------
Wed Sep 21 16:47:44 UTC 2011 - coolo@suse.com

- remove %debug_package macro

-------------------------------------------------------------------
Tue Sep 13 09:29:40 UTC 2011 - prusnak@opensuse.org

- updated to 1.2.7
  
  General:
  * Add missing wrappers for Database::has_positions() and
    TermIterator::positionlist_count(), and correct the return type of
    Database::get_doclength() from double to Xapian::termcount.

  CSharp:
  * Fix iterator ++ and -- so that the reference to the object 
    isn't released prematurely, which was causing an occasional 
    crash if the garbage collection happened at just the wrong moment,
  * Add test coverage for QueryParser.ParseQuery() with flags argument.
  * Wrap Query::MatchAll and Query::MatchNothing. (ticket#158)

  Java:
  * SmokeTest.java: Fix == comparisons with strings to use equals().
  * Add test that string passing is zero byte safe.
  * Fix MyExpandDecider.accept() to really check the passed parameter.

  Java-SWIG:
  * Put the SWIG-generated Java bindings in package org.xapian.
  * Wrap Query::MatchAll and Query::MatchNothing. (ticket#158)
  * SmokeTest.java: Fix == comparisons with literal strings to 
    use equals()
  * Add test that string passing is zero byte safe.
  * Fix MyExpandDecider.accept() to really check the passed parameter.
  * Fix the compile JNI code to have a .jnilib extension on Mac OS X.
  * Create an HTML documentation page based on java/README.
  * Copy java examples from the hand-coded JNI ones.
  * docs/examples/SimpleIndex.java: Update to use commit() rather 
    than flush().
  * Wrap Query::MatchAll and Query::MatchNothing. (ticket#158)
  * Check that exactly the sources we expect are generated, and add 
    some sources which were missing from the list.

  Perl:
  * Wrap MatchAll and MatchNothing for Perl (as 
    Search::Xapian::Query::MatchAll and 
    Search::Xapian::Query::MatchNothing).  (ticket#158)
  * perl/t/termgenerator.t: Test TermIterator::index_text() with 
    two arguments.
  * perl/t/symbol-test.t: Fix to work when built against an installed
    xapian-core.  (ticket#558)

  PHP:
  * Wrap MatchAll and MatchNothing for PHP as XapianQuery::MatchAll() and
    XapianQuery::MatchNothing(). (ticket#158)

  Ruby:
  * Wrap MatchAll and MatchNothing for Ruby.  (ticket#158)

-------------------------------------------------------------------
Thu Jan 20 14:16:20 UTC 2011 - alex@rosedu.org

- updated to 1.2.5

-------------------------------------------------------------------
Thu Jan 20 14:16:20 UTC 2011 - prusnak@opensuse.org

- updated to 1.2.4

-------------------------------------------------------------------
Tue Nov 20 17:14:48 CET 2007 - mrueckert@suse.de

- updated java build requires

-------------------------------------------------------------------
Tue Nov 20 13:59:09 CET 2007 - mrueckert@suse.de

- fixed filelist

-------------------------------------------------------------------
Mon Nov 19 22:16:52 CET 2007 - mrueckert@suse.de

- update to version 1.0.4

-------------------------------------------------------------------
Sun Jun 24 11:49:46 CEST 2007 - mrueckert@suse.de

- update to version 1.0.1

-------------------------------------------------------------------
Sat Nov 11 05:45:59 CET 2006 - mrueckert@suse.de

- initial package of version 0.9.9

