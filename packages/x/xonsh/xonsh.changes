-------------------------------------------------------------------
Sat Aug 10 06:07:58 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.9.10:
 - Added:
  - $PROMPT_REFRESH_INTERVAL: Automatically invalidate the PROMPT every so many seconds.
  - Allow disabling individual items in gitstatus prompt
 - Fixed:
  - Fix ``cat`` can't read pseudo files with zero size such as /proc/\* or /sys/\* (#3182, #3199)
  - command-not-found: now works on non-Debian bansed distributions
  - Implemented ``'target'`` psuedo-color in ``$LS_COLORS`` for link coloring based
    off of the link target. This was causing issues on some systems where this is
    the default.

-------------------------------------------------------------------
Thu Jul 25 19:00:56 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.9.9:
 - Added:
  - $COMPLETION_IN_THREAD: When this is True, background theads is used for completion.
  - Open man page when requesting help for subprocess commands, e.g. using ``sh?``
  - Add several cmds/tools for predict list
 - Changed:
  - Changed ``XonshSession.link_builtins`` to set a ``DynamicAccessProxy`` for each ``builtin`` link
  - ``events`` is now unlinked from ``builtins``
 - Removed:
  - Removed ``DeprecationWarningProxy``; no longer needed
  - Removed ``load_proxies`` and ``unload_proxies``; moved functionality to ``XonshSession.link_builtins``, ``XonshSession.unlink_builtins``, respectively.
  - Removed deprecated ``builtin.__xonsh_*__`` alises, please use ``builtins.__xonsh__.*`` instead.
 - Fixed:
  - Added proxied ``__dir__`` method to ``DynamicAccessProxy`` to restore
    tab-completion for objects that use the proxy (especially ``events``)
  - Avoid displaying finished tasks in title.
  - ``inspect.getsource`` now works correctly and the ``__xonsh__.execer`` resets
    ``<filename>`` correctly.  This was causing several very strange buggy
    behaviors.
  - Hitting ``Enter`` while ``$VI_MODE=True`` now executes the current code block
    irrespective of cursor position

-------------------------------------------------------------------
Mon Jul  8 20:14:00 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.9.8:
 - Fixed:
  - Fixed a bug in sourcing Bash functions, where ``delare -F`` contained
    newlines, meaning that the ``read`` command that followed it would only
    pick up the first function declaration. ``echo`` is used to normalize
    whitespace.

-------------------------------------------------------------------
Sun Jun 30 13:32:26 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.9.7:
 - Added:
  - add xontrib (xontrib-readable-traceback)
  - Registered kitty xontrib.
  - The zipapp extra was added to install the importlib.resources backport on <3.7
 - Changed:
  - turn off warning on completer
  - xontrib metadata loading is now zipapp safe when possible
 - Fixed:
  - Updated py-bash-completion that is vended with xonsh to v0.2.6 which
    includes a fix completion which uses a subshell environment and a
    fix for string index error in stripped prefix.
  - Removed obsolte "Alt+." keybinding in xontrib-bashisms that was causing built-in binding to malfunction.
  - Fixed that occurs when type a command before rendering.
- update to version 0.9.6:
 - Fixed:
  - Fixed exception in help/version threadable predictor
  - Fixed gitstatus prompt so that it also now reports deleted files
  - Fixed issue where the prompt-toolkit2 shell could not display and
    would end up in an infinite error loop if ``$MULTILINE_PROMPT``
    was a suitably "false" value, such as ``None`` or an empty string.
  - Fixed issue where setting ``$XONSH_STDERR_PREFIX`` and ``$XONSH_STDERR_POSTFIX``
    and running a command in the ``xonshrc`` file would throw an error.

-------------------------------------------------------------------
Thu Jun  6 19:30:09 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- remove docroot from a documentation file, workaround for rpmlint error file-contains-buildroot

-------------------------------------------------------------------
Sun Jun  2 13:45:11 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.9.5:
 - Fixed:
  - Style 'bw'. Background colors was added in the style description.
  - Fix causing error in ``get_predictor_threadable`` on windows when try to run not exist command
  - ``pip`` completer no longer fires when ``pip`` happens to appear within a word
    like ``bagpipes``
  - Fixed issue with ``history gc`` command not running properly.
- update to version 0.9.4:
 - Added:
  - Add processing ``%d`` for avoid overwriting in ``run-tests.xsh``
 - Changed:
  - Xonsh now does not attempt to expand raw strings, so now::
      $ echo "$HOME"
      /home/user
      $ echo r"$HOME"
      $HOME
  - sudoedit now runs unthreaded
 - Fixed:
  - threadable predictor for 'env' command based on predictor from the executed
    command. Fixes #2759 and #3103.
  - An error in the 'xon.sh' executable that only popped up during testing has
    been fixed.  Specifically: It now directly calls 'python3' without invoking
    'env'.
  - bashisms extension can be used again with prompt_toolkit v1
  - Fix a crash when setting ``$INTENSIFY_COLORS_ON_WIN`` in certain situations.
  - Fix issue with bashsisms xontrib causing syntax errors for some Python statements
  - portable trick to pass args which replace '/usr/bin/env' is removed and
    '/usr/bin/env' is used. Fixes bug when a python3 used is outside the default
    'PATH'.
- update to version 0.9.3:
 - Deprecated:
  - Python v3.4 has been fully, completely, and (hopefully) correctly
    deprecated. Please migrate to an officially supported version of Python.
- update to version 0.9.2:
 - Changed:
  - For aliases, predictor is build with the predictor of original command, in
    place of default predictor.
 - Fixed:
  - Updated setup.py to require Python 3.4 using the ``python_requires`` keyword.
    This rectifies issues with pip installing xonsh. Python 3.4 support will
    be removed on the following release.
- update to version 0.9.1:
 - Changed:
  - We no longer manually check the Python version in ``setup.py``,
    but instead use the setuptools ``python_requires`` feature.
 - Fixed:
  - Updates for integrating with new colors styles in Pygments v2.4.0.
- update to version 0.9.0:
 - Added:
  - Implemented the following "bang command" bashisms: ``!$``, ``$*``, ``!^``,
    and ``!<str>``.  These are in addition to ``!!``, which was already
    implemented.
  - asciinema (terminal recorder) added in not threadable commands.
  - tput added in not threadable commands.
  - New ``color_tools.KNOWN_XONSH_COLORS`` frozenset.
  - New ``pyghooks.PYGMENTS_MODIFIERS`` mapping from color modifier names to
    pygments colors.
  - New ``pyghooks.color_name_to_pygments_code()`` function for converting
    color names into pygments color codes.
 - Changed:
  - Circle now runs ``black`` checks on contents of bundled xontribs
  - The ``black`` checks no longer skip some files buried deeper in the directory
    tree.
  - Errors while formatting the prompt are highlighted for easier debugging.
  - Pygments styles only define the standard set of colors, by default.
    Additional colors are computed as needed.
  - PTYs created for running threadable command have now size set to same size
    than main terminal.
  - Update documentation pointing to the minimal required version of
    Python (3.5).
 - Deprecated:
  - Drop support for Python 3.4.
 - Removed:
  - ``pyghooks.KNOWN_COLORS`` is no longer needed or useful as pygments colors
    are computed automatically.
  - ``style_tools.KNOWN_COLORS`` was never used, redundant with
    ``pyghooks.KNOWN_COLORS`` and has thus been removed.
 - Fixed:
  - Fixed a DeprecationWarning that would show up during an import of MutableSet.
  - Fixed error with aliases composed of functions wrapped in functools.partial.
  - ``black`` formatted all xontribs
  - deleting a non existing environement variable with default value do nothing
    instead of raising a exception trying to deleting it in existing values dict.
  - Fixed crash while converting ANSI color codes with leading zeroes
  - Fixed crash while parsing invalid ANSI color code
  - fix causing infinite loop when doing ``cat`` empty file
  - Fixed issue which occurs when user doesn't have access to parent directory and
    xonsh scan all parents directory to find if we are in a Hg repository.
  - Fixed issue with pygments-cache not properly generating a cache the first
    time when using prompt-toolkit when using ``ptk2``.
    This was due to a lingering lazy import of ``pkg_resources``
    that has been removed.
  - Minor update for Python v3.8.
  - Fixed a "'NoneType' object is not iterable" bug when looking up ``stty``
    in command cache.
  - The release tarball now includes all test files.
  - Arguments passed to python in 'scripts/xonsh' and in 'scripts/xonsh-cat' are
    now passed by a portable hack in sh, not anymore by /usr/bin/env.

-------------------------------------------------------------------
Sat Mar 16 14:21:39 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.8.11
 - Added:
  - New ``xonsh.color_tools.short_to_ints()`` function for directly
    converting a short (0 - 256) color into a 3-tuple of ints
    represeting its RGB value.
  - New ``xonsh.ansi_colors.ansi_reverse_style()`` function for
    converting a mapping of color names to ANSI escape codes into
    a mapping from escape codes into color names. This is not a
    round-trippable operation.
  - New ``xonsh.ansi_colors.ansi_color_escape_code_to_name()`` function
    for converting an ANSI color escape code into the closest xonsh
    color name for a given style.
  - New ``xonsh.events.EventManager.exists()`` method enables the checking
    of whether events actually exist with out making the event if it
    doesn't exist.
  - New command-specific event categories called ``on_pre_spec_run_<cmd-name>``
    and ``on_post_spec_run_<cmd-name>`` will be fired before and after
    ``SubpocSpec.run()`` is called.  This allows for command specific
    events to be executed.  For example, ``on_pre_spec_run_ls`` would
    be run prior to an invocation of ``ls``.
  - New ``xonsh.environ.LsColors`` class for managing the ``$LS_COLORS``
    environment variable. This ensures that the ``ls`` command respects the
    ``$XONSH_COLOR_STYLE`` setting. An instance of this class is added to the
    environment when either the ``$LS_COLORS`` class is first accessed or
    the ``ls`` command is executed.
  - The ``on_pre_spec_run_ls`` event is initialized with a default handler
    that ensures that ``$LS_COLORS`` is set in the actual environment prior
    to running an ``ls`` command.
  - New ``xonsh.tools.detype()`` function that simply calls an objects own
    ``detype()`` method in order to detype it.
  - New ``xonsh.tools.always_none()`` function that simply returns None.
  - New ``Env.set_ensurer()`` method for setting an ensurer on an environment.
 - Changed:
  - The black and white style ``bw`` now uses actual black and white
    ANSI colore codes for its colors, rather than just empty color
    sequences.
  - An environment variable ``detype`` operation no longer needs to be
    function, but may also be ``None``. If ``None``, this variable is
    considered not detypeable, and will not be exported to subprocess
    environments via the ``Env.detype()`` function.
  - An environment variable ``detype`` function no longer needs to return
    a string, but may also return ``None``. If ``None`` is returned, this
    variable is  considered not detypeable, and will not be exported to
    subprocess environments via the ``Env.detype()`` function.
  - The ``Env.detype()`` method has been updated to respect the new
    ``None`` types when detyping.
  - The ``xonsh.tools.expandvars()`` function has been updated to respect
    the new ``None`` types when detyping.
  - The ``xonsh.xonfig.make_xonfig_wizard()`` function has been updated to respect
    the new ``None`` types when detyping.
  - Event handlers may now be added and discarded during event firing for
    normal events.  Such modifications will not be applied to until the
    current firing operation is concluded. Thus you won't see newly added
    events fired.
  - xonsh now uses its own vended version of ply. Any installed versions will no longer be used. This reflects that ply is no
    longer distributed as an installable packages.
  - Updated to used ply version 3.11.
  - Reverted change in ``give_to_terminal`` to restore working version of
    ``cmake``, ``rm -i``, etc.  This breaks ``pv | head``.
 - Deprecated:
  - The ``xonsh.color_tools.make_pallete()`` function is no
    longer deprecated, as it is actually needed in other parts of
    xonsh still, such as ``pyghooks``.
 - Removed:
  - All code references to ``$FORMATTER_DICT`` have been removed.
 - Fixed:
  - Resolved issues where macro functions were not able to properly
    accept single-line statements in ``exec`` and ``single`` mode.
  - Minor fixes to ``xonsh.events.debug_level()``.
  - Fixed a regression where some interactive commands were not waited for
    properly for long enough.
  - Fixed environments not showing in the prompt when using Anaconda Python.
  - Fixed regression with anaconda activate/deactivate scripts not wokring on Windows.

-------------------------------------------------------------------
Sun Feb 10 13:18:25 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.8.10
 - Added:
  - New ``xonsh.aliases.partial_eval_alias()`` function and related classes
    for dispatching and evaluating partial alias applications for callable
    aliases.
 - Changed:
  - Subprocesses will no longer close file descriptors automatically.
    This was causing issues with other commands that expected file
    descriptors to remain open, such as ``make``.
  - The ``xonsh.Aliases.eval_alaises()`` method updated to use
    ``xonsh.aliases.partial_eval_alias()``.
 - Fixed:
  - Fixed ``xonsh.completers.base.complete_base()`` to no longer throw an
    error caused by ``complete_python()`` sometimes returning a tuple.
    This fixes cases such as ``ls &&<TAB>``.
  - Fixed regression with line continuations in implicit subprocess mode within
    indented blocks of code, such as if-statements.
  - Resolved issue where setting empty signal masks was causing the
    terminal to close. This was problematic for certain command
    pipelines. For example, ``pv /dev/urandom | head`` now works.
  - Prevents recurssive errors from being raised when there is no child process
    in ``xonsh.jobs.wait_for_active_job()``.
  - Tweaked ``xonsh.completers.commands.complete_skipper()`` to insert a space following
    certain tokens (``&&``, ``||``, ``|``, ``and``, ``or``) to avoid overwriting existing tokens
    with completer output.
  - Fixed bug with evaluating recurssive aliases that did not implement
    the full callable alias signature.
 - Security:
  - <news item>,
 - Authors:
  - Anthony Scopatz
  - Gil Forsyth
  - Troy de Freitas
- update to version 0.8.9
 - Added:
  - New ``env_prefix`` & ``env_postfix`` prompt fields for rendering the pre- and
    post-fix characters of the an active virtual environment.
  - ON_WSL attribute in platform.py
  - Rendering of ``{env_name}`` in ``$PROMPT`` is now suppressed if
    the ``$VIRTUAL_ENV_DISABLE_PROMPT`` environment variable is
    defined and truthy.
  - Rendering of ``{env_name}`` in ``$PROMPT`` is now overridden by
    the value of ``str($VIRTUAL_ENV_PROMPT)`` if that environment variable
    is defined and ``not None``. ``$VIRTUAL_ENV_DISABLE_PROMPT`` takes precedence
    over ``$VIRTUAL_ENV_PROMPT``.
  - A xontrib which adds support for `direnv <https://direnv.net/>`_
 - Changed:
  - ``env_name`` prompt field now looks up the pre- and post-fix characters,
    rather than relying on hard-coded values.
  - Some minor ``history show`` efficiency improvements.
  - If we are on wsl, avoid to use xonsh_preexec_fn when pipe.
 - Fixed:
  - Made ``$PATH`` searching more robust to broken symlinks on Windows.
  - undesirable SIGSTOP by putting in a SIGCONT
  - Fixed issue with recursive aliases not being passes all keyword arguments
    that are part of the callable alias spec. This allows commands like
    ``aliases['hsa'] = "history show all"; hsa | head`` to no longer fail
    with strange errors.
 - Authors:
  - Anthony Scopatz
  - Sagar Tewari
  - Brian Skinn
  - Yohei Tamura
  - anatoly techtonik
  - 74th
  - Chad Kennedy

-------------------------------------------------------------------
Sat Jan  5 21:35:48 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.8.8
 - Added:
  - ``vox new`` has an added ``-p --interpreter`` flag for choosing the python interpreter to use for virtualenv creation
  - The default Python intrepreter vox uses to create virtual environments can be set using the ``$VOX_DEFAULT_INTERPRETER`` environment variable.
 - Changed:
  - ``lib.ChainDB`` now resolves results to the type of the inputs if possible

-------------------------------------------------------------------
Wed Jan  2 09:09:45 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.8.7
 - Added:
  - New xonsh syntax ``pf`` strings -- combining path strings with f-strings.
    Usage:
    .. code-block:: bash
         gil@bad_cat ~ $ repos = 'github.com'
         gil@bad_cat ~ $ pf"~/{repos}"
         PosixPath('/home/gil/github.com')
         gil@bad_cat ~ $ pf"{$HOME}"
         PosixPath('/home/gil')
         gil@bad_cat ~ $ pf"/home/${'US' + 'ER'}"
         PosixPath('/home/gil')
 - Fixed:
  - Set ``ls`` to ``predict_true`` in ``default_threadable_predictors``.  This prevents ``ls`` on OSX
    from being flagged on OSX as unthreadable (incorrectly) because it relies on ``ncurses``.
- update to version 0.8.6
 - Added:
  - Doco about how to update xonsh and how to set and unset environment variables
 - Fixed:
  - Updated behavior of the ``cat`` coreutils function so that it properly
    handles as vareity of cases such as:
      * Exits after concatenating normal files which have a finite size
      * Continues to run for special files which do not have a size,
        such as ``/dev/random``
      * Is interruptable in all cases with Crtl-C.
  - Callable aliases were not properly raising a ``CalledProcessError`` when they
    returned a non-zero exist status when ``$RAISE_SUBPROC_ERROR = True``. This has
    been fixed.
  - Fixed interpretation of color names with PTK2 and Pygments 2.3.1.
- update to version 0.8.5
 - Added:
  - Add alias to `base16 shell <https://github.com/chriskempson/base16-shell>`_
  - Installation / Usage
      1. To install use pip
      .. code-block:: bash
          python3 -m pip install xontrib-base16-shell
      2. Add on ``~/.xonshrc``
      .. code:: python
          :number-lines:
          $BASE16_SHELL = $HOME + "/.config/base16-shell/"
          xontrib load base16_shell
      3. See image
      .. image:: https://raw.githubusercontent.com/ErickTucto/xontrib-base16-shell/master/docs/terminal.png
          :width: 600px
          :alt: terminal.png
  - New ``DumbShell`` class that kicks in whenever ``$TERM == "dumb"``.
    This usually happens in emacs. Currently, this class inherits from
    the ``ReadlineShell`` but adds some light customization to make
    sure that xonsh looks good in the resultant terminal emulator.
  - Aliases from foreign shells (e.g. Bash) that are more than single expressions,
    or contain sub-shell executions, are now evaluated and run in the foreign shell.
    Previously, xonsh would attempt to translate the alias from sh-lang into
    xonsh. These restrictions have been removed.  For example, the following now
    works:
    .. code-block:: sh
        $ source-bash 'alias eee="echo aaa \$(echo b)"'
        $ eee
        aaa b
  - New ``ForeignShellBaseAlias``, ``ForeignShellFunctionAlias``, and
    ``ForeignShellExecAlias`` classes have been added which manage foreign shell
    alias execution.
 - Changed:
  - String aliases will now first be checked to see if they contain sub-expressions
    that require evaluations, such as ``@(expr)``, ``$[cmd]``, etc. If they do,
    then an ``ExecAlias`` will be constructed, rather than a simple list-of-strs
    substitutiuon alias being used. For example:
    .. code-block:: sh
        $ aliases['uuu'] = "echo ccc $(echo ddd)"
        $ aliases['uuu']
        ExecAlias('echo ccc $(echo ddd)\n', filename='<exec-alias:uuu>')
        $ uuu
        ccc ddd
  - The ``parse_aliases()`` function now requires the shell name.
  - ``ForeignShellFunctionAlias`` now inherits from ``ForeignShellBaseAlias``
    rather than ``object``.
 - Fixed:
  - Fixed issues where the prompt-toolkit v2 shell would print an extra newline
    after Python evaluations in interactive mode.
- update to version 0.8.4
 - Added:
  - Added the possibility of arbitrary paths to the help strings in ``vox activate`` and
    ``vox remove``; also updated the documentation accordingly.
  - New ``xonsh.aliases.ExecAlias`` class enables multi-statement aliases.
  - New ``xonsh.ast.isexpression()`` function will return a boolean of whether
    code is a simple xonsh expression or not.
  - Added top-level ``run-tests.xsh`` script for safely running the test suite.
 - Changed:
  - String aliases are no longer split with ``shlex.split()``, but instead use
    ``xonsh.lexer.Lexer.split()``.
  - Update xonsh/prompt/cwd.py _collapsed_pwd to print 2 chars if a directory begins with "."
  - test which determines whether a directory is a virtualenv
    previously it used to check the existence of 'pyvenv.cfg'
    now it checks if 'bin/python' is executable
 - Fixed:
  - Fixed issue with ``and`` & ``or`` being incorrectly tokenized in implicit
    subprocesses. Auto-wrapping of certain subprocesses will now correctly work.
    For example::
        $ echo x-and-y
        x-and-y
  - Fix EOFError when press `control+d`
  - fix no candidates if no permission files in PATH
  - Fixed interpretation of color names with PTK2 and Pygments 2.3.
  - Several ResourceWarnings: unclosed file in tests
  - AttributeError crash when using --timings flag
  - issue #2929
- update to version 0.8.3
 - Added:
  - Dociumentation paragrapgh about gow to run xonsh in Emacs shell
 - Changed:
  - Updated what pip requirements are needed to build the documnetaion
  - ``$XONSH_TRACEBACK_LOGFILE`` now beside strings also accepts ``os.PathLike``
    objects.
  - Updated vended version of ``ply`` to 3.11
  - Deprecation warnings now print from stacklevel 3.
 - Fixed:
  - Annotation assignment statements (e.g. ``x : int = 42``) are now supported.
  - Fixed error output wording for fg and bg commands
  - Flake8 errors
  - xonsh can now properly parse import statements with trailing comma within
    parentheses, e.g.::
      from x import (y, z,)
  - ResourceWarning: unclosed scandir iterator in imphooks.py
  - Removed use of deprecated ``inspect.formatargspec()`` for ``inspect.signature()``
  - ``Makefile`` directive that updates vended version of ``ply``

-------------------------------------------------------------------
Tue Nov 13 19:37:28 UTC 2018 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.8.2
 - Changed:
  - Now there is only a single instance of ``string.Formatter()`` in the
    code base, which is called ``xonsh.tools.FORMATTER``.
 - Fixed:
  - f-strings (``f"{expr}"``) are now fully capable of executing xonsh expressions.
    The one exception to this is that ``![cmd]`` and ``!(cmd)`` don't work because
    the ``!`` character interferes with Python string formatting. If you need to
    run subprocesses inside of f-strings, use ``$[cmd]`` and ``$(cmd)`` instead.
  - Fixed occasional "no attribute 'settitle' error"

-------------------------------------------------------------------
Mon Nov  5 18:08:28 UTC 2018 - Matej Cepl <mcepl@suse.com>

- changelog.sh is an internal script for generating changelog.

-------------------------------------------------------------------
Sun Oct 21 08:48:16 UTC 2018 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.8.1
 - Added:
  - ``SubprocSpec`` has a new ``pipeline_index`` integer attribute that indicates
    the commands position in a pipeline. For example, in
    .. code-block:: sh
      p = ![ls -l | grep x]
    The ``ls`` command would have a pipeline index of 0
    (``p.specs[0].pipeline_index == 0``) and ``grep`` would have a pipeline index
    of 1 (``p.specs[1].pipeline_index == 1``).  This may be usefule in callable
    alaises which recieve the spec as an argument.
 - Changed:
  - Removed ``fish`` from list of supported foreign shells in the wizard.
  - Circle CI config updated to use a pinned version of ``black`` (18.9b0)
  - Pytest plugin now uses ``xonsh.main.setup()`` to setup test environment.
  - Linux platform discovery will no longer use ``platform.linux_distribution()``
    on Python >=3.6.6. due to pending deprecation warning.
  - Updated Linux Guide as Xonsh is now available in Arch Linux official repositories.
 - Fixed:
  - Builtin dynamic proxies and deprecation warning proxies were not deleting
    attributes and items properly.
  - Fixed stdout/sdterr writing infinite recurssion error that would occur in
    long pipelines of callable aliases.
  - Fixed a bug which under very rare conditions could cause the shell
    to die with PermissionError exception while sending SIGSTOP signal
    to a child process.
  - Fixed further raw string deprecation warnings thoughout the code base.
- update to version 0.8.0
 - Added:
  - Windows CI jobs on Azure Pipelines
  - The ``cryptop`` command will no longer have its output captured
    by default.
  - Added new env-var ``PTK_STYLE_OVERRIDES``. The variable is
    a dictionary containing custom prompt_toolkit style definitions.
    For instance::
      $PTK_STYLE_OVERRIDES['completion-menu'] = 'bg:#333333 #EEEEEE'
    will provide for more visually pleasing completion menu style whereas::
      $PTK_STYLE_OVERRIDES['bottom-toolbar'] = 'noreverse'
    will prevent prompt_toolkit from inverting the bottom toolbar colors
    (useful for powerline extension users)
    Note: This only works with prompt_toolkit 2 prompter.
 - Changed:
  - All ``__xonsh_*__`` builtins have been migrated to a ``XonshSession`` instance at
    ``__xonsh__``. E.g. ``__xonsh_env__`` is now ``__xonsh__.env``.
  - Other xonsh-specific builtins (such as ``XonshError``) have been proxied to
    the ``__xonsh__`` session object as well.
 - Deprecated:
  - All ``__xonsh_*__`` builtins are deprected. Instead, the corresponding
    ``__xonsh__.*`` accessor should be used. The existing ``__xonsh_*__`` accessors
    still work, but issue annoying warnings.
 - Fixed:
  - Fixed deprecation warnings from unallowed escape sequences as well as importing abstract base classes directly from ``collections``
  - Fix for string index error in stripped prefix
  - bash_completions to include special characters in lprefix
    Previously, glob expansion characters would not be included in lprefix for replacement
    .. code-block:: sh
      $ touch /tmp/abc
      $ python
      >>> from bash_completion import bash_completions
      >>>
      >>> def get_completions(line):
      ...     split = line.split()
      ...     if len(split) > 1 and not line.endswith(' '):
      ...         prefix = split[-1]
      ...         begidx = len(line.rsplit(prefix)[0])
      ...     else:
      ...         prefix = ''
      ...         begidx = len(line)
      ...     endidx = len(line)
      ...     return bash_completions(prefix, line, begidx, endidx)
      ...
      >>> get_completions('ls /tmp/a*')
      ({'/tmp/abc '}, 0)
    Now, lprefix begins at the first special character:
    .. code-block:: sh
      $ python
      >>> from bash_completion import bash_completions
      >>>
      >>> def get_completions(line):
      ...     split = line.split()
      ...     if len(split) > 1 and not line.endswith(' '):
      ...         prefix = split[-1]
      ...         begidx = len(line.rsplit(prefix)[0])
      ...     else:
      ...         prefix = ''
      ...         begidx = len(line)
      ...     endidx = len(line)
      ...     return bash_completions(prefix, line, begidx, endidx)
      ...
      >>> get_completions('ls /tmp/a*')
      ({'/tmp/abc '}, 7)
  - The ``xonsh.main.setup()`` function now correctly passes the
    ``shell_type`` argument to the shell instance.
  - try_subproc_toks now works for subprocs with trailing and leading whitespace
    Previously, non-greedy wrapping of commands would fail if they had leading and trailing whitespace:
    .. code-block:: sh
      $ true && false || echo a
      xonsh: For full traceback set: $XONSH_SHOW_TRACEBACK = True
      NameError: name 'false' is not defined
      $ echo; echo && echo a
      xonsh: For full traceback set: $XONSH_SHOW_TRACEBACK = True
      NameError: name 'echo' is not defined
    Now, the commands are parsed as expected:
    .. code-block:: sh
      $ true && false || echo a
      a
      $ echo; echo && echo a
      a

-------------------------------------------------------------------
Wed Sep 26 20:15:36 UTC 2018 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.7.10
 - Added:
  - 'off' can be passed as falsy value to all flags accepting boolean argument.
  - DragonFly BSD support
  - Format strings (f-strings) now allow environment variables to be looked up.
    For example, ``f"{$HOME}"`` will yield ``"/home/user"``. Note that this will
    look up and fill in the ``detype()``-ed version of the environment variable,
    i.e. it's native string representation.
 - Changed:
  - Running ``aurman`` command will now be predicted to be unthreaded by default.
 - Fixed:
  - The xonsh ``xonfig wizard`` would crash if an unknown foreign shell was
    provided. This has been fixed.
  - The ``hg split`` command will now predict as unthreadable.
  - Fixed path completer crash on attempted f-string completion
- update to version 0.7.9
 - Added:
  - The python-mode ``@(expr)`` syntax may now be used inside of subprocess
    arguments, not just as a stand-alone argument. For example:
    .. code-block:: sh
      $ x = 'hello'
      $ echo /path/to/@(x)
      /path/to/hello
    This syntax will even properly expand to the outer product if the ``expr``
    is a list (or other non-string iterable) of values:
    .. code-block:: sh
      $ echo /path/to/@(['hello', 'world'])
      /path/to/hello /path/to/world
      $ echo @(['a', 'b']):@('x', 'y')
      a:x a:y b:x b:y
    Previously this was not possible.
  - New ``$DOTGLOB`` environment variable enables globs to match
    "hidden" files which start with a literal ``.``. Set this
    variable to ``True`` to get this matching behavior.
    Cooresponding API changes have been made to
    ``xonsh.tools.globpath()`` and ``xonsh.tools.iglobpath()``
  - New environment variable ``$FOREIGN_ALIASES_SUPPRESS_SKIP_MESSAGE``
    enables the removal of skipping foreign alias messages.
  - New ``--suppress-skip-message`` command line option for skipping
    foreign alias messages when sourcing foreign shells.
 - Fixed:
  - In Bash completions, if there are no files to source, a ``set()`` will
    no longer be inserted into the completion script.
  - Fixed issue with TAB completion in readline not replacing values
    with spaces properly when the prefix was unquoted.
- update to version 0.7.8
 - Added:
  - ``xonsh.lib.collections.ChainDB``, a chain map which merges mergable fields
 - Fixed:
  - Pass all params to voxapi.create
  - PTK tab-completion now auto-accepts completion if only one option is present
    (note that fix is only for PTK2)

-------------------------------------------------------------------
Sun Sep  2 07:15:29 UTC 2018 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.7.7:
 - Added:
  - A xontrib which adds support for autojump to xonsh
  - Added new env-var ``XONSH_HISTORY_MATCH_ANYWHERE``. If set to ``True`` then
    up-arrow history matching will match existing history entries with the search
    term located anywhere, not just at the beginning of the line. Default value is
    ``False``
 - Changed:
  - Improved iteration over virtual environments in Vox.__iter__
 - Fixed:
  - Fix for ``Enter`` not returning from Control-R search buffer
  - Fixed automatic wrapping of many subprocesses that spanned multiple lines via
    line continuation characters with logical operators separating the commands.
    For example, the following now works:
    .. code-block:: sh
          echo 'a' \
          and echo 'b'
  - Environment swapping would not properly reraise errors due to weird
    Python name binding issue.
- update to version 0.7.6:
 - Added:
  - Callable aliases may now accept a ``stack`` argument. If they do, then the
    stack, as computed from the aliases call site, is provided as a list of
    ``FrameInfo`` objects (as detailed in the standard library ``inspect``
    module). Otherwise, the ``stack`` parameter is ``None``.
  - ``SubprocSpec`` now has a ``stack`` attribute, for passing the call stack
    to callable aliases. This defaults to ``None`` if the spec does not
    need the stack. The ``resolve_stack()`` method computes the ``stack``
    attribute.
 - Changed:
  - xonsh/environ.py
    Exceptions are caught in the code executed under Env.swap()
 - Fixed:
  - Scripts are now cached by their realpath, not just abspath.
  - Fixed a potential crash (``AssertionError: wrong color format``) on Python 3.5 and prompt_toolkit 1.
  - The ``completer`` command now correctly finds completion functions
    when nested inside of other functions.
  - Fixed a crash when using the ``$XONSH_STDERR_PREFIX/POSTFIX`` with
    prompt_toolkit and Pygments 2.2.
- update to version 0.7.5:
 - Fixed:
  - Recent command history in ptk2 prompt now returns most recently executed
    commands first (as expected)
  - Fixed a regression taat prevented the readline backend from beeing used. This
    regression was caused by the new ansi-color names, which are incompatible with
    pygments 2.2.

-------------------------------------------------------------------
Sun Aug 26 13:02:45 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.7.4:
 - Added:
  - New ``xonsh-cat`` command line utility, which is a xonsh replacement
    for the standard UNIX ``cat`` command.
  - The new ``xonsh.xoreutils.cat.cat_main()`` enables the ``xonsh.xoreutils.cat``
    module to be run as a command line utility.
  - New ``CommandsCache.is_only_functional_alias()`` and
    ``CommandsCache.lazy_is_only_functional_alias()`` methods for determining if
    if a command name is only implemented as a function, and thus has no
    underlying binary command to execute.
  - ``xonsh.xontribs.xontribs_load()`` is a new first-class API for loading
    xontribs via a Python function.
  - ``$COMPLETIONS_DISPLAY`` now supports readline-like behavior on
    prompt-toolkit v2.
 - Changed:
  - The xonsh Jupyter kernel now will properly redirect the output of commands
    such as ``git log``, ``man``, ``less`` and other paged commands to the client.
    This is done by setting ``$PAGER = 'cat'``. If ``cat`` is not available
    on the system, ``xonsh-cat`` is used instead.
  - The ``setup()`` function for starting up a working xonsh has ``aliases``,
    ``xontribs``, and ``threadable_predictors`` as new additional keyword
    arguments for customizing the loading of xonsh.
 - Fixed:
  - Fixed a bug with converting new PTK2 colors names to old names when using PTK1 or Jupyter
      as the shell type.
  - ``CommandsCache.locate_binary()`` will now properly return None when
    ``ignore_alias=False`` and the command is only a functional alias,
    such as with ``cd``. Previously, it would return the name of the
    command.
  - Fixed issue with ``$COMPLETIONS_DISPLAY`` raising an error on
    prompt-toolkit v2 when the value was not set to ``multi``.
  - ValueError when executing ``vox list``

-------------------------------------------------------------------
Wed Aug  8 19:51:24 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.7.3:
 * Added:
  * Add the ``PROMPT_TOOLKIT_COLOR_DEPTH`` environment to xonsh default environment.
    Possible values are ``DEPTH_1_BIT``/``MONOCHROME``,
    ``DEPTH_4_BIT``/``ANSI_COLORS_ONLY``, ``DEPTH_8_BIT``/``DEFAULT``, or ``DEPTH_24_BIT``/``TRUE_COLOR``.
    Note: not all terminals support all color depths.
  * New way to fix unreadable default terminal colors on Windows 10. Windows 10
    now supports true color in the terminal, so if prompt toolkit 2 is
    installed Xonsh will use a style with hard coded colors instead of the
    default terminal colors. This will give the same color experience as on linux an mac.
    The behaviour can be disabled with ``$INTENSIFY_COLORS_ON_WIN``
    environment variable.
  * New ``JupyterShell`` for interactive interfacing with Jupyter.
 * Changed:
  * All ansicolor names used in styles have ben updated to the color names used by prompt_toolkit 2.
    The new names are are much easier to understand
    (e.g. ``ansicyan``/``ansibrightcyan`` vs. the old ``#ansiteal``/``#ansiturquoise``). The names are automatically
    translated back when using prompt_toolkit 1.
 * Removed:
  * Removed support for pygments < 2.2.
 * Fixed:
  * New ansi-color names fixes the problem with darker colors using prompt_toolkit 2 on windows.
  * Fixed a problem with the color styles on prompt toolkit 2. The default pygment
    style is no longer merged into style selected in xonsh.
  * The JupyterKernel has been fixed from a rather broken state.

-------------------------------------------------------------------
Sat Aug  4 07:25:38 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.7.2:
 * Added:
  * ``history show`` builtin now supports optional ``-0`` parameter that switches
    the output to null-delimited. Useful for piping history to external filters.
 * Fixed:
  * If exception is raised in indir context manager, return to original directory
  * Fixed issue that autocomplete menu does not display
    at terminal's maximum height
- update to version 0.7.1:
 * Added feature to aliases.
 * ``xonsh.lib.os.rmtree()`` an rmtree which works on windows properly (even with
   git)
 * Changed:
  * set default value of ``$AUTO_SUGGEST_IN_COMPLETIONS=False``
  * Use the ``pygments_cache.get_all_styles()`` function instead of
    interacting directly with pygments.
 * Fixed:
  * Fixed issue with ``$ARG<N>`` varaibles not being passed to subprocesses correctly.
  * Fixed issue with multiline string inside of ``@(expr)`` in
    unwrapped subprocesses. For example, the following now works::
      echo @("""hello
      mom""")
  * ``CommandPipeline.output`` now does properly lazy, non-blocking creation of
    output string. ``CommandPipeline.out`` remains blocking.
  * Fix regression in ``INTENSIFY_COLORS_ON_WIN`` functionality due to prompt_toolkit 2 update.
  * Fixed issue that can't insert quotation marks and double quotes
    for completion.
  * Fixed issue with ``SyntaxErrors`` being reported on the wrong line
    when a block of code contained multiple implicit subprocesses.
  * ``prompt_toolkit >= 2`` will start up even if Pygments isn't present
  * Fixed a regression with ``xonfig styles`` reporting ``AttributeError: module 'pygments' has no attribute 'styles'``
  * ptk dependent xontribs (that use custom keybindings) now work with both ptk1
    and ptk2
  * Fixed async tokenizing issue on Python v3.7.

-------------------------------------------------------------------
Sun Jul 29 17:36:18 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.7.0:
 * Added:
  - Added a hook for printing a spcial display method on an object.
   * Support for ``prompt_toolkit 2.0``
   * The ``--shell-type`` (``$SHELL_TYPE``) may now be specified using
     shortcuts, such as ``rl`` for ``readline`` and ``ptk2`` for
     ``prompt_toolkit2``. See ``xonsh --help`` for a full listing
     of available aliases.
 * Fixed:
  - Restored AUGASSIGN_OPS definition, which was inadvertently removed.

-------------------------------------------------------------------
Sat Jul  7 08:53:48 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.6.9:
 * Added:
  * New xonsh standard library ``xonsh.lib`` subpackage
  * ``xonsh.lib.os.indir`` a context manager for temporarily entering into a directory
  * ``xonsh.lib.subprocess.run`` and ``xonsh.lib.subprocess.check_call``
    subprocess stubs using ``xonsh`` as the backend
 * Fixed:
  * update xoreutils._which.which() for python 3.x support.
  * Fixed issue with incorrect strip lengths for prefixes with quotes in them
  * Fixed bash script to also consider leading double quotes and not just single
    quotes
  * Launching xonsh with prompt_toolkit version 2.x no longer fails, and instead fallsback to readline shell. This is a patch for until prompt_toolkit 2.x support is fully implemented. See PR #2570
- update to version 0.6.8:
 * Fixed:
  * completions relative to ``CDPATH`` only trigger when used with ``cd``
  * Import of ``ctypes.util`` is now explictly performed, as needed.
    Python v3.7 no longer imports this module along with ``ctypes``.
  * Fixed issue with pygments-cache not properly generating a cache the first
    time when using prompt-toolkit. This was due to a lingering lazy import
    of ``pkg_resources`` that has been removed.
  * Removed duplicate ``pip`` completer
  * ``bash_completion`` no longer returns invalid prefix lengths for directories
    containing escape file names
  * Fixed error when using redirection (e.g., >) on Windows.
- update to version 0.6.7:
 * Changed:
  * Xonsh live example has been re-added back to the documentation.
 * Fixed:
  * Fixed issue where xonsh would fail to properly return the terminal prompt
    (and eat up 100% CPU) after a failed subprocess command in interactive mode
    if ``$RAISE_SUBPROC_ERROR = True``.
  * ``xonsh.tokenize.tok_name`` no longer mutates the standard library ``tokenize.tok_name``.
    A copy is made on import instead.

-------------------------------------------------------------------
Sun Jun 10 20:20:03 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.6.6:
 * Added:
  * A multipurpose add method to EnvPath.
  * Added ``pygments-cache`` project in order to reduce startup time.
 * Changed:
  * built_ins.py, corrected a typo.
  * test/test_news.py
    It now uses regex to verify the format of rst files
  * Mercurial (``hg``) will no longer run in a threadable subprocess when
    it is run in interactive mode.
 * Fixed:
  * issue 2313

-------------------------------------------------------------------
Thu May 31 21:20:01 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.6.5:
 * Added:
  * Wizard ``FileInsterter`` node class now has ``dumps()`` method for
    converting a mapping to a string to insert in a file.
 * Fixed:
  * Fixed issue with ``xonfig wizard`` writer failing to write valid run control
    files for environment variables that are containter types. In particular,
    the storage of ``$XONSH_HISTORY_SIZE`` has been fixed.

-------------------------------------------------------------------
Mon May 21 06:52:00 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.6.4:
 * Changed:
  * Error message improved for sourcing foreign shells, when file cannot be found
    or there is a syntax error.
 * Fixed:
  * Fixed issues with readline completer tab completing entries
    with spaces.
  * Fixed ``xonsh.tools.columnize()`` bug the prevented single-row
    input from being columnized correctly.
  * Now honor ASYNC and AWAIT as keywords in tokenizer on
    Python 3.7.

-------------------------------------------------------------------
Sun May  6 08:31:32 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.6.3:
 * Added:
  * Docs for using ``@(<expr>)`` as a way to run commands and a gotcha about
    list of strings vs single string expressions.
  * Ubuntu versions which xonsh is packaged for (with xonsh versions)
 * Changed:
  * When reporting errors without a traceback (i.e. ``$XONSH_SHOW_TRACEBACK = False``) and the error is a ``XonshError``
    the exception type is not longer printed.
  * ``CommandPipeline.proc`` may now be ``None``, to accomodate when the process
    fails to even start (i.e. a missing command or incorrect permisions).
 * Fixed:
  * The ``curl`` command will now be run in a thread, which prevents documents that
    do not end in a newline from writing over the next prompt and vice versa.
  * Fix bug on Windows when ``PATHEXT`` environment variable did not exist.
    This also fixes building the xonsh documentation on Windows.
  * Fixed a bug in the `free_cwd <http://xon.sh/xontribs.html#free-cwd>`__ Windows Xontrib, which caused the prompt to error if the current directory is 
    deleted/renamed from an other process.
  * Fixed issue with ``$XONSH_SHOW_TRACEBACK`` not being respected in subprocess
    mode when the command could not be found or had incorrect permissions.

-------------------------------------------------------------------
Sun Apr 29 18:44:37 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.6.2:
 * Added:
  * Release tarballs now include licenses and minimal documentation for xonsh and ply
  * Wizard now has a FileInserter node that allows blocks to be inserted and replaced inside of a file. This adheres to conversion rules fordumping as provided on this node.
  * New xonsh.wizard.StateVisitor.flatten() method for flattening the current state.
 * Changed:
  * The xonsh startup wizard will only be triggered if no xonshrc files exist and the file ~/.local/config/xonsh/no-wizard is not present.
  * The xonfig wizard command will now run write out to the xonshrc file.
  * Wizard nodes Save and Load had their names changed to SaveJSON and LoadJSON.
 * Removed:
  * Static configuration is dead (config.json), long live run control (xonshrc)!
  * The following evironment variables have been removed as they are no longer needed: $LOADED_CONFIG and $XONSHCONFIG.
  * Many support functions for static configuration have also been removed.
 * Fixed:
  * Files starting with # are auto-escaped by TAB completion

-------------------------------------------------------------------
Sat Apr 14 13:29:29 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.6.1:
 * Added:
  * Support for MSYS2.
  * New ``xonsh.main.setup()`` function for starting up xonsh in 3rd party
    packages.
 * Changed:
  * Updated CircleCI to use circle version 2.0
  * Replaced StopIteration with return in CommandPipeline.iterraw.
  * Xonsh run control now also looks for the XDG-compliant file
    ``~/.config/xonsh/rc.xsh`` at startup.
 * Fixed:
  * Clean out ``$LINES`` and ``$COLUMNS`` if set, preventing some programs from drawing weirdly
  * cat from xoreutils now outputs in configured encoding
  * Fixed hanging issue with pipelines whose middle processes exit before the
    first or last process.
  * Fixed issue where xonsh would deduplicate spaces from bash autocompletions.
  * Fixed failing redirections from stderr to stdout when the command
    being executed was a callable alias.
  * Ensure that the ``free_cwd`` contrib can only be active on pure Windows.
  * Made an exceptional case in ``iglobpath()`` more robust when Python globbing
    fails for due to strange scrandir issue.
  * Unexpected process suspension on Cygwin and MSYS2.
  * ``$XONSH_APPEND_NEWLINE`` will now default to True when in interactive mode.
  * Fixed issue with uncalled lambdas being run in subproc mode.
  * Lambda nodes not have proper line and column numbers in AST.
  * Properly throw ``SyntaxError`` when no kwargs are defined
    in a kwarg-only function. This used to throw a
    ``TypeError: 'NoneType' object is not iterable``.
  * Addressed issue where encoding and errors were None when teeing output.
  * Commands like ``git c`` would complete to ``git 'checkout '`` because git adds an extra space
    to the end of the completion, which was being captured in the completion. Xonsh now fixes the git issue
    while retaining all whitespace when there is other internal whitespace.

-------------------------------------------------------------------
Fri Dec  8 11:14:28 UTC 2017 - sebix+novell.com@sebix.at

- change source URL to github as docs are included
- add xonsh-doc package with HTML documentation

-------------------------------------------------------------------
Thu Dec  7 10:20:01 UTC 2017 - sebix+novell.com@sebix.at

- run spec-cleaner
- Add python3-ply as recommendation. It's included as fallback but defaults to the distribution's library.

-------------------------------------------------------------------
Mon Dec  4 19:18:18 UTC 2017 - sebix+novell.com@sebix.at

- update to version 0.6.0
 * Fixed:
  * Fixed a bug on py34 where os.scandir was used by accident.
  * Line continuations (\\) is subproc mode will no longer consume the surrounding whitespace.
  * Fixed a bug if foreign_shell name was not written in lower case in the static configuration file config.json
  * Fixed issue with foregrounding jobs that were started in the background.
  * Fixed that Ctrl-C crashes xonsh after running an invalid command.
  * Fixed an potential ProcessLookupError issue, see #2288.

-------------------------------------------------------------------
Sat Jul 22 09:28:20 UTC 2017 - sebix+novell.com@sebix.at

- update to version 0.5.12
 * Fixed release.xsh to prevent it from dirtying the repo on release and
   leading to an unwanted .dev suffix on the version number
- update to version 0.5.11
 * release.xsh creates a github release with the merged news entries as the
   release body
 * xonfig now displays the proper value for "on linux"
- update to version 0.5.10
 *  Added xclip and repo to default threadable predictors (Issues #2355 and #2348)
 *  Pretty printing of the $PATH variable
 *  Add "fzf-widgets" xontrib which provides fuzzy search productivity widgets with on custom keybindings to xontrib list.
 *  Fixed the --rc option so it now runs xonsh with the specified rc file
 *  @$ operator now functions properly when returned command is an alias
 *  Correct line continuation would not work on Windows if the line continuations were used in the xonshrc file.
 *  Fix echo command from xoreutils.
- update to version 0.5.9
 * Add Alt . keybinding to bashisms-xontrib to insert last argument of
   previous command into current buffer
 * Added missing ensurers to make sure that bool env_vars are bools and
 * int env_vars are integers:
  *  DIRSTACK_SIZE
  *  EXPAND_ENV_VARS
  *  PUSHD_MINUS
  *  PUSHD_SILENT
  *  SUGGEST_COMMANDS
  *  SUGGEST_MAX_NUM
  *  SUGGEST_THRESHOLD
 

-------------------------------------------------------------------
Thu Mar  9 21:12:40 UTC 2017 - sebix+novell.com@sebix.at

- version 0.5.8

-------------------------------------------------------------------
Wed Feb  1 20:34:45 UTC 2017 - sebix+novell.com@sebix.at

- version 0.5.3
- Added:
  * Tab completion xontrib for python applications based on click framework.
  * Added on_transform_command event for pre-processing that macros can't handle.
  * Autodetection of backgroundability by binary analysis on POSIX.
  * New argument expand_user=True to tools.expand_path.
  * New $COMPLETION_QUERY_LIMIT environment variable for setting the number of completions above which the user will be asked if they wish to see the potential completions.
  * Users may now redirect stdout to stderr in subprocess mode.
- Changed:
  * The Block and Functor context managers from xonsh.contexts have been rewritten to use xonsh's macro capabilities. You must now enter these via the with! statement, e.g. with! Block(): pass.
  * The distributed xontrib now needs to use the with! statement, since it relies on Functor.
  * telnet has been flagged as unthreadable.
  * When $DYNAMIC_CWD_ELISION_CHAR is non empty and the last dir of cwd is too long and shortened, the elision char is added at the end.
  * pygments is no longer a strict dependency of the prompt_toolkit backend. If pygments is not installed, the PTK backend will use the default ansi color settings from the terminal. Syntax highlighting requires that pygments is installed.
  * Events are now keyword arguments only
  * Restored on_precommand to its original signature.
  * Move built_ins.expand_path to tools.expand_path.
  * Rename tools.expandpath to tools._expandpath.
  * Added gvim command to unthreadable predictors.
  * The source alias now passes $ARGS down to file it is sourcing.
- Removed:
  * XonshBlockError has been removed, since it no longer serves a purpose.
- Fixed:
  * PopenThread will now re-issue SIGINT to the main thread when it is recieved.
  * Fixed an issue that using sqlite history backend does not kill unfinished jobs when quitting xonsh with a second "exit".
  * Fixed an issue that xonsh would fail over to external shells when running .xsh script which raises exceptions.
  * Fixed an issue with openpty() returning non-unix line endings in its buffer. This was causing git and ssh to fail when xonsh was used as the login shell on the server. See https://mail.python.org/pipermail/python-list/2013-June/650460.html for more details.
  * Restored the ability to ^Z and fg processes on posix platforms.
  * CommandPipelines were not gauranteeded to have been ended when the return code was requested. This has been fixed.
  * Introduce path expansion in is_writable_file to fix $XONSH_TRACEBACK_LOGFILE=~/xonsh.log.
  * Backgrounding a running process (^Z) now restores ECHO mode to the terminal in cases where the subprocess doesn't properly restore itself. A major instance of this behaviour is Python's interactive interpreter.
  * Readline backend would not ask the user to confirm the printing of completion options if they numbered above a certain value. Instead they would be dumped to the screen. This has been fixed.
  * Jupyter kernel was no longer properly running subprocess commands. This has been fixed.
  * The filename is applied to the target of the source alias, providing better tracebacks.

-------------------------------------------------------------------
Thu Jan  5 09:54:29 UTC 2017 - sebix+novell.com@sebix.at

- version 0.5.2
- Added:
  * Added weechat to default predictors
  * $DYNAMIC_CWD_ELISION_CHAR environment variable to control how a shortened path is displayed.
- Changed:
  * _ret_code function of prompt_ret_code xontrib return now None when return code is 0 instead of empty string allowing more customization of prompt format.
- Fixed:
  * Minor Python completer token counting bug fix.
  * multiline syntax error in PTK shell due to buffer not being reset
  * Segfaults and other early exit signals are now reported correctly, again.

-------------------------------------------------------------------
Wed Dec 21 17:08:54 UTC 2016 - sebix+novell.com@sebix.at

- update to 0.5.1

-------------------------------------------------------------------
Sun Dec 18 11:46:28 UTC 2016 - sebix+novell.com@sebix.at

- update to 0.4.7
- fix license

-------------------------------------------------------------------
Sat Aug 27 12:58:15 UTC 2016 - sebix+novell.com@sebix.at

- initial package for xonsh

