--- build/Makefile.gcc3.orig
+++ build/Makefile.gcc3
@@ -64,13 +64,13 @@ DEFINES+=-DPF_DISTRO_$(PF_DISTRO) -DPF_M
 
 # Compiler flags that reglulates warning levels
 # Removed -pedantic (conflicts with CMPI header files).
-CXX_WARN_FLAGS=-Wall -fno-nonansi-builtins  -Woverloaded-virtual -Wformat -Wformat-security   -Wfloat-equal -Wcast-qual -Wcast-align -Wconversion  -Wswitch-enum -Wundef -Wshadow -Wwrite-strings -Wredundant-decls -Werror 
+CXX_WARN_FLAGS=-Wall -Woverloaded-virtual -Wformat -Wformat-security   -Wfloat-equal -Wcast-qual -Wcast-align -Wconversion  -Wswitch-enum -Wundef -Wshadow -Wwrite-strings -Wredundant-decls
 
 # Compiler code-generation options
 CXX_CGEN_FLAGS=-fPIC 
 
 # Compiler Optimization flags 
-CXX_OPTIMIZATION_FLAGS=-fstack-protector-all
+CXX_OPTIMIZATION_FLAGS=
 
 # -fstack-protector-all not supported on Sles 9 - remove
 ifeq ($(PF_DISTRO),SUSE)
@@ -96,14 +96,14 @@ endif
 
 # CXX Debug flags for release builds
 ifeq ($(BUILD_TYPE),Release)
-	CXXFLAGS += -Os -fno-enforce-eh-specs
+	CXXFLAGS +=
 endif 
 
 # Avoid stack frame corruption when throwing exceptions from 
 # callbacks by not allowing the optimizer to omit frame pointers
 # (implicit with the -Os option). This bug was observed with the
 # GCC 3.4.3 compiler on Red Hat 3.4.3-9. See WI-11657 for more.
-CXXFLAGS += -fno-omit-frame-pointer
+CXXFLAGS +=
 
 # CXX Compiler flags, end result 
 CXXFLAGS += $(DEFINES) $(CXX_OPTIMIZATION_FLAGS) $(CXX_WARN_FLAGS) $(CXX_CGEN_FLAGS)
@@ -134,7 +134,7 @@ CIMMOF=cimmof
 ifeq ($(BUILD_TYPE),Debug)
 	STRIP=$(NOOP)
 else
-	STRIP=strip
+	STRIP=true
 endif
 
 # Include paths for POSIX platforms
