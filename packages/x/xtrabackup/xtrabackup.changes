-------------------------------------------------------------------
Tue May 14 15:32:50 UTC 2019 - Martin Liška <mliska@suse.cz>

- Disable LTO (boo#1135095).

-------------------------------------------------------------------
Tue Feb 26 09:16:42 UTC 2019 - Martin Liška <mliska@suse.cz>

- Add gcc9-warning.patch (bsc#1125418).

-------------------------------------------------------------------
Thu Sep 13 11:08:03 UTC 2018 - astieger@suse.com

- Percona Xtrabackup 2.4.12:
  * now prints used arguments to standard output
  * --copy-back did not read which encryption plugin to use from
    plugin-load setting of the my.cnf configuration file
  * xbstream was exiting with zero return code when it failed to
    create one or more target files
  * xtrabackup_checkpoints files were encrypted during a backup,
    caused additional difficulties to take incremental backups

-------------------------------------------------------------------
Wed Jun  6 09:18:05 UTC 2018 - astieger@suse.com

- Percona XtraBackup 2.4.11:
  * Add support for encrypted general tablespaces
  * Add support for backup on instqances using keyring_vault plugin

-------------------------------------------------------------------
Thu Apr 26 15:59:10 UTC 2018 - guillaume.gardet@opensuse.org

- Remove unneeded patch:
  * percona-xtrabackup-2.4.9-aarch_buildfix.patch

-------------------------------------------------------------------
Sun Apr  1 18:32:08 UTC 2018 - astieger@suse.com

- Percona XtraBackup 2.4.10:
  * Rebased to MySQL 5.7.19
  * Fix xbcrypt failure with --encrypt-key-file option
  * Fix lock-up on simultaneous usage of --lock-ddl and
    --lock-ddl-per-table
  * Fix deadlock in prepare stage related to the maximum number
    of pending reads
  * Abort backup when encountering tablespaces with a corrupted
    first page instead of skipping
- Use %license (boo#1082318)

------------------------------------------------------------------
Wed Mar 14 13:43:24 CET 2018 - ro@suse.de

- compile some files with -O0 to allow build on aarch64
- add percona-xtrabackup-2.4.9-aarch_buildfix.patch
- add _constraints file: min 6G mem, min 8G diskspace

-------------------------------------------------------------------
Mon Dec 11 21:20:12 UTC 2017 - astieger@suse.com

- Percona XtraBackup 2.4.9:
  * xbcrypt now has an ability to decrypt files in parallel by
    specifying the number of threads with the xtrabackup
    --encrypt-threads option
  * xtrabackup --copy-back option can now be used with xtrabackup
    --parallel option to copy the user data files in parallel (redo
    logs and system tablespaces are copied in the main thread)
  * Various fixes to slave_info writing
  * Various fixes for crashes under certain circumstances

-------------------------------------------------------------------
Wed Nov 22 15:17:10 UTC 2017 - dmueller@suse.com

- set default unix socket address to the mariadb socket location

-------------------------------------------------------------------
Tue Aug  8 15:54:11 UTC 2017 - astieger@suse.com

- Percona XtraBackup 2.4.8:
  * Support MySQL 5.7, rebased to MySQL 5.7.13
  * Support for InnoDB tablespace encryption
    add --reencrypt-for-server-id option
  * Support SHA256 passwords (via SSL connection)
  * Support command options for secure connections
  * xbcrypt format changes, backups are incompatible with 2.3.x
  * Add --remove-original option to remove encrypted/compressed
    files after operations
  * Use hwardware accellerated crc32 implementaiton
  * Add options to exclude tables (--tables-exclude) and databases
    (--databases-exclude) from backup
  * xbstream now supports parallel extraction (--parallel)
  * xbstream now supports --decrypt, --encrypt-threads,
    --encrypt-key, --encrypt-key-file for decryption
  * Add options for MDL locking (--lock-ddl, --lock-ddl-timeout,
    --lock-ddl-per-table)
- packaging changes:
  * bundle boost 1.59.0
  * dropped patches:
    percona-xtrabackup-2.2.x-srv_buf_size.patch
    percona-xtrabackup-2.3.8-gcc7-fallthrough.patch
    percona-xtrabackup-2.3.8-gcc7-pointer-comparisons.patch

-------------------------------------------------------------------
Tue Aug  8 11:45:45 UTC 2017 - astieger@suse.com

- Percona Xtrabackup 2.3.9:
  * New --check-privileges option to check for system privileges
  * Fix crash during prepare stage if index compaction was enabled
  * Support building with OpenSSL 1.1
  * xbstream could run out of file descriptors while extracting
    backups which contains many tables
  * Fix determining use of master_auto_postion on a slave to avoid
    generating an invalid xtrabackup_slave_info file
  * Fix crash backing up MariaDB 10.2.x with --ftwrl-* options
  * Along with xtrabackup_checkpints file, xtrabackup now copies
    xtrabackup_info file into directory specified by --extra-lsndir
  * GTID position was not recorded when --binlog-info option was
    set to AUTO
  * bundled, patched libarchive updated to 3.3.1

-------------------------------------------------------------------
Wed Jul 19 14:17:19 UTC 2017 - astieger@suse.com

- Remove unused bundled libarchive windows build files with
  proprietary license keywords - bsc#1049458

-------------------------------------------------------------------
Fri Jun  2 18:28:27 UTC 2017 - astieger@suse.com

- fix build with gcc7 bsc#1041250:
  * percona-xtrabackup-2.3.8-gcc7-fallthrough.patch
  * percona-xtrabackup-2.3.8-gcc7-pointer-comparisons.patch

-------------------------------------------------------------------
Wed May 10 14:53:48 UTC 2017 - mrueckert@suse.de

- dont build shared libs for now.

-------------------------------------------------------------------
Wed May 10 14:20:30 UTC 2017 - mrueckert@suse.de

- enable building with system ssl

-------------------------------------------------------------------
Wed May 10 14:10:59 UTC 2017 - mrueckert@suse.de

- update to 2.3.8
  - New Features
    - Percona XtraBackup now uses hardware accelerated
      implementation of crc32 where it is supported.
    - Percona XtraBackup has implemented new options: xtrabackup
      --tables-exclude and xtrabackup --databases-exclude that work
      similar to xtrabackup --tables and xtrabackup --databases
      options, but exclude given names/paths from backup.
    - The xbstream binary now supports parallel extraction with the
      --parallel option.
    - The xbstream binary now supports following new options:
      --decrypt, --encrypt-threads, --encrypt-key, and
      --encrypt-key-file. When --decrypt option is specified
      xbstream will automatically decrypt encrypted files when
      extracting input stream. Either --encrypt-key or
      --encrypt-key-file options must be specified to provide
      encryption key, but not both. Option --encrypt-threads
      specifies the number of worker threads doing the encryption,
      default is 1.
  - Bugs fixed
    - xtrabackup would not create fresh InnoDB redo logs when
      preparing incremental backup. Bug fixed #1669592.
    - xtrabackup --export can now export tables that have more than
      31 index. Bug fixed #1089681.
    - Unrecognized character \x01; marked by <-- HERE message could
      be seen if backups were taken with the version check enabled.
      Bug fixed #1651978.
- refreshed percona-xtrabackup-2.3.2-unbundle-jsnm.patch

-------------------------------------------------------------------
Thu Feb 23 21:09:28 UTC 2017 - astieger@suse.com

- Percona XtraBackup 2.3.7
- New functionality:
  * new --remove-original option for removing the encrypted and
    compressed files once they’ve been decrypted/decompressed.
  * now supports -H, -h, -u and -p shortcuts for --hostname,
    --datadir, --user and --password respectively.
- Bugs fixed:
  * used username set for the server in a configuration file even
    if a different user was defined in the user’s configuration file
  * Incremental backups did not include xtrabackup_binlog_info and
    xtrabackup_galera_info files
  * --move-back option did not always restore out-of-datadir
    tablespaces to their original directories
  * innobackupex and xtrabackup scripts were showing the password
    in the ps output when it was passed as a command line argument
    bsc#1026729
  * Incremental backup would fail with a path like ~/backup/inc_1
    because xtrabackup didn’t properly expand tilde

-------------------------------------------------------------------
Sat Jan 14 10:29:56 UTC 2017 - astieger@suse.com

- Percona XtraBackup 2.3.6, including one security fix:
  * CVE-2016-6225: xbcrypt encryption IV not being set properly
    (boo#1019858)
- New functionality:
  * now supports SHA256 passwords
  * new supports command options for secure connections
- Bugs fixed:
  * intermittent assertion failures when not correctly identifying
    server version
  * Safe slave backup algorithm performed too short delays between
    retries which could cause backups to fail on a busy servers
  * fix compilation warnings with gcc6
  * Backup would still succeed even if xtrabackup would fail to
    write the metadata
  * xbcloud now supports EMC ECS Swift API Authorization requests
  * backup failed with MariaDB 10.2 with the unsupported server
    version error message

-------------------------------------------------------------------
Sat Jul 16 19:14:14 UTC 2016 - astieger@suse.com

- Percona XtraBackup 2.3.5, a bugfix release:
  * Backup process would fail if --throttle option was used
  * .ibd files for remote tablespaces were not copied back to the
    original location pointed by the .isl files.
  * Fix crash when called with insufficient parameters, like
    specifying the empty --defaults-file option
  * Change default value of --ftwrl-wait-query-type from "all" to
    "update"
  * Allow the datadir from my.cnf to override the one from
    SHOW VARIABLES
  * Fix failure on MariaDB if binary logs were in non-standard
    directory
- Includes changes from 2.3.4:
  * respect variables in backup-my.cnf without having to specify 
    --defaults-file=backup-my.cnf
  * abort the backup if innobackupex --rsync completed with error
  * Fix logging ouf GTID info with MariaDB 10
  * Fix silent skipping of extra arguments
  * Allow connections to servers using legacy auth with new option
    --skip-secure-auth

-------------------------------------------------------------------
Tue Jul  5 18:29:49 UTC 2016 - toddrme2178@gmail.com

- Fix Group tag.

-------------------------------------------------------------------
Sun Jan 17 18:54:37 UTC 2016 - ecsos@opensuse.org

- Percona XtraBackup 2.3.3, a bugfix release:
  * Database directories were not removed if DROP DATABASE happened 
    during the backup.
  * Backup would fail if Store backup history on the server feature 
    was enabled and backup was taken from server without binary 
    log enabled.
  * Percona XtraBackup now fails with descriptive error message if 
    --defaults-extra-file is not specified first.
  * Backup would fail if --rsync option was used without specifying
    temporary folder.
  * Fixed Percona XtraBackup crash which happened when it was used 
    for SST on MariaDB Galera Cluster caused by double free of 
    datadir‘ variable.
  * --move-back did not respect the innodb_log_group_home_dir and 
    innodb_data_home_dir options which caused ib_logfiles and data
    files not to be moved to correct location.
  * xtrabackup_binlog_info was not updated correctly when applying 
    incremental backups.
  * When using a --defaults-file option Percona XtraBackup would
    complain about datadir being mismatched if it wasn’t explicitly
    set in the defaults file.
  * Fixed build issues by adding missing check in cmake script for
    xxd presence.
  * Percona XtraBackup would terminate backup process without error
    if --slave-info option was used on a server not running as a 
    replication slave.
  * innobackupex when used with --stream option would create an 
    empty directory with a timestamp as a name.
- update percona-xtrabackup-2.3.2-disable-version-check.patch
  to percona-xtrabackup-2.3.3-disable-version-check.patch

-------------------------------------------------------------------
Sat Dec 26 12:50:49 UTC 2015 - astieger@suse.com

- xtrabackup does not strictly require mysqld, and this capability
  is not longer provided by development MariaDB packages boo#959917

-------------------------------------------------------------------
Wed Oct 28 09:12:32 UTC 2015 - astieger@suse.com

- Percona XtraBackup 2.3.2, a feature release:
  * New utility xbcloud:
    + for up/downloading xbstream archives from/to cloud storage.
    + reads settings from [xbcloud] section in {/etc/,.}my.cnf
  * Backwards compatibility:
    + The innobackupex script was rewritten in C and is a symlink
      for xtrabackup. 2.2 command syntax is supported but
      deprecated. Syntax for new features added to xtrabackup only.
    + Options: --lock-wait-query-type, --lock-wait-threshold and
      --lock-wait-timeout have been renamed to innobackupex
      --ftwrl-wait-query-type, --ftwrl-wait-threshold and
      --ftwrl-wait-timeout respectively.
  * command line options changed to follow MySQL guidelines
  * xtrabackup now also copies MyISAM tables and supports every
    feature of innobackupex
  * xtrabackup now supports --datadir
  * Various bug fixes and improvements
- drop percona-xtrabackup-2.2.x-disable-default-version-check.patch
- add percona-xtrabackup-2.3.2-disable-version-check.patch to
  remove feature completely
- unbundle the jsnm library,
  adding percona-xtrabackup-2.3.2-unbundle-jsnm.patch

-------------------------------------------------------------------
Fri Oct 23 18:41:39 UTC 2015 - astieger@suse.com

- Percona XtraBackup 2.2.13, a bugfix release:
  * Improved the detection when the log block that has the different
    number from what is expected
  * Fixed false positive error: The log was not applied to the
    intended LSN which was happening even when the redo log was
    applied correctly
  * xtrabackup_logfile was not compressed when --compress option was
    used. Bug fixed #1242309.
  * innobackupex wrote error message to STDOUT instead of STDIN
    which broke xbstream and tar stream.
  * Incremental backups did not work with MariaDB below 10.1.6.

-------------------------------------------------------------------
Wed Aug 12 09:47:04 UTC 2015 - astieger@suse.com

- Percona XtraBackup 2.2.12, a bugfix release:
  * fix segfault during the prepare phase of certain FTS pages.
  * fix regression introduced in 2.2.8 which caused xtrabackup to
    read a redo log from incorrect offset (assertion)
  * fix pre-lock FLUSH TABLE written to binay log altering the GTID
  * fix false successful completion on incomplete copy of redo log
  * fix loosing correct table when  when there are is more than one
    tablespace with the same ID in the data directory
  * fix missing revision_id in binaries.

-------------------------------------------------------------------
Fri May 29 12:29:56 UTC 2015 - astieger@suse.com

- Percona XtraBackup 2.2.11:
  * rebased on MySQL 5.6.24.
  * fixed  crash when preparing the backup taken on MySQL/Percona
    Server 5.5 if there were open temporary tables during backup.
  * fix failure to prepare the backup if the xtrabackup_logfile
    was lager than 512GB
  * Fix for bug #1403237 was incomplete, due to setting wrong
    offset last copied batch of log records was copied from wrong
    location.
  * now executes an extra FLUSH TABLES before executing
    FLUSH TABLES WITH READ LOCK to potentially lower the impact 
    from FLUSH TABLES WITH READ LOCK.
  * fix regression from 2.2.10 which caused an error when taking
    an incremental backup from MariaDB 10.
  * now prints and stores the file based binlog coordinates in
    xtrabackup_binlog_info even though GTID is enabled.
  * no longer print warnings during the prepare phase about missing
    tables with a filtering option (--databases, --tables, etc.)

-------------------------------------------------------------------
Thu Apr  2 17:41:08 UTC 2015 - astieger@suse.com

- Percona XtraBackup 2.2.10:
  * Decrypting backup with the wrong key would make the backup
    unusable and unrecoverable.
  * XtraDB Changed Page Tracking wasn't working with innobackupex.
  * Fixed Percona XtraBackup assertion caused by dirty pages
    remaining in the buffer pool after the log was fully applied.
  * Backup will not be prepared and innobackupex will stop with an
    error if the transaction log file is corrupted and it wasn't
    applied to the intended LSN. Previously this was a warning.
  * New status log-applied is introduced for backup prepared with
    --redo-only to avoid making the backup unusable by preparing
    full or incremental backup without --redo-only and then
    applying next incremental on top of it. Incremental backup now
    can be applied only to backup in log-applied state, but not to
    full-prepared as it was earlier.

-------------------------------------------------------------------
Wed Feb 25 16:16:51 UTC 2015 - astieger@suse.com

- Downgrade qpress requirement from Requires to Recommends

-------------------------------------------------------------------
Wed Feb 25 08:31:57 UTC 2015 - astieger@suse.com

- Percona XtraBackup 2.2.9:
  * Percona XtraBackup was vulnerable to MITM attack which could
    allow exfiltration of MySQL configuration information via
    --version-check option. [boo#919298] CVE-2015-1027 lp#1408375.
    The openSUSE package has the version check disabled by default.
  * xtrabackup_galera_info file isn't overwritten during the Galera
    auto-recovery. lp#1418584.
  * Percona XtraBackup now sets the maximum supported session value
    for lock_wait_timeout variable to prevent unnecessary timeouts
    when the global value is changed from the default. lp#1410339.
  * New option --backup-locks, enabled by default, has been
    implemented to control if backup locks will be used even if
    they are supported by the server. To disable backup locks
    innobackupex should be run with innobackupex --no-backup-locks
    option. lp#1418820.
- Add percona-xtrabackup-2.2.9-nodoc.patch to make build work
  without documentation directories deleted by spec file

-------------------------------------------------------------------
Thu Jan 22 16:26:00 UTC 2015 - andreas.stieger@gmx.de

- Percona XtraBackup 2.2.8:
  + rebased on MySQL 5.6.22
  + Incremental backups would fail if the number of undo
    tablespaces (innodb_undo_tablespaces) was more than 1. This was
    caused by innobackupex removing the undo tablespaces during the
    prepare phase.
  + Fixed multiple memory leaks detected by AddressSanitizer.
  + innobackupex could fail when preparing backup that was taken
    from Percona Server 5.5 with log files (innodb_log_file_size)
    bigger than 4G. 
- Includes changes from 2.2.7:
  + Non-default value for innodb_log_block_size variable would
    cause assertion when preparing the backup.
  + When Percona XtraBackup would run FLUSH ENGINE LOGS during the
    backup process on GTID master, command was recorded to the
    slave's binary log as well, which lead to inconsistency between
    master and slave. Fixed by adding the NO_WRITE_TO_BINLOG clause
    to FLUSH ENGINE LOGS to avoid interfering with binary log and
    inconsistency with coordinates.
  + Exporting tables was inefficient when backup contained a large
    (and unrelated) change buffer.
  + innobackupex was printing the GTID even if the GTID mode was
    disabled which could cause confusion since it wasn't
    incrementing. Now it prints only GTID when GITD mode is enabled
    and when GTID mode is disabled it prints only filename and
    position. innobackupex still prints GTID, filename and
    positions if MariaDB server is being backed up.

-------------------------------------------------------------------
Mon Nov  3 21:45:36 UTC 2014 - andreas.stieger@gmx.de

- Percona XtraBackup 2.2.6
- New Features:
  + now reads server options from SHOW VARIABLES rather than my.cnf
  + now has more verbose output during initial table scan
- Bugs Fixed:
  + innobackupex didn't take the default datadir, which caused
    backups to fail if the datadir wasn't specified in my.cnf
  + innobackupex will now fail with an error when innobackupex
    --slave-info is used on a multi-threaded non-GTID slave,
    because Exec_Master_Log_Pos cannot be trusted for a multi-
    threaded slave.
  + InnoDB log scanning failure would cause backups to fail
  + --apply-log and --decompress marked mutually exclusive
  + now supports all option modifiers supported by upstream MySQL:
    skip, disable, enable, maximum, loose
  + would fail to perform a full backup on Percona Server 5.5 if
    innodb_log_file_size variable wasn't set in the [mysqld]
    section of my.cnf

-------------------------------------------------------------------
Sun Oct  5 11:55:10 UTC 2014 - andreas.stieger@gmx.de

- Percona XtraBackup 2.2.5
- New features:
  * Percona XtraBackup has been rebased on MySQL 5.6.21.
- Bugs fixed:
  * Fix a regression for users with huge numbers of InnoDB
    tablespaces, and the workaround of raising the open files
    limits didnt work in all cases due to a limitation in the Linux
    kernel. A new innobackupex --close-files option has been
    implemented to close the file handles once they are no longer
    accessed. NOTE: Using this option may result in a broken
    backup if DDL is performed on InnoDB tables during the backup.
  * Fix a regression since  2.2.0 which caused Percona XtraBackup
    to fail to copy redo logs in random cases.
  * innobackupex --galera-info didn't copy the last binlog file
    when it was taking a backup from server where backup locks are
    supported.
  * xtrabackup binary would accept arguments that were not options,
    which could lead to unexpected results.
  * If innobackupex is run against MySQL 5.1 with built-in InnoDB,
    it will now suggest using Percona XtraBackup 2.0 or upgrading
    to InnoDB plugin, rather than just failing with the generic
    unsupported server version message.
  * Using the (deprecated) log parameter in mysqld section would
    cause backups to fail.
  * Percona XtraBackup now uses MySQL code to get the stack trace
    in case Percona XtraBackup crashes with a segmentation fault or
    an assertion failure.
  * Attempt to use any of the following options without the
     --incremental option now fails with an error message rather than
    create a full backup: --incremental-lsn, --incremental-basedir,
    --incremental-history-name, --incremental-history-uuid.

-------------------------------------------------------------------
Sat Sep 13 10:31:40 UTC 2014 - andreas.stieger@gmx.de

- Percona XtraBackup 2.2.4
- New Features:
  * support for Galera GTID auto-recovery
- Bugs Fixed:
  * innobackupex would ignore --databases without --stream option 
    and back up all the databases.
  * --galera-info compatibility with MariaDB Galera Cluster 10.0.
  * fix crash when trying to remove absent table from InnoDB data
    dictionary while preparing a partial backup
  * now supports MariaDB GTID
  * MariaDB 10.1 is now added to the list of supported servers.
  * would fail to restore (copy-back) tables that have partitions
    with their own tablespace location.
- Now requiring rsync for --rsync option

-------------------------------------------------------------------
Sat Jul  5 23:15:54 UTC 2014 - andreas.stieger@gmx.de

- Percona XtraBackup 2.2.3
- Incompatible changes:
  * removed multiple binaries (xtrabackup_56, xtrabackup_55)
  * innobackupex-1.5.1 symlink removed
- New Features:
  * implemented support for backup locks (Percona Server)
  * can now store backup history on the server itself in a special
    table created for that purpose.
  * rebased on MySQL 5.6.17
- Bugs fixed: 
  * now recognizes new my.cnf option open_files_limit
  * prevent crash upon prepare if remote InnoDB tablespace got was
    CREATEd or ALTERed during the backup
  * fix handling of signals when run from other processes
  * fix InnoDB redo log incompatibility with compressed tables
  * flush InnoDB redo log before finalizing
  * now sets wsrep_causal_reads to 0 before executing FLUSH TABLES 
    WITH READ LOCK if the server is a member of the Galera cluster
  * no longer adds XtraDB-specific fields when preparing a backup
  * Information about backup type and parameters is now stored in 
    the xtrabackup_info file in the backup directory.
- refresh patches:
  * percona-xtrabackup-2.1.x-disable-default-version-check.patch to
    percona-xtrabackup-2.2.x-disable-default-version-check.patch
  * percona-xtrabackup-2.1.x-mysql-5.6.15-srv_buf_size.patch to 
    percona-xtrabackup-2.2.x-srv_buf_size.patch
- removed patches:
  * percona-xtrabackup-2.1.x-nodoc.patch no longer requird

-------------------------------------------------------------------
Thu May  8 06:52:19 UTC 2014 - andreas.stieger@gmx.de

- Percona XtraBackup 2.1.9:
  * now recognizes a new my.cnf option open_files_limit
  * inherited signal mask could leave child processes running
  * InnoDB table flag introduced in MySQL 5.6.16 was not recognized
    "InnoDB: in InnoDB data dictionary has unknown flags 50.”
    Fixed by rebasing to 5.6.17.
- As the MySQL 5.6 component was rebased to 5.6.17, adjust
  percona-xtrabackup-2.1.x-mysql-5.6.15-srv_buf_size.patch

-------------------------------------------------------------------
Thu Mar  6 19:46:05 UTC 2014 - andreas.stieger@gmx.de

- update to 2.1.8
  Disabled the "binary version check" functionality in the
  VersionCheck module due to security concerns. The automatic
  version check remains disabled in the openSUSE package.
  [bnc#864194] CVE-2014-2029
- bugs fixed:
  * do not discard read-ahead buffers through incorrect usage of
    posic_fadvise() hints, which resulted in higher I/O rate on
    the backup stage
  * Spurious trailing data blocks that would normally be ignored
    by InnoDB could lead to an assertion failure on the backup stage
  * A spurious warning message could cause issues with third-party
    wrapper scripts
  * xbcrypt could fail with the xbcrypt:xb_crypt_read_chunk: unable
    to read chunk iv size at offset error under some circumstances
  * xbstream could sometimes hang when extracting a broken or
    incomplete input stream

-------------------------------------------------------------------
Tue Feb 18 20:48:35 UTC 2014 - andreas.stieger@gmx.de

- disable automatic version check [bnc#864194]
  Prevents transmission of version information to an external host
  in the default configuration.
  Can be used by owner of a Percona server (or an attacker who can
  control this destination for the client) to collect arbitrary
  MySQL configuration parameters and execute commands (with -v).
  Now the version check needs to be requested via command line
- added patches:
  * percona-xtrabackup-2.1.x-disable-default-version-check.patch

-------------------------------------------------------------------
Sat Feb  1 23:14:55 UTC 2014 - andreas.stieger@gmx.de

- update to 2.1.7 [bnc#860488]
- general changes:
  * rebased on MySQL versions 5.5.35 and 5.6.15
  * now uses libgcrypt randomization functions for setting the IV
    [lp#1255300] [bnc#852224] CVE-2013-6394
- bugs fixed:
  * After being rebased on MySQL 5.6.11 Percona XtraBackup has been
    affected by the upstream bug #69780 (backward compatibility for
    InnoDB recovery) [lp#1203669]
  * Backup directory would need to be specified even for running the
    innobackupex with --help and --version options. [lp#1223716]
- bugs fixed specific to MySQL 5.6:
  * xtrabackpu did not roll back prepared XA transactions when
    applying the log. [lp#1254227]
- removed patches:
  * percona-xtrabackup-2.1.x-mysql-5.6.11-va_list.patch, committed
    in 5.6.15
- modified patches:
  * percona-xtrabackup-2.1.x-nodoc.patch for upstream changes
  * percona-xtrabackup-2.1.x-mysql-5.6.11-srv_buf_size.patch to
  * percona-xtrabackup-2.1.x-mysql-5.6.15-srv_buf_size.patch
    Reworked to apply to 5.6.15

-------------------------------------------------------------------
Mon Nov 25 22:46:42 UTC 2013 - andreas.stieger@gmx.de

- update to 2.1.6 [bnc#852224]
- New Features:
  * New innobackupex --force-non-empty-directories option
  * now supports logs created with the new log block checksums
- New Features specific to MySQL 5.6:
    option innodb_log_checksum_algorithm in Percona Server 5.6
- Bugs Fixed:
  * innobackupex --copy-back fails on empty innodb_data_home_dir
  * A fixed initialization vector (constant string) was used while
    encrypting the data. This opened the encrypted stream/data to
    plaintext attacks among others.
  * innobackupex --version-check is now on by default.
  * Since Version Check is enabled by default, new optin 
    --no-version-check option has been introduced to disable it.
  * xtrabackup_slave_info didn't contain any GTID information, which 
    could cause master_auto_position not to work properly
  * now supports absolute paths in innodb_data_file_path variable.
  * wouldn't back up the empty directory created with mkdir 
    (i.e. test) outside of the server which could lead to
    inconsistencies during the Percona XtraDB Cluster State Snapshot
    Transfer.
  * wasn't able to perform backups to the NFS mount in some NFS
    configurations, because it was trying to preserve file ownership.
  * unable to perform backup if innodb_log_arch_dir variable was
    used in server configuration
  * Race condition in start_query_killer child code could cause
    parent MySQL connection to close.
 - Bugs Fixed specific to MySQL 5.6:
  * xtrabackup_56 was using CRC32 as the default checksum algorithm
    This could cause error if the innodb_checksum_algorithm value
    was changed to strict_innodb value after a restore.
  * xtrabackup_56 binary didn't store the server’s
    innodb_checksum_algorithm value to backup-my.cnf. This value is
    needed because it affects the on-disk data format.
- update and tag percona-xtrabackup-2.1.x-nodoc.patch

-------------------------------------------------------------------
Mon Sep 23 17:50:49 UTC 2013 - schwab@suse.de

- percona-xtrabackup-2.1.x-mysql-5.6.11-va_list.patch: Fix invalid use of
  va_list

-------------------------------------------------------------------
Thu Sep 19 22:11:44 UTC 2013 - andreas.stieger@gmx.de

- update to 2.1.5
- New Features:
  * now supports new innobackupex --version-check option
- Note:
  * new method of incremental backups for Percona Server 5.6 with 
    experimental "Log Archiving for XtraDB" is not supported in 
    this build
- Bugs Fixed:
  * when preparing a compact backup, close temporary files
  * innobackupex: always terminate child processes on error
  * xtrabackup_56 binary (use for MySQL 5.6 and Percona Server 5.6)
    did not support Percona Server-specific innodb_log_block_size
  * fix stop in rare case when log block numbers had to wrap around
    at certain times
  * xtrabackup_56 binary would fail to create a suspend file
  * fix regression introduced in 2.1.4 which lead to cp utility 
    being used to copy metadata files even with --rsync option
  * further various issues as listed in 
    http://www.percona.com/doc/percona-xtrabackup/2.1/release-notes/2.1/2.1.5.html

-------------------------------------------------------------------
Fri Aug 16 14:03:07 CEST 2013 - mhrusecky@suse.cz

- fix build on Factory
  * percona-xtrabackup-2.1.x-mysql-5.6.11-srv_buf_size.patch

-------------------------------------------------------------------
Fri Aug  9 20:35:40 UTC 2013 - andreas.stieger@gmx.de

- update to 2.1.4
  This package drops MySQL 5.1 support.
- New features:
  * introduce additional options to handle the locking during
    FLUSH TABLES WITH READ LOCK to reduce read-only times.
  * speed up the backup process by not stopping slave thread when
    copying non-InnoDB data when innobackupex --no-lock option 
  * add option innobackupex --decrypt
  * and option innobackupex --decompress
  * rebase to MySQL 5.5.30, 5.6.11
- Bugs fixed:
  * During the backup process loading tablespaces was started 
    before the log copying, this could lead to a race between the 
    datafiles state in the resulting backup and xtrabackup_logfile.
    Tablespace created at a sensitive time would be missing in both 
    the backup itself and as the corresponding log record in 
    xtrabackup_logfile, so it would not be created on innobackupex 
    --apply-log either
  * innobackupex did not encrypt non-InnoDB files when doing local 
    (i.e. non-streaming) backups.
  * Difference in behavior between InnoDB 5.5 and 5.6 codebases in 
    cases when a newly created tablespace has uninitialized first 
    page at the time when XtraBackup opens it while creating a list
    of tablespaces to backup would cause assertion error.
  * xbcrypt could sometimes fail when reading encrypted stream from 
    a pipe or network.
  * innobackupex could not prepare the backup if there was no 
    xtrabackup_binary file in the backup directory and the 
    xtrabackup binary was not specified explicitly with innobackupex 
    --ibbackup option.
  * innobackupex would terminate with an error if innobackupex 
    --safe-slave-backup option was used for backing up the master
  * Under some circumstances XtraBackup could fail on a backup 
    prepare with innodb_flush_method=O_DIRECT when XFS filesystem was
    being used
  * Percona XtraBackup didn’t recognize checkpoint #0 as a valid 
    checkpoint on xtrabackup --prepare which would cause an error.
  * Percona XtraBackup didn’t recognize the O_DIRECT_NO_FSYNC value 
    for innodb_flush_method which was introduced in MySQL 5.6.7. 
  * innobackupex would terminate if innobackupex --galera-info option
    was specified when backing up non-galera server.
- Packaging changes:
  * refresh percona-xtrabackup-2.0.2-nodoc.patch to 
    percona-xtrabackup-2.1.x-nodoc.patch
  * drop MySQL 5.1 support
  * now requires qpress rather than recommending it because
    innobackupex now calls it directly

-------------------------------------------------------------------
Thu May 23 11:44:09 UTC 2013 - andreas.stieger@gmx.de

- update to 2.1.3
- bugs fixed:
  * 2.1.2 would hang when performing State Snapshot Transfer
    only affects users of XtraDB Cluster

-------------------------------------------------------------------
Tue May 21 23:54:05 UTC 2013 - andreas.stieger@gmx.de

- update to 2.1.2
- bugs fixed:
  * Using DBD::MySQL package for server communication instead of 
    spawning the mysql command line client introduced a regression 
    which caused innobackupex --galera-info to fail.
  * The format of xtrabackup_galera_info was missing the ":" 
    separator between the values of wsrep_local_state_uuid and 
    wsrep_last_committed.
  * innobackupex automatic version detection did not work correctly 
    for latest Percona Server and MySQL 5.1 releases which could 
    cause innobackupex to fail.
  * When backing up a server that is not a replication slave with 
    the innobackupex --slave-info option, innobackupex failed with 
    a fatal error. Replaced the fatal error with a diagnostic 
    message about innobackupex --slave-info being ignored in such a 
    case. 
  * Low values for wait_timeout on the server could cause server to 
    close the connection while backup is being taken.  

-------------------------------------------------------------------
Wed May 15 19:18:15 UTC 2013 - andreas.stieger@gmx.de

- 2.1.1, first GA release of 2.1 series
- new features:
  * compact backups - backups can now be configured to use less
    disk space by omitting secondary index pages and rebuilding
    them during prepare phase
  * encrypted backukups - encryption of backup data, new command
    line utility xbcrypt
- removed features:
  * support for InnoDB 5.0 and InnoDB 5.1-builtin removed 
    (InnoDB 5.1 plugin remains)
  * option --remote-host removed
- bugs fixed:
  * innobackupex now supports empty arguments to --password option
- packaging changes:
  * MySQL 5.1 binary named "xtrabackup" correctly
  * add build dependency libgcrypt-devel for xbcrypt
  * add runtime dependency perl(DBD::mysql fox innobackupex)
  * drop xtrabackup-automake-1.13.patch, committed upstream

-------------------------------------------------------------------
Tue May  7 18:36:24 UTC 2013 - andreas.stieger@gmx.de

- update to 2.0.7 [bnc#818819]
- new features:
  * implemented full support for new MySQL 5.6 features
  * implemented support for the InnoDB Buffer Pool Preloading 
  * Time interval between checks done by log copying thread is now 
    configurable by innobackupex --log-copy-interval. 
  * now stores the GTID value in the xtrabackup_binlog_info with
    MySQL and Percona Server 5.6 with the GTID mode enabled. 
  * --export now supports transportable tablespaces in MySQL 5.6
- bugs fixed
  * innobackupex could crash when taking the 5.6 backup due to 
     linking the wrong SSL library
  * Percona XtraBackup would crash when preparing the 5.6 backup 
    with partitioned tables. Bug fixed #1169169.
  * Tables that were dropped between taking a full backup and an 
    incremental one were present in the full backup directory, and 
    were not removed when incremental backups has been merged
  * Percona XtraBackup would leave stale xtrabackup_tmp* files in 
    the datadir after applying incremental backups.
  * Fixed couple of warnings found in innobackupex when all warnings 
    have been made FATAL.
  * If there are thousands of tables and slow IO then XtraBackup 
    can spend a lot of time opening all the tablespaces. Optimization
    has been implemented and XtraBackup now avoids loading 
    non-relevant tablespaces when partial backup is being taken 
    which speeds up the backup process.
  * Percona XtraBackup didn’t initialize per-thread data in the 
    log copying thread which could cause XtraBackup to crash.
  * Percona XtraBackup would fail when preparing the MySQL 5.6 backup 
    if the log files were bigger than 4G on the source server.
  * Due to different implementation in MySQL 5.6 error messages were 
    not printed to stderr directly. Because of that all InnoDB error
    or diagnostic messages are never printed by xtrabackup_56
  * innobackupex would still run with FLUSH TABLES WITH READ LOCK
    even if xtrabackup would fail when copying logs. Fixed by 
    terminating xtrabackup process immediately on log copying failure
  * innobackupex would fail if the SQL_MODE was set to ANSI_QUOTES.
  * Missing space_id from *.ibd.meta would lead to assertion. Fixed 
    by replacing the assertion with the error message.
  * Fixed the typo in the innobackupex error output.
  * When building from source innodb56 target didn’t have an option to 
    disable DTrace like innodb55 has. Fixed by adding 
    -DENABLE_DTRACE=OFF build option for innodb56 as well.
  * innobackupex wasn’t handling the innodb_data_file_path option 
    which could cause backup to fail.
  * Redundant code has been removed from xtrabackup.cc.

-------------------------------------------------------------------
Thu Mar 21 21:15:48 UTC 2013 - andreas.stieger@gmx.de

- update to 2.0.6 [bnc#810880]
- new features:
  XtraBackup has implemented basic support for MySQL 5.6, Percona
  Server 5.6 and MariaDB 10.0. Basic support means that these
  versions are are recognized by XtraBackup, and that backup/restore
  works as long as no 5.6-specific features are used (such as GTID, 
  remote/transportable tablespaces, separate undo tablespace, 
  5.6-style buffer pool dump files).
- bugs fixed:
  * Individual InnoDB tablespaces with size less than 1MB were extended
    to 1MB on the backup prepare operation. This led to a large increase
    in disk usage in cases when there are many small InnoDB tablespaces.
  * Fixed the issue that caused databases corresponding to inaccessible
    datadir subdirectories to be ignored by XtraBackup without warning
    or error messages. This was happening because InnoDB code silently
    ignored datadir subdirectories it could not open.
  * Under some circumstances XtraBackup could fail to copy a tablespace
    with a high --parallel option value and a low innodb_open_files value.
  * Fixed a regression that caused individual partition backups to fail
    when used with --include option in innobackupex or the --tables
    option in xtrabackup.
  * innobackupex didn’t add the file-per-table setting for table-
    independent backups. Fixed by making XtraBackup auto-enable 
    innodb_file_per_table when the --export option is used.
  * Under some circumstances XtraBackup could fail on a backup prepare
    with innodb_flush_method=O_DIRECT. 
  * innobackupex did not pass the --tmpdir option to the xtrabackup 
    binary resulting in the server’s tmpdir always being used for 
    temporary files.
  * XtraBackup has improved the error reporting for unrecognized server
    versions.
  * innobackupex would fail when --no-lock and --rsync were used in 
    conjunction.
  * Fix a regression that caused xtrabackup_pid file to remain in the
    temporary dir after execution.
  * Unnecessary debug messages have been removed from the XtraBackup 
    output

-------------------------------------------------------------------
Thu Mar 14 22:40:24 UTC 2013 - andreas.stieger@gmx.de

- fix path of MySQL 5.5 xtrabackup binary [bnc#809505]

-------------------------------------------------------------------
Wed Mar 13 12:21:06 CET 2013 - pgajdos@suse.cz

- builds with automake 1.13
  * automake-1.13.patch

-------------------------------------------------------------------
Mon Jan 28 20:15:23 UTC 2013 - andreas.stieger@gmx.de

- fix SLE build
- suggest installation of qpress to uncompress backups created
  with optional --compress

-------------------------------------------------------------------
Thu Jan 24 21:33:56 UTC 2013 - andreas.stieger@gmx.de

- update to 2.0.5
- new features:
  + New option --defaults-extra-file to read options before the 
    standard defaults-file, e.g. for separate username/passwords
    crontab or a script somewhere in the system.
- bugs fixed:
  + In case of streaming backups, innobackupex would resume the 
    XtraBackup process and then wait for it to finish before 
    running UNLOCK TABLES. This caused database to be unnecessarily
    locked with FLUSH TABLES WITH READ LOCK. Innobackupex now waits
    only till log copying is finished to unlock the databases.
  + innobackupex error messages referencing the data directory 
    have been extended to show the path of the data directory
    mentioned in the error message.
  + Partitioned tables were not correctly handled by the 
    --databases, --include, --tables-file options of innobackupex,
    and by the --tables and --tables-file options of XtraBackup.
  + When built-in compression was used, XtraBackup was doing 
    unbuffered writes to the destination file or stream in very 
    small chunks which in return caused inefficient I/O.
  + Unnecessary long sleep() in innobackupex lead to FLUSH TABLES
    WITH READ LOCK taking too long.
  + If innobackupex would crash it would leave the xtrabackup_suspended
    file on the filesystem. This could then cause innobackupex to think
    XtraBackup has suspended itself the moment it started, and then when 
    XtraBackup actually does suspend itself, innobackupex would wait for
    it to end and wouldn’t re-remove the suspend file, leading to a wait
    deadlock.
  + innobackupex would fail to recognize MariaDB 5.2 and MariaDB 5.3
- add perl requirements for innobackupex for completeness

-------------------------------------------------------------------
Wed Dec  5 21:02:57 UTC 2012 - andreas.stieger@gmx.de

- update to 2.0.4
  + a regression introduced in XtraBackup 2.0.2 caused incremental
    backups to fail because the init parameter values were not 
    normalized to the values used inside InnoDB
  + a regression introduced in traBackup 2.0.2 didn’t take the 
    separate doublewrite tablespace into an account
  + XtraBackup was handling the separate doublewrite buffer file
    incorrectly. File path of the doublewrite buffer wasn’t added
    to the backup-my.cnf and after the restore old doublewrite buffer 
    file was used instead of one made during the prepare stage
  + XtraBackup now accepts the --innodb=force option, previously it 
    would throw an error if the option was set
  + Option safe-slave-backup wasn’t working correctly
  + In case safe-slave-backup-timeout was reached when using the 
    safe-slave-backup option, SQL_THREAD was left in stopped state 
    causing the slave thread to lag behind. This was fixed by 
    checking the initial SQL_THREAD state and starting it before 
    terminating with a timeout error and starting the SQL_THREAD 
    only if it was running initially.
  + In case of streaming backups, innobackupex would resume the 
    Xtrabackup process and then wait for it to finish before running 
    UNLOCK TABLES. This caused database to be unnecessarily locked 
    with FLUSH TABLES WITH READ LOCK. Innobackupex now waits only
    till log copying is finished to unlock the databases
  + XtraBackup would fail on --apply-log when filesystem didn’t 
    support Linux AIO
  + XtraBackup binary would ignore innodb_use_native_aio when it’s 
    specified either in my.cnf or as a command line option
  + XtraBackup would print a warning message during the prepare 
    stage about innodb_file_io_threads being deprecated, even if the
     variable wasn’t set
  + XtraBackup Galera tests can now be run concurrently

-------------------------------------------------------------------
Tue Oct  2 18:03:21 UTC 2012 - andreas.stieger@gmx.de

- update to 2.0.3
- new features:
  * innobackupex now supports new --move-back option that can be used 
    instead of --copy-back in case there isn’t enough free disk space 
    on the server to copy files. As this option removes backup files, 
    it must be used with caution.
- bug fixes:
  * Symlink for innobackupex-1.5.1 binary has been broken in the 
    previous version of XtraBackup.
  * XtraBackup 2.0.2 was not backwards compatible which caused 
    incremental backups created with previous versions to fail on 
    prepare.
  * Fix a regression that may potentially lead to a 5x increase in 
    disk space occupied by incremental backups.
  * Fix a regression which caused incorrect handling of compressed 
    tablespaces with the page size of 16K, that were created between
    the last full or incremental and the next incremental backup.
- packaging changes:
  * improve upgrade from generic packages

-------------------------------------------------------------------
Tue Aug 14 18:22:39 UTC 2012 - andreas.stieger@gmx.de

- update to 2.0.2
  * Fixed false positive test suite failures with grep 2.10
  * Incremental backup would fail if a tablespace was created 
    between full and incremental backups.
  * Assertion error in creating a compressed tablespace at delta 
    apply time has been fixed.
  * If the table was renamed after the full backup, but before the 
    incremental backup has been taken, incremental backups would 
    fail when being prepared.
  * When the variable innodb_log_block_size was set to 4096, backups 
    would fail in the prepare stage.
  * Additional incremental backup tests have been added for the 
    incremental backup data page copy.
- update percona-xtrabackup-2.0.2-nodoc.patch

-------------------------------------------------------------------
Sat Aug  4 08:55:08 UTC 2012 - andreas.stieger@gmx.de

- add xtrabackup-nodoc.sh to source package - removes documentation 
  from pristine upstream source packages when maintaining package.
  Not used during build or in binary package.

-------------------------------------------------------------------
Fri Aug  3 07:31:50 UTC 2012 - andreas.stieger@gmx.de

- remove documentation from MySQL and xtrabackup tarballs due to license

-------------------------------------------------------------------
Sat Jul  7 13:46:00 UTC 2012 - andreas.stieger@gmx.de

- update to 2.0.1:
  * After creating a full compressed backup, performing a
    compressed/uncompressed incremental backup would fail because
    xtrabackup_checkpoints was compressed. This has been fixed by
    omitting xtrabackup_checkpoints from compression, so that a full
    backup could be used for incremental backups without decompression.
  * --copy-back was copying compressed *.qp files as well. This has been
    fixed by skipping the compressed files while copying the data back. 
  * Streaming backups with --stream=tar would fail if the file size was
    bigger than 8GB. Fixed by changing the libarchive format from USTAR
    to restricted PAX which supports bigger file sizes.
  * innobackupex was  calling the tar utility unconditionally when
    streaming ib_lru_dump and xtrabackup_galera_info. Which led to a
    broken stream when the xbstream format was used.
  * when --compress was used together with --stream=tar, xtrabackup was
    silently creating a broken backup. Now it fails with an error
    instead, suggesting to either use xbstream, or don't use compression
    at all.
  * --safe-slave-backup was resulting in incorrect binlog info, because
    in some cases innobackupex confused the response from SHOW SLAVE
    STATUS with the one from SHOW MASTER STATUS.
  * xbstream would  sometimes fail while extracting the backup.
  * innodb_data_file_path was not written to backup-my.cnf, this was a
    regression introduced in previous version.
  * XtraBackup would fail to find the datadir when using mysqld_multi.
    This was fixed by adding new option --defaults-group, to both
    innobackupex and xtrabackup, now it can be specified which section
    of my.cnf to handle.
  * InnoDB tables with names containing: opt, par, CSV, MYD were backed
    up twice. These tables were backed up by xtrabackup binary and by
    innobackupex script. Regular expression for filtering database
    directory contents was fixed.
  * When run innobackupex with --apply-log, it was reading configuration
    from the server configuration file instead of backup-my.cnf in
    backup directory.
  * innobackupex could copy files to a wrong directory when merging an
    incremental backup to a full one.
  * Incremental backups were not working correctly with --stream=tar.
    This was fixed by making --incremental-lsn incompatible with
    --stream=tar. XtraBackup will fail with an error message suggesting
    to use --stream=xbstream.
  * innobackupex failed to copy-back backup if destination dir wasn't
    empty. Exceptions were added for my.cnf and master.inf` as
    XtraBackup doesn't backup those files, so it won't overwrite
    anything.
  * innobackupex --copy-back could skip some files when copying from a
    Windows filesystem mounted over NFS.
  * XtraBackup binary was leaking file descriptors on --backup. This was
    fixed by reusing the existing file descriptor so no leak occurs.
  * There were no source files in tar.gz archive for Percona XtraBackup
    2.0.0.
  * XtraBackup|binary could fail with the log block checksum mismatch"
    error when reading an partially written log block.
    
-------------------------------------------------------------------
Tue May 29 06:01:14 UTC 2012 - andreas.stieger@gmx.de

- cmake >= 2.6.3 is the actual minimum requirement, fixes 11.4

-------------------------------------------------------------------
Mon May 28 20:50:08 UTC 2012 - andreas.stieger@gmx.de

- remove HTML documentation in favour of online documentation
  to fix factory build, also simplifies license.
- require cmake >= 2.8.5 to catch this requirement in OBS earlier
  when building for SLE

-------------------------------------------------------------------
Wed Apr 25 18:44:01 UTC 2012 - andreas.stieger@gmx.de

- add mysql-5.1.59.tar.gz
- add mysql-5.5.17.tar.gz
- add .changes file
- build with RPM_OPT_FLAGS
- update project URL
- add HTML documentation built from source
- update to upstream 2.0.0:
 * Percona XtraBackup can now save Galera replication information while
   performing a backup when given the --galera-info option to innobackupex.
 * XtraBackup now supports compressed backups. These backups can be done in a
   parallel way, thus utilizing multiple CPU cores if needed. In previous
   versions, compression was only possible with streaming backups + external
   (usually single-threaded) compression utilities, which also had a number of
   other limitations (e.g. could not be used with parallel file copying, it was
   required to uncompress the entire backup to restore a single table).  
 * Percona XtraBackup now supports streaming incremental backups. In previous
   versions streaming backups were performed by the innobackupex script but
   incremental backups were done by the xtrabackup binary which calculated deltas
   by scanning data files. Which meant those two feature were mutually exclusive,
   i.e. one couldn’t do streaming incremental backups.  
 * As part of the backup, the LRU dump is now included as well. 
 * Support for compiling and running Percona XtraBackup against debug versions of 
   InnoDB. This is only for very advancedusers.
- For fixes included in previous releases, see
  http://www.percona.com/doc/percona-xtrabackup/release-notes.html

-------------------------------------------------------------------
Tue Jun  9 00:00:00 UTC 2009 - lenz@grimmer.com

- Update to version 0.7

-------------------------------------------------------------------
Thu Apr 30 00:00:00 UTC 2009 - lenz@grimmer.com

- Update to version 0.6

-------------------------------------------------------------------
Thu Apr  9 00:00:00 UTC 2009 - lenz@grimmer.com

- Initial package added to the openSUSE Build Service (Version 0.5)

-------------------------------------------------------------------
Fri Mar 13 00:00:00 UTC 2009 - Vadim Tkachenko

- initial release


