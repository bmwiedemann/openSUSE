--- a/libxnoise/BackgroundWorker/xnoise-worker.vala
+++ b/libxnoise/BackgroundWorker/xnoise-worker.vala
@@ -65,7 +65,7 @@ public class Xnoise.Worker : Object {
     
     
     public bool is_same_thread() {
-        return (void*)Thread.self<int>() == (void*)_thread;
+        return Thread.self<void*>() == (void*)_thread;
     }
     
     public enum Priority {
--- a/libxnoise/ExtraWidgets/AddMedia/xnoise-add-media-widget.vala
+++ b/libxnoise/ExtraWidgets/AddMedia/xnoise-add-media-widget.vala
@@ -199,8 +199,8 @@ private class Xnoise.AddMediaWidget : Gt
     }
     
     private void update_item_list() {
-        Gtk.Invisible w = new Gtk.Invisible();
-        Gdk.Pixbuf folder_icon = w.render_icon_pixbuf(Gtk.STOCK_DIRECTORY, IconSize.MENU);
+        Gtk.IconTheme icon_theme = Gtk.IconTheme.get_default();
+        Gdk.Pixbuf folder_icon = icon_theme.load_icon("folder", 16, 0);
         listmodel.clear();
         GLib.List<Item?> list = media_importer.get_media_folder_list();
         foreach(Item? i in list) {
--- a/libxnoise/ExtraWidgets/xnoise-tree-media-selector.vala
+++ b/libxnoise/ExtraWidgets/xnoise-tree-media-selector.vala
@@ -404,7 +404,11 @@ private class Xnoise.TreeMediaSelector :
             Value v;
             this.store.get_value(iter, Column.NAME, out v);
             if(v.get_string() == name) {
+#if VALA_0_36
+                this.store.remove(ref iter);
+#else
                 this.store.remove(iter);
+#endif
                 return true;
             }
             return false;
--- a/libxnoise/Parameter/xnoise-parameter.vala
+++ b/libxnoise/Parameter/xnoise-parameter.vala
@@ -37,7 +37,7 @@ public class Xnoise.Params : GLib.Object
     private static const string settings_int    = "settings_int";
     private static const string settings_double = "settings_double";
     private static const string settings_string = "settings_string";
-    private static HashTable<string,int>     ht_int;
+    private static HashTable<string,int?>    ht_int;
     private static HashTable<string,double?> ht_double;
     private static HashTable<string,string>  ht_string;
     private static bool inited = false;
@@ -50,7 +50,7 @@ public class Xnoise.Params : GLib.Object
         if(inited == true)
             return;
         IParams_implementers = new GLib.List<IParams>();
-        ht_int    = new GLib.HashTable<string,int>(str_hash, str_equal);
+        ht_int    = new GLib.HashTable<string,int?>(str_hash, str_equal);
         ht_double = new GLib.HashTable<string,double?>(str_hash, str_equal);
         ht_string = new GLib.HashTable<string,string>(str_hash, str_equal);
         read_all_parameters_from_file();
@@ -133,16 +133,16 @@ public class Xnoise.Params : GLib.Object
     //  GETTERS FOR THE HASH TABLE
     //Type bool
     public static bool get_bool_value(string key) {
-        int val = ht_int.lookup(key);
-        if(val!=0)
+        int? val = ht_int.lookup(key);
+        if(val!=null)
             return true;
         else
             return false;
     }
     //Type int
     public static int get_int_value(string key) {
-        int val = ht_int.lookup(key);
-        if(val!=0)
+        int? val = ht_int.lookup(key);
+        if(val!=null)
             return val;
         else
             return 0;
--- a/libxnoise/Player/xnoise-gst-player.vala
+++ b/libxnoise/Player/xnoise-gst-player.vala
@@ -907,7 +907,7 @@ public class Xnoise.GstPlayer : GLib.Obj
         if(!Gst.Video.is_video_overlay_prepare_window_handle_message(msg))
             return;
         var imagesink =(Gst.Video.Overlay)(msg.src);
-        imagesink.set_property("force-aspect-ratio", true);
+        ((GLib.Object)(imagesink)).set_property("force-aspect-ratio", true);
         imagesink.set_window_handle((uint*)(Gdk.X11Window.get_xid(videoscreen.get_window())));
     }
 
--- a/libxnoise/TrackList/xnoise-tracklist.vala
+++ b/libxnoise/TrackList/xnoise-tracklist.vala
@@ -1101,7 +1101,11 @@ public class Xnoise.TrackList : TreeView
                 removed_playing_title = true;
                 global.position_reference = null;
             }
+#if VALA_0_36
+            this.tracklistmodel.remove(ref it);
+#else
             this.tracklistmodel.remove(it);
+#endif
         }
         TreeIter iter;
         if(path_2.prev() && removed_playing_title) {
@@ -1131,7 +1135,11 @@ public class Xnoise.TrackList : TreeView
                 global.position_reference = null;
                 //global.reset_position_reference(); // set to null without *_changed signal
             }
+#if VALA_0_36
+            tracklistmodel.remove(ref iter);
+#else
             tracklistmodel.remove(iter);
+#endif
         }
         if(path_2.prev() && removed_playing_title) {
             tracklistmodel.get_iter(out iter, path_2);
--- a/libxnoise/Utils/xnoise-utilities.vala
+++ b/libxnoise/Utils/xnoise-utilities.vala
@@ -95,8 +95,7 @@ namespace Xnoise.Utilities {
             print("Failed to get xnoise directories! \n");
             var msg = new Gtk.MessageDialog(null, Gtk.DialogFlags.MODAL, Gtk.MessageType.ERROR,
                                             Gtk.ButtonsType.OK,
-                                            "Failed to get xnoise directories! \n",
-                                            null);
+                                            "Failed to get xnoise directories! \n");
             msg.run();
             return false;
         }
@@ -131,8 +130,7 @@ namespace Xnoise.Utilities {
             print("Failed to get xnoise directories! \n");
             var msg = new Gtk.MessageDialog(null, Gtk.DialogFlags.MODAL, Gtk.MessageType.ERROR,
                                             Gtk.ButtonsType.OK,
-                                            "Failed to get xnoise directories! \n",
-                                            null);
+                                            "Failed to get xnoise directories! \n");
             msg.run();
             return false;
         }
@@ -253,7 +251,8 @@ namespace Xnoise.Utilities {
         
         try {
             GLib.Regex r = new GLib.Regex("\n");
-            return (owned)r.replace(val, -1, 0, " ");
+            string result = r.replace(val, -1, 0, " ");
+            return (owned)result;
         }
         catch(GLib.RegexError e) {
             print("%s\n", e.message);
@@ -312,7 +311,8 @@ namespace Xnoise.Utilities {
     public static string replace_underline_with_blank_encoded(string value) {
         try {
             GLib.Regex r = new GLib.Regex("_");
-            return (owned)r.replace(value, -1, 0, "%20");
+            string result = r.replace(value, -1, 0, "%20");
+            return (owned)result;
         }
         catch(GLib.RegexError e) {
             print("%s\n", e.message);
