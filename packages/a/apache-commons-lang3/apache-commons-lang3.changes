-------------------------------------------------------------------
Tue Apr  1 07:10:28 UTC 2025 - Gus Kenion <gus.kenion@suse.com>

- Update to 3.17.0
  * New features:
    * RandomUtils.secure() now uses SecureRandom() instead of
      SecureRandom.getInstanceStrong().
    * RandomStringUtils.secure() now uses SecureRandom() instead of
      SecureRandom.getInstanceStrong().
    * Remove unused exception from deprecated
      StringUtils.toString(byte[], String).
    * Make RandomUtils.insecure() public.
    * Add RandomUtils.secureStrong().
    * Add RandomStringUtils.secureStrong().
    * Add CalendarUtils.toLocalDateTime(Calendar).
    * Add CalendarUtils.toLocalDateTime().
    * Add CalendarUtils.toZonedDateTime(Calendar).
    * Add CalendarUtils.toZonedDateTime().
    * Add CalendarUtils.toOffsetDateTime(Calendar).
    * Add CalendarUtils.toOffsetDateTime().
  * Fixed Bugs:
    * LANG-1760: Using RandomStringUtils.insecure() still leads to
      using the secure() random.
    * Deprecate static RandomUtils.next*() methods in favor or
      .secure() and .insecure() versions.
    * Deprecate static RandomStringUtils.random*() methods in favor
      or .secure() and .insecure() versions.
  * Changes:
    * Bump org.hamcrest:hamcrest from 2.2 to 3.0 #1255.
    * Bump org.easymock:easymock from 5.3.0 to 5.4.0 #1256.
    * Bump org.codehaus.mojo:exec-maven-plugin from 3.3.0 to 3.4.1
      #1262, #1264.
    * Bump org.apache.commons:commons-parent from 72 to 73 #1265.

-------------------------------------------------------------------
Fri Aug  9 09:54:03 UTC 2024 - Gus Kenion <gus.kenion@suse.com>

- Update to 3.16.0:
  * New features:
    + Add StopWatch.getSplitDuration() and deprecate
      getSplitTime().
    + Add StopWatch.getStartInstant() and deprecate getStartTime().
    + Add StopWatch.getStopInstant() and deprecate getStopTime().
    + Add StopWatch.getDuration() and deprecate getTime().
    + Add Javadoc links from StopWatch to DurationUtils #1249.
    + Add LangCollectors.collect(Collector, T...).
    + Add RandomStringUtils.secure().
    + Add RandomStringUtils.insecure().
  * Fixed bugs:
    + Reimplement StopWatch internals to use java.time.
    + RandomStringUtils.random() with a negative character index
      should throw IllegalArgumentException. Fixes LANG-1745.
    + LocaleUtils.toLocale(String) cannot parse four segments.
      Fixes LANG-1741.
    + Use fewer intermediary strings in
      DefaultExceptionContext.getFormattedExceptionMessage(String).
    + Fix Javadoc in StringUtils.splitPreserveAllTokens() #1251.
    + Deprecate ArraySort constructor for removal.
    + Deprecate CharEncoding constructor for removal.
    + Deprecate Conversion constructor for removal.
    + Deprecate Conversion constructor for removal.
    + Deprecate EntityArrays constructor for removal.
    + Deprecate ObjectToStringComparator constructor for removal.
    + Deprecate RuntimeEnvironment constructor for removal.
- Includes changes from 3.15.0:
  * New features:
    + Customize text pattern in DiffResult#toString(). Fixes
      LANG-1724.
    + Add DiffBuilder.Builder.
    + Add DiffBuilder.builder().
    + Add ReflectionDiffBuilder.Builder.
    + Add ReflectionDiffBuilder.builder().
    + Add test in TypeUtilsTest #1151.
    + Add Streams.failableStream(T), non-varargs variant.
    + Add Streams.nonNull(T), non-varargs variant.
    + Add ArrayUtils.nullTo(T[], T[]).
    + Add T ArrayUtils.arraycopy(T, int, T, int, int) fluent style.
    + Add T ArrayUtils.arraycopy(T, int, int, int, Function) fluent
      style.
    + Add SystemUtils.IS_JAVA_22.
    + Add JavaVersion.JAVA_22.
    + Add SystemProperties.getUserName(Supplier<String>).
    + Add SystemProperties.getLineSeparator(Supplier<String>).
    + Add
    + SystemProperties.getJavaSpecificationVersion(Supplier<String>).
    + Add SystemProperties constants and methods for system
      properties as of Java 22.
    + Add MethodUtils.getMethodObject(Class, String, Class...).
    + Add null-safe Consumers.accept() and Functions.apply() #1215.
      Fixes LANG-1733.
    + Add SystemUtils.IS_OS_ANDROID.
    + Add SystemUtils.IS_OS_MAC_OSX_SONOMA.
    + Add RuntimeEnvironment.inContainer() #1241.
    + Add AppendableJoiner and refactor string joining #1244.
  * Fixed bugs:
    + Improve Javadoc in ExceptionUtils #1136.
    + Fixed two non-deterministic tests in EnumUtilsTest.java
      #1131.
    + Fix wrong number check that cause
      StringIndexOutOfBoundsException #1140. Fixes LANG-1721.
    + Rethrow NegativeArraySizeException as SerializationException
      in SerializationUtils.deserialize(InputStream) #1141. Fixes
      LANG-1722.
    + Throw NumberFormatException instead of
      IndexOutOfBoundsException in NumberUtils.getMantissa(String,
      int) #1145. Fixes LANG-1723.
    + Minor grammar fixes #1143.
    + ArrayUtils will return null when adding two null arrays, but
      undocumented. Fixes LANG-1713.
    + Let parent POM figure out commons.spdx.version.
    + Undeprecate ExceptionUtils.rethrow(Throwable). Fixes
      LANG-1726.
    + Test the Conversion class #1155. Fixes LANG-1702.
    + Address minor redundancies after code inspection #1148.
    + Allow EventListenerSupport to handle (and ignore) exception
      from listeners allowing invocation of all listeners #1167.
    + Deprecate AnnotationUtils 0-argument constructor.
    + Deprecate ArchUtils 0-argument constructor.
    + Deprecate ArrayUtils 0-argument constructor.
    + Deprecate BooleanUtils 0-argument constructor.
    + Deprecate CharSequenceUtils 0-argument constructor.
    + Deprecate CharSetUtils 0-argument constructor.
    + Deprecate CharUtils 0-argument constructor.
    + Deprecate ClassLoaderUtils 0-argument constructor.
    + Deprecate ClassPathUtils 0-argument constructor.
    + Deprecate ClassUtils 0-argument constructor.
    + Deprecate ConstructorUtils 0-argument constructor.
    + Deprecate DateFormatUtils 0-argument constructor.
    + Deprecate DateUtils 0-argument constructor.
    + Deprecate Diff.getType().
    + Deprecate DiffBuilder.DiffBuilder(T, T, ToStringStyle).
    + Deprecate DiffBuilder.DiffBuilder(T, T, ToStringStyle,
      boolean).
    + Deprecate DurationFormatUtils 0-argument constructor.
    + Deprecate DurationUtils 0-argument constructor.
    + Deprecate EnumUtils 0-argument constructor.
    + Deprecate EventUtils 0-argument constructor.
    + Deprecate FieldUtils 0-argument constructor.
    + Deprecate IEEE754rUtils 0-argument constructor.
    + Deprecate InheritanceUtils 0-argument constructor.
    + Deprecate IntStreams 0-argument constructor.
    + Deprecate LocaleUtils 0-argument constructor.
    + Deprecate LockingVisitors 0-argument constructor.
    + Deprecate MemberUtils 0-argument constructor.
    + Deprecate MethodUtils 0-argument constructor.
    + Deprecate NumberUtils 0-argument constructor.
    + Deprecate ObjectUtils 0-argument constructor.
    + Deprecate RandomStringUtils 0-argument constructor.
    + Deprecate RandomUtils 0-argument constructor.
    + Deprecate ReflectionDiffBuilder.ReflectionDiffBuilder(T, T,
      ToStringStyle).
    + Deprecate RegExUtils 0-argument constructor.
    + Deprecate SerializationUtils 0-argument constructor.
    + Deprecate Streams 0-argument constructor.
    + Deprecate StringEscapeUtils 0-argument constructor.
    + Deprecate StringUtils 0-argument constructor.
    + Deprecate Suppliers 0-argument constructor.
    + Deprecate SystemProperties 0-argument constructor.
    + Deprecate ThreadUtils 0-argument constructor.
    + Deprecate TypeUtils 0-argument constructor.
    + Make ArrayFill null-safe.
    + Make ArraySorter null-safe.
    + Make ArrayUtils.removeAll() null-safe.
    + Fix Java version in README.md #1170.
    + StringUtils.stripAccents() should handle ligatures, UTF32
      math blocks, etc. #1201.
    + TypeUtils.toString(Type) StackOverflowError for an inner
      class in the inner class parameterized enclosing class #657.
      Fixes LANG-1524.
    + Deprecate SystemUtils.getUserName(String) in favor of
      SystemProperties.getUserName(Supplier).
    + Make LockVisitor.acceptReadLocked(FailableConsumer)
      null-safe.
    + Make LockVisitor.applyWriteLocked(FailableConsumer)
      null-safe.
    + Make ObjectUtils.getFirstNonNull(Supplier...) null-safe.
    + Make SystemProperties.getLineSeparator(Supplier).
    + StringUtils.stripAccents(String) doesn't handle "\u0111" and
      "\u0110" (Vietnamese) #1216.
    + StringUtils.stripAccents(String) doesn't handle I with bar.
    + StringUtils.stripAccents(String) doesn't handle U with bar.
    + StringUtils.stripAccents(String) doesn't handle T with
      stroke.
    + Fix Javadoc for FluentBitSet.setInclusive(int, int) #1222.
      Fixes LANG-1735.
    + Same Javadoc changes as [TEXT-234] #1223.
    + Remove duplicate static data in
      SerializationUtils.ClassLoaderAwareObjectInputStream.
    + Reimplement RandomUtils and RandomStringUtils on top of
      SecureRandom#getInstanceStrong() #1235.
    + DiffBuilder: Type constraint for method append(...,
      DiffResult) too strict #786. Fixes LANG-1657.

-------------------------------------------------------------------
Tue May 14 12:36:22 UTC 2024 - Fridrich Strba <fstrba@suse.com>

- Update to 3.14.0:
  * New features:
    + Add Functions#function(Function).
    + Add FailableFunction#function(FailableFunction).
    + Add CalendarUtils.getInstance().
    + Add syntax for optional tokens to DurationFormatUtils.
    + Add ArrayFill.
    + Add FastDateParser.TimeZoneStrategy.TzInfo.toString().
    + Add LocaleUtils.isLanguageUndetermined(Locale).
    + Add ObjectUtils.toString(Supplier<Object>, Supplier<String>).
    + Add LazyInitializer.isInitialized().
    + Add ConcurrentInitializer#isInitialized() #1120.
    + Add Streams.failableStream(T...).
    + Add FailableSupplier.nul().
    + Add Suppliers.nul().
    + Add ExceptionUtils.throwUnchecked(T) where T extends
      Throwable, and deprecate Object version.
    + Add ExceptionUtils.rethrowRuntimeException(T), and deprecate
      rethrow(T).
    + ConcurrentInitializer implementations can now be instantiated
      and configured with allocation and release lambdas.
      Fixes LANG-1716.
    + Add support for RISC-V in ArchUtils #1128. Fixes LANG-1717.
  * Fixed bugs:
    + Rename variable names from 'clss' to 'clazz'.
    + [Javadoc] ComparableUtils'c1' to 'comparable1', 'c2' to
      'comparable2'
    + [Javadoc] Remove 2.1 specific comment #1091.
    + [Javadoc] Fix Incorrect Description in Processor isAarch64()
      #1093. Fixes LANG-1704.
    + [Javadoc] Point to right getShortClassName flavor in Javadoc
      for relevant notes #1097.
    + Improve performance of StringUtils.isMixedCase().
    + ThreadUtils find methods should not return null items. Fixes
      LANG-1706.
    + ReflectionToStringBuilder changes in version 3.13.0 has broken
      the logic for overriding classes. Fixes LANG-1710.
    + Return "null" instead of NPE in
      ClassLoaderUtils.toString(ClassLoader).
    + Return "null" instead of NPE in
      ClassLoaderUtils.toString(URLClassLoader).
    + Return ToStringStyle.nullText instead of NPE for
      ReflectionToStringBuilder.toString().
    + Fix ThresholdCircuitBreaker#checkState().
    + Use ConcurrentInitializer implementations without subclassing.
    + Update critical value for chi-square test.
    + Fix Javadoc syntax errors #1129.
- From 3.13.0 update
  * New features:
    + Add GitHub coverage.yml.
    + Add EnumUtils.getEnumSystemProperty(...).
    + Add TriConsumer.
    + Add and use EnumUtils.getFirstEnumIgnoreCase(Class, String,
      Function, E).
    + Add and use Suppliers.
    + Add and use ArrayUtils.getComponentType(T[]).
    + Add and use ClassUtils.getComponentType(Class>T[]>).
    + Add and use ObjectUtils.getClass(T).
    + Add and use ArrayUtils.newInstance(Class>T>, int).
    + Add and use null-safe Streams.of(T...).
    + Add ClassUtils.comparator().
    + Add and use ThreadUtils.sleepQuietly(Duration).
    + Add and use ArrayUtils.setAll(T[], IntFunction).
    + Add and use ArrayUtils.setAll(T[], Supplier).
    + Add BooleanConsumer.
    + Add IntToCharFunction.
    + Add IntStreams.
    + Add UncheckedFuture.
    + Add UncheckedException.
    + Add UncheckedExecutionException.
    + Add UncheckedTimeoutException.
    + Add UncheckedInterruptedException.
    + Add TimeZones.GMT.
    + Add ObjectUtils.identityHashCodeHex(Object).
    + Add ObjectUtils.hashCodeHex(Object).
    + Add StringUtils.removeStart(String, char).
    + Add null-safe ObjectUtils.isArray(). Fixes LANG-1659.
    + Add ComparableUtils.max(A, A) and ComparableUtils.min(A, A).
    + Add UncheckedReflectiveOperationException.
    + Add and use ClassUtils.isPublic(Class).
    + Add UncheckedIllegalAccessException.
    + Add MethodInvokers.
    + Add Streams.nullSafeStream(Collection).
    + Add Streams.toStream(Collection).
    + Add Streams.failableStream(Collection) and deprecate misnamed
      stream(Collection).
    + Add Streams.failableStream(Stream) and deprecate misnamed
      stream(Stream).
    + Add EnumUtils.getEnumMap(Class, Function).
    + Add FluentBitSet.
    + Add Streams.instancesOf(Class, Collection).
    + Add ImmutablePair.ofNonNull(L, R).
    + Add ImmutableTriple.ofNonNull(L, M, R).
    + Add MutablePair.ofNonNull(L, R).
    + Add MutableTriple.ofNonNull(L, M, R).
    + Add Pair.ofNonNull(L, R).
    + Add Triple.ofNonNull(L, M, R).
    + Add ArrayUtils.containsAny(Object[], Object...).
    + Add Processor.Type.AARCH_64.
    + Add Processor.isAarch64().
    + Update ArchUtils.getProcessor(String) for "aarch64".
    + Add JavaVersion.JAVA_18.
    + Add JavaVersion.JAVA_19.
    + Add JavaVersion.JAVA_20.
    + Add JavaVersion.JAVA_21.
    + Add TimeZones.toTimeZone(TimeZone).
    + Add FutureTasks.
    + Add Memoizer(Function) and Memoizer(Function, boolean).
    + Add Consumers.
    + Add github/codeql-action.
    + Add coverage.yml.
    + Add DurationUtils.since(Temporal).
    + Add DurationUtils.of(FailableConsumer|FailableRunnbale).
    + Add ExceptionUtils.forEach(Throwable, Consumer<Throwable>).
    + Add ExceptionUtils.stream(Throwable).
    + Add ExceptionUtils.getRootCauseStackTraceList(Throwable).
    + Add SystemUtils.IS_OS_WINDOWS_11.
    + Add SystemUtils.IS_JAVA_16.
    + Add SystemUtils.IS_JAVA_17.
    + Add SystemUtils.IS_JAVA_18.
    + Add SystemUtils.IS_JAVA_19.
    + Add SystemUtils.IS_JAVA_20.
    + Add SystemUtils.IS_JAVA_21.
    + Add ArrayUtils.oneHot(). Fixes LANG-1627.
    + Let ReflectionToStringBuilder only reflect given field names.
      Fixes LANG-1662.
    + Add Streams.of(Enumeration<E>).
    + Add Streams.of(Iterable<E>).
    + Add Streams.of(Iterator<E>).
    + Simple support for Optional in ObjectUtils#isEmpty(). Fixes
      LANG-1689.
    + Add Processor.Type.getLabel().
    + Add Processor.toString().
    + Add HashCodeBuilder.equals(Object).
    + Add BooleanUtils.values() and forEach().
    + Add ClassPathUtils.packageToPath(String) and pathToPackage(String)
    + Add CalendarUtils#getDayOfYear()
    + Add NumberRange, DoubleRange, IntegerRange, LongRange.
    + Add missing exception javadoc/tests for some null arguments.
    + Add ClassLoaderUtils.getSystemURLs() and getThreadURLs().
    + Add RegExUtils.dotAll() and dotAllMatcher().
    + Add Pair.accept(FailableBiConsumer).
    + Add Pair.apply(FailableBiFunction).
    + Add ReflectionDiffBuilder.setExcludeFieldNames(...) and
      DiffExclude a... Fixes LANG-1677.
    + Add and ExceptionUtils.isChecked() and isUnchecked(). Fixes
      LANG-1647.
    + Add and use ExceptionUtils.throwUnchecked(throwable).
    + Add LockingVisitors.create(O, ReadWriteLock).
  * Fixed bugs:
    + NumberUtils.createNumber() to recognize hex integers prefixed
      with +. Fixes LANG-1645.
    + NumberUtils.createNumber() to return requested floating point
      type for zero. Fixes LANG-1646.
    + DMI: Random object created and used only once
      (DMI_RANDOM_USED_ONLY_ONCE); Better multi-threaded behavior.
    + Redundant Collection operation. Use
      Collections.emptyIterator(). Fixes LANG-1646.
    + Make Streams.stream(Collection) null-safe.
    + Allow tests to access java.util classes such as ArrayList in
      Java 16. Fixes LANG-1667.
    + OpenJDK 16 Day Period Parsing. Fixes LANG-1669.
    + Update documentation to list correct exception for null array
      parameters. Fixes LANG-1663.
    + Fixing reversed Javadoc descriptions in StopWatch.
    + Fix typos in JavaDoc. Fixes LANG-1670.
    + Simplify assertions with equivalent but more simple..
    + Avoid multiple equivalent occurrences of the same expression.
    + Remove redundant initializers.
    + Fix ObjectUtils Javadocs.
    + Make Range constructors more generic. Fixes LANG-1674.
    + Use final and Remove redundant String.
    + Use Set instead of List for checking the contains() method.
    + Javadoc for StringUtils.substringBefore(String str,
      int separator) doesn't mention that the separator is an int.
    + Fix NullPointerException in ThreadUtils.getSystemThreadGroup()
      when the current thread is stopped.
    + ArrayUtils.toPrimitive(Boolean...) null array elements map to
      false, like Boolean.parseBoolean(null) and its callers return
      false.
    + StrBuilder.StrBuilderReader.skip(long): Throw an exception
      when an implicit narrowing conversion in a compound assignment
      would result in information loss or a numeric error such as an
      overflows.
    + Deprecate Validate#notNull(Object) in favor of using
      Objects#requireNonNull(Object, String).
    + Use TimeZone from calendar in DateFormatUtils. Fixes
      LANG-1462.
    + Updating javadoc for NullPointerException when
      Validate.notNull() is called.
    + Fixing and adding DateUtils exception Javadocs.
    + Improve performance of StringUtils.unwrap(String, String).
      Fixes LANG-1679.
    + Improve performance of StringUtils.join for primitives. Fixes
      LANG-1675.
    + Fixed NPE getting Stack Trace if Throwable is null. Fixes
      LANG-1675.
    + Make Validate.isAssignableFrom() check null inputs.
    + Fix Javadoc for Validate.isAssignableFrom().
    + Make final mappingFunction variable.
    + Remove unnecessary variable creations.
    + Minor changes.
    + FastDateFormat does not support the 'L'-Pattern from
      SimpleDateFormat. Fixes LANG-1680.
    + Increase test coverage of ComparableUtils from 71% to 100%.
    + Increase method test coverage of
      MultilineRecursiveToStringStyle.
    + Fix unstable coverage of CharSequenceUtils tests noticed
      during merge of PRs 898 and 899.
    + Rewrite Conversion.binaryBeMsb0ToHexDigit to invert logic of
      binaryToHexDigit.
    + Allow extension of previously final classes ImmutablePair and
      ImmutableTriple.
    + Update ClassUtils Javadoc with some missing throws NPE.
    + Javadoc: StringUtils.repeat("", "x", 3) = "xx";.
    + StringUtils.join(Iterable, String) should only return null
      when the Iterable is null.
    + Add tests to increase coverage.
    + Extends Object clauses are redundant.
    + Simplify conditional expression..
    + Fix some Javadoc comments.
    + Deprecate getNanosOfMiili() method with typo and create proper
      getNanosOfMilli().
    + Deprecate ThreadUtils code that defines custom function
      interfaces in favor of stock java.util.function.Predicate
      usage.
    + Fix links in Javadoc and documentation.
    + Deprecate RandomUtils in favor of Apache Commons RNG
      UniformRandomProvider. Fixes LANG-1604.
    + Added docs regarding week year support. Fixes LANG-1638.
    + ClassUtils.getShortCanonicalName doesn't use the
      canonicalName. Fixes LANG-1691.
    + Validate: Get error messages without using String.format when
      varargs is empty.
    + Simplify expression (length is never < 0).
    + Fix simple broken javadoc..
    + Fix typo.
    + Use Objects.requireNonNull() directly.
    + MethodUtils.getMatchingMethod() fails with "Found multiple
      candidates". Fixes LANG-1694.
    + Construct ArrayList with better default size. Fixes LANG-1643.
    + ThreadUtilsTest#testThreadGroups will test failed when using
      Junit5 parallel test.
    + Swap the order of assertion args (first excepted then actual).
    + Fix the comment of Failable, redundant "-".
    + Fix the comment of ComparableUtils, using "smallest", not
      "largest".
    + AnnotationUtilsTest and FormattableUtilsTest Only use static
      imports to import assert methods in tests.
    + [LANG-1681] Fix some FieldUtils Javadocs.
    + Remove unnecessary statement in DurationFormatUtils.
    + Corrected value of SystemUtils.JAVA_VENDOR. Fixes LANG-1699.
    + [StepSecurity] ci: Harden GitHub Actions.
    + Update Javadoc for the insert methods in ArrayUtils.
    + Deprecate ExceptionUtils.ExceptionUtils().
    + TypeUtils.getRawType() throws a NullPointerException on
      Wildcard GenericArrayType. Fixes LANG-1697.
    + Throw IllegalArgumentException instead of InternalError in the
      builder package.
    + Avoid NPE in MutableObject#equals() for null content.
    + SystemUtils fix and updates related to macOS.

-------------------------------------------------------------------
Wed Aug 30 20:57:36 UTC 2023 - Fridrich Strba <fstrba@suse.com>

- Break cycle with the new bcel
- Removed patch:
  * apache-commons-lang3-junit-bom.patch
    + not needed since we install the pom file using the new
      %%mvn_install_pom macro which sanitizes the pom file to the
      bare runtime dependencies.

-------------------------------------------------------------------
Wed Dec 29 15:18:48 UTC 2021 - Pedro Monreal <pmonreal@suse.com>

- Remove the junit bom dependency for now as it breaks the build of
  other packages like log4j.
  * Add apache-commons-lang3-junit-bom.patch

-------------------------------------------------------------------
Wed Dec 29 12:49:05 UTC 2021 - David Anes <david.anes@suse.com>

- Fix component version in default.properties to 3.12 

-------------------------------------------------------------------
Fri Dec 24 14:28:12 UTC 2021 - David Anes <david.anes@suse.com>

- Updated download URL.
- Update to 3.12.0:
  - New features:
    * Add BooleanUtils.booleanValues().
    * Add BooleanUtils.primitiveValues().
    * Add StringUtils.containsAnyIgnoreCase(CharSequence, CharSequence...).
    * Add StopWatch.getStopTime().
    * More test coverage for CharSequenceUtils.
    * Add fluent-style ArraySorter.
    * Add and use LocaleUtils.toLocale(Locale) to avoid NPEs. 
    * Add FailableShortSupplier, handy for JDBC APIs. 
    * Add JavaVersion.JAVA_17. 
    * Add missing boolean[] join method.
    * Add StringUtils.substringBefore(String, int). 
    * Add Range.INTEGER. 
    * Add DurationUtils. 
    * Introduce the use of @Nonnull, and @Nullable, and the Objects class as a helper tool.
    * Add and use true and false String constants.
    * Add and use ObjectUtils.requireNonEmpty().

  - Fixed Bugs:
    * Correct implementation of RandomUtils.nextLong(long, long). 
    * Restore handling of collections for non-JSON ToStringStyle.
    * ContextedException Javadoc add missing semicolon.
    * Resolve JUnit pioneer transitive dependencies using JUnit BOM.
    * NumberUtilsTest - incorrect types in min/max tests.
    * Improve StringUtils.stripAccents conversion of remaining accents.
    * StringUtils.countMatches - clarify Javadoc.
    * Remove redundant argument from substring call.
    * BigDecimal is created when you pass it the min and max values.
    * ArrayUtils.contains() and indexOf() fail to handle Double.NaN.
    * ArrayUtils contains() and indexOf() fail to handle Float.NaN.
    * Fix potential NPE in TypeUtils.isAssignable(Type, ParameterizedType, Map, Type>).
    * TypeUtils.isAssignable returns wrong result for GenericArrayType and ParameterizedType.
    * testGetAllFields and testGetFieldsWithAnnotation sometimes fail.
    * Fix Javadoc for SystemUtils.isJavaVersionAtMost().
    * Fix StringUtils.unwrap throws StringIndexOutOfBoundsException.
    * Fix formatting of isAnyBlank() and isAnyEmpty().
    * TypeUtils. containsTypeVariables does not support GenericArrayType.
    * Javadoc of some methods incorrectly refers to another method.
    * Refine StringUtils.lastIndexOfIgnoreCase.
    * Refine StringUtils.abbreviate.
    * Refine StringUtils.isNumericSpace.
    * Refine StringUtils.deleteWhitespace.
    * Correction in Javadoc of some methods.
    * Javadoc for RandomStringUtils.random() letters, numbers parameters is wrong.
    * Correct markup in Javadoc for unbalanced braces.
    * MethodUtils.invokeMethod NullPointerException in case of null in args list.
    * Fix 2 digit week year formatting.
    * Fix broken Javadoc links to commons-text.
    * Add and use ThreadUtils.sleep(Duration).
    * Add and use ThreadUtils.join(Thread, Duration).
    * Add ObjectUtils.wait(Duration).

  - Changes:
    * ArrayUtils.toPrimitive(Object) does not support boolean and other types.
    * Enable Dependabot.
    * Bump junit-jupiter from 5.6.2 to 5.7.0.
    * Bump spotbugs from 4.1.2 to 4.2.1.
    * Bump spotbugs-maven-plugin from 4.0.0 to 4.2.0.
    * Bump biz.aQute.bndlib from 5.1.1 to 5.3.0.
    * Bump junit-pioneer from 0.6.0 to 1.1.0.
    * Bump checkstyle from 8.34 to 8.40.
    * Bump actions/checkout from v2.3.1 to v2.3.4.
    * Bump actions/setup-java from v1.4.0 to v1.4.2.
    * Update commons.jacoco.version 0.8.5 to 0.8.6 (Fixes Java 15 builds).
    * Update maven-surefire-plugin 2.22.2 -> 3.0.0-M5. 
    * Bump maven-pmd-plugin from 3.13.0 to 3.14.0.
    * Bump jmh.version from 1.21 to 1.27.
    * Update commons.japicmp.version 0.14.3 -> 0.15.2.
    * Processor.java: check enum equality with == instead of .equals() method.
    * Bump junit-pioneer from 1.1.0 to 1.3.0.
    * Bump maven-checkstyle-plugin from 3.1.1 to 3.1.2.
    * Bump actions/cache from v2 to v2.1.4.
    * Bump junit-bom from 5.7.0 to 5.7.1. 
    * Minor Improvements.
    * Minor Improvement: Add final variable.try to make the code read-only.
    * Minor Improvement: Remove redundant initializer.
    * Use own validator ObjectUtils.anyNull to check null String input.

- From 3.11 Update:
  - New features:
    * Add ArrayUtils.isSameLength() to compare more array types.
    * Added the Locks class as a convenient possibility to deal with locked objects.
    * Add to Functions: FailableBooleanSupplier, FailableIntSupplier, FailableLongSupplier, FailableDoubleSupplier, and so on.
    * Add ArrayUtils.get(T[], index, T) to provide an out-of-bounds default value.
    * Add JavaVersion enum constants for Java 14 and 15.
    * Add JavaVersion enum constants for Java 16.
    * Use Java 8 lambdas and Map operations.
    * Change removeLastFieldSeparator to use endsWith.
    * Change a Pattern to a static final field, for not letting it compile each time the function invoked.
    * Add ImmutablePair factory methods left() and right().
    * Add ObjectUtils.toString(Object, Supplier<String>).
    * Add org.apache.commons.lang3.StringUtils.substringAfter(String, int).
    * Add org.apache.commons.lang3.StringUtils.substringAfterLast(String, int).

  - Fixed Bugs:
    * Fix Javadoc for StringUtils.appendIfMissingIgnoreCase().
    * Refine Javadoc.
    * Fix typos
    * Ignored exception `ignored`, should not be called so.
    * StringUtils.replaceEachRepeatedly gives IllegalStateException.
    * [JSON string for maps] ToStringBuilder.reflectionToString doesnt render nested maps correctly.
    * Correct Javadocs of methods that use Validate.notNull() and replace some uses of Validate.isTrue() with Validate.notNull().
    * Add allNull() and anyNull() methods to ObjectUtils.

  - Changes:
    * Refine test output for FastDateParserTest
    * CharSequenceUtils.lastIndexOf : remake it
    * remove encoding and docEncoding and use inherited values from commons-parent
    * Simplify null checks in Pair.hashCode() using Objects.hashCode().
    * Simplify null checks in Triple.hashCode() using Objects.hashCode().
    * Simplify some if statements in StringUtils.
    * Simplify a null check in the private replaceEach() method of StringUtils.
    * Replace some usages of the ternary operator with calls to Math.max() and Math.min().
    * (Javadoc) Fix return tag for throwableOf*() methods.
    * CharSequenceUtils.regionMatches is wrong dealing with Georgian.
    * Optimize ArrayUtils::isArrayIndexValid method.
    * Use List.sort instead of Collection.sort.
    * Use StandardCharsets.UTF_8.
    * Use Collections.singletonList insteadof Arrays.asList when there be only one element.
    * Change array style from `int a[]` to `int[] a`.
    * Change from addAll to constructors for some List.
    * Simplify if as some conditions are covered by others.
    * Fixed Javadocs for setTestRecursive().
    * ToStringBuilder.reflectionToString - Wrong JSON format when object has a List of Enum.
    * Make org.apache.commons.lang3.CharSequenceUtils.toCharArray(CharSequence) public.
    * org.apache.commons:commons-parent 50 -> 51.
    * org.junit-pioneer:junit-pioneer 0.5.4 -> 0.6.0.
    * org.junit.jupiter:junit-jupiter 5.6.0 -> 5.6.2.
    * com.github.spotbugs:spotbugs 4.0.0 -> 4.0.6.
    * com.puppycrawl.tools:checkstyle 8.29 -> 8.34.
    * commons.surefire.version 3.0.0-M4 -> 3.0.0-M5..

- From 3.10 Update:
  - New features:
    * Add ExceptionUtils.throwableOfType(Throwable, Class) and friends.
    * Add EMPTY_ARRAY constants to classes in org.apache.commons.lang3.tuple.
    * Add null-safe StringUtils APIs to wrap String#getBytes([Charset|String]).
    * Add zero arg constructor for org.apache.commons.lang3.NotImplementedException.
    * Add ArrayUtils.addFirst() methods.
    * Add Range.fit(T) to fit a value into a range.
    * Added Functions.as*, and tests thereof, as suggested by Peter Verhas
    * Add getters for lhs and rhs objects in DiffResult.
    * Generify builder classes Diffable, DiffBuilder, and DiffResult.
    * Add ClassLoaderUtils with toString() implementations.
    * Add null-safe APIs as StringUtils.toRootLowerCase(String) and StringUtils.toRootUpperCase(String).
    * Add org.apache.commons.lang3.time.Calendars.
    * Add EnumUtils getEnum() methods with default values.
    * Added indexesOf methods and simplified removeAllOccurences.
    * Add support of lambda value evaluation for defaulting methods.
    * Add factory methods to Pair classes with Map.Entry input.
    * Add StopWatch convenience APIs to format times and create a simple instance.
    * Allow a StopWatch to carry an optional message.
    * Add ComparableUtils.
    * Add org.apache.commons.lang3.SystemUtils.getUserName().
    * Add ObjectToStringComparator.
    * Add org.apache.commons.lang3.arch.Processor.Arch.getLabel().
    * Add IS_JAVA_14 and IS_JAVA_15 to org.apache.commons.lang3.SystemUtils.
    * ObjectUtils: Get first non-null supplier value.
    * Added the Streams class, and Functions.stream() as an accessor thereof.

  - Fixed Bugs:
    * Make test more stable by wrapping assertions in hashset.
    * Generate Javadoc jar on build.
    * Trivial: year of release for 3.9 says 2018, should be 2019.
    * Use synchronize on a set created with Collections.synchronizedSet before iterating.
    * StringUtils.unwrap incorrect throw StringIndexOutOfBoundsException.
    * StringIndexOutOfBoundsException in StringUtils.replaceIgnoreCase.
    * StringUtils.removeIgnoreCase("?a", "a") throws IndexOutOfBoundsException.
    * Corrected usage examples in Javadocs.
    * StringUtils abbreviate returns String of length greater than maxWidth.
    * Test may fail due to a different order of fields returned by reflection api.
    * Sort fields in ReflectionToStringBuilder for deterministic order.
    * MethodUtils will throw a NPE if invokeMethod() is called for a var-args method.
    * MethodUtils.getAnnotation() with searchSupers = true does not work if super is generic.

  - Changes:
    * Remove redundant if statements in join methods.
    * commons.japicmp.version 0.13.1 -> 0.14.1.
    * junit-jupiter 5.5.0 -> 5.5.1.
    * junit-jupiter 5.5.1 -> 5.5.2.
    * Improve Javadoc based on the discussion of the GitHub PR.
    * maven-checkstyle-plugin 3.0.0 -> 3.1.0.
    * Update documentation related to the issue LANG-696.
    * AnnotationUtils little cleanup.
    * Update test dependency: org.easymock:easymock 4.0.2 -> 4.1.
    * Update test dependency: org.hamcrest:hamcrest 2.1 -> 2.2.
    * Update test dependency: org.junit-pioneer:junit-pioneer 0.3.0 -> 0.4.2.
    * Update build dependency: com.puppycrawl.tools:checkstyle 8.18 -> 8.27.
    * Update POM parent: org.apache.commons:commons-parent 48 -> 50.
    * BooleanUtils Javadoc.
    * Functions Javadoc.
    * org.easymock:easymock 4.1 -> 4.2.
    * org.junit-pioneer:junit-pioneer 0.4.2 -> 0.5.4.
    * org.junit.jupiter:junit-jupiter 5.5.2 -> 5.6.0.
    * Use Javadoc {@code} instead of pre tags.
    * ExceptionUtilsTest to 100%.
    * Reuse own code in Functions.java.
    * Avoid unnecessary allocation in StringUtils.wrapIfMissing.
    * Internally use Validate.notNull(foo, ...) instead of Validate.isTrue(foo != null, ...).
    * Add 1 and 0 in toBooleanObject(final String str).
    * Remove an redundant argument check in NumberUtils.
    * Deprecate org.apache.commons.lang3.ArrayUtils.removeAllOccurences(*) for org.apache.commons.lang3.ArrayUtils.removeAllOccurrences(*).

-------------------------------------------------------------------
Fri Apr 23 20:23:47 UTC 2021 - Ferdinand Thiessen <rpm@fthiessen.de>

- Fixed SPEC file: Replaced broken URL
- Update to 3.9
  * Requires jdk >= 1.8
  * Fixed issues with java 12
  * Add more SystemUtils.IS_JAVA_XX variants
  * Adding the Functions class
  * Add @FunctionalInterface to ThreadPredicate and ThreadGroupPredicate
  * Add isEmpty method to ObjectUtils
  * null-safe StringUtils.valueOf(char[]) to delegate to
    String.valueOf(char[]).
  * Add API org.apache.commons.lang3.SystemUtils.isJavaVersionAtMost(JavaVersion)
  * Consolidate the StringUtils equals and equalsIgnoreCase

-------------------------------------------------------------------
Tue Feb 16 19:47:33 UTC 2021 - Fridrich Strba <fstrba@suse.com>

- Add OSGi manifest

-------------------------------------------------------------------
Mon Mar 25 17:41:59 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Remove pom parent, since we don't use it when not building with
  maven

-------------------------------------------------------------------
Mon Feb  4 06:21:14 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Clean-up the spec file and install less jar symlinks

-------------------------------------------------------------------
Mon Oct 22 10:24:43 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Build commons-lang3-3.8.1 using modified build.xml and
  default.properties from 3.4.
- Removed patch:
  * commons-lang3-3.4-javadoc.patch
    - integrated in the build.xml
- Use source and target version 1.7, since the code contains
  diamond operator.

-------------------------------------------------------------------
Wed May  2 12:22:44 UTC 2018 - tchvatal@suse.com

- Format with spec-cleaner

-------------------------------------------------------------------
Mon Oct  9 06:45:42 UTC 2017 - fstrba@suse.com

- Modified patch:
  * commons-lang3-3.4-javadoc.patch
    + Fix build with jdk9
- Allow building with jdk9 too
- Run fdupes on javadoc

-------------------------------------------------------------------
Thu Sep 14 12:45:49 UTC 2017 - fstrba@suse.com

- Specify java target and source level 1.6
- Force building with jdk < 1.9, since jdk9's javadoc chocks on one
  class file (internal error)

-------------------------------------------------------------------
Fri May 19 09:59:33 UTC 2017 - pcervinka@suse.com

- New build dependency: javapackages-local

-------------------------------------------------------------------
Sun Jan 24 12:45:36 UTC 2016 - p.drouand@gmail.com

- Initial release (version 3.4)

