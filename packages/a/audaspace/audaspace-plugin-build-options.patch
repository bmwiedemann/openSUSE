

Build option: configure whether to build versioned plugins.
Author:      Joerg Mueller<nexyon@gmail.com>
Author date: 2017/10/23 4:36 PM
Parent:      Make fftw3 optional.


    Build option: configure whether to build versioned plugins.



d27746ca8550e2adae6ba54ded0c6dfac58d69b8
 CMakeLists.txt | 21 ++++++++++++++++-----
 1 file changed, 16 insertions(+), 5 deletions(-)

Index: CMakeLists.txt
===================================================================
--- CMakeLists.txt.orig	2017-10-23 17:47:11.232990658 +0200
+++ CMakeLists.txt	2017-10-23 18:02:55.877270368 +0200
@@ -88,7 +88,7 @@ set(SRC
 	src/fx/Volume.cpp
 	src/fx/VolumeReader.cpp
 	src/fx/VolumeSound.cpp
-	src/fx/VolumeStorage.cpp	
+	src/fx/VolumeStorage.cpp
 	src/generator/Sawtooth.cpp
 	src/generator/SawtoothReader.cpp
 	src/generator/Silence.cpp
@@ -310,6 +310,7 @@ cmake_dependent_option(WITH_PYTHON_MODUL
 cmake_dependent_option(USE_SDL2 "Use SDL2 instead of 1 if available" TRUE "WITH_SDL" FALSE)
 cmake_dependent_option(DYNLOAD_JACK "Dynamically load JACK" FALSE "WITH_JACK" FALSE)
 cmake_dependent_option(WITH_BINDING_DOCS "Build C/Python HTML Documentation with Sphinx" TRUE "WITH_PYTHON_MODULE" FALSE)
+cmake_dependent_option(WITH_VERSIONED_PLUGINS "Build Plugins With Sonumber" TRUE "SHARED_LIBRARY" FALSE)
 
 # compiler options
 
@@ -662,8 +663,8 @@ set(LIB_DESTINATION "lib${LIB_SUFFIX}")
 # library
 
 add_library(audaspace ${LIBRARY_TYPE} ${SRC} ${HDR})
-target_link_libraries(audaspace ${LIBRARIES})  
-set_target_properties(audaspace PROPERTIES SOVERSION ${AUDASPACE_VERSION})  
+target_link_libraries(audaspace ${LIBRARIES})
+set_target_properties(audaspace PROPERTIES SOVERSION ${AUDASPACE_VERSION})
 
 install(TARGETS audaspace
 	RUNTIME DESTINATION ${BIN_DESTINATION}
@@ -686,7 +687,9 @@ if(WITH_FFMPEG AND PLUGIN_FFMPEG)
 	include_directories(${INCLUDE} ${FFMPEG_INCLUDE_DIRS})
 	add_library(audffmpeg SHARED ${FFMPEG_SRC} ${FFMPEG_HDR} ${HDR})
 	target_link_libraries(audffmpeg audaspace ${FFMPEG_LIBRARIES})
-	set_target_properties(audffmpeg PROPERTIES SOVERSION ${AUDASPACE_VERSION})
+	if(WITH_VERSIONED_PLUGINS)
+		set_target_properties(audffmpeg PROPERTIES SOVERSION ${AUDASPACE_VERSION})
+	endif()
 	install(TARGETS audffmpeg DESTINATION ${DEFAULT_PLUGIN_PATH})
 endif()
 
@@ -699,7 +702,9 @@ if(WITH_JACK AND PLUGIN_JACK)
 	else()
 		target_link_libraries(audjack audaspace ${JACK_LIBRARIES})
 	endif()
-	set_target_properties(audjack PROPERTIES SOVERSION ${AUDASPACE_VERSION})
+	if(WITH_VERSIONED_PLUGINS)
+		set_target_properties(audjack PROPERTIES SOVERSION ${AUDASPACE_VERSION})
+	endif()
 	install(TARGETS audjack DESTINATION ${DEFAULT_PLUGIN_PATH})
 endif()
 
@@ -707,7 +712,9 @@ if(WITH_LIBSNDFILE AND PLUGIN_LIBSNDFILE
 	add_definitions(-DLIBSNDFILE_PLUGIN)
 	include_directories(${INCLUDE} ${LIBSNDFILE_INCLUDE_DIRS})
 	add_library(audlibsndfile SHARED ${LIBSNDFILE_SRC} ${LIBSNDFILE_HDR} ${HDR})
-	set_target_properties(audlibsndfile PROPERTIES SOVERSION ${AUDASPACE_VERSION})
+	if(WITH_VERSIONED_PLUGINS)
+		set_target_properties(audlibsndfile PROPERTIES SOVERSION ${AUDASPACE_VERSION})
+	endif()
 	target_link_libraries(audlibsndfile audaspace ${LIBSNDFILE_LIBRARIES})
 	install(TARGETS audlibsndfile DESTINATION ${DEFAULT_PLUGIN_PATH})
 endif()
@@ -716,7 +723,9 @@ if(WITH_OPENAL AND PLUGIN_OPENAL)
 	add_definitions(-DOPENAL_PLUGIN)
 	include_directories(${INCLUDE} ${OPENAL_INCLUDE_DIR})
 	add_library(audopenal SHARED ${OPENAL_SRC} ${OPENAL_HDR} ${HDR})
-	set_target_properties(audopenal PROPERTIES SOVERSION ${AUDASPACE_VERSION})
+	if(WITH_VERSIONED_PLUGINS)
+		set_target_properties(audopenal PROPERTIES SOVERSION ${AUDASPACE_VERSION})
+	endif()
 	target_link_libraries(audopenal audaspace ${OPENAL_LIBRARY})
 	install(TARGETS audopenal DESTINATION ${DEFAULT_PLUGIN_PATH})
 endif()
@@ -725,7 +734,9 @@ if(WITH_SDL AND PLUGIN_SDL)
 	add_definitions(-DSDL_PLUGIN)
 	include_directories(${INCLUDE} ${SDL_INCLUDE_DIR})
 	add_library(audsdl SHARED ${SDL_SRC} ${SDL_HDR} ${HDR})
-	set_target_properties(audsdl PROPERTIES SOVERSION ${AUDASPACE_VERSION})
+	if(WITH_VERSIONED_PLUGINS)
+		set_target_properties(audsdl PROPERTIES SOVERSION ${AUDASPACE_VERSION})
+	endif()
 	target_link_libraries(audsdl audaspace ${SDL_LIBRARY})
 	install(TARGETS audsdl DESTINATION ${DEFAULT_PLUGIN_PATH})
 endif()
