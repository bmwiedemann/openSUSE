-------------------------------------------------------------------
Mon Mar 18 08:31:18 UTC 2024 - Dirk MÃ¼ller <dmueller@suse.com>

- update to 3.4.13:
  * fix comment indent after string macro with R suffix
  * do not break single line block after enum in mozilla mode
  * adjust cmake policy for new versions only
  * update man page path
  * add support for scikit-build-core
  * added "--pad-brackets-in" and "--pad-brackets-out" options
  * fixed indentation of initializer lists
  * fixed crash with "--add-braces=nested" applied to if-else blocks

-------------------------------------------------------------------
Tue Jan 30 05:19:54 UTC 2024 - ming li <mli@suse.com>

- Update to 3.4.11:
  * added new option "--add-braces=nested" to add braces in nested single line statements
    (https://gitlab.com/saalen/astyle/-/issues/27)
  * fix indent after double template brackets (https://gitlab.com/saalen/astyle/-/issues/28)
  * fix indent after dot (https://gitlab.com/saalen/astyle/-/issues/28)
  * "--squeeze-lines=1" is no longer default with Linux builds (#559)
  * add experimental GHC mode (https://gitlab.com/saalen/astyle/-/issues/31)
  * fix indent after raw string (https://gitlab.com/saalen/astyle/-/issues/32)

-------------------------------------------------------------------
Sat Oct 21 19:12:26 UTC 2023 - Antoine Belvire <antoine.belvire@opensuse.org>

- Update to 3.4.10:
  * Fixed missing indent in function parameter list (gl#saalen/astyle#16).
- Changes of version 3.4.9:
  * Applied one wording for Objective-C in the docs.
  * Fixed more CS regressions (gl#saalen/astyle#16).
  * Fixed inserting space with combined "--pad-oper" and "--align-pointer" options (#557).
- Changes of version 3.4.8:
  * Fixed lambda broken brace after auto keyword (#554).
  * Fixed line break after comment in asm block (#226).
  * Fixed padding of multiply operator (#126).
  * Fixed indentation of method calls (#434).
  * Fixed empty line after closing while block (gl#saalen/astyle#18).
  * Added outer padding for emtpy parens pairs (gl#saalen/astyle#19).
  * Fixed more CS regressions (gl#saalen/astyle#16).
- Changes of version 3.4.6:
  * Added VS2022 project files (gl#saalen/astyle!3).
  * Fixed CS regressions (gl#saalen/astyle#16).
  * Added CS coalesce assignment operator (gl#saalen/astyle#17).
- Changes of version 3.4.1:
  * Fixed padding of & following a comma (#552).
  * Fixed indent of function declarations following access modifiers (#504).
  * Fixed indent of C# allocation blocks (#464).
  * Fixed indentation of comments after CS interpolation quotes (gl#saalen/astyle#16).

-------------------------------------------------------------------
Sat Jun 17 18:59:34 UTC 2023 - Antoine Belvire <antoine.belvire@opensuse.org>

- Update to 3.4:
  * Fixed formatting of CS interpolation literals (gl#saalen/astyle#8).
  * Fixed false lambda recognition (gl#saalen/astyle#11).
  * Fixed indentation of member declarations (gl#saalen/astyle#10).
  * Fixed indentation of struct assignments (gl#saalen/astyle#12).
  * Added new option "--indent-lambda" to to enable new lambda recognition
    (gl#saalen/astyle#7).

-------------------------------------------------------------------
Wed Jun  7 17:52:57 UTC 2023 - Stefan Seyfried <seife+obs@b1-systems.com>

- spec: add libastylej.rpmlintrc to please factory-auto check

-------------------------------------------------------------------
Wed Jun  7 06:44:12 UTC 2023 - Stefan Seyfried <seife+obs@b1-systems.com>

- bring back libastylej.so symlink to fix at least Arduino
- add libastylej.rpmlintrc to disarm the harmful check which
  probably caused the removal of libastylej.so

-------------------------------------------------------------------
Sun May 28 19:44:44 UTC 2023 - Antoine Belvire <antoine.belvire@opensuse.org>

- Update to 3.3.1: Fix build.
- Remove astyle-3.3-std.patch: Fixed upstream.

-------------------------------------------------------------------
Wed May 24 09:24:33 UTC 2023 - Antoine Belvire <antoine.belvire@opensuse.org>

- Update to 3.3:
  * The source code has been refactored to no longer use the std namespace
    globally.
  * Some features of "modern C++" are now supported, ie. lambda function
    arguments and array initializers with braces.
  * Two new options to remove superfluous whitespace and empty lines were
    added: "squeeze-ws" and "squeeze-lines=#" (parameter value is the number of
    empty lines to keep).
  * Two new options to add or remove whitespace around square brackets were
    added: "pad-brackets" and "unpad-brackets".
- Changes of 3.2:
  * Use C++11 feature.
  * New option "style=webkit": Similar to the Stroustrup brace style except the
    'else' keyword is attached to the previous closing bracket.
  * Various bugs fixes, especially causing reformatting the code in repeated
    runs.
  * Deprecated options have been removed.
- Install man page.
- Add astyle-3.3-std.patch: Fix build.
- Refresh spec file.

-------------------------------------------------------------------
Thu Oct 17 13:47:39 UTC 2019 - Richard Brown <rbrown@suse.com>

- Remove obsolete Groups tag (fate#326485)

-------------------------------------------------------------------
Mon Apr 16 14:26:23 UTC 2018 - kkaempf@suse.com

- don't obsolete libastyle1, let the distribution update handle
  removal of old shared lib.

-------------------------------------------------------------------
Wed Apr 11 10:36:24 UTC 2018 - kkaempf@suse.com

- Update to 3.1
  * Add new options "project", "project=####", and "project=none" (#11).
  * Add new options, "break-return-type" and "break-return-type-decl" (358, 286, 205, 16).
  * Add new options, "attach-return-type" and "attach-return-type-decl" (358, 286, 205, 16).
  * Add new option "style=ratliff", as an alternate name for banner style.
  * Add new environment variable ARTISTIC_STYLE_PROJECT_OPTIONS (#11).
  * Add multiple extensions to the command line file paths option.
  * Improve recognition of unary + and - when using pad-oper.
  * Change the Windows default options file location from USERPROFILE to APPDATA.
  * Change options file input to accept UTF-16, or UTF-8 with a BOM (or signature).
  * Change "unsigned short" data type to c++11 "char16_t".
  * Change translations for new project options file.
  * Fix utf8LengthFromUtf16() calculation being less than the actual length.
  * Fix multiply followed by a dereference for "align-pointer=type".
  * Fix recognition of a uniform class initializer in a base class initialization (#441).
  * Fix indentation of "volatile" keyword not used in a method definition (#450).
  * Fix indentation of "final" keyword not used in a method definition (#450).
  * Fix indentation of compound literals in an argument list (#456).
  * Fix indentation of trailing return type method following a constructor (#463).
  * Fix space padding of closing brace before a dot (#468).
  * Fix Objective-C to allow for "Extern C" statements in the source files (#443, 444, 446).
  * Fix Objective-C to allow for method definitions without a specified return type (#447).
  * Fix Objective-C to allow for method definitions with multiple param types.
  * Fix Objective-C to replace tabbed padding with a space.
  * Fix Objective-C formatting of line-end comments with "unpad-return-type".
  * Fix Objective-C "align-method-colon" to ignore ternary (?) operators.
  * Fix C# base class constructor indentation (#459).
  * Fix C# indentation of method declaration containing a colon (#465)
  * Fix C/C++ to allow "interface" as a non-keyword (#445).
  * Fix Java to allow "default" as a non-switch keyword.
  * Fix line ends initialization if no line end has been read.
  * Fix Java build from including ASLocalizer in the shared library.
  * Fix to check for AStyleWx line tags after C style comments.
  * Fix boundary conditions and other errors discovered by fuzzing.
  * Refactoring:
    - Extract method isNumericVariable() in ASFormatter class.
    - Extract method isTopLevel() in ASBeautifier class.
    - Extract method fileExists() in Console class.
    - Rename ASEncoding variable from "utf8_16" to "encode".
    - Rename ASBeautifier vector from squareBracketDepthStack to parenDepthStack.
    - Combine style options in ASOptions class to avoid compiler limits.

-------------------------------------------------------------------
Wed Aug  9 09:10:49 UTC 2017 - kkaempf@suse.com

- Prevent file conflicts on update: obsolete libastylej1

-------------------------------------------------------------------
Tue Jun 13 13:44:34 UTC 2017 - mpluskal@suse.com

- Small packaging cleanup

-------------------------------------------------------------------
Thu Jun  8 11:30:32 UTC 2017 - k.ohlhus@gmail.com

- Update to new upstream release 3.0.1 (boo#1044030):
  * Switch to MIT license.
  * Add new option "indent-after-parens".
  * Add new option "attach-closing-while".
  * Fix crash caused by certain class initializer formats.
  * Fix memory leak when using "indent-preproc-define".
  * Fix boundary conditions discovered by american fuzzy lop fuzzer.
  * Drop astyle-java-includes.patch, upstream

-------------------------------------------------------------------
Tue May 10 11:39:56 UTC 2016 - alarrosa@suse.com

- Add astyle-java-includes.patch to fix a build error in Leap

-------------------------------------------------------------------
Thu Mar 17 13:58:23 UTC 2016 - kkaempf@suse.com

- enable Java bindings
  new subpackage libastylej1
- create libastylej.so symlink for Arduino

-------------------------------------------------------------------
Wed Dec 17 09:58:02 UTC 2014 - p.drouand@gmail.com

- Update to version 2.05.1
  + Fix incorrectly reporting files containing disabled formatting as
    being formatted.
  + Fix incorrect handling of quoted arguments in the options file (#321).
  + Fix error in identifying an enum return type as an enumeration (#322, 323).
  + Fix error in identifying an enum argument as an enumeration (#327).
  + Fix recognition of Qt keywords when used as variables in C++ (#329).
  + Fix recognition of a pointer in a C++ cast (#316).
  + Fix removing trailing whitespace after a changed pointer or reference cast.
- Changes from version 2.05
  +Add new bracket style option "style=vtk" (#155).
  +Add new option "indent-preproc-block" to indent blocks of preprocessor
   directives (#21, #114, #229, #242, #294).
  +Add new option, "dry-run", to run AStyle without updating the files
   (#184, #285).
  +Add new options, "html" (-!") and "html=###", to display the HTML
   help documentation in the default browser.
  +Add tags "*INDENT-OFF*" and "*INDENT_ON*" to disable formatting of
   source code blocks (#2, #47, #55, #78, #110, #176).
  +Add tag *NOPAD* to disable selected formatting on a single line.
  +Add '__attribute__ ((visibility ("default")))' to Linux exported functions.
  +Remove option "style=ansi" and make it depreciated (#146).
  +Remove fix for broken 'case' statements from release 2.02.1, Nov 21, 2011.
  +Improve Korean translation (#256).
  +Change shared libraries to include the version number as part
   of the file name (#264)
  +Change "help" display to stdout to allow piping and redirection (#63).
  +Change "version" display to stdout.
  +Change headers to include foreach, forever, Q_FOREACH, and Q_FOREVER
   (#98, #154).
  +Change compiler definition ASTYLE_NO_VCX (no Visual Studio exports)
   to ASTYLE_NO_EXPORTS.
  +Change shared library error handler argument from "char*" to
   "const char*".
  +Fix not recognizing noexcept, interrupt, and autoreleasepool as
   pre-command headers (#225, #259).
  +Fix formatting of C++11 uniform initializer brackets (#253, #257, #260, #284).
  +Fix to not automatically space pad C++11 uniform initializer brackets (#275).
  +Fix formatting of enums with leading commas (#159, #179, #270).
  +Fix formatting of logical && operator in class initializers (#290).
  +Fix flagging a 'const' variable as a 'const' method (#275).
  +Fix piping and redirection adding an extra character to the output (#245, #252, #305).
  +Fix "indent-modifiers" to attach class access modifiers to Horstmann style brackets.
  +Fix ASFormatter to correctly recognize the end of a C++ raw string literal (#261).
  +Fix to recognize C++11 "enum class" as an enum (#303).
  +Fix indent of C++11 "noexecpt" statements within a class (#260, #304).
  +Fix not resetting templateDepth when a template was not found (#295).
  +Fix formatting of multiplication in a block paren (#144).
  +Fix whitespace padding when formatting an rvalue references (#297).
  +Fix to recognize an rvalue reference without a name (#265).
  +Fix to not identify an operator overload method as a calculation (#296).
  +Fix concatenating multiplication with a pointer dereference (#291).
  +Fix recognition of a pointer dereference following a question mark (#213).
  +Fix extra space after a trailing reference type (#300).
  +Fix _asm blocks not being identified as a block opener and the
   variable not cleared on exit (#163).
  +Fix indentation of line comments before a "class" opening bracket.
  +Fix indentation of line comments before a "namespace" opening bracket.
  +Fix isBracketType() method to correctly process a NULL_TYPE.
  +Fix unpad-paren to recognize additional variables (#43, #132, #143).
  +Fix indentation of C# "let" statements.
  +Fix a few omissions with "fill-empty-lines".
  +Fix file read to read 64K blocks of data.
  +Refactor to un-obfuscate (clarify) the code, and improve design
   and decomposition::
   * Extract class Utf8_16 from ASConsole.
   * Replace Linux dependency on iconv with a Utf8_16 class for ASLibrary.
   * Move global "using" statements to the astyle namespace in astyle.h and ASLocalizer.h.
   * Move shared library declarations from astyle.h to astyle_main.h.
   * Move indentable macros from ASEnhancer to ASResource and create static pairs.
   * Simplify ASBeautifier procedure to identify the colon (:) type.
   * Major refactoring in ASBeautifier to create separate variables for an enum, a
     class statement and a class initializer.
     This was needed to fix the processing of C++11 uniform initializers in a class initializer.
   * Minor changes to ASFormatter and ASBeautifier based on results of the Clang analyzer.
   * Change several methods in astyle_main to "const".

-------------------------------------------------------------------
Mon Nov 11 19:50:16 UTC 2013 - tbehrens@suse.com

- update to version 2.04

    Add new programming language ObjectiveâC.
    Add new bracket style option "style=google" (-A14).
    Add new option "indent-preproc-cond" (xw) to indent preprocessor conditional statements (#118).
    Add new bracket modify options "attach-namespaces", "attach-classes", "attach-inlines", and "attach-extern-c".
    Add new option "indent-modifiers" (-xG) to indent class access modifiers one-half indent (#130).
    Add new option "remove-brackets" (-xj) to remove brackets from single line conditional statements.
    Add new option "remove-comment-prefix" (-xp) to remove the leading '*' from multi-line comments.
    Add new option "align-method-colon" (-xM) to align ObjectiveâC method colons.
    Add new option "pad-method-colon=#" (-xP#) to space pad ObjectiveâC method colons.
    Add new options "pad-method-prefix" (-xQ), and "unpad-method-prefix" (-xR) to pad the ObjectiveâC "-" and "+" method prefix.
    Add new dll entry point AStyleMainUtf16 for processing C# UTF-16 strings.
    Add formatting of C++11 raw string literals (#222).
    Add "style=knf" as an alternative to "style=linux".
    Remove depreciated "bracket=" options.
    Improve recognition and formatting of pointers and references (#174 and other changes).
    Improve the recognition of block-opening brackets.
    Improve code using a static code analyzer (#195).
    Change "max-code-length" to include ObjectiveâC methods.
    Change "indent-elseifs" and "break-blocks" to look ahead only if in command-type brackets (speed improvement).
    Fix linux bracket styles to break the opening bracket in inline function definitions (#185).
    Fix indentation of switch block comments (#164).
    Fix enums to indent with tabs when requested (#92, #121).
    Fix formatting of rvalue reference without a name in a declaration (#219).
    Fix "pad-first-paren-out" to not pad if the following parens are empty (#232).
    Fix end-of-statement reset when comments follow closing bracket.
    Fix the ASBeautifier active and waiting stacks to delete the ASBeautifier objects before deleting the pointers.
    Fix ASBeautifier "init" to delete the tempStack vectors before deleting the tempStack.
    Fix Linux piping problem by changing "cin" input to build a stringstream before formatting.
    Fix to identify the correct bracket type when 'extern "C"' is part of the enum definition.
    Fix to clear 'extern "C"' variables when the block is closed.
    Fix unindented 'extern "C"' to not indent when in a #else preprocessor directive.
    Fix not always correctly formatting linux type brackets for enum blocks.
    Fix align-pointer in a range-based for statement (#217).
    Fix pointer-reference argument alignment to correctly position a following comment (#235).
    Fix to not attach a bracket to a line ending in a backslash '\' (#186, #214, #220).
    Fix to recognize templates using multiple lines (#85, #87, #136).
    Fix formatting of template continuation lines (#85, #87, #136).
    Fix to allow '^' as an array operator (#233).
    Fix an "enum" argument being mistaken for an enumeration (#211).
    Fix to recognize a non-instatement array after a "},{" sequence.
    Fix "pad-oper" to not pad before a following comma.
    Fix recognition of an operator when the calculation contains a bitwise "not" '~' (#166).
    Fix to allow a preprocessor statement within a preprocessor define (#238).
    Fix preprocessor comparison to check for whole words (#246).
    Fix "add-brackets" when a line contains more than one paren pairs (#181).
    Fix to allow Mac old CR line endings in the options file (#129).
    Refactor to aid debugging and improve design and decomposition:
        Move ALL preliminary indentation calculations to computePreliminaryIndentation() in ASBeautifier.
        Move calculation of 'force tab' indents to preLineWS() in ASBeautifier.
        Combine methods init() and init(ASSourceIterator*) in ASBeautifier.
        Extract method adjustParsedLineIndentation() in ASBeautifier.
        Extract method parseCurrentLine() in ASEnhancer.
        Remove astyle_main.cpp unused functions getFilesUnchanged, getOptionsFileRequired, and setOptionsFileRequired.

- update to version 2.03

    Add new option "indent=force-tab-x=#" (-xT#) to allow a tab length that different from the indent length (3430662).
    Add new option, "pad-first-paren-out" (xd), to pad only the first paren in a series on the outside (3350356).
    Add new option "max-code-length=#" (-xC#) to limit the length of code on a line.
    Add new option "break-after-logical" (-xL) to modify a "max-code-length" line break for conditionals.
    Add new option "close-templates" (-xy) to close whitespace in the angle brackets ">" of template definitions.
    Add formatting of C++ rvalue references (&&) using the existing "align-pointer" and "align-reference" options.
    Add formatting of C++/CLI managed pointers (the "^" character) to the "align-pointer" option.
    Add translations for Dutch, Finnish, Italian, Japanese, Korean, Polish, Portuguese, Russian, Swedish, and Ukrainian.
    Remove byte-order-mark from ASLocalizer.cpp.
    Change the short option for delete-empty-lines from "xd" to "xe".
    Change the ASTYLE_LIB option to remove __declspec for a Visual C static library when ASTYLE_NO_VCX is also declared.
    Change to remove any space padding in  a pointer to pointer (**).
    Fix "break-elseifs" to format one-line "if" and "else" statements the same as when the option is not used.
    Fix "break-elseifs" to break else-if statements when "keep-one-line-statements" also is requested.
    Fix "break-elseifs" to correctly format comments preceding the else-if.
    Fix C# not correctly identifying lambda expressions as a command-type bracket.
    Fix C# preprocessor statements adding extra empty lines when "break-blocks" is used.
    Fix C# padding "get" and "set" statements that are not headers when "break-blocks" is used.
    Fix C# to recognize the "#line" statement.
    Fix C++11 standard for range-based "for" loops (3458402, 3480095).
    Fix C++11 standard for "enum" with a base type (3458402).
    Fix C++11 standard for template closing angle brackets (no space required) (3495192).
    Fix C/C++ keyword 'extern "C"' in a preprocessor causing an extra indent (1514844, 2953388, 2963382, 3093842, 3467479).
    Fix breaking after a switch "default" statement when "break-elseifs" is used without "keep-one-line-statements" (3559365).
    Fix in-statement arrays to indent correctly when they exceed the "max-instatement-indent".
    Fix quote continuation sometimes being processed as a preprocessor directive (3445475).
    Fix formatting of some conditional statements on a continuation-line.
    Fix Java formatting of generics with wildcards (3428140).
    Fix formatting of pointers and references to work with the new "max-code-length" option.
    Fix formatting of pointers and references after a template close.
    Fix formatting of empty attached brackets (3505002).
    Fix C comments beginning a line breaking if they follow a semi-colon (3502700).
    Fix "pad-header" not padding "return" and "throw" statements (3509134).
    Fix recognition problems with templates.
    Fix "struct" return type being mistaken for a struct.
    Fix "pad-oper" in java for-each loop.
    Fix recognition of a macro multi-line comment (3414970).
    Fix bracketTypeStack entries added by #if and #else if the # is separated from the word.
    Fix C++ breaking a line on an access modifier in a one-line block when "keep-one-line-blocks" is used.
    Fix memory leak when "ascii" option is used.
    Fix memory leak when a preprocessor statement is used without a closing #endif.
    Fix preprocessor directive to allow compiling with mingw-x64 compiler.
    Fix redirection on Windows so it does not hang when Linux line ends are used (3514712).
    Fix redirection on Linux to output the correct line ends (3514712).
    Fix non-portable return value on locale name (3452574).
    Fix assert errors caused by not checking the text length on the return from peekNextText().
    Fix spelling of "depreciated" in help message (3454735).
    Refactor to improve design and decomposition:
        Fix warning messages from Visual Studio static code analysis.
        Fix warning messages from cppcheck, except for constructor uninitialized variables (false positive).
        Remove astyle_main.h dependency from ASLocalizer.h
        Remove appendChar() from the inline functions.
        Extract methods for pointer or reference alignment in ASFormatter.

-------------------------------------------------------------------
Sun Oct 28 09:13:16 UTC 2012 - gber@opensuse.org

- update to version 2.02.1
  - please see the included notes.html and news.html for a list of
    changes in this release
- drop unnecesary patch astyle-1.24-cxxflags.patch
- package complete documentation

-------------------------------------------------------------------
Thu Feb  9 10:08:40 UTC 2012 - puzel@suse.com

- convert license string to spdx format, use correct license
  (LGPL-3.0)

-------------------------------------------------------------------
Sat Sep 17 13:25:34 UTC 2011 - jengelh@medozas.de

- Remove redundant tags/sections from specfile
- Use %_smp_mflags for parallel build

-------------------------------------------------------------------
Tue May 11 11:25:54 CEST 2010 - wr@rosenauer.org

- Update to version 1.24

-------------------------------------------------------------------
Thu Oct 15 09:14:40 CEST 2009 - wr@rosenauer.org

- Minor spec formatting changes
- Do not strip release binaries explicitely but let RPM handle it

-------------------------------------------------------------------
Thu May  7 16:00:09 CEST 2009 - mvyskocil@suse.cz

- Initial packaging of astyle 1.23

