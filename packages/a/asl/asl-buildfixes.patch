diff --git a/Makefile b/Makefile
index 5744918..65f5ab1 100644
--- a/Makefile
+++ b/Makefile
@@ -18,7 +18,7 @@ binaries: $(ALLTARGETS)
 
 binaries-das: $(DASLTARGET) $(DASMSGTARGETS)
 
-all: binaries docs
+all: binaries
 
 include makedefs.src
 
@@ -97,9 +97,9 @@ include $(OBJDIR)uumlobjs.dep
 INCFILES = doc_COM/taborg*.tex doc_COM/tabids*.tex doc_COM/pscpu.tex doc_COM/pscomm.tex doc_COM/biblio.tex
 
 DOC_DE_DIR=doc_DE/
-include $(DOC_DE_DIR)makedefs.dok
+# include $(DOC_DE_DIR)makedefs.dok
 DOC_EN_DIR=doc_EN/
-include $(DOC_EN_DIR)makedefs.dok
+# include $(DOC_EN_DIR)makedefs.dok
 
 #---------------------------------------------------------------------------
 # Supplementary Targets
diff --git a/Makefile.def b/Makefile.def
new file mode 100644
index 0000000..d7f2b5a
--- /dev/null
+++ b/Makefile.def
@@ -0,0 +1,31 @@
+# -------------------------------------------------------------------------
+# choose your compiler (must be ANSI-compliant!) and linker command, plus
+# any additionally needed flags
+
+OBJDIR =
+CC = gcc
+CFLAGS = -O2 -Wall
+HOST_OBJEXTENSION = .o
+LD = $(CC)
+LDFLAGS =
+HOST_EXEXTENSION =
+
+# no cross build
+
+TARG_OBJDIR = $(OBJDIR)
+TARG_CC = $(CC)
+TARG_CFLAGS = $(CFLAGS)
+TARG_OBJEXTENSION = $(HOST_OBJEXTENSION)
+TARG_LD = $(LD)
+TARG_LDFLAGS = $(LDFLAGS)
+TARG_EXEXTENSION = $(HOST_EXEXTENSION)
+
+# -------------------------------------------------------------------------
+# directories where binaries, includes, and manpages should go during
+# installation
+
+BINDIR = /usr/bin
+INCDIR = /usr/include/asl
+MANDIR = /usr/share/man
+LIBDIR = /usr/lib/asl
+DOCDIR = doc
diff --git a/install.sh b/install.sh
index ea391b8..e972e2e 100755
--- a/install.sh
+++ b/install.sh
@@ -10,7 +10,7 @@ BINPATH=${INSTROOT}$1
 INCPATH=${INSTROOT}$2
 MANPATH=${INSTROOT}$3
 LIBPATH=${INSTROOT}$4
-DOCPATH=${INSTROOT}$5
+DOCPATH=$5
 
 # this is not a perfect solution, but I don't know a better one at the moment:
 
@@ -31,7 +31,6 @@ if [ "${BINPATH}" != "" ]; then
  chmod 755 ${BINPATH}
  for i in asl plist alink pbind p2hex p2bin; do
   #echo copy ${TARG_OBJDIR}$i${TARG_EXEXTENSION} to ${BINPATH}/$i${TARG_EXEXTENSION} ...
-  strip ${TARG_OBJDIR}$i${TARG_EXEXTENSION}
   if cp ${TARG_OBJDIR}$i${TARG_EXEXTENSION} ${BINPATH}; then
    chmod 755 ${BINPATH}/$i${TARG_EXEXTENSION}
   fi
@@ -103,6 +102,9 @@ if [ "${DOCPATH}" != "" ]; then
   done
   chmod 644 ${DOCPATH}/as_$i.*
  done
+ for i in README README.LANGS LICENSE BENCHES TODO ; do
+  cp $i $5/$i
+ done
  cp doc_COM/taborg*.tex ${DOCPATH}
  chmod 644 ${DOCPATH}/taborg*.tex
  cp doc_COM/ps*.tex ${DOCPATH}
diff --git a/sysdefs.h b/sysdefs.h
index c8b6a26..b4003fa 100644
--- a/sysdefs.h
+++ b/sysdefs.h
@@ -140,6 +140,12 @@
 # endif
 #endif
 
+#ifdef __powerpc64__
+#ifndef _POWER64
+#define _POWER64
+#endif
+#endif
+
 /*---------------------------------------------------------------------------*/
 /* ditto for ARM platforms */
 
@@ -600,6 +606,29 @@ typedef unsigned long long Card64;
 #define LOCALE_NLS
 #endif
 
+/*---------------------------------------------------------------------------*/
+/* HP-PA 1.x with Linux: */
+
+#ifdef __linux__
+#define ARCHSYSNAME "unknown-linux"
+#define DEFSMADE
+#define OPENRDMODE "r"
+#define OPENWRMODE "w"
+#define OPENUPMODE "r+"
+#define IEEEFLOAT
+typedef signed char Integ8;
+typedef unsigned char Card8;
+typedef signed short Integ16;
+typedef unsigned short Card16;
+#define HAS16
+typedef signed int Integ32;
+typedef unsigned int Card32;
+typedef signed long long Integ64;
+typedef unsigned long long Card64;
+#define HAS64
+#define LOCALE_NLS
+#endif
+
 #endif /* __hppa */ 
 
 /*===========================================================================*/
@@ -683,6 +712,38 @@ typedef unsigned long long Card64;
 
 #endif /* _POWER */ 
 
+/*===========================================================================*/
+/* POWER64 platforms */
+
+#ifdef _POWER64
+
+#define ARCHPRNAME "ppc64"
+
+/*---------------------------------------------------------------------------*/
+/* POWER64 with Linux */
+
+#ifdef __linux__
+#define ARCHSYSNAME "unknown-linux"
+#define DEFSMADE
+#define OPENRDMODE "r"
+#define OPENWRMODE "w"
+#define OPENUPMODE "r+"
+#define IEEEFLOAT
+typedef signed char Integ8;
+typedef unsigned char Card8;
+typedef signed short Integ16;
+typedef unsigned short Card16;
+#define HAS16
+typedef signed int Integ32;
+typedef unsigned int Card32;
+typedef signed long long Integ64;
+typedef unsigned long long Card64;
+#define HAS64
+#define LOCALE_NLS
+#endif
+
+#endif /* _POWER64 */
+
 /*===========================================================================*/
 /* VAX platforms */
 
@@ -1159,6 +1220,98 @@ typedef unsigned long Card32;
 
 #endif /* __i386 */
 
+#ifdef __ia64__
+
+#define ARCHPRNAME "ia64"
+
+/*---------------------------------------------------------------------------*/
+/* Intel ia64 with Linux and GCC:                                            */
+
+
+#ifdef __linux__
+#define ARCHSYSNAME "unknown-linux"
+#define DEFSMADE
+#define OPENRDMODE "r"
+#define OPENWRMODE "w"
+#define OPENUPMODE "r+"
+#define IEEEFLOAT
+typedef signed char Integ8;
+typedef unsigned char Card8;
+typedef signed short Integ16;
+typedef unsigned short Card16;
+#define HAS16
+typedef signed int Integ32;
+typedef unsigned int Card32;
+typedef signed long long Integ64;
+typedef unsigned long long Card64;
+#define HAS64
+#define LOCALE_NLS
+#endif
+
+
+#endif /* __ia64__ */
+
+#if defined(__s390__) && !defined(__s390x__)
+
+#define ARCHPRNAME "S/390"
+
+/*---------------------------------------------------------------------------*/
+/* IBM S/390 with Linux and GCC:                                             */
+
+
+#ifdef __linux__
+#define ARCHSYSNAME "unknown-linux"
+#define DEFSMADE
+#define OPENRDMODE "r"
+#define OPENWRMODE "w"
+#define OPENUPMODE "r+"
+#define IEEEFLOAT
+typedef signed char Integ8;
+typedef unsigned char Card8;
+typedef signed short Integ16;
+typedef unsigned short Card16;
+#define HAS16
+typedef signed int Integ32;
+typedef unsigned int Card32;
+typedef signed long long Integ64;
+typedef unsigned long long Card64;
+#define HAS64
+#define LOCALE_NLS
+#endif
+
+
+#endif /* __s390__ */
+
+/*---------------------------------------------------------------------------*/
+/* IBM zSeries (S/390 G7) with Linux and GCC: */
+
+#ifdef __s390x__
+
+#define ARCHPRNAME "IBM zSeries"
+
+#ifdef __linux__
+#define ARCHSYSNAME "unknown-linux"
+#define DEFSMADE
+#define OPENRDMODE "r"
+#define OPENWRMODE "w"
+#define OPENUPMODE "r+"
+#define IEEEFLOAT
+typedef signed char Integ8;
+typedef unsigned char Card8;
+typedef signed short Integ16;
+typedef unsigned short Card16;
+#define HAS16
+typedef signed int Integ32;
+#define PRIInteg32 "d"
+typedef unsigned int Card32;
+typedef signed long Integ64;
+typedef unsigned long Card64;
+#define HAS64
+#define LOCALE_NLS
+#endif
+
+
+#endif /* __s390x__ */
 
 /*===========================================================================*/
 /* Intel x86_64 platforms */
@@ -1320,6 +1473,39 @@ typedef unsigned long long Card64;
 
 #endif /* __arm */
 
+/*===========================================================================*/
+/* RISC-V platform */
+
+#if defined __riscv && __riscv_xlen == 64
+
+#define ARCHPRNAME "riscv64"
+
+/*---------------------------------------------------------------------------*/
+/* RISC-V 64-bit linux with GCC */
+
+#if defined __linux__
+#define ARCHSYSNAME "unknown-linux"
+#define DEFSMADE
+#define OPENRDMODE "r"
+#define OPENWRMODE "w"
+#define OPENUPMODE "r+"
+#define IEEEFLOAT
+typedef signed char Integ8;
+typedef unsigned char Card8;
+typedef signed short Integ16;
+typedef unsigned short Card16;
+#define HAS16
+typedef signed int Integ32;
+#define PRIInteg32 "d"
+typedef unsigned int Card32;
+typedef signed long Integ64;
+typedef unsigned long Card64;
+#define HAS64
+#define LOCALE_NLS
+#endif /* __linux__ */
+
+#endif /* __riscv */
+
 /*===========================================================================*/
 /* Misc... */
