-------------------------------------------------------------------
Mon Oct 31 19:49:13 UTC 2022 - Andreas Stieger <andreas.stieger@gmx.de>

- add upstream signing key and verify source signature

-------------------------------------------------------------------
Fri Oct 14 12:47:40 UTC 2022 - Fridrich Strba <fstrba@suse.com>

- Upgrade to version 1.10.0 (mitigation of bsc#1204284,
  CVE-2022-42889)
  * Changes of 1.10.0:
    + Fix CaseUtils when the input string contains only delimiters
    + Add GraalVM test dependencies to fix test failures with Java
      15
    + Incorrect values for Jaccard similarity with empty strings
    + StringSubstitutor map constructor throws NPE on 1.9 with null
      map
    + JaroWinklerDistance returns the same values as
      JaroWinklerSimilarity
    + Correct Javadoc in FileStringLookup
    + Use StringUtils.INDEX_NOT_FOUND constant
    + Remove redundant local variable
    + Replace lambda with method reference
    + Simplify statements
    + Replace statement lambda with expression lambda
    + Use static class inner class in tests
    + Simplify assertion
    + Extract duplicate code
    + Set void return method
    + Remove unused exception from
      TextStringBuilder.readFrom(CharBuffer). This preserves binary
      compatibility but not source compatibility
    + StrBuilder.StrBuilderReader.skip(long): Throw an exception
      when an implicit narrowing conversion in a compound assignment
      would result in information loss or a numeric error such as an
      overflows
    + TextStringBuilder.TextStringBuilderReader.skip(long): Throw
      an exception when an implicit narrowing conversion in a
      compound assignment would result in information loss or a
      numeric error such as an overflows
    + TextStringBuilder.equals whatever the capacity is
    + A More Efficient Implementation for Calculating Size of
      Longest Common Subsequence
    + LookupTranslator returns count of chars consumed, not of
      codepoints consumed
    + Use Math.min() call instead of doing it manually
    + TextStringBuilder: Throw OutOfMemoryError instead of
      NegativeArraySizeException
    + TextStringBuilder: Can't grow to sizes up to
      Integer.MAX_VALUE
    + Make default string lookups configurable via system property
      Remove dns, url, and script lookups from defaults. If these
      lookups are required for use in StringSubstitutor
      .createInterpolator(), they must be enabled via system
      property (bsc#
    + Add DoubleFormat utility
    + Document negative limit for WordUtils abbreviate method
    + Speed up LevenshteinDistance with threshold by exiting early
    + Release Notes page hasn't been updated for 1.9 release yet
    + Add StrBuilder.isNotEmpty()
  * Changes of 1.9:
    + Removed non-existing parameter from Javadocs and spelled out 
      parameters in throws
    + StringEscapeUtils.unescapeCsv doesn't remove quotes at begin 
      and end of string
    + ScriptStringLookup does not accept ":"
    + StringSubstitutor incorrectly removes some escape characters
    + Make ConstantStringLookup.constantCache final
    + Simplify if in CaseUtils
    + Add StringMatcher.size()
    + Refactor TextStringBuilder.readFrom(Readable), extracting 
      readFrom(CharBuffer) and readFrom(Reader)
    + Add BiStringLookup and implementation BiFunctionStringLookup
    + Add org.apache.commons.text.StringSubstitutor
     .StringSubstitutor(StringSubstitutor)
    + Add org.apache.commons.text.TextStringBuilder
      .TextStringBuilder(CharSequence)
    + Add org.apache.commons.text.TextStringBuilder.drainChar(int)
    + Add org.apache.commons.text.TextStringBuilder.drainChars(int, 
      int, char[]. int)
    + Add org.apache.commons.text.TextStringBuilder.isNotEmpty()
    + Add org.apache.commons.text.TextStringBuilder.isReallocated()
    + Add org.apache.commons.text.TextStringBuilder.readFrom(Reader,
      int)
    + Add org.apache.commons.text.TextStringBuilder.set(String)
    + Add org.apache.commons.text.TextStringBuilder.wrap(char[])
    + Add org.apache.commons.text.TextStringBuilder.wrap(char[], 
      int)
    + Add org.apache.commons.text.io.StringSubstitutorReader
    + Add org.apache.commons.text.lookup.StringLookupFactory
      .functionStringLookup(Function<String, V>)
    + Add org.apache.commons.text.matcher.StringMatcher
      .isMatch(CharSequence, int)
    + Add org.apache.commons.text.matcher.StringMatcher
      .isMatch(CharSequence, int, int, int)
    + Add org.apache.commons.text.matcher.StringMatcherFactory
      .andMatcher(StringMatcher...)
    + Add org.apache.commons.text.matcher.StringMatcherFactory
      .stringMatcher(char...)

-------------------------------------------------------------------
Thu Mar 10 14:03:25 UTC 2022 - Fridrich Strba <fstrba@suse.com>

- Rewrite build system to build with ant in order to avoid build
  cycles.
  * This package is now the dependency of maven-javadoc-plugin

-------------------------------------------------------------------
Sat Nov  9 18:36:06 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream version 1.8

-------------------------------------------------------------------
Tue Jun 25 07:38:44 UTC 2019 - Ismail DÃ¶nmez <idonmez@suse.com>

- Initial release v1.6 on OBS 
