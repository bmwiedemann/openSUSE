Index: httpd-2.4.43/include/ap_config.h
===================================================================
--- httpd-2.4.43.orig/include/ap_config.h	2020-04-03 13:38:03.445739206 +0200
+++ httpd-2.4.43/include/ap_config.h	2020-04-03 13:38:05.477749175 +0200
@@ -64,7 +64,7 @@
  * AP_DECLARE(rettype) ap_func(args)
  * @endcode
  */
-#define AP_DECLARE(type)            type
+#define AP_DECLARE(type)            __attribute__ ((visibility ("default"))) type
 
 /**
  * Apache Core dso variable argument and hook functions are declared with
@@ -74,7 +74,7 @@
  * AP_DECLARE_NONSTD(rettype) ap_func(args [...])
  * @endcode
  */
-#define AP_DECLARE_NONSTD(type)     type
+#define AP_DECLARE_NONSTD(type)     __attribute__ ((visibility ("default"))) type
 
 /**
  * Apache Core dso variables are declared with AP_MODULE_DECLARE_DATA.
@@ -86,7 +86,7 @@
  * AP_DECLARE_DATA type apr_variable
  * @endcode
  */
-#define AP_DECLARE_DATA
+#define AP_DECLARE_DATA     __attribute__ ((visibility ("default")))
 
 #elif defined(AP_DECLARE_STATIC)
 #define AP_DECLARE(type)            type __stdcall
@@ -115,10 +115,10 @@
 #if defined(WIN32)
 #define AP_MODULE_DECLARE(type)            type __stdcall
 #else
-#define AP_MODULE_DECLARE(type)            type
+#define AP_MODULE_DECLARE(type)            __attribute__ ((visibility ("default"))) type
 #endif
-#define AP_MODULE_DECLARE_NONSTD(type)     type
-#define AP_MODULE_DECLARE_DATA
+#define AP_MODULE_DECLARE_NONSTD(type)     __attribute__ ((visibility ("default"))) type
+#define AP_MODULE_DECLARE_DATA              __attribute__ ((visibility ("default")))
 #else
 /**
  * AP_MODULE_DECLARE_EXPORT is a no-op.  Unless contradicted by the
Index: httpd-2.4.43/modules/cache/mod_cache.h
===================================================================
--- httpd-2.4.43.orig/modules/cache/mod_cache.h	2020-04-03 13:38:03.445739206 +0200
+++ httpd-2.4.43/modules/cache/mod_cache.h	2020-04-03 13:38:05.545749508 +0200
@@ -37,9 +37,9 @@
  * CACHE_DECLARE_DATA with appropriate export and import tags for the platform
  */
 #if !defined(WIN32)
-#define CACHE_DECLARE(type)            type
-#define CACHE_DECLARE_NONSTD(type)     type
-#define CACHE_DECLARE_DATA
+#define CACHE_DECLARE(type)            __attribute__ ((visibility ("default"))) type
+#define CACHE_DECLARE_NONSTD(type)     __attribute__ ((visibility ("default"))) type
+#define CACHE_DECLARE_DATA              __attribute__ ((visibility ("default")))
 #elif defined(CACHE_DECLARE_STATIC)
 #define CACHE_DECLARE(type)            type __stdcall
 #define CACHE_DECLARE_NONSTD(type)     type
Index: httpd-2.4.43/modules/proxy/mod_proxy.h
===================================================================
--- httpd-2.4.43.orig/modules/proxy/mod_proxy.h	2020-04-03 13:38:03.445739206 +0200
+++ httpd-2.4.43/modules/proxy/mod_proxy.h	2020-04-03 13:38:05.545749508 +0200
@@ -573,9 +573,9 @@ struct proxy_balancer_method {
  * PROXY_DECLARE_DATA with appropriate export and import tags for the platform
  */
 #if !defined(WIN32)
-#define PROXY_DECLARE(type)            type
-#define PROXY_DECLARE_NONSTD(type)     type
-#define PROXY_DECLARE_DATA
+#define PROXY_DECLARE(type)            __attribute__ ((visibility ("default"))) type
+#define PROXY_DECLARE_NONSTD(type)     __attribute__ ((visibility ("default"))) type
+#define PROXY_DECLARE_DATA              __attribute__ ((visibility ("default")))
 #elif defined(PROXY_DECLARE_STATIC)
 #define PROXY_DECLARE(type)            type __stdcall
 #define PROXY_DECLARE_NONSTD(type)     type
Index: httpd-2.4.43/modules/lua/mod_lua.h
===================================================================
--- httpd-2.4.43.orig/modules/lua/mod_lua.h	2020-04-03 13:38:03.445739206 +0200
+++ httpd-2.4.43/modules/lua/mod_lua.h	2020-04-03 13:38:05.545749508 +0200
@@ -62,9 +62,9 @@
  * AP_LUA_DECLARE_DATA with appropriate export and import tags for the platform
  */
 #if !defined(WIN32)
-#define AP_LUA_DECLARE(type)            type
-#define AP_LUA_DECLARE_NONSTD(type)     type
-#define AP_LUA_DECLARE_DATA
+#define AP_LUA_DECLARE(type)            __attribute__ ((visibility ("default"))) type
+#define AP_LUA_DECLARE_NONSTD(type)     __attribute__ ((visibility ("default"))) type
+#define AP_LUA_DECLARE_DATA             __attribute__ ((visibility ("default")))
 #elif defined(AP_LUA_DECLARE_STATIC)
 #define AP_LUA_DECLARE(type)            type __stdcall
 #define AP_LUA_DECLARE_NONSTD(type)     type
Index: httpd-2.4.43/modules/core/mod_watchdog.h
===================================================================
--- httpd-2.4.43.orig/modules/core/mod_watchdog.h	2020-04-03 13:38:03.445739206 +0200
+++ httpd-2.4.43/modules/core/mod_watchdog.h	2020-04-03 13:38:05.545749508 +0200
@@ -83,9 +83,9 @@ typedef struct ap_watchdog_t ap_watchdog
  */
 #if !defined(AP_WD_DECLARE)
 #if !defined(WIN32)
-#define AP_WD_DECLARE(type)            type
-#define AP_WD_DECLARE_NONSTD(type)     type
-#define AP_WD_DECLARE_DATA
+#define AP_WD_DECLARE(type)            __attribute__ ((visibility ("default"))) type
+#define AP_WD_DECLARE_NONSTD(type)     __attribute__ ((visibility ("default"))) type
+#define AP_WD_DECLARE_DATA             __attribute__ ((visibility ("default")))
 #elif defined(AP_WD_DECLARE_STATIC)
 #define AP_WD_DECLARE(type)            type __stdcall
 #define AP_WD_DECLARE_NONSTD(type)     type
Index: httpd-2.4.43/modules/generators/mod_status.h
===================================================================
--- httpd-2.4.43.orig/modules/generators/mod_status.h	2020-04-03 13:38:03.445739206 +0200
+++ httpd-2.4.43/modules/generators/mod_status.h	2020-04-03 13:38:05.545749508 +0200
@@ -34,9 +34,9 @@
 #define AP_STATUS_EXTENDED (0x4)  /* detailed report */
 
 #if !defined(WIN32)
-#define STATUS_DECLARE(type)            type
-#define STATUS_DECLARE_NONSTD(type)     type
-#define STATUS_DECLARE_DATA
+#define STATUS_DECLARE(type)            __attribute__ ((visibility ("default"))) type
+#define STATUS_DECLARE_NONSTD(type)     __attribute__ ((visibility ("default"))) type
+#define STATUS_DECLARE_DATA             __attribute__ ((visibility ("default")))
 #elif defined(STATUS_DECLARE_STATIC)
 #define STATUS_DECLARE(type)            type __stdcall
 #define STATUS_DECLARE_NONSTD(type)     type
Index: httpd-2.4.43/modules/dav/main/mod_dav.h
===================================================================
--- httpd-2.4.43.orig/modules/dav/main/mod_dav.h	2020-04-03 13:38:03.445739206 +0200
+++ httpd-2.4.43/modules/dav/main/mod_dav.h	2020-04-03 13:38:05.549749528 +0200
@@ -82,9 +82,9 @@ extern "C" {
  * DAV_DECLARE_DATA with appropriate export and import tags for the platform
  */
 #if !defined(WIN32)
-#define DAV_DECLARE(type)            type
-#define DAV_DECLARE_NONSTD(type)     type
-#define DAV_DECLARE_DATA
+#define DAV_DECLARE(type)            __attribute__ ((visibility ("default"))) type
+#define DAV_DECLARE_NONSTD(type)     __attribute__ ((visibility ("default"))) type
+#define DAV_DECLARE_DATA            __attribute__ ((visibility ("default")))
 #elif defined(DAV_DECLARE_STATIC)
 #define DAV_DECLARE(type)            type __stdcall
 #define DAV_DECLARE_NONSTD(type)     type
Index: httpd-2.4.43/modules/session/mod_session.h
===================================================================
--- httpd-2.4.43.orig/modules/session/mod_session.h	2020-04-03 13:38:03.445739206 +0200
+++ httpd-2.4.43/modules/session/mod_session.h	2020-04-03 13:38:05.549749528 +0200
@@ -21,9 +21,9 @@
  * SESSION_DECLARE_DATA with appropriate export and import tags for the platform
  */
 #if !defined(WIN32)
-#define SESSION_DECLARE(type)        type
-#define SESSION_DECLARE_NONSTD(type) type
-#define SESSION_DECLARE_DATA
+#define SESSION_DECLARE(type)        __attribute__ ((visibility ("default"))) type
+#define SESSION_DECLARE_NONSTD(type) __attribute__ ((visibility ("default"))) type
+#define SESSION_DECLARE_DATA         __attribute__ ((visibility ("default")))
 #elif defined(SESSION_DECLARE_STATIC)
 #define SESSION_DECLARE(type)        type __stdcall
 #define SESSION_DECLARE_NONSTD(type) type
Index: httpd-2.4.43/modules/database/mod_dbd.h
===================================================================
--- httpd-2.4.43.orig/modules/database/mod_dbd.h	2020-04-03 13:38:03.445739206 +0200
+++ httpd-2.4.43/modules/database/mod_dbd.h	2020-04-03 13:38:05.549749528 +0200
@@ -35,9 +35,9 @@
  * DBD_DECLARE_DATA with appropriate export and import tags for the platform
  */
 #if !defined(WIN32)
-#define DBD_DECLARE(type)            type
-#define DBD_DECLARE_NONSTD(type)     type
-#define DBD_DECLARE_DATA
+#define DBD_DECLARE(type)            __attribute__ ((visibility ("default"))) type
+#define DBD_DECLARE_NONSTD(type)     __attribute__ ((visibility ("default"))) type
+#define DBD_DECLARE_DATA             __attribute__ ((visibility ("default")))
 #elif defined(DBD_DECLARE_STATIC)
 #define DBD_DECLARE(type)            type __stdcall
 #define DBD_DECLARE_NONSTD(type)     type
Index: httpd-2.4.43/modules/filters/mod_xml2enc.h
===================================================================
--- httpd-2.4.43.orig/modules/filters/mod_xml2enc.h	2020-04-03 13:38:03.445739206 +0200
+++ httpd-2.4.43/modules/filters/mod_xml2enc.h	2020-04-03 13:38:05.549749528 +0200
@@ -25,9 +25,9 @@
 
 /* declarations to deal with WIN32 compile-flag-in-source-code crap */
 #if !defined(WIN32)
-#define XML2ENC_DECLARE(type)            type
-#define XML2ENC_DECLARE_NONSTD(type)     type
-#define XML2ENC_DECLARE_DATA
+#define XML2ENC_DECLARE(type)            __attribute__ ((visibility ("default"))) type
+#define XML2ENC_DECLARE_NONSTD(type)     __attribute__ ((visibility ("default"))) type
+#define XML2ENC_DECLARE_DATA             __attribute__ ((visibility ("default")))
 #elif defined(XML2ENC_DECLARE_STATIC)
 #define XML2ENC_DECLARE(type)            type __stdcall
 #define XML2ENC_DECLARE_NONSTD(type)     type
Index: httpd-2.4.43/modules/filters/mod_ratelimit.h
===================================================================
--- httpd-2.4.43.orig/modules/filters/mod_ratelimit.h	2020-04-03 13:38:03.445739206 +0200
+++ httpd-2.4.43/modules/filters/mod_ratelimit.h	2020-04-03 13:38:05.549749528 +0200
@@ -21,9 +21,9 @@
  * AP_RL_DECLARE_DATA with appropriate export and import tags for the platform
  */
 #if !defined(WIN32)
-#define AP_RL_DECLARE(type)            type
-#define AP_RL_DECLARE_NONSTD(type)     type
-#define AP_RL_DECLARE_DATA
+#define AP_RL_DECLARE(type)            __attribute__ ((visibility ("default"))) type
+#define AP_RL_DECLARE_NONSTD(type)     __attribute__ ((visibility ("default"))) type
+#define AP_RL_DECLARE_DATA             __attribute__ ((visibility ("default")))
 #elif defined(AP_RL_DECLARE_STATIC)
 #define AP_RL_DECLARE(type)            type __stdcall
 #define AP_RL_DECLARE_NONSTD(type)     type
Index: httpd-2.4.43/modules/aaa/mod_authz_dbd.h
===================================================================
--- httpd-2.4.43.orig/modules/aaa/mod_authz_dbd.h	2020-04-03 13:38:03.445739206 +0200
+++ httpd-2.4.43/modules/aaa/mod_authz_dbd.h	2020-04-03 13:38:05.549749528 +0200
@@ -22,9 +22,9 @@
  * AUTHZ_DBD_DECLARE_DATA with appropriate export and import tags
  */
 #if !defined(WIN32)
-#define AUTHZ_DBD_DECLARE(type)            type
-#define AUTHZ_DBD_DECLARE_NONSTD(type)     type
-#define AUTHZ_DBD_DECLARE_DATA
+#define AUTHZ_DBD_DECLARE(type)            __attribute__ ((visibility ("default"))) type
+#define AUTHZ_DBD_DECLARE_NONSTD(type)     __attribute__ ((visibility ("default"))) type
+#define AUTHZ_DBD_DECLARE_DATA             __attribute__ ((visibility ("default")))
 #elif defined(AUTHZ_DBD_DECLARE_STATIC)
 #define AUTHZ_DBD_DECLARE(type)            type __stdcall
 #define AUTHZ_DBD_DECLARE_NONSTD(type)     type
Index: httpd-2.4.43/include/httpd.h
===================================================================
--- httpd-2.4.43.orig/include/httpd.h	2020-04-03 13:38:03.445739206 +0200
+++ httpd-2.4.43/include/httpd.h	2020-04-03 13:38:05.549749528 +0200
@@ -345,7 +345,7 @@ extern "C" {
  * by modules. Its purpose is to allow us to add attributes that
  * particular platforms or compilers require to every exported function.
  */
-# define AP_DECLARE(type)    type
+# define AP_DECLARE(type)    __attribute__ ((visibility ("default"))) type
 #endif
 
 #ifndef AP_DECLARE_NONSTD
@@ -356,20 +356,20 @@ extern "C" {
  * which use varargs or are used via indirect function call.  This
  * is to accommodate the two calling conventions in windows dlls.
  */
-# define AP_DECLARE_NONSTD(type)    type
+# define AP_DECLARE_NONSTD(type)    __attribute__ ((visibility ("default"))) type
 #endif
 #ifndef AP_DECLARE_DATA
-# define AP_DECLARE_DATA
+# define AP_DECLARE_DATA            __attribute__ ((visibility ("default")))
 #endif
 
 #ifndef AP_MODULE_DECLARE
-# define AP_MODULE_DECLARE(type)    type
+# define AP_MODULE_DECLARE(type)    __attribute__ ((visibility ("default"))) type
 #endif
 #ifndef AP_MODULE_DECLARE_NONSTD
-# define AP_MODULE_DECLARE_NONSTD(type)  type
+# define AP_MODULE_DECLARE_NONSTD(type)  __attribute__ ((visibility ("default"))) type
 #endif
 #ifndef AP_MODULE_DECLARE_DATA
-# define AP_MODULE_DECLARE_DATA
+# define AP_MODULE_DECLARE_DATA         __attribute__ ((visibility ("default")))
 #endif
 
 /**
Index: httpd-2.4.43/include/util_ldap.h
===================================================================
--- httpd-2.4.43.orig/include/util_ldap.h	2020-04-03 13:38:03.445739206 +0200
+++ httpd-2.4.43/include/util_ldap.h	2020-04-03 13:38:05.549749528 +0200
@@ -66,9 +66,9 @@
  * and import tags for the platform
  */
 #if !defined(WIN32)
-#define LDAP_DECLARE(type)            type
-#define LDAP_DECLARE_NONSTD(type)     type
-#define LDAP_DECLARE_DATA
+#define LDAP_DECLARE(type)            __attribute__ ((visibility ("default"))) type
+#define LDAP_DECLARE_NONSTD(type)     __attribute__ ((visibility ("default"))) type
+#define LDAP_DECLARE_DATA             __attribute__ ((visibility ("default")))
 #elif defined(LDAP_DECLARE_STATIC)
 #define LDAP_DECLARE(type)            type __stdcall
 #define LDAP_DECLARE_NONSTD(type)     type
Index: httpd-2.4.43/include/mpm_common.h
===================================================================
--- httpd-2.4.43.orig/include/mpm_common.h	2018-08-14 22:56:54.000000000 +0200
+++ httpd-2.4.43/include/mpm_common.h	2020-04-03 13:40:10.698363488 +0200
@@ -195,7 +195,7 @@ AP_DECLARE(void) ap_wait_or_timeout(apr_
  * Nagle's algorithm that have severe performance penalties.
  * @param s The socket to disable nagle for.
  */
-void ap_sock_disable_nagle(apr_socket_t *s);
+AP_DECLARE(void) ap_sock_disable_nagle(apr_socket_t *s);
 #else
 #define ap_sock_disable_nagle(s)        /* NOOP */
 #endif
