-------------------------------------------------------------------
Tue Dec 13 18:15:08 UTC 2022 - Dominique Leuenberger <dimstar@opensuse.org>

- Correctly replace shebangs from php to php8 after the move away
  from php7.

-------------------------------------------------------------------
Wed Nov 30 12:50:42 UTC 2022 - pgajdos@suse.com

- Update to version 0.0~git.20220517T162014~85c953e:
  * Fix a PHP 8.1 repository marker issue in Mercurial
  * Straggling fixes for PhutilURI under PHP 8.1
  * Add "pht_list()", a translation wrapper for lists of items
  * Return STDIN, STDOUT, and STDERR file descriptors from parent process
  * Add an ArgumentParser helper for integers
  * Fix more PHP 8.1 "strlen(null)" callsites in PhutilURI
  * Mostly remove "STDERR" and "STDOUT" constants from Arcanist
  * Catch more product names in "pht()", and replace newly matched Arcanist product names
  * Remove all product name literals in "pht()" in Arcanist
  * Add a "product name literal in pht()" linter
  * Introduce PHP8.1 replacement functions for string tests which may take multiple types
  * Fix a PHP 8.1 issue with "phutil_console_strlen()"
  * Fix a PHP 8.1 issue in lint rendering
  * Update arc-hg to support mercurial 6.1
  * Provide additional Arcanist PHP 8.1 fixes
  * Add a lint rule forbidding use of "each()"
  * Correct some Arcanist behaviors under PHP8.1
  * Update the extracted cURL SSL CA bundle
  * Provide an API for parsing swap information from "/proc/meminfo"
  * Allow "PhutilAWSException" to identify "EBS: Not Found" errors
  * Make corrections to the "arc amend" workflow in Mercurial repositories to be compatible with PHP 5+
  * Update ArcanistMercurialAPI to support getting the current commit ref
  * Update "arc liberate" to fix error with PHP 8 and add "--verbose" argument to adjust it
  * Provide "MethodCallFuture" to fix exception semantics in mixed-future contexts
  * Name extension as "arc-hg", not "arg-hg"
  * Update other usages of "hg rebase" to use the new extension-enabling function
  * Remove "phutil_deprecated()"
  * Deprecate "PhutilExecPassthru->execute()" in favor of "resolve()"
  * Refactor how Mercurial runs commands that require extensions
  * Fix an ExecFuture typo, "preprebuilt"
  * Display informative message when arc launches an editor
  * Update "arc diff" to amend non-head commits with Mercurial
  * An assortment of fixes and updates to using arc-land with mercurial
  * Update templates used with mercurial to remove '--debug'
  * Force all mercurial commands to use UTF-8 encoding
  * Correct an issue when winning "arc anoid" with certain terminal dimensions
  * Avoid leaving stdin in nonblocking mode after a modern prompt
  * On Windows, implement "Filesystem::copyFile()" with "copy()"
  * Update Paste help to include missing "--"
  * Correct a mistaken Phurl link in the "missing symbol" exception
  * Improve "PhutilJSON" handling of PHP-object JSON values
  * In Arcanist, when trying to write to a file configuration source, create missing directories
  * In "arc land", if rebasing a range fails, attempt to "reduce" it
  * Add a character marker to the "IMPLICIT COMMITS" warning in "arc land"
  * Temporarily disable all logfile writability checks
  * Add a simple primitive for managing PHP runtime error logs
  * Apply "pcre.*_limit" config options at startup in CLI environments
  * Provide some "preg_*" wrappers which raise exceptions on failure
  * Update golint install instructions
  * In "array_mergev()", guarantee the "call_user_func_array()" parameter list is a natrual list
  * Add a lint check for catching "Exception" without catching "Throwable"
  * Annotate the unusual use of "$callback()" in "xsprintf()"
  * Detect and correct "final private" methods in lint
  * Allow lint to correct the spelling of builtin symbols
  * When lint identifies an unknown symbol, attempt to correct it if it is miscapitalized
  * Provide "gitsprintf(...)" and disambiguate Git ref selectors
  * Fix pyflakes tests for recent pyflakes versions
  * Fix ArcanistJSHintLinterTestCase::testLinter for recent JSHint
  * Fix PhutilOAuth1FutureTestCase::testOAuth1SigningWithJIRAExamples for PHP 8
  * Fix PhutilUTF8TestCase::testUTF8Convert for PHP 8
  * Fix ArcanistFormattedStringXHPASTLinterRule on older PHP after D21500
  * Fix ArcanistFormattedStringXHPASTLinterRule for PHP 8
  * Fix PhutilTypeSpec's regex handling for PHP 8
  * Fix error handler on PHP 8
  * Suppress PHP 8 deprecation warning in __arcanist_init_script__
  * Remove final from private functions for PHP 8 compatibility
- add arcanist-default-error_reporting.patch, do not no E_STRICT and E_DEPRECATED

-------------------------------------------------------------------
Sun Nov 14 16:48:24 UTC 2021 - Aaron Puchert <aaronpuchert@alice-dsl.net>

- Replace bundled certificates with symlink to the system
  certificate bundle.
- Some typo fixes.

-------------------------------------------------------------------
Tue Jan  5 14:50:54 UTC 2021 - pgajdos@suse.com

- remove php7-devel from build dependencies

-------------------------------------------------------------------
Mon Oct 26 07:01:09 UTC 2020 - tuukka.pasanen@ilmi.fi

- Update to version 0.0~git.20201026T090106~f713656a:
  * Fix a typo of "previously" in FutureIterator
  * Fix an issue where "phutil_utf8v()" could fatal when passed an integer
  * Fix rubocop lint tests
  * Fix "PhutilOpaqueEnvelopeTestCase" under PHP 7.4 with "zend.exception_ignore_args"
  * fail `arc diff` if second lfs push errors
  * In "phutil_passthru()", "resolve()" the future rather than calling "execute()" directly
  * In ConduitCallFuture, only call Conduit exception messages on Conduit exceptions
  * Fix a slow memory leak in long-lived FutureIterator objects, as used by FuturePool
  * When raising a Conduit client exception, show the called method in the error message
  * Fix additional "xsprintf()"-family static parameter errors
  * Allow AAST to extract string literal values from HEREDOCs
  * Fix a missing "pht()" parameter in HTTPSFuture
  * Fix a false negative in lint for "xsprintf()"-family functions

-------------------------------------------------------------------
Fri Sep 04 07:02:41 UTC 2020 - tuukka.pasanen@ilmi.fi

- Update to version 0.0~git.20200904T100240~7f87aeaa:
  * Give Futures clearer start/end and exception semantics
  * Preserve bookmarks across "hg rebase --keep --collapse", and destroy them before "hg strip/prune"
  * When saving and restoring local state in Mercurial, also save and restore bookmarks
  * Clean up push failure messaging in "arc land" slightly
  * When "arc land" fails a Mercurial push, actually raise it as an exception
  * Fix additional Mercurial/Python compatibility issues in "arc land"
  * Allow "hg arc-ls-markers" to run under Python 2 or Python 3
  * Fix a MarkerRef call to get the active bookmark in Mercurial
  * Render the state tree in "arc branches" slightly more cleanly

-------------------------------------------------------------------
Fri Jul 03 07:07:42 UTC 2020 - tuukka.pasanen@ilmi.fi

- Update to version 0.0~git.20200703T100739~8daff5ee:
  * Clean up some service profiler behavior in Conduit futures
  * Improve login/auth messages from Arcanist toolset workflows
  * Drop intended support for "--anonymous" from Arcanist Toolsets
  * When tab-completing "arc" commands, suggest paths if the argument is empty and a path wildcard argument exists
  * Implement Conduit login prompt behavior as a pure FutureProxy, not a Future-like object
  * Improve resolution behaviors of FutureProxy
  * Remove an unused method in "ArcanistUploadWorkflow"
  * Give Mercurial more plausible marker behavior
  * Support date-range commit graph queries, and multiple disjoint commits in Git
  * In "arc branches", group linear sequences of published revisions together
  * When a commit graph set has many commits, summarize them
  * Improve grid layout in "arc branches" at various terminal widths
  * Remove implicit sorting from "MarkerRefQuery"
  * Render "arc markers" workflows as a tree, not a list
  * Identify published commits in working copies by using remote configuration
  * Load and map repository objects for remote URIs
  * Provide "arc look", a user-facing inspection command
  * Support generating remote refs in Git
  * Support inspection of remote refs with "arc inspect remote(...)"
  * Copy repository URI normalization code from Phabricator to Arcanist
  * Introduce "phutil_partition()" and natural case sorting for "msortv(...)"
  * Introduce "GridView", an updated version of "ConsoleTableView"
  * Correct a leftover reference to "--keep-branch"
  * Add more "RepositoryRef" legacy status mappings
  * In "arc land" under Git, confirm branch creation
  * Collect scattered implementations of "getDisplayHash()" into RepositoryAPI
  * Update "arc land" display of build failures, and rename "DisplayRef" to "RefView"
  * On Windows, don't try to set "stdin" nonblocking, as it does not work
  * When a linter raises a message at a nonexistent line, don't fatal during rendering
  * Improve "--hold", save/restore state, bookmark creation, and some warnings for "arc land" in Mercurial
  * Correct some minor "arc land" workflow issues in Mercurial
  * Use a "branchmap" call to identify remote branches in "arc-hg"
  * In "arc land" in Mercurial, inch closer to making complex branch/bookmark workflows function
  * In "arc land", fix some coarse issues with build warnings
  * Realign "arc land" closed/published warning around more modern language
  * In "arc land" in Mercurial, show a tidier "ls-remote" command
  * Disambiguate various types of Mercurial remote markers with "hg arc-ls-remote"
  * Verify remotes ("paths") in Mercurial during "arc land"
  * Refine "arc land" behavior when pushing "onto" a new branch
  * Support "arc land --pick" to pick specific changes out of a sequence
  * Improve "arc land" behavior in the presence of merge conflicts and change sequences
  * Remove "arc feature", "arc branch", "arc bookmark", and significant chunks of obsolete marker code
  * Implement "arc work", to replace "arc feature"
  * Use MarkerRefs to resolve landing symbols in Mercurial
  * Provide a more powerful query mechanism for "markers" (branches/bookmarks)
  * Allow "arc" to accept any prefix of a command as that command
  * Remove old Mercurial code testing for rebase and phase support
  * Add a check for ambiguous merge strategies after the "history.immutable" behavioral change
  * Allow users to save prompt responses in "arc" workflows
  * Format "arc land" passthru commands more nicely, and execute them from CWD
  * Make Mercurial use "hg shelve" and "hg unshelve" in dirty working copies in "arc land"
  * Improve final messages under "arc land --hold"
  * Show some "arc" help pages through a configurable pager, like "less"
  * Update "arc help land"
  * Improve the logic for identifying ambiguous commits and applying "--revision" to them
  * When landing changes in an empty repository, merge cleanly in Git
  * Modernize output when pruning branches in Git during "arc land"
  * Provide more information about merge progress in "arc land" under Git
  * Sometimes discard already-closed revisions in "arc land"
  * Add a synopsis and example for "arc help land"
  * In "arc land", rebase branches in natural order
  * Substantially modernize the "arc land" workflow
  * In "arc branch" output, sort branches updated in the same second by name
  * Remove "--ignore-unsound-tests" from "arc diff"
  * When "arc" receives SIGWINCH or other signals during display of a prompt, recover
  * Introduce "RepositoryLocalState", a modern version of "requireCleanWorkingCopy()"
  * Provide modern config options for "arc land" configuration
  * Add modern refs and hardpoints for buildables, builds, and build plans
  * Add "Author" and "Parent Revision" hardpoints to RevisionRefs
  * Alias newer "--library" to "--load-phutil-library" in legacy workflows
  * Remove the "--less-context" flag from "arc diff"
  * Remove "--encoding" flag from "arc diff"
  * Remove "haveUncommittedChanges" property from "arc diff"
  * Remove "--lintall" and "--only-new" flags to "arc diff"
  * Remove lint and unit excuses and "--advice" and "--excuse" flags from "arc diff"
  * Remove "--use-commit-message/-C" from "arc diff"
  * Support short aliases and repeatable arguments in Arcanist Workflow arguments
  * Add a "%?" ("hint") conversion to "tsprintf()"
  * Support appending arbitrary lines to DisplayRef output
  * Impose a HardpointEngine future parallelism limit
  * Remove special casing of "arc --version"
  * Allow PhutilArrayCheck to accept a list of objects as a context
  * Add a support class to simplify typechecking list-of-objects return values
  * Mark the wildcard argument to "arc liberate" as a path argument for shell completion
  * Make lint tests handle paths better and distinguish between "0" and "null" more carefully
  * Fix an issue when rendering a lint message which removes whitespace at the end of a file
  * In the "cpplint" binding, raise messages on "line 0" without a line
  * Allow construction of a ConduitEngine with a bare ConduitClient
  * update SSL error messge re:libphutil
  * Add "HTTPSFuture->addCurlOption()" for raw access to "curl_setopt()"
  * Fix an initialization issue in VectorTree
  * Add "--browse" and "--input" to "arc paste", and remove "--json" (which had no effect)
  * Add "--browse" to "arc upload" and update behavior, particularly "--json"
  * When recent PHP raises a "broken pipe" error in ExecFuture, treat it as a blocked stdin
  * When a proxy future wraps a future which throws an exception, resolve with an exception
  * Work around "mb_check_encoding(<stringlike-object>)" warning in particular versions of PHP
  * Restore the ":(attr:filter=lfs)" test for LFS
  * Detect LFS by looking for tracks in ".gitattributes" instead of using "ls-tree"
  * Replace "PhutilFileTree" with a more abstract "VectorTree"

-------------------------------------------------------------------
Mon Apr 27 06:29:53 UTC 2020 - tuukka.pasanen@ilmi.fi

- Update to version 0.0~git.20200426T084008~b81818b2:
  * Accommodate PHP 7.4 changes to certain "preg_match_all()" calls
  * Make "arc <workflow> --help" work again for workflows which haven't updated yet
  * Allow HTTPFuture callers to disable processing of "Content-Encoding" response headers
  * If the Conduit server asserts it has the "gzip" capability, compress requests
  * If the Conduit client supports gzip, make calls with "Accept-Encoding: gzip"
  * In "phutil_loggable_string()", encode every byte above 0x7F
  * Only inject legacy Arcanist workflows into "help" if run from the context of an Arcanist runtime
  * Update "arc paste" for Toolsets
  * Crudely bridge legacy workflows into "arc help"
  * Remove "backout", "close", "flag", "start", "stop", "time", and "revert" workflows
  * Upgrade (most) Differential API callsites to "differential.revision.search"
  * Restore "%d" support to "tsprintf()"
  * Upgrade "arc download" to Toolsets
  * Update "arc call-conduit" for Toolsets
  * Update "arc amend" for Toolsets
  * Add a "SymbolEngine" to support top-level ref resolution by symbol
  * Add some support code for printing refs to stdout
  * Add ref lookup for username symbols
  * Add a "RevisionSymbolRef", revision commit messages, and make "--explore" recursive
  * Add a "CommitSymbolRef" for resolving symbolic commits into stable commit hashes
  * Add a mode to "ExecFuture" that makes "resolvex()" semantics the default
  * Allow "loadHardpoints()" to accept a single ref and/or a single hardpoint
  * Remove obsolete definitions of "defineHardpoints()" in older Ref objects
  * Update "feature", "branch", and "bookmark" flows to report properly in "arc help"
  * Port "arc prompts" from wilds and fix a path issue in shell completion
  * Restore "arc alias" shell aliases
  * Remove "RefQuery" and all "HardpointLoader" code
  * Reroute all RefQuery callers to HardpointEngine
  * Bring "pro" browse queries from modern hardpoint code
  * Bring a "pro" WorkingCopyState ref to "master"
  * Introduce "arc inspect" and some of the new ref/hardpoint classes
  * Rename "getWorkingCopy()" to "getWorkingCopyIdentity()" in Arcanist
  * Trivially update "arc branch/feature" and "arc browse" for Toolsets
  * Revert "Compress requests from the Conduit client to Phabricator"
  * Compress requests from the Conduit client to Phabricator
  * Remove onboard future bulk-resolution from ConduitEngine
  * Add new "Hardpoint" classes to support request parallelization
  * Update the "WorkingCopy" API and create a fallback "Filesystem" working copy
  * Fix improper XHPAST parsing of namespace grammar like "use x as private;"
  * Fix XHPAST parsing of variadic calls
  * Update XHPAST "expect" test blocks to the new stable, human-readable format
  * Make XHPAST unit test "expect" blocks stable and human-readable
  * Remove duplication of XHPAST version in PHP and C code
  * Revert xhpast changes that impacted builds under Bison 2.3
  * Allow "phage" to print execution status on SIGINT
  * Move Phage to FuturePool
  * Introduce "FuturePool" to make it easier to manage an ongoing pool of futures
  * Update some ancient "set X=Y" environment code for new Windows execution without a shell
  * Make Windows escaping preserve "%" symbols in arguments
  * Fix error behavior of "arc version" when it encounters a library which is not a working copy
  * Fix three Windows subprocess issues
  * Fix two issues with Future key selection inside FutureIterator
  * Integrate "ServiceProfiler" into the base "Future"
  * Make "FutureIterator" queue management more formal
  * Make "exception" on Future a private property
  * Make the "result" property on Future private
  * Resolve all futures inside FutureIterator
  * Remove the "timeout" parameter from "Future->resolve()"
  * Run ls-files from the root of the directory
  * Treat all PHP language-level errors as exceptions by default
  * Switch file uploader in "arc diff" to use ConduitEngine
  * Use a named remote and branches for staging to help git-lfs
  * Remove the "preg_quote()" lint rule and update the "__CLASS__" lint rule
  * Fix an issue where "arc" may fail on startup when trying to read older "default" config
  * When "ArcanistRuntime" exits with a nonzero exit code, emit that exit code
  * Update "arc upload" for Toolsets
  * Improve error handling in ArcanistRuntime when failing to load libraries
  * Update Phage for toolsets and restore library loading behaviors
  * Fix two "implode()" order issues arising from wilds/experimental collapse
  * Port "arc upgrade" to Toolsets
  * Remove obscure features no longer supported by Toolsets from "classic" Arcanist
  * Restore old expanded include path rules for workflows which fall through
  * Require "--" as an argument terminator when running noninteractively
  * Port "arc weld" and "arc anoid" to Toolsets workflows, plus minor fixes
  * Port "arc shell-complete" to Toolsets
  * Update "arc alias" to modern workflows
  * Port "arc version" to Toolsets
  * Port "arc liberate" to Toolsets
  * Port "arc help" to Toolsets
  * Collapse Arcanist toolsets from "wilds" into "master", as an overlay layer
  * Merge utility/support changes from "wilds" to "master"
  * Don't depend on "XMLWriter" to load the lint renderer class tree
  * Merge the remainder of the "experimental" branch
  * Merge Arcanist lint changes from "experimental" branch
  * Merge "--draft" flag and related changes from "experimental" to "master"
  * Make "arcanist/" unit tests pass
  * Merge "phage" from "experimental"
  * Fully merge "libphutil/" into "arcanist/"
  * Move HTML-only intraline diff code to Phabricator
  * Omit "--" in older fallback commands for Git remote URIs
  * In Git, fall back across versions more cleanly when trying to get the URI for a remote

-------------------------------------------------------------------
Mon Jan 13 12:56:00 UTC 2020 - i@guoyunhe.me

- Update to version 0.0~git.20191118T203151~cc850163:
  * When "arc close-revision --finalize ..." skips closing a revision, print a message
  * When generating diffs in "arc diff", disable Git config option "diff.suppressBlankEmpty"
  * Make "arc land --merge" an explicit error when targeting a Perforce remote
  * In "arc land", when "remote/onto" does not exist locally, try to fetch it before giving up
  * Update "arc help land" to reference Perforce support
  * Support Perforce/Git repositories in "arc land"
  * Move Git-specific "arc land" parsing of "--onto" and "--remote" into GitLandEngine
  * Add a lint check for deprecated argument order to "implode()"
  * When running "arc land" from a detached HEAD, don't try to delete the source ref
  * Fix two "msort()" vs "msortv()" issues in "arc land"

-------------------------------------------------------------------
Mon Jan 13 12:52:01 UTC 2020 - Yunhe Guo <i@guoyunhe.me>

- Change LICENSE to %license section and update template

-------------------------------------------------------------------
Thu Oct 17 13:32:20 UTC 2019 - Richard Brown <rbrown@suse.com>

- Remove obsolete Groups tag (fate#326485)

-------------------------------------------------------------------
Wed Oct  2 11:03:20 UTC 2019 - Yunhe Guo <i@guoyunhe.me>

- Add conflicts to arc package because they use the same bin name

-------------------------------------------------------------------
Wed Sep 18 08:43:22 UTC 2019 - Yunhe Guo <i@guoyunhe.me>

- Disable _service for Factory submit
- Update remove-arc-upgrade.patch

-------------------------------------------------------------------
Tue Sep 17 11:50:50 UTC 2019 - Yunhe Guo <i@guoyunhe.me>

- Add resources folder which is needed for spell checking

-------------------------------------------------------------------
Tue Sep 17 11:30:04 UTC 2019 - Yunhe Guo <i@guoyunhe.me>

- Update to git version 3cdfe1ff
- Change branch to master because it is more reliable than stable

-------------------------------------------------------------------
Tue Sep  4 08:13:22 UTC 2018 - Andreas Schneider <asn@cryptomilk.org>

- Update to git version d09b5beb

-------------------------------------------------------------------
Wed Jun 14 15:16:22 UTC 2017 - asn@cryptomilk.org

- Initial package
