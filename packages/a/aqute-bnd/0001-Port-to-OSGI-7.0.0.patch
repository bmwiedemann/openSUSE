From e9469ae2ca9f3d64fd88e0d8aaf8ebeea7bb937d Mon Sep 17 00:00:00 2001
From: Marian Koncek <mkoncek@redhat.com>
Date: Fri, 12 Apr 2019 14:59:30 +0200
Subject: [PATCH] Port to OSGI 7.0.0

---
 .../src/aQute/bnd/main/ReporterLogger.java    | 16 +++++++++
 .../src/aQute/bnd/testing/TestingLog.java     | 35 +++++++++++++++++++
 2 files changed, 51 insertions(+)

diff --git a/biz.aQute.bnd/src/aQute/bnd/main/ReporterLogger.java b/biz.aQute.bnd/src/aQute/bnd/main/ReporterLogger.java
index ce86cd6..735db9c 100644
--- a/biz.aQute.bnd/src/aQute/bnd/main/ReporterLogger.java
+++ b/biz.aQute.bnd/src/aQute/bnd/main/ReporterLogger.java
@@ -1,5 +1,6 @@
 package aQute.bnd.main;
 
+import org.osgi.framework.Bundle;
 import org.osgi.framework.ServiceReference;
 import org.osgi.service.log.LogService;
 import org.slf4j.Logger;
@@ -8,6 +9,7 @@ import org.slf4j.LoggerFactory;
 import aQute.service.reporter.Reporter;
 
 public class ReporterLogger implements LogService {
+	private final static RuntimeException UNSUPPORTED = new UnsupportedOperationException("This method is provided for backwards compatibility");
 	private final static Logger	logger	= LoggerFactory.getLogger(ReporterLogger.class);
 
 	private Reporter	reporter;
@@ -108,4 +110,18 @@ public class ReporterLogger implements LogService {
 		}
 	}
 
+	@Override
+	public org.osgi.service.log.Logger getLogger(String name) {throw UNSUPPORTED;}
+
+	@Override
+	public org.osgi.service.log.Logger getLogger(Class< ? > clazz) {throw UNSUPPORTED;}
+
+	@Override
+	public <L extends org.osgi.service.log.Logger> L getLogger(String name, Class<L> loggerType) {throw UNSUPPORTED;}
+
+	@Override
+	public <L extends org.osgi.service.log.Logger> L getLogger(Class< ? > clazz, Class<L> loggerType) {throw UNSUPPORTED;}
+
+	@Override
+	public <L extends org.osgi.service.log.Logger> L getLogger(Bundle bundle, String name, Class<L> loggerType) {throw UNSUPPORTED;}
 }
diff --git a/biz.aQute.bndlib/src/aQute/bnd/testing/TestingLog.java b/biz.aQute.bndlib/src/aQute/bnd/testing/TestingLog.java
index d9c3e78..ec7dd27 100644
--- a/biz.aQute.bndlib/src/aQute/bnd/testing/TestingLog.java
+++ b/biz.aQute.bndlib/src/aQute/bnd/testing/TestingLog.java
@@ -8,7 +8,9 @@ import java.util.regex.Pattern;
 
 import org.osgi.framework.Bundle;
 import org.osgi.framework.ServiceReference;
+import org.osgi.service.log.Logger;
 import org.osgi.service.log.LogEntry;
+import org.osgi.service.log.LogLevel;
 import org.osgi.service.log.LogService;
 
 import aQute.bnd.annotation.component.Activate;
@@ -26,6 +28,8 @@ import aQute.bnd.testing.TestingLog.Config;
 @Component(designate = Config.class)
 @SuppressWarnings("rawtypes")
 public class TestingLog implements LogService {
+	private final static RuntimeException UNSUPPORTED = new UnsupportedOperationException("This method is provided for backwards compatibility");
+
 	boolean			stacktrace;
 	boolean			direct;
 	int				level;
@@ -125,6 +129,22 @@ public class TestingLog implements LogService {
 					return sb.toString();
 				}
 			}
+
+			@Override
+			public LogLevel getLogLevel() {throw UNSUPPORTED;}
+
+			@Override
+			public String getLoggerName() {throw UNSUPPORTED;}
+
+			@Override
+			public long getSequence() {throw UNSUPPORTED;}
+
+			@Override
+			public String getThreadInfo() {throw UNSUPPORTED;}
+
+			@Override
+			public StackTraceElement getLocation() {throw UNSUPPORTED;}
+
 		};
 		entries.add(entry);
 		if (direct)
@@ -197,4 +217,19 @@ public class TestingLog implements LogService {
 		return n != 0;
 	}
 
+	@Override
+	public Logger getLogger(String name) {throw UNSUPPORTED;}
+
+	@Override
+	public Logger getLogger(Class< ? > clazz) {throw UNSUPPORTED;}
+
+	@Override
+	public <L extends Logger> L getLogger(String name, Class<L> loggerType) {throw UNSUPPORTED;}
+
+	@Override
+	public <L extends Logger> L getLogger(Class< ? > clazz, Class<L> loggerType) {throw UNSUPPORTED;}
+
+	@Override
+	public <L extends Logger> L getLogger(Bundle bundle, String name, Class<L> loggerType) {throw UNSUPPORTED;}
+
 }
-- 
2.20.1

