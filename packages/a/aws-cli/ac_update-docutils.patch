diff -Nru aws-cli-1.33.4.orig/requirements-docs.txt aws-cli-1.33.4/requirements-docs.txt
--- aws-cli-1.33.4.orig/requirements-docs.txt	2024-06-07 20:05:42.000000000 +0200
+++ aws-cli-1.33.4/requirements-docs.txt	2024-06-10 17:29:56.087910543 +0200
@@ -3,7 +3,7 @@
 jinja2<3.1
 
 
-docutils>=0.10,<0.17
+docutils>=0.10
 Sphinx==1.4.9
 -e .
 # alabaster version 0.7.13 requires Sphinx>1.6
diff -Nru aws-cli-1.33.4.orig/setup.cfg aws-cli-1.33.4/setup.cfg
--- aws-cli-1.33.4.orig/setup.cfg	2024-06-07 20:05:42.000000000 +0200
+++ aws-cli-1.33.4/setup.cfg	2024-06-10 17:30:13.334624224 +0200
@@ -4,7 +4,7 @@
 [metadata]
 requires_dist =
         botocore==1.34.122
-        docutils>=0.10,<0.17
+        docutils>=0.10
         s3transfer>=0.10.0,<0.11.0
         PyYAML>=3.10,<6.1
         colorama>=0.2.5,<0.4.7
diff -Nru aws-cli-1.33.4.orig/setup.py aws-cli-1.33.4/setup.py
--- aws-cli-1.33.4.orig/setup.py	2024-06-07 20:05:42.000000000 +0200
+++ aws-cli-1.33.4/setup.py	2024-06-10 17:29:17.897806494 +0200
@@ -25,7 +25,7 @@
 
 install_requires = [
     'botocore==1.34.122',
-    'docutils>=0.10,<0.17',
+    'docutils>=0.10',
     's3transfer>=0.10.0,<0.11.0',
     'PyYAML>=3.10,<6.1',
     'colorama>=0.2.5,<0.4.7',
diff -Nru aws-cli-1.33.4.orig/setup.py~ aws-cli-1.33.4/setup.py~
--- aws-cli-1.33.4.orig/setup.py~	1970-01-01 01:00:00.000000000 +0100
+++ aws-cli-1.33.4/setup.py~	2024-06-07 20:05:42.000000000 +0200
@@ -0,0 +1,91 @@
+#!/usr/bin/env python
+import codecs
+import os.path
+import re
+import sys
+
+from setuptools import setup, find_packages
+
+
+here = os.path.abspath(os.path.dirname(__file__))
+
+
+def read(*parts):
+    return codecs.open(os.path.join(here, *parts), 'r').read()
+
+
+def find_version(*file_paths):
+    version_file = read(*file_paths)
+    version_match = re.search(r"^__version__ = ['\"]([^'\"]*)['\"]",
+                              version_file, re.M)
+    if version_match:
+        return version_match.group(1)
+    raise RuntimeError("Unable to find version string.")
+
+
+install_requires = [
+    'botocore==1.34.122',
+    'docutils>=0.10,<0.17',
+    's3transfer>=0.10.0,<0.11.0',
+    'PyYAML>=3.10,<6.1',
+    'colorama>=0.2.5,<0.4.7',
+    'rsa>=3.1.2,<4.8',
+]
+
+
+setup_options = dict(
+    name='awscli',
+    version=find_version("awscli", "__init__.py"),
+    description='Universal Command Line Environment for AWS.',
+    long_description=read('README.rst'),
+    author='Amazon Web Services',
+    url='http://aws.amazon.com/cli/',
+    scripts=['bin/aws', 'bin/aws.cmd',
+             'bin/aws_completer', 'bin/aws_zsh_completer.sh',
+             'bin/aws_bash_completer'],
+    packages=find_packages(exclude=['tests*']),
+    include_package_data=True,
+    install_requires=install_requires,
+    extras_require={},
+    license="Apache License 2.0",
+    python_requires=">= 3.8",
+    classifiers=[
+        'Development Status :: 5 - Production/Stable',
+        'Intended Audience :: Developers',
+        'Intended Audience :: System Administrators',
+        'Natural Language :: English',
+        'License :: OSI Approved :: Apache Software License',
+        'Programming Language :: Python',
+        'Programming Language :: Python :: 3',
+        'Programming Language :: Python :: 3 :: Only',
+        'Programming Language :: Python :: 3.8',
+        'Programming Language :: Python :: 3.9',
+        'Programming Language :: Python :: 3.10',
+        'Programming Language :: Python :: 3.11',
+        'Programming Language :: Python :: 3.12',
+    ],
+    project_urls={
+        'Source': 'https://github.com/aws/aws-cli',
+        'Reference': 'https://docs.aws.amazon.com/cli/latest/reference/',
+        'Changelog': 'https://github.com/aws/aws-cli/blob/develop/CHANGELOG.rst',
+    },
+)
+
+
+if 'py2exe' in sys.argv:
+    # This will actually give us a py2exe command.
+    import py2exe
+    # And we have some py2exe specific options.
+    setup_options['options'] = {
+        'py2exe': {
+            'optimize': 0,
+            'skip_archive': True,
+            'dll_excludes': ['crypt32.dll'],
+            'packages': ['docutils', 'urllib', 'httplib', 'HTMLParser',
+                         'awscli', 'ConfigParser', 'xml.etree', 'pipes'],
+        }
+    }
+    setup_options['console'] = ['bin/aws']
+
+
+setup(**setup_options)
