<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>60df596f881354285bee80514ed9eb53</srcmd5>
    <version>24.06.0~0</version>
    <time>1731956440</time>
    <user>anag+factory</user>
    <comment>Adaptivecpp is an open implementation of SYCL for CPUs and GPUs.

AFAIK we do miss an open source SYCL implementation in Factory.</comment>
    <requestid>1224581</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>5b83f9e41a910b442549f29b87e29de6</srcmd5>
    <version>24.06.0~0</version>
    <time>1732650945</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1226349</requestid>
  </revision>
  <revision rev="3" vrev="3">
    <srcmd5>c3e25afcd545b2d8430902dd6f64b0db</srcmd5>
    <version>24.06.0~0</version>
    <time>1733654219</time>
    <user>anag+factory</user>
    <comment>- Split OpenMP runtime from the generic library
</comment>
    <requestid>1228747</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>1216d28b128bd04d6b28576f8960a490</srcmd5>
    <version>24.10.0~0</version>
    <time>1736279519</time>
    <user>anag+factory</user>
    <comment>- Update to version 24.10.0~0:
  * AdaptiveCpp 24.10 introduces additional JIT-time optimizations,
    especially at the default ACPP_ADAPTIVITY_LEVEL=1 setting.
    Users may see substantial performance improvements for some
    kernels.
  * ACPP_ALLOCATION_TRACKING=1 was added which can enable the JIT
    compiler to include even more information about memory usage in
    code generation, further improving performance in some cases.
  * Added full support for the SYCL 2020 group algorithms library
    in the default generic JIT compiler on all backends.
  * Additional C++ parallel STL algorithms supported for offloading
  * Introducing the acpp::algorithms library: The algorithms
    underneath the C++ parallel STL offloading support are now also
    documented and exposed on the SYCL level for users who wish to
    invoke them from SYCL with a higher degree of control.
  * Added framework for JIT-time reflection to generic JIT
    compiler.
  * New extensions:
    ~ AdaptiveCpp_restrict_ptr
    ~ AdaptiveCpp_jit::compile_if
- Remove requirement on LLVM 18 and update version
- Renamed libraries to libacpp-*
- Deleted 0002-CMake-acpp-clang-to-MODULE.patch: upstreamed
- Renamed 0003-Remove-realpath-in-acpp.patch to
  0002-Remove-realpath-in-acpp.patch</comment>
    <requestid>1235204</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>3335c31ce23cc7bb3f440db6b9283cae</srcmd5>
    <version>24.10.0</version>
    <time>1745134532</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1270916</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>bdc116076d6391d1477124afbda2ab97</srcmd5>
    <version>24.10.0</version>
    <time>1746542610</time>
    <user>anag_factory</user>
    <comment>- Use Source URL instead of _service to fetch the source code</comment>
    <requestid>1274861</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>2c112631db550b2d89d335a9c51f383f</srcmd5>
    <version>25.02.0</version>
    <time>1747061252</time>
    <user>anag_factory</user>
    <comment>- Update to version 25.02.0:
  * Introducing AdaptiveCpp portable CUDA (PCUDA):
    AdaptiveCpp 25.02 introduces support for a new programming
    model in its generic JIT compiler: The portable CUDA (PCUDA)
    model. This programming model is a dialect of the CUDA and HIP
    programming model. AdaptiveCpp PCUDA allows taking CUDA or HIP
    source code, recompile with AdaptiveCpp, and obtain a single
    single binary that can dispatch kernels to CPUs, Intel GPUs,
    AMD GPUs, NVIDIA GPUs (or all at the same time).
  * Full highlights at:
    https://github.com/AdaptiveCpp/AdaptiveCpp/releases/tag/v25.02.0
  * Full changelog at:
    https://github.com/AdaptiveCpp/AdaptiveCpp/compare/v24.10.0...v25.02.0
* Drop adaptivecpp-24.10.0-cmake4.patch: upstreamed
</comment>
    <requestid>1276334</requestid>
  </revision>
  <revision rev="8" vrev="2">
    <srcmd5>70a39a301bf0cb835f3ecaa377768cc9</srcmd5>
    <version>25.02.0</version>
    <time>1749539310</time>
    <user>anag_factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1284234</requestid>
  </revision>
</revisionlist>
