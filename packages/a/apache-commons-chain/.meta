<package name="apache-commons-chain" project="openSUSE:Factory">
  <title>An implementation of the GoF Chain of Responsibility pattern</title>
  <description>A popular technique for organizing the execution of complex
processing flows is the &quot;Chain of Responsibility&quot; pattern, as
described (among many other places) in the classic &quot;Gang of Four&quot;
design patterns book. Although the fundamental API contracts
required to implement this design pattern are extremely simple,
it is useful to have a base API that facilitates using the pattern,
and (more importantly) encouraging composition of command
implementations from multiple diverse sources.
Towards that end, the Chain API models a computation as a series
of &quot;commands&quot; that can be combined into a &quot;chain&quot;. The API for a
command consists of a single method (execute()), which is passed
a &quot;context&quot; parameter containing the dynamic state of the
computation, and whose return value is a boolean that determines
whether or not processing for the current chain has been completed
(true), or whether processing should be delegated to the next
command in the chain (false).

</description>
  <devel project="Java:packages" package="apache-commons-chain"/>
  <url>http://commons.apache.org/%{base_name}/</url>
</package>
