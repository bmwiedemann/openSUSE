Revert 70c197cc4 (" Make OCamlbuild plugin not assume that dynamic linking is supported.")
--- a/src/oasis/OASISLibrary.ml
+++ b/src/oasis/OASISLibrary.ml
@@ -148,16 +148,16 @@ let generated_unix_files
 
   (* Add C library to be built *)
   let acc_nopath =
-    if bs.bs_c_sources <> [] then begin
-      ["lib"^cs.cs_name^"_stubs"^ext_lib]
-      ::
-      if has_native_dynlink then
-        ["dll"^cs.cs_name^"_stubs"^ext_dll] :: acc_nopath
-      else
-        acc_nopath
-    end else begin
+    if bs.bs_c_sources <> [] then
+      begin
+        ["lib"^cs.cs_name^"_stubs"^ext_lib]
+        ::
+          ["dll"^cs.cs_name^"_stubs"^ext_dll]
+        ::
+          acc_nopath
+      end
+    else
       acc_nopath
-    end
   in
 
   (* All the files generated *)
@@ -173,3 +173,4 @@ let generated_unix_files
 
 
 let schema = OASISLibrary_intern.schema
+
--- a/src/plugins/ocamlbuild/MyOCamlbuildBase.ml
+++ b/src/plugins/ocamlbuild/MyOCamlbuildBase.ml
@@ -192,9 +192,8 @@ let dispatch t e =
                  flag ["link"; "library"; "ocaml"; "native"; tag_libstubs lib]
                    (S[A"-cclib"; A("-l"^(nm_libstubs lib))]);
 
-                 if bool_of_string (BaseEnvLight.var_get "native_dynlink" env) then
-                   flag ["link"; "program"; "ocaml"; "byte"; tag_libstubs lib]
-                       (S[A"-dllib"; A("dll"^(nm_libstubs lib))]);
+                 flag ["link"; "program"; "ocaml"; "byte"; tag_libstubs lib]
+                   (S[A"-dllib"; A("dll"^(nm_libstubs lib))]);
 
                  (* When ocaml link something that use the C library, then one
                     need that file to be up to date.
