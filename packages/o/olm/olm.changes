-------------------------------------------------------------------
Mon Sep 20 07:24:12 UTC 2021 - ecsos <ecsos@opensuse.org>

- Update to 3.2.6
  * Fix building on various platforms when using CMake.  
    Building from the Makefile still assumes that it is using gcc.
- Changes from 3.2.5
  * Add functions for getting error codes rather than error strings.
  * Only export olm symbols.
  * Improve error handling in unpickle functions.
  * Add support for fallback keys to the Objective-C and Android bindings.

-------------------------------------------------------------------
Thu Jun  3 01:12:00 UTC 2021 - Ferdinand Thiessen <rpm@fthiessen.de>

- Update to version 3.2.4
  * Add some checks for invalid input and ensure all fields are
    initialized.
  * Include LibreJS license tags.
- Add cmake-enable-testing-builddir.patch
- Enable testing

-------------------------------------------------------------------
Sat Apr 17 12:00:00 UTC 2021 - cunix@mail.de

- Build and ship Python bindings.

-------------------------------------------------------------------
Fri Apr 16 04:40:01 UTC 2021 - Wang Jun <jgwang@suse.com>

- Update to 3.2.2
  * Fixes in the TypeScript definition file.
  * CMake build fixes.  Thanks to Gorgurov Alexey.
  * Change the JavaScript package name to ``@matrix-org/olm``.  Note that
    this means that packages will need to change their ``require`` or
    ``import`` statements to use this new name.
  * Include file checksums in the JavaScript package.
  * Fix length calculation in fallback key json.  Thanks to Tobias Furuholm.
  * Add a new function to calculate the correct base64 encoding for SAS.
    (Currently only available in the C API.)
  * Add the ability to specify a pickle key in the Objective-C binding.
  * Add pkg-config file on Unix-like systems.

-------------------------------------------------------------------
Sun Nov 22 14:32:26 UTC 2020 - Marcel Kuehlhorn <tux93@opensuse.org>

- Update to 3.2.1
  * Add support for fallback keys (MSC2732).
  * Allow some arguments in the JavaScript bindings to be either
    Uint8Array or strings.
  * Fixes to the TypeScript definition file.
  * Improvements to the JavaScript group demo.
  * Ensure that the other party's public key has been set in SAS module.
  * Fix building with newer versions of emscripten, and simplify makefile.
  * Reduce pollution of the global namespace in the Javascript binding.
  * Fixes in the TypeScript definition file.

-------------------------------------------------------------------
Fri Jun 12 13:08:42 UTC 2020 - Marcel Kuehlhorn <tux93@opensuse.org>

- Update to 3.1.5
  * Build improvements:
    - Fix CMake handling when installing in a non-standard location.
    - Add support in the Makefile for creating a WASM-ready archive.
    - Improve support for LLVM is Makefile.
  * Add a TypeScript definition file.
  * Some documentation and example fixes.
  * Add list of bindings to the README.

-------------------------------------------------------------------
Wed Jan 29 07:32:38 UTC 2020 - ecsos@opensuse.org

- Update to 3.1.4
  - Build improvements:
    - Install headers in the system-configured include directory with CMake.
    - Overwrite symbolic links when installing with make.
    - Improve compatibility with more emscripten versions.
  - Don't use hypothesis in Python unit tests.
  - Some documentation improvements.

- Run spec-cleaner.

-------------------------------------------------------------------
Sat Aug 10 21:10:15 UTC 2019 - ecsos@opensuse.org

- Add missing cmake files.

-------------------------------------------------------------------
Mon Jul  8 11:22:13 UTC 2019 - ecsos@opensuse.org

- Update to 3.1.3
  - This release fixes unicode issues in the Python bindings, 
    and adds some clarifications to the documentation.
  - Since this release does not have any changes that affect 
    the JavaScript bindings, there is no new NPM package.
- Changes from 3.1.2
  - This release updates the Android bindings to use a newer
    Android SDK version.
- Changes from 3.1.1
  - Include the SAS files and tests in the CMake files.
  - Address some build issues on Windows.
- Changes from 3.1.0
  - Add functions to support Short Authentication String key 
    verification.  The new functions are in the sas.h header file.
    The Android, iOS, JavaScript and Python bindings also include
    corresponding functions.
  - Add functions to perform public key signing.  These are meant 
    for use with cross-signing.  The new functions are 
    olm_pk_signing_size, olm_pk_signing, olm_pk_signing_last_error,
    olm_clear_pk_signing, olm_pk_signing_key_from_seed, 
    olm_pk_signing_seed_length, olm_pk_signing_public_key_length,
    olm_pk_signature_length, and olm_pk_sign.  
    Signatures generated by olm_pk_sign can be verified using 
    olm_ed25519_verify.  The Android, iOS, JavaScript and Python
    bindings also include corresponding functions.
  - Fix compilation under some compilers.
  - JavaScript wrapper:
    - Improved compatibility with newer versions of Emscripten, 
      and dropped support
    - for some older versions of Emscripten.
  - Python wrapper:
    - Build fixes.
    - Add bindings for the public key encryption/decryption 
      functions from olm 2.3.0.
- Changes from 3.0.0
  - Support for building using cmake. Thanks to Konstantinos 
    Sideris.
  - Add more functions for managing private keys in the public 
    key decryption functionality. These are meant for use with
    server-side encrypted key backups.  The new functions are 
    olm_pk_private_key_length, olm_pk_key_from_private, and 
    olm_pk_get_private_key.
  - olm_pk_generate_key and olm_pk_generate_key_random_length are
    deprecated: to generate a random key, use 
    olm_pk_key_from_private with random bytes as the private key.
  - Python wrapper:
    - BREAKING CHANGE: This release introduces a new API for the 
      Python wrapper, thanks to Damir JeliÄ‡.  The new API should
      be much easier to use for Python developers.  However, this 
      means that existing code will need to be rewritten to use
      the new API.
  - JavaScript wrapper:
    - BREAKING CHANGE: Olm now uses WebAssembly which means it 
      needs to load the wasm file asynchronously, and therefore 
      needs to be started up asynchronously. The imported module 
      now has an init() method which returns a promise. 
      The library cannot be used until this promise resolves. 
      It will reject if the library fails to start.
    - Using olm/olm.js will use the WebAssembly version of the 
      library.  For environments that do not support WebAssembly,
      use olm/olm_legacy.js.
  - Objective-C wrapper:
    - Add support for the public key encryption/decryption functionality.
- Update source url.
- Run spec-cleaner.

-------------------------------------------------------------------
Fri Jul  6 12:00:00 UTC 2018 - cunix@bitmessage.ch

- Ship License in libolm2 package
- spec reshuffel
- Update to 2.3.0
  * Avoid C99 inside C++ code
  * Support building as a static library
  * Add methods for public key encryption and decryption

-------------------------------------------------------------------
Sat Jun 30 15:00:00 UTC 2018 - cunix@bitmessage.ch

- spec cleanup to fix build warnings

-------------------------------------------------------------------
Wed Jun 27 01:30:59 UTC 2018 - windowskaput@gmail.com

- change spec and add devel pakage 

-------------------------------------------------------------------
Sun Apr 15 12:00:00 UTC 2018 - cunix@bitmessage.ch

- Initial Package with snapshot version 2.2.2
