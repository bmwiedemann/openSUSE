--- rt-11.0.6+2/build.gradle
+++ rt-11.0.6+2/build.gradle
@@ -2494,7 +2494,7 @@
     commonModuleSetup(project, [ 'base', 'graphics' ])
 
     dependencies {
-        compile name: SWT_FILE_NAME
+        compile group: "org.eclipse.swt", name: "swt", version: "3.108.0"
     }
 
     classes {
@@ -4613,35 +4613,35 @@
 project(":apps") {
     // The apps build is Ant based, we will exec ant from gradle.
 
-    // Download the Lucene libraries needed for the Ensemble8 app
-    getConfigurations().create("lucene");
-    dependencies {
-        lucene group: "org.apache.lucene", name: "lucene-core", version: "7.1.0"
-        lucene group: "org.apache.lucene", name: "lucene-grouping", version: "7.1.0"
-        lucene group: "org.apache.lucene", name: "lucene-queryparser", version: "7.1.0"
-    }
+    //Download the Lucene libraries needed for the Ensemble8 app
+    //getConfigurations().create("lucene");
+    //dependencies {
+    //    lucene group: "org.apache.lucene", name: "lucene-core", version: "7.1.0"
+    //    lucene group: "org.apache.lucene", name: "lucene-grouping", version: "7.1.0"
+    //    lucene group: "org.apache.lucene", name: "lucene-queryparser", version: "7.1.0"
+    //}
 
     // Copy Lucene libraries into the Ensemble8/lib directory
     File ensembleLibDir = rootProject.file("apps/samples/Ensemble8/lib");
-    def libNames = [ "lucene-core-7.1.0.jar",
-                     "lucene-grouping-7.1.0.jar",
-                     "lucene-queryparser-7.1.0.jar" ]
-
-
-    task getLucene(type: Copy) {
-        doFirst {
-            ensembleLibDir.mkdirs();
-        }
-        into ensembleLibDir
-        includeEmptyDirs = false
-        configurations.lucene.files.each { f ->
-            libNames.each { name ->
-                if (name == f.getName()) {
-                    from f.getPath()
-                }
-            }
-        }
-    }
+    //def libNames = [ "lucene-core-7.1.0.jar",
+    //                 "lucene-grouping-7.1.0.jar",
+    //                 "lucene-queryparser-7.1.0.jar" ]
+
+
+    //task getLucene(type: Copy) {
+    //    doFirst {
+    //        ensembleLibDir.mkdirs();
+    //    }
+    //    into ensembleLibDir
+    //    includeEmptyDirs = false
+    //    configurations.lucene.files.each { f ->
+    //        libNames.each { name ->
+    //            if (name == f.getName()) {
+    //                from f.getPath()
+    //            }
+    //        }
+    //    }
+    //}
 
     compileTargets { t ->
         List<String> params = []
@@ -4656,7 +4656,7 @@
         params << "-Drun.patch=@${rootProject.buildDir}/${RUNARGSFILE}"
 
         def appsJar = project.task("appsJar${t.capital}") {
-            dependsOn(sdk, getLucene)
+            dependsOn(sdk)
             doLast() {
                 ant(t.name,
                       projectDir.path,
