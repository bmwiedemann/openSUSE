<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>dfd11997d5830fc36c13071caa5abadd</srcmd5>
    <version>6.1.0</version>
    <time>1568983859</time>
    <user>maxlin_factory</user>
    <comment>Here comes an important library, that the current blender will
depend upon. Therefore, it is part of official blender builds
as well.</comment>
    <requestid>725698</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>11b6e36d92d6663680a7c81995a80418</srcmd5>
    <version>6.1.0</version>
    <time>1574337472</time>
    <user>dimstar_suse</user>
    <comment>- Replace cmake(TBB) BuildRequires with equivalent tbb-devel, the
  latter is also available on Leap 15.x. (forwarded request 749685 from StefanBruens)</comment>
    <requestid>749687</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>727f55578960a961b94136c956e04a99</srcmd5>
    <version>6.2.1</version>
    <time>1575463814</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>750507</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>8d070d876395d489ff1456d22ae2a254</srcmd5>
    <version>7.0.0</version>
    <time>1581456284</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>773225</requestid>
  </revision>
  <revision rev="5" vrev="2">
    <srcmd5>febae76d1b764f24440b7ae57812cf5c</srcmd5>
    <version>7.0.0</version>
    <time>1582555877</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>778523</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>a2a03543f4d394abc00e3e7b6da40751</srcmd5>
    <version>7.1.0</version>
    <time>1600801487</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>829925</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>afc2f956b4356217b4a009d9fecd0b06</srcmd5>
    <version>8.1.0</version>
    <time>1625516570</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>903990</requestid>
  </revision>
  <revision rev="8" vrev="2">
    <srcmd5>e170b7f137e3169b8b93e5130997385a</srcmd5>
    <version>8.1.0</version>
    <time>1629269759</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>912465</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>da18f5b3583891ef5f24805d596043ba</srcmd5>
    <version>9.0.0</version>
    <time>1637794477</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 9.0.0
  * This version introduces ABI changes relative to older major
    releases, so to preserve ABI compatibility it might be
    necessary to define the macro OPENVDB_ABI_VERSION_NUMBER=N,
    where, for example, N is 7 for Houdini 18.5 and 8 for Houdini
    19.0.
  * Official release of NanoVDB, which for the first time offers
    GPU support for static sparse volumes in OpenVDB. See the
    documentation for details.
  * Faster build times from support for explicit template
    instantiation, which is enabled by default for most of the
    tools.
  * Added support for OpenEXR 3. This is contributed by Cary
    Phillips.
  * Added transient data to the RootNode, InternalNode, and
    LeafNode.
  New features:
  * NanoVDB, which for the first time offers GPU support for static
    sparse volumes in OpenVDB.
  Improvements:
  * Added tools::countActiveLeafVoxels(),
    tools::countInactiveVoxels(), tools::countInactiveLeafVoxels()
    and tools::activeTiles() to perform multi-threaded counting.
    The Tree methods now use these implementations.
  * Moved from the deprecated TBB task scheduler to TBB arenas.
    Various methods now respect the TBB arena state they were
    invoked from.
  * Introduced a new thread/Threading.h header to consolidate calls
    to third-party threading methods.
  * Minor performance improvements to dilation calls in fast
    sweeping algorithms.
  * Added hsvtogrb() and rgbtohsv() AX helper functions for
    converting hue, saturation and value inputs to RGB values and
    vice-versa.
  * PointDataGrid conversion can now be performed using 32-bit
    float arrays.
  * Improved support for size_t grid types on systems where size_t
    is a unique type. [Contributed by Brecht Van Lommel]
  * Add support for dilation in one direction and extending a field
    in one direction in fast sweeping algorithms.
  * Added PNG support to vdb_render which can be enabled with
    during CMake with -DUSE_PNG=ON.
  * Explicit template instantiation has been enabled by default for
    most of the tools. This pre-compiles template instantiations
    into the core library to reduce the time spent compiling code
    in downstream libraries or applications.
  * Added a python binding for OpenVDB AX which allows you to
    invoke accelerated AX code from the python module.
  Bug Fixes:
  * Fixed a bug where ax::run() would crash if it could not parse a
    single statement.
  ABI changes:
  * Added transient data to the RootNode, InternalNode, and
    LeafNode.
  API changes:
  * DynamicNodeManager can now set one grain size for threading
    across leaf nodes and another for threading across non-leaf
    nodes.
  * StringGrid and StringTrees are deprecated.
  * The NullInterrupter is now a virtual base class to help reduce
    compile-time instantiation cost.
  Houdini:
  * Fix crash in VDB Combine in Copy B mode if the second input has
    more VDBs than the first.
  * VDB Vector Merge SOP is now VDB Vector From Scalar SOP to
    distinguish it from the VDB Merge SOP. It keeps the same
    internal name so this is merely a label change.
  * Add option to pass in OPENVDB_DSO_NAMES to CMake to configure
    which Houdini DSOs are compiled.
  * VDB Activate SOP now has an option for the expansion pattern to
    use for dilation.
  * The label for Voxels to Expand is now Expand Voxels to match
    Houdini.
  * Fix bug to allow VDB LOD SOPs to be chained together.
  * SOP Extrapolate supports dilation in one direction and
    extending a field in one (domain) direction.
  * The default OpenVDB ABI is now 8 for Houdini versions &gt; 18.5.
  * VDB Visualize Tree SOP is now multi-threaded and provides
    slicing and color remapping.
  * A new HoudiniInterrupter has been added that derives from the
    NullInterrupter and the Interrupter is now deprecated. All the
    SOPs have been updated to use the new HoudiniInterrupter.
  * Add a sanitizer in SOP OpenVDB Extrapolate when expanding a
    narrow-band level-set with a dilation value of 0, which will
    result in no operation.
  Build:
  * Added support for TBB 2021.
  * Enabled the OPENVDB_FUTURE_DEPRECATION variable by default to
    warn on upcoming deprecations.
  * Introduced a OPENVDB_DOXYGEN_INTERNAL CMake variable which is
    ON by default and removes the majority of internal namespaces
    from the generated doxygen.
  * Improved the doxygen deprecation listings, folder layouts and
    fixes issues when using later versions of doxygen.
  * Build fixes for MinGW on Windows. [Contributed by Brecht
    Sanders]
  * Added support for OpenEXR 3. [Contributed by Cary Phillips]
  * Added an OPENVDB_NAMESPACE_SUFFIX CMake string option which
    provides the ability to customise the VDB namespace.
  * The Python Module now appends the base directory defined by
    Python_SITELIB to the default install path (typically
    dist-packages or site-packages). [Contributed by Ignacio Vizzo]
  * As of this release, VFX Reference Platform 2019 is no longer
    supported. CMake now issues deprecation warnings for 2020 VFX
    Reference Platform version dependencies.
  * Build fixes for OpenVDB AX with C++17 and greater.
  * Bumped the new blosc version future minimum to 1.17.0.
  * OpenEXR is now optional for vdb_render. It can be enabled with
    -DUSE_EXR=ON.
- Renenable vdb_render without OpenEXR
- Update constraints and limit memory for parallel build jobs
</comment>
    <requestid>933583</requestid>
  </revision>
  <revision rev="10" vrev="2">
    <srcmd5>56dd021d8a666d169a9da71404624f1d</srcmd5>
    <version>9.0.0</version>
    <time>1662926241</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1002446</requestid>
  </revision>
  <revision rev="11" vrev="3">
    <srcmd5>29e82a65f872bed0bed0a0fc8e0c1b75</srcmd5>
    <version>9.0.0</version>
    <time>1666263260</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1030113</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>6cf394d28fb801d2a57a436c4db51cca</srcmd5>
    <version>11.0.0</version>
    <time>1705952281</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1140403</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>a84baa6c3bc58262a0ac535d2d1ca4a7</srcmd5>
    <version>10.1.0</version>
    <time>1707415341</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1145007</requestid>
  </revision>
  <revision rev="14" vrev="2">
    <srcmd5>0d380b77d76f5be3f74d4b20f66fe89c</srcmd5>
    <version>10.1.0</version>
    <time>1731435813</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1223603</requestid>
  </revision>
  <revision rev="15" vrev="2">
    <srcmd5>d0f428c4610d989d2e0170ce040d688e</srcmd5>
    <version>11.0.0</version>
    <time>1731857988</time>
    <user>anag+factory</user>
    <comment>- Update to 11.0.0 again as blender 4.2.x now supports this
  version. See Changes entry below for the details of the version
  update.
- walk through the cmake options to see if we could enable more
  features:
    - openvdb_ax: even with LLVM15 it was still complaining about
      mismatching types. Skipping this for now
    - vdb_tool:  works except for nanovdb support
      - Added fix-tool-building.patch so that libpng16-devel files
        are actually used properly
    - python support requires a nanobind package
    - testing log4cpp support
- track quilt series file for easier patching without rpm-build
</comment>
    <requestid>1224469</requestid>
  </revision>
</revisionlist>
