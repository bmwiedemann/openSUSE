--- /dev/null
+++ b/dune-project
@@ -0,0 +1,2 @@
+(lang dune 1.0)
+(name extlib)
--- a/src/configure.ml
+++ b/src/configure.ml
@@ -1,18 +1,17 @@
 open Printf
 
-let show_bytes s =
-    let (_:int) = Sys.command (sprintf "ocamlfind query -format %s bytes" (Filename.quote s)) in ()
-
 let () =
   match Sys.argv with
   | [|_;"-cppo-args"|] ->
     let version = Scanf.sscanf Sys.ocaml_version "%d.%d." (fun major minor -> major * 100 + minor) in
-    printf "-D \\\"OCAML %d\\\"\n" version;
-    print_endline (if Sys.word_size = 32 then "-D WORD_SIZE_32 " else "");
-    show_bytes "-D WITH_BYTES";
+    printf "-D\n";
+    printf "OCAML %d\n" version;
+    if Sys.word_size = 32 then (print_endline "-D"; print_endline "WORD_SIZE_32 ");
+    print_endline "-D";
+    print_endline "WITH_BYTES";
     exit 0
   | [|_;"-compile-args"|] ->
     if Sys.ocaml_version >= "4.00.0" then print_endline "-bin-annot";
-    show_bytes "-package bytes";
+    print_endline "-package bytes";
     exit 0
   | _ -> failwith "not gonna happen"
--- /dev/null
+++ b/src/dune
@@ -0,0 +1,18 @@
+(library
+ (name extlib)
+ (public_name extlib)
+ (modules :standard \ configure install uChar uTF8)
+ (flags :standard -w -3-6-9-27-32-33-35-39-50)
+ (preprocess
+  (action
+   (run %{bin:cppo} %{read-lines:compat-level} %{input-file})))
+ (wrapped false))
+
+(rule
+ (targets compat-level)
+ (deps
+  (:< configure.ml))
+ (action
+  (with-stdout-to
+   %{targets}
+   (run ocaml %{<} -cppo-args))))
--- a/src/refList.ml
+++ b/src/refList.ml
@@ -116,12 +116,12 @@ module Index = struct
 
   let index pred rl =
     let index = ref (-1) in
-    List.find (fun it -> incr index; pred it; ) !rl;
+    let _ = List.find (fun it -> incr index; pred it; ) !rl in
     !index
 
   let index_of rl item =
     let index = ref (-1) in
-    List.find (fun it -> incr index; it = item; ) !rl;
+    let _ = List.find (fun it -> incr index; it = item; ) !rl in
     !index
 
   let at_index rl pos =
