<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>17d965599c7206c518302b4079b49515</srcmd5>
    <version>0.3.0</version>
    <time>1571209987</time>
    <user>dimstar_suse</user>
    <comment>Should be in Factory, considering Tumbleweed packages require it already and package maintainers shouldn't need to rely on stuff outside of the distro</comment>
    <requestid>736827</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>cd7a13b3f740fabcc32361b680f56bc5</srcmd5>
    <version>0.4.0</version>
    <time>1651180075</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.4.0:
  * don't ignore go mod command errors
  * allow specifying source / vendor archive compression mode

  * Return non-zero exit codes on failure (forwarded request 972797 from dirkmueller)</comment>
    <requestid>973508</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>2599cba8d8fd68629099a840a1e40d66</srcmd5>
    <version>0.4.1</version>
    <time>1651605541</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.4.1:
  * Fix compression parameter default value usage (forwarded request 974350 from dirkmueller)</comment>
    <requestid>974449</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>95cd1b99c347da52c438c66bb14f2e99</srcmd5>
    <version>0.5.0</version>
    <time>1655048497</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.5.0:
  * README update
  * Check go mod subcommand return code, log and exit on error
  * Log go.mod file not found as error not info
  * Execute go mod subcommands using subprocess.run()
  * Rework the service to better work with obs_scm
- Add Require: python3-libarchive-c
- Drop Require: tar
- Drop Require: gzip (forwarded request 982161 from jfkw)</comment>
    <requestid>982163</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>6d35f9db0282850ce3404f886e760865</srcmd5>
    <version>0.6.0</version>
    <time>1677498963</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.6.0:
  * Make service arg subdir optional
  * exit(1) immediately in extract() exception handler after recording error
  * Use subprocess.run() options 'capture_output' &amp; 'text' only when supported
  * Add '--subdir' option: all to specify the directory to search go.mod in
  * Use temporary directory to extract archive to
  * Give the user the opprtunity to specify the name of the topmost directory
  * Attempt to obtain name of top directory in archive from archive content (forwarded request 1067955 from jfkw)</comment>
    <requestid>1067956</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>818e7cd7f5e9eb2e245ee44ba6db4e52</srcmd5>
    <version>0.6.1</version>
    <time>1677794654</time>
    <user>dimstar_suse</user>
    <comment>(CVE-2022-45155, bsc#1201138, bsc#1201140). (forwarded request 1068711 from eeich)</comment>
    <requestid>1068974</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>652a0833ee8a7fb30921755054d3fbd4</srcmd5>
    <version>0.6.2</version>
    <time>1679933847</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.6.2:
  * Better skipping of non-compressed archive extensions (like .tar.gz.asc)
  * Adjust flake8 settings to match what black is doing
  * fix flake8 errors and add flake8 Github Action (#28)</comment>
    <requestid>1074630</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>0931effd5b8170755419a6c57af8503d</srcmd5>
    <version>0.6.3</version>
    <time>1680536838</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.6.3:
  * Rename new argument vendorfilename to vendorname
  * Fix default vendorfilename
  * make vendor tarball name configurable (#27)
  * Fix autodetection for zst/zstd confusion
  * README.md: hint on avoiding errors if local git clone already exists
  * README.md: add example for use of archive parameter
  * Format source with python black refs #29
  * Revert wrap of long lines flake8 recommends but black accepts refs #29
  * flake8 config black compat extend-ignore E501 line too long refs #29
  * Add GitHub CI action to run Black formatter on file go_modules
  * Flake8 A002 argument &quot;dir&quot; is shadowing a python builtin
  * Flake8 C413 Unnecessary reversed(sorted()) use sorted(reverse=True)
  * Flake8 C413 fix extraneous closing perentheses in sorted()
  * Flake8 C413 Unnecessary reversed(sorted()) use sorted(reverse=True)
  * Fix flake8 CI action YAML indent plugins: under with: key</comment>
    <requestid>1077010</requestid>
  </revision>
  <revision rev="9" vrev="2">
    <srcmd5>61186c14ff0b51beb93d390416a3d86f</srcmd5>
    <version>0.6.3</version>
    <time>1696964352</time>
    <user>anag+factory</user>
    <comment>- Require go1.21 to make sure it works with go.mod files that contain a three-digit-version (e.g. 1.21.1)
- Use BuildRequires: golang(API) &gt;= 1.21 instead of go &gt;= 1.21
  * The recommended Go toolchain dependency expression is
    BuildRequires: golang(API) &gt;= 1.x or optionally the metapackage
    BuildRequires: go
  * The go metapackage points to a single go version that
    increments at a date TBD after each go1.x major release. The
    expression golang(API) is available immediately upon each go1.x
    major release and is stable for expressing the minimum version
    or a temporarily pinned version.
  * Refs boo#1214933
  * Refs https://github.com/openSUSE/obs-service-go_modules/issues/33 (forwarded request 1116356 from jfkw) (forwarded request 1116358 from jfkw)</comment>
    <requestid>1116359</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>0c2f27b41cc346b7fb6afe6385c2bcf1</srcmd5>
    <version>0.6.4</version>
    <time>1698333270</time>
    <user>anag+factory</user>
    <comment>- Update to version 0.6.4:
  * go_modules: allow globbing in the &quot;archive&quot; name field
  * Reformat with black 23.x
- Packaging improvements:
  * _service change disabled to manual per osc deprecation warning:
    WARNING: Command 'disabledrun/dr' is obsolete, please convert
    your _service to use 'manual' and then 'manualrun/mr' instead. (forwarded request 1120423 from jfkw)</comment>
    <requestid>1120424</requestid>
  </revision>
  <revision rev="11" vrev="2">
    <srcmd5>8a70a4fcc26ad8c89c7bdfbfa7af8597</srcmd5>
    <version>0.6.4</version>
    <time>1719497060</time>
    <user>anag+factory</user>
    <comment>- Update go toolchain to Requires: golang(API) &gt;= 1.22
  * Recent go toolchain versions enforce use of the minimum
    toolchain version specified in go.mod
  * Minimum toolchain requirements are in effect for go commands as
    well as unit compilation
  * Users running a version older than specified may see error:
    go: go.mod requires go &gt;= 1.22 (running go 1.21.10; GOTOOLCHAIN=local)
  * This package and others which call go toolchain commands will
    need timely updates to the latest version
  * Reported by Sheng Huang (psheng)
  * Closes https://github.com/openSUSE/obs-service-go_modules/issues/49 (forwarded request 1183515 from jfkw)</comment>
    <requestid>1183516</requestid>
  </revision>
  <revision rev="12" vrev="3">
    <srcmd5>bb0028453e0179eaa6f7c525ec9c1821</srcmd5>
    <version>0.6.4</version>
    <time>1743111124</time>
    <user>anag+factory</user>
    <comment>- Update go toolchain to Requires: golang(API) &gt;= 1.24
  Refs boo#1240130
  * Recent go toolchain versions enforce use of the minimum
    toolchain version specified in go.mod
  * Minimum toolchain requirements are in effect for go commands as
    well as unit compilation
  * Users running a version older than specified may see error:
    go: go.mod requires go &gt;= 1.24.1 (running go 1.22.2; GOTOOLCHAIN=local)
  * This package and others which call go toolchain commands will
    need timely updates to the latest version
  * Closes https://github.com/openSUSE/obs-service-go_modules/issues/62 (forwarded request 1256304 from jfkw)</comment>
    <requestid>1256317</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>37e36bc1d3aad955b55ea91a03cba7f1</srcmd5>
    <version>0.6.5</version>
    <time>1744228224</time>
    <user>anag_factory</user>
    <comment>- Update to version 0.6.5:
  * feat: allow `archive` be name of the subdirectory
  * ignore directories containing '.git' when searching for the basename (#51)
  * doc(README): osc service disabled has been disabled
  * Make output archives more reproducible

- Packaging improvements:
  * _service tar_scm url use .git extension by convention (forwarded request 1268024 from jfkw)</comment>
    <requestid>1268025</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>e0df2cc357fa86e1faa1203f5545779f</srcmd5>
    <version>0.6.6</version>
    <time>1744628310</time>
    <user>anag_factory</user>
    <comment>- Update to version 0.6.6:
  * Preserve symlinks on shutil.copytree archive to tempdir refs #66 (forwarded request 1269021 from jfkw)</comment>
    <requestid>1269022</requestid>
  </revision>
  <revision rev="15" vrev="2">
    <srcmd5>7dbb5a3f4ec3d662d7c44b9f972e688f</srcmd5>
    <version>0.6.6</version>
    <time>1745134509</time>
    <user>dimstar_suse</user>
    <comment>- Packaging improvements:
  * Fixes boo#1241065: Update Requires: python3-libarchive-c &gt;= 4
    adding minimum version to ensure API compatibility new function
    signature first released in python3-libarchive-c version 4.0:
    old: new_archive_read_disk(path, **kw)
    new: with new_archive_read_disk(path, flags, lookup)
    Runtime error raised:
    TypeError: new_archive_read_disk() got an unexpected keyword argument 'mtime' (forwarded request 1270831 from jfkw)</comment>
    <requestid>1270856</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>ae316adba73d621ce0b3e15d1a775d07</srcmd5>
    <version>0.6.8</version>
    <time>1747925758</time>
    <user>anag_factory</user>
    <comment>- Update to version 0.6.8:
  * Implement go mod edit -replace using _service params refs #57
  * cmd_go_mod() use list for arg cmd and new arg subcmd refs #57 (forwarded request 1279146 from jfkw)</comment>
    <requestid>1279150</requestid>
  </revision>
</revisionlist>
