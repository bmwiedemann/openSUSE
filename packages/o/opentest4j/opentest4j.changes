-------------------------------------------------------------------
Tue Oct 17 03:49:22 UTC 2023 - ming li <mli@suse.com>

- Update to version 1.3.0:      
  * Introduce FileInfo
  * Add copyright and license to jar
  * Enable Java-behavior for late cause initialisation
  * Adjust OSGi manifest to match previously published ones 

-------------------------------------------------------------------
Mon Mar 21 12:40:23 UTC 2022 - Fridrich Strba <fstrba@suse.com>

- Build with java source and target levels 8

-------------------------------------------------------------------
Thu Apr  2 07:06:55 UTC 2020 - Fridrich Å trba <fridrich.strba@bluewin.ch>

- Update to upstream version 1.2.0
  * Changes:
    + Add version to module descriptor
    + Include Java module descriptor
    + Include Class of Throwable in MultipleFailuresError message
    + Set EOL to LF so Spotless does not fight with Git on Windows
    + Change ValueWrapper.create() to not wrap another ValueWrapper
    + Capture non-serializable ephemeral value in ValueWrapper
    + Add the option to provide a custom stringRepresentation to
      ValueWrapper
    + Improve Javadoc for AssertionFailedError and ValueWrapper
    + Remove unused dependency on commons-codec
    + Rename serialized output file for clarity
    + Restore 1.0.0 behavior to fix serialization
    + Make ValueWrapper robust for broken toString() implementations
    + Test toString() behavior for AssertionFailedError
    + Do not set null message to "null" in AssertionFailedError
      constructors
    + Do not set message to empty String in AssertionFailedError
      constructors
    + Do not set message in default constructor for
      AssertionFailedError
    + Create an OSGi compatible MANIFEST.MF (#41)
    + Change "Draft" into "Initial Implementation"

-------------------------------------------------------------------
Tue Mar  5 17:29:29 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Initial packaging of opentest4j 1.0.0
- Generate and customize ant build file to be able to build without
  having to use gradle
