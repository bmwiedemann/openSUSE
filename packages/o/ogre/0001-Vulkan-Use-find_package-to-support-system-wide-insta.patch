From 24a6bfd7ecb1b9deb76f34ab85196c37eb332cfb Mon Sep 17 00:00:00 2001
From: Ferdinand Thiessen <rpm@fthiessen.de>
Date: Thu, 16 Dec 2021 13:45:04 +0100
Subject: [PATCH] Vulkan: Use find_package to support system wide installed
 SDK, still supports VULKAN_SDK env variable

---
 CMake/Dependencies.cmake            | 3 ++-
 PlugIns/GLSLang/CMakeLists.txt      | 7 +++----
 RenderSystems/Vulkan/CMakeLists.txt | 4 ++--
 3 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/CMake/Dependencies.cmake b/CMake/Dependencies.cmake
index 39c1c238c..1a01291a1 100644
--- a/CMake/Dependencies.cmake
+++ b/CMake/Dependencies.cmake
@@ -226,7 +226,8 @@ if (NOT (APPLE_IOS OR WINDOWS_STORE OR WINDOWS_PHONE OR ANDROID OR EMSCRIPTEN))
 endif ()
 
 # Find Vulkan SDK
-macro_log_feature(ENV{VULKAN_SDK} "Vulkan SDK" "Vulkan RenderSystem, glslang Plugin. Alternatively use system packages" "https://vulkan.lunarg.com/")
+find_package(Vulkan)
+macro_log_feature(Vulkan_FOUND "Vulkan SDK" "Vulkan RenderSystem, glslang Plugin. Alternatively use system packages" "https://vulkan.lunarg.com/")
 
 # OpenEXR
 find_package(OpenEXR)
diff --git a/PlugIns/GLSLang/CMakeLists.txt b/PlugIns/GLSLang/CMakeLists.txt
index 91f675f72..45a1762ba 100644
--- a/PlugIns/GLSLang/CMakeLists.txt
+++ b/PlugIns/GLSLang/CMakeLists.txt
@@ -13,9 +13,8 @@ if(ANDROID)
     target_link_libraries(Plugin_GLSLangProgramManager PUBLIC OgreMain
         ${ANDROID_NDK}/sources/third_party/shaderc/libs/c++_static/${ANDROID_ABI}/libshaderc.a)
 elseif(WIN32)
-    target_include_directories(Plugin_GLSLangProgramManager PRIVATE $ENV{VULKAN_SDK}/include)
-    target_link_directories(Plugin_GLSLangProgramManager PRIVATE $ENV{VULKAN_SDK}/lib)
-    target_link_libraries(Plugin_GLSLangProgramManager PUBLIC OgreMain shaderc_combined)
+    target_include_directories(Plugin_GLSLangProgramManager PRIVATE ${Vulkan_INCLUDE_DIRS})
+    target_link_libraries(Plugin_GLSLangProgramManager PUBLIC OgreMain shaderc_combined PRIVATE Vulkan::Vulkan)
 else()
     target_link_libraries(Plugin_GLSLangProgramManager PUBLIC OgreMain glslang HLSL OSDependent OGLCompiler SPIRV SPIRV-Tools SPIRV-Tools-opt)
 endif()
@@ -25,4 +24,4 @@ ogre_config_plugin(Plugin_GLSLangProgramManager)
 generate_export_header(Plugin_GLSLangProgramManager
     EXPORT_MACRO_NAME _OgreGLSLangProgramManagerExport
     EXPORT_FILE_NAME ${PROJECT_BINARY_DIR}/include/OgreGLSLangProgramManagerExports.h)
-install(FILES ${HEADER_FILES} DESTINATION include/OGRE/Plugins/GLSLang)
\ No newline at end of file
+install(FILES ${HEADER_FILES} DESTINATION include/OGRE/Plugins/GLSLang)
diff --git a/RenderSystems/Vulkan/CMakeLists.txt b/RenderSystems/Vulkan/CMakeLists.txt
index 8d8b92d3a..f5fc3f46a 100755
--- a/RenderSystems/Vulkan/CMakeLists.txt
+++ b/RenderSystems/Vulkan/CMakeLists.txt
@@ -18,8 +18,8 @@ set( SOURCE_FILES ${SOURCE_FILES})
 add_library(RenderSystem_Vulkan ${OGRE_LIB_TYPE} ${HEADER_FILES} ${SOURCE_FILES})
 
 if(WIN32)
-    target_include_directories(RenderSystem_Vulkan PRIVATE $ENV{VULKAN_SDK}/Include)
-    target_link_directories(RenderSystem_Vulkan PRIVATE $ENV{VULKAN_SDK}/Lib)
+    target_include_directories(RenderSystem_Vulkan PRIVATE ${Vulkan_INCLUDE_DIRS})
+    target_link_directories(RenderSystem_Vulkan PRIVATE ${Vulkan_LIBRARY})
 
     set_source_files_properties("${CMAKE_CURRENT_SOURCE_DIR}/src/volk.c"
         PROPERTIES COMPILE_DEFINITIONS VK_USE_PLATFORM_WIN32_KHR)
-- 
2.34.1

