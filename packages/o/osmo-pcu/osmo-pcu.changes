-------------------------------------------------------------------
Fri Nov 19 11:13:47 UTC 2021 - Martin Hauke <mardnh@gmx.de>

- Update to new upstream release 1.0.0
  * https://git.osmocom.org/osmo-pcu/plain/debian/changelog?h=1.0.0

-------------------------------------------------------------------
Wed Oct 13 13:54:57 UTC 2021 - Johannes Segitz <jsegitz@suse.com>

- Added hardening to systemd service(s) (bsc#1181400). Added patch(es):
  * harden_osmo-pcu.service.patch

-------------------------------------------------------------------
Sun Jan  5 11:47:20 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to new upstream release 0.8.0
  * PTCCH: implement basic message codec and API
  * BSSGP: do not reject SUSPEND ACK / NACK messages
  * VTY: fix command 'show tbf all': properly filter TBFs
  * Forward ETWS Primary Notification to MS
  * Introduce osmo_tdef infra and timer VTY commands
- Update to new upstream release 0.7.0
  * Initial commit for OC-2G support.
  * MCS: add Channel Coding Command encoder

-------------------------------------------------------------------
Mon Apr  1 23:23:02 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Reduce scriptlets' hard dependency on systemd.

-------------------------------------------------------------------
Tue Mar 26 14:21:05 UTC 2019 - Martin Hauke <mardnh@gmx.de>

- Correct License

-------------------------------------------------------------------
Wed Jan 30 22:53:35 UTC 2019 - mardnh@gmx.de

- Update to new upstream release 0.6.0
  * Full changelogs since 0.4.0:
    http://git.osmocom.org/osmo-pcu/plain/debian/changelog?h=0.6.0
    http://git.osmocom.org/osmo-pcu/plain/debian/changelog?h=0.5.1
    http://git.osmocom.org/osmo-pcu/plain/debian/changelog?h=0.5.0
    http://git.osmocom.org/osmo-pcu/plain/debian/changelog?h=0.4.0

-------------------------------------------------------------------
Sat Mar 17 19:57:00 UTC 2018 - mardnh@gmx.de

- Use use the systemd service file from contrib/
- Show testsuite.log when tests are failing

-------------------------------------------------------------------
Fri Dec 29 12:18:40 UTC 2017 - jengelh@inai.de

- %service_* already takes care of restart/removal

-------------------------------------------------------------------
Wed Dec 27 21:19:47 UTC 2017 - mardnh@gmx.de

- Update to new upstream release 0.4.0
  * No changelog was provided
- Specfile cleanup

-------------------------------------------------------------------
Wed Mar 29 18:47:54 UTC 2017 - mardnh@gmx.de

- Update to version 0.2.11.git1490567068.e6d26ec:
  * tests: include headers from include/
  * jenkins: add value_string termination check
  * Update README file with general project info and use Markdown
  * Support sending OML Alerts via BTS
  * cosmetic: BitcompTest: make readable
  * bitcomp test: fix: only one hexdump per log; use printf
  * bitcomp test: fix: also verify bits after decoded data
  * bitcomp test: use expected rc instead of 'verify' flag

-------------------------------------------------------------------
Mon Mar 13 11:33:07 UTC 2017 - mardnh@gmx.de

- Update to version 0.2.11.git1489404314.5dd8d1b:
  * logging: use central filter and ctx consts from libosmocore
  * gprs_debug.h: remove unused cruft / cosmetic tweaks
  * logging fixup: shorter names for LOGGING_FILTER_* and LOGGING_CTX_*
  * BTS: Convert relative frame numbers to absolute frame numbers
  * Add pkg-config file
  * bts.cpp: Fix overloading ambiguity

-------------------------------------------------------------------
Wed Feb 15 09:20:45 UTC 2017 - mardnh@gmx.de

- Update to version 0.2.11.git1487071257.b609190:
  * Log socket path on connection
  * Log additional info for radio errors
  * Add compression support in EGPRS PUAN
  * Add test case for testing PUAN
  * Handle packet access reject during packet resource request
  * BTS: accept also relative frame numbers with rach requst
  * cosmetic: Fix log output
  * Fix dozens of compiler warnings across the board
  * tests: edge, tbf: assert return values
  * main, tests: use msgb_talloc_ctx_init() (new)
  * dl tbf: calculate CPS only for EGPRS
  * dl tbf: initialize punct values and verify

-------------------------------------------------------------------
Fri Jan 06 20:32:09 UTC 2017 - mardnh@gmx.de

- Update to version 0.2.11.git1483710844.b78a4a6:
  * fix segfault: check for NULL tbf in sched_select_ctrl_msg()

-------------------------------------------------------------------
Fri Jan 06 12:27:57 UTC 2017 - mardnh@gmx.de

- Update to version 0.2.11.git1483698967.06bdb35:
  * Improve logging
  * Array indexing for SPB counters in bts statistics.
  * Refactoring write_packet_ack_nack_desc_egprs to prepare for CRBB support

-------------------------------------------------------------------
Sun Dec 25 20:33:49 UTC 2016 - mardnh@gmx.de

- Update to version 0.2.11.git1482415783.ee78bf0:
  * build: be robust against install-sh files above the root dir
  * configure: check for pkg-config presence
  * build: add -Wall
  * EGPRS: Add EPDAN CRBB Tree based decoding
  * tbf: add llc_queue_size() to check llc_queue is valid before calling size()
  * llc: remove NULL-pointer check of gprs_llc_queue::size()/octets()
  * Revert "tbf: Add state WAIT_ASSIGN"
  * Use qbit-TA to update Timing Advance
  * jenkins.sh: use osmo-build-dep.sh, output testlogs
  * Add logging support
  * EGPRS: add test case to show EPDAN BSN out of window bug
  * Modify return type of gprs_rlc_dl_window::distance to uint16_t
  * EGPRS: fix for EPDAN out of window
  * Handle Timing Advance IE properly
  * Handle Immediate assignment reject
  * Handle packet access reject during EPDAN/PDAN with channel description
  * Add BTS level counters
  * pcu_l1_if: get rid of magic numbers and use ARRAY_SIZE() for array iteration
  * Fix GSMTAP logging in case direct PHY access is enabled
  * Install the pcuif_proto.h header file
  * Add new BTS level counters
  * debian: fix: add pcuif_proto.h to osmo-pcu.install
  * Add debugging log for RLC data block decoding
  * Sanitizer build fix for TbfTest
  * Add statistics in the ms and tbf level.
  * struct pcu_l1_meas_ts: initialize ms_i_level
  * Fix uninitialized members in pcu_l1_meas()
  * Add counter at BTS level And statistics at TBF/MS level.
  * Adds rate_ctr_init in the startup of osmo-pcu

-------------------------------------------------------------------
Sun Oct 02 09:28:52 UTC 2016 - mardnh@gmx.de

- Update to version 0.2.11.git1474520801.fd9e16c:
  * Remove unused definitions
  * Cleanup readme
  * Remove useless ARFCN parameter
  * Properly set TA_VALID bit
  * Add data structure for SPB in EGPRS UL
  * Add support for SPB handling for EGPRS UL TBF
  * Extend BTS <-> PCU protocol with measurement
  * LC: fix build error
  * jenkins.sh: ensure $MAKE is set
  * jenkins.sh: use absolute paths instead of 'cd ..' and $PWD
  * jenkins.sh: more quotes, cosmetics, less dup
  * jenkins.sh: change build matrix to $with_dsp and $with_vty
  * jenkins.sh: drop compat with old matrix params
  * Remove warning while using 'egprs only' command in VTY
  * Add data structure to handle SPB for EGPRS DL
  * Modify EGPRS DL TBF flow to support SPB
  * EGPRS: PUAN encoding: add test case to show wrong urbb_len issue
  * Fix EGPRS PUAN encoding: use correct urbb_len
  * Change interface in osmo-pcu for 11 bit RACH
  * vty: use OSMO_VTY_PORT_PCU instead of number
  * TBF flow: Coverity fix
  * TBF flow: unit test compilation error fix
  * DL: add test case to show wrong window size
  * GPRS: PUAN encoding: add test case to show wrong BSNs status
  * Fix GPRS PUAN encoding: wrong BSN status
  * LC15: Change TRX numbering for the latest Litecell15 hardware
  * Fix Timing Advance handling
  * TBF flow: unit test compilation error fix
  * CSN1 decoding: add test to show bug in CSN_LEFT_ALIGNED_VAR_BMP
  * Fix CSN1 decoding: CSN_LEFT_ALIGNED_VAR_BMP bounds
  * DL TS allocation: add test case to show TS allocation bug for 2nd DL TBF
  * EGPRS: add test case to show LI decoding bug
  * EGPRS: Fix issue with row 4 of Table 10.4.14a.1 of 44.060 version 7.27.0 Release 7
  * tbf_dl: factor out EGPRS DL window size calculation
  * Fix EGPRS DL window calculation during tbf update
  * Handle EGPRS 11 bit RACH in osmo-pcu
  * Update the function immediate assignment for EGPRS
  * heed VTY 'line vty'/'bind' command

-------------------------------------------------------------------
Sun Jul 17 18:50:57 UTC 2016 - mardnh@gmx.de

- Update to version 0.2.11.git1468479379.df69809:
  * rlc: Dump RLC data for debugging
  * edge: Move the GPRS UL Ack/Nack encoding into a separate function
  * rlc: Use a pointer instead of repeated selector chains
  * edge: Support EGPRS uplink Ack/Nack messages
  * rlc: Add and use mod_sns(bsn) method
  * rlc/edge: Consistently use uint16_t for BSNs and SSNs
  * rlc: Add constructor to window classes
  * rlc: Make WS and SNS variable
  * edge: Move EGPRS setup from setup_tbf to tbf_alloc_ul_tbf
  * edge: Set the EGPRS window parameters
  * sched: Assert that the generated message is not empty
  * encoding: Add bitvec based write_packet_uplink_ack
  * tbf: Use bitvec based write_packet_uplink_ack
  * encoding: Remove RlcMacDownlink_t based write_packet_uplink_ack
  * edge/test: Rename test_rlc_decoder to test_rlc_unit_decoder
  * tbf: Replace static casts by calls to as_ul_tbf/as_dl_tbf
  * tbf/vty: Move tbf_print_vty_info to pcu_vty_functions.cpp
  * tbf: Use LListHead instead of llist_pods
  * edge: Add max_mcs_ul and max_mcs_dl config
  * edge: Add methods and operators to GprsCodingScheme
  * edge: Add initial_mcs_dl and initial_mcs_ul config values
  * edge: Replace integer cs by GprsCodingScheme
  * edge: Show current mode in VTY
  * edge: Support EGPRS in write_packet_downlink_assignment
  * tbf: Remove bogus gprs_rlcmac_dl_tbf::enable_egprs
  * edge: Enable EGPRS in downlink TBFs
  * edge: Add work-around to get DL EGPRS from MS object
  * edge: Remove int casting operator from GprsCodingScheme
  * edge: Rename gprs_rlc_ul_header_egprs and gprs_rlc_ul_data_block_info
  * edge: Fix RLC message size
  * edge: Add numDataHeaderBitsUL/DL and numDataBlockHeaderBits methods
  * rlc: Add info fields for downlink
  * edge: Add init functions for gprs_rlc_data_info
  * edge: Add encoder for downlink RLC data blocks
  * tbf: Remove obsolete TLLI functions
  * tbf/test: Add missing function name printfs
  * edge: Use RLC data block encoding functions
  * edge: Add Encoding::rlc_data_to_dl_append
  * edge: Use rlc_data_to_dl_append in create_new_bsn
  * edge: Select implementation by mode in rlc_data_to_dl_append
  * edge: Support MCS data block encoding
  * edge: Provide and use CS -> CPS conversion
  * edge: Workaround to fix decoding of EGPRS_AckNack_w_len_t
  * edge: Handle EGPRS PACKET DOWNLINK ACK NACK
  * edge: Add experimental support for uplink CRBB
  * edge: Enable CRBB decoding
  * decode: Add bitvec based GPRS DL ACK/NACK decoder
  * edge: Add a bitvec based Decoding::extract_rbb function
  * edge: Add bitvec based DL window updating methods
  * edge: Use num_blocks in gprs_rlcmac_dl_tbf::analyse_errors
  * tbf: Use bitvec based window methods for GPRS
  * edge: Use bitvec based window methods for EGPRS
  * edge: Call update_window even if FINAL_ACK_INDICATION is set
  * edge: Fix initial coding scheme selection
  * edge: Fix MCS range in VTY
  * edge: Disable GPRS/EGPRS mixed mode
  * edge: Work-around to use EGPRS if there was no DL RA Cap
  * rlc: Add unified gprs_rlc_window parent class
  * tbf: Add gprs_rlcmac_tbf::window() method
  * utils: Add pcu_bitcount and pcu_lsb
  * tbf/vty: Fix the CS output and show the EGPRS MS class
  * edge: Make window size configurable
  * tbf: Show window parameters in VTY
  * bssgp: Add hand-coded extended RA Cap parser
  * Revert "bssgp: Add hand-coded extended RA Cap parser"
  * rlc: Add decode_gsm_ra_cap to decode Radio Access Caps
  * edge: Get EGPRS MS class from downlink BSSGP
  * tbf: Low prio for BSSPG values for GPRS/EGPRS MS class
  * bssgp: Ignore downlink BSSGP RA Cap IE
  * tbf: Refactor calls to write_immediate_assignment
  * tbf: Use the control TS for Immediate Assignments
  * Revert "tbf: Use the control TS for Immediate Assignments"
  * tbf: Add counters for aborted TBF in state FLOW
  * tbf: Add abort method for downlink TBF
  * tbf: Do not reuse old TBF after RACH requests
  * sched: Pass the current TS to the control create functions
  * tbf: Use is_control_ts() instead of comparing TS values directly
  * tbf: Mark control slots in VTY TBF out
  * tbf: Add and use tbf->poll_ts
  * tbf: Add check_polling/set_polling
  * tbf: Use TLLI as ID if TFI not yet assigned
  * tbf: Don't change type from CCCH to PACCH without ack
  * pcu: Add bitvec_write_field_lh
  * encoding: Use explicit LH encoding in write_immediate_assignment
  * encoding: Refactor write_immediate_assignment
  * encoding: Redesign Encoding::write_immediate_assignment API
  * edge: Support EGPRS in IMM ASSIGNMENT
  * tbf: Only free TBF if it was replaced in rcv_control_ack
  * sched: Do PACCH assignments for the same direction last
  * ms: Add current_pacch_slots method
  * tbf: Add state WAIT_ASSIGN
  * rlc: Support encoding of EGPRS header type 1 + 2
  * edge/vty: Set initial MCS
  * cs: Add family related methods
  * cs: Add GprsCodingScheme::optionalPaddingBits
  * rlc: Add with_padding argument to gprs_rlc_data_info_init_dl/ul
  * rlc: Add gprs_rlc_mcs_cps_decode
  * rlc: Use the rlc structure to access the data unit in the RLC message
  * tbf/tests: Add tests for EGPRS TBF establishment
  * ms: Fix GprsMs::current_cs_dl()
  * edge: Refactor create_dl_acked_block for multi-block support
  * edge: Send a second BSN block in an RLC message if possible
  * edge: Compare len instead of using cs.isCombinable
  * edge: Work-around to not use MCS-6 with padding
  * edge: Support all coding schemes for BSSGP flow control
  * Ignore files generated by cscope tool
  * Introduce --gsmtap-ip/-i option
  * Add gsmtap support to generic bts
  * alloc: Fix UBSAN for accessing the array at -16
  * Refactor coding scheme assignment code
  * Revert "Refactor coding scheme assignment code"
  * tbf: Fix copy and paste in the set_mode routine
  * pcu: Fix compiler warning about using string
  * Fix encoding of padding bits to start with 0 bit
  * Add test vectors for EGPRS messages
  * Fix issue in encoding CSN_RECURSIVE_ARRAY
  * Introduce EGPRS header type1 and type2 in UL
  * Refactor the Uplink RLC header parsing function
  * Add data structure for CPS calculation in DL
  * Update CPS calculation with new data structures
  * Support puncturing scheme selection for EGPRS DL
  * fix compiler warnings about format string for size_t
  * debian: Initial debian packaging
  * misc: Ignore test files and debian packaging
  * jenkins: Add the build script from jenkins here
  * Cleanup build leftovers
  * Rename define for direct hw access
  * Restructure sources
  * Enable subdir-objects automake option
  * add .gitreview
  * Change internal API for consistency
  * Add support for NuRAN Wireless Litecell 1.5 BTS
  * move statistics counter rlc_sent() to gprs_rlcmac_sched
  * introduce new counter rlc_sent_dummy
  * bts/rate_ctr: replace spaces by tabs
  * tbf_dl: replace cross-file declaration with correct header
  * gprs_rlcmac_sched: fix mistype of CONTROL ACK
  * introduce new counter rlc_sent_control
  * bts/counter: replace '_' with '-' in counter names
  * rlc.h: remove duplicated define RLC_EGPRS_SNS
  * tbf_ul: use correct size for chunk_size
  * add comments to describe functions
  * decoding: improve and add comments
  * encoding: add doxygen for rlc_data_to_dl_append*
  * rlc.h: correct gprs_rlc_data comment
  * decoding: remove superfluous double-semicolon
  * tbf_dl: comment why we sent a dummy LLC packets to delay the release of the TBF
  * encoding/rlc_copy_from_aligned_buffer: export written payload bytes via an argument
  * add KPI counter to count bytes for RLC and LLC frames
  * tbf_dl: correct tbf name in log message for moving a DL TBF
  * tbf: replace this == NULL check in tbf->name
  * Add test cases for Header Type 2 in EGPRS UL
  * Remove GMSK only check in EGPRS UL
  * Add Header Type2 support in EGPRS UL
  * Add header type 1 support for EGPRS uplink
  * Add test cases for Header type1 in EGPRS UL
  * typo in warning
  * systemd service file: Stop using deprecated '-e' option
  * Add data structure for ARQ-II in EGPRS DL
  * Add Accessor functions for ARQ-II in EGPRS DL
  * Modify DL tbf flow for ARQ-II in EGPRS DL Retx
  * Add test cases to support ARQ-II for EGPRS DL Retx
  * bitvector: Remove code clone and fallback to C implementation
  * egprs: Use RLC/MAC headers from libosmocore

-------------------------------------------------------------------
Sat Feb 20 22:22:16 UTC 2016 - mardnh@gmx.de

- Update to version 0.2.11.git1455448458.7f4841b:
  + edge: Get EGPRS multislot class
  + edge: Add egprs config command
  + edge: Support EGPRS in packet uplink assignment message
  + edge: Add m_egprs_enabled and related methods to TBF
  + edge: Support EGPRS multislot class handling in tbf_alloc
  + edge: Enable EGPRS if configured and egprs_ms_class present
  + edge: Extend gprs_rlcmac_dl_tbf::handle by egprs_ms_class
  + edge: Add GprsCodingScheme class
  + edge: Add test for GprsCodingScheme
  + edge: Use GprsCodingScheme to adjust the UL RLC block size
  + edge: Add gprs_rlcmac_pdch::rcv_block_egprs stub
  + edge: Rename rcv_data_block_acknowledged
  + edge: Add header type property to GprsCodingScheme
  + rlc: Check endianness for bit field declarations
  + edge: Add information about data blocks to GprsCodingScheme
  + edge: Add unified decoder methods for GPRS/EGPRS
  + edge: Add test cases for rlc_data_from_ul_data
  + rlc: Do not raise_v_q in receive_bsn
  + edge: Add is_received and invalidate_bsn to gprs_rlc_ul_window
  + edge: Store GprsCodingScheme in gprs_rlc_data
  + tbf: Refactor parts of extract_tlli into set_tlli_from_ul
  + edge: Add methods for unified GPRS/EGPRS UL data block handling
  + edge: Implement gprs_rlcmac_pdch::rcv_block_egprs
  + edge: Use a single PDCH rcv_data_block method for GPRS and EGPRS
  + edge: Remove unused GPRS functions
  + sched: Change next_ctrl_prio increment
  + edge: Fix data block decoder (Coverity)
  + edge: Remove leftover comments from encoding.c
  + pcu: Fix memory corruption bugs (ASAN)
  + Fix missing '-V / --version' in print_help()

-------------------------------------------------------------------
Sat Dec 26 22:55:23 UTC 2015 - mardnh@gmx.de

- Update to version 0.2.11.git1448881908.111ebe8:
  + bssgp: Use measured leak rate for flow control
  + stats: Attempt to compile fix the new rate_ctr
  + stats: Include the header file for the new class identifier
  + rename sysmo_sock.cpp to osmobts_sock.cpp
  + print/log OpenBTS / OsmoBTS variant in PCU startup
  + osmobts_sock.cpp: Add missing space in log statement.
  + remove obsolete OpenBTS PCU interface support
  + stats: Enable stats subsystem
  + pcu: Improve default config
  + encoder: Whitespace fixes
  + stat: Add global stat group
  + pcu: Enable dl-tbf-idle-time and idle-ack-delay by default
  + Revert "pcu: Improve default config"

-------------------------------------------------------------------
Mon Sep 21 07:37:34 UTC 2015 - mardnh@gmx.de

- Update to version 0.2.11.git1441627835.7c8d39a:
  + sba: Fix loop exit in SBAController::alloc (Coverity)
  + alloc: Merge find_least_busy_pdch and find_least_reserved_pdch
  + alloc: Use an enum instead of numbers to select the mask
  + alloc: Select applicable Tta/Tra
  + alloc: Do not use masking for multislot class type 2 MS
  + alloc: Fix MS_B/MS_C interpretation
  + alloc/test: Check for TFI conflicts
  + pdch: Manage TFIs per direction
  + tbf: Move TFI selection into alloc_algorithm
  + alloc: Allocate TFI per slot (algorithm A)
  + tbf: Put the TFI->TBF mapping into the PDCH objects
  + ms: Add is_idle() method to GprsMs::Guard
  + alloc/test: Put TBF allocation loop into alloc_many_tbfs
  + alloc/test: Add test for interleaved TBF chains
  + alloc: Remove redundant first_common_ts handling
  + alloc: Refactor alloc algorithms to only apply changes on success
  + alloc: Remove disabled code fragment for multi-UL allocation
  + alloc: Add 'dynamic' allocation algorithm
  + alloc: Add counters for successful algo A/B allocations
  + pcu: Use alloc_algorithm_dynamic by default
  + alloc: Change tx_window optimization strategy
  + alloc/test: Show expectation before failure
  + alloc: Use a separate usage computation for algo A
  + alloc/test: Use lower case for slots with TFI shortage
  + alloc/test: Free the TBF if the recursion has failed
  + alloc/test: Fix trx_no assertion
  + alloc: Make alloc_algorithm_dynamic stateful
  + bssgp: Adapt flowcontrol MS default to current alloc algorithm
  + llc: Add CoDel AQM implementation
  + llc: Use CoDel to drop packages from the LLC queue
  + pcu: Enable LLC CoDel by default
  + bssgp: Fix leak rate computation CS value
  + tbf: Always start T3193 when changing state to GPRS_RLCMAC_WAIT_RELEASE
  + tbf: Handle TLLI change on DL
  + ms: Set default CoDel interval to 4s
  + pcu: Update example config file
  + tbf: Clean old MS objects if they have the same TLLI
  + tbf: Use update_ms instead of confirm_tlli in handle()
  + ms: Do not retrieve MS with IMSI 000 from the storage
  + vty: Change API to have node installation be done by int
  + ns: Add logging support
  + ns: Reconnect NSVC after timeout
  + ms: Move MS information merging to GprsMS
  + tbf/test: Move UL TBF establishment into separate functions
  + tbf: Fix typos in log messages concerning UL/DL
  + tbf/test: Fix existing tests
  + tbf/test: Add tests for RACH while DL TBFs are active
  + tbf: Do not kill DL TBF on Packet Resource Request
  + llc: Add move_and_merge method to llc_queue
  + tbf: Move pending LLC frames when merging MS objects
  + tbf/test: Move UL MAC block encoding into a separate function
  + tbf/test: Add send_rlc_block function with a TBF as parameter
  + tbf/test: Simplify RLC block number handling
  + tbf/test: Rename send_rlc_block to request_dl_rlc_block
  + tbf/test: Do RLC based ack instead of just faking
  + tbf/test: Add test_tbf_dl_reuse
  + tbf: Use C++/talloc magic to support TBF constructors/destructors
  + llist: Add missing const qualifier in llist cast method
  + bssgp: Only call bssgp_tx_llc_discarded if the bctx exists
  + ms: Store references to replaced TBFs in the MS object
  + ms/vty: Show old TBFs
  + ms/vty: Show LLC queue octets and packets in both views
  + openbts: Remove unused declaration of fl1h in udp_read_cb
  + tbf: Use explicit initialisations in constructor (Coverity)
  + tbf: Add logging for polling
  + poll: Add a max_delay parameter to PollController::expireTimedout
  + poll: Set the max_delay to 60 frames
  + poll: Use the data_ind FN as time source for current frame
  + poll: Count unexpected block FN values
  + l1: Use the FN of all data_ind/ra_ind DSP messages
  + Revert "tbf: Do not kill DL TBF on Packet Resource Request"
  + tbf: Keep the old MS object alive in extract_tlli
  + tbf: Refactor reuse_tbf into releasing and DL TBF establishment
  + bts: Release DL TBF instead of killing in rcv_resource_request
  + bts: Start a DL TBF if needed after establishment of an UL TBF
  + poll: Count failed procedures

-------------------------------------------------------------------
Tue Jul 14 18:15:31 UTC 2015 - mardnh@gmx.de

- Update to version 0.2.11.git1436856715.3db617f:
  + Fix VTY documentation
  + tbf: Fix dereference before null check
  + tests: Fix library link order
  + tbf/test: Modify test to create a dangling TBF pointer
  + tbf: Fix dangling m_new_tbf pointer
  + tbf: Don't use 'old' DL TBFs after reuse_tbf
  + pcu: Fix log message
  + tbf: Add name() method and put the buf into the tbf
  + tbf: Reduce m_new_tbf logging messages
  + sched: Modify DL scheduling to use different priorities
  + tbf: Fix scheduling for DL Ack/Nack request
  + bssgp: Set blocking and reset timer to 30s
  + bssgp: Handle BSSGP STATUS messages
  + llc: Add put_dummy_frame to create an LLC dummy command
  + tbf: Refactor create_dl_acked_block
  + tbf: Add helper functions for DL TBFs
  + tbf/test: Put BTS setup and DL TBF creation into helper functions
  + tbf/test: Fix fn/block_nr in test_tbf_final_ack
  + tbf: Add frames_since_last_poll method
  + tbf: Use put_frame in append_data if the TBF has no data
  + tbf: Insert LLC dummy command if no frame is available
  + tbf: Implement delayed release of a downlink TBF
  + tbf/test: Add test for delayed release
  + tbf: Only create dummy frames if necessary
  + tbf: Poll MS on idle DL TBFs
  + pcu: Add pcu_utils.h to Makefile.am
  + tbf: Use a hysteresis when discarding DL LLC frames
  + tbf: Force ACK after the last DL LCC frame has been received
  + vty: Use libosmocore VTY standards
  + tbf/test: Add test for DL TBF exhaustion
  + tbf: Send BSSGP LLC discarded on TBI exhaustion
  + pcu: Call bssgp_set_log_ss(DBSSGP) in main()
  + tbf: Remove double assigment to m_last_dl_drained_fn
  + vty: Fix warnings about undeclared functions
  + vty: Fix value range of commands accepting csecs
  + pcu: Fix non-critical warnings
  + l1if: Add missing function prototypes
  + pcu_emu/test: Initialise current_test
  + tbf/test: Fix old_tbf argument to tbf_alloc_ul_tbf
  + tbf: Added calls to llc_dropped_frame
  + bssgp: Make BVC bucket size / leak rate configurable
  + bssgp: Compute BVC bucket size and leak rate
  + bssgp: Add VTY command to Limit the bucket size by time
  + bssgp: Compute and transmit queue delay
  + bssgp: Increment BSSGP flow control tag value
  + ms: Add GprsMs class to hold per-MS information
  + tbf: Add MS object management to TBF code
  + tbf/test: Optionally show talloc report
  + llist: Add a C++ wrapper for linux_list
  + ms: Add MS storage class
  + ms: Integrate the MS storage
  + ms: Support new and old TLLIs
  + tbf: Get the TLLI from the MS object
  + tbf: Explicitly pass the direction to update_ms()
  + tbf: Just pass the MS object in reuse_tbf
  + llist: Reduce the external dependencies of this test
  + misc: Update the email address to point to the current ML
  + write_queue: Check the result of osmo_wqueue_enqueue and free
  + tbf: Remove the TLLI from the TBFs
  + tbf: Always call set_tlli/confirm_tlli in update_ms
  + tbf/test: Fix IMSI creation
  + tbf: Move IMSI to MS object
  + ms: Use the IMSI to retrieve the MS object
  + tbf: Remove IMSI handling from trigger_dl_ass
  + tbf/test: Attach TLLI and MS objects to TBFs
  + tbf: Remove TBF chaining (m_new_tbf and m_old_tbf)
  + tbf/test: Add tests for single and two phase access
  + tbf: Store the timing advance (TA) value in the GprsMs object
  + tbf: Remove TimingAdvance storage
  + ms: Add timer
  + tbf: Set MS timeout
  + pcu: Set ms_idle_sec to 60s
  + l1: Fix warning by logging acc_delay
  + llc: Separate LLC queue handling from gprs_llc
  + llc: Add missing declarations to llc.h
  + tbf: Make the ms() getter method const
  + tbf: Move the LLC queue to GprsMs
  + tbf: Store MS class in GprsMs objects
  + ms: Add back pointer to BTS
  + tbf: Move the current CS field to GprsMs
  + vty: Add a file for C++ functions
  + vty: Add 'show ms all' command
  + tbf: Add adaptive DL CS adjustment
  + tbf: Add debugging output to analyse_errors()
  + tbf: Add adaptive coding scheme configuration
  + tbf: Ignore lost+recv == 1
  + ms: Add blocking period for CS upgrade
  + ms: Add support for maximum CS values
  + vty: Add command to show detailed MS info
  + bssgp: Handle btcx == NULL in gprs_bssgp_pcu_rx_sign (Coverity)
  + llc: Fix LLC UI frame detection (Coverity)
  + bssgp: Calculate the avg_delay_ms in 32bit only (Coverity)
  + tbf: Check for NULL in name() (Coverity)
  + ms: Add missing initialiser for m_delay (Coverity)
  + ms: Fix timer start condition (Coverity)
  + build: Add -lrt to AM_LDFLAGS
  + l1: Pass all L1 measurements upwards
  + ms: Store the L1 measurement values in the MS objects
  + ms: Add UL CS selection based on L1 link quality
  + l1: Store measurement values sent by the MS
  + l1: Add debug log messages for I_LEVEL
  + tbf: Include CS into create_new_bsn log message
  + ms: Store the NACK rate in the MS object
  + tbf/test: Add test for DL LLC packet loss
  + tbf: Fix downlink packet loss
  + llc/test: Add test program for LLC related tests
  + llc: Add missing include directive to llc.h
  + llc: Keep track of the number of stored LLC octets
  + ms: Reduce DL CS level if only a few LLC bytes are left
  + llc: Make timeval arguments const
  + llc: Move storage of timestamps into gprs_llc_queue
  + llc: Add missing include directive for struct timeval
  + llc/test: Explicitly enable extended initialiser lists
  + Revert "llc/test: Explicitly enable extended initialiser lists"
  + llc/test: Use a portable way to set timeval variables
  + vty: Fix documentation for 'no cs downgrade-threshold'
  + tbf: Remove update_tlli method
  + tbf: Pass the MS object around instead of old_tbf
  + tbf: Always create an MS object on TBF allocation
  + tbf: Add BTS::ms_alloc method
  + alloc/test: Add test for successive allocation
  + alloc/test: Enhance test_alloc_a
  + alloc/test: Use LOGL_DEBUG environment variable
  + tbf/test: Add assertions
  + tbf: Maintain the number of TBF per PDCH
  + ms: Add first_common_ts method to GprsMs
  + ms: Add tbf() method to get the TBF based on the direction
  + tbf: Add GprsMs* argument to update() and use it in reuse_tbf
  + alloc: Load balancing for algo A
  + ms: Add support for slot reservation
  + ms: Get the set of slots currently active
  + alloc: Ignore slots with differing TSC if multiple slots are requested
  + alloc: Base algo A on reserved PDCHs
  + tbf: Set ms in call to tbf_alloc_dl_tbf
  + tbf: Remove call to update() in reuse_tbf
  + Revert "tbf: Add GprsMs* argument to update() and use it in reuse_tbf"
  + tbf: Add Poll Timeout counters
  + alloc: Replace Algorithm B implementation
  + alloc: Only use common UL slots when calculating the capacity
  + alloc: Set minimum slot capacity to 1
  + alloc: Only reserve 1 UL slot with algorithm B
  + alloc: Skip common TS without free USF when rating
  + tbf: Keep a set of used TFI and USF per PDCH
  + alloc: Optimize find_free_usf
  + alloc: Disable inner loop debugging by default
  + sba: Reverse TS search order
  + alloc/test: Delete first TBF after the second is allocated
  + alloc: Use least reserved PDCH for algo A
  + llc: Fix comparison warning

-------------------------------------------------------------------
Thu Dec 18 19:31:41 UTC 2014 - mardnh@gmx.de

- Update to version 0.2.11.git1411120899.07e3930:
  + TbfTest: Make logging more verbose
  + tbf: Include TBF state in tbf_name output
  + tbf,bts: Keep track of new TBF for dl/ul assignment in m_new_tbf
  + tests/tbf: Test for final ack issue
  + tbf: Handle DL ACK/NACK poll timeout correctly
  + poll_controller: Be stricter with the timeout handling
  + tbf_dl: Fix warnings
  + tests/tbf: Use correct function to enqueue llc data
  + tests/tbf: Commit TbfTest.err *with* whitespace "errors"

-------------------------------------------------------------------
Wed Jul  2 19:31:36 UTC 2014 - mardnh@gmx.de

- update to version 0.2.11+git.1404305867.e8915b9
- specfile cleanup
- make check is br0ken - disabled for now

-------------------------------------------------------------------
Tue Apr 15 08:24:39 UTC 2014 - mardnh@gmx.de

- update to version 0.2.11+git.1389776622.6f0796a

-------------------------------------------------------------------
Wed Sep  4 18:21:21 UTC 2013 - mardnh@gmx.de

- update to version 0.2.11.git9d93838

-------------------------------------------------------------------
Fri Aug 16 19:27:41 UTC 2013 - mardnh@gmx.de

- initial package written from scratch

