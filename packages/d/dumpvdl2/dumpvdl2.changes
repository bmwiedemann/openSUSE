-------------------------------------------------------------------
Sun Jul 11 20:27:02 UTC 2021 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.1.1
  * Fixed wrong ZeroMQ version check, which incorrectly declared
    ZMQ version 4.0.x as too old.

-------------------------------------------------------------------
Sat Nov  7 10:46:12 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.1.0
  * Added full JSON formatting for all protocols and message types.
    This is supported on all output types - file, udp and zmq.
    Together with multiple outputs feature that was introduced in
    version 2.0.0 this enables arbitrarily flexible arrangements,
    like logging to a file as text, logging to another file as JSON
    and sending JSON across the network using UDP and/or ZMQ. When
    collecting data from multiple receivers, --station-id option
    may be used to assign unique names to receivers in order to
    discriminate input from each one.
  * Removed a few duplicate routines that have their counterparts
    in libacars.

-------------------------------------------------------------------
Tue Aug 25 18:50:09 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to versino 2.0.1
  * Fixed build failure with gcc version 10.

-------------------------------------------------------------------
Mon Aug 24 22:07:52 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.0.0
  * Major overhaul of the output subsystem. The new architecture
    is modular, multithreaded and can easily be extended with new
    output drivers. It also allows using multiple outputs
    simultaneously.
  * New output configuration scheme. --output-file --daily,
    --hourly and --output-acars-pp options have been removed.
    All outputs are now configured using --output option.
    Adjusting command line parameters is therefore required to run
    the program. Run dumpvdl2 --output help for instructions or
    see "Output configuration" section in README.md for details
    and examples.
  * Support for streaming messages over network using UDP/IP.
  * Support for streaming messages over network using ZeroMQ
    publisher sockets. Requires libzmq library.
  * Support for storing AVLC frames as raw data (without decoding)
    in binary files for archiving purposes. File contents can
    then be decoded anytime later, as if the frames were just
  * received from the air. Requires protobuf-c library.
  * Minor bugfixes.

-------------------------------------------------------------------
Sun Jul  5 15:30:31 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.10.1
  * Added support for SDRPlay API version 3 which is required for
    new devices (notably RSPdx). API version 2 is still supported,
    however it will probably be removed in a future release. It is
    possible to have both versions installed simultaneously and to
    choose which one to use at runtime. See README.md for details.
  * Added --milliseconds option which enables printing timestamps
    in message headers up to a millisecond precision. Note that the
    arrival timestamp is stored per VDL2 burst, not per VDL2
    message. Since a VDL2 burst may contains more than one VDL2
    message, all messages extracted from a single burst will still
    have exactly the same timestamp value, regardless of whether
    millisecond precision has been enabled or not.

-------------------------------------------------------------------
Fri Feb 14 13:36:19 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.9.0
  * Added decoder for ISO 8650 / X.227 Association Control Service
    (ACSE).
  * Improved decoder for ISO 8327 / X.225 Session Protocol.
  * Restructured code of ATN applications decoder. The previous
    implementation was a little messy and was unable to handle a
    few uncommon types of messages (like ACSE Abort PDU with no
    payload). This should bring the number of undecoded ATN
    messages down to zero.
  * Enable debugging output from SDRPlay driver only if
    --debug sdr option is used.
  * Fix formatting of geo coordinates in ADS-C v2 messages.

-------------------------------------------------------------------
Mon Jan 27 20:12:31 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.8.2
  * Fix another crash opportunity due to missing sanity check on
    unparseable ACARS messages.
  * Fix ACARS output to Planeplotter. Only first three characters
    of Message Serial Number (MSN) field were sent instead of all
    four.

-------------------------------------------------------------------
Fri Jan 24 20:00:08 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.8.1
  * Fix a bug where an unparseable ACARS message could cause the
    program to crash.

-------------------------------------------------------------------
Sun Jan 19 20:23:36 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.8.0
  * Support for ATN-B2 Automatic Dependent Surveillance-Contract
    (ADS-C) version 2.
  * Support for automatic reassembly of multiblock ACARS messages,
    MIAM file transfers and fragmented X.25 packets. Contents of
    reassembled messages is now logged in one piece and passed
    upwards to decoders of higher layer protocols / applications.
    Thanks to this, many large messages which so far were decoded
    partially and logged with "Unparseable ... PDU" errors due to
    fragmentation, are now decoded correctly.
  * StatsD metrics for monitoring reassembly engine performance
    have been added.
  * Logged messages may be enriched with ground stations details
    read from a text file in MultiPSK GS format. Look up --gs-file
    and --addrinfo options in README.md and dumpvdl2 usage text for
    more details.
  * Logged messages may be enriched with aircraft details read from
    a Basestation SQLite database. SQLite3 library must be installed
    prior to compiling dumpvdl2 in order for this feature to be
    enabled. Look up --bs-db and --addrinfo options in README.md and
    dumpvdl2 usage text for more details. Database entries are
    cached in memory. There are new StatsD metrics for monitoring
    performance and utilization of the cache.
  * New --prettify-xml option enables pretty-printing of XML
    documents carried in ACARS and MIAM CORE messages. The purpose
    is to improve readability. If enabled, XML content will be
    printed as multiline text with proper indentation.  This
    requires libacars built with libxml2 support.
  * ACARS sublabel and MFI fields are now stripped from message text
    and logged as separate fields (if present).
  * When compiled with debugging support, dumpvdl2 now has a new
    --debug command line option allowing configurable verbosity of
    debug messages. No debug output is produced by default.
  * Added extras subdirectory to the source tree. Additional content
    related to dumpvdl2 will be stored here. Currently bundled
    extras are: multitail color scheme for dumpvdl2 log files and
    vdl2grep script for grepping dumpvdl2 log files.
  * Bug fixes, code cleanups.

-------------------------------------------------------------------
Mon Nov 11 18:53:00 UTC 2019 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.7.1
  * Fixed an issue where a truncated or corrupted ICAO APDU could
    cause a crash in ASN.1 decoder.
  * Fixed an issue where NULL characters in XID attribute values
    could cause them do be printed partially. Any non-printable
    characters in octet strings printed as text are now replaced
    with periods.

-------------------------------------------------------------------
Mon Aug 26 20:43:04 UTC 2019 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.7.0
  * Complete overhaul of output generation code.
  * Significant enhancements to CLNP, COTP and IDRP decoders.
    Most if not all protocol headers are now decoded and included
    in the output.
  * Added a decoder for X.225 Session Protocol SPDUs.
  * Added a decoder for VDL SNDCF error reports.
  * XID: improved decoding of XID sequencing, Frequency support
    and System mask attributes.
  * X.25: improved decoding of facility fields, call clearing
    causes and diagnostic codes.
  * Minor bug fixes.

-------------------------------------------------------------------
Fri Jan 18 23:54:00 UTC 2019 - mardnh@gmx.de

- Update to version 1.6.0
  * New build system based on cmake.
  * FANS/1-A CPDLC, ADS-C and ACARS decoders have been removed.
    These features have been moved to libacars library, which is
    now a mandatory dependency
  * Added support for SoapySDR library. However there are still
    some limitations with respect to SDR types which dumpvdl2
    can work with. As of now, the device must support a sampling
    rate of 2100000 samples per second. This will be addressed in
    a future release.
  * Minor bugfixes

-------------------------------------------------------------------
Sun Nov 18 18:51:58 UTC 2018 - mardnh@gmx.de

- Update to version 1.5.0
  * Sync with the latest SDRPlay API v. 2.13 which is now required
    to compile the program.
  * Added support for SDRPlay RSPduo (with tuner selection, bias-T
    and notch filters).
  * Added support for RSP1A features: Bias-T and broadcast notch
    filter.
  * Minor bugfixes

-------------------------------------------------------------------
Wed Aug  1 19:35:17 UTC 2018 - mardnh@gmx.de

- Update to version 1.4.0
  * Major improvements to the DSP and decoding engine - gives much
    better decoding success rate, especially for weak transmissions
    from distant aircraft.
  * Each VDL2 channel is now processed in a separate thread, which
    allows balancing the load onto multiple CPU cores.
  * Fixed a nasty decoder bug which caused good frames to be
    corrupted during decoding stage and therefore missed.
  * Added CRC checking for ACARS messages. If there is a CRC
    mismatch, the message will still be logged, but with an
    appropriate warning.
  * New StatsD metric avlc.msg.air2air - counts messages from
    aircraft to aircraft (however strange it seems, such things
    happen in real life).
  * New StatsD metric decoder.errors.too_long - counts VDL2 bursts
    dropped due to unreasonably large value in the length field.
  * Due to changes in the decoding engine, the following StatsD
    metric are now obsolete and have been removed:
    avlc.errors.no_flag_start, avlc.errors.no_flag_end,
    decoder.errors.no_preamble.
  * Added --extended-header command line option which causes a few
    decoder diagnostic parameters to be logged for each message.
    Refer to the FAQ in README.md for description of the fields.
  * Other minor bugfixes and improvements.
  * C11-capable compiler is now required to build the program.

-------------------------------------------------------------------
Fri Jun  1 19:53:27 UTC 2018 - mardnh@gmx.de

- Update to version 1.3.1
  * Added decpdlc utility which decodes FANS-1/A CPDLC messages
    supplied from command line or from a file. Can be used to
    decode CPDLC traffic received via other media than VDL-2
    (eg. ACARS, HFDL, SATCOM). Refer to "decpdlc" section in
    README.md for details

-------------------------------------------------------------------
Wed Apr 11 20:31:31 UTC 2018 - mardnh@gmx.de

- Update to version 1.3.0
  * Added decoder for FANS-1/A ADS-C messages
  * Added decoder for FANS-1/A CPDLC messages
  * Human-readable formatting of CPDLC and Context Management
    messages (if you still want the old format, add --dump-asn1
    command line option)
  * Added install rule to Makefile
  * Added a sample systemd service file
  * Bug fixes

-------------------------------------------------------------------
Mon Jan  1 12:12:40 UTC 2018 - mardnh@gmx.de

- Update to version 1.2.0
  * Better input signal filtering - reduced bit error rate, 10-50% more
    messages successfully decoded.
  * SDRPlay: major bugfixes in sample buffer handling code - shall now
    perform equally well as RTLSDR (or even better).
  * SDRPlay: --gain knob replaced with --gr (gain reduction). This makes
    gain configuration in dumpvdl2 compatible with other SDRPlay apps.
    See README.md for details.
  * SDRPlay: support for selecting device by serial number.
    Added optional build-time PLATFORM knob which sets CPU-specific
  * compiler flags to optimize the code for various flavours of
    Raspberry Pi. Supported values: rpiv1, rpiv2, rpiv3.
  * Other minor bug fixes
- Remove patch:
  * dumpvdl2-obey-cflags.diff

-------------------------------------------------------------------
Wed Jun 28 12:36:49 UTC 2017 - jengelh@inai.de

- Remove disputable/irrelevant wording from description.

-------------------------------------------------------------------
Tue Jun 20 20:30:49 UTC 2017 - mardnh@gmx.de

- Update to version 1.1.0
  * Support for SDRPlay RSP1 and 2 using native binary API
  * Added dissector for ISO 8073/X.224 Connection-oriented Transport Protocol
  * Added dissectors for ICAO Context Management and CPDLC
  * Enhancements for ES-IS and XID dissectors
  * Support for referring to dongles using their serial numbers
  * Output formatting fixes
  * Bug fixes
- Rebase patch:
  * dumpvdl2-obey-cflags.diff

-------------------------------------------------------------------
Tue Jun 20 13:54:19 UTC 2017 - mpluskal@suse.com

- Tiny packaging cleanup

-------------------------------------------------------------------
Mon Feb 27 12:52:15 UTC 2017 - mardnh@gmx.de

- initial package

