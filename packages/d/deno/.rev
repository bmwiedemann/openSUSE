<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>8bf5b3710e7f8d759b01c6cba3f2e514</srcmd5>
    <version>1.23.0</version>
    <time>1655972602</time>
    <user>dimstar_suse</user>
    <comment>removed python3-setuptools: only python3-base is needed</comment>
    <requestid>984244</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>326e85ab31c6f90fd8559e7050aeb563</srcmd5>
    <version>1.25.0</version>
    <time>1661497683</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.25.0:
  * BREAKING(ext/ffi): specialized buffer type (#15518)
  * feat(ext/crypto): deriveBits P-384 (#15138)
  * feat(ext/flash): An optimized http/1.1 server (#15405)
  * feat(ext/flash): split upgradeHttp into two APIs (#15557)
  * feat(ops): V8 Fast Calls (#15291)
  * feat(repl): add color to functions for syntax highlighting (#15434)
  * feat(runtime): add pre_execute_module_cb (#15485)
  * feat(unstable): initial support for npm specifiers (#15484)
  * feat: queueMicrotask() error handling (#15522)
  * feat: add &quot;deno init&quot; subcommand (#15469)
  * fix(cache): do not attempt to emit non-emitable files (#15562)
  * fix(core/runtime): always cancel termination in exception handling (#15514)
  * fix(coverage): ensure coverage is only collected in certain situations (#15467)
  * fix(ext/fetch): ignore user content-length header (#15555)
  * fix(ext/flash): concurrent response streams (#15493)
  * fix(ext/flash): fix default onListen callback (#15533)
  * fix(ext/flash): fix listening port (#15519)
  * fix: Free up JsRuntime state global handles before snapshot (#15491)
  * fix: resolve jsxImportSource relative to module (#15561)
  * perf(runtime): optimize Deno.file open &amp; stream (#15496)
  * perf: cache swc dependency analysis and don't hold onto ParsedSources in memory (#15502)
  * perf: improve performance.now (#15481)
- remove fix-cflags.patch (fix in upstream)
- update to 1.24.3:
  * fix(ext/fetch): add socks proxy support (#15372)
  * feat(unstable/ext/ffi): add static method variants to Deno.UnsafePointerView
    (#15146)
  * fix(cli): allow configurations files to also be json modules (#15444)
  * fix(ext/ffi): check CStr for UTF-8 validity on read (#15318)
  * fix(ext/ffi): unstable op_ffi_unsafe_callback_ref (#15439)
  * fix(permissions): ignore empty values (#15447)
  * fix(task): subcommand parser skips global args (#15297)
  * fix: allow setting globalThis.location when no --location is provided
    (#15448)
  * fix: update deno_graph to fix importing config as JSON module (#15388)
  * fix: various formatting fixes (#15412)
  * perf(ops): monomorphic sync op calls (#15337)
- includes 1.24.2:
  * feat(ext/ffi): Add support to get ArrayBuffers from UnsafePointerView (#15143)
  * feat(ext/ffi): Safe number pointers (#15173)
  * fix(compat): use mjs extension for stream/promises (#15341)
  * fix(core): BorrowMutError in nested error (#15352)
  * fix(ext/webgpu): use correct IDL key name (#15278)
  * fix(lsp): remove excessive line breaks in status page (#15364)
  * fix(lsp): use correct commit chars for completions (#15366)
  * fix(test): output parallel test results independently (#15399)
  * fix(test): race condition for cancelled tests (#15233)
  * fix(vendor): error on dynamic imports that fail to load instead of panicking
    (#15391)
  * fix(vendor): existing import map with bare specifier in remote (#15390)
  * fix: increase websocket message size (#15406)
  * perf(ext/ffi): support Uint8Array in fast calls (#15319)
  * perf(ext/ffi): use fast api calls for 64bit return types (#15313)
- includes 1.24.1:
  * fix(cli): unset jsxFragmentFactory &amp; jsxFactory options (#15264)
  * fix(ext/fetch): resolve TODOs about WebIDL conversions in body init (#15312)
  * fix(lsp): remove CompletionInfo.flags (#15288)
  * fix(tools): upgrade to new Deno.spawn api (#15265)
  * fix: Child.unref() unrefs stdio streams properly (#15275)
  * fix: proper typings for unhandledrejection event (#15271)
  * fix: unhandledrejection handling for sync throw in top level (#15279)
  * perf(ext/ffi): Optimise common pointer related APIs (#15144)
  * serde_v8: improvements to avoid hitting unimplemented codepaths (#13915)
- includes 1.24.0:
  * BREAKING(unstable): Improve Deno.spawn() stdio API (#14919)
  * feat(cli): support configuring the test tool in the config file (#15079)
  * feat(cli/lsp): Sort repl completions (#15171)
  * feat(cli/test): add DENO_JOBS env variable for test subcommand (#14929)
  * feat(ext/ffi): Support 64 bit parameters in Fast API calls (#15140)
  * feat(fmt): do not add a newline between a template and its tag (#15195)
  * feat(lsp): provide import map remapping diags and fixes (#15165)
  * feat(test): add --parallel flag, soft deprecate --jobs (#15259)
  * feat(unstable): Ability to ref/unref &quot;Child&quot; in &quot;Deno.spawnChild()&quot; API
    (#15151)
  * feat(web): add beforeunload event (#14830)
  * feat: add &quot;unhandledrejection&quot; event support (#12994, #15211)
  * feat: import.meta.resolve() (#15074)
  * fix(cli): Improve error message in watch mode (#15184)
  * fix(cli): expand tsc roots when using checkJs (#15164)
  * fix(cli): synchronize async stdio/file reads and writes (#15092)
  * fix(cli/dts): allow passing arguments to WebAssembly error constructors
    (#15149)
  * fix(core): unhandled rejection in top-level scope (#15204)
  * fix(coverage): do not verify emit source hash for coverage (#15260)
  * fix(ext/ffi): allow setting a custom lib path for libtcc.a (#15208)
  * fix(ext/ffi): i64 arg to C mapping was wrong (#15162)
  * fix(ext/web): align DOMException better with spec (#15097)
  * fix(fmt): improve curried arrow functions (#15251)
  * fix(repl): do not panic for import completions when the import specifier is
    empty (#15177)
  * fix(task): do not overflow attempting to parse large number as redirect
    (#15249)
  * fix(task): resolve deno configuration file first from specified --cwd arg
    (#15257)
  * fix: WebSocketStream ping event causes pending promises (#15235)
  * fix: fallback to no type checking cache when db file can't be created (#15180)
  * fix: revert changes to test output for uncaught errors (#15231)
  * perf: emit files on demand and fix racy emit (#15220)
  * perf: use emit from swc instead of tsc (#15118)
- includes 1.23.4:
  * feat(core): Re-export v8 use_custom_libcxx feature (#14475)
  * fix(core): deflake WASM termination test (#15103)
  * fix(coverage): better handling of multi-byte characters (#15159)
  * fix(ext/console): Fix a typo in a warning when .timeEnd is called on an
    unknown timer (#15135)
  * fix(ext/crypto): Adjust typings for Crypto.getRandomValues() (#15130)
  * fix(ext/ffi): Avoid keeping JsRuntimeState RefCell borrowed for event loop
    middleware calls (#15116)
  * fix(ext/ffi): allow opting out of fast ffi calls (#15131)
  * fix(ext/ffi): trampoline for fast calls (#15139)
  * fix(ext/http) nextRequest return type annotation from ResponseEvent to
    RequestEvent (#15100)
  * fix(ext/http): reading headers with ongoing body reader (#15161)
  * fix(ext/url): missing primordial (#15096)
  * fix(lsp): enable auto imports (#15145)
  * fix(net): don't panic on failed UDS removal (#15157)
  * fix: upgrade deno_ast to 0.17 (#15152)
  * perf(cli/proc_state): Get error source lines from memory (#15031)
  * perf(ext/ffi): leverage V8 Fast Calls (#15125)
  * perf(ext/http): skip core.isProxy check for default ResponseInit (#15077)
- includes 1.23.3:
  * Revert &quot;refactor(snapshots): to their own crate (#14794)&quot; (#15076)
  * fix(cli): handle collecting a directory with file:// (#15002)
  * fix(core): handle exception from Wasm termination (#15014)
  * fix(core): remove unsafe in OpsTracker (#15025)
  * fix(dts): stop default export type behavior (#14977)
  * fix: update to TypeScript 4.7.4 (#15022)
  * perf(ext/http): lazy load headers (#15055)
  * perf(ext/http): remove accept_encoding interior mutability (#15070)
  * perf(ext/http): simplify op_http_accept (#15067)
  * perf(ops): fast path for SMI return values (#15033)
  * perf(serde_v8): avoid extra is_array_buffer_view check (#15056)
- includes 1.23.2:
  * feat(unstable/ffi): thread safe callbacks (#14942)
  * fix(core): don't panic on non-existent cwd (#14957)
  * fix(docs): --watch arg is stable (#14970)
  * fix(dts/ffi): non-exact types break FFI inference (#14968)
  * fix(ext/crypto): add EcdhKeyDeriveParams to deriveKey types (#15005)
  * fix(ext/ffi): empty buffers error with index out of bounds on FFI (#14997)
  * fix(ext/web): remove ErrorEventInit's error default (#14809)
  * fix(lsp): restart TS language service when caching dependencies (#14979)
  * fix(modules): immediately resolve follow-up dyn imports to a dyn imported
    module (#14958)
  * fix(runtime): derive default for deno_runtime::ExitCode (#15017)
  * fix(task): remove --no-config as task subcommand argument (#14983)
  * fix(test): typo ('finsihed') if text decoder not closed during test (#14996)
  * fix(vendor): ignore import map in output directory instead of erroring
    (#14998)
  * fix: don't error if Deno.bench() or Deno.test() are used in run subcommand
    (#14946)
  * perf(ext/ffi): optimize synchronous calls (#14945)
  * perf(ext/web): avoid reallocations in op_base64_atob (#15018)
  * perf(ext/web): use base64-simd for atob/btoa (#14992)
  * perf(serde_v8): smallvec ByteString (#15008)
- update to 1.23.1:
  * BREAKING(unstable/ffi): Remove Deno.UnsafePointer indirection (#14915)
  * feat(unstable/ffi): Callbacks (#14663)
  * fix(check): ignore TS2306 (#14940)
  * fix(docs): update description of --check flag (#14890)
  * fix(ext/fetch): add accept-language default header to fetch (#14882)
  * fix(ext/web): add EventTarget brand checking (#14637)
  * fix(ext/web): handle rid=0 in TextDecoder#decode (#14894)
  * fix(fmt): ignore node_modules directory (#14943)
  * fix(fmt): should fail --check on parse error (#14907)
  * fix(repl): accept tab when previous character is whitespace (#14898)
  * fix(repl): use spaces for tab handler on windows (#14931)
  * fix: do not panic running .d.cts and .d.mts files (#14917)
  * fix: make Performance global an EventTarget
  * fix: upgrade swc via deno_ast 0.16 (#14930)
  * perf(core): Cache source lookups (#14816)
  * perf(ext/ffi): Optimize FFI Rust side type checks (#14923)
- rebase fix-cflags.patch
</comment>
    <requestid>999287</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>55b331677074ee84c9e95b2968ab89e5</srcmd5>
    <version>1.25.1</version>
    <time>1662405696</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.25.1:
  * feat(ops): support v8::FastApiCallbackOptions (#15721)
  * feat(serde_v8): Serialize integers as BigInt (#15692)
  * fix(check): --remote and --no-remote should be mutually exclusive (#14964)
  * fix(cli): deno upgrade --canary always downloaded latest version
    even if it was already latest (#15639)
  * fix(compile): panic when running with a populated dep analysis cache (#15672)
  * fix(docs): add missing categories (#15684)
  * fix(ext/ffi): Fix pointer types (#15730)
  * fix(ext/flash): add missing backticks in server docs (#15644)
  * fix(ext/flash): panic on AddrInUse (#15607)
  * fix(ext/flash): retry write failures (#15591)
  * fix(ext/node): add missing primordial (#15595)
  * fix(ext/node): better error for importing ES module via
    require() call (#15671)
  * fix(ext/node): fix global in node env (#15622)
  * fix(ext/websocket): fix closing of WebSocketStream with unread
    messages (#15632)
  * fix(fmt): add the file path to the panic messages when formatting
    is unstable (#15693)
  * fix(npm): better node version and version requirement compatibility (#15714)
  * fix(npm): conditional exports with wildcards (#15652)
  * fix(npm): handle cjs re-exports with the same name as an export (#15626)
  * fix(npm): ignore npm cache directory creation errors (#15728)
  * fix(npm): ignore the unstable error in the lsp (#15727)
  * fix(npm): prefer importing esm from esm (#15676)
  * fix(npm): skip extracting pax_global_header from tarballs (#15677)
  * fix(npm): translate CJS to ESM with name clashes for files and dirs (#15697)
  * fix(serde_v8): no panic on reading large text file (#15494)
  * fix(serde_v8): update bytes::Bytes layout assumptions (#15718)
  * fix: avoid global declaration collisions in cjs (#15608)
  * fix: config file errors should not print specifier with debug formatting
    (#15648)
  * fix: typo in deno_ops README (#15606)
  * perf(ext/web): flatten op arguments for text_encoding (#15723)
  * perf(ops): inline String args (#15681)
  * perf(runtime): optimize allocations in read/write checks (#15631)
  * perf: use fast api for core.isProxy (#15682)
  * perf: use fast api for op_now (#15643)
  * serde_v8: fix pointer size assumptions (#15613)
</comment>
    <requestid>1001143</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>47ce728879986fe1f83f9446b13cd825</srcmd5>
    <version>1.25.2</version>
    <time>1663002484</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.25.2:
  * BREAKING(unstable): remove --compat mode (#15678)
  * feat(ext/ffi): Implement FFI fast-call trampoline with Dynasmrt (#15305)
  * feat(ext/ffi): Support bool FFI type (#15754)
  * feat(serde_v8): Support StringObject as unit enum variant (#15715)
  * fix(bench): make sure bytes/response is equal (#15763)
  * fix(cli): Fix panic when providing invalid urls to --reload (#15784)
  * fix(cli): allow using file resource synchronously while being used
    async (#15747)
  * fix(cli/repl): await Promise.any([])... (#15623)
  * fix(core): Register external references for imports to
    the SnapshotCreator (#15621)
  * fix(core): make errors more resistant to tampering (#15789)
  * fix(core): opAsync leaks a promise on type error (#15795)
  * fix(docs): add missing categories for unstable (#15807)
  * fix(docs): change category for Deno.Process to &quot;Sub Process&quot; (#15812)
  * fix(ext/flash): use utf8 length as Content-Length (#15793)
  * fix(ext/timers): create primordial eval (#15110)
  * fix(init): suppress info logs when using quiet mode (#15741)
  * fix(npm): add more context to errors when file doesn't exist (#15749)
  * fix(npm): conditional exports in npm: specifiers (#15778)
  * fix(npm): correct exact matching of pre-release versions (#15745)
  * fix(npm): recursive translation of reexports, remove window global
    in node code (#15806)
  * fix(npm): respect latest dist tag for getting current version (#15746)
  * fix(ops): use qualified borrow in op macro (#15769)
  * fix(repl): don't terminate on unhandled error events (#15548)
  * fix(test): unflake wasm_unreachable test (#15794)
  * fix(watch): ignore unload errors on drop (#15782)
  * fix: upgrade deno_ast to 0.19 (#15808)
  * perf(ops): inline &amp;[u8] arguments and enable fast API (#15731)
  * perf(runtime): flatten arguments for write_file ops (#15776)
  * perf(runtime): short-circuit queue_async_op for Poll::Ready (#15773)
</comment>
    <requestid>1002544</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>1230fac86221ae3332ee4b2750bec256</srcmd5>
    <version>1.26.0</version>
    <time>1664553435</time>
    <user>RBrownFactory</user>
    <comment>- update to 1.26.0:
  * feat: add --allow-sys permission flag (#16028)
  * feat: add --no-npm flag to disable npm: imports (#15673)
  * feat: Add requesting API name to permission prompt (#15936)
  * feat: allow exiting on two consecutive ctrl+c presses (#15981)
  * feat: download progress bar (#15814)
  * feat: implement Web Cache API (#15829)
  * feat: Refresh interactive permission prompt (#15907)
  * feat: Stabilize Deno.hostname() API (#15932)
  * feat: Stabilize Deno.refTimer() and Deno.unrefTimer() APIs (#16036)
  * feat: TypeScript 4.8 update (#16040)
  * feat(cli): update to TypeScript 4.8 (#15064)
  * feat(core): add Deno.core.setPromiseHooks (#15475)
  * feat(ext/crypto): add x25519 and Ed25519 CFRG curves (#14119)
  * feat(ext/flash): add reuseport option on Linux (#16022)
  * feat(info): add information about npm modules cache (#15750)
  * feat(lint): add --compact flag for terse output (#15926)
  * feat(npm): functionality to support child_process.fork (#15891)
  * feat(ops): Fallible fast ops (#15989)
  * feat(unstable): Deno.setRaw -&gt; Deno.stdin.setRaw (#15797)
  * fix(cli/bench): strace numeric format (#16055)
  * fix(cli/vendor): handle assert type json during vendoring (#16059)
  * fix(ext/console): fix error when logging a proxied Date (#16018)
  * fix(ext/fetch): blob url (#16057)
  * fix(ext/flash): reregister socket on partial read on Windows (#16076)
  * fix(fmt): keep type args in type queries and keep empty array expr element's
    trailing comma (#16034)
  * fix(npm): use ntfs junctions in node_modules folder on Windows (#16061)
  * fix(require): tryPackage uses optional chaining (#16020)
  * fix(runtime): refresh perm prompt 3 lines instead of 4 (#16049)
  * perf: don't re-download package tarball to global cache if local node_modules
    folder exists for package (#16005)
  * perf: use fast ops for tty (#15976)
  * perf(ext/console): break on iterableLimit &amp; better sparse array handling (#15935)
  * perf(ext/fetch): use content-length in InnerBody.consume (#15925)
- includes 1.25.4:
  * feat(unstable/npm): add flag for creating and resolving npm packages to a
    local node_modules folder (#15971)
  * feat(unstable/npm): add support for --reload=npm: and --reload=npm: (#15972)
  * feat(internal/ops): Automatic fast ops creation (#15527)
  * fix(compile): keep non-exe extension in output name on Windows (#15994)
  * fix(doc): deno doc should parse modules if they haven't been parsed before (#15941)
  * fix(ext/node): fix builtin module module (#15904)
  * fix(ext/webgpu): make GPUDevice.features SetLike (#15853)
  * fix(flash): panic if response if undefined (#15964)
  * fix(runtime): better error message with Deno.env.get/set (#15966)
  * fix(runtime): fix permission status cache keys (#15899)
  * perf(cli): avoid canonicalize_path if config file does not exist (#15957)
  * perf(cli): avoid clap::App::clone (#15951)
  * perf(cli): use -O3 instead of -Oz (#15952)
  * perf(core): use single ObjectTemplate for ops in initialize_ops (#15959)
  * perf(ext/console): avoid wrapConsole when not inspecting (#15931)
  * perf(web): optimize encodeInto() (#15922)
  * perf: fs optimizations - part 1 (#15873)
- update to 1.25.3:
  * doc(unstable): mention that signal input isn't supported in spawnSync
    (#15889)
  * fix(ext/flash): don't block requests (#15852)
  * fix(npm): align Deno importing Node cjs with Node esm importing cjs (#15879)
  * fix(npm): align Node esm code importing cjs with Node (#15838)
  * fix(npm): binary entrypoint for .js or no extension (#15900)
  * fix(npm): remove export binding to match node (#15837)
  * fix(npm): support cjs resolution of package subpath with package.json (#15855)
  * fix(npm): use shim from deno_node crate for 'module' built-in module (#15881)
  * fix(ops): add node.js env variable allowlist (#15893)
  * perf(ext/flash): remove string-&gt;buffer cache (#15850)
  * perf(serde_v8): remove Mutex from ZeroCopyBuf (#15888)
  * perf(url): return early if url has no query string (#15856)
  * perf: optimize URL serialization (#15663)
</comment>
    <requestid>1007112</requestid>
  </revision>
</revisionlist>
