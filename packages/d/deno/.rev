<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>8bf5b3710e7f8d759b01c6cba3f2e514</srcmd5>
    <version>1.23.0</version>
    <time>1655972602</time>
    <user>dimstar_suse</user>
    <comment>removed python3-setuptools: only python3-base is needed</comment>
    <requestid>984244</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>326e85ab31c6f90fd8559e7050aeb563</srcmd5>
    <version>1.25.0</version>
    <time>1661497683</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.25.0:
  * BREAKING(ext/ffi): specialized buffer type (#15518)
  * feat(ext/crypto): deriveBits P-384 (#15138)
  * feat(ext/flash): An optimized http/1.1 server (#15405)
  * feat(ext/flash): split upgradeHttp into two APIs (#15557)
  * feat(ops): V8 Fast Calls (#15291)
  * feat(repl): add color to functions for syntax highlighting (#15434)
  * feat(runtime): add pre_execute_module_cb (#15485)
  * feat(unstable): initial support for npm specifiers (#15484)
  * feat: queueMicrotask() error handling (#15522)
  * feat: add &quot;deno init&quot; subcommand (#15469)
  * fix(cache): do not attempt to emit non-emitable files (#15562)
  * fix(core/runtime): always cancel termination in exception handling (#15514)
  * fix(coverage): ensure coverage is only collected in certain situations (#15467)
  * fix(ext/fetch): ignore user content-length header (#15555)
  * fix(ext/flash): concurrent response streams (#15493)
  * fix(ext/flash): fix default onListen callback (#15533)
  * fix(ext/flash): fix listening port (#15519)
  * fix: Free up JsRuntime state global handles before snapshot (#15491)
  * fix: resolve jsxImportSource relative to module (#15561)
  * perf(runtime): optimize Deno.file open &amp; stream (#15496)
  * perf: cache swc dependency analysis and don't hold onto ParsedSources in memory (#15502)
  * perf: improve performance.now (#15481)
- remove fix-cflags.patch (fix in upstream)
- update to 1.24.3:
  * fix(ext/fetch): add socks proxy support (#15372)
  * feat(unstable/ext/ffi): add static method variants to Deno.UnsafePointerView
    (#15146)
  * fix(cli): allow configurations files to also be json modules (#15444)
  * fix(ext/ffi): check CStr for UTF-8 validity on read (#15318)
  * fix(ext/ffi): unstable op_ffi_unsafe_callback_ref (#15439)
  * fix(permissions): ignore empty values (#15447)
  * fix(task): subcommand parser skips global args (#15297)
  * fix: allow setting globalThis.location when no --location is provided
    (#15448)
  * fix: update deno_graph to fix importing config as JSON module (#15388)
  * fix: various formatting fixes (#15412)
  * perf(ops): monomorphic sync op calls (#15337)
- includes 1.24.2:
  * feat(ext/ffi): Add support to get ArrayBuffers from UnsafePointerView (#15143)
  * feat(ext/ffi): Safe number pointers (#15173)
  * fix(compat): use mjs extension for stream/promises (#15341)
  * fix(core): BorrowMutError in nested error (#15352)
  * fix(ext/webgpu): use correct IDL key name (#15278)
  * fix(lsp): remove excessive line breaks in status page (#15364)
  * fix(lsp): use correct commit chars for completions (#15366)
  * fix(test): output parallel test results independently (#15399)
  * fix(test): race condition for cancelled tests (#15233)
  * fix(vendor): error on dynamic imports that fail to load instead of panicking
    (#15391)
  * fix(vendor): existing import map with bare specifier in remote (#15390)
  * fix: increase websocket message size (#15406)
  * perf(ext/ffi): support Uint8Array in fast calls (#15319)
  * perf(ext/ffi): use fast api calls for 64bit return types (#15313)
- includes 1.24.1:
  * fix(cli): unset jsxFragmentFactory &amp; jsxFactory options (#15264)
  * fix(ext/fetch): resolve TODOs about WebIDL conversions in body init (#15312)
  * fix(lsp): remove CompletionInfo.flags (#15288)
  * fix(tools): upgrade to new Deno.spawn api (#15265)
  * fix: Child.unref() unrefs stdio streams properly (#15275)
  * fix: proper typings for unhandledrejection event (#15271)
  * fix: unhandledrejection handling for sync throw in top level (#15279)
  * perf(ext/ffi): Optimise common pointer related APIs (#15144)
  * serde_v8: improvements to avoid hitting unimplemented codepaths (#13915)
- includes 1.24.0:
  * BREAKING(unstable): Improve Deno.spawn() stdio API (#14919)
  * feat(cli): support configuring the test tool in the config file (#15079)
  * feat(cli/lsp): Sort repl completions (#15171)
  * feat(cli/test): add DENO_JOBS env variable for test subcommand (#14929)
  * feat(ext/ffi): Support 64 bit parameters in Fast API calls (#15140)
  * feat(fmt): do not add a newline between a template and its tag (#15195)
  * feat(lsp): provide import map remapping diags and fixes (#15165)
  * feat(test): add --parallel flag, soft deprecate --jobs (#15259)
  * feat(unstable): Ability to ref/unref &quot;Child&quot; in &quot;Deno.spawnChild()&quot; API
    (#15151)
  * feat(web): add beforeunload event (#14830)
  * feat: add &quot;unhandledrejection&quot; event support (#12994, #15211)
  * feat: import.meta.resolve() (#15074)
  * fix(cli): Improve error message in watch mode (#15184)
  * fix(cli): expand tsc roots when using checkJs (#15164)
  * fix(cli): synchronize async stdio/file reads and writes (#15092)
  * fix(cli/dts): allow passing arguments to WebAssembly error constructors
    (#15149)
  * fix(core): unhandled rejection in top-level scope (#15204)
  * fix(coverage): do not verify emit source hash for coverage (#15260)
  * fix(ext/ffi): allow setting a custom lib path for libtcc.a (#15208)
  * fix(ext/ffi): i64 arg to C mapping was wrong (#15162)
  * fix(ext/web): align DOMException better with spec (#15097)
  * fix(fmt): improve curried arrow functions (#15251)
  * fix(repl): do not panic for import completions when the import specifier is
    empty (#15177)
  * fix(task): do not overflow attempting to parse large number as redirect
    (#15249)
  * fix(task): resolve deno configuration file first from specified --cwd arg
    (#15257)
  * fix: WebSocketStream ping event causes pending promises (#15235)
  * fix: fallback to no type checking cache when db file can't be created (#15180)
  * fix: revert changes to test output for uncaught errors (#15231)
  * perf: emit files on demand and fix racy emit (#15220)
  * perf: use emit from swc instead of tsc (#15118)
- includes 1.23.4:
  * feat(core): Re-export v8 use_custom_libcxx feature (#14475)
  * fix(core): deflake WASM termination test (#15103)
  * fix(coverage): better handling of multi-byte characters (#15159)
  * fix(ext/console): Fix a typo in a warning when .timeEnd is called on an
    unknown timer (#15135)
  * fix(ext/crypto): Adjust typings for Crypto.getRandomValues() (#15130)
  * fix(ext/ffi): Avoid keeping JsRuntimeState RefCell borrowed for event loop
    middleware calls (#15116)
  * fix(ext/ffi): allow opting out of fast ffi calls (#15131)
  * fix(ext/ffi): trampoline for fast calls (#15139)
  * fix(ext/http) nextRequest return type annotation from ResponseEvent to
    RequestEvent (#15100)
  * fix(ext/http): reading headers with ongoing body reader (#15161)
  * fix(ext/url): missing primordial (#15096)
  * fix(lsp): enable auto imports (#15145)
  * fix(net): don't panic on failed UDS removal (#15157)
  * fix: upgrade deno_ast to 0.17 (#15152)
  * perf(cli/proc_state): Get error source lines from memory (#15031)
  * perf(ext/ffi): leverage V8 Fast Calls (#15125)
  * perf(ext/http): skip core.isProxy check for default ResponseInit (#15077)
- includes 1.23.3:
  * Revert &quot;refactor(snapshots): to their own crate (#14794)&quot; (#15076)
  * fix(cli): handle collecting a directory with file:// (#15002)
  * fix(core): handle exception from Wasm termination (#15014)
  * fix(core): remove unsafe in OpsTracker (#15025)
  * fix(dts): stop default export type behavior (#14977)
  * fix: update to TypeScript 4.7.4 (#15022)
  * perf(ext/http): lazy load headers (#15055)
  * perf(ext/http): remove accept_encoding interior mutability (#15070)
  * perf(ext/http): simplify op_http_accept (#15067)
  * perf(ops): fast path for SMI return values (#15033)
  * perf(serde_v8): avoid extra is_array_buffer_view check (#15056)
- includes 1.23.2:
  * feat(unstable/ffi): thread safe callbacks (#14942)
  * fix(core): don't panic on non-existent cwd (#14957)
  * fix(docs): --watch arg is stable (#14970)
  * fix(dts/ffi): non-exact types break FFI inference (#14968)
  * fix(ext/crypto): add EcdhKeyDeriveParams to deriveKey types (#15005)
  * fix(ext/ffi): empty buffers error with index out of bounds on FFI (#14997)
  * fix(ext/web): remove ErrorEventInit's error default (#14809)
  * fix(lsp): restart TS language service when caching dependencies (#14979)
  * fix(modules): immediately resolve follow-up dyn imports to a dyn imported
    module (#14958)
  * fix(runtime): derive default for deno_runtime::ExitCode (#15017)
  * fix(task): remove --no-config as task subcommand argument (#14983)
  * fix(test): typo ('finsihed') if text decoder not closed during test (#14996)
  * fix(vendor): ignore import map in output directory instead of erroring
    (#14998)
  * fix: don't error if Deno.bench() or Deno.test() are used in run subcommand
    (#14946)
  * perf(ext/ffi): optimize synchronous calls (#14945)
  * perf(ext/web): avoid reallocations in op_base64_atob (#15018)
  * perf(ext/web): use base64-simd for atob/btoa (#14992)
  * perf(serde_v8): smallvec ByteString (#15008)
- update to 1.23.1:
  * BREAKING(unstable/ffi): Remove Deno.UnsafePointer indirection (#14915)
  * feat(unstable/ffi): Callbacks (#14663)
  * fix(check): ignore TS2306 (#14940)
  * fix(docs): update description of --check flag (#14890)
  * fix(ext/fetch): add accept-language default header to fetch (#14882)
  * fix(ext/web): add EventTarget brand checking (#14637)
  * fix(ext/web): handle rid=0 in TextDecoder#decode (#14894)
  * fix(fmt): ignore node_modules directory (#14943)
  * fix(fmt): should fail --check on parse error (#14907)
  * fix(repl): accept tab when previous character is whitespace (#14898)
  * fix(repl): use spaces for tab handler on windows (#14931)
  * fix: do not panic running .d.cts and .d.mts files (#14917)
  * fix: make Performance global an EventTarget
  * fix: upgrade swc via deno_ast 0.16 (#14930)
  * perf(core): Cache source lookups (#14816)
  * perf(ext/ffi): Optimize FFI Rust side type checks (#14923)
- rebase fix-cflags.patch
</comment>
    <requestid>999287</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>55b331677074ee84c9e95b2968ab89e5</srcmd5>
    <version>1.25.1</version>
    <time>1662405696</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.25.1:
  * feat(ops): support v8::FastApiCallbackOptions (#15721)
  * feat(serde_v8): Serialize integers as BigInt (#15692)
  * fix(check): --remote and --no-remote should be mutually exclusive (#14964)
  * fix(cli): deno upgrade --canary always downloaded latest version
    even if it was already latest (#15639)
  * fix(compile): panic when running with a populated dep analysis cache (#15672)
  * fix(docs): add missing categories (#15684)
  * fix(ext/ffi): Fix pointer types (#15730)
  * fix(ext/flash): add missing backticks in server docs (#15644)
  * fix(ext/flash): panic on AddrInUse (#15607)
  * fix(ext/flash): retry write failures (#15591)
  * fix(ext/node): add missing primordial (#15595)
  * fix(ext/node): better error for importing ES module via
    require() call (#15671)
  * fix(ext/node): fix global in node env (#15622)
  * fix(ext/websocket): fix closing of WebSocketStream with unread
    messages (#15632)
  * fix(fmt): add the file path to the panic messages when formatting
    is unstable (#15693)
  * fix(npm): better node version and version requirement compatibility (#15714)
  * fix(npm): conditional exports with wildcards (#15652)
  * fix(npm): handle cjs re-exports with the same name as an export (#15626)
  * fix(npm): ignore npm cache directory creation errors (#15728)
  * fix(npm): ignore the unstable error in the lsp (#15727)
  * fix(npm): prefer importing esm from esm (#15676)
  * fix(npm): skip extracting pax_global_header from tarballs (#15677)
  * fix(npm): translate CJS to ESM with name clashes for files and dirs (#15697)
  * fix(serde_v8): no panic on reading large text file (#15494)
  * fix(serde_v8): update bytes::Bytes layout assumptions (#15718)
  * fix: avoid global declaration collisions in cjs (#15608)
  * fix: config file errors should not print specifier with debug formatting
    (#15648)
  * fix: typo in deno_ops README (#15606)
  * perf(ext/web): flatten op arguments for text_encoding (#15723)
  * perf(ops): inline String args (#15681)
  * perf(runtime): optimize allocations in read/write checks (#15631)
  * perf: use fast api for core.isProxy (#15682)
  * perf: use fast api for op_now (#15643)
  * serde_v8: fix pointer size assumptions (#15613)
</comment>
    <requestid>1001143</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>47ce728879986fe1f83f9446b13cd825</srcmd5>
    <version>1.25.2</version>
    <time>1663002484</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.25.2:
  * BREAKING(unstable): remove --compat mode (#15678)
  * feat(ext/ffi): Implement FFI fast-call trampoline with Dynasmrt (#15305)
  * feat(ext/ffi): Support bool FFI type (#15754)
  * feat(serde_v8): Support StringObject as unit enum variant (#15715)
  * fix(bench): make sure bytes/response is equal (#15763)
  * fix(cli): Fix panic when providing invalid urls to --reload (#15784)
  * fix(cli): allow using file resource synchronously while being used
    async (#15747)
  * fix(cli/repl): await Promise.any([])... (#15623)
  * fix(core): Register external references for imports to
    the SnapshotCreator (#15621)
  * fix(core): make errors more resistant to tampering (#15789)
  * fix(core): opAsync leaks a promise on type error (#15795)
  * fix(docs): add missing categories for unstable (#15807)
  * fix(docs): change category for Deno.Process to &quot;Sub Process&quot; (#15812)
  * fix(ext/flash): use utf8 length as Content-Length (#15793)
  * fix(ext/timers): create primordial eval (#15110)
  * fix(init): suppress info logs when using quiet mode (#15741)
  * fix(npm): add more context to errors when file doesn't exist (#15749)
  * fix(npm): conditional exports in npm: specifiers (#15778)
  * fix(npm): correct exact matching of pre-release versions (#15745)
  * fix(npm): recursive translation of reexports, remove window global
    in node code (#15806)
  * fix(npm): respect latest dist tag for getting current version (#15746)
  * fix(ops): use qualified borrow in op macro (#15769)
  * fix(repl): don't terminate on unhandled error events (#15548)
  * fix(test): unflake wasm_unreachable test (#15794)
  * fix(watch): ignore unload errors on drop (#15782)
  * fix: upgrade deno_ast to 0.19 (#15808)
  * perf(ops): inline &amp;[u8] arguments and enable fast API (#15731)
  * perf(runtime): flatten arguments for write_file ops (#15776)
  * perf(runtime): short-circuit queue_async_op for Poll::Ready (#15773)
</comment>
    <requestid>1002544</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>1230fac86221ae3332ee4b2750bec256</srcmd5>
    <version>1.26.0</version>
    <time>1664553435</time>
    <user>RBrownFactory</user>
    <comment>- update to 1.26.0:
  * feat: add --allow-sys permission flag (#16028)
  * feat: add --no-npm flag to disable npm: imports (#15673)
  * feat: Add requesting API name to permission prompt (#15936)
  * feat: allow exiting on two consecutive ctrl+c presses (#15981)
  * feat: download progress bar (#15814)
  * feat: implement Web Cache API (#15829)
  * feat: Refresh interactive permission prompt (#15907)
  * feat: Stabilize Deno.hostname() API (#15932)
  * feat: Stabilize Deno.refTimer() and Deno.unrefTimer() APIs (#16036)
  * feat: TypeScript 4.8 update (#16040)
  * feat(cli): update to TypeScript 4.8 (#15064)
  * feat(core): add Deno.core.setPromiseHooks (#15475)
  * feat(ext/crypto): add x25519 and Ed25519 CFRG curves (#14119)
  * feat(ext/flash): add reuseport option on Linux (#16022)
  * feat(info): add information about npm modules cache (#15750)
  * feat(lint): add --compact flag for terse output (#15926)
  * feat(npm): functionality to support child_process.fork (#15891)
  * feat(ops): Fallible fast ops (#15989)
  * feat(unstable): Deno.setRaw -&gt; Deno.stdin.setRaw (#15797)
  * fix(cli/bench): strace numeric format (#16055)
  * fix(cli/vendor): handle assert type json during vendoring (#16059)
  * fix(ext/console): fix error when logging a proxied Date (#16018)
  * fix(ext/fetch): blob url (#16057)
  * fix(ext/flash): reregister socket on partial read on Windows (#16076)
  * fix(fmt): keep type args in type queries and keep empty array expr element's
    trailing comma (#16034)
  * fix(npm): use ntfs junctions in node_modules folder on Windows (#16061)
  * fix(require): tryPackage uses optional chaining (#16020)
  * fix(runtime): refresh perm prompt 3 lines instead of 4 (#16049)
  * perf: don't re-download package tarball to global cache if local node_modules
    folder exists for package (#16005)
  * perf: use fast ops for tty (#15976)
  * perf(ext/console): break on iterableLimit &amp; better sparse array handling (#15935)
  * perf(ext/fetch): use content-length in InnerBody.consume (#15925)
- includes 1.25.4:
  * feat(unstable/npm): add flag for creating and resolving npm packages to a
    local node_modules folder (#15971)
  * feat(unstable/npm): add support for --reload=npm: and --reload=npm: (#15972)
  * feat(internal/ops): Automatic fast ops creation (#15527)
  * fix(compile): keep non-exe extension in output name on Windows (#15994)
  * fix(doc): deno doc should parse modules if they haven't been parsed before (#15941)
  * fix(ext/node): fix builtin module module (#15904)
  * fix(ext/webgpu): make GPUDevice.features SetLike (#15853)
  * fix(flash): panic if response if undefined (#15964)
  * fix(runtime): better error message with Deno.env.get/set (#15966)
  * fix(runtime): fix permission status cache keys (#15899)
  * perf(cli): avoid canonicalize_path if config file does not exist (#15957)
  * perf(cli): avoid clap::App::clone (#15951)
  * perf(cli): use -O3 instead of -Oz (#15952)
  * perf(core): use single ObjectTemplate for ops in initialize_ops (#15959)
  * perf(ext/console): avoid wrapConsole when not inspecting (#15931)
  * perf(web): optimize encodeInto() (#15922)
  * perf: fs optimizations - part 1 (#15873)
- update to 1.25.3:
  * doc(unstable): mention that signal input isn't supported in spawnSync
    (#15889)
  * fix(ext/flash): don't block requests (#15852)
  * fix(npm): align Deno importing Node cjs with Node esm importing cjs (#15879)
  * fix(npm): align Node esm code importing cjs with Node (#15838)
  * fix(npm): binary entrypoint for .js or no extension (#15900)
  * fix(npm): remove export binding to match node (#15837)
  * fix(npm): support cjs resolution of package subpath with package.json (#15855)
  * fix(npm): use shim from deno_node crate for 'module' built-in module (#15881)
  * fix(ops): add node.js env variable allowlist (#15893)
  * perf(ext/flash): remove string-&gt;buffer cache (#15850)
  * perf(serde_v8): remove Mutex from ZeroCopyBuf (#15888)
  * perf(url): return early if url has no query string (#15856)
  * perf: optimize URL serialization (#15663)
</comment>
    <requestid>1007112</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>b75190d79bd094888c45f760a5be153f</srcmd5>
    <version>1.26.2</version>
    <time>1666089887</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.26.2</comment>
    <requestid>1029625</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>b7b28097eabd8c29c17f2c245197678e</srcmd5>
    <version>1.30.0</version>
    <time>1674997874</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.30.0:
  * many changes, see https://github.com/denoland/deno/compare/v1.26.2...v1.30.0
- Switch from deprecated rust-packaging to cargo-packaging
- Disable LTO to build with half of the RAM (fixes build on aarch64):
  * deno-disbale-lto.patch
- Update _constraints with current values
- remove Cargo.lock to bypass checksum errors in rusty_v8
</comment>
    <requestid>1061824</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>e9c566c595f2628ababf1eacf7972fdc</srcmd5>
    <version>1.31.0</version>
    <time>1677258483</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.31.0:
  * feat(bench): Add JSON reporter for &quot;deno bench&quot; subcommand (#17595)
  * feat(bench): change --json output format (#17888)
  * feat(core): allow to specify entry point for snapshotted ES modules (#17771)
  * feat(ext/ffi): Replace pointer integers with v8::External objects (#16889)
  * feat(ext/http): add 2nd param to handler to get remote address (#17633)
  * feat(ext/node): embed std/node into the snapshot (#17724)
  * feat(ext/node): implement node:v8 (#17806)
  * feat(install): follow redirects for urls with no path (#17449)
  * feat(node): stabilize Node-API (#17553)
  * feat(npm): support bare specifiers from package.json in more subcommands and language server (#17891)
  * feat(npm): support npm specifiers in remote modules without --unstable (#17889)
  * feat(permissions): grant all permission for a group in permission prompt (#17140)
  * feat(task): add warning about package.json scripts support (#17900)
  * feat(task): adjust warning (#17904)
  * feat(task): support scripts in package.json (#17887)
  * feat: Deprecate 'deno bundle' subcommand (#17695)
  * feat: Stabilize Deno.Command API (#17628)
  * feat: add more variants to Deno.build.os (#17340)
  * feat: add signal option to Deno.resolveDns (#17384)
  * feat: auto-discover package.json for npm dependencies (#17272)
  * feat: stabilize Deno.osUptime() (#17554)
  * feat: start caching npm package version's &quot;bin&quot; entry from npm registry (#17881)
  * feat: support bare specifier resolution with package.json (#17864)
  * feat: wire up ext/node to the Node compatibility layer (#17785)
  * fix(cli): Add better error message when powershell is missing during upgrade (#17759)
  * fix(cli/graph_util): don't append referrer info for root module errors (#17730)
  * fix(cli/napi): correct name handling in napi property descriptor (#17716)
  * fix(cli/napi): handle all property variants in napi_define_properties (#17680)
  * fix(core): don't allow to import internal code is snapshot is loaded (#17694)
  * fix(core): rebuild when JS sources for snapshotting change (#17876)
  * fix(core): remove async op inlining optimization (#17899)
  * fix(dts): make Deno.Command accept readonly prop in options.args (#17718)
  * fix(ext/console): Only right-align integers in console.table() (#17389)
  * fix(ext/ffi): Fix re-ref'ing UnsafeCallback (#17704)
  * fix(ext/ffi): improve error messages in FFI module (#17786)
  * fix(ext/flash): Always send correct number of bytes when handling HEAD requests (#17740)
  * fix(ext/flash): wrong order of arguments passed to http1Response (#17893)
  * fix(ext/node): add support for BYOB streams (#17803)
  * fix(ext/node): fix node stream (#17874)
  * fix(ext/node): fix npm module resolution when --node-modules-dir specified (#17896)
  * fix(ext/node): fix process.uptime (#17839)
  * fix(ext/node): fix webcrypto export (#17838)
  * fix(ext/websocket): extra ws pongs sent (#17762)
  * fix(fmt): make fmt options CLI args less verbose (#17550)
  * fix(lint): revert no-deprecated-api for Deno.run (#17880)
  * fix(npm): allow resolving from package.json when an import map exists (#17905)
  * fix(npm): filter out duplicate packages names in resolution (#17857)
  * fix(npm): improve peer dependency resolution (#17835)
  * fix(npm): resolve node_modules dir relative to package.json instead of cwd (#17885)
  * fix(npm): support bare specifiers in package.json having a path (#17903)
  * fix(ops): Always close cancel handles for read_async/write_async (#17736)
  * fix(webgpu): don't default to 0 for setVertexBuffer.size &amp; properly use webidl.setlike (#17800)
  * fix(runtime): Refactor fs error mapping to use unified format (#17719)
  * fix(webgpu): use correct op for GPUDevice.createSampler (#17729)
  * fix: add WouldBlock error (#17339)
  * fix: loading built-in Node modules embedded in the binary (#17777)
  * fix: use static Reflect methods in nodeGlobalThis proxy (#17696)
  * perf(core): speed up promise hook dispatch (#17616)
  * perf(core, runtime): Further improve startup time (#17860)
  * perf(ext/ffi): Revert UTF-8 validity check from getCString (#17741)
  * perf(ext/node): move winerror binding to rust (#17792)
  * perf(http): remove allocations checking upgrade and connection header values (#17727)
  * perf: disable fetching graph cache info except for deno info (#17698)
  * perf: module info cache - avoid MediaType.to_string() allocation (#17699)
  * perf: remove current_dir() call in Deno.mainModule (#17883)
  * perf: use ops for node:crypto ciphers (#17819)
- includes 1.30.3 / 2023.02.07
  * fix(ext/console): log class for class constructor (#17615)
  * fix(lsp): prevent crash analyzing module (#17642)
- includes 1.30.2 / 2023.02.03
  * Revert &quot;chore(core): remove have_unpolled_ops on rt state (#17601)&quot; (#17631)
  * fix(webgpu): specify viewFormats in surface configuration (#17626)
- includes 1.30.1 / 2023.02.02
  * Revert &quot;fix(watch): preserve ProcState::file_fetcher between restarts (#15466) (#17591)
  * fix(core): Add lint check for core (#17223)
  * fix(ext): internal structuredClone for ArrayBuffer and TypedArray subclasses (#17431)
  * fix(fmt): semiColons: false - handle prop with following generator and do while with no block body (#17567)
  * fix(install): tsconfig.json -&gt; deno.json for config file suffix (#17573)
  * fix(lockfile): emit trailing newline (#17618)
  * fix(lsp): update document dependencies on configuration change (#17556)
  * fix(napi): guard threadsafe function counters behind a mutex (#17552)
  * fix(napi): remove wrong length check in napi_create_function (#17614)
  * fix(napi): return node globalThis from napi_get_global (#17613)
  * fix(repl): handle @types/node not being cached in the repl (#17617)
  * fix(upgrade): ensure temp dir cleanup on failure (#17535)
  * fix: ensure &quot;fs&quot; -&gt; &quot;node:fs&quot; error/quick fix works when user has import map (#17566)
  * perf(ops): Remove unnecessary fast call fallback options usage (#17585)
- Rebase deno-disbale-lto.patch (renamed to deno-disable-lto.patch)
</comment>
    <requestid>1067491</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>67b30e9b33e3f0bbc8a1d93cdb96ac96</srcmd5>
    <version>1.31.1</version>
    <time>1677498924</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.31.1:
  * feat: add DENO_NO_PACKAGE_JSON env var (#17926)
  * fix(npm): lazily install package.json dependencies only when necessary
    (#17931)
  * fix(npm): package.json auto-discovery should respect --no-config and
    --no-npm (#17924)
  * fix: ensure concurrent non-statically analyzable dynamic imports
    do not sometimes fail (#17923)
  * fix: ignore workspace, git, file, http, https specifiers in package.json
    (#17934, #17938)
  * fix: regression remapping remote specifier to local file (#17935)
  * fix: remote modules should be allowed to import data urls (#17920)
</comment>
    <requestid>1067845</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>c9391fda6412931e637cd3e94f431902</srcmd5>
    <version>1.31.3</version>
    <time>1679182257</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.31.3:
  * fix(check): regression where config &quot;types&quot; entries caused type checking
    errors (#18124)
  * fix(core): Upgrades bytes crate from =1.2.1 to ^1.4.0 (#18123)
  * fix(core): SafePromiseAll to be unaffected by Array#@@iterator (#17542)
  * fix(core/internal): fix typo in primordial type definitions (#18125)
  * fix(ext/fs): retry if file already exists in makeTempFile (#17787)
  * fix(ext/http): abort request signal when response errors (#17822)
  * fix(ext/node): add crypto.createCipheriv (#18091)
  * fix(ext/node): implement &quot;ascii&quot; encoding for node:fs writeFile() (#18097)
  * fix(ext/web): Stop using globalThis.ReadableStream in Blob (#18187)
  * fix(info/doc): add missing --no-lock and --lock flags (#18166)
  * fix(lsp): avoid calling client while holding lock (#18197)
  * fix(npm): &quot;not implemented scheme&quot; message should properly show the scheme
    (#18209)
  * fix(npm): show a progress bar when initializing the node_modules folder
    (#18136)
  * fix(repl): do not panic deleting Deno or deleting all its properties
    (#18211)
  * fix: ensure no node_modules directory is created when a package.json exists
    and no npm dependencies are used (#18134)
  * perf: do not depend on iana-time-zone (#18088)
- update to 1.31.2:
  * Revert &quot;perf: disable snapshot compression (#18061)&quot; (#18074)
  * deps: bump regexp to ^1.7.0 (#17966)
  * deps: bump once_cell to ^1.17.1 (#18075)
  * feat(core): prevent isolate drop for CLI main worker (#18059)
  * feat(ext/ffi): Make External pointers keep reference to V8 buffer (#17955)
  * feat(ops): reland fast zero copy string arguments (#17996)
  * feat(ops): relational ops (#18023)
  * fix(check): include dts files in tsc roots (#18026)
  * fix(cli): add space after period in --v8-flags (#18063)
  * fix(cli,ext/web): Upgrading uuid from =1.1.2 to 1.3.0 (#17963)
  * fix(core): introduce SafeRegExp to primordials (#17592)
  * fix(ext/crypto): correctly limit ECDSA and hash algorithms (#18030)
  * fix(ext/ffi): Remove deno_core::OpState qualifiers, fix ops returning
    pointer defaults (#17959)
  * fix(ext/node): remove unused _hex module (#18045)
  * fix(ext/node): util.types.isSharedArrayBuffer (#17836)
  * fix(ext/webstorage): check size of inputs before insert (#18087)
  * fix(lockfile): don't touch lockfile is npm specifiers are identical (#17973)
  * fix(npm): improve peer dependency resolution with circular dependencies
    (#18069)
  * fix(prompt): better output with control chars (#18108)
  * fix(rumtime): Add Deno. prefix for registered symbols (#18086)
  * fix(runtime/windows): ensure Deno.stdin.setRaw(false) properly
    disables raw mode (#17983)
  * fix: Split extension registration and snapshotting (#18098)
  * fix: attempt to only allow one deno process to update the node_modules
    folder at a time (#18058)
  * fix: lazily surface errors in package.json deps parsing (#17974)
  * perf(core): over-allocate in ModuleMap when running from snapshot (#18083)
  * perf(ext/node): improve createHash performance (#18033)
  * perf: disable snapshot compression (#18061)
  * perf: don't add unload event listener (#18082)
  * perf: move runtime bootstrap code to snapshot time (#18062)
  * perf: move setting up Deno namespace to snapshot time (#18067)
  * wpt: unlock nightly with --no-ignore (#17998)
</comment>
    <requestid>1072728</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>777439d3a052610573be6a20348b20ff</srcmd5>
    <version>1.32.1</version>
    <time>1679667644</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.32.1:
  * fix(core): disable resizable ArrayBuffer and growable
    SharedArrayBuffer (#18395)
  * fix(cli): restore deno run - to handle stdin as typescript (#18391)
  * fix(inspect): ensure non-compact output when object literal
    has newline in entry text (#18366)
  * fix(lsp): ensure enablePaths works when clients do not
    provide a trailing slash for workspace dir (#18373)
- update to 1.32.0:
  * BREAKING(unstable): remove WebGPU (#18094)
  * feat(ext/fs): FileInfo.dev is supported on Windows (#18237)
  * feat(cli): --ext parameter for run, compile, and bundle (#17172)
  * feat(compile): Add support for web workers in standalone mode (#17657)
  * feat(compile): Enable multiple roots for a standalone module
    graph (#17663)
  * feat(core): deno_core::extension! macro to simplify extension
    registration (#18210)
  * feat(ext/kv): key-value store (#18232)
  * feat(ext/net): Add multicasting APIs to DatagramConn (#10706)
    (#17811)
  * feat(ext/url): URLSearchParams.size (#17884)
  * feat(repl): add DENO_REPL_HISTORY to change history file path (#18047)
  * feat(serde_v8): support BigInt serialization (#18225)
  * feat: TypeScript 5.0.2 (except decorators) (#18294)
  * fix(cli): preserve blob store when resetting file watcher (#18253)
  * fix(cli/integration): clippy lints (#18248)
  * fix(ext/kv): don't request permissions for &quot;:memory:&quot; (#18346)
  * fix(ext/kv): reverse mapping between AnyValue::Bool and 
    KeyPart::Bool (#18365)
  * fix(ext/node): add createDecipheriv (#18245)
  * fix(ext/node): resource leak in createHmac (#18229)
  * fix(ext/node): use Deno.Command from ext:runtime (#18289)
  * fix(repl): Hide indexable properties in tab completion (#18141)
  * fix(runtime): Extract error code for all OS error variants (#17958)
  * fix: include error in message about not being able to create
    the TypeScript cache (#18356)
  * perf(check): type check local files only when not using --all (#18329)
  * perf(core) Reduce copying and cloning in extension
    initialization (#18252)
  * perf(core) Reduce script name and script code copies (#18298)
  * perf(core): preserve ops between snapshots (#18080)
  * perf(core): use static specifier in ExtensionFileSource (#18271)
  * perf: disable WAL for transpiled source cache (#18084)
  * perf: disable runtime snapshot compression (#18239)
- build: remove python3 hack
</comment>
    <requestid>1074042</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>fe0dd8c6bf5ff681681ec49b27701b5a</srcmd5>
    <version>1.32.3</version>
    <time>1680455897</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.32.3
  * fix(check): ensure diagnostics caused by changes in other files get
    invalidated between runs (#18541)
  * fix(ext/ffi): crash when same reference struct is used in two fields (#18531)
  * fix(lsp): add a document preload file system entry limit (#18553)
  * fix(repl): disable language server document preloading in the repl (#18543)
  * fix(test): don't swallow sanitizer errors with permissions (#18550)
  * perf(check): faster source hashing (#18534)
- update to 1.32.2:
  * Revert &quot;refactor(ext/node): Use Deno.inspect (#17960)&quot; (#18491)
  * feat(core): initialize SQLite off-main-thread (#18401)
  * feat(ext/kv): return versionstamp from set/commit (#18512)
  * feat(ext/node): add crypto.checkPrime API (#18465)
  * feat(ext/node): implement crypto.createSecretKey (#18413)
  * feat(test): print pending tests on sigint (#18246)
  * feat: port node:zlib to rust (#18291)
  * fix(cli): add colors to &quot;Module not found&quot; error frame (#18437)
  * fix(cli): don't store blob and data urls in the module cache (#18261)
  * fix(cli/bench): look for clone3 syscalls for thread count (#18456)
  * fix(core): located_script_name macro was using format syntax (#18388)
  * fix(core): panic at build time if extension code contains
    anything other than 7-bit ASCII (#18372)
  * fix(core): restore cache journal mode to TRUNCATE and tweak
    tokio test in CacheDB (#18469)
  * fix(coverage): ignore files from npm registry (#18457)
  * fix(dts): improve types for the Deno.KV API (#18510)
  * fix(ext/kv): add missing getMany method (#18410)
  * fix(ext/node): add aes-128-ecb algorithm support (#18412)
  * fix(ext/node): add missing _preloadModules hook (#18447)
  * fix(ext/node): implement crypto.Sign
    (RSA/PEM/SHA{224,256,384,512}) (#18471)
  * fix(ext/node): make cipher/decipher transform stream (#18408)
  * fix(lsp): textDocument/references should respect
    includeDeclaration (#18496)
  * fix(lsp): better handling of data: urls (#18527)
  * fix(lsp): include all diagnosable documents on initialize (#17979)
  * fix(ops): fallback when FastApiOneByteString is not utf8 (#18518)
  * fix(repl): improve package.json support (#18497)
  * fix(streams): add support Float64Array to ReadableStreamByobReader
    (#18188)
  * fix: Add missing processenv winapi feature to deno_io (#18485)
  * fix: upgrade to TypeScript 5.0.3 (#18532)
  * perf(ext/websocket): efficient event kind serialization (#18509)
  * perf(ext/websocket): special op for sending binary data frames (#18506)
  * perf(ext/websocket): special op for sending text data frames (#18507)
  * perf(ext/websocket): use opAsync2 to avoid spread deopt (#18525)
  * perf: const op declaration (#18288)
</comment>
    <requestid>1076695</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>9437954aca2a0751f71573dbec1c94e3</srcmd5>
    <version>1.32.4</version>
    <time>1681470807</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.32.4:
  * Revert &quot;fix(cli): don't store blob and data urls in the module cache (#18261)&quot;
    (#18572)
  * feat(core): sync io ops in core (#18603)
  * feat(ext/http): add an op to perform raw HTTP upgrade (#18511)
  * fix(core): preserve syntax error locations in dynamic imports (#18664)
  * fix(ext/cache): cache.put overwrites previous call (#18649)
  * fix(ext/kv): keys must be arrays (#18655)
  * fix(ext/node): add X509Certificate (#18625)
  * fix(ext/node): add symmetric keygen (#18609)
  * fix(ext/node): fix unable to resolve fraction.js (#18544)
  * fix(ext/node): implement hkdf-expand (#18612)
  * fix(ext/node): json encode binary command name (#18596)
  * fix(npm): cache bust npm specifiers more aggressively (#18636)
  * fix(npm): do not &quot;npm install&quot; when npm specifier happens to
    match package.json entry (#18660)
  * fix(npm): reload an npm package's dependency's information
    when version not found (#18622)
  * perf(ext/io): remove a data copy from File write (#18601)
  * perf(ext/websocket): replace tokio_tungstenite server with
    fastwebsockets (#18587)
</comment>
    <requestid>1079305</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>7c8fea062090f5e136c4826d426abb4e</srcmd5>
    <version>1.32.5</version>
    <time>1681996478</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.32.5:
  * feat(UNSTABLE/kv): AtomicOperation#sum (#18704)
  * fix(core): Use safe primordials wrappers (#18687)
  * fix(ext/node): add req.socket.remoteAddress (#18733)
  * fix(ext/node): implement crypto.createVerify (#18703)
  * fix(ext/node): polyfill response._implicitHeader method (#18738)
  * fix(ext/websocket): Avoid write deadlock that requires read_frame to complete
    (#18705)
  * fix(lsp): ensure language server status works on unix (#18727)
  * fix(npm): eagerly reload package information when version from lockfile not
    found locally (#18673)
  * fix(path): Remove non node symbols (#18630)
  * fix(test): add process sigint handler for --watch (#18678)
  * perf(ext/websocket): make op_server_ws_next_event deferred (#18632)
</comment>
    <requestid>1080412</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>50bb9d719b562d103ee73a3523fc9765</srcmd5>
    <version>1.33.1</version>
    <time>1682782106</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.33.1:
  * fix(ext/fetch): subview Uint8Array in Req/Resp (#18890)
  * fix(ext/websocket): client connect URI (#18892)
  * fix(ext/websocket): restore op_ws_send_ping (#18891)
  * fix(repl): don't panic on undefined exception (#18888)
- includes 1.33.0:
  * BREAKING(unstable): remove &quot;Deno.serve(handler, options)&quot; overload (#18759)
  * Revert &quot;chore(ext/websocket): Add autobahn|testsuite fuzzingclient&quot; (#18856)
  * feat(bench): add --no-run flag (#18433)
  * feat(cli): don't check permissions for statically analyzable
    dynamic imports (#18713)
  * feat(cli): flatten deno.json configuaration (#17799)
  * feat(ext/ffi): support marking symbols as optional (#18529)
  * feat(ext/http): Rework Deno.serve using hyper 1.0-rc3 (#18619)
  * feat(ext/kv): add more atomic operation helpers (#18854)
  * feat(ext/kv): return ok bool from atomic commit (#18873)
  * feat(ext/url): URL.canParse (#18286)
  * feat(lint): add Deno.run to no-deprecated-deno-api (#18869)
  * feat(node/crypto): Elliptic Curve Diffie-Hellman (ECDH) support (#18832)
  * feat(node/http): implement ClientRequest.setTimeout() (#18783)
  * feat(task): introduce built-in unset command to deno task (#18606)
  * feat: Deprecate Deno.run API in favor of Deno.Command (#17630) (#18866)
  * fix(compile): write bytes directly to output file (#18777)
  * fix(core): Wrap safe collections' argument of primordials (#18750)
  * fix(coverage): exclude test files (#18748)
  * fix(dts): URLPatternComponentResult groups should have
    possibly undefined key values (#18643)
  * fix(ext/node): add crypto.sign|verify methods (#18765)
  * fix(ext/node): fix hash.flush (#18818)
  * fix(ext/node): implement asymmetric keygen (#18651)
  * fix(ext/node): improve vm.runInThisContext (#18767)
  * fix(ext/node): prime generation (#18861)
  * fix(lsp): show dependency errors for repeated imports (#18807)
  * fix(npm): only include top level packages in top level
    node_modules directory (#18824)
  * fix(test): allow explicit undefined for boolean test options (#18786)
  * fix(test): handle dispatched exceptions from test functions (#18853)
  * perf(ext/http): avoid spread arg deopt in op_http_wait (#18850)
  * perf(ext/http): optimize away code based on callback length (#18849)
  * perf(ext/http): optimize for zero or one-packet response streams (#18834)
  * perf(ext/http): use smi for slab IDs (#18848)
  * perf(ext/websocket): various performance improvements (#18862)
</comment>
    <requestid>1083589</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>f10c0ba3656249cb67435acc3d9fddd5</srcmd5>
    <version>1.33.2</version>
    <time>1683295109</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.33.2:
  * fix(core): Use primordials for methods (#18839)
  * fix(core): allow esm extensions not included in snapshot (#18980)
  * fix(core): rebuild when JS sources for snapshotting change (#18976)
  * fix(ext/io) several sync fs fixes (#18886)
  * fix(ext/kv): KvU64#valueOf and KvU64 inspect (#18656)
  * fix(ext/kv): stricter structured clone serializer (#18914)
  * fix(ext/kv): throw on the Kv constructor (#18978)
  * fix(ext/node): add missing release property to node's process (#18923)
  * fix(ext/url): throw TypeError for empty argument (#18896)
  * fix(ext/websocket): update fastwebsockets to 0.3.1 (#18916)
  * fix(fmt/json): support formatting number with exponent and no sign (#18894)
  * fix(node/http): Request.setTimeout(0) should clear (#18949)
  * fix(npm): canonicalize filename before returning (#18948)
  * fix(npm): canonicalize search directory when looking for package.json (#18981)
  * fix(test): disable preventDefault() for beforeunload event (#18911)
  * perf(core): async op pseudo-codegen and performance work (#18887)
  * perf(core): use jemalloc for V8 array buffer allocator (#18875)
  * perf(ext/web): fast path for ws events (#18905)
  * perf(ext/websocket): use internal dispatch for msg events (#18904)
  * perf: lazily create RootCertStore (#18938)
  * perf: lazily retrieve ppid (#18940)
  * perf: use jemalloc as global allocator (#18957)
</comment>
    <requestid>1084917</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>98e1463cefb456d4892f3405acd11e07</srcmd5>
    <version>1.33.3</version>
    <time>1683991063</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.33.3:
  * feat(compile): unstable npm and node specifier support (#19005)
  * feat(ext/http): Automatic compression for Deno.serve (#19031)
  * feat(lsp): ability to configure document pre-load limit (#19097)
  * feat(node): add Module.runMain() (#19080)
  * fix(cli): upgrade to Typescript 5.0.4 (#19090)
  * fix(console): handle error when inspecting promise-like (#19083)
  * fix(core): always report the first error on unhandled rejection (#18992)
  * fix(core): let V8 drive extension ESM loads (#18997)
  * fix(dts): align seekSync position arg with seek (#19077)
  * fix(ext/ffi): Callbacks panic on returning isize (#19022)
  * fix(ext/ffi): UnsafeCallback can hang with 'deno test' (#19018)
  * fix(ext/fs): add more context_path (#19101)
  * fix(ext/http): Ensure Deno.serve works across --watch restarts (#18998)
  * fix(lsp): hard to soft error when unable to get completion info (#19091)
  * fix(lsp): preload documents when deno.documentPreloadLimit
    changes (#19103)
  * fix(node): conditional exports edge case (#19082)
  * fix(node): expose channels in worker_threads (#19086)
  * fix(npm): make http2 module available, make
    'nodeGlobalThisName' writable (#19092)
  * fix(runtime): ChildProcess::kill() doesn't require additional
    perms (#15339)
  * fix(vendor): better handling of redirects (#19063)
  * perf(ext/ffi): Use Box&lt;[NativeType]&gt; in CallbackInfo parameters (#19032)
  * perf(fmt): faster formatting for minified object literals (#19050)
</comment>
    <requestid>1086808</requestid>
  </revision>
  <revision rev="18" vrev="2">
    <srcmd5>c085c824ef3ce157b9dc92bc19f20031</srcmd5>
    <version>1.33.3</version>
    <time>1684415977</time>
    <user>dimstar_suse</user>
    <comment>Privacy and integration fix: disable update check.

- add deno-disable-update-check.patch
  * this stops deno from automatically checking for an update
    whenever a script is run
</comment>
    <requestid>1087713</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>b1ccd6c2a24c03f104b16e085e6ebc2b</srcmd5>
    <version>1.33.4</version>
    <time>1684490144</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.33.4:
  * fix(ext/web): Request higher-resolution timer on Windows if
    user requests setTimeout w/short delay (#19149)
  * feat(node/crypto): Builtin Diffie-Hellman Groups (#19137)
  * feat(node/crypto): Diffie Hellman Support (#18943)
  * fix(cli/napi): handle finalizers (#19168)
  * fix(deno/upgrade): allow --version vX.Y.Z (#19139)
  * fix(dts): move BroadcastChannel type to lib.deno.unstable.d.ts (#19108)
  * fix(ext/http): Ensure cancelled requests don't crash Deno.serve (#19154)
  * fix(ext/node): fix whatwg url formatting (#19146)
  * fix(ext/node): make nodeGlobalThis configurable (#19163)
  * fix(ext/webidl): change createPromiseConverter (#16367)
  * fix(ext/websocket): order of ws writes (#19131)
  * fix(fetch): Correctly decode multipart/form-data names
    and filenames (#19145)
  * fix(kv): kv.close() interrupts in-flight operations (#19076)
  * fix(lsp): increase default max heap size to 3Gb (#19115)
  * fix(napi): BigInt related APIs (#19174)
  * fix(node): export diagnostics_channel module (#19167)
  * fix(node): export punycode module (#19151)
  * fix(node): support passing parent stdio streams (#19171)
  * fix(npm): add performance.markResourceTiming sham (#19123)
  * fix(npm): improved optional dependency support (#19135)
  * fix(runtime): Box the main future to avoid blowing up the stack (#19155)
  * fix(runtime): Example hello_runtime panic (#19125)
  * fix: support &quot;fetch&quot; over HTTPS for IP addresses (#18499)
- add deno-rm-upgrade-cmd.patch
  * this removes the `deno upgrade` command
</comment>
    <requestid>1087858</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>7086c13c6573fd7ae51346221ab4aec1</srcmd5>
    <version>1.34.0</version>
    <time>1685051572</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.34.0:
  * BREAKING(unstable): change return type of Deno.serve() API (#19189)
  * feat(cli): add nodeModulesDir option to config file (#19095)
  * feat(cli): top-level exclude field in deno.json (#17778)
  * feat(ext/fs): add isBlockDevice, isCharDevice, isFifo,
    isSocket to FileInfo (#19008)
  * feat(ext/http): Add support for trailers w/internal API (HTTP/2 only) (#19182)
  * feat(ext/http): Brotli Compression (#19216)
  * feat(ext/http): ref/unref for server (#19197)
  * feat(lsp): support lockfile and node_modules directory (#19203)
  * feat(runtime): Provide environment-configurable options for
    tokio parameters (#19173)
  * feat(task): glob expansion (#19084)
  * feat(unstable): add more options to Deno.createHttpClient (#17385)
  * feat(vendor): support for npm specifiers (#19186)
  * feat: add support for globs in the config file and CLI
    arguments for files (#19102)
  * feat: top level package.json install when node_modules dir is
    explicitly opted into (#19233)
  * fix(ext/node): ClientRequest.setTimeout(0) should remove listeners (#19240)
  * fix(ext/node): add basic node:worker_threads support (#19192)
  * fix(ext/web): improve timers resolution for 0ms timeouts (#19212)
  * fix(napi): add napi_async_init and napi_async_destroy (#19234)
  * fix(node): add http.Server.unref() (#19201)
  * fix(node): duplicate node_module suffixes (#19222)
  * fix(node): fire 'unhandledrejection' event when using node:
    or npm: imports (#19235)
  * fix(node): make sure &quot;setImmediate&quot; is not clamped to 4ms (#19213)
  * fix(npm): process not defined in readline (#19184)
  * fix(npm): better handling of optional peer dependencies (#19236)
  * fix(npm): create node_modules/.deno/node_modules folder (#19242)
  * fix(npm): run pre and post tasks if present (#19178)
  * fix(npm): store npm binary command resolution in lockfile (#19219)
- rebase deno-disable-update-check.patch
- update deno-disable-update-check.patch
  * remove DENO_NO_UPDATE_CHECK block from env variables help
</comment>
    <requestid>1089028</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>3fbf09953b525f5cc4506a4b6dfe820b</srcmd5>
    <version>1.34.1</version>
    <time>1685562852</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.34.1:
  * fix(compile): handle when DENO_DIR is readonly (#19257)
  * fix(compile): implicit read permission to npm vfs (#19281)
  * fix(compile): improve panic message when stripping root path fails (#19258)
  * fix(compile): inline symlinks as files outside node_modules
    dir and warn for directories (#19285)
  * fix(ext/http): fix a possible memleak in Brotli (#19250)
  * fix(napi): clear currently registering module slot (#19249)
  * fix(napi): properly handle arguments in napi_get_cb_info (#19269)
  * fix(node): http.IncomingMessageForClient.complete (#19302)
  * fix(node): make 'v8.setFlagsFromString' a noop (#19271)
  * fix: don't print release notes on version check prompt (#19252)
  * fix: use proper ALPN protocols if HTTP client is HTTP/1.1 only (#19303)
</comment>
    <requestid>1089864</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>da838f0f1a55d7c10ede9cf7224851b7</srcmd5>
    <version>1.34.2</version>
    <time>1686927207</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.34.2:
  * fix: do not show cache initialization errors if stderr is piped (#18920)
  * fix: upgrade to deno_ast 0.27 (#19375)
  * fix(cli): formatting bench with colors (#19323)
  * fix(ext/console): fix inspecting large ArrayBuffers (#19373)
  * fix(ext/crypto): fix JWK import of Ed25519 (#19279)
  * fix(ext/web): Copy EventTarget list before dispatch (#19360)
  * fix(ext/websocket): Close socket on bad string data (#19424)
  * fix(kv) run sqlite transactions via spawn_blocking (#19350)
  * fix(napi): don't panic if symbol can't be found (#19397)
  * fix(node): add missing process.reallyExit method (#19326)
  * fix(node): Added base implementation of FileHandle (#19294)
  * fix(node): don't close stdio streams (#19256)
  * fix(node): FileHandle.close() (#19357)
  * fix(node): FileHandle.read() (#19359)
  * fix(node): FileHandle.write() (#19385)
  * fix(node): map stdio [0, 1, 2] to &quot;inherit&quot; (#19352)
  * fix(node): Very basic node:http2 support (#19344)
  * fix(node): proper url handling (#19340)
  * fix(repl): correctly print string exception (#19391)
  * fix(runtime): add missing SIGIOT alias to SIGABRT (#19333)
  * perf(cli): conditionally load typescript declaration files (#19392)
  * perf(ext/http): Add a sync phase to http serving (#19321)
  * perf(ext/http): Migrate op_http_get_request_headers to v8::Array (#19354)
  * perf(ext/http): Migrate op_http_get_request_method_and_url to
    v8::Array (#19355)
  * perf(ext/http): Use flat list of headers for multiple set/get
    methods (#19336)
  * perf(ext/websocket): Make send sync for non-stream websockets (#19376)
  * perf(ext/websocket): Reduce GC pressure &amp; monomorpize
    op_ws_next_event (#19405)
  * perf(ext/websocket): monomorphize code (#19394)
  * perf(http): avoid flattening http headers (#19384)
  * perf: optimize RegExp usage in JS (#19364)
  * perf: use sendto syscalls (#19414)
</comment>
    <requestid>1093169</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>58b7b6dee573c8b2aef041a966ba5fa7</srcmd5>
    <version>1.34.3</version>
    <time>1687272516</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.34.3:
  * feat(UNSTABLE) kv queue implementation (#19459)
  * fix(cli): avoid crash on import of invalid module names (#19523)
  * fix(compile): some npm dependencies were missing in compiled output (#19503)
  * fix(config): do not canonicalize config file path before loading (#19436)
  * fix(ext/http): Include hostname in onListen argument (#19497)
  * fix(ext/http): replace await Deno.serve with await
    Deno.serve().finished (#19485)
  * fix(ext/node): HTTPS server (#19362)
  * fix(ext/node): handle 'upgrade' responses (#19412)
  * fix(ext/node): make Buffer.slice be the same as subarray (#19481)
  * fix(ext/websockets): ensure we fully send frames before close (#19484)
  * fix(fmt): do not panic formatting json with multiple values (#19442)
  * fix(lsp): don't pre-load documents matched in the config
    file's &quot;exclude&quot; (#19431)
  * fix(lsp): update import map config when deno.json changes (#19476)
  * fix(ext/node): Worker constructor doesn't check type: module
    of package.json (#19480)
  * fix(npm): warn when tarball contains hardlink or symlink (#19474)
  * fix: reload config files on watcher restarts (#19487)
  * perf(ext/http): from_maybe_shared_unchecked for header values (#19478)
  * perf(http): cache verified headers (#19465)
  * perf(node): cache realpath_sync calls in read permission check (#19379)
  * perf(serve): hoist promise error callback (#19456)
  * perf(serve): hoist repeated condition (#19449)
  * perf(web): optimize timer resolution (#19493)
  * perf: don't run microtask checkpoint if macrotask callback
    did no work (#19492)
  * perf: optimize ByteString checks, hoist server rid getter (#19452)
- rebase deno-rm-upgrade-cmd.patch
- add deno-pull-19537.patch to build unsafe tokio features
</comment>
    <requestid>1093816</requestid>
  </revision>
  <revision rev="24" vrev="2">
    <srcmd5>a616b50890ea5d3f57585068085d8c32</srcmd5>
    <version>1.34.3</version>
    <time>1687630424</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1094961</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>df5d65dbe1a2396a077ddc266be99eb0</srcmd5>
    <version>1.35.0</version>
    <time>1688660958</time>
    <user>favogt_factory</user>
    <comment>- update to 1.35.0:
  * feat: add more Deno.errors classes (#19514)
  * feat: ReadableStream.from (#19446)
  * feat: stabilize 'alpnProtocols' setting (#19704)
  * feat: Stabilize Deno.serve() API (#19141)
  * feat: upgrade to TypeScript 5.1.6 (#19695)
  * feat(ext/fetch): add Headers#getSetCookie (#13542)
  * feat(ext/url): URLSearchParams two-argument delete() and has() (#19654)
  * feat(lock): skip saving declaration files in the lockfile (#19447)
  * feat(lsp): basic support of auto-imports for npm specifiers (#19675)
  * feat(lsp): support import maps in quick fix and auto-imports (#19692)
  * fix(cli): Fix the bug where the command description is not
    displayed. (#19604)
  * fix: add exactOptionalPropertyTypes for configuration file
    JSON schema (#19647)
  * fix: bump default @types/node version range to 18.16.19 (#19706)
  * fix(cli): don't store blob and data urls in the module cache (#18581)
  * fix(cli/napi): napi_get_buffer_info accepts ArrayBufferView
    not just Uint8Array.(#19551)
  * fix(cli/napi): property with getter/setter always failed (#19562)
  * fix(console): correct the parseCssColor algorithm (#19645)
  * fix(dts): make globals available on globalThis (#19438)
  * fix(ext/crypto): Fix WebCrypto API's deriveKey (#19545)
  * fix(ext/fs): fix boolean checks in JS parser (#19586)
  * fix(ext/http): Catch errors in eager stream timeout to avoid
    uncaught promise rejections (#19691)
  * fix(ext/kv): expose Deno.AtomicOperation (#19674)
  * fix(ext/node): Define performance.timeOrigin as getter property (#19714)
  * fix(ext/node): ignore cancelled timer when node timer refresh (#19637)
  * fix(ext/node): support brotli APIs (#19223)
  * fix(ext/websocket): Ensure that errors are available after
    async response returns (#19642)
  * fix(node/http): add setKeepAlive to FakeSocket (#19659)
  * fix(npm): escape export identifier in double quoted string (#19694)
  * fix(npm): handle more reserved words as cjs exports (#19672)
  * fix(npm): support siblings that are peer dependencies of each
    other (#19657)
- remove upstreamed deno-pull-19537.patch
- rebase deno-rm-upgrade-cmd.patch
</comment>
    <requestid>1097026</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>e3a0bcfca65d848ef5e1333309d5e5df</srcmd5>
    <version>1.35.1</version>
    <time>1689261496</time>
    <user>anag+factory</user>
    <comment>- update to 1.35.1:
  * fix(ext/http): Use brotli compression params (#19758)
  * fix(lsp): exclude files in deno.json &quot;exclude&quot; (#19791)
  * fix(lsp): remove quotes and period surrounding specifier in
    uncached messages (#19794)
  * fix(lsp): stop diagnostics flickering (#19803)
  * fix(node/http): add destroy to FakeSocket (#19796)
  * fix(node/http): allow callback in first argument of end call (#19778)
  * fix(node/http): server use FakeSocket and add end method (#19660)
  * fix(vendor): support import mapped jsxImportSource (#19724)
  * fix: remove unstable check for Deno.listenTls#alpnProtocols (#19732)
  * perf(ext/node): native vectored write for server streams (#19752)
  * perf(ext/node): optimize net streams (#19678)
  * perf(ext/websocket): optimize server websocket js (#19719)
  * perf(node/async_hooks): optimize AsyncLocalStorage (#19729)
  * perf: add setup cache for node_modules folder (#19787)
</comment>
    <requestid>1098439</requestid>
  </revision>
  <revision rev="27" vrev="1">
    <srcmd5>846256676e83a988ac29ab70eb4fa758</srcmd5>
    <version>1.35.2</version>
    <time>1690215973</time>
    <user>anag+factory</user>
    <comment>- update to 1.35.2:
  * fix(bench): run warmup benchmark to break JIT bias (#19844)
  * fix(ext/node): check if resource can be used with
    write_vectored (#19868)
  * fix(ext/node): fix stream/promises export (#19820)
  * fix(ext/node): properly segregate node globals (#19307)
  * fix(napi): update env_test.js (#19876)
  * fix(node): add process.dlopen API (#19860)
  * fix(node): improve error message requiring non-npm es module (#19856)
  * fix(node): improve require esm error messages (#19853)
  * fix(node/http): call callback after request is sent (#19871)
  * fix(node/net): Server connection callback include socket
    value (#19779)
  * fix(npm): improve error message importing non-existent file
    in a node_modules npm package (#19835)
  * fix(npm): improve error message on directory import in npm
    package (#19538)
  * fix(npm): support dynamic import of Deno TS from npm package (#19858)
  * fix(runtime): print process name in case of spawn error (#19855)
  * fix(tsc): more informative diagnostic when Deno does not exist (#19825)
  * fix(vendor): do not panic vendoring with jsxImportSource and
    no jsx files (#19837)
</comment>
    <requestid>1099962</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>474aac0c36606d46711e9f1fd4c4165e</srcmd5>
    <version>1.36.0</version>
    <time>1691594748</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.36.0:
  * feat(bench): add BenchContext::start() and BenchContext::end() (#18734)
  * feat(bench): print iter/s in the report (#19994)
  * feat(cli): Add dot test reporter (#19804)
  * feat(cli): Adding JUnit test reports (#19747)
  * feat(compile): Add --no-terminal to compile command (#17991)
  * feat(ext/http): Upgrade to hyper1.0-rc4 (#19987)
  * feat(ext/websocket): allow HTTP(S) protocol in URL (#19862)
  * feat(node): add polyfill for node:test module (#20002)
  * feat(node/os): implement getPriority, setPriority &amp; userInfo (#19370)
  * feat(npm): support running non-bin scripts in npm pkgs via deno run (#19975)
  * feat(permissions): add &quot;--deny-*&quot; flags (#19070)
  * feat(unstable): optional deno_modules directory (#19977)
  * feat(unstable/lsp): support navigating to deno_modules folder (#20030)
  * feat: Deno.createHttpClient allowHost (#19689)
  * fix(Deno.serve): accessing .url on cloned request throws (#19869)
  * fix(bench): iter/s calculation (#20016)
  * fix(check): should bust check cache when json module or npm
    resolution changes (#19941)
  * fix(ext/compression): throw TypeError on corrupt input (#19979)
  * fix(ext/fs): fix MaybeArc when not sync_fs (#19950)
  * fix(ext/node): fix import json using npm specifier (#19723)
  * fix(lsp): handle import mapped node: specifier (#19956)
  * fix(node): node:test reports correct location (#20025)
  * fix(node): package path not exported error - add if types
    resolution was occurring (#19963)
  * fix(npm): improve declaration resolution for filename with
    different extensions (#19966)
  * fix(repl): highlight from ident in import from or export from (#20023)
  * fix(test): request cloning should throw if body stream is locked (#19990)
  * fix: call setIsTrusted for generated events (MessageEvent) (#19919)
  * fix: deno diagnostic - clarify where to put triple-slash directive (#20009)
  * fix: do not include jsx without @ts-check in tsc roots (#19964)
  * fix: error on invalid &amp; unsupported jsx compiler options (#19954)
  * fix: make &quot;suggest.autoImports&quot; to switch completions from 
    external modules (#19845)
  * fix: regression in workers using dynamic imports (#20006)
  * fix: retry module download once if server errored (#17252)
  * perf(ext/ffi): Avoid receiving on FFI async work channel when no
  * UnsafeCallback exists (#19454)
  * perf: faster node globals access in cjs (#19997)
- includes 1.35.3:
  * feat(runtime): sys_info.rs - Use KERN_OSRELEASE on {Free,Open}BSD (#19849)
  * fix(cli): build script panics on musl due to glibc_version check (#19913)
  * fix(cli): output file handling in deno upgrade (#18994)
  * fix(cli/init): update to assert/mod.ts (#19924)
  * fix(cli/test): fix clear screen behavior when run deno test --watch (#19888)
  * fix(ext/http): Error on deprecated/unavailable features (#19880)
  * fix(ext/http): Quietly ignore invalid status codes (#19936)
  * fix(ext/net): fix string port number handling in listen (#19921)
  * fix(ext/node): inspector with seggregated globals (#19917)
  * fix(lint): allow to use --rules with --rules-tags (#19754)
  * fix(lsp): auto-discover deno.json in more cases (#19894)
  * fix(lsp): handle watched files events from symlinked config files (#19898)
  * fix(node): add writable and readable fields to FakeSocket (#19931)
  * fix(node/http): add encrypted field to FakeSocket (#19886)
  * fix(node_compat): Wrap require resolve exports in try catch block (#19592)
  * fix(task): ensure quoted strings are maintained mid-word (#19944)
  * fix: deno info should respect import map (#19781)
  * perf(lsp): format in a blocking task (#19883)
  * perf: cache node resolution when accesing a global (#19930)
</comment>
    <requestid>1103032</requestid>
  </revision>
  <revision rev="29" vrev="1">
    <srcmd5>60fc064edb1c18255eec37ab12c69f8b</srcmd5>
    <version>1.36.1</version>
    <time>1691762154</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.36.1:
  * feat(unstable): rename deno_modules to vendor (#20065)
  * fix(ext/abort): trigger AbortSignal events in correct order (#20095)
  * fix(ext/file): resolve unresolved Promise in Blob.stream (#20039)
  * fix(ext/http): serveHttp brotli compression level should be
    fastest (#20058)
  * fix(ext/http): unify default gzip compression level (#20050)
  * fix(ext/timers): some timers are not resolved (#20055)
  * fix(fmt): do not insert expr stmt leading semi-colon in do
    while stmt body (#20093)
  * fix(node): polyfill process.title (#20044)
  * fix(node): repl._builtinLibs (#20046)
  * fix(node/async_hooks): dont pop async context frame if stack
    if empty (#20077)
  * fix(test): handle ASCII escape chars in test name (#20081)
  * fix(test): make test runner work when global setTimeout is 
    replaced (#20052)
  * fix(test): use only a single timeout for op sanitizers (#20042)
  * fix(unstable): vendor cache override should handle forbidden
    windows directory names (#20069)
  * fix(unstable): vendor cache should support adding files to
    hashed directories (#20070)
  * perf(ext/headers): use .push loop instead of spread operator (#20108)
- bump rusty_v8 to 0.75.0
</comment>
    <requestid>1103385</requestid>
  </revision>
  <revision rev="30" vrev="1">
    <srcmd5>98b902c6416bb15299fa858985f6af99</srcmd5>
    <version>1.36.2</version>
    <time>1692795449</time>
    <user>anag+factory</user>
    <comment>- update to 1.36.2:
  * feat(ext/kv): key expiration (#20091)
  * feat(ext/node): eagerly bootstrap node (#20153)
  * feat(unstable): Improve FFI types (#20215)
  * fix(cli) error gracefully when script arg is not present and
    --v8-flags is present in deno run (#20145)
  * fix(cli): handle missing now field in cache (#20192)
  * fix(ext/fetch): clone second branch chunks in Body.clone() (#20057)
  * fix(ext/http): ensure request body resource lives as long as
    response is alive (#20206)
  * fix(ext/kv): retry transaction on SQLITE_BUSY errors (#20189)
  * fix(ext/net): implement a graceful error on an invalid SSL
    certificate (#20157)
  * fix(ext/node): allow for the reassignment of userInfo() on
    Windows (#20165)
  * fix(ext/node): support dictionary option in zlib init (#20035)
  * fix(lsp): pass fmt options to completion requests (#20184)
  * fix(node): don't print warning on process.dlopen.flags (#20124)
  * fix(node): implement TLSSocket._start (#20120)
  * fix(node): object keys in publicEncrypt (#20128)
  * fix(node/http): emit error when addr in use (#20200)
  * fix(npm): do not panic providing file url to require.resolve paths (#20182)
  * fix(require): use canonicalized path for loading content (#20133)
  * fix(runtime): navigator.userAgent in web worker (#20129)
  * fix(runtime): use host header for inspector websocket URL (#20171)
  * fix(test): JUnit reporter includes file, line and column attributes (#20174)
  * fix(unstable): disable importing from the vendor directory (#20067)
  * fix: release ReadeableStream in fetch (#17365)
  * perf(ext/event): always set timeStamp to 0 (#20191)
  * perf(ext/event): optimize Event constructor (#20181)
  * perf(ext/event): optimize addEventListener options converter (#20203)
  * perf(ext/event): replace ReflectHas with object lookup (#20190)
  * perf(ext/headers): cache iterableHeaders for immutable Headers (#20132)
  * perf(ext/headers): optimize getHeader using for loop (#20115)
  * perf(ext/headers): optimize headers iterable (#20155)
  * perf(ext/headers): use regex.test instead of .exec (#20125)
  * perf(ext/http): use ServeHandlerInfo class instead of object literal (#20122)
  * perf(ext/node): cache IncomingMessageForServer.headers (#20147)
  * perf(ext/node): optimize http headers (#20163)
  * perf(ext/request): optimize Request constructor (#20141)
  * perf(ext/request): optimize validate and normalize HTTP method (#20143)
  * perf(ext/urlpattern): optimize URLPattern.exec (#20170)
  * perf(http): use Cow&lt;[u8]&gt; for setting header (#20112)
</comment>
    <requestid>1105153</requestid>
  </revision>
  <revision rev="31" vrev="1">
    <srcmd5>b77bf8dd956edcb74e3cf16eb228d941</srcmd5>
    <version>1.37.0</version>
    <time>1695209476</time>
    <user>dimstar_suse</user>
    <comment>upgrade to 1.37.0</comment>
    <requestid>1112403</requestid>
  </revision>
  <revision rev="32" vrev="1">
    <srcmd5>89ebbe8890018d6e1c55b7d1739b3f4a</srcmd5>
    <version>1.37.1</version>
    <time>1696014803</time>
    <user>anag+factory</user>
    <comment>update to 1.37.1</comment>
    <requestid>1113936</requestid>
  </revision>
  <revision rev="33" vrev="1">
    <srcmd5>be237b0f0dd0e3994381f00a103643b1</srcmd5>
    <version>1.37.2</version>
    <time>1697390881</time>
    <user>anag+factory</user>
    <comment>- update to 1.37.2:
  * feat(ext/web): cancel support for TransformStream (#20815)
  * feat(lsp): jupyter notebook analysis (#20719)
  * feat(lsp): send &quot;deno/didChangeDenoConfiguration&quot; notifications (#20827)
  * feat(unstable): add Deno.jupyter.display API (#20819)
  * feat(unstable): add unix domain socket support to Deno.serve (#20759)
  * feat(unstable): Await return from Jupyter.display (#20807)
  * feat(unstable): send binary data with Deno.jupyter.broadcast (#20755)
  * feat(unstable): send Jupyter messaging metadata with
    Deno.  jupyter.broadcast (#20714)
  * feat(unstable): support Deno.test() (#20778)
  * fix(bench): use total time when measuring wavg (#20862)
  * fix(cli): Support using both --watch and --inspect at the
    same time (#20660)
  * fix(cli): panic with __runtime_js_sources (#20704)
  * fix(ext/ffi): use anybuffer for op_ffi_ptr_of (#20820)
  * fix(ext/formdata): support multiple headers in FormData (#20801)
  * fix(ext/http): Deno.Server should not be thenable (#20723)
  * fix(ext/kv): send queue wake messages accross different kv
    instances (#20465)
  * fix(ext/node): don't call undefined nextTick fn (#20724)
  * fix(ext/node): fix TypeError in Buffer.from with base64url
    encoding. (#20705)
  * fix(ext/node): implement uv.errname (#20785)
  * fix(ext/web): writability of ReadableStream.from (#20836)
  * fix(jupyter): Rename logo assets so they are discoverable (#20806)
  * fix(jupyter): keep this around (#20789)
  * fix(jupyter): more robust Deno.jupyter namespace (#20710)
  * fix(lsp): allow formatting vendor files (#20844)
  * fix(lsp): normalize &quot;deno:&quot; urls statelessly (#20867)
  * fix(lsp): percent-encode host in deno: specifiers (#20811)
  * fix(lsp): show diagnostics for type imports from untyped deps (#20780)
  * fix(node/buffer): utf8ToBytes should return a Uint8Array (#20769)
  * fix(node/http2): fixes to support grpc (#20712)
  * fix(npm): upgrade to deno_npm 0.15.2 (#20772)
  * fix(upgrade): use tar.exe to extract on Windows (#20711)
  * fix: define window.name (#20804)
  * fix: upgrade dprint-plugin-markdown 0.16.2 and typescript 0.88.1 (#20879)
  * perf(ext/web): optimize DOMException (#20715)
  * perf(ext/web): optimize structuredClone without transferables (#20730)
  * perf(lsp): fix redundant file reads (#20802)
  * perf(lsp): optimize formatting minified files (#20829)
  * perf(node): use faster utf8 byte length in Buffer#from (#20746)
</comment>
    <requestid>1117828</requestid>
  </revision>
  <revision rev="34" vrev="1">
    <srcmd5>ae3a54d8f750ebe45cd8e75c991c925a</srcmd5>
    <version>1.38.0</version>
    <time>1699046388</time>
    <user>anag+factory</user>
    <comment>- update to 1.38.0:
  * feat(cron) implement Deno.cron() (#21019)
  * feat(doc): display non-exported types referenced in
    exported types (#20990)
  * feat(doc): improve non-exported diagnostic (#21033)
  * feat(doc): support multiple file entry (#21018)
  * feat(ext/kv): support key expiration in remote backend (#20688)
  * feat(ext/web): EventSource (#14730)
  * feat(ext/websocket): split websocket read/write halves (#20579)
  * feat(ext/websocket): use rustls-tokio-stream instead of
    tokio-rustls (#20518)
  * feat(ext/websocket): websockets over http2 (#21040)
  * feat(lsp): respect &quot;typescript.preferences.quoteStyle&quot; when
    deno.json is absent (#20891)
  * feat(task): add head command (#20998)
  * feat(unstable): deno run --env (#20300)
  * feat(unstable): ability to npm install then deno run main.ts (#20967)
  * feat(unstable): allow bare specifier for builtin node module (#20728)
  * feat: deno doc --lint (#21032)
  * feat: deno doc --html (#21015)
  * feat: deno run --unstable-hmr (#20876)
  * feat: disposable Deno resources (#20845)
  * feat: enable Array.fromAsync (#21048)
  * feat: granular --unstable-* flags (#20968)
  * feat: precompile JSX (#20962)
  * feat: rename Deno.Server to Deno.HttpServer (#20842)
  * fix(ext/ffi): use anybuffer for op_ffi_buf_copy_into (#21006)
  * fix(ext/http): patch regression in variadic args to serve handler (#20796)
  * fix(ext/node): adapt dynamic type checking to Node.js behavior (#21014)
  * fix(ext/node): process.argv0 (#20925)
  * fix(ext/node): tty streams extends net socket (#21026)
  * fix(lsp): don't commit registry completions on &quot;/&quot; (#20902)
  * fix(lsp): include mtime in tsc script version (#20911)
  * fix(lsp): show diagnostics for untitled files (#20916)
  * fix(node): resolve file.d specifiers in npm packages (#20918)
  * fix(polyfill): correctly handle flag when its equal 0 (#20953)
  * fix(repl): jsxImportSource was not working (#21049)
  * fix(repl): support transforming JSX/TSX (#20695)
  * fix(test): --junit-path should handle when the dir doesn't exist (#21044)
  * fix(unstable/byonm): improve error messages (#20987)
  * fix: add 'unstable' property to config json schema (#20984)
  * fix: add missing Object.groupBy() and Map.groupBy() types (#21050)
  * fix: implement node:tty (#20892)
  * fix: improved using declaration support (#20959)
  * perf(ext/streams): optimize streams (#20649)
  * perf(lsp): cleanup workspace settings scopes (#20937)
  * perf(lsp): fix redundant walk when collecting tsc code lenses (#20974)
  * perf: use deno_native_certs crate (#18072)
- rebase deno-disable-update-check.patch
</comment>
    <requestid>1122961</requestid>
  </revision>
  <revision rev="35" vrev="1">
    <srcmd5>eb9ba5ef6624a42102f359547c369d60</srcmd5>
    <version>1.38.1</version>
    <time>1699910328</time>
    <user>anag+factory</user>
    <comment>- update to 1.38.1:
  * feat(ext/kv): increase checks limit (#21055)
  * fix small Deno.createHttpClient typo in lib.deno.unstable.d.ts (#21115)
  * fix(byonm): correct resolution for scoped packages (#21083)
  * fix(core/types): Promise.withResolvers: Unmark callback param
    as optional (#21085)
  * fix(cron): update Deno.cron doc example (#21078)
  * fix(doc): deno doc --lint mod.ts should output how many files checked
    (#21084)
  * fix(doc): require source files if --html or --lint used (#21072)
  * fix(ext): use String#toWellFormed in ext/webidl and ext/node (#21054)
  * fix(ext/fetch): re-align return type in op_fetch docstring (#21098)
  * fix(ext/http): Throwing Error if the return value of
    Deno.serve handler is not a Response class (#21099)
  * fix(node): cjs export analysis should probe for json files (#21113)
  * fix(node): implement createPrivateKey (#20981)
  * fix(node): inspect ancestor directories when resolving cjs re-
    exports during analysis (#21104)
  * fix(node): use closest package.json to resolve package.json imports (#21075)
  * fix(node/child_process): properly normalize stdio for 'spawnSync' (#21103)
  * fix(node/http): socket.setTimeout (#20930)
  * fix(test) reduce queue persistence test time from 60 secs to
    6 secs (#21142)
  * perf: lazy atexit setup (#21053)
  * perf: remove knowledge of promise IDs from deno (#21132)
</comment>
    <requestid>1125113</requestid>
  </revision>
  <revision rev="36" vrev="1">
    <srcmd5>22a533633be578938addd0e1035f4280</srcmd5>
    <version>1.38.2</version>
    <time>1700421336</time>
    <user>anag+factory</user>
    <comment>- update to 1.38.2:
  * feat(ext/web): add AbortSignal.any() (#21087)
  * feat(lsp): upgrade check on init and notification (#21105)
  * fix(cli): Allow executable name start with digit (#21214)
  * fix(doc): issue discovering re-exports of re-exports sometimes (#21223)
  * fix(ext/node): Re-enable alloc max size test (#21059)
  * fix(ext/node): add APIs perf_hook.performance (#21192)
  * fix(ext/node): implement process.geteuid (#21151)
  * fix(ext/web): Prevent TextDecoderStream resource leak on
    stream cancellation (#21074)
  * fix(ext/web): webstorage has trap for symbol (#21090)
  * fix(install): should work with non-existent relative root (#21161)
  * fix(lsp): update tsconfig after refreshing settings on init (#21170)
  * fix(node/http): export globalAgent (#21081)
  * fix(npm): support cjs entrypoint in node_modules folder (#21224)
  * fix(runtime): fix Deno.noColor when stdout is not tty (#21208)
  * fix: improve deno doc --lint error messages (#21156)
  * fix: use short git hash for deno version (#21218)
  * perf(cli): strace mode for ops (undocumented) (#21131)
  * perf(ext/http): Object pooling for HttpRecord and HeaderMap (#20809)
  * perf: lazy bootstrap options - first pass (#21164)
  * perf: move jupyter esm out of main snapshot (#21163)
  * perf: snapshot runtime ops (#21127)
  * perf: static bootstrap options in snapshot (#21213)
- rebase deno-disable-update-check.patch
</comment>
    <requestid>1127377</requestid>
  </revision>
  <revision rev="37" vrev="1">
    <srcmd5>8d9a007801c34e6de691f764e073282a</srcmd5>
    <version>1.40.4</version>
    <time>1707860600</time>
    <user>anag+factory</user>
    <comment>bumped mem limit to 21GB</comment>
    <requestid>1146293</requestid>
  </revision>
  <revision rev="38" vrev="1">
    <srcmd5>d0df9ab146bfba2e8154e5a29b8620e7</srcmd5>
    <version>1.40.5</version>
    <time>1708116119</time>
    <user>anag+factory</user>
    <comment>- update to 1.40.5:
  * feat(lsp): jsr support first pass (#22382)
  * feat(lsp): jsr support with cache probing (#22418)
  * feat(publish): allow passing config flag (#22416)
  * feat(unstable): define config in publish url (#22406)
  * perf: denort binary for deno compile (#22205)
  * fix(console): support NO_COLOR and colors option in
    all scenarios (#21910)
  * fix(ext/node): export process.umask (#22348)
  * fix(ext/web): Prevent (De-)CompressionStream resource leak on
    stream cancellation (#21199)
  * fix(lsp): complete npm specifier versions correctly (#22332)
  * fix: cache bust jsr deps on constraint failure (#22372)
  * fix: handle non-file scopes in synthetic import map (#22361)
  * fix: lockfile was sometimes getting corrupt when changing
    config deps (#22359)
  * fix: upgrade to deno_ast 0.33 (#22341)
- rebase deno-rm-upgrade-cmd.patch
</comment>
    <requestid>1146964</requestid>
  </revision>
  <revision rev="39" vrev="1">
    <srcmd5>3b5e7857f76863520689747a3cb5188d</srcmd5>
    <version>1.41.0</version>
    <time>1708703140</time>
    <user>anag+factory</user>
    <comment>- update to 1.41.0:
  * BREAKING(net/unstable): remove Deno.DatagramConn.rid (#22475)
  * BREAKING(unstable): remove Deno.HttpClient.rid (#22075)
  * BREAKING: add Deno.CreateHttpClientOptions.{cert,key} (#22280)
  * feat(fs): Deno.FsFile.{isTerminal,setRaw}() (#22234)
  * feat(lsp): auto-import completions for jsr specifiers (#22462)
  * feat(publish): type check on publish (#22506)
  * feat(unstable): single checksum per JSR package in the lockfile (#22421)
  * feat(unstable/lint): no-slow-types for JSR packages (#22430)
  * feat: Deno.ConnectTlsOptions.{cert,key} (#22274)
  * fix(compile): respect compiler options for emit (#22521)
  * fix(ext/fs): make errors in tempfile creation clearer (#22498)
  * fix(ext/node): pass alpnProtocols to Deno.startTls (#22512)
  * fix(ext/node): permission prompt for missing process.env
    permissions (#22487)
  * fix(fmt): remove debug output when formatting dynamic imports (#22433)
  * fix(lsp): add schema for JSR related config options (#22497)
  * fix(node/test): disable Deno test sanitizers (#22480)
  * fix(publish): better no-slow-types type discovery (#22517)
  * fix(publish): ignore .DS_Store while publishing (#22478)
  * fix(publish): print files that will be published (#22495)
  * fix: util.parseArgs() missing node:process import (#22405)
  * fix: write lockfile in deno info (#22272)
  * perf(jsr): fast check cache and lazy fast check graph (#22485)
  * perf: linter lsp memory leak fix and deno_graph executor (#22519)
  * perf: strip denort on unix (#22426)
</comment>
    <requestid>1149662</requestid>
  </revision>
  <revision rev="40" vrev="1">
    <srcmd5>48364cd0c09f638fedabccb71d13230f</srcmd5>
    <version>1.41.1</version>
    <time>1709661024</time>
    <user>anag+factory</user>
    <comment>- update to 1.41.1:
  * feat(unstable): deno add subcommand (#22520)
  * feat(unstable/lsp): jsr specifier completions (#22612)
  * feat(unstable/publish): discover jsr.json and jsr.jsonc files (#22587)
  * feat(unstable/publish): enable package provenance by default 
    on github actions (#22635)
  * feat(unstable/publish): infer dependencies from package.json (#22563)
  * feat(unstable/publish): provenance attestation (#22573)
  * feat(unstable/publish): respect .gitignore during deno publish (#22514)
  * feat(unstable/publish): support sloppy imports and bare node 
    built-ins (#22588)
  * fix(compile): add aarch64 linux to CliOptions::npm_system_info (#22567)
  * fix(compile): allow to compile for ARM linux (#22542)
  * fix(ext/crypto): align the return type of crypto.randomUUID to
  * cli/tsc/dts/lib.dom.d.ts (#22465)
  * fix(ext/node) add node http methods (#22630)
  * fix(ext/node): init arch, pid, platform at startup (#22561)
  * fix(ext/node): set correct process.argv0 (#22555)
  * fix(io): create_named_pipe parallelism (#22597)
  * fix(jsr): do not allow importing a non-JSR url via
    unanalyzable dynamic import from JSR (#22623)
  * fix(jsr): relative dynamic imports in jsr packages (#22624)
  * fix(lsp): import map expansion (#22553)
  * fix(publish): disable provenance if not in GHA (#22638)
  * fix(publish): make the already published message look like a 
    warning (#22620)
  * fix(publish): print a warning when .jsx or .tsx is imported (#22631)
  * fix(publish): reduce warnings about dynamic imports (#22636)
  * fix(test): ensure that pre- and post-test output is flushed 
    at the appropriate times (#22611)
  * fix(unstable): add Date#toTemporalInstant type (#22637)
  * fix(unstable): sloppy imports should resolve .d.ts files 
    during types resolution (#22602)
  * perf(cli): reduce overhead in test registration (#22552)
  * perf(fmt): reduce memory usage and improve performance (#22570)
- rebase deno-rm-upgrade-cmd.patch
</comment>
    <requestid>1154924</requestid>
  </revision>
  <revision rev="41" vrev="1">
    <srcmd5>33ee9e2f8b7f7bcfb501aed6e0691170</srcmd5>
    <version>1.41.2</version>
    <time>1710098651</time>
    <user>anag+factory</user>
    <comment>- update to 1.41.2:
  * feat(lsp): include registry url in jsr import hover text (#22676)
  * feat(node/util): styleText (#22758)
  * feat(publish): add npm: suggestion for esm.sh specifiers (#22343)
  * feat(unstable/pm): support npm packages in 'deno add' (#22715)
  * feat(unstable/pm): support version contraints in 'deno add' (#22646)
  * fix(ext/node): ref/unref on workers (#22778)
  * fix(cli): force flush output after test unloads (#22660)
  * fix(cli): improve logging on failed named pipe (#22726)
  * fix(cli): limit test parallelism on Windows to avoid pipe error (#22776)
  * fix(cli): remove possible deadlock in test channel (#22662)
  * fix(ext/node): add default methods to fs.StatsBase (#22750)
  * fix(ext/node): http2.createServer (#22708)
  * fix(ext/node): strip --enable-source-maps from argv (#22743)
  * fix(lsp): do not warn about local file &quot;redirects&quot; from .js
    to .d.ts files (#22670)
  * fix(lsp): don't apply renames to remote modules (#22765)
  * fix(lsp): ignore code errors when type passes for
    non-@deno-types reolution (#22682)
  * fix(lsp): output more information on error (#22665)
  * fix(lsp): regression - caching in lsp broken when config 
    with imports has comments (#22666)
  * fix(node): errno property when command missing (#22691)
  * fix(node): implement ALS enterWith (#22740)
  * fix(node): improve cjs tracking (#22673)
  * fix(node): stat/statSync returns instance of fs.Stats (#22294)
  * fix(publish): do not include .gitignore (#22789)
  * fix(publish): include explicitly specified .gitignored files 
    and directories (#22790)
  * fix(publish): make include and exclude work (#22720)
  * fix(publish): permissionless dry-run in GHA (#22679)
  * fix(publish): properly display graph validation errors (#22775)
  * fix(publish): reland error if there are uncommitted changes (#22613) (#22632)
  * fix(publish): silence warnings for sloppy imports and node 
    builtins with env var (#22760)
  * fix(tools/publish): correctly handle importing from self in 
    unfurling (#22774)
  * fix(unstable/publish): repect --no-check in no-slow-types (#22653)
  * fix: Provide source map for internal extension code (#22716)
  * fix: don't include source maps in release mode (#22751)
  * fix: point to correct WPT runner file (#22753)
  * fix: respect unstable &quot;temporal&quot; configuration in config file (#22134)
  * fix: update node process version to latest node LTS (#22709)
  * perf(cli): faster standalone executable determination (#22717)
  * perf(cli): use faster_hex (#22761)
  * perf(cli): use new deno_core timers (#22569)
  * perf(cli): hard link npm cache (#22773)
- rebase deno-rm-upgrade-cmd.patch
</comment>
    <requestid>1156640</requestid>
  </revision>
  <revision rev="42" vrev="1">
    <srcmd5>622cdb77434a94a86548fa05b85fe44f</srcmd5>
    <version>1.44.1</version>
    <time>1718033838</time>
    <user>anag+factory</user>
    <comment>- update to 1.44.1
  * many changes since April 4, see GitHub releases for info
- add deno-rm-upgrade.patch (merged 2 patches)
- remove deno-disable-update-check.patch
- remove deno-rm-upgrade-cmd.patch
- update to 1.42.1:
  * fix(check): ignore certain diagnostics in remote modules and
    when publishing (#23119)
  * fix(ext/node): support stdin: &quot;inherit&quot; in node:child_process (#23110)
  * fix(ext/node): use tty stdin from ext/io (#23044)
  * fix(jsr): exclude yanked versions from 'deno add' and completions (#23113)
  * fix(lsp): don't apply preload limit to workspace walk (#23123)
  * fix(lsp): implement missing ts server host apis (#23131)
  * fix(node): handle empty 'main' entry in pkg json (#23155)
  * fix(node): remove unwrap in op_require_node_module_paths (#23114)
  * fix: deno_graph 0.69.10 (#23147)
- update to 1.42.0:
  * feat(add): always produce multiline config file (#23077)
  * feat(ext/node): add riscv64 in process.arch (#23016)
  * feat(init): use jsr specifier for @std/assert (#23073)
  * feat(install): require -g / --global flag (#23060)
  * feat(lint): deno lint --fix and lsp quick fixes (#22615)
  * feat(lint): automatically opt-in packages to jsr lint tag (#23072)
  * feat(node): load ES modules defined as CJS (#22945)
  * feat(publish): check for uncommitted files in
    deno publish --dry-run (#22981)
  * feat(task): Task description in the form of comments (#23101)
  * feat(task): cross-platform shebang support (#23091)
  * feat(unstable/publish): error when a package's module is excluded from
    publishing (#22948)
  * feat: TypeScript 5.4 (#23086)
  * feat: add --watch-exclude flag (#21935)
  * feat: deno_task_shell 0.15 (#23019)
  * feat: remove deprecated methods from namespace with DENO_FUTURE=1 (#23075)
  * feat: type declarations for new Set methods (#23090)
  * fix(bench): Fix group header printing logic + don't filter 
    out the warmup benchmark (#23083)
  * fix(check): do not suggest running with --unstable (#23092)
  * fix(cli): output more detailed information for steps when 
    using JUnit reporter (#22797)
  * fix(cli): sanitizer should ignore count of ops started before 
    tests begin (#22932)
  * fix(coverage): Error if no files are included in the report (#22952)
  * fix(ext/fetch): do not truncate field value in EventSource (#22368)
  * fix(ext/fetch): make EventSource more robust (#22493)
  * fix(ext/node): ECDH.publicKey() point encoding (#23013)
  * fix(ext/node): FsWatcher ref and unref (#22987)
  * fix(ext/node): Reimplement StringDecoder to match node's behavior (#22933)
  * fix(ext/node): add crypto.getRandomValues (#23028)
  * fix(ext/node): add crypto.subtle (#23027)
  * fix(ext/node): add process.setSourceMapsEnabled noop (#22993)
  * fix(ext/node): handle KeyObject in prepareAsymmetricKey (#23026)
  * fix(ext/node): handle null in stdio array (#23048)
  * fix(ext/node): implement EventEmitterAsyncResource (#22994)
  * fix(ext/node): implement v8 serialize and deserialize (#22975)
  * fix(ext/node): panic in op_node_ecdh_generate_keys (#23011)
  * fix(ext/node): pass normalized watchFile handler to StatWatcher (#22940)
  * fix(ext/node): spread args in setImmediate (#22998)
  * fix(ext/node): support Diffie-Hellman key type in
    crypto.createPrivateKey() (#22984)
  * fix(ext/node): support MessagePort in WorkerOptions.workerData (#22950)
  * fix(ext/node): support public key point encoding in ECDH.
    generateKeys() (#22976)
  * fix(ext/node): worker_threads ESM handling (#22841)
  * fix(ext/node): worker_threads doesn't exit if there are 
    message listeners (#22944)
  * fix(ext/web): Fix structuredClone Web API type declaration
    (any -&gt; generic) (#22968)
  * fix(jupyter): Do not increase counter if store_history=false (#20848)
  * fix(lsp): decoding percent-encoding(non-ASCII) file path correctly (#22582)
  * fix(lsp): prefer cache over tsc quick fixes (#23093)
  * fix(lsp): use registry cache for completion search (#23094)
  * fix(runtime): use FQDN in NetDescriptor (#23084)
  * fix: do not memoize Deno.ppid (#23006)
  * fix: don't panic in test and bench if ops not available (#23055)
  * fix: handle cache body file not existing when using etag (#22931)
  * fix: less aggressive vendor folder ignoring (#23100)
  * perf: warm expensive init code at snapshot time (#22714)
- includes 1.41.3:
  * fix(cli): occasional panics on progress bar (#22809)
  * fix(cli): show asserts before leaks (#22904)
  * fix(cli): unbreak extension example and fix __runtime_js_sources (#22906)
  * fix(cli): use Instant for test times (#22853)
  * fix(config): add unstable features as examples to config schema (#22814)
  * fix(config): remove pkg name example and add pattern to schema (#22813)
  * fix(ext/node): add more named curves in
    crypto.generateKeyPair[Sync]() (#22882)
  * fix(ext/node) implement receiveMessageOnPort for node:worker_threads (#22766)
  * fix(ext/node): DH (dhKeyAgreement) support for createPrivateKey (#22891)
  * fix(ext/node): Add Immediate class to mirror NodeJS.Immediate (#22808)
  * fix(ext/node): Implement isBuiltin in node:module (#22817)
  * fix(ext/node): Match punycode module behavior to node (#22847)
  * fix(ext/node): Support private EC key signing (#22914)
  * fix(ext/node): allow automatic worker_thread termination (#22647)
  * fix(ext/node): crypto.getCipherInfo() (#22916)
  * fix(ext/node): flush brotli decompression stream (#22856)
  * fix(ext/node): initial crypto.createPublicKey() support (#22509)
  * fix(ext/node): make worker ids sequential (#22884)
  * fix(ext/node): make worker setup synchronous (#22815)
  * fix(ext/node): support spki format in createPublicKey (#22918)
  * fix(ext/node): support junction symlinks on Windows (#22762)
  * fix(ext/node): worker_threads.parentPort is updated on startup (#20794)
  * fix(ext/websocket): do not continue reading if socket rid closes (#21849)
  * fix(node): add nul byte to statfs path on windows (#22905)
  * fix(node): implement fs.statfs() (#22862)
  * fix(node): require of pkg json imports was broken (#22821)
  * fix(node): resolve .css files in npm packages when type checking (#22804)
  * fix(node): resolve types via package.json for directory import (#22878)
  * fix(node:http) Export validateHeaderName and 
    validateHeaderValue functions (#22616)
  * fix(publish): ability to un-exclude when .gitignore ignores 
    everything (#22805)
  * fix(publish): regression - publishing with vendor folder (#22830)
  * fix(publish): suggest using --allow-dirty on uncommitted changes (#22810)
  * fix(publish): typo in --allow-dirty help text (#22799)
  * fix(runtime): Restore default signal handler after user handlers are
    unregistered (#22757)
  * fix(runtime): negate partial condition for deny flags (#22866)
  * fix(slow-types): improved exports tracing and infer type 
    literals in as exprs (#22849)
  * fix: fix crate vulnerabilities (#22825)
  * fix: stop type checking during runtime (#22854)
  * fix: support sloppy resolution to file where directory exists (#22800)
  * fix: typo in error from GPUBuffer.prototype.mapAsync (#22913)
  * perf(permissions): Fast exit from checks when permission is 
    in &quot;fully-granted&quot; state (#22894)
- rebase deno-rm-upgrade-cmd.patch
</comment>
    <requestid>1179595</requestid>
  </revision>
  <revision rev="43" vrev="1">
    <srcmd5>dd6cd9cc1fa17570313d2eb5da683c3a</srcmd5>
    <version>1.44.2</version>
    <time>1718807842</time>
    <user>anag+factory</user>
    <comment>- update to 1.44.2:
  * fix(lsp): respect editor indentation options (#24181)
  * fix(lsp): workspace jsr resolution (#24121)
  * fix(check): attempt to resolve types from pkg before @types pkg (#24152)
  * fix(cli): Explicitly cache NPM packages during deno install (#24190)
  * fix(cli): Overwrite existing bin entries in node_modules (#24123)
  * fix(ext/http): print [] around ipv6 addresses (#24150)
  * fix(ext/net): make node:http2 work with DENO_FUTURE=1 (#24144)
  * fix(ext/node): ServerResponse header array handling (#24149)
  * fix(ext/node): add crypto and zlib constants (#24151)
  * fix(ext/node): fix vm memory usage and context initialization (#23976)
  * fix(ext/node): lossy UTF-8 read node_modules files (#24140)
  * fix(ext/node): send data frame with end_stream flag on _final call (#24147)
  * fix(ext/node): support stdin child_process IPC &amp; fd stdout/stderr (#24106)
  * fix(ext/web): correct string tag for MessageEvent (#24134)
  * fix(ext/websocket): correctly order messages when sending blobs (#24133)
  * fix(jupyter): Avoid panicking when DEBUG env var is set (#24168)
  * fix(lsp): don't sort workspace files (#24180)
  * fix(lsp): strip .js before probing for valid import fix (#24188)
  * fix(npm): resolve dynamic npm imports individually (#24170)
  * fix: Rewrite Node-API (#24101)
  * fix: clean up some node-api details (#24178)
  * fix: do not panic linting files with UTF-8 BOM (#24136)
  * fix: don't panic when cache is not available (#24175)
  * fix: make writing to the deps cache more reliable (#24135)
  * fix: potential hang on dynamic import (#24128)
</comment>
    <requestid>1181571</requestid>
  </revision>
  <revision rev="44" vrev="1">
    <srcmd5>b0e76850ed07344613416d933d815a86</srcmd5>
    <version>1.44.4</version>
    <time>1718894871</time>
    <user>anag+factory</user>
    <comment>- update to 1.44.4:
  * Revert &quot;chore: upgrade to reqwest 0.12.4 and rustls 0.22 (#24056)&quot; (#24262)
  * fix(ext/node): Add Dirent.path and Dirent.parentPath (#24257)
  * fix(ext/node): Add SIGPOLL and SIGUNUSED signals (#24259)
  * fix(ext/node): use primordials in `ext/node/polyfills/_utils.ts` (#24253)
- includes 1.44.3:
  * feat(lsp): multi deno.json resolver scopes (#24206)
  * fix(cli): missing flag for --unstable-process (#24199)
  * fix(docs): correctly resolve href for built-ins (#24228)
  * fix(ext/console): bump default max str lengthto 10_00 (#24245)
  * fix(ext/http): actually await goAhead promise (#24226)
  * fix(ext/node): add missing BlockList &amp; SocketAddress classes (#24229)
  * fix(ext/node): server.close() does graceful shutdown (#24184)
  * fix(ext/node): better support for node:diagnostics_channel module (#24088)
  * fix(ext/node): make process.versions own property (#24240)
  * fix(ext/node): use Deno.FsFile.statSync() (#24234)
  * fix(ext/permissions): add correct feature flags to winapi (#24218)
  * fix(ext/web): fix AbortSignal.timeout() leak (#23842)
  * fix(ext/webgpu): fix surface creation panic when adapter not
    initialized (#24201)
  * fix(inspector): crash on &quot;Debugger.setBlackboxPatterns&quot; (#24204)
  * fix(lsp): use import map from workspace root (#24246)
  * fix(napi): Read reference ownership before calling finalizer
    to avoid crash (#24203)
  * fix(no-slow-types): handle named type in mapped type (#24205)
  * fix(npm): use more relaxed package.json version constraint
    parsing (#24202)
  * fix(repl): prevent panic when deleting globalThis.closed property (#24014)
  * perf(lsp): store settings in Arc (#24191)
  * perf(node): ensure cjs wrapper module has deterministic output (#24248)
</comment>
    <requestid>1181796</requestid>
  </revision>
  <revision rev="45" vrev="2">
    <srcmd5>7a2cffeda3e9557f67048c05f04033b0</srcmd5>
    <version>1.44.4</version>
    <time>1720201632</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1185420</requestid>
  </revision>
  <revision rev="46" vrev="1">
    <srcmd5>b76f73186f16ee29b7170bf20643f073</srcmd5>
    <version>1.45.0</version>
    <time>1720722766</time>
    <user>anag+factory</user>
    <comment>
- update to 1.45.0
  * BREAKING(unstable/ffi): remove callback reentrant flag (#24367)
  * feat(cli): Add --frozen flag to error out if lockfile is out of date (#24355)
  * feat(cli): deno init --lib (#22499)
  * feat(compile): support --env (#24166)
  * feat(ext/crypto): make deriveBits length parameter optional and nullable (#24426)
  * feat(ext/web): add Blob.prototype.bytes() (#24148)
  * feat(jsr): support publishing jsr packages in npm workspaces (#24507)
  * feat(jupyter): support confirm and prompt in notebooks (#23592)
  * feat(lsp): ts language service scopes (#24345)
  * feat(node): Support executing npm package lifecycle scripts
    (preinstall/install/postinstall) (#24487)
  * feat(workspace): support object config (#24483)
  * feat: Deprecate --lock-write flag (#24436)
  * feat: Upgrade to TypeScript 5.5.2 (#24326)
  * feat: add __tests__ to test file detection defaults (#24443)
  * feat: deprecate deno vendor (#22183)
  * feat: npm workspace and better Deno workspace support (#24334)
  * feat: support wildcards in npm workspaces (#24471)
  * feat: upgrade deno_core (#24364)
  * feat: upgrade deno_core to 0.293.0 (#24482)
  * fix(check): CJS types importing dual ESM/CJS package should prefer CJS types (#24492)
  * fix(compile): atomically write compile output (#24378)
  * fix(compile): prevent setting unstable feature twice (#24381)
  * fix(ext/node): Add fs.lutimes / fs.lutimesSync (#23172)
  * fix(ext/node): add Module.parent (#24333)
  * fix(ext/node): add ServerResponse#appendHeader (#24216)
  * fix(ext/node): add Symbol.toStringTag to KeyObject instances (#24377)
  * fix(ext/node): discover .npmrc in user's homedir (#24021)
  * fix(ext/node): don't panic on invalid utf-8 in pem (#24303)
  * fix(ext/node): don't wait for end() call to send http client request (#24390)
  * fix(ext/node): http chunked writes hangs (#24428)
  * fix(ext/node): ignore stream error during enqueue (#24243)
  * fix(ext/node): make next tick queue resilient to Array.prototype tampering (#24361)
  * fix(ext/node): rewrite crypto.Hash (#24302)
  * fix(ext/node): rewrite digest handling (#24392)
  * fix(ext/node): use cppgc for node:zlib (#24267)
  * fix(ext/webgpu): fix GPUUncapturedErrorEvent parent type (#24369)
  * fix(ext/websocket): drop connection when close frame not ack (#24301)
  * fix(lsp): correct scope attribution for injected @types/node (#24404)
  * fix(lsp): do sloppy resolution for node-to-node imports in byonm (#24481)
  * fix(lsp): don't use global cache paths for scope allocation (#24353)
  * fix(lsp): inherit workspace-root-only fields in members (#24440)
  * fix(lsp): respect lockfile redirects entries for resolution (#24365)
  * fix(lsp): use CliLockfile (#24387)
  * fix(net): set correct max size for Datagram (#21611)
  * fix(node): Implement fs.lchown (and process.getegid) (#24418)
  * fix(node): add missing readline/promises module (#24336)
  * fix(node/assert): throws not checking error instance (#24466)
  * fix(node/http): don't error if request destroyed before send (#24497)
  * fix(node/http): don't send destroyed requests (#24498)
  * fix(node/http): don't throw on .address() before .listen() (#24432)
  * fix(node/http): support all .writeHead() signatures (#24469)
  * fix(node/perf_hooks): stub eventLoopUtilization (#24501)
  * fix(node/v8): stub serializer methods (#24502)
  * fix(permissions): handle ipv6 addresses correctly (#24397)
  * fix(publish): unfurling should always be done with the package json (#24435)
  * fix(task): do not propagate env changes outside subshells (#24279)
  * fix(workspace): better cli file argument handling (#24447)
  * fix: Add sys permission kinds for node compat (#24242)
  * fix: add warning for invalid unstable feature use in deno.json/jsonc (#24120)
  * fix: do not download compilerOptions -&gt; types when not type checking (#24473)
  * fix: do not return undefined for missing global properties (#24474)
  * fix: make .setup-cache.bin in node_modules more reproducible (#24480)
  * fix: memory leak when transpiling (#24490)
  * fix: node-api get_value_string_utf8 should use utf8_length (#24193)
  * fix: panic when piping &quot;deno help&quot; or &quot;deno --version&quot; (#22917)
  * fix: test in presence of .npmrc (#24486)
  * fix: upgrade deno_core to 0.291.0 (#24297)
  * perf(ext/node): improve Buffer.from(buffer) (#24352)
  * perf(ext/websocket): avoid global interceptor overhead (#24284)
  * perf(ws): optimize fastwebsockets in release profile (#24277)
  * perf: optimize Buffer.from(&quot;base64&quot;) for forgiving-base64 conforming input (#24346)
- rebase deno-rm-upgrade.patch</comment>
    <requestid>1186723</requestid>
  </revision>
  <revision rev="47" vrev="1">
    <srcmd5>a8a8019176d4c2a391e2ece7f5b6713e</srcmd5>
    <version>2.0.0~rc10</version>
    <time>1728330546</time>
    <user>anag+factory</user>
    <comment>- Remove the following patches:
  * deno-rm-upgrade.patch
  * deno-v8-arm.patch
- update _service file
  * remove excludes. we can't determine which files are really needed for build
  * use cargo_vendor
- remove the following files
  * cargo_config
  * deno-1.45.1.tar.xz
  * revendor_source.sh
  * vendor.tar.xz
- add the following files
  * deno.obsinfo
  * vendor.tar.zst new vendored tarball
  * deno-2.0.0~rc10.tar.zst is now the new source tarball
- update to version 2.0.0~rc10. Changelog since 1.45.2 til latest:
  * fix(install): store tags associated with package in node_modules dir
  * chore: disable flaky uv_test.js for now
  * fix(install): compare versions directly to decide whether to create a child node_modules dir for a workspace member
  * feat(byonm): support `deno run npm:&lt;package&gt;` when package is not in package.json
  * fix(node): implement libuv APIs needed to support `npm:sqlite3`
  * Revert &quot;fix(urlpattern): fallback to empty string for undefined group values&quot;
  * fix(workspace): handle when config has members when specified via --config
  * fix(no-slow-types): better `override` handling
  * chore: release deno_* crates
  * chore: release deno_* crates
  * chore: relax version pinning of deno_package_json
  * chore: deprecate check itests
  * chore: remove unnecessary envs in spec tests
  * feat(ext/node): buffer.transcode()
  * fix(ext/node): remove unimplemented promiseHook stubs
  * feat(lsp): quick fix for @deno-types=&quot;npm:@types/*&quot;
  * feat: Add suggestion for packages using Node-API addons
  * refactor(ext): align error messages
  * BREAKING: rename &quot;deps&quot; remote cache folder to &quot;remote&quot;
  * fix: remove the typo in the help message
  * fix: Hide 'deno cache' from help output
  * fix: update patchver to 0.2
  * fix(flags): move some content from docs.deno.com into help output
  * fix(info): error instead of panic for npm specifiers when using byonm
  * fix: precompile preserve SVG camelCase attributes
  * chore: include sha256 checksum in release
  * fix: eagerly error for specifier with empty version constraint
  * refactor: move ByonmNpmResolver to deno_resolver
  * refactor: bury descriptor parsing in PermissionsContainer
  * fix: update sui to 0.4
  * refactor: cleanup for creating worker structs
  * refactor: extract out sloppy imports resolution from CLI crate
  * Revert &quot;ci: use macos-14-xlarge on 'main' branch&quot;
  * refactor: move NpmCacheDir to deno_cache_dir
  * refactor: use deno_path_util
  * fix(node): Pass NPM_PROCESS_STATE to subprocesses via temp file instead of env var
  * fix(flags): --allow-all should conflict with lower permissions
  * ci: use macos-14-xlarge on 'main' branch
  * fix(lint): correctly handle old jsx in linter
  * BREAKING(ext/net): improved error code accuracy
  * chore: update `simd-json`
  * refactor(fmt): rewrite HTML syntax error handling
  * feat: Don't warn about --allow-script when using esbuild
  * fix(info): move &quot;version&quot; field to top of json output
  * feat(install): warn repeatedly about not-run lifecycle scripts on explicit installs
  * fix(installl): make bin entries executable even if not put in `node_modules/.bin`
  * fix(doc): surface graph errors as warnings
  * refactor: use ModuleGraph::fill_from_lockfile
  * feat(tools/doc): display subitems in symbol overviews where applicable
  * fix(ext/node): fix process.stdin.pause()
  * feat: add `--allow-import` flag
  * fix(compile): support 'deno compile' in RC and LTS releases
  * chore: cleanup unused deprecated code
  * chore: deprecate npm itests
  * fix(check): properly surface dependency errors in types file of js file
  * fix(add/install): default to &quot;latest&quot; tag for npm packages in `deno add npm:pkg`
  * feat(fmt): better error on malfored HTML files
  * fix(check): ignore noImplicitOverrides in remote modules
  * test: disable 'test-child-process-ipc-next-tick.js' Node compat test
  * fix(cli): Warn on not-run lifecycle scripts with global cache
  * fix: better error for Deno.UnsafeWindowSurface, correct HttpClient name, cleanup unused code
  * fix(fmt): --check was broken for CSS, YAML and HTML
  * fix(ext/node): Fix vm sandbox object panic
  * fix: Update deno_npm to fix `deno install` with crossws
  * refactor: reenable more tests after DENO_FUTURE migration
  * perf(ext/fetch): improve decompression throughput by upgrading `tower_http`
  * fix: error out if a valid flag is passed before a subcommand
  * chore: add code generation for @types/deno
  * BREAKING: remove support for remote import maps in deno.json
  * feat(fmt): support vto and njk extensions
  * feat(fmt): stabilize CSS, HTML and YAML formatters
  * fix: consistent with deno_config and treat `&quot;experimentalDecorators&quot;` as deprecated
  * tests: update specs::cache::package_json
  * feat(ext/crypto): import and export p521 keys
  * tests: enable auto_discovered tests of run/no_deno_json
  * feat: make 'globalThis.location' a configurable property
  * fix(ext/web): don't ignore capture in EventTarget.removeEventListener
  * fix(ext/node): stub cpu_info() for OpenBSD
  * feat: Show hints when using `window` global
  * BREAKING(webgpu/unstable): move `width` and `height` options to `UnsafeWindowSurface` constructor
  * fix(node): Include &quot;node&quot; condition during CJS re-export analysis
  * chore: Revert child_process close ordering change
  * perf(ext/web): optimize performance.measure()
  * fix: panic when require(esm)
  * feat(fmt): upgrade markup_fmt
  * fix(cli): Default to auto with --node-modules-dir flag
  * refactor(tests): migrate npm itests to specs
  * fix(flags): properly error out for urls
  * fix(ext/crypto): ensure EC public keys are exported uncompressed
  * test: make specs::test::doc_success less flaky
  * fix(ext/crypto): reject empty usages in SubtleCrypto#importKey
  * chore: update tools allow-run list
  * chore: update sui to 0.3.1
  * fix(coverage): ignore urls from doc testing
  * fix: cjs resolution cases
  * fix(node): Don't error out if we fail to statically analyze CJS re-export
  * ci: increase timeout to 180 minutes
  * fix(cli): Only set allow net flag for deno serve if not already allowed all
  * ci: revert changed to canary uploads
  * fix(ext/node): support x509 certificates in `createPublicKey`
  * fix(ext/console): more precision in console.time
  * ci: fix 'promote_to_release' script
  * test: make specs::test::doc_success less flaky
  * ci: Fix uploading latest canary version
  * fix: don't include extensionless files in file collection for lint &amp; fmt by default
  * fix(ext/fetch): fix lowercase http_proxy classified as https
  * refactor(ext/kv): align error messages
  * refactor(ext/webidl): align error messages
  * fix(cli): handle edge cases around `export`s in doc tests and default export
  * refactor(ext/webgpu): align error messages
  * fix(ext/node): don't throw error for unsupported signal binding on windows
  * refactor(ext): align error messages
  * ci: bump fetch depth to unblock canary uploads
  * fix: update nodeModulesDir config JSON schema
  * ci: fix uploading canary
  * feat: suggest `deno install --entrypoint` instead of `deno cache`
  * feat: default to TS for file extension and support ext flag in more scenarios
  * fix(ext/http): gracefully handle Response.error responses
  * feat(ext/node): add rootCertificates to node:tls
  * feat: improve warnings for deprecations and lifecycle script for npm packages
  * feat(lint): add `no-process-global` lint rule
  * fix: error on unsupported compiler options
  * feat: require jsr prefix for `deno install` and `deno add`
  * fix(flags): don't treat empty run command as task subcommand
  * fix: remove --allow-run warning when using deno without args or subcommand
  * Revert &quot;feat(fmt): sort type-only named import/exports last&quot;
  * fix: do not panic running invalid file specifier
  * feat(check): turn on noImplicitOverride
  * tests: fix upgrade canary test
  * tests: re-enable upgrade tests
  * tests: re-enable WebGPU tests on macOS aarch64
  * fix(dts): stabilize `fetch` declaration for use with `Deno.HttpClient`
  * feat(cli): evaluate code snippets in JSDoc and markdown
  * chore: bump `deno_lint` to 0.66.0
  * feat: update warning message for --allow-run with no list
  * refactor(ext/websocket): align error messages
  * fix(lsp): properly resolve jsxImportSource for caching
  * feat(lsp): auto-import types with 'import type'
  * perf: fast path for cached dyn imports
  * fix(ext/node): stub `inspector/promises`
  * feat(fmt): sort type-only named import/exports last
  * ci: fix releasing canary
  * ci: make canary uploads less racy
  * chore: upgrade deno_core
  * chore: remove `warnOnDeprecatedApi()`
  * feat: warn when using `--allow-run` with no allow list
  * chore: lint `40_fs_events.js`
  * chore(fs): undeprecate `Deno.FsWatcher.prototype.return()`
  * fix(npm): better error handling for remote npm deps
  * feat(permissions): `Deno.mainModule` doesn't require permissions
  * refactor(permissions): split up Descriptor into Allow, Deny, and Query
  * chore: deprecate test itests
  * chore: maybe fix flaky serve_parallel test
  * chore: deprecate lint itests
  * chore: move info itests
  * fix(lockfile): use loose deserialization for version constraints
  * test: rewrite some ignored tests to spec tests
  * fix(types): simplify mtls related types
  * fix(runtime): don't error `child.output()` on consumed stream
  * BREAKING(ext/ffi): remove deprecated `UnsafeFnPointer` constructor type with untyped `Deno.PointerObject` parameter
  * fix(ext/crypto): support md4 digest algorithm
  * chore: deprecate node compat itests
  * chore: cleanup remaining `internals.future` code
  * fix(cli): `deno task` exit with status 0
  * fix(ext/node): add `vm.constants`
  * fix(ext/node): export `process.allowedNodeEnvironmentFlags`
  * fix(ext/node): add stubs for `node:trace_events`
  * feat: print `Listening on` messages on stderr instead of stdout
  * feat: TypeScript 5.6 and `npm:@types/node@22`
  * fix(ext/node): attach console stream properties
  * fix(ext/node): use primordials in ext/node/polyfills/wasi.ts
  * chore: update more registry.json files
  * fix(check): move is cjs check from resolving to loading
  * feat(flags): support user provided args in repl subcommand
  * chore: enable `specs::run::workspaces::explicit_import_map` test
  * refactor(runtime): align error messages
  * feat(serve): Support second parameter in deno serve
  * fix: no cmd prefix in help output go links
  * feat(upgrade): support LTS release channel
  * feat(ext/node): export 'promises' symbol from 'node:timers'
  * ci: Add action to cut LTS release
  * fix(ext/node): Implement detached option in `child_process`
  * fix(ext/node): fix Decipheriv when autoPadding disabled
  * BREAKING(io): remove `Deno.Seeker[Sync]`
  * chore: update `std` submodule
  * refactor: cleanup unstable checks for WebGPU, FFI and FS APIs
  * chore(test): add script for pruning registry.json files
  * fix(ext/console): prevent duplicate error printing when the cause is assigned
  * fix: add test ensuring als works across dynamic import
  * ci: upgrade release template
  * fix(ext/node): export request and response clases from `http2` module
  * test: remove `DENO_FUTURE`
  * fix(ext/webgpu): sync category comment
  * feat(ext/node): expose ES modules for _ modules
  * feat: stabilize `Deno.createHttpClient()`
  * feat(ext/node): export missing symbols from domain, puncode, repl, tls
  * feat(ext/node): export missing constants from 'zlib' module
  * feat(ext/node): export more symbols from streams and timers/promises
  * chore: remove `prevent_v8_code_cache` from `CliModuleLoaderInner`
  * chore: deprecate task itests
  * feat(upgrade): better error message on failure
  * fix(ext/node): fix `Cipheriv#update(string, undefined)`
  * fix(ext/node): avoid showing `UNKNOWN` error from TCP handle
  * fix(lsp): encode url parts before parsing as uri
  * fix(ext/node): add `FileHandle#writeFile`
  * fix(ext/node): use primordials in `ext/node/polyfills/console.ts`
  * fix(ext/node): validate input lengths in `Cipheriv` and `Decipheriv`
  * fix(ext/node): Add missing node:fs and node:constants exports
  * fix(ext/node): Add missing `node:path` exports
  * feat(lsp): unstable setting as list
  * BREAKING(net): remove `Deno.[Tls]Listener.prototype.rid`
  * BREAKING(net): remove `Deno.ConnectTlsOptions.{certChain,certFile,privateKey}` and `Deno.ListenTlsOptions.certChain,certFile,keyFile}`
  * fix(ext/node): Rewrite `node:v8` serialize/deserialize
  * BREAKING(temporal/unstable): Remove obsoleted Temporal APIs part 2
  * BREAKING(fs): remove `Deno.FsFile.prototype.rid`
  * feat: require(esm)
  * fix: linux canonicalization checks
  * feat(cli): use NotCapable error for permission errors
  * fix: add link to env var docs
  * refactor: move WebGPU, FFI and FS typings from unstable to stable
  * test: remove usage of `--unstable` flag
  * fix: update malva in deno to support astro css comments
  * fix(inspector): Fix panic when re-entering runtime ops
  * build: remove --unstable flags from CI
  * bench: fix CI
  * BREAKING(fs): remove `Deno.fsync[Sync]()`
  * BREAKING: Remove `--unstable` flag
  * fix(node/byonm): do not accidentally resolve bare node built-ins
  * BREAKING(io): remove `Deno.{Reader,Writer}[Sync]` and `Deno.Closer`
  * feat: Add better error messages for unstable APIs
  * fix: Float16Array type
  * fix: remove recently added deno.json node_modules aliasing
  * BREAKING: remove deprecated files config
  * fix(fmt): fix tabs in YAML
  * chore: Deprecate worker itests
  * fix(ext/node): Stream should be instance of EventEmitter
  * fix(ext/node): report freemem() on Linux in bytes
  * BREAKING(fs): remove `Deno.fdatasync[Sync]()`
  * fix(ext/node): delay accept() call 2 ticks in net.Server#listen
  * feat: Update no-window lint rule
  * feat(add/install): Flag to add dev dependency to package.json
  * BREAKING(net): remove `Deno.{Conn,TlsConn,TcpConn,UnixConn}.prototype.rid`
  * chore: soft-remove `Deno.{stdin,stderr,stdout}.rid`
  * fix(install): Make sure target node_modules exists when symlinking
  * feat(add): Add npm packages to package.json if present
  * fix(runtime): use more null proto objects again
  * feat(lsp): turn on useUnknownInCatchVariables
  * fix(jupyter): allow unstable flags
  * refactor(permissions): remove FromStr implementations, add ::parse methods
  * fix: invalid ipv6 hostname on `deno serve`
  * BREAKING(fs): disallow `new Deno.FsFile()`
  * BREAKING(buffer): remove `Deno.Buffer`
  * chore(net): soft-remove `Deno.serveHttp()`
  * BREAKING: remove &quot;emit&quot; and &quot;map&quot; from deno info output
  * feat(check): turn on useUnknownInCatchVariables
  * feat(flags): allow double commas to escape values in path based flags
  * fix: add suggestion how to fix importing CJS module
  * fix(ext/node): stub `process.cpuUsage()`
  * feat(uninstall): alias to 'deno remove' if -g flag missing
  * BREAKING(fs): remove `Deno.funlock[Sync]()`
  * BREAKING(fs): remove `Deno.seek[Sync]()`
  * chore(tests): reduce the use of `--unstable` flag in test util
  * fix: update hint for `deno add &lt;package&gt;`
  * feat: include version number in all --json based outputs
  * chore: deprecate doc itests
  * feat: Allow importing .cjs files
  * fix(config): validate export names
  * feat(ext/node): add abort helpers, process &amp; streams fix
  * refactor(ext/cron): align error messages
  * feat: Add a hint on error about 'Relative import path ... not prefixed with ...'
  * BREAKING(fs): remove `Deno.FsWatcher.prototype.rid`
  * BREAKING(fs): remove `Deno.File`
  * refactor(ext/crypto): align error messages
  * fix(ext/http): do not set localhost to hostname unnecessarily
  * fix(ext/node): close upgraded socket when the underlying http connection is closed
  * fix(regression): do not expose resolved path in Deno.Command permission denied error
  * BREAKING(types): soft-remove `Deno.run()`
  * feat(install): deno install with entrypoint
  * chore: forward v1.46.3 release commit to main
  * BREAKING(config): make supported compilerOptions an allow list
  * fix(windows): Deno.Command - align binary resolution with linux and mac
  * fix(byonm): resolve npm deps of jsr deps
  * chore(cli): remove deno_emit dependency
  * feat(add): strip package subpath when adding a package
  * fix: lock down allow-run permissions more
  * chore(ext/fetch): remove op_fetch_response_upgrade
  * fix(lsp): update diagnostics on npm install
  * test: run js_unit_tests with `--unstable-*` flags  * chore: remove some dead code around DENO_FUTURE env var
  * BREAKING(io): remove `Deno.read[Sync]()`
  * feat(cli): give access to `process` global everywhere
  * BREAKING(io): remove `Deno.write[Sync]()`
  * BEAKING(buffer): remove `Deno.readAll[Sync]()`
  * BREAKING(fs): remove `Deno.ftruncate[Sync]()`
  * chore(tty): soft-remove `Deno.isatty()`
  * refactor(ext): align error messages
  * build(deps): bump quinn-proto from 0.11.3 to 0.11.8
  * refactor(cli/js): align error messages
  * BREAKING(buffer): remove `Deno.writeAll[Sync]()`
  * refactor(ext/fetch): align error messages
  * chore: update WPT
  * BREAKING(fs): remove `Deno.fstat[Sync]()`
  * fix(cli): Map error kind to `PermissionDenied` when symlinking fails due to permissions
  * fix(flags): require global flag for permission flags in install subcommand
  * fix(install): recommend using `deno install -g` when using a single http url
  * docs(serve): fix default `Deno.serve` hostname
  * chore: deprecate eval itests
  * fix(task): correct name for scoped npm package binaries
  * test: fix info::info_import_map test
  * BREAKING(io): remove `Deno.copy()`
  * test: reenable frozen_lockfile tests
  * BREAKING(permissions): remove --allow-hrtime
  * fix: only enable byonm if workspace root has pkg json
  * feat: hide several --unstable-* flags
  * BREAKING(dts): improve types for `Deno.serve`
  * BREAKING(console): remove `Deno.customInspect`
  * BREAKING(unstable): drop support for Deno.run.{clearEnv,gid,uid}
  * fix: make some warnings more standard
  * fix: fix jupyter display function type
  * chore(fs): remove `Deno.flock[Sync]()`
  * feat: support DENO_LOG env var instead of RUST_LOG
  * BREAKING(io): remove `Deno.iter[Sync]()`
  * BREAKING: remove `Deno.close()`
  * chore: cleanup code for deprecation notices in JS code
  * BREAKING: remove `deno vendor`
  * fix(cli/tools): correct `deno init --serve` template behavior
  * BREAKING: remove `--allow-none` flag
  * feat(lsp): html/css/yaml file formatting
  * BREAKING(ext/web): remove remaining web types for compatibility
  * BREAKING: remove `--trace-ops`
  * fix: remove entrypoint hack for Deno 2.0
  * BREAKING: remove `deno bundle`
  * BREAKING: remove `--ts` flag
  * BREAKING: remove `--jobs` flag
  * refactor(ext/console): align error messages
  * fix(BREAKING): make dns record types have consistent naming
  * chore: cleanup code for unstable tests
  * chore: remove DENO_FUTURE=1 from spec tests
  * fix(publish): ensure provenance is spec compliant
  * chore(fs): remove `Deno.futime[Sync]()`
  * fix(upgrade): more informative information on invalid version
  * chore(net): remove `Deno.shutdown()`
  * chore: remove `Deno.resources()`
  * chore: remove `Deno.metrics()`
  * fix(lint): support linting jsr pkg without version field
  * v2.0.0-rc.0
  * refactor: remove DENO_FUTURE
  * chore: fix linting
  * fix: upgrade deno_ast 0.42
  * BREAKING: `DENO_FUTURE=1` by default, or welcome to Deno 2.0
  * fix(ext/node): session close during stream setup
  * test(ext/node): check hostname option has precedence over host option
  * feat(upgrade): print info links for Deno 2 RC releases
  * feat(config): Node modules option for 2.0
  * chore: forward v1.46.2 release commit to main
  * chore: upgrade rusqlite
  * fix: update deno_doc
  * fix: reland async context
  * fix(runtime/web_worker): populate `SnapshotOptions` for `WebWorker` when instantiated without snapshot
  * fix: upgrade deno_core to 0.307.0
  * fix(permissions): disallow any `LD_` or `DYLD_` prefixed env var without full --allow-run permissions
  * feat: deprecate import assertions
  * docs: refer to `globalThis` instead of `window` in declaration files
  * test: run specs::npm::exec_file_inside_npm_package with DENO_FUTURE=1
  * test: run `node_unit_tests` with `DENO_FUTURE=1`
  * test: replace usage of `window` with `globalThis`
  * fix: delete old Deno 1.x headers file when loading cache
  * fix(napi): Don't run microtasks in napi_resolve_deferred
  * refactor(ext): throw new error instead of throw error
  * test: Don't run unit tests with and without `DENO_FUTURE=1`
  * refactor: don't virtualize the `console` global for node mode
  * feat: improve lockfile v4 to store normalized version constraints and be more terse
  * fix(napi): Fix worker threads importing already-loaded NAPI addon
  * fix(ext/node): import RSA JWK keys
  * fix(ext/node): export JWK public key
  * build: Allow building 'rc' release from source
  * fix(ext/node): import EC JWK keys
  * tests: fix wpt_epoch job
  * fix(fmt): fix incorrect quotes in components
  * fix(ext/node): update aead-gcm-stream to 0.3
  * fix(ext/node): throw when loading `cpu-features` module
  * fix(lsp): panic on url_to_uri()
  * feat: remove `--lock-write` flag
  * fix(ext/node): emit `online` event after worker thread is initialized
  * fix: replace `npm install` hint with `deno install` hint
  * fix(permissions): disallow launching subprocess with LD_PRELOAD env var without full run permissions
  * test: add supporting for ignoring spec tests
  * fix(ext/fetch): percent decode userinfo when parsing proxies
  * fix: removed unstable-htttp from deno help
  * fix(task): support tasks with colons in name in `deno run`
  * chore: ignore lint warning in test
  * feat(ext/kv): configurable limit params
  * perf(cache): single cache file for remote modules
  * feat: lockfile v4 by default
  * Reland &quot;test: run unit tests with DENO_FUTURE=1&quot;
  * fix(fmt/markdown): fix regression with multi-line footnotes and inline math
  * perf(cache): single cache file for typescript emit
  * perf(ext/node): reduce some allocations in require
  * Revert &quot;feat(fetch): accept async iterables for body&quot;
  * fix(bench): Fix table column alignments and NO_COLOR=1
  * fix(node/cluster): improve stubs to make log4js work
  * fix(ext/webgpu): allow to build on unsupported platforms
  * chore(ext/node): use array instead of Vec to avoid wrong capacity allocation
  * refactor(lsp): changes for lsp_types 0.97.0
  * fix: handle showing warnings while the progress bar is shown
  * fix(ext/crypto): throw DataError for invalid EC key import
  * fix(ext/node): import JWK octet key pairs
  * chore: enable `log` feature for tracing crate
  * chore(ext/node): bump minimum required version of `dsa` to 0.6.3
  * fix(install): Use relative symlinks in deno install
  * chore: update config-file.v1.json
  * refactor: remove unused AllowAllNodePermissions
  * chore(build): deno_kv - remove dep on deno_node
  * chore: forward v1.46.1 release commit to main
  * fix: trim space around DENO_AUTH_TOKENS
  * fix(urlpattern): fallback to empty string for undefined group values
  * fix(ext/node): http2session ready state
  * fix(ext/node): register `node:wasi` built-in
  * feat(upgrade): print info links for Deno 2 RC releases
  * fix(cli): Map error kind to PermissionDenied when symlinking fails due to
    permissions
  * fix(cli/tools): correct deno init --serve template behavior
  * fix(ext/node): session close during stream setup
  * fix(publish): ensure provenance is spec compliant
  * fix(upgrade): more informative information on invalid version
  * fix: fix jupyter display function type
  * Revert &quot;feat(fetch): accept async iterables for body&quot;
  * fix(bench): Fix table column alignments and NO_COLOR=1
  * fix(ext/crypto): throw DataError for invalid EC key import
  * fix(ext/fetch): percent decode userinfo when parsing proxies
  * fix(ext/node): emit online event after worker thread is initialized
  * fix(ext/node): export JWK public key
  * fix(ext/node): import EC JWK keys
  * fix(ext/node): import JWK octet key pairs
  * fix(ext/node): import RSA JWK keys
  * fix(ext/node): throw when loading cpu-features module
  * fix(ext/node): update aead-gcm-stream to 0.3
  * fix(ext/webgpu): allow to build on unsupported platforms
  * fix(fmt): fix incorrect quotes in components
  * fix(fmt/markdown): fix regression with multi-line footnotes and inline math
  * fix(install): Use relative symlinks in deno install
  * fix(lsp): panic on url_to_uri()
  * fix(napi): Don't run microtasks in napi_resolve_deferred
  * fix(napi): Fix worker threads importing already-loaded NAPI addon
  * fix(node/cluster): improve stubs to make log4js work
  * fix(runtime/web_worker): populate SnapshotOptions for WebWorker when
    instantiated without snapshot
  * fix(task): support tasks with colons in name in deno run
  * fix: handle showing warnings while the progress bar is shown
  * fix: reland async context
  * fix: removed unstable-htttp from deno help
  * fix: replace npm install hint with deno install hint
  * fix: update deno_doc
  * fix: upgrade deno_core to 0.307.0
  * perf(ext/node): reduce some allocations in require
  * fix(ext/node): http2session ready state
  * fix(ext/node): register node:wasi built-in
  * fix(urlpattern): fallback to empty string for undefined group values
  * fix: trim space around DENO_AUTH_TOKENS
  * BREAKING(temporal/unstable): Remove obsoleted Temporal APIs
  * BREAKING(webgpu/unstable): Replace async .requestAdapterInfo() with sync .info
  * feat: deno compile --icon &lt;ico&gt;
  * feat: deno init --serve
  * feat: deno upgrade --rc
  * feat: Add Deno.ServeDefaultExport type
  * feat: async context
  * feat: better help output
  * feat: codesign for deno compile binaries
  * feat: deno clean
  * feat: deno remove
  * feat: deno run
  * feat: Deprecate &quot;import assertions&quot; with a warning
  * feat: glob and directory support for deno check and deno cache cli arg
    paths
  * feat: Print deprecation message for npm packages
  * feat: refresh &quot;Download&quot; progress bar with a spinner
  * feat: Rename --unstable-hmr to --watch-hmr
  * feat: support short flags for permissions
  * feat: treat bare deno command with run arguments as deno run
  * feat: upgrade deno_core
  * feat: upgrade deno_core
  * feat: upgrade V8 to 12.8
  * feat: Upgrade V8 to 12.9
  * feat: vm rewrite
  * feat(clean): add progress bar
  * feat(cli): Add --env-file as alternative to --env
  * feat(cli/tools): add a subcommand --hide-stacktraces for test
  * feat(config): Support frozen lockfile config option in deno.json
  * feat(config/jsr): add license field
  * feat(coverage): add breadcrumbs to deno coverage --html report
  * feat(ext/node): rewrite crypto keys
  * feat(ext/node): support http2session.socket
  * feat(fetch): accept async iterables for body
  * feat(flags): improve help output and make deno run list tasks
  * feat(fmt): support CSS, SCSS, Sass and Less
  * feat(fmt): support HTML, Svelte, Vue, Astro and Angular
  * feat(fmt): support YAML
  * feat(FUTURE): terse lockfile (v4)
  * feat(install): change 'Add ...' message
  * feat(lint): Add lint for usage of node globals (with autofix)
  * feat(lsp): node specifier completions
  * feat(lsp): registry completions for import-mapped specifiers
  * feat(node): support username and _password in .npmrc file
  * feat(permissions): link to docs in permission prompt
  * feat(publish): error on missing license file
  * feat(publish): suggest importing jsr:@std/ for deno.land/std urls
  * feat(serve): Opt-in parallelism for deno serve
  * feat(test): rename --allow-none to --permit-no-files
  * feat(unstable): ability to use a local copy of jsr packages
  * feat(unstable/fmt): move yaml formatting behind unstable flag
  * feat(upgrade): refresh output
  * feat(upgrade): support deno upgrade 1.46.0
  * feat(urlpattern): add ignoreCase option &amp; hasRegExpGroups property, and fix
    spec discrepancies
  * feat(watch): add watch paths to test subcommand
  * fix: node:inspector not being registered
  * fix: rename watch event missing
  * fix: actually add missing node:readline/promises module
  * fix: adapt to new jupyter runtime API and include session IDs
  * fix: add permission name when accessing a special file errors
  * fix: adjust suggestion for lockfile regeneration
  * fix: cache bust jsr meta file when version not found in dynamic branches
  * fix: CFunctionInfo and CTypeInfo leaks
  * fix: clean up flag help output
  * fix: correct JSON config schema to show vendor option as stable
  * fix: dd-trace http message compat
  * fix: deserialize lockfile v3 straight
  * fix: Don't panic if fail to handle JS stack frame
  * fix: Don't panic if failed to add system certificate
  * fix: Don't shell out to unzip in deno upgrade/compile
  * fix: enable the reporting of parsing related problems when running deno lint
  * fix: errors with CallSite methods
  * fix: include already seen deps in lockfile dep tracking
  * fix: log current version when using deno upgrade
  * fix: make deno add output more deterministic
  * fix: make vendor cache manifest more deterministic
  * fix: missing emitWarning import
  * fix: regressions around Error.prepareStackTrace
  * fix: stub node:module.register()
  * fix: support npm:bindings and npm:callsites packages
  * fix: unblock fsevents native module
  * fix: update deno_doc
  * fix: update dry run success message
  * fix: update lsp error message of 'relative import path' to 'use deno add' for
  * npm/jsr packages
  * fix: upgrade deno_core to 0.298.0
  * fix: warn about import assertions when using typescript
  * fix(add): better error message providing scoped pkg missing leading @ symbol
  * fix(add): Better error message when missing npm specifier
  * fix(add): error when config file contains importMap field
  * fix(add): Handle packages without root exports
  * fix(add): Support dist tags in deno add
  * fix(cli): add NAPI support in standalone mode
  * fix(cli): Create child node_modules for conflicting dependency versions,
    respect aliases in package.json
  * fix(cli): Respect implied BYONM from DENO_FUTURE in deno task
  * fix(cli): shorten examples in help text
  * fix(cli): support --watch when running cjs npm packages
  * fix(cli): Unhide publish subcommand help string
  * fix(cli): update permission prompt message for compiled binaries
  * fix(cli/init): broken link in deno init sample template
  * fix(compile): adhoc codesign mach-o by default
  * fix(compile): make output more deterministic
  * fix(compile): support workspace members importing other members
  * fix(compile/windows): handle cjs re-export of relative path with parent
  * component
  * fix(config): regression - should not discover npm workspace for nested
  * deno.json not in workspace
  * fix(cron): improve error message for invalid cron names
  * fix(docs): fix some deno.land/manual broken urls
  * fix(ext/console): Error Cause Not Inspect-Formatted when printed
  * fix(ext/console): render properties of Intl.Locale
  * fix(ext/crypto): respect offsets when writing into ab views in randomFillSync
  *
  * fix(ext/fetch): include TCP src/dst socket info in error messages
  * fix(ext/fetch): include URL and error details on fetch failures
  * fix(ext/fetch): respect authority from URL
  * fix(ext/fetch): use correct ALPN to proxies
  * fix(ext/fetch): use correct ALPN to socks5 proxies
  * fix(ext/http): correctly consume response body in Deno.serve
  * fix(ext/net): validate port in Deno.{connect,serve,listen}
  * fix(ext/node): add CipherIv.setAutoPadding()
  * fix(ext/node): add crypto.diffieHellman
  * fix(ext/node): client closing streaming request shouldn't terminate http
  * server
  * fix(ext/node): createBrotliCompress params
  * fix(ext/node): do not expose self global in node
  * fix(ext/node): don't concat set-cookie in ServerResponse.appendHeader
  * fix(ext/node): don't throw when calling PerformanceObserver.observe
  * fix(ext/node): ed25519 signing and cipheriv autopadding fixes
  * fix(ext/node): fix prismjs compatibiliy in Web Worker
  * fix(ext/node): handle node child_process with --v8-options flag
  * fix(ext/node): handle prefix mapping for IPv4-mapped IPv6 addresses
  * fix(ext/node): http request uploads of subarray of buffer should work
  * fix(ext/node): improve shelljs compat with managed npm execution
  * fix(ext/node): node:zlib coerces quality 10 to 9.5
  * fix(ext/node): pass content-disposition header as string instead of bytes
  * fix(ext/node): prevent panic in http2.connect with uppercase header names
  * fix(ext/node): read correct CPU usage stats on Linux
  * fix(ext/node): rewrite X509Certificate resource and add publicKey()
  * fix(ext/node): stat.mode on windows
  * fix(ext/node): support ieee-p1363 ECDSA signatures and pss salt len
  * fix(ext/node): use pem private keys in createPublicKey
  * fix(ext/node/net): emit error before close when connection is refused
  * fix(ext/web): make CompressionResource garbage collectable
  * fix(ext/web): make TextDecoderResource use cppgc
  * fix(ext/webgpu): assign missing constants property of shader about
  * GPUDevice.createRenderPipeline[Async]
  * fix(ext/webgpu): don't crash while constructing GPUOutOfMemoryError
  * fix(ext/webgpu): GPUDevice.createRenderPipelineAsync should return a Promise
  * fix(ext/websocket): unhandled close rejection in WebsocketStream
  * fix(fmt): handle using stmt in for of stmt
  * fix(fmt): regression with pipe in code blocks in tables
  * fix(fmt): upgrade to dprint-plugin-markdown 0.17.4
  * fix(fmt): was sometimes putting comments in front of commas in parameter lists
  * fix(future): Emit deno install warning less often, suggest deno install in error message
  * fix(http): Adjust hostname display for Windows when using 0.0.0.0
  * fix(init): use bare specifier for jsr:@std/assert
  * fix(install): Properly handle dist tags when setting up node_modules
  * fix(lint): support linting tsx/jsx from stdin
  * fix(lsp): directly use file referre...
  * fix(cli): Unhide publish subcommand help string
  * fix(compile/windows): handle cjs re-export of relative path with parent component
  * fix(ext/node): handle node child_process with --v8-options flag
  * fix(ext/node): prevent panic in http2.connect with uppercase header names
  * fix(ext/webgpu): don't crash while constructing GPUOutOfMemoryError
  * fix(http): Adjust hostname display for Windows when using 0.0.0.0
  * fix(node): Rework node:child_process IPC
  * fix(node): support wildcards in package.json imports
  * fix(node/fs/promises): watch should be async iterable
  * fix(node/timers/promises): add scheduler APIs
  * fix(npmrc): skip loading .npmrc in home dir on permission error
  * fix(types): fix streams types
  * fix(unstable/compile): handle byonm import in sub dir
  * fix: actually add missing node:readline/promises module
  * fix: adapt to new jupyter runtime API and include session IDs
  * perf(ext/fetch): speed up resp.clone()
  * perf(ext/node): improve Buffer from string performance
  * Reland &quot;fix: CFunctionInfo and CTypeInfo leaks&quot;
  * fix(ext/fetch): respect authority from URL
  * fix(ext/fetch): use correct ALPN to proxies
  * fix(ext/node): read correct CPU usage stats on Linux
  * fix(ext/node/net): emit error before close when connection is refused
  * fix(future): Emit deno install warning less often, suggest deno install in
  * error message
  * fix(lsp): rewrite import for 'infer return type' action
  * fix(node): better detection for when to surface node resolution errors
  * fix(node): cjs pkg dynamically importing esm-only pkg fails
  * fix(node/worker_threads): support port.once()
  * fix(publish): workspace included license file had incorrect path
  * fix(unstable): move sloppy-import warnings to lint rule
  * fix(upgrade): do not error if config in cwd invalid
  * fix(workspaces/publish): include the license file from the workspace root if not in pkg
  * fix: enable the reporting of parsing related problems when running deno lint
  * fix: support npm:bindings and npm:callsites packages
  * fix: update lsp error message of 'relative import path' to 'use deno add' for
    npm/jsr packages
  * fix: decode percent-encoding source string in Error.stack
  * perf: update deno_doc
  * Reland &quot;refactor(fetch): reimplement fetch with hyper instead of reqwest&quot;
  * fix(cli): Create child node_modules for conflicting dependency versions,
  * respect aliases in package.json
  * fix(cli): Respect implied BYONM from DENO_FUTURE in deno task
  * fix(cli): add NAPI support in standalone mode
  * fix(cron): improve error message for invalid cron names
  * fix(docs): fix some deno.land/manual broken urls
  * fix(ext/console): Error Cause Not Inspect-Formatted when printed
  * fix(ext/node): do not expose self global in node
  * fix(ext/node): http request uploads of subarray of buffer should work
  * fix(ext/node): stat.mode on windows
  * fix(fmt): was sometimes putting comments in front of commas in parameter lists
  * fix(init): use bare specifier for jsr:@std/assert
  * fix(lsp): hang when caching failed
  * fix(lsp): scope attribution for asset documents
  * fix(lsp): support npm workspaces and fix some resolution issues
  * fix(node): Fix --allow-scripts with no deno.json
  * fix(node): support tty.hasColors() and tty.getColorDepth()
  * fix(npm): handle packages with only pre-released 0.0.0 versions
  * fix(publish): surface syntax errors when using --no-check
  * fix(publish): warn about missing license file
  * fix(std/http2): release window capacity back to remote stream
  * fix(types): Conform lib.deno_web.d.ts to lib.dom.d.ts and lib.webworker.d.ts
  * fix(workspace): do not resolve to self for npm pkg depending on matching req
  * fix(workspace): support resolving bare specifiers to npm pkgs within a
    workspace
  * fix: make vendor cache manifest more deterministic
  * fix: missing emitWarning import
  * perf(ext/node): optimize fs.exists[Sync]
  * fix(config): regression - should not discover npm workspace for nested
    deno.json not in workspace
  * fix(cli/init): broken link in deno init sample template
  * fix(ext/node): handle prefix mapping for IPv4-mapped IPv6 addresses
  * fix(ext/webgpu): GPUDevice.createRenderPipelineAsync should return a Promise
  * fix(node): revert invalid package target change
  * fix(publish): show dirty files on dirty check failure
  * fix: include already seen deps in lockfile dep tracking
  * fix: unblock fsevents native module
  * perf(ext/crypto): make randomUUID() 5x faster
- update to 1.45.1:
  * fix(node): Ignore broken default install scripts (#24534)
  * fix(npm): only warn about lifecycle scripts not being run
    when setting up directory (#24530)
  * fix(workspace): allow using --import-map flag with workspace (#24527)
</comment>
    <requestid>1205983</requestid>
  </revision>
  <revision rev="48" vrev="1">
    <srcmd5>d8211c307bddddd111e207e47ba9d469</srcmd5>
    <version>2.0.0</version>
    <time>1728504791</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1206506</requestid>
  </revision>
  <revision rev="49" vrev="2">
    <srcmd5>4a52ecc46021a6598fc13c7de34cbecf</srcmd5>
    <version>2.0.0</version>
    <time>1728732636</time>
    <user>dimstar_suse</user>
    <comment>- Disable LTO. This seems to cause clang to recognize formats incorrectly,
  thus, not recognizing the symbols. This also results disabling LTO
  builds in rustc altogether removing the specified architecture
  requirement for patch ./deno-disable-lto.patch
- Add CFLAGS and CXXFLAGS
- Refresh _constraints file.
- Refresh patch:
  *  deno-disable-lto.patch
</comment>
    <requestid>1207399</requestid>
  </revision>
  <revision rev="50" vrev="1">
    <srcmd5>d490b5b6bfb01bc5ac861220242ea10a</srcmd5>
    <version>2.0.2</version>
    <time>1729411488</time>
    <user>anag+factory</user>
    <comment>- Update to version 2.0.2:
  * fix(ext/node): add null check for kStreamBaseField
  * fix(jupyter): fix panics for overslow subtraction
  * fix(install): don't attempt to cache specifiers that point to directories
  * chore: fix flaky COPYFILE_EXCL test
  * refactor(ext/napi): use concrete error types
  * fix(node/fs): copyFile with `COPYFILE_EXCL` should not throw if the destination doesn't exist
  * refactor(ext/web): use concrete error types
  * feat(permissions): expose PromptResponse
  * refactor(ext/kv): use concrete error type
  * refactor(ext/net): use concrete error type
  * feat(permissions): expose PermissionPrompter and set_prompter function
  * fix(runtime): send ws ping frames from inspector server
  * fix(jupyter): update to the new logo
  * refactor: use macros for signal table
  * fix(cli): set napi object property properly
  * fix(net): don't try to set nodelay on upgrade streams
  * fix: don't warn on ignored signals on windows
  * fix(node/http): normalize header names in `ServerResponse`
  * Reland feat(lsp): deno/didRefreshDenoConfigurationTree notifications
  * fix: use syntect for deno doc html generation
  * Revert &quot;feat(lsp): &quot;deno/didRefreshDenoConfigurationTree&quot; notificatio…
  * fix(child_process): map node `--no-warnings` flag to `--quiet`
  * fix(cli): add prefix to install commands in help
  * fix(add): exact version should not have range `^` specifier
  * feat(lsp): &quot;deno/didRefreshDenoConfigurationTree&quot; notifications
  * chore: add dhat feature
  * fix(jupyter): copy kernels icons to the kernel directory
  * fix(ext/node): fix dns.lookup result ordering
  * fix: node-api function call should use preamble
  * fix(cli): consolidate pkg parser for install &amp; remove
  * fix(ext/node): timingSafeEqual account for AB byteOffset
  * perf(http): make heap allocation for path conditional
  * fix(install): retry downloads of registry info / tarballs
  * fix: improve suggestions and hints when using CommonJS modules
  * refactor(ext/io): use concrete error types
  * fix: add hint for missing `document` global in terminal error
  * fix(ext/console): apply coloring for console.table
  * fix(install): handle pkg with dep on self when pkg part of peer dep resolution
  * fix(ext/node): use primordials in `ext/node/polyfills/internal/buffer.mjs`
  * fix(ext/node): handle http2 server ending stream
  * refactor: always apply hint when formatting JsError
  * chore: ensure only one cargo publish can run
  * fix(add): create deno.json when running `deno add jsr:&lt;pkg&gt;`
  * chore: upgrade to rust 1.81.0
  * fix: panic in `prepare_stack_trace_callback` when global interceptor throws
  * fix(ext/node): implement TCP.setNoDelay
  * fix(repl): remove check flags
  * fix: do not panic running remote cjs module
  * perf(http): avoid clone getting request method and url
  * perf(http): cache webidl.converters lookups in ext/fetch/23_response.js
  * fix(cli): named export takes precedence over default export in doc testing
  * feat(unstable): `--unstable-detect-cjs` for respecting explicit `&quot;type&quot;: &quot;commonjs&quot;`
  * refactor(ext/ffi): use concrete error types
  * fix(console/ext/repl): support using parseFloat()
  * refactor(ext/url): use concrete error types
  * refactor(ext/webstorage): use concrete error types
  * fix(install): support installing npm package with alias
  * chore: generate the checksums from the final archives
  * perf: use fast calls for microtask ops
  * feat(cli): improve deno info output for npm packages
  * fix(ext/node): compute pem length (upper bound) for key exports
  * fix(ext/node): allow writing to tty columns
  * fix(ext/napi): pass user context to napi_threadsafe_fn finalizers
  * fix(ext/webgpu): allow GL backend on Windows
  * refactor(ext/tls): use concrete error types
  * refactor(ext/cron): use concrete error type
  * fix(node/util): export `styleText` from `node:util`
  * feat(npm): support `--allow-scripts` on `deno run` (and `deno add`, `deno test`, etc)
  * refactor(ext/canvas): use concrete error type
  * refactor(ext/cache): use concrete error type
  * refactor(ext/broadcastchannel): use concrete error type
  * fix(node): make `process.stdout.isTTY` writable
  * fix(lsp): relative completions for bare import-mapped specifiers
  * fix(install): duplicate dependencies in `package.json`
  * fix(unstable/worker): ensure import permissions are passed
  * fix: do not panic when using methods on classes and interfaces in deno doc html output
  * fix: do not panic on wsl share file paths on windows
  * fix(repl): importing json files
  * fix(jupyter): keep running event loop when waiting for messages
- Replace deprecated tar_scm with obs_scm in _service file.
</comment>
    <requestid>1208928</requestid>
  </revision>
  <revision rev="51" vrev="1">
    <srcmd5>9e118be95d3502f2e9f68683b34c176e</srcmd5>
    <version>2.0.3</version>
    <time>1730024799</time>
    <user>anag+factory</user>
    <comment>- Update to version 2.0.3:
  * fix(install): don't cache json exports of JSR packages (for now)
  * chore: remove print debugging from test server
  * fix(ext/node): refactor http.ServerResponse into function class
  * bench: remove http benchmarks
  * fix: add 'fmt-component' to unstable features in schema file
  * perf(compile): pass module source data from binary directly to v8
  * fix(fmt): --ext flag requires to pass files
  * fix: `.npmrc` settings not being passed to install/add command
  * refactor(ext/node): use concrete error types
  * Revert &quot;fix(runtime): send ws ping frames from inspector server (#263…
  * fix(config): schemas for lint rule and tag autocompletion
  * fix(node/util): support array formats in `styleText`
  * feat: support node-api in denort
  * fix(ext/node): cancel pending ipc writes on channel close
  * fix(ext/node): only set our end of child process pipe to nonblocking mode
  * fix(ext/ffi): return u64/i64 as bigints from nonblocking ffi calls
  * fix(install): cache all exports of JSR packages listed in `deno.json`
  * fix(install): cache type only module deps in `deno install`
  * fix(node:tls): set TLSSocket.alpnProtocol for client connections
  * fix: share inotify fd across watchers
  * fix(ext/node): map `ERROR_INVALID_NAME` to `ENOENT` on windows
  * fix(check): support `--frozen` on deno check
  * refactor: add 'docs' suggestion
  * fix(cli): increase size of blocking task threadpool on windows
  * fix: unpin tokio version
  * fix(fmt): upgrade formatters
  * fix(ext/console): ignore casing for named colors in css parsing
  * refactor(runtime/ops): use concrete error types
  * fix(install): update lockfile when using package.json
  * fix(lsp): import-map-remap quickfix for type imports
  * fix(npm): support version ranges with &amp;&amp; or comma
  * fix(install): better json editing
  * feat(lsp): interactive inlay hints
  * fix(ext/node): use primordials in `ext/node/polyfills/https.ts`
  * chore: update nix crate
  * chore: update release doc template
  * perf: avoid multiple calls to runMicrotask
  * refactor(ext/webgpu): use concrete error type
  * refactor(ext/fetch): use concrete error types
  * Revert &quot;ci: use self-hosted mac arm runner&quot;
  * refactor(ext/http): use concrete error types
  * refactor(ext/crypto): use concrete error types
  * fix(ext/node): stub HTTPParser internal binding
  * fix(info): resolve workspace member mappings
  * refactor(ext/websocket): use concrete error type
  * fix(npm): ensure scoped package name is encoded in URLs
  * fix(ext/node): properly map reparse point error in readlink
  * refactor(ext/fs): use concrete error types
  * fix(help): missing package specifier
- Experiment on obs-service-roast to generate tarball from cloned
  repository. Note that obs-service-roast is not yet in openSUSE.
  I still plan to add it once other things are finalised such as
  managing version names.</comment>
    <requestid>1218627</requestid>
  </revision>
  <revision rev="52" vrev="1">
    <srcmd5>0031b404e5e846d0e3708633d7ccaf70</srcmd5>
    <version>2.0.4</version>
    <time>1730491609</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.0.4:
  * fix: support watch flag to enable watching other files than the main module on serve subcommand
  * Revert &quot;fix(ext/node): fix dns.lookup result ordering&quot;
  * fix(ext/napi): export dynamic symbols list for {Free,Open}BSD
  * fix(ext/node): compatibility with {Free,Open}BSD
  * refactor(init): inline routing in deno init --serve template
  * Revert &quot;fix(ext/node): use primordials in `ext/node/polyfills/https.ts`&quot;
  * fix: provide hints in terminal errors for Node.js globals
  * fix(check): expose more globals from @types/node
  * fix: report exceptions from nextTick
  * fix(compile): regression handling redirects
  * fix(npm): match npm bearer token generation
  * fix: do not panic when failing to write to http cache
  * fix(ext/node): add path to `fs.stat` and `fs.statSync` error
  * fix(watch): don't panic on invalid file specifiers
  * docs(readme): Add winget instructions
  * fix(cli): Make --watcher CLEAR_SCREEN clear scrollback buffer as well as visible screen
  * fix(ext/node): use primordials in ext\node\polyfills\internal\crypto\_randomInt.ts
  * perf: pass transpiled module to deno_core as known string
  * fix(lsp): make missing import action fix infallible
  * fix(install): cache json exports of JSR packages
  * fix(upgrade): stop running `deno lsp` processes on windows before attempting to replace executable
  * fix(check): ignore resolving `jsxImportSource` when jsx is not used in graph
  * fix(install): regression - do not panic when config file contains \r\n newlines
  * feat(lsp): &quot;typescript.preferences.preferTypeOnlyAutoImports&quot; setting
</comment>
    <requestid>1220004</requestid>
  </revision>
  <revision rev="53" vrev="2">
    <srcmd5>6682519fd184c8313f3d87d3c4c85591</srcmd5>
    <version>2.0.4</version>
    <time>1730756561</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1220553</requestid>
  </revision>
  <revision rev="54" vrev="1">
    <srcmd5>c00e1acace342387a3c041a487d2bac8</srcmd5>
    <version>2.0.5</version>
    <time>1731063632</time>
    <user>anag+factory</user>
    <comment>- Update to version 2.0.5:
  * fix: panic_hook hangs without procfs
  * chore: deprecate run itests
  * fix(install): handle invalid function error, and fallback to junctions regardless of the error
  * fix: op_run_microtasks crash
  * fix(add): better error message when adding package that only has pre-release versions
  * chore: fix serve_watch_all test
  * ci: use self-hosted mac arm runner for building on tags
  * fix(workspace): support wildcard packages
  * fix(ext/node): add `findSourceMap` to the default export of `node:module`
  * fix(fmt): do not panic for jsx ignore container followed by jsx text
  * fix(lsp): scope attribution for lazily loaded assets
  * fix(types): missing `import` permission on `PermissionOptionsObject`
  * fix(fmt): ignore file directive for YAML files
  * refactor(runtime/permissions): use concrete error types
  * chore: update dlint to v0.68.0 for internal
  * perf(lsp): don't walk coverage directory
  * fix(add): only add npm deps to package.json if it's at least as close as deno.json
  * fix: improved support for cjs and cts modules
  * chore: upgrade to rust 1.82 and LLVM 19
  * fix(cli): set `npm_config_user_agent` when running npm packages or tasks
  * fix(node): Implement `os.userInfo` properly, add missing `toPrimitive`
  * fix(ext/node): resolve exports even if parent module filename isn't present
  * fix(ext/node): convert errors from `fs.readFile/fs.readFileSync` to node format
  * fix: surface package.json location on dep parse failure
  * fix(coverage): exclude comment lines from coverage reports
  * fix(fmt): fix several HTML and components issues
  * fix(lsp): include unstable features from editor settings
  * fix: clamp smi in fast calls by default
  * fix: remove permission check in op_require_node_module_paths
  * fix(ext/node): return `this` from `http.Server.ref/unref()`
  * fix(serve): support serve hmr
  * docs(console): Update docstrings for install and uninstall
- Experiment with vendoring cargo home registry. See the documentation at
  https://github.com/openSUSE-Rust/obs-service-cargo/blob/master/README.md#cargo-vendor-home-registry
- Make source and vendor tarballs reproducible.
</comment>
    <requestid>1222601</requestid>
  </revision>
  <revision rev="55" vrev="1">
    <srcmd5>f203ae240fa05276d957f1ed2a9afd5b</srcmd5>
    <version>2.0.6</version>
    <time>1731329190</time>
    <user>dimstar_suse</user>
    <comment>- Update vendored dependencies with patch ./zeromq-update.patch
  * this fixes build where zeromq is not compatible with the new 'static
    types from futures-util
- Fix aarch64 builds with ./deno-v8-arm.patch
- Replace ./rusty_v8-0.106.0.tar.gz with ./rusty_v8-0.106.0.tar.zst
- Fix ./compiler-rt-adjust-paths.patch
  * Update ./compiler-rt-adjust-paths.patch for clang19 pathing.
- Add back registry.tar.zst.
- Do not depend on rusty_v8 from openSUSE:Factory.
  * deno has changed how they ship the v8 crate.
  * will request a deletion to v8 from openSUSE:Factory.
  * removing it from BuildRequires
- Apply patch directly to vendored v8 with ./compiler-rt-adjust-paths.patch.
- Update to version 2.0.6:
  * Revert &quot;perf(upgrade): cache downloaded binaries in DENO_DIR&quot;
  * perf(upgrade): cache downloaded binaries in DENO_DIR
  * fix: performance.timeOrigin
  * fix(install): cache jsr deps from all workspace config files
  * feat(ext/http): abort event when request is cancelled
  * fix(ext/cache): don't panic when creating cache
  * chore: make commandWithCwdIsAsync test less flaky
  * feat(ext/http): abort signal when request is cancelled
  * chore: serve node headers from a test server to fix flaky `node-gyp` test
  * refactor: use concrete error type for remaining ops
  * refactor(ext/net): Use hickory dns instead of unmaintained trust-dns
  * fix(node:zlib): gzip &amp; gzipSync should accept ArrayBuffer
  * fix(ext/node): better inspector support
  * fix(fmt): don't use self-closing tags in HTML
  * feat(lsp): auto-import completions from byonm dependencies

</comment>
    <requestid>1223264</requestid>
  </revision>
  <revision rev="56" vrev="1">
    <srcmd5>298631e6e0a858161238b17b6267263c</srcmd5>
    <version>2.1.1</version>
    <time>1732442650</time>
    <user>anag+factory</user>
    <comment>- Update to version 2.1.1:
  * docs(cli/add): add clarification to add command
  * fix(node): regression where ts files were sometimes resolved instead of js
  * chore: update url + idna
  * fix(watch): don't panic if there's no path provided
  * fix: Buffer global in --unstable-node-globals
  * fix(cli): Fix typo in doc subcommand help output
  * fix(task): ensure root config always looks up dependencies in root
- Remove zeromq-update.patch
- Update to version 2.1.0:
  * docs: fix casing of Wasm
  * feat(init): add --npm flag to initialize npm projects
  * feat(task): workspace support with --filter and --recursive
  * feat(permission): support suffix wildcards in `--allow-env` flag
  * feat: subcommand to view and update outdated dependencies
  * chore: use forked sqlformat-rs
  * feat: permission stack traces in ops
  * feat(lint): Add checked files list to the JSON outpu
  * fix(fmt): formatting of .svelte files
  * feat(task): add --eval flag
  * fix(publish): improve error message when missing exports
  * feat(info): show location for Web Cache
  * fix(lockfile): track dependencies specified in TypeScript compiler options
  * feat(publish): add `--set-version &lt;version&gt;` flag
  * feat: Wasm module support
  * feat(compile): ability to embed directory in executable
  * feat(compile): ability to embed local data files
  * feat(fmt): support SQL
  * refactor: update deno_doc, use prismjs, remove internal reference html generation logic
  * fix(node): handle resolving &quot;.//&lt;something&gt;&quot; in npm packages
  * feat(task): dependencies
  * feat(ext/node): perf_hooks.monitorEventLoopDelay()
  * feat(ext/fetch): Make fetch client parameters configurable
  * feat(ext/http): Make http server parameters configurable
  * fix(node/crypto): support promisify on generateKeyPair
  * feat(runtime): remove public OTEL trace API
  * feat: fmt and lint respect .gitignore file
  * fix(lsp): ignore editor indent settings if deno.json is present
  * perf(windows): delay load webgpu and some other dlls
  * perf(compile): code cache
  * chore: temporarily disable dns tests for Node compat
  * feat(cli): support multiple env file argument
  * chore: Make ext/net/tcp.rs public
  * fix(ext/webgpu): Create GPUQuerySet converter before usage 
  * chore: reenable some tests disabled during Deno 1-&gt;2 migration
  * fix(ext/node): increase tolerance for interval test
  * feat(jupyter): Add `Deno.jupyter.image` API
  * fix(ext/node): New async setInterval function to improve the nodejs compatibility
  * feat(watch): log which file changed on HMR or watch change
  * fix(ext/cache): gracefully error when cache creation failed
  * fix(cli): show prefix hint when installing a package globally
  * feat(task): support object notation, remove support for JSDocs
  * refactor: use boxed_error in some places
  * fix: update message for unsupported schemes with npm and jsr
  * feat(fetch): accept async iterables for body
  * feat(lsp): auto-imports with @deno-types directives
  * feat(ext/fetch): allow embedders to use `hickory_dns_resolver` instead of default `GaiResolver`
  * perf: use available system memory for v8 isolate memory limit
  * chore: remove some unused tests
  * refactor(resolver): move more resolution code into deno_resolver
  * feat(cli): add `--unstable-node-globals` flag
  * fix: otel resiliency
  * chore: upgrade runtimelib (jupyter) to 0.19
  * fix(cli): preserve comments in doc tests
  * fix(fmt): error instead of panic on unstable format
  * feat(node): stabilize detecting if CJS via `&quot;type&quot;: &quot;commonjs&quot;` in a package.json
  * fix(ext/node): zlib.crc32()
  * fix(ext/node): use ERR_NOT_IMPLEMENTED for notImplemented
  * chore: update denokv_*
  * feat: upgrade V8 to 13.0
  * feat: OpenTelemetry Tracing API and Exporting
  * feat(ext/fs): add ctime to Deno.stats and use it in node compat layer
  * fix(ext/node): process.getBuiltinModule
  * fix(permissions): say to use --allow-run instead of --allow-all
  * chore:  make fields public on `PermissionDeniedError` and `deno_kv::KvConfig`
  * fix(install): re-setup bin entries after running lifecycle scripts
  * chore: update zeromq to 0.4.1
  * fix(ext/node): handle `--allow-sys=inspector`
  * fix(lsp): skip code action edits that can't be converted
  * fix(ext/websocket): initialize `error` attribute of WebSocket ErrorEvent
  * fix(ext/node): add autoSelectFamily option to net.createConnection
  * fix(ext/http): prefer brotli for `accept-encoding: gzip, deflate, br, zstd`
  * test(ext/node): prevent running the same test cases twice
  * fix(ext/webstorage): use error class for sqlite error case
  * chore: forward v2.0.6 release commit to main
  * Revert &quot;perf(upgrade): cache downloaded binaries in DENO_DIR&quot;
  * perf(upgrade): cache downloaded binaries in DENO_DIR
  * fix: performance.timeOrigin
  * fix(install): cache jsr deps from all workspace config files
  * feat(ext/http): abort event when request is cancelled
  * fix(ext/cache): don't panic when creating cache
  * chore: make commandWithCwdIsAsync test less flaky
  * feat(ext/http): abort signal when request is cancelled
  * chore: serve node headers from a test server to fix flaky `node-gyp` test
  * refactor: use concrete error type for remaining ops
  * refactor(ext/net): Use hickory dns instead of unmaintained trust-dns
  * fix(node:zlib): gzip &amp; gzipSync should accept ArrayBuffer
  * fix(ext/node): better inspector support
  * fix(fmt): don't use self-closing tags in HTML
  * feat(lsp): auto-import completions from byonm dependencies
  * chore: forward v2.0.5 release commit to main
  * chore: upgrade publish workflow to ubuntu 24
  * fix: panic_hook hangs without procfs
  * chore: deprecate run itests
  * fix(install): handle invalid function error, and fallback to junctions regardless of the error
  * fix: op_run_microtasks crash
  * fix(add): better error message when adding package that only has pre-release versions
  * chore: fix serve_watch_all test
  * ci: use self-hosted mac arm runner for building on tags
  * fix(workspace): support wildcard packages
  * fix(ext/node): add `findSourceMap` to the default export of `node:module`
  * fix(fmt): do not panic for jsx ignore container followed by jsx text
  * fix(lsp): scope attribution for lazily loaded assets
  * fix(types): missing `import` permission on `PermissionOptionsObject`
  * fix(fmt): ignore file directive for YAML files
  * refactor(runtime/permissions): use concrete error types
  * chore: update dlint to v0.68.0 for internal
  * perf(lsp): don't walk coverage directory
  * fix(add): only add npm deps to package.json if it's at least as close as deno.json
  * fix: improved support for cjs and cts modules
  * chore: upgrade to rust 1.82 and LLVM 19
  * fix(cli): set `npm_config_user_agent` when running npm packages or tasks
  * fix(node): Implement `os.userInfo` properly, add missing `toPrimitive`
  * fix(ext/node): resolve exports even if parent module filename isn't present
  * fix(ext/node): convert errors from `fs.readFile/fs.readFileSync` to node format
  * fix: surface package.json location on dep parse failure
  * fix(coverage): exclude comment lines from coverage reports
  * fix(fmt): fix several HTML and components issues
  * fix(lsp): include unstable features from editor settings
  * fix: clamp smi in fast calls by default
  * fix: remove permission check in op_require_node_module_paths
  * fix(ext/node): return `this` from `http.Server.ref/unref()`
  * fix(serve): support serve hmr
  * docs(console): Update docstrings for install and uninstall
  * chore: forward v2.0.4 release commit to main
  * fix(install): percent encodings in interactive progress bar
  * fix: support watch flag to enable watching other files than the main module on serve subcommand
  * Revert &quot;fix(ext/node): fix dns.lookup result ordering&quot;
  * fix(ext/napi): export dynamic symbols list for {Free,Open}BSD
  * fix(ext/node): compatibility with {Free,Open}BSD
  * refactor(init): inline routing in deno init --serve template
  * Revert &quot;fix(ext/node): use primordials in `ext/node/polyfills/https.ts`&quot;
  * fix: provide hints in terminal errors for Node.js globals
  * fix(check): expose more globals from @types/node
  * fix: report exceptions from nextTick
  * fix(compile): regression handling redirects
  * fix(npm): match npm bearer token generation
  * fix: do not panic when failing to write to http cache
  * fix(ext/node): add path to `fs.stat` and `fs.statSync` error
  * fix(watch): don't panic on invalid file specifiers
  * docs(readme): Add winget instructions
  * fix(cli): Make --watcher CLEAR_SCREEN clear scrollback buffer as well as visible screen
  * fix(ext/node): use primordials in ext\node\polyfills\internal\crypto\_randomInt.ts
  * perf: pass transpiled module to deno_core as known string
  * fix(lsp): make missing import action fix infallible
  * fix(install): cache json exports of JSR packages
  * fix(upgrade): stop running `deno lsp` processes on windows before attempting to replace executable
  * fix(check): ignore resolving `jsxImportSource` when jsx is not used in graph
  * fix(install): regression - do not panic when config file contains \r\n newlines
  * feat(lsp): &quot;typescript.preferences.preferTypeOnlyAutoImports&quot; setting
  * chore: forward v2.0.3 commit to main
  * build: use 'fs' feature of 'nix' crate in ext/fs
  * fix(install): don't cache json exports of JSR packages (for now)
  * chore: remove print debugging from test server
  * fix(ext/node): refactor http.ServerResponse into function class
  * bench: remove http benchmarks
  * fix: add 'fmt-component' to unstable features in schema file
  * perf(compile): pass module source data from binary directly to v8
  * fix(fmt): --ext flag requires to pass files
  * fix: `.npmrc` settings not being passed to install/add command
  * refactor(ext/node): use concrete error types
  * Revert &quot;fix(runtime): send ws ping frames from inspector server (#263…
  * fix(config): schemas for lint rule and tag autocompletion
  * fix(node/util): support array formats in `styleText`
  * feat: support node-api in denort
  * fix(ext/node): cancel pending ipc writes on channel close
  * fix(ext/node): only set our end of child process pipe to nonblocking mode
  * fix(ext/ffi): return u64/i64 as bigints from nonblocking ffi calls
  * fix(install): cache all exports of JSR packages listed in `deno.json`
  * fix(install): cache type only module deps in `deno install`
  * fix(node:tls): set TLSSocket.alpnProtocol for client connections
  * fix: share inotify fd across watchers
  * fix(ext/node): map `ERROR_INVALID_NAME` to `ENOENT` on windows
  * fix(check): support `--frozen` on deno check
  * refactor: add 'docs' suggestion
  * fix(cli): increase size of blocking task threadpool on windows
  * fix: unpin tokio version
  * fix(fmt): upgrade formatters
  * fix(ext/console): ignore casing for named colors in css parsing
  * refactor(runtime/ops): use concrete error types
  * fix(install): update lockfile when using package.json
  * fix(lsp): import-map-remap quickfix for type imports
  * fix(npm): support version ranges with &amp;&amp; or comma
  * fix(install): better json editing
  * feat(lsp): interactive inlay hints
  * fix(ext/node): use primordials in `ext/node/polyfills/https.ts`
  * chore: update nix crate
  * chore: update release doc template
  * perf: avoid multiple calls to runMicrotask
  * refactor(ext/webgpu): use concrete error type
  * refactor(ext/fetch): use concrete error types
  * Revert &quot;ci: use self-hosted mac arm runner&quot;
  * refactor(ext/http): use concrete error types
  * refactor(ext/crypto): use concrete error types
  * ci: use self-hosted mac arm runner
  * fix(ext/node): stub HTTPParser internal binding
  * fix(info): resolve workspace member mappings
  * refactor(ext/websocket): use concrete error type
  * fix(npm): ensure scoped package name is encoded in URLs
  * fix(ext/node): properly map reparse point error in readlink
  * refactor(ext/fs): use concrete error types
  * fix(help): missing package specifier
  * chore: forward v2.0.2 release commit to main
  * fix(ext/node): add null check for kStreamBaseField
  * fix(jupyter): fix panics for overslow subtraction
  * fix(install): don't attempt to cache specifiers that point to directories
  * chore: fix flaky COPYFILE_EXCL test
  * refactor(ext/napi): use concrete error types
  * fix(node/fs): copyFile with `COPYFILE_EXCL` should not throw if the destination doesn't exist
  * refactor(ext/web): use concrete error types
  * feat(permissions): expose PromptResponse
  * refactor(ext/kv): use concrete error type
  * refactor(ext/net): use concrete error type
  * feat(permissions): expose PermissionPrompter and set_prompter function
  * fix(runtime): send ws ping frames from inspector server
  * fix(jupyter): update to the new logo
  * refactor: use macros for signal table
  * fix(cli): set napi object property properly
  * fix(net): don't try to set nodelay on upgrade streams
  * fix: don't warn on ignored signals on windows
  * fix(node/http): normalize header names in `ServerResponse` (#26339)
- Update all dependencies
  * Seems not all deps have migrated to 1.82 of rust :)
- Precisely update only one crate dependency for registry.tar.zst
- Remove deno-v8-arm.patch
- Update specfile and sources
  * remove compiler-rt-adjust-paths.patch
  * remove rusty_v8-0.106.0.tar.zst
  * revert back to old build logic we have before in deno.spec
  * revert back _service to old service file
- Use gcc for non-tumbleweed images. This will not work all the time.
- Remove command to remove config.toml in specfile
</comment>
    <requestid>1225702</requestid>
  </revision>
  <revision rev="57" vrev="1">
    <srcmd5>db533481d287e8e2f213c58772b1efd6</srcmd5>
    <version>2.1.2</version>
    <time>1732969883</time>
    <user>anag+factory</user>
    <comment>- Update to version 2.1.2:
  * fix(node/timers): error when passing id to clearTimeout/clearInterval
  * fix(init): support scoped npm packages
  * fix: support bun specifiers in JSR publish
  * fix(ext/node): `tls.connect` socket upgrades
  * perf(compile): read embedded files as static references when UTF-8 and reading as strings
  * fix(info): resolve bare specifier pointing to workspace member
  * fix(ext/webgpu): use correct variable name
  * chore: fix lint step due to node compat test changes
  * fix(node/http): casing ignored in ServerResponse.hasHeader()
  * fix(task): strip ansi codes and control chars when printing tasks
  * test(ext/node): enable parallel/test-fs-promises-file-handle-stat.js
  * feat(unstable): repurpose `--unstable-detect-cjs` to attempt loading more modules as cjs
  * perf(ext/webstorage): use object wrap for `Storage`
  * fix(tools/doc): HTML resolve main entrypoint from config file 
  * fix(node/fs): add missing stat path argument validation
  * chore(lint): add .out file reference checker
  * fix(task): handle carriage return in task description
  * chore: fix flaky `specs::publish::npm_workspace_jsr_pkg_with_npm_dep::dep_and_workspace_dep`
  * fix(install): don't re-set up node_modules if running lifecycle script
  * fix(streams): reject `string` in `ReadableStream.from` type
  * fix(node): correct resolution of dynamic import of esm from cjs
  * fix(ext/webgpu): normalize limits to number
  * fix(ext/fetch): don't throw when `bodyUsed` inspect after upgrade
  * chore(compile): prefer denort binary in target/ directory when available
  * chore(node/tests): increase tolerance of timers test on CI
  * chore: update node_compat setup script, show remaining percentage
  * docs(cli): remove redundant word in comment
  * refactor(unstable): move telemetry to own ext
  * fix(lsp): support task object notation for tasks request
  * fix(task): handle multiline descriptions properly
  * fix(check): support jsdoc `@import` tag
  * fix(compile): do not error embedding same symlink via multiple methods
  * fix(runtime/ops): Fix watchfs remove event
  * feat(unstable): Instrument fetch
  * chore: upgrade sqlformat-rs to non-forked version
  * fix(init): always force managed node modules
  * fix(compile): handle TypeScript file included as asset
  * chore: update node_compat setup script
  * feat: Instrument Deno.serve
  * fix(ext/node): add `fs.promises.fstat` and `FileHandle#stat`
  * fix(lsp): wasm file import completions
  * chore: update to file_test_runner 0.7.3
  * fix(fmt): return `None` if sql fmt result is the same
  * fix(lsp): remove stray debug output
  * fix(node/fs): missing uv error context for readFile
  * fix(compile): correct buffered reading of assets and files
  * chore(check): add test for Wasm memory and table
  * fix: support non-function exports in Wasm modules
  * chore(compile): log code cache file path
  * fix(ext/websocket): don't throw exception when sending to closed socket
</comment>
    <requestid>1227361</requestid>
  </revision>
  <revision rev="58" vrev="1">
    <srcmd5>cd5fb21b25d3351b5fc38682faca0dfa</srcmd5>
    <version>2.1.3</version>
    <time>1733654281</time>
    <user>anag+factory</user>
    <comment>- Update to version 2.1.3:
  * fix(install): use locked version of jsr package when fetching exports
  * fix(task): `--recursive` option not working
  * fix: clear dep analysis when module loading is done
  * test(ext/node): fix flaky node/http2.createServer() test
  * chore: update hickory dns crates
  * fix(unstable/temporal): respect locale in `Duration.prototype.toLocaleString`
  * fix(node/worker_threads): data url not encoded properly with eval
  * refactor: remove usages of `deno_core::resolve_import` for resolving redirects
  * fix(outdated): allow `--latest` without `--update`
  * fix(task): kill descendants when killing task process on Windows
  * fix: improve auto-imports for npm packages
  * fix(unstable): otel context with multiple keys
  * fix(task): don't panic with filter on missing task argument
  * test: add node compat test cases
  * test(ext/node): reduce race condition in test case
  * refactor: remove `CliNpmRegistryApi`
  * fix(task): only pass args to root task
  * fix(node/fs): support `recursive` option in readdir
  * refactor(ext/web): align error messages
  * refactor: add deno_npm_cache crate
  * chore: fix cjs_with_deps test to use a temp dir
  * fix(fmt): stable formatting of HTML files with JS
  * chore: upgrade deno_lint to 0.68.2
  * feat(unstable): add metrics to otel
  * refactor: upgrade to deno_npm 0.26
  * chore: export variables from node compat tools script
  * fix: support `workspace:^` and `workspace:~` version constraints
  * fix(task): forward signals to spawned sub-processes on unix
  * refactor(ext/fs): align error messages
</comment>
    <requestid>1229052</requestid>
  </revision>
  <revision rev="59" vrev="1">
    <srcmd5>ffed643c0e71d0082316a476965bf230</srcmd5>
    <version>2.1.4</version>
    <time>1734372669</time>
    <user>anag+factory</user>
    <comment>- Update to version 2.1.4:
  * feat(unstable): support caching npm dependencies only as they're needed
  * refactor(lint): manage schema files for linter in Deno repo
  * fix(outdated): error when there are no config files
  * chore(tests): Deprecate remaining usages of itest in check tests
  * fix(lint): do not error providing --allow-import
  * fix(outdated): respect --quiet flag for hints
  * perf(compile): improve FileBackedVfsFile
  * fix: replace the @deno-types with @ts-types
  * fix(outdated): show a suggestion for updating
  * fix(compile): correct read length for transpiled typescript files
  * chore: reduce allocations in a few places
  * fix(unstable): don't unwrap optional state in otel
  * fix: do not error when subpath has an @ symbol
  * fix(node): update list of builtin node modules, add missing export to _http_common
  * fix(ext/node): handle Float16Array in node:v8 module
  * refactor: Make `deno_runtime::shared` module public
  * fix(task): do not always kill child on ctrl+c on windows
  * fix: do not panic when fetching invalid file url on Windows
  * test(ext/node): remove flaky node:dgram compat test case
  * fix(ext/node): accept file descriptor in fs.readFile(Sync)
  * chore: add script to check remaining node compat cases
</comment>
    <requestid>1231178</requestid>
  </revision>
  <revision rev="60" vrev="1">
    <srcmd5>d8c86a99e87d463b75168d2125937292</srcmd5>
    <version>2.1.5</version>
    <time>1736959485</time>
    <user>anag+factory</user>
    <comment>- Update rusty v8 requirement to 130.0.7
- Update to version 2.1.5:
  * docs: added jsdoc for window.close()
  * refactor(npm): move `InNpmPackageChecker` code to deno_resolver
  * fix(lsp): use verbatim specifier for URL auto-imports
  * refactor(npm): extract out some npm fs resolution code from the cli
  * refactor(npm): split some resolution from installation
  * refactor: update deno_core for error refactor
  * fix(ext/net): update moka cache to avoid potential panic in `Deno.resolveDns` on some laptops with Ryzen CPU
  * fix(jsr): Wasm imports fail to load
  * fix(ext/node): Fix `os.cpus()` on Linux
  * fix(ext/websocket): Fix close code without reason
  * fix(ext/node): have `process` global available in Node context
  * fix(lint): fix single char selectors being ignored
  * fix(no-slow-types): handle rest param with internal assignments
  * fix(lsp): don't skip dirs with enabled subdirs
  * feat(node/fs): Add a chmod method to the FileHandle class
  * Revert &quot;perf: build denort with panic = &quot;abort&quot; for releases&quot;
  * refactor: make `IncrementalCache` accept a `CacheDBHash`
  * test(ext/node): disable flaky dgram tests
  * feat(unstable): no config npm:@opentelemetry/api integration
  * refactor(quic): introduce endpoint, 0rtt, cleanup
  * feat(unstable): replace SpanExporter with TracerProvider
  * fix(ext/http): improve error message when underlying resource of request body unavailable
  * fix(kv): improve backoff error message and inline documentation
  * fix(check): move module not found errors to typescript diagnostics
  * fix(check): line-break between diagnostic message chain entries
  * refactor: Use 'await using' in serve_test
  * fix(permissions): implicit `--allow-import` when using `--cached-only`
  * refactor: remove use of home crate
  * refactor: update some fs_util functions to use sys_traits
  * refactor(node/npm): separate out permission check from npm resolvers
  * fix(lsp): css preprocessor formatting
  * fix(npm): deterministically output tags to initialized file
  * perf: build denort with `panic = &quot;abort&quot;` for releases
  * chore: cargo fmt - turn on group_imports=StdExternalCrate
  * perf(fs/windows): stat - only open file once
  * refactor: do not use `deno_fs::FileSystem` everywhere
  * fix(ext/node): support private key export in JWK format
  * fix(node): Add missing `inspector/promises`
  * chore(lint): remove manual AST field counter
  * refactor: use sys_traits
  * perf(node/fs/copy): reduce metadata lookups copying directory
  * fix(ext/node): convert brotli chunks with proper byte offset
  * fix(unstable): don't error on non-existing attrs or type attr
  * fix(ext/node): add support of any length IV for aes-(128|256)-gcm ciphers
  * fix(ext/node): RangeError timingSafeEqual with different byteLength
  * feat(unstable): add OTEL MeterProvider
  * fix(ext/node): make getCiphers return supported ciphers
  * fix: incorrect memory info free/available bytes on mac
  * feat(unstable): support selectors in JS lint plugins
  * fix(ext/fetch): better error message when body resource is unavailable
  * fix(ext/fs): do not throw for bigint ctime/mtime/atime
  * fix(node): handle cjs exports with escaped chars
  * feat(unstable): add JS linting plugin infrastructure
  * perf: remove now needless canonicalization getting closest package.json
  * perf: upgrade to deno_semver 0.7
  * perf: don't store duplicate info for ops in the snapshot
  * feat(unstable): Implement QUIC
  * fix(ext/node): add `truncate` method to the `FileHandle` class
  * fix(lsp): rewrite imports for 'Move to a new file' action
  * fix(publish): infer literal types in const contexts
  * fix(task): support tasks without commands
  * fix(compile): be more deterministic when compiling the same code in different directories
  * fix(ext/node): do not exit worker thread when there is pending async op
  * chore: release ext/ crates
  * fix(ext/node): Fix `fs.access`/`fs.promises.access` with `X_OK` mode parameter on Windows
  * fix(ext/fetch): retry some http/2 errors
  * chore: upgrade libc
  * fix(ext/node): sort list of built-in modules alphabetically
  * fix(task): properly handle task name wildcards with --recursive
  * fix(outdated): ensure &quot;Latest&quot; version is greater than &quot;Update&quot; version
  * fix(lsp): include &quot;node:&quot; prefix for node builtin auto-imports
  * fix: deno_resolver crate without 'sync' feature
  * chore: release &quot;deno_*&quot; crates
  * feat(permission): separate PermissionDeniedError to Retryable and Fatal
  * refactor(lint): renames and code flattening
  * refactor: use capacity_builder for writing deno compile data section
  * refactor: extract out `FileFetcher` to `deno_cache_dir`
  * fix(lsp): respect &quot;typescript.suggestionActions.enabled&quot; setting
  * fix: upgrade deno_doc to 0.161.3
  * fix(compile): display embedded file sizes and total
  * fix: FastString v8_string() should error when cannot allocated
  * refactor: add 'sync' feature to deno_resolver crate
  * fix(outdated): support updating dependencies in external import maps
  * fix(lockfile): include dependencies listed in external import map in lockfile
  * fix(lsp): sql and component file formatting
  * chore: bump hyper-util to 0.1.10
  * Revert &quot;ci: use self-hosted mac arm runner only on main branch&quot;
  * feat(ext/web): add `[[ErrorData]]` slot to `DOMException`
  * fix(ext/node): support createConnection option in node:http.request()
  * chore: mark ./tools/release/npm/build.ts as executable
  * fix(npm): search node_modules folder for package matching npm specifier
  * chore: add npm distribution at `deno` package
  * fix(compile): analyze modules in directory specified in --include
  * refactor(unstable): otel configuration
  * fix(compile): output contents of embedded file system
</comment>
    <requestid>1238023</requestid>
  </revision>
  <revision rev="61" vrev="1">
    <srcmd5>bdf62062cbf43f00f5f1911a07170997</srcmd5>
    <version>2.1.6</version>
    <time>1737319732</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.1.6:
  * fix(outdated): Use `latest` tag even when it's the same as the current version (#27699)
  * fix(outdated): retain strict semver specifier when updating (#27701)
  * fix(check/lsp): fix bugs with tsc type resolution, allow npm packages to augment `ImportMeta` (#27690)
  * fix(ext/console): change Temporal color (#27684)
  * docs: adding jsdocs info for console interface (#27666)
  * docs: JSDocs examples for prompt, confirm, and alert (#27695)
  * docs:Adds examples in JSDocs for localStorage and sessionStorage (#27668)
  * chore: add missing internal `core_import_map` file paths (#27691)
  * fix(check/lsp): correctly resolve compilerOptions.types (#27686)
  * refactor: create deno_lib crate (#27673)
  * fix(ext/node): add chown method to FileHandle class (#27638)
  * refactor: add 'deno_os' crate (#27655)
  * fix(ext/node): fix playwright http client (#27662)
  * refactor: move `CliNpmResolver` to `deno_resolver::npm::NpmResolver` (#27659)
  * feat(unstable): refactor js lint plugin AST (#27615)
  * refactor: deno_config 0.45 (#27660)
  * fix(node/fs): add utimes method to the FileHandle class (#27582)
  * fix(ext/node): add `writev` method to `FileHandle` (#27563)
  * fix(compile/windows): better handling of deno_dir on different drive letter than code (#27654)
  * refactor: create `NpmInstaller` (#27626)
  * fix(node): Prevent node:child_process from always inheriting the parent environment (#27343) (#27340)
  * fix(compile): store embedded fs case sensitivity (#27653)
  * refactor(node_resolver): make conditions_from_resolution_mode configurable (#27596)
  * fix(lsp): handle pathless untitled URIs (#27637)
  * fix(ext/node): apply `@npmcli/agent` workaround to `npm-check-updates` (#27639)
  * fix(lsp/check): don't resolve unknown media types to a `.js` extension (#27631)
  * fix(regression): show bare-node-builtin hint when using an import map (#27632)
  * refactor: remove `CliNpmReqResolver` trait in deno_resolver (#27616)
  * fix(ext/node): use primordials in `ext/node/polyfills/_fs_common.ts` (#27589)
  * refactor: implement `NpmPackageFolderResolver` in deno_resolver (#27614)
  * refactor(npm): move `SloppyImportsCachedFs` to deno_resolver (#27610)
</comment>
    <requestid>1238679</requestid>
  </revision>
  <revision rev="62" vrev="1">
    <srcmd5>7bc38bdc56b7d737aff4bcc8f3831221</srcmd5>
    <version>2.1.7</version>
    <time>1738007635</time>
    <user>anag+factory</user>
    <comment>- Update to version 2.1.7:
  * fix: use serde feature for log crate in cli/lib
  * fix(ext/node): add FileHandle#sync
  * fix(deps): update yanked crates
  * fix(install/global): remove importMap field from specified config file
  * fix(ext/os): pass SignalState to web worker
  * fix(ext/node): GCM auth tag check on DechiperIv#final
  * docs(readme): update redirected links
  * perf(compile): remove swc from denort</comment>
    <requestid>1240358</requestid>
  </revision>
  <revision rev="63" vrev="1">
    <srcmd5>678aaf89842a48dfd0758bef9bf18e58</srcmd5>
    <version>2.1.9</version>
    <time>1738615440</time>
    <user>anag+factory</user>
    <comment>- Update to version 2.1.9:
  * perf(crypto): use ring for asm implementations of sha256/sha512
  * fix(ext/node): add http information support
  * fix(core): Fix `create_stack_trace` from empty trace
  * fix(lsp): ignore errors on ambient module imports
  * fix(init): correct dev task for --lib
  * fix(ext/node): implement `crypto.hash`
  * fix(check): better handling of TypeScript in npm packages for type checking
  * docs: jsdocs for URL web API
  * fix(check): compiler options from workspace members
  * fix(process/windows): correct command resolution when PATH env var not uppercase
  * fix(npmrc): merge `.npmrc` in user's homedir and project
  * fix(ext/node): clear tz cache when setting process.env.TZ
  * fix(ext/crypto): fix jwk key_ops validation
  * fix(ext/node): implement `aes-128-ctr`, `aes-192-ctr`, and `aes-256-ctr`
  * fix(ext/node): do not apply socket-init-workaround to ipc socket
  * chore: remove unused npm package fixtures
  * perf(node_resolver): reduce url to/from path conversions
  * fix(install/global): warn about not including auto-discovered config file
  * fix(ext/crypto): export private x25519 JWK key
  * chore: fix deno_resolver non-sync build
  * fix(ext/node): implement X509Certificate#checkHost
  * fix(ext/node): fix panic when invalid AES GCM key size
  * fix(ext/node): fix async variant of brotliDecompress
  * chore(ext/node): remove internal/streams/buffer_list.mjs
  * fix(ext/node): scrypt panic when `log_n` &gt; 64
  * fix(core): handle dyn imports exceeding call stack size
  * fix(ext/node): npm:mqtt compatibility
  * fix(ext/fetch): update h2 to fix sending a PROTOCOL_ERROR instead of REFUSED_STREAM when receiving oversized headers
  * perf(lsp): cache completion item resolution during request
  * chore: remove LSP global symbols count tests
  * fix(node): align type stripping in node_modules error message with Node
  * fix(types): `Deno.readDirSync`'s type returns an `IteratorObject`
  * refactor: make PackageJsonCache injectable
  * chore: update ensure_registry_files_local to handle scoped packages
  * refactor(tsc): remove TS program creation during snapshotting
  * chore: trim registry.json files in tests/registry/npm
  * refactor(node_resolver): remove some allocations and lookups
  * refactor: add `WorkspaceFactory` and `ResolverFactory`
  * fix: do not log cache creation failure on readonly file system
  * fix(publish): unfurl sloppy imports in d.ts files and type imports
  * refactor(tsc): split TS compiler into multiple files, use ESM
  * refactor: use DataUrl from deno_media_type
  * chore: fix hmr build
  * fix(lsp): silence debug error for 'move to a new file' action
  * fix(ext/node): reference error in zlib.crc32
  * feat(unstable): support https otlp endpoints
  * perf: full LTO in sysroot
  * fix(ext/node): fix formatting of debug logs
  * chore: note in flags output that unstable is deprecated
</comment>
    <requestid>1242202</requestid>
  </revision>
  <revision rev="64" vrev="1">
    <srcmd5>f621bc8e772bd583b0c8fc93112518f8</srcmd5>
    <version>2.1.10</version>
    <time>1739742110</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.1.10:
  * fix: sync changes from cherry-pick PRs
  * fix: do special file permission check for `check_read_path`
  * fix: update Cargo.lock and fix changes from cherry-pick PRs
  * fix(streams): handle Resource stream error
  * docs: adding examples and a see link to Websockets jdocs
  * fix: allow creating TSC host without a snapshot
  * test: clean up node_compat test runner
  * perf(lsp): cancellation checks in blocking code
  * fix: panic with js lint plugins and invalid js syntax
  * perf(compile): use bytes already in memory after downloading executable
  * fix(compile): never include the specified output executable in itself
  * test: remove one of 'node_unit_tests::tls_test' tests
  * fix(otel): custom span start + end times are fractional ms
  * fix(ext/node): fix twitter-api-v2 compatibility
  * fix(ext/node): fix missing privateKey.x in curve25519 JWK
  * chore: fix lockfile on main
  * chore: move bench test to spec test
  * fix(ext/napi): napi_is_buffer tests for ArrayBufferView
  * fix(ext/node): handle non-ws upgrade headers
  * refactor(ext/fetch): do not share error instance
  * fix(ext/node): expose brotli stream APIs
  * perf: node resolution cache
  * refactor: extract out utf16 map from lsp to cli::util module
  * fix(lsp): ignore a few more diagnostics for ambient modules
  * fix(ext/node): set process fields on own instance
  * fix(publish): correct coloring in --help
  * fix(node): resolve module as maybe CJS when it's missing a file extension
  * fix(node): show directory import and missing extension suggestions
  * Revert &quot;fix(lsp): silence debug error for 'move to a new file' action&quot;
  * docs: Temporal plaintime docs link
  * chore: update std in test util
  * fix(cli): Fix panic in `load_native_certs`
  * fix(ext/node): support proxy http request
  * fix(ext/node): set process.env as own property
</comment>
    <requestid>1246150</requestid>
  </revision>
  <revision rev="65" vrev="1">
    <srcmd5>ffcc2822fd0fb15ff519f6c369dea537</srcmd5>
    <version>2.2.0</version>
    <time>1740170214</time>
    <user>dimstar_suse</user>
    <comment>- Deno now requires rusty_v8 version 134.4.0
- Update to version 2.2.0:
  * feat(http): add otel metrics
  * fix(check): npm resolution errors to tsc diagnostics
  * feat: support XDG_CACHE_HOME for deno dir on macos
  * feat(bench): add `warmup` and `n` for controlling number of iterations
  * fix(node/sqlite): sqlite named parameters 
  * fix: handle all values for buffers in turbocall codegen
  * fix(ext/node): implement StatementSync#iterate
  * fix(init): force --reload if npm or jsr package
  * fix(ext/node): use primordials in `ext/node/polyfills/path/common.ts`
  * perf(lsp): don't clone asset text
  * feat(jupyter): make GPUTexture and GPUBuffer displayable
  * fix(lint): don't mark plugin diagnostic as fixable, if it's not
  * fix(unstable/temporal): implement `Temporal.ZonedDateTime.getTimeZoneTransition`
  * perf(lsp): make auto-imports a little faster
  * refactor: better sys trait impls
  * chore: move tracing build to build job
  * chore: fix dts file for DefinitelyTyped linting
  * refactor: put lsp tracing behind flag
  * feat: Upgrade V8 to 13.4
  * fix(workspace): diagnostic for imports in member with importMap at root
  * fix(lint): react-rules-of-hooks works with destructuring
  * fix(unstable): align js lint context API with eslint
  * fix: cache bust http cache on lockfile integrity mismatch
  * fix(task): support --frozen flag
  * feat(unstable): add js lint plugin source code helpers
  * refactor: support hmr feature for lsp files
  * fix(completions): remove problematic character for powershell
  * fix: add hint to run with `--no-check` when type checking fails
  * chore: forward v2.1.10 release commit to main
  * perf(check): use v8 code cache for extension sources in `deno check`
  * perf(lsp): add built-in tracing support for the LSP
  * fix(lsp): include description for auto-import completions
  * fix: do special file permission check for `check_read_path`
  * refactor: object wrap WebGPU
  * refactor(lsp): remove Send + Sync requirement
  * fix(lint): `Deno.lint.runPlugin` throws in `deno run`
  * docs(cli): update description of readFile and readFileSync
  * refactor(lsp): make TS host use CLI snapshot
  * fix(streams): handle Resource stream error
  * fix(unstable): add missing rule context types
  * refactor: remove tsc snapshot
  * docs: adding examples and a see link to Websockets jdocs
  * fix: allow creating TSC host without a snapshot
  * feat(unstable): support multiple fixes from lint plugins
  * fix(ext/node): `DatabaseSync#exec` should execute batch statements
  * Revert &quot;refactor: remove tsc snapshot&quot;
  * test: clean up node_compat test runner
  * refactor: remove tsc snapshot
  * fix(lint): don't show docs URLs for plugins
  * fix(lint): disable incremental caching if JS plugins are used
  * refactor(lint): remove dead documentation
  * fix(lint): out of order diagnostics for plugins
  * perf(lsp): cancellation checks in blocking code
  * fix(lint): clear plugin diagnostics on each lint file run
  * feat(unstable): type lint plugin visitor
  * fix: panic with js lint plugins and invalid js syntax
  * perf(compile): use bytes already in memory after downloading executable
  * fix(compile): never include the specified output executable in itself
  * feat(unstable): align lint ast with TSEStree
  * feat(unstable): add lint plugin ast types
  * test: remove one of 'node_unit_tests::tls_test' tests
  * fix(otel): custom span start + end times are fractional ms
  * feat(unstable): add test for lint plugin destroy hook
  * feat(unstable): add `lint.plugins` to config schema
  * fix(ext/node): expose sqlite changeset constants
  * fix(ext/node): fix twitter-api-v2 compatibility
  * fix(ext/node): fix missing privateKey.x in curve25519 JWK
  * fix(ext/node): throw Session methods when database is closed
  * fix(ext/node): implement `DatabaseSync#applyChangeset()`
  * fix(check): support sloppy imports with &quot;compilerOptions.rootDirs&quot;
  * chore: fix lockfile on main
  * feat(lint): add JavaScript plugin support
  * chore: move bench test to spec test
  * feat(ext/canvas): enhance `createImageBitmap` specification compliance
  * feat(outdated): interactive update
  * fix(ext/node): implement SQLite Session API
  * fix(ext/napi): napi_is_buffer tests for ArrayBufferView
  * fix(ext/sqlite): add `sourceSQL` and `expandedSQL` getters
  * fix(ext/node): handle non-ws upgrade headers
  * refactor(ext/fetch): do not share error instance
  * fix(ext/node): expose brotli stream APIs
  * perf: node resolution cache
  * refactor: extract out utf16 map from lsp to cli::util module
  * fix(lsp): ignore a few more diagnostics for ambient modules
  * feat(compile): support sloppy imports
  * feat(bench): add `--permit-no-files`
  * fix(ext/node): support read-only database in `node:sqlite`
  * fix(ext/node): set process fields on own instance
  * fix(publish): correct coloring in --help
  * fix(ext/node): enforce -RW perms on `node:sqlite`
  * fix(node): resolve module as maybe CJS when it's missing a file extension
  * fix(node): show directory import and missing extension suggestions
  * fix(ext/node): throw RangeError when sqlite INTEGER is too large
  * Revert &quot;fix(lsp): silence debug error for 'move to a new file' action&quot;
  * feat: TypeScript 5.7
  * docs: Temporal plaintime docs link
  * chore: fix some broken pty tests on windows
  * chore: update std in test util
  * fix(ext/node): sqlite bind support bigint values
  * fix(cli): Fix panic in `load_native_certs`
  * fix(ext/node): support proxy http request
  * fix(ext/node): represent sqlite blob as Uint8Array
  * fix(ext/node): set process.env as own property
  * chore: forward v2.1.9 release commit to main
  * perf(crypto): use ring for asm implementations of sha256/sha512
  * chore: forward v2.1.8 release commit to main
  * feat(task): add support for task wildcards
  * fix(core): Fix `create_stack_trace` from empty trace
  * feat: implement `process.cpuUsage` (`Deno.cpuUsage`)
  * fix(lsp): ignore errors on ambient module imports
  * feat(check/lsp): support &quot;compilerOptions.rootDirs&quot;
  * fix(init): correct dev task for --lib
  * fix(ext/node): implement `crypto.hash`
  * feat(unstable): WebTransport
  * fix(check): better handling of TypeScript in npm packages for type checking
  * feat(ext/cache): support lscache
  * feat(node:http): add http information support
  * docs: jsdocs for URL web API
  * fix(check): compiler options from workspace members
  * chore: fix two locally failing on windows tests
  * fix(process/windows): correct command resolution when PATH env var not uppercase
  * fix(npmrc): merge `.npmrc` in user's homedir and project
  * feat(ext/node): implement `node:sqlite`
  * fix(ext/node): clear tz cache when setting process.env.TZ
  * fix(ext/crypto): fix jwk key_ops validation
  * fix(ext/node): implement `aes-128-ctr`, `aes-192-ctr`, and `aes-256-ctr`
  * fix(ext/node): do not apply socket-init-workaround to ipc socket
  * chore: remove unused npm package fixtures
  * perf(node_resolver): reduce url to/from path conversions
  * fix(install/global): warn about not including auto-discovered config file
  * fix(ext/crypto): export private x25519 JWK key
  * fix(lint): update jsx/react related rules and names
  * chore: fix deno_resolver non-sync build
  * feat: Deno.cwd() no longer requires --allow-read permission
  * fix(ext/node): implement X509Certificate#checkHost
  * fix(ext/node): fix panic when invalid AES GCM key size
  * fix(ext/node): fix async variant of brotliDecompress
  * chore(ext/node): remove internal/streams/buffer_list.mjs
  * fix(ext/node): scrypt panic when `log_n` &gt; 64
  * fix(core): handle dyn imports exceeding call stack size
  * fix(ext/node): npm:mqtt compatibility
  * fix(ext/fetch): update h2 to fix sending a PROTOCOL_ERROR instead of REFUSED_STREAM when receiving oversized headers
  * perf(lsp): cache completion item resolution during request
  * chore: remove LSP global symbols count tests
  * fix(node): align type stripping in node_modules error message with Node
  * fix(types): `Deno.readDirSync`'s type returns an `IteratorObject`
  * refactor: make PackageJsonCache injectable
  * chore: update ensure_registry_files_local to handle scoped packages
  * feat(lint): add rules for react/preact
  * refactor(tsc): remove TS program creation during snapshotting
  * chore: trim registry.json files in tests/registry/npm
  * refactor(node_resolver): remove some allocations and lookups
  * refactor: add `WorkspaceFactory` and `ResolverFactory`
  * feat(compile): show remote modules and metadata size when compiling
  * fix: do not log cache creation failure on readonly file system
  * fix(publish): unfurl sloppy imports in d.ts files and type imports
  * refactor(tsc): split TS compiler into multiple files, use ESM
  * feat(lint): change behavior of `--rules` flag
  * refactor: use DataUrl from deno_media_type
  * chore: fix hmr build
  * fix(lsp): silence debug error for 'move to a new file' action
  * fix(ext/node): reference error in zlib.crc32
  * feat(unstable): support https otlp endpoints
  * perf: full LTO in sysroot
  * fix(ext/node): fix formatting of debug logs
  * chore: note in flags output that unstable is deprecated
  * chore: forward v2.1.7 release commit to main
  * fix(ext/node): add FileHandle#sync
  * fix(deps): update yanked crates
  * fix(install/global): remove importMap field from specified config file
  * feat(unstable): add basic support for otel trace links
  * fix(ext/os): pass SignalState to web worker
  * fix(ext/node): GCM auth tag check on DechiperIv#final
  * docs(readme): update redirected links
  * perf(compile): remove swc from denort
  * chore: fix canary version
  * refactor: move denort to separate crate
  * refactor: update deno_core and use more concrete errors
  * fix(ext/node): tls.connect regression
  * refactor: add 'deno_process' crate
  * fix(ext/node): propagate socket error to client request object
  * chore: forward v2.1.6 release commit to main
  * fix(outdated): Use `latest` tag even when it's the same as the current version
  * fix(outdated): retain strict semver specifier when updating
  * fix(check/lsp): fix bugs with tsc type resolution, allow npm packages to augment `ImportMeta`
  * fix(ext/console): change Temporal color
  * docs: adding jsdocs info for console interface
  * docs: JSDocs examples for prompt, confirm, and alert
  * docs:Adds examples in JSDocs for localStorage and sessionStorage
  * chore: add missing internal `core_import_map` file paths
  * fix(check/lsp): correctly resolve compilerOptions.types
  * refactor: create deno_lib crate
  * fix(ext/node): add chown method to FileHandle class
  * chore: fix ci by removing remote server dependent test
  * refactor: add 'deno_os' crate
  * fix(ext/node): fix playwright http client
  * refactor: move `CliNpmResolver` to `deno_resolver::npm::NpmResolver`
  * feat(unstable): refactor js lint plugin AST
  * refactor: deno_config 0.45
  * fix(node/fs): add utimes method to the FileHandle class
  * fix(ext/node): add `writev` method to `FileHandle`
  * fix(compile/windows): better handling of deno_dir on different drive letter than code
  * refactor: create `NpmInstaller`
  * fix(node): Prevent node:child_process from always inheriting the parent environment
  * fix(compile): store embedded fs case sensitivity
  * refactor(node_resolver): make conditions_from_resolution_mode configurable
  * fix(lsp): handle pathless untitled URIs
  * fix(ext/node): apply `@npmcli/agent` workaround to `npm-check-updates`
  * fix(lsp/check): don't resolve unknown media types to a `.js` extension
  * fix(regression): show bare-node-builtin hint when using an import map
  * refactor: remove `CliNpmReqResolver` trait in deno_resolver
  * fix(ext/node): use primordials in `ext/node/polyfills/_fs_common.ts`
  * refactor: implement `NpmPackageFolderResolver` in deno_resolver
  * refactor(npm): move `SloppyImportsCachedFs` to deno_resolver
  * chore: forward v2.1.5 release commit to main
  * docs: added jsdoc for window.close()
  * refactor(npm): move `InNpmPackageChecker` code to deno_resolver
  * fix(lsp): use verbatim specifier for URL auto-imports
  * refactor(npm): extract out some npm fs resolution code from the cli
  * refactor(npm): split some resolution from installation
  * refactor: update deno_core for error refactor
  * fix(ext/net): update moka cache to avoid potential panic in `Deno.resolveDns` on some laptops with Ryzen CPU
  * fix(jsr): Wasm imports fail to load
  * fix(ext/node): Fix `os.cpus()` on Linux
  * fix(ext/websocket): Fix close code without reason
  * fix(ext/node): have `process` global available in Node context
  * fix(lint): fix single char selectors being ignored
  * fix(no-slow-types): handle rest param with internal assignments
  * fix(lsp): don't skip dirs with enabled subdirs
  * feat(node/fs): Add a chmod method to the FileHandle class
  * Revert &quot;perf: build denort with panic = &quot;abort&quot; for releases&quot;
  * refactor: make `IncrementalCache` accept a `CacheDBHash`
  * test(ext/node): disable flaky dgram tests
  * feat(unstable): no config npm:@opentelemetry/api integration
  * refactor(quic): introduce endpoint, 0rtt, cleanup
  * feat(unstable): replace SpanExporter with TracerProvider
  * fix(ext/http): improve error message when underlying resource of request body unavailable
  * fix(kv): improve backoff error message and inline documentation
  * fix(check): move module not found errors to typescript diagnostics
  * fix(check): line-break between diagnostic message chain entries
  * refactor: Use 'await using' in serve_test
  * fix(permissions): implicit `--allow-import` when using `--cached-only`
  * refactor: remove use of home crate
  * refactor: update some fs_util functions to use sys_traits
  * refactor(node/npm): separate out permission check from npm resolvers
  * fix(lsp): css preprocessor formatting
  * chore: fix windows pre release CI job
  * fix(npm): deterministically output tags to initialized file
  * perf: build denort with `panic = &quot;abort&quot;` for releases
  * chore: Happy New Year 2025
  * chore: cargo fmt - turn on group_imports=StdExternalCrate
  * perf(fs/windows): stat - only open file once
  * refactor: do not use `deno_fs::FileSystem` everywhere
  * fix(ext/node): support private key export in JWK format
  * fix(node): Add missing `inspector/promises`
  * chore(lint): remove manual AST field counter
  * refactor: use sys_traits
  * perf(node/fs/copy): reduce metadata lookups copying directory
  * fix(ext/node): convert brotli chunks with proper byte offset
  * fix(unstable): don't error on non-existing attrs or type attr
  * fix(ext/node): add support of any length IV for aes-(128|256)-gcm ciphers
  * fix(ext/node): RangeError timingSafeEqual with different byteLength
  * feat(unstable): add OTEL MeterProvider
  * fix(ext/node): make getCiphers return supported ciphers
  * fix: incorrect memory info free/available bytes on mac
  * feat(unstable): support selectors in JS lint plugins
  * fix(ext/fetch): better error message when body resource is unavailable
  * fix(ext/fs): do not throw for bigint ctime/mtime/atime
  * fix(node): handle cjs exports with escaped chars
  * feat(unstable): add JS linting plugin infrastructure
  * perf: remove now needless canonicalization getting closest package.json
  * perf: upgrade to deno_semver 0.7
  * perf: don't store duplicate info for ops in the snapshot
  * feat(unstable): Implement QUIC
  * fix(ext/node): add `truncate` method to the `FileHandle` class
  * fix(lsp): rewrite imports for 'Move to a new file' action
  * fix(publish): infer literal types in const contexts
  * fix(task): support tasks without commands
  * fix(compile): be more deterministic when compiling the same code in different directories
  * fix(ext/node): do not exit worker thread when there is pending async op
  * chore: release ext/ crates
  * fix(ext/node): Fix `fs.access`/`fs.promises.access` with `X_OK` mode parameter on Windows
  * fix(ext/fetch): retry some http/2 errors
  * chore: upgrade libc
  * fix(ext/node): sort list of built-in modules alphabetically
  * fix(task): properly handle task name wildcards with --recursive
  * fix(outdated): ensure &quot;Latest&quot; version is greater than &quot;Update&quot; version
  * fix(lsp): include &quot;node:&quot; prefix for node builtin auto-imports
  * fix: deno_resolver crate without 'sync' feature
  * chore: release &quot;deno_*&quot; crates
  * feat(permission): separate PermissionDeniedError to Retryable and Fatal
  * refactor(lint): renames and code flattening
  * refactor: use capacity_builder for writing deno compile data section
  * refactor: extract out `FileFetcher` to `deno_cache_dir`
  * fix(lsp): respect &quot;typescript.suggestionActions.enabled&quot; setting
  * fix: upgrade deno_doc to 0.161.3
  * fix(compile): display embedded file sizes and total
  * fix: FastString v8_string() should error when cannot allocated
  * refactor: add 'sync' feature to deno_resolver crate
  * ci: restore cargo home cache before rust install
  * fix(outdated): support updating dependencies in external import maps
  * fix(lockfile): include dependencies listed in external import map in lockfile
  * fix(lsp): sql and component file formatting
  * chore: bump hyper-util to 0.1.10
  * Revert &quot;ci: use self-hosted mac arm runner only on main branch&quot;
  * feat(ext/web): add `[[ErrorData]]` slot to `DOMException`
  * fix(ext/node): support createConnection option in node:http.request()
  * chore: mark ./tools/release/npm/build.ts as executable
  * fix(npm): search node_modules folder for package matching npm specifier
  * chore: add npm distribution at `deno` package
  * fix(compile): analyze modules in directory specified in --include
  * refactor(unstable): otel configuration
  * fix(compile): output contents of embedded file system
  * chore: forward v2.1.4 release commit to main
  * feat(unstable): support caching npm dependencies only as they're needed
  * refactor(lint): manage schema files for linter in Deno repo
  * fix(outdated): error when there are no config files
  * chore(tests): Deprecate remaining usages of itest in check tests
  * fix(lint): do not error providing --allow-import
  * fix(outdated): respect --quiet flag for hints
  * perf(compile): improve FileBackedVfsFile
  * fix: replace the @deno-types with @ts-types
  * fix(outdated): show a suggestion for updating
  * fix(compile): correct read length for transpiled typescript files
  * chore: reduce allocations in a few places
  * fix(unstable): don't unwrap optional state in otel
  * fix: do not error when subpath has an @ symbol
  * fix(node): update list of builtin node modules, add missing export to _http_common
  * fix(ext/node): handle Float16Array in node:v8 module
  * refactor: Make `deno_runtime::shared` module public
  * fix(task): do not always kill child on ctrl+c on windows
  * fix: do not panic when fetching invalid file url on Windows
  * test(ext/node): remove flaky node:dgram compat test case
  * fix(ext/node): accept file descriptor in fs.readFile(Sync)
  * chore: add script to check remaining node compat cases
  * chore: forward v2.1.3 release commit to main
  * fix(install): use locked version of jsr package when fetching exports
  * fix(task): `--recursive` option not working
  * fix: clear dep analysis when module loading is done
  * test(ext/node): fix flaky node/http2.createServer() test
  * chore: update hickory dns crates
  * fix(unstable/temporal): respect locale in `Duration.prototype.toLocaleString`
  * fix(node/worker_threads): data url not encoded properly with eval
  * refactor: remove usages of `deno_core::resolve_import` for resolving redirects
  * fix(outdated): allow `--latest` without `--update`
  * fix(task): kill descendants when killing task process on Windows
  * fix: improve auto-imports for npm packages
  * fix(unstable): otel context with multiple keys
  * fix(task): don't panic with filter on missing task argument
  * test: add node compat test cases
  * test(ext/node): reduce race condition in test case
  * refactor: remove `CliNpmRegistryApi`
  * fix(task): only pass args to root task
  * fix(node/fs): support `recursive` option in readdir
  * refactor(ext/web): align error messages
  * refactor: add deno_npm_cache crate
  * chore: fix cjs_with_deps test to use a temp dir
  * fix(fmt): stable formatting of HTML files with JS
  * chore: upgrade deno_lint to 0.68.2
  * feat(unstable): add metrics to otel
  * refactor: upgrade to deno_npm 0.26
  * chore: export variables from node compat tools script
  * fix: support `workspace:^` and `workspace:~` version constraints
  * fix(task): forward signals to spawned sub-processes on unix
  * refactor(ext/fs): align error messages
  * fix(publish): error on missing name field
  * chore: forward v2.1.2 release commit to main
  * fix(node/timers): error when passing id to clearTimeout/clearInterval
  * fix(init): support scoped npm packages
  * fix: support bun specifiers in JSR publish
  * fix(ext/node): `tls.connect` socket upgrades
  * perf(compile): read embedded files as static references when UTF-8 and reading as strings
  * fix(info): resolve bare specifier pointing to workspace member
  * fix(ext/webgpu): use correct variable name
  * chore: fix lint step due to node compat test changes
  * fix(node/http): casing ignored in ServerResponse.hasHeader()
  * fix(task): strip ansi codes and control chars when printing tasks
  * test(ext/node): enable parallel/test-fs-promises-file-handle-stat.js
  * feat(unstable): repurpose `--unstable-detect-cjs` to attempt loading more modules as cjs
  * perf(ext/webstorage): use object wrap for `Storage`
  * fix(tools/doc): HTML resolve main entrypoint from config file 
  * fix(node/fs): add missing stat path argument validation
  * chore(lint): add .out file reference checker
  * fix(task): handle carriage return in task description
  * chore: fix flaky `specs::publish::npm_workspace_jsr_pkg_with_npm_dep::dep_and_workspace_dep`
  * fix(install): don't re-set up node_modules if running lifecycle script
  * fix(streams): reject `string` in `ReadableStream.from` type
  * fix(node): correct resolution of dynamic import of esm from cjs
  * fix(ext/webgpu): normalize limits to number
  * fix(ext/fetch): don't throw when `bodyUsed` inspect after upgrade
  * chore(compile): prefer denort binary in target/ directory when available
  * chore(node/tests): increase tolerance of timers test on CI
  * chore: update node_compat setup script, show remaining percentage
  * docs(cli): remove redundant word in comment
  * refactor(unstable): move telemetry to own ext
  * fix(lsp): support task object notation for tasks request
  * fix(task): handle multiline descriptions properly
  * fix(check): support jsdoc `@import` tag
  * fix(compile): do not error embedding same symlink via multiple methods
  * Merge commit from fork
  * fix(runtime/ops): Fix watchfs remove event
  * feat(unstable): Instrument fetch
  * chore: upgrade sqlformat-rs to non-forked version
  * fix(init): always force managed node modules
  * fix(compile): handle TypeScript file included as asset
  * chore: update node_compat setup script
  * feat: Instrument Deno.serve
  * fix(ext/node): add `fs.promises.fstat` and `FileHandle#stat`
  * fix(lsp): wasm file import completions
  * chore: update to file_test_runner 0.7.3
  * fix(fmt): return `None` if sql fmt result is the same
  * fix(lsp): remove stray debug output
  * fix(node/fs): missing uv error context for readFile
  * fix(compile): correct buffered reading of assets and files
  * chore(check): add test for Wasm memory and table
  * fix: support non-function exports in Wasm modules
  * chore(compile): log code cache file path
  * fix(ext/websocket): don't throw exception when sending to closed socket
  * fix(cli): remove extraneous comma in task --eval help
  * docs(cli/add): add clarification to add command
  * fix(install/global): do not error if path is an npm pkg and relative file
  * fix(task): update --filter flag description
  * fix(node): regression where ts files were sometimes resolved instead of js
  * chore: update url + idna
  * fix(watch): don't panic if there's no path provided
  * fix: Buffer global in --unstable-node-globals
  * fix(cli): Fix typo in doc subcommand help output
  * fix(task): ensure root config always looks up dependencies in root
</comment>
    <requestid>1247550</requestid>
  </revision>
  <revision rev="66" vrev="1">
    <srcmd5>e04576dd3354a540064bf3e532a36517</srcmd5>
    <version>2.2.1</version>
    <time>1740247522</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.2.1:
  * fix(publish): support jsx/tsx
  * chore: fix more flakey otel tests
  * fix(outdated): hint to use `--latest` if new versions are available in `outdated --update`
  * fix(coverage): exclude scripts with invalid URLs from raw coverage output
  * docs: add examples for SubtleCrypto
  * docs(canvas): Add examples to createImageBitmap jsdocs
  * chore: fix otel test flakiness
  * docs(console): update console documentation 
  * docs(web): update docs for `globalThis.caches`
  * fix(check): remove instability in loading lib files
  * fix(ext/node): rewrite SQLite named parameter handing
  * fix(ext/node): Fix handling of sqlite large integers
  * fix: don't panic when running with // as a filepath
  * fix(check/lsp): fall back to `@types/*` packages if npm package doesn't have types
  * fix: better jsx workspace config resolution
  * refactor(publish): create ModuleContentProvider
  * fix: move extension file declarations to cli/tsc/dts
  * fix(ext/cache): add missing Cargo feature
</comment>
    <requestid>1247796</requestid>
  </revision>
  <revision rev="67" vrev="1">
    <srcmd5>a3df2e8b6ee66e75011363095678b2f4</srcmd5>
    <version>2.2.2</version>
    <time>1740664258</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.2.2:
  * fix(http): generate `OtelInfo` only when otel metrics are enabled
  * fix(lint): plugins ignored when no rust rule active
  * fix(config): allow specifying absolute path for patch and fix panic with exports in package.json
  * fix(lint): update deno_lint
  * fix(lint): give access to SourceCode in 'deno test'
  * fix: add info suggestion for `unsafely-ignore-certificate-errors` and add `--help=full`
  * refactor(cli): update JSON schemas versions
  * fix(ext/node): descriptive sqlite error messages
  * fix(fmt): support &quot;--ext vto&quot; and &quot;--ext njk&quot;
  * fix(lint): don't recurse infinitely for large ASTs
  * fix(cli): add `compilerOptions.lib` examples to config-file.v1.json
  * chore: mark worker_large_output as flaky
  * perf(install): only read initialized file if we care about the tags
  * chore: mark inspector break tests as flaky
  * fix(lsp): create cacheable `ExportInfoMap` per language service
  * refactor(coverage): simplify CoverageReporter trait
  * refactor(resolver/node): use `deno_path_util::is_relative_specifier`
  * refactor: separate publish from pm subcommands
  * refactor(cli): extract TypeChecker to separate module
  * fix(install): don't error on unknown media types in install
  * fix(lsp): close server on exit notification
  * fix(check): regression - implicit jsxImportSource was not resolving
  * fix(unstable): lint plugin `:exit` called at wrong time
  * chore: remove unused dependencies
  * fix(ext/node): decipherIv() range error on invalid final block length
</comment>
    <requestid>1248818</requestid>
  </revision>
  <revision rev="68" vrev="2">
    <srcmd5>6abc86624755be50d6f063767d373408</srcmd5>
    <version>2.2.2</version>
    <time>1741452764</time>
    <user>dimstar_suse</user>
    <comment>- Reupload registry.tar.zst
</comment>
    <requestid>1251286</requestid>
  </revision>
  <revision rev="69" vrev="1">
    <srcmd5>7ec8cfa0d99bd5f8fba0e34c52252dc6</srcmd5>
    <version>2.4.2</version>
    <time>1753179654</time>
    <user>anag_factory</user>
    <comment>- Update to version 2.4.2:
  * fix(bundle): default &quot;jsxImportSource&quot; to &quot;react&quot; (#30082)
  * fix(check): temporarily ignore ERR_TYPES_NOT_FOUND (#29926)
  * fix(ext/node): don't throw error on invalid path input on exists and
  * existsSync (#29971)
  * fix(ext/node): validate path parameters on link and linkSync (#30061)
  * fix(lint): do not panic for many overlapping lint fixes (#30104)
  * fix(lsp): tsconfig features for 'deno check' parity (#30007)
  * fix(tsconfig): prioritize deno.json if it has compiler options (#30056)
  * fix(tsconfig): use tsc defaults for 'strict' and 'noImplicitOverride' (#30045)
  * fix(unstable): support importing files in npm packages as bytes and text
  * (#30065)
  * fix: global global should be writeable (#30032)
  * fix: early init logging (#30034)
  * fix: new signal handling (#30029)
  * fix: upgrade deno_core to 0.352.1 (#30119)
  * All other changes listed here: https://github.com/denoland/deno/compare/v2.2.2...v2.4.2</comment>
    <requestid>1294953</requestid>
  </revision>
  <revision rev="70" vrev="1">
    <srcmd5>5d06e2f890c098f7c1bdf81966008306</srcmd5>
    <version>2.4.3</version>
    <time>1755011093</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.4.3:
  * 2.4.3 (#30251)
  * fix(tsconfig): don't use tsc-compatible defaults for deno.json compiler options (#30242)
  * perf(buffer): optimize Buffer.subarray and Buffer.prototype.utf8Slice (#30213)
  * fix(ext/node): use primordials in `ext/node/polyfills/internal_binding/pipe_wrap.ts` (#30241)
  * fix: reduce change of corrupt lockfile error when updating dependencies in the config file (#30239)
  * chore: regression where excluded path stopped being excluded (#30238)
  * fix(http): catch more tunnel close errors (#30236)
  * refactor: remove more allocations querying for permissions (#30237)
  * fix: ensure coverage dir is stored absolute to prevent issues when cwd changes (#30225)
  * fix: use 'deno_signals' crate for signal handling (#30204)
  * fix: don't invoke `Proxy` getter trap on `console.log` (#30230)
  * refactor: use Cow&lt;Path&gt; more in permissions (#30227)
  * fix(publish): improve diagnostic when importing from another package using a relative import (#30203)
  * refactor: remove usages of to_string_lossy().to_string() (#30224)
  * chore: remove redundant operations from README.md (#30228)
  * refactor: remove some allocations in op_require_x ops (#30212)
  * fix(ext/node): validate `fd` is integer on `fsync` and `fdatasync` (#30215)
  * fix(ext/node): use Zlib base for brotli handles (#30112)
  * refactor(node): remove some duplicate code and unnecessary allocations in node_resolver (#30209)
  * refactor: update to deno_path_util 0.5.2 (#30211)
  * fix: update setTimeout and setInterval callback type to support strin… (#30183)
  * fix(lib/node): change ERR_INVALID_PACKAGE_TARGET to ERR_PACKAGE_PATH_NOT_EXPORTED when no package.json#exports condition matches (#29841)
  * chore(bench): add missing commas in Extension struct literal (#30206)
  * fix(regression): do not error when specifying `--config` flag with `../` component (#30208)
  * fix(ext/node): fix segmentation fault when spkac is empty (#30207)
  * fix(bundle): don't force managed npm resolution (#30200)
  * fix: support package.json imports in a Deno workspace (#30198)
  * docs: Fix broken Getting Started link in CONTRIBUTING.md (#30194)
  * test: avoid race condition on node compat test runner (#30201)</comment>
    <requestid>1298946</requestid>
  </revision>
</revisionlist>
