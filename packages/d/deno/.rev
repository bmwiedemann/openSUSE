<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>8bf5b3710e7f8d759b01c6cba3f2e514</srcmd5>
    <version>1.23.0</version>
    <time>1655972602</time>
    <user>dimstar_suse</user>
    <comment>removed python3-setuptools: only python3-base is needed</comment>
    <requestid>984244</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>326e85ab31c6f90fd8559e7050aeb563</srcmd5>
    <version>1.25.0</version>
    <time>1661497683</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.25.0:
  * BREAKING(ext/ffi): specialized buffer type (#15518)
  * feat(ext/crypto): deriveBits P-384 (#15138)
  * feat(ext/flash): An optimized http/1.1 server (#15405)
  * feat(ext/flash): split upgradeHttp into two APIs (#15557)
  * feat(ops): V8 Fast Calls (#15291)
  * feat(repl): add color to functions for syntax highlighting (#15434)
  * feat(runtime): add pre_execute_module_cb (#15485)
  * feat(unstable): initial support for npm specifiers (#15484)
  * feat: queueMicrotask() error handling (#15522)
  * feat: add &quot;deno init&quot; subcommand (#15469)
  * fix(cache): do not attempt to emit non-emitable files (#15562)
  * fix(core/runtime): always cancel termination in exception handling (#15514)
  * fix(coverage): ensure coverage is only collected in certain situations (#15467)
  * fix(ext/fetch): ignore user content-length header (#15555)
  * fix(ext/flash): concurrent response streams (#15493)
  * fix(ext/flash): fix default onListen callback (#15533)
  * fix(ext/flash): fix listening port (#15519)
  * fix: Free up JsRuntime state global handles before snapshot (#15491)
  * fix: resolve jsxImportSource relative to module (#15561)
  * perf(runtime): optimize Deno.file open &amp; stream (#15496)
  * perf: cache swc dependency analysis and don't hold onto ParsedSources in memory (#15502)
  * perf: improve performance.now (#15481)
- remove fix-cflags.patch (fix in upstream)
- update to 1.24.3:
  * fix(ext/fetch): add socks proxy support (#15372)
  * feat(unstable/ext/ffi): add static method variants to Deno.UnsafePointerView
    (#15146)
  * fix(cli): allow configurations files to also be json modules (#15444)
  * fix(ext/ffi): check CStr for UTF-8 validity on read (#15318)
  * fix(ext/ffi): unstable op_ffi_unsafe_callback_ref (#15439)
  * fix(permissions): ignore empty values (#15447)
  * fix(task): subcommand parser skips global args (#15297)
  * fix: allow setting globalThis.location when no --location is provided
    (#15448)
  * fix: update deno_graph to fix importing config as JSON module (#15388)
  * fix: various formatting fixes (#15412)
  * perf(ops): monomorphic sync op calls (#15337)
- includes 1.24.2:
  * feat(ext/ffi): Add support to get ArrayBuffers from UnsafePointerView (#15143)
  * feat(ext/ffi): Safe number pointers (#15173)
  * fix(compat): use mjs extension for stream/promises (#15341)
  * fix(core): BorrowMutError in nested error (#15352)
  * fix(ext/webgpu): use correct IDL key name (#15278)
  * fix(lsp): remove excessive line breaks in status page (#15364)
  * fix(lsp): use correct commit chars for completions (#15366)
  * fix(test): output parallel test results independently (#15399)
  * fix(test): race condition for cancelled tests (#15233)
  * fix(vendor): error on dynamic imports that fail to load instead of panicking
    (#15391)
  * fix(vendor): existing import map with bare specifier in remote (#15390)
  * fix: increase websocket message size (#15406)
  * perf(ext/ffi): support Uint8Array in fast calls (#15319)
  * perf(ext/ffi): use fast api calls for 64bit return types (#15313)
- includes 1.24.1:
  * fix(cli): unset jsxFragmentFactory &amp; jsxFactory options (#15264)
  * fix(ext/fetch): resolve TODOs about WebIDL conversions in body init (#15312)
  * fix(lsp): remove CompletionInfo.flags (#15288)
  * fix(tools): upgrade to new Deno.spawn api (#15265)
  * fix: Child.unref() unrefs stdio streams properly (#15275)
  * fix: proper typings for unhandledrejection event (#15271)
  * fix: unhandledrejection handling for sync throw in top level (#15279)
  * perf(ext/ffi): Optimise common pointer related APIs (#15144)
  * serde_v8: improvements to avoid hitting unimplemented codepaths (#13915)
- includes 1.24.0:
  * BREAKING(unstable): Improve Deno.spawn() stdio API (#14919)
  * feat(cli): support configuring the test tool in the config file (#15079)
  * feat(cli/lsp): Sort repl completions (#15171)
  * feat(cli/test): add DENO_JOBS env variable for test subcommand (#14929)
  * feat(ext/ffi): Support 64 bit parameters in Fast API calls (#15140)
  * feat(fmt): do not add a newline between a template and its tag (#15195)
  * feat(lsp): provide import map remapping diags and fixes (#15165)
  * feat(test): add --parallel flag, soft deprecate --jobs (#15259)
  * feat(unstable): Ability to ref/unref &quot;Child&quot; in &quot;Deno.spawnChild()&quot; API
    (#15151)
  * feat(web): add beforeunload event (#14830)
  * feat: add &quot;unhandledrejection&quot; event support (#12994, #15211)
  * feat: import.meta.resolve() (#15074)
  * fix(cli): Improve error message in watch mode (#15184)
  * fix(cli): expand tsc roots when using checkJs (#15164)
  * fix(cli): synchronize async stdio/file reads and writes (#15092)
  * fix(cli/dts): allow passing arguments to WebAssembly error constructors
    (#15149)
  * fix(core): unhandled rejection in top-level scope (#15204)
  * fix(coverage): do not verify emit source hash for coverage (#15260)
  * fix(ext/ffi): allow setting a custom lib path for libtcc.a (#15208)
  * fix(ext/ffi): i64 arg to C mapping was wrong (#15162)
  * fix(ext/web): align DOMException better with spec (#15097)
  * fix(fmt): improve curried arrow functions (#15251)
  * fix(repl): do not panic for import completions when the import specifier is
    empty (#15177)
  * fix(task): do not overflow attempting to parse large number as redirect
    (#15249)
  * fix(task): resolve deno configuration file first from specified --cwd arg
    (#15257)
  * fix: WebSocketStream ping event causes pending promises (#15235)
  * fix: fallback to no type checking cache when db file can't be created (#15180)
  * fix: revert changes to test output for uncaught errors (#15231)
  * perf: emit files on demand and fix racy emit (#15220)
  * perf: use emit from swc instead of tsc (#15118)
- includes 1.23.4:
  * feat(core): Re-export v8 use_custom_libcxx feature (#14475)
  * fix(core): deflake WASM termination test (#15103)
  * fix(coverage): better handling of multi-byte characters (#15159)
  * fix(ext/console): Fix a typo in a warning when .timeEnd is called on an
    unknown timer (#15135)
  * fix(ext/crypto): Adjust typings for Crypto.getRandomValues() (#15130)
  * fix(ext/ffi): Avoid keeping JsRuntimeState RefCell borrowed for event loop
    middleware calls (#15116)
  * fix(ext/ffi): allow opting out of fast ffi calls (#15131)
  * fix(ext/ffi): trampoline for fast calls (#15139)
  * fix(ext/http) nextRequest return type annotation from ResponseEvent to
    RequestEvent (#15100)
  * fix(ext/http): reading headers with ongoing body reader (#15161)
  * fix(ext/url): missing primordial (#15096)
  * fix(lsp): enable auto imports (#15145)
  * fix(net): don't panic on failed UDS removal (#15157)
  * fix: upgrade deno_ast to 0.17 (#15152)
  * perf(cli/proc_state): Get error source lines from memory (#15031)
  * perf(ext/ffi): leverage V8 Fast Calls (#15125)
  * perf(ext/http): skip core.isProxy check for default ResponseInit (#15077)
- includes 1.23.3:
  * Revert &quot;refactor(snapshots): to their own crate (#14794)&quot; (#15076)
  * fix(cli): handle collecting a directory with file:// (#15002)
  * fix(core): handle exception from Wasm termination (#15014)
  * fix(core): remove unsafe in OpsTracker (#15025)
  * fix(dts): stop default export type behavior (#14977)
  * fix: update to TypeScript 4.7.4 (#15022)
  * perf(ext/http): lazy load headers (#15055)
  * perf(ext/http): remove accept_encoding interior mutability (#15070)
  * perf(ext/http): simplify op_http_accept (#15067)
  * perf(ops): fast path for SMI return values (#15033)
  * perf(serde_v8): avoid extra is_array_buffer_view check (#15056)
- includes 1.23.2:
  * feat(unstable/ffi): thread safe callbacks (#14942)
  * fix(core): don't panic on non-existent cwd (#14957)
  * fix(docs): --watch arg is stable (#14970)
  * fix(dts/ffi): non-exact types break FFI inference (#14968)
  * fix(ext/crypto): add EcdhKeyDeriveParams to deriveKey types (#15005)
  * fix(ext/ffi): empty buffers error with index out of bounds on FFI (#14997)
  * fix(ext/web): remove ErrorEventInit's error default (#14809)
  * fix(lsp): restart TS language service when caching dependencies (#14979)
  * fix(modules): immediately resolve follow-up dyn imports to a dyn imported
    module (#14958)
  * fix(runtime): derive default for deno_runtime::ExitCode (#15017)
  * fix(task): remove --no-config as task subcommand argument (#14983)
  * fix(test): typo ('finsihed') if text decoder not closed during test (#14996)
  * fix(vendor): ignore import map in output directory instead of erroring
    (#14998)
  * fix: don't error if Deno.bench() or Deno.test() are used in run subcommand
    (#14946)
  * perf(ext/ffi): optimize synchronous calls (#14945)
  * perf(ext/web): avoid reallocations in op_base64_atob (#15018)
  * perf(ext/web): use base64-simd for atob/btoa (#14992)
  * perf(serde_v8): smallvec ByteString (#15008)
- update to 1.23.1:
  * BREAKING(unstable/ffi): Remove Deno.UnsafePointer indirection (#14915)
  * feat(unstable/ffi): Callbacks (#14663)
  * fix(check): ignore TS2306 (#14940)
  * fix(docs): update description of --check flag (#14890)
  * fix(ext/fetch): add accept-language default header to fetch (#14882)
  * fix(ext/web): add EventTarget brand checking (#14637)
  * fix(ext/web): handle rid=0 in TextDecoder#decode (#14894)
  * fix(fmt): ignore node_modules directory (#14943)
  * fix(fmt): should fail --check on parse error (#14907)
  * fix(repl): accept tab when previous character is whitespace (#14898)
  * fix(repl): use spaces for tab handler on windows (#14931)
  * fix: do not panic running .d.cts and .d.mts files (#14917)
  * fix: make Performance global an EventTarget
  * fix: upgrade swc via deno_ast 0.16 (#14930)
  * perf(core): Cache source lookups (#14816)
  * perf(ext/ffi): Optimize FFI Rust side type checks (#14923)
- rebase fix-cflags.patch
</comment>
    <requestid>999287</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>55b331677074ee84c9e95b2968ab89e5</srcmd5>
    <version>1.25.1</version>
    <time>1662405696</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.25.1:
  * feat(ops): support v8::FastApiCallbackOptions (#15721)
  * feat(serde_v8): Serialize integers as BigInt (#15692)
  * fix(check): --remote and --no-remote should be mutually exclusive (#14964)
  * fix(cli): deno upgrade --canary always downloaded latest version
    even if it was already latest (#15639)
  * fix(compile): panic when running with a populated dep analysis cache (#15672)
  * fix(docs): add missing categories (#15684)
  * fix(ext/ffi): Fix pointer types (#15730)
  * fix(ext/flash): add missing backticks in server docs (#15644)
  * fix(ext/flash): panic on AddrInUse (#15607)
  * fix(ext/flash): retry write failures (#15591)
  * fix(ext/node): add missing primordial (#15595)
  * fix(ext/node): better error for importing ES module via
    require() call (#15671)
  * fix(ext/node): fix global in node env (#15622)
  * fix(ext/websocket): fix closing of WebSocketStream with unread
    messages (#15632)
  * fix(fmt): add the file path to the panic messages when formatting
    is unstable (#15693)
  * fix(npm): better node version and version requirement compatibility (#15714)
  * fix(npm): conditional exports with wildcards (#15652)
  * fix(npm): handle cjs re-exports with the same name as an export (#15626)
  * fix(npm): ignore npm cache directory creation errors (#15728)
  * fix(npm): ignore the unstable error in the lsp (#15727)
  * fix(npm): prefer importing esm from esm (#15676)
  * fix(npm): skip extracting pax_global_header from tarballs (#15677)
  * fix(npm): translate CJS to ESM with name clashes for files and dirs (#15697)
  * fix(serde_v8): no panic on reading large text file (#15494)
  * fix(serde_v8): update bytes::Bytes layout assumptions (#15718)
  * fix: avoid global declaration collisions in cjs (#15608)
  * fix: config file errors should not print specifier with debug formatting
    (#15648)
  * fix: typo in deno_ops README (#15606)
  * perf(ext/web): flatten op arguments for text_encoding (#15723)
  * perf(ops): inline String args (#15681)
  * perf(runtime): optimize allocations in read/write checks (#15631)
  * perf: use fast api for core.isProxy (#15682)
  * perf: use fast api for op_now (#15643)
  * serde_v8: fix pointer size assumptions (#15613)
</comment>
    <requestid>1001143</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>47ce728879986fe1f83f9446b13cd825</srcmd5>
    <version>1.25.2</version>
    <time>1663002484</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.25.2:
  * BREAKING(unstable): remove --compat mode (#15678)
  * feat(ext/ffi): Implement FFI fast-call trampoline with Dynasmrt (#15305)
  * feat(ext/ffi): Support bool FFI type (#15754)
  * feat(serde_v8): Support StringObject as unit enum variant (#15715)
  * fix(bench): make sure bytes/response is equal (#15763)
  * fix(cli): Fix panic when providing invalid urls to --reload (#15784)
  * fix(cli): allow using file resource synchronously while being used
    async (#15747)
  * fix(cli/repl): await Promise.any([])... (#15623)
  * fix(core): Register external references for imports to
    the SnapshotCreator (#15621)
  * fix(core): make errors more resistant to tampering (#15789)
  * fix(core): opAsync leaks a promise on type error (#15795)
  * fix(docs): add missing categories for unstable (#15807)
  * fix(docs): change category for Deno.Process to &quot;Sub Process&quot; (#15812)
  * fix(ext/flash): use utf8 length as Content-Length (#15793)
  * fix(ext/timers): create primordial eval (#15110)
  * fix(init): suppress info logs when using quiet mode (#15741)
  * fix(npm): add more context to errors when file doesn't exist (#15749)
  * fix(npm): conditional exports in npm: specifiers (#15778)
  * fix(npm): correct exact matching of pre-release versions (#15745)
  * fix(npm): recursive translation of reexports, remove window global
    in node code (#15806)
  * fix(npm): respect latest dist tag for getting current version (#15746)
  * fix(ops): use qualified borrow in op macro (#15769)
  * fix(repl): don't terminate on unhandled error events (#15548)
  * fix(test): unflake wasm_unreachable test (#15794)
  * fix(watch): ignore unload errors on drop (#15782)
  * fix: upgrade deno_ast to 0.19 (#15808)
  * perf(ops): inline &amp;[u8] arguments and enable fast API (#15731)
  * perf(runtime): flatten arguments for write_file ops (#15776)
  * perf(runtime): short-circuit queue_async_op for Poll::Ready (#15773)
</comment>
    <requestid>1002544</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>1230fac86221ae3332ee4b2750bec256</srcmd5>
    <version>1.26.0</version>
    <time>1664553435</time>
    <user>RBrownFactory</user>
    <comment>- update to 1.26.0:
  * feat: add --allow-sys permission flag (#16028)
  * feat: add --no-npm flag to disable npm: imports (#15673)
  * feat: Add requesting API name to permission prompt (#15936)
  * feat: allow exiting on two consecutive ctrl+c presses (#15981)
  * feat: download progress bar (#15814)
  * feat: implement Web Cache API (#15829)
  * feat: Refresh interactive permission prompt (#15907)
  * feat: Stabilize Deno.hostname() API (#15932)
  * feat: Stabilize Deno.refTimer() and Deno.unrefTimer() APIs (#16036)
  * feat: TypeScript 4.8 update (#16040)
  * feat(cli): update to TypeScript 4.8 (#15064)
  * feat(core): add Deno.core.setPromiseHooks (#15475)
  * feat(ext/crypto): add x25519 and Ed25519 CFRG curves (#14119)
  * feat(ext/flash): add reuseport option on Linux (#16022)
  * feat(info): add information about npm modules cache (#15750)
  * feat(lint): add --compact flag for terse output (#15926)
  * feat(npm): functionality to support child_process.fork (#15891)
  * feat(ops): Fallible fast ops (#15989)
  * feat(unstable): Deno.setRaw -&gt; Deno.stdin.setRaw (#15797)
  * fix(cli/bench): strace numeric format (#16055)
  * fix(cli/vendor): handle assert type json during vendoring (#16059)
  * fix(ext/console): fix error when logging a proxied Date (#16018)
  * fix(ext/fetch): blob url (#16057)
  * fix(ext/flash): reregister socket on partial read on Windows (#16076)
  * fix(fmt): keep type args in type queries and keep empty array expr element's
    trailing comma (#16034)
  * fix(npm): use ntfs junctions in node_modules folder on Windows (#16061)
  * fix(require): tryPackage uses optional chaining (#16020)
  * fix(runtime): refresh perm prompt 3 lines instead of 4 (#16049)
  * perf: don't re-download package tarball to global cache if local node_modules
    folder exists for package (#16005)
  * perf: use fast ops for tty (#15976)
  * perf(ext/console): break on iterableLimit &amp; better sparse array handling (#15935)
  * perf(ext/fetch): use content-length in InnerBody.consume (#15925)
- includes 1.25.4:
  * feat(unstable/npm): add flag for creating and resolving npm packages to a
    local node_modules folder (#15971)
  * feat(unstable/npm): add support for --reload=npm: and --reload=npm: (#15972)
  * feat(internal/ops): Automatic fast ops creation (#15527)
  * fix(compile): keep non-exe extension in output name on Windows (#15994)
  * fix(doc): deno doc should parse modules if they haven't been parsed before (#15941)
  * fix(ext/node): fix builtin module module (#15904)
  * fix(ext/webgpu): make GPUDevice.features SetLike (#15853)
  * fix(flash): panic if response if undefined (#15964)
  * fix(runtime): better error message with Deno.env.get/set (#15966)
  * fix(runtime): fix permission status cache keys (#15899)
  * perf(cli): avoid canonicalize_path if config file does not exist (#15957)
  * perf(cli): avoid clap::App::clone (#15951)
  * perf(cli): use -O3 instead of -Oz (#15952)
  * perf(core): use single ObjectTemplate for ops in initialize_ops (#15959)
  * perf(ext/console): avoid wrapConsole when not inspecting (#15931)
  * perf(web): optimize encodeInto() (#15922)
  * perf: fs optimizations - part 1 (#15873)
- update to 1.25.3:
  * doc(unstable): mention that signal input isn't supported in spawnSync
    (#15889)
  * fix(ext/flash): don't block requests (#15852)
  * fix(npm): align Deno importing Node cjs with Node esm importing cjs (#15879)
  * fix(npm): align Node esm code importing cjs with Node (#15838)
  * fix(npm): binary entrypoint for .js or no extension (#15900)
  * fix(npm): remove export binding to match node (#15837)
  * fix(npm): support cjs resolution of package subpath with package.json (#15855)
  * fix(npm): use shim from deno_node crate for 'module' built-in module (#15881)
  * fix(ops): add node.js env variable allowlist (#15893)
  * perf(ext/flash): remove string-&gt;buffer cache (#15850)
  * perf(serde_v8): remove Mutex from ZeroCopyBuf (#15888)
  * perf(url): return early if url has no query string (#15856)
  * perf: optimize URL serialization (#15663)
</comment>
    <requestid>1007112</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>b75190d79bd094888c45f760a5be153f</srcmd5>
    <version>1.26.2</version>
    <time>1666089887</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.26.2</comment>
    <requestid>1029625</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>b7b28097eabd8c29c17f2c245197678e</srcmd5>
    <version>1.30.0</version>
    <time>1674997874</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.30.0:
  * many changes, see https://github.com/denoland/deno/compare/v1.26.2...v1.30.0
- Switch from deprecated rust-packaging to cargo-packaging
- Disable LTO to build with half of the RAM (fixes build on aarch64):
  * deno-disbale-lto.patch
- Update _constraints with current values
- remove Cargo.lock to bypass checksum errors in rusty_v8
</comment>
    <requestid>1061824</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>e9c566c595f2628ababf1eacf7972fdc</srcmd5>
    <version>1.31.0</version>
    <time>1677258483</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.31.0:
  * feat(bench): Add JSON reporter for &quot;deno bench&quot; subcommand (#17595)
  * feat(bench): change --json output format (#17888)
  * feat(core): allow to specify entry point for snapshotted ES modules (#17771)
  * feat(ext/ffi): Replace pointer integers with v8::External objects (#16889)
  * feat(ext/http): add 2nd param to handler to get remote address (#17633)
  * feat(ext/node): embed std/node into the snapshot (#17724)
  * feat(ext/node): implement node:v8 (#17806)
  * feat(install): follow redirects for urls with no path (#17449)
  * feat(node): stabilize Node-API (#17553)
  * feat(npm): support bare specifiers from package.json in more subcommands and language server (#17891)
  * feat(npm): support npm specifiers in remote modules without --unstable (#17889)
  * feat(permissions): grant all permission for a group in permission prompt (#17140)
  * feat(task): add warning about package.json scripts support (#17900)
  * feat(task): adjust warning (#17904)
  * feat(task): support scripts in package.json (#17887)
  * feat: Deprecate 'deno bundle' subcommand (#17695)
  * feat: Stabilize Deno.Command API (#17628)
  * feat: add more variants to Deno.build.os (#17340)
  * feat: add signal option to Deno.resolveDns (#17384)
  * feat: auto-discover package.json for npm dependencies (#17272)
  * feat: stabilize Deno.osUptime() (#17554)
  * feat: start caching npm package version's &quot;bin&quot; entry from npm registry (#17881)
  * feat: support bare specifier resolution with package.json (#17864)
  * feat: wire up ext/node to the Node compatibility layer (#17785)
  * fix(cli): Add better error message when powershell is missing during upgrade (#17759)
  * fix(cli/graph_util): don't append referrer info for root module errors (#17730)
  * fix(cli/napi): correct name handling in napi property descriptor (#17716)
  * fix(cli/napi): handle all property variants in napi_define_properties (#17680)
  * fix(core): don't allow to import internal code is snapshot is loaded (#17694)
  * fix(core): rebuild when JS sources for snapshotting change (#17876)
  * fix(core): remove async op inlining optimization (#17899)
  * fix(dts): make Deno.Command accept readonly prop in options.args (#17718)
  * fix(ext/console): Only right-align integers in console.table() (#17389)
  * fix(ext/ffi): Fix re-ref'ing UnsafeCallback (#17704)
  * fix(ext/ffi): improve error messages in FFI module (#17786)
  * fix(ext/flash): Always send correct number of bytes when handling HEAD requests (#17740)
  * fix(ext/flash): wrong order of arguments passed to http1Response (#17893)
  * fix(ext/node): add support for BYOB streams (#17803)
  * fix(ext/node): fix node stream (#17874)
  * fix(ext/node): fix npm module resolution when --node-modules-dir specified (#17896)
  * fix(ext/node): fix process.uptime (#17839)
  * fix(ext/node): fix webcrypto export (#17838)
  * fix(ext/websocket): extra ws pongs sent (#17762)
  * fix(fmt): make fmt options CLI args less verbose (#17550)
  * fix(lint): revert no-deprecated-api for Deno.run (#17880)
  * fix(npm): allow resolving from package.json when an import map exists (#17905)
  * fix(npm): filter out duplicate packages names in resolution (#17857)
  * fix(npm): improve peer dependency resolution (#17835)
  * fix(npm): resolve node_modules dir relative to package.json instead of cwd (#17885)
  * fix(npm): support bare specifiers in package.json having a path (#17903)
  * fix(ops): Always close cancel handles for read_async/write_async (#17736)
  * fix(webgpu): don't default to 0 for setVertexBuffer.size &amp; properly use webidl.setlike (#17800)
  * fix(runtime): Refactor fs error mapping to use unified format (#17719)
  * fix(webgpu): use correct op for GPUDevice.createSampler (#17729)
  * fix: add WouldBlock error (#17339)
  * fix: loading built-in Node modules embedded in the binary (#17777)
  * fix: use static Reflect methods in nodeGlobalThis proxy (#17696)
  * perf(core): speed up promise hook dispatch (#17616)
  * perf(core, runtime): Further improve startup time (#17860)
  * perf(ext/ffi): Revert UTF-8 validity check from getCString (#17741)
  * perf(ext/node): move winerror binding to rust (#17792)
  * perf(http): remove allocations checking upgrade and connection header values (#17727)
  * perf: disable fetching graph cache info except for deno info (#17698)
  * perf: module info cache - avoid MediaType.to_string() allocation (#17699)
  * perf: remove current_dir() call in Deno.mainModule (#17883)
  * perf: use ops for node:crypto ciphers (#17819)
- includes 1.30.3 / 2023.02.07
  * fix(ext/console): log class for class constructor (#17615)
  * fix(lsp): prevent crash analyzing module (#17642)
- includes 1.30.2 / 2023.02.03
  * Revert &quot;chore(core): remove have_unpolled_ops on rt state (#17601)&quot; (#17631)
  * fix(webgpu): specify viewFormats in surface configuration (#17626)
- includes 1.30.1 / 2023.02.02
  * Revert &quot;fix(watch): preserve ProcState::file_fetcher between restarts (#15466) (#17591)
  * fix(core): Add lint check for core (#17223)
  * fix(ext): internal structuredClone for ArrayBuffer and TypedArray subclasses (#17431)
  * fix(fmt): semiColons: false - handle prop with following generator and do while with no block body (#17567)
  * fix(install): tsconfig.json -&gt; deno.json for config file suffix (#17573)
  * fix(lockfile): emit trailing newline (#17618)
  * fix(lsp): update document dependencies on configuration change (#17556)
  * fix(napi): guard threadsafe function counters behind a mutex (#17552)
  * fix(napi): remove wrong length check in napi_create_function (#17614)
  * fix(napi): return node globalThis from napi_get_global (#17613)
  * fix(repl): handle @types/node not being cached in the repl (#17617)
  * fix(upgrade): ensure temp dir cleanup on failure (#17535)
  * fix: ensure &quot;fs&quot; -&gt; &quot;node:fs&quot; error/quick fix works when user has import map (#17566)
  * perf(ops): Remove unnecessary fast call fallback options usage (#17585)
- Rebase deno-disbale-lto.patch (renamed to deno-disable-lto.patch)
</comment>
    <requestid>1067491</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>67b30e9b33e3f0bbc8a1d93cdb96ac96</srcmd5>
    <version>1.31.1</version>
    <time>1677498924</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.31.1:
  * feat: add DENO_NO_PACKAGE_JSON env var (#17926)
  * fix(npm): lazily install package.json dependencies only when necessary
    (#17931)
  * fix(npm): package.json auto-discovery should respect --no-config and
    --no-npm (#17924)
  * fix: ensure concurrent non-statically analyzable dynamic imports
    do not sometimes fail (#17923)
  * fix: ignore workspace, git, file, http, https specifiers in package.json
    (#17934, #17938)
  * fix: regression remapping remote specifier to local file (#17935)
  * fix: remote modules should be allowed to import data urls (#17920)
</comment>
    <requestid>1067845</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>c9391fda6412931e637cd3e94f431902</srcmd5>
    <version>1.31.3</version>
    <time>1679182257</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.31.3:
  * fix(check): regression where config &quot;types&quot; entries caused type checking
    errors (#18124)
  * fix(core): Upgrades bytes crate from =1.2.1 to ^1.4.0 (#18123)
  * fix(core): SafePromiseAll to be unaffected by Array#@@iterator (#17542)
  * fix(core/internal): fix typo in primordial type definitions (#18125)
  * fix(ext/fs): retry if file already exists in makeTempFile (#17787)
  * fix(ext/http): abort request signal when response errors (#17822)
  * fix(ext/node): add crypto.createCipheriv (#18091)
  * fix(ext/node): implement &quot;ascii&quot; encoding for node:fs writeFile() (#18097)
  * fix(ext/web): Stop using globalThis.ReadableStream in Blob (#18187)
  * fix(info/doc): add missing --no-lock and --lock flags (#18166)
  * fix(lsp): avoid calling client while holding lock (#18197)
  * fix(npm): &quot;not implemented scheme&quot; message should properly show the scheme
    (#18209)
  * fix(npm): show a progress bar when initializing the node_modules folder
    (#18136)
  * fix(repl): do not panic deleting Deno or deleting all its properties
    (#18211)
  * fix: ensure no node_modules directory is created when a package.json exists
    and no npm dependencies are used (#18134)
  * perf: do not depend on iana-time-zone (#18088)
- update to 1.31.2:
  * Revert &quot;perf: disable snapshot compression (#18061)&quot; (#18074)
  * deps: bump regexp to ^1.7.0 (#17966)
  * deps: bump once_cell to ^1.17.1 (#18075)
  * feat(core): prevent isolate drop for CLI main worker (#18059)
  * feat(ext/ffi): Make External pointers keep reference to V8 buffer (#17955)
  * feat(ops): reland fast zero copy string arguments (#17996)
  * feat(ops): relational ops (#18023)
  * fix(check): include dts files in tsc roots (#18026)
  * fix(cli): add space after period in --v8-flags (#18063)
  * fix(cli,ext/web): Upgrading uuid from =1.1.2 to 1.3.0 (#17963)
  * fix(core): introduce SafeRegExp to primordials (#17592)
  * fix(ext/crypto): correctly limit ECDSA and hash algorithms (#18030)
  * fix(ext/ffi): Remove deno_core::OpState qualifiers, fix ops returning
    pointer defaults (#17959)
  * fix(ext/node): remove unused _hex module (#18045)
  * fix(ext/node): util.types.isSharedArrayBuffer (#17836)
  * fix(ext/webstorage): check size of inputs before insert (#18087)
  * fix(lockfile): don't touch lockfile is npm specifiers are identical (#17973)
  * fix(npm): improve peer dependency resolution with circular dependencies
    (#18069)
  * fix(prompt): better output with control chars (#18108)
  * fix(rumtime): Add Deno. prefix for registered symbols (#18086)
  * fix(runtime/windows): ensure Deno.stdin.setRaw(false) properly
    disables raw mode (#17983)
  * fix: Split extension registration and snapshotting (#18098)
  * fix: attempt to only allow one deno process to update the node_modules
    folder at a time (#18058)
  * fix: lazily surface errors in package.json deps parsing (#17974)
  * perf(core): over-allocate in ModuleMap when running from snapshot (#18083)
  * perf(ext/node): improve createHash performance (#18033)
  * perf: disable snapshot compression (#18061)
  * perf: don't add unload event listener (#18082)
  * perf: move runtime bootstrap code to snapshot time (#18062)
  * perf: move setting up Deno namespace to snapshot time (#18067)
  * wpt: unlock nightly with --no-ignore (#17998)
</comment>
    <requestid>1072728</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>777439d3a052610573be6a20348b20ff</srcmd5>
    <version>1.32.1</version>
    <time>1679667644</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.32.1:
  * fix(core): disable resizable ArrayBuffer and growable
    SharedArrayBuffer (#18395)
  * fix(cli): restore deno run - to handle stdin as typescript (#18391)
  * fix(inspect): ensure non-compact output when object literal
    has newline in entry text (#18366)
  * fix(lsp): ensure enablePaths works when clients do not
    provide a trailing slash for workspace dir (#18373)
- update to 1.32.0:
  * BREAKING(unstable): remove WebGPU (#18094)
  * feat(ext/fs): FileInfo.dev is supported on Windows (#18237)
  * feat(cli): --ext parameter for run, compile, and bundle (#17172)
  * feat(compile): Add support for web workers in standalone mode (#17657)
  * feat(compile): Enable multiple roots for a standalone module
    graph (#17663)
  * feat(core): deno_core::extension! macro to simplify extension
    registration (#18210)
  * feat(ext/kv): key-value store (#18232)
  * feat(ext/net): Add multicasting APIs to DatagramConn (#10706)
    (#17811)
  * feat(ext/url): URLSearchParams.size (#17884)
  * feat(repl): add DENO_REPL_HISTORY to change history file path (#18047)
  * feat(serde_v8): support BigInt serialization (#18225)
  * feat: TypeScript 5.0.2 (except decorators) (#18294)
  * fix(cli): preserve blob store when resetting file watcher (#18253)
  * fix(cli/integration): clippy lints (#18248)
  * fix(ext/kv): don't request permissions for &quot;:memory:&quot; (#18346)
  * fix(ext/kv): reverse mapping between AnyValue::Bool and 
    KeyPart::Bool (#18365)
  * fix(ext/node): add createDecipheriv (#18245)
  * fix(ext/node): resource leak in createHmac (#18229)
  * fix(ext/node): use Deno.Command from ext:runtime (#18289)
  * fix(repl): Hide indexable properties in tab completion (#18141)
  * fix(runtime): Extract error code for all OS error variants (#17958)
  * fix: include error in message about not being able to create
    the TypeScript cache (#18356)
  * perf(check): type check local files only when not using --all (#18329)
  * perf(core) Reduce copying and cloning in extension
    initialization (#18252)
  * perf(core) Reduce script name and script code copies (#18298)
  * perf(core): preserve ops between snapshots (#18080)
  * perf(core): use static specifier in ExtensionFileSource (#18271)
  * perf: disable WAL for transpiled source cache (#18084)
  * perf: disable runtime snapshot compression (#18239)
- build: remove python3 hack
</comment>
    <requestid>1074042</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>fe0dd8c6bf5ff681681ec49b27701b5a</srcmd5>
    <version>1.32.3</version>
    <time>1680455897</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.32.3
  * fix(check): ensure diagnostics caused by changes in other files get
    invalidated between runs (#18541)
  * fix(ext/ffi): crash when same reference struct is used in two fields (#18531)
  * fix(lsp): add a document preload file system entry limit (#18553)
  * fix(repl): disable language server document preloading in the repl (#18543)
  * fix(test): don't swallow sanitizer errors with permissions (#18550)
  * perf(check): faster source hashing (#18534)
- update to 1.32.2:
  * Revert &quot;refactor(ext/node): Use Deno.inspect (#17960)&quot; (#18491)
  * feat(core): initialize SQLite off-main-thread (#18401)
  * feat(ext/kv): return versionstamp from set/commit (#18512)
  * feat(ext/node): add crypto.checkPrime API (#18465)
  * feat(ext/node): implement crypto.createSecretKey (#18413)
  * feat(test): print pending tests on sigint (#18246)
  * feat: port node:zlib to rust (#18291)
  * fix(cli): add colors to &quot;Module not found&quot; error frame (#18437)
  * fix(cli): don't store blob and data urls in the module cache (#18261)
  * fix(cli/bench): look for clone3 syscalls for thread count (#18456)
  * fix(core): located_script_name macro was using format syntax (#18388)
  * fix(core): panic at build time if extension code contains
    anything other than 7-bit ASCII (#18372)
  * fix(core): restore cache journal mode to TRUNCATE and tweak
    tokio test in CacheDB (#18469)
  * fix(coverage): ignore files from npm registry (#18457)
  * fix(dts): improve types for the Deno.KV API (#18510)
  * fix(ext/kv): add missing getMany method (#18410)
  * fix(ext/node): add aes-128-ecb algorithm support (#18412)
  * fix(ext/node): add missing _preloadModules hook (#18447)
  * fix(ext/node): implement crypto.Sign
    (RSA/PEM/SHA{224,256,384,512}) (#18471)
  * fix(ext/node): make cipher/decipher transform stream (#18408)
  * fix(lsp): textDocument/references should respect
    includeDeclaration (#18496)
  * fix(lsp): better handling of data: urls (#18527)
  * fix(lsp): include all diagnosable documents on initialize (#17979)
  * fix(ops): fallback when FastApiOneByteString is not utf8 (#18518)
  * fix(repl): improve package.json support (#18497)
  * fix(streams): add support Float64Array to ReadableStreamByobReader
    (#18188)
  * fix: Add missing processenv winapi feature to deno_io (#18485)
  * fix: upgrade to TypeScript 5.0.3 (#18532)
  * perf(ext/websocket): efficient event kind serialization (#18509)
  * perf(ext/websocket): special op for sending binary data frames (#18506)
  * perf(ext/websocket): special op for sending text data frames (#18507)
  * perf(ext/websocket): use opAsync2 to avoid spread deopt (#18525)
  * perf: const op declaration (#18288)
</comment>
    <requestid>1076695</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>9437954aca2a0751f71573dbec1c94e3</srcmd5>
    <version>1.32.4</version>
    <time>1681470807</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.32.4:
  * Revert &quot;fix(cli): don't store blob and data urls in the module cache (#18261)&quot;
    (#18572)
  * feat(core): sync io ops in core (#18603)
  * feat(ext/http): add an op to perform raw HTTP upgrade (#18511)
  * fix(core): preserve syntax error locations in dynamic imports (#18664)
  * fix(ext/cache): cache.put overwrites previous call (#18649)
  * fix(ext/kv): keys must be arrays (#18655)
  * fix(ext/node): add X509Certificate (#18625)
  * fix(ext/node): add symmetric keygen (#18609)
  * fix(ext/node): fix unable to resolve fraction.js (#18544)
  * fix(ext/node): implement hkdf-expand (#18612)
  * fix(ext/node): json encode binary command name (#18596)
  * fix(npm): cache bust npm specifiers more aggressively (#18636)
  * fix(npm): do not &quot;npm install&quot; when npm specifier happens to
    match package.json entry (#18660)
  * fix(npm): reload an npm package's dependency's information
    when version not found (#18622)
  * perf(ext/io): remove a data copy from File write (#18601)
  * perf(ext/websocket): replace tokio_tungstenite server with
    fastwebsockets (#18587)
</comment>
    <requestid>1079305</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>7c8fea062090f5e136c4826d426abb4e</srcmd5>
    <version>1.32.5</version>
    <time>1681996478</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.32.5:
  * feat(UNSTABLE/kv): AtomicOperation#sum (#18704)
  * fix(core): Use safe primordials wrappers (#18687)
  * fix(ext/node): add req.socket.remoteAddress (#18733)
  * fix(ext/node): implement crypto.createVerify (#18703)
  * fix(ext/node): polyfill response._implicitHeader method (#18738)
  * fix(ext/websocket): Avoid write deadlock that requires read_frame to complete
    (#18705)
  * fix(lsp): ensure language server status works on unix (#18727)
  * fix(npm): eagerly reload package information when version from lockfile not
    found locally (#18673)
  * fix(path): Remove non node symbols (#18630)
  * fix(test): add process sigint handler for --watch (#18678)
  * perf(ext/websocket): make op_server_ws_next_event deferred (#18632)
</comment>
    <requestid>1080412</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>50bb9d719b562d103ee73a3523fc9765</srcmd5>
    <version>1.33.1</version>
    <time>1682782106</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.33.1:
  * fix(ext/fetch): subview Uint8Array in Req/Resp (#18890)
  * fix(ext/websocket): client connect URI (#18892)
  * fix(ext/websocket): restore op_ws_send_ping (#18891)
  * fix(repl): don't panic on undefined exception (#18888)
- includes 1.33.0:
  * BREAKING(unstable): remove &quot;Deno.serve(handler, options)&quot; overload (#18759)
  * Revert &quot;chore(ext/websocket): Add autobahn|testsuite fuzzingclient&quot; (#18856)
  * feat(bench): add --no-run flag (#18433)
  * feat(cli): don't check permissions for statically analyzable
    dynamic imports (#18713)
  * feat(cli): flatten deno.json configuaration (#17799)
  * feat(ext/ffi): support marking symbols as optional (#18529)
  * feat(ext/http): Rework Deno.serve using hyper 1.0-rc3 (#18619)
  * feat(ext/kv): add more atomic operation helpers (#18854)
  * feat(ext/kv): return ok bool from atomic commit (#18873)
  * feat(ext/url): URL.canParse (#18286)
  * feat(lint): add Deno.run to no-deprecated-deno-api (#18869)
  * feat(node/crypto): Elliptic Curve Diffie-Hellman (ECDH) support (#18832)
  * feat(node/http): implement ClientRequest.setTimeout() (#18783)
  * feat(task): introduce built-in unset command to deno task (#18606)
  * feat: Deprecate Deno.run API in favor of Deno.Command (#17630) (#18866)
  * fix(compile): write bytes directly to output file (#18777)
  * fix(core): Wrap safe collections' argument of primordials (#18750)
  * fix(coverage): exclude test files (#18748)
  * fix(dts): URLPatternComponentResult groups should have
    possibly undefined key values (#18643)
  * fix(ext/node): add crypto.sign|verify methods (#18765)
  * fix(ext/node): fix hash.flush (#18818)
  * fix(ext/node): implement asymmetric keygen (#18651)
  * fix(ext/node): improve vm.runInThisContext (#18767)
  * fix(ext/node): prime generation (#18861)
  * fix(lsp): show dependency errors for repeated imports (#18807)
  * fix(npm): only include top level packages in top level
    node_modules directory (#18824)
  * fix(test): allow explicit undefined for boolean test options (#18786)
  * fix(test): handle dispatched exceptions from test functions (#18853)
  * perf(ext/http): avoid spread arg deopt in op_http_wait (#18850)
  * perf(ext/http): optimize away code based on callback length (#18849)
  * perf(ext/http): optimize for zero or one-packet response streams (#18834)
  * perf(ext/http): use smi for slab IDs (#18848)
  * perf(ext/websocket): various performance improvements (#18862)
</comment>
    <requestid>1083589</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>f10c0ba3656249cb67435acc3d9fddd5</srcmd5>
    <version>1.33.2</version>
    <time>1683295109</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.33.2:
  * fix(core): Use primordials for methods (#18839)
  * fix(core): allow esm extensions not included in snapshot (#18980)
  * fix(core): rebuild when JS sources for snapshotting change (#18976)
  * fix(ext/io) several sync fs fixes (#18886)
  * fix(ext/kv): KvU64#valueOf and KvU64 inspect (#18656)
  * fix(ext/kv): stricter structured clone serializer (#18914)
  * fix(ext/kv): throw on the Kv constructor (#18978)
  * fix(ext/node): add missing release property to node's process (#18923)
  * fix(ext/url): throw TypeError for empty argument (#18896)
  * fix(ext/websocket): update fastwebsockets to 0.3.1 (#18916)
  * fix(fmt/json): support formatting number with exponent and no sign (#18894)
  * fix(node/http): Request.setTimeout(0) should clear (#18949)
  * fix(npm): canonicalize filename before returning (#18948)
  * fix(npm): canonicalize search directory when looking for package.json (#18981)
  * fix(test): disable preventDefault() for beforeunload event (#18911)
  * perf(core): async op pseudo-codegen and performance work (#18887)
  * perf(core): use jemalloc for V8 array buffer allocator (#18875)
  * perf(ext/web): fast path for ws events (#18905)
  * perf(ext/websocket): use internal dispatch for msg events (#18904)
  * perf: lazily create RootCertStore (#18938)
  * perf: lazily retrieve ppid (#18940)
  * perf: use jemalloc as global allocator (#18957)
</comment>
    <requestid>1084917</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>98e1463cefb456d4892f3405acd11e07</srcmd5>
    <version>1.33.3</version>
    <time>1683991063</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.33.3:
  * feat(compile): unstable npm and node specifier support (#19005)
  * feat(ext/http): Automatic compression for Deno.serve (#19031)
  * feat(lsp): ability to configure document pre-load limit (#19097)
  * feat(node): add Module.runMain() (#19080)
  * fix(cli): upgrade to Typescript 5.0.4 (#19090)
  * fix(console): handle error when inspecting promise-like (#19083)
  * fix(core): always report the first error on unhandled rejection (#18992)
  * fix(core): let V8 drive extension ESM loads (#18997)
  * fix(dts): align seekSync position arg with seek (#19077)
  * fix(ext/ffi): Callbacks panic on returning isize (#19022)
  * fix(ext/ffi): UnsafeCallback can hang with 'deno test' (#19018)
  * fix(ext/fs): add more context_path (#19101)
  * fix(ext/http): Ensure Deno.serve works across --watch restarts (#18998)
  * fix(lsp): hard to soft error when unable to get completion info (#19091)
  * fix(lsp): preload documents when deno.documentPreloadLimit
    changes (#19103)
  * fix(node): conditional exports edge case (#19082)
  * fix(node): expose channels in worker_threads (#19086)
  * fix(npm): make http2 module available, make
    'nodeGlobalThisName' writable (#19092)
  * fix(runtime): ChildProcess::kill() doesn't require additional
    perms (#15339)
  * fix(vendor): better handling of redirects (#19063)
  * perf(ext/ffi): Use Box&lt;[NativeType]&gt; in CallbackInfo parameters (#19032)
  * perf(fmt): faster formatting for minified object literals (#19050)
</comment>
    <requestid>1086808</requestid>
  </revision>
  <revision rev="18" vrev="2">
    <srcmd5>c085c824ef3ce157b9dc92bc19f20031</srcmd5>
    <version>1.33.3</version>
    <time>1684415977</time>
    <user>dimstar_suse</user>
    <comment>Privacy and integration fix: disable update check.

- add deno-disable-update-check.patch
  * this stops deno from automatically checking for an update
    whenever a script is run
</comment>
    <requestid>1087713</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>b1ccd6c2a24c03f104b16e085e6ebc2b</srcmd5>
    <version>1.33.4</version>
    <time>1684490144</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.33.4:
  * fix(ext/web): Request higher-resolution timer on Windows if
    user requests setTimeout w/short delay (#19149)
  * feat(node/crypto): Builtin Diffie-Hellman Groups (#19137)
  * feat(node/crypto): Diffie Hellman Support (#18943)
  * fix(cli/napi): handle finalizers (#19168)
  * fix(deno/upgrade): allow --version vX.Y.Z (#19139)
  * fix(dts): move BroadcastChannel type to lib.deno.unstable.d.ts (#19108)
  * fix(ext/http): Ensure cancelled requests don't crash Deno.serve (#19154)
  * fix(ext/node): fix whatwg url formatting (#19146)
  * fix(ext/node): make nodeGlobalThis configurable (#19163)
  * fix(ext/webidl): change createPromiseConverter (#16367)
  * fix(ext/websocket): order of ws writes (#19131)
  * fix(fetch): Correctly decode multipart/form-data names
    and filenames (#19145)
  * fix(kv): kv.close() interrupts in-flight operations (#19076)
  * fix(lsp): increase default max heap size to 3Gb (#19115)
  * fix(napi): BigInt related APIs (#19174)
  * fix(node): export diagnostics_channel module (#19167)
  * fix(node): export punycode module (#19151)
  * fix(node): support passing parent stdio streams (#19171)
  * fix(npm): add performance.markResourceTiming sham (#19123)
  * fix(npm): improved optional dependency support (#19135)
  * fix(runtime): Box the main future to avoid blowing up the stack (#19155)
  * fix(runtime): Example hello_runtime panic (#19125)
  * fix: support &quot;fetch&quot; over HTTPS for IP addresses (#18499)
- add deno-rm-upgrade-cmd.patch
  * this removes the `deno upgrade` command
</comment>
    <requestid>1087858</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>7086c13c6573fd7ae51346221ab4aec1</srcmd5>
    <version>1.34.0</version>
    <time>1685051572</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.34.0:
  * BREAKING(unstable): change return type of Deno.serve() API (#19189)
  * feat(cli): add nodeModulesDir option to config file (#19095)
  * feat(cli): top-level exclude field in deno.json (#17778)
  * feat(ext/fs): add isBlockDevice, isCharDevice, isFifo,
    isSocket to FileInfo (#19008)
  * feat(ext/http): Add support for trailers w/internal API (HTTP/2 only) (#19182)
  * feat(ext/http): Brotli Compression (#19216)
  * feat(ext/http): ref/unref for server (#19197)
  * feat(lsp): support lockfile and node_modules directory (#19203)
  * feat(runtime): Provide environment-configurable options for
    tokio parameters (#19173)
  * feat(task): glob expansion (#19084)
  * feat(unstable): add more options to Deno.createHttpClient (#17385)
  * feat(vendor): support for npm specifiers (#19186)
  * feat: add support for globs in the config file and CLI
    arguments for files (#19102)
  * feat: top level package.json install when node_modules dir is
    explicitly opted into (#19233)
  * fix(ext/node): ClientRequest.setTimeout(0) should remove listeners (#19240)
  * fix(ext/node): add basic node:worker_threads support (#19192)
  * fix(ext/web): improve timers resolution for 0ms timeouts (#19212)
  * fix(napi): add napi_async_init and napi_async_destroy (#19234)
  * fix(node): add http.Server.unref() (#19201)
  * fix(node): duplicate node_module suffixes (#19222)
  * fix(node): fire 'unhandledrejection' event when using node:
    or npm: imports (#19235)
  * fix(node): make sure &quot;setImmediate&quot; is not clamped to 4ms (#19213)
  * fix(npm): process not defined in readline (#19184)
  * fix(npm): better handling of optional peer dependencies (#19236)
  * fix(npm): create node_modules/.deno/node_modules folder (#19242)
  * fix(npm): run pre and post tasks if present (#19178)
  * fix(npm): store npm binary command resolution in lockfile (#19219)
- rebase deno-disable-update-check.patch
- update deno-disable-update-check.patch
  * remove DENO_NO_UPDATE_CHECK block from env variables help
</comment>
    <requestid>1089028</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>3fbf09953b525f5cc4506a4b6dfe820b</srcmd5>
    <version>1.34.1</version>
    <time>1685562852</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.34.1:
  * fix(compile): handle when DENO_DIR is readonly (#19257)
  * fix(compile): implicit read permission to npm vfs (#19281)
  * fix(compile): improve panic message when stripping root path fails (#19258)
  * fix(compile): inline symlinks as files outside node_modules
    dir and warn for directories (#19285)
  * fix(ext/http): fix a possible memleak in Brotli (#19250)
  * fix(napi): clear currently registering module slot (#19249)
  * fix(napi): properly handle arguments in napi_get_cb_info (#19269)
  * fix(node): http.IncomingMessageForClient.complete (#19302)
  * fix(node): make 'v8.setFlagsFromString' a noop (#19271)
  * fix: don't print release notes on version check prompt (#19252)
  * fix: use proper ALPN protocols if HTTP client is HTTP/1.1 only (#19303)
</comment>
    <requestid>1089864</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>da838f0f1a55d7c10ede9cf7224851b7</srcmd5>
    <version>1.34.2</version>
    <time>1686927207</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.34.2:
  * fix: do not show cache initialization errors if stderr is piped (#18920)
  * fix: upgrade to deno_ast 0.27 (#19375)
  * fix(cli): formatting bench with colors (#19323)
  * fix(ext/console): fix inspecting large ArrayBuffers (#19373)
  * fix(ext/crypto): fix JWK import of Ed25519 (#19279)
  * fix(ext/web): Copy EventTarget list before dispatch (#19360)
  * fix(ext/websocket): Close socket on bad string data (#19424)
  * fix(kv) run sqlite transactions via spawn_blocking (#19350)
  * fix(napi): don't panic if symbol can't be found (#19397)
  * fix(node): add missing process.reallyExit method (#19326)
  * fix(node): Added base implementation of FileHandle (#19294)
  * fix(node): don't close stdio streams (#19256)
  * fix(node): FileHandle.close() (#19357)
  * fix(node): FileHandle.read() (#19359)
  * fix(node): FileHandle.write() (#19385)
  * fix(node): map stdio [0, 1, 2] to &quot;inherit&quot; (#19352)
  * fix(node): Very basic node:http2 support (#19344)
  * fix(node): proper url handling (#19340)
  * fix(repl): correctly print string exception (#19391)
  * fix(runtime): add missing SIGIOT alias to SIGABRT (#19333)
  * perf(cli): conditionally load typescript declaration files (#19392)
  * perf(ext/http): Add a sync phase to http serving (#19321)
  * perf(ext/http): Migrate op_http_get_request_headers to v8::Array (#19354)
  * perf(ext/http): Migrate op_http_get_request_method_and_url to
    v8::Array (#19355)
  * perf(ext/http): Use flat list of headers for multiple set/get
    methods (#19336)
  * perf(ext/websocket): Make send sync for non-stream websockets (#19376)
  * perf(ext/websocket): Reduce GC pressure &amp; monomorpize
    op_ws_next_event (#19405)
  * perf(ext/websocket): monomorphize code (#19394)
  * perf(http): avoid flattening http headers (#19384)
  * perf: optimize RegExp usage in JS (#19364)
  * perf: use sendto syscalls (#19414)
</comment>
    <requestid>1093169</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>58b7b6dee573c8b2aef041a966ba5fa7</srcmd5>
    <version>1.34.3</version>
    <time>1687272516</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.34.3:
  * feat(UNSTABLE) kv queue implementation (#19459)
  * fix(cli): avoid crash on import of invalid module names (#19523)
  * fix(compile): some npm dependencies were missing in compiled output (#19503)
  * fix(config): do not canonicalize config file path before loading (#19436)
  * fix(ext/http): Include hostname in onListen argument (#19497)
  * fix(ext/http): replace await Deno.serve with await
    Deno.serve().finished (#19485)
  * fix(ext/node): HTTPS server (#19362)
  * fix(ext/node): handle 'upgrade' responses (#19412)
  * fix(ext/node): make Buffer.slice be the same as subarray (#19481)
  * fix(ext/websockets): ensure we fully send frames before close (#19484)
  * fix(fmt): do not panic formatting json with multiple values (#19442)
  * fix(lsp): don't pre-load documents matched in the config
    file's &quot;exclude&quot; (#19431)
  * fix(lsp): update import map config when deno.json changes (#19476)
  * fix(ext/node): Worker constructor doesn't check type: module
    of package.json (#19480)
  * fix(npm): warn when tarball contains hardlink or symlink (#19474)
  * fix: reload config files on watcher restarts (#19487)
  * perf(ext/http): from_maybe_shared_unchecked for header values (#19478)
  * perf(http): cache verified headers (#19465)
  * perf(node): cache realpath_sync calls in read permission check (#19379)
  * perf(serve): hoist promise error callback (#19456)
  * perf(serve): hoist repeated condition (#19449)
  * perf(web): optimize timer resolution (#19493)
  * perf: don't run microtask checkpoint if macrotask callback
    did no work (#19492)
  * perf: optimize ByteString checks, hoist server rid getter (#19452)
- rebase deno-rm-upgrade-cmd.patch
- add deno-pull-19537.patch to build unsafe tokio features
</comment>
    <requestid>1093816</requestid>
  </revision>
</revisionlist>
