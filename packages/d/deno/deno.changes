-------------------------------------------------------------------
Mon Mar  4 21:20:52 UTC 2024 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.41.1:
  * feat(unstable): deno add subcommand (#22520)
  * feat(unstable/lsp): jsr specifier completions (#22612)
  * feat(unstable/publish): discover jsr.json and jsr.jsonc files (#22587)
  * feat(unstable/publish): enable package provenance by default 
    on github actions (#22635)
  * feat(unstable/publish): infer dependencies from package.json (#22563)
  * feat(unstable/publish): provenance attestation (#22573)
  * feat(unstable/publish): respect .gitignore during deno publish (#22514)
  * feat(unstable/publish): support sloppy imports and bare node 
    built-ins (#22588)
  * fix(compile): add aarch64 linux to CliOptions::npm_system_info (#22567)
  * fix(compile): allow to compile for ARM linux (#22542)
  * fix(ext/crypto): align the return type of crypto.randomUUID to
  * cli/tsc/dts/lib.dom.d.ts (#22465)
  * fix(ext/node) add node http methods (#22630)
  * fix(ext/node): init arch, pid, platform at startup (#22561)
  * fix(ext/node): set correct process.argv0 (#22555)
  * fix(io): create_named_pipe parallelism (#22597)
  * fix(jsr): do not allow importing a non-JSR url via
    unanalyzable dynamic import from JSR (#22623)
  * fix(jsr): relative dynamic imports in jsr packages (#22624)
  * fix(lsp): import map expansion (#22553)
  * fix(publish): disable provenance if not in GHA (#22638)
  * fix(publish): make the already published message look like a 
    warning (#22620)
  * fix(publish): print a warning when .jsx or .tsx is imported (#22631)
  * fix(publish): reduce warnings about dynamic imports (#22636)
  * fix(test): ensure that pre- and post-test output is flushed 
    at the appropriate times (#22611)
  * fix(unstable): add Date#toTemporalInstant type (#22637)
  * fix(unstable): sloppy imports should resolve .d.ts files 
    during types resolution (#22602)
  * perf(cli): reduce overhead in test registration (#22552)
  * perf(fmt): reduce memory usage and improve performance (#22570)
- rebase deno-rm-upgrade-cmd.patch

-------------------------------------------------------------------
Thu Feb 22 21:07:56 UTC 2024 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.41.0:
  * BREAKING(net/unstable): remove Deno.DatagramConn.rid (#22475)
  * BREAKING(unstable): remove Deno.HttpClient.rid (#22075)
  * BREAKING: add Deno.CreateHttpClientOptions.{cert,key} (#22280)
  * feat(fs): Deno.FsFile.{isTerminal,setRaw}() (#22234)
  * feat(lsp): auto-import completions for jsr specifiers (#22462)
  * feat(publish): type check on publish (#22506)
  * feat(unstable): single checksum per JSR package in the lockfile (#22421)
  * feat(unstable/lint): no-slow-types for JSR packages (#22430)
  * feat: Deno.ConnectTlsOptions.{cert,key} (#22274)
  * fix(compile): respect compiler options for emit (#22521)
  * fix(ext/fs): make errors in tempfile creation clearer (#22498)
  * fix(ext/node): pass alpnProtocols to Deno.startTls (#22512)
  * fix(ext/node): permission prompt for missing process.env
    permissions (#22487)
  * fix(fmt): remove debug output when formatting dynamic imports (#22433)
  * fix(lsp): add schema for JSR related config options (#22497)
  * fix(node/test): disable Deno test sanitizers (#22480)
  * fix(publish): better no-slow-types type discovery (#22517)
  * fix(publish): ignore .DS_Store while publishing (#22478)
  * fix(publish): print files that will be published (#22495)
  * fix: util.parseArgs() missing node:process import (#22405)
  * fix: write lockfile in deno info (#22272)
  * perf(jsr): fast check cache and lazy fast check graph (#22485)
  * perf: linter lsp memory leak fix and deno_graph executor (#22519)
  * perf: strip denort on unix (#22426)

-------------------------------------------------------------------
Thu Feb 15 20:09:35 UTC 2024 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.40.5:
  * feat(lsp): jsr support first pass (#22382)
  * feat(lsp): jsr support with cache probing (#22418)
  * feat(publish): allow passing config flag (#22416)
  * feat(unstable): define config in publish url (#22406)
  * perf: denort binary for deno compile (#22205)
  * fix(console): support NO_COLOR and colors option in
    all scenarios (#21910)
  * fix(ext/node): export process.umask (#22348)
  * fix(ext/web): Prevent (De-)CompressionStream resource leak on
    stream cancellation (#21199)
  * fix(lsp): complete npm specifier versions correctly (#22332)
  * fix: cache bust jsr deps on constraint failure (#22372)
  * fix: handle non-file scopes in synthetic import map (#22361)
  * fix: lockfile was sometimes getting corrupt when changing
    config deps (#22359)
  * fix: upgrade to deno_ast 0.33 (#22341)
- rebase deno-rm-upgrade-cmd.patch

-------------------------------------------------------------------
Fri Feb  9 04:26:49 UTC 2024 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.40.4:
  * see https://deno.com/blog/v1.39
  * see https://deno.com/blog/v1.40
- rebase deno-disable-update-check.patch
- rebase deno-rm-upgrade-cmd.patch

-------------------------------------------------------------------
Fri Nov 17 20:58:39 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.38.2:
  * feat(ext/web): add AbortSignal.any() (#21087)
  * feat(lsp): upgrade check on init and notification (#21105)
  * fix(cli): Allow executable name start with digit (#21214)
  * fix(doc): issue discovering re-exports of re-exports sometimes (#21223)
  * fix(ext/node): Re-enable alloc max size test (#21059)
  * fix(ext/node): add APIs perf_hook.performance (#21192)
  * fix(ext/node): implement process.geteuid (#21151)
  * fix(ext/web): Prevent TextDecoderStream resource leak on
    stream cancellation (#21074)
  * fix(ext/web): webstorage has trap for symbol (#21090)
  * fix(install): should work with non-existent relative root (#21161)
  * fix(lsp): update tsconfig after refreshing settings on init (#21170)
  * fix(node/http): export globalAgent (#21081)
  * fix(npm): support cjs entrypoint in node_modules folder (#21224)
  * fix(runtime): fix Deno.noColor when stdout is not tty (#21208)
  * fix: improve deno doc --lint error messages (#21156)
  * fix: use short git hash for deno version (#21218)
  * perf(cli): strace mode for ops (undocumented) (#21131)
  * perf(ext/http): Object pooling for HttpRecord and HeaderMap (#20809)
  * perf: lazy bootstrap options - first pass (#21164)
  * perf: move jupyter esm out of main snapshot (#21163)
  * perf: snapshot runtime ops (#21127)
  * perf: static bootstrap options in snapshot (#21213)
- rebase deno-disable-update-check.patch

-------------------------------------------------------------------
Fri Nov 10 20:01:44 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.38.1:
  * feat(ext/kv): increase checks limit (#21055)
  * fix small Deno.createHttpClient typo in lib.deno.unstable.d.ts (#21115)
  * fix(byonm): correct resolution for scoped packages (#21083)
  * fix(core/types): Promise.withResolvers: Unmark callback param
    as optional (#21085)
  * fix(cron): update Deno.cron doc example (#21078)
  * fix(doc): deno doc --lint mod.ts should output how many files checked
    (#21084)
  * fix(doc): require source files if --html or --lint used (#21072)
  * fix(ext): use String#toWellFormed in ext/webidl and ext/node (#21054)
  * fix(ext/fetch): re-align return type in op_fetch docstring (#21098)
  * fix(ext/http): Throwing Error if the return value of
    Deno.serve handler is not a Response class (#21099)
  * fix(node): cjs export analysis should probe for json files (#21113)
  * fix(node): implement createPrivateKey (#20981)
  * fix(node): inspect ancestor directories when resolving cjs re-
    exports during analysis (#21104)
  * fix(node): use closest package.json to resolve package.json imports (#21075)
  * fix(node/child_process): properly normalize stdio for 'spawnSync' (#21103)
  * fix(node/http): socket.setTimeout (#20930)
  * fix(test) reduce queue persistence test time from 60 secs to
    6 secs (#21142)
  * perf: lazy atexit setup (#21053)
  * perf: remove knowledge of promise IDs from deno (#21132)

-------------------------------------------------------------------
Thu Nov  2 21:21:42 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.38.0:
  * feat(cron) implement Deno.cron() (#21019)
  * feat(doc): display non-exported types referenced in
    exported types (#20990)
  * feat(doc): improve non-exported diagnostic (#21033)
  * feat(doc): support multiple file entry (#21018)
  * feat(ext/kv): support key expiration in remote backend (#20688)
  * feat(ext/web): EventSource (#14730)
  * feat(ext/websocket): split websocket read/write halves (#20579)
  * feat(ext/websocket): use rustls-tokio-stream instead of
    tokio-rustls (#20518)
  * feat(ext/websocket): websockets over http2 (#21040)
  * feat(lsp): respect "typescript.preferences.quoteStyle" when
    deno.json is absent (#20891)
  * feat(task): add head command (#20998)
  * feat(unstable): deno run --env (#20300)
  * feat(unstable): ability to npm install then deno run main.ts (#20967)
  * feat(unstable): allow bare specifier for builtin node module (#20728)
  * feat: deno doc --lint (#21032)
  * feat: deno doc --html (#21015)
  * feat: deno run --unstable-hmr (#20876)
  * feat: disposable Deno resources (#20845)
  * feat: enable Array.fromAsync (#21048)
  * feat: granular --unstable-* flags (#20968)
  * feat: precompile JSX (#20962)
  * feat: rename Deno.Server to Deno.HttpServer (#20842)
  * fix(ext/ffi): use anybuffer for op_ffi_buf_copy_into (#21006)
  * fix(ext/http): patch regression in variadic args to serve handler (#20796)
  * fix(ext/node): adapt dynamic type checking to Node.js behavior (#21014)
  * fix(ext/node): process.argv0 (#20925)
  * fix(ext/node): tty streams extends net socket (#21026)
  * fix(lsp): don't commit registry completions on "/" (#20902)
  * fix(lsp): include mtime in tsc script version (#20911)
  * fix(lsp): show diagnostics for untitled files (#20916)
  * fix(node): resolve file.d specifiers in npm packages (#20918)
  * fix(polyfill): correctly handle flag when its equal 0 (#20953)
  * fix(repl): jsxImportSource was not working (#21049)
  * fix(repl): support transforming JSX/TSX (#20695)
  * fix(test): --junit-path should handle when the dir doesn't exist (#21044)
  * fix(unstable/byonm): improve error messages (#20987)
  * fix: add 'unstable' property to config json schema (#20984)
  * fix: add missing Object.groupBy() and Map.groupBy() types (#21050)
  * fix: implement node:tty (#20892)
  * fix: improved using declaration support (#20959)
  * perf(ext/streams): optimize streams (#20649)
  * perf(lsp): cleanup workspace settings scopes (#20937)
  * perf(lsp): fix redundant walk when collecting tsc code lenses (#20974)
  * perf: use deno_native_certs crate (#18072)
- rebase deno-disable-update-check.patch

-------------------------------------------------------------------
Sat Oct 14 21:13:35 UTC 2023 - avindra <avindra@opensuse.org>

- update to 1.37.2:
  * feat(ext/web): cancel support for TransformStream (#20815)
  * feat(lsp): jupyter notebook analysis (#20719)
  * feat(lsp): send "deno/didChangeDenoConfiguration" notifications (#20827)
  * feat(unstable): add Deno.jupyter.display API (#20819)
  * feat(unstable): add unix domain socket support to Deno.serve (#20759)
  * feat(unstable): Await return from Jupyter.display (#20807)
  * feat(unstable): send binary data with Deno.jupyter.broadcast (#20755)
  * feat(unstable): send Jupyter messaging metadata with
    Deno.  jupyter.broadcast (#20714)
  * feat(unstable): support Deno.test() (#20778)
  * fix(bench): use total time when measuring wavg (#20862)
  * fix(cli): Support using both --watch and --inspect at the
    same time (#20660)
  * fix(cli): panic with __runtime_js_sources (#20704)
  * fix(ext/ffi): use anybuffer for op_ffi_ptr_of (#20820)
  * fix(ext/formdata): support multiple headers in FormData (#20801)
  * fix(ext/http): Deno.Server should not be thenable (#20723)
  * fix(ext/kv): send queue wake messages accross different kv
    instances (#20465)
  * fix(ext/node): don't call undefined nextTick fn (#20724)
  * fix(ext/node): fix TypeError in Buffer.from with base64url
    encoding. (#20705)
  * fix(ext/node): implement uv.errname (#20785)
  * fix(ext/web): writability of ReadableStream.from (#20836)
  * fix(jupyter): Rename logo assets so they are discoverable (#20806)
  * fix(jupyter): keep this around (#20789)
  * fix(jupyter): more robust Deno.jupyter namespace (#20710)
  * fix(lsp): allow formatting vendor files (#20844)
  * fix(lsp): normalize "deno:" urls statelessly (#20867)
  * fix(lsp): percent-encode host in deno: specifiers (#20811)
  * fix(lsp): show diagnostics for type imports from untyped deps (#20780)
  * fix(node/buffer): utf8ToBytes should return a Uint8Array (#20769)
  * fix(node/http2): fixes to support grpc (#20712)
  * fix(npm): upgrade to deno_npm 0.15.2 (#20772)
  * fix(upgrade): use tar.exe to extract on Windows (#20711)
  * fix: define window.name (#20804)
  * fix: upgrade dprint-plugin-markdown 0.16.2 and typescript 0.88.1 (#20879)
  * perf(ext/web): optimize DOMException (#20715)
  * perf(ext/web): optimize structuredClone without transferables (#20730)
  * perf(lsp): fix redundant file reads (#20802)
  * perf(lsp): optimize formatting minified files (#20829)
  * perf(node): use faster utf8 byte length in Buffer#from (#20746)

-------------------------------------------------------------------
Wed Sep 27 21:32:05 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.37.1:
  * feat(ext/web): use readableStreamDefaultReaderRead in
  * resourceForReadableStream (#20622)
  * feat(kv_queues): increase max queue delay to 30 days (#20626)
  * feat(lsp): cache all dependencies quick fix (#20665)
  * feat(lsp): support more vscode built-in settings (#20679)
  * feat(unstable): add Deno.jupyter.broadcast API (#20656)
  * fix(cli/test): clear connection pool after tests (#20680)
  * fix(ext/http): ensure that resources are closed when request
    is cancelled (#20641)
  * fix(ext/node): Fix invalid length variable reference in blitBuffer (#20648)
  * fix(ext/node): simplified array.from + map (#20653)
  * fix(ext/web): Aggregate small packets for Resource
    implementation of ReadableStream (#20570)
  * fix(jupyter): await Jupyter.display evaluation (#20646)
  * fix(kv): unflake kv unit tests (#20640)
  * fix(kv_queues): graceful shutdown (#20627)
  * fix(lsp): allow query strings for "deno:/status.md" (#20697)
  * fix(lsp): resolve remote import maps (#20651)
  * fix(lsp): show related information for tsc diagnostics (#20654)
  * fix(node): point process.version to Node 18.18.0 LTS (#20597)
  * fix(node): supported arguments to randomFillSync (#20637)
  * fix(node/package_json): Avoid panic when "exports" field is null (#20588)
  * fix(upgrade): error instead of panic on unzip failure (#20691)
  * perf(ext/fetch): use new instead of createBranded (#20624)
  * perf(test): use core.currentUserCallSite (#20669)
  * perf(test): use fast ops for deno test register (#20670)

-------------------------------------------------------------------
Tue Sep 19 22:15:27 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.37.0:
  * feat: Add "deno jupyter" subcommand (#20337, #20552, #20530, #20537, #20546)
  * feat(test): add TAP test reporter (#14390, #20073)
  * feat(ext/node): http2.connect() API (#19671)
  * feat(ext/web): Add name to Deno.customInspect of File objects (#20415)
  * feat(lint): --rules print all rules (#20256)
  * feat(lockfile): add redirects to the lockfile (#20262)
  * feat(lsp): WorkspaceSettings::disablePaths (#20475)
  * feat(lsp): enable via config file detection (#20334, #20349)
  * feat(lsp): include source in auto import completion label (#20523)
  * feat(lsp): npm specifier completions (#20121)
  * feat(lsp): provide the deno.cache command server-side (#20111)
  * feat(lsp): update imports on file rename (#20245)
  * feat(test): Add Deno.test.ignore and Deno.test.only (#20365)
  * feat(unstable): package manager (#20517)
  * feat: TypeScript 5.2 (#20425)
  * feat: explicit resource management in TypeScript (#20506)
  * feat: lockfile v3 (#20424)
  * feat: support import attributes (#20342)
  * fix(cli): ensure that an exception in getOwnPropertyDescriptor
    ('constructor') doesn't break Deno.inspect (#20568)
  * fix(cli): for main-module that exists in package.json, use
    the version defined in package.json directly (#20328)
  * fix(compile): support providing flags as args (#20422)
  * fix(evt/kv): Add serde feature to uuid (#20350)
  * fix(ext/crypto): remove EdDSA alg key checks and export (#20331)
  * fix(ext/http): create a graceful shutdown API (#20387)
  * fix(ext/http): ensure aborted bodies throw (#20503)
  * fix(ext/kv): add a warning for listenQueue if used with remote KV (#20341)
  * fix(ext/kv): same expireIn should generate same expireAt (#20396)
  * fix(ext/node): implement AES GCM cipher (#20368)
  * fix(ext/node): remove unnecessary and incorrect type priority_t (#20276)
  * fix(ext/node/ops/zlib/brotli): Allow decompressing more than 4096 bytes (#20301)
  * fix(fmt/markdown): improve ignore comment handling (#20421)
  * fix(init): skip existing files instead of erroring (#20434)
  * fix(lsp): always enable semantic tokens responses (#20440)
  * fix(lsp): force correct media type detection from tsc (#20562)
  * fix(lsp): include JSON modules in local import completions (#20536)
  * fix(lsp): match enable_paths by whole path components (#20470)
  * fix(lsp): pass quote preference to tsc (#20547)
  * fix(lsp): prefer local auto-import specifiers (#20539)
  * fix(lsp): properly handle disabled configuration requests (#20358)
  * fix(lsp): recreate npm search cache when cache path changes (#20327)
  * fix(lsp): refresh npm completions on each character (#20565)
  * fix(lsp): respect configured exclusions for testing APIs (#20427)
  * fix(lsp): restore tsc's quick fix ordering (#20545)
  * fix(lsp): sort quickfix actions (#17221)
  * fix(node): Bump hardcoded version to latest (#20366)
  * fix(node/child_process): don't crash on undefined/null value
    of an env var (#20378)
  * fix(node/http): correctly send Content-length header instead
    of Transfer-Encoding: chunked (#20127)
  * fix(npm): properly handle legacy shasum of package (#20557)
  * fix(runtime/permissions): Resolve executable specifiers in allowlists and queries (#14130)
  * fix(test): apply filter before checking for "only" (#20389)
  * fix(test): share fail fast tracker between threads (#20515)
  * fix: Deno.Command - improve error message when cwd is not a directory (#20460)
  * fix: don't show filtered test suites as running (#20385)
  * fix: empty include in config file excludes all (#20404)
  * fix: exclude internal JS files from coverage (#20448)
  * fix: init v8 platform once on main thread (#20495)
  * fix: output traces for op sanitizer in more cases (#20494)
  * perf(ext/http): optimize set_response for small responses (#20527)
  * perf(ext/node): Optimise Buffer string operations (#20158)
  * perf(ext/streams): optimize async iterator (#20541)
  * perf(node/net): optimize socket reads for 'npm:ws' package (#20449)
  * perf: improve async op santizer speed and accuracy (#20501)
  * perf: make deno test 10x faster (#20550)

-------------------------------------------------------------------
Sat Sep  2 18:44:45 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.36.4
  * feat(ext/kv): connect to remote database (#20178)
  * feat(node): use i32 for priority_t on MacOS and {Free,Open}BSD (#20286)
  * fix(bench): explicit timers don't force high precision measurements (#20272)
  * fix(ext/http): don't panic on stream responses in cancelled requests (#20316)
  * fix(ext/kv): don't panic if listening on queues and KV is not closed (#20317)
  * fix(ext/node): fix argv[1] in Worker (#20305)
  * fix(ext/node): shared global buffer unlock correctness fix (#20314)
  * fix(ext/tls): upgrade webpki version (#20285)
  * fix(fmt/markdown): ignore trailing words in code block info
    string for language detection (#20310)
  * fix(kv) increase number of allowed mutations in atomic (#20126)
  * fix(lsp): delete test modules with all tests deleted (#20321)
  * fix(lsp): implement deno.suggest.completeFunctionCalls (#20214)
  * fix(lsp): test explorer panic on step result (#20289)
  * fix(lsp/testing): don't queue modules without tests (#20277)
  * fix(lsp/testing): use full ancestry to compute static id of step (#20297)
  * fix(napi): ignore tsfn recv error (#20324)
  * fix(network): adjust Listener type params (#18642)
  * fix(node): propagate create cipher errors (#20280)
  * fix(node/http): don't leak resources on destroyed request (#20040)
  * fix: unexpected lsp function arg comma completion (#20311)
- includes 1.36.3
  * fix(build): socket2 compile error
  * fix(cli): add timeout on inspector tests (#20225)
  * fix(ext/node): simultaneous reads can leak into each other (#20223)
  * fix(ext/web): add stream tests to detect v8slice split bug (#20253)
  * fix(ext/web): better handling of errors in resourceForReadableStream (#20238)
  * fix(lint): erroneous remove await in async (#20235)
  * fix: add missing URL.canParse() types (#20244)
- include protoc dependency
  * see https://github.com/denoland/deno/pull/20178

-------------------------------------------------------------------
Mon Aug 21 19:23:04 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.36.2:
  * feat(ext/kv): key expiration (#20091)
  * feat(ext/node): eagerly bootstrap node (#20153)
  * feat(unstable): Improve FFI types (#20215)
  * fix(cli) error gracefully when script arg is not present and
    --v8-flags is present in deno run (#20145)
  * fix(cli): handle missing now field in cache (#20192)
  * fix(ext/fetch): clone second branch chunks in Body.clone() (#20057)
  * fix(ext/http): ensure request body resource lives as long as
    response is alive (#20206)
  * fix(ext/kv): retry transaction on SQLITE_BUSY errors (#20189)
  * fix(ext/net): implement a graceful error on an invalid SSL
    certificate (#20157)
  * fix(ext/node): allow for the reassignment of userInfo() on
    Windows (#20165)
  * fix(ext/node): support dictionary option in zlib init (#20035)
  * fix(lsp): pass fmt options to completion requests (#20184)
  * fix(node): don't print warning on process.dlopen.flags (#20124)
  * fix(node): implement TLSSocket._start (#20120)
  * fix(node): object keys in publicEncrypt (#20128)
  * fix(node/http): emit error when addr in use (#20200)
  * fix(npm): do not panic providing file url to require.resolve paths (#20182)
  * fix(require): use canonicalized path for loading content (#20133)
  * fix(runtime): navigator.userAgent in web worker (#20129)
  * fix(runtime): use host header for inspector websocket URL (#20171)
  * fix(test): JUnit reporter includes file, line and column attributes (#20174)
  * fix(unstable): disable importing from the vendor directory (#20067)
  * fix: release ReadeableStream in fetch (#17365)
  * perf(ext/event): always set timeStamp to 0 (#20191)
  * perf(ext/event): optimize Event constructor (#20181)
  * perf(ext/event): optimize addEventListener options converter (#20203)
  * perf(ext/event): replace ReflectHas with object lookup (#20190)
  * perf(ext/headers): cache iterableHeaders for immutable Headers (#20132)
  * perf(ext/headers): optimize getHeader using for loop (#20115)
  * perf(ext/headers): optimize headers iterable (#20155)
  * perf(ext/headers): use regex.test instead of .exec (#20125)
  * perf(ext/http): use ServeHandlerInfo class instead of object literal (#20122)
  * perf(ext/node): cache IncomingMessageForServer.headers (#20147)
  * perf(ext/node): optimize http headers (#20163)
  * perf(ext/request): optimize Request constructor (#20141)
  * perf(ext/request): optimize validate and normalize HTTP method (#20143)
  * perf(ext/urlpattern): optimize URLPattern.exec (#20170)
  * perf(http): use Cow<[u8]> for setting header (#20112)

-------------------------------------------------------------------
Thu Aug 10 19:30:20 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.36.1:
  * feat(unstable): rename deno_modules to vendor (#20065)
  * fix(ext/abort): trigger AbortSignal events in correct order (#20095)
  * fix(ext/file): resolve unresolved Promise in Blob.stream (#20039)
  * fix(ext/http): serveHttp brotli compression level should be
    fastest (#20058)
  * fix(ext/http): unify default gzip compression level (#20050)
  * fix(ext/timers): some timers are not resolved (#20055)
  * fix(fmt): do not insert expr stmt leading semi-colon in do
    while stmt body (#20093)
  * fix(node): polyfill process.title (#20044)
  * fix(node): repl._builtinLibs (#20046)
  * fix(node/async_hooks): dont pop async context frame if stack
    if empty (#20077)
  * fix(test): handle ASCII escape chars in test name (#20081)
  * fix(test): make test runner work when global setTimeout is 
    replaced (#20052)
  * fix(test): use only a single timeout for op sanitizers (#20042)
  * fix(unstable): vendor cache override should handle forbidden
    windows directory names (#20069)
  * fix(unstable): vendor cache should support adding files to
    hashed directories (#20070)
  * perf(ext/headers): use .push loop instead of spread operator (#20108)
- bump rusty_v8 to 0.75.0

-------------------------------------------------------------------
Tue Aug  8 17:20:16 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.36.0:
  * feat(bench): add BenchContext::start() and BenchContext::end() (#18734)
  * feat(bench): print iter/s in the report (#19994)
  * feat(cli): Add dot test reporter (#19804)
  * feat(cli): Adding JUnit test reports (#19747)
  * feat(compile): Add --no-terminal to compile command (#17991)
  * feat(ext/http): Upgrade to hyper1.0-rc4 (#19987)
  * feat(ext/websocket): allow HTTP(S) protocol in URL (#19862)
  * feat(node): add polyfill for node:test module (#20002)
  * feat(node/os): implement getPriority, setPriority & userInfo (#19370)
  * feat(npm): support running non-bin scripts in npm pkgs via deno run (#19975)
  * feat(permissions): add "--deny-*" flags (#19070)
  * feat(unstable): optional deno_modules directory (#19977)
  * feat(unstable/lsp): support navigating to deno_modules folder (#20030)
  * feat: Deno.createHttpClient allowHost (#19689)
  * fix(Deno.serve): accessing .url on cloned request throws (#19869)
  * fix(bench): iter/s calculation (#20016)
  * fix(check): should bust check cache when json module or npm
    resolution changes (#19941)
  * fix(ext/compression): throw TypeError on corrupt input (#19979)
  * fix(ext/fs): fix MaybeArc when not sync_fs (#19950)
  * fix(ext/node): fix import json using npm specifier (#19723)
  * fix(lsp): handle import mapped node: specifier (#19956)
  * fix(node): node:test reports correct location (#20025)
  * fix(node): package path not exported error - add if types
    resolution was occurring (#19963)
  * fix(npm): improve declaration resolution for filename with
    different extensions (#19966)
  * fix(repl): highlight from ident in import from or export from (#20023)
  * fix(test): request cloning should throw if body stream is locked (#19990)
  * fix: call setIsTrusted for generated events (MessageEvent) (#19919)
  * fix: deno diagnostic - clarify where to put triple-slash directive (#20009)
  * fix: do not include jsx without @ts-check in tsc roots (#19964)
  * fix: error on invalid & unsupported jsx compiler options (#19954)
  * fix: make "suggest.autoImports" to switch completions from 
    external modules (#19845)
  * fix: regression in workers using dynamic imports (#20006)
  * fix: retry module download once if server errored (#17252)
  * perf(ext/ffi): Avoid receiving on FFI async work channel when no
  * UnsafeCallback exists (#19454)
  * perf: faster node globals access in cjs (#19997)
- includes 1.35.3:
  * feat(runtime): sys_info.rs - Use KERN_OSRELEASE on {Free,Open}BSD (#19849)
  * fix(cli): build script panics on musl due to glibc_version check (#19913)
  * fix(cli): output file handling in deno upgrade (#18994)
  * fix(cli/init): update to assert/mod.ts (#19924)
  * fix(cli/test): fix clear screen behavior when run deno test --watch (#19888)
  * fix(ext/http): Error on deprecated/unavailable features (#19880)
  * fix(ext/http): Quietly ignore invalid status codes (#19936)
  * fix(ext/net): fix string port number handling in listen (#19921)
  * fix(ext/node): inspector with seggregated globals (#19917)
  * fix(lint): allow to use --rules with --rules-tags (#19754)
  * fix(lsp): auto-discover deno.json in more cases (#19894)
  * fix(lsp): handle watched files events from symlinked config files (#19898)
  * fix(node): add writable and readable fields to FakeSocket (#19931)
  * fix(node/http): add encrypted field to FakeSocket (#19886)
  * fix(node_compat): Wrap require resolve exports in try catch block (#19592)
  * fix(task): ensure quoted strings are maintained mid-word (#19944)
  * fix: deno info should respect import map (#19781)
  * perf(lsp): format in a blocking task (#19883)
  * perf: cache node resolution when accesing a global (#19930)

-------------------------------------------------------------------
Fri Jul 21 22:59:28 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.35.2:
  * fix(bench): run warmup benchmark to break JIT bias (#19844)
  * fix(ext/node): check if resource can be used with
    write_vectored (#19868)
  * fix(ext/node): fix stream/promises export (#19820)
  * fix(ext/node): properly segregate node globals (#19307)
  * fix(napi): update env_test.js (#19876)
  * fix(node): add process.dlopen API (#19860)
  * fix(node): improve error message requiring non-npm es module (#19856)
  * fix(node): improve require esm error messages (#19853)
  * fix(node/http): call callback after request is sent (#19871)
  * fix(node/net): Server connection callback include socket
    value (#19779)
  * fix(npm): improve error message importing non-existent file
    in a node_modules npm package (#19835)
  * fix(npm): improve error message on directory import in npm
    package (#19538)
  * fix(npm): support dynamic import of Deno TS from npm package (#19858)
  * fix(runtime): print process name in case of spawn error (#19855)
  * fix(tsc): more informative diagnostic when Deno does not exist (#19825)
  * fix(vendor): do not panic vendoring with jsxImportSource and
    no jsx files (#19837)

-------------------------------------------------------------------
Thu Jul 13 03:03:57 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.35.1:
  * fix(ext/http): Use brotli compression params (#19758)
  * fix(lsp): exclude files in deno.json "exclude" (#19791)
  * fix(lsp): remove quotes and period surrounding specifier in
    uncached messages (#19794)
  * fix(lsp): stop diagnostics flickering (#19803)
  * fix(node/http): add destroy to FakeSocket (#19796)
  * fix(node/http): allow callback in first argument of end call (#19778)
  * fix(node/http): server use FakeSocket and add end method (#19660)
  * fix(vendor): support import mapped jsxImportSource (#19724)
  * fix: remove unstable check for Deno.listenTls#alpnProtocols (#19732)
  * perf(ext/node): native vectored write for server streams (#19752)
  * perf(ext/node): optimize net streams (#19678)
  * perf(ext/websocket): optimize server websocket js (#19719)
  * perf(node/async_hooks): optimize AsyncLocalStorage (#19729)
  * perf: add setup cache for node_modules folder (#19787)

-------------------------------------------------------------------
Wed Jul  5 04:58:10 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.35.0:
  * feat: add more Deno.errors classes (#19514)
  * feat: ReadableStream.from (#19446)
  * feat: stabilize 'alpnProtocols' setting (#19704)
  * feat: Stabilize Deno.serve() API (#19141)
  * feat: upgrade to TypeScript 5.1.6 (#19695)
  * feat(ext/fetch): add Headers#getSetCookie (#13542)
  * feat(ext/url): URLSearchParams two-argument delete() and has() (#19654)
  * feat(lock): skip saving declaration files in the lockfile (#19447)
  * feat(lsp): basic support of auto-imports for npm specifiers (#19675)
  * feat(lsp): support import maps in quick fix and auto-imports (#19692)
  * fix(cli): Fix the bug where the command description is not
    displayed. (#19604)
  * fix: add exactOptionalPropertyTypes for configuration file
    JSON schema (#19647)
  * fix: bump default @types/node version range to 18.16.19 (#19706)
  * fix(cli): don't store blob and data urls in the module cache (#18581)
  * fix(cli/napi): napi_get_buffer_info accepts ArrayBufferView
    not just Uint8Array.(#19551)
  * fix(cli/napi): property with getter/setter always failed (#19562)
  * fix(console): correct the parseCssColor algorithm (#19645)
  * fix(dts): make globals available on globalThis (#19438)
  * fix(ext/crypto): Fix WebCrypto API's deriveKey (#19545)
  * fix(ext/fs): fix boolean checks in JS parser (#19586)
  * fix(ext/http): Catch errors in eager stream timeout to avoid
    uncaught promise rejections (#19691)
  * fix(ext/kv): expose Deno.AtomicOperation (#19674)
  * fix(ext/node): Define performance.timeOrigin as getter property (#19714)
  * fix(ext/node): ignore cancelled timer when node timer refresh (#19637)
  * fix(ext/node): support brotli APIs (#19223)
  * fix(ext/websocket): Ensure that errors are available after
    async response returns (#19642)
  * fix(node/http): add setKeepAlive to FakeSocket (#19659)
  * fix(npm): escape export identifier in double quoted string (#19694)
  * fix(npm): handle more reserved words as cjs exports (#19672)
  * fix(npm): support siblings that are peer dependencies of each
    other (#19657)
- remove upstreamed deno-pull-19537.patch
- rebase deno-rm-upgrade-cmd.patch

-------------------------------------------------------------------
Thu Jun 22 09:47:00 UTC 2023 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Fix patch numbering for deno-disable-lto.patch

-------------------------------------------------------------------
Sun Jun 18 20:19:32 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.34.3:
  * feat(UNSTABLE) kv queue implementation (#19459)
  * fix(cli): avoid crash on import of invalid module names (#19523)
  * fix(compile): some npm dependencies were missing in compiled output (#19503)
  * fix(config): do not canonicalize config file path before loading (#19436)
  * fix(ext/http): Include hostname in onListen argument (#19497)
  * fix(ext/http): replace await Deno.serve with await
    Deno.serve().finished (#19485)
  * fix(ext/node): HTTPS server (#19362)
  * fix(ext/node): handle 'upgrade' responses (#19412)
  * fix(ext/node): make Buffer.slice be the same as subarray (#19481)
  * fix(ext/websockets): ensure we fully send frames before close (#19484)
  * fix(fmt): do not panic formatting json with multiple values (#19442)
  * fix(lsp): don't pre-load documents matched in the config
    file's "exclude" (#19431)
  * fix(lsp): update import map config when deno.json changes (#19476)
  * fix(ext/node): Worker constructor doesn't check type: module
    of package.json (#19480)
  * fix(npm): warn when tarball contains hardlink or symlink (#19474)
  * fix: reload config files on watcher restarts (#19487)
  * perf(ext/http): from_maybe_shared_unchecked for header values (#19478)
  * perf(http): cache verified headers (#19465)
  * perf(node): cache realpath_sync calls in read permission check (#19379)
  * perf(serve): hoist promise error callback (#19456)
  * perf(serve): hoist repeated condition (#19449)
  * perf(web): optimize timer resolution (#19493)
  * perf: don't run microtask checkpoint if macrotask callback
    did no work (#19492)
  * perf: optimize ByteString checks, hoist server rid getter (#19452)
- rebase deno-rm-upgrade-cmd.patch
- add deno-pull-19537.patch to build unsafe tokio features

-------------------------------------------------------------------
Wed Jun 14 18:31:25 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.34.2:
  * fix: do not show cache initialization errors if stderr is piped (#18920)
  * fix: upgrade to deno_ast 0.27 (#19375)
  * fix(cli): formatting bench with colors (#19323)
  * fix(ext/console): fix inspecting large ArrayBuffers (#19373)
  * fix(ext/crypto): fix JWK import of Ed25519 (#19279)
  * fix(ext/web): Copy EventTarget list before dispatch (#19360)
  * fix(ext/websocket): Close socket on bad string data (#19424)
  * fix(kv) run sqlite transactions via spawn_blocking (#19350)
  * fix(napi): don't panic if symbol can't be found (#19397)
  * fix(node): add missing process.reallyExit method (#19326)
  * fix(node): Added base implementation of FileHandle (#19294)
  * fix(node): don't close stdio streams (#19256)
  * fix(node): FileHandle.close() (#19357)
  * fix(node): FileHandle.read() (#19359)
  * fix(node): FileHandle.write() (#19385)
  * fix(node): map stdio [0, 1, 2] to "inherit" (#19352)
  * fix(node): Very basic node:http2 support (#19344)
  * fix(node): proper url handling (#19340)
  * fix(repl): correctly print string exception (#19391)
  * fix(runtime): add missing SIGIOT alias to SIGABRT (#19333)
  * perf(cli): conditionally load typescript declaration files (#19392)
  * perf(ext/http): Add a sync phase to http serving (#19321)
  * perf(ext/http): Migrate op_http_get_request_headers to v8::Array (#19354)
  * perf(ext/http): Migrate op_http_get_request_method_and_url to
    v8::Array (#19355)
  * perf(ext/http): Use flat list of headers for multiple set/get
    methods (#19336)
  * perf(ext/websocket): Make send sync for non-stream websockets (#19376)
  * perf(ext/websocket): Reduce GC pressure & monomorpize
    op_ws_next_event (#19405)
  * perf(ext/websocket): monomorphize code (#19394)
  * perf(http): avoid flattening http headers (#19384)
  * perf: optimize RegExp usage in JS (#19364)
  * perf: use sendto syscalls (#19414)

-------------------------------------------------------------------
Tue May 30 18:13:09 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.34.1:
  * fix(compile): handle when DENO_DIR is readonly (#19257)
  * fix(compile): implicit read permission to npm vfs (#19281)
  * fix(compile): improve panic message when stripping root path fails (#19258)
  * fix(compile): inline symlinks as files outside node_modules
    dir and warn for directories (#19285)
  * fix(ext/http): fix a possible memleak in Brotli (#19250)
  * fix(napi): clear currently registering module slot (#19249)
  * fix(napi): properly handle arguments in napi_get_cb_info (#19269)
  * fix(node): http.IncomingMessageForClient.complete (#19302)
  * fix(node): make 'v8.setFlagsFromString' a noop (#19271)
  * fix: don't print release notes on version check prompt (#19252)
  * fix: use proper ALPN protocols if HTTP client is HTTP/1.1 only (#19303)

-------------------------------------------------------------------
Thu May 25 01:41:56 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.34.0:
  * BREAKING(unstable): change return type of Deno.serve() API (#19189)
  * feat(cli): add nodeModulesDir option to config file (#19095)
  * feat(cli): top-level exclude field in deno.json (#17778)
  * feat(ext/fs): add isBlockDevice, isCharDevice, isFifo,
    isSocket to FileInfo (#19008)
  * feat(ext/http): Add support for trailers w/internal API (HTTP/2 only) (#19182)
  * feat(ext/http): Brotli Compression (#19216)
  * feat(ext/http): ref/unref for server (#19197)
  * feat(lsp): support lockfile and node_modules directory (#19203)
  * feat(runtime): Provide environment-configurable options for
    tokio parameters (#19173)
  * feat(task): glob expansion (#19084)
  * feat(unstable): add more options to Deno.createHttpClient (#17385)
  * feat(vendor): support for npm specifiers (#19186)
  * feat: add support for globs in the config file and CLI
    arguments for files (#19102)
  * feat: top level package.json install when node_modules dir is
    explicitly opted into (#19233)
  * fix(ext/node): ClientRequest.setTimeout(0) should remove listeners (#19240)
  * fix(ext/node): add basic node:worker_threads support (#19192)
  * fix(ext/web): improve timers resolution for 0ms timeouts (#19212)
  * fix(napi): add napi_async_init and napi_async_destroy (#19234)
  * fix(node): add http.Server.unref() (#19201)
  * fix(node): duplicate node_module suffixes (#19222)
  * fix(node): fire 'unhandledrejection' event when using node:
    or npm: imports (#19235)
  * fix(node): make sure "setImmediate" is not clamped to 4ms (#19213)
  * fix(npm): process not defined in readline (#19184)
  * fix(npm): better handling of optional peer dependencies (#19236)
  * fix(npm): create node_modules/.deno/node_modules folder (#19242)
  * fix(npm): run pre and post tasks if present (#19178)
  * fix(npm): store npm binary command resolution in lockfile (#19219)
- rebase deno-disable-update-check.patch

-------------------------------------------------------------------
Fri May 19 19:07:35 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update deno-disable-update-check.patch
  * remove DENO_NO_UPDATE_CHECK block from env variables help

-------------------------------------------------------------------
Thu May 18 20:19:52 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.33.4:
  * fix(ext/web): Request higher-resolution timer on Windows if
    user requests setTimeout w/short delay (#19149)
  * feat(node/crypto): Builtin Diffie-Hellman Groups (#19137)
  * feat(node/crypto): Diffie Hellman Support (#18943)
  * fix(cli/napi): handle finalizers (#19168)
  * fix(deno/upgrade): allow --version vX.Y.Z (#19139)
  * fix(dts): move BroadcastChannel type to lib.deno.unstable.d.ts (#19108)
  * fix(ext/http): Ensure cancelled requests don't crash Deno.serve (#19154)
  * fix(ext/node): fix whatwg url formatting (#19146)
  * fix(ext/node): make nodeGlobalThis configurable (#19163)
  * fix(ext/webidl): change createPromiseConverter (#16367)
  * fix(ext/websocket): order of ws writes (#19131)
  * fix(fetch): Correctly decode multipart/form-data names
    and filenames (#19145)
  * fix(kv): kv.close() interrupts in-flight operations (#19076)
  * fix(lsp): increase default max heap size to 3Gb (#19115)
  * fix(napi): BigInt related APIs (#19174)
  * fix(node): export diagnostics_channel module (#19167)
  * fix(node): export punycode module (#19151)
  * fix(node): support passing parent stdio streams (#19171)
  * fix(npm): add performance.markResourceTiming sham (#19123)
  * fix(npm): improved optional dependency support (#19135)
  * fix(runtime): Box the main future to avoid blowing up the stack (#19155)
  * fix(runtime): Example hello_runtime panic (#19125)
  * fix: support "fetch" over HTTPS for IP addresses (#18499)
- add deno-rm-upgrade-cmd.patch
  * this removes the `deno upgrade` command

-------------------------------------------------------------------
Wed May 17 19:57:07 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- add deno-disable-update-check.patch
  * this stops deno from automatically checking for an update
    whenever a script is run

-------------------------------------------------------------------
Fri May 12 17:08:12 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.33.3:
  * feat(compile): unstable npm and node specifier support (#19005)
  * feat(ext/http): Automatic compression for Deno.serve (#19031)
  * feat(lsp): ability to configure document pre-load limit (#19097)
  * feat(node): add Module.runMain() (#19080)
  * fix(cli): upgrade to Typescript 5.0.4 (#19090)
  * fix(console): handle error when inspecting promise-like (#19083)
  * fix(core): always report the first error on unhandled rejection (#18992)
  * fix(core): let V8 drive extension ESM loads (#18997)
  * fix(dts): align seekSync position arg with seek (#19077)
  * fix(ext/ffi): Callbacks panic on returning isize (#19022)
  * fix(ext/ffi): UnsafeCallback can hang with 'deno test' (#19018)
  * fix(ext/fs): add more context_path (#19101)
  * fix(ext/http): Ensure Deno.serve works across --watch restarts (#18998)
  * fix(lsp): hard to soft error when unable to get completion info (#19091)
  * fix(lsp): preload documents when deno.documentPreloadLimit
    changes (#19103)
  * fix(node): conditional exports edge case (#19082)
  * fix(node): expose channels in worker_threads (#19086)
  * fix(npm): make http2 module available, make
    'nodeGlobalThisName' writable (#19092)
  * fix(runtime): ChildProcess::kill() doesn't require additional
    perms (#15339)
  * fix(vendor): better handling of redirects (#19063)
  * perf(ext/ffi): Use Box<[NativeType]> in CallbackInfo parameters (#19032)
  * perf(fmt): faster formatting for minified object literals (#19050)

-------------------------------------------------------------------
Thu May  4 22:08:20 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.33.2:
  * fix(core): Use primordials for methods (#18839)
  * fix(core): allow esm extensions not included in snapshot (#18980)
  * fix(core): rebuild when JS sources for snapshotting change (#18976)
  * fix(ext/io) several sync fs fixes (#18886)
  * fix(ext/kv): KvU64#valueOf and KvU64 inspect (#18656)
  * fix(ext/kv): stricter structured clone serializer (#18914)
  * fix(ext/kv): throw on the Kv constructor (#18978)
  * fix(ext/node): add missing release property to node's process (#18923)
  * fix(ext/url): throw TypeError for empty argument (#18896)
  * fix(ext/websocket): update fastwebsockets to 0.3.1 (#18916)
  * fix(fmt/json): support formatting number with exponent and no sign (#18894)
  * fix(node/http): Request.setTimeout(0) should clear (#18949)
  * fix(npm): canonicalize filename before returning (#18948)
  * fix(npm): canonicalize search directory when looking for package.json (#18981)
  * fix(test): disable preventDefault() for beforeunload event (#18911)
  * perf(core): async op pseudo-codegen and performance work (#18887)
  * perf(core): use jemalloc for V8 array buffer allocator (#18875)
  * perf(ext/web): fast path for ws events (#18905)
  * perf(ext/websocket): use internal dispatch for msg events (#18904)
  * perf: lazily create RootCertStore (#18938)
  * perf: lazily retrieve ppid (#18940)
  * perf: use jemalloc as global allocator (#18957)

-------------------------------------------------------------------
Sat Apr 29 00:29:03 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.33.1:
  * fix(ext/fetch): subview Uint8Array in Req/Resp (#18890)
  * fix(ext/websocket): client connect URI (#18892)
  * fix(ext/websocket): restore op_ws_send_ping (#18891)
  * fix(repl): don't panic on undefined exception (#18888)
- includes 1.33.0:
  * BREAKING(unstable): remove "Deno.serve(handler, options)" overload (#18759)
  * Revert "chore(ext/websocket): Add autobahn|testsuite fuzzingclient" (#18856)
  * feat(bench): add --no-run flag (#18433)
  * feat(cli): don't check permissions for statically analyzable
    dynamic imports (#18713)
  * feat(cli): flatten deno.json configuaration (#17799)
  * feat(ext/ffi): support marking symbols as optional (#18529)
  * feat(ext/http): Rework Deno.serve using hyper 1.0-rc3 (#18619)
  * feat(ext/kv): add more atomic operation helpers (#18854)
  * feat(ext/kv): return ok bool from atomic commit (#18873)
  * feat(ext/url): URL.canParse (#18286)
  * feat(lint): add Deno.run to no-deprecated-deno-api (#18869)
  * feat(node/crypto): Elliptic Curve Diffie-Hellman (ECDH) support (#18832)
  * feat(node/http): implement ClientRequest.setTimeout() (#18783)
  * feat(task): introduce built-in unset command to deno task (#18606)
  * feat: Deprecate Deno.run API in favor of Deno.Command (#17630) (#18866)
  * fix(compile): write bytes directly to output file (#18777)
  * fix(core): Wrap safe collections' argument of primordials (#18750)
  * fix(coverage): exclude test files (#18748)
  * fix(dts): URLPatternComponentResult groups should have
    possibly undefined key values (#18643)
  * fix(ext/node): add crypto.sign|verify methods (#18765)
  * fix(ext/node): fix hash.flush (#18818)
  * fix(ext/node): implement asymmetric keygen (#18651)
  * fix(ext/node): improve vm.runInThisContext (#18767)
  * fix(ext/node): prime generation (#18861)
  * fix(lsp): show dependency errors for repeated imports (#18807)
  * fix(npm): only include top level packages in top level
    node_modules directory (#18824)
  * fix(test): allow explicit undefined for boolean test options (#18786)
  * fix(test): handle dispatched exceptions from test functions (#18853)
  * perf(ext/http): avoid spread arg deopt in op_http_wait (#18850)
  * perf(ext/http): optimize away code based on callback length (#18849)
  * perf(ext/http): optimize for zero or one-packet response streams (#18834)
  * perf(ext/http): use smi for slab IDs (#18848)
  * perf(ext/websocket): various performance improvements (#18862)

-------------------------------------------------------------------
Wed Apr 19 17:56:40 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org

- update to 1.32.5:
  * feat(UNSTABLE/kv): AtomicOperation#sum (#18704)
  * fix(core): Use safe primordials wrappers (#18687)
  * fix(ext/node): add req.socket.remoteAddress (#18733)
  * fix(ext/node): implement crypto.createVerify (#18703)
  * fix(ext/node): polyfill response._implicitHeader method (#18738)
  * fix(ext/websocket): Avoid write deadlock that requires read_frame to complete
    (#18705)
  * fix(lsp): ensure language server status works on unix (#18727)
  * fix(npm): eagerly reload package information when version from lockfile not
    found locally (#18673)
  * fix(path): Remove non node symbols (#18630)
  * fix(test): add process sigint handler for --watch (#18678)
  * perf(ext/websocket): make op_server_ws_next_event deferred (#18632)

-------------------------------------------------------------------
Thu Apr 13 21:58:41 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.32.4:
  * Revert "fix(cli): don't store blob and data urls in the module cache (#18261)"
    (#18572)
  * feat(core): sync io ops in core (#18603)
  * feat(ext/http): add an op to perform raw HTTP upgrade (#18511)
  * fix(core): preserve syntax error locations in dynamic imports (#18664)
  * fix(ext/cache): cache.put overwrites previous call (#18649)
  * fix(ext/kv): keys must be arrays (#18655)
  * fix(ext/node): add X509Certificate (#18625)
  * fix(ext/node): add symmetric keygen (#18609)
  * fix(ext/node): fix unable to resolve fraction.js (#18544)
  * fix(ext/node): implement hkdf-expand (#18612)
  * fix(ext/node): json encode binary command name (#18596)
  * fix(npm): cache bust npm specifiers more aggressively (#18636)
  * fix(npm): do not "npm install" when npm specifier happens to
    match package.json entry (#18660)
  * fix(npm): reload an npm package's dependency's information
    when version not found (#18622)
  * perf(ext/io): remove a data copy from File write (#18601)
  * perf(ext/websocket): replace tokio_tungstenite server with
    fastwebsockets (#18587)

-------------------------------------------------------------------
Sun Apr  2 02:45:22 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.32.3
  * fix(check): ensure diagnostics caused by changes in other files get
    invalidated between runs (#18541)
  * fix(ext/ffi): crash when same reference struct is used in two fields (#18531)
  * fix(lsp): add a document preload file system entry limit (#18553)
  * fix(repl): disable language server document preloading in the repl (#18543)
  * fix(test): don't swallow sanitizer errors with permissions (#18550)
  * perf(check): faster source hashing (#18534)

-------------------------------------------------------------------
Sat Apr  1 17:58:43 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.32.2:
  * Revert "refactor(ext/node): Use Deno.inspect (#17960)" (#18491)
  * feat(core): initialize SQLite off-main-thread (#18401)
  * feat(ext/kv): return versionstamp from set/commit (#18512)
  * feat(ext/node): add crypto.checkPrime API (#18465)
  * feat(ext/node): implement crypto.createSecretKey (#18413)
  * feat(test): print pending tests on sigint (#18246)
  * feat: port node:zlib to rust (#18291)
  * fix(cli): add colors to "Module not found" error frame (#18437)
  * fix(cli): don't store blob and data urls in the module cache (#18261)
  * fix(cli/bench): look for clone3 syscalls for thread count (#18456)
  * fix(core): located_script_name macro was using format syntax (#18388)
  * fix(core): panic at build time if extension code contains
    anything other than 7-bit ASCII (#18372)
  * fix(core): restore cache journal mode to TRUNCATE and tweak
    tokio test in CacheDB (#18469)
  * fix(coverage): ignore files from npm registry (#18457)
  * fix(dts): improve types for the Deno.KV API (#18510)
  * fix(ext/kv): add missing getMany method (#18410)
  * fix(ext/node): add aes-128-ecb algorithm support (#18412)
  * fix(ext/node): add missing _preloadModules hook (#18447)
  * fix(ext/node): implement crypto.Sign
    (RSA/PEM/SHA{224,256,384,512}) (#18471)
  * fix(ext/node): make cipher/decipher transform stream (#18408)
  * fix(lsp): textDocument/references should respect
    includeDeclaration (#18496)
  * fix(lsp): better handling of data: urls (#18527)
  * fix(lsp): include all diagnosable documents on initialize (#17979)
  * fix(ops): fallback when FastApiOneByteString is not utf8 (#18518)
  * fix(repl): improve package.json support (#18497)
  * fix(streams): add support Float64Array to ReadableStreamByobReader
    (#18188)
  * fix: Add missing processenv winapi feature to deno_io (#18485)
  * fix: upgrade to TypeScript 5.0.3 (#18532)
  * perf(ext/websocket): efficient event kind serialization (#18509)
  * perf(ext/websocket): special op for sending binary data frames (#18506)
  * perf(ext/websocket): special op for sending text data frames (#18507)
  * perf(ext/websocket): use opAsync2 to avoid spread deopt (#18525)
  * perf: const op declaration (#18288)

-------------------------------------------------------------------
Thu Mar 23 23:52:07 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.32.1:
  * fix(core): disable resizable ArrayBuffer and growable
    SharedArrayBuffer (#18395)
  * fix(cli): restore deno run - to handle stdin as typescript (#18391)
  * fix(inspect): ensure non-compact output when object literal
    has newline in entry text (#18366)
  * fix(lsp): ensure enablePaths works when clients do not
    provide a trailing slash for workspace dir (#18373)

-------------------------------------------------------------------
Thu Mar 23 01:40:16 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.32.0:
  * BREAKING(unstable): remove WebGPU (#18094)
  * feat(ext/fs): FileInfo.dev is supported on Windows (#18237)
  * feat(cli): --ext parameter for run, compile, and bundle (#17172)
  * feat(compile): Add support for web workers in standalone mode (#17657)
  * feat(compile): Enable multiple roots for a standalone module
    graph (#17663)
  * feat(core): deno_core::extension! macro to simplify extension
    registration (#18210)
  * feat(ext/kv): key-value store (#18232)
  * feat(ext/net): Add multicasting APIs to DatagramConn (#10706)
    (#17811)
  * feat(ext/url): URLSearchParams.size (#17884)
  * feat(repl): add DENO_REPL_HISTORY to change history file path (#18047)
  * feat(serde_v8): support BigInt serialization (#18225)
  * feat: TypeScript 5.0.2 (except decorators) (#18294)
  * fix(cli): preserve blob store when resetting file watcher (#18253)
  * fix(cli/integration): clippy lints (#18248)
  * fix(ext/kv): don't request permissions for ":memory:" (#18346)
  * fix(ext/kv): reverse mapping between AnyValue::Bool and 
    KeyPart::Bool (#18365)
  * fix(ext/node): add createDecipheriv (#18245)
  * fix(ext/node): resource leak in createHmac (#18229)
  * fix(ext/node): use Deno.Command from ext:runtime (#18289)
  * fix(repl): Hide indexable properties in tab completion (#18141)
  * fix(runtime): Extract error code for all OS error variants (#17958)
  * fix: include error in message about not being able to create
    the TypeScript cache (#18356)
  * perf(check): type check local files only when not using --all (#18329)
  * perf(core) Reduce copying and cloning in extension
    initialization (#18252)
  * perf(core) Reduce script name and script code copies (#18298)
  * perf(core): preserve ops between snapshots (#18080)
  * perf(core): use static specifier in ExtensionFileSource (#18271)
  * perf: disable WAL for transpiled source cache (#18084)
  * perf: disable runtime snapshot compression (#18239)
- build: remove python3 hack

-------------------------------------------------------------------
Thu Mar 16 18:23:39 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.31.3:
  * fix(check): regression where config "types" entries caused type checking
    errors (#18124)
  * fix(core): Upgrades bytes crate from =1.2.1 to ^1.4.0 (#18123)
  * fix(core): SafePromiseAll to be unaffected by Array#@@iterator (#17542)
  * fix(core/internal): fix typo in primordial type definitions (#18125)
  * fix(ext/fs): retry if file already exists in makeTempFile (#17787)
  * fix(ext/http): abort request signal when response errors (#17822)
  * fix(ext/node): add crypto.createCipheriv (#18091)
  * fix(ext/node): implement "ascii" encoding for node:fs writeFile() (#18097)
  * fix(ext/web): Stop using globalThis.ReadableStream in Blob (#18187)
  * fix(info/doc): add missing --no-lock and --lock flags (#18166)
  * fix(lsp): avoid calling client while holding lock (#18197)
  * fix(npm): "not implemented scheme" message should properly show the scheme
    (#18209)
  * fix(npm): show a progress bar when initializing the node_modules folder
    (#18136)
  * fix(repl): do not panic deleting Deno or deleting all its properties
    (#18211)
  * fix: ensure no node_modules directory is created when a package.json exists
    and no npm dependencies are used (#18134)
  * perf: do not depend on iana-time-zone (#18088)

-------------------------------------------------------------------
Sat Mar 11 17:58:10 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.31.2:
  * Revert "perf: disable snapshot compression (#18061)" (#18074)
  * deps: bump regexp to ^1.7.0 (#17966)
  * deps: bump once_cell to ^1.17.1 (#18075)
  * feat(core): prevent isolate drop for CLI main worker (#18059)
  * feat(ext/ffi): Make External pointers keep reference to V8 buffer (#17955)
  * feat(ops): reland fast zero copy string arguments (#17996)
  * feat(ops): relational ops (#18023)
  * fix(check): include dts files in tsc roots (#18026)
  * fix(cli): add space after period in --v8-flags (#18063)
  * fix(cli,ext/web): Upgrading uuid from =1.1.2 to 1.3.0 (#17963)
  * fix(core): introduce SafeRegExp to primordials (#17592)
  * fix(ext/crypto): correctly limit ECDSA and hash algorithms (#18030)
  * fix(ext/ffi): Remove deno_core::OpState qualifiers, fix ops returning
    pointer defaults (#17959)
  * fix(ext/node): remove unused _hex module (#18045)
  * fix(ext/node): util.types.isSharedArrayBuffer (#17836)
  * fix(ext/webstorage): check size of inputs before insert (#18087)
  * fix(lockfile): don't touch lockfile is npm specifiers are identical (#17973)
  * fix(npm): improve peer dependency resolution with circular dependencies
    (#18069)
  * fix(prompt): better output with control chars (#18108)
  * fix(rumtime): Add Deno. prefix for registered symbols (#18086)
  * fix(runtime/windows): ensure Deno.stdin.setRaw(false) properly
    disables raw mode (#17983)
  * fix: Split extension registration and snapshotting (#18098)
  * fix: attempt to only allow one deno process to update the node_modules
    folder at a time (#18058)
  * fix: lazily surface errors in package.json deps parsing (#17974)
  * perf(core): over-allocate in ModuleMap when running from snapshot (#18083)
  * perf(ext/node): improve createHash performance (#18033)
  * perf: disable snapshot compression (#18061)
  * perf: don't add unload event listener (#18082)
  * perf: move runtime bootstrap code to snapshot time (#18062)
  * perf: move setting up Deno namespace to snapshot time (#18067)
  * wpt: unlock nightly with --no-ignore (#17998)

-------------------------------------------------------------------
Sun Feb 26 20:00:55 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.31.1:
  * feat: add DENO_NO_PACKAGE_JSON env var (#17926)
  * fix(npm): lazily install package.json dependencies only when necessary
    (#17931)
  * fix(npm): package.json auto-discovery should respect --no-config and
    --no-npm (#17924)
  * fix: ensure concurrent non-statically analyzable dynamic imports
    do not sometimes fail (#17923)
  * fix: ignore workspace, git, file, http, https specifiers in package.json
    (#17934, #17938)
  * fix: regression remapping remote specifier to local file (#17935)
  * fix: remote modules should be allowed to import data urls (#17920)

-------------------------------------------------------------------
Fri Feb 24 00:21:54 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.31.0:
  * feat(bench): Add JSON reporter for "deno bench" subcommand (#17595)
  * feat(bench): change --json output format (#17888)
  * feat(core): allow to specify entry point for snapshotted ES modules (#17771)
  * feat(ext/ffi): Replace pointer integers with v8::External objects (#16889)
  * feat(ext/http): add 2nd param to handler to get remote address (#17633)
  * feat(ext/node): embed std/node into the snapshot (#17724)
  * feat(ext/node): implement node:v8 (#17806)
  * feat(install): follow redirects for urls with no path (#17449)
  * feat(node): stabilize Node-API (#17553)
  * feat(npm): support bare specifiers from package.json in more subcommands and language server (#17891)
  * feat(npm): support npm specifiers in remote modules without --unstable (#17889)
  * feat(permissions): grant all permission for a group in permission prompt (#17140)
  * feat(task): add warning about package.json scripts support (#17900)
  * feat(task): adjust warning (#17904)
  * feat(task): support scripts in package.json (#17887)
  * feat: Deprecate 'deno bundle' subcommand (#17695)
  * feat: Stabilize Deno.Command API (#17628)
  * feat: add more variants to Deno.build.os (#17340)
  * feat: add signal option to Deno.resolveDns (#17384)
  * feat: auto-discover package.json for npm dependencies (#17272)
  * feat: stabilize Deno.osUptime() (#17554)
  * feat: start caching npm package version's "bin" entry from npm registry (#17881)
  * feat: support bare specifier resolution with package.json (#17864)
  * feat: wire up ext/node to the Node compatibility layer (#17785)
  * fix(cli): Add better error message when powershell is missing during upgrade (#17759)
  * fix(cli/graph_util): don't append referrer info for root module errors (#17730)
  * fix(cli/napi): correct name handling in napi property descriptor (#17716)
  * fix(cli/napi): handle all property variants in napi_define_properties (#17680)
  * fix(core): don't allow to import internal code is snapshot is loaded (#17694)
  * fix(core): rebuild when JS sources for snapshotting change (#17876)
  * fix(core): remove async op inlining optimization (#17899)
  * fix(dts): make Deno.Command accept readonly prop in options.args (#17718)
  * fix(ext/console): Only right-align integers in console.table() (#17389)
  * fix(ext/ffi): Fix re-ref'ing UnsafeCallback (#17704)
  * fix(ext/ffi): improve error messages in FFI module (#17786)
  * fix(ext/flash): Always send correct number of bytes when handling HEAD requests (#17740)
  * fix(ext/flash): wrong order of arguments passed to http1Response (#17893)
  * fix(ext/node): add support for BYOB streams (#17803)
  * fix(ext/node): fix node stream (#17874)
  * fix(ext/node): fix npm module resolution when --node-modules-dir specified (#17896)
  * fix(ext/node): fix process.uptime (#17839)
  * fix(ext/node): fix webcrypto export (#17838)
  * fix(ext/websocket): extra ws pongs sent (#17762)
  * fix(fmt): make fmt options CLI args less verbose (#17550)
  * fix(lint): revert no-deprecated-api for Deno.run (#17880)
  * fix(npm): allow resolving from package.json when an import map exists (#17905)
  * fix(npm): filter out duplicate packages names in resolution (#17857)
  * fix(npm): improve peer dependency resolution (#17835)
  * fix(npm): resolve node_modules dir relative to package.json instead of cwd (#17885)
  * fix(npm): support bare specifiers in package.json having a path (#17903)
  * fix(ops): Always close cancel handles for read_async/write_async (#17736)
  * fix(webgpu): don't default to 0 for setVertexBuffer.size & properly use webidl.setlike (#17800)
  * fix(runtime): Refactor fs error mapping to use unified format (#17719)
  * fix(webgpu): use correct op for GPUDevice.createSampler (#17729)
  * fix: add WouldBlock error (#17339)
  * fix: loading built-in Node modules embedded in the binary (#17777)
  * fix: use static Reflect methods in nodeGlobalThis proxy (#17696)
  * perf(core): speed up promise hook dispatch (#17616)
  * perf(core, runtime): Further improve startup time (#17860)
  * perf(ext/ffi): Revert UTF-8 validity check from getCString (#17741)
  * perf(ext/node): move winerror binding to rust (#17792)
  * perf(http): remove allocations checking upgrade and connection header values (#17727)
  * perf: disable fetching graph cache info except for deno info (#17698)
  * perf: module info cache - avoid MediaType.to_string() allocation (#17699)
  * perf: remove current_dir() call in Deno.mainModule (#17883)
  * perf: use ops for node:crypto ciphers (#17819)
- includes 1.30.3 / 2023.02.07
  * fix(ext/console): log class for class constructor (#17615)
  * fix(lsp): prevent crash analyzing module (#17642)
- includes 1.30.2 / 2023.02.03
  * Revert "chore(core): remove have_unpolled_ops on rt state (#17601)" (#17631)
  * fix(webgpu): specify viewFormats in surface configuration (#17626)
- includes 1.30.1 / 2023.02.02
  * Revert "fix(watch): preserve ProcState::file_fetcher between restarts (#15466) (#17591)
  * fix(core): Add lint check for core (#17223)
  * fix(ext): internal structuredClone for ArrayBuffer and TypedArray subclasses (#17431)
  * fix(fmt): semiColons: false - handle prop with following generator and do while with no block body (#17567)
  * fix(install): tsconfig.json -> deno.json for config file suffix (#17573)
  * fix(lockfile): emit trailing newline (#17618)
  * fix(lsp): update document dependencies on configuration change (#17556)
  * fix(napi): guard threadsafe function counters behind a mutex (#17552)
  * fix(napi): remove wrong length check in napi_create_function (#17614)
  * fix(napi): return node globalThis from napi_get_global (#17613)
  * fix(repl): handle @types/node not being cached in the repl (#17617)
  * fix(upgrade): ensure temp dir cleanup on failure (#17535)
  * fix: ensure "fs" -> "node:fs" error/quick fix works when user has import map (#17566)
  * perf(ops): Remove unnecessary fast call fallback options usage (#17585)
- Rebase deno-disbale-lto.patch (renamed to deno-disable-lto.patch)

-------------------------------------------------------------------
Sat Jan 28 23:33:53 UTC 2023 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.30.0:
  * many changes, see https://github.com/denoland/deno/compare/v1.26.2...v1.30.0

-------------------------------------------------------------------
Thu Jan 26 10:52:37 UTC 2023 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Switch from deprecated rust-packaging to cargo-packaging
- Disable LTO to build with half of the RAM (fixes build on aarch64):
  * deno-disbale-lto.patch
- Update _constraints with current values
- remove Cargo.lock to bypass checksum errors in rusty_v8

-------------------------------------------------------------------
Mon Oct 17 20:29:27 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.26.2:
  * refactor(napi): simplify napi_value interface (#16170)
  * fix(napi): move napi symbols file (#16179)
  * chore: upgrade rusty_v8 to 0.52.0 (#16183)
  * fix(ext/ffi): Fix usize and isize FFI callback parameters missing mat
  * chore(napi): Add README explainer for cli/napi_sym and cli/napi (#16187)
  * perf(napi): optimize primitive napi functions (#16163)
  * fix(ext/fetch): support empty formdata (#16165)
  * feat(core): Reorder extension initialization (#16136)
  * chore(napi_sym): fix readme path (#16203)
  * fix(serde_v8): avoid creating unsound slice reference (#16189)
  * test(ext/fetch): enable fetch/content-type/multipart.window WPT (#16209)
  * fix(ext/fetch): reject immediately on aborted signal (#16190)
  * perf(ext/crypto): optimize getRandomValues (#16212)
  * feat(core): improve resource read & write traits (#16115)
  * fix(npm): support compiling on linux/aarch64 (#16208)
  * perf(ext/cache): set journal_mode=wal (#16231)
  * feat(core): add Deno.core.writeAll(rid, chunk) (#16228)
  * fix sparse array inspection (#16204)
  * fix(ext/fetch): fix illegal header regex (#16236)
  * fix(cli): skip removing the latter part if @ appears at the beginning (#16244)
  * fix(ext/fetch): throw TypeError on read failure (#16219)
  * chore(ext/web): fix typo (#16248)
  * chore: Added onbeforeunload to window type definition (#16251)
  * fix(cli): allow importMap to be an absolute URL within the deno
    config file (#16234)
  * fix(ext/ffi): Invalid 'function' return type check logic, remove U32x
  * fix(ext/web/streams): resolve cancelPromise in ReadableStreamTee (#16266
  * fix(ext/fetch): throw TypeError on non-Uint8Array chunk (#16262)
  * fix(ext/web/streams): enqueue to second branch before closing (#16269)
  * fix(lsp): properly handle snippets on completions (#16274)
  * chore: upgrade rusty_v8 to 0.53.0 (#16272)
  * fix(ext/crypto): correct HMAC get key length op (#16201)
  * fix(ext/websocket): panic on no next ws message from an already close
  * bench: avoid port collision (#16285)
  * fix(ext/ffi): Fix UnsafeCallback ref'ing making Deno enter a
    live-loop (#16216)
  * bench: don't show output (#16288)
  * chore: fix windows-only clippy errors (#16289)
  * refactor(core): use isolate get_data/set_data instead of slots (#16286)
  * refactor(build): better handle old glibc (#16238)
  * fix(docs): Documentation improvements related to JsRealm. (#16247)
  * feat(unstable/task): add INIT_CWD env var (#16110)
  * refactor: Add default implementation for WorkerOptions (#14860)
  * chore: upgrade rusty_v8 to 0.53.1 (#16303)
  * fix(npm): disable loading native module for "fsevents" package (#16273)
  * refactor(core): make borrow_mut more explicit in the ops macro (#16025
  * fix(ext/cache): illegal constructor (#16205)
  * fix: add error cause in recursive cause tail (#16306)
  * fix(cli/bench): skip strace table border (#16310)
  * fix(build) fix linux symbols export list format (#16313)
  * fix(lsp): treat empty import map value config as none (#16224)
  * perf(ext/web): optimize op_cancel_handle (#16318)

-------------------------------------------------------------------
Sat Oct  8 23:09:47 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.26.1:
  * feat(npm): implement Node API (#13633)
  * feat(unstable): add supp;rt for npm specifier cli arguments for
    'deno cache' (#16141)
  * fix(build): don't export all symbols to dynamic symbol table (#16171)
  * fix(ext/cache): acquire reader lock before async op (#16126)
  * fix(ext/cache): close resource on error (#16129)
  * fix(ext/cache): prevent cache insert if body is not fully written (#16138)
  * fix(ext/crypto): ECDH and X25519 non byte length and 0 length fixes (#16146)
  * fix(ext/crypto): curve25519 import export (#16140)
  * fix(ext/crypto): deriveBits for ECDH not taking length into account (#16128)
  * fix(ext/crypto): ecdh spki key import/export roundtrip (#16152)
  * fix(ext/crypto): fix importKey error when leading zeroes (#16009)
  * fix(ext/crypto): interoperable import/export (#16153)
  * fix(ext/crypto): use correct handle for public keys (#16099)
  * fix(ext/fetch): Body#bodyUsed for static body (#16080)
  * fix(ext/flash): Avoid sending Content-Length when status code is 204 (#15901)
  * fix(node): add dns/promises and stream/consumers (#16169)
  * fix(npm): better error is version is specified after subpath (#16131)
  * fix(npm): handle json files in require (#16125)
  * fix(npm): panic on invalid package name (#16123)
  * fix(runtime): no FastStream for unrefable streams (#16095)
  * fix(serde_v8): Implement MapAccess for StructAccess (#15962)
  * fix(serde_v8): serialize objects with numeric keys correctly (#15946)
  * fix: move Deno.hostname() from denoNsUnstable to denoNs (#16086)
  * lsp: use deno:/asset instead of deno:asset (#16023)
  * perf(ext/fetch): consume body using ops (#16038)
  * perf: node cjs & esm analysis cache (#16097)

-------------------------------------------------------------------
Thu Sep 29 19:17:45 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.26.0:
  * feat: add --allow-sys permission flag (#16028)
  * feat: add --no-npm flag to disable npm: imports (#15673)
  * feat: Add requesting API name to permission prompt (#15936)
  * feat: allow exiting on two consecutive ctrl+c presses (#15981)
  * feat: download progress bar (#15814)
  * feat: implement Web Cache API (#15829)
  * feat: Refresh interactive permission prompt (#15907)
  * feat: Stabilize Deno.hostname() API (#15932)
  * feat: Stabilize Deno.refTimer() and Deno.unrefTimer() APIs (#16036)
  * feat: TypeScript 4.8 update (#16040)
  * feat(cli): update to TypeScript 4.8 (#15064)
  * feat(core): add Deno.core.setPromiseHooks (#15475)
  * feat(ext/crypto): add x25519 and Ed25519 CFRG curves (#14119)
  * feat(ext/flash): add reuseport option on Linux (#16022)
  * feat(info): add information about npm modules cache (#15750)
  * feat(lint): add --compact flag for terse output (#15926)
  * feat(npm): functionality to support child_process.fork (#15891)
  * feat(ops): Fallible fast ops (#15989)
  * feat(unstable): Deno.setRaw -> Deno.stdin.setRaw (#15797)
  * fix(cli/bench): strace numeric format (#16055)
  * fix(cli/vendor): handle assert type json during vendoring (#16059)
  * fix(ext/console): fix error when logging a proxied Date (#16018)
  * fix(ext/fetch): blob url (#16057)
  * fix(ext/flash): reregister socket on partial read on Windows (#16076)
  * fix(fmt): keep type args in type queries and keep empty array expr element's
    trailing comma (#16034)
  * fix(npm): use ntfs junctions in node_modules folder on Windows (#16061)
  * fix(require): tryPackage uses optional chaining (#16020)
  * fix(runtime): refresh perm prompt 3 lines instead of 4 (#16049)
  * perf: don't re-download package tarball to global cache if local node_modules
    folder exists for package (#16005)
  * perf: use fast ops for tty (#15976)
  * perf(ext/console): break on iterableLimit & better sparse array handling (#15935)
  * perf(ext/fetch): use content-length in InnerBody.consume (#15925)
- includes 1.25.4:
  * feat(unstable/npm): add flag for creating and resolving npm packages to a
    local node_modules folder (#15971)
  * feat(unstable/npm): add support for --reload=npm: and --reload=npm: (#15972)
  * feat(internal/ops): Automatic fast ops creation (#15527)
  * fix(compile): keep non-exe extension in output name on Windows (#15994)
  * fix(doc): deno doc should parse modules if they haven't been parsed before (#15941)
  * fix(ext/node): fix builtin module module (#15904)
  * fix(ext/webgpu): make GPUDevice.features SetLike (#15853)
  * fix(flash): panic if response if undefined (#15964)
  * fix(runtime): better error message with Deno.env.get/set (#15966)
  * fix(runtime): fix permission status cache keys (#15899)
  * perf(cli): avoid canonicalize_path if config file does not exist (#15957)
  * perf(cli): avoid clap::App::clone (#15951)
  * perf(cli): use -O3 instead of -Oz (#15952)
  * perf(core): use single ObjectTemplate for ops in initialize_ops (#15959)
  * perf(ext/console): avoid wrapConsole when not inspecting (#15931)
  * perf(web): optimize encodeInto() (#15922)
  * perf: fs optimizations - part 1 (#15873)

-------------------------------------------------------------------
Mon Sep 19 22:52:39 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.25.3:
  * doc(unstable): mention that signal input isn't supported in spawnSync
    (#15889)
  * fix(ext/flash): don't block requests (#15852)
  * fix(npm): align Deno importing Node cjs with Node esm importing cjs (#15879)
  * fix(npm): align Node esm code importing cjs with Node (#15838)
  * fix(npm): binary entrypoint for .js or no extension (#15900)
  * fix(npm): remove export binding to match node (#15837)
  * fix(npm): support cjs resolution of package subpath with package.json (#15855)
  * fix(npm): use shim from deno_node crate for 'module' built-in module (#15881)
  * fix(ops): add node.js env variable allowlist (#15893)
  * perf(ext/flash): remove string->buffer cache (#15850)
  * perf(serde_v8): remove Mutex from ZeroCopyBuf (#15888)
  * perf(url): return early if url has no query string (#15856)
  * perf: optimize URL serialization (#15663)

-------------------------------------------------------------------
Sun Sep 11 23:41:13 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.25.2:
  * BREAKING(unstable): remove --compat mode (#15678)
  * feat(ext/ffi): Implement FFI fast-call trampoline with Dynasmrt (#15305)
  * feat(ext/ffi): Support bool FFI type (#15754)
  * feat(serde_v8): Support StringObject as unit enum variant (#15715)
  * fix(bench): make sure bytes/response is equal (#15763)
  * fix(cli): Fix panic when providing invalid urls to --reload (#15784)
  * fix(cli): allow using file resource synchronously while being used
    async (#15747)
  * fix(cli/repl): await Promise.any([])... (#15623)
  * fix(core): Register external references for imports to
    the SnapshotCreator (#15621)
  * fix(core): make errors more resistant to tampering (#15789)
  * fix(core): opAsync leaks a promise on type error (#15795)
  * fix(docs): add missing categories for unstable (#15807)
  * fix(docs): change category for Deno.Process to "Sub Process" (#15812)
  * fix(ext/flash): use utf8 length as Content-Length (#15793)
  * fix(ext/timers): create primordial eval (#15110)
  * fix(init): suppress info logs when using quiet mode (#15741)
  * fix(npm): add more context to errors when file doesn't exist (#15749)
  * fix(npm): conditional exports in npm: specifiers (#15778)
  * fix(npm): correct exact matching of pre-release versions (#15745)
  * fix(npm): recursive translation of reexports, remove window global
    in node code (#15806)
  * fix(npm): respect latest dist tag for getting current version (#15746)
  * fix(ops): use qualified borrow in op macro (#15769)
  * fix(repl): don't terminate on unhandled error events (#15548)
  * fix(test): unflake wasm_unreachable test (#15794)
  * fix(watch): ignore unload errors on drop (#15782)
  * fix: upgrade deno_ast to 0.19 (#15808)
  * perf(ops): inline &[u8] arguments and enable fast API (#15731)
  * perf(runtime): flatten arguments for write_file ops (#15776)
  * perf(runtime): short-circuit queue_async_op for Poll::Ready (#15773)


-------------------------------------------------------------------
Sun Sep  4 17:24:22 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.25.1:
  * feat(ops): support v8::FastApiCallbackOptions (#15721)
  * feat(serde_v8): Serialize integers as BigInt (#15692)
  * fix(check): --remote and --no-remote should be mutually exclusive (#14964)
  * fix(cli): deno upgrade --canary always downloaded latest version
    even if it was already latest (#15639)
  * fix(compile): panic when running with a populated dep analysis cache (#15672)
  * fix(docs): add missing categories (#15684)
  * fix(ext/ffi): Fix pointer types (#15730)
  * fix(ext/flash): add missing backticks in server docs (#15644)
  * fix(ext/flash): panic on AddrInUse (#15607)
  * fix(ext/flash): retry write failures (#15591)
  * fix(ext/node): add missing primordial (#15595)
  * fix(ext/node): better error for importing ES module via
    require() call (#15671)
  * fix(ext/node): fix global in node env (#15622)
  * fix(ext/websocket): fix closing of WebSocketStream with unread
    messages (#15632)
  * fix(fmt): add the file path to the panic messages when formatting
    is unstable (#15693)
  * fix(npm): better node version and version requirement compatibility (#15714)
  * fix(npm): conditional exports with wildcards (#15652)
  * fix(npm): handle cjs re-exports with the same name as an export (#15626)
  * fix(npm): ignore npm cache directory creation errors (#15728)
  * fix(npm): ignore the unstable error in the lsp (#15727)
  * fix(npm): prefer importing esm from esm (#15676)
  * fix(npm): skip extracting pax_global_header from tarballs (#15677)
  * fix(npm): translate CJS to ESM with name clashes for files and dirs (#15697)
  * fix(serde_v8): no panic on reading large text file (#15494)
  * fix(serde_v8): update bytes::Bytes layout assumptions (#15718)
  * fix: avoid global declaration collisions in cjs (#15608)
  * fix: config file errors should not print specifier with debug formatting
    (#15648)
  * fix: typo in deno_ops README (#15606)
  * perf(ext/web): flatten op arguments for text_encoding (#15723)
  * perf(ops): inline String args (#15681)
  * perf(runtime): optimize allocations in read/write checks (#15631)
  * perf: use fast api for core.isProxy (#15682)
  * perf: use fast api for op_now (#15643)
  * serde_v8: fix pointer size assumptions (#15613)

-------------------------------------------------------------------
Thu Aug 25 17:16:30 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.25.0:
  * BREAKING(ext/ffi): specialized buffer type (#15518)
  * feat(ext/crypto): deriveBits P-384 (#15138)
  * feat(ext/flash): An optimized http/1.1 server (#15405)
  * feat(ext/flash): split upgradeHttp into two APIs (#15557)
  * feat(ops): V8 Fast Calls (#15291)
  * feat(repl): add color to functions for syntax highlighting (#15434)
  * feat(runtime): add pre_execute_module_cb (#15485)
  * feat(unstable): initial support for npm specifiers (#15484)
  * feat: queueMicrotask() error handling (#15522)
  * feat: add "deno init" subcommand (#15469)
  * fix(cache): do not attempt to emit non-emitable files (#15562)
  * fix(core/runtime): always cancel termination in exception handling (#15514)
  * fix(coverage): ensure coverage is only collected in certain situations (#15467)
  * fix(ext/fetch): ignore user content-length header (#15555)
  * fix(ext/flash): concurrent response streams (#15493)
  * fix(ext/flash): fix default onListen callback (#15533)
  * fix(ext/flash): fix listening port (#15519)
  * fix: Free up JsRuntime state global handles before snapshot (#15491)
  * fix: resolve jsxImportSource relative to module (#15561)
  * perf(runtime): optimize Deno.file open & stream (#15496)
  * perf: cache swc dependency analysis and don't hold onto ParsedSources in memory (#15502)
  * perf: improve performance.now (#15481)
- remove fix-cflags.patch (fix in upstream)

-------------------------------------------------------------------
Mon Aug 15 18:13:56 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.24.3:
  * fix(ext/fetch): add socks proxy support (#15372)
  * feat(unstable/ext/ffi): add static method variants to Deno.UnsafePointerView
    (#15146)
  * fix(cli): allow configurations files to also be json modules (#15444)
  * fix(ext/ffi): check CStr for UTF-8 validity on read (#15318)
  * fix(ext/ffi): unstable op_ffi_unsafe_callback_ref (#15439)
  * fix(permissions): ignore empty values (#15447)
  * fix(task): subcommand parser skips global args (#15297)
  * fix: allow setting globalThis.location when no --location is provided
    (#15448)
  * fix: update deno_graph to fix importing config as JSON module (#15388)
  * fix: various formatting fixes (#15412)
  * perf(ops): monomorphic sync op calls (#15337)
- includes 1.24.2:
  * feat(ext/ffi): Add support to get ArrayBuffers from UnsafePointerView (#15143)
  * feat(ext/ffi): Safe number pointers (#15173)
  * fix(compat): use mjs extension for stream/promises (#15341)
  * fix(core): BorrowMutError in nested error (#15352)
  * fix(ext/webgpu): use correct IDL key name (#15278)
  * fix(lsp): remove excessive line breaks in status page (#15364)
  * fix(lsp): use correct commit chars for completions (#15366)
  * fix(test): output parallel test results independently (#15399)
  * fix(test): race condition for cancelled tests (#15233)
  * fix(vendor): error on dynamic imports that fail to load instead of panicking
    (#15391)
  * fix(vendor): existing import map with bare specifier in remote (#15390)
  * fix: increase websocket message size (#15406)
  * perf(ext/ffi): support Uint8Array in fast calls (#15319)
  * perf(ext/ffi): use fast api calls for 64bit return types (#15313)
- includes 1.24.1:
  * fix(cli): unset jsxFragmentFactory & jsxFactory options (#15264)
  * fix(ext/fetch): resolve TODOs about WebIDL conversions in body init (#15312)
  * fix(lsp): remove CompletionInfo.flags (#15288)
  * fix(tools): upgrade to new Deno.spawn api (#15265)
  * fix: Child.unref() unrefs stdio streams properly (#15275)
  * fix: proper typings for unhandledrejection event (#15271)
  * fix: unhandledrejection handling for sync throw in top level (#15279)
  * perf(ext/ffi): Optimise common pointer related APIs (#15144)
  * serde_v8: improvements to avoid hitting unimplemented codepaths (#13915)
- includes 1.24.0:
  * BREAKING(unstable): Improve Deno.spawn() stdio API (#14919)
  * feat(cli): support configuring the test tool in the config file (#15079)
  * feat(cli/lsp): Sort repl completions (#15171)
  * feat(cli/test): add DENO_JOBS env variable for test subcommand (#14929)
  * feat(ext/ffi): Support 64 bit parameters in Fast API calls (#15140)
  * feat(fmt): do not add a newline between a template and its tag (#15195)
  * feat(lsp): provide import map remapping diags and fixes (#15165)
  * feat(test): add --parallel flag, soft deprecate --jobs (#15259)
  * feat(unstable): Ability to ref/unref "Child" in "Deno.spawnChild()" API
    (#15151)
  * feat(web): add beforeunload event (#14830)
  * feat: add "unhandledrejection" event support (#12994, #15211)
  * feat: import.meta.resolve() (#15074)
  * fix(cli): Improve error message in watch mode (#15184)
  * fix(cli): expand tsc roots when using checkJs (#15164)
  * fix(cli): synchronize async stdio/file reads and writes (#15092)
  * fix(cli/dts): allow passing arguments to WebAssembly error constructors
    (#15149)
  * fix(core): unhandled rejection in top-level scope (#15204)
  * fix(coverage): do not verify emit source hash for coverage (#15260)
  * fix(ext/ffi): allow setting a custom lib path for libtcc.a (#15208)
  * fix(ext/ffi): i64 arg to C mapping was wrong (#15162)
  * fix(ext/web): align DOMException better with spec (#15097)
  * fix(fmt): improve curried arrow functions (#15251)
  * fix(repl): do not panic for import completions when the import specifier is
    empty (#15177)
  * fix(task): do not overflow attempting to parse large number as redirect
    (#15249)
  * fix(task): resolve deno configuration file first from specified --cwd arg
    (#15257)
  * fix: WebSocketStream ping event causes pending promises (#15235)
  * fix: fallback to no type checking cache when db file can't be created (#15180)
  * fix: revert changes to test output for uncaught errors (#15231)
  * perf: emit files on demand and fix racy emit (#15220)
  * perf: use emit from swc instead of tsc (#15118)
- includes 1.23.4:
  * feat(core): Re-export v8 use_custom_libcxx feature (#14475)
  * fix(core): deflake WASM termination test (#15103)
  * fix(coverage): better handling of multi-byte characters (#15159)
  * fix(ext/console): Fix a typo in a warning when .timeEnd is called on an
    unknown timer (#15135)
  * fix(ext/crypto): Adjust typings for Crypto.getRandomValues() (#15130)
  * fix(ext/ffi): Avoid keeping JsRuntimeState RefCell borrowed for event loop
    middleware calls (#15116)
  * fix(ext/ffi): allow opting out of fast ffi calls (#15131)
  * fix(ext/ffi): trampoline for fast calls (#15139)
  * fix(ext/http) nextRequest return type annotation from ResponseEvent to
    RequestEvent (#15100)
  * fix(ext/http): reading headers with ongoing body reader (#15161)
  * fix(ext/url): missing primordial (#15096)
  * fix(lsp): enable auto imports (#15145)
  * fix(net): don't panic on failed UDS removal (#15157)
  * fix: upgrade deno_ast to 0.17 (#15152)
  * perf(cli/proc_state): Get error source lines from memory (#15031)
  * perf(ext/ffi): leverage V8 Fast Calls (#15125)
  * perf(ext/http): skip core.isProxy check for default ResponseInit (#15077)
- includes 1.23.3:
  * Revert "refactor(snapshots): to their own crate (#14794)" (#15076)
  * fix(cli): handle collecting a directory with file:// (#15002)
  * fix(core): handle exception from Wasm termination (#15014)
  * fix(core): remove unsafe in OpsTracker (#15025)
  * fix(dts): stop default export type behavior (#14977)
  * fix: update to TypeScript 4.7.4 (#15022)
  * perf(ext/http): lazy load headers (#15055)
  * perf(ext/http): remove accept_encoding interior mutability (#15070)
  * perf(ext/http): simplify op_http_accept (#15067)
  * perf(ops): fast path for SMI return values (#15033)
  * perf(serde_v8): avoid extra is_array_buffer_view check (#15056)
- includes 1.23.2:
  * feat(unstable/ffi): thread safe callbacks (#14942)
  * fix(core): don't panic on non-existent cwd (#14957)
  * fix(docs): --watch arg is stable (#14970)
  * fix(dts/ffi): non-exact types break FFI inference (#14968)
  * fix(ext/crypto): add EcdhKeyDeriveParams to deriveKey types (#15005)
  * fix(ext/ffi): empty buffers error with index out of bounds on FFI (#14997)
  * fix(ext/web): remove ErrorEventInit's error default (#14809)
  * fix(lsp): restart TS language service when caching dependencies (#14979)
  * fix(modules): immediately resolve follow-up dyn imports to a dyn imported
    module (#14958)
  * fix(runtime): derive default for deno_runtime::ExitCode (#15017)
  * fix(task): remove --no-config as task subcommand argument (#14983)
  * fix(test): typo ('finsihed') if text decoder not closed during test (#14996)
  * fix(vendor): ignore import map in output directory instead of erroring
    (#14998)
  * fix: don't error if Deno.bench() or Deno.test() are used in run subcommand
    (#14946)
  * perf(ext/ffi): optimize synchronous calls (#14945)
  * perf(ext/web): avoid reallocations in op_base64_atob (#15018)
  * perf(ext/web): use base64-simd for atob/btoa (#14992)
  * perf(serde_v8): smallvec ByteString (#15008)

-------------------------------------------------------------------
Thu Jun 30 19:24:41 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to 1.23.1:
  * BREAKING(unstable/ffi): Remove Deno.UnsafePointer indirection (#14915)
  * feat(unstable/ffi): Callbacks (#14663)
  * fix(check): ignore TS2306 (#14940)
  * fix(docs): update description of --check flag (#14890)
  * fix(ext/fetch): add accept-language default header to fetch (#14882)
  * fix(ext/web): add EventTarget brand checking (#14637)
  * fix(ext/web): handle rid=0 in TextDecoder#decode (#14894)
  * fix(fmt): ignore node_modules directory (#14943)
  * fix(fmt): should fail --check on parse error (#14907)
  * fix(repl): accept tab when previous character is whitespace (#14898)
  * fix(repl): use spaces for tab handler on windows (#14931)
  * fix: do not panic running .d.cts and .d.mts files (#14917)
  * fix: make Performance global an EventTarget
  * fix: upgrade swc via deno_ast 0.16 (#14930)
  * perf(core): Cache source lookups (#14816)
  * perf(ext/ffi): Optimize FFI Rust side type checks (#14923)
- rebase fix-cflags.patch

-------------------------------------------------------------------
Tue Jun 21 17:22:03 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- apply workaround so that /usr/bin/python resolves to python3

-------------------------------------------------------------------
Sat Jun 18 21:18:04 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.23.0:
  * BREAKING: remove Intl.v8BreakIterator (#14864)
  * BREAKING: Remove unstable Deno.sleepSync (#14719)
  * Deno.exit() is an alias to self.close() in worker contexts (#14826)
  * feat(console): pass options and depth to custom inspects (#14855)
  * feat(ext/crypto): export elliptic keys as "raw" (#14764)
  * feat(ext/ffi): support passing and returning bigints (#14523)
  * feat(fmt): remove some unnecessary parens in types (#14841)
  * feat(fmt): support formatting cjs, cts, mjs, and mts files (#14837)
  * feat(ops): 'hybrid' ops - sync returning future (#14640)
  * feat(repl): Add key binding to force a new line (#14536)
  * feat(runtime/signal): implement SIGINT and SIGBREAK for windows (#14694)
  * feat(task): add --cwd flag for configuring the working directory (#14823)
  * feat(task): support redirects, cat, xargs (#14859)
  * feat(test): update test summary report (#14629)
  * feat(vendor): support using an existing import map (#14836)
  * feat: make Child.kill argument optional (#14669)
  * feat: no type-check by default (#14691)
  * feat: update to TypeScript 4.7 (#14242)
  * feat(web): enable deflate-raw compression format (#14863)
  * fix(check): use "moduleDetection": "force" (#14875)
  * fix(cli): add config flag to deno info (#14706)
  * fix(console): constrol inspect() indent with option (#14867)
  * fix(url): properly indent when inspecting URLs (#14867)
  * upgrade: v8 10.4.132.5 (#14874)
- includes 1.22.3:
  * fix(ext/fetch): remove deprecation of URL in deno fetch (#14769)
  * fix(http/upgradewebsocket): check for open state for idle timeout (#14813)
  * fix(lsp): change glob to watch json and jsonc files (#14828)
  * fix(lsp): handle get diagnostic errors better (#14776)
  * fix(task): support parsing quotes in a word (#14807)
  * fix: Format non-error exceptions (#14604)
  * fix: watch dynamic imports in --watch (#14775)
- includes 1.22.2
  * feat(unstable): add Deno.getGid (#14528)
  * fix(cli/dts): add captureStackTrace to lib.dom.extras (#14748)
  * fix(ext/crypto): adjust getRandomValues types (#14714)
  * fix(fmt): do panic for import decl with empty named imports and
    default import (#14773)
- includes 1.22.1:
  * fix(bench): update typo in bench summary (#14672)
  * fix(cli/dts): change ChildStatus.signal from string to Deno.Signal
    (#14690)
  * fix(core): op metrics op_names mismatch (#14716)
  * fix(core): rethrow exception during structured cloning
    serialization (#14671)
  * fix(coverage): do not report transpiled files with no lines (#14699)
  * fix(ext/websocket): WebSocket dispatch single close event (#13443)
  * fix(fmt): prevent infinite loop when formatting certain binary
    expressions (#14725)
  * fix(runtime): improve permission descriptor validation (#14676)
  * fix(vendor): handle relative imports when mapped local folder name
    differs from remote's (#14465)
  * fix: deno task should actually use current exe for deno command (#14705)
  * fix: prevent Deno.exit to fail when dispatchEvent tampered (#14665)
  * fix: read raw stdin to prevent buffering (regression) (#14704)
- includes 1.22.0:
  * BREAKING(unstable): Enable Deno namespace in workers by default (#14581)
  * BREAKING: Remove unstable Deno.applySourceMap API (#14473)
  * BREAKING: Remove unstable Deno.emit and Deno.formatDiagnostics APIs (#14463)
  * feat(core): deterministic snapshots (#14037)
  * feat(core): Revert "core: don't include_str extension js code (#10786)"
    (#14614)
  * feat(ext/net): add "NS" record support in Deno.resolveDns API (#14372)
  * feat(ext/net): add CAA DNS record support in Deno.resolveDns() API (#14624)
  * feat(ext/net): add support for SOA records in Deno.resolveDns() API (#14534)
  * feat(ext/net): support NAPTR records in Deno.resolveDns() API (#14613)
  * feat(ext/net): support full SOA record interface (#14617)
  * feat(ext/web): add performance.toJSON (#14548)
  * feat(ext/web): implement static Response.json (#14566)
  * feat(lsp): enable linting by default (#14583)
  * feat(ops): #[op(v8)] (#14582)
  * feat(ops): allow passing scope handle to ops (#14574)
  * feat(ops): infallible / result-free ops (#14585)
  * feat(ops): sync Rc<RefCell> (#14438)
  * feat(runtime/spawn): add AbortSignal support (#14538)
  * feat(serde_v8): bytes::Bytes support (#14412)
  * feat(test): Represent uncaught errors (#14513)
  * feat(test): Show Deno.test() call locations for failures (#14484)
  * feat(test): change "failures:" headers in test report (#14490)
  * feat(test): repeat test name if there's user output (#14495)
  * feat(unstable/task): resolve the current executable for the deno command
    (#14462)
  * feat(web): add performance.timeOrigin (#14489)
  * feat: add --no-config flag (#14555)
  * feat: add userAgent property to Navigator's prototype (#14415)
  * feat: return a signal string instead number on ChildStatus (#14643)
  * feat: subcommands type-check only local files by default (#14623)
  * fix(core): support classifying ENOTDIR (#14646)
  * fix(ext/http): error on invalid headers (#14642)
  * fix(ext/http): make serveHttp compress for Accept-Encoding: deflate, gzip
    (#14525)
  * fix(ext/http): no response body reader when cancelling during shutdown
    (#14653)
  * fix(ext/http): skip auto-compression if content-encoding present (#14641)
  * fix(ext/tls): ability to ignore IP-address certificate errors (#14610)
  * fix(ext/web): throw if listener and signal are null (#14601)
  * fix(lsp): correct positions in some scenarios (#14359)
  * fix: base64 encoding of source maps with emojis (#14607)
  * perf(core): optimize encode on large strings (#14619)
  * perf(ext/http): faster accept-encoding parsing (#14654)
  * perf(ext/web): Add fast path for non-streaming TextDecoder (#14217)
  * perf(serde_v8): fast path for large strings (#14450)
- includes 1.21.3:
  * fix(cli): add deno version to manual links (#14505)
  * fix(core): avoid panic on non-string Error.name (#14529)
  * fix(ext/tls): finish TLS handshake before shutting down (#14547)
  * fix(runtime): stdout and stderr encoding on Windows (#14559)
  * fix(task): accept double hyphen arg immediately following task name (#14567)
  * fix(test): do not panic on TestOutputPipe::flush when receiver
    dropped (#14560)
  * fix(workers): make module evaluation result deterministic (#14553)
- includes 1.21.2:
  * fix(cli): add dom.extras lib (#14430)
  * fix(coverage): exclude .snap files (#14480)
  * fix(ext/http): explicitly close resource after reading (#14471)
  * fix(runtime): lossy utf8 readTextFile (#14456)
  * fix(task): allow hyphen values after task name (#14434)
  * fix(task): support forwarding lone double hyphen (#14436)
  * fix(test): actually capture stdout and stderr in workers (#14435)
  * fix(test/bench): accept file protocol module specifier CLI args (#14429)
  * fix(vendor): do not panic on relative specifier with scheme-like
    folder name (#14453)
  * fix: improve formatting jsdocs with asterisk as first char on line (#14446)

-------------------------------------------------------------------
Mon May  2 00:14:20 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.21.1:
  * feat(ext/console): Add string abbreviation size option for
    "Deno.inspect" (#14384)
  * fix(ext/console): Compact empty iterables when calling
    Deno.inspect with compact false (#14387)
  * feat(ext/http): stream auto resp body compression (#14345)
  * fix: change shade of "gray" color in eye-catchers (#14309)
  * fix(bench): eliminate sanitizeExit overhead (#14361)
  * fix(bench): report pending summary before clearing (#14369)
  * fix(bench): reset reporter context (#14360)
  * fix(cli): wrap long line of the env variables help (#14422)
  * fix(ext/http): truncate read bytes when streaming bodies (#14389)
  * fix(runtime/js/spawn): Pass stdio options for spawn() and
    spawnSync() (#14358)
  * fix(test): capture inherited stdout and stderr for subprocesses
    in test output (#14395)
  * fix(test): capture worker stdout and stderr in test output (#14410)
  * fix(watcher): don't clear screen on start (#14351)
  * fix(workers): Make worker.terminate() not block the
    current thread (#13941)
  * fix: deno task forward double hyphen (#14419)
  * perf(ext/http): fast path for uncompressed bodies (#14366)
  * perf(ext/http): faster is_content_compressible (#14383)
  * perf(ext/http): optimize ReadableStreams backed by a resource (#14346)
  * perf(runtime): read entire files in single ops (#14261)
  * perf(serde_v8): zero-copy StringOrBuffer (#14381)

-------------------------------------------------------------------
Thu Apr 21 17:06:27 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.21.0:
  * feat(bench): update API, new console reporter (#14305)
  * feat(cli/fmt): ignore .git folder when formatting files (#14138)
  * feat(core): Add initial support for realms (#14019)
  * feat(ext/net): Deno.upgradeHttp handles unix connections (#13987)
  * feat(ext/web): add globalThis.reportError() (#13799)
  * feat(repl): Don't type check when importing modules (#14112)
  * feat(repl): add --eval-file flag to execute a script file on
    startup (#14247)
  * feat(repl): add global clear() function (#14332)
  * feat(runtime): two-tier subprocess API (#11618)
  * feat(test): Add name, origin and parent to Deno.TestContext (#14007)
  * feat(test): Improve testing report output (#14255)
  * feat(test): format user code output (#14271)
  * feat(test): skip internal stack frames for errors (#14302)
  * feat(test): use structured data for JavaScript errors in tests (#14287)
  * feat: Add "deno check" subcommand for type checking (#14072)
  * feat: Add DENO_NO_PROMPT variable (#14209)
  * feat: Better formatting for AggregateError (#14285)
  * fix(cli/emit): Check JS roots with // @ts-check (#14090)
  * fix(cli/tools/test): Prefix test module paths with ./ (#14301)
  * fix(fmt): regression where some short if stmt headers being split
     on multiple lines (#14292)
  * fix(permissions): fallback to denied access if the permission
    prompt fails (#14235)
  * fix: --watch was losing items (#14317)
  * fix: panic when trying to pledge permissions before restoring
    previous pledge (#14306)
  * perf(fmt/lint): incremental formatting and linting (#14314)
  * perf(runtime): bypass tokio file and bump op buffer size to 64K (#14319)
  * perf: move Deno.writeTextFile and like functions to Rust (#14221)
  * upgrade: rusty_v8 0.42.0 (#14334)

-------------------------------------------------------------------
Wed Apr 20 22:23:15 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.20.6:
  * fix(serde_v8): more robust number deserialization (#14216)
  * fix(test): Don't error on missing op details (#14184)
  * fix: upgrade to swc_ecmascript 0.143 (#14238)

-------------------------------------------------------------------
Fri Apr  8 19:59:34 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.20.5:
  * feat(lsp/unstable): add experimental testing API (#13798)
  * feat(lsp/unstable): support tasks in the config file (#14139)
  * feat(unstable): add ref/unref to Listener (#13961)
  * fix(cli/install): preserve compat flag (#14223)
  * fix(ext/crypto): check extractable in exportKey (#14222)
- including v1.20.4:
  * fix(compile): follow redirects when resolving (#14161)
  * fix(ext/fetch): extend deprecated fetch() overload with
    string | Request (#14134)
  * fix(lsp): watch .jsonc files (#14135)
  * fix(runtime/ops/signal.rs): Add Solaris signals (#13931)
  * fix(task): handle PATHEXT with trailing semi-colon (#14140)
  * perf: micro-optimize core.encode (#14120)

-------------------------------------------------------------------
Sun Mar 27 16:14:58 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.20.3:
  * fix(ext/fetch): deprecate URL as the first arg in types (#14113)
  * fix(ext/ffi): enforce unstable check on ops (#14115)
  * fix(runtime): do not modify user provided cmd array in Deno.run (#14109)
- includes changes from 1.20.2:
  * feat(lsp): support deno.enablePaths setting (#13978)
  * fix(bench): require --unstable flag in JavaScript (#14091)
  * fix(test): don't error on missing op details (#14074)
  * fix(compat): Changes an instance of collect::<Vec<_>>().join("") to
    collect::() (#14082)
  * fix(tests): do not use global env vars in install tests (#14078)
  * fix(ext/fetch): Connect async error stack with user code (#13899)
  * fix(unstable): upgrade deno_task_shell to 0.2 (#14073)
  * fix: upgrade to swc_ecmascript 0.137.0 (#14067)
  * fix(fetch): Fix uncaught rejection panic with
    WebAssembly.instantiateStreaming (#13925)
  * fix(core): variadic opSync/opAsync (#14062)
  * fix(runtime): actually don't inherit runtime permissions (#14024)
  * fix(ext/console): fix error with a Proxy of a Map (#14032)
  * fix(ops): throw TypeError on op return failure (#14033)
  * fix(cli): improve deno compile error messages (#13944)
  * fix(cli): add support for DENO_CERT in upgrade command (#13862)
  * fix(config-file): fix config-file.v1.json schema to allow colons in the task
    name (#14013)
  * perf(http): avoid Set.has() when closing connection resource (#14085)
  * perf(http): avoid checking promise every request (#14079)
  * perf(http): avoid per header alloc (#14051)

-------------------------------------------------------------------
Fri Mar 18 02:00:07 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.20.1:
  * BREAKING: don't inherit permissions by default (#13668)
  * feat(cli): support data url (#13667)
  * feat(cli): update to TypeScript 4.6.2 (#13474)
  * feat(compat): CJS/ESM interoperability (#13553)
  * feat(core): Event loop middlewares for Extensions (#13816)
  * feat(core): codegen ops (#13861)
  * feat(ext/crypto): AES-GCM support for 128bit IVs (#13805)
  * feat(ext/fetch): Allow Response status 101 (#13969)
  * feat(ext/http): auto-compression of fixed response bodies (#13769)
  * feat(ext/net): Use socket2 crate to create TcpListener (#13808)
  * feat(ext/net): support cert, key options in listenTls (#13740)
  * feat(ext/web): Add AbortSignal.timeout() (#13687)
  * feat(net): add Deno.UnixConn interface (#13787)
  * feat(ops): custom arity (#13949)
  * feat(ops): optional OpState (#13954)
  * feat(unstable): Add Deno.upgradeHttp API (#13618)
  * feat: "deno bench" subcommand (#13713)
  * feat: "deno task" subcommand (#13725)
  * feat: Add Deno.TcpConn class, change return type from Deno.connect (#13714)
  * feat: allow specification of import map in config file (#13739)
  * feat: deno test --trace-ops (#13770)
  * fix(compat): cjs/esm interop for dynamic imports (#13792)
  * fix(core): Don't override structured clone error messages from V8 (#13942)
  * fix(core): nuke Deno.core.ops pre-snapshot (#13970)
  * fix(ext/crypto): handle JWK import with "use" (#13912)
  * fix(ext/crypto): use EcKeyImportParams dictionary (#13894)
  * fix(ext/http): drop content-length header on compression (#13866)
  * fix(info): print deno info paths with unescaped backslashes on windows (#13847)
  * fix(test): skip typechecking for blocks inside HTML comments (#13889)
  * fix: shell completion hints (#13876)
  * fix: upgrade reqwest to 0.11.10 (#13951)
  * perf(web): Optimize TextDecoder by adding a new U16String type (#13923)
  * perf(web): optimize Blob.text and Blob.arrayBuffer (#13981)
  * perf(web): use DOMString for BlobParts (#13979)
  * perf: opt-level-3 all of ext (#13940)
- includes v1.19.3:
  * fix(ci): restore compatibility with older glibc (#13846)
  * fix(test): typecheck blocks annotated with long js/ts notations (#13785)
  * perf(core): micro-optimize OpsTracker (#13868)
  * perf(ext/web): optimize atob/btoa (#13841)
  * perf(serde_v8): avoid SerializablePkg allocs (#13860)
  * perf(serde_v8): optimize ByteString deserialization (#13853)
- includes v1.19.2:
  * fix(cli): disable config discovery for remote script (#13745)
  * fix(repl): fix null eval result (#13804)
  * fix(runtime): disable console color for non tty stdout (#13782)
  * fix(test): use --no-prompt by default (#13777)
- includes v1.19.1:
  * feat(ext/ffi/unstable): Support read only global statics (#13662)
  * fix(compile): Support import maps (#13756)
  * fix(upgrade): move the file permission check to the beginning of the upgrade
    process (#13726)
  * fix(vendor): do not add absolute specifiers to scopes (#13710)

-------------------------------------------------------------------
Thu Feb 17 23:40:15 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.19.0:
  * feat: Add Deno.FsFile, deprecate Deno.File (#13660)
  * feat: Add hint to permission prompt to display allow flag (#13695)
  * feat: deno vendor (#13670)
  * feat: never prompt for hrtime permission (#13696)
  * feat: permission prompt by default (#13650)
  * feat(compat): support --compat in web workers (#13629)
  * feat(compile): Replace bundling with eszip in deno compile (#13563)
  * feat(coverage): add "--output" flag (#13289)
  * feat(ext/console): better circular information in object inspection (#13555)
  * feat(ext/http): add support for unix domain sockets (#13628)
  * feat(ext/net): Add Conn.setNoDelay and Conn.setKeepAlive (#13103)
  * feat(ext/web): add CompressionStream API (#11728)
  * feat(lsp): add redirect diagnostic and quick fix (#13580)
  * feat(lsp): provide completions from import map if available (#13624)
  * feat(lsp): support linking to symbols in JSDoc on hover (#13631)
  * feat(runtime): stabilize addSignalListener API (#13438)
  * feat(runtime): web streams in fs & net APIs (#13615)
  * feat(test): better errors for resource sanitizer (#13296)
  * feat(test): improved op sanitizer errors + traces (#13676)
  * feat(watch): add "--no-clear-screen" flag (#13454)
  * fix(compat): ESM resolver for package subpath (#13599)
  * fix(ext/console): fix uncaught TypeError in css styling (#13567)
  * fix(ext/console): print circular ref indicator in cyan (#13684)
  * fix(ext/crypto): optional additionalData in encrypt/decrypt (#13669)
  * fix(ext/crypto): support EC p256 private key material in exportKey (#13547)
  * fix(lsp): do not panic getting root_uri to auto discover configuration file
    (#13603)
  * fix(lsp): independent diagnostic publishing should include all diagnostic
    sources on each publish (#13483)
  * fix(lsp): op_exists handles bad specifiers (#13612)
- includes changes from v1.18.2:
  * feat(unstable): add Deno.getUid (#13496)
  * fix: don't crash when $HOME is a relative path (#13581)
  * fix(cli): handle extensionless imports better (#13548)
  * fix(cli): handle local files with query params on emit (#13568)
  * fix(cli/dts/webgpu): make GPUBlendComponent properties optional (#13574)
  * fix(ext/crypto): enforce 128bits tagLength for AES-GCM decryption (#13536)
  * fix(ext/crypto): utf16 jwk encoding (#13535)
  * fix(lsp): properly display x-deno-warning with redirects (#13554)
  * fix(lsp): regression where certain diagnostics were showing for disabled files
    (#13530)
  * fix(repl): tab completions (#13540)
  * perf(lsp): cancellable TS diagnostics (#13565)

-------------------------------------------------------------------
Mon Jan 31 17:26:54 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.18.1:
  * feat(unstable): add Deno.networkInterfaces (#13475)
  * fix(ext/crypto): duplicate RsaHashedImportParams types (#13466)
  * fix(lsp): respect DENO_CERT and other options related to TLS certs (#13467)
  * perf(lsp): improve some tsc op hot paths (#13473)
  * perf(lsp): independent diagnostic source publishes (#13427)

-------------------------------------------------------------------
Fri Jan 21 20:28:25 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.18.0:
  * feat: auto-discover config file (#13313)
  * feat: output cause on JS runtime errors (#13209)
  * feat: stabilize test steps API (#13400)
  * feat(cli, runtime): compress snapshots (#13320)
  * feat(cli): add ignore directives to bundled code (#13309)
  * feat(compat) preload Node.js built-in modules in global vars REPL (#13127)
  * feat(ext/crypto): implement AES-GCM decryption (#13319)
  * feat(ext/crypto): implement AES-GCM encryption (#13119)
  * feat(ext/crypto): implement AES-KW for wrapKey/unwrapKey (#13286)
  * feat(ext/crypto): implement pkcs8/JWK for P-384 curves (#13154)
  * feat(ext/crypto): implement pkcs8/spki/jwk exportKey for ECDSA and ECDH
    (#13104)
  * feat(ext/crypto): JWK support for unwrapKey/wrapKey (#13261)
  * feat(ext/crypto): support AES-CTR encrypt/decrypt (#13177)
  * feat(ext/crypto): support importing raw EC keys (#13079)
  * feat(ext/ffi): infer symbol types (#13221)
  * feat(ext/ffi): support alias names for symbol definitions (#13090)
  * feat(ext/ffi): UnsafeFnPointer API (#13340)
  * feat(ext/websocket): add header support to WebSocketStream (#11887)
  * feat(ext/websocket): server automatically handle ping/pong for
    incoming WebSocket (#13172)
  * feat(lsp): provide registry details on hover if present (#13294)
  * feat(runtime): add op_network_interfaces (#12964)
  * feat(serde_v8): deserialize ArrayBuffers (#13436)
  * feat(streams): reject pending reads when releasing reader (#13375)
  * feat(test): Add support for "deno test --compat" (#13235)
  * fix(cli): Don't strip shebangs from modules (#13220)
  * fix(cli): fix deno install --prompt (#13349)
  * fix(cli/dts): add NotSupported error type (#13432)
  * fix(ext/console): don't depend on globalThis present (#13387)
  * fix(ext/crypto): validate maskGenAlgorithm asn1 in importKey (#13421)
  * fix(ext/ffi): pointer type can accept null (#13335)
  * fix(fmt): markdown formatting should not remove backslashed backslash
    at start of paragraph (#13429)
  * fix(lsp): better handling of registry config errors (#13418)
  * fix(runtime): don't crash when window is deleted (#13392)
  * fix(streams): update TypeError message for pending reads when releasing
    reader (#13376)
  * fix(tsc): Add typings for Intl.ListFormat (#13301)


-------------------------------------------------------------------
Sun Jan 16 18:03:34 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.17.3:
  * fix: Get lib.deno_core.d.ts to parse correctly (#13238)
  * fix: expose "Deno.memoryUsage()" in worker context (#13293)
  * fix: install shim with --allow-all should not output each permission
    individually (#13325)
  * fix(compile): fix output flag behaviour on compile command (#13299)
  * fix(coverage): don't type check (#13324)
  * fix(coverage): merge coverage ranges (#13334)
  * fix(ext/web): handle no arguments in atob (#13341)
  * fix(serde_v8): support #[serde(default)] (#13300)

-------------------------------------------------------------------
Sat Jan  8 18:32:45 UTC 2022 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.17.2:
  * fix(cli): include JSON modules in bundle (#13188)
  * fix(core): inspector works if no "Runtime.runIfWaitingForDebugger"
    message is sent (#13191)
  * fix(coverage): use only string byte indexes and 0-indexed
    line numbers (#13190)
  * fix(doc): Make private types which show up in the rustdocs public (#13230)
  * fix(ext/console): map basic css color keywords to ansi (#13175)
  * fix(ext/crypto) - exportKey JWK for AES/HMAC must use base64url (#13264)
  * fix(ext/crypto) include AES-CTR for deriveKey (#13174)
  * fix(ext/crypto): use forgiving base64 encoding for JWK (#13240)
  * fix(ext/ffi): throw errors instead of panic (#13283)
  * fix(lsp): add code lens for tests just using named functions (#13218)
  * fix(lsp): better handling of folders in registry completions (#13250)
  * fix(lsp): handle repeating patterns in registry correctly (#13275)
  * fix(lsp): properly generate data URLs for completion items (#13246)
  * fix(signals): prevent panic when listening to forbidden signals (#13273)
  * fix: support mts, cjs & cts files for deno test & deno fmt (#13274)
  * fix: upgrade swc_ecmascript to 0.103 (#13284)

-------------------------------------------------------------------
Sat Dec 25 20:13:09 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.17.1:
  * feat(lsp, unstable): add code lens for debugging tests (#13138)
  * feat(lsp, unstable): supply accept header when fetching registry config
    (#13159)
  * fix: inspector prompts (#13123)
  * fix(coverage): Split sources by char index (#13114)
  * fix(ext/ffi): use c_char instead of i8 for reading strings (#13118)
  * fix(ext/websocket): WebSocketStream don't error with "sending after closing"
    when closing (#13134)
  * fix(repl): support assertions on import & export declarations (#13121)

-------------------------------------------------------------------
Fri Dec 17 18:00:20 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.17.0:
  * feat: add --no-check=remote flag (#12766)
  * feat: Add support for import assertions and JSON modules (#12866)
  * feat: REPL import specifier auto-completions (#13078)
  * feat: support abort reasons in Deno APIs and WebSocketStream (#13066)
  * feat: support compat mode in REPL (#12882)
  * feat(cli): update to TypeScript 4.5 (#12410)
  * feat(core): Add ability to "ref" and "unref" pending ops (#12889)
  * feat(core): intercept unhandled promise rejections (#12910)
  * feat(ext/crypto): implement unwrapKey (#12539)
  * feat(ext/crypto): support importKey in SPKI format (#12921)
  * feat(ext/crypto): support exporting RSA JWKs (#13081)
  * feat(ext/crypto): support importing ECSDA and ECDH (#13088)
  * feat(ext/crypto): support importing exporting AES JWK keys (#12444)
  * feat(ext/crypto): support importing RSA JWKs (#13071)
  * feat(ext/fetch): Support WebAssembly.instantiateStreaming for file fetches (#12901)
  * feat(ext/fetch): support abort reasons in fetch (#13106)
  * feat(ext/ffi): implement UnsafePointer and UnsafePointerView (#12828)
  * feat(ext/net): ALPN support in Deno.connectTls() (#12786)
  * feat(ext/net): enable sending to broadcast address (#12860)
  * feat(ext/timers): add refTimer, unrefTimer API (#12953)
  * feat(ext/web): implement AbortSignal.prototype.throwIfAborted() (#13044)
  * feat(lsp): add type definition provider (#12789)
  * feat(lsp): add workspace symbol provider (#12787)
  * feat(lsp): improve registry completion suggestions (#13023)
  * feat(lsp): registry suggestion cache respects cache headers (#13010)
  * feat(repl): add --unsafe-ignore-certificate-errors flag (#13045)
  * feat(runtime): add op_set_exit_code (#12911)
  * feat(streams): support abort reasons in streams (#12991)
  * feat(test): Add more overloads for "Deno.test" (#12749)
  * feat(watch): clear screen on each restart (#12613)
  * feat(watch): support watching external files (#13087)
  * fix: support "other" event type in FSWatcher (#12836)
  * fix(cli): config file should resolve paths relative to the config file (#12867)
  * fix(cli): don't add colors for non-tty outputs (#13031)
  * fix(cli): don't cache .tsbuildinfo unless emitting (#12830)
  * fix(cli): fix slow test, unbreak ci (#12897)
  * fix(cli): skip bundling for pre-bundled code in "compile" (#12687)
  * fix(ext/crypto): throw on key & op algo mismatch (#12838)
  * fix(ext/crypto): various cleanup in JWK imports (#13092)
  * fix(ext/net): make unix and tcp identical on close (#13075)
  * fix(ext/timers): fix flakiness of httpConnAutoCloseDelayedOnUpgrade test (#13017)
  * fix(ext/web): set location undefined when --location is not specified (#13046)
  * fix(lsp): handle import specifier not having a trailing quote (#13074)
  * fix(lsp): lsp should respect include/exclude files in format config (#12876)
  * fix(lsp): normalize urls in did_change_watched_files (#12873)
  * fix(lsp): provide diagnostics for import assertions (#13105)
  * fix(workers): Make worker.terminate() not immediately kill the isolate (#12831)

-------------------------------------------------------------------
Sat Dec  4 15:57:33 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.16.4:
  * fix(core): Wake up the runtime if there are ticks scheduled (#12933)
  * fix(core): throw on invalid callConsole args (#12973)
  * fix(ext/crypto): throw on key & op algo mismatch (#12838)
  * fix(test): Improve reliability of deno test's op sanitizer with timers (#12934)
  * fix(websocket): bad rid on WebSocketStream abort (#12913)
  * fix(workers): Make worker.terminate() not immediately kill the isolate (#12831)

-------------------------------------------------------------------
Thu Nov 25 15:10:46 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.16.3:
  * fix(cli): config file should resolve paths relative to the config file
    (#12867)
  * fix(cli): don't cache .tsbuildinfo unless emitting (#12830)
  * fix(cli/compile): skip bundling for pre-bundled code (#12687)
  * fix(core): don't panic when evaluating module after termination (#12833)
  * fix(core): keep event loop alive if there are ticks scheduled (#12814)
  * fix(ext/crypto): don't panic on decryption failure (#12840)
  * fix(ext/fetch): HTTP/1.x header case got discarded on the wire (#12837)
  * fix(fmt): markdown formatting was incorrectly removing some non-breaking space
    html entities (#12818)
  * fix(lsp): lsp should respect include/exclude files in format config (#12876)
  * fix(lsp): normalize urls in did_change_watched_files (#12873)
  * fix(lsp): tag deprecated diagnostics properly (#12801)
  * fix(lsp): use lint exclude files list from the config file (#12825)
  * fix(runtime): support "other" event type in FSWatcher (#12836)
  * fix(runtime): support reading /proc using readFile (#12839)
  * fix(test): do not throw on error.errors.map (#12810)
- includes v1.16.2:
  * feat(unstable/test): include test step pass/fail/ignore counts in final report (#12432)
  * fix(cli): short-circuit in prepare_module_load() (#12604)
  * fix(lsp): retain module dependencies when parse is invalid (#12782)
  * fix(test): support typechecking docs with CRLF line endings (#12748)
  * fix(transpile): do not panic on swc_ecma_utils::HANDLER diagnostics (#12773)
- includes v1.16.1:
  * feat(core): streams (#12596)
  * fix(crypto): handling large key length in HKDF (#12692)
  * fix: add typings for AbortSignal.reason (#12730)
  * fix(http): non ascii bytes in response (#12728)
  * fix: update unstable Deno props for signal API (#12723)
- includes v1.16.0
  * BREAKING(ext/web): remove ReadableStream.getIterator (#12652)
  * feat(cli): support React 17 JSX transforms (#12631)
  * feat(compat): add .code to dyn import error (#12633)
  * feat(compat): integrate import map and classic resolutions in ESM resolution (#12549)
  * feat(ext/console): Display error.cause in console (#12462)
  * feat(ext/fetch): support fetching local files (#12545)
  * feat(ext/net): add TlsConn.handshake() (#12467)
  * feat(ext/web): BYOB support for ReadableStream (#12616)
  * feat(ext/web): WritableStreamDefaultController.signal (#12654)
  * feat(ext/web): add AbortSignal.reason (#12697)
  * feat(ext/webstorage): use implied origin when --location not set (#12548)
  * feat(runtime): add Deno.addSignalListener API (#12512)
  * feat(runtime): give OS errors .code attributes (#12591)
  * feat(test): better formatting for test elapsed time (#12610)
  * feat(runtime): Stabilize Deno.TestDefinition.permissions (#12078)
  * feat(runtime): stabilize Deno.startTls (#12581)
  * feat(core): update to V8 9.7 (#12685)
  * fix(cli): do not cache emit when diagnostics present (#12541)
  * fix(cli): don't panic when mapping unknown errors (#12659)
  * fix(cli): lint/format all discoverd files on each change (#12518)
  * fix(cli): linter/formater watches current directory without args (#12550)
  * fix(cli): no-check respects inlineSources compiler option (#12559)
  * fix(cli/upgrade): nice error when unzip is missing (#12693)
  * fix(encoding): support additional encoding labels (#12586)
  * fix(ext/fetch): Replace redundant local variable with inline return statement (#12583)
  * fix(ext/http): allow multiple values in upgrade header for websocket (#12551)
  * fix(ext/net): expose all tls ops (#12699)
  * fix(fetch): set content-length for empty POST/PUT (#12703)
  * fix(fmt): reduce likelihood of deno fmt panic for file with multi-byte chars (#12623)
  * fix(fmt/lint): strip unc paths on Windows when displaying file paths in lint and fmt (#12606)
  * fix(lint): use recommended tag if there is no tags in config file or flags (#12644)
  * fix(lint): use recommended tags when no tags specified in config, but includes or excludes are (#12700)
  * fix(lsp): cache unsupported import completion origins (#12661)
  * fix(lsp): display module types only dependencies on hover (#12683)
  * fix(lsp): display signature docs as markdown (#12636)
  * fix(runtime): require full read and write permissions to create symlinks (#12554)
  * fix(tls): Make TLS clients support HTTP/2 (#12530)
  * fix(webidl): Don't throw when converting a detached buffer source (#12585)
  * fix(workers): Make importScripts() use the same HTTP client as fetch (#12540)
  * fix: Deno.emit crashes with BorrowMutError (#12627)
  * fix: support verbatim UNC prefixed paths on Windows (#12438)
  * fix: typings for BYOB stream readers (#12651)
  * perf(core): optimize waker capture in AsyncRefCell (#12332)
  * perf(encoding): avoid copying the input data in TextDecoder (#12573)
  * perf(http): encode string bodies in op-layer (#12451)
    perf: optimize some important crates more aggressively (#12332)

-------------------------------------------------------------------
Sun Oct 31 18:02:53 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.15.3:
  * feat(serde_v8): StringOrBuffer (#12503)
  * feat(serde_v8): allow all values to deserialize to unit type (#12504)
  * fix(cli/dts): update std links for deprecations (#12496)
  * fix(cli/tests): flaky Deno.watchFs() tests (#12485)
  * fix(core): avoid op_state.borrow_mut() for OpsTracker (#12525)
  * fix(core/bindings): use is_instance_of_error() instead of is_native_error()
    (#12479)
  * fix(ext/net): fix TLS bugs and add 'op_tls_handshake' (#12501)
  * fix(ext/websocket): prevent 'closed normally' panic (#12437)
  * fix(lsp): formatting should error on certain additional swc diagnostics
    (#12491)
  * fix: declare web types as global (#12497)
- includes v1.15.2:
  * feat(unstable): Node CJS and ESM resolvers for compat mode (#12424)
  * fix(cli): re-enable allowSyntheticDefaultImports for tsc (#12435)
  * fix(cli/fmt_errors): don't panic on source line formatting errors (#12449)
  * fix(cli/tests): move worker test assertions out of message handlers (#12439)
  * fix(console): fix display of primitive wrapper objects (#12425)
  * fix(core): avoid polling future after cancellation (#12385)
  * fix(core): poll async ops eagerly (#12385)
  * fix(fmt): keep parens for JS doc type assertions (#12475)
  * fix(fmt): should not remove parens around sequence expressions (#12461)
  * fix(runtime/ops/worker_host): move permission arg parsing to Rust (#12297)
- includes v1.15.1:
  * fix: --no-check not properly handling code nested in TS expressions (#12416)
  * fix: bundler panic when encountering export specifier with an alias (#12418)
- includes v1.15.0:
  * feat: add --compat flag to provide built-in Node modules (#12293)
  * feat: provide ops details for ops sanitizer failures (#12188)
  * feat: Show the URL of streaming WASM modules in stack traces (#12268)
  * feat: Stabilize Deno.kill and Deno.Process.kill (#12375)
  * feat: stabilize Deno.resolveDns (#12368)
  * feat: stabilize URLPattern API (#12256)
  * feat: support serializing WebAssembly.Module objects (#12140)
  * feat(cli/uninstall): add uninstall command (#12209)
  * feat(ext/crypto): decode RSAES-OAEP-params with default values (#12292)
  * feat(ext/crypto): export spki for RSA (#12114)
  * feat(ext/crypto): implement AES-CBC encryption & decryption (#12123)
  * feat(ext/crypto): implement deriveBits for ECDH (p256) (#11873)
  * feat(ext/crypto): implement deriveKey (#12117)
  * feat(ext/crypto): implement wrapKey (#12125)
  * feat(ext/crypto): support importing raw ECDSA keys (#11871)
  * feat(ext/crypto): support importing/exporting raw AES keys (#12392)
  * feat(ext/ffi): add support for buffer arguments (#12335)
  * feat(ext/ffi): Non-blocking FFI (#12274)
  * feat(ext/net): relevant errors for resolveDns (#12370)
  * feat(lint): add support for --watch flag (#11983)
  * feat(runtime): allow passing extensions via Worker options (#12362)
  * feat(runtime): improve error messages of runtime fs (#11984)
  * feat(tls): custom in memory CA certificates (#12219)
  * feat(unstable/test): imperative test steps API (#12190)
  * feat(web): Implement DOMException's stack property (#12294)
  * fix: Don't panic when a worker is closed in the reactions to a wasm operation (#12270)
  * fix: worker environment permissions should accept an array (#12250)
  * fix(core/runtime): sync_ops_cache if nuked Deno ns (#12302)
  * fix(ext/crypto): decode id-RSASSA-PSS with default params (#12147)
  * fix(ext/crypto): key generation based on AES key length (#12146)
  * fix(ext/crypto): missing Aes key typings (#12307)
  * fix(ext/crypto): use NotSupportedError for importKey() (#12289)
  * fix(ext/fetch): avoid panic when header is invalid (#12244)
  * fix(ext/ffi): don't panic in dlopen (#12344)
  * fix(ext/ffi): formatting dlopen errors on Windows (#12301)
  * fix(ext/ffi): missing "buffer" type definitions (#12371)
  * fix(ext/ffi): types for nonblocking FFI (#12345)
  * fix(ext/http): merge identical if/else branches (#12269)
  * fix(ext/net): should not panic when listening to unix abstract address (#12300)
  * fix(ext/web): Format DOMException stack property (#12333)
  * fix(lsp): lint diagnostics respect config file (#12338)
  * fix(repl): avoid panic when assigned to globalThis (#12273)
  * fix(runtime): Declare Window.self and DedicatedWorkerGlobalScope.name with
  * util.writable() (#12378)
  * fix(runtime): don't equate SIGINT to SIGKILL on Windows (#12356)
  * fix(runtime): Getting navigator.hardwareConcurrency on workers
    shouldn't throw (#12354)
  * fix(runtime/js/workers): throw errors instead of using an op (#12249)
  * fix(runtime/testing): format aggregate errors (#12183)
  * perf(core): use opcall() directly (#12310)
  * perf(fetch): fast path Uint8Array in extractBody() (#12351)
  * perf(fetch): optimize fillHeaders() key iteration (#12287)
  * perf(web): ~400x faster http header trimming (#12277)
  * perf(web): optimize byteLowerCase() (#12282)
  * perf(web/Event): move last class field to constructor (#12265)
  * perf(webidl): fix typo from #12286 (#12336)
  * perf(webidl): inline ResponseInit converter (#12285)
  * perf(webidl): optimize createDictionaryConverter() (#12279)
  * perf(webidl): optimize createRecordConverter() (#12286)
  * perf(webidl/DOMString): don't wrap string primitives (#12266)
- update deno_std to 0.111.0:
  * BREAKING(fs): deprecate exists and existsSync (#1364)
  * BREAKING(hash): deprecate std/hash (#1350)
  * BREAKING(io): reorganize modules (#813)
  * feat: streams utilities (#1141)
  * feat(node): Add dns and net modules (#1375)
  * feat(node): first iteration of http (#1383)
  * feat(node): update built-in modules in node/module.ts (#1378)
  * feat(node/crypto): add randomFillSync an randomFill (#1340)
  * feat(node/crypto): add randomInt (#1356)
  * feat(node/http): Export STATUS_CODES and METHODS (#1357)
  * feat(node/url): add support for UNC path (#1365)
  * fix(async/delay): reject if signal is already aborted (#1363)
  * fix(encoding/base64url): allow passing strings to encode (#1361)
  * fix(node): typo from #1380 (#1381)
  * fix(node/url): improve compatibility of fileURLToPath (#1342)
  * perf(bytes): switch equals to simd for large byte arrays (#1349)

-------------------------------------------------------------------
Sun Oct 10 06:43:49 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.14.3:
  * feat(core): implement Deno.core.isProxy() (#12288)
  * fix(core/runtime): sync_ops_cache if nuked Deno ns (#12302)
  * fix(ext/crypto): decode id-RSASSA-PSS with default params (#12147)
  * fix(ext/crypto): missing Aes key typings (#12307)
  * fix(ext/crypto): use NotSupportedError for importKey() (#12289)
  * fix(ext/fetch): avoid panic when header is invalid (#12244)
  * fix(ext/http): merge identical if/else branches (#12269)
  * fix(ext/net): should not panic when listening to unix abstract address
    (#12300)
  * fix(repl): avoid panic when assigned to globalThis (#12273)
  * fix(runtime/js/workers): throw errors instead of using an op (#12249)
  * fix(runtime/testing): format aggregate errors (#12183)
  * fix: Don't panic when a worker is closed in the reactions to a wasm operation.
    (#12270)
  * fix: worker environment permissions should accept an array (#12250)
  * perf(core): use opcall() directly (#12310)
  * perf(fetch): optimize fillHeaders() key iteration (#12287)
  * perf(web): optimize byteLowerCase() (#12282)
  * perf(web): ~400x faster http header trimming (#12277)
  * perf(web/Event): move last class field to constructor (#12265)
  * perf(webidl): optimize createDictionaryConverter() (#12279)
  * perf(webidl): optimize createRecordConverter() (#12286)
  * perf(webidl/DOMString): don't wrap string primitives (#12266)
- includes v1.14.2:
  * feat(cli/fmt): support more markdown extensions (#12195)
  * fix(cli/permissions): ensure revoked permissions are no longer granted
    (#12159)
  * fix(ext/http): fortify "is websocket?" check (#12179)
  * fix(ext/http): include port number in h2 urls (#12181)
  * fix(ext/web): FileReader error messages (#12218)
  * fix(ext/webidl): correctly apply [SymbolToStringTag] to interfaces (#11851)
  * fix(http): panic when responding to a closed conn (#12216)
  * fix(workers): Don't panic when a worker's parent thread stops running (#12156)
  * fix: subprocess kill support on windows (#12134)
  * perf(ext/fetch): Use the WebIDL conversion to DOMString rather than USVString
    for Response constructor (#12201)
  * perf(ext/fetch): skip USVString webidl conv on string constructor (#12168)
  * perf(fetch): optimize InnerBody constructor (#12232)
  * perf(fetch): optimize newInnerRequest blob url check (#12245)
  * perf(fetch/Response): avoid class fields (#12237)
  * perf(fetch/headers): optimize appendHeader (#12234)
  * perf(ops): optimize permission check (#11800)
  * perf(web): optimize Event constructor (#12231)
  * perf(webidl/ByteString): 3x faster ASCII check (#12230)
  * quickfix(ci): only run "Build product size info" on main/tag (#12184)
  * upgrade serde_v8 and rusty_v8 (#12175)

-------------------------------------------------------------------
Sun Sep 26 09:22:08 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.14.1:
  * fix(cli): don't ignore diagnostics about for await (#12116)
  * fix(cli): move Deno.flock and Deno.funlock to
    unstable types (#12138)
  * fix(cli/fmt_errors): Abbreviate long data URLs in
    stack traces (#12127)
  * fix(config-schema): correct default value of "lib" (#12145)
  * fix(core): prevent multiple main module loading (#12128)
  * fix(ext/crypto): don't use core.decode for encoding
    jwk keys (#12088)
  * fix(ext/crypto): use DataError in importKey() (#12071)
  * fix(lsp): align filter text to vscode logic (#12081)
  * fix(runtime/ops/signal.rs): Add FreeBSD signal
    definitions (#12084)
  * perf(ext/web): optimize EventTarget (#12166)
  * perf(runtime/fs): optimize readFile by using a single large
    buffer (#12057)
  * perf(web): optimize AbortController (#12165)

-------------------------------------------------------------------
Sat Sep 18 01:52:36 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.14.0:
  * v8 updated to 9.4.146.15 (rusty_v8 0.28.0) (#12026)
  * BREAKING(unstable): Fix casing in FfiPermissionDescriptor (#11659)
  * BREAKING(unstable): Remove Deno.Signals enum, Deno.signals. (#11909)
  * perf(ext/http): optimize auto cleanup of request resource (#11978)
  * feat(cli): Support Basic authentication in DENO_AUTH_TOKENS (#11910)
  * feat(cli): Update to TypeScript 4.4 (#11678)
  * feat(cli): add --ignore flag to test command (#11712)
  * feat(cli): close test worker once all tests complete (#11727)
  * feat(core): facilitate op-disabling middleware (#11858)
  * feat(ext/crypto): AES key generation (#11869)
  * feat(ext/crypto): export RSA keys as pkcs#8 (#11880)
  * feat(ext/crypto): generate ECDH keys (#11870)
  * feat(ext/crypto): implement HKDF operations (#11865)
  * feat(ext/crypto): implement encrypt, decrypt & generateKey for RSA-OAEP (#11654)
  * feat(ext/crypto): implement importKey and deriveBits for PBKDF2 (#11642)
  * feat(ext/crypto): import RSA pkcs#8 keys (#11891)
  * feat(ext/crypto): support JWK export for HMAC (#11864)
  * feat(ext/crypto): support JWK import for HMAC (#11716)
  * feat(ext/crypto): verify ECDSA signatures (#11739)
  * feat(extensions/console): right align numeric columns in table (#11748)
  * feat(fetch): mTLS client certificates for fetch() (#11721)
  * feat(fmt): add basic JS doc formatting (#11902)
  * feat(fmt): add support for configuration file (#11944)
  * feat(lint): add support for config file and CLI flags for rules (#11776)
  * feat(lsp): ignore specific lint for entire file (#12023)
  * feat(unstable): Add file locking APIs (#11746)
  * feat(unstable): Support file URLs in Deno.dlopen() (#11658)
  * feat(unstable): allow specifing gid and uid for subprocess (#11586)
  * feat(workers): Make the Deno namespace configurable and unfrozen (#11888)
  * feat: ArrayBuffer in structured clone transfer (#11840)
  * feat: add URLPattern API (#11941)
  * feat: add option flags to 'deno fmt' (#12060)
  * feat: stabilise Deno.upgradeWebSocket (#12024)
  * fix(cli): better handling of source maps (#11954)
  * fix(cli): dispatch unload event on watch drop (#11696)
  * fix(cli): retain path based test mode inference (#11878)
  * fix(cli): use updated names in deno info help text (#11989)
  * fix(doc): fix rustdoc bare_urls warning (#11921)
  * fix(ext/crypto): KeyAlgorithm typings for supported algorithms (#11738)
  * fix(ext/crypto): add HkdfParams and Pkdf2Params types (#11991)
  * fix(ext/fetch): Properly cancel upload stream when aborting (#11966)
  * fix(ext/http): resource leak if request body is not consumed (#11955)
  * fix(ext/http): websocket upgrade header check (#11830)
  * fix(ext/web): Format terminal DOMExceptions properly (#11834)
  * fix(ext/web): Preserve stack traces for DOMExceptions (#11959)
  * fix(lsp): correctly parse registry patterns (#12063)
  * fix(lsp): support data urls in deno.importMap option (#11397)
  * fix(runtime): return error instead of panicking for windows signals (#11940)
  * fix(test): propagate join errors in deno test (#11953)
  * fix(typings): fix property name in DiagnosticMessageChain interface (#11821)
  * fix(workers): don't drop messages from workers that have already been closed (#11913)
  * fix: FileReader onevent attributes don't conform to spec (#11908)
  * fix: FileReader.readAsText compat (#11814)
  * fix: Query string percent-encoded in import map (#11976)
  * fix: a Request whose URL is a revoked blob URL should still fetch (#11947)
  * fix: bring back Deno.Signal to unstable props (#11945)
  * fix: change assertion in httpServerIncompleteMessage test (#12052)
  * fix: exit process on panic in a tokio task (#11942)
  * fix: move unstable declarations to deno.unstable (#11876)
  * fix: permission prompt stuffing (#11931)
  * fix: permission prompt stuffing on Windows (#11969)
  * fix: worker_message_before_close was flaky (#12019)
  * fix: remove windows-only panic when calling Deno.kill (#11948)
- update to std 0.107.0:
  * BREAKING(http): cookie headers as params (#1041)
  * feat(collection): add findSingle (#1166)
  * feat(collections): Add associatewith (#1213)
  * feat(collections): add runningReduce (#1226)
  * feat(collections): add sample API (#1212)
  * feat(collections): add dropWhile (#1185)
  * feat(collections): add maxWith (#1170)
  * feat(collections): add minWith (#1169)
  * feat(collections): add reduceGroups (#1187)
  * feat(collections): add slidingWindows (#1191)
  * feat(io/streams): propagate cancel in readableStreamFromIterable() (#1274)
  * fix(collections/includesValue): prevent enumerable prototype check (#1225)
  * fix(testing/asserts): export Constructor type (#1208)
  * fix(tests/yaml): expect !!js/function parse/stringify to throw (#1276)
  * fix: update to latest signal API changes
  * security(encoding/yaml): disable functions (#1275)

-------------------------------------------------------------------
Thu Aug 26 18:41:36 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.13.2:
  * fix(cli/flags): require a non zero usize for concurrent jobs (#11802)
  * fix(ext/crypto): exportKey() for HMAC (#11737)
  * fix(ext/crypto): remove duplicate Algorithm interface definition (#11807)
  * fix(ext/ffi): don't panic on invalid enum values (#11815)
  * fix(ext/http): resource leak on HttpConn.close() (#11805)
  * fix(lsp): better handling of languageId (#11755)
  * fix(runtime): event loop panics in classic workers (#11756)
  * fix(ext/fetch): Headers constructor error message (#11778)
  * perf(ext/url): cleanup and optimize url parsing op args (#11763)
  * perf(ext/url): optimize UrlParts op serialization (#11765)
  * perf(ext/url): use DOMString instead of USVString as webidl converter
    for URL parsing (#11775)
  * perf(url): build with opt-level 3 (#11779)

-------------------------------------------------------------------
Tue Aug 17 15:51:29 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.13.1:
  * fix: Blob#slice arguments should be optional (#11665)
  * fix: correct spelling of certificate in --unsafely-ignore-certificate
    -errors warning message (#11634)
  * fix: don't statically type name on Deno.errors (#11715)
  * fix: parse error when transpiling code with BOM (#11688)
  * fix(cli): allow specifiers of unknown media types with
    test command (#11652)
  * fix(cli): explicitly scan for ignore attribute in inline tests (#11647)
  * fix(cli): retain input order of remote specifiers (#11700)
  * fix(cli/lint): don't use gray in diagnostics output for
    visibility (#11702)
  * fix(cli/tools/repl): don't highlight candidate when completion
    is list (#11697)
  * fix(ext/crypto): enable non-extractable keys (#11705)
  * fix(ext/crypto): fix copying buffersource (#11714)
  * fix(ext/crypto): handle idlValue not being present (#11685)
  * fix(ext/crypto): importKey() SecurityError on non-extractable keys (#11662)
  * fix(ext/crypto): take a copy of keyData bytes (#11666)
  * fix(ext/fetch): better error if no content-type
  * fix(ext/fetch): don't use global Deno object
  * fix(ext/http): remove unwrap() when HTTP conn errors (#11674)
  * fix(ext/web): use Array primordials in MessagePort (#11680)
  * fix(http/ws): support multiple options in connection header (#11675)
  * fix(lint): add links to help at lint.deno.land (#11667)
  * fix(test): dispatch load event before tests are run (#11708)
  * fix(test): sort file module specifiers (#11656)
  * perf: improve localStorage throughput (#11709)
  * perf(ext/http): faster req_url string assembly (#11711)
  * perf(wpt/crypto): optimize num-bigint-dig for debug builds (#11681)

-------------------------------------------------------------------
Wed Aug 11 02:17:35 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.13.0
  * BREAKING(unstable): Rename Deno.WebSocketUpgrade::websocket to
    socket (#11542)
  * feat: Add --unsafely-ignore-certificate-errors flag to disable SSL
    verification (#11324)
  * feat: add experimental WebSocketStream API (#10365)
  * feat: FFI API replacing native plugins (#11152)
  * feat: stabilize Deno.serveHttp() (#11544)
  * feat: support AbortSignal in writeFile (#11568)
  * feat: support client certificates for connectTls (#11598)
  * feat: type check codeblocks in Markdown file with
    "deno test --doc" (#11421)
  * feat(extensions/crypto): implement importKey and exportKey for
    raw HMAC keys (#11367)
  * feat(extensions/crypto): implement verify() for HMAC (#11387)
  * feat(extensions/tls): Optionally support loading native certs (#11491)
  * feat(extensions/web): add structuredClone function (#11572)
  * feat(fmt): format top-level JSX elements/fragments with parens
    when multi-line (#11582)
  * feat(lsp): ability to set DENO_DIR via settings (#11527)
  * feat(lsp): implement refactoring code actions (#11555)
  * feat(lsp): support clients which do not support disabled code
    actions (#11612)
  * feat(repl): add --eval flag for evaluating code when the repl
    starts (#11590)
  * feat(repl): support exports in the REPL (#11592)
  * feat(runtime): allow URL for permissions (#11578)
  * feat(runtime): implement navigator.hardwareConcurrency (#11448)
  * feat(unstable): clean environmental variables for subprocess (#11571)
  * fix: support windows file specifiers with import maps (#11551)
  * fix: Type Deno.errors.* as subclasses of Error (#10702)
  * fix(doc): panic on invalid url (#11536)
  * fix(extensions/fetch): Add Origin header to outgoing requests
    for fetch (#11557)
  * fix(extensions/websocket): allow any close code for server (#11614)
  * fix(lsp): do not output to stderr before exiting the process (#11562)
- deno_std updated to 0.104.0:
  * feat: Add collections module (#993, #1075, #1103, #1062, #1062, #1109,
    #1108, #1071, #1069, #1104, #1097, #1110, #1116)
  * feat(crypto): add std/crypto wrapping and extending runtime
    WebCrypto (#1025)
  * feat(http/file_server): return code 304 based on If-Modified-Since Header
    (#1078)
  * feat(node): add remaining Node.js builtin aliases (#1085)
  * feat(node): add shim for perf_hooks (#1088)
  * feat(node): assert/strict alias (#1084)
  * feat(node): fs/promises implementation (#1083)
  * feat(testing): add assertRejects, deprecate assertThrowsAsync (#1101)
  * fix(async): make it so exception of deadline can be caught (#1105)
  * fix(http/file_server): fix flaky 'file_server sets Date header
    correctly' test case (#1095)
  * fix(node): assert/strict, fs/promises, perf_hooks modules
    could not be required (#1107)
  * fix(node/events): optimize listener management (#1113)
  * fix(testing): change assertThrows and assertThrowsAsync
    return type to void and Promise<void> (#1052)

-------------------------------------------------------------------
Mon Jul 26 23:19:02 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.12.2
  * feat(lsp, unstable): add workspace config to status page (#11459)
  * fix: panic for non-WS connections to inspector (#11466)
  * fix: support --cert flag for TLS connect APIs (#11484)
  * fix(cli): info now displays type reference deps (#11478)
  * fix(cli): normalize test command errors (#11375)
  * fix(cli): rebuild when environment variables change (#11471)
  * fix(cli): side-load test modules (#11515)
  * fix(extensions/fetch): close fetch response body on GC (#11467)
  * fix(extensions/http): support multiple options in connection header
    for websocket (#11505)
  * fix(extensions/websocket): case insensitive connection header (#11489)
  * fix(lsp): do not populate maybe_type slot with import type dep (#11477)
  * fix(lsp): handle importmaps properly (#11496)
- deno_std updated to 0.103.0:
  * feat(async): add status to deferred promises (#1047)
  * feat(http): add range request and etag support to file_server.ts (#1028)
  * fix(async/deferred): rename .status -> .state (#1055)
  * fix(encoding/base64url): throw TypeError in case of invalid base64url
    string (#1040)
  * fix(encoding/toml): fix inline table and nested array (#1042)
  * fix(encoding/yaml): fix parseAll type definition by using overloads (#1048)
  * fix(testing): assertThrowsAsync always reporting Error instead
    of actual error class (#1051)
  * fix(testing/asserts): cater for different class constructor
    functions (#1000)

-------------------------------------------------------------------
Wed Jul 21 21:11:26 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.12.1
  * fix: Big{U|}Int64Array in crypto.getRandomValues (#11447)
  * fix(extensions/http): correctly concat cookie headers (#11422)
  * fix(extensions/web): aborting a FileReader should not affect later
    reads (#11381)
  * fix(repl): output error without hanging when input is invalid (#11426)
  * fix(tsc): add .at() types manually to tsc (#11443)
  * fix(workers): silently ignore non-existent worker IDs (#11417)
- deno_std updated to 0.102.0:
  * feat: Add std/collections (#993)
  * fix(encoding/toml): fix comment line starting with whitespaces (#1017)
  * fix(encoding/toml): parse keys correctly (#1019)
  * fix(hash): fix handling of non-byte-sized TypedArray views (#1012)
  * fix(testing): Don't merge diff when it's not spaces even if it's
    surrounded by word-diff (#1032)
- includes rusty_v8 rev with v8 9.3.345.3

-------------------------------------------------------------------
Tue Jul 13 19:12:54 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.12.0
  * feat: rusty_v8 v0.23.0 with v8 9.2.230.14
  * feat: Add MessageChannel and MessagePort APIs (#11051)
  * feat: Deno namespace configurable and unfrozen (#11062)
  * feat: Enable WebAssembly.instantiateStreaming and WebAssembly.
    compileStreaming (#11200)
  * feat: Support "types" option when type checking (#10999)
  * feat: Support SharedArrayBuffer sharing between workers (#11040)
  * feat: Transfer MessagePort between workers (#11076)
  * feat(extensions/crypto): Implement generateKey() and sign() (#9614)
  * feat(extensions/crypto): Implement verify() for RSA (#11312)
  * feat(extensions/fetch): Add programmatic proxy (#10907)
  * feat(extensions/http): Server side websocket support (#10359)
  * feat(inspector): Improve inspector prompt in Chrome Devtools (#11187)
  * feat(inspector): Pipe console messages between terminal and inspector (#11134)
  * feat(lsp): Dependency hover information (#11090)
  * feat(repl): Show list completion (#11001)
  * feat(repl): Support autocomplete on declarations containing a primitive (#11325)
  * feat(repl): Support import declarations in the REPL (#11086)
  * feat(repl): Type stripping in the REPL (#10934)
  * feat(test): Add "--shuffle" flag to randomize test ordering (#11163)
  * feat(test): Add support for "--fail-fast=N" (#11316)
  * fix: Align DedicatedWorkerGlobalScope event handlers to spec (#11353)
  * fix: Move stable/unstable types/APIs to their correct places (#10880)
  * fix(core): Fix concurrent loading of dynamic imports (#11089)
  * fix(extensions/console): Eliminate panic inspecting event classes (#10979)
  * fix(extensions/console): Inspecting prototypes of built-ins with custom
    inspect implementations should not throw (#11308)
  * fix(extensions/console): Left align table entries (#11295)
  * fix(extensions/crypto): Hash input for RSASSA-PKCS1-v1_5 before signing (#11314)
  * fix(extensions/fetch): Consumed body with a non-stream source should
    result in a disturbed stream (#11217)
  * fix(extensions/fetch): Encode and decode headers as byte strings (#11070)
  * fix(extensions/fetch): Filter out custom HOST headers (#11020)
  * fix(extensions/fetch): OPTIONS should be allowed a non-null body (#11242)
  * fix(extensions/fetch): Proxy body for requests created from other requests (#11093)
  * fix(extensions/http): Encode and decode headers as byte strings in
    the HTTP server (#11144)
  * fix(extensions/http): Panic in request body streaming (#11191)
  * fix(extensions/http): Specify AbortSignal for native http requests (#11126)
  * fix(extensions/timers): Spec conformance for performance API (#10887)
  * fix(extensions/url): Use USVStrings in URLSearchParams constructor (#11101)
  * fix(extensions/web): AddEventListenerOptions.signal shouldn't be nullable (#11348)
  * fix(extensions/webgpu): Align error scopes to spec (#9797)
  * fix(lsp): Handle invalid config setting better (#11104)
  * fix(lsp): Reload import registries should not error when the module
    registries directory does not exist (#11123)
  * fix(repl): Panic when Deno.inspect throws (#11292)
  * fix(runtime): Fix signal promise API (#11069)
  * fix(runtime): Ignored tests should not cause permission changes (#11278)
- update deno_std to 0.101.0:
  * BREAKING(encoding/hex): remove encodedLen, encodeToString, decodedLen,
    decodeString, errInvalidByte, errLength (#733)
  * BREAKING(mime/multipart): return array for multiple values with same
    form name (#722)
  * BREAKING(std/uuid): rework v4 and v5 module (#971)
  * feat(async): add deadline to async module (#1022)
  * feat(async): add debounce method to async module (#1006)
  * feat(encoding/toml): fix bad string format. Improve coverage (#991)
  * feat(hash): add BLAKE3 hash support (#994)
  * feat(http): Add Cookie domain validation (#1009)
  * feat(http): Allow passing path and domain attributes while removing
    cookies (#1005)
  * feat(io): add copy function (#1016)
  * feat(io/streams): add autoClose option to writableStreamFromWriter (#964)
  * feat(std/node): add writeBuffer of internal binding fs module (#888)
  * fix: improve type safety for browser-compatible modules (#995)
  * fix(encoding/toml): serializes mixed array (#1001)
  * fix(encoding/toml): throws parse error when toml uses invalid whitespaces
    (#1013)
  * fix(http): setCookie with maxAge of 0 (#992)
  * fix(http/server): Swallow NotConnected errors from listener.accept() (#761)
  * fix(io/bufio): fix handling of trailing new line (#990)
  * fix(node/module): More descriptive error in "createRequire" (#997)
  * fix(path): Add question mark as a glob indicator (#1024)
  * fix(testing): use return type of never for fail (#1002)
- mark dependency on rust >= 1.53 (due to swc)
- remove deno-69.patch (upstreamed)
- remove ff-serde.patch (upstreamed)
- remove icudtl.dat (upstreamed)

-------------------------------------------------------------------
Sun Jul  4 05:16:39 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- pass --sparkplug v8 flag
- added ff-serde.patch
- rework deno-69.patch with more breaking changes
- manually update serde_v8 to 0.8.0 in vendor tarball

-------------------------------------------------------------------
Sun Jul  4 01:09:17 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.11.5:
  * ci: don't set DENO_CANARY when releasing, attempt 2 (#11214)
- includes v1.11.4:
  * upgrade: swc 0.44.0 (#11197)
  * ci: don't set DENO_CANARY when releasing (#11181)
- includes v1.11.3:
  * fix(#10761): graph errors reported as diagnostics for Deno.emit() (#10767)
  * fix(core): don't panic on stdout/stderr write failures in Deno.core.print (#11039)
  * fix(core): top-level-await is now always enabled (#11082)
  * fix(extensions/fetch): Filter out custom HOST headers (#11020)
  * fix(fetch): proxy body for requests created from other requests (#11093)
  * fix(http): remove unwrap() in HTTP bindings (#11130)
  * fix(inspect): eliminate panic inspecting event classes (#10979)
  * fix(lsp): reload import registries should not error when the module
    registries directory does not exist (#11123)
  * fix(runtime): fix signal promise API (#11069)
  * fix(runtime/signal): use op_async_unref for op_signal_poll (#11097)
  * fix(url): use USVStrings in URLSearchParams constructor (#11101)
  * fix(webstorage): increase localStorage limit to 10MB (#11081)
  * fix: make readonly Event properties readonly (#11106)
  * fix: specify AbortSignal for native http requests (#11126)
  * chore: upgrade crates (#11007)
  * chore: use lsp to get parent process id (#11083)
- update deno_std to v0.100.0:
  * feat(testing/asserts): improved strings diff (#948)
  * feat(testing/asserts): use assertion signature for "assertExists" (#969)
  * fix(node/events): align EventEmitter#addListener with native node tests (#976)
  * fix(path): fix type error in glob.ts with noImplicitAny: false config (#977)
- includes rusty_v8 0.25.1

-------------------------------------------------------------------
Wed Jun 23 21:25:08 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.11.2:
  * feat(unstable, lsp): quick fix actions to ignore lint errors (#10627)
  * fix: add support for module es2020 to Deno.emit (#11065)
  * fix: align Console to spec (#10983)
  * fix: align URL / URLSearchParams to spec (#11005)
  * fix: align Websocket to spec (#11010)
  * fix: closing / aborting WritableStream is racy (#10982)
  * fix: fetch with method HEAD should not have body (#11003)
  * fix: Worker accepts specifier as URL (#11038)
  * fix(lsp): do not rename in strings and comments (#11041)

-------------------------------------------------------------------
Sat Jun 19 05:38:31 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.11.1:
  * feat(unstable): add additional logging information in LSP (#10890)
  * fix: Deno.inspect should inspect the object the proxy represents
    rather than the target of the proxy (#10977)
  * fix: early binding to dispatchEvent in workers (#10904)
  * fix: hang in Deno.serveHttp() (#10923)
  * fix: improve worker types (#10965)
  * fix: make WHATWG streams more compliant (#10967, #10970)
  * fix: poll connection after writing response chunk in Deno.serveHttp()
    (#10961)
  * fix: set minimum timeout to be 4 milliseconds (#10972)
  * fix(repl): Complete declarations (#10963)
  * fix(repl): Fix undefined result colour in cmd (#10964)
- update deno_std to 0.99.0:
  * feat(mime): make createPart of MultipartWriter public (#960)
  * feat(node/util): add inherits (#958)
  * fix(node/events): fix EventEmitter#removeAllListeners (#968)
  * fix(node/process): make process.env enumerable (#957)
  * fix(node/util): fix util.inherits (#959)
- includes V8 9.2.230.10 (rusty_v8/#700)
- add deno-69.patch for rusty_v8/#702 parity

-------------------------------------------------------------------
Wed Jun  9 05:15:53 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.11.0:
  * feat: upgrade to TypeScript 4.3
  * feat: Add FsWatcher interface
  * feat: Add origin data dir to deno info
  * feat: Initialize runtime_compiler ops in deno compile
  * feat: Make 'deno lint' stable
  * feat: Support data uri dynamic imports in deno compile
  * feat(extensions): add BroadcastChannel
  * feat(extensions/crypto): implement randomUUID
  * feat(extensions/crypto): implement subtle.digest
  * feat(extensions/fetch): implement abort
  * feat(extensions/web): Implement TextDecoderStream and TextEncoderStream
  * feat(lsp): add test code lens
  * feat(lsp): registry auto discovery
  * fix: change Crypto to interface
  * fix: Support the stream option to TextDecoder#decode
  * fix(extensions/fetch): implement newline normalization and escapes
    in the multipart/form-data serializer
  * fix(runtime/http): Hang in Deno.serveHttp
  * fix(streams): expose ReadableByteStreamController &
    TransformStreamDefaultController
- includes rusty_v8 0.22.3 with v8 9.1.269.35

-------------------------------------------------------------------
Thu Jun  3 15:19:42 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.10.3:
  * feat(lsp): diagnostics for deno types and triple-slash refs
  * feat(lsp): provide X-Deno-Warning as a diagnostic
  * feat(lsp): show hints from deno_lint in addition to messages
  * feat(lsp): support formatting json and markdown files
  * fix(cli): always allow documentation modules to be checked
  * fix(cli): canonicalize coverage dir
  * fix(cli): don't statically error on dynamic unmapped bare specifiers
  * fix(cli): empty tsconfig.json file does not cause error
  * fix(cli): support source maps with Deno.emit() and bundle
  * fix(cli/dts): fix missing error class (NotSupported) in types
  * fix(cli/install): support file: scheme URLs
  * fix(cli/test): don't use reserved symbol : in specifier
  * fix(cli/test): ensure coverage dir exists
  * fix(cli/upgrade): modify download size paddings
  * fix(runtime/http): expose nextRequest() errors in respondWith()
  * fix(runtime/http): fix empty blob response
  * fix(serde_v8): remove intentional deserialization error on non-utf8 strings
  * fix(ext/fetch): fix error message of Request constructor
  * fix(ext/fetch): make prototype properties writable
  * fix(ext/fetch): remove unimplemented Request attributes
  * fix(ext/file): update File constructor following the spec
  * fix(ext/webstorage): use opstate for sqlite connection
  * fix(lsp): deps diagnostics include data property
  * fix(lsp): ignore type definition not found diagnostic
  * fix(lsp): local module import added by code action now has file ext
  * fix(lsp): make failed to load config error descriptive
  * fix(lsp): memoize script versions per tsc request
  * fix(lsp): re-enable the per resource configuration without a deadlock
  * docs(runtime): fix fetch API usage of HTTP server
  * docs(cli): update getting started for clarity
  * docs(cli/dts) replace read() with readSync()
  * docs(cli/dts): fix plugin example
  * docs(cli/dts): fix unix socket examples
  * docs(cli/dts): make worker example pass
  * docs(cli/dts): tag test permission example as typescript
  * docs(cli/dts): fix typo in TestDefinition.only description
  * docs(permissions): fix grammatical error in permissions docs
  * docs(testing): fix misspelling
  * docs(typescript): fix typo in faqs

-------------------------------------------------------------------
Mon May 17 16:03:53 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.10.2:
  * fix: static import permissions in dynamic imports
  * fix(lsp): remove duplicate cwd in config path
  * fix(cli): ignore x-typescript-types header when media type is not js/jsx
  * chore: upgrade Tokio to 1.6.0
- update deno_std to 0.97.0:
  * fix(io/buffer): make Buffer compatible with Deploy
  * fix(io/bufio): readDelim returns wrong result if delim strides over chunks
  * fix(node/events): accept only functions as listener arguments
  * fix(testing): support array values in assertObjectMatch

-------------------------------------------------------------------
Wed May 12 20:16:56 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.10.1:
  * Disable lsp workspaces from 1.10 release, resolve deadlock bug
- includes v1.10:
  * denort removed
  * feat: "deno test" prompts number of tests and origin
  * feat: "Worker.postMessage()" uses structured clone algorithm
  * feat: add "deno test --doc"
  * feat: add "deno test --jobs"
  * feat: add "deno test --watch"
  * feat: add test permissions to Deno.test
  * feat: add WebStorage API
  * feat: align plugin api with "deno_core::Extension"
  * feat: support deno-fmt-ignore-file for markdown formatting
  * feat(core): enable WASM shared memory
  * feat(core): introduce Extension
  * feat(lsp): add internal debugging logging
  * fix: invalid types for asynchronous and synchronous File#truncate
  * fix: rename Deno.emit() bundle options to "module" and "classic"
  * fix: sleepSync doesn't return a Promise
  * fix: TextEncoder#encodeInto spec compliance
  * fix: typings for Deno.os.arch
  * fix(extensions/fetch): infinite loop on fill headers
  * fix(extensions/fetch): Prevent throwing when inspecting a request
  * fix(installer): allow remote import maps
  * fix(lsp): remove code_action/diagnostics deadlock
  * fix(tls): flush send buffer in the background after closing TLS stream
  * fix(tls): throw meaningful error when hostname is invalid
- update deno_std to 0.96.0:
  * feat(fs/walk): show path in walk error
  * feat(http): allow custom response code
  * feat(io): add readRange, readRangeSync
  * feat(mime/multipart): add options to readForm
  * feat(node): add console module
  * feat(node/assert): add rejects and doesNotReject
  * feat(std/node): add implementation of os.homedir()
  * fix(http/file_server): keep url and name consistent
  * fix(io): Improve readDelims() performance
  * fix(io/streams): don't use a byte ReadableStream
  * fix(node/assert): enable test-assert-fail.js and align assert.fail to it
  * fix(node/child_process): Try to fix flaky tests
  * fix(node/stream): make Stream the default export

-------------------------------------------------------------------
Tue Apr 27 17:28:33 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.9.2:
  * fix: parse websocket messages correctly
  * fix: standalone bin corruption on M1
  * fix: don't gray-out internal error frames
  * fix(op_crates/fetch): Response inspect regression
  * fix(runtime): do not panic on not found cwd
  * fix(op_crates/webgpu): move non-null op buffer arg check when needed
  * fix(lsp): document symbol performance mark
- includes v1.9.1:
  * feat(lsp, unstable): Implement textDocument/documentSymbol
  * feat(lsp, unstable): implement textDocument/prepareCallHierarchy
  * feat(lsp, unstable): Implement textDocument/semanticTokens/full
  * feat(lsp, unstable): improve diagnostic status page
  * fix(lsp): handle x-typescript-types header on type only imports properly
  * fix(lsp): remove documents when closed
  * fix(runtime): correct URL in Request
  * fix(runtime): handle race condition in postMessage where worker has terminated
  * fix(runtime): hang during HTTP server response
  * fix(runtime): include HTTP ops in WebWorker scope
  * fix: revert changes to Deno.Conn type
- update deno_std to 0.95.0 (includes 0.94.0):
  * feat(node): add basic support for child_process.spawn
  * feat(node/fs): add fstat and fstatSync
  * fix(node/fs): actually export everything
  * fix(path): reduce circular dependency
  * fix(testing): equals does not differentiate undefined/absent keys
  * feat(path/glob): add caseInsensitive option
  * feat(streams): add readableStreamFromReader

-------------------------------------------------------------------
Tue Apr 13 22:18:35 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.9.0:
  * feat: blob URL support
  * feat: blob URL support in fetch
  * feat: data URL support in fetch
  * feat: native HTTP bindings
  * feat: raise file descriptor limit on startup
  * feat: set useDefineForClassFields to true
  * feat: stabilize Deno.ftruncate and Deno.ftruncateSync
  * feat: stricter typings for Listener & Conn
  * feat(lsp): add import completions
  * feat(lsp): add registry import auto-complete
  * feat(lsp): implement textDocument/foldingRange
  * feat(lsp): implement textDocument/selectionRange
  * feat(permissions): allow env permission to take values
  * feat(permissions): allow run permission to take values
  * feat(runtime): add stat and statSync methods to Deno.File
  * feat(runtime): add truncate and truncateSync methods to Deno.File
  * feat(runtime): stabilize Deno.fstat and Deno.fstatSync
  * feat(runtime/permissions): prompt fallback
  * feat(unstable): Add Deno.memoryUsage()
  * feat(unstable): ALPN config in listenTls
  * fix: include deno.crypto in "deno types"
  * fix: Properly await already evaluating dynamic imports
  * fix(lsp): don't error on tsc debug failures for code actions
  * fix(lsp): ensure insert_text is passed back on completions
  * fix(lsp): folding range adjustment panic
  * fix(lsp): normalize windows file URLs properly
  * fix(lsp): properly handle encoding URLs from lsp client
  * fix(op_crates/console): console.table value misalignment with varying keys
  * fix(permissions): don't panic when no input is given
  * fix(runtime/js/timers): Use (0, eval) instead of eval()
  * fix(runtime/readFile): close resources on error during read
  * fix(websocket): ignore resource close error
- update deno_std to 0.93.0:
  * feat: add iter and iterSync to io/util
  * feat(node/fs): add fdatasync and fdatasyncSync
  * feat(node/fs): add fsync and fsyncSync
  * feat(node/fs): add ftruncate and ftruncateSync
  * feat(node/fs): add futimes and futimesSync
  * fix(testing): Function signature of assertObjectEquals() does not accept interfaces
- includes rusty_v8 0.22.1 for v8 9.1.269.5

-------------------------------------------------------------------
Wed Apr  7 16:16:27 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.8.3:
  * feat(lsp): add import completions
  * feat(lsp): implement textDocument/selectionRange
  * fix(websocket): ignore resource close error
  * fix(lsp): ensure insert_text is passed back on completions
  * fix(web): add AbortController.abort()
  * fix(crypto): include deno.crypto in deno types
  * fix(cli): re-add dom.asynciterable lib
- update deno_std to 0.92.0:
  * feat: make bufio compatible to Deno Deploy
  * feat: add symlink adn symlinkSync to node/fs
  * feat: add format and improve deprecate in node/util
  * feat: add io/buffer and io/util module
  * fix: handle upstream type changes
  * chore: remove unused import in http
  * refactor: remove boilerplate Promise<void> return types in encoding

-------------------------------------------------------------------
Sun Mar 21 21:52:50 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.8.2:
  * upgrade: rusty_v8 0.21.0
  * upgrade: tokio 1.4.0
  * fix: fallback to default UA and CA data for Deno.createHttpClient()
  * fix: getBindGroupLayout always illegal invocation
  * fix(cli/bundle): display anyhow error chain
  * fix(core): don't panic on invalid arguments for Deno.core.print
  * fix(doc): update example for sub processes
  * fix(fmt): Correctly format hard breaks in markdown
  * fix(lsp): allow on disk files to change
  * fix(lsp): diagnostics use own thread and debounce
  * fix(op_crates/webgpu): create instance only when required
  * fix(runtime): do not require deno namespace in workers for crypto
  * refactor: enforce type ResourceId across codebase
  * refactor: Clean up permission handling
  * refactor: Move bin ops to deno_core and unify logic with json ops
  * refactor: Move Console to op_crates/console
  * refactor: Split web op crate
  * refactor: Simplify icu data alignment
  * refactor: Update minimal ops & rename to buffer ops
  * refactor: Use serde ops more
  * refactor(lsp): refactor completions and add tests
  * refactor(lsp): slightly reorganize diagnostics debounce logic
- update deno_std to 0.91.0:
  * feat(encoding/yaml): add support for JS types and user types
  * feat(io/streams): Add readerFromIterable()
  * feat(std/node): add utimes and utimesSync
  * fix(multipart): support useDefineForClassFields
  * fix(node): fix node/cli.ts
  * fix(node): move throw error in fs.writeFile to pass no-unsafe-finally
  * fix(path): enable and fix file URL tests
  * refactor(node/fs): update fs import

-------------------------------------------------------------------
Wed Mar 10 03:34:32 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.8.1:
  * fix(cli/ast): Pass importsNotUsedAsValues to swc
  * fix(cli/compile): Do not append .exe depending on target
  * fix(cli/coverage): Ensure single line functions don't yield false positives
  * fix(core): Shared queue assertion failure in case of js error
  * fix(runtime): Add navigator interface objects
  * fix(runtime/web_worker): Don't block self.onmessage with TLA
  * fix(webgpu): Add Uint32Array type for code in ShaderModuleDescriptor
  * fix(webgpu): Add webidl records and simple unions
- update deno_std to 0.90.0:
  * feat(node): Add CLI for running Node.js script with std/node
  * feat(node): Add "module" polyfill
  * fix(node): fix assert module, enable test cases
  * fix(http): Create a single encoder instance

-------------------------------------------------------------------
Tue Mar  2 23:49:39 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.8.0
  * upgrade: TypeScript 4.2
  * upgrade: rusty_v8 to 0.20.0 (V8 9.0.257.3)
  * feat: Align import map to spec and stabilize
  * feat: Deno.emit supports bundling as IIFE
  * feat: Use top user frame for error source lines
  * feat: WebGPU API
  * feat: add "deno coverage" subcommand
  * feat: add --ext flag to deno eval
  * feat: add exit sanitizer to Deno.test
  * feat: add json(c) support to deno fmt
  * feat: add structured cloning to Deno.core
  * feat: per op metrics (unstable)
  * feat: represent type dependencies in info
  * feat: stabilize Deno.permissions
  * feat: stabilize Deno.link and Deno.linkSync
  * feat: stabilize Deno.symlink and Deno.symlinkSync
  * feat: support auth tokens for accessing private modules
  * feat: support loading import map from URL
  * feat: use type definitions "deno doc" if available
  * fix(core): Add stacks for dynamic import resolution errors
  * fix(core): Fix dynamic imports for already rejected modules
  * fix(lsp): improve exception handling on tsc snapshots
  * fix(repl): filter out symbol candidates
  * fix(runtime): do not panic on irregular dir entries
  * fix(runtime/testing): false positive for timers when an error is thrown
  * fix(websocket): default to close code 1005
  * fix: lint and fmt error if no target files are found
  * fix: panic caused by Deno.env.set("", "")
  * fix: typo in coverage exit_unstable
- update deno_std to 0.89.0
  * BREAKING(io/streams): Strengthen iterator to readable stream conversion
  * build: collect and upload code coverage
  * feat(node): add constants module
  * feat(node): add crypto.createHash
  * feat(node): add process.hrtime function
  * feat(node): add truncate and truncateSync
  * fix(node): export promisify & callbackify
  * fix(node): fix export items of events
  * fix(node): ignore shebang
  * fix(node): native module needs to be extensible
  * fix(node/process): make process.argv an array
  * fix: fix type errors in canary test
  * refactor: fix codes to pass no-unused-vars lint
  * test(path): update test cases for canary

-------------------------------------------------------------------
Sat Feb 20 20:18:54 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.7.5
  * fix: align btoa to spec
  * fix: Don't use file names from source maps
  * fix: Make dynamic import async errors catchable
  * fix: webidl utils and align Event to spec
  * fix(lsp): document spans use original range
  * fix(lsp): handle cached type dependencies properly
  * fix(lsp): handle data URLs properly
  * std updated to v0.88.0:
    + BREAKING(encoding): remove module utf8.ts
    + chore: fix typo in contributing section
    + docs(bytes): improve README.md
    + feat(node): add native module polyfills: url, crypto
    + feat(node): add tty module
    + feat(node): support conditional exports
    + fix(std/testing) : Handle Symbols correctly in deep equalities
    + test(node): run external tests with --quiet
- includes v1.7.4
  * nothing different since 1.7.3
- includes revision with rusty_v8 0.19.0

-------------------------------------------------------------------
Fri Feb 12 17:23:17 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.7.3
  * upgrade: rusty_v8 0.17.0, v8 9.0.123
  * upgrade: deno_doc, deno_lint, dprint, swc_ecmascript, swc_bundler
  * feat(unstable, lsp): add deno cache code actions
  * feat(unstable, lsp): add implementations code lens
  * fix(cli): check for inline source maps before external ones
  * fix(cli): fix WebSocket close
  * fix(cli): import maps handles data URLs
  * fix(console): log function object properties / do not log
    non-enumerable props by default
  * fix(lsp): handle code lenses for non-documents
  * fix(lsp): handle type deps properly
  * fix(lsp): prepare diagnostics when the config changes
  * fix(lsp): properly handle static assets
  * fix(lsp): support codeAction/resolve
  * fix(op_crates): Don't use `Deno.inspect` in op crates
  * fix(runtime/tls): handle invalid host for connectTls/startTls
  * std:BREAKING(http/cookie): remove Cookies and SameSite type aliases
  * std:docs(fmt): fix examples in fmt/colors.ts
  * std:docs(io/ioutil): improve jsdoc
  * std:fix(http/file_server): svg media type
  * std:refactor(hash/md5): throw TypeError for wrong type
  * std:test(node): enable native node tests

-------------------------------------------------------------------
Fri Feb  5 21:14:55 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.7.2
  * feat(lsp, unstable): add references code lens
  * feat(lsp, unstable): add TS quick fix code actions
  * fix: improve http client builder error message
  * fix(cli): fix handling of non-normalized specifier
  * fix(cli/coverage): display mapped instrumentation line counts
  * fix(cli/lsp): fix using jsx/tsx when not emitting via tsc
  * fix(repl): prevent symbol completion panic
  * refactor: rewrite Blob implementation
  * refactor: rewrite File implementation
  * std:feat(http/file_server): support do not show dotfiles
  * std:feat(http/file_server): show ../ if it makes sense & end dirs with /

-------------------------------------------------------------------
Fri Jan 29 17:34:16 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.7.1
  * feat(std/node): Add support for process.on("exit")
  * fix(std/node): Stop callbacks being called twice when callback throws error
  * fix(std/node): replace uses of window with globalThis
  * fix(std/async): make pooledMap() errors catchable
  * feat(lsp, unstable): add performance measurements
  * fix(lsp): complete list of unused diagnostics
  * fix(lsp): fix deadlocks, use one big mutex
  * fix(lsp): handle mbc documents properly
  * fix(lsp): handle mbc properly when formatting
  * fix(lsp): reduce deadlocks with in memory documents
  * fix(cli): IO resource types, fix concurrent read/write and graceful close
  * fix(cli): Move WorkerOptions::deno types to unstable
  * fix(cli): add lib dom.asynciterable
  * fix(cli): correctly determine emit state with redirects
  * fix(cli): early abort before type checking on missing modules
  * fix(cli): enable url wpt
  * fix(cli): fix panic in Deno.emit
  * fix(cli): fix panic in op_dns_resolve
  * fix(cli): fix recursive dispatches of unload event
  * fix(cli): fmt command help message
  * fix(cli): use DOMException in Performance#measure
  * fix(cli/flags): don't panic on invalid location scheme
  * fix(compile): fix panic when cross-compiling between windows and unix
  * fix(core): Handle prepareStackTrace() throws
  * fix(coverage): ignore comments
  * fix(coverage): use source maps when printing pretty reports
  * fix(op_crates/fetch): fix ReadableStream.pipeThrough()
  * fix(op_crates/web): Add gb18030 and GBK encodings
  * fix(op_crates/web): Improve customInspect for Location
  * chore: new typescript WPT runner

-------------------------------------------------------------------
Wed Jan 20 14:08:20 UTC 2021 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.7.0
  * upgrade: rusty_v8 0.16.0, v8 8.9.255.3
  * upgrade: tokio 1.0
  * upgrade: Rust 1.49.0
  * upgrade: deno_doc, deno_lint, dprint, swc_ecmascript, swc_bundler
  * upgrade: deno_lint to 0.2.16
  * upgrade: swc_bundler 0.19.2
  * BREAKING(std/wasi): hide implementation details
  * BREAKING(std/wasi): return exit code from start
  * BREAKING(unstable): Use hosts for net allowlists
  * BREAKING(unstable): remove CreateHttpClientOptions.caFile
  * feat(std/wasi): allow stdio resources to be specified
  * feat(unstable): add Deno.resolveDns API
  * feat(unstable): runtime compiler APIs consolidated to Deno.emit()
  * feat: Add WorkerOptions interface to type declarations
  * feat: Add configurable permissions for Workers
  * feat: Standalone lite binaries and cross compilation
  * feat: add --location= and globalThis.location
  * feat: add global tls session cache
  * feat: add markdown support to deno fmt
  * feat: add utf-16 and big5 to TextEncoder/TextDecoder
  * feat: denort binary
  * feat: stabilize Deno.shutdown() and Conn#closeWrite()
  * feat: support data urls
  * feat: support runtime flags for deno compile
  * feat: upload release zips to dl.deno.land
  * fix(cli): dispatch unload on exit
  * fix(cli): print a newline after help and version
  * fix(coverage): do not store source inline in raw reports
  * fix(coverage): merge duplicate reports
  * fix(coverage): report partial lines as uncovered
  * fix(inspector): kill child process after test
  * fix(install): fix cached-only flag
  * fix(lsp): Add textDocument/implementation
  * fix(lsp): Respect client capabilities for config and dynamic registration
  * fix(lsp): support specifying a tsconfig file
  * fix(op_crates/fetch): add back ReadableStream.getIterator and deprecate
  * fix(op_crates/fetch): align streams to spec
  * fix(op_crates/fetch): correct regexp for fetch header
  * fix(op_crates/fetch): req streaming + 0-copy resp streaming
  * fix(op_crates/web) let TextEncoder#encodeInto accept detached ArrayBuffers
  * fix(op_crates/web): Use WorkerLocation for location in workers
  * fix(op_crates/web): fix atob to throw spec aligned DOMException
  * fix(op_crates/websocket): respond to ping with pong
  * fix(std): Don't use JSDoc syntax for browser-compatibility headers
  * fix(std/http): Use ES private fields in server
  * fix(std/http): parsing of HTTP version header
  * fix(std/node): resolve files in symlinked directories
  * fix(watcher): keep working even when imported file has invalid syntax
  * fix: Use "none" instead of false to sandbox Workers
  * fix: Worker hangs when posting "undefined" as message
  * fix: align DOMException API to the spec and add web platform testing of it.
  * fix: don't error on version and help flag
  * fix: don't swallow customInspect exceptions
  * fix: enable WPT tests
  * fix: full commit hash in canary compile download
  * fix: ignore "use asm"
  * fix: implement DOMException#code
  * fix: incremental build for deno declaration files
  * fix: panic during deno compile with no args
  * fix: panic on invalid file:// module specifier
  * fix: race condition in file watcher
  * fix: redirect in --location relative fetch
  * fix: stronger input checking for setTimeout; add function overload
  * fix: use inline source maps when present in js
  * fix: use tokio for async fs ops
  * refactor(cli): remove 'js' module, simplify compiler snapshot
  * refactor(op_crates/crypto): Prefix ops with "op_crypto_"
  * refactor(op_crates/websocket): refactor event loop
  * refactor: Print cause chain when downcasting AnyError fails
  * refactor: make Process#kill() throw sensible errors on Windows
  * refactor: move WebSocket API to an op_crate
- pass -s to link flags to strip debug symbols from binary
- revendor: apply mktemp fix from Matthias Eliasson (re: boo#1180782)

-------------------------------------------------------------------
Thu Dec 31 20:57:31 UTC 2020 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.6.3
  * upgrade: rusty_v8 0.15.0, v8 8.8.294
  * upgrade: dprint, swc_bundler, swc_common, swc_ecmascript
  * feat(lsp): Add cache command
  * feat(lsp): Implement textDocument/rename
  * feat(std/node): adds fs.mkdtemp & fs.mkdtempSync
  * feat(unstable): collect coverage from the run command
  * fix(core): Fix incorrect index in Promise.all error reporting
  * fix(lsp): handle ts debug errors better
  * fix(lsp): provide diagnostics for unresolved modules
  * fix(std/http): Don't expose ServerRequest::done as Deferred
  * fix: fetch bad URL will not panic
  * fix: info does not panic on missing modules

-------------------------------------------------------------------
Mon Dec 28 05:46:18 UTC 2020 - Avindra Goolcharan <avindra@opensuse.org>

- Build from the 2 source repos (deno and rusty_v8)
  * No need to depend on published crate
- Add revendor_source.sh to carry the bucket for "cargo vendor"
- Remove ninja/gn env vars (fix upstreamed)
- Optimize exclusions (including removal of winapi binaries)

-------------------------------------------------------------------
Fri Dec 25 20:04:58 UTC 2020 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.6.2
  * upgrade TypeScript to 4.1.3
  * feat(lsp): support the unstable setting
  * feat(std/node): Added os.type
  * feat(unstable): record raw coverage into a directory
  * feat(unstable): support in memory certificate data for Deno.createHttpClient
  * fix: atomically write files to $DENO_DIR
  * fix: implement ReadableStream fetch body handling
  * fix: make DNS resolution async
  * fix: make dynamic import errors catchable
  * fix: respect enable flag for requests in lsp
  * refactor: optimise static assets in lsp
  * refactor: rename runtime/rt to runtime/js
  * refactor: rewrite lsp to be async
  * refactor: rewrite ops to use ResourceTable2

-------------------------------------------------------------------
Sun Dec 20 11:30:43 UTC 2020 - Avindra Goolcharan <avindra@opensuse.org>

- Build completely from source
- Dropped librusty_v8_release_x86_64-unknown-linux-gnu.a

-------------------------------------------------------------------
Sat Dec 19 08:57:04 UTC 2020 - Avindra Goolcharan <avindra@opensuse.org>

- update to v1.6.1
  * upgrade: swc_ecmascript to 0.15.0
  * feat(lsp): support import maps
  * fix(compile): error when the output path already exists
  * fix(lsp): only resolve sources with supported schemas
  * fix(op_crates/fetch): support non-ascii response headers value
  * fix(repl): recover from invalid input
  * fix: show canary string in long version
  * fix: zsh completions
  * refactor: deno_runtime crate
- includes v1.6.0
  * rusty_v8 updated to 0.14.0
  * break: std/bytes changes
  * break: isolatedModules non-configurable
- add _constraints to request memory for build
- cleanup description

-------------------------------------------------------------------
Fri Dec  4 02:20:19 UTC 2020 - Avindra Goolcharan <avindra@opensuse.org>

- init pkg at v1.5.4

