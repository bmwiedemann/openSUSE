<package name="dosemu" project="openSUSE:Factory">
  <title>The DOS Emulator</title>
  <description>This package allows MS-DOS programs to be run in Linux. A virtual
machine (the DOS box) provides the necessary BIOS functions and
emulates most of the chip devices (for example: timer, interrupt, and
keyboard controller).

Documentation can be found in /usr/share/doc/packages/dosemu, the man
page, and in the sources.

Starting with version 1.0.2, DOSEMU configuration files are no longer
in /etc but in the user's HOME directory in ~/dosemu. DOSEMU no longer
has the SUID bit set, so if you need access to hardware that requires
root privileges, you must run DOSEMU as root.

If you rely on the old configuration scheme, you can get it back by
using dosemu.bin instead of dosemu (dos and xdos have been renamed to
dosemu and xdosemu).

The parameter $_hogthreshold in ~/dosemu/conf/dosemu.conf defines how
often an idling DOSEMU should return the CPU to Linux and its default
value (1) means &quot;all power to Linux.&quot; The higher this value is, the
more CPU power is dedicated to DOSEMU. The value (0) disables this
feature completely, hence: &quot;all power to DOSEMU.&quot; If that is not fast
enough, you (running as UID root) can get maximum performance with

nice -19 dos -D-a 2&gt;/dev/null

Do not be surprised if other Linux processes then run very sluggishly.

On sensitive systems, you should never offer an suid-root DOSEMU as
world readable. Even if the '$_secure' option in dosemu.conf is set, it
is still possible that some DPMI clients (most likely Dos4gw based
ones) may succeed in accessing the whole user space (including DOSEMU
code) and thus gain root access. A comfortable solution is to have two
copies of the DOSEMU binary, a non-suid-root one for world access and a
suid-root one (protected by file permissions) only available to trusted
users.</description>
  <devel project="Emulators" package="dosemu"/>
</package>
