Oct 11, 2024. by heming.zhao@suse.com

This patch includes the following 4 changes for passing the build on v6.11.0.

-------------
for 'queue_flag_stable_writes__no_present', modifying
drbd-kernel-compat/cocci/queue_flag_stable_writes__no_present.cocci

upstream kernel:
commit 1a02f3a73f8c670eddeb44bf52a75ae7f67cfc11
Author: Christoph Hellwig <hch@lst.de>
Date:   Mon Jun 17 08:04:44 2024 +0200

    block: move the stable_writes flag to queue_limits

-------------
for 'disk_update_readahead__no_present', modifying
drbd-kernel-compat/cocci/disk_update_readahead__no_present.cocci

upstream kernel:
commit 73781b3b81e76583708a652c853d54d03dce031d
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Jun 26 16:26:27 2024 +0200

    block: remove disk_update_readahead

--------------
for 'blk_queue_update_readahead__no_present', modifying
'drbd-kernel-compat/gen_patch_names.c', which bypasses the
testing of COMPAT_HAVE_BLK_QUEUE_UPDATE_READAHEAD.

---------------
for 'blk_queue_write_cache__no_present__yes_flush', modifying 
drbd-kernel-compat/tests/have_blk_queue_write_cache.c

upstream kernel:
commit 62e35f942231e372f8e465d8484de66a60221226
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Jun 27 13:14:03 2024 +0200

    block: pass a gendisk to the queue_sysfs_entry methods

---------------

diff -Nupr a/drbd/drbd-kernel-compat/cocci/disk_update_readahead__no_present.cocci b/drbd/drbd-kernel-compat/cocci/disk_update_readahead__no_present.cocci
--- a/drbd/drbd-kernel-compat/cocci/disk_update_readahead__no_present.cocci	2024-10-11 09:23:43.340688884 +0800
+++ b/drbd/drbd-kernel-compat/cocci/disk_update_readahead__no_present.cocci	2024-10-11 09:27:53.755206413 +0800
@@ -6,5 +6,5 @@ type T;
 T q = dev->rq_queue;
 <...
 - disk_update_readahead(dev->vdisk);
-+ blk_queue_update_readahead(q);
++ blk_apply_bdi_limits(dev->vdisk->bdi, &dev->vdisk->queue->limits);
 ...>
diff -Nupr a/drbd/drbd-kernel-compat/cocci/queue_flag_stable_writes__no_present.cocci b/drbd/drbd-kernel-compat/cocci/queue_flag_stable_writes__no_present.cocci
--- a/drbd/drbd-kernel-compat/cocci/queue_flag_stable_writes__no_present.cocci	2024-10-11 09:23:25.420604140 +0800
+++ b/drbd/drbd-kernel-compat/cocci/queue_flag_stable_writes__no_present.cocci	2024-10-11 09:28:33.265393250 +0800
@@ -2,4 +2,4 @@
 expression q;
 @@
 - blk_queue_flag_set(QUEUE_FLAG_STABLE_WRITES, q);
-+ q->backing_dev_info->capabilities |= BDI_CAP_STABLE_WRITES;
++ q->limits.features |= BLK_FEAT_STABLE_WRITES;
diff -Nupr a/drbd/drbd-kernel-compat/gen_patch_names.c b/drbd/drbd-kernel-compat/gen_patch_names.c
--- a/drbd/drbd-kernel-compat/gen_patch_names.c	2024-10-11 09:24:54.021023132 +0800
+++ b/drbd/drbd-kernel-compat/gen_patch_names.c	2024-10-11 09:26:48.508231197 +0800
@@ -405,6 +405,7 @@ int main(int argc, char **argv)
 	patch(1, "disk_update_readahead", true, false,
 	      COMPAT_HAVE_DISK_UPDATE_READAHEAD, "present");
 
+#if 0
 #if !defined(COMPAT_HAVE_DISK_UPDATE_READAHEAD)
 	/* disk_update_readahead is the "new version" of
 	 * blk_queue_update_readahead. we only need to consider compat
@@ -412,6 +413,7 @@ int main(int argc, char **argv)
 	patch(1, "blk_queue_update_readahead", true, false,
 	      COMPAT_HAVE_BLK_QUEUE_UPDATE_READAHEAD, "present");
 #endif
+#endif
 
 	patch(1, "struct_gendisk", true, false,
 	      COMPAT_STRUCT_GENDISK_HAS_BACKING_DEV_INFO, "has_backing_dev_info");
diff -Nupr a/drbd/drbd-kernel-compat/tests/have_blk_queue_write_cache.c b/drbd/drbd-kernel-compat/tests/have_blk_queue_write_cache.c
--- a/drbd/drbd-kernel-compat/tests/have_blk_queue_write_cache.c	2024-10-11 09:25:57.557990258 +0800
+++ b/drbd/drbd-kernel-compat/tests/have_blk_queue_write_cache.c	2024-10-11 09:27:17.571701979 +0800
@@ -2,5 +2,5 @@
 
 void dummy(struct request_queue *q, bool enabled, bool fua)
 {
-	blk_queue_write_cache(q, enabled, fua);
+	blk_queue_write_cache(q);
 }
