-------------------------------------------------------------------
Sat Mar 18 09:47:39 UTC 2023 - Andrea Manzini <andrea.manzini@suse.com>

- Update to 2.4.11
  * fixed issue #755 - FAIL/FAIL_CHECK weren't properly reported with the junit reporter
  * fixed #751 which was caused by commit db758e0 when turning the values from an enum to an integer implicitly
  * removed the generated html docs 

- Update to 2.4.10
  * Add Intel Compiler support
  * Fix stringification of enums that overload operator<<
  * Suppress hash() clang integer sanitizer issues 
  * Fix compile errors when comparing pointers.
  * Use variables instead of hard-coded mpirun -np 
  * Fix typos and CMake example in docs


-------------------------------------------------------------------
Tue Nov  8 10:42:36 UTC 2022 - Matwey Kornilov <matwey.kornilov@gmail.com>

- Update to 2.4.9
  * Visual Studio's Test Explorer and Resharper C++'s Unit Test Explorer don't see Doctest's tests
  * How to get detailed information about testcases failing due to thrown exceptions?
  * Add clang-tidy integration and fix all warnings
  * Avoid static init problem in insufficient_procs() (MPI)
  * Use MPI_Isend in MpiConsoleReporter to avoid deadlock
  * Deadlock in MpiConsoleReporter when root rank fails assert
  * Cleanup of DOCTEST_DO_BINARY_EXPRESSION_COMPARISON. Fixes
  * Comparison with implicit cast from non-const value can't be decomposed
  * Local structured bindings cannot be used in CHECK macros (since 2.4.8)
  * Add tests for DOCTEST_CONFIG_USE_STD_HEADERS
  * Stringification amendments
  * Clean up defines a bit; Implement
  * New doctest version gives me an error: reference to local binding '...' declared in enclosing function 'DOCTEST_ANON_FUNC_16'
  * The tutorial example does not work (linker errors) with clang 10
  * Implementing `DOCTEST_ASSERT_IMPLEMENT_1` as lambda prevents testing structured bindings
  * re-re-remove overly restrictive minimum version of meson
  * Fix move-only types failing to decompose correctly
  * Weird compilation error when using CHECK_THROWS/CHECK_THROWS_AS on Visual Studio 2019 with no exceptions
  * Error triggered by comparing typeid with new doctest 2.4.8
  * Improve Mac PowerPC support
  * issue introduced in 2.4.7
  * Decompose expressions containing the spaceship operator
  * added nolint for cert-err58
  * Fix properties not being passed in doctest_discover_tests
  * Config no multithreading
  * wasm\*-support?
  * Fix MPI extension to work with no parallel tests
  * string comparison leads to gotting stuck
  * doctest_discover_tests no longer sets ENVIRONMENT variables for discovered tests.
  * Add contains option to checks.
  * Feature request: CHECK_THROWS_WITH with contains option
  * Add alias target for doctest_with_main
  * Allow escaping backslash with backslash in filters (
  * Fix operator<<
  * Correct minor typos
  * Fix MPI extension to work if launched without mpirun/mpiexec
  * Fix mpi subcase
  * compilation error with custom operator== defined in namespace
  * Regression: Clang-Tidy warnings in 2.4.8
  * Internal compiler error with GCC 7.5
  * tagging convension has changed?
  * Update Doctest in vcpkg to 2.4.8
  * Add IsNaN operator\!
  * Ignored generated files from CMake, OSX, Xcode, and VS
  * Move roadmap and wipe it clean
  * removes a duplicate word 'most' in configuration.md
  * Fix subcase reentry
  * Loop-generated `SUBCASE`s are not run
  * Void
  * Add flag that forces custom stringification methods to be provided
  * Fix coverage
  * TEST CODECOV PR BEHAVIOR
  * Ignore CMake and MacOS generated files
  * Feature request: option to disable fallback "\{?\}" stringifier
  * Add tests for default stringification result of doctest
  * Feature config ret vals
  * DOCTEST_CONFIG_ASSERT_RETURN_VALUES
  * Support pretty printing of container based on heuristics
  * Refactor stringification
  * Feature: Better NaN
  * Nan check
  * Update roadmap following maintainer change
  * Regression between 2.4.6 and 2.4.7
  * build failure with gcc-11.2 when using user declared operator<<(ostream, vector)
  * variable maximum is assigned 6206517616395625 instead of the actual return value which is 5.0
  * toString can call existing user-defined toString through ADL incorrectly
  * [Coverity] Concurrent data access violations (MISSING_LOCK) doctest.h: 5838 in doctest::<unnamed>::ConsoleReporter::test_case_start(const doctest::TestCaseData &)()
  * Provide an error message if REQUIRE (or other disabled assertion macros) are used when exceptions are disabled
  * Conflict with templated toString function
  * -tc does not work with comma in names
  * Compile error on MSVC2019 with any macro which involves stringification of std::string (asserts, INFO, etc.) when <ostream> isn't included
  * the dll example doesn't run correctly on Windows with MinGW
  * add basic conan recipe
  * CHECK_MESSAGE() should accept temporaries
  * stringify of cstring literals doesn't work out of the box with separate test_driver.cpp
  * warning : function declared 'noreturn' should not return [-Winvalid-noreturn]
  * Test cases containing a comma cannot be run individually
  * [bug] Can't compile the tests because of mutex, that is declared in the doctest
  * The `CHECK` macro conflicts with Boost.Beast (and surely others)
  * Feature request: check if a `float` or `double` is NaN
  * Add clang-tidy integration and fix all warnings
  * Avoid static init problem in insufficient_procs() (MPI)
  * Use MPI_Isend in MpiConsoleReporter to avoid deadlock
  * Cleanup of DOCTEST_DO_BINARY_EXPRESSION_COMPARISON. Fixes
  * Add tests for DOCTEST_CONFIG_USE_STD_HEADERS
  * Stringification amendments
  * Clean up defines a bit; Implement
  * re-re-remove overly restrictive minimum version of meson
  * Fix move-only types failing to decompose correctly
  * Improve Mac PowerPC support
  * added nolint for cert-err58
  * Fix properties not being passed in doctest_discover_tests
  * Config no multithreading
  * Fix MPI extension to work with no parallel tests
  * Add contains option to checks.
  * Add alias target for doctest_with_main
  * Allow escaping backslash with backslash in filters
  * Fix operator<<
  * Fix MPI extension to work if launched without mpirun/mpiexec
  * Fix mpi subcase
  * Add IsNaN operator!
  * Move roadmap and wipe it clean
  * removes a duplicate word 'most' in configuration.md
  * Fix subcase reentry
  * Add flag that forces custom stringification methods to be provided
  * Fix coverage
  * Ignore CMake and MacOS generated files
  * Feature config ret vals
  * Refactor stringification
  * Feature: Better NaN
  * Nan check

-------------------------------------------------------------------
Wed May 11 10:59:23 UTC 2022 - Ferdinand Thiessen <rpm@fthiessen.de>

- Update to 2.4.8
  * Fixed g_oss is causing incorrect stringification results
  * Feature: Assertions returning booleans
  * Non visible build related changes

-------------------------------------------------------------------
Tue Jan  4 22:25:32 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 2.4.7:
  * Fix Stack-buffer-overflow probably because char array is viewed as NULL
    terminated string 
  * "C4834: discarding return value" with REQUIRE_THROWS
  * Xcode 11.3 is gone from macOS-latest (=macOS-11)
  * is it possible to define dependency for CHECKs
  * Output summary explanation
  * compiler errors in doctest.h using cmake in CLion
  * Fails to build in VS2013 because of constexpr
  * -Wreserved-identifier warnings with Clang 13.0.0
  * Build fails with latest MSVC 2019 (v16.11) due to /WX
  * VS 16.11 warning about unreferenced function with internal linkage
  * Faq googletest mocking dead link
  * FR: Documentation: FAQ: Add sectoin 'multiple files'
  * CMAKE: doctest_discover_tests() error when ADD_LABELS is not specified
  * Register tests based on test data available
  * naming override in different testcase files
  * Segmentation fault during the compilation without the copy elision optimization
  * Compiler warnings on Xcode 12.5
  * Using filter -sc does not work properly?
  * [question] Example of tests in production code & DLLs & shared libraries?
  * Dumping fixture state to disk on error
  * Macros construct reserved identifiers
  * Running doctest on embedded ARM Cortex µCs
  * Asserts Outside of Tests Example Does Not Link
  * [FEATURE REQUEST] Quiet flag
  * Compile error on Intel C++ Classic Compilers
  * compiling doctest in 32-bit with __stdcall calling convention fails
  * Duplicate 'const' compilation error from TEST_CASE_CLASS macro
  * Packed fields can't be accessed in 2.4.6
  * Dangling pointers with .str().c_str()
  * Automatic adding of TEST_SUITE labels to discovered tests fails if
    ADD_LABELS not set
  * Adding a bunch of REQUIRE/CHECK utilities
  * Warning C4114 in MSVC
  * Own repository
  * Linking problem with Clang 10 on Windows
  * Add option not to print the intro text
  * [Feature] Better integration with tools (VS Code Test Adapter Extension)
  * vscode test explorer
  * Want an option not to print any intro
  * Add way to disable printing of intro
- Drop 0001-Fix-build-with-GCC-11.patch

-------------------------------------------------------------------
Tue Jun  1 09:19:24 UTC 2021 - Christophe Giboudeaux <christophe@krop.fr>

- Add GCC 11 compatibility fix:
  * 0001-Fix-build-with-GCC-11.patch

-------------------------------------------------------------------
Mon Mar 22 15:28:53 UTC 2021 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.4.6
  Fixed bugs:
  * REQUIRE does not compile when operator== in different
    namespace #443
  * Using templated operator== inside TEST_CASE changes deduced
    types of forwarding references #399
  Closed issues:
  * CMake doesn't link package #483
  * Get list of registered test-case names #479
  * Can't compile with glibc master (future 2.34): SIGSTKSZ is
    no longer a constant #473
  * INFO does not compile when used like a function call #469

-------------------------------------------------------------------
Sun Feb 28 18:42:28 UTC 2021 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.4.5
  Closed issues:
  * Use of std::atomic can slow down multithreaded tests #452
  * Stack buffer overflow in String constructor #460
  Merged pull requests:
  * Fix compilation on case-sensitive filesystems #463
  * Use function-like macros for prefixless macro names #462
  * Implement a multi lane atomic for assertion counts
- Update to version 2.4.4
  * combine the same tests for different build configurations from
    multiple shared objects without having symbol clashes #436

-------------------------------------------------------------------
Tue Dec 15 19:25:49 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.4.2
  Closed issues:
  * DOCTEST_CHECK_THROWS_WITH_AS fails to work with dependant
    exception type #447
  * log contexts for failures in JUnit reporter #441
  * Test runner thread initialization #435
  * CHECK_EQ with enum values #276
  Merged pull requests:
  * Add MAIN_PROJECT check for test option #445
  * log contexts for failures in JUnit reporter #442

-------------------------------------------------------------------
Wed Nov  4 18:51:51 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 2.4.1
  * Support for unit tests with Open MPI as a new extension header.
  * Added default printers for enums.

-------------------------------------------------------------------
Thu Sep 24 15:00:37 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Enable arm builds. The package builds fine on aarch64 systems.

-------------------------------------------------------------------
Mon Aug 31 13:21:30 UTC 2020 - Luigi Baldoni <aloisio@gmx.com>

- Initial package (v2.4.0)
