diff -Pdpru dosbox-staging-0.78.1.orig/src/dosbox.cpp dosbox-staging-0.78.1/src/dosbox.cpp
--- dosbox-staging-0.78.1.orig/src/dosbox.cpp	2022-01-07 18:37:04.000000000 +0300
+++ dosbox-staging-0.78.1/src/dosbox.cpp	2022-05-21 13:45:17.898607106 +0300
@@ -549,7 +549,7 @@ void DOSBOX_Init() {
 	pstring->Set_values(mono_pal);
 
 	pmulti = secprop->Add_multi("scaler", always, " ");
-	pmulti->SetValue("none");
+	pmulti->SetValue("hq3x");
 	pmulti->Set_help("Scaler used to enlarge/enhance low resolution modes.\n"
 	                 "If 'forced' is appended, then the scaler will be used even if\n"
 	                 "the result might not be desired.\n"
@@ -626,12 +626,12 @@ void DOSBOX_Init() {
 
 	Pmulti_remain->GetSection()->Add_string("parameters", always, "");
 
-	Pint = secprop->Add_int("cycleup", always, 10);
+	Pint = secprop->Add_int("cycleup", always, 500);
 	Pint->SetMinMax(1,1000000);
 	Pint->Set_help("Number of cycles added or subtracted with speed control hotkeys.\n"
 	               "Run INTRO and see Special Keys for list of hotkeys.");
 
-	Pint = secprop->Add_int("cycledown", always, 20);
+	Pint = secprop->Add_int("cycledown", always, 500);
 	Pint->SetMinMax(1,1000000);
 	Pint->Set_help("Setting it lower than 100 will be a percentage.");
 
@@ -715,7 +715,7 @@ void DOSBOX_Init() {
 	        "'auto', to use the first working external MIDI player. This\n"
 	        "       might be a software synthesizer or physical device.");
 
-	pstring = secprop->Add_string("midiconfig", when_idle, "");
+	pstring = secprop->Add_string("midiconfig", when_idle, "128:0");
 	pstring->Set_help(
 	        "Configuration options for the selected MIDI interface.\n"
 	        "This is usually the id or name of the MIDI synthesizer you want\n"
@@ -829,7 +829,7 @@ void DOSBOX_Init() {
 	// have worked with when tuning their game audio, we therefore use this
 	// same value given it's the most likely to produce audio as intended by
 	// the authors.
-	pint = secprop->Add_int("pcrate", when_idle, 18939);
+	pint = secprop->Add_int("pcrate", when_idle, 48000);
 	pint->SetMinMax(8000, 48000);
 	pint->Set_help("Sample rate of the PC-Speaker sound generation.");
 
diff -Pdpru dosbox-staging-0.78.1.orig/src/gui/sdlmain.cpp dosbox-staging-0.78.1/src/gui/sdlmain.cpp
--- dosbox-staging-0.78.1.orig/src/gui/sdlmain.cpp	2022-01-07 18:37:04.000000000 +0300
+++ dosbox-staging-0.78.1/src/gui/sdlmain.cpp	2022-05-21 13:56:03.471057645 +0300
@@ -3432,7 +3432,7 @@ void Config_Add_SDL() {
 	// constexpr auto deprecated = Property::Changeable::Deprecated;
 	constexpr auto on_start = Property::Changeable::OnlyAtStart;
 
-	Pbool = sdl_sec->Add_bool("fullscreen", always, false);
+	Pbool = sdl_sec->Add_bool("fullscreen", always, true);
 	Pbool->Set_help("Start directly in fullscreen.\n"
 	                "Run INTRO and see Special Keys for window control hotkeys.");
 
@@ -3444,7 +3444,7 @@ void Config_Add_SDL() {
 	Pstring->Set_help("What resolution to use for fullscreen: 'original', 'desktop'\n"
 	                  "or a fixed size (e.g. 1024x768).");
 
-	pstring = sdl_sec->Add_string("windowresolution", on_start, "default");
+	pstring = sdl_sec->Add_string("windowresolution", on_start, "original");
 	pstring->Set_help(
 	        "Set window size when running in windowed mode:\n"
 	        "  default:   Select the best option based on your\n"
@@ -3554,7 +3554,7 @@ void Config_Add_SDL() {
 	Pint = Pmulti->GetSection()->Add_int("ysens", always,100);
 	Pint->SetMinMax(-1000,1000);
 
-	pbool = sdl_sec->Add_bool("raw_mouse_input", on_start, false);
+	pbool = sdl_sec->Add_bool("raw_mouse_input", on_start, true);
 	pbool->Set_help(
 	        "Enable this setting to bypass your operating system's mouse\n"
 	        "acceleration and sensitivity settings. This works in\n"
diff -Pdpru dosbox-staging-0.78.1.orig/src/midi/midi_fluidsynth.cpp dosbox-staging-0.78.1/src/midi/midi_fluidsynth.cpp
--- dosbox-staging-0.78.1.orig/src/midi/midi_fluidsynth.cpp	2022-01-07 18:37:04.000000000 +0300
+++ dosbox-staging-0.78.1/src/midi/midi_fluidsynth.cpp	2022-05-21 13:58:10.276717530 +0300
@@ -50,7 +50,7 @@ static void init_fluid_dosbox_settings(S
 
 	// Name 'default.sf2' picks the default soundfont if it's installed
 	// in the OS. Usually it's Fluid_R3.
-	auto *str_prop = secprop.Add_string("soundfont", when_idle, "default.sf2");
+	auto *str_prop = secprop.Add_string("soundfont", when_idle, "FluidR3_GM.sf2 25");
 	str_prop->Set_help(
 	        "Path to a SoundFont file in .sf2 format. You can use an\n"
 	        "absolute or relative path, or the name of an .sf2 inside\n"
