diff -Pdpru dosbox-staging-0.77.1.orig/src/dosbox.cpp dosbox-staging-0.77.1/src/dosbox.cpp
--- dosbox-staging-0.77.1.orig/src/dosbox.cpp	2021-08-28 21:35:58.000000000 +0300
+++ dosbox-staging-0.77.1/src/dosbox.cpp	2021-08-29 04:59:31.522271121 +0300
@@ -465,7 +465,7 @@ void DOSBOX_Init(void) {
 	                                   "low",   "splash_only",
 	                                   "quiet", "auto",
 	                                   0};
-	Pstring = secprop->Add_string("startup_verbosity", only_at_start, "high");
+	Pstring = secprop->Add_string("startup_verbosity", only_at_start, "medium");
 	Pstring->Set_values(verbosity_choices);
 	Pstring->Set_help(
 	        "Controls verbosity prior to displaying the program:\n"
@@ -498,7 +498,7 @@ void DOSBOX_Init(void) {
 	pstring->Set_values(mono_pal);
 
 	pmulti = secprop->Add_multi("scaler", always, " ");
-	pmulti->SetValue("none");
+	pmulti->SetValue("hq3x");
 	pmulti->Set_help("Scaler used to enlarge/enhance low resolution modes.\n"
 	                 "If 'forced' is appended, then the scaler will be used even if\n"
 	                 "the result might not be desired.\n"
@@ -571,12 +571,12 @@ void DOSBOX_Init(void) {
 
 	Pstring = Pmulti_remain->GetSection()->Add_string("parameters",Property::Changeable::Always,"");
 
-	Pint = secprop->Add_int("cycleup",Property::Changeable::Always,10);
+	Pint = secprop->Add_int("cycleup",Property::Changeable::Always,500);
 	Pint->SetMinMax(1,1000000);
 	Pint->Set_help("Number of cycles added or subtracted with speed control hotkeys.\n"
 	               "Run INTRO and see Special Keys for list of hotkeys.");
 
-	Pint = secprop->Add_int("cycledown",Property::Changeable::Always,20);
+	Pint = secprop->Add_int("cycledown",Property::Changeable::Always,500);
 	Pint->SetMinMax(1,1000000);
 	Pint->Set_help("Setting it lower than 100 will be a percentage.");
 
@@ -597,7 +597,7 @@ void DOSBOX_Init(void) {
 	Pbool = secprop->Add_bool("nosound",Property::Changeable::OnlyAtStart,false);
 	Pbool->Set_help("Enable silent mode, sound is still emulated though.");
 
-	Pint = secprop->Add_int("rate",Property::Changeable::OnlyAtStart,44100);
+	Pint = secprop->Add_int("rate",Property::Changeable::OnlyAtStart,48000);
 	Pint->Set_values(rates);
 	Pint->Set_help("Mixer sample rate, setting any device's rate higher than this will probably lower their sound quality.");
 
@@ -656,7 +656,7 @@ void DOSBOX_Init(void) {
 	        "'auto', to use the first working external MIDI player. This\n"
 	        "       might be a software synthesizer or physical device.");
 
-	pstring = secprop->Add_string("midiconfig", when_idle, "");
+	pstring = secprop->Add_string("midiconfig", when_idle, "128:0");
 	pstring->Set_help(
 	        "Configuration options for the selected MIDI interface.\n"
 	        "This is usually the id or name of the MIDI synthesizer you want\n"
@@ -763,7 +763,7 @@ void DOSBOX_Init(void) {
 	// have worked with when tuning their game audio, we therefore use this
 	// same value given it's the most likely to produce audio as intended by
 	// the authors.
-	pint = secprop->Add_int("pcrate", when_idle, 18939);
+	pint = secprop->Add_int("pcrate", when_idle, 48000);
 	pint->SetMinMax(8000, 48000);
 	pint->Set_help("Sample rate of the PC-Speaker sound generation.");
 
@@ -959,6 +959,8 @@ void DOSBOX_Init(void) {
 	MSG_Add("AUTOEXEC_CONFIGFILE_HELP",
 		"Lines in this section will be run at startup.\n"
 		"You can put your MOUNT lines here.\n"
+		"mount C .\n"
+		"C:\n"
 	);
 	MSG_Add("CONFIGFILE_INTRO",
 	        "# This is the configuration file for dosbox-staging (%s).\n"
diff -Pdpru dosbox-staging-0.77.1.orig/src/gui/sdlmain.cpp dosbox-staging-0.77.1/src/gui/sdlmain.cpp
--- dosbox-staging-0.77.1.orig/src/gui/sdlmain.cpp	2021-08-28 21:35:58.000000000 +0300
+++ dosbox-staging-0.77.1/src/gui/sdlmain.cpp	2021-08-29 04:48:19.341560070 +0300
@@ -3012,7 +3012,7 @@ void Config_Add_SDL() {
 	constexpr auto deprecated = Property::Changeable::Deprecated;
 	constexpr auto on_start = Property::Changeable::OnlyAtStart;
 
-	Pbool = sdl_sec->Add_bool("fullscreen", always, false);
+	Pbool = sdl_sec->Add_bool("fullscreen", always, true);
 	Pbool->Set_help("Start directly in fullscreen.\n"
 	                "Run INTRO and see Special Keys for window control hotkeys.");
 
@@ -3027,7 +3027,7 @@ void Config_Add_SDL() {
 	Pstring->Set_help("What resolution to use for fullscreen: 'original', 'desktop'\n"
 	                  "or a fixed size (e.g. 1024x768).");
 
-	pstring = sdl_sec->Add_string("windowresolution", on_start, "default");
+	pstring = sdl_sec->Add_string("windowresolution", on_start, "original");
 	pstring->Set_help(
 	        "Set window size when running in windowed mode:\n"
 	        "  default:   Select the best option based on your\n"
@@ -3111,7 +3111,7 @@ void Config_Add_SDL() {
 	Pint = Pmulti->GetSection()->Add_int("ysens",Property::Changeable::Always,100);
 	Pint->SetMinMax(-1000,1000);
 
-	pbool = sdl_sec->Add_bool("raw_mouse_input", on_start, false);
+	pbool = sdl_sec->Add_bool("raw_mouse_input", on_start, true);
 	pbool->Set_help(
 	        "Enable this setting to bypass your operating system's mouse\n"
 	        "acceleration and sensitivity settings. This works in\n"
diff -Pdpru dosbox-staging-0.77.1.orig/src/midi/midi_fluidsynth.cpp dosbox-staging-0.77.1/src/midi/midi_fluidsynth.cpp
--- dosbox-staging-0.77.1.orig/src/midi/midi_fluidsynth.cpp	2021-08-28 21:35:58.000000000 +0300
+++ dosbox-staging-0.77.1/src/midi/midi_fluidsynth.cpp	2021-08-29 05:48:55.768978755 +0300
@@ -46,9 +46,9 @@ static void init_fluid_dosbox_settings(S
 {
 	constexpr auto when_idle = Property::Changeable::WhenIdle;
 
-	// Name 'default.sf2' picks the default soundfont if it's installed
-	// in the OS. Usually it's Fluid_R3.
-	auto *str_prop = secprop.Add_string("soundfont", when_idle, "default.sf2");
+	// Name 'FluidR3_GM.sf2 25' picks the default soundfont if it's installed
+	// in the OS. In openSUSE it's FluidR3_GM.sf2 25.
+	auto *str_prop = secprop.Add_string("soundfont", when_idle, "FluidR3_GM.sf2 25");
 	str_prop->Set_help(
 	        "Path to a SoundFont file in .sf2 format. You can use an\n"
 	        "absolute or relative path, or the name of an .sf2 inside\n"
