<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>f3956ca18614f6e4856ee67f50bc28ba</srcmd5>
    <version>0.11.3</version>
    <time>1744040173</time>
    <user>anag_factory</user>
    <comment>FUSE file system; typically better performance and compression ratio than e.g. SquashFS</comment>
    <requestid>1267050</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>52cea858dfa598f23a569e2347930665</srcmd5>
    <version>0.12.1</version>
    <time>1744628336</time>
    <user>anag_factory</user>
    <comment>- Update to version 0.12.1: 
Features
  * Added --memory-limit=auto to mkdwarfs to use a more reasonable
    (hopefully) default for the block queue. The old default of
    1 GiB was quite arbitrary and definitely not suitable for
    low-end systems. The new auto default will determine the limit
    based on the number of workers (which in turn is based on the
    number of CPUs), the block size, and the amount of physical
    memory of the system.
  * Replaced vector_byte_buffer with malloc_byte_buffer, which is
    internally based around a simple buffer that doesn't incur the
    cost of initializing each element like std::vector. Especially
    for large blocks which are known to be overwritten immediately,
    this can save a few CPU cycles.
- Changes in version 0.12.0:
  * New Licensing Conditions: Instead of being all GPL-3.0 like all
    the previous releases, this release changes the license of a
    large fraction of the DwarFS code to MIT. All tools and
    libraries that only read DwarFS images are now MIT-licensed.
    Everything else (e.g. mkdwarfs) is still GPL-3.0 for the time
    being.
Bugfixes
  * Changes for compatibility with Boost.Process v2.
Features
  * Re-licensed all libraries required for reading DwarFS images
    under the MIT license. The source of all tools that just read
    DwarFS images (i.e. everything except for mkdwarfs) are also
    under the MIT license now. Everything else is still GPL-3.0.
    gh#mhx/dwarfs#255
  * New hotness categorizer in mkdwarfs that allows a list of &quot;hot&quot;</comment>
    <requestid>1269054</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>39fed70a427610c4e7eaad6e8e8a52e7</srcmd5>
    <version>0.12.3</version>
    <time>1745335687</time>
    <user>anag_factory</user>
    <comment>- Update to version 0.12.3:
Bugfixes
  * Automatic image offset detection (for images using a custom
    header) did not work correctly if the header contained a
    string that would be identified as the start of a v1 section
    header (these were only used before dwarfs-0.3.0).
    If there was either &quot;DWARFS\x02\x00&quot; or &quot;DWARFS\x02\x01&quot; in
    the header, offset detection would fail. The check has been
    modified to peek further into the data and ensure this really
    is a v1 section header, and also checking if the next section
    header position can be derived from the length field.
    It is still possible to construct a file system image where
    offset detection will ultimately fail, but it is much less
    likely with the change.
- Changes in version 0.12.2:
Bugfixes
  *The dwarfs-0.12.0 release introduced a performance regression
   where FLAC compression took more than twice as long as in the
   previous releases. This has been fixed. FLAC decompression was
   unaffected.</comment>
    <requestid>1271206</requestid>
  </revision>
</revisionlist>
