From a816edb64d6bf4049ae8833592f4fadb827927f1 Mon Sep 17 00:00:00 2001
From: justforlxz <justforlxz@gmail.com>
Date: Mon, 29 Mar 2021 11:40:46 +0800
Subject: [PATCH] =?UTF-8?q?fix:=20doesn't=20compile=20with=20Kwin=205.21?=
 =?UTF-8?q?=20=E2=80=A6?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

KWayandServer::Display::BlurManager need KWaylandServer::BlurManagerInterface

Issue: Closes #136
Issue: Closes #47
Log:
---
 plugins/kwineffects/blur/blur.cpp                 | 10 +++++-----
 plugins/kwineffects/blur/blur.h                   |  7 ++++---
 plugins/kwineffects/multitasking/CMakeLists.txt   |  2 ++
 plugins/kwineffects/multitasking/multitasking.cpp |  4 ++--
 plugins/kwineffects/multitasking/multitasking.h   | 12 ++++++------
 plugins/platforms/lib/kwinutils.h                 |  6 ++++++
 6 files changed, 25 insertions(+), 16 deletions(-)

diff --git a/plugins/kwineffects/blur/blur.cpp b/plugins/kwineffects/blur/blur.cpp
index 6054ef91a..486746e94 100644
--- a/plugins/kwineffects/blur/blur.cpp
+++ b/plugins/kwineffects/blur/blur.cpp
@@ -21,7 +21,6 @@
 
 #include "blur.h"
 #include "blurshader.h"
-#include "kwinutils.h"
 
 #include <QGuiApplication>
 #include <QMatrix4x4>
@@ -59,9 +58,11 @@ BlurEffect::BlurEffect(QObject *, const QVariantList &)
         net_wm_blur_region = effects->announceSupportProperty(s_blurAtomName, this);
         KWaylandServer::Display *display = effects->waylandDisplay();
         if (display) {
-            m_blurManager = display->createBlurManager(this);
 #if defined(KWIN_VERSION) && KWIN_VERSION <= KWIN_VERSION_CHECK(5, 18, 90, 0)
+            m_blurManager = display->createBlurManager(this);
             m_blurManager->create();
+#else
+            m_blurManager = new KWaylandServer::BlurManagerInterface(display, this);
 #endif
         }
     } else {
@@ -509,7 +510,7 @@ void BlurEffect::uploadGeometry(GLVertexBuffer *vbo, const QRegion &blurRegion,
     vbo->setAttribLayout(layout, 2, sizeof(QVector2D));
 }
 
-void BlurEffect::prePaintScreen(ScreenPrePaintData &data, int time)
+void BlurEffect::prePaintScreen(ScreenPrePaintData &data, TimeArgType time)
 {
     m_damagedArea = QRegion();
     m_paintedArea = QRegion();
@@ -518,7 +519,7 @@ void BlurEffect::prePaintScreen(ScreenPrePaintData &data, int time)
     effects->prePaintScreen(data, time);
 }
 
-void BlurEffect::prePaintWindow(EffectWindow* w, WindowPrePaintData& data, int time)
+void BlurEffect::prePaintWindow(EffectWindow* w, WindowPrePaintData& data, TimeArgType time)
 {
     // this effect relies on prePaintWindow being called in the bottom to top order
 
@@ -899,4 +900,3 @@ void BlurEffect::copyScreenSampleTexture(GLVertexBuffer *vbo, int blurRectCount,
 
     m_shader->unbind();
 }
-
diff --git a/plugins/kwineffects/blur/blur.h b/plugins/kwineffects/blur/blur.h
index 1be767d10..db0253d94 100644
--- a/plugins/kwineffects/blur/blur.h
+++ b/plugins/kwineffects/blur/blur.h
@@ -21,6 +21,8 @@
 #ifndef BLUR_H
 #define BLUR_H
 
+#include "kwinutils.h"
+
 #include <kwineffects.h>
 #include <kwinglplatform.h>
 #include <kwinglutils.h>
@@ -63,8 +65,8 @@ class Q_DECL_HIDDEN BlurEffect : public KWin::Effect
     static bool enabledByDefault();
 
     void reconfigure(ReconfigureFlags flags) override;
-    void prePaintScreen(ScreenPrePaintData &data, int time) override;
-    void prePaintWindow(EffectWindow* w, WindowPrePaintData& data, int time) override;
+    void prePaintScreen(ScreenPrePaintData &data, TimeArgType time) override;
+    void prePaintWindow(EffectWindow* w, WindowPrePaintData& data, TimeArgType time) override;
     void paintWindow(EffectWindow *w, int mask, QRegion region, WindowPaintData &data) override;
 #if KWIN_VERSION_MIN > 17 || (KWIN_VERSION_MIN == 17 && KWIN_VERSION_PAT > 5)
     void paintEffectFrame(EffectFrame *frame, const QRegion &region, double opacity, double frameOpacity) override;
@@ -156,4 +158,3 @@ bool BlurEffect::provides(Effect::Feature feature)
 }
 
 #endif
-
diff --git a/plugins/kwineffects/multitasking/CMakeLists.txt b/plugins/kwineffects/multitasking/CMakeLists.txt
index b05eca07a..f1af54b29 100644
--- a/plugins/kwineffects/multitasking/CMakeLists.txt
+++ b/plugins/kwineffects/multitasking/CMakeLists.txt
@@ -94,6 +94,8 @@ add_library(
     data.qrc
 )
 
+include_directories(../../platforms/lib)
+
 target_link_libraries(
     ${PLUGIN_NAME}
     PUBLIC
diff --git a/plugins/kwineffects/multitasking/multitasking.cpp b/plugins/kwineffects/multitasking/multitasking.cpp
index e69ac906e..f05b4c2e1 100644
--- a/plugins/kwineffects/multitasking/multitasking.cpp
+++ b/plugins/kwineffects/multitasking/multitasking.cpp
@@ -561,7 +561,7 @@ void MultitaskingEffect::reconfigure(ReconfigureFlags)
 }
 
 // Screen painting
-void MultitaskingEffect::prePaintScreen(ScreenPrePaintData &data, int time)
+void MultitaskingEffect::prePaintScreen(ScreenPrePaintData &data, TimeArgType time)
 {
     //EffectWindow of m_multitaskingView changes every time when
     //multitaskingView show, we need to set EffectWindow before paintwindow
@@ -595,7 +595,7 @@ void MultitaskingEffect::postPaintScreen()
 
 
 // Window painting
-void MultitaskingEffect::prePaintWindow(EffectWindow *w, WindowPrePaintData &data, int time)
+void MultitaskingEffect::prePaintWindow(EffectWindow *w, WindowPrePaintData &data, TimeArgType time)
 {
     if (m_multitaskingView && multitaskingViewEffectWindow() 
         && w == multitaskingViewEffectWindow()) {
diff --git a/plugins/kwineffects/multitasking/multitasking.h b/plugins/kwineffects/multitasking/multitasking.h
index 35051ac80..293e4f778 100644
--- a/plugins/kwineffects/multitasking/multitasking.h
+++ b/plugins/kwineffects/multitasking/multitasking.h
@@ -35,6 +35,7 @@
 #include <kwineffects.h>
 #include <KF5/KWindowSystem/KWindowSystem>
 
+#include "kwinutils.h"
 #include "background.h"
 #include "constants.h"
 
@@ -255,7 +256,7 @@ class MultitaskingEffect : public Effect
     virtual void reconfigure(ReconfigureFlags) override;
 
     // Screen painting
-    virtual void prePaintScreen(ScreenPrePaintData &data, int time) override;
+    virtual void prePaintScreen(ScreenPrePaintData &data, TimeArgType time) override;
 #if KWIN_VERSION_MIN > 17 || (KWIN_VERSION_MIN == 17 && KWIN_VERSION_PAT > 5)
     virtual void paintScreen(int mask, const QRegion &region, ScreenPaintData &data) override;
 #else
@@ -264,7 +265,7 @@ class MultitaskingEffect : public Effect
     virtual void postPaintScreen() override;
 
     // Window painting
-    virtual void prePaintWindow(EffectWindow *w, WindowPrePaintData &data, int time) override;
+    virtual void prePaintWindow(EffectWindow *w, WindowPrePaintData &data, TimeArgType time) override;
     virtual void paintWindow(EffectWindow *w, int mask, QRegion region, WindowPaintData &data) override;
 
     // User interaction
@@ -325,7 +326,7 @@ public Q_SLOTS:
     void updateDesktopWindows();
     void updateDesktopWindows(int desktop);
 
-    // added when refactor 
+    // added when refactor
     void refreshWindows();
 
 private slots:
@@ -340,9 +341,9 @@ private slots:
     void remanageAll();
 
     void desktopRemoved(int d);
-    //zhd add start 
+    //zhd add start
     void OnWindowLocateChanged(int screen, int desktop, int winId);
-    //zhd add end 
+    //zhd add end
 
     void windowSelectSlot( QVariant winid );
     void removeEffectWindow(int screen, int desktop, QVariant winid);
@@ -468,4 +469,3 @@ private slots:
 
 
 #endif /* ifndef _DEEPIN_MULTITASKING_H */
-
diff --git a/plugins/platforms/lib/kwinutils.h b/plugins/platforms/lib/kwinutils.h
index 2c758752c..efa608f0d 100644
--- a/plugins/platforms/lib/kwinutils.h
+++ b/plugins/platforms/lib/kwinutils.h
@@ -29,6 +29,12 @@
 #define KWIN_VERSION KWIN_VERSION_CHECK(KWIN_VERSION_MAJ, KWIN_VERSION_MIN, KWIN_VERSION_PAT, KWIN_VERSION_BUI)
 #endif
 
+#if defined(KWIN_VERSION) && KWIN_VERSION < KWIN_VERSION_CHECK(5, 21, 3, 0)
+typedef int TimeArgType;
+#else
+typedef std::chrono::milliseconds TimeArgType;
+#endif
+
 class KWinUtilsPrivate;
 class Q_DECL_EXPORT KWinUtils : public QObject
 {

