Index: dmd-2.094.2/src/bootstrap.sh
===================================================================
--- dmd-2.094.2.orig/src/bootstrap.sh
+++ dmd-2.094.2/src/bootstrap.sh
@@ -57,7 +57,7 @@ if [ ! -e "${HOST_RDMD}" ] ; then
     # prefer xz if available
     if command -v xz &> /dev/null ; then
         echo "[boostrap] Downloading compiler ${HOST_DMD_URL}.tar.xz"
-        curl "${CURL_FLAGS[@]}" "${HOST_DMD_URL}.tar.xz" | tar -C "${HOST_DMD_ROOT}" -Jxf - || rm -rf "${HOST_DMD_ROOT}"
+        tar -C "${HOST_DMD_ROOT}" -Jxf  ~/rpmbuild/SOURCES/dmd.2.078.0.linux.tar.xz || rm -rf "${HOST_DMD_ROOT}"
     else
         echo "[bootstrap] Downloading compiler ${HOST_DMD_URL}.zip"
         TMPFILE="$(mktemp deleteme.XXXXXXXX.zip)"
Index: dmd-2.094.2/src/build.d
===================================================================
--- dmd-2.094.2.orig/src/build.d
+++ dmd-2.094.2/src/build.d
@@ -1029,9 +1029,8 @@ void parseEnvironment()
         if (!env["HOST_DMD"].exists)
         {
             writefln("Downloading DMD %s", hostDMDVer);
-            auto curlFlags = "-fsSL --retry 5 --retry-max-time 120 --connect-timeout 5 --speed-time 30 --speed-limit 1024";
             hostDMDRoot.mkdirRecurse;
-            ("curl " ~ curlFlags ~ " " ~ hostDMDURL~".tar.xz | tar -C "~hostDMDRoot~" -Jxf - || rm -rf "~hostDMDRoot).spawnShell.wait;
+            ("tar -C " ~ hostDMDRoot ~ " -Jxf ~/rpmbuild/SOURCES/dmd." ~ hostDMDBase ~ ".tar.xz || rm -rf "~hostDMDRoot).spawnShell.wait;
         }
     }
     else
