-------------------------------------------------------------------
Mon Feb 24 11:20:37 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1582525609.25d5f0d9ef:
  * InputCommon: Constify Device::Input::IsDetectable function.
  * Translation resources sync with Transifex
  * Qt/TAS: Improve TAS windows
  * InputCommon: Remove Wii Remote real-time calibration of M+ in favor of functionality provided by ControllerEmu.
  * InputCommon: Add real Wii Remote support to ControllerInterface. Add option to connect additional Wii Remotes.
  * InputCommon/ControllerInterface: Make devices mutex recursive so RemoveDevice can be used within UpdateInput.
  * Core/WiimoteEmu: Add functions to Nunchuk, Classic Controller, and MotionPlus extensions to get/set data without duplicate bithacks everywhere.
  * InputCommon: Add types to ControllerEmu that represent raw controller inputs and calibration data to calculate normalized input values.
  * Common: Add additional Vector operations.
  * InputCommon: Add calibration functionality to IMUGyroscope.
  * MathUtil: Add RunningMean/RunningVariance classes.
  * InputCommon: Add "Dead Zone" setting to raw gyro inputs.
  * Windows GUI: Use QMenu font (Segoe UI) for entire application
  * Common: Avoid std::function overhead in ScopeGuard
  * Core/GeckoCodeConfig : Fix Gecko codes formatting
  * CMake: Fix building ARM64 on Windows

-------------------------------------------------------------------
Thu Feb 13 10:35:43 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1581377336.a9dc4ac3f0:
  * InputCommon: Clean up creation of inputs.
  * InputCommon: Only update setting expressions when the input gate is enabled.
  * Update to Qt 5.14.1
  * VolumeVerifier: Ignore invalid partitions in GetBiggestReferencedOffset
  * Fix VolumeVerifier not showing a problem for invalid partitions
  * InputCommon: Eliminate some duplicated button threshold logic.
  * Fix another implicit false-to-nullptr conversion
  * DiscIO: Check for DirectoryBlob seek failure
  * DolphinQt/Debugger: Fix crash with floating debugger windows
  * CMake: add DOLPHIN_CXX_FLAGS option
  * Cleanup: Use std::abs instead of abs.
  * InputCommon: Allow Wii remote extension to be set with an input expression.
  * InputCommon: XInput cleanups.
  * InputCommon: Expose XInput battery level as an input.
  * InputCommon: Allow controller settings specified with input expresions.
  * DolphinQt: Kill some unused member variables.
  * DolphinQt: Fix stereoscopy hotkeys.
  * DolphinQt: setTabKeyNavigation(false) on QTableWidget and QTableView.
  * Core/NetPlayClient: Add documentation for SendPadHostPoll
  * DolphinQt/Mapping: Change "Dead Zone" color from shadow color of
    palette to a transparent black or white depending on theme.
    Tweak order of "shake" indicator axis colors so red is more often shown.
  * VolumeVerifier: Don't return early when file is too small
  * VolumeVerifier: Don't show an assert for files that are too small
  * Core/Jits: Adds an option to disable the register cache.

-------------------------------------------------------------------
Thu Feb 06 12:18:44 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1580849962.a205ecb446:
  * Common: Amend includes to handle the upgrade to fmt
  * Core: Amend includes to handle the upgrade to fmt
  * VideoCommon: Amend formatting code to handle the upgrade to fmt
  * Externals: Update fmt to 6.1.2
  * Report use of DI interrupt mask commands as a game quirk
  * WiimoteEmu: Fix default IMU accelerometer mappings.
  * Fix assignment of DI interrupt mask ioctls
  * Translation resources sync with Transifex
  * Android: Fix typo in Skip Presenting Duplicate Frames setting name
  * Vulkan: Treat VK_SUBOPTIMAL_KHR as VK_SUCCESS on Android
  * Vulkan: Log when a swap chain resize is occurring
  * IOS/FS: Fix CreateFullPath to not create directories that already exist
  * WiiRoot: Fix CopySysmenuFilesToFS directory creation
  * ButtonManager: Fix handling of empty device id.
  * ControllerInterface/DSUClient: Eliminate m_accl/m_gyro state by accessing the pad data directly like every other input.

-------------------------------------------------------------------
Tue Jan 28 11:36:03 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1580163603.57f4837e4d:
  * DolphinQt/GCMemcardManager: Make use of QLatin1Char within GetErrorMessagesForErrorCode()
  * DolphinQt/GCMemcardManager: Mark string as translatable within GetErrorMessagesForErrorCode()
  * DolphinQt/GameConfigWidget: Remove unimplemented EditUserConfig() member function
  * DolphinQt/GameConfigEdit: Remove unimplemented SetReadOnly() member function
  * DolphinQt/MainWindow: Surround prototype of OnSignal() with relevant ifdef
  * DolphinQt/NetPlayDialog: Remove unimplemented SetGame() prototype
  * VertexLoaderX64: Don't use PDEP on AMD Zen
  * Jit64: Don't use PEXT in DoubleToSingle on AMD Zen
  * x64CPUDetect: Add flag for slow PDEP/PEXT on AMD Zen
  * x64CPUDetect: Add detection for AMD Zen architecture
  * DolphinQt/TASCheckBox: Mark GetValue() as const
  * Translation resources sync with Transifex
  * Common/Analytics: Replace mutex with shared_mutex and minor cleanups.
  * VolumeVerifier: Report read errors to the user
  * IOS/ES: Remove now unnecessary title sorting hack
  * UnitTests/FS: Improve deletion test
  * Tools: Add a small Python tool to print FSTs
  * UnitTests/FS: Add ReadDirectory ordering test (issue 10234)
  * UnitTests/FS: Fix file rename tests
  * UnitTests/FS: Add path validity and splitting tests
  * UnitTests/FS: Add metadata tests
  * IOS/FS: Actually implement SetMetadata
  * IOS/FS: Implement GetMetadata properly and remove GID hack
  * IOS/FS: Implement ReadDirectory properly and remove sorting hack
  * IOS/FS: Implement Rename properly
  * IOS/FS: Implement Delete properly
  * IOS/FS: Implement CreateFile and CreateDir properly
  * Core: Fix a few misuses of FS::CreateDirectory
  * IOS/FS: Implement Format properly
  * IOS/FS: Make sure FS root directory exists
  * IOS/FS: Move /tmp clearing back to the IPC interface
  * IOS/FS: Add base FST functions
  * IOS/FS: Move path validity check functions
  * VideoCommon/OSD: Process OSD messages even when they are disabled.
  * InputCommon: Make "Cursor" inputs aware of the rendered aspect ratio.
  * Add Dolphin version and current video backend to shader compilation logs
  * Common/Core: Minor rvalue reference related cleanups.
  * VideoCommon/TextureConversionShader: Make use of fmt where applicable
  * VideoCommon/TextureConversionShader: Convert over to using ShaderCode
  * x64Emitter: Remove unused macros
  * X64Emitter: Remove obsolete TODO
  * x64Emitter: Refactor OpArg::WriteRest
  * x64Emitter: Avoid 8-bit displacement when possible
  * x64Emitter: Unit test memory addressing modes
  * WiimoteEmu: Nunchuk and Classic Controller calibration accuracy improvements.
  * Core/WiimoteReal: Make wiimote source type an enum class and add Get/SetWiimoteSource functions. Add connected real Wii Remotes to a pool when a slot is not available.
  * Qt/RenderWidget: Account for devicePixelRatio when auto-adjusting window size
  * Jit64AsmCommon: Use PEXT in GenConvertDoubleToSingle
  * Jit64AsmCommon: Make ConvertDoubleToSingle use RSCRATCH as output
  * UnitTests/Jit64Common: Test GenConvertDoubleToSingle
  * Jit64: Make DoubleToSingle a common asm routine

-------------------------------------------------------------------
Thu Jan 23 09:06:08 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1579717236.ea9b96370d:
  * DiscIO: Fix CISOFileReader::GetDataSize()

-------------------------------------------------------------------
Wed Jan 22 10:47:08 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1579658152.f0669f5aa6:
  * Initial release for build.opensuse.org
