-------------------------------------------------------------------
Tue Apr 28 06:06:29 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.20200427T203812.7a77abb815:
  * Debugger: Add a Network widget
  * Android: Use touch emulation of IR by default
  * Don't defer EFB Copies to RAM - PMTTYD Issues
  * VolumeVerifier: Show desync warning for dual layer discs too
  * Externals: Add libLZMA.
  * Externals: Add bzip2.
  * DiscIO: Use a struct for Wii hashes
  * DiscIO: Parallelize the re-encryption code
  * DiscIO: Implement re-encryption of Wii partition data
  * DiscIO: Use partition data offset for ReadWiiDecrypted parameter
  * Analytics: Report correct quirk for mismatched xf/bp colors
  * Android: Run installWAD on separate thread
  * Android: Add Install WAD to menu_game_grid
  * Socket: Abort pending operations on close
  * Jit64: subfx - Use LEA when possible
  * Jit64: addx - Skip ADD after MOV when possible
  * Jit64: addx - Prefer smaller MOV+ADD sequence
  * Jit64: addx - Emit MOV when possible
  * Jit64: addx - Emit nothing when possible
  * Jit64: addx - Deduplicate branches part 2
  * Jit64: addx - Deduplicate branches part 1
  * Remove unnecessary EFB to Texture disabling for Spider-Man 2
  * WiimoteEmu: Rename some variables from "cursor" to "point".
  * WiimoteEmu: Apply "Tilt" rotations separately and before those of "Point" and "Swing" for proper tilted pointing.
  * IOS/FS: Fix FST write failure on some platforms
  * Translation resources sync with Transifex
  * Android: Set Insert SD Card default setting to true
  * DiscIO: Clean up decompression size calculation
  * Qt/Debugger: Refresh windows on savestate load.
  * IOS/USBHost: Skip starting threads when determinism is enabled
  * DolphinQt: Added checkbox to filter out NetPlay sessions that are already in-game.
  * DiscIO: Fix decompressing writing too much sometimes
  * DiscIO: Fix decompressing writing too little sometimes
  * Fix bug 11920
  * Android: Reload Wii Remote settings upon saving them
  * Remove outdated comment from Movie::FrameUpdate
  * Adjust s_DIMAR/s_DILENGTH behavior (fixes Baten Kaitos music)
  * Core: Skip duplicate frames when using frame advance
  * Core: Clarify Callback_VideoCopiedToXFB and FrameUpdate
  * Respect Core::WantsDeterminism for DNS on Linux
  * Qt/GameList: Use KeyPress instead of KeyRelease
  * Remove unused function Host_UpdateProgressDialog
  * DolphinQt: Run tasks that use progress dialogs on separate threads
  * Delete properties dialog on close
  * Android: Use the newly added style for all dialogs
  * Android: Use the newly added style for the analytics alert too
  * Android TV: Fix crash when long pressing a game
  * Analytics: Add quirk for mismatched xf/bp texgens/colors
  * VertexManagerBase: Skip drawing objects with mismatched xf/bp stages
  * AudioPane: Do not enable DPL II quality slider with HLE audio on init
  * Android: Add Insert SD Card and update description
  * HLE: Add more debug functions
  * Set Insert SD Card default value to true
  * Qt: Display default Paths
  * Android: Reduce Submenu height by 25 percent
  * Android: Split General settings
  * Match path type to BundleUtilities when running fixup_bundle
  * Cleanup warnings of -Wmissing-declarations
  * VideoCommon: Remove widescreen heuristic debug logs.
  * VideoCommon: Tweak widescreen heuristic and clean up some related Renderer logic.
  * DolphinQt: Don't overwrite >8x IR scale in ini, add maximum internal res option
- Add BR on libbz2-devel and xz-devel
- Force shared enet and force xxhash as found
  (xxhash has no findxxhash.cmake file but it's not needed here)

-------------------------------------------------------------------
Thu Apr 09 06:12:41 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1586380832.9a2d8a9623:
  * Vulkan: Switch from vkCreateMacOSSurfaceMVK() to vkCreateMetalSurfaceEXT()
  * Externals: Update MoltenVK to SDK version 1.2.131.2
  * DolphinQt: Fix the panic alert deadlock (a.k.a. "Question" issue)

-------------------------------------------------------------------
Fri Apr 03 05:44:55 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1585813619.4ff855921e:
  * Android: Force an AppCompat theme in the analytics AlertDialog
  * Translation resources sync with Transifex
  * Translation resources sync with Transifex
  * Android: Don't let onSettingChanged clobber ConfirmRunnable changes
  * Cleanup warnings of -Wunused-lambda-capture
  * use s_ prefix for local variables
  * Fix build with Qt 5.15+
  * Wiimote: Cleanup warnings of -Wmissing-variable-declarations
  * NoGUI: missing override keyword GetWindowSystemInfo
  * Cleanup warnings of -Wpessimizing-move
  * Cleanup warnings of -Wunused-const-variable
  * InputCommon: cleanup warnings of -Wclass-memaccess
  * Cleanup warnings of -Wunused-variable
  * DiscIO: cleanup warnings of -Wmaybe-uninitialized
  * Android: Don't use SettingsAdapter's static state in file picker
  * Android: Add Paths to UI
  * Parse arguments before Qt
  * Qt/CodeWidget: Typo in settings key.
  * SettingsHandler: Always decode the whole settings.txt file
  * Qt/GameListModel: Use native separators in File Path column
  * Boot: Change pre-defined setting.txt CODE values
  * Android: add lighter accent color for dark mode
  * Qt/CodeViewWidget: Make columns resizable by the user and set sensible defaults.
  * Translation resources sync with Transifex
  * Android/JNI: Remove odd usage of the comma operator
  * Fix Load Wii System Menu not updating after performing a disc update
  * DolphinQt: Fix gyro mapping indicator's "jitter" drawing.
  * Core/HotkeyManager: Fix group names in config
  * Android: Set up Day/Night mode for system-compatible optional dark theme
  * Back up Wii setting.txt and SYSCONF while emulating
  * StringUtil: Add PathToFileName function
  * Boot: Preserve MODEL value in setting.txt
  * Boot: Preserve CODE value in setting.txt if it already matches the region
  * Movie: Make checking for existing GC saves more reliable
  * Update Readme.md
  * BTReal: Improve error handling for device opening
  * VideoCommon: Allow texture folders to be determined by a <gameid>.txt file
  * Qt/CodeViewWidget: Indent branch arrows based on free space rather than reserving a full column for each.
  * Use ZoomIn/ZoomOut QKeySequence in GameList
  * Qt: Add Configuration shortcut
  * Qt: Use builtin Find and Quit key sequences
  * Build system: default to fmt shared library when available
  * Fix settings.txt parsing in case of weird line endings
  * Breakpoints: Fix crash after clearing all memory breakpoints
  * Allow using shared minizip
  * Qt/RenderWidget: Remove fill background functionality
  * Core: Render a blank UI frame before booting
  * Vulkan: Pass CAMetalLayer to MoltenVK instead of NSView
  * VideoBackends: Make it possible for PrepareWindow to change the surface
  * Common: Add a render_window field to WindowSystemInfo
  * Android: Add Set as Default ISO to UI
  * Qt/CodeViewWidget: Implement branch arrows.
  * Android: Fix obscured Dolphin version
  * Common/IniFile: Add Exists function for section name only
  * .gitmodules: Make Externals/Qt clone shallow
  * DolphinQt: Fix calibration cancel behavior.
  * DolphinQt: Clean up calibration drawing a bit.
  * InputCommon: Specify ini value default when saving calibration "center".
  * InputCommon: Clamp calibration values within square shape.
  * InputCommon: RoundStickGate's ideal sample count can be 1.
  * HW/WiimoteEmu: Fill IR data with 0xFF on failed bus read.
  * HW/WiimoteEmu: Camera logic cleanups.
  * Qt/CodeViewWidget: Use named constants for column IDs.
  * Core/NetPlayServer: Fix session not being added to index on direct connection type
  * DolphinQt: Give hotkeys their own "background input" setting.
  * Add Windows Implementation Libraries
  * Android: More robust check for whether to sync channels
  * Added Toggle Freelook Hotkey
  * Always display the horizontal scroll bar when log word wrap is off
  * Android: Use square stick calibration
  * Android: Clear preferences linked to WiimoteNew.ini when overwriting
- Use external fmt, enet, minizip, pugixml, xxhash libraries, respectively
  add BR on pkgconfig(fmt), enet-devel, minizip-devel, pugixml-devel, xxhash-devel
- BR on pkgconfig(libsystemd) instead of pkgconfig(systemd) so that we have
  the systemd headers.

-------------------------------------------------------------------
Mon Mar 09 13:02:27 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1583642222.c507370ba2:
  * AudioPane: Do not enable Dolby Pro Logic II quality slider if DPLII is disabled
  * Resources: Make dolphin_logo.png square
  * Source/Core/Core/DSP/DSPTables.cpp: include <cstdio> for sprintf
  * Source/Core/Common/StringUtil.h: include <limits> for std::numeric_limits
  * Used whole path instead of relative path
  * Add path to File Name column of game grid Fixes https://bugs.dolphin-emu.org/issues/10567

-------------------------------------------------------------------
Mon Mar 02 14:38:11 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1582988926.1add30994b:
  * Translation resources sync with Transifex
  * HW/WiimoteEmu: Fix Classic Controller triggers.
  * Qt: Re-enable Dark Mode support
  * DolphinQt: Tweak indicator raw-input/input-shape color for better contrast in some dark themes.
  * DolphinQt: Eliminiate redundant swing indicator logic.
  * DolphinQt: Clean up mapping indicator code and draw lines on "pixel centers".
  * DolphinQt: Eliminate redundant cursor indicator logic.
  * DolphinQt: Break mapping indicators into separate classes. Ensure "state lock" is held on redraw.
  * InputCommon: Remove racy UpdateInput call in DetectInput.
  * InputCommon: Mark GetStateLock with [[nodiscard]] and fix discarding calls.

-------------------------------------------------------------------
Mon Feb 24 11:20:37 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1582525609.25d5f0d9ef:
  * InputCommon: Constify Device::Input::IsDetectable function.
  * Translation resources sync with Transifex
  * Qt/TAS: Improve TAS windows
  * InputCommon: Remove Wii Remote real-time calibration of M+ in favor of functionality provided by ControllerEmu.
  * InputCommon: Add real Wii Remote support to ControllerInterface. Add option to connect additional Wii Remotes.
  * InputCommon/ControllerInterface: Make devices mutex recursive so RemoveDevice can be used within UpdateInput.
  * Core/WiimoteEmu: Add functions to Nunchuk, Classic Controller, and MotionPlus extensions to get/set data without duplicate bithacks everywhere.
  * InputCommon: Add types to ControllerEmu that represent raw controller inputs and calibration data to calculate normalized input values.
  * Common: Add additional Vector operations.
  * InputCommon: Add calibration functionality to IMUGyroscope.
  * MathUtil: Add RunningMean/RunningVariance classes.
  * InputCommon: Add "Dead Zone" setting to raw gyro inputs.
  * Windows GUI: Use QMenu font (Segoe UI) for entire application
  * Common: Avoid std::function overhead in ScopeGuard
  * Core/GeckoCodeConfig : Fix Gecko codes formatting
  * CMake: Fix building ARM64 on Windows

-------------------------------------------------------------------
Thu Feb 13 10:35:43 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1581377336.a9dc4ac3f0:
  * InputCommon: Clean up creation of inputs.
  * InputCommon: Only update setting expressions when the input gate is enabled.
  * Update to Qt 5.14.1
  * VolumeVerifier: Ignore invalid partitions in GetBiggestReferencedOffset
  * Fix VolumeVerifier not showing a problem for invalid partitions
  * InputCommon: Eliminate some duplicated button threshold logic.
  * Fix another implicit false-to-nullptr conversion
  * DiscIO: Check for DirectoryBlob seek failure
  * DolphinQt/Debugger: Fix crash with floating debugger windows
  * CMake: add DOLPHIN_CXX_FLAGS option
  * Cleanup: Use std::abs instead of abs.
  * InputCommon: Allow Wii remote extension to be set with an input expression.
  * InputCommon: XInput cleanups.
  * InputCommon: Expose XInput battery level as an input.
  * InputCommon: Allow controller settings specified with input expresions.
  * DolphinQt: Kill some unused member variables.
  * DolphinQt: Fix stereoscopy hotkeys.
  * DolphinQt: setTabKeyNavigation(false) on QTableWidget and QTableView.
  * Core/NetPlayClient: Add documentation for SendPadHostPoll
  * DolphinQt/Mapping: Change "Dead Zone" color from shadow color of
    palette to a transparent black or white depending on theme.
    Tweak order of "shake" indicator axis colors so red is more often shown.
  * VolumeVerifier: Don't return early when file is too small
  * VolumeVerifier: Don't show an assert for files that are too small
  * Core/Jits: Adds an option to disable the register cache.

-------------------------------------------------------------------
Thu Feb 06 12:18:44 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1580849962.a205ecb446:
  * Common: Amend includes to handle the upgrade to fmt
  * Core: Amend includes to handle the upgrade to fmt
  * VideoCommon: Amend formatting code to handle the upgrade to fmt
  * Externals: Update fmt to 6.1.2
  * Report use of DI interrupt mask commands as a game quirk
  * WiimoteEmu: Fix default IMU accelerometer mappings.
  * Fix assignment of DI interrupt mask ioctls
  * Translation resources sync with Transifex
  * Android: Fix typo in Skip Presenting Duplicate Frames setting name
  * Vulkan: Treat VK_SUBOPTIMAL_KHR as VK_SUCCESS on Android
  * Vulkan: Log when a swap chain resize is occurring
  * IOS/FS: Fix CreateFullPath to not create directories that already exist
  * WiiRoot: Fix CopySysmenuFilesToFS directory creation
  * ButtonManager: Fix handling of empty device id.
  * ControllerInterface/DSUClient: Eliminate m_accl/m_gyro state by accessing the pad data directly like every other input.

-------------------------------------------------------------------
Tue Jan 28 11:36:03 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1580163603.57f4837e4d:
  * DolphinQt/GCMemcardManager: Make use of QLatin1Char within GetErrorMessagesForErrorCode()
  * DolphinQt/GCMemcardManager: Mark string as translatable within GetErrorMessagesForErrorCode()
  * DolphinQt/GameConfigWidget: Remove unimplemented EditUserConfig() member function
  * DolphinQt/GameConfigEdit: Remove unimplemented SetReadOnly() member function
  * DolphinQt/MainWindow: Surround prototype of OnSignal() with relevant ifdef
  * DolphinQt/NetPlayDialog: Remove unimplemented SetGame() prototype
  * VertexLoaderX64: Don't use PDEP on AMD Zen
  * Jit64: Don't use PEXT in DoubleToSingle on AMD Zen
  * x64CPUDetect: Add flag for slow PDEP/PEXT on AMD Zen
  * x64CPUDetect: Add detection for AMD Zen architecture
  * DolphinQt/TASCheckBox: Mark GetValue() as const
  * Translation resources sync with Transifex
  * Common/Analytics: Replace mutex with shared_mutex and minor cleanups.
  * VolumeVerifier: Report read errors to the user
  * IOS/ES: Remove now unnecessary title sorting hack
  * UnitTests/FS: Improve deletion test
  * Tools: Add a small Python tool to print FSTs
  * UnitTests/FS: Add ReadDirectory ordering test (issue 10234)
  * UnitTests/FS: Fix file rename tests
  * UnitTests/FS: Add path validity and splitting tests
  * UnitTests/FS: Add metadata tests
  * IOS/FS: Actually implement SetMetadata
  * IOS/FS: Implement GetMetadata properly and remove GID hack
  * IOS/FS: Implement ReadDirectory properly and remove sorting hack
  * IOS/FS: Implement Rename properly
  * IOS/FS: Implement Delete properly
  * IOS/FS: Implement CreateFile and CreateDir properly
  * Core: Fix a few misuses of FS::CreateDirectory
  * IOS/FS: Implement Format properly
  * IOS/FS: Make sure FS root directory exists
  * IOS/FS: Move /tmp clearing back to the IPC interface
  * IOS/FS: Add base FST functions
  * IOS/FS: Move path validity check functions
  * VideoCommon/OSD: Process OSD messages even when they are disabled.
  * InputCommon: Make "Cursor" inputs aware of the rendered aspect ratio.
  * Add Dolphin version and current video backend to shader compilation logs
  * Common/Core: Minor rvalue reference related cleanups.
  * VideoCommon/TextureConversionShader: Make use of fmt where applicable
  * VideoCommon/TextureConversionShader: Convert over to using ShaderCode
  * x64Emitter: Remove unused macros
  * X64Emitter: Remove obsolete TODO
  * x64Emitter: Refactor OpArg::WriteRest
  * x64Emitter: Avoid 8-bit displacement when possible
  * x64Emitter: Unit test memory addressing modes
  * WiimoteEmu: Nunchuk and Classic Controller calibration accuracy improvements.
  * Core/WiimoteReal: Make wiimote source type an enum class and add Get/SetWiimoteSource functions. Add connected real Wii Remotes to a pool when a slot is not available.
  * Qt/RenderWidget: Account for devicePixelRatio when auto-adjusting window size
  * Jit64AsmCommon: Use PEXT in GenConvertDoubleToSingle
  * Jit64AsmCommon: Make ConvertDoubleToSingle use RSCRATCH as output
  * UnitTests/Jit64Common: Test GenConvertDoubleToSingle
  * Jit64: Make DoubleToSingle a common asm routine

-------------------------------------------------------------------
Thu Jan 23 09:06:08 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1579717236.ea9b96370d:
  * DiscIO: Fix CISOFileReader::GetDataSize()

-------------------------------------------------------------------
Wed Jan 22 10:47:08 UTC 2020 - idonmez@suse.com

- Update to version 5.0+git.1579658152.f0669f5aa6:
  * Initial release for build.opensuse.org
