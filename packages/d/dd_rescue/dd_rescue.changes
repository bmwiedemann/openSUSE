-------------------------------------------------------------------
Tue Dec 27 10:31:33 UTC 2022 - Ludwig Nussel <lnussel@suse.com>

- Replace transitional %usrmerged macro with regular version check (boo#1206798)

-------------------------------------------------------------------
Tue Jul 26 19:55:25 CEST 2022 - kurt@garloff.de

- Update to dd_rescue-1.99.12:
  * Works with openssl-3.0 now (using EVP_Cipher_Init to set IV).
  * openssl-1.1 performs significantly better so we keep building
    against it if available.
  * nosalthdr option for libddr_crypt for compatibility with
    openssl-3, no longer writing header when salt is passed.
  * ARMv7 crypto support successfully compiles with clang now.
- Drop no-python2.patch (included in dd_rescue-1.99.12). 

-------------------------------------------------------------------
Mon Dec  6 14:21:06 UTC 2021 - Dirk Müller <dmueller@suse.com>

- build against openssl 1.1 (bsc#1193438) 

-------------------------------------------------------------------
Sat May 22 11:08:06 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Don't break compatibility with SLE-12 

-------------------------------------------------------------------
Mon May 17 09:47:33 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Add no-python2.patch to remove the dependency on Python 2
  (sf#ddrescue#4).

-------------------------------------------------------------------
Thu Apr 29 21:15:14 CEST 2021 - kurt@garloff.de

- Update to dd_rescue-1.99.11:
  * Drop (backported) checksum_file-clear-errno.diff.
  * Minor scheduling improvements for x86_64 and ARM asm.
  * Work around compiler weirdness, passing two in/out parameters
    in the same register (when they are provably the same),
    causing x2 breakage on armv7.
  * 256bit VAES support on x86-64 (0.23 cycles/byte on Zen3!).
  * Needed to compile aesni twice for this, once with avx.
  * Full asm versions for (non-x2) CTR and CBC on arm64
    (achieving 0.40 cycles/byte on Cortex X-1).
  * Avoid test failures with incompressible tweak in fuzz_lzo.
  * test_aes improvements: Options, help, IV comparison, memcpy.
  * Full crypto test coverage 0 -- 130 bytes len.
  * Code safety against len==0 en/decryption.

-------------------------------------------------------------------
Tue Mar  9 19:00:02 CET 2021 - kurt@garloff.de

- checksum_file-clear-errno.diff: Avoid stale errno to be picked
  up and report an error without any error actually occuring.
  (This lead to occasional build fails on armv7 on Ubuntu 20.04
   and Fedora 32/33, nowhere else.)

-------------------------------------------------------------------
Mon Mar  8 09:50:58 CET 2021 - kurt@garloff.de

- Update to dd_rescue-1.99.10:
  * Improve memory clobbers: Ensure we specify full array lengths
    used as input to asm (boo#1181402).
  * Improve ARM64 crypto by better insn scheduling in CTR calc,
    avoiding dependencies and local vars (+40% performance!).
  * Apply all ARM64 improvements also to ARMv8 crypto on ARM32.
  * Fix warning int formatting on unaligned crypto.
  * Address warnings on outdated autoconf usage.

-------------------------------------------------------------------
Mon Mar  1 08:05:09 CET 2021 - Kurt Garloff <kurt@garloff.de>

- Update to dd_rescue-1.99.9:
  * Includes aliasing fixes from boo#1181402.
  * Additional mem clobbers for asm statements (boo#1181402).
  * LTO disablement still needed (boo#1176219) on arm due to
    differences in compiler flags (-march) per object.
  * Fix dependency generation on PPC (preprocessing intrinsics).
  * Support xattr decls in sys/xattr.h in addition to attr/xattr.h.
  * More stringent check of mem alloc return values.
  * Free all memory in error path before exiting (cosmetic).
  * Don't need global variable in probe function.
  * drop ddr_1998-alg-caseindep.diff, ddr_1998-check-nofail-noxattr.diff,
    ddr_1998-ossl11-warn.diff, ddr_1998-sysrandom.diff,
    ddr_1998-testhole.diff: patches all merged (they were backports)
- drop fix-aliasing-aarch64.patch: obsolete (fixed differently in new version)
  
-------------------------------------------------------------------
Mon Feb 22 10:40:53 UTC 2021 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Revert last commit and fix bug boo#1181402 with a proper patch:
  * fix-aliasing-aarch64.patch

-------------------------------------------------------------------
Thu Jan 28 22:41:26 UTC 2021 - Dirk Müller <dmueller@suse.com>

- build with -fno-strict-aliasing on aarch64 to workaround (bsc#1181402)

-------------------------------------------------------------------
Wed Jan 13 09:31:27 UTC 2021 - Dirk Müller <dmueller@suse.com>

- spec-cleaner run 

-------------------------------------------------------------------
Mon Oct 19 16:01:24 UTC 2020 - Ludwig Nussel <lnussel@suse.de>

- prepare usrmerge (boo#1029961)

-------------------------------------------------------------------
Thu Sep  3 08:07:30 UTC 2020 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Disable LTO on %arm and aarch64 to fix UnitTests - boo#1176219

-------------------------------------------------------------------
Wed May 13 06:30:40 UTC 2020 - Josef Möllers <josef.moellers@suse.com>

- Dropped build dependency on libfallocate-devel as fallocate64 is
  now in glibc and thus libfallocate is not required any more.
  [dd_rescue.spec, jsc#SLE-11887]

-------------------------------------------------------------------
Mon Apr  6 09:17:38 UTC 2020 - Martin Liška <mliska@suse.cz>

- Run tests with -fcommon in order to fix boo#1160261.

-------------------------------------------------------------------
Thu Sep 20 13:16:41 UTC 2018 - schwab@suse.de

- Avoid running dependency generation which can produce spurious errors
- Use %license

-------------------------------------------------------------------
Sat May 12 12:06:29 CEST 2018 - kurt@garloff.de

- ddr_1998-sysrandom.diff: Use getrandom() decl from sys/random.h.
- ddr_1998-testhole.diff: Ensure we have a hole before testing hole
  encryption (fixes bsc#1092758).
- ddr_1998-ossl11-warn.diff: Avoid warn from memcpy to openssl-1.1
  to EVPCTX* internals.

-------------------------------------------------------------------
Tue Apr 17 15:46:16 CEST 2018 - kurt@garloff.de

- ddr_1998-alg-caseindep.diff:
  * Use case-independent matching for algorithm names (hash, crypt).
- ddr_1998-check-nofail-noxattr.diff:
  * Make testsuite succeed for builds w/o xattr support. 

-------------------------------------------------------------------
Sun Dec  3 22:11:29 CET 2017 - kurt@garloff.de

- Update to 1.99.8:
  * Support openssl-1.1 (patch from Marcus Meissner), patch
    dd_rescue-openssl11.patch has been merged and is thus dropped.
  * cryptalgo->recycle to reuse crypto context (neeeded for openssl)
  * Fix memleak in test_aes
  * Use test_aes in check target to ensure all algorithms work
  * Use std probe mech in test_aes, so we don't fail with SIGILL
  * Fix build without openssl

-------------------------------------------------------------------
Wed Nov 29 17:25:01 UTC 2017 - meissner@suse.com

- dd_rescue-openssl11.patch: ported to openssl 1.1 (bsc#1070369)

-------------------------------------------------------------------
Fri Nov 10 15:08:21 CET 2017 - kurt@garloff.de

- Update to 1.99.7:
  * Work around gentoo dash echo -n breakage (reported by whissi).
  * Optimize away strlen() calls in format_int.

-------------------------------------------------------------------
Sat Nov  4 10:29:09 CET 2017 - kurt@garloff.de

- Update to 1.99.7-pre2:
  * ddr_crypt: compat for openssl enc -md sha256 KDF (openssl 1.1 
    default) with new opbkdf11 option

-------------------------------------------------------------------
Thu Nov  2 17:22:06 CET 2017 - kurt@garloff.de

- Update to 1.99.7-pre:
  * Fix for segfault on multi-overwrite with -2/-3/-4.

-------------------------------------------------------------------
Mon Sep  4 23:25:28 CEST 2017 - kurt@garloff.de

- libddr_hash-round-down-static.diff: Mark inline function static.

-------------------------------------------------------------------
Fri Aug 25 15:19:24 CEST 2017 - kurt@garloff.de

- Update to dd_rescue-1.99.6:
  * Merge previous SSE2 detection patch from Michael Matz.
  * Support calculating and validating checksums in the S3
    multipart format. 

-------------------------------------------------------------------
Thu Aug 10 16:05:11 UTC 2017 - matz@suse.com

- Add dd_rescue-i586-sse2.diff to fix dd_rescue compile and
  runtime problems when GCC defaults to SSE2 also on i586
  like with SLE-15.

-------------------------------------------------------------------
Tue May 30 13:52:48 UTC 2017 - tchvatal@suse.com

- Cleanup a bit the dependencies
  * Run %configure as separate comand properly in build phase
- Remove support for < 12.0
- Add condition for openSSL to build with verison 1.0.0 on Factory

-------------------------------------------------------------------
Thu Dec 29 22:27:17 CET 2016 - kurt@garloff.de

- Update to dd_rescue-1.99.5:
  * Merge the two gcc7 patches from Martin Liska.
  * Better transfer length estimate (thus better progress report)
  * Optional ratecontrol (throttle transfer speed) 
  * fmt_no was unsafe against undetermined length (pre=0) and
    visible digit grouping characters, resulting in memory
    corruption when using a -b logfile. Thanks to Marc Thomas
    for reporting and debugging!
  * A few more minor cleanups and bugfixes.
  * Fix segfault with graph in reverse direction with
    too large transfer limit.
  * Fix build with AES but not AVX2 support.
- Update to dd_rescue-1.99:
  * ddr_crypt plugin: Add support for ARMv8 aes hardware acceleration 
    (works as well in 32bit mode).
  * ddr_crypt: Fix CTR iv initialization.
  * ddr_crypt: Support for openSSL Salted__ header.
  * Support ranges in fault injection.
  * Clean up write retry logic.
  * Improved documentation, Makefiles and test coverage.

-------------------------------------------------------------------
Fri Dec 23 09:26:20 UTC 2016 - mliska@suse.cz

- Add gcc7-fix-htonl.patch patch.

-------------------------------------------------------------------
Fri Dec  9 11:56:45 UTC 2016 - mliska@suse.cz

- Add gcc7-static-inline.patch.

-------------------------------------------------------------------
Sun Jun  7 10:20:47 CEST 2015 - kurt@garloff.de

- Add three missing doc files. 

-------------------------------------------------------------------
Sat May 30 09:58:37 CEST 2015 - kurt@garloff.de

- Update to dd_rescue-1.98:
  * Fix AESNI detection (x86)
  * Avoid test failures due to insufficient entropy

-------------------------------------------------------------------
Fri May 29 22:23:54 CEST 2015 - kurt@garloff.de

- Update to dd_rescue-1.98pre:
  * crypt plugin: Encrypt and decrypt the data stream using various
    AES variants. There are -CBC, -ECB, -CTR stream ciphers, and
    128, 192, 256 bit variants, also with enhanced number of rounds,
    and with twice the rounds. Keys can generated, saved, or derived
    from password with salt. On x86, the hardware AES support is
    used if featured by the CPU.
  * Speed up PRNG generation.
  * Fault injection framework for testing.
  * Some minor improvements of the plugin interface and fixes all
    over the place.

-------------------------------------------------------------------
Thu May 21 17:53:19 UTC 2015 - mpluskal@suse.com

- Add gpg signature and keyring
- Cleanup spec file with spec-cleaner

-------------------------------------------------------------------
Thu Feb  5 08:07:26 UTC 2015 - coolo@suse.com

- include the .changes file in the .src.rpm as its used during build

-------------------------------------------------------------------
Sat Aug  9 23:26:59 CEST 2014 - kurt@garloff.de

- Update to dd_rescue-1.46:
  * Support for HMAC creation/verification in ddr_hash module.
  * Mix rdrand into seed if 0 is specified and if available.

-------------------------------------------------------------------
Tue May 27 13:45:42 CEST 2014 - kurt@garloff.de

- Update to dd_rescue-1.45:
  * ddr_hash: Fix potential sha512/sha384 buffer overflow.
  * ddr_hash: Support sha1
  * ddr_hash: Support checking and storing hash in xattrs and
    md5sum/sha256sum/... style files.
  * New ddr_null plugin.

-------------------------------------------------------------------
Fri May 23 11:25:20 CEST 2014 - kurt@garloff.de

- Update to dd_rescue-1.44:
  * MD5 plugin has been renamed to hash, reflecting that it supports
    sha1, sha256, sha224, sha512, sha384 now as well.

-------------------------------------------------------------------
Fri May 23 09:56:10 CEST 2014 - kurt@garloff.de

- dd_rescue-1.43-1.43.1.diff: Delete (integrated upstream)
- dd_rescue-fix_insn_probe.diff: Delete (integrated upstsream) 

-------------------------------------------------------------------
Wed May 21 10:44:18 CEST 2014 - kurt@garloff.de

- dd_rescue-1.43-1.43.1.diff: Document 256kiB limit of lzop in
  man page, output warning in ddr_lzo and respect limit in test
  suite.

-------------------------------------------------------------------
Tue May 20 09:29:40 CEST 2014 - kurt@garloff.de

- Update to 1.43-final: Make make check succeed without lzop.

-------------------------------------------------------------------
Mon May 19 21:03:04 CEST 2014 - kurt@garloff.de

- Update to 1.43-pre:
  * Fix bug in extend, which previously would disallow to append
    more data than existed before.
  * Some minor improvements on messages and manpage.
  * ARMv8 (AArch64) optimized find_nonzero for fast zero-block
    detection.
  * Significant rework of plugin interface, leading also to some
    refactoring of option parsing and passing. 
  * Refactoring of MD5 plugin, improving tolerance against holes
    e.g. at the end of a file. Better test coverage. Consistent
    message prefix. output option to produce md5sum check files.
  * Add libddr_lzo plugin, allowing transparent de/compression
    of the data. Supports sparse files, appending, ... and a variety
    of algorithms and has a number of ways to handle somewhat
    damaged files. With the lzo1x_ algorithms, it's compatible with
    lzop. Comes with a good number of tests and an own fuzzer to
    test robustness of the decompressor. Shipped with an own man 
    page and is packaged into the dd_rescue-lzo sub package.

-------------------------------------------------------------------
Sat Mar  8 18:58:56 CET 2014 - kurt@garloff.de

- dd_rescue-fix_insn_probe.diff: Brings dd_rescue to 1.42.1,
  fixing the process' signal mask after SIGILL delivery (probing),
  an issue related to the longjmp() signal handler return fix
  to bnc#860779.
- Update to dd_rescue-1.42:
  * Addition of plugin interface
  * MD5 plugin
  * Use posix_fadvise() if available
  * Short usage message rather than full help on error
- Update to dd_rescue-1.41:
  * Support for building against Andoid NDK
  * Consistent use of (improved) int no formatting functions
  * Fix off-by-one block dev size issue (cosmetic)
  * Enable AVX2 optimized sparse block detection
  * Refactored CPU feature detection and selection
  * New option -u/--rmvtrim to delete output file and issue fstrim
- Remove suboptimal fix for bnc#860779, it's fixed properly
  upstream by returning with longjmp() from the signal handler.

-------------------------------------------------------------------
Tue Feb 11 14:00:38 UTC 2014 - bwiedemann@suse.com

- disable SSE2 on i586 (bnc#860779)

-------------------------------------------------------------------
Thu Aug 18 23:52:41 CEST 2013 - kurt@garloff.de

- Update to dd_rescue-1.40:
  * Copy xattrs on -p/--preserve
  * For odd file offsets, do odd-sized write first, so subsequent
    writes are aligned.
  * Support half-empty block sparse detection and double softbs
    default for buffered IO.
  * Add a lot more test cases to make check.

-------------------------------------------------------------------
Thu Aug  8 13:59:39 CEST 2013 - kurt@garloff.de

- Update to dd_rescue-1.39:
  * Fix an issue with the last block being appended zeros if
    hardbs==softbs (bnc #833765).
  * A little ARM asm speedup (~15%) for sparse detection.
  * Clarify help/man page w.r.t. interpretation of -y/--syncfreq.
  * We use autoconf for feature detection now.
- Build version with libdl by default now. 

-------------------------------------------------------------------
Fri Aug  2 22:05:52 CEST 2013 - kurt@garloff.de

- Update to dd_rescue-1.38:
  * Further optimized SSE2 sparse detection. (Also added AVX2
    version, not enabled by default though.)
  * --force allows to ignore non-seekable output with non zero
    output position.
  * make check does some testing ...
  * improved cur.rate and ETA calculation.

-------------------------------------------------------------------
Thu Aug  1 22:02:16 CEST 2013 - kurt@garloff.de

- Update to dd_rescue-1.37:
  * Important bugfix for SSE2 sparse detection.
  * Fix exact zero-length on big endian machines (irrelevant).

-------------------------------------------------------------------
Wed Jul 24 16:58:13 CEST 2013 - kurt@garloff.de

- Update to dd_rescue-1.36:
  * Fix overflow with avg.load display
  * Enable SSE2 on (32bit)x86 with runtime detection
  * Add optimized zero block detection on ARM (3x faster with asm ...)

-------------------------------------------------------------------
Wed Jul 17 22:30:40 CEST 2013 - kurt@garloff.de

- Update to dd_rescue-1.35:
  * Better readability for reports with (optional) colors and rate
    limitation on progress updates.
  * Simple rewrite logic.
  * SSE2 optimized version for finding zero blocks (sparse detection).

-------------------------------------------------------------------
Sun Jul  7 17:09:32 UTC 2013 - asterios.dramis@gmail.com

- Update to version 1.34:
  * Better support for various *nix systems (specifically has a few fixes for
    FreeBSD).
  * Better compatibility with compilers (clang and g++ and clang++).
  * It can now also load libfallocate at runtime (libdl).
  * Detects a few more fatal write errors as such.

-------------------------------------------------------------------
Sun May 26 17:22:08 UTC 2013 - asterios.dramis@gmail.com

- Update to version 1.33:
  * Long options
  * New double overwrite mode (-2)
  * Man page added

-------------------------------------------------------------------
Mon Feb 11 00:15:58 CET 2013 - kurt@garloff.de

- Update to dd_rescue-1.32:
  * New option -x to append to outfile.
  * New option -Y (can be used multiple times) to specify 2ndary
    output files.

-------------------------------------------------------------------
Sun Feb  3 21:54:54 CET 2013 - kurt@garloff.de

- Update to dd_rescue-1.31:
  * Some minor output cleanups.
  * Implementation of safe triple overwrite (options -3 and -4) 
    following BSI GSDS M7.15.
- Update to dd_rescue-1.30:
  * Fix issue with double free (1.29)
  * Fix output to stdout ("-")
  * Rationalize messages a bit.
  * Option to init PRNG from file (e.g. -Z /dev/urandom)
  * Option -W to avoid writes (if output block is identical) 
- Update to dd_rescue-1.29:
  * Correctly handle last bytes before EOF when hardbs == softbs.
  * New option -M (dont extend output file).
  * New option -R (repeated output of one block, auto for dev/zero)
  * New options -z x, -Z x to use userspace pseudo RNG to overwrite
    disks / files with random data.

-------------------------------------------------------------------
Sat May 26 10:10:51 UTC 2012 - zaitor@opensuse.org

- Update to version 1.28:
  * Better defaults for hard and softblock sizes (4k/64k for
    buffered I/O, 512/1M for direct IO).
  * Copying of access times with the option -p fixed.

-------------------------------------------------------------------
Sat May 19 18:49:20 UTC 2012 - asterios.dramis@gmail.com

- Update to version 1.27:
  * Allow to do 512b direct IO (which is possible in latest Linux kernels).
    Change posix_memalign() variable assignment. It has a number of fixes; most
    importantly, when exiting because of an error, it updates the variables
    that are output. dd_rescue now avoids special characters in the logfile. It
    handles situations gracefully, where wrong positions resulted in the
    progress graph causing faults. Some come from illegal input (negative
    offset ...), which is now detected.

-------------------------------------------------------------------
Mon Mar 12 17:42:25 UTC 2012 - asterios.dramis@gmail.com

- Update to version 1.25:
  * Fix for spurious "Success" messages that resulted from overwritten
    (cleared) errno. Bad blocks are formatted in a way that they are not
    overwritten on screen and block numbers are output as unsigned.
- Removed dd_rhelp from the package (dd_rhelp will become a separate package. A
  recommended entry for dd_rhelp was added in dd_rescue).
- Spec file updates:
  * Updated License: to "GPL-2.0 or GPL-3.0".
  * Removed bc from BuildRequires: (not needed since dd_rhelp was removed).

-------------------------------------------------------------------
Tue Feb  7 21:51:22 UTC 2012 - rschweikert@suse.com

- place binaries in /usr tree (UsrMerge project)

-------------------------------------------------------------------
Wed Oct  5 12:52:27 CEST 2011 - garloff@suse.de

- Update to dd_rescue-1.24:
  * Handle directory as output filename (append input basename).
- Fix dd_rhelp.test script and add to %check. 

-------------------------------------------------------------------
Sun Sep 18 17:17:12 UTC 2011 - jengelh@medozas.de

- Remove redundant tags/sections from specfile
  (cf. packaging guidelines)

-------------------------------------------------------------------
Sat Sep  3 20:31:45 UTC 2011 - asterios.dramis@gmail.com

- Spec file updates:
  * Changed License: to GPL-2.0 (bnc#714914).
  * Minor other updates.

-------------------------------------------------------------------
Sat May 14 19:15:25 UTC 2011 - asterios.dramis@gmail.com

- Update to dd_rhelp-0.1.2:
  * IMPROVEMENT : will check the log file destination for sane conditions and
    will try some other locations if not.
  * IMPROVEMENT : will manage max_err parameter to avoid creating to much
    chunks.
  * More and better information displayed at 'info' time.
  From dd_rhelp-0.1.0:
  * INSTALL : No more ./configure && make && make install ... all detection
    were done at runtime anyway
  * UPDATE : updated libs provided in dd_rhelp
  * UPDATE : finally compatible with recent tail/head "-n" arguments
  * Added some sanity tests.
  * TEST : Started to create dd_rhelp.test which unit tests dd_rhelp.
- Spec file updates:
  * Changes based on rpmdevtools templates and spec-cleaner run.
  * Added description for the patches based on openSUSE Patches Guidelines.
  * Added a fix inside the spec file to remove build time references
  * dd_rhelp no longer needs auto* tools.
  * Minor other updates.
- Removed dd_rhelp_src.diff patch (fixed upstream).
- Rebased the other patches to apply cleanly.

-------------------------------------------------------------------
Tue Nov  2 23:55:27 CET 2010 - garloff@suse.de

- Move autoconf/configure stuff to %build section.

-------------------------------------------------------------------
Thu Oct 14 11:22:30 CEST 2010 - garloff@suse.de

- Adapt BuildRequires to new naming of libfallocate-devel-static. 

-------------------------------------------------------------------
Mon Oct 11 23:23:50 CEST 2010 - garloff@suse.de

- dd_rescue-1.23:
  * A short read (because of EOF) is not regarded an error anymore.
    This fixes confusing exit codes as well as non-quietness for -q.
  * We now REALLY default to -y0.

-------------------------------------------------------------------
Thu Sep  9 01:04:55 CEST 2010 - garloff@suse.de

- dd_rescue-1.22: 
  * Display compiler, compile time, enabled options.
  * If hardbs == softbs, don't repeat copy attempts.
  * Fix FPE in progress bar for non-seekable input reverse copy.
  * Document some of the goodies in the README.
  * Make code more digestable for non-GCC compilers, optional
    fallbacks for strsignal, pread, pwrite.

-------------------------------------------------------------------
Mon Aug 30 23:46:30 CEST 2010 - garloff@suse.de

- dd_rescue 1.21:
  * Display warnings when using sparse writing.

-------------------------------------------------------------------
Sun Aug 22 16:56:51 CEST 2010 - garloff@suse.de

- dd_rescue 1.20:
  * Update docs to document the overwrite disk with itself case
  * Also display progress bar if we know that the copy size due
    to -m.

-------------------------------------------------------------------
Sat Aug 21 21:23:19 CEST 2010 - garloff@suse.de

- Really fix dd_rhelp to not break on new Summary line.

-------------------------------------------------------------------
Sat Aug 21 19:11:18 CEST 2010 - garloff@suse.de

- Update to dd_rescue-1.19:
  * Fix 32bit screwup with display of total amount of date to copy
  * Support fallocate (using libfallocate) with -P (Prealloc)
  * More consistent use of ddrescue: (info): prefix (splice, Summary)
  * dd_rhelp adjusted for Summary change.

-------------------------------------------------------------------
Fri Aug 13 23:18:30 CEST 2010 - garloff@suse.de

- Update to dd_rescue-1.18:
  * Change default for sync to -y0.
- Update to dd_rescue-1.17:
  * Display progress bar, percent completion and ETA
  * Better estimte current vs. avg speed
  * Exit on ENOSPC on target
  * Warn ONCE on EINVAL for fsync
- Update to dd_rescue-1.16:
  * Determine and display total amount of data to copy

-------------------------------------------------------------------
Fri Aug 13 21:45:00 CEST 2010 - garloff@suse.de

- Adjust dd_rhelp to changes in dd_rescue.

-------------------------------------------------------------------
Fri Aug 13 18:06:17 CEST 2010 - garloff@suse.de

- Update to dd_rescue-1.15:
  * Support for splice() to do zerocopy file copies
  * Better information on warnings and errors
  * Avoid repeated warning on fsync returning EINVAL

-------------------------------------------------------------------
Fri Aug 13 17:59:31 CEST 2010 - garloff@suse.de

- Rename package to dd_rescue.

-------------------------------------------------------------------
Wed Aug 29 23:04:53 CEST 2007 - garloff@suse.de

- Update to dd_rescue-1.14:
  * Fix bug with sparse (-a) mode that could lead to the target
    file not having the correct size.

-------------------------------------------------------------------
Mon Mar 19 06:34:24 CET 2007 - garloff@suse.de

- Update to dd_rescue-1.13:
  * Write full block of '0' for read errors and non-seekable 
    output. (#255671) 

-------------------------------------------------------------------
Tue Nov  7 00:59:36 CET 2006 - garloff@suse.de

- dd_rhelp: head/tail require -n option (thanks to Bryant Ling)
- dd_rhelp: Use -y0 if ddrescue is 1.12 or newer.
- dd_rhelp: Require bc.

-------------------------------------------------------------------
Sat Jul 29 00:39:45 CEST 2006 - garloff@suse.de

- Update to dd_rescue-1.12:
  * Option -b: Log bad blocks to ASCII file
  * Option -y: Change fsync frequency (performance)

-------------------------------------------------------------------
Mon May 22 21:03:22 CEST 2006 - schwab@suse.de

- Don't strip binaries.

-------------------------------------------------------------------
Wed Jan 25 21:35:25 CET 2006 - mls@suse.de

- converted neededforbuild to BuildRequires

-------------------------------------------------------------------
Mon Feb 21 12:23:08 CET 2005 - garloff@suse.de

- Add autoreconf to dd_rhelp.

-------------------------------------------------------------------
Mon Feb 14 01:28:51 CET 2005 - garloff@suse.de

- Update to dd_rescue-1.11:
  * O_DIRECT needs aligned buffers (Raymund Will)
  * Compile fix for systems without O_DIRECT
- Update to dd_rhelp 0.06

-------------------------------------------------------------------
Sun Aug 29 01:07:20 CEST 2004 - garloff@suse.de

- Update to dd_rescue-1.10:
  * Support for non-seekable in-/output (pipes). 

-------------------------------------------------------------------
Sun Aug 29 00:59:42 CEST 2004 - garloff@suse.de

- Update to dd_rescue-1.04:
  * Include fix from Lab Valentin for dd_rhelp
  * Fix CPU load display overflow
  * Default soft block size now 64k instead of 16k
  * O_DIRECT supported (-d/-D)
  * option -p to copy permissions/owner/times
- Include dd_rhelp script (0.0.5) from Lab Valentin.

-------------------------------------------------------------------
Thu Jul 26 14:53:25 MEST 2001 - garloff@suse.de

- Update to version 1.02:
  * Better handling of partially successful reads.
  * Don't loop on EFBIG when writing.
  * Avoid errno checking if not necessary.

-------------------------------------------------------------------
Mon Apr 30 16:11:45 MEST 2001 - garloff@suse.de

- Bugfix release 1.01:
  * Don't loop trying to write to full partition (ENOSPC)
  * Fix compiler format warning (\% -> %%)
  * Add lots of const qualifiers
  * Optimize block zero checking routine

-------------------------------------------------------------------
Fri Feb  9 17:32:56 MET 2001 - garloff@suse.de

- #include <stdarg.h> to fix compilation error on variadic fns

-------------------------------------------------------------------
Sat Dec  9 18:25:20 MET 2000 - nashif@suse.de

-  sorted

-------------------------------------------------------------------
Wed Aug 30 22:59:45 CEST 2000 - garloff@suse.de

- Update to 1.00: Some preparation for supporting non-seekable
  in- or output. No support yet: Print warning and abort.

-------------------------------------------------------------------
Sat May 27 00:18:42 CEST 2000 - garloff@suse.de

- Update to 0.99: Use stderr to print messages instead of stdout
- Prepare allowing - as stdin/stdout (but pread/pwrite() will fail)
- Fix spelling in README
- Use BuildRoot

-------------------------------------------------------------------
Fri Jan 14 18:14:17 CET 2000 - garloff@suse.de

- Fixed README.dd_rescue.

-------------------------------------------------------------------
Wed Oct 27 03:42:25 CEST 1999 - garloff@suse.de

- Removed flushb. It belongs into util-linux.

-------------------------------------------------------------------
Wed Oct 20 01:47:59 CEST 1999 - garloff@suse.de

- Fixed typo in help. (b <-> B)

-------------------------------------------------------------------
Fri Oct 15 15:57:27 CEST 1999 - garloff@suse.de

- Initial release: 0.98.

