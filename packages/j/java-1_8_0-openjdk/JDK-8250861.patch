--- openjdk/hotspot/src/share/vm/opto/addnode.cpp	Fri Oct 30 08:13:31 2020 +0000
+++ openjdk/hotspot/src/share/vm/opto/addnode.cpp	Thu Aug 06 08:10:56 2020 +0200
@@ -918,7 +918,7 @@
 
     // Transform MIN2(x + c0, MIN2(x + c1, z)) into MIN2(x + MIN2(c0, c1), z)
     // if x == y and the additions can't overflow.
-    if (phase->eqv(x,y) &&
+    if (phase->eqv(x,y) && tx != NULL &&
         !can_overflow(tx, x_off) &&
         !can_overflow(tx, y_off)) {
       return new (phase->C) MinINode(phase->transform(new (phase->C) AddINode(x, phase->intcon(MIN2(x_off, y_off)))), r->in(2));
@@ -926,7 +926,7 @@
   } else {
     // Transform MIN2(x + c0, y + c1) into x + MIN2(c0, c1)
     // if x == y and the additions can't overflow.
-    if (phase->eqv(x,y) &&
+    if (phase->eqv(x,y) && tx != NULL &&
         !can_overflow(tx, x_off) &&
         !can_overflow(tx, y_off)) {
       return new (phase->C) AddINode(x,phase->intcon(MIN2(x_off,y_off)));

