-------------------------------------------------------------------
Thu May  2 17:49:33 UTC 2024 - Johannes Kastl <opensuse_buildservice@ojkastl.de>

- update to 0.17.0:
  * Breaking changes
    - The default template aliases were replaced as follows:
      builtin_op_log_root(op_id: OperationId) ->
        format_root_operation(root: Operation)
      builtin_log_root(change_id: ChangeId, commit_id: CommitId) ->
        format_root_commit(root: Commit)
      builtin_change_id_with_hidden_and_divergent_info ->
        format_short_change_id_with_hidden_and_divergent_info(commit: Commit)
    - The --revision option of jj rebase is renamed to --revisions.
      The short alias -r is still supported.
  * New features
    - The list of conflicted paths is printed whenever the working
      copy changes.
      This can be disabled with the --quiet option.
    - Commit objects in templates now have a mine() -> Boolean
      method analog to the same function in revsets. It evaluates
      to true if the email of the commit author matches the current
      user.email.
    - Commit objects in templates now have a contained_in(revset:
      String) -> Boolean method.
    - Operation objects in templates now have a snapshot() ->
      Boolean method that evaluates to true if the operation was a
      snapshot created by a non-mutating command (e.g. jj log).
    - Revsets and templates now support single-quoted raw string
      literals.
    - A new config option ui.always-allow-large-revsets has been
      added to allow large revsets expressions in some commands,
      without the all: prefix.
    - A new config option ui.allow-filesets has been added to
      enable "fileset" expressions. Note that filesets are
      currently experimental, but will be enabled by default in a
      future release.
    - A new global flag --ignore-immutable lets you rewrite
      immutable commits.
    - New command jj parallelize that rebases a set of revisions
      into siblings.
    - jj status now supports filtering by paths. For example, jj
      status . will only list changed files that are descendants of
      the current directory.
    - jj prev and jj next now work when the working copy revision
      is a merge.
    - jj squash now accepts a --use-destination-message/-u option
      that uses the description of the destination for the new
      squashed revision and discards the descriptions of the source
      revisions.
    - You can check whether Watchman fsmonitor is enabled or
      installed with the new jj debug watchman status command.
    - jj rebase now accepts revsets resolving to multiple revisions
      with the --revisions/-r option.
    - jj rebase -r now accepts --insert-after and --insert-before
      options to customize the location of the rebased revisions.
  * Fixed bugs
    - Revsets now support \-escapes in string literal.
    - The builtin diff editor now allows empty files to be selected
      during jj split.
    - Fixed a bug with jj split introduced in 0.16.0 that caused it
      to incorrectly rebase the children of the revision being
      split if they had other parents (i.e. if the child was a
      merge).
    - The snapshot.max-new-file-size option can now handle raw
      integer literals, interpreted as a number of bytes, where
      previously it could only handle string literals. This means
      that snapshot.max-new-file-size="1" and
      snapshot.max-new-file-size=1 are now equivalent.
    - jj squash <path> is now a no-op if the path argument didn't
      match any paths (it used to create new commits with bumped
      timestamp). #3334

-------------------------------------------------------------------
Thu Apr  4 05:15:23 UTC 2024 - Johannes Kastl <opensuse_buildservice@ojkastl.de>

- update to 0.16.0:
  * Deprecations
    - jj move was deprecated in favor of jj squash.
  * Breaking changes
    - The git_head template keyword now returns an optional value
      instead of a list of 0 or 1 element.
    - The jj sparse set --edit/--reset flags were split up into jj
      sparse edit/reset subcommands respectively.
    - The jj sparse subcommands now parse and print patterns as
      workspace-relative paths.
    - The jj log command no longer uses the default revset when a
      path is specified.
  * New features
    - Config now supports rgb hex colors (in the form #rrggbb)
      wherever existing color names are supported.
    - ui.default-command now accepts multiple string arguments, for
      more complex default jj commands.
    - Graph node symbols are now configurable via templates
      * templates.log_node
      * templates.op_log_node
    - jj log now includes synthetic nodes in the graph where some
      revisions were elided.
    - jj squash now accepts --from and --into (also aliased as
      --to) if -r is not specified. It can now be used for all use
      cases where jj move could previously be used. The --from
      argument accepts a revset that resolves to more than one
      revision.
    - Commit templates now support immutable keyword.
    - New template function coalesce(content, ..) is added.
    - Timestamps are now shown in local timezone and without
      milliseconds and timezone offset by default.
    - jj git push now prints messages from the remote.
    - jj branch list now supports a --conflicted/-c option to show
      only conflicted branches.
    - jj duplicate and jj abandon can now take more than a single
      -r argument, for consistency with other commands.
    - jj branch list now allows combining -r REVISIONS/NAMES and -a
      options.
    - --all is now named --all-remotes for jj branch list
    - There is a new global --quiet flag to silence commands'
      non-primary output.
    - jj split now supports a --siblings/-s option that splits the
      target revision into siblings with the same parents and
      children.
    - new function working_copies() for revsets to show the working
      copy commits of all workspaces.
  * Fixed bugs
    - None

-------------------------------------------------------------------
Sat Mar 16 17:29:53 UTC 2024 - Johannes Kastl <opensuse_buildservice@ojkastl.de>

- update to 0.15.1:
  * No code changes (fixing Rust Cargo.toml stuff).
- BuildRequire gnupg to fix failing tests

-------------------------------------------------------------------
Sat Mar 16 17:09:19 UTC 2024 - Johannes Kastl <opensuse_buildservice@ojkastl.de>

- update to 0.15.0:
  * Breaking changes
    - The minimum supported Rust version (MSRV) is now 1.76.0.
    - The on-disk index format changed. New index files will be
      created automatically, but it can fail if the repository is
      co-located and predates Git GC issues #815. If reindexing
      failed, you'll need to clean up corrupted operation history
      by jj op abandon ..<bad operation ID>.
    - Dropped support for the "legacy" graph-drawing style. Use
      "ascii" for a very similar result.
    - The default log output no longer lists all tagged heads. Set
      revsets.log = "@ | ancestors(immutable_heads().., 2) |
      heads(immutable_heads())" to restore the old behavior.
    - Dropped support for the deprecated : revset operator. Use ::
      instead.
    - jj rebase --skip-empty no longer abandons commits that were
      already empty before the rebase.
  * New features
    - Partial support for commit signing. Currently you can
      configure jj to "keep" commit signatures by making new ones
      for rewritten commits, and to sign new commits when they are
      created.
      This comes with out-of-the-box support for the following
      backends:
        â€” GnuPG
        - SSH
    - Signature verification and an explicit sign command will
      hopefully come soon.
    - Templates now support logical operators: ||, &&, !
    - Templates now support the self keyword, which is the current
      commit in jj log/obslog templates.
    - jj show now accepts -T/--template option to render its output
      using template
    - jj config list now accepts -T/--template option.
    - jj git fetch now accepts -b as a shorthand for --branch,
      making it more consistent with other commands that accept a
      branch
    - In the templating language, Timestamps now have a .local()
      method for converting to the local timezone.
    - jj next/prev now infer --edit when you're already editing a
      non-head commit (a commit with children).
    - A new built-in pager named :builtin is available on all
      platforms, implemented with minus
    - Set config ui.log-synthetic-elided-nodes = true to make jj
      log include synthetic nodes in the graph where some revisions
      were elided (#1252, #2971). This may become the default
      depending on feedback.
    - When creating a new workspace, the sparse patterns are now
      copied over from the current workspace.
    - jj git init --colocate can now import an existing Git
      repository. This is equivalent to jj git init --git-repo=..
    - jj git fetch now automatically prints new remote branches and
      tags by default.
    - --verbose/-v is now --debug (no short option since it's not
      intended to be used often)
    - jj move --from/--to can now be abbreviated to jj move -f/-t
    - jj commit/diffedit/move/resolve/split/squash/unsquash now
      accept --tool=<NAME> option to override the default.  #2575
    - Added completions for Nushell to jj util completion
    - jj branch list now supports a --tracked/-t option which can
      be used to show tracked branches only. Omits local
      Git-tracking branches by default.
    - Commands producing diffs now accept a --context flag for the
      number of lines of context to show.
    - jj commands with the -T/--template option now provide a hint
      containing defined template names when no argument is given,
      assisting the user in making a selection.
  * Fixed bugs
    - On Windows, symlinks in the repo are now supported when
      Developer Mode is enabled.  When symlink support is
      unavailable, they will be materialized as regular files in
      the working copy (instead of resulting in a crash).  #2
    - On Windows, the :builtin pager is now used by default, rather
      than being disabled entirely.
    - Auto-rebase now preserves the shape of history even for merge
      commits where one parent is an ancestor of another.  #2600

-------------------------------------------------------------------
Thu Feb  8 06:50:56 UTC 2024 - Johannes Kastl <opensuse_buildservice@ojkastl.de>

- update to 0.14.0:
  * Deprecations
    - jj checkout and jj merge are both deprecated; use jj new
      instead to replace both of these commands in all instances.
      Rationale: jj checkout and jj merge both implement identical
      functionality, which is a subset of jj new. checkout creates
      a new working copy commit on top of a single specified
      revision, i.e. with one parent.  merge creates a new working
      copy commit on top of at least two specified revisions, i.e.
      with two or more parents.
      The only difference between these commands and jj new, which
      also creates a new working copy commit, is that new can
      create a working copy commit on top of any arbitrary number
      of revisions, so it can handle both the previous cases at
      once. The only actual difference between these three commands
      is the command syntax and their name. These names were chosen
      to be familiar to users of other version control systems, but
      we instead encourage all users to adopt jj new instead; it is
      more general and easier to remember than both of these.
      jj checkout and jj merge will no longer be shown as part of
      jj help, but will still function for now, emitting a warning
      about their deprecation.
      Deadline: jj checkout and jj merge will be deleted and are
      expected become a hard error later in 2024.
    - jj init --git and jj init --git-repo are now deprecated and
      will be removed in the near future.  Use jj git init instead.
  * Breaking changes
    - (Minor) Diff summaries (e.g. jj diff -s) now use D for
      "Deleted" instead of R for "Removed". @joyously pointed out
      that R could also mean "Renamed".
    - jj util completion now takes the shell as a positional
      argument, not a flag.  the previous behavior is deprecated,
      but supported for now. it will be removed in the future.
  * New features
    - jj util completion now supports powershell and elvish.
    - Official binaries for macOS running on Apple Silicon
      (aarch64-apple-darwin) are now available, alongside the
      existing macOS x86 binaries.
    - New jj op abandon command is added to clean up the operation
      history. Git refs and commit objects can be further compacted
      by jj util gc.
    - jj util gc now removes unreachable operation, view, and Git
      objects.
    - jj branch rename will now warn if the renamed branch has a
      remote branch, since those will have to be manually renamed
      outside of jj.
    - jj git push gained a --tracked option, to push all the
      tracked branches.
    - There's now a virtual root operation, similar to the virtual
      root commit. It appears at the end of jj op log.
    - jj config list gained a --include-overridden option to allow
      printing overridden config values.
    - jj config list now accepts --user or --repo option to specify
      config origin.
    - New jj config path command to print the config file path
      without launching an editor.
    - jj tag list command prints imported git tags.
    - jj next and jj prev now prompt in the event of the
      next/previous commit being ambiguous, instead of failing
      outright.
    - jj resolve now displays the file being resolved.
    - jj workspace root was aliased to jj root, for ease of
      discoverability
    - jj diff no longer shows the contents of binary files.
    - jj git now has an init command that initializes a git backed
      repo.
    - New template function surround(prefix, suffix, content) is
      added.
  * Fixed bugs
    - Fixed snapshots of symlinks in gitignore-d directory.  #2878
    - Fixed data loss in dirty working copy when checked-out branch
      is rebased or abandoned by Git.  #2876

-------------------------------------------------------------------
Sun Jan  7 15:42:43 UTC 2024 - Johannes Kastl <opensuse_buildservice@ojkastl.de>

- update to 0.13.0:
  * Breaking changes
    - `jj git fetch` no longer imports new remote branches as local
      branches. Set `git.auto-local-branch = true` to restore the
      old behavior.
  * New features
    - Information about new and resolved conflicts is now printed
      by every command.
    - `jj branch` has gained a new `rename` subcommand that allows
      changing a branch name atomically. `jj branch help rename`
      for details.
  * Fixed bugs
    - Command aliases can now be loaded from repository config
      relative to the current working directory.
      [#2414](https://github.com/martinvonz/jj/issues/2414)

-------------------------------------------------------------------
Wed Dec  6 12:15:35 UTC 2023 - Johannes Kastl <kastl@b1-systems.de>

- update to 0.12.0:
  * Breaking changes
    - The remote_branches() revset no longer includes branches
      exported to the Git repository (so called Git-tracking
      branches.)
    - jj branch set no longer creates a new branch. Use jj branch
      create instead.
    - jj init --git in an existing Git repository now errors and
      exits rather than creating a second Git store.
  * New features
    - jj workspace add can now take multiple --revision arguments,
      which will create a new workspace with its working-copy
      commit on top of all the parents, as if you had run
      jj new r1 r2 r3 ....
    - You can now set git.abandon-unreachable-commits = false to
      disable the usual behavior where commits that became
      unreachable in the Git repo are abandoned (#2504).
    - jj new gained a --no-edit option to prevent editing the newly
      created commit. For example, jj new a b --no-edit -m Merge
      creates a merge commit without affecting the working copy.
    - jj rebase now takes the flag --skip-empty, which doesn't copy
      over commits that would become empty after a rebase.
    - There is a new jj util gc command for cleaning up the
      repository storage.  For now, it simply runs git gc on the
      backing Git repo (when using the Git backend).
  * Fixed bugs
    - Fixed another file conflict resolution issue where jj status
      would disagree with the actual file content. #2654

-------------------------------------------------------------------
Wed Nov 01 19:12:45 UTC 2023 - kastl@b1-systems.de

- Update to version 0.11.0:
  * Breaking changes
    - Conflicts are now stored in a different way. Commits written
      by a new jj binary will not be read correctly by older jj
      binaries. The new model solves some performance problems with
      the old model. For example, jj log should be noticeably
      faster on large repos. You may need to create a new clone to
      see the full speedup.
    - The remote_branches() revset now includes branches exported
      to the Git repository (so called Git-tracking branches.) Use
      remote_branches(remote=exact:"origin") to query branches of
      certain remote.
    - Status messages are now printed to stderr.
    - jj config set now interprets the value as TOML also if it's a
      valid TOML array or table. For example, jj config set --user
      'aliases.n' '["new"]'
    - Remote branches now have tracking or non-tracking flags. The
      git.auto-local-branch setting is applied only to newly
      fetched remote branches. Existing remote branches are
      migrated as follows:
      - If local branch exists, the corresponding remote branches
        are considered tracking branches.
      - Otherwise, the remote branches are non-tracking branches.
    - If the deduced tracking flags are wrong, use jj branch
      track/untrack commands to fix them up.
    - See automatic local branch creation for details.
    - Non-tracking remote branches aren't listed by default. Use jj
      branch list --all to show all local and remote branches.
    - It's not allowed to push branches if non-tracking remote
      branches of the same name exist.
    - Pushing deleted/moved branches no longer abandons the local
      commits referenced by the remote branches.
    - jj git fetch --branch now requires glob: prefix to expand *
      in branch name.
  * New features
    - jj's stable release can now be installed with cargo binstall
      jj-cli.
    - jj workspace add now takes a --revision argument.
    - jj workspace forget can now forget multiple workspaces at
      once.
    - branches()/remote_branches()/author()/committer()/description()
      revsets now support glob matching.
    - jj branch delete/forget/list, and jj git push --branch now
      support string pattern syntax. The --glob option is
      deprecated in favor of glob: pattern.
    - The branches/tags/git_refs/git_head template keywords now
      return a list of RefNames. They were previously pre-formatted
      strings.
    - The new template keywords local_branches/remote_branches are
      added to show only local/remote branches.
    - jj workspace add now preserves all parents of the old
      working-copy commit instead of just the first one.
    - jj rebase -r gained the ability to rebase a revision A onto a
      descendant of A.
  * Fixed bugs
    - Updating the working copy to a commit where a file that's
      currently ignored in the working copy no longer leads to a
      crash (#976).
    - Conflicts in executable files can now be resolved just like
      conflicts in non-executable files (#1279).
    - jj new --insert-before and --insert-after now respect
      immutable revisions (#2468).

-------------------------------------------------------------------
Mon Oct  9 15:49:09 UTC 2023 - Johannes Kastl <kastl@b1-systems.de>

- new package jujutsu: A Git-compatible DVCS that is both simple
  and powerful
