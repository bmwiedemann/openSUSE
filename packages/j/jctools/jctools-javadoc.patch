--- JCTools-3.3.0/jctools-core/src/main/java/org/jctools/maps/NonBlockingHashMap.java	2023-10-26 07:08:16.040888020 +0200
+++ JCTools-3.3.0/jctools-core/src/main/java/org/jctools/maps/NonBlockingHashMap.java	2023-10-26 07:19:05.898682142 +0200
@@ -1412,8 +1412,8 @@
    *  requires the creation of {@link java.util.Map.Entry} objects with each
    *  iteration.  The {@link NonBlockingHashMap} does not normally create or
    *  using {@link java.util.Map.Entry} objects so they will be created soley
-   *  to support this iteration.  Iterating using {@link Map#keySet} or {@link
-   *  Map##values} will be more efficient.
+   *  to support this iteration.  Iterating using {@link Map#keySet}
+   *  will be more efficient.
    */
   @Override
   public Set<Map.Entry<TypeK,TypeV>> entrySet() {
--- JCTools-3.3.0/jctools-core/src/main/java/org/jctools/maps/NonBlockingIdentityHashMap.java	2023-10-26 07:08:16.040888020 +0200
+++ JCTools-3.3.0/jctools-core/src/main/java/org/jctools/maps/NonBlockingIdentityHashMap.java	2023-10-26 07:20:15.902495982 +0200
@@ -1255,8 +1255,8 @@
    *  requires the creation of {@link java.util.Map.Entry} objects with each
    *  iteration.  The {@link NonBlockingIdentityHashMap} does not normally create or
    *  using {@link java.util.Map.Entry} objects so they will be created soley
-   *  to support this iteration.  Iterating using {@link Map#keySet} or {@link
-   *  Map##values} will be more efficient.
+   *  to support this iteration.  Iterating using {@link Map#keySet}
+   *  will be more efficient.
    */
   @Override
   public Set<Map.Entry<TypeK,TypeV>> entrySet() {
