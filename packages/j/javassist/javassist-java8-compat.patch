Index: javassist-rel_3_28_0_ga/src/main/javassist/Loader.java
===================================================================
--- javassist-rel_3_28_0_ga.orig/src/main/javassist/Loader.java
+++ javassist-rel_3_28_0_ga/src/main/javassist/Loader.java
@@ -421,9 +421,6 @@ public class Loader extends ClassLoader
     }
 
     private boolean isDefinedPackage(String name) {
-        if (ClassFile.MAJOR_VERSION >= ClassFile.JAVA_9)
-            return getDefinedPackage(name) == null;
-        else
             return getPackage(name) == null;
     }
 
Index: javassist-rel_3_28_0_ga/src/main/javassist/util/proxy/DefineClassHelper.java
===================================================================
--- javassist-rel_3_28_0_ga.orig/src/main/javassist/util/proxy/DefineClassHelper.java
+++ javassist-rel_3_28_0_ga/src/main/javassist/util/proxy/DefineClassHelper.java
@@ -317,23 +317,5 @@ public class DefineClassHelper {
         }
     }
 
-    /**
-     * Loads a class file by {@code java.lang.invoke.MethodHandles.Lookup}.
-     *
-     * @since 3.22
-     */
-    static Class<?> toPublicClass(String className, byte[] bcode)
-        throws CannotCompileException
-    {
-        try {
-            Lookup lookup = MethodHandles.lookup();
-            lookup = lookup.dropLookupMode(java.lang.invoke.MethodHandles.Lookup.PRIVATE);
-            return lookup.defineClass(bcode);
-        }
-        catch (Throwable t) {
-            throw new CannotCompileException(t);
-        }
-    }
-
     private DefineClassHelper() {}
 }
Index: javassist-rel_3_28_0_ga/src/main/javassist/util/proxy/FactoryHelper.java
===================================================================
--- javassist-rel_3_28_0_ga.orig/src/main/javassist/util/proxy/FactoryHelper.java
+++ javassist-rel_3_28_0_ga/src/main/javassist/util/proxy/FactoryHelper.java
@@ -148,11 +148,7 @@ public class FactoryHelper {
     {
         try {
             byte[] b = toBytecode(cf);
-            if (ProxyFactory.onlyPublicMethods)
-                return DefineClassHelper.toPublicClass(cf.getName(), b);
-            else
-                return DefineClassHelper.toClass(cf.getName(), neighbor,
-                                                 loader, domain, b);
+            return DefineClassHelper.toClass(cf.getName(), neighbor, loader, domain, b);
         }
         catch (IOException e) {
             throw new CannotCompileException(e);
