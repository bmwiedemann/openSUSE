-------------------------------------------------------------------
Thu Sep  5 14:12:43 UTC 2024 - Anton Shvetz <shvetz.anton@gmail.com>

- Upgrade to version 2.12.7
  * Update time zone data to 2024agtz
- Upgrade to version 2.12.6
  * Enhance DateTimeZone.forID() to better match java.time. Fixes
    #733, #717.
  * Better error message in DateTimeFormat. Fixes #731.
  * DateTimeZone data updated to version 2023dgtz.
- Upgrade to version 2.12.5
  * DateTimeZone data updated to version 2023cgtz.
- Upgrade to version 2.12.4
  * DateTimeZone data updated to version 2023bgtz.
- Upgrade to version 2.12.3
  * DateTimeZone data updated to version 2023agtz.
- Upgrade to version 2.12.2
  * DateTimeZone data updated to version 2022ggtz.
- Upgrade to version 2.12.1
  * Add/fix translations for iw, sq.
  * DateTimeZone data updated to version 2022fgtz.
- Upgrade to version 2.12.0
  * Add translations for ca, el, eu, fi, hi, hu, in, iw, ms, nn,
    ro, sk, sv, zh.
  * DateTimeZone data updated to version 2022egtz.
- Upgrade to version 2.11.2
  * DateTimeZone data updated to version 2022dgtz.
  * Switch LGTM to CodeQL.
- Upgrade to version 2.11.1
  * Update build scripts and fix static analysis warnings.
  * Switch master to main.
  * DateTimeZone data updated to version 2022cgtz.
- Upgrade to version 2.11.0
  * Change DateTimeZone to use
    'org.joda.time.DateTimeZone.Timezone' instead of
    'user.timezone'. This change causes Joda-Time to query
    'TimeZone.getDefault()' in most cases. In most cases this
    change will have no effect on application code, as
    'user.timezone' will be picked up by 'TimeZone.getDefault()'
    instead. If you specifically need to stop Joda-Time calling
    'TimeZone.getDefault()' then you will need to change to use the
    new system property 'org.joda.time.DateTimeZone.Timezone'.
    Fixes #587.
  * Avoid using == on objects. Fixes #581.
  * DateTimeZone data updated to version 2022bgtz. This uses the
    new global-tz project that reinstates all the data removed by
    IANA's TZDB. See
    https://github.com/JodaOrg/joda-time/issues/566
- Upgrade to version 2.10.14
  * DateTimeZone data updated to version 2022agtz. This uses the
    new global-tz project that reinstates all the data removed by
    IANA's TZDB. See
    https://github.com/JodaOrg/joda-time/issues/566
- Upgrade to version 2.10.13
  * DateTimeZone data updated to version 2021efork. See
    https://github.com/JodaOrg/joda-time/issues/566
- Upgrade to version 2.10.12
  * DateTimeZone data updated to version 2021bfork3. See
    https://github.com/JodaOrg/joda-time/issues/566
- Upgrade to version 2.10.11
  * Defend against possible release of hugely damaging timezone
    data. See https://github.com/JodaOrg/joda-time/issues/566
- Upgrade to version 2.10.10
  * DateTimeZone data updated to version 2021a.
- Upgrade to version 2.10.9
  * DateTimeZone data updated to version 2020e. Fix to time-zone
    compiler.
- Upgrade to version 2.10.8
  * DateTimeZone data updated to version 2020d. Remove systemv and
    pacificnew time zones as per TZDB changes.
- Upgrade to version 2.10.7
  * DateTimeZone data updated to version 2020c. Remove systemv and
    pacificnew time zones as per TZDB changes.
  * Better error message for year-month-day. Fixes #540.
  * Fix localization for Russia. Fixes #533.
- Upgrade to version 2.10.6
  * DateTimeZone data updated to version 2020a.
  * Add localization for Ukraine. Fixes #523.
- Upgrade to version 2.10.5
  * Updated Joda-Convert version.
- Upgrade to version 2.10.4
  * DateTimeZone data updated to version 2019c.
- Upgrade to version 2.10.3
  * DateTimeZone data updated to version 2019b.
- Remove patch:
  * joda-time-fix-tests.patch
    + not needed anymore
- Add JPMS and OSGI metadata to the manifest

-------------------------------------------------------------------
Wed Feb 21 13:51:02 UTC 2024 - Fridrich Strba <fstrba@suse.com>

- Use %patch -P N instead of deprecated %patchN.

-------------------------------------------------------------------
Tue Mar 22 17:21:42 UTC 2022 - Fridrich Strba <fstrba@suse.com>

- Build with java source and target levels 8

-------------------------------------------------------------------
Wed Feb  6 12:28:46 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to version 2.10.1
  * Fix time-zone compiler for Namibia. Fixes #485.
  * Fix time-zone compiler for Tokyo. 
  * Handle negative SAVE values in tzdb.
  * Add Instant.EPOCH. See #472.
  * Clarify negative durations. See #465.
  * Add Instant.ofEpochMilli(). Add Instant.ofEpochSecond().
    Fixes #458.
  * Add automatic module name for Java SE 9.
  * Add Kazakh language translations. Fixes #446
  * Avoid double addition when using lenient chronology. Fixes #432.
  * Clarify Period.fieldDifference() Javadoc.
  * Clarify Instant.withMillis() Javadoc. Fixes jodaorg.github.io#5
  * Add ZoneInfoProvider() constructor.
  * Optimise release process.
  * DateTimeZone data updated to version 2017b.
  * Handle plus/minus of Integer.MIN_VALUE/MAX_VALUE months
    correctly. Fixes #418.
  * Clarify time fields are based on the local time-line.
    Fixes #415.
  * Fix spelling mistakes. Fixes #412.
  * Fix DateTimePrinterInternalPinter that outputs data twice.
    Fixes #409.
  * Support conversion of old TimeZone where name has digits other
    than ASCII [#381]
  * Add Norwegian period translations [#378]
  * Add Duration.dividedBy(long,RoundingMode) [#69, #379]
  * Fixed bug where clock read twice when comparing two nulls in
    DateTimeComparator [#404]
  * Fixed minor issues with historic time-zone data [#373]
  * Fix bug in time-zone binary search [#332, #386] The fix in
    v2.9.2  caused problems when the time-zone being parsed was not
    the last element in the input string. New approach uses a
    different approach to the problem.
  * Update tests for JDK 9 [#394]
  * Close buffered reader correctly in zone info compiler [#396]
  * Handle locale correctly zone info compiler [#397]
  * Loading time-zone provider now occurs in a privileged block
    [#327, #375]
  * Make DateTimeUtils.SYSTEM_MILLIS_PROVIDER public [#357]
  * Fix bug when adding months at the maximum limits of integer
    [#361]
  * Add Turkish period translations [#364]
  * Fix bug in time-zone binary search [#332]
  * Minor fixes to code internals [#339, #326, #344, #350, #343]
  * Better document behaviour [#325]
  * Fix bug introduced by Long.MIN_VALUE and Long.MAX_VALUE changes
    [#328]
  * Faster parsing of time-zone identifiers [#282]
  * Added Interval.parseWithOffset(String) [#299, #296] Provides a
    way to parse the fixed offset in an interval string
  * Add DateTimeFormatter methods for StringBuilder [#298]
  * Add Russian period translations [#320]
  * Add Italian period translations [#312]
  * Add Czech period translations [#313]
  * Clarify that PeriodFormatterBuilder is in an invalid state once
    built [#309]
  * Allow DateTime and Interval to refer to values at Long.MIN_VALUE
    and Long.MAX_VALUE [#297, #190] A DateTime may be created with
    any millisecond value, however at the very edges there may be
    some undesirable effects, for example always using UTC instead
    of the time-zone
  * Better error message for malformed tzdb files [#319]
  * Better error message for interval constructor [#321]
  * Fixed to handle JDK 8u60 [#288, #291] Without this fix,
    formatting a time-zone will print "+00:00" instead of "GMT" for
    the GMT time-zone
  * Fix parsing of basic form ISO style where year has unnecessary
    plus sign [#86] For example, +20151030 will now be correctly
    parsed as year 2015.
  * Fix overflow bug in intervals [#315]
- Removed patches:
  * joda-time-1.6-sourcetarget.patch
    + correct source and target levels specified in the ant
	  build.xml file
  * joda-time-use-system-junit.patch
    + not needed any more, since we are not running tests for the
	  while
- Added patch:
  + joda-time-fix-tests.patch
    + fix java version parsing for versions > 9
- DateTimeZone data updated to version 2018i
- Add build.xml file to allow build with ant

-------------------------------------------------------------------
Mon Nov 19 17:20:45 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Add maven pom file and register joda-time as a maven artifact

-------------------------------------------------------------------
Tue Sep 19 09:33:47 UTC 2017 - fstrba@suse.com

- Added patch:
  * joda-time-1.6-sourcetarget.patch
    + make compile.source and compile.target properties that can be
      specified on command-line
- Build with java source and target level 1.6 in order to allow
  building with jdk9

-------------------------------------------------------------------
Tue Jul  8 10:55:07 UTC 2014 - tchvatal@suse.com

- Do not depend on ant-nodeps.

-------------------------------------------------------------------
Mon Sep  9 11:06:05 UTC 2013 - tchvatal@suse.com

- Move from jpackage-utils to javapackage-tools

-------------------------------------------------------------------
Thu Apr 29 00:59:20 CEST 2010 - ro@suse.de

- update timezone data to current 2010h 

-------------------------------------------------------------------
Thu Apr 29 00:56:26 CEST 2010 - ro@suse.de

- remove needless buildroot cleaning st start of install section 

-------------------------------------------------------------------
Fri Jul 24 00:00:00 CET 2009 - rel-eng@lists.fedoraproject.org

- Rebuilt for https://fedoraproject.org/wiki/Fedora_12_Mass_Rebuild

-------------------------------------------------------------------
Wed Feb 25 00:00:00 CET 2009 - rel-eng@lists.fedoraproject.org

- Rebuilt for https://fedoraproject.org/wiki/Fedora_11_Mass_Rebuild

-------------------------------------------------------------------
Fri Dec 12 00:00:00 CET 2008 - konrad@tylerc.org

- New upstream version (1.6).

-------------------------------------------------------------------
Fri Oct 31 00:00:00 CET 2008 - konrad@tylerc.org

- New tzdata.

-------------------------------------------------------------------
Mon Oct 13 00:00:00 CET 2008 - konrad@tylerc.org

- New tzdata (2008g).

-------------------------------------------------------------------
Sat Aug 23 00:00:00 CET 2008 - konrad@tylerc.org

- New version with new tzdata (2008e).

-------------------------------------------------------------------
Sat Jul 19 00:00:00 CET 2008 - konrad@tylerc.org

- New version with new tzdata (2008d).

-------------------------------------------------------------------
Mon Jun 09 00:00:00 CET 2008 - konrad@tylerc.org

- New version with new tzdata (2008c).

-------------------------------------------------------------------
Sun Apr 06 00:00:00 CET 2008 - konrad@tylerc.org

- Don't compile GCJ bits yet as we hit some GCJ bug.

-------------------------------------------------------------------
Sat Apr 05 00:00:00 CET 2008 - konrad@tylerc.org

- Update to tzdata2008b.
- Use unversioned jar.
- Some small things to comply with Java Packaging Guidelines.
- GCJ support.

-------------------------------------------------------------------
Mon Mar 17 00:00:00 CET 2008 - konrad@tylerc.org

- Many small changes from bz# 436239 comment 6.
- Change -javadocs to -javadoc in accordance with java packaging
  guidelines draft.

-------------------------------------------------------------------
Sun Mar 16 00:00:00 CET 2008 - konrad@tylerc.org

- Use system junit via Mamoru Tasaka's patch.

-------------------------------------------------------------------
Mon Mar 03 00:00:00 CET 2008 - konrad@tylerc.org

- Initial package.

