<?xml version="1.0" encoding="UTF-8"?>

<project name="jline" default="package" basedir=".">

  <!-- ====================================================================== -->
  <!-- Build environment properties                                           -->
  <!-- ====================================================================== -->

  <property file="build.properties"/>

  <property name="project.groupId" value="jline"/>
  <property name="project.artifactId" value="jline"/>
  <property name="project.name" value="JLine"/>
  <property name="project.version" value="2.14.6"/>

  <property name="compiler.source" value="1.6"/>
  <property name="compiler.target" value="${compiler.source}"/>

  <property name="build.finalName" value="${project.artifactId}-${project.version}"/>
  <property name="build.dir" value="target"/>
  <property name="build.outputDir" value="${build.dir}/classes"/>
  <property name="build.srcDir" value="src/main/java"/>
  <property name="build.resourceDir" value="src/main/resources"/>

  <property name="reporting.outputDirectory" value="${build.dir}/site"/>

  <!-- ====================================================================== -->
  <!-- Defining classpaths                                                    -->
  <!-- ====================================================================== -->

  <path id="build.classpath">
    <fileset dir="lib">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <!-- ====================================================================== -->
  <!-- Cleaning up target                                                     -->
  <!-- ====================================================================== -->

  <target name="clean" description="Clean the output directory">
    <delete dir="${build.dir}"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Compilation target                                                     -->
  <!-- ====================================================================== -->

  <target name="compile" description="Compile the code">
    <mkdir dir="${build.outputDir}"/>
    <javac destdir="${build.outputDir}"
           nowarn="true"
           debug="true"
           optimize="false"
           deprecation="true"
           encoding="UTF-8"
           target="${compiler.target}"
           verbose="false"
           fork="true"
           source="${compiler.source}">
      <src>
        <pathelement location="${build.srcDir}"/>
      </src>
      <classpath refid="build.classpath"/>
    </javac>
    <copy todir="${build.outputDir}">
      <fileset dir="${build.resourceDir}">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <!-- ====================================================================== -->
  <!-- Javadoc target                                                         -->
  <!-- ====================================================================== -->

  <target name="javadoc" description="Generates the Javadoc of the application">
    <javadoc sourcepath="${build.srcDir}"
             packagenames="*"
             destdir="${reporting.outputDirectory}/apidocs"
             access="protected"
             source="${compiler.source}"
             verbose="false"
             version="true"
             use="true"
             author="true"
             splitindex="false"
             nodeprecated="false"
             nodeprecatedlist="false"
             notree="false"
             noindex="false"
             nohelp="false"
             nonavbar="false"
             serialwarn="false"
             encoding="UTF-8"
             linksource="false"
             breakiterator="false">
      <classpath refid="build.classpath"/>
    </javadoc>
  </target>

  <!-- ====================================================================== -->
  <!-- Package target                                                         -->
  <!-- ====================================================================== -->

  <target name="package" depends="compile" description="Package the application">
    <jar jarfile="${build.dir}/${build.finalName}.jar" 
         compress="true" 
         index="false" 
         basedir="${build.outputDir}" 
         excludes="**/package.html">
      <manifest>
		<attribute name="Bundle-ManifestVersion" value="2"/>
		<attribute name="Bundle-Name" value="${project.name}"/>
		<attribute name="Bundle-SymbolicName" value="${project.artifactId}"/>
		<attribute name="Bundle-Version" value="${project.version}"/>
		<attribute name="Export-Package" value="jline;uses:=&quot;jline.internal&quot;;version=&quot;${project.version}&quot;,jline.console;uses:=&quot;jline,jline.console.completer,jline.console.history&quot;;version=&quot;${project.version}&quot;,jline.console.completer;uses:=&quot;jline.console&quot;;version=&quot;${project.version}&quot;,jline.console.history;version=&quot;${project.version}&quot;,jline.console.internal;version=&quot;${project.version}&quot;,jline.internal;version=&quot;${project.version}&quot;"/>
		<attribute name="Import-Package" value="org.fusesource.jansi;version=&quot;[1.17,2)&quot;,javax.swing;resolution:=optional"/>
		<attribute name="JavaPackages-ArtifactId" value="${project.artifactId}"/>
		<attribute name="JavaPackages-GroupId" value="${project.groupId}"/>
		<attribute name="JavaPackages-Version" value="${project.version}"/>
		<attribute name="Require-Capability" value="osgi.ee;filter:=&quot;(&amp;(osgi.ee=JavaSE)(version=${compiler.target}))&quot;"/>
	  </manifest>
    </jar>
  </target>

  <!-- ====================================================================== -->
  <!-- A dummy target for the package named after the type it creates         -->
  <!-- ====================================================================== -->

  <target name="jar" depends="package" description="Builds the jar for the application"/>

</project>
