-------------------------------------------------------------------
Sun Sep 15 04:46:33 UTC 2024 - Anton Shvetz <shvetz.anton@gmail.com>

- Update to version 1.20.0
  * New Features
    + Add CoverageValidator CoveragePolygonValidator (#900)
    + Add CoverageGapFinder (#900)
    + Add CoverageUnion (#900)
    + Add CoverageSimplifier (#911)
    + Add OverlayNG support for simple GeometryCollection inputs
      (#915)
    + Add Geometry.hasDimension(int dim) method (#944)
    + Add ConcaveHull.alphaShape function (#952)
    + Add OffsetCurve Joined mode (#956)
    + Add PointLocation.isOnSegment function (#1048)
    + Add RelateNG API for improved topological relationship
      functionality and performance (#1052, #1055)
    + Add system property jts.relate=ng to enable use of RelateNG
      in Geometry methods (#1073)
  * Functionality Improvements
    + Improve TopologyPreservingSimplifier to prevent edge-disjoint
      line collapse (#925)
    + Improve OffsetCurve to return more linework for some input
      situations (#956)
    + Reduce buffer curve short fillet segments (#960)
    + Added ability to specify boundary for LargestEmptyCircle
      (#973)
    + Improve DouglaPeuckerSimplifier and
      TopologyPreservingSimplifier to handle ring endpoints (#1013)
    + Add Angle functions sinSnap and cosSnap to avoid small
      errors, e.g. with buffer operations (#1016)
    + Improve Buffer input simplification for rings (#1022)
    + Improve CoverageSimplifier with ring removal, smoothing,
      inner/outer and per-feature tolerances (#1060)
  * Bug Fixes
    + Fix WKBReader and WKBWriter handling of M measures when
      writing to WKB and reading from WKB (#734)
    + Fix PreparedGeometry handling of EMPTY elements (#904)
    + Fix WKBReader parsing of WKB containing multiple empty
      elements (#905)
    + Fix LineSegment.orientationIndex(LineSegment) to correct
      orientation for non-collinear segments on right (#914)
    + Fix DepthSegment compareTo method (#920)
    + Ensure GeometryFixer does not change coordinate dimension
      (#922)
    + Improve ConvexHull radial sort robustness (#927)
    + Improve robustness of Delaunay Triangulation frame size
      heuristic (#931)
    + Fix PreparedLineString.intersects to handle mixed GCs
      correctly (#944)
    + Fix QuadEdgeSubdivision.TriangleEdgesListVisitor (#945)
    + Fix PolygonHoleJoiner to handle all valid inputs (allows
      PolygonTriangulator, ConstrainedDelaunayTriangulator, and
      ConcaveHullOfPolygons to work correctly) (#946)
    + Fix OffsetCurve handling of input with repeated points (#956)
    + Fix OffsetCurve handling zero offset distance (#971)
    + Fix MaximumInscribedCircle and LargestEmptyCircle to avoid
      long looping for thin inputs (#978)
    + Fix OffsetCurve to use a minimum QuadrantSegs value (#981)
    + Fix HilbertEncoder Y extent handling
    + Fix Geometry.getCoordinate to return non-null coordinate for
      collections with empty first element (#987)
    + Fix LargestEmptyCircle to handle polygonal obstacles (#988)
    + Make intersection computation more robust (#989)
    + Fix VariableBuffer to handle zero vertex buffer distances
      correctly (#997)
    + Fix IncrementalDelaunayTriangulator to ensure triangulation
      boundary is convex (#1004)
    + Fix OverlayNG Area Check heuristic for difference (#1005)
    + Fix InteriorPointPoint to handle empty elements
    + Fix DistanceOp for empty elements (#1010)
    + Fix predicates for MultiPoint with EMPTY (#1015)
    + Fix InteriorPoint for MultiLineString with EMPTY (#1023)
    + Fix TopologyPreservingSimplifier to prevent incorrect
      topology from jumping components (#1024)
    + Fix OffsetCurve to ensure end segments are included (#1029)
    + Fix PointLocator to respect BoundaryNodeRule for single lines
      (#1031)
    + Fix BufferOp Inverted Ring Removal check (#1038)
    + Improve VariableBuffer segment buffer cap generation (#1041)
    + Fix TopologyPreservingSimplifier ring endpoint removal
      indexing (#1059)
  * Performance Improvements
    + Improve Polygonizer performance in some cases with many
      islands (#906)
    + Improve Convex Hull performance by avoiding duplicate
      uniquing (#985)
    + Improve HPRtree performance (#1012)
    + Improve performance of noding and overlay via HPRtree (#1012)
    + Improve DistanceOp performance for Point-Point (#1049)
    + Improve CoveragePolygonValidator via section performance
      optimization (#1053)

-------------------------------------------------------------------
Wed Sep 13 12:54:58 UTC 2023 - Anton Shvetz <shvetz.anton@gmail.com>

- Update to version 1.19.0
  * New Features
    + Add ConstrainedDelaunayTriangulator and PolygonTriangulator
      (#775, #862)
    + Add Tri data structure for representing triangulations (#775)
    + Add DiscreteFrechetDistance (#764, #783)
    + Add OffsetCurve class (#810, #816)
    + Add ConcaveHull class for points (#823, #829)
    + Add ConcaveHullOfPolygons class (#870)
    + Add PolygonHullSimplifier class (#861, #880)
    + TWKB read and write implementation (#854)
  * Functionality Improvements
    + Improve GeometryFixer behaviour for holes outside polygons
      (#772)
    + Simplify and fix logic of BufferParameters.setQuadSegs (#778)
    + Improve KdTree query code to avoid recursion (#779)
    + Add KdTree seeding toSnappingNoder (#780)
    + Add GeometryFixer option to preserve Multi geometry types
      when collapses occur (#791)
    + Make QuadTree thread-safe (#792)
    + Allow specifying a fixed PrecisionModel via grid size (#804)
    + Improve Densifier to interpolate Z values (#835)
    + Add support for GeoJSON Feature and FeatureCollection types
      (#837)
    + Add WKTReader.setFixStructure to fix WKT input (#848)
    + Improve LineSegment.hashCode to reduce collisions (#872)
  * Performance Improvements
    + Improve performance of CoveageUnion by using boundary chains
      (#891)
  * Bug Fixes
    + Fix WKTReader geometry typename parsing (#786)
    + Fix CoordinateArrays.reverse to handle zero-length arrays
      #787
    + Fix GeometryFixer to appply isKeepCollapsed flag to
      GeometryCollection elements (#790)
    + Fix RectangleIntersects to handle XYZM geometry (#794)
    + Fix various operations to handle XYZM geometry (#795)
    + Fix SnapRoundingNoder to use tolerance in noding (also fixes
      GeometryPrecisionReducer) (#802)
    + Fix MaximumInscribedCircle to avoid infinite-looping on flat
      collapsed input (#807)
    + Add OverlayNG result area heuristic check (#812)
    + Fix the buffers generated for mitred joins (#818)
    + Fix WKTReader to produce correct XY coordinate dimension for
      POLYGON EMPTY (#828)
    + Fix RelateOp for a snapped line boundary point (#839)
    + Fix IsValidOp for repeated node points (#845)
    + Fix IsSimpleOp for repeated endpoints (#851)
    + Fix GeometryFixer via noding check for zero-distance buffers
      (#867)
    + Fix MinimumDiameter.minimumRectangle for flat inputs (#875)
    + Fix BufferOp inverted ring check optimization (#878)
    + Fix STRtree nearest-neighbour queries on empty trees to avoid
      NPE (#886)
    + Remove transitive compile dependency on junit from
      jts-io-commmon (#855)

-------------------------------------------------------------------
Wed Sep 13 05:21:56 UTC 2023 - Fridrich Strba <fstrba@suse.com>

- Reproducible builds: use SOURCE_DATE_EPOCH for timestamp

-------------------------------------------------------------------
Thu May  5 10:07:12 UTC 2022 - Fridrich Strba <fstrba@suse.com>

- Force generating javadoc with maven-javadoc-plugin, since the
  xmvn javadoc mojo is crashing on this package

-------------------------------------------------------------------
Fri Jun 11 22:25:23 UTC 2021 - Anton Shvetz <shvetz.anton@gmail.com>

- Update to version 1.18.1
- Package documentation in a separate package

-------------------------------------------------------------------
Tue Sep  8 16:06:19 UTC 2020 - Matthias Mail√§nder <mailaender@opensuse.org>

- initial version of 1.17.1
