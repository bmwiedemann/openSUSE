<?xml version="1.0" encoding="UTF-8"?>

<project name="jansi" default="package" basedir=".">

  <!-- ====================================================================== -->
  <!-- Build environment properties                                           -->
  <!-- ====================================================================== -->

  <property name="project.version" value="2.4.0"/>
  <property name="project.groupId" value="org.fusesource.jansi"/>
  <property name="project.artifactId" value="jansi"/>

  <property name="spec.version" value="2.4"/>

  <property name="compiler.source" value="1.8"/>
  <property name="compiler.target" value="${compiler.source}"/>

  <property name="build.finalName" value="${project.artifactId}-${project.version}"/>
  <property name="build.dir" value="target"/>
  <property name="build.outputDir" value="${build.dir}/classes"/>
  <property name="build.srcDir" value="src/main/java"/>
  <property name="build.resourceDir" value="src/main/resources"/>

  <property name="reporting.outputDirectory" value="${build.dir}/site"/>

  <!-- ====================================================================== -->
  <!-- Cleaning up target                                                     -->
  <!-- ====================================================================== -->

  <target name="clean" description="Clean the output directory">
    <delete dir="${build.dir}"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Compilation target                                                     -->
  <!-- ====================================================================== -->

  <target name="compile" description="Compile the code">
    <mkdir dir="${build.outputDir}"/>
    <javac destdir="${build.outputDir}"
           encoding="UTF-8"
           nowarn="false"
           debug="true"
           optimize="false"
           deprecation="true"
           target="${compiler.target}"
           verbose="false"
           fork="false"
           source="${compiler.source}">
      <src>
        <pathelement location="${build.srcDir}"/>
      </src>
    </javac>
    <copy todir="${build.outputDir}">
      <fileset dir="${build.resourceDir}"/>
    </copy>
  </target>

  <!-- ====================================================================== -->
  <!-- Javadoc target                                                         -->
  <!-- ====================================================================== -->

  <target name="javadoc" description="Generates the Javadoc of the application">
    <javadoc sourcepath="${build.srcDir}"
             packagenames="*"
             destdir="${reporting.outputDirectory}/apidocs"
             access="protected"
             source="${compiler.source}"
             verbose="false"
             version="true"
             use="true"
             author="true"
             splitindex="false"
             nodeprecated="false"
             nodeprecatedlist="false"
             notree="false"
             noindex="false"
             nohelp="false"
             nonavbar="false"
             serialwarn="false"
             encoding="UTF-8" 
             docencoding="UTF-8" 
             linksource="false"
             breakiterator="false"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Package target                                                         -->
  <!-- ====================================================================== -->

  <target name="package" depends="compile" description="Package the application">
    <jar jarfile="${build.dir}/${build.finalName}.jar"
         compress="true"
         index="false"
         basedir="${build.outputDir}"
         excludes="**/package.html">
      <manifest>
        <attribute name="Automatic-Module-Name" value="${project.groupId}"/>
        <attribute name="Bundle-Description" value="Jansi is a java library for generating and interpreting ANSI escape sequences."/>
        <attribute name="Bundle-DocURL" value="http://fusesource.com/"/>
        <attribute name="Bundle-License" value="http://www.apache.org/licenses/LICENSE-2.0.txt"/>
        <attribute name="Bundle-ManifestVersion" value="2"/>
        <attribute name="Bundle-Name" value="${project.artifactId}"/>
        <attribute name="Bundle-SymbolicName" value="${project.groupId}"/>
        <attribute name="Bundle-Vendor" value="FuseSource, Corp."/>
        <attribute name="Bundle-Version" value="${project.version}"/>
        <attribute name="Export-Package" value="org.fusesource.jansi.internal;version=&quot;${project.version}&quot;,org.fusesource.jansi.io;version=&quot;${project.version}&quot;;uses:=&quot;org.fusesource.jansi&quot;,org.fusesource.jansi;version=&quot;${project.version}&quot;;uses:=&quot;org.fusesource.jansi.io&quot;"/>
        <attribute name="Implementation-Title" value="${project.artifactId}"/>
        <attribute name="Implementation-Vendor" value="FuseSource, Corp."/>
        <attribute name="Implementation-Version" value="${project.version}"/>
        <attribute name="Main-Class" value="org.fusesource.jansi.AnsiMain"/>
        <attribute name="Require-Capability" value="osgi.ee;filter:=&quot;(&amp;(osgi.ee=JavaSE)(version=${compiler.target}))&quot;"/>
        <attribute name="Specification-Title" value="${project.artifactId}"/>
        <attribute name="Specification-Vendor" value="FuseSource, Corp."/>
        <attribute name="Specification-Version" value="${spec.version}"/>
      </manifest>
    </jar>
  </target>

  <!-- ====================================================================== -->
  <!-- A dummy target for the package named after the type it creates         -->
  <!-- ====================================================================== -->

  <target name="jar" depends="package" description="Builds the jar for the application"/>

</project>
