<?xml version="1.0" encoding="UTF-8"?>

<project name="jaxen" default="package" basedir=".">

  <!-- ====================================================================== -->
  <!-- Build environment properties                                           -->
  <!-- ====================================================================== -->

  <property name="project.groupId" value="jaxen"/>
  <property name="project.artifactId" value="jaxen"/>
  <property name="project.version" value="2.0.0"/>

  <property name="compiler.release" value="8"/>
  <property name="compiler.source" value="1.${compiler.release}"/>
  <property name="compiler.target" value="${compiler.source}"/>

  <property name="build.finalName" value="${project.artifactId}-${project.version}"/>
  <property name="build.dir" value="target"/>
  <property name="build.outputDir" value="${build.dir}/classes"/>
  <property name="build.srcDir" value="src/java/main"/>
  <property name="build.resourceDir" value="src/main/resources"/>

  <property name="reporting.outputDirectory" value="${build.dir}/site"/>

  <!-- ====================================================================== -->
  <!-- Defining classpaths                                                    -->
  <!-- ====================================================================== -->

  <path id="build.classpath">
    <fileset dir="lib">
      <include name="**/*"/>
    </fileset>
  </path>


  <!-- ====================================================================== -->
  <!-- Cleaning up target                                                     -->
  <!-- ====================================================================== -->

  <target name="clean" description="Clean the output directory">
    <delete dir="${build.dir}"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Compilation target                                                     -->
  <!-- ====================================================================== -->

  <target name="compile" description="Compile the code">
    <mkdir dir="${build.outputDir}"/>
    <javac destdir="${build.outputDir}" 
           nowarn="false" 
           debug="true" 
           encoding="utf-8"
           optimize="false" 
           deprecation="true" 
           release="${compiler.release}"
           target="${compiler.target}" 
           verbose="false" 
           fork="false" 
           source="${compiler.source}">
      <src>
        <pathelement location="${build.srcDir}"/>
      </src>
      <classpath refid="build.classpath"/>
    </javac>
  </target>

  <!-- ====================================================================== -->
  <!-- Javadoc target                                                         -->
  <!-- ====================================================================== -->

  <target name="javadoc" description="Generates the Javadoc of the application">
    <javadoc sourcepath="${build.srcDir}" 
             packagenames="*" 
             destdir="${reporting.outputDirectory}/apidocs" 
             access="protected" 
             encoding="utf-8"
             source="${compiler.source}" 
             verbose="false" 
             version="true" 
             use="true" 
             author="true" 
             splitindex="false" 
             nodeprecated="false" 
             nodeprecatedlist="false" 
             notree="false" 
             noindex="false" 
             nohelp="false" 
             nonavbar="false" 
             serialwarn="false" 
             charset="ISO-8859-1" 
             linksource="false" 
             breakiterator="false">
      <classpath refid="build.classpath"/>
    </javadoc>
  </target>

  <!-- ====================================================================== -->
  <!-- Package target                                                         -->
  <!-- ====================================================================== -->

  <target name="package" depends="compile" description="Package the application">
    <jar jarfile="${build.dir}/${build.finalName}.jar" 
         compress="true" 
         index="false" 
         basedir="${build.outputDir}" 
         excludes="**/package.html">
      <manifest>
        <attribute name="Automatic-Module-Name" value="org.jaxen"/>
        <attribute name="Bundle-Description" value="Jaxen is a universal XPath engine for Java."/>
        <attribute name="Bundle-DocURL" value="http://www.cafeconleche.org/jaxen"/>
        <attribute name="Bundle-License" value="https://raw.githubusercontent.com/jaxen-xpath/jaxen/master/LICENSE.txt"/>
        <attribute name="Bundle-ManifestVersion" value="2"/>
        <attribute name="Bundle-Name" value="jaxen"/>
        <attribute name="Bundle-SymbolicName" value="jaxen"/>
        <attribute name="Bundle-Vendor" value="The Jaxen Project"/>
        <attribute name="Bundle-Version" value="${project.version}"/>
        <attribute name="Export-Package" value="org.jaxen.dom4j;version=&quot;${project.version}&quot;;uses:=&quot;org.dom4j.io,org.jaxen,org.jaxen.saxpath&quot;,org.jaxen.dom;version=&quot;${project.version}&quot;;uses:=&quot;org.jaxen,org.jaxen.saxpath,org.w3c.dom&quot;,org.jaxen.expr.iter;version=&quot;${project.version}&quot;;uses:=&quot;org.jaxen&quot;,org.jaxen.expr;version=&quot;${project.version}&quot;;uses:=&quot;org.jaxen,org.jaxen.expr.iter&quot;,org.jaxen.function.ext;version=&quot;${project.version}&quot;;uses:=&quot;org.jaxen&quot;,org.jaxen.function.xslt;version=&quot;${project.version}&quot;;uses:=&quot;org.jaxen&quot;,org.jaxen.function;version=&quot;${project.version}&quot;;uses:=&quot;org.jaxen&quot;,org.jaxen.javabean;version=&quot;${project.version}&quot;;uses:=&quot;org.jaxen,org.jaxen.saxpath&quot;,org.jaxen.jdom;version=&quot;${project.version}&quot;;uses:=&quot;org.jaxen,org.jaxen.saxpath,org.jdom&quot;,org.jaxen.pattern;version=&quot;${project.version}&quot;;uses:=&quot;org.jaxen,org.jaxen.expr,org.jaxen.saxpath&quot;,org.jaxen.saxpath.base;version=&quot;${project.version}&quot;;uses:=&quot;org.jaxen.saxpath&quot;,org.jaxen.saxpath.helpers;version=&quot;${project.version}&quot;;uses:=&quot;org.jaxen.saxpath&quot;,org.jaxen.saxpath;version=&quot;${project.version}&quot;,org.jaxen.util;version=&quot;${project.version}&quot;;uses:=&quot;org.jaxen&quot;,org.jaxen.xom;version=&quot;${project.version}&quot;;uses:=&quot;org.jaxen,org.jaxen.saxpath&quot;,org.jaxen;version=&quot;${project.version}&quot;;uses:=&quot;org.jaxen.expr,org.jaxen.saxpath&quot;"/>
        <attribute name="Import-Package" value="javax.xml.parsers;resolution:=optional,nu.xom;resolution:=optional,org.dom4j.io;resolution:=optional,org.dom4j;resolution:=optional,org.jaxen.expr.iter;resolution:=optional,org.jaxen.expr;resolution:=optional,org.jaxen.function.ext;resolution:=optional,org.jaxen.function.xslt;resolution:=optional,org.jaxen.function;resolution:=optional,org.jaxen.saxpath.helpers;resolution:=optional,org.jaxen.saxpath;resolution:=optional,org.jaxen.util;resolution:=optional,org.jaxen;resolution:=optional,org.jdom.input;resolution:=optional,org.jdom;resolution:=optional,org.w3c.dom;resolution:=optional,org.xml.sax;resolution:=optional"/>
        <attribute name="Require-Capability" value="osgi.ee;filter:=&quot;(&amp;(osgi.ee=JavaSE)(version=${compiler.target}))&quot;"/>
      </manifest>
    </jar>
  </target>

  <!-- ====================================================================== -->
  <!-- A dummy target for the package named after the type it creates         -->
  <!-- ====================================================================== -->

  <target name="jar" depends="package" description="Builds the jar for the application"/>

</project>
