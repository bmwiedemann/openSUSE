-------------------------------------------------------------------
Fri Feb  4 06:49:52 UTC 2022 - Fridrich Strba <fstrba@suse.com>

- Update to upstream tag jdk-15.0.6+5 (January 2022 CPU)
  * Security fixes:
    + JDK-8268494: Better inlining of inlined interfaces
    + JDK-8270386, CVE-2022-21291, bsc#1194925: Better verification
      of scan methods
    + JDK-8269151: Better construction of EncryptedPrivateKeyInfo
    + JDK-8273968: JCK javax_xml tests fail in CI
    + JDK-8270416, CVE-2022-21294, bsc#1194934: Enhance construction
      of Identity maps
    + JDK-8270392, CVE-2022-21293, bsc#1194935: Improve String
      constructions
    + JDK-8270498, CVE-2022-21296, bsc#1194932: Improve SAX Parser
      configuration management
    + JDK-8268488: More valuable DerValues
    + JDK-8274096, CVE-2022-21366, bsc#1194927: Improve decoding of
      image files
    + JDK-8272272: Enhance jcmd communication
    + JDK-8272462: Enhance image handling
    + JDK-8273308: PatternMatchTest.java fails on CI
    + JDK-8268813, CVE-2022-21283, bnc#1194937: Better String
      matching
    + JDK-8272014, CVE-2022-21305, bsc#1194939: Better array
      indexing
    + JDK-8273838, CVE-2022-21365, bsc#1194928: Enhanced BMP
      processing
    + JDK-8270952, CVE-2022-21277, bsc#1194930: Improve TIFF file
      handling
    + JDK-8271962: Better TrueType font loading
    + JDK-8273756, CVE-2022-21360, bsc#1194929: Enhance BMP image
      support
    + JDK-8271968: Better canonical naming
    + JDK-8271987: Manifest improved manifest entries
    + JDK-8270646, CVE-2022-21299, bsc#1194931: Improved scanning of
      XML entities
    + JDK-8269944: Better HTTP transport redux
    + JDK-8268512: More content for ContentInfo
    + JDK-8273290: Enhance sound handling
    + JDK-8272236, CVE-2022-21341, bsc#1194941: Improve serial forms
      for transport
    + JDK-8264934, CVE-2022-21248, bnc#1194926: Enhance cross VM
      serialization
    + JDK-8272026, CVE-2022-21340, bsc#1194940: Verify Jar
      Verification
    + JDK-8270492, CVE-2022-21282, bsc#1194933: Better resolution of
      URIs
  * Other changes:
    + JDK-8226810: Failed to launch JVM because of
      NullPointerException occured on System.props
    + JDK-8256066: Tests use deprecated TestNG API that is no
      longer available in new versions
    + JDK-8251329: (zipfs) Files.walkFileTree walks infinitely if
      zip has dir named "." inside
    + JDK-8266545: 8261169 broke Harfbuzz build with gcc 7 and 8
    + JDK-8261169: Upgrade HarfBuzz to the latest 2.8.0
    + JDK-8247872: Upgrade HarfBuzz to the latest 2.7.2
    + JDK-8266761: AssertionError in
      sun.net.httpserver.ServerImpl.responseCompleted
    + JDK-8268620: InfiniteLoopException test may fail on x86
      platforms
    + JDK-8255790: GTKL&F: Java 16 crashes on initialising GTKL&F
      on Manjaro Linux
    + JDK-8272332: --with-harfbuzz=system doesn't add -lharfbuzz
      after JDK-8255790
    + JDK-8248865: Document JNDI/LDAP timeout properties
    + JDK-8262316: Reducing locks in RSA Blinding
    + JDK-8273026: Slow LoginContext.login() on multi threading
      application
    + JDK-8250894: Provide a configure option to build and run
      against the platform libharfbuzz
    + JDK-8250605: Linux x86_32 builds fail after JDK-8249821
    + JDK-8249821: Separate libharfbuzz from libfontmanager
    + JDK-8254270: linux 32 bit build doesn't compile
      libjdwp/log_messages.c
    + JDK-8274293: Build failure on macOS with Xcode 13.0 as vfork
      is deprecated
    + JDK-8276536: Update TimeZoneNames files to follow the changes
      made by JDK-8275766
    + JDK-8270533: AArch64: size_fits_all_mem_uses should return
      false if its output is a CAS
    + JDK-8273826: Correct Manifest file name and NPE checks
    + JDK-8275766: (tz) Update Timezone Data to 2021e
    + JDK-8275849: TestZoneInfo310.java fails with tzdata2021e
    + JDK-8266949: Check possibility to disable OperationTimedOut
      on Unix
    + JDK-8260589: Crash in JfrTraceIdLoadBarrier::load(_jclass*)
    + JDK-8196100: javax/swing/text/JTextComponent/5074573/
      /bug5074573.java fails
    + JDK-8273790: Potential cyclic dependencies between Gregorian
      and CalendarSystem
    + JDK-8253421: Initialize JFR trace-IDs with zero
    + JDK-8270893: IndexOutOfBoundsException while reading large
      TIFF file
    + JDK-8274779: HttpURLConnection: HttpClient and HttpsClient
      incorrectly check request method when set to POST
    + JDK-8190753: (zipfs): Accessing a large entry (> 2^31 bytes)
      leads to a negative initial size for ByteArrayOutputStream
    + JDK-8274407: (tz) Update Timezone Data to 2021c
    + JDK-8274467: TestZoneInfo310.java fails with tzdata2021b
    + JDK-8274468: TimeZoneTest.java fails with tzdata2021b
    + JDK-8274501: c2i entry barriers read int as long on AArch64
    + JDK-8269850: Most JDK releases report macOS version 12 as
      10.16 instead of 12.0
    + JDK-8253702: BigSur version number reported as 10.16, should
      be 11.nn
    + JDK-8225083: Remove Google certificate that is expiring in
      December 2021
    + JDK-8225082: Remove IdenTrust certificate that is expiring in
      September 2021
    + JDK-8274840: Update OS detection code to recognize Windows 11
    + JDK-8273229: Update OS detection code to recognize Windows
      Server 2022
    + JDK-8273575: memory leak in appendBootClassPath(), paths must
      be deallocated
    + JDK-8269179: Crash in
      TestMacroLogicVector::testSubWordBoolean: assert(_base >=
      VectorMask && _base <= VectorZ) failed: Not a Vector
    + JDK-8274381: missing CAccessibility definitions in JNI code
    + JDK-8274435: EXCEPTION_ACCESS_VIOLATION in
      BFSClosure::closure_impl
    + JDK-8266206: Build failure after JDK-8264752 with older GCCs
    + JDK-8264752: SIGFPE crash with option
      FlightRecorderOptions:threadbuffersize=30M
    + JDK-8273358: macOS Monterey does not have the font Times
      needed by Serif
    + JDK-8274056: JavaAccessibilityUtilities leaks JNI objects
- Modified patch:
  * system-pcsclite.patch
    + Rediff to changed context

-------------------------------------------------------------------
Thu Oct 21 12:06:02 UTC 2021 - Fridrich Strba <fstrba@suse.com>

- Update to upstream tag jdk-15.0.5+3 (October 2021 CPU)
  * Security fixes:
    + JDK-8267729, CVE-2021-35578, bsc#1191904: Improve TLS client
      handshaking
    + JDK-8268205: Enhance DTLS client handshake
    + JDK-8268199: Correct certificate requests
    + JDK-8268193: Improve requests of certificates
    + JDK-8269618, CVE-2021-35603, bsc#1191906: Better session
      identification
    + JDK-8269624: Enhance method selection support
    + JDK-8267735, CVE-2021-35586, bsc#1191914: Better BMP support
    + JDK-8267712: Better LDAP reference processing
    + JDK-8266689, CVE-2021-35567, bsc#1191903: More Constrained
      Delegation
    + JDK-8267086: ArrayIndexOutOfBoundsException in
      java.security.KeyFactory.generatePublic
    + JDK-8266103: Better specified spec values
    + JDK-8265580, CVE-2021-35559, bsc#1191911: Enhanced style for
      RTF kit
    + JDK-8265574: Improve handling of sheets
    + JDK-8269763: The JEditorPane is blank after JDK-8265167
    + JDK-8265167, CVE-2021-35556, bsc#1191910: Richer Text Editors
    + JDK-8263314: Enhance XML Dsig modes
    + JDK-8266137, CVE-2021-35564, bsc#1191913: Improve Keystore
      integrity
    + JDK-8266109: More Resilient Classloading
    + JDK-8268506: More Manifest Digests
    + JDK-8266115: More Manifest Jar Loading
    + JDK-8266097, CVE-2021-35561, bsc#1191912: Better hashing
      support
    + JDK-8270404: Better canonicalization
    + JDK-8270398: Enhance canonicalization
    + JDK-8265776: Improve Stream handling for SSL
    + JDK-8254967, CVE-2021-35565, bsc#1191909:
      com.sun.net.HttpsServer spins on TLS session close
  * Other changes:
    + JDK-8211227: Inconsistent TLS protocol version in debug output
    + JDK-8262392: Update Mesa 3-D Headers to version 21.0.3
    + JDK-8259271: gc/parallel/TestDynShrinkHeap.java still fails
      "assert(covered_region.contains(new_memregion)) failed: new
      region is not in covered_region"
    + JDK-8260704: ParallelGC: oldgen expansion needs release-store
      for _end
    + JDK-8257999: Parallel GC crash in gc/parallel/
      /TestDynShrinkHeap.java: new region is not in covered_region
    + JDK-8266248: Compilation failure in
      PLATFORM_API_MacOSX_MidiUtils.c with Xcode 12.5
    + JDK-8264848: [macos] libjvm.dylib linker warning due to macOS
      version mismatch 8272700: [macos] Build failure with Xcode
      13.0 after JDK-8264848
    + JDK-8273671: Backport of 8260616 misses one JNF header
      inclusion removal
    + JDK-8268427: Improve AlgorithmConstraints:checkAlgorithm
      performance
    + JDK-8270317: Large Allocation in CipherSuite
    + JDK-8261236: C2: ClhsdbJstackXcompStress test fails when
      StressGCM is enabled
    + JDK-8270216: [macOS] Update named used for Java run loop mode
    + JDK-8269934: RunThese24H.java failed with
      EXCEPTION_ACCESS_VIOLATION in
      java_lang_Thread::get_thread_status
    + JDK-8272602: [macos] not all KEY_PRESSED events sent when
      control modifier is used
    + JDK-8254631: Better support ALPN byte wire values in SunJSSE
    + JDK-8267625: AARCH64: typo in LIR_Assembler::emit_profile_type
    + JDK-8268775: Password is being converted to String in
      AccessibleJPasswordField
    + JDK-8265231: (fc) ReadDirect and WriteDirect tests fail after
      fix for JDK-8264821
    + JDK-8258753: StartTlsResponse.close() hangs due to
      synchronization issues
    + JDK-8258373: Update the text handling in the JPasswordField
    + JDK-8257620: Do not use objc_msgSend_stret to get macOS
      version
    + JDK-8249588: libwindowsaccessbridge issues on 64bit Windows
    + JDK-8253899: Make IsClassUnloadingEnabled signature match
      specification
    + JDK-8261109: [macOS] Remove disabled warning for JNF in
      make/autoconf/flags-cflags.m4
    + JDK-8267652: c2 loop unrolling by 8 results in reading memory
      past array
    + JDK-8268965: TCP Connection Reset when connecting simple
      socket to SSL server
    + JDK-8268635: Corrupt oop in ClassLoaderData
- Remove the unneeded icedtea-sound provider
- Removed patches:
  * icedtea-sound-1.0.1-jdk9.patch
  * icedtea-sound-soundproperties.patch
    + not needed since the icedtea-sound provider is removed

-------------------------------------------------------------------
Thu Aug 26 13:45:59 UTC 2021 - Fridrich Strba <fstrba@suse.com>

- Added patch:
  * openjdk-glibc234.patch
    + fix build with glibc-2.34 (bsc#1189201)

-------------------------------------------------------------------
Thu Jul 22 07:36:04 UTC 2021 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15.0.4+5 (July 2021 CPU)
  * Security fixes
    + JDK-8256157: Improve bytecode assembly
    + JDK-8262380: Enhance XML processing passes
    + JDK-8264460: Improve NTLM support
    + JDK-8264079: Improve abstractions
    + JDK-8264066, CVE-2021-2388, bsc#1188566: Enhance compiler
      validation
    + JDK-8262967: Improve Zip file support
    + JDK-8262477: Enhance String Conclusions
    + JDK-8262410: Enhanced rules for zones
    + JDK-8262403: Enhanced data transfers
    + JDK-8260967, CVE-2021-2369, bsc#1188565: Better jar file
      validation
    + JDK-8260960: Signs of jarsigner signing
    + JDK-8260453: Improve Font Bounding
    + JDK-8258432, CVE-2021-2341, bsc#1188564: Improve file
      transfers
    + JDK-8256491: Better HTTP transport
  * Other changes
    + JDK-8225081: Remove Telia Company CA certificate expiring in
      April 2021
    + JDK-8256421: Add 2 HARICA roots to cacerts truststore
    + JDK-8259312: VerifyCACerts.java fails as soneraclass2ca cert
      will expire in 90 days
    + JDK-8225072: Add LuxTrust certificate that is expiring in
      March 2021 to list of allowed but expired certs
    + JDK-8258630: Add expiry exception for QuoVadis root
      certificate
    + JDK-8258414: OldObjectSample events too expensive
    + JDK-8257621: JFR StringPool misses cached items across
      consecutive recordings
    + JDK-8255992: JFR EventWriter does not use first string from
      StringPool with id 0
    + JDK-8253299: Manifest bytes are read twice when verifying a
      signed JAR
    + JDK-8263361: Incorrect arraycopy stub selected by C2 for SATB
      collectors
    + JDK-8252883: AccessDeniedException caused by delayed file
      deletion on Windows
    + JDK-8251456: [TESTBUG] compiler/vectorization/
      /TestVectorsNotSavedAtSafepoint.java failed OutOfMemoryError
    + JDK-8267235: [macos_aarch64]
      InterpreterRuntime::throw_pending_exception messing up LR
      results in crash
    + JDK-8261395: C1 crash "cannot make java calls from the native
      compiler"
    + JDK-8244154: Update SunPKCS11 provider with PKCS11 v3.0
      header files
    + JDK-8261022: Fix incorrect result of Math.abs() with char type
    + JDK-8262829: Native crash in
      Win32PrintServiceLookup.getAllPrinterNames()
    + JDK-8256809: Annotation processing causes NPE during flow
      analysis
    + JDK-8251257: NMT: jcmd VM.native_memory scale=1 crashes
      target VM
    + JDK-8255908: ExceptionInInitializerError due to
      UncheckedIOException while initializing cgroupv1 subsystem
    + JDK-8249608: Vector register used by C2 compiled method
      corrupted at safepoint
    + JDK-8249215: JFrame::setVisible crashed with
      -Dfile.encoding=UTF-8 on Japanese Windows.
    + JDK-8257746: Regression introduced with JDK-8250984 - memory
      might be null in some machines
    + JDK-8247432: Update IANA Language Subtag Registry to Version
      2020-09-29
    + JDK-8250984: Memory Docker tests fail on some Linux kernels
      w/o cgroupv1 swap limit capabilities
    + JDK-8264821: DirectIOTest fails on a system with large block
      size
    + JDK-8255880: UI of Swing components is not redrawn after
      their internal state changed
    + JDK-8253476: TestUseContainerSupport.java fails on some Linux
      kernels w/o swap limit capabilities
    + JDK-8241248: NullPointerException in
      sun.security.ssl.HKDF.extract(HKDF.java:93)
    + JDK-8244500: jtreg test error in test/hotspot/
      /jtreg/containers/docker/TestMemoryAwareness.java
    + JDK-8250627: Use -XX:+/-UseContainerSupport for
      enabling/disabling Java container metrics
    + JDK-8260349: Cannot programmatically retrieve Metaspace max
      set via JAVA_TOOL_OPTIONS
    + JDK-8244088: [Regression] Switch of Gnome theme ends up in
      deadlocked UI
    + JDK-8260380: Upgrade to LittleCMS 2.12
    + JDK-8264786: [macos] All Swing/AWT apps cause Allow
      Notifications prompt to appear when app is launched
    + JDK-8255845: Memory leak in imageFile.cpp
    + JDK-8261170: Upgrade to FreeType 2.10.4
    + JDK-8256633: Fix product build on Windows+Arm64
    + JDK-8257633: Missing -mmacosx-version-min=X flag when linking
      libjvm
    + JDK-8257547: Handle multiple prereqs on the same line in deps
      files
    + JDK-8256810: Incremental rebuild broken on Macosx
    + JDK-8256751: Incremental rebuild with precompiled header
      fails when touching a header file
    + JDK-8248532: Every time I change keyboard language at my
      MacBook, Java crashes
    + JDK-8257242: [macOS] Java app crashes while switching input
      methods
    + JDK-8265860: Update version .jcheck/conf in jdk15u to be
      15.0.4
    + JDK-8264823: Update building.html document for Git in jdk15u
    + JDK-8252090: JFR: StreamWriterHost::write_unbuffered() stucks
      in an infinite loop OpenJDK (build 13.0.1+9)
    + JDK-8258396: SIGILL in
      jdk.jfr.internal.PlatformRecorder.rotateDisk()
    + JDK-8263846: Bad JNI lookup getFocusOwner in accessibility
      code on Mac OS X
    + JDK-8247753: UIManager.getSytemLookAndFeelClassName() returns
      wrong value on Fedora 32
    + JDK-8261198: [macOS] Incorrect JNI parameters in number
      conversion in A11Y code
    + JDK-8259585: [macos] Bad JNI lookup error : Accessible
      actions do not work on macOS
    + JDK-8259232: Bad JNI lookup during printing
    + JDK-8262110: DST starts from incorrect time in 2038
    + JDK-8073446: TimeZone getOffset API does not  return a dst
      offset between years 2038-2137
    + JDK-8259319: Illegal package access when SunPKCS11 requires
      SunJCE's classes
    + JDK-8257414: Drag n Drop target area is wrong on high DPI
      systems
    + JDK-8248552: C2 crashes with SIGFPE due to division by zero
    + JDK-8251549: Update docs on building for Git
    + JDK-8255086: Update the root locale display names
    + JDK-8262446: DragAndDrop hangs on Windows
    + JDK-8261231: Windows IME was disabled after DnD operation
    + JDK-8257988: Remove JNF dependency from
      libsaproc/MacosxDebuggerLocal.m
    + JDK-8260616: Removing remaining JNF dependencies in the
      java.desktop module
    + JDK-8259869: [macOS] Remove desktop module dependencies on
      JNF Reference APIs
    + JDK-8259651: [macOS] Replace JNF_COCOA_ENTER/EXIT macros
    + JDK-8259343: [macOS] Update JNI error handling in Cocoa code.
    + JDK-8257853: Remove dependencies on JNF's JNI utility
      functions in AWT and 2D code
    + JDK-8240487: Cleanup whitespace in .cc, .hh, .m, and .mm files
    + JDK-8257858: [macOS]: Remove JNF dependency from
      libosxsecurity/KeystoreImpl.m
    + JDK-8257860: [macOS]: Remove JNF dependency from
      libosxkrb5/SCDynamicStoreConfig.m
    + JDK-8256501: libTestMainKeyWindow fails to build with Xcode
      12.2
    + JDK-8257707: Fix incorrect format string in Http1HeaderParser
    + JDK-7146776: deadlock between URLStreamHandler.getHostAddress
      and file.Handler.openconnection
    + JDK-8261397: Try Catch Method Failing to Work When Dividing
      An Integer By 0

-------------------------------------------------------------------
Wed Apr 21 15:07:38 UTC 2021 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15.0.3+3 (April 2021 CPU)
  * Security fixes:
    + JDK-8244473: Contextualize registration for JNDI
    + JDK-8244543: Enhanced handling of abstract classes
    + JDK-8259633: compiler/graalunit/CoreTest.java fails with NPE
      after JDK-8244543
    + JDK-8250568, CVE-2021-2161, bsc#1185056: Less ambiguous
      processing
    + JDK-8253799: Make lists of normal filenames
    + JDK-8261183: Follow on to Make lists of normal filenames
    + JDK-8249906, CVE-2021-2163, bsc#1185055: Enhance opening JARs
    + JDK-8258247: Couple of issues in fix for JDK-8249906
    + JDK-8259428: AlgorithmId.getEncodedParams() should return
      copy
    + JDK-8257001: Improve HTTP client support
  * Other changes:
    + JDK-8256682: JDK-8202343 is incomplete
    + JDK-8202343: Disable TLS 1.0 and 1.1
    + JDK-8252497: Incorrect numeric currency code for ROL
    + JDK-8261912: Code IfNode::fold_compares_helper more
      defensively
    + JDK-8245400: Upgrade to LittleCMS 2.11
    + JDK-8247867: Upgrade to freetype 2.10.2
    + JDK-8260356: (tz) Upgrade time-zone data to tzdata2021a
    + JDK-8259048: (tz) Upgrade time-zone data to tzdata2020f
    + JDK-8261310: PPC64 Zero build fails with
      'VMError::controlled_crash(int)::FunctionDescriptor
      functionDescriptor' has incomplete type and cannot be defined
    + JDK-8243559: Remove root certificates with 1024-bit keys
      (See CSR JDK-8262079)

-------------------------------------------------------------------
Fri Jan 22 06:24:12 UTC 2021 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15.0.2+7 (January 2021 CPU,
  bsc#1181239)
  * Security fixes
    + JDK-8247619: Improve Direct Buffering of Characters
  * Other changes
    + JDK-8197981: Missing return statement in
      __sync_val_compare_and_swap_8
    + JDK-8233624: Enhance JNI linkage
    + JDK-8236196: Improve string pooling
    + JDK-8236862: Enhance support of Proxy class
    + JDK-8239105: Add exception for expiring Digicert root
      certificates to VerifyCACerts test
    + JDK-8247741: Test test/hotspot/jtreg/runtime/7162488/
      /TestUnrecognizedVmOption.java fails when
      -XX:+IgnoreUnrecognizedVMOptions is set
    + JDK-8248411: [aarch64] Insufficient error handling when
    CodeBuffer is exhausted
    + JDK-8248596: [TESTBUG] compiler/loopopts/
    /PartialPeelingUnswitch.java times out with Graal enabled
    + JDK-8248667: Need support for building native libraries
      located in the test/lib directory
    + JDK-8248745: Add jarsigner and keytool tests for restricted
    algorithms
    + JDK-8249176: Update GlobalSignR6CA test certificates
    + JDK-8249192: MonitorInfo stores raw oops across safepoints
    + JDK-8249217: Unexpected StackOverflowError in "process reaper"
      thread still happens
    + JDK-8249781: AArch64: AOT compiled code crashes if C2
      allocates r27
    + JDK-8249927: Specify limits of jdk.serialProxyInterfaceLimit
    + JDK-8250257: Bump release strings for JDK 15.0.2
    + JDK-8250861: Crash in MinINode::Ideal(PhaseGVN*, bool)
    + JDK-8251397: NPE on ClassValue.ClassValueMap.cacheArray
    + JDK-8251859: sun/security/validator/
      /PKIXValAndRevCheckTests.java fails
    + JDK-8253019: Enhanced JPEG decoding
    + JDK-8253191: C2: Masked byte comparisons with large masks
      produce wrong result on x86
    + JDK-8253375: OSX build fails with Xcode 12.0 (12A7209)
    + JDK-8253566: clazz.isAssignableFrom will return false for
      interface implementors
    + JDK-8253756: C2 CompilerThread0 crash in Node::add_req(Node*)
    + JDK-8253791: Issue with useAppleColor check in CSystemColors.m
    + JDK-8253960: Memory leak in
      Java_java_lang_ClassLoader_defineClass0()
    + JDK-8254081: java/security/cert/PolicyNode/
      /GetPolicyQualifiers.java fails due to an expired certificate
    + JDK-8254166: Zero: return-type warning in
      zeroInterpreter_zero.cpp
    + JDK-8254319: Shenandoah: Interpreter native-LRB needs to
      activate during HAS_FORWARDED
    + JDK-8254320: Shenandoah: C2 native LRB should activate for
      non-cset objects
    + JDK-8254790: SIGSEGV in string_indexof_char and
      stringL_indexof_char intrinsics
    + JDK-8254854: [cgroups v1] Metric limits not properly detected
      on some join controller combinations
    + JDK-8254982: (tz) Upgrade time-zone data to tzdata2020c
    + JDK-8255065: Zero: accessor_entry misses the IRIW case
    + JDK-8255067: Restore Copyright line in file modified by
      8253191
    + JDK-8255226: (tz) Upgrade time-zone data to tzdata2020d
    + JDK-8255599: Change jdk 15.0.2 milestone to fcs for build b04
    + JDK-8255603: Memory/Performance regression after JDK-8210985
    + JDK-8256051: nmethod_entry_barrier stub miscalculates xmm
      spill size on x86_32
    + JDK-8256427: Test com/sun/jndi/dns/ConfigTests/
      /PortUnreachable.java does not work on AIX
    + JDK-8256618: Zero: Linux x86_32 build still fails
    + JDK-8257181: s390x builds are very noisy with gc-sections
      messages
    + JDK-8257641: Shenandoah: Query is_at_shenandoah_safepoint()
      from control thread should return false
    + JDK-8257701: Shenandoah: objArrayKlass metadata is not marked
      with chunked arrays
- Regenerated patch: missing-return.patch

-------------------------------------------------------------------
Wed Nov 25 17:39:42 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15.0.1+9 (October 2020 CPU,
  bsc#1177943)
  * Security fixes
    + JDK-8233624: Enhance JNI linkage
    + JDK-8236196: Improve string pooling
    + JDK-8236862, CVE-2020-14779: Enhance support of Proxy class
    + JDK-8237990, CVE-2020-14781: Enhanced LDAP contexts
    + JDK-8237995, CVE-2020-14782: Enhance certificate processing
    + JDK-8240124: Better VM Interning
    + JDK-8241114, CVE-2020-14792: Better range handling
    + JDK-8242680, CVE-2020-14796: Improved URI Support
    + JDK-8242685, CVE-2020-14797: Better Path Validation
    + JDK-8242695, CVE-2020-14798: Enhanced buffer support
    + JDK-8243302: Advanced class supports
    + JDK-8244136, CVE-2020-14803: Improved Buffer supports
    + JDK-8244479: Further constrain certificates
    + JDK-8244955: Additional Fix for JDK-8240124
    + JDK-8245407: Enhance zoning of times
    + JDK-8245412: Better class definitions
    + JDK-8245417: Improve certificate chain handling
    + JDK-8248574: Improve jpeg processing
    + JDK-8249927: Specify limits of jdk.serialProxyInterfaceLimit
    + JDK-8253019: Enhanced JPEG decoding
  * Fixes:
    + JDK-8232114: JVM crashed at imjpapi.dll in native code
    + JDK-8241007: Shenandoah: remove
      ShenandoahCriticalControlThreadPriority support
    + JDK-8241065: Shenandoah: remove leftover code after
      JDK-8231086
    + JDK-8241574: Shenandoah: remove ShenandoahAssertToSpaceClosure
    + JDK-8243320: Add SSL root certificates to Oracle Root CA
      program
    + JDK-8243321: Add Entrust root CA - G4 to Oracle Root CA
      program
    + JDK-8243470: [macos] bring back O2 opt level for unsafe.cpp
    + JDK-8247251: Assert '(_pcs_length == 0 ||
      last_pc()->pc_offset() < pc_offset) failed: must specify a
      new, larger pc offset' failure
    + JDK-8247367: Shenandoah: pacer should wait on lock instead of
      exponential backoff
    + JDK-8247593: Shenandoah: should not block pacing reporters
    + JDK-8247736: Shenandoah: assert(_nm->is_alive()) failed: only
      alive nmethods here
    + JDK-8247751: Shenandoah: options tests should run with
      smaller heaps
    + JDK-8247754: Shenandoah: mxbeans tests can be shorter
    + JDK-8247757: Shenandoah: split heavy tests by heuristics to
      improve parallelism
    + JDK-8247845: Shenandoah: refactor TLAB/GCLAB retirement code
    + JDK-8247860: Shenandoah: add update watermark line in rich
      assert failure message
    + JDK-8248041: Shenandoah: pre-Full GC root updates may miss
      some roots
    + JDK-8248467: C2: compiler/intrinsics/object/TestClone fails
      with -XX:+VerifyGraphEdges
    + JDK-8248495: [macos] zerovm is broken due to libffi headers
      location
    + JDK-8248632: Shenandoah: build fails without both JVMTI and
      JFR
    + JDK-8248634: Shenandoah: incorrect include in
      shenandoahInitLogger.cpp
    + JDK-8248652: Shenandoah: SATB buffer handling may assume no
      forwarded objects
    + JDK-8248745: Add jarsigner and keytool tests for restricted
      algorithms
    + JDK-8248987: AOT's Linker.java seems to eagerly fail-fast on
      Windows
    + JDK-8249165: Remove unneeded nops introduced by 8234160
      changes
    + JDK-8249183: JVM crash in "AwtFrame::WmSize" method
    + JDK-8249230: Shenandoah: assertion failure with
      -XX:-ResizeTLAB
    + JDK-8249266: Bump release strings for JDK 15.0.1
    + JDK-8249266: Change jdk 15.0.1 milestone to fcs for build b02
    + JDK-8249649: Shenandoah: provide per-cycle pacing stats
    + JDK-8249672: Include microcode revision in features_string on
      x86
    + JDK-8249801: Shenandoah: Clear soft-refs on requested GC cycle
    + JDK-8249953: Shenandoah: gc/shenandoah/mxbeans tests should
      account for corner cases
    + JDK-8250548: libgraal can deadlock in -Xcomp mode
    + JDK-8250582: Revert Principal Name type to NT-UNKNOWN when
      requesting TGS Kerberos tickets
    + JDK-8250612: jvmciCompilerToVM.cpp declares jio_printf with
      "void" return type, should be "int"
    + JDK-8250665: Wrong translation for the month name of May in
      ar_JO,LB,SY
    + JDK-8250841: Shenandoah: need to reset/finish dead counters
      for StringTable/ResolvedMethodTable during STW root processing
    + JDK-8250844: Make sure {type,obj}ArrayOopDesc accessors check
      the bounds
    + JDK-8250861: Crash in MinINode::Ideal(PhaseGVN*, bool)
    + JDK-8250876: Fix issues with cross-compile on macos
    + JDK-8250928: JFR: Improve hash algorithm for stack traces
    + JDK-8251359: Shenandoah: filter null oops before calling
      enqueue/SATB barrier
    + JDK-8251451: Shenandoah: Remark ObjectSynchronizer roots with
      I-U
    + JDK-8251458: Parse::do_lookupswitch fails with "assert(_cnt
      >= 0) failed"
    + JDK-8251859: sun/security/validator/
      /PKIXValAndRevCheckTests.java fails
    + JDK-8251910: Shenandoah: Handshake threads between weak-roots
      and reset phases
    + JDK-8252120: compiler/oracle/TestCompileCommand.java
      misspells "occured"
    + JDK-8252292: 8240795 may cause anti-dependence to be missed
    + JDK-8252359: HotSpot Not Identifying it is Running in a
      Container
    + JDK-8252367: Undo JDK-8245000: Windows GDI functions don't
      support large pages
    + JDK-8252368: Undo JDK-8245002: Windows GDI functions don't
      support NUMA interleaving
    + JDK-8252470: java/awt/dnd/DisposeFrameOnDragCrash/
      /DisposeFrameOnDragTest.java fails on Windows
    + JDK-8252660: Shenandoah: support manageable SoftMaxHeapSize
      option
    + JDK-8252754: Hash code calculation of JfrStackTrace is
      inconsistent
    + JDK-8253222: Shenandoah: unused AlwaysTrueClosure after
      JDK-8246591
    + JDK-8253224: Shenandoah: ShenandoahStrDedupQueue destructor
      calls virtual num_queues()
    + JDK-8253226: Shenandoah: remove unimplemented
      ShenandoahStrDedupQueue::verify
    + JDK-8253284: Zero OrderAccess barrier mappings are incorrect
    + JDK-8253714: [cgroups v2] Soft memory limit incorrectly using
      memory.high
    + JDK-8253727: [cgroups v2] Memory and swap limits reported
      incorrectly
    + JDK-8253778: ShenandoahSafepoint::is_at_shenandoah_safepoint
      should not access VMThread state from other threads
    + JDK-8254144: Non-x86 Zero builds fail with return-type
      warning in os_linux_zero.cpp
    + JDK-8254177: (tz) Upgrade time-zone data to tzdata2020b
    + JDK-8254560: Shenandoah: Concurrent Strong Roots logging is
      incorrect

-------------------------------------------------------------------
Wed Nov 25 17:36:44 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+36
  * Official OpenJDK 15.0.0.0 release
  * Fixes:
    + JDK-8246031: SSLSocket.getSession() doesn't close connection
      for timeout/ interrupts
    + JDK-8248299: two jdeps files miss copyright header
    + JDK-8251276: JDK-8248299 breaks JDK 15 validate-headers build
- Modified patches:
  * disable-doclint-by-default.patch
  * system-pcsclite.patch
    + rediff to changed context
- Added patch:
  * zgc-alignment.patch
    + fix build with newer GCC

-------------------------------------------------------------------
Wed Nov 25 17:34:34 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+35
  * Fixes:
    + JDK-8248597: [Graal] api/java_security/SignatureSpi/
      /DelegationTests.html fails with Method "javasoft.sqe.tests.
      .api.java.security.SignatureSpi.JCKSignatureSpi.clear" doesn't
      exist.
    + JDK-8249628: Remove EA from JDK 15 version string starting
      with Initial RC promotion
    + JDK-8250609: C2 crash in IfNode::fold_compares
    + JDK-8250770: Net.java translateToSocketException does not
      handle IOException

-------------------------------------------------------------------
Wed Nov 25 17:31:43 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+34
  * Fixes:
    + JDK-8240777: Update all nroff manpages for JDK 15 release
    + JDK-8246094: [macos] Sound Recording and playback is not
      working
    + JDK-8249787: Make TestGCLocker more resilient with concurrent
      GCs
    + JDK-8250216: The README need not mention retrieving source
      code
    + JDK-8250588: Shenandoah: LRB needs to save/restore fp
      registers for runtime call
    + JDK-8250688: missed open parenthesis for GTEST_FRAMEWORK_SRC
      var in Main.gmk

-------------------------------------------------------------------
Wed Nov 25 17:29:22 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+33
  * Fixes:
    + JDK-8242388: compiler/graalunit/CoreTest.java timed out
    + JDK-8242895: failed: sanity at
      src/hotspot/share/opto/escape.cpp:2361
    + JDK-8242935: test/jdk/java/util/ServiceLoader/ReloadTest.java
      uses nashorn script engine
    + JDK-8246381: VM crashes with "Current BasicObjectLock* below
      than low_mark"
    + JDK-8246676: monitor list lock operations need more fencing
    + JDK-8246805: Incorrect copyright header in
      TestInvalidTieredStopAtLevel.java
    + JDK-8247280: more fencing needed in async deflation for
      non-TSO machines
    + JDK-8248476: No helpful NullPointerException message after
      calling fillInStackTrace
    + JDK-8248524: [JVMCI] Memory corruption / segfault during
      NumPy installation.
    + JDK-8249034: clean up FileInstaller $test.src $cwd in
      vmTestbase_nsk_jvmti tests
    + JDK-8249039: clean up FileInstaller $test.src $cwd in
      vmTestbase_nsk_aod tests
    + JDK-8249040: clean up FileInstaller $test.src $cwd in
      vmTestbase_nsk_jdb tests
    + JDK-8249205: Remove unnecessary trademark symbols
    + JDK-8249251: [dark_mode ubuntu 20.04] The selected menu is
      not highlighted in GTKLookAndFeel
    + JDK-8249278: Revert JDK-8226253 which breaks the spec of
      AccessibleState.SHOWING for JList
    + JDK-8249367: JShell uses 100% of one core all the time
    + JDK-8249543: Force DirectBufferAllocTest to run with
      -ExplicitGCInvokesConcurrent
    + JDK-8249560: Shenandoah: Fix racy GC request handling
    + JDK-8249622: use 8249621 to ignore 8 jvmci tests
    + JDK-8249673: cleanup graal problem lists
    + JDK-8249678: @ignore should be used instead of ProblemList
      for 8158860, 8163894, 8193479, 8194310
    + JDK-8249681: gc/stress/TestJNIBlockFullGC/
      /TestJNIBlockFullGC.java fails w/ UnsatisfiedLinkError
    + JDK-8249698: java/lang/invoke/LFCaching/
      /LFGarbageCollectedTest.java should be ProblemList-ed and not
      @ignored
    + JDK-8249700: java/io/File/GetXSpace.java should be added to
      exclude list, and not @ignore-d
    + JDK-8249713: JFR: java.base events have incomplete stacktraces
    + JDK-8249880: JVMCI calling register_nmethod without CodeCache
      lock

-------------------------------------------------------------------
Wed Nov 25 17:17:14 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+32 (July 2020 CPU, bsc#1174157)
  * Security fixes:
    + JDK-8230613: Better ASCII conversions
    + JDK-8231800: Better listing of arrays
    + JDK-8232014: Expand DTD support
    + JDK-8233234: Better Zip Naming
    + JDK-8233239, CVE-2020-14562: Enhance TIFF support
    + JDK-8233255: Better Swing Buttons
    + JDK-8234032: Improve basic calendar services
    + JDK-8234042: Better factory production of certificates
    + JDK-8234418: Better parsing with CertificateFactory
    + JDK-8234836: Improve serialization handling
    + JDK-8236191: Enhance OID processing
    + JDK-8236867, CVE-2020-14573: Enhance Graal interface handling
    + JDK-8237117, CVE-2020-14556: Better ForkJoinPool behavior
    + JDK-8237592, CVE-2020-14577: Enhance certificate verification
    + JDK-8238002, CVE-2020-14581: Better matrix operations
    + JDK-8238013: Enhance String writing
    + JDK-8238804: Enhance key handling process
    + JDK-8238843: Enhanced font handing
    + JDK-8238920, CVE-2020-14583: Better Buffer support
    + JDK-8238925: Enhance WAV file playback
    + JDK-8240119, CVE-2020-14593: Less Affine Transformations
    + JDK-8240482: Improved WAV file playback
    + JDK-8241379: Update JCEKS support
    + JDK-8241522: Manifest improved jar headers redux
    + JDK-8242136, CVE-2020-14621: Better XML namespace handling
  * Fixes:
    + JDK-8211974: move test/jdk/lib/testlibrary/java/util/jar/
      /*.java to top-level library or a local library
    + JDK-8217475: Unexpected StackOverflowError in "process
      reaper" thread
    + JDK-8229495: SIGILL in C2 generated OSR compilation
    + JDK-8236809: [Graal] java/lang/Class/getDeclaredField/
      /FieldSetAccessibleTest.java timeouts
    + JDK-8236935: Improve UX of the search control
    + JDK-8242529: javac defines type annotations incorrectly for
      record members (constructor and property accessor)
    + JDK-8247229: jpackage tests failed due to "semop(1):
      encountered an error: Invalid argument"
    + JDK-8247502: PhaseStringOpts crashes while optimising
      effectively dead code
    + JDK-8247670: Shenandoah: deadlock during class unloading OOME
    + JDK-8248048: ZGC: AArch64: SIGILL in load barrier register
      spilling
    + JDK-8248598: [Graal] Several testcases from
      applications/jcstress/acqrel.java fails with forbidden state
    + JDK-8248822: 8 vm/classfmt/atr_ann/atr_rtm_annot007/
      /atr_rtm_annot00709 tests fail w/ AOT
    + JDK-8249000: vm.gc.X should take selected JIT into account
    + JDK-8249019: clean up FileInstaller $test.src $cwd in
      vmTestbase_vm_compiler tests
    + JDK-8249028: clean up FileInstaller $test.src $cwd in
      vmTestbase_nsk_monitoring tests
    + JDK-8249029: clean up FileInstaller $test.src $cwd in
      vmTestbase_vm_defmeth tests
    + JDK-8249032: clean up FileInstaller $test.src $cwd in
      vmTestbase_nsk_sysdict tests
    + JDK-8249033: clean up FileInstaller $test.src $cwd in
      vmTestbase_vm_metaspace tests
    + JDK-8249035: clean up FileInstaller $test.src $cwd in
      vmTestbase_nsk_jdwp tests
    + JDK-8249036: clean up FileInstaller $test.src $cwd in
      vmTestbase_nsk_stress tests
    + JDK-8249037: clean up FileInstaller $test.src $cwd in
      vmTestbase_vm_g1classunloading tests
    + JDK-8249038: clean up FileInstaller $test.src $cwd in
      vmTestbase_vm_gc tests
    + JDK-8249086: JDK 15 L10N resource file update - msg drop 10
    + JDK-8249097: test/lib/jdk/test/lib/util/JarBuilder.java has a
      bad copyright
    + JDK-8249255: Build fails if source code in cygwin home dir
    + JDK-8249256: [macos] Add EmptyFolderPackageTest test to
      problem list
    + JDK-8249258: java/util/StringJoiner/StringJoinerTest.java
      failed due to OOM

-------------------------------------------------------------------
Wed Nov 25 17:11:03 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+31
  * Fixes:
    + JDK-8208207: Test nsk/stress/jni/gclocker/gcl001 fails after
      co-location
    + JDK-8208243: vmTestbase/gc/lock/jni/jnilock002/
      /TestDescription.java fails in jdk/hs nightly
    + JDK-8237488: jdk/jfr/event/compiler/TestCompilerCompile.java
      failed due to "RuntimeException: No thread in event"
    + JDK-8241803: JFR TestThreadStartEndEvents.java failed due to
      "RuntimeException: Wrong thread id"
    + JDK-8242538: java/security/SecureRandom/ThreadSafe.java
      failed on windows
    + JDK-8243670: Unexpected test result caused by C2
      MergeMemNode::Ideal
    + JDK-8244763: Update --release 8 symbol information after JSR
      337 MR3
    + JDK-8246806: Incorrect copyright header in
      KeyAgreementTest.java, GroupName.java
    + JDK-8247527: serviceability/dcmd/gc/
      /HeapDumpCompressedTest.java fails with Graal + ZGC
    + JDK-8248060: small HTML issues in java.xml package-info.java
      files
    + JDK-8248112: array index out of bound in
      FileMapInfo::check_paths
    + JDK-8248219: aarch64: missing memory barrier in
      fast_storefield and fast_accessfield
    + JDK-8248306: gc/stress/gclocker/
      /TestExcessGCLockerCollections.java does not compile
    + JDK-8248348: Regression caused by the update to BCEL 6.0
    + JDK-8248388: ZGC: Load barrier incorrectly elided in
      jdk/java/text/Format/DateFormat/SDFTCKZoneNamesTest.java
    + JDK-8248501: [macos] App created with jpackage on Mac fails
      with error -10810
    + JDK-8248505: Unexpected NoSuchAlgorithmException when using
      secure random impl from BCFIPS provider
    + JDK-8248570: Incorrect copyright header in
      TestUnsafeUnalignedSwap.java
    + JDK-8248703: Clarify the behavior of
      java.net.NetworkInterface::equals
    + JDK-8248725: Shenandoah: Claim verifier thread roots for
      parallel processing
    + JDK-8248746: Undo jhsdb related exclusiveAccess.dirs changes
      that were done for JDK-8220295
    + JDK-8248794: Transition JFR Periodic Task Thread to
      "_thread_in_native" before invoking performance counters
    + JDK-8248799: Shenandoah: Claim threads token in constructor
      of ShenandoahRootVerifier
    + JDK-8248845: AArch64: stack corruption after spilling vector
      register
    + JDK-8249018: clean up FileInstaller $test.src $cwd in
      vmTestbase_vm_mlvm tests

-------------------------------------------------------------------
Wed Nov 25 17:06:12 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+30
  * Fixes:
    + JDK-7107012: sun.jvm.hostspot.code.CompressedReadStream
      readDouble() conversion to long mishandled
    + JDK-8199646: JShell tests:
      jdk/jshell/FailOverDirectExecutionControlTest.java failed
      with java.lang.UnsupportedOperationException
    + JDK-8234605: C2 failed "assert(C->live_nodes() -
      live_at_begin <= 2 * _nodes_required) failed: Bad node
      estimate: actual = 208 >> request = 101"
    + JDK-8236647: Correct Fix for 8236647:
      java/lang/invoke/CallSiteTest.java failed with
      InvocationTargetException in Graal mode
    + JDK-8237743: test/langtools/jdk/jshell/
      /FailOverExecutionControlTest.java fails No
      ExecutionControlProvider with name 'nonExistent' and
      parameter keys: []
    + JDK-8244724: CTW: C2 compilation fails with "Live Node limit
      exceeded limit"
    + JDK-8245128: Kitchensink fails with: assert(destination ==
      (address)-1 || destination == entry) failed: b) MT-unsafe
      modification of inline cache
    + JDK-8246051: SIGBUS by unaligned Unsafe compare_and_swap
    + JDK-8246114: java/net/MulticastSocket/Promiscuous.java fails
      after 8241072 (multi-homed systems)
    + JDK-8246212: JPKG001-012: application icon is missing in
      Control Panel Add/Remove
    + JDK-8246704: --release => \"unknown enum constant
      PreviewFeature$Feature.TEXT_BLOCKS\"
    + JDK-8247438: JShell: When FailOverExecutionControlProvider
      fails the proximal cause is not shown
    + JDK-8247730: 2 JNI exception pending defect groups in
      DwarfParser.cpp
    + JDK-8247785: Small clarification of the javadoc about builtin
      class loaders
    + JDK-8247824: CTW: C2 (Shenandoah) compilation fails with SEGV
      in SBC2Support::pin_and_expand
    + JDK-8247832: [Graal] Many Javafuzzer tests failures with
      Graal, due to unexpected results, after last update
      JDK-8243380
    + JDK-8247849: permits clause of sealed interfaces should not
      allow parameterized types
    + JDK-8248044: Backout ProblemList-ed tests introduced by
      JDK-8247876
    + JDK-8248059: [macos] EmptyFolderPackageTest.java failed
      "hdiutil: create failed - No child processes"
    + JDK-8248168: [Graal] jck tests timeout in Graal with -Xcomp
      mode
    + JDK-8248233: Avoid superfluous Class::isRecord invocations
      during deserialization
    + JDK-8248254: jpackage fails if app module is in external
      runtime
    + JDK-8248255: [macos] Add failing DMG tests to problem list
    + JDK-8248264: WinUpgradeUUIDTest application is missing in
      downgrade scenario
    + JDK-8248265: compiler/ciReplay tests fail with AOT compiled
      java.base
    + JDK-8248335: ProblemList compiler/ciReplay/TestServerVM.java
      and TestVMNoCompLevel.java with AOT
    + JDK-8248339: ProblemList
      jdk/jfr/event/os/TestThreadContextSwitches.java
    + JDK-8248341: ProblemList java/lang/management/ThreadMXBean/
      /ThreadMXBeanStateTest.java
    + JDK-8248351: ProblemList serviceability/jvmti/
      /ModuleAwareAgents/ThreadStart/MAAThreadStart.java on Windows
    + JDK-8248354: ProblemList vmTestbase/nsk/jdi/stress/serial/
      /mixed002/TestDescription.java
    + JDK-8248358: ProblemList
      sun/nio/ch/TestMaxCachedBufferSize.java on macOSX
    + JDK-8248409: some jdk/javadoc/doclet tests fail (JDK 15)
    + JDK-8248427: jpackage jtreg BasicTest.testTemp() test fails
      on Windows
    + JDK-8248475: Suppress unconditional warning "JFR will be
      disabled during CDS dumping"
    + JDK-8248485: Poor scalability in JfrCheckpointManager when
      using many threads after JDK-8242008

-------------------------------------------------------------------
Wed Nov 25 17:01:15 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+29
  * Fixes:
    + JDK-8198705: Javadoc search needs a fix to handle duplicate
      package names in different modules
    + JDK-8233014: Enable ShowCodeDetailsInExceptionMessages by
      default.
    + JDK-8237950: C2 compilation fails with "Live Node limit
      exceeded limit" during ConvI2L::Ideal optimization
    + JDK-8238735: NPE compiling lambda expression within
      conditional expression
    + JDK-8241718: assert ((klass)->trace_id()) &
      ((JfrTraceIdEpoch::method_and_class_in_use_this_epoch_bits())))
      != 0 in ObjectSampleCheckpoint::add_to_leakp_set
    + JDK-8241802: [Graal] compiler/loopopts/TestLogSum.java timed
      out
    + JDK-8241969: Type annotation is not shown for wildcard type
      in Javadoc
    + JDK-8242214: NullPointerException in JDK 14 javac compiling a
      method reference
    + JDK-8243533: Only one of several deprecated overloaded
      methods listed in the Deprecated list
    + JDK-8244818: Java2D Queue Flusher crash while moving
      application window to external monitor
    + JDK-8245696: javadoc crashes when a doc-files directory
      contains a '#' file
    + JDK-8245842: provide tests for binary compatibility
      assertions for sealed classes
    + JDK-8246078: Javadoc Search specification link from Javadoc
      Help page points to JDK 13 spec
    + JDK-8246244: BasicShortcutHintTest shortcut can not be found
    + JDK-8246257: Annotated record's vararg type component started
      to be uncompilable with JDK15b24
    + JDK-8247200: assert((unsigned)fpargs < 32)
    + JDK-8247246: Add explicit ResolvedJavaType.link and expose
      presence of default methods
    + JDK-8247358: Shenandoah: reconsider free budget slice for
      marking
    + JDK-8247444: Trust final fields in records
    + JDK-8247532: Records deserialization is slow
    + JDK-8247696: Incorrect tail computation for large segments in
      AbstractMemorySegmentImpl::mismatch
    + JDK-8247716: JVM_RegisterWhiteBoxMethods checks wrong
      classloader
    + JDK-8247725: move two tests for whitebox from
      test/hotspot/jtreg/sanity to test/lib-test
    + JDK-8247763: assert(outer->outcnt() == 2) failed: 'only phis'
      failure in LoopNode::verify_strip_mined()
    + JDK-8247778: ZGC: More parallel gc/z/TestUncommit.java test
      configuration
    + JDK-8247780: Refine the Help page for API Documentation
    + JDK-8247784: Bad link causes invalid documentation
    + JDK-8247788: DocCommentParser should not reject standalone '>'
    + JDK-8247789: Remove use of reflection from
      test/jdk/java/io/Serializable/records/StreamRefTest.java
    + JDK-8247815: doclint: recategorize "no description for ..."
      as MISSING, not SYNTAX
    + JDK-8247876: ProblemList various crypto tests on aarch64
    + JDK-8247880: bad HTML(href==...) in table
    + JDK-8247894: Invalid @see in java.management
    + JDK-8247896: Invalid (@throw) tags in 2 java.io classes
    + JDK-8247899: HTML errors and warnings in
      threadPrimitiveDeprecation.html
    + JDK-8247907: XMLDsig logging does not work
    + JDK-8247932: JShell crashes when typing text block
    + JDK-8247955: doclint: don't complain about summary/caption
      when role=presentation
    + JDK-8247956: remove scripts under bin/nashorn and
      doc/nashorn/source
    + JDK-8247958: minor HTML errors in com.sun.jdi
    + JDK-8247959: doclint errors in NIO code
    + JDK-8247964: All log0() in
      com/sun/org/slf4j/internal/Logger.java should be private
    + JDK-8247967: SparkExamples24H.java SIGSEGV in various places
    + JDK-8247992: [JVMCI] HotSpotNmethod.executeVarargs can try
      execute a zombie nmethod
    + JDK-8248011: Improve javadoc of Foreign Memory Access API
    + JDK-8248061: bad reference in @throws in
      HotSpotDiagnosticMXBean
    + JDK-8248135: Build microbenchmarks with --enable-preview

-------------------------------------------------------------------
Wed Nov 25 16:56:43 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+28
  * Fixes:
    + JDK-8211977: move testlibrary tests into one place
    + JDK-8236539: Relative link tags in record javadoc don't
      resolve
    + JDK-8236647: java/lang/invoke/CallSiteTest.java failed with
      InvocationTargetException in Graal mode
    + JDK-8240654: ZGC can cause severe UI application repaint
      issues
    + JDK-8245679: KeyStore cannot probe PKCS12 keystore if
      BouncyCastle is the top security provider
    + JDK-8246077: Cloneable test in HmacCore seems questionable
    + JDK-8246098: API for Class::permittedSubclasses should
      clarify if returned elements are ordered or not
    + JDK-8246196: javax/management/MBeanServer/OldMBeanServerTest
      fails with AssertionError
    + JDK-8246613: Choose the default SecureRandom algo based on
      registration ordering
    + JDK-8247247: JFR tests fail due to JDK-8235521 missing
      doPrivileged block
    + JDK-8247334: Trees.getScope crashes for annotated local
      records
    + JDK-8247350: [aarch64] assert(false) failed: wrong size of
      mach node
    + JDK-8247382: doclint errors (missing comments) in
      jdk.compiler and jdk.javadoc
    + JDK-8247388: Minimal build broken after JDK-8240245
      (undefined reference to
      'MetaspaceShared::_use_optimized_module_handling')
    + JDK-8247418: Only validate the certificates trust if using
      the default key user name.
    + JDK-8247421: ReturnBlobToWrongHeapTest.java failed allocating
      blob
    + JDK-8247422: --runtime-image on Mac should work for runtime
      root
    + JDK-8247424: jpackage BasicTest.java failed two sub-tests
    + JDK-8247463: java/nio/channels/etc/OpenAndConnect.java fails
      due to IPv6 not available
    + JDK-8247474: Shenandoah: Windows build warning after
      JDK-8247310
    + JDK-8247492: ProblemList
      tools/jlink/plugins/CompressorPluginTest.java
    + JDK-8247495: ProblemList vmTestbase/nsk/jvmti/
      /SetFieldAccessWatch/setfldw001/TestDescription.java
    + JDK-8247521: (test) jdk/test/lib/hexdump/HexPrinterTest.java
      fails on windows
    + JDK-8247522: assert(is_aligned(class_space_rs.base(),
      class_space_alignment)) failed: Sanity
    + JDK-8247526: [TESTBUG] runtime/cds/appcds/dynamicArchive
      tests failing with Graal
    + JDK-8247528: runtime/cds/appcds/jigsaw/modulepath/
      /OptimizeModuleHandlingTest.java failing with Graal
    + JDK-8247530: JfrCheckpointManager failed
      "assert(!SafepointSynchronize::is_at_safepoint()) failed:
      invariant"
    + JDK-8247560: Shenandoah: heap iteration holds root locks all
      the time
    + JDK-8247575: serviceability/dcmd/gc/HeapDumpCompressedTest
      unlocks experimental options for Shenandoah and Z
    + JDK-8247660: 12 Uninitialised variable in 1 files

-------------------------------------------------------------------
Wed Nov 25 16:51:43 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+27
  * Fixes:
    + JDK-8081652: [TESTBUG] java/lang/management/ThreadMXBean/
      /ThreadMXBeanStateTest.java timed out intermittently
    + JDK-8087327: CipherStream produces new byte array on every
      update or doFinal operation
    + JDK-8131745: java/lang/management/ThreadMXBean/
      /AllThreadIds.java still fails intermittently
    + JDK-8164408: Add module support for @see, @link and
      @linkplain javadoc tags.
    + JDK-8183040: update jdk/test/lib/Platform.java to use NIO file
    + JDK-8196094: javax/swing/JFileChooser/8002077/bug8002077.java
      fails
    + JDK-8196450: Deprecate JDWP/JDI
      canUnrestrictedlyRedefineClasses to match JVM TI capabilities
    + JDK-8198698: Support Lambda proxy classes in dynamic CDS
      archive
    + JDK-8222005: ClassRedefinition crashes with: guarantee(false)
      failed: OLD and/or OBSOLETE method(s) found
    + JDK-8222241: Example in ServiceLoader API docs should have
      one provides directive
    + JDK-8227647: [Graal] Test8009761.java fails due to
      "RuntimeException: static java.lang.Object
      compiler.uncommontrap.Test8009761.m3(boolean,boolean) not
      compiled"
    + JDK-8230743: StringJoiner does not handle too large strings
      correctly
    + JDK-8230744: Several classes throw OutOfMemoryError without
      message
    + JDK-8231283: Add support to jpackage to create install Linux
      packages in /usr hierarchy
    + JDK-8233215: jpackage doesn't allow enough flexibility for
      file type binding
    + JDK-8233244: Add tests for icons configuration in rpm/deb
      packages
    + JDK-8233705: Let artifact iteration running time be a
      function of incrementally tagged artifacts
    + JDK-8235521: Replacement API for
      Unsafe::ensureClassInitialized
    + JDK-8235564: javac crashes while compiling incorrect method
      invocation with member reference
    + JDK-8236108: tools/javac/lambda/LambdaParserTest.java timed
      out
    + JDK-8236282: [macos] Find permanent solution to macOS test
      timeout problem JDK-8235738
    + JDK-8236469: macOS devkit needs 64-bit SetFile for Catalina
    + JDK-8236697: Stack overflow with cyclic hierarchy in class
      file
    + JDK-8237210: Modify the header to include Oracle copyright
      line
    + JDK-8237243: [macOS] java/awt/event/KeyEvent/
      /DisabledTargetF10/DisabledTargetF10.html fails
    + JDK-8237354: Add option to jcmd to write a gzipped heap dump
    + JDK-8237456: Transform filtered through SAX filter mishandles
      character entities
    + JDK-8238204: run_tests.sh fails on macOS when called from
      test_jpackage.sh
    + JDK-8238585:
      JvmtiEventControllerPrivate::enter_interp_only_mode() should
      not make compiled methods on stack not_entrant
    + JDK-8239024: Kitchensink24HStress.java failed due to timeout
    + JDK-8240245: Avoid calling is_shared_class_visible() in
      SystemDictionary::load_shared_class()
    + JDK-8241439: jdk.NativeLibraryEvent hooks all opened regular
      files
    + JDK-8241680: crypto microbenchmarks need updating for
      disabled EC curves
    + JDK-8241770: Module xxxAnnotation() methods throw NCDFE if
      module-info.class found as resource in unnamed module
    + JDK-8242088: Replace mutually exclusive lists with concurrent
      alternatives
    + JDK-8242240: JfrStacktrace_lock rank not special enough
    + JDK-8242607: -Xdoclint doesn't report missing/unexpected
      comments
    + JDK-8242923: Trigger interface MethodHandle resolve in test
      without Nashorn.
    + JDK-8243380: Update Graal
    + JDK-8243424: Signature and SignatureSpi get parameter methods
      may return null when unsupported
    + JDK-8243451: nsk.share.jdi.Debugee.isJFR_active() is
      incorrect and corresponsing logic seems to be broken
    + JDK-8243535: NMT may show wrong numbers for CDS and CCS
    + JDK-8243597: AArch64: Add support for integer vector abs
    + JDK-8243655: Map.replace javadoc code snippet typo
    + JDK-8243999: DatagramSocket and MulticastSocket constructors
      don't specify how a null InetAddress is handled
    + JDK-8244282: test/hotspot/jtreg/compiler/intrinsics/
      /Test8237524.java fails with --illegal-access=deny
    + JDK-8244565: Accept PKCS #8 with version number 1
    + JDK-8244582: Remove terminally deprecated Solaris-specific
      SO_FLOW_SLA socket option
    + JDK-8244614: cleanup keywords used/available in hotspot
      testbase
    + JDK-8244621: [macos10.15] Garbled FX printing plus CoreText
      warnings on Catalina when building with Xcode 11
    + JDK-8244683: A TSA server used by tests
    + JDK-8244719: CTW: C2 compilation fails with
      "assert(!VerifyHashTableKeys || _hash_lock == 0) failed:
      remove node from hash table before modifying it"
    + JDK-8244920: Access violation in
      frames::interpreter_frame_method
    + JDK-8244933: DatagramSocket.connect does not specify that it
      may cause datagrams in the socket receive buffer to be
      discarded
    + JDK-8245043: Simplified contention benchmark
    + JDK-8245068: Implement Deprecation of RMI Activation
    + JDK-8245113: JFR Recorder Thread to run in thread state
      "_thread_in_native"
    + JDK-8245126: Kitchensink fails with:
      assert(!method->is_old()) failed: Should not be installing old
      methods
    + JDK-8245203: ZGC: Don't track size in ZPhysicalMemoryBacking
    + JDK-8245204: ZGC: Introduce ZListRemoveIterator
    + JDK-8245208: ZGC: Don't hold the ZPageAllocator lock while
      committing/uncommitting memory
    + JDK-8245283: JFR: Can't handle constant dynamic used by
      Jacoco agent
    + JDK-8245321: refactor the redefine check that an attribute
      consisting of a list of classes has not changed
    + JDK-8245487: Potential double-free of interfaces array
    + JDK-8245512: CRC32 optimization using AVX512 instructions
    + JDK-8245668: closed test javax/swing/JComboBox/4765319/
      /bug4765319.java fails on windows
    + JDK-8245686: Ed25519 and Ed448 present in handshake messages
    + JDK-8245788: EmptyFolderPackageTest fails on Windows 10
    + JDK-8245828: Remove unnecessary NetworkPermission checks from
      jdk/net/ExtendedSocketOptions.java
    + JDK-8245874: requires.extraPropDefns.vmOpts doesn't need
      -Xbootclasspath/a:bootClasses
    + JDK-8245938: Remove unused print_stack(void) method from
      XToolkit.c
    + JDK-8245958: j.l.Record need to mention that canonical
      constructor may not be public
    + JDK-8245981: Upgrade to jQuery 3.5.1
    + JDK-8246042: Non-ASCII characters are not handled correctly
      in the native launcher
    + JDK-8246129: ZIP entries created for DOS epoch include local
      timezone metadata
    + JDK-8246132: AsynchronousSocketChannelNAPITest failing with a
      NotYetConnectedException
    + JDK-8246199: 'permits' is a restricted identifier
    + JDK-8246220: ZGC: Introduce ZUnmapper to asynchronous unmap
      pages
    + JDK-8246260: JFR: Write event size field without padding
    + JDK-8246265: ZGC: Introduce ZConditionLock
    + JDK-8246272: Make use of GCLogPrecious for G1, Parallel and
      Serial
    + JDK-8246274: G1 old gen allocation tracking is not in a
      separate class
    + JDK-8246282: [REDO] JDK-8245121 (bf) XBuffer.put(Xbuffer src)
      can give unexpected result when storage overlaps
    + JDK-8246330: Add TLS Tests for Legacy ECDSA curves
    + JDK-8246340: Move SystemDictionary GC roots into OopStorage
    + JDK-8246353: Sealed types not supported by jshell
    + JDK-8246377: [PPC64] Further improvements for assembler stop
      function
    + JDK-8246382: assert in MetaspaceShared::map_archives
    + JDK-8246387: switch to jtreg 5.1
    + JDK-8246397: Use KnownOIDs for known OIDs
    + JDK-8246405: Add GCLogPrecious functionality to log and
      report debug errors
    + JDK-8246406: ZGC: Generate crash reports in debug builds for
      a few important errors paths
    + JDK-8246429: Javadoc comparators are not module-aware
    + JDK-8246431: java/net/httpclient/PathSubscriber tests fail
      due to missing FilePermission
    + JDK-8246435: Replace Javascript implementation of pandoc
      filters with Java
    + JDK-8246442: nmethod::can_convert_to_zombie() asserts when
      not called by the sweeper
    + JDK-8246451: Reduce overhead of normalizing file paths with
      trailing slash
    + JDK-8246453: TestClone crashes with "all collected exceptions
      must come from the same place"
    + JDK-8246478: Remove src/utils/reorder
    + JDK-8246484: Verify patch at start of COMPARE_BUILD=PATCH run
    + JDK-8246486: javac doesn't allow a subclass to be declared
      before a sealed superclass with no permits clause
    + JDK-8246557: test_os_linux.cpp uses NULL instead of
      MAP_FAILED to check for failed mmap call
    + JDK-8246572: Always pass java.library.path when running micro
      benchmarks
    + JDK-8246591: Shenandoah: move string dedup roots scanning to
      concurrent phase
    + JDK-8246592: Simplify checking of boolean file attributes
    + JDK-8246593: Shenandoah: string dedup roots should be
      processed during concurrent weak roots phase
    + JDK-8246612: Shenandoah: add timing tracking to
      ShenandoahStringDedupRoots
    + JDK-8246622: Remove CollectedHeap::print_gc_threads_on()
    + JDK-8246624: Refactor JLinkBundlerHelper and
      StandardBundlerParam classes
    + JDK-8246627: Consolidate app image bundlers
    + JDK-8246632: StringConcatFactory::makeConcatWithConstants no
      longer throws NullPointerException when an unexpected constant
      is null
    + JDK-8246640: @systemproperty should be @systemProperty in
      java.security.jgss
    + JDK-8246648: issue with OperatingSystemImpl
      getFreeSwapSpaceSize in docker after 8242480
    + JDK-8246662: Test java/time/test/java/time/format/
      /TestUnicodeExtension.java failed on japanese locale.
    + JDK-8246689: Enable independent compressed oops/class ptrs on
      Aarch64
    + JDK-8246696: Test: java/util/StringJoiner/
      /StringJoinerTest.java failing with OOM
    + JDK-8246697: Test: java/util/StringJoiner/
      /StringJoinerTest.java failing with OOM
    + JDK-8246705: javadoc gives "misleading" and incomplete
      warning message.
    + JDK-8246706: [macos] Allow SigningPackageTest to be built
      with real certificates
    + JDK-8246709: sun/security/tools/jarsigner/
      /TsacertOptionTest.java compilation failed after JDK-8244683
    + JDK-8246712: doclint incorrectly reports some HTML elements
      as empty
    + JDK-8246718: ParallelGC should not check for forward objects
      for copy task queue
    + JDK-8246719: remove LambdaStableNameTest from problem list
    + JDK-8246721: java/util/Locale/LocaleProvidersRun.java failed
      on Windows platforms.
    + JDK-8246729: MappedByteBuffer.force() throws
      IndexOutOfBoundsException
    + JDK-8246750: Docs bundle should be published to common dir
    + JDK-8246751: Mac OS build settings should use -O3
    + JDK-8246770: Atomic::add() with 64 bit value fails to link on
      32-bit platforms
    + JDK-8246792: Mac signing tests failed (unsealed contents
      present in the bundle root)
    + JDK-8246837: Rename WeakHandle<vm_class_loader_data> to
      better reflect its OopStorage association
    + JDK-8246926: Clean up newlines and whitespaces in hs_err files
    + JDK-8247115: Fix typos in java.lang.invoke and java.lang
    + JDK-8247201: Print potential pointer value of readable stack
      memory in hs_err file
    + JDK-8247212: Use assistant markup in
      java.lang.module.ModuleDescriptor
    + JDK-8247214: ZGC: ZUncommit initialization should use
      precious logging
    + JDK-8247220: Make OopHandle constructor explicit
    + JDK-8247235: doclint should permit "self-closing" tags for
      void elements in HTML5
    + JDK-8247236: fieldDescriptor::print_on_for prints extra
      newline after NULL
    + JDK-8247248: JVM TI Monitor queries might create JNI locals
      in another thread when using handshakes.
    + JDK-8247252: TestCombinedCompressedFlags.java failed
      src/hotspot/share/services/virtualMemoryTracker.cpp:388
      Error: ShouldNotReachHere()
    + JDK-8247266: Speed up
      test\jdk\jdk\jfr\event\gc\detailed\TestZUncommitEvent.java
    + JDK-8247269: JFR: Reduce allocation when using
      AnnotationElement
    + JDK-8247274: (test) HexPrinter cleanup
    + JDK-8247284: Zero VM is broken after JDK-8244920 ('class
      JavaFrameAnchor' has no member named 'set_last_Java_sp')
    + JDK-8247310: Shenandoah: pacer should not affect interrupt
      status
    + JDK-8247320: JFR: Reduce logging overhead
    + JDK-8247353: jtreg tests minor issues clean up
    + JDK-8247362: HeapDumpComressedTest fails
    + JDK-8247377: Zero and Minimal VMs are broken after
      JDK-8198698 ('SystemDictionaryShared' has not been declared)

-------------------------------------------------------------------
Wed Nov 25 16:41:10 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+26
  * Fixes:
    + JDK-8028701: java/awt/Focus/ShowFrameCheckForegroundTest/
      /ShowFrameCheckForegroundTest.java fails
    + JDK-8067986: Test javax/swing/JComboBox/ConsumedKeyTest/
      /ConsumedKeyTest.java fails
    + JDK-8153224: Monitor deflation prolong safepoints
    + JDK-8159597: [TEST_BUG] closed/javax/swing/JPopupMenu/
      /4760494/bug4760494.java leaves key pressed
    + JDK-8177280: @see {@link} syntax should allow generic types
    + JDK-8204994: SA might fail to attach to process with "Windbg
      Error: WaitForEvent failed"
    + JDK-8210649: AssertionError @ jdk.compiler/
      /com.sun.tools.javac.comp.Modules.enter(Modules.java:244)
    + JDK-8213129: java/awt/font/FontNames/LocaleFamilyNames.java
      times out in Win7
    + JDK-8216303: JFR: Simplify generated files
    + JDK-8221306: JVMTI spec for FramePop(), MethodExit(), and
      MethodEnter() could use some cleanup
    + JDK-8225056: VM support for sealed classes
    + JDK-8227044: javax.lang.model for sealed classes
    + JDK-8227045: Preview APIs support for sealed classes
    + JDK-8227046: compiler implementation for sealed classes
    + JDK-8227047: Javadoc for sealed types
    + JDK-8230552: Provide information when hitting a HaltNode for
      architectures other than x86
    + JDK-8230800: Clarify String::stripIndent javadoc when string
      ends with line terminator
    + JDK-8232841: [TESTBUG] [macos] SigningPackageTest fails when
      untrusted certificates exist on machine
    + JDK-8233550: [TESTBUG] JTree tests fail regularly on MacOS
    + JDK-8233551: [TESTBUG] SelectEditTableCell.java fails on MacOS
    + JDK-8233552: [TESTBUG] JTable Test bug7068740.java fails on
      MacOS
    + JDK-8233559: [TESTBUG] TestNimbusOverride.java is failing on
      macos
    + JDK-8233566: [TESTBUG] KeyboardFocusManager tests failing on
      MacoS
    + JDK-8233647: [TESTBUG] JColorChooser/Test8051548.java is
      failing on macos
    + JDK-8234628: Change BasicHashTables::new_entry() to use
      clamp()
    + JDK-8236823: Ensure that API documentation uses minified
      libraries
    + JDK-8237470: HttpResponse.BodySubscriber::ofFile throws UOE
      with non-default file systems
    + JDK-8237826: DocTrees should provide getType(DocTreePath)
      method
    + JDK-8238763: ObjectInputStream readUnshared method handling
      of Records
    + JDK-8239083: C1 assert(known_holder == NULL ||
      (known_holder->is_instance_klass() &&
      (!known_holder->is_interface() || ((ciInstanceKlass*)
      known_holder)->has_nonstatic_concrete_methods())), "should be
      non-static concrete method");
    + JDK-8239477: jdk/jfr/jcmd/TestJcmdStartStopDefault.java fails
      -XX:+VerifyOops with "verify_oop: rsi: broken oop"
    + JDK-8239827: The test OpenByUNCPathNameTest.java should be
      changed to be manual
    + JDK-8240259: Disable -Wshift-negative-value warnings
    + JDK-8240871: SSLEngine handshake status immediately after the
      handshake can be NOT_HANDSHAKING rather than FINISHED with
      TLSv1.3
    + JDK-8241004: NMT tests fail on unaligned thread size with
      debug build
    + JDK-8241519: javac crashes with wrong module-info.class in
      module path
    + JDK-8242281: IntStream.html#reduce doc should not mention
      average
    + JDK-8242504: Enhance the system clock to nanosecond precision
    + JDK-8242527: ZGC: TestUncommit.java fails due to "Exception:
      Uncommitted too fast"
    + JDK-8242897: KeyFactory.generatePublic( x509Spec ) failed
      with java.security.InvalidKeyException
    + JDK-8243430: use reproducible random in :vmTestbase_vm_gc
    + JDK-8243434: use reproducible random in
      :vmTestbase_vm_g1classunloading
    + JDK-8243506: SharedBaseAddress is ignored by -Xshare:dump
    + JDK-8243507: DatagramSocket constructors don't always specify
      what happens when passed invalid parameters
    + JDK-8244086: Following 8241492, strip mined loop may run
      extra iterations
    + JDK-8244278: Excessive code cache flushes and sweeps
    + JDK-8244573: java.lang.ArrayIndexOutOfBoundsException thrown
      for malformed class file
    + JDK-8244622: Remove SA's memory/FreeChunk.java. It's no
      longer used.
    + JDK-8244658: Remove dead code in code cache sweeper
    + JDK-8244660: Code cache sweeper heuristics is broken
    + JDK-8244668: Remove SA's javascript support
    + JDK-8244703: "platform encoding not initialized" exceptions
      with debugger, JNI
    + JDK-8244958: preferIPv4Stack and preferIPv6Addresses do not
      affect addresses returned by HostsFileNameService
    + JDK-8244993: Revert changes to OutputAnalyzer
      stderrShouldBeEmptyIgnoreVMWarnings() that allow version
      strings
    + JDK-8245061: Lookup::defineHiddenClass should throw
      ClassFormatError if this_class is not Class_info structure
    + JDK-8245121: (bf) XBuffer.put(Xbuffer src) can give
      unexpected result when storage overlaps
    + JDK-8245153: Unicode encoded double-quoted empty string does
      not compile
    + JDK-8245158: C2: Enable SLP for some manually unrolled loops
    + JDK-8245289: Clean up offset code in JavaClasses
    + JDK-8245432: Lookup::defineHiddenClass should throw
      UnsupportedClassVersionError if bytes are of an unsupported
      major or minor version
    + JDK-8245478: Implementation: JEP 379: Shenandoah: A
      Low-Pause-Time Garbage Collector (Production)
    + JDK-8245505: Prelink j.l.ref.Reference when loading AOT
      library
    + JDK-8245509: Crash handler itself crashes when reporting
      Unsafe.putInt(0) crash
    + JDK-8245596: Clarify Lookup::defineHiddenClass spec @throws
      IAE if the bytes has ACC_MODULE flag set
    + JDK-8245658: Arrays.java has two occurrences of bad unicode
      constants in Javadoc
    + JDK-8245707: Increase Metaspace reserve alignment
    + JDK-8245714: "Bad graph detected in build_loop_late" when
      loads are pinned on loop limit check uncommon branch
    + JDK-8245717: VM option "-XX:EnableJVMCIProduct" could not be
      repetitively enabled
    + JDK-8245718: Epsilon: improve configuration logging
    + JDK-8245831: Unify code parsing version strings on Mac and
      Windows
    + JDK-8245832: JDK build make-static-libs should build all JDK
      libraries
    + JDK-8245833: crash_with_sigfpe uses pthread_kill(SIGFPE) on
      macOS
    + JDK-8245854: JVM TI Specification for sealed classes
    + JDK-8245864: Obsolete BranchOnRegister
    + JDK-8245867: Logger/bundleLeak/BundleTest.java fails due to
      "OutOfMemoryError: Java heap space"
    + JDK-8245880: Shenandoah: check class unloading flag early in
      concurrent code root scan
    + JDK-8245942: Shenandoah: x86_32 builds fail after JDK-8245594
    + JDK-8245955: Shenandoah: Remove LRB/is_redundant optimization
    + JDK-8245957: Remove unused LIR_OpBranch::type after SPARC
      port removal
    + JDK-8245961: Shenandoah: move some root marking to concurrent
      phase
    + JDK-8245968: javax/swing/JTable/7124218/
      /SelectEditTableCell.java is added to ProblemList twice
    + JDK-8245986: AArch64: Provide information when hitting a
      HaltNode
    + JDK-8246010: AdditionalLaunchersTest is not enabled, and
      fails.
    + JDK-8246023: Obsolete LIRFillDelaySlot
    + JDK-8246040: java/foreign/TestAddressHandle fails on big
      endian platforms
    + JDK-8246044: ZGC: Rename ZDirector's max_capacity to
      soft_max_capacity
    + JDK-8246045: ZGC: Fix ZDirector::rule_high_usage() calculation
    + JDK-8246050: Improve scalability of MemoryScope
    + JDK-8246075: Missing logging in
      nmethod::oops_do_marking_epilogue() on early return path
    + JDK-8246095: Tweaks to memory access API
    + JDK-8246097: Shenandoah: limit parallelism in CLDG root
      handling
    + JDK-8246100: Shenandoah: walk roots in more efficient order
    + JDK-8246109: Remove unneeded undef CS
    + JDK-8246128: JFR: Fix warnings
    + JDK-8246130: JFR: TestInheritedAnnotations has incorrect
      validation
    + JDK-8246134: ZGC: Restructure hs_err sections
    + JDK-8246135: Save important GC log lines and print them when
      dumping hs_err files
    + JDK-8246152: Improve String concat bootstrapping
    + JDK-8246153: TestEliminateArrayCopy fails with
      -XX:+StressReflectiveCode
    + JDK-8246162: Shenandoah: full GC does not mark code roots
      when class unloading is off
    + JDK-8246183: Scanner/ScanTest.java fails due to SIGSEGV in
      StubRoutines::jshort_disjoint_arraycopy
    + JDK-8246193: Possible NPE in ENC-PA-REP search in AS-REQ
    + JDK-8246198: Typo in java/util/regex/Pattern.java
    + JDK-8246241: LambdaFormEditor should use a transform lookup
      key that is not a SoftReference
    + JDK-8246251: Adjust HelloClasslist after JDK-8230301
    + JDK-8246256: GenerateLinkOptData should not mutate the
      interim or bootstrap JDK
    + JDK-8246258: Enable hs_err heap printing earlier during
      initialization
    + JDK-8246259: JFR: Fetch VM memory pools without using streams
    + JDK-8246261: TCKLocalTime.java failed due to "AssertionError:
      expected [18:14:22] but found [18:14:23]"
    + JDK-8246263: jdk is not yet ready for new Copyright line.
    + JDK-8246290: Refine specification of
      javax.lang.model.element.Modifier::toString
    + JDK-8246338: Reduce overhead of normalizing file paths
    + JDK-8246342: Shenandoah: remove unused
      ShenandoahIsMarkedNextClosure
    + JDK-8246359: clarify confusing comment in
      ObjectMonitor::EnterI()'s race with async deflation
    + JDK-8246368: Add override for return tag of Modifier::toString
    + JDK-8246404: ZGC: Use GCLogPrecious for important logging
      lines
    + JDK-8246433: Shenandoah: walk roots in more efficient order
      in ShenandoahRootUpdater
    + JDK-8246434: Threads::print_on_error assumes that the heap
      has been set up
    + JDK-8246458: Shenandoah: TestAllocObjects.java test fail with
      -XX:+ShenandoahVerify

-------------------------------------------------------------------
Wed Nov 25 16:29:21 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+25
  * Fixes:
    + JDK-6949753: [TEST BUG]: java/awt/print/PageFormat/
      /PDialogTest.java needs update by removing an infinite loop
    + JDK-8166358: Re-enable String verification in
      java_lang_String::create_from_str()
    + JDK-8206925: Support the certificate_authorities extension
    + JDK-8215401: Add isEmpty default method to CharSequence
    + JDK-8227559: JFR: Slow dump with path-to-gc-roots=true
    + JDK-8228692: BitMap::reallocate might not clear some bits
    + JDK-8229856: [macos] Opening a menu on a JTextField can clear
      the text selection
    + JDK-8230827: javac gives inappropriate warning about
      potentially ambiguous methods
    + JDK-8233553: [TESTBUG] JSpinner test bug4973721.java fails on
      MacOS
    + JDK-8235921: jdk/jfr/event/oldobject/TestLargeRootSet.java
      times out with debug bits
    + JDK-8237908: [TESTBUG] [macos] Add support to jtreg helpers
      to unpack pkg packages
    + JDK-8238085: PIT: javax/swing/JSpinner/8223788/
      /JSpinnerButtonFocusTest.java fails on Mac
    + JDK-8238592: JFR: Crash when dumping paths to gc roots on
      deep heaps
    + JDK-8238824: [macos] javax/swing/JSpinner/4840869/
      /bug4840869.java fails on macos
    + JDK-8239013: java.util.logging.Logger catalog cache keeps
      strong references to ResourceBundles
    + JDK-8239480: Support for CLDR version 37
    + JDK-8241312: missing code coverage for records
    + JDK-8241389: URLConnection::getHeaderFields returns result
      inconsistent with getHeaderField/Key for FileURLConnection,
      FtpURLConnection
    + JDK-8242150: [GRAAL] Add jtreg "serviceability/sa/
      /ClhsdbJstackXcompStress.java" to graal problem list
    + JDK-8242786: [macos] tools/jpackage/share/IconTest.java
      fails: ABORT trying to dequeue work
    + JDK-8243099: SO_INCOMING_NAPI_ID support
    + JDK-8243339: AArch64: Obsolete UseBarriersForVolatile option
    + JDK-8243392: Remodel CDS/Metaspace storage reservation
    + JDK-8243491: Implementation of Foreign-Memory Access API
      (Second Incubator)
    + JDK-8243925: Toolkit#getScreenInsets() returns wrong value on
      HiDPI screens (Windows)
    + JDK-8243936: NonWriteable system properties are actually
      writeable
    + JDK-8244203: sun/tools/jhsdb/
      /HeapDumpTestWithActiveProcess.java fails with
      NullPointerException
    + JDK-8244224: Implementation of JEP 381: Remove the Solaris
      and SPARC Ports
    + JDK-8244504: C2: refactor counted loop code in preparation
      for long counted loop
    + JDK-8244571:
      assert(!_thread->is_pending_jni_exception_check()) failed:
      Pending JNI Exception Check during class loading
    + JDK-8244729: Shenandoah: remove resolve paths from
      SBSA::generate_shenandoah_lrb
    + JDK-8244817: Add configuration logging similar to ZGCs to
      other GCs
    + JDK-8244946: fatal error: memory leak: allocating without
      ResourceMark with -XX:+Verbose -Xlog:methodhandles
    + JDK-8244949: [PPC64] Reengineer assembler stop function
    + JDK-8245022: ParallelGC abuses StarTask to also include
      partial objarray scan tasks
    + JDK-8245062: HtmlStyle: group and document members for nav,
      header, summary, details
    + JDK-8245086: G1: Rename measured pause time ratios
    + JDK-8245087: Use ratios instead of percentages in
      G1HeapSizingPolicy::expansion_amount
    + JDK-8245088: Always provide logs for G1 heap expansion
      calculations
    + JDK-8245120: JFR: Parser unable to return typed version
    + JDK-8245134: test/lib/jdk/test/lib/security/KeyStoreUtils.java
      should allow to specify aliases
    + JDK-8245165: Update bug id for javax/swing/text/
      /StyledEditorKit/4506788/bug4506788.java in ProblemList
    + JDK-8245179: JvmciNotifyBootstrapFinishedEventTest.java fails
      with custom Tiered Level set externally
    + JDK-8245202: Convert existing jpackage tests to newer form.
    + JDK-8245240: Shenandoah: support nesting evacuation OOM scope
    + JDK-8245241: Incorrect locale provider preference is not
      logged
    + JDK-8245260: Missing file header for
      test/hotspot/jtreg/containers/docker/TEST.properties
    + JDK-8245264: Test runtime/cds/appcds/SignedJar.java fails
    + JDK-8245288: Shenandoah: move up ShenandoahEvacOOM scope for
      code root processing during concurrent class unloading
    + JDK-8245335: [TESTBUG] DeterministicDump.java fails with
      release JVM
    + JDK-8245392: Remove duplication in class redefinition and
      retransformation specs
    + JDK-8245401: AbsPathsInImage.java fails on Windows on jdwp.dll
    + JDK-8245455: Remove alternative StringConcatFactory strategies
    + JDK-8245464: Shenandoah: allocate collection set bitmap at
      lower addresses
    + JDK-8245465: Shenandoah: test_in_cset can use more efficient
      encoding
    + JDK-8245517: java/net/SocketOption/AfterClose.java fails with
      Invalid value 'READ_ONLY'
    + JDK-8245518: Problem list
      java/net/SocketOption/AfterClose.java
    + JDK-8245521: Remove STACK_BIAS
    + JDK-8245569: Add jtreg tests for SO_INCOMING_NAPI_ID
    + JDK-8245582: j.net.URLConnection::getHeaderFieldKey(int)
      behavior does not reliably conform to its specification
    + JDK-8245594: Remove volatile-qualified member functions and
      parameters from oop class
    + JDK-8245600: Clean up libjli
    + JDK-8245610: remove in-tree copy on gtest
    + JDK-8245619: Remove unused methods in UnixNativeDispatcher
    + JDK-8245623: Remove unused code in sun/nio/fs after Solaris
      removal
    + JDK-8245665: Test WeakAlg.java should only make sure no
      warning for weak signature algorithms by keytool on root CA
    + JDK-8245677: Optimize lookups in empty HashMaps
    + JDK-8245678: Avoid allocations in
      Executable.getAllGenericParameterTypes
    + JDK-8245691: Add EdDSA certificstes to SSLSocketTemplate and
      CertUtils
    + JDK-8245703: 32-bit build failures after JDK-8243392
    + JDK-8245720: Shenandoah: improve configuration logging
    + JDK-8245722: 32-bit build failures after JDK-8243491
    + JDK-8245723: Remove PrintCompressedOopsMode and change
      gc+heap+coops info log to debug level
    + JDK-8245724: Move g1 periodic gc logging to G1InitLogger
    + JDK-8245726: Shenandoah: lift/cleanup ShenandoahHeuristics
      names and properties
    + JDK-8245754: Shenandoah: ditch ShenandoahAlwaysPreTouch
    + JDK-8245755: Shenandoah: missing logging for CWR Roots
    + JDK-8245756: Reduce bootstrap cost of StringConcatFactory
      prependers
    + JDK-8245757: Shenandoah: AlwaysPreTouch should not disable
      heap resizing or uncommits
    + JDK-8245761: [TESTBUG] runtime/logging/
      /TestMethodHandlesVerbose.java fails with release VMs
    + JDK-8245773: Shenandoah: Windows assertion failure after
      JDK-8245464
    + JDK-8245786: Scope is wrong for ClassTree representing record
    + JDK-8245801: StressRecompilation triggers assert "redundunt
      OSR recompilation detected. memory leak in CodeCache!"
    + JDK-8245812: Shenandoah: compute root phase parallelism
    + JDK-8245814: Shenandoah: reconsider format specifiers for
      stats
    + JDK-8245823: Shenandoah: inline/optimize
      ShenandoahEvacOOMScope
    + JDK-8245825: Shenandoah: Remove diagnostic flag
      ShenandoahConcurrentScanCodeRoots
    + JDK-8245827: Shenandoah: Cleanup Shenandoah code root
      iterators and root scanner
    + JDK-8245841: Remove unused
      com.sun.tools.javac.comp.Modules.XMODULES_PREFIX
    + JDK-8245847: Update Profile.java to not require per-release
      updates
    + JDK-8245850: Obsolete UseLWPSynchronization
    + JDK-8245870: GTEST_FRAMEWORK_SRC should go through
      UTIL_FIXUP_PATH
    + JDK-8245959: Extend String concat testing to account for
      folded constants
    + JDK-8245969: Simplify String concat constant folding
    + JDK-8246027: Minimal fastdebug build broken after JDK-8245801
    + JDK-8246034: Remove
      java.base/share/classes/jdk/internal/jrtfs/jrtfsviewer.js and
      java.base/share/classes/jdk/internal/jrtfs/jrtls.js

-------------------------------------------------------------------
Wed Nov 25 16:18:15 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+24
  * Fixes:
    + JDK-8166597: Crypto support for the EdDSA Signature Algorithm
    + JDK-8209632: Develop new tests for EdDSA API
    + JDK-8209774: Refactor shell test
      javax/xml/jaxp/common/8035437/run.sh to java
    + JDK-8218173: exception during StringConcatFactory clinit
      breaks string concat with no fallback
    + JDK-8218482: sun/security/krb5/auto/ReplayCachePrecise.java
      failed - no KrbException thrown
    + JDK-8229829: java/lang/management/ThreadMXBean/Locks.java
      fails with java.lang.RuntimeException: Thread WaitingThread
      is at WAITING state but is expected to be in
      Thread.State = WAITING
    + JDK-8231264: Implementation of JEP 374: Disable
      biased-locking and deprecate all flags related to
      biased-locking
    + JDK-8232213: runtime/MemberName/MemberNameLeak.java fails
      intermittently
    + JDK-8233706: JFR emergency dump should be performed after
      error reporting
    + JDK-8235211: serviceability/attach/
      /RemovingUnixDomainSocketTest.java fails with
      AttachNotSupportedException: Unable to open socket file
    + JDK-8235673: [C1, C2] Split inlining control flags
    + JDK-8237971: Package type for runtime image on macosx
    + JDK-8239383: Support for Unicode 13.0
    + JDK-8239816: Make handling of module / package / types
      consistent.
    + JDK-8240228: "make hotspot-ide-project" on Windows creates a
      Visual Studio project with empty preprocessor defines
    + JDK-8240588: _threadObj cannot be used on an exiting
      JavaThread
    + JDK-8241062: Shenandoah: rich asserts trigger "empty
      statement" inspection
    + JDK-8241070: Shenandoah: remove unused local variables in C2
      support
    + JDK-8241072: Reimplement the Legacy DatagramSocket API
    + JDK-8241080: Consolidate signature parsing code in
      serviceability tools
    + JDK-8241305: Add protocol specific factory creation methods
      to SocketChannel and ServerSocketChannel
    + JDK-8241616: Timestamps on ct.sym entries lead to
      non-reproducible builds
    + JDK-8242151: Improve OID mapping and reuse among JDK security
      providers for aliases registration
    + JDK-8242424: Deprecate InitialBootClassLoaderMetaspaceSize
    + JDK-8242478: compiler implementation for records (Second
      Preview)
    + JDK-8242524: Use different default CDS archives depending on
      UseCompressOops
    + JDK-8242901: Duplicate PSYoung/OldGen max size functions
    + JDK-8243012: Fix issues in j.l.i package info
    + JDK-8243147: Deprecate UseLargePagesInMetaspace
    + JDK-8243396: Add a brief description of argfiles to the
      javadoc help output
    + JDK-8243417: Clean up com.sun.tools.javac.main.CommandLine
    + JDK-8243947: [TESTBUG] hotspot/jtreg:hotspot_appcds_dynamic
      fails when the JDK doesn't have default CDS archive
    + JDK-8243996: Remove hardcoded field offsets from HotSpot
    + JDK-8244031: HttpClient should have more tests for HEAD
      requests
    + JDK-8244093: Move all IDE support into coherent structure in
      make directory
    + JDK-8244164: AArch64: jaotc generates incorrect code for
      compressed OOPs with non-zero heap base
    + JDK-8244170: [aarch64] correct instruction typo for dcps1/2/3
    + JDK-8244183: linker error jpackageapplauncher on Windows 32bit
    + JDK-8244291: Test: gc/z/TestGarbageCollectorMXBean.java
      failed: "unexpected cycles"
    + JDK-8244340: Handshake processing thread lacks yielding
    + JDK-8244342: Compilation warnings about unexpected
      serialization related method signatures.
    + JDK-8244416: Remove incorrect assert during inline cache
      cleaning
    + JDK-8244433: Remove saving of RSP in
      Assembler::pusha_uncached()
    + JDK-8244536: cds/DeterministicDump.java failed: File content
      different
    + JDK-8244576: [macos] Volume icon deleted by osascript for
      background image
    + JDK-8244652: Add test for non utf-8 response handling by
      websocket
    + JDK-8244663: Shenandoah: C2 assertion fails in
      Matcher::collect_null_checks
    + JDK-8244684: G1 abuses StarTask to also include partial
      objarray scan tasks
    + JDK-8244721: CTW: C2 (Shenandoah) compilation fails with
      "unexpected infinite loop graph shape"
    + JDK-8244733: Add ResourceHashtable::xxx_if_absent
    + JDK-8244752: Enable Linux support for multiple huge page
      sizes -XX:LargePageSizeInBytes
    + JDK-8244775: Remove unnecessary dependency to jfrEvents.hpp
    + JDK-8244777: ClassLoaderStats VM Op uses constant hash value
    + JDK-8244819: hsdis does not compile with binutils 2.34+
    + JDK-8244852: GraalVM native-image fails after JDK-8238048
      change
    + JDK-8244853: The static build of libextnet is missing the
      JNI_OnLoad_extnet function
    + JDK-8244936: Reduce JNI overhead of accessing FileDescriptor
    + JDK-8244945: Mark VS2019 as supported and default
    + JDK-8244951: Missing entitlements for hardened runtime
    + JDK-8244953: Shenandoah: gc/shenandoah/TestStringInternCleanup
      fails with broken string table root
    + JDK-8244961: MethodHandles::privateLookupIn throws NPE when
      called during initPhase2
    + JDK-8244966: Add .vscode to .hgignore and .gitignore
    + JDK-8244971: Zero VM is broken after JDK-8241825
      (COMPRESSED_CLASS_POINTERS_DEPENDS_ON_COMPRESSED_OOPS not
      defined)
    + JDK-8244973: serviceability/attach/
      /RemovingUnixDomainSocketTest.java fails "stderr was not
      empty"
    + JDK-8244981: jpackage error due to missing final newline in
      Debian control file
    + JDK-8245000: Windows GDI functions don't support large pages
    + JDK-8245002: Windows GDI functions don't support NUMA
      interleaving
    + JDK-8245005: javax/net/ssl/compatibility/BasicConnectTest.java
      failed with No enum constant
    + JDK-8245024: Simplify and eagerly initialize
      StringConcatFactory
    + JDK-8245032: Remove exceptions from compare.sh
    + JDK-8245033: Fixes for building in WSL
    + JDK-8245035: Clean up os::split_reserved_memory()
    + JDK-8245041: Fix incorrect output order in configure
    + JDK-8245042: Improve scalability of reading Windows
      Performance counters via PDH when using the Process object
    + JDK-8245046: SetupTarget incorrect for hotspot-ide-project
    + JDK-8245047: [PPC64] C2: ReverseBytes + Load always match to
      unordered Load (acquire semantics missing)
    + JDK-8245051: c1 is broken if it is compiled by gcc without
      -fno-lifetime-dse
    + JDK-8245070: 32-bit builds are broken after JDK-8242524
    + JDK-8245083: [REDO] Shenandoah: Remove null-handling in LRB
      expansion
    + JDK-8245093: WSL support broke cygwin toolchain detection
    + JDK-8245094: Reduce overhead of initializing the default
      StringConcatFactory strategy
    + JDK-8245096: Better windows environment output in configure
    + JDK-8245098: Make SafeFetch32/N available earlier
    + JDK-8245106: ZGC: Fix incorrect setup when using
      -XX:+UseTransparentHugePages
    + JDK-8245111: Update doc comments for improved processing by
      the Standard Doclet
    + JDK-8245119: Fix include path for hotspot-ide-project
    + JDK-8245124: Shenandoah: optimize code root evacuation/update
      during concurrent class unloading
    + JDK-8245137: aarch64 ICache flush depends on enabling gnu
      extensions
    + JDK-8245146: Update description of SourceVersion.RELEASE_15
      with text blocks
    + JDK-8245147: Refactor and improve utility of
      test/langtools/tools/javac/versions/Versions.java
    + JDK-8245151: jarsigner should not raise duplicate warnings on
      verification
    + JDK-8245168: jlink should not be treated as a "small" tool
    + JDK-8245196: ZGC: No need to disable UseBiasedLocking by
      default
    + JDK-8245231: Javadoc for the readObject methods needs to be
      updated
    + JDK-8245233: ZGC: Load volatile oops using Atomic::load()
    + JDK-8245236: Remove MO_VOLATILE Access decorator
    + JDK-8245280: Add runtime/cds/appcds/SignedJar.java to problem
      list
    + JDK-8245281: Disabling hotspot gtest builds make it
      impossible to run tests
    + JDK-8245287: Start using ModuleWrapper for gensrc as well
    + JDK-8245398: Remove addition preview adornment from
      String::formatted
    + JDK-8245428: Remove unused oopFactory functions
    + JDK-8245445: Langtools NetBeans ant build broken after
      JDK-8244093
    + JDK-8245450: ZGC: Remove unused
      ZArguments::initialize_platform()
    + JDK-8245461: Shenandoah: refine mode name()-s
    + JDK-8245463: Shenandoah: refine ShenandoahPhaseTimings
      constructor arguments

-------------------------------------------------------------------
Wed Nov 25 16:10:18 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upsteam tag jdk-15+23
  * Fixes:
    + JDK-6415694: Clarification in Javadoc for
      java.rmi.AlreadyBoundException
    + JDK-8022574: remove HaltNode code after uncommon trap calls
    + JDK-8062947: Fix exception message to correctly represent
      LDAP connection failure
    + JDK-8147018: CompilerControl: Improve handling of timeouts
      and failures for tests
    + JDK-8172269: When checking the default behaviour for a scroll
      tab layout and checking the 'opaque' checkbox, the area behind
      tabs is not red
    + JDK-8193066: Avoid use of capturing lambdas in JarFile
    + JDK-8194874: SA: Remove scripts with sa-jdi.jar dependencies.
    + JDK-8221305: java/awt/FontMetrics/MaxAdvanceIsMax.java fails
      on MacOS + Solaris
    + JDK-8221902: PIT: javax/swing/JRadioButton/FocusTraversal/
      /FocusTraversal.java fails on ubuntu
    + JDK-8224613: javadoc should better handle bad options
    + JDK-8232243: Wrong caret position in JTextPane on Windows
      with a screen resolution > 100%
    + JDK-8233638: [TESTBUG] Swing test
      ScreenMenuBarInputTwice.java fails on macos
    + JDK-8233642: [TESTBUG] JMenuBar test bug 4750590.java fails
      on macos
    + JDK-8233643: [TESTBUG] JMenu test bug4515762.java fails on
      macos
    + JDK-8236518: There is no Native Packages
      WinUpgradeUUIDTest-2.0.exe after creating Native packages on
      win
    + JDK-8237834: com/sun/jndi/ldap/LdapDnsProviderTest.java
      failing with LDAP response read timeout
    + JDK-8237888: security/infra/java/security/cert/
      /CertPathValidator/certification/LuxTrustCA.java fails when
      checking validity interval
    + JDK-8240910: jmod rejects duplicate entries in --class-path
      jars
    + JDK-8241086: Test runtime/NMT/HugeArenaTracking.java is
      failing on 32bit Windows
    + JDK-8241825: Make compressed oops and compressed class
      pointers independent (x86_64, PPC, S390)
    + JDK-8241934: Simplify parse_stream() and remove
      has_class_mirror_holder_cld()
    + JDK-8242009: Review setting test.java/vm.opts in jcmd/jhsdb
      and debugger in serviceability tests
    + JDK-8242060: Add revocation checking to jarsigner
    + JDK-8242188: [TESTBUG] error in jtreg test
      jdk/jfr/api/consumer/TestRecordedFrame.java on linux-aarch64
    + JDK-8242429: Better implementation for sign extract
    + JDK-8242919: Paste locks up jshell
    + JDK-8242934: test/jdk/jdk/jfr/tool/TestPrintJSON.java uses
      nashorn script engine
    + JDK-8243452: JFR: Could not create chunk in repository with
      over 200 recordings
    + JDK-8243596: ModuleLayer::parents should return an
      unmodifiable list
    + JDK-8244094: Fix Amazon copyright in various test files
    + JDK-8244151: Update MUSCLE PC/SC-Lite headers to the latest
      release 1.8.26
    + JDK-8244205: HTTP/2 tunnel connections through proxy may be
      reused regardless of which proxy is selected
    + JDK-8244207: Simplify usage of Compile::print_method() when
      debugging with gdb and enable its use with rr
    + JDK-8244243: Shenandoah: Cleanup Shenandoah phase timing
      tracking and JFR event supporting
    + JDK-8244245: localizedBy() should override localized values
      with default values
    + JDK-8244248: boot-jdk.m4 captures the version line using regex
    + JDK-8244267: Improve serviceability task definitions in CI
    + JDK-8244407: JVM crashes after transformation in C2
      IdealLoopTree::split_fall_in
    + JDK-8244495: Some jlink tests crash on Windows after
      JDK-8237750
    + JDK-8244508: JFR: FlightRecorderOptions reset date format
    + JDK-8244509: Shenandoah: refactor
      ShenandoahBarrierC2Support::test_* methods
    + JDK-8244510: Shenandoah: invert SHC2Support::is_in_cset
      condition
    + JDK-8244523: Shenandoah: Remove null-handling in LRB expansion
    + JDK-8244542: ProblemList cds/DeterministicDump.java for
      Windows
    + JDK-8244550: Unsafe::allocateInstance does redundant
      transitions
    + JDK-8244551: Shenandoah: Fix racy update of update_watermark
    + JDK-8244557: test/jdk/javax/swing/JTabbedPane/
      /TestBackgroundScrollPolicy.java failed
    + JDK-8244592: Start supporting SOURCE_DATE_EPOCH
    + JDK-8244594: [BACKOUT] 8244523: Shenandoah: Remove
      null-handling in LRB expansion
    + JDK-8244595: [REDO] 8244523: Shenandoah: Remove null-handling
      in LRB expansion
    + JDK-8244606: Non-PCH build is broken after JDK-8244550
    + JDK-8244615: build-performance.m4 is not always parsing
      /proc/cpuinfo correctly
    + JDK-8244618: WinUpgradeUUIDTest.java fails after JDK-8236518
    + JDK-8244620: Fix test WinUpgradeUUIDTest failures in Mach5
    + JDK-8244624: Improve handling of JarFile META-INF resources
    + JDK-8244625: Zero VM is broken after JDK-8244550
      (java_lang_Class::as_Klass(oopDesc*) undefined)
    + JDK-8244634: LoadLibraryW failed from tools/jpackage tests
      after JDK-8242302
    + JDK-8244653: Suppress gcc 9.1 ABI change notes on aarch64
    + JDK-8244661: JFR: Remove use of thread-locals for java.base
      events
    + JDK-8244667: Shenandoah: SBC2Support::test_gc_state takes
      loop for wrong control
    + JDK-8244673: Add periods to SourceVersion.isName javadoc
    + JDK-8244674: Third-party code version check
    + JDK-8244676: test/jdk/jdk/jfr/startupargs/
      /TestOptionsWithLocale.java fails
    + JDK-8244714: G1 young gen sizer allows zero young gen with
      huge -XX:NewRatio
    + JDK-8244730: Shenandoah: gc/shenandoah/options/
      /TestHeuristicsUnlock.java should only verify the heuristics
    + JDK-8244732: Shenandoah: move heuristics code to
      gc/shenandoah/heuristics
    + JDK-8244737: Shenandoah: move mode code to gc/shenandoah/mode
    + JDK-8244739: Shenandoah: break superclass dependency on
      ShenandoahNormalMode
    + JDK-8244740: Shenandoah: rename ShenandoahNormalMode to
      ShenandoahSATBMode
    + JDK-8244756: Build broken with some awk version after
      JDK-8244248
    + JDK-8244757: Introduce SetupTarget in Main.gmk
    + JDK-8244758: DMG bundler ignores --install-dir option.
    + JDK-8244759: Shenandoah: print verbose class unloading
      counters
    + JDK-8244767: Potential non-terminated string in
      getEncodingInternal() on Windows
    + JDK-8244779: ProblemList serviceability/jvmti/HiddenClass/
      /P/Q/HiddenClassSigTest.java pending JDK-8244571
    + JDK-8244807: Shenandoah: ditch filter in
      ShenandoahUnload::unload
    + JDK-8244813: [BACKOUT] 8244523: Shenandoah: Remove
      null-handling in LRB expansion
    + JDK-8244815: Always log MMU information in G1
    + JDK-8244821: Shenandoah: disarmed_value is initialized at
      wrong place
    + JDK-8244844: javac command line is not re-executable
    + JDK-8244855: Remove unused "getParent" function from Windows
      jni_util_md.c
    + JDK-8244928: Build log output too verbose after JDK-8244844
    + JDK-8244930: Building without test failure handler broken
      after JDK-8244844

-------------------------------------------------------------------
Wed Nov 25 16:02:04 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+22
  * Fixes:
    + JDK-7185258: [macosx] Deadlock in SunToolKit.realSync()
    + JDK-8169953: JComboBox/8057893: ComboBoxEdited event is not
      fired! on Windows
    + JDK-8178349: Cache builtin class loader constraints to avoid
      re-initializing itable/vtable for shared classes
    + JDK-8183266: [TESTBUG]Add test to cover
      XPathEvaluationResult.XPathResultType.getQNameType method
    + JDK-8197797: Test
      java/awt/Graphics2D/DrawString/RotTransText.java fails
    + JDK-8208566: [TEST_BUG]
      javax\swing\text\GlyphPainter2\6427244\bug6427244.java: Test
      failed
    + JDK-8213123: javax/swing/JButton/4368790/bug4368790.java
      fails on mac
    + JDK-8214797: TestJmapCoreMetaspace.java timed out
    + JDK-8219536: Add Option for user defined jlink options
    + JDK-8225068: Remove DocuSign root certificate that is
      expiring in May 2020
    + JDK-8225069: Remove Comodo root certificate that is expiring
      in May 2020
    + JDK-8226464: TitledBorder label appears cut off on hidpi
      devices
    + JDK-8230402: Allocation of compile task fails with assert:
      "Leaking compilation tasks?"
    + JDK-8230672: Specification for
      java.awt.FontMetrics.getMaxAdvance() is too prescriptive
    + JDK-8230940: Obsolete MonitorBound
    + JDK-8232744: j.awt.Window::setShape(Shape) paints visible
      artifacts outside of the given shape
    + JDK-8233166: jpackage tool skips empty directories
    + JDK-8233439: G1 zero_filled optimization when committing
      CardCountsTable does not work
    + JDK-8236177: assert(status == 0) failed: error ETIMEDOUT(60),
      cond_wait
    + JDK-8236980: Cleanup of toString methods in JavaSound
    + JDK-8237750: Load libzip.so only if necessary
    + JDK-8237777: "Dumping core ..." is shown despite claiming
      that "# No core dump will be written."
    + JDK-8238575: DragSourceEvent.getLocation() returns wrong
      value on HiDPI screens (Windows)
    + JDK-8239385: KerberosTicket client name refers wrongly to
      sAMAccountName in AD
    + JDK-8240666: Websocket client's OpeningHandshake discards the
      HTTP response body
    + JDK-8240679: ZGC GarbageCollectorMXBean reports inaccurate
      post GC heap size for ZHeap pool
    + JDK-8241071: Generation of classes.jsa with -Xshare:dump is
      not deterministic
    + JDK-8241100: Make Boolean, Character, Byte, and Short
      implement Constable
    + JDK-8241602: jlink does not produce reproducible jimage files
    + JDK-8241793: Shenandoah: Enable concurrent class unloading
      for aarch64
    + JDK-8242335: Additional Tests for RSASSA-PSS
    + JDK-8242502: UnexpectedDeoptimizationTest.java failed
      "assert(phase->type(obj)->isa_oopptr()) failed: only for oop
      input"
    + JDK-8242522: Minor LingeredApp improvements
    + JDK-8242532: convert tests to use Text Blocks
    + JDK-8242541: Small charset issues (ISO8859-16, x-eucJP-Open,
      x-IBM834 and x-IBM949C)
    + JDK-8242557: Add length limit for strings in PNGImageWriter
    + JDK-8242865: Usability problems using mac signing in jpackage
    + JDK-8242898: Clean up InstanceKlass::_array_klasses
    + JDK-8243155: AArch64: Add support for SqrtVF
    + JDK-8243325: Cleanup TaskQueueSuper<>::peek
    + JDK-8243388: Moving search result selection clears search
      input
    + JDK-8243427: use reproducible random in :vmTestbase_vm_mlvm
    + JDK-8243428: use reproducible random in
      :vmTestbase_vm_compiler
    + JDK-8243429: use reproducible random in :vmTestbase_nsk_stress
    + JDK-8243431: use reproducible random in
      :vmTestbase_vm_metaspace
    + JDK-8243432: use reproducible random in :vmTestbase_vm_defmeth
    + JDK-8243433: use reproducible random in
      :vmTestbase_nsk_sysdict
    + JDK-8243435: use reproducible random in :vmTestbase_nsk_jvmti
    + JDK-8243436: use reproducible random in
      :vmTestbase_nsk_monitoring
    + JDK-8243437: use reproducible random in :vmTestbase_nsk_jdi
    + JDK-8243453: java --describe-module failed with non-ASCII
      module name under non-UTF8 environment
    + JDK-8243488: Add tests for set/get SendBufferSize and
      getReceiveBufferSize in DatagramSocket
    + JDK-8243495: Shenandoah: print root statistics for concurrent
      weak/strong root phases
    + JDK-8243548: Javac incorrectly collects enum fields when
      verifying switch expression exhaustivness
    + JDK-8243557: Inconvenient span for multi-catch error
      diagnostics
    + JDK-8243572: Multiple tests fail with assert(cld->klasses()
      != 0LL) failed: unexpected NULL for cld->klasses()
    + JDK-8243573: Shenandoah: rename GCParPhases and related code
    + JDK-8243598: Typos in java.lang.invoke package-info
    + JDK-8243628: Deprecate -XX:ForceNUMA option
    + JDK-8243656: Shell built-in test in configure depends on help
    + JDK-8243945: use driver mode in runtime tests
    + JDK-8243961: ForceNUMA and only one available NUMA node fails
      assertion on Windows
    + JDK-8244018: No error message for non-existent icon path
    + JDK-8244078: ProcessTools executeTestJvm and
      createJavaProcessBuilder have inconsistent handling of
      test.*.opts
    + JDK-8244087: 2020-04-24 public suffix list update
    + JDK-8244107: Incorrect parameters in ReservedSpace
      constructor change
    + JDK-8244113: [TESTBUG] java/awt/font/Rotate/
      /RotatedSyntheticBoldTest.java test comments interpreted as
      args.
    + JDK-8244133: Refactor nsk/jdi tests to reduce code
      duplication in settingBreakpoint communication
    + JDK-8244141: use @requires and SkippedException in some
      hotspot/runtime tests
    + JDK-8244142: some hotspot/runtime tests don't check exit code
      of forked JVM
    + JDK-8244149: jdk/jfr/api/consumer/recordingstream/
      /TestOnEvent.java times out
    + JDK-8244152: Remove unnecessary hash map resize in
      LocaleProviderAdapters
    + JDK-8244173: Uncomment subtest in
      runtime/InvocationTests/invocationC1Tests.java
    + JDK-8244180: Shenandoah: carry Phase to
      ShWorkerTimingsTracker explicitly
    + JDK-8244182: Use root node as default for find_node when
      called from debugger
    + JDK-8244186: assertion failure
      test/jdk/javax/net/ssl/DTLS/RespondToRetransmit.java
    + JDK-8244196: adjust output in os_linux
    + JDK-8244200: Shenandoah: build breakages after JDK-8241743
    + JDK-8244210: The javac server is never used
    + JDK-8244214: Change to VS2019 for building on Windows at
      Oracle
    + JDK-8244220: Compiler error in jpackage with VS2019
    + JDK-8244226: Shenandoah: per-cycle statistics contain worker
      data from previous cycles
    + JDK-8244247: Build failures after sjavac cleanup
    + JDK-8244276: Zero and minimal VM build failure after
      JDK-8178349 (use of undeclared identifier
      'SystemDictionaryShared')
    + JDK-8244281: test/jdk/com/sun/crypto/provider/KeyProtector/
      /IterationCount.java fails with --illegal-access=deny
    + JDK-8244283: test/jdk/sun/net/idn/TestStringPrep.java fails
      with --illegal-access=deny
    + JDK-8244284: Two tests in test/hotspot/jtreg/vmTestbase fail
      with --illegal-access=deny
    + JDK-8244292: Headful clients failing with
      --illegal-access=deny
    + JDK-8244293: Remove outdated @apiNote in java.util.Objects
    + JDK-8244307: Improve assertions against taskqueue underflow
    + JDK-8244326: Shenandoah: global statistics should not accept
      bogus samples
    + JDK-8244328: Shenandoah: move
      ShenandoahThreadLocalData::_disarmed_value initialization
    + JDK-8244384: @requires-related clean up in gc/metaspace/ tests
    + JDK-8244385: various clean-ups in runtime tests
    + JDK-8244413: Avoid rebinds in MethodHandle.viewAsType
    + JDK-8244420: Shenandoah: Ensure _disarmed_value offset < 128
    + JDK-8244444: [TESTBUG] Test for
      XPathEvaluationResult.XPathResultType
    + JDK-8244459: Optimize the hash map size in
      LocaleProviderAdapters
    + JDK-8244463: JFR: Clean up jdk.jfr.internal.RepositoryChunk
    + JDK-8244485: runtime/cds/appcds/TestZGCWithCDS.java fails
      after 8244385
    + JDK-8244489: Zero and minimal VM build failure after
      JDK-8241071 (MetaspaceShared::symbol_space_alloc is undefined)
    + JDK-8244491: make runtime/cds/appcds/TestZGCWithCDS.java test
      more robust
    + JDK-8244497: [TESTBUG] Incompatible types conversion error in
      vmTestbase/vm/runtime/defmeth/StressTest.java after
      JDK-8243432

-------------------------------------------------------------------
Wed Nov 25 15:52:39 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+21
  * Fixes:
    + JDK-8151030: PPC64: AllocatePrefetchStyle=4 is out of range
    + JDK-8152332: [macosx] JFileChooser cannot be serialized on
      Mac OS X
    + JDK-8178028: Typing 'C' cannot change the tab layout to
      WRAP_TAB_LAYOUT
    + JDK-8195841: PNGImageReader.readNullTerminatedString() doesnt
      check for non-null terminated strings with length equal to maxLen
    + JDK-8196181: sun/java2d/GdiRendering/InsetClipping.java fails
    + JDK-8216557: Aarch64: Add support for Concurrent Class
      Unloading
    + JDK-8219607: Add support in Graal and AOT for hidden class
    + JDK-8231634: SA stack walking fails with "illegal bci"
    + JDK-8233006: freetype incorrectly adjusts advances when
      emboldening rotated glyphs
    + JDK-8233584: [Win LAF] When navigating the contents of the
      file list changes in Win LAF
    + JDK-8233644: [TESTBUG] JInternalFrame test bug8020708.java is
      failing on macos
    + JDK-8236129: Exe installers have wrong properties
    + JDK-8236464: SO_LINGER option is ignored by SSLSocket in JDK
      11
    + JDK-8238048: Close alignment gaps in InstanceKlass
    + JDK-8239357: Revert gcc implementation of offset_of
    + JDK-8239569: PublicMethodsTest.java failed due to NPE in
      java.base/java.nio.file.FileSystems.getFileSystem
      (FileSystems.java:230)
    + JDK-8239786: Shenandoah: print per-cycle statistics
    + JDK-8240290: Clean the "libawt_xawt" library from code for
      macOS
    + JDK-8240783: JFR: TestClose could not finish chunk
    + JDK-8241153: Refactor
      HeapRegionManager::find_unavailable_from_idx to simplify
      expand_at
    + JDK-8241214: Test debugging of hidden classes using jdb
    + JDK-8241228: Test jdk/javax/swing/UIDefaults/8146330/
      /UIDefaultKeySizeTest.java is failing
    + JDK-8241603: ZGC: java/lang/management/MemoryMXBean/
      /MemoryTestZGC.sh crashes on macOS
    + JDK-8241780: Allow \n@ inside inline tags.
    + JDK-8241807: JDWP needs update for hidden classes
    + JDK-8241815: Unnecessary calls to
      SystemDictionaryShared::define_shared_package
    + JDK-8242004: TextLayout throws Exception with a
      non-invertible transform
    + JDK-8242034: Remove JRE_HOME references
    + JDK-8242174: [macos] The NestedModelessDialogTest test make
      the macOS unstable
    + JDK-8242237: Improve JVM TI HiddenClasses tests
    + JDK-8242239: [Graal] javax/management/generified/
      /GenericTest.java fails: FAILED: queryMBeans sets same
    + JDK-8242244: Remove redundant ELF machine definitions
    + JDK-8242302: Refactor jpackage native code
    + JDK-8242314: use reproducible random in vmTestbase shared code
    + JDK-8242459: ForceNUMA and only one available NUMA node hits
      a guarantee
    + JDK-8242498: Invalid "sun.awt.TimedWindowEvent" object leads
      to JVM crash
    + JDK-8242526: PIT: javax/swing/JInternalFrame/8020708/
      /bug8020708.java fails in mach5 ubuntu system
    + JDK-8242649: improve the CSS class names used for summary and
      details tables
    + JDK-8242792: interval < flushInterval is always false in
      jdk.jfr.internal.RequestEngine#setFlushInterval
    + JDK-8242846: Bring back
      test/jdk/tools/jlink/plugins/OrderResourcesPluginTest.java
    + JDK-8242848: Improve performance of
      InflaterOutputStream.write()
    + JDK-8242905: AArch64: Client build failed
    + JDK-8242921: test/hotspot/jtreg/runtime/CompactStrings/
      /TestMethodNames.java uses nashorn script engine
    + JDK-8242929: The values of jdk.tls.namedGroups should not be
      case-sensitive
    + JDK-8242933: jdk/jfr/api/consumer/TestHiddenMethod uses
      nashorn script engine
    + JDK-8242999: HTTP/2 client may not handle CONTINUATION frames
      correctly
    + JDK-8243000: javac only build fails after removal of Nashorn
    + JDK-8243010: Test support: Customizable Hex Printer
    + JDK-8243029: Rewrite javax/net/ssl/compatibility/
      /Compatibility.java with a flexible interop test framework
    + JDK-8243117: Cleanups in Java code of module jdk.jlink
    + JDK-8243138: Enhance BaseLdapServer to support starttls
      extended request
    + JDK-8243240: AArch64: Add support for MulVB
    + JDK-8243246: HTTP Client sometimes gets java.io.IOException
      -> Invalid chunk header byte 32
    + JDK-8243314: Problem list java/awt/image/multiresolution/
      /MultiresolutionIconTest.java on Windows
    + JDK-8243326: Cleanup use of volatile in taskqueue code
    + JDK-8243389: enhance os::pd_print_cpu_info on linux
    + JDK-8243393: Improve ReservedSpace constructor resolution
    + JDK-8243450: Remove VMOps from jdk.hotspot.agent
    + JDK-8243460: Shenandoah: purge init_update_refs_prepare
      counter
    + JDK-8243463: Shenandoah: ditch total_pause counters
    + JDK-8243464: Shenandoah: print statistic counters in time
      order
    + JDK-8243465: Shenandoah: ditch unused pause_other, conc_other
      counters
    + JDK-8243469: Lazily encode name in ZipFile.getEntryPos
    + JDK-8243477: FreeType library check should prefer 64-bit
      directory
    + JDK-8243478: Shenandoah: avoid implicit worker_id = 0
    + JDK-8243486: ZGC: Adjust "Allocated" statistics to take
      undone page allocations into account
    + JDK-8243487: Shenandoah: make _num_phases illegal phase type
    + JDK-8243489: Thread CPU Load event may contain wrong data for
      CPU time under certain conditions
    + JDK-8243494: Shenandoah: set counters once per cycle
    + JDK-8243500: SA: Incorrect BCI and Line Number with jstack if
      the top frame is in the interpreter (BSD and Windows)
    + JDK-8243503: InstanceKlass::_array_name is not needed and
      leaks
    + JDK-8243510: AbsPathsInImage.java fails on Windows
    + JDK-8243539: Copyright info (Year) should be updated for fix
      of 8241638
    + JDK-8243541: (tz) Upgrade time-zone data to tzdata2020a
    + JDK-8243549: sun/security/ssl/CipherSuite/
      /NamedGroupsWithCipherSuite.java failed with Unsupported
      signature algorithm: DSA
    + JDK-8243562: Make display of search results consistent with
      color scheme
    + JDK-8243563: Doc comments cleanup
    + JDK-8243565: some gc tests use 'test.java.opts' and not
      'test.vm.opts'
    + JDK-8243567: Update download link of jtreg provided by
      Adoption Group
    + JDK-8243568: serviceability/logging/TestLogRotation.java uses
      'test.java.opts' and not 'test.vm.opts'
    + JDK-8243574:
      java.lang.invoke.InvokerBytecodeGenerator.ClassData should be
      package-private
    + JDK-8243575: Trivial javadoc fix of
      j.l.i.MethodHandles::arrayElementVarHandle
    + JDK-8243576: Remove residual reference to nashorn modules in
      make/CompileJavaModules.gmk
    + JDK-8243578: Shenandoah: Cleanup
      ShenandoahStringDedup::parallel_oops_do()
    + JDK-8243587: Missing comma in copyright header
    + JDK-8243590: Bump boot jdk to JDK 14 on aarch64 at Oracle
    + JDK-8243591: Change to GCC 9.2 for building Linux/aarch64 at
      Oracle
    + JDK-8243617: compiler/onSpinWait/TestOnSpinWaitC1.java test
      uses wrong class
    + JDK-8243618: compiler/rtm/cli tests can be run w/o WhiteBox
    + JDK-8243619: compiler/codecache/CheckSegmentedCodeCache.java
      test misses -version
    + JDK-8243620: a few compiler/jvmci tests can be run in driver
      mode
    + JDK-8243621: use SkippedException in
      compiler/jsr292/MHInlineTest.java test
    + JDK-8243622: all actions in compiler/aot/fingerprint/
      /SelfChangedCDS.java can be run in driver mode
    + JDK-8243633: Remove cups dependency when building linux at
      Oracle
    + JDK-8243634: Add pandoc dependency when building
      linux-aarch64 at Oracle
    + JDK-8243648: Windows 32bit compile error
      src/jdk.incubator.jpackage/windows/native/libjpackage/
      /VersionInfo.cpp
    + JDK-8243664: JavaDoc of CompactNumberFormat points to wrong
      enum
    + JDK-8243665: exploded-image-optimize touches
      module-info.class in all modules
    + JDK-8243666: ModuleHashes attribute generated for JMOD and
      JAR files depends on timestamps
    + JDK-8243673: Mac signing process should not use --deep arg.
    + JDK-8243848: Shenandoah: Windows build fails after JDK-8239786
    + JDK-8243928: several svc tests can be run in driver mode
    + JDK-8243929: use @requires in
      serviceability/attach/AttachWithStalePidFile.java test
    + JDK-8243930: update copyright years
    + JDK-8243932: compiler/codecache/cli/printcodecache/
      /TestPrintCodeCacheOption.java test can use driver mode
    + JDK-8243933: use driver mode in gc tests
    + JDK-8243935: remove copying of s.h.WB$WhiteBoxPermission in
      hotspot tests
    + JDK-8243941: build issue introduced with the push of 8242237
    + JDK-8243942: use SkippedException in gc/arguments/
       /TestSmallInitialHeapWithLargePageAndNUMA.java test
    + JDK-8243944: use SkippedException and @requires in
      runtime/memory/ReadFromNoaccessArea.java test
    + JDK-8243946: serviceability/sa and jvmti tests fail after
      JDK-8243928
    + JDK-8243954: serviceability/logging/TestQuotedLogOutputs.java
      fails after 8243928
    + JDK-8243973: Clarify difference between JAVA_OPTIONS and
      VM_OPTIONS
    + JDK-8243982: Fix testing documentation after JDK-8240241
    + JDK-8243985: Make source generation by generatecharacter
      reproducible
    + JDK-8243988: Added flexibility in build system for unusal
      hotspot configurations
    + JDK-8243989: test/hotspot/jtreg/serviceability/jvmti/
      /CanGenerateAllClassHook/CanGenerateAllClassHook.java needs
      to use othervm
    + JDK-8243991: Remove obsolete -XX:ThreadStackSize from java
      command line
    + JDK-8243997: Linux build failed after JDK-8242244
    + JDK-8244009: Separate -Xdoclint options in
      CompileJavaModules.gmk
    + JDK-8244010: Simplify usages of
      ProcessTools.createJavaProcessBuilder in our tests
    + JDK-8244021: Hide warning from jlink about incubating modules
    + JDK-8244036: Refresh SetupJavaCompilation, and remove support
      for sjavac
    + JDK-8244044: Refactor phase makefiles to be structured per
      module
    + JDK-8244051: AbsPathsInImage.java still fails on Windows
    + JDK-8244052: remove copying of s.h.WB$WhiteBoxPermission in
      test/jdk
    + JDK-8244061: Disable jvmci/graal/aot when building
      linux-aarch64 at Oracle
    + JDK-8244066: ClassFileInstaller should be run in driver mode
    + JDK-8244097: make bootcycle-images fails after JDK-8244036

-------------------------------------------------------------------
Wed Nov 25 15:38:06 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+20
  * Fixes:
    + JDK-8172404: Tools should warn if weak algorithms are used
      before restricting them
    + JDK-8203238: [TESTBUG] rewrite MemOptions shell test in Java
    + JDK-8209162: Page size selection does not always select
      optimal page size
    + JDK-8210012: Implement Unified Logging Option for
      -XX:+TraceMethodHandles and -XX:+TraceInvokeDynamic
    + JDK-8224612: javadoc should better handle empty set of doclet
      options
    + JDK-8228991: Obsolete -XX:UseAdaptiveGCBoundary
    + JDK-8230731: SA tests fail with "Windbg Error: ReadVirtual
      failed
    + JDK-8231585: java/lang/management/ThreadMXBean/
      /MaxDepthForThreadInfoTest.java fails with
      java.lang.NullPointerException
    + JDK-8231756: [JVMCI] need support for deoptimizing virtual
      byte arrays encoding non-byte primitives
    + JDK-8232935: jpackage failed with NPE whenever
      --file-associations provided
    + JDK-8234691: Potential double-free in ParallelSPCleanupTask
      constructor
    + JDK-8237890: DatagramPacket::getSocketAddress doesn't specify
      what happens if address or port are not set
    + JDK-8237949: CTW: C1 compilation fails with "too many stack
      slots used"
    + JDK-8238195: Lookup::defineClass should link the class to
      match the specification
    + JDK-8238270: java.net HTTP/2 client does not decrease stream
      count when receives 204 response
    + JDK-8238358: Implementation of JEP 371: Hidden Classes
    + JDK-8239365: ProcessBuilder test modifications for AIX
      execution
    + JDK-8240204: Optimize package handling for archived classes
    + JDK-8240904: Screen flashes on test failures when running
      tests from make
    + JDK-8241055: Regex Grapheme Matcher Performance Depends too
      much on Total Input Sequence Size
    + JDK-8241158: SA TestHeapDumpForInvokeDynamic.java fails when
      CDS archive is relocated
    + JDK-8241234: Unify monitor enter/exit runtime entries.
    + JDK-8241627: Updating ASM to 8.0.1 for JDK 15
    + JDK-8241749: Remove the Nashorn JavaScript Engine
    + JDK-8241874: [PPC64]: Improve performance of
      Long.reverseBytes() and Integer.reverseBytes() on Power9
    + JDK-8241950: JShell could support auto-indent
    + JDK-8241975: Run jdk/jfr/event/metadata/
      /TestLookForUntestedEvents.java in tier3
    + JDK-8241986: The java man page erroneously refers to XEND
      when it should refer XTEST
    + JDK-8242008: SSLSession inconsistencies
    + JDK-8242070: AArch64: Fix a typo introduced by JDK-8238690
    + JDK-8242108: Performance regression after fix for JDK-8229496
    + JDK-8242141: New System Properties to configure the TLS
      signature schemes
    + JDK-8242260: Add forRemoval=true to already deprecated
      ContentSigner
    + JDK-8242290: Pointless verification in
      get_package_entry_by_name
    + JDK-8242312: use reproducible random in hotspot gc tests
    + JDK-8242357: [JVMCI] Incorrect use of JVMCI_CHECK_ on return
      statement
    + JDK-8242425: JVMTI monitor operations should use Thread-Local
      Handshakes
    + JDK-8242449: AArch64: r27 can be allocated in CompressedOops
      mode
    + JDK-8242452: During module definition, move conversion of
      packages from native to VM
    + JDK-8242480: Negative value may be returned by
      getFreeSwapSpaceSize() in the docker
    + JDK-8242482: AArch64: Change parameter names of reduction
      operations to make code clear
    + JDK-8242484: Rework thread deletion during VM termination
    + JDK-8242491: C2: assert(v2->bottom_type() == vt) failed:
      mismatch when creating MacroLogicV
    + JDK-8242492: C2: Remove
      Matcher::vector_shift_count_ideal_reg()
    + JDK-8242565: Policy initialization issues when the denyAfter
      constraint is enabled
    + JDK-8242596: Improve JarFile.getEntry performance for
      multi-release jar files
    + JDK-8242614: cleanup duplicated test ldap server in some
      com/sun/jndi/ldap/ tests
    + JDK-8242626: enhance posix print_rlimit_info
    + JDK-8242631: Missing but used special functions for some
      classes
    + JDK-8242787: sun/tools/jhsdb/
      /HeapDumpTestWithActiveProcess.java fails with
      sun.jvm.hotspot.types.WrongTypeException
    + JDK-8242789: sun/tools/jhsdb/
      /HeapDumpTestWithActiveProcess.java fails with
      'JShellToolProvider' missing from stdout/stderr
    + JDK-8242793: Incorrect copyright header in
      ContinuousCallSiteTargetChange.java
    + JDK-8242796: Fix client build failure
    + JDK-8242802: javac crashes when checking equals and hashCode
      in unresolvable anonymous class
    + JDK-8242804: Fix trivial deprecation issues in
      jdk.hotspot.agent
    + JDK-8242808: Fix all remaining deprecation warnings in
      jdk.hotspot.agent
    + JDK-8242811: AlgorithmId::getDefaultAlgorithmParameterSpec
      returns incompatible PSSParameterSpec for an RSASSA-PSS key
    + JDK-8242844: JFR: Clean up typos and log format
    + JDK-8242859: test/jdk/tools/jlink/JLinkTest.java uses nashorn
      module
    + JDK-8242860: test/jdk/tools/jlink/ModuleNamesOrderTest.java
      uses nashorn module
    + JDK-8242863: Bump minimum boot jdk to JDK 14
    + JDK-8242896: typo #ifdef INCLUDE_JVMTI in codeCache.cpp
    + JDK-8242913: Bump the SPECIAL_FLAG_VALIDATION_BUILD to 25
    + JDK-8242931: Few more tests that use nashorn have been missed
    + JDK-8242943: Fix all remaining unchecked warnings in
      jdk.hotspot.agent
    + JDK-8242959: Optimize ZipFile.getEntry by folding lookups for
      name and name+'/'
    + JDK-8243008: Shenandoah: TestVolatilesShenandoah test failed
      on aarch64
    + JDK-8243045: AOTCompiledMethod::print_on triggers assertion
      after JDK-8210012
    + JDK-8243047: javac may crash when processing exits in class
      initializers
    + JDK-8243059: Build fails when --with-vendor-name contains a
      comma
    + JDK-8243074: Misplaced and/or duplicate super or this
      constructor invocation not attributed
    + JDK-8243109: Bootcycle build failures after Nashorn removal
    + JDK-8243146: Further cleanups after UseAdaptiveGCBoundary
      removal
    + JDK-8243154: Fix deprecation warnings in failure handler
    + JDK-8243156: Fix deprecation and unchecked warnings in
      microbenchmark
    + JDK-8243168: Remove addition preview adornment from
      String::stripIndent and String::translateEscapes
    + JDK-8243200: Shenandoah: Allow concurrent nmethod iteration
    + JDK-8243206: Cleanup error checking and handling in
      serviceability/sa/JhsdbThreadInfoTest.java
    + JDK-8243210: ClhsdbScanOops fails with NullPointerException
      in FileMapHeader.inCopiedVtableSpace
    + JDK-8243238: Shenandoah: explicit GC request should wait for
      a complete GC cycle
    + JDK-8243254: Examine ZipFile slash optimization for non-ASCII
      compatible charsets
    + JDK-8243274: suppress warnings in LookupDefineClass
      microbenchmarks due to JDK-8243156
    + JDK-8243291: Shenandoah: no need to retire TLABs at Init
      Update Refs
    + JDK-8243301: Shenandoah: ditch ShenandoahAllowMixedAllocs
    + JDK-8243307: Shenandoah: remove ShCollectionSet::live_data
    + JDK-8243318: New test
      jdk/javadoc/tool/8224612/OptionsTest.java is failing
    + JDK-8243323: Shenandoah: Recycle immediate garbage before
      concurrent class unloading
    + JDK-8243395: Shenandoah: demote guarantee in
      ShenandoahPhaseTimings::record_workers_end
    + JDK-8243408: Inconsistent Exceptions are thrown by
      MulticastSocket when sending a DatagramPacket to port 0

-------------------------------------------------------------------
Wed Nov 25 15:30:58 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+19
  * Fixes:
    + JDK-7105119: [TEST_BUG] [macosx] In test
      UIDefaults.toString() must be called with the invokeLater()
    + JDK-8172680: Support SHA-3 based Hmac algorithms
    + JDK-8174768: Make ProcessTools print executed process output
      into a separate file
    + JDK-8184249: SA: clhsdb 'intConstant' throws a
      NullPointerException when not attached to a VM
    + JDK-8196019: java/awt/Window/Grab/GrabTest.java fails on
      Windows
    + JDK-8220150: macos10.14 Mojave returns anti-aliased glyphs
      instead of aliased B&W glyphs
    + JDK-8223090: Clean up obsolete logic & reference to Amble
      fonts.
    + JDK-8223898: Forward references to Nashorn
    + JDK-8223904: Improve Nashorn matching
    + JDK-8224541: Better mapping of serial ENUMs
    + JDK-8224549: Less Blocking Array Queues
    + JDK-8225540: In core reflection note whether returned
      annotations are declaration or type annotations
    + JDK-8225603: Enhancement for big integers
    + JDK-8226346: Build better binary builders
    + JDK-8227467: Better class method invocations
    + JDK-8227542: Manifest improved jar headers
    + JDK-8229733: TLS message handling improvements
    + JDK-8231415: Better signatures in XML
    + JDK-8231572: Use -lobjc instead of -fobjc-link-runtime in
      libosxsecurity
    + JDK-8231785: Improved socket permissions
    + JDK-8232424: More constrained algorithms
    + JDK-8232581: Improve TLS verification
    + JDK-8233245: More adaptive sockets
    + JDK-8233250: Better X11 rendering
    + JDK-8233410: Better Build Scripting
    + JDK-8234027: Better JCEKS key support
    + JDK-8234408: Improve TLS session handling
    + JDK-8234825: Better Headings for HTTP Servers
    + JDK-8234841: Enhance buffering of byte buffers
    + JDK-8235220: ClhsdbScanOops.java fails with
      sun.jvm.hotspot.types.WrongTypeException
    + JDK-8235274: Enhance typing of methods
    + JDK-8235691: Enhance TLS connectivity
    + JDK-8236201: Better Scanner conversions
    + JDK-8237187: Obsolete references to java.sun.com
    + JDK-8237250: pmap and pstack should do a better of making it
      clear that they are not supported on Mac OS X
    + JDK-8237474: Default SSLEngine should create in server role
    + JDK-8238567: SoftMainMixer.processAudioBuffers(): Wrong
      handling of stoppedMixers
    + JDK-8238665: Add JFR event for direct memory statistics
    + JDK-8238719: [macOS] Delete the property which use deprecated
      prefix "com.apple.macos."
    + JDK-8238960: linux-i586 builds are inconsistent as the newly
      build jdk is not able to reserve enough space for object heap
    + JDK-8239124: Minimize the usage of AwtGraphicsConfigDataPtr
      in native
    + JDK-8239312: [macos]
      javax/swing/JFrame/NSTexturedJFrame/NSTexturedJFrame.java
    + JDK-8239429: AbsPathsInImage.java fails in JDK 11u and 14u on
      Windows
    + JDK-8239594: jdk.tls.client.protocols is not respected
    + JDK-8239595: ssl context version is not respected
    + JDK-8239819: XToolkit: Misread of screen information memory
    + JDK-8240342: Custom composite is ignored when printing an
      opaque image to a page
    + JDK-8240690: Race condition between EDT and
      BasicDirectoryModel.FilesLoader.run0()
    + JDK-8240848: ArrayIndexOutOfBoundsException buf for
      TextCallbackHandler
    + JDK-8240877: NPE at
      javax.swing.text.html.FormView.appendBuffer with null option
      values
    + JDK-8240990: convert clhsdb "dumpclass" command from
      javascript to java
    + JDK-8241087: Build failure with VS 2019 (16.5.0) due to C2039
      and C2873
    + JDK-8241142: Shenandoah: should not use parallel reference
      processing with single GC thread
    + JDK-8241587: Aarch64: remove x86 specifics from
      os_linux.cpp/hpp/inline.hpp
    + JDK-8241618: Fix trivial unchecked warnings for
      jdk.hotspot.agent
    + JDK-8241707: introduce randomness k/w to hotspot test suite
    + JDK-8241741: Implement Text Blocks as a standard feature in
      javac
    + JDK-8241742: Remove the preview status for methods introduced
      for Text Blocks
    + JDK-8241791: [TESTBUG] Test failing with exception
      "java.lang.UnsupportedOperationException"
    + JDK-8241797: Add some tests to the problem list
    + JDK-8241798: Allow enums to have more constants
    + JDK-8241808: [TESTBUG] The JDK-8039467 bug appeared on macOS
    + JDK-8241829: Cleanup the code for PrinterJob on windows
    + JDK-8241883: (zipfs) SeekableByteChannel:close followed by
      SeekableByteChannel:close will throw an NPE coverage
    + JDK-8241911: AArch64: Fix a potential register clash issue in
      reduce_add2I
    + JDK-8241920: G1: Lazily initialize
      OtherRegionsTable::_coarse_map
    + JDK-8241952: (fs) FileChannel.write(ByteBuffer src, long
      position) does not check for the FileChannel being closed
      first
    + JDK-8241982: Make TestSearchScript.java run with GraalJS
    + JDK-8242038: G1: Lazily initialize RSHashTables
    + JDK-8242039: Improve jlink VersionPropsPlugin
    + JDK-8242078: G1: Improve concurrent refinement analytics and
      logging
    + JDK-8242155: Enhance automated macos signing tests
    + JDK-8242162: convert clhsdb "sysprops" command from
      javascript to java
    + JDK-8242241: add assert to ClassUnloadEventImpl::className
    + JDK-8242282: Test sun/tools/jps/TestJps.java fails after
      JDK-8237572
    + JDK-8242283: Can't start JVM when java home path includes
      non-ASCII character
    + JDK-8242289: C2: Support platform-specific node cloning in
      Matcher
    + JDK-8242292: (fs) FileSystems.getFileSystem(URI) should throw
      IAE if the URI scheme is null
    + JDK-8242310: use reproducible random in hotspot compiler tests
    + JDK-8242311: use reproducible random in hotspot runtime tests
    + JDK-8242313: use reproducible random in hotspot svc tests
    + JDK-8242325: Remove VIS version of medialib
    + JDK-8242326: use new "summary-list" CSS class instead of
      general "block-list" for list of summary sections
    + JDK-8242327: List spec should state that unmodifiable lists
      implement RandomAccess
    + JDK-8242330: Arrays should be cloned in several JAAS Callback
      classes
    + JDK-8242366: Fix JavaDoc warnings
    + JDK-8242379: [TESTBUG] compiler/loopopts/
      /TestLoopUnswitchingLostCastDependency.java fails with release
      VMs
    + JDK-8242400: Shenandoah: Restore logging to pre-jdk8241984
      format
    + JDK-8242430: Correct links in javadoc of OperatingSystemMXBean
    + JDK-8242448: Change
      HeapRegionManager::guarantee_contiguous_range to be
      assert_contiguous_range
    + JDK-8242462: Residual Cleanup of rmic removal
    + JDK-8242463: ProcessTools.createNativeTestProcessBuilder() in
      testlib needs jdk/bin on PATH on Windows
    + JDK-8242468: VS2019 build missing vcruntime140_1.dll
    + JDK-8242470: Update Xerces to Version 2.12.1
    + JDK-8242471: remove "temporarily" restrictions of
      nsk/jdi/Argument/value/value004
    + JDK-8242472: Comment for unused
      PreviewFeature.Feature.TEXT_BLOCKS enum
    + JDK-8242485: Null _file checking in fileStream::flush()
    + JDK-8242556: Cannot load RSASSA-PSS public key with non-null
      params from byte array
    + JDK-8242597: Remove GenericTaskQueue<>::push_slow
    + JDK-8242602: Shenandoah: allow earlier recycle of trashed
      regions during concurrent root processing
    + JDK-8242625: Shenandoah: restore heap logging for
      Degenerated/Full cycles
    + JDK-8242629: Remove references to deprecated
      java.util.Observer and Observable
    + JDK-8242638: Shenandoah: restore heap logging for uncommit
    + JDK-8242641: Shenandoah: clear live data and update TAMS
      optimistically
    + JDK-8242643: Shenandoah: split concurrent weak and strong
      root processing
    + JDK-8242842: Avoid reallocating name when checking for
      trailing slash in ZipFile.getEntryPos

-------------------------------------------------------------------
Wed Nov 25 15:25:14 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+18
  * Fixes:
    + JDK-8035787: SourcePositions are wrong for Strings
      concatenated with '+' operator
    + JDK-8176894: Provide specialized implementation for default
      methods putIfAbsent, computeIfAbsent, computeIfPresent,
      compute, merge in TreeMap
    + JDK-8186780: clang fastdebug assertion failure in
      os_linux_x86:os::verify_stack_alignment()
    + JDK-8191930: [Graal] emits unparseable XML into compile log
    + JDK-8199138: Add RISC-V support to Zero
    + JDK-8214694: cleanup rawtypes warnings in open jndi tests
    + JDK-8215711: Missing key_share extension for (EC)DHE key
      exchange should alert missing_extension
    + JDK-8220051: Remove global safepoint code
    + JDK-8225319: Remove rmic from the set of supported tools
    + JDK-8237383: Members inherited from non-public types are not
      included in index
    + JDK-8237490: [macos] Add support notarizing jpackage
      app-image and dmg
    + JDK-8237572: Combine the two LingeredApp classes
    + JDK-8238183: SAX2StAXStreamWriter cannot deal with comments
      prior to the root element
    + JDK-8238289: Use _byteswap_ functions to implenent
      Bytes::swap_uX on Windows
    + JDK-8239072: subtype check macro node causes node budget to
      be exhausted
    + JDK-8239544: Javac does not respect should-stop.ifNoError
      policy to stop after CompileState PARSE, ENTER and PROCESS
    + JDK-8239895: assert(_stack_base != 0LL) failed: Sanity check
    + JDK-8240169: javadoc fails to link to non-modular api docs
    + JDK-8240205: Avoid PackageEntry lookup when loading shared
      classes
    + JDK-8240360: NativeLibraryEvent has wrong library name on
      Linux
    + JDK-8240533: Inconsistent Exceptions are thrown by
      DatagramSocket and DatagramChannel when sending a
      DatagramPacket to port 0.
    + JDK-8240693: Sweeper should not examine dying metadata in
      is_unloading() nmethod during static call stub cleaning
    + JDK-8240698: LingeredApp does not pass getTestJavaOpts() to
      the children process if vmArguments is already specified
    + JDK-8240745: Implementation: JEP 377: ZGC: A Scalable
      Low-Latency Garbage Collector (Production)
    + JDK-8240918: [REDO] Allow direct handshakes without VMThread
      intervention
    + JDK-8240988: Incorrect copyright header in
      CertificateValidation.java
    + JDK-8240989: convert clhsdb "dumpheap" command from
      javascript to java
    + JDK-8241040: Support for AVX-512 Ternary Logic Instruction.
    + JDK-8241041: C2: "assert((Value(phase) == t) || (t !=
      TypeInt::CC_GT && t != TypeInt::CC_EQ)) failed: missing
      Value() optimization" still happens after fix for 8239335
    + JDK-8241101: [s390] jtreg test failure after JDK-8238696: not
      conformant features string
    + JDK-8241138: http.nonProxyHosts=* causes
      StringIndexOutOfBoundsException in DefaultProxySelector
    + JDK-8241141: Restructure humongous object allocation in G1
    + JDK-8241160: Concurrent class unloading reports GCTraceTime
      events as JFR pause sub-phase events
    + JDK-8241361: ZGC: Implement memory related JFR events
    + JDK-8241374: add Math.absExact
    + JDK-8241421: Cleanup handling of jtreg
    + JDK-8241438: Move IntelJccErratum mitigation code to
      platform-specific code
    + JDK-8241456: ThreadRunner shouldn't use Wicket for threads
      starting synchronization
    + JDK-8241475: AArch64: Add missing support for PopCountVI node
    + JDK-8241478:
      vmTestbase/gc/gctests/Steal/steal001/steal001.java fails with
      OOME
    + JDK-8241492: Strip mining not working for
      test/hotspot/jtreg/compiler/c2/Test6850611.java
    + JDK-8241530: com/sun/jdi tests fail due to network issues on
      OSX 10.15
    + JDK-8241556: Memory leak if -XX:CompileCommand is set
    + JDK-8241568: (fs) UserPrincipalLookupService.lookupXXX
      failure with IOE "Operation not permitted"
    + JDK-8241585: Remove unused _recursion_counter facility from
      PerfTraceTime
    + JDK-8241598: Upgrade JLine to 3.14.0
    + JDK-8241625: use new "member-list" CSS class instead of
      general "block-list" for list of members
    + JDK-8241638: launcher time metrics always report 1 on Linux
      when _JAVA_LAUNCHER_DEBUG set
    + JDK-8241665: Configuring --with-jvm-features=-compiler2 fails
      to build on AArch64
    + JDK-8241666: Enhance log messages in ReferenceProcessor
    + JDK-8241670: Enhance heap region size ergonomics to improve
      OOTB performance
    + JDK-8241693: The paragraphs in the help page should not be in
      a <ul>
    + JDK-8241695: JFR TestCrossProcessStreaming.java child process
      exited with SIGQUIT (131)
    + JDK-8241705: Tune PerfData collections
    + JDK-8241713: Linux desktop shortcuts with spaces make
      postinst/prerm fail
    + JDK-8241726: Re-enable gtest for BitMap::count_one_bits()
    + JDK-8241760: Typos: empty lines in javadoc, inconsistent
      indents, etc. (net and nio)
    + JDK-8241761: Typos: empty lines in javadoc, inconsistent
      indents, etc. (security-libs only)
    + JDK-8241786: Improve heuristic to determine default network
      interface on macOS
    + JDK-8241827: JFR: TestVMInfoEvent.java requires SerialGC
    + JDK-8241828: JFR: Some streaming tests require a larger heap
      size with ZGC
    + JDK-8241830: Simplify commit error messages in
      G1PageBasedVirtualSpace
    + JDK-8241837: Cleanup stringStream usage in ObjectSynchronizer
    + JDK-8241838: Shenandoah: no need to trash cset during final
      mark
    + JDK-8241841: Shenandoah: ditch one of allocation type
      counters in ShenandoahHeapRegion
    + JDK-8241842: Shenandoah: inline
      ShenandoahHeapRegion::region_number
    + JDK-8241844: Shenandoah: rename
      ShenandoahHeapRegion::region_number
    + JDK-8241845: Shenandoah: align ShenandoahHeapRegions to cache
      lines
    + JDK-8241852: Cleanup error message generation in
      LinkResolver::resolve_field
    + JDK-8241881: ZGC: Add tests for JFR events
    + JDK-8241888: Mirror jdk.security.allowNonCaAnchor system
      property with a security one
    + JDK-8241895: use new "details-list" CSS class instead of
      general "block-list" for list of details sections
    + JDK-8241900: Loop unswitching may cause dependence on null
      check to be lost
    + JDK-8241909: Remove useless code cache lookup in
      frame::patch_pc
    + JDK-8241921: Remove leftover diagnostic from test/jdk/java/
      /io/Serializable/records/SerialPersistentFieldsTest.java
    + JDK-8241926: Shenandoah: only print heap changes for
      operations that directly affect it
    + JDK-8241947: Minor comment fixes for system property handling
    + JDK-8241948: enhance list of environment variables printed in
      hs_err file
    + JDK-8241958: Slow ClassLoaderReferenceImpl.findType
    + JDK-8241960: The SHA3 message digests impl of SUN provider
      are not thread safe after cloned
    + JDK-8241964: Clean up java.lang.Class javadoc
    + JDK-8241976: Add test for GCPhaseConcurrentLevel1 JFR event
    + JDK-8241983: Shenandoah: simplify FreeSet logging
    + JDK-8241984: Shenandoah: enhance GCTimer and JFR support
    + JDK-8241985: Shenandoah: simplify collectable garbage logging
    + JDK-8241988: DatagramSocket incorrectly caches the first set
      of socket options
    + JDK-8241996: on linux set full relro in the linker flags
    + JDK-8241997: Scalar replacement of cloned array is broken
      after JDK-8238759
    + JDK-8242000: clean up list of environment variables printed
      in hs_err file
    + JDK-8242003: Remove CallInfo::_selected_klass
    + JDK-8242006: (zipfs)  Improve Zip FS  FileChannel and
      SeekableByteChannel test coverage
    + JDK-8242010: Upgrade IANA Language Subtag Registry to Version
      2020-04-01
    + JDK-8242027: Clean up LinkResolver::check_klass_accessability
    + JDK-8242029: AArch64: skip G1 array copy pre-barrier if
      marking not active
    + JDK-8242030: Wrong package declarations in jline classes
      after JDK-8241598
    + JDK-8242031: TestLookForUntestedEvents.java fails because
      newly added test tests experimental events
    + JDK-8242040: Shenandoah: print allocation failure type
    + JDK-8242041: Shenandoah: adaptive heuristics should account
      evac reserve in free target
    + JDK-8242042: Shenandoah: tune down ShenandoahGarbageThreshold
    + JDK-8242044: Add basic HTTP/1.1 support to the HTTP/2 Test
      Server
    + JDK-8242054: Shenandoah: New incremental-update mode
    + JDK-8242056: Merge support for AnnotationType
      builders/writers into support for other types
    + JDK-8242073: x86_32 build failure after JDK-8241040
    + JDK-8242075: Shenandoah: rename ShenandoahHeapRegionSize flag
    + JDK-8242082: Shenandoah: Purge Traversal mode
    + JDK-8242083: Shenandoah: split "Prepare Evacuation" tracking
      into cset/freeset counters
    + JDK-8242089: Shenandoah: per-worker stats should be summed
      up, not averaged
    + JDK-8242090: Remove dead code from c1_LIR
    + JDK-8242101: Shenandoah: coalesce and parallelise heap region
      walks during the pauses
    + JDK-8242107: Shenandoah: Fix aarch64 build after JDK-8242082
    + JDK-8242114: Shenandoah: remove
      ShenandoahHeapRegion::reset_alloc_metadata_to_shared
    + JDK-8242130: Shenandoah: Simplify arraycopy-barrier
      dispatching
    + JDK-8242134: Consolidate the get_package_entry() in
      SystemDictionaryShared and ClassLoader
    + JDK-8242142: convert clhsdb "class" and "classes" commands
      from javascript to java
    + JDK-8242153: ProblemList
      serviceability/sa/ClhsdbDumpheap.java on OSX
    + JDK-8242165: SA sysprops support fails to dump all system
      properties
    + JDK-8242168: ClhsdbFindPC.java failed due to
      "RuntimeException: 'In code in NMethod for
      LingeredAppWithTrivialMain.main' missing from stdout/stderr"
    + JDK-8242184: CRL generation error with RSASSA-PSS
    + JDK-8242186: Reduce allocations in URLStreamHandler.parseURL
      for some cases
    + JDK-8242208: Use Method.getParameterCount where applicable
    + JDK-8242211: Shenandoah: remove
      ShenandoahHeuristics::RegionData::_seqnum_last_alloc
    + JDK-8242212: Shenandoah: initialize
      ShenandoahHeuristics::_region_data eagerly
    + JDK-8242213: Shenandoah: remove
      ShenandoahHeuristics::_bytes_in_cset
    + JDK-8242216: ObjectSampler::weak_oops_do() should not trigger
      barrier
    + JDK-8242217: Shenandoah: Enable GC mode to be
      diagnostic/experimental and have a name
    + JDK-8242227: Shenandoah: transit regions to cset state when
      adding to collection set
    + JDK-8242228: Shenandoah: remove unused
      ShenandoahCollectionSet methods
    + JDK-8242229: Shenandoah: inline ShenandoahHeapRegion
      liveness-related methods
    + JDK-8242230: Whitespace typos, relaxed javadoc, formatting
    + JDK-8242235: Disable SA testing on Solaris. Remove
      JDK-8193639 entries from ProblemList.txt
    + JDK-8242265: serviceability/sa/ClhsdbScanOops.java fails due
      to bad @requires expression
    + JDK-8242267: Shenandoah: regions space needs to be aligned by
      os::vm_allocation_granularity()
    + JDK-8242271: Shenandoah: add test to verify GC mode unlock
    + JDK-8242273: Shenandoah: accept either SATB or IU barriers,
      but not both
    + JDK-8242294: JSSE Client does not throw SSLException when an
      alert occurs during handshaking
    + JDK-8242295: Change ThreadMBean in vmTestbase/nsk/monitoring
      to ThreadMXBean
    + JDK-8242301: Shenandoah: Inline LRB runtime call
    + JDK-8242316: Shenandoah: Turn NULL-check into assert in SATB
      slow-path entry
    + JDK-8242337: javadoc typo in
      NumberFormat::setMinimumFractionDigits
    + JDK-8242353: Shenandoah: micro-optimize region liveness
      handling
    + JDK-8242356: (se) epoll Selector should use epoll_create1
      instead of epoll_create
    + JDK-8242365: Shenandoah: use uint16_t instead of jushort for
      liveness cache
    + JDK-8242370: Enable JFR TestGCPhaseConcurrent test for
      Shenandoah
    + JDK-8242375: Shenandoah: Remove
      ShenandoahHeuristic::record_gc_start/end methods
    + JDK-8242382: test/jdk/TEST.groups cleanup of sun/tools/java
    + JDK-8242384: sa/TestSysProps.java failed due to
      "RuntimeException: Could not find property in jinfo output:
      [0.058s][info][cds] Archive was created with
      UseCompressedOops"

-------------------------------------------------------------------
Wed Nov 25 15:14:59 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+17
  * Fixes:
    + JDK-8129841: Update comment for
      Java_java_net_Inet6AddressImpl_getHostByAddr
    + JDK-8172485: [TESTBUG] RedefineLeak.java runs out of
      metaspace memory
    + JDK-8193210: [JVMCI/Graal] add JFR compiler phase/inlining
      events
    + JDK-8196751: Add jhsdb option to specify debug server RMI
      connector port
    + JDK-8227269: Slow class loading when running with JDWP
    + JDK-8232846: ProcessHandle.Info command with non-English
      shows question marks
    + JDK-8233093: Move CDS heap oopmaps into new
      MetaspaceShared::bm region
    + JDK-8235459: HttpRequest.BodyPublishers::ofFile assumes the
      default file system
    + JDK-8236975: compiler/graalunit tests fails with
      --illegal-access=deny
    + JDK-8238855: Move G1ConcurrentMark flag sanity checks to
      g1Arguments
    + JDK-8239563: Reduce public exports in dynamic libraries built
      from JDK static libraries
    + JDK-8240335: C2: assert(found_sfpt) failed: no node in loop
      that's not input to safepoint
    + JDK-8240634: event/runtime/TestMetaspaceAllocationFailure.java
      times out
    + JDK-8240676: Meet not symmetric failure when running lucene
      on jdk8
    + JDK-8240956: SEGV in DwarfParser::process_dwarf after
      JDK-8234624
    + JDK-8241336: Some java.net tests failed with
      NoRouteToHostException on MacOS with special network
      configuration
    + JDK-8241365: Define Unique_Node_List::contains() to prevent
      usage by mistake
    + JDK-8241400: [macos] jpackageapplauncher/main.m built using
      CXXFLAGS_JDKEXE
    + JDK-8241419: Remove unused InterfaceSupport::_number_of_calls
    + JDK-8241427: Coarsen locking in Modules::add_module_exports
    + JDK-8241434: x86: Fix Assembler::emit_operand asserts for XMM
      registers
    + JDK-8241436: C2: Factor out C2-specific code from
      MacroAssembler
    + JDK-8241470: HtmlStyle: group and document members:
      description, flex, signature
    + JDK-8241482: AArch64: Fix a potential issue after JDK-8239549
    + JDK-8241491: Problem list jdk/javax/swing/UIDefaults/8146330/
      /UIDefaultKeySizeTest.java on aix
    + JDK-8241581: Add BitMap::count_one_bits variant for arbitrary
      lengths
    + JDK-8241586: compiler/cpuflags/
      /TestAESIntrinsicsOnUnsupportedConfig.java fails on aarch64
    + JDK-8241595: Fix missing debug_orig information in Ideal
      Graph Visualizer
    + JDK-8241596: ZGC: Shorten runtime of gc/z/TestUncommit.java
    + JDK-8241597: x86: Remove MMX support
    + JDK-8241631: PropertyGetterTaglet, PropertySetterTaglet may
      be removed
    + JDK-8241649: Optimize Character.toString
    + JDK-8241660: Add virtualization information output to hs_err
      file on macOS
    + JDK-8241668: Shenandoah: make ShenandoahHeapRegion not derive
      from ContiguousSpace
    + JDK-8241673: Shenandoah: refactor anti-false-sharing padding
    + JDK-8241674: Fix incorrect jtreg option in
      FilePublisherPermsTest
    + JDK-8241675: Shenandoah: assert(n->outcnt() > 0) at
      shenandoahSupport.cpp:2858 with
      java/util/Collections/FindSubList.java
    + JDK-8241692: Shenandoah: remove
      ShenandoahHeapRegion::_reserved
    + JDK-8241696: ProblemList gc/metaspace/
      /CompressedClassSpaceSizeInJmapHeap.java due to JDK-8241293
    + JDK-8241700: Shenandoah: Fold ShenandoahKeepAliveBarrier flag
      into ShenandoahSATBBarrier
    + JDK-8241721: Change to GCC 9.2 for building on Linux at Oracle
    + JDK-8241723: Build error after 8241581
    + JDK-8241727: Typos: empty lines in javadoc, inconsistent
      indents, etc. (core-libs only)
    + JDK-8241740: Shenandoah: remove ShenandoahHeapRegion::_heap
    + JDK-8241743: Shenandoah: refactor and inline
      ShenandoahHeap::heap()
    + JDK-8241748: Shenandoah: inline MarkingContext TAMS methods
    + JDK-8241750: x86_32 build failure after JDK-8227269
    + JDK-8241765: Shenandoah: AARCH64 need to save/restore call
      clobbered registers before calling keepalive barrier
    + JDK-8241771: Remove dead code in SparsePRT
    + JDK-8241789: Make citations of JLS and JVMS consistent in
      java.lang.Class

-------------------------------------------------------------------
Wed Nov 25 15:06:57 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+16
  * Fixes:
    + JDK-6532025: GIF reader throws misleading exception with
      truncated images
    + JDK-8040630: Popup menus and tooltips flicker with previous
      popup contents when first shown
    + JDK-8139652: Mutator refinement processing should take the
      oldest dirty card buffer
    + JDK-8146330: [macosx] UIDefaults.keys() different size than
      UIDefaults.keySet()
    + JDK-8161558: ListIterator should not discard cause on
      exception
    + JDK-8168304: Make all of DependencyContext_test available in
      product mode
    + JDK-8176040: Documentation of
      java.awt.Rectangle.add(java.awt.Point) is wrong.
    + JDK-8202117: com/sun/jndi/ldap/RemoveNamingListenerTest.java
      fails intermittently: Connection reset
    + JDK-8202469: (ann) Type annotations on type variable bounds
      that are also type variables are lost
    + JDK-8204161: [TESTBUG] auto failed with the "Applet thread
      threw exception: java.lang.UnsupportedOperationException"
      exception
    + JDK-8215712: Parsing extension failure may alert decode_error
    + JDK-8219578: No associated icon for the leaf node of JTree
    + JDK-8219989: Retire the com.sun.net.ssl.internal.ssl.Provider
      name
    + JDK-8223935: PIT: java/awt/font/WindowsIndicFonts.java fails
      on windows10
    + JDK-8226230: Test javax/swing/JInternalFrame/8020708/
      /bug8020708.java fails on Ubuntu
    + JDK-8226253: JAWS reports wrong number of radio buttons when
      buttons are hidden.
    + JDK-8226806: [macOS 10.14] Methods of Java Robot should be
      called from appropriate thread
    + JDK-8230290: [JVMCI] Remove unused API entry points
    + JDK-8231042: [macos] JFileChooser creates new folder on ESC
    + JDK-8231779: crash
      HeapWord*ParallelScavengeHeap::failed_mem_allocate
    + JDK-8232634: Problem List ICMColorDataTest.java
    + JDK-8233573: Toolkit.getScreenInsets(GraphicsConfiguration)
      may throw ClassCastException
    + JDK-8235153: [TESTBUG] [macos 10.15] java/awt/Graphics/
      /DrawImageBG/SystemBgColorTest.java fails
    + JDK-8235908: omit ThreadPriorityPolicy warning when value is
      set from image
    + JDK-8236635: JTabbedPane preferred size calculation is wrong
      for SCROLL_TAB_LAYOUT
    + JDK-8237219: Disable native SunEC implementation by default
    + JDK-8237497: vmStructs_jvmci.cpp does not check that the
      correct field type is specified
    + JDK-8237599: Greedy matching against supplementary chars
      fails to respect the region
    + JDK-8237746: Fixing compiler warnings in src/demo/share/jfc
    + JDK-8237859: C2: Crash when loads float above range check
    + JDK-8237894: CTW: C1 compilation fails with
      assert(x->type()->tag() == f->type()->tag()) failed: should
      have same type
    + JDK-8237977: Further update
      javax/net/ssl/compatibility/Compatibility.java
    + JDK-8238075: [OGL] Delete unused properties
    + JDK-8238936: The crash in XRobotPeer when the custom
      GraphicsDevice is used
    + JDK-8239149: Cleanups in SunFontManager.java and
      TrueTypeFont.java
    + JDK-8239902: Remove direct usage of JSlider, JProgressBar
      classes in CAccessible class
    + JDK-8240222: [TESTBUG] gtest/jfr/test_networkUtilization.cpp
      failed when the number of tests is greater than or equal to 2
    + JDK-8240227: Loop predicates should be copied to unswitched
      loops
    + JDK-8240248: Extend superword reduction optimizations for x86
    + JDK-8240476: SystemPropertiesWriter does not conform to
      standard page layout
    + JDK-8240518: Incorrect JNU_ReleaseStringPlatformChars in
      Windows Print
    + JDK-8240543: Update problem list entry for serviceability/sa/
      /TestRevPtrsForInvokeDynamic.java to reference JDK-8241235
    + JDK-8240590: Add MemRegion::destroy_array to complement
      introduced create_array
    + JDK-8240604: Rewrite sun/management/jmxremote/bootstrap/
      /CustomLauncherTest.java test to make binaries from source
      file
    + JDK-8240633: Memory leaks in the implementations of
      FileChooserUI
    + JDK-8240773: JFR: Non-Java threads are not serialized
    + JDK-8240786: [TESTBUG] The test java/awt/Window/
      /GetScreenLocation/GetScreenLocationTest.java fails on HiDPI
      screen
    + JDK-8240795: [REDO] 8238384 CTW: C2 compilation fails with
      "assert(store != load->find_exact_control(load->in(0)))
      failed: dependence cycle found"
    + JDK-8240818: Remove colon from "JFR: Shutdown Hook" thread
      name
    + JDK-8240819: Assign a name to the JfrThreadSampler thread
    + JDK-8240902: JDI shared memory connector can use already
      closed Handles
    + JDK-8240905: assert(mem == (Node*)1 || mem == mem2) failed:
      multiple Memories being matched at once?
    + JDK-8240921: Minor correction to HttpResponse.BodySubscribers
      example
    + JDK-8240975: Extend NativeLibraries to support explicit
      unloading
    + JDK-8240977: ProblemList failing jtreg tests on macos
    + JDK-8241001: Improve logging in the ConcurrentGCBreakpoint
      mechanism
    + JDK-8241009: CommandLineFlagComboNegative.java fails after
      JDK-8240563
    + JDK-8241014: Miscellaneous typos in documentation comments
    + JDK-8241039: Retire the deprecated
      SSLSession.getPeerCertificateChain() method
    + JDK-8241064: JFR related tests
      TestMetaspaceAllocationFailure.java and
      TestEventInstrumentation.java miss requires tag
    + JDK-8241067: Shenandoah: improve
      ShenandoahNMethod::has_cset_oops arguments
    + JDK-8241068: Shenandoah: improve ShenandoahTraversalGC
      constructor arguments
    + JDK-8241073: Pre-generated Stubs for javax.management,
      Activation, Naming
    + JDK-8241078: OOM error parsing HTML with large <pre> Tag text
    + JDK-8241091: AArch64: "bad AD file" with VM option
      "-XX:-UsePopCountInstruction"
    + JDK-8241095: x86: Improve prefix handling in Assembler
    + JDK-8241097: java/math/BigInteger/largeMemory/
      /SymmetricRangeTests.java requires -XX:+CompactStrings
    + JDK-8241123: Refactor vmTestbase stress framework to use
      j.u.c and make creation of threads more flexible
    + JDK-8241130:
      com.sun.jndi.ldap.EventSupport.removeDeadNotifier:
      java.lang.NullPointerException
    + JDK-8241139: Shenandoah: distribute mark-compact work exactly
      to minimize fragmentation
    + JDK-8241144: Javadoc is not generated for new module
      jdk.nio.mapmode
    + JDK-8241190: Fix name clash for constants-summary CSS class
    + JDK-8241229: Problem list
      jdk/javax/swing/UIDefaults/8146330/UIDefaultKeySizeTest.java
    + JDK-8241231: Update Graal
    + JDK-8241232: -XX:+BootstrapJVMCI is not compatible with
      TieredStopAtLevel < CompLevel_full_optimization
    + JDK-8241233: Typo in problem listing of
      UIDefaultKeySizeTest.java
    + JDK-8241244: CDS dynamic dump asserts in
      ArchivePtrBitmapCleaner::do_bit
    + JDK-8241254: Simplify usage of UTIL_DEPRECATED_ARG_ENABLE
    + JDK-8241263: JFR: Bump native events limit
    + JDK-8241271: Make hotspot build reproducible
    + JDK-8241291: JCK test javax_swing/text/DefaultStyledDocument/
      /ElementSpec/ESpecCtor.html fails
    + JDK-8241292: Interactive Search results are not highlighted
      as they used to be
    + JDK-8241296: Segfault in JNIHandleBlock::oops_do()
    + JDK-8241310: Fix warnings in jdk buildtools
    + JDK-8241311: Move some charset mapping tests from closed to
      open
    + JDK-8241319: WB_GetCodeBlob doesn't have ResourceMark
    + JDK-8241320: The ClassLoaderData::_is_unsafe_anonymous field
      is unused in the SA
    + JDK-8241335: ProblemList serviceability/sa/ClhsdbPstack.java
      due to JDK-8240956
    + JDK-8241351: Shenandoah: fragmentation metrics overhaul
    + JDK-8241371: Refactor and consolidate package_from_name
    + JDK-8241395: Factor out platform independent code for
      os::xxx_memory_special()
    + JDK-8241433: x86: Add VBMI CPU feature detection
    + JDK-8241435: Shenandoah: avoid disabling pacing with
      "aggressive"
    + JDK-8241443: Problem list some java.net tests failing with
      NoRouteToHostException on macOS with special network
      configuration
    + JDK-8241445: Fix copyright in
      test/jdk/tools/launcher/ArgFileSyntax.java
    + JDK-8241458: [JVMCI] add mark value to expose
      CodeOffsets::Frame_Complete
    + JDK-8241462: StripNativeDebugSymbols jlink plugin allocates
      huge arrays
    + JDK-8241500: FieldLayout/OldLayoutCheck.java fails in 32-bit
      VMs
    + JDK-8241520: Shenandoah: simplify region sequence numbers
      handling
    + JDK-8241532: ProblemList tests from 8241530 on OSX
    + JDK-8241534: Shenandoah: region status should include update
      watermark
    + JDK-8241544: update stylesheet for *-page CSS class rename
      and hyphenated naming
    + JDK-8241545: Shenandoah: purge root work overwrites counters
      after JDK-8228818
    + JDK-8241583: Shenandoah: turn heap lock asserts into macros
    + JDK-8241584: Remove unused classLoader perf counters

-------------------------------------------------------------------
Wed Nov 25 14:43:51 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-15+15
  * Fixes:
    + JDK-8059309: network tests fail with
      "java.net.SocketException: Couldn't obtain phys addr" when run
      as "root"
    + JDK-8149110: Introduce DISABLED_WARNINGS for Java compilation
    + JDK-8186143: keytool -ext option doesn't accept wildcards for
      DNS subject alternative names
    + JDK-8214245: Case insensitive matching doesn't work correctly
      for some character classes
    + JDK-8216332: Grapheme regex does not work with emoji sequences
    + JDK-8217441: Failure of ::realloc() should be handled
      correctly in sawindbg.cpp
    + JDK-8225216: gc/logging/TestMetaSpaceLog.java doesn't work
      for Shenandoah
    + JDK-8227340: Modify problem list entry for javax/management/
      /remote/mandatory/connection/MultiThreadDeadLockTest.java
    + JDK-8228336: Refactor native library loading implementation
    + JDK-8231668: Remove ForceDynamicNumberOfGCThreads
    + JDK-8232161: Align some one-way conversion in MS950 charset
      with Windows
    + JDK-8234146: compiler/jsr292/
      /ContinuousCallSiteTargetChange.java times out on SPARC
    + JDK-8234624: jstack mixed mode should refer DWARF
    + JDK-8235339: test TargetAnnoCombo.java is failing after new
      target RECORD_COMPONENT was added
    + JDK-8236285: [JVMCI] improve TranslatedException traces
    + JDK-8237045: JVM uses excessive memory with -XX:+EnableJVMCI
      -XX:JVMCICounterSize=2147483648
    + JDK-8238000: Crash in ClassLoader::record_result while
      dynamic dumping netty
    + JDK-8238268: Many SA tests are not running on OSX because
      they do not attempt to use sudo when available
    + JDK-8238566:
      java.security.Provider$Service.supportsParameter() is racy
    + JDK-8238696: x86: Enumerate all detected CPU features in
      VM_Version feature string
    + JDK-8239355: (dc) Initial value of SO_SNDBUF should allow
      sending large datagrams (macOS)
    + JDK-8239447: compiler error for annotations applied to record
      components with target METHOD
    + JDK-8239497: SEGV in EdgeUtils::field_name_symbol(Edge const&)
    + JDK-8239593: Bogus warning "Re-registering of platform native
      method" for a JVMTI agent
    + JDK-8239785: Cgroups: Incorrect detection logic on old
      systems in hotspot
    + JDK-8239825: G1: Simplify threshold test for mutator
      refinement
    + JDK-8239926: Shenandoah: Shenandoah needs to mark nmethod's
      metadata
    + JDK-8240130: Improve and update discussion of visitor
      evolution warnings
    + JDK-8240138: Cleanup HtmlTree
    + JDK-8240242: improve the javadoc for Lookup::dropLookupModes
      w.r.t. dropping UNCONDITIONAL
    + JDK-8240261: Use make/templates/gpl-cp-header in FieldGen.java
    + JDK-8240353: AArch64: missing support for
      -XX:+ExtendedDTraceProbes in C1
    + JDK-8240363: Refactor Compile::Output() to its own Phase
    + JDK-8240548: [TESTBUG] CDS NoClassToArchive.java fails with
      Graal
    + JDK-8240555: Using env of JAVA_TOOL_OPTIONS and _JAVA_OPTIONS
      breaks QuietOption.java test
    + JDK-8240563: [TESTBUG] WB_IsCDSIncludedInVmBuild should
      support uncompressed oops/klasses
    + JDK-8240591: G1HeapSizingPolicy attempts to compute
      expansion_amount even when at full capacity
    + JDK-8240626: Some of the java.time.chrono.Eras return empty
      display name for some styles and locales
    + JDK-8240669: Devirtualize Relocation::type
    + JDK-8240704: CheckHandles.java failed "AssertionError: Handle
      use increased by more than 10 percent."
    + JDK-8240711: TestJstatdPort.java failed due to
      "ExportException: Port already in use:"
    + JDK-8240714: ZGC: TestSmallHeap.java failed due to
      OutOfMemoryError
    + JDK-8240772: x86_64: Pre-generate Assembler::popa, pusha and
      vzeroupper
    + JDK-8240824: enhance print_full_memory_info on Linux by THP
      related information
    + JDK-8240831: [JVMCI] Export missing vmStructs entries used by
      JVMCI compilers
    + JDK-8240846: Zero VM is broken after JDK-8238681: UseSSE not
      defined
    + JDK-8240854: [REDO] some jaotc failures of fastdebug build
      with specific flags
    + JDK-8240872: Shenandoah: Avoid updating new regions from
      start of evacuation
    + JDK-8240873: Shenandoah: Short-cut arraycopy barriers
    + JDK-8240906: Update ZGC ProblemList for
      serviceability/sa/TestJmapCoreMetaspace.java
    + JDK-8240915: Shenandoah: Remove unused fields in init mark
      tasks
    + JDK-8240916: Convert to using hyphenated naming for CSS
      classes
    + JDK-8240917: Shenandoah: Avoid scanning thread code roots
      twice in all root scanner
    + JDK-8240947: Change conflicting JVM features from warning to
      error
    + JDK-8240948: Shenandoah: cleanup not-forwarded-objects paths
      after JDK-8240868
    + JDK-8240950: Missing AC_SUBST after JDK-82408
    + JDK-8240957: Clarify BadAttributeValueExpException readObject
      method
    + JDK-8240964: Compilation error thrown when long literal used
      with yield
    + JDK-8240970: Some tests fail when run with JCov
    + JDK-8240971: Fix CSS styles in some doc comments
    + JDK-8240972: macOS codesign fail on macOS 10.13.5 or older
    + JDK-8240976: [JVMCI] MethodProfileWidth flag is broken
    + JDK-8240980: Backout JDK-8240261
    + JDK-8240982: Incorrect copyright header in BCEL 6.4.1 sources
    + JDK-8240983: Incorrect copyright header in Apache Santuario
      files
    + JDK-8241006: Cleanup TemplateInterpreter initialization
    + JDK-8241010: Unnecessarily resolving some well-known classes
    + JDK-8241018: 32-bit integer log2 functions return the wrong
      value for negative arguments on 64-bit machines
    + JDK-8241030: rename HtmlTag to TagName
    + JDK-8241033: Create test library utility for getting JFR
      streaming repository
    + JDK-8241034: Fix a configuring error with "-Xmx2048M: command
      not found"
    + JDK-8241042: x86_64: Improve Assembler generation
    + JDK-8241043: Expand assertions to identify thread with errant
      _stack_base
    + JDK-8241074: JDK-8240363 broke the build on AArch64
    + JDK-8241077: x86_64: Minor Assembler improvements
    + JDK-8241081: Shenandoah: Do not modify update-watermark
      concurrently
    + JDK-8241082: Upgrade IANA Language Subtag Registry data to
      03-16-2020 version
    + JDK-8241093: Shenandoah: editorial changes in flag
      descriptions
    + JDK-8241122: Remove unimplemented InlineTree constructor
      definition from parse.hpp
    + JDK-8241124: Aarch64 build broken by JDK-8239593
    + JDK-8241128: x86_32 build failure after JDK-8241042
    + JDK-8241162: ProblemList
      serviceability/sa/TestHeapDumpForInvokeDynamic.java on OSX

-------------------------------------------------------------------
Wed Mar 18 07:29:42 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Switch to java-15-openjdk package
- Upgrade to upstream tag jdk-15+14
  * Fixes:
    + S4617266: (se spec) SelectionKey.OP_READ/OP_WRITE
      documentation errors
    + S5085520: Inconsistency in spec for RenderingHints.entrySet()
    + S7020860: BasicTreeUI contains getters/setters with unclear
      spec
    + S8046362: IdentityHashMap.hash comments should be clarified
    + S8136414: Large performance penalty declaring a method
      strictfp on strict-only platforms
    + S8153090: TAB key cannot change input focus after the radio
      button in the Color Selection dialog
    + S8153430: jdk regression test MletParserLocaleTest,
      ParserInfiniteLoopTest reduce default timeout
    + S8160818: GssKrb5Client violates RFC 4752
    + S8163251: Hard coded loop limit prevents reading of smart
      card data greater than 8k
    + S8167493: Test that JFR event can be retransformed by an agent
    + S8176359: Frame#setMaximizedbounds not working properly in
      multi screen environments
    + S8183369: RFC unconformity of HttpURLConnection with proxy
    + S8183574: Unify the is_power_of_2 functions
    + S8187305: Add logging for shared library loads/unloads
    + S8191395: policy.allowSystemProperty and
      policy.expandProperties also apply to JAAS configurations
    + S8193237: SA: ClhsdbLauncher should show the command being
      executed
    + S8193553: Provide better guidance on using javax.lang.model
      visitors
    + S8196334: Optimize UUID#fromString
    + S8203239: [TESTBUG] remove vmTestbase/vm/gc/kind/parOld test
    + S8203883: Remove State from InvocationCounters
    + S8210977: jdk/jfr/event/oldobject/TestThreadLocalLeak.java
      fails to find ThreadLocalObject
    + S8211917: Zip FS should add META-INF/MANIFEST.FS  at the
      start of the Zip/JAR
    + S8213185: Properly handle run-test-prebuilt -> test-prebuilt
      migration
    + S8216329: Cannot resize  CheckBoxItemMenu in Synth L&F with
      setHorizontalTextPosition
    + S8216975: Using ForceNUMA does not disable adaptive sizing
      with parallel gc
    + S8219904: ClassCastException when calling
      FlightRecorderMXBean#getRecordings()
    + S8219999: TestJFREvents container test should not use
      jdk.CPUInformation event for container CPU values
    + S8220503: Move
      ShenandoahTerminatorTerminator::should_exit_termination out of
      header
    + S8221741: ClassCastException can happen when
      fontconfig.properties is used
    + S8221823: Requested JDialog width is ignored
    + S8222000: JFR: Process start event
    + S8222489: jcmd VM.system_properties gives unusable paths on
      Windows
    + S8223066: "jfr metadata" output the @Name annotation twice
    + S8223217: [TESTBUG] Create JFR tests with JMX across
      container boundary
    + S8223260: NamingManager should cache InitialContextFactory
    + S8225126: Test SetBoundsPaintTest.html failed on Windows when
      desktop is scaled
    + S8225128: Add exception for expiring DocuSign root to
      VerifyCACerts test
    + S8225130: Add exception for expiring Comodo roots to
      VerifyCACerts test
    + S8225495: Note whether returned annotations are declaration
      annotations or type annotations
    + S8225760: oop::raw_set_obj isn't needed
    + S8228451: NPE in Attr.java when -XDshould-stop.ifError=FLOW
    + S8230117: Remove unused JAR tool classes
    + S8230301: Re-examine hardcoded defaults in
      GenerateJLIClassesPlugin
    + S8230853: Shenandoah: replace leftover assert(is_in(...))
      with rich asserts
    + S8231111: Cgroups v2: Rework Metrics in java.base so as to
      recognize unified hierarchy
    + S8231118: ARM32: Math tests failures
    + S8231508: Spec Clarification : KeyTab:exist() method does not
      specify about the fallback details
    + S8231564: setMaximizedBounds is broken with large display
      scale and multiple monitors
    + S8232069: Enable CDS even when UseCompressedClassPointers
      and/or UseCompressedOops are false
    + S8232081: Try to link all classes during dynamic CDS dump
    + S8232438: Remove ?is-external=true from external links
    + S8232622: Technical debt in BadAttributeValueExpException
    + S8232686: Turn parallel gc develop tracing flags into unified
      logging
    + S8233619: SSLEngine handshake status immediately after the
      handshake can be NOT_HANDSHAKING rather than FINISHED with
      TLSv1.3
    + S8233827: Enable screenshots in the enhanced failure handler
      on Linux/macOS
    + S8234160: Enable optimized mitigation for Intel jcc erratum
      in C2
    + S8234347: "Turkey" meta time zone does not generate composed
      localized names
    + S8234372: Investigate use of Thread::stack_base() and queries
      for "in stack"
    + S8234608: [TESTBUG] Fix G1 redefineClasses tests and a memory
      leak
    + S8234718: java/net/httpclient tests should cover TLSv1.3
    + S8234812: Add micros for DatagramChannel send/receive
    + S8234896: Tab completion does not work for method references
      in jshell.
    + S8234935: JdwpListenTest.java and JdwpAttachTest.java getting
      bind failures on Windows 2016 hosts
    + S8235147: Release HDC from passiveDCList sooner
    + S8235206: JFR TestCrossProcessStreaming - validate that data
      can be consumed while it is being produced
    + S8235216: typo in test filename
    + S8235225: Replace CHECK_0 with CHECK_NULL for non-integer
      returning methods
    + S8235791: [TESTBUG] Fix comment in TestElfDirectRead.java
    + S8235812: Unicode linebreak with quantifier does not match
      valid input
    + S8235834: IBM-943 charset encoder needs updating
    + S8235900: [TESTBUG] [macos] PopupMenu Opaque property is not
      reflecting the Parents property on MAC OS
    + S8235962: os::current_thread_id() is not signal safe on macOS
    + S8235995: Remove src/jdk.internal.vm.compiler/.mx.graal
      directory
    + S8236512: PKCS11 Connection closed after Cipher.doFinal and
      NoPadding
    + S8236548: Localized time zone name inconsistency between
      English and other locales
    + S8236604: Optimize
      SystemDictionary::resolve_well_known_classes for CDS
    + S8236759: ShouldNotReachHere in
      PhaseIdealLoop::verify_strip_mined_scheduling
    + S8236844: Deprecate PrintVMQWaitTime to prepare for its
      removal
    + S8236938: [TESTBUG] JFR event MetaspaceAllocationFailure is
      not tested
    + S8236981: Remove ShenandoahTraversalUpdateRefsClosure
    + S8236996: Incorrect Roboto font rendering on Windows with
      subpixel antialiasing
    + S8237049: Rollback the workaround for JDK-4533057
    + S8237192: Generate stripped/public pdbs on Windows for jdk
      images
    + S8237218: Support NIST Curves verification in java
      implementation
    + S8237221: [macos] java/awt/MenuBar/SeparatorsNavigation/
      /SeparatorsNavigation.java fails
    + S8237222: [macos] java/awt/Focus/UnaccessibleChoice/
      /AccessibleChoiceTest.java fails
    + S8237450: JDK13 annotation processors not run when a
      supported annotation type specifies a module
    + S8237480: Add micros for DatagramSocket send/receive
    + S8237499: JFR: Include stack trace in the ThreadStart event
    + S8237566: FindTests.gmk should only include existing
      TEST.ROOT files
    + S8237632: Shenandoah: accept NULL fwdptr to cooperate with
      JVMTI and JFR
    + S8237766: Enhance signature API to include
      ResolvingSignatureStream
    + S8237767: Field layout computation overhaul
    + S8237780: Shenandoah: More reliable nmethod verification
    + S8237805: Use inline @jls @jvms in core libs where appropriate
    + S8237818: Typo in Unsafe: resposibility
    + S8237830: support O_CLOEXEC in os::open on other OS than Linux
    + S8237837: Shenandoah: assert(mem == __null) failed: only one
      safepoint
    + S8237878: Improve ModuleLoaderMap datastructures
    + S8237909: Remove zipped index files feature
    + S8237945: CTW: C2 compilation fails with
      assert(just_allocated_object(alloc_ctl) == ptr) failed: most
      recent allo
    + S8237966: Creating runtime pkg requires
      --mac-package-identifier
    + S8237967: No proper error message when --runtime-image points
      to non-existent path
    + S8238160: Uniformize Parallel GC task queue variable names
    + S8238175: CTW: Class.getDeclaredMethods fails with
      assert(k->is_subclass_of(SystemDictionary::Throwable_klass()))
      failed: invalid exception class
    + S8238178: CTW: C1 compilation fails with
      assert(sux->loop_depth() != block->loop_depth() ||
      sux->loop_index() == block->loop_index() ||
      loop_through_xhandler) failed: Loop index has to be same
    + S8238180: RunThese30M failed
      "assert(t->jfr_thread_local()->shelved_buffer() == __null)
      failed: invariant"
    + S8238196: tests that use SA Attach should not be allowed to
      run against signed binaries on Mac OS X 10.14.5 and later
    + S8238236: Add JFR class redefinition events
    + S8238239: java.lang.Record spec clarifications
    + S8238247: CTW runner should sweep nmethods more aggressively
    + S8238272: Eliminate cast_from_oop to narrowOop*
    + S8238276: ComponentPeer.xxxImage are not implemented in some
      peers
    + S8238278: vmTestbase/vm/compiler/CodeCacheInfo/Test.java
      failure after JDK-8237787
    + S8238291: Fix inconsistencies in the format of the index files
    + S8238355: Update Graal
    + S8238356: CodeHeap::blob_count() overestimates the number of
      blobs
    + S8238366: CTW runner closes standard output on exit
    + S8238376: test/jdk/java/nio/channels/DatagramChannel/
      /Loopback.java failing on multi-homed systems
    + S8238380: java.base/unix/native/libjava/childproc.c "multiple
      definition" link errors with GCC10
    + S8238384: CTW: C2 compilation fails with "assert(store !=
      load->find_exact_control(load->in(0))) failed: dependence
      cycle found"
    + S8238385: CTW: C2 (Shenandoah) compilation fails with "Range
      check dependent CastII node was not removed"
    + S8238386: (sctp) jdk.sctp/unix/native/libsctp/SctpNet.c
      "multiple definition" link errors with GCC10
    + S8238437: Support separate locales for console messages and
      HTML content.
    + S8238438: SuperWord::co_locate_pack picks memory state of
      first instead of last load
    + S8238448: RSASSA-PSS signature verification fail when using
      certain odd key sizes
    + S8238452: Keytool generates wrong expiration date if validity
      is set to 2050/01/01
    + S8238506: fix obsolete comments and inconsistent exceptions
      in BaseTaglet
    + S8238534: Deep sign macOS bundles before bundle archive is
      being created
    + S8238555: Allow Initialization of SunPKCS11 with NSS when
      there are external FIPS modules in the NSSDB
    + S8238560: Cleanup and consolidate algorithms in the
      jdk.tls.legacyAlgorithms security property
    + S8238579: HttpsURLConnection drops the timeout and hangs
      forever in read
    + S8238586: [TESTBUG] vmTestbase/jit/tiered/Test.java failed
      when TieredCompilation is disabled
    + S8238591: CTW: Split
      applications/ctw/modules/jdk_localedata.java
    + S8238596: AVX enabled by default for Skylake even when
      unsupported
    + S8238602: remove obsolete functions from
      libinstrument/FileSystemSupport_md.c
    + S8238634: Reduce log verbosity of the JFR thread sampler
    + S8238643: ARM32 build fails after JDK-8230199
    + S8238646: Cleanup signature and use of CommentHelper
    + S8238648: Rename and simplify Utils.WeakSoftHashMap
    + S8238676: jni crashes on accessing it from process exit hook
    + S8238677: java/net/httpclient/ssltest/CertificateTest.java
      should not specify TLS version
    + S8238680: C2: Remove redundant AD instructions for Replicate
      nodes
    + S8238681: Make -XX:UseSSE flag x86-specific
    + S8238683: C2: Remove Use24BitFP and Use24BitFPMode flags
    + S8238684: Override getOrDefault in immutable Map
      implementation
    + S8238690: C2: Handle vector shifts by constant and
      non-constant scalar uniformly
    + S8238691: C2: turn subtype check into macro node
    + S8238692: MacOS runtime Installer issue
    + S8238705: [TESTBUG] jfr/event/gc/stacktrace/TestMetaspace*
      are stable with Xcomp on AArch64
    + S8238710: LingeredApp doesn't log stdout/stderr if exits with
      non-zero code
    + S8238721: Add failing client jtreg tests to the Problem List
    + S8238723: yank_alloc_node must remove membar
    + S8238738: AudioSystem.getMixerInfo() takes about 30 sec to
      report a gone audio device
    + S8238740: java/net/httpclient/whitebox/FlowTestDriver.java
      would not specify a TLS protocol
    + S8238741: java.awt.Robot(GraphicsDevice) constructor does not
      follow the spec
    + S8238756: C2: assert(((n) == __null || !VerifyIterativeGVN ||
      !((n)->is_dead()))) failed: can not use dead node
    + S8238758: [JVMCI] fix JVMCI jtreg events tests to work with
      GraalVM
    + S8238759: Clones should always keep the base pointer
    + S8238762: Optimized build is broken
    + S8238765: PhaseCFG::schedule_pinned_nodes cannot handle
      precedence edges from unmatched CFG nodes correctly
    + S8238782: Cleanup Deoptimization::deoptimize(): remove unused
      RegisterMap argument and don't update RegisterMap in callers
      if UseBiasedLocking is enabled
    + S8238811: C2: assert(i >= req() || i == 0 || is_Region() ||
      is_Phi()) with -XX:+VerifyGraphEdges
    + S8238838: spurious error message for compact constructors
      with throws clause
    + S8238842: AIOOBE in GIFImageReader.initializeStringTable
    + S8238851: Shenandoah: C1: Resolve into registers of correct
      type
    + S8238854: Remove superfluous C heap allocation failure checks
    + S8238863: Refactor out static initialization from Dict
      constructors
    + S8238867: Improve G1DirtyCardQueueSet::Queue::pop
    + S8238896: Massive x86_32 crashes after JDK-7175279 (Don't use
      x87 FPU on x86-64)
    + S8238898: Missing hash characters for header on license file
    + S8238909: x86_32 fails gtest:power_of_2
    + S8238912: Update devkit for linux-aarch64
    + S8238918: idea.sh should work with both mercurial and git
      repos
    + S8238919: (doc) Broken code snippet in the java.util.stream
      package documentation
    + S8238930: problem list compiler/c2/Test8004741.java
    + S8238932: Invalid tier1_gc_1 test group definition
    + S8238942: Rendering artifacts with LCD text and fractional
      metrics
    + S8238943: switch to jtreg 5.0
    + S8238947: tools/jpackage tests fail with old rpmbuild versions
    + S8238953: tools/jpackage tests do not work on Ubuntu Linux
    + S8238959: Add missing classpath exception to FileAcess and
      ConstantLookup
    + S8238961: Assertion failure in new field layout code when
      ContendedPaddingWidth == 0.
    + S8238969: Miscellaneous cleanup
    + S8238979: Improve G1DirtyCardQueueSet handling of previously
      paused buffers
    + S8238985: [TESTBUG] The arrow image is blue instead of green
    + S8238988: Rename thread "in stack" methods and add
      in_stack_range
    + S8238990: java/net/httpclient/HandshakeFailureTest.java
      failed against TLSv1.3 on Windows
    + S8238999: Remove MemRegion custom new/delete operator
      overloads
    + S8239000: handle ContendedPaddingWidth in vm_version_ppc
    + S8239001: Hotspot build broken on linux-sparc after 8238281
    + S8239005: [TESTBUG] test/hotspot/jtreg/runtime/
      /StackGuardPages/TestStackGuardPages.java: exeinvoke.c: must
      initialize static state before calling do_overflow()
    + S8239007: java/math/BigInteger/largeMemory/ tests should be
      disabled on 32-bit platforms
    + S8239008: C2: Simplify Replicate support for sub-word types
      on x86
    + S8239009: C2: Don't use PSHUF to load scalars from memory on
      x86
    + S8239014: -XX:-UseEmptySlotsInSupers sometime fails to
      reproduce the layout of the old code
    + S8239017: cmp-baseline fails because of differences in
      TimeZoneNames_kea
    + S8239019: testmake fails with FATAL: VCS_TYPE is empty
    + S8239025: ProblemList java/net/httpclient/
      /HandshakeFailureTest.java due to JDK-8238990
    + S8239026: Support non-maven artifacts by JibArtifactManager
    + S8239052:
      java/net/httpclient/whitebox/SSLEchoTubeTestDriver.java failed
      with BufferUnderflowException against TLSv1.3
    + S8239055: Wrong implementation of VMState.hasListener
    + S8239066: make LinkedList<T> more generic
    + S8239069: C2: SIGSEGV in IdealGraphPrinter::walk_nodes due to
      C->root() being NULL
    + S8239070: Memory leak when unsuccessfully mapping in archive
      regions
    + S8239081: Shenandoah: Consolidate C1 LRB and native barriers
    + S8239091: Reversed arguments in call to strstr in freetype
      "debug" code.
    + S8239092: Provide explicit specification for getKind methods
      of javax.lang.model
    + S8239094: PKCS#9 ChallengePassword attribute does not allow
      for the UTF8String type
    + S8239110: Zero VM build fails after JDK-8203883
    + S8239129: ZGC: Allow -XX:AllocateHeapAt to use any filesystem
    + S8239139: test/jdk/java/nio/channels/spi/SelectorProvider/
      /inheritedChannel/libInheritedChannel.c does not compile with
      gcc 8.3.1
    + S8239142: C2's UseUniqueSubclasses optimization is broken for
      array accesses
    + S8239224: libproc_impl.c previous_thr may be used
      uninitialized warning
    + S8239235: Examine SignatureStream performance after
      consolidation
    + S8239243: Create index structures only if required
    + S8239264: Clearup the legacy ObjectIdentifier constructor
      from int array
    + S8239265: JFR: Test cleanup of jdk.jfr.api.consumer package
    + S8239333: test/jdk/security/infra/java/security/cert/
      /CertPathValidator/certification/AmazonCA.java fails
      intermittent
    + S8239334: Tab Size does not work correctly in JTextArea with
      setLineWrap on
    + S8239335: C2: assert((Value(phase) == t) || (t !=
      TypeInt::CC_GT && t != TypeInt::CC_EQ)) failed: missing
      Value() optimization
    + S8239347: Refactor Symbol to make _length a standalone field
      again
    + S8239350: Add tests for JFR class redefinition events
    + S8239351: Give more meaningful InternalError messages in
      Deflater.c
    + S8239354: Shenandoah: minor enhancements to traversal GC
    + S8239363: PPC64: Wrong code generation after JDK-8183574
    + S8239367: RunThese30M.java failed due to "assert(false)
      failed: graph should be schedulable"
    + S8239376: JFR: assert(!cld->is_unsafe_anonymous()) failed:
      invariant
    + S8239378: Add Classpath Exception to license in source file.
    + S8239379: ProblemList
      serviceability/sa/sadebugd/DebugdConnectTest.java on OSX
    + S8239422: [TESTBUG]
      compiler/c1/TestPrintIRDuringConstruction.java failed when C1
      is disabled
    + S8239423: jdk/jfr/jvm/TestJFRIntrinsic.java failed with
      -XX:-TieredCompilation
    + S8239424: [TESTBUG]
      compiler/whitebox/OSRFailureLevel4Test.java failed when
      TieredCompilation is disabled
    + S8239449: [TESTBUG]
      test/hotspot/jtreg/runtime/TLS/TestTLS.java: skip test if
      glibc too old for AdjustStackSizeForTLS
    + S8239450: Overhaul JVM feature handling in configure
    + S8239456: vtable stub generation: assert failure (code size
      estimate)
    + S8239457: call ReleaseStringUTFChars before early returns in
      Java_sun_security_pkcs11_wrapper_PKCS11_connect
    + S8239461: Use jcod rather than jar files in runtime tests
    + S8239462: jdk.hotspot.agent misses some ReleaseStringUTFChars
      calls in case of early returns
    + S8239478: Make specification of SourceVersion.isName explicit
      for dotted names
    + S8239485: Define behavior of the System Properties page when
      no system properties are available
    + S8239487: Better links generation for system properties found
      in HTML files
    + S8239492: [x86] Turn MacroAssembler::verify_oop into macro
      recording file and line
    + S8239500: jittester shouldn't use non-deterministic System
      methods
    + S8239503: FieldLayout/OldLayoutCheck.java fails due to
      "RuntimeException: Misplaced int field: expected 24 to equal
      12"
    + S8239514: Build for arm-linux-gnueabihf fails with undefined
      reference read_polling_page
    + S8239520: ValueRange.of(long, long, long) does not throw IAE
      on invalid inputs
    + S8239533: ZGC: Make the ZProactive flag non-diagnostic
    + S8239536: Can't use 'java.util.List' object after importing
      'java.awt.List'
    + S8239537: cgroup MetricsTester testMemorySubsystem fails
      sometimes when testing memory.kmem.tcp.usage_in_bytes
    + S8239549: AArch64: Backend support for MulAddVS2VI node
    + S8239556: (zipfs) remove ExistingChannelCloser facility in
      zipfs implementation
    + S8239557: [TESTBUG] VeryEarlyAssertTest.java validating
      "END." marker at lastline is not always true
    + S8239559: Cgroups: Incorrect detection logic on some systems
    + S8239566: gtest/GTestWrapper.java fails due to
      "libstlport.so.1: open failed: No such file or directory"
    + S8239568: [TESTBUG] LoadLibraryTest.java fails with
      RuntimeException
    + S8239575: javadoc triggers javac AssertionError for annos on
      modules
    + S8239581: Improve javadoc example for @jdk.jfr.Category
    + S8239583: [AIX] simplify the native references in X input
      methods
    + S8239584: EventStream::close should state that stream will be
      stopped
    + S8239585: JFR: Native events should support empty payloads
    + S8239708: Split basics.m4 into basic.m4 and util.m4
    + S8239787: AArch64: String.indexOf may incorrectly handle
      empty strings
    + S8239789: Follow-up on JVM feature rewrite
    + S8239793: 'jfr' tool should hide hidden frames
    + S8239794: Move -Os from JVM feature 'minimal' to new feature
      'opt-size'
    + S8239798: SSLSocket closes socket both socket endpoints on a
      SocketTimeoutException
    + S8239799: Cross-compilation ARM32/AARCH clientvm builds fails
      after JDK-8239450
    + S8239804: Cleanup/simplify HTML/CSS for general block tags
    + S8239815: Update ECC legal file
    + S8239817: Eliminate use of contentContainer and friends
    + S8239836: ZoneRules.of() doesn't check
      transitionList/standardOffsetTL arguments validity
    + S8239837: Typo in source code of ZoneOffsetTransitionRule
      leaking to Javadocs
    + S8239852: java/util/concurrent tests fail with
      -XX:+VerifyGraphEdges: assert(!VerifyGraphEdges) failed:
      verification should have failed
    + S8239854: Non-PCH gtest build fails after JDK-8239235 due to
      a missing include
    + S8239856: [ntintel] asserts about copying unaligned array
      element
    + S8239860: Add support for testing the configure script
    + S8239868: Shenandoah: ditch C2 node limit adjustments
    + S8239873: [TESTBUG] FieldLayout/OldLayoutCheck.java fails
      after the fix for JDK-8239503
    + S8239876: Improve SearchIndexItem
    + S8239878: Bug in PrintEliminateAllocations code causes
      TestClhsdbJstackLock.java to fail
    + S8239885: [TESTBUG] compiler/allocation/TestAllocation.java
      fails with release VMs
    + S8239886: Minimal VM build fails after JDK-8237499
    + S8239893: Windows handle Leak when starting processes using
      ProcessBuilder
    + S8239904: Shenandoah: accumulated penalties should not be
      over 100% of capacity
    + S8239915: Zero VM crashes when handling dynamic constant
    + S8239916: SA: delete dead code in jdk.hotspot.agent/share/
      /classes/sun/jvm/hotspot/oops/ObjectHeap.java
    + S8239928: ec/ECDSAJavaVerify.java failed due to timeout
    + S8239931: [win][x86] vtable stub generation: assert failure
      (code size estimate) follow-up
    + S8239965: XMLEncoder/Test4625418.java fails due to "Error:
      Cp943 - can't read properly"
    + S8239976: Put JDK-8239965 on the ProblemList.txt
    + S8239979: sun/security/tools/keytool/ExtOptionCamelCase.java
      is not run
    + S8240069: Shenandoah: turn more flags diagnostic
    + S8240070: Shenandoah: remove obsolete
      ShenandoahCommonGCStateLoads
    + S8240076: Shenandoah: pacer should cover reset and preclean
      phases
    + S8240094: Optimize empty substring handling
    + S8240132: ProblemList com/sun/jdi/InvokeHangTest.java
    + S8240133: G1DirtyCardQueue destructor has useless flush
    + S8240134: ProblemList javax/script/Test7.java
    + S8240135: ProblemList vmTestbase/vm/mlvm/meth/stress/compiler/
      /deoptimize/Test.java#id1
    + S8240136: Cleanup/simplify HTML/CSS for definition lists
    + S8240137: Support chained use of Content.add
    + S8240141: Incorrect copyright header in
      src/hotspot/os_cpu/linux_sparc/os_linux_sparc.cpp
    + S8240142: Fix copyright in ThreadGroupReferenceImpl.h
    + S8240189: [TESTBUG] Some cgroup tests are failing after
      JDK-8231111
    + S8240193: loadLibrary("osxsecurity") should not be removed
    + S8240195: some jaotc failures of fastdebug build with
      specific flags
    + S8240197: Cannot start JVM when $JAVA_HOME includes CJK
      characters
    + S8240202: A few client tests leave mouse buttons pressed
    + S8240215: Shenandoah: remove ShenandoahAllocationTrace
    + S8240216: Shenandoah: remove ShenandoahTerminationTrace
    + S8240217: Shenandoah: remove ShenandoahEvacAssist
    + S8240220: IdealLoopTree::dump_head predicate printing is
      broken
    + S8240223: Use consistent predicate order in and with
      PhaseIdealLoop::find_predicate
    + S8240226: DeflateIn_InflateOut.java test incorrectly assumes
      size of compressed file
    + S8240231: Build failure on illumos after 8238988
    + S8240235: jdk.test.lib.util.JarUtils updates jar files
      incorrectly
    + S8240239: Replace ConcurrentGCPhaseManager
    + S8240241: Add support for JCov DiffCoverage to make files
    + S8240244: Avoid calling resolve_super_or_fail in
      SystemDictionary::load_shared_class
    + S8240246: Avoid cast_to_oop from char*
    + S8240254: Build is broken when cds is disabled after
      JDK-8236604
    + S8240258: SystemDictionary::quick_resolve need guarded by
      INCLUDE_CDS
    + S8240263: Assertion-only call in Method::link_method
      affecting product builds
    + S8240267: VM fails to start with CDS enabled but JVMTI
      disabled
    + S8240286: [TESTBUG] Test command error in hotspot/jtreg/
      /compiler/loopopts/superword/SumRedAbsNeg_Float.java
    + S8240295: hs_err elapsed time in seconds is not accurate
      enough
    + S8240302: x64: Assembler::reachable redundantly call
      Relocation::type() more than once
    + S8240315: Shenandoah: Rename ShLBN::get_barrier_strength()
    + S8240324: Improve is_boot_class_loader_data() by adding
      simple check
    + S8240333: jmod incorrectly updates .jar and .jmod files
      during hashing
    + S8240340: java/lang/management/ThreadMXBean/Locks.java is
      buggy
    + S8240370: Provide Intel JCC Erratum opt-out
    + S8240440: Implement get_safepoint_workers() for parallel GC
    + S8240454: incorrect error message: as of release 13, 'record'
      is a restricted type name
    + S8240481: Remove CDS usage of InstanceKlass::is_in_error_state
    + S8240511: Shenandoah: parallel safepoint workers count should
      be ParallelGCThreads
    + S8240524: Remove explicit type argument in test
      jdk/java/lang/Boolean/MakeBooleanComparable.java
    + S8240528: OopMap cleanup
    + S8240529: CheckUnhandledOops breaks NULL check in
      Modules::define_module
    + S8240530: CheckUnhandledOops breaks
      BacktraceBuilder::set_has_hidden_top_frame
    + S8240532: heap inspection prints trailing @ after name of
      module without version
    + S8240534: Shenandoah: ditch debug safepoint timeout adjustment
    + S8240535: Add additional linux-aarch64 jib profiles
    + S8240538: [JVMCI] add test for JVMCI ConstantPool class
    + S8240546: runtime/cds/appcds/TestZGCWithCDS.java fails with
      Graal
    + S8240576: JVM crashes after transformation in C2
      IdealLoopTree::merge_many_backedges
    + S8240589: OtherRegionsTable::_num_occupied not updated
      correctly
    + S8240592: HeapRegionManager::rebuild_free_list logs 0s for
      the estimated free regions before
    + S8240603: Windows 32bit compile error after 8238676
    + S8240610: [JVMCI] Export VMVersion::_has_intel_jcc_erratum to
      JVMCI compiler
    + S8240613: InstanceKlass::set_init_state failed with
      assert(good_state || state == allocated)
    + S8240615: is_power_of_2() has Undefined Behaviour and is
      inconsistent
    + S8240624: Note mapping of RoundingMode constants to
      equivalent IEEE 754-2019 attribute
    + S8240629: argfiles parsing broken for argfiles with comment
      cross 4096 bytes chunk
    + S8240668: G1 list of all PerRegionTable does not have to be a
      double linkedlist any more
    + S8240671: Shenandoah: refactor ShenandoahPhaseTimings
    + S8240684: ProblemList 70 security tests that are failing on
      Windows due to "Fetch artifact failed"
    + S8240686: 70 security tests are failing on Windows due to
      "Fetch artifact failed"
    + S8240691: ClhsdbCDSJstackPrintAll incorrectly thinks CDS is
      in use
    + S8240695: Build is broken when cds is disabled after
      JDK-8232081
    + S8240697: convert builders to high-level Content blocks
    + S8240722: [BACKOUT] G1DirtyCardQueue destructor has useless
      flush
    + S8240725: Some functions might not work with CJK character
    + S8240734: ModuleHashes attribute not reproducible between
      builds
    + S8240738: nested comment in JVM.java and other minor
      formatting errors
    + S8240749: Shenandoah: refactor ShenandoahUtils
    + S8240750: Shenandoah: remove leftover files and mentions of
      ShenandoahAllocTracker
    + S8240754: Instrument FlowTest.java to provide more debug
      traces.
    + S8240778: JFR: Create timer task lazily
    + S8240794: [BACKOUT] 8238384 CTW: C2 compilation fails with
      "assert(store != load->find_exact_control(load->in(0)))
      failed: dependence cycle found"
    + S8240820: Replace AC_ARG_ENABLE with UTIL_ARG_ENABLE
    + S8240829: Use a fast O(1) algorithm for exact_log2
    + S8240830: [BACKOUT] 8240195: some jaotc failures of fastdebug
      build with specific flags
    + S8240840: Rollback whitebox.cpp in push 8240691
    + S8240866: Typo in JDK-8240820 messes up configure --help
    + S8240868: Shenandoah: remove CM-with-UR piggybacking cycles
    + S8240881: [BACKOUT] 8222489 jcmd VM.system_properties gives
      unusable paths on Windows

-------------------------------------------------------------------
Tue Mar 17 16:32:02 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+36
  * Fixes
    + S8238605: Correct the CLDR version number in cldr.md files

-------------------------------------------------------------------
Tue Mar 17 16:30:16 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+35
  * Fixes:
    + S8225128: Add exception for expiring DocuSign root to
      VerifyCACerts test
    + S8234466: Class loading deadlock involving
      X509Factory#commitEvent()
    + S8234608: [TESTBUG] Fix G1 redefineClasses tests and a memory
      leak
    + S8236092: Remove EA from JDK 14 version string starting with
      Initial RC promotion
    + S8236700: Upgrading JSZip from v3.1.5 to v3.2.2
    + S8236743: JFR: assert(klass != __null) failed: invariant in
      ObjectSampleCheckpoint::add_to_leakp_set
    + S8236815: Shenandoah: Fix weak roots in final Traversal GC
      phase
    + S8237007: Shenandoah: assert(_base == Tuple) failure during
      C2 compilation
    + S8237223: Shenandoah: important flags should not be ergonomic
      for concurrent class unloading
    + S8237375: SimpleThresholdPolicy misses CounterDecay timestamp
      initialization
    + S8237508: Simplify JarFile.isInitializing
    + S8237514: Spec Clarification - ByteBuffer::alignmentOffset
      Spec
    + S8237570: Shenandoah: cleanup uses of allocation/free
      threshold in static heuristics
    + S8237586: Shenandoah: provide option to disable periodic GC
    + S8237776: Shenandoah: Wrong result with Lucene test
    + S8238153: CTW: C2 (Shenandoah) compilation fails with
      "Unknown node in get_load_addr: CreateEx"
    + S8238377: JDK 14 L10N resource file update - msgdrop 20
    + S8238574: Shenandoah: Assertion failure due to missing null
      check
    + S8238596: AVX enabled by default for Skylake even when
      unsupported
    + S8238959: Add missing classpath exception to FileAcess and
      ConstantLookup
    + S8239007: java/math/BigInteger/largeMemory/ tests should be
      disabled on 32-bit platforms
    + S8239378: Add Classpath Exception to license in source file.

-------------------------------------------------------------------
Tue Mar 17 16:27:35 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+34
  * Fixes:
    + S8215361: (doc) Cleanup package-info markup - smartcardio,
      java.sql, java.sql.rowset
    + S8225471: Test utility
      jdk.test.lib.util.FileUtils.areAllMountPointsAccessible needs
      to tolerate duplicates
    + S8231515: [Graal] Crash during exception throwing in
      InterpreterRuntime::resolve_invoke
    + S8235778: No compilation error reported when a record is
      declared in a local class
    + S8236488: Support for configure option
      --with-native-debug-symbols=internal is impossible on Windows
    + S8237368: Problem with NullPointerException in RMI
      TCPEndpoint.read
    + S8237607: [macos] Signing app bundle with jpackage fails if
      runtime is already signed
    + S8237651: Clarify initialization of jdk.serialFilter
    + S8237869: exclude jtreg test security/infra/java/security/
      /cert/CertPathValidator/certification/LuxTrustCA.java because
      of instabilities
    + S8237916: Bad copyright line in a jshell source file
    + S8237918: Bad copyright line in a hotspot test
    + S8238168: Remove Copyright from WinLauncher.template

-------------------------------------------------------------------
Tue Mar 17 16:24:42 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+33
  * Fixes:
    + S8224052: Javadoc doesn't handle non-public intermediate
      types well
    + S8233680: JavacFileManager.close() doesn't clear some cache
      instance variables
    + S8234173: assert(loader != __null && oopDesc::is_oop(loader))
      failed: loader must be oop
    + S8235305: Corrupted oops embedded in nmethods due to parallel
      modification during optional evacuation
    + S8235584: UseProfiledLoopPredicate fails with
      assert(_phase->get_loop(c) == loop) failed: have to be in the
      same loop
    + S8235762: JVM crash in SWPointer during C2 compilation
    + S8236953: [macos] JavaFX SwingNode is not rendered on macOS
    + S8237348: Javadoc of MemorySegment::allocateNative should
      state that memory is zero-initialized8237348: Javadoc of
      MemorySegment::allocateNative should state that memory is
      zero-initialized
    + S8237369: Shenandoah: failed vmTestbase/nsk/jvmti/
      /AttachOnDemand/attach021/TestDescription.java test
    + S8237370: Javadoc of memory access API still refers to old
      MemoryAddress::offset method
    + S8237392: Shenandoah: Remove unreliable assertion
    + S8237396: JvmtiTagMap::weak_oops_do() should not trigger
      barriers
    + S8237465: JDK 14 L10n resource files update - msg drop 10

-------------------------------------------------------------------
Tue Mar 17 16:21:53 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+32
  * Fixes:
    + S8222098: tools/jlink/plugins/IncludeLocalesPluginTest.java
      time out
    + S8222100: tools/jimage/JImageTest.java time out
    + S8224909: Unlink Set of LinkedHashSets
    + S8225261: Better method resolutions
    + S8225279: Better XRender interpolation
    + S8225561: jlink --help doesn't state that ALL-MODULE-PATH is
      accepted for --add-modules
    + S8225773: jdeps --check produces NPE if there are missing
      module dependences
    + S8226352: Improve Kerberos interop capabilities
    + S8227758: More valid PKIX processing
    + S8227816: More Colorful ICC profiles
    + S8228548: Normalize normalization for all
    + S8229396: jdeps ignores multi-release when
      generate-module-info used on command line
    + S8229728: Implement negotiation parameters
    + S8229847: AttachProvider javadoc page needs an update
    + S8229855: C2 fails with assert(false) failed: bad AD file
    + S8229951: Better Ticket Granting Services
    + S8230318: Better trust store usage
    + S8230665: (bf spec) ByteBuffer::alignmentOffset spec
      misleading when address is misaligned
    + S8230967: Improve Registry support of clients
    + S8231134: Improved credential support
    + S8231139: Improved keystore support
    + S8231422: Setting JEP 290 Filter via System Property May Be
      Ignored
    + S8231780: Better TLS messaging support
    + S8231790: Provide better FileSystemProviders
    + S8232419: Improve Registry registration
    + S8233002: Further enhance datagram socket support
    + S8233452: java.math.BigDecimal.sqrt() with RoundingMode.FLOOR
      results in incorrect result
    + S8233655: NPE at jdk.compiler/
      /com.sun.tools.javac.comp.Flow$FlowAnalyzer.visitApply
    + S8234037: Improve Object Identifier Processing
    + S8234423: Modifying ArrayList.subList().subList() resets
      modCount of subList
    + S8234974: Shenandoah: Do concurrent roots even when no
      evacuation is necessary
    + S8235669: G1: Stack walking API can expose AS_NO_KEEPALIVE
      oops
    + S8235837: Memory access API refinements
    + S8235842: Shenandoah: Implement native LRB for narrow oop
    + S8235870: C2 crashes in
      IdealLoopTree::est_loop_flow_merge_sz()
    + S8236005: local records shouldn't capture any non-static
      state from any enclosing type
    + S8236098: AlgorithmConstraints:permits method not throwing
      IAEx when primitives are empty
    + S8236106: [TESTBUG] Shenandoah: Make TestThreadFailure more
      resilient
    + S8236125: Windows (MSVC 2013) build fails in jpackage: Need
      to include strsafe.h after tchar.h
    + S8236140: assert(!VerifyHashTableKeys || _hash_lock == 0)
      failed: remove node from hash table before modifying it
    + S8236179: C1 register allocation error with T_ADDRESS
    + S8236181: C2: Remove useless step_over_gc_barrier() in
      int->bool conversion
    + S8236263: Remove experimental streaming events
    + S8236264: Remove jdk.jfr.Recording::setFlushInterval and
      jdk.jfr.Recording::getFlushInterval
    + S8236443: Issues with specializing vector register type for
      phi operand with generic operands
    + S8236546: Yield with boolean expression and Object target
      type crashes javac.
    + S8236555: [s390] Fix VerifyOops
    + S8236582: (fc) FileChannel.map fails with InternalError when
      security manager enabled
    + S8236617: jtreg test
      containers/docker/TestMemoryAwareness.java fails after 8226575
    + S8236634: Memory Access API tests fail on 32-bit
    + S8236661: launcher test PatchSystemModules.java start failing
      frequently after JDK-8234049
    + S8236670: Conflicting bindings accepted in some cases
    + S8236681: Shenandoah: Disable concurrent class unloading flag
      if no class unloading for the GC cycle
    + S8236691: JFR: assert((((((klass)->trace_id()) &
      ((JfrTraceIdEpoch::method_and_class_in_use_this_epoch_bits())))
      != 0))) failed: invariant
    + S8236692: static final fields without initializer are
      accepted by javac
    + S8236715: JShell: Records with errors are not properly
      corraled
    + S8236726: Put vmTestbase/vm/mlvm/indy/stress/java tests on
      AOT Problem list
    + S8236732: Shenandoah: Stricter placement for oom-evac scopes
    + S8236769: Clarify javadoc of memory access API
    + S8236772: Fix build for windows 32-bit after 8212160 and
      8234331.
    + S8236779: static field in implementation class erroneously
      leaking in memory access javadoc
    + S8236804: java/nio/channels/FileChannel/
      /MapWithSecurityManager.java should be run in othervm mode
    + S8236841: compact constructor parameters are always final
    + S8236877: Add "record" to descriptions in
      java.lang.{annotation, reflect}
    + S8236897: Fix the copyright header for pkcs11gcm2.h
    + S8236902: Shenandoah: Missing string dedup roots in all root
      scanner
    + S8236936: x86_32 Minimal VM build failure after JDK-8230765
    + S8236944: The legVecZ operand should be limited to zmm0-zmm15
      registers
    + S8236945: typo "the the" in Lookup::in javadoc
    + S8236957: Obvious typo in
      java/security/spec/RSAMultiPrimePrivateCrtKeySpec.java
    + S8237038: Shenandoah: Reduce thread pool size in
      TestEvilSyncBug.java test
    + S8237055: [TESTBUG] compiler/c2/TestJumpTable.java fails with
      release VMs
    + S8237058: Update all nroff manpages for JDK 14 release
    + S8237062: Refine JSR 269 API ahead of Java SE 14 MR
    + S8237183: Bug ID missing for test in patch which fixed
      JDK-8230665
    + S8237186: Fix typo in copyright header of
      java/io/Reader/TransferTo.java

-------------------------------------------------------------------
Tue Mar 17 16:15:55 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+31
  * Fixes:
    + S8233751: StringBuilder / StringBuffer capacity() doc is
      misleading
    + S8234445: spurious error message for record constructors with
      receiver parameters
    + S8234783: Improve wording of spec of Record.equals
    + S8235751: Assertion when triggering concurrent cycle during
      shutdown
    + S8235934: gc/g1/TestGCLogMessages.java fails with
      'DerivedPointerTable Update' found
    + S8235984: C2: assert(out->in(PhiNode::Region) == head ||
      out->in(PhiNode::Region) == slow_head) failed: phi must be
      either part of the slow or the fast loop
    + S8236050: Some compiler tests fail when executed with custom
      TieredLevel
    + S8236124: Minimal VM slowdebug build failed after JDK-8212160
    + S8236266: change error message for the case when a class
      extends j.l.Record
    + S8236487: JFR Recorder Thread crashed due to
      "assert(_chunkwriter.is_valid()) failed: invariant"
    + S8236495: open/test/jdk/java/util/Locale/
      /LocaleProvidersRun.java failed on mac 10.14 with de_DE
      locale.
    + S8236544: confusing error message: return type of accessor
      method is not compatible with type of record component
    + S8236545: Compilation error in mach5
      java/awt/FileDialog/MacOSGoToFolderCrash.java
    + S8236695: java.lang.Record should be declared with an
      explicit constructor

-------------------------------------------------------------------
Tue Mar 17 16:11:20 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+30
  * Fixes:
    + S8233164: C2 fails with assert(phase->C->get_alias_index(t)
      == phase->C->get_alias_index(t_adr)) failed: correct memory
      chain
    + S8235637: jhsdb jmap from OpenJDK 11.0.5 doesn't work if
      prelink is enabled
    + S8235961: SyncResolverImpl does not throw SQLException as
      expected
    + S8236364: TEMP vector registers could be incorrectly assigned
      upper bank xmm registers after Generic Operands (JDK-8234391)
    + S8236441: Bound MulticastSocket fails when setting outbound
      interface on Windows
    + S8236470: Deal with ECDSA using ecdsa-with-SHA2 plus hash
      algorithm as AlgorithmId

-------------------------------------------------------------------
Tue Mar 17 16:05:52 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+29
  * Fixes:
    + S8233111: Epoch shift synchronization point for Compiler
      threads
    + S8233228: Disable weak named curves by default in TLS,
      CertPath, and Signed JAR
    + S8234059: Stress test fails with "Unexpected Exception in
      thread JFR Event Stream"
    + S8234727: sun/security/ssl/X509TrustManagerImpl tests support
      TLSv1.3
    + S8235119: Incomplete initialization of scan_top values
      results in out-of-bounds scanning of regions
    + S8235390: JfrEmergencyDump::on_vm_shutdown crashes
    + S8235738: [macos] tools/jpackage tests timeout on macOS
    + S8235927: Update Graal
    + S8235998: [c2] Memory leaks during tracing after '8224193:
      stringStream should not use Resource Area'.
    + S8236000: VM build without C2 fails
    + S8236110: Windows (MSVC 2013) build failures after JDK-8233299
    + S8236139: [Graal] java/lang/RuntimeTests/exec/
      /LotsOfOutput.java fails with JVMCI enabled
    + S8236449: Problem list compiler/jsr292/
      /ContinuousCallSiteTargetChange.java on solaris-sparcv9

-------------------------------------------------------------------
Tue Mar 17 16:03:11 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+28
  * Fixes:
    + S8230185: assert(is_Loop()) failed: invalid node class
    + S8231501: VM crash in
      MethodData::clean_extra_data(CleanExtraDataClosure*): fatal
      error: unexpected tag 99
    + S8231612: 100% cpu on arm32 in Service Thread
    + S8234049: Implementation of Memory Access API (Incubator)
    + S8234277: ClhsdbLauncher should enable verbose exceptions and
      do a better job of detecting SA failures
    + S8234728: Some security tests should support TLSv1.3
    + S8235634: Update Graal
    + S8235668: LineNumberReader#getLineNumber() returns wrong line
      number (one fewer) in Lucene test
    + S8235744: PIT: test/jdk/javax/swing/text/html/
      /TestJLabelWithHTMLText.java times out in linux-x64
    + S8235813: System property fullCipherSuites is not used by
      javax/net/ssl/compatibility/Compatibility.java
    + S8235814: Add --enable-deprecated-ports=yes to all solaris
      and SPARC build profiles
    + S8235819: -Wformat-overflow is reported from GCC 9
    + S8235829: graal crashes with Zombie.java test
    + S8235866: bump jtreg requiredVersion to 4.2b16
    + S8235874: The ordering of Cipher Suites is not maintained
      provided through jdk.tls.client.cipherSuites and
      jdk.tls.server.cipherSuites system property.
    + S8235976: Directives in WWW-Authenticate should be comma
      separated
    + S8235982: AArch64: Insufficient memory barriers in shadow
      region algorithm
    + S8236044: Create jdk_accessibility test group
    + S8236062: Disable clhsdb initialization of SA javascript
      support since it will always fail, and will likely be removed
      soon
    + S8236130: ProblemList
      jdk/jfr/jmx/security/TestEnoughPermission.java

-------------------------------------------------------------------
Tue Mar 17 15:55:36 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+27
  * Fixes:
    + S4949105: Access Bridge lacks html tags parsing
    + S7124307: JSpinner and changing value by mouse
    + S8141685: com/sun/jndi/ldap/InvalidLdapFilters.java
      initializes context failed
    + S8165443: Free Collection Set serial phase takes very long on
      large heaps
    + S8185041: Incorrect GPL header in pnglibconf.h
    + S8190492: Remove SSLv2Hello and SSLv3 from default enabled
      TLS protocols
    + S8209113: Use WeakReference for lastFontStrike for created
      Fonts
    + S8210527: JShell: NullPointerException in
      jdk.jshell.Eval.translateExceptionStack
    + S8212160: JVMTI agent crashes with "assert(_value != 0LL)
      failed: resolving NULL _value"
    + S8212780: Packaging Tool Implementation
    + S8214481: freetype path does not disable TrueType hinting
      with AA+FM hints
    + S8214916: SourceLauncherTest fails on exploded image
    + S8215038: Add a page that lists all system properties
    + S8215728: [Graal] we should run some Graal tests in tier1
    + S8218268: Javac treats Manifest Class-Path entries as Paths
      instead of URLs
    + S8220049: Obsolete ThreadLocalHandshakes
    + S8220348: [ntintel] asserts about copying unaligned array
    + S8220465: Use shadow regions for faster ParallelGC full GCs
    + S8221903: PIT:
      javax/swing/RepaintManager/IconifyTest/IconifyTest.java
      fails on ubuntu18.04
    + S8222756: Plural support in CompactNumberFormat
    + S8223261: JDK-8189208 followup - remove JDK_GetVersionInfo0
      and the supporting code
    + S8223968: Add abort type description to RTM statistic counters
    + S8224630: ElementScannerN, N > 9 should scan type parameters
    + S8225052: javax.lang.model support for records
    + S8225053: Preview APIs support for records
    + S8225054: Compiler implementation for records
    + S8225055: Javadoc for records
    + S8225219: [TESTBUG] AppCDS tests timed out with -Xcomp and
      --limit-modules option won't work with Graal
    + S8225562: jlink --module-path behavior inconsistent with
      help/errors
    + S8226314: com.sun.source support for records
    + S8226411: C2: Avoid memory barriers around off-heap unsafe
      accesses
    + S8226575: OperatingSystemMXBean should be made container aware
    + S8226797: serviceability/tmtools/jstat/GcCapacityTest.java
      fails with Exception: java.lang.RuntimeException:
      OGCMN > OGCMX (min generation capacity > max generation capacity)
    + S8227113: Specification for java.lang.Record
    + S8227607: Broken external links in java.desktop
    + S8228448: Jconsole can't connect to itself
    + S8229377: [JVMCI] Improve InstalledCode.invalidate for large
      code caches
    + S8229961: Assert failure in
      compiler/graalunit/HotspotTest.java
    + S8229994: assert(false) failed: Bad graph detected in
      get_early_ctrl_for_expensive
    + S8230067: Add optional automatic retry when running jtreg
      tests
    + S8230597: Update GIFlib library to the 5.2.1
    + S8231438: [macOS] Dark mode for the desktop is not supported
    + S8231810: javax/net/ssl/templates/
      /SSLSocketSSLEngineTemplate.java fails intermittently with
      "java.lang.Exception: Unexpected EOF"
    + S8232226: [macos 10.15] test/jdk/java/awt/color/EqualityTest/
      /EqualityTest.java may fail
    + S8232231: Remove invalid JFR thread CPU load test case
    + S8232513: java/net/DatagramSocket/PortUnreachable.java still
      fails intermittently with BindException
    + S8232681: ArrayIndexOutOfBoundsException with text blocks in
      javac when using -Xlint
    + S8232855: jshell missing word in /help help
    + S8233016: javax.crypto.Cipher throws NPE for the given custom
      CipherSpi and Provider
    + S8233032: assert(in_bb(n)) failed: must be
    + S8233033: C2 produces wrong result while unswitching a loop
      due to lost control dependencies
    + S8233112: Exclude SVG files from build comparison
    + S8233191: MulticastSocket joinGroup/leaveGroup do not specify
      their behavior when the outgoing interface has not been set
    + S8233222: Clarify system property usage in KerberosPrincipal
      instantiation
    + S8233319: Deprecate MulticastSocket methods that operate on
      java.net.InetAddress
    + S8233453: MLVM deoptimize stress test timed out
    + S8233526: JVM support for records
    + S8233866: Text in table cells has inconsistent alignment
    + S8233948: AArch64: Incorrect mapping between OptoReg and
      VMReg for high 64 bits of Vector Register
    + S8234076: JVM crashes on Windows 10 using --module=NAME
    + S8234101: Compilation error thrown when repeating annotation
      is used on record component
    + S8234137: The "AutoTestOnTop.java" test may run external
      applications
    + S8234148: DatagramSocket.setOption/getOption/supportedOption
      should support multicast options
    + S8234185: Cleanup usage of canonicalize function between
      libjava, hotspot and libinstrument
    + S8234211: allow discoverable javac plugins to be invoked by
      default
    + S8234267: DelegationPermission implementation doesn't
      completely follow the updated specification
    + S8234284: [dmg] Change DMG background image to TIFF
    + S8234288: Turkey Time Zone returns incorrect time zone name
    + S8234325: Delete unused vsync related code from the OGL
      pipeline on macOS
    + S8234328: VectorSet::clear can cause fragmentation
    + S8234331: Add robust and optimized utility for rounding up to
      next power of two
    + S8234350: assert(mode == ControlAroundStripMined && (use ==
      sfpt || !use->is_reachable_from_root())) failed: missed a node
    + S8234370: Implementation of JEP 362: Deprecate the Solaris
      and SPARC Ports
    + S8234386: [macos] NPE was thrown at expanding Choice from
      maximized frame
    + S8234391: C2: Generic vector operands
    + S8234392: C2: Extend Matcher::match_rule_supported_vector()
      with element type information
    + S8234398: Replace ID2D1Factory::GetDesktopDpi with
      GetDeviceCaps
    + S8234508: VM_HeapWalkOperation::iterate_over_object reads
      non-strong fields with an on-strong load barrier
    + S8234522: [macos] Crash with use of native file dialog
    + S8234542: code removal of Pack200 Tools and API
    + S8234654: ZGC: Only disarm NMethods when marking/relocating
      code roots
    + S8234689: facilitate writing additional custom attributes in
      a class file
    + S8234735: InstanceKlass:find_method_index regression after
      JDK-8231610
    + S8234746: Improve indexing of system properties
    + S8234784: Update jpeg.md to reflect code used by JDK
    + S8234802: [TESTBUG] Test Right Mouse Button Drag Gesture
      Recognition in all the platforms
    + S8234835: Use UTF-8 charset in fixuppandoc
    + S8234863: Increase default value of MaxInlineLevel
    + S8234867: Issue warning for mutually exclusive options on
      jpackage command line
    + S8234870: Deprecate the OracleUcrypto JCE Provider for removal
    + S8234871: deprecate SocketFlow (SO_FLOW_SLA) and related APIs
      for removal
    + S8234906: [TESTBUG] TestDivZeroCheckControl fails for client
      VMs due to Unrecognized VM option LoopUnrollLimit
    + S8235141: Specify the required standard socket options for
      the socket types in the java.net package
    + S8235143: C2: No memory state needed in
      Thread::currentThread() intrinsic
    + S8235174: ZGC: Add support for JFR leak profiler
    + S8235245: tiff_metadata.html has invalid HTML structure:
      misplaced </thead> element
    + S8235250: Create (test) abstraction for allocating objects
      that is immune to removal by optimizations
    + S8235252: Repair run_tests.sh by locating jtreg locally
    + S8235262: Move c2i_entry_barrier for x86_32 to shared
    + S8235288: AVX 512 instructions inadvertently used on Xeon for
      small vector width operations
    + S8235311: Tag mismatch may alert bad_record_mac
    + S8235324: Dying objects are published from users of
      CollectedHeap::object_iterate
    + S8235334: Deprecate jcmd GC.class_stats
    + S8235338: test jdk/jshell/CompletenessTest.java fails for
      records
    + S8235341: Improve WorkerDataArray API to disallow separate
      instantiation of sub-items
    + S8235346: [Redo] 8235247: WorkerDataArray leaks C heap memory
      for associated work items
    + S8235351: Lookup::unreflect should bind with the original
      caller independent of Method's accessible flag
    + S8235353: clean up hotspot problem lists
    + S8235355: Shenandoah: Resolve deadlock between OOM handler
      and nmethod lock
    + S8235356: [TESTBUG] Disable 'producer is alive' check in JFR
      TestCrossProcessStreaming
    + S8235359: Simplify method Class.getRecordComponents()
    + S8235360: Update JDWP, JDI and Instrumentation specs for
      Record attribute
    + S8235361: JAR Class-Path no longer accepts relative URLs
      encoding absolute Windows paths (e.g "/C:/...")
    + S8235366: ZGC: Kitchensink.java fails in
      ZBarrier::should_mark_through
    + S8235369: Class.toGenericString need to be updated for records
    + S8235383: C1 compilation fails with
      -XX:+PrintIRDuringConstruction -XX:+Verbose
    + S8235403: Further cleanup to test
      serviceability/sa/ClhsdbCDSCore.java
    + S8235405: C2: Merge AD instructions for different vector
      operations
    + S8235410: Enable handshakes on Linux x86 (32-bit)
    + S8235413: com.sun.net.httpserver.BasicAuthenticator.charset
      is protected field
    + S8235414: Module level doc-files show "unnamed package" as
      holder
    + S8235427: Remove unnecessary parameters from
      G1CollectedHeap::free_region and HeapRegion::hr_clear
    + S8235433: Problem list JdwpListenTest.java and
      JdwpAttachTest.java on Windows
    + S8235435: Remove (obsolete) @author info from javadoc source
      and tests
    + S8235438: [JVMCI] StackTraceElement::decode should use the
      original Method
    + S8235446: confusing error message for records with no parens
    + S8235448: code cleanup in SSLContextImpl.java
    + S8235452: Strip mined loop verification fails with
      assert(is_OuterStripMinedLoop()) failed: invalid node class
    + S8235453: tools/jpackage/junit/junit.java failed
    + S8235456: Minimal VM is broken after JDK-8212160
    + S8235457: Crash when reporting a message about an annotation
      on a module
    + S8235458: Problem caused by imports in a module-info.java file
    + S8235474: JShell does not handle records properly
    + S8235475: Add additional timestamp to test
      java/nio/channels/Selector/SelectWithConsumer.java
    + S8235483: Warnings printed during the build
    + S8235489: handle return values of sscanf calls in hotspot
    + S8235490: AppCDS DynamicArchiveRelocationTest.java failed:
      'always map archive(s) at an alternative address' missing
    + S8235499: Change HotSpot jtreg records test to better handle
      JDK updates
    + S8235510: java.util.zip.CRC32 performance drop after 8200067
    + S8235513: Change JVM to check for preview features using
      JVM_CLASSFILE_MAJOR_VERSION
    + S8235514: Update record serialization tests to not use hard
      coded source versions
    + S8235515: TestBasicLogOutput.java crashes due to
      EXCEPTION_ACCESS_VIOLATION in
      HandshakeThreadsOperation::do_handshake
    + S8235530: Removed duplicated threadByName methods in nsk/jdi
      tests
    + S8235531: Update record serialization migration tests to not
      use hard coded source versions
    + S8235539: [JVMCI] -XX:+EnableJVMCIProduct breaks
      -XX:-EnableJVMCI
    + S8235541: Extend javax.lang.model to cover binding variables
    + S8235547: Video memory leak in the OGL pipeline on macOS
    + S8235550: Clarify record reflective support specification
    + S8235551: BitMap::count_one_bits should use population_count
    + S8235585: Enable macOS codesigning for all libraries and
      executables
    + S8235586: Shenandoah: Traversal GC still uses old
      CLD::oops_do API
    + S8235597: Extend support for -XDaccessInternalAPI to plugin
      modules
    + S8235598: Shenandoah: Update copyrights
    + S8235600: Problemlist JFR streaming/TestJVMCrash until
      after-test cleanup issue is resolved
    + S8235601: redundant code in IOUtils.java
    + S8235620: Broken merge between JDK-8006406 and JDK-8003559
    + S8235621: Replace use of Function<?,Integer> with
      ToIntFunction
    + S8235625: [TESTBUG] tools/jpackage/share/
      /JavaOptionsEqualsTest.java fails with debug VMs
    + S8235629: Remove unnecessary calls to Thread::current
    + S8235636: gc/shenandoah/compiler/TestUnsafeOffheapSwap.java
      fails after JDK-8226411
    + S8235653: Clean-up BarrierSetC2
    + S8235654: JFR leak profiler should not trace through the
      StringTable
    + S8235655: Clean the duplicated block in SSLContextImpl
    + S8235670: Javadoc pages not printing correctly in some
      browsers
    + S8235685: Shenandoah: Enable leak profiler
    + S8235686: Add more custom hooks in Bundles.gmk
    + S8235687: Contents/MacOS/libjli.dylib cannot be a symlink
    + S8235688: C2: Merge AD instructions for AddV, SubV, and MulV
      nodes
    + S8235696: ZGC: assert(ZNMethod::is_armed(nm) ==
      _should_disarm_nmethods) failed: Invalid state
    + S8235719: C2: Merge AD instructions for ShiftV, AbsV, and
      NegV nodes
    + S8235728: JDK-8212780 breaks builds with a custom X11 include
      path
    + S8235729: Shenandoah: Remove useless casting to non-constant
    + S8235730: Incorrect javadoc in MatchKind
    + S8235748: ZGC: Remove ZAddress::address()
    + S8235750: [jpackage] Cleanup imports in WinMsiBundler.java
    + S8235756: C2: Merge AD instructions for DivV, SqrtV, and FmaV
      nodes
    + S8235757: Rename SupportedGC to IncludedGC
    + S8235759: Extend GCConfig::is_gc_supported to mean supported
      not only included in build
    + S8235760: ZGC: Implement precise check for @require vm.gc.Z
      for Windows
    + S8235767: Compilation failure caused by JDK-8212780:
      Packaging Tool Implementation
    + S8235773: Tier3 fails because graalunit tests started to run
      with ZGC
    + S8235776: Shenandoah: Shenandoah root updater not always uses
      right code blob closure
    + S8235788: Changeset for JDK-8235252 pushed with wrong bug ID
    + S8235789: AC_REQUIRE: 'PLATFORM_EXTRACT_TARGET_AND_BUILD' was
      expanded before it was required
    + S8235808: Remove graalunit from tier1_compiler_not_xcomp
    + S8235815: Revert 8227607: Broken external links in
      java.desktop

-------------------------------------------------------------------
Tue Mar 17 15:47:44 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+26
  * Fixes:
    + S8129092: compiler/intrinsics/classcast/
      /NullCheckDroppingsTest.java testVarClassCast() can fail
    + S8173361: various crashes in
      JvmtiExport::post_compiled_method_load
    + S8173658: JvmtiExport::post_class_unload() is broken for
      non-JavaThread initiators
    + S8193544: Regression automated test '/open/test/jdk/
      /javax/swing/JDialog/Transparency/TransparencyTest.java'
      fails
    + S8210058: Algorithmic Italic font leans opposite angle in
      Printing
    + S8213415: BitMap::word_index_round_up overflow problems
    + S8216041: [Event Request] - Deoptimization
    + S8223196: java/nio/channels/spi/SelectorProvider/
      /inheritedChannel/InheritedChannelTest.java fails on Solaris
      SPARC
    + S8223252: Update Javadoc help page with new search features
    + S8227324: Upgrade to freetype 2.10.1
    + S8227434: G1 predictions may over/underflow with high
      variance input
    + S8227739: Merge cost predictions for scanning cards and log
      buffer entries
    + S8230235: Rendering HTML with empty img attribute and
      documentBaseKey cause Exception
    + S8230385: [cds] No message is logged when shared image cannot
      be used due to mismatched configuration
    + S8231430: C2: Memory stomp in max_array_length() for
      T_ILLEGAL type
    + S8231579: G1's incremental calculation of region elapsed time
      always uses the same age group for prediction
    + S8232446: logging enhancement for rmi when socket closed
    + S8232594: Make the output of the JFR command duration more
      user friendly
    + S8232828: AArch64: compiler/c2/aarch64/TestVolatilesG1.java
      fails after JDK-8225776
    + S8233116: Escape Sequences For Line Continuation and White
      Space (Preview)
    + S8233185: HttpServer.stop() blocks indefinitely when called
      on dispatch thread
    + S8233223: Add Amazon Root CA certificates
    + S8233299: Implementation: JEP 365: ZGC on Windows
    + S8233307: MulticastSocket getOption(IP_MULTICAST_IF) returns
      interface when not set
    + S8233466: aarch64: remove unnecessary load of mdo when
      profiling return and parameters type
    + S8233524: Wrong module name for "package P is declared in the
      unnamed module, but module M does not read it"
    + S8233527: Update Lookup::hasPrivateAccess and
      Lookup::defineClass spec w.r.t. full power lookup
    + S8233588: Clean up SurvRateGroup
    + S8233696: [TESTBUG]Some jtreg tests fail when CAPS_LOCK is ON
    + S8233799: Review the need for overview.html in the java.time
      package
    + S8233919: Incrementally calculate the occupied cards in a
      heap region remembered set
    + S8233998: New young regions registered too early in
      collection set
    + S8234060: Potential memory reordering problem in JfrBuffer
      flush mechanism
    + S8234078: Missing license headers in a few javac files
    + S8234086: VM operation can be simplified
    + S8234147: Avoid looking up standard charsets in core libraries
    + S8234149: Several regression tests do not dispose Frame at end
    + S8234179: Move HeapRegion::_recorded_rs_length/
      /_predicted_elapsed_time_ms into G1CollectionSet
    + S8234355: Buffer overflow in jcmd GC.class_stats due to too
      many classes
    + S8234385: [TESTBUG] java/awt/EventQueue/6980209/
      /bug6980209.java fails in linux nightly
    + S8234397: add OS uptime information to os::print_os_info
      output
    + S8234426: Sweeper should not CompiledIC::set_to_clean with
      ICStubs for is_unloading() nmethods
    + S8234520: ZGC: C2: Oop instance cloning causing skipped
      compiles
    + S8234541: C1 emits an empty message when it inlines
      successfully
    + S8234543: ZGC: Parallel pre-touch
    + S8234574: Rename prediction methods in G1Analytics
    + S8234583: PrintAssemblyOptions isn't passed to hsdis library
    + S8234586: Rename survRateGroup.?pp files to
      g1SurvRateGroup.?pp
    + S8234587: Rename the SurvRateGroup class to G1SurvRateGroup
    + S8234616: assert(0 <= i && i < _len) failed: illegal index in
      PhaseMacroExpand::expand_macro_nodes()
    + S8234617: C1: Incorrect result of field load due to missing
      narrowing conversion
    + S8234625: hs test serviceability/sa/ClhsdbCDSCore.java fails
      on macOS 10.15
    + S8234645: ARM32: C1: PatchingStub for field access: not
      enough bytes
    + S8234656: Improve granularity of verifier logging
    + S8234662: Sweeper should keep current nmethod alive before
      yielding for ICStub refills
    + S8234671: JFR api/consumer/recordingstream/TestStart.java
      failed due to timeout at testStartTwice()
    + S8234696: tools/jlink/plugins/VendorInfoPluginsTest.java
      times out
    + S8234723: javax/net/ssl/TLS tests support TLSv1.3
    + S8234724: javax/net/ssl/templates/
      /SSLSocketSSLEngineTemplate.java supports TLSv1.3
    + S8234725: sun/security/ssl/SSLContextImpl tests support
      TLSv1.3
    + S8234741: enhance os::get_core_path on macOS
    + S8234742: Improve handshake logging
    + S8234744: KeyStore.store can write wrong type of file
    + S8234769: Duplicate attribution in freetype.md
    + S8234779: Provide idiom for declaring classes noncopyable
    + S8234786: Fix for JDK-8214578 breaks OS X 10.12 compatibility
    + S8234791: Fix Client VM build for x86_64 and AArch64
    + S8234796: Refactor Handshake::execute to take a more complex
      type than ThreadClosure
    + S8234805: (dc) Remove JNI upcall from DatagramChannel.receive
      implementation
    + S8234807: [TESTBUG] LoopRotateBadNodeBudget fails for client
      VMs due to Unrecognized VM option PartialPeelNewPhiDelta
    + S8234821: remove unused functions from libjli
    + S8234822: Limit ZGC jtreg-support to Windows 2019 Server
    + S8234823: java/net/Socket/Timeouts.java testcase
      testTimedConnect2() fails on Windows 10
    + S8234824: java/nio/channels/SocketChannel/AdaptSocket.java
      fails on Windows 10
    + S8234888: EventStream::close doesn't abort streaming thread
    + S8234891: AArch64: Fix build failure after JDK-8234387
    + S8234893: ARM32: build failure after JDK-8234387
    + S8234894: [TESTBUG] TestEliminateLocksOffCrash fails for
      client VMs due to Unrecognized VM option EliminateLocks
    + S8234899: Compiler reports AssertionError for conditional
      operator ? : and pattern matching for instanceof
    + S8234922: No compilation error reported not reported for a
      binding variable when loop broken with label
    + S8234923: Missed call_site_target nmethod dependency for
      non-fully initialized ConstantCallSite instance
    + S8234964: failure_handler: gather more environment
      information on Windows, Solaris and Linux
    + S8235179: [TESTBUG] DynamicArchiveRelocationTest.java fails
      with 'runtime archive relocation start' missing
    + S8235183: Remove the "HACK CODE" in comment
    + S8235193: (dc) Remove JNI overhead from DatagramChannel.send
      implementation
    + S8235218: Minimal VM is broken after JDK-8173361
    + S8235221: Fix ProblemList.txt for
      sun/tools/jhsdb/HeapDumpTestWithActiveProcess.java
    + S8235243: handle VS2017 15.9 and VS2019 in abstract_vm_version
    + S8235247: WorkerDataArray leaks C heap memory for associated
      work items
    + S8235255: ProblemList
      javax/net/ssl/templates/SSLSocketSSLEngineTemplate.java
    + S8235257: Split 'assert(loader != NULL &&
      oopDesc::is_oop(loader), "loader must be oop")'
    + S8235260: Shenandoah: Don't allow recycle-assist until
      concurrent roots are done
    + S8235263: Revert TLS 1.3 change that wrapped IOExceptions
    + S8235273: nmethodLocker not needed for COMPILED_METHOD_UNLOAD
      events
    + S8235280: UnProblemList vmTestbase/nsk/jvmti/GetThreadState/
      /thrstat001/TestDescription.java
    + S8235325: build failure on Linux after 8235243
    + S8235337: Shenandoah: Fix evac OOM scoping for concurrent
      class unloading
    + S8235347: [Backout] 8235247: WorkerDataArray leaks C heap
      memory for associated work items

-------------------------------------------------------------------
Tue Mar 17 14:30:39 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+25
  * Fixes:
    + S8026393: jarsigner never shows a warning in badKeyUsage case
    + S8068184: Fix for JDK-8032832 caused a deadlock
    + S8087198: G1 card refinement: batching, sorting
    + S8141637: Parallelize single threaded heap region iteration
      during Pre Evacuate Collection Set
    + S8147017: Platform.isGraal should be removed
    + S8164993: (ch) ReadableByteChannel should note a possible
      IllegalArgumentException
    + S8169467: GetLocalInstance returns JVMTI_ERROR_TYPE_MISMATCH
      (rather than JVMTI_ERROR_INVALID_SLOT) on static method
    + S8175984: ICC_Profile has un-needed, not-empty finalize method
    + S8179320: File.getUsableSpace() returns a negative number on
      very large file system
    + S8190763: Class cast exception on (CompoundEdit)
      UndoableEditEvent.getEdit()
    + S8213119: [macos]
      java/awt/GraphicsDevice/CheckDisplayModes.java fails
    + S8214578: [macos] Problem with backslashes on macOS/JIS
      keyboard: Java ignores system settings
    + S8220376: C2: Int >0 not recognized as !=0 for div by 0 check
    + S8221372: Test vmTestbase/nsk/jvmti/GetThreadState/thrstat001/
      /TestDescription.java times out
    + S8223378: CSS solution for navbar problem with <a> elements
      is not ideal
    + S8223558: Java does not render Myanmar script correctly
    + S8226892: ActionListeners on JRadioButtons don't get notified
      when selection is changed with arrow keys
    + S8226897: Provide object age with JFR OldObjectSample event
    + S8228609: G1 copy cost prediction uses used vs. actual copied
      byte
    + S8228720: Shenandoah: Implementation of concurrent class
      unloading
    + S8229209: [TESTBUG] test for cross-process JFR event streaming
    + S8229935: [TEST_BUG]: bug8132119.java inconsistently
      positions text
    + S8230611: infinite loop in
      LogOutputList::wait_until_no_readers()
    + S8230765: Implement nmethod barrier for x86_32 platforms
    + S8230869: [macos 10.15] The String "X Y Z" was not set to
      application's icon in the taskbar
    + S8231084: Large performance regression in SwingMark TextArea
      in 14-b13
    + S8231336: Corrupted option dialog in JTHarness with JDK14b13
    + S8231507: Update Apache Santuario (XML Signature) to version
      2.1.4
    + S8231516: network QuickAckTest.java failed due to
      "SocketException: maximum number of DatagramSockets reached"
    + S8231826: Implement javac changes for pattern matching for
      instanceof
    + S8231991: Mouse wheel change focus on awt/swing windows
    + S8232097: (sctp) SctpNet.init() results in
      java.lang.UnsatisfiedLinkError
    + S8232101: (sctp) Add minimal sanity tests for SCTP
    + S8232154: Update Mesa 3-D Headers to version 19.2.1
    + S8232170: FSInfo#getJarClassPath throws an exception not
      declared in its throws clause
    + S8232200: [macos 10.15] Windows in fullscreen tests jumps
      around the screen
    + S8232225: Rework the fix for JDK-8071483
    + S8232433: [macos 10.15] java/awt/Window/
      /LocationAtScreenCorner/LocationAtScreenCorner.java may fail
    + S8233018: Add a new test to verify that DatagramSocket is not
      interruptible
    + S8233029: Obsolete flag GCTaskTimeStampEntries
    + S8233097: Fontmetrics for large Fonts has zero width
    + S8233197: Invert JvmtiExport::post_vm_initialized() and
      Jfr:on_vm_start() start-up order for correct option parsing
    + S8233296: MulticastSocket getOption/setOption inverts the
      value of IP_MULTICAST_LOOP
    + S8233301: Implementation of JEP 366: Deprecate the
      ParallelScavenge + SerialOld GC Combination
    + S8233306: Sort members in G1's HeapRegion after removal of
      Space dependency
    + S8233446: Improve error handling when specified dynamic
      archive doesn't exist
    + S8233500: Shenandoah: Shenandoah load barrier should save
      registers before calling keep alive barrier on x86
    + S8233548: Update CUP to v0.11b
    + S8233583: ProblemList javax/swing/JWindow/
      /ShapedAndTranslucentWindows/
      /ShapedTranslucentPerPixelTranslucentGradient.java
      &  ShapedPerPixelTranslucentGradient.java failing
      incosistently in linux-x64
    + S8233597: Clean up code in
      G1Analytics::compute_pause_time_ratio
    + S8233634: [TESTBUG] Swing text test bug4278839.java fails on
      macos
    + S8233649: Update ProblemList.txt to exclude failing headful
      tests on macos
    + S8233657: Intermittent NPE in Component.validate()
    + S8233700: EventStream not closed
    + S8233702: Introduce helper function to clamp value to range
    + S8233707: systemScale.cpp could not compile with VS2019
    + S8233801: GCMEmptyIv.java test fails on Solaris 11.4
    + S8233833: ProblemList
      java/awt/Frame/FrameLocation/FrameLocation.java for linux-x64
    + S8233845: (sctp) Relax assertion in
      sun.nio.ch.sctp.AssociationChange::association
    + S8233847: (sctp) Flx link-local IPv6 scope handling and test
      cleanup
    + S8233870: JFR TestSetEndTime.java times out - onClose() is
      never called
    + S8233910: java/awt/ColorClass/AlphaColorTest.java is failing
      intermittently in nightly lnux-x64 system
    + S8233954: UnsatisfiedLinkError or NoSuchAlgorithmException
      after removing sunec.dll
    + S8233956: MethodHandles.dropArguments javadoc lists
      parameters in wrong order
    + S8233986: ProblemList
      javax/swing/plaf/basic/BasicTextUI/8001470/bug8001470.java for
      windows-x64
    + S8233997: Some members of HeapRegion are not cleared in
      HeapRegion::hr_clear()
    + S8234000: Make HeapRegion::bottom/end/hrm_index const
    + S8234009: ZGC: Move resurrection unblock to before the
      _unload.purge() call
    + S8234010: ZGC: Change ZResurrection to use Atomic::load/store
    + S8234051: doclet crashes if HTML files in module doc-files
      directories
    + S8234058: runtime/CompressedOops/CompressedClassPointers.java
      fails with 'Narrow klass base: 0x0000000000000000' missing
      from stdout/stderr
    + S8234083: DatagramSocket should report SO_BROADCAST as a
      supported option
    + S8234089: (zipfs) Remove classes JarFileSystemProvider and
      JarFileSystem
    + S8234103: DatagramSocketImpl::socket is not needed
    + S8234107: Several AWT modal dialog tests failing on Linux
      after JDK-8231991
    + S8234184: [TESTBUG] java/awt/Mouse/EnterExitEvents/
      /ModalDialogEnterExitEventsTest.java fails in Windows
    + S8234270: [REDO] JDK-8204128 NMT might report incorrect
      numbers for Compiler area
    + S8234290: compiler/c2/Test6857159.java times out and fail to
      clean up files
    + S8234321: Call cache flush after generating trampoline.
    + S8234323: NULL-check return value of SurfaceData_InitOps on
      macosx
    + S8234332: [TESTBUG] java/awt/Focus/DisposedWindow/
      /DisposeDialogNotActivateOwnerTest/
      /DisposeDialogNotActivateOwnerTest.java fails on linux-x64
      nightly
    + S8234335: Remove line break in class declaration in java.base
    + S8234339: replace JLI_StrTok in java_md_solinux.c
    + S8234358: Update ProblemList entry for NashornPopFrameTest
    + S8234359: [JVMCI] invalidate_nmethod_mirror shouldn't use a
      phantom reference
    + S8234387: C2: Better support of operands with multiple match
      rules in AD files
    + S8234394: C2: Dynamic register class support in ADLC
    + S8234401: ConstantCallSite may stuck in non-frozen state
    + S8234403: C2: Enable CallSite.target updates in constructors
    + S8234429: appcds/dynamicArchive tests crashing with Graal
    + S8234432: AOT tests failing with 'used 'epsilon gc' is
      different from current 'g1 gc'' after CMS removal
    + S8234433: TestUnloadEventClassCount fails with
      "assert(SafepointSynchronize::is_at_safepoint()) failed:
      invariant"
    + S8234499: [Graal]
      compiler/compilercontrol/CompilationModeHighOnlyTest.java test
      fails with timeout
    + S8234501: remove obsolete NET_ReadV
    + S8234509: Race in macOS os::processor_id()
    + S8234525: enable link-time section-gc for linux s390x to
      remove unused code
    + S8234531: Remove CMS code from CLDG and safepoint cleanup
    + S8234535: Cross compilation fails due to missing CFLAGS for
      the BUILD_CC
    + S8234539: ArchiveRelocationTest.java failed: Archive mapping
      should always succeed
    + S8234544: ObjectSynchronizer::FastHashCode() cleanups from
      Async Monitor Deflation project
    + S8234562: Move OrderAccess::release_store*/load_acquire to
      Atomic
    + S8234573: ZGC: Enable ZVerifyMarking by default in debug
      builds
    + S8234602: ZGC: Windows compile error in ZHeuristic
    + S8234610: MaxVectorSize set wrongly when UseAVX=3 is
      specified after JDK-8221092
    + S8234613: JavaThread can escape back to Java from an ongoing
      handshake
    + S8234619: ZGC: gc/z/TestSmallHeap.java failure with Out Of
      Memory
    + S8234622: [TESTBUG] ArchivedModuleCompareTest.java fails with
      -vmoptions:-Xlog:cds
    + S8234629: remove unused functions from libnet
    + S8234681: Remove UseJVMCIClassLoader logic from JVMCI code
    + S8234684: JFR crashes when rotating the JFR output during
      assertion failure
    + S8234687: change javap reporting on unknown attributes
    + S8234703: JFR TestOutOfProcessMigration.java should clean up
      files
    + S8234729: Javac should eagerly change code generation for
      method references to avert IllegalAccessError in future.
    + S8234736: Harmonize parameter order in Atomic - store
    + S8234737: Harmonize parameter order in Atomic - add
    + S8234738: Harmonize parameter order in Atomic - sub
    + S8234739: Harmonize parameter order in Atomic - xchg
    + S8234740: Harmonize parameter order in Atomic - cmpxchg
    + S8234748: Clean up atomic and orderAccess includes
    + S8234768: Shenandoah: Streamline enqueueing runtime barriers
    + S8234781: Update description of InvalidClassException to
      include more conditions
    + S8234798: Build failure after atomic changes in JDK-8234563
    + S8234799: javadoc of java.util.Arrays.compare(T[] a, T[] b)
      misses the word "less"
    + S8234809: set relro in linker flags when building with gcc
    + S8234897: 8234748: Clean up atomic and orderAccess includes -
      part 2
    + S8234917: Explicitly discuss java.lang.Enum in Class.isEnum
      spec

-------------------------------------------------------------------
Tue Mar 17 14:21:43 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+24
  * Fixes:
    + S8146298: (dc spec) connect and disconnect methods should
      specify that they may block
    + S8204128: NMT might report incorrect numbers for Compiler area
    + S8214024: Remove the default keytool -keyalg value
    + S8214483: Remove algorithms that use MD5 or DES from security
      requirements
    + S8214904: Test8004741.java failed due to "Too few ThreadDeath
      hits; expected at least 6 but saw only 5"
    + S8215355: Object monitor deadlock with no threads holding the
      monitor (using jemalloc 5.1)
    + S8220074: Clean up GCC 8.3 errors in LittleCMS
    + S8220310: Implementation: NUMA-Aware Memory Allocation for
      G1, Mutator (1/3)
    + S8220311: Implementation: NUMA-Aware Memory Allocation for
      G1, Survivor (2/3)
    + S8220312: Implementation: NUMA-Aware Memory Allocation for
      G1, Logging (3/3)
    + S8225756: [testbug] compiler/loopstripmining/
      /CheckLoopStripMining.java sets too short a
      SafepointTimeoutDelay
    + S8226795: compiler/tiered/Level2RecompilationTest.java fails
      when XX:TieredStopAtLevel=1/2/3 is set
    + S8230873: [AIX] GUI app does not work with UTF-8 locale on
      minimum software requirements
    + S8230876: baseline cleanups from Async Monitor Deflation
      v2.0[789]
    + S8231259: (dc) DatagramChannel::disconnect re-binds socket to
      the wildcard address (macOS)
    + S8231460: Performance issue (CodeHeap) with large free blocks
    + S8231610: Relocate the CDS archive if it cannot be mapped to
      the requested address
    + S8231635: SA Stackwalking code stuck in
      BasicTypeDataBase.findDynamicTypeForAddress()
    + S8231915: two JDI tests interfere with each other
    + S8231954: Test compiler/codegen/TestCharVect2.java only works
      with server VMs
    + S8232019: Add LuxTrust certificate updates to the existing
      root program
    + S8232244: [TESTBUG] Incorrect comment in
      TestClassUnloadEvent.java
    + S8232533: G1 uses only a single thread for pretouching the
      java heap
    + S8232588: G1 concurrent System.gc can return early or late
    + S8233096: Update javax.lang.model for switch expressions
    + S8233113: ARM32: assert on UnsafeJlong mutex rank check
    + S8233141: DatagramSocket.send doesn't specify exception
      thrown when no target address
    + S8233193: Incorrect bailout from possibly_add_compiler_threads
    + S8233219: NMT output on AIX misses some categories
    + S8233272: The Class.forName specification should be updated
      to match the long-standing implementation with respect to
      class linking
    + S8233279: G1: GCLocker GC with +GCLockerInvokesConcurrent
      spins while cycle in progress
    + S8233280: Remove GCLockerInvokesConcurrent
    + S8233404: System property to set the number of PBE iterations
      in JCEKS keystores
    + S8233462: serviceability/tmtools/jstat tests times out with
      -Xcomp
    + S8233497: Optimize default method generation by data
      structure reuse
    + S8233549: Thread interrupted state must only be accessed when
      not in a safepoint-safe state
    + S8233686: XML transformer uses excessive amount of memory
    + S8233712: Limit default tests jobs based on ulimit -u setting
    + S8233787: Break cycle in vm_version* includes
    + S8233841: Update Graal
    + S8233860: AfterClose.java test incorrectly handles
      IP_MULTICAST_IF
    + S8233888: jdk.vm.ci.hotspot.test.VirtualObjectLayoutTest
      .testFormat(): Unexpected error verifying
    + S8233912: aarch64: minor improvements of atomic operations
    + S8233920: MethodHandles::tryFinally generates illegal
      bytecode for long/double return type
    + S8233922: Service binding augments module graph with
      observable incubator modules
    + S8233989: Create an IPv4 version of
      java/net/MulticastSocket/SetLoopbackMode.java
    + S8234003: Improve IndexSet iteration
    + S8234011: (zipfs) Memory leak in
      ZipFileSystem.releaseDeflater()
    + S8234025:
      Elements.getPackageElement(ModuleElement,CharSequence)
      returns null for unnamed package
    + S8234079: ZipFileInputStreamSkipTest.java runs zero test
    + S8234080: jdk/nio/zipfs/CRCWriteTest.java fails
    + S8234127: BasicHashtable does not support small table_size
    + S8234130: Zero VM build broken after JDK-8233913
    + S8234133: VM build broken due to
      memory/archiveUtils.inline.hpp
    + S8234183: [TESTBUG]
      tools/javac/api/TestModuleUnnamedPackage.java fails to compile
    + S8234188: AIX build broken after 8220310
    + S8234196: [TESTBUG] DynamicArchiveRelocationTest.java missing
      "ArchiveRelocationMode == 1 ...."
    + S8234208: Logging reports zero total refined cards under
      "Before GC RS summary"
    + S8234232: [TESTBUG] gc/shenandoah/jvmti/TestHeapDump.java
      fails with -Xcomp
    + S8234245: sun/security/lib/cacerts/VerifyCACerts.java fails
      due to wrong checksum
    + S8234248: More VectorSet cleanups
    + S8234272: ProblemList runtime/NMT/HugeArenaTracking.java
    + S8234274: [BACKOUT] JDK-8204128 NMT might report incorrect
      numbers for Compiler area
    + S8234304: runtime/cds/appcds/javaldr tests should use driver
      mode
    + S8234312: ZGC: Adjust warmup criteria
    + S8234324: ARM32 build broken after 8231610
    + S8234338: ZGC: Improve small heap usage
    + S8234361: ZGC: Move heuristics code in ZWorker to ZHeuristics
    + S8234377: new BitArray(0).toString() throws
      ArrayIndexOutOfBoundsException
    + S8234379: ZGC: Do not resize TALBs unless -XX:ResizeTLAB is
      enabled
    + S8234381: API docs should mention special handling of enums
      in serialization
    + S8234382: Test
      tools/javac/processing/model/testgetallmembers/Main.java using
      too small heap
    + S8234383: Test TestBiasedLockRevocationEvents.java assumes
      -XX:UseBiasedLocking is enabled
    + S8234437: Remove CollectedHeap::safe_object_iterate()
    + S8234438: Remove some CMS leftovers
    + S8234512: Missing pieces from JDK-8224816

-------------------------------------------------------------------
Tue Mar 17 14:15:37 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+23
  * Fixes:
    + S8189737: Make HeapRegion not derive from Space
    + S8209813: [TESTBUG] rewrite JFR shell tests in Java
    + S8214239: Missing x86_64.ad patterns for clearing and setting
      long vector bits
    + S8216472: (se) Stack overflow during selection operation
      leads to crash (win)
    + S8220479: java/nio/channels/Selector/SelectWithConsumer.java
      failed at testTwoChannels()
    + S8223940: Private key not supported by chosen signature
      algorithm
    + S8224817: Implementation of JEP 364: ZGC on macOS
    + S8226297: Dual-pivot quicksort improvements
    + S8229694: JVM crash in SWPointer during C2 OSR compilation
    + S8230364: [JVMCI] a number of JVMCI tests are not jtreg
      enabled
    + S8230459: Test failed to resume JVMCI CompilerThread
    + S8230661: ZGC: Stop reloading oops in load barriers
    + S8230767: FlightRecorderListener returns null recording
    + S8231757: [ppc] Fix VerifyOops. Errors show since 8231058.
    + S8231841: AArch64: debug.cpp help() is missing an AArch64
      line for pns
    + S8231863: Crash if classpath is read from @argument file and
      the main gets option argument
    + S8231922: Could not find field with name revokedClass
    + S8231955: ARM32: Address displacement is 0 for volatile field
      access because of Unsafe field access.
    + S8232178: MacVolumesTest failed after upgrade to MacOS
      Catalina
    + S8232365: Implementation for JEP 363: Remove the Concurrent
      Mark Sweep (CMS) Garbage Collector
    + S8232539: SIGSEGV in C2 Node::unique_ctrl_out
    + S8232684: Make switch expressions final
    + S8232735: Convert PrintJNIResolving to Unified Logging
    + S8232853: AuthenticationFilter.Cache::remove may throw
      ConcurrentModificationException
    + S8232860: Error formatting integer values with
      MessageFormat.format() using HOST provider
    + S8232871: Host Locale Provider on Mac does not return
      translated values of Japanese calendar
    + S8232905: JFR fails with assertion:
      assert(t->unflushed_size() == 0) failed: invariant
    + S8233061: ZGC: Enforce memory ordering in segmented bit maps
    + S8233065: PSParallelCompact::move_and_update is unused and
      should be removed
    + S8233073: Make BitMap accessors more memory ordering friendly
    + S8233086: [TESTBUG] need to test field layout style
      difference between CDS dump time and run time
    + S8233328: fix minimal VM build on Linux s390x
    + S8233337: Shenandoah: Cleanup AArch64
      SBSA::load_reference_barrier_not_null()
    + S8233339: Shenandoah: Centralize load barrier decisions into
      ShenandoahBarrierSet
    + S8233364: Fix undefined behavior in Canonicalizer::do_ShiftOp
    + S8233389: Add PrintIdeal to compiler directives
    + S8233403: Improve verbosity of some httpclient tests
    + S8233416: JFR: assert((((((klass)->trace_id()) & (((1 << 1)
      << 8) | (JfrTraceIdEpoch::in_use_this_epoch_bit()))) != 0)))
      failed: invariant
    + S8233435: (dc) DatagramChannel should allow IPv6 socket join
      IPv4 multicast groups (macOS, win)
    + S8233454: Test fails with assert(!is_init_completed(),
      "should only happen during init") after JDK-8229516
    + S8233491: Crash in AdapterHandlerLibrary::get_adapter with
      CDS due to code cache exhaustion
    + S8233498: Remove dead code.
    + S8233506: ZGC: the load for Reference.get() can be converted
      to a load for strong refs
    + S8233529: loopTransform.cpp:2984: Error: assert(p_f->Opcode()
      == Op_IfFalse) failed
    + S8233579: DateFormatSymbols.getShortMonths() return wrong
      string on es_CL, es_CO locales
    + S8233600: Cross-builds fails after JDK-8233285
    + S8233621: Mismatch in jsse.enableMFLNExtension property name
    + S8233656: assert(d->is_CFG() && n->is_CFG()) failed: must
      have CFG nodes
    + S8233658: Escape + in the expression describing
      Runtime.Version string
    + S8233671: [TESTBUG] runtime/cds/appcds/sharedStrings/
      /FlagCombo.java fails to compile without jfr
    + S8233695: AArch64 build failures after -Wno-extra removal
    + S8233698: GCC 4.8.5 build failure after JDK-8233530
    + S8233708: VectorSet cleanup
    + S8233731: repeated typo "fro" for "for"
    + S8233741: AES Countermode (AES-CTR) optimization using AVX512
      + VAES instructions
    + S8233745: [JVMCI] TranslatedException should serialize
      classloader and module info
    + S8233783: Make 8232896 patch complete
    + S8233784: ProblemList failing JVMTI scenario tests
    + S8233785: Incorrect JDK version is reported in hs_err log
    + S8233788: Remove useless asserts in
      PhaseCFG::insert_anti_dependences
    + S8233790: Forward output from heap dumper to jcmd/jmap
    + S8233792: TestG1ParallelPhases.java fails with phase
      NonYoungFreeCSet not found (2)
    + S8233793: ZGC: Incorrect type used in ZBarrierSetC2
      clone_type()
    + S8233796: Shenandoah is broken after 8233708
    + S8233797: ZGC: Unify naming convention for functions using
      atomics
    + S8233820: Test crashed with assert(phi->operand_count() != 1
      || phi->subst() != phi) failed: missed trivial simplification
    + S8233839: aarch64: missing memory barrier in
      NewObjectArrayStub and NewTypeArrayStub
    + S8233850: Shenandoah: Shenandoah thread count ergonomics
      should be container aware
    + S8233855: [TESTBUG] appcds/FieldLayoutFlags.java failed to
      clean up files after test
    + S8233868: Unproblem list
      sun/tools/jstat/jstatClassloadOutput1.sh
    + S8233880: Support compilers with multi-digit major version
      numbers
    + S8233884: Avoid looking up standard charsets in security
      libraries
    + S8233885: Test fails with assert(comp != __null) failed:
      Ensure we have a compiler
    + S8233886: TEST_BUG jdk/java/net/CookieHandler/B6791927.java
      hit hardcoded expiration date
    + S8233900: [JVMCI] improve help text for EnableJVMCIProduct
      option
    + S8233913: Remove implicit conversion from Method* to
      methodHandle
    + S8233918: 8233498 broke build on SPARC
    + S8233940: Preview API tests for String methods should use
      ${jdk.version} as -source arg
    + S8233941: adlc should not generate
      Pipeline_Use_Cycle_Mask::operator=
    + S8233946: Add @since 13 annotation to
      KerberosPrincipal.KRB_NT_ENTERPRISE field
    + S8233958: Memory retention due to HttpsURLConnection
      finalizer that serves no purpose
    + S8233961: Problem list tools/jlink/JLinkReproducibleTest.java
      for windows-all

-------------------------------------------------------------------
Tue Mar 17 14:07:40 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+22
  * Fixes:
    + S8162520: (fs) FileStore should support file stores with >
      Long.MAX_VALUE capacity
    + S8205132: Degrade Thread.countStackFrames() to throw UOE
    + S8224159: JDWP IPv6 scope support
    + S8227003: Add high-level JIT compilation mode control
      mechanism
    + S8227006: [linux] Runtime.availableProcessors execution time
      increased by factor of 100
    + S8229516: Thread.isInterrupted() always returns false after
      thread termination
    + S8229815: Upgrade Jline to 3.12.1
    + S8230847: Trees.getScope may crash when invoked for statement
      inside switch.
    + S8231026: Miscellaneous changes imported from jsr166 CVS
      2019-11
    + S8231451: ZipFileInputStream::skip handling of negative
      values with STORED entries
    + S8231592: Clarify that ConcurrentHashMap compute methods
      mapping functions execute at most once
    + S8231631: sun/net/ftp/FtpURLConnectionLeak.java fails
      intermittently with NPE
    + S8231632: HttpURLConnection::usingProxy could specify that it
      may lazily evaluate the fact
    + S8231950: keytool -ext camel-case shorthand not working
    + S8232168: Fix non wide char canonicalization on Windows
    + S8232209: Update double-conversion license file to version
      3.1.5
    + S8232367: Update the jdk/java/net/httpclient tests to RS TCK
      1.0.3
    + S8232673: (dc) DatagramChannel socket adaptor issues
    + S8232734: [TESTBUG] avoid using JDK symbols in
      ExtraSymbols.symbols.txt
    + S8232806: Introduce a system property to disable eager lambda
      initialization
    + S8232880: Update test documentation with additional settings
      for client UI tooltip tests
    + S8232896: ZGC: Enable C2 clone intrinsic
    + S8232921: assert(is_object_aligned(result)) failed: address
      not aligned
    + S8232950: SUNPKCS11 Provider incorrectly check key length for
      PSS Signatures.
    + S8232951: TestG1ParallelPhases.java fails with phase
      NonYoungFreeCSet not found
    + S8232973: Potential infinite loop in macOS hotspot agent
    + S8232980: Cleanup initialization of function pointers into
      java.base from classloader.cpp
    + S8232984: Upgrading Joni License version to 2.1.16
    + S8233019: java.lang.Class.isPrimitive() (C1) returns wrong
      result if Klass* is aligned to 32bit
    + S8233078: fix minimal VM build on Linux ppc64(le)
    + S8233081: C1: PatchingStub for field access copies too much
    + S8233091: Backout JDK-8212117: Class.forName loads a class
      but not linked if class is not initialized
    + S8233202: exclude javax/swing/plaf/basic/BasicGraphicsUtils/
      /8132119/bug8132119.java
    + S8233232: AArch64: Shenandoah: jni_fast_GetLongField is broken
    + S8233266: Remove unnecessary fence in restore_unshareable_info
    + S8233273: Update Graal
    + S8233285: Demangling C++ symbols in jhsdb jstack --mixed
    + S8233291: [TESTBUG] tools/jlink/plugins/
      /VendorInfoPluginsTest.java fails with debug or non-server VMs
    + S8233303: Shenandoah: verifier assert erroneously uses
      byte_size_in_exact_unit
    + S8233359: Add global sized operator delete definitions
    + S8233363: Clarify the DumpSharedSpaces condition in
      InstanceKlass::verify_on
    + S8233375: JFR emergency dump does not recover thread state
    + S8233381: Update copyright year in build system files
    + S8233383: Various minor fixes
    + S8233386: Initialize NULL fields for unused decorations
    + S8233387: Shenandoah: passive mode should disable pacing
      ergonomically
    + S8233401: Shenandoah: Refactor/cleanup Shenandoah load
      barrier code
    + S8233422: Extra space in the title of the HTML javadoc page
    + S8233429: Minimal and zero VM build broken after JDK-8227003
    + S8233430: (sc) Socket adaptor restoring of blocking mode can
      override exception if socket closed
    + S8233494: Avoid calling MallocTracker::record_malloc and
      record_free when NMT is off
    + S8233495: Some fieldDescriptor methods can pass existing
      constantPoolHandle
    + S8233496: AOT tests failures with
      'java.lang.RuntimeException: Failed to find
      sun/hotspot/WhiteBox.class'
    + S8233519: Put java/nio/channels/DatagramChannel/Unref.java on
      the problem list
    + S8233520: Shenandoah: do not sleep when thread is attaching
    + S8233530: gcc 5.4 build warning -Wc++14-compat after
      JDK-8233359
    + S8233574: Shenandoah: build is broken without jfr
    + S8233590: Compiler thread creation fails with
      assert(_c2_count > 0 || _c1_count > 0) failed: No compilers?
    + S8233599: ARM32 Build failed due to 8232050 missing an include
    + S8233608: Minimal build broken after JDK-8233494
    + S8233622: (zipfs) open/test/jdk/jdk/nio/zipfs/
      /CopyMoveTests.java has incorrect bug label
    + S8233650: Javadoc for Math.floorMod(int, int) gives wrong
      example
    + S8233659: [TESTBUG] runtime/cds/appcds/
      /CommandLineFlagCombo.java fails when jfr is disabled

-------------------------------------------------------------------
Tue Mar 17 14:02:28 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+21
  * Fixes:
    + S8086003: Test fails on OSX with java.lang.RuntimeException
      'Narrow klass base: 0x0000000000000000, Narrow klass shift: 3'
      missing
    + S8166275: vm/mlvm/meth/stress/compiler/deoptimize keeps
      timeouting
    + S8173975: Lookup::in should not allow target class be
      primitive or array class
    + S8212132: (dc) Remove DatagramChannelImpl finalize method
    + S8222766: Shenandoah: streamline post-LRB CAS barrier (x86)
    + S8225464: Obsolete TraceNMethodInstalls flag
    + S8226511: Implement JFR Event Streaming
    + S8227317: [TESTBUG] jdk docker/TestDockerMemoryMetrics.java
      fails on systems w/o kernel memory accounting
    + S8228969: 2019-09-28 public suffix list update
    + S8230019: [REDO] compiler/types/correctness/* tests fail with
      "assert(recv == __null || recv->is_klass()) failed: wrong
      type"
    + S8230400: Missing constant pool entry for a method in
      stacktrace
    + S8230706: Waiting on completion of strong nmethod processing
      causes long pause times with G1
    + S8231081: TestMetadataRetention fails due to missing symbol id
    + S8231196: DelegationPermission allows to create an instance
      that thows NPE on ::equals call
    + S8231273: Upgrade CLDR to v36
    + S8231365: ServicePermission::equals doesn't comply to the spec
    + S8231552: ZGC: Refine address space reservation
    + S8231565: More node budget asserts in fuzzed tests.
    + S8231570: (dc) Clarify implicit bind behavior of
      DatagramChannel
    + S8231598: keytool does not export sun.security.mscapi
    + S8231602: Deprecate Thread.suspend/resume for removal
    + S8231766: Files.copy and Files.move do not honor requested
      compression method when copying or moving within the same zip
      file
    + S8231949: [PPC64, s390]: Make async profiling more reliable
    + S8231952: ARM32: Wrong assumption in assertion in
      LIRGenerator::atomic_xchg and LIRGenerator::atomic_add
    + S8231953: Wrong assumption in assertion in oop::register_oop
    + S8231968: getCurrentThreadAllocatedBytes default
      implementation s/b getThreadAllocatedBytes
    + S8232005: [s390, PPC64] More exception checks missing in
      interpreter
    + S8232080: jlink plugins for vendor information and run-time
      options
    + S8232083: Minimal VM is broken after JDK-8231586
    + S8232118: Add JVM option to enable JVMCI compilers in product
      mode
    + S8232591: AArch64: Add missing match rules for smaddl, smsubl
      and smnegl
    + S8232601: ZGC: Parameterize the ZGranuleMap table size
    + S8232602: ZGC: Make ZGranuleMap ZAddress agnostic
    + S8232604: ZGC: Make ZVerifyViews mapping and unmapping precise
    + S8232613: Move Object.registerNatives into HotSpot
    + S8232648: ZGC: Move ATTRIBUTE_ALIGNED to the front of
      declarations
    + S8232649: ZGC: Add callbacks to ZMemoryManager
    + S8232650: ZGC: Add initialization hooks for OS specific code
    + S8232651: Add implementation of os::processor_id() for Windows
    + S8232713: Update BCEL version to 6.3.1 in license file
    + S8232724: Remove indirection with calling
      JNU_NewStringPlatform
    + S8232748: Build static versions of certain JDK libraries
    + S8232776: G1 should always take rs_length_diff into account
      when predicting rs_lengths
    + S8232777: Rename G1Policy::_max_rs_length as it is no maximum
    + S8232779: G1 current collection parallel time does not
      include optional evacuation
    + S8232788: Move biased locking initalization
    + S8232864: Classes generated at link time by
      GenerateJLIClassesPlugin are not reproducible
    + S8232879: Writing out data with the Zip File System leads to
      a CRC failure
    + S8232890: Remove bad Code attribute parsing code
    + S8232904: Update JVMCI
    + S8232908: Shenandoah: compact heuristics has incorrect
      trigger "Free is lower than allocated recently"
    + S8232922: Add java/math/BigInteger/largeMemory/
      /SymmetricRangeTests.java to ProblemList-Xcomp
    + S8232992: Shenandoah: Implement self-fixing interpreter LRB
    + S8233000: Mark vmTestbase/vm/mlvm/meth/stress/compiler/
      /deoptimize test as stress test
    + S8233021: Shenandoah: SBSC2::is_shenandoah_lrb_call should
      match all LRB shapes
    + S8233027: OopMapSet::all_do does oms.next() twice during
      iteration
    + S8233035: Update JVMCI
    + S8233075: JFR - nmetods - misspelled in several places
    + S8233137: runtime/ErrorHandling/VeryEarlyAssertTest.java
      fails after 8232080
    + S8233159: Method::result_type should use calculated value in
      constMethod
    + S8233165: Shenandoah:SBSA::gen_load_reference_barrier_stub()
      should use pointer register for address on aarch64

-------------------------------------------------------------------
Tue Mar 17 13:18:53 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+20
  * Fixes:
    + S8134599: TEST_BUG: java/rmi/transport/closeServerSocket/
      /CloseServerSocket.java fails intermittently with Address
      already in use
    + S8209824: Improve the code coverage for ThreadLocal
    + S8211073: Remove -Wno-extra from Hotspot
    + S8213239: Configure cannot handle command overrides with
      arguments
    + S8218628: Add detailed message to NullPointerException
      describing what is null.
    + S8223400: Replace some enums with static const members in
      hotspot/runtime
    + S8223697: jfr tool can't format duration values greater than
      1 minute
    + S8223998: Missing MakeDir in ExecuteWithLog
    + S8225499: InetSocketAddress::toString not friendly to IPv6
      literal addresses
    + S8226585: Improve javac messages for using a preview API
    + S8230407: SocketPermission and FilePermission action list
      allows leading comma
    + S8231324: Shenandoah: avoid duplicated weak root works during
      final traversal
    + S8231412: C2: InitializeNode::detect_init_independence()
      bails out on simple IR shapes
    + S8231587: Memory leak in WorkArounds.serializedForms
    + S8231649: PPC64: Intrinsics for Math.ceil, floor, rint on
      Power
    + S8231719: Correct contradictions in timeout range
      descriptions.
    + S8231844: Enhance type signature characters in
      classfile_constants.h and improve the JVM to use type
      signature characters more consistently
    + S8231859: Extra dash after the exception name in @throws
      clause of javadoc
    + S8231940: ZGC: Print correct low/high capacity
    + S8231943: ZGC: Enable serviceability/dcmd/gc/RunGCTest
    + S8231996: ZGC: Replace ZStatisticsForceTrace with check if
      JFR event is enabled
    + S8231999: Shenandoah: Traversal failed
      compiler/jsr292/CallSiteDepContextTest.java
    + S8232001: ZGC: Ignore metaspace GC threshold until GC is warm
    + S8232008: Shenandoah: C1 load barrier does not match
      interpreter version
    + S8232009: Shenandoah: C2 load barrier does not match
      interpreter version
    + S8232010: Shenandoah: implement self-fixing native barrier
    + S8232030: HelloDynamic.java fails with latest Graal
    + S8232084: HotSpot build failed with GCC 9.2.1
    + S8232112: MDO extra_data_lock leaks during class unloading
    + S8232162: Object reallocation in
      Deoptimization::fetch_unroll_info_helper should not depend on
      EliminateNestedLocks
    + S8232195: Enable BigInteger tests: DivisionOverflow,
      SymmetricRangeTests and StringConstructorOverflow
    + S8232207: Linux os::available_memory re-reads cgroup
      configuration on every invocation
    + S8232211: Remove dead code from os.hpp|cpp
    + S8232230: Suppress warnings on non-serializable non-transient
      instance fields in java.util.concurrent
    + S8232235: ZGC: Move ZValue inline funtions to
      zValue.inline.hpp
    + S8232236: ZGC: Move ZThread inline funtions to
      zThread.inline.hpp
    + S8232237: ZGC: Move ZArray inline funtions to
      zArray.inline.hpp
    + S8232238: ZGC: Move ZList inline funtions to zList.inline.hpp
    + S8232239: ZGC: Inline ZCPU::count() and ZCPU:id()
    + S8232276: Problem list
      serviceability/sa/ClhsdbJstackXcompStress.java
    + S8232357: Compare version info of Santuario to legal notice
    + S8232370: Refactor some com.sun.jdi tests to enable IDE
      integration
    + S8232381: add result NULL-checking to freetypeScaler.c
    + S8232442: Suppress warnings on non-serializable non-transient
      instance fields in java.management.*
    + S8232448: Suppress warnings on non-serializable non-transient
      instance fields in jdk.jdi
    + S8232534: Shenandoah: guard against reentrant
      ShenandoahHeapLock locking
    + S8232569: Use test image from different jib profile for
      testing
    + S8232571: Add missing SIGINFO signal
    + S8232572: Add hooks for custom output dir in Bundles.gmk
    + S8232573: Shenandoah: cleanup and add more logging for
      in-pause phases
    + S8232575: Shenandoah: asynchronous object/region pinning
    + S8232592: <Unknown compiled code> is shown in jstack mixed
      mode
    + S8232593: [TESTBUG] runtime/cds/CheckDefaultArchiveFile.java
      fails when cds is disabled
    + S8232616: JVMCI_lock fails to get initialized when cds is
      disabled
    + S8232617: Update the outdated code comments in
      java.lang.System class
    + S8232624: Java cannot start: NewStringPlatform missing
    + S8232625: HttpClient redirect policy should be more
      conservative
    + S8232639: Change module graph images to use SVG instead of
      PNG format.
    + S8232674: Fix build and rename
      ShenandoahBarrierSet::oop_load_from_native_barrier
    + S8232692: [TESTBUG] compiler/aot/fingerprint/
      /SelfChangedCDS.java fails when cds is disabled
    + S8232702: Shenandoah: gc/shenandoah/TestVerifyJCStress.java
      uses non-existent -XX:+VerifyObjectEquals
    + S8232712: Shenandoah: SIGBUS in load_reference_barrier_native
    + S8232729: Shenandoah: assert ShenandoahHeap::cas_oop
      addresses are aligned
    + S8232730: Shenandoah: Traversal should not CAS the roots
    + S8232747: Shenandoah: Concurrent GC should deactivate SATB
      before processing weak roots
    + S8232757: VM fails to report an error for DumpLoadedClassList
      when cds is disabled
    + S8232768: Configuration with --disable-cds
      --enable-generate-classlist should be reported as an error
    + S8232770: Enable more warnings on solaris studio
    + S8232771: Revert JDK-8230794 because of environment changes
    + S8232778: Shenandoah: SBSA::arraycopy_prologue checks wrong
      register
    + S8232791: Shenandoah: passive mode should disable pacing
    + S8232802: Shenandoah: transition between "cset" and
      "pinned_cset" does not require cancelled gc
    + S8232834: RunTest sometimes fails to produce valid
      exitcode.txt
    + S8232873: Add missing test for 8220416
    + S8232874: Add missing test for 8230062
    + S8232881: Remove unnecessary InstanceKlass::casts
    + S8232882: GCC 4.8.5 build failure after JDK-8211073
    + S8232883: compiler/c2/CmpPNodeSubTest.java fails because test
      class name is wrong
    + S8232887: Remove SystemDictionary::has_checkPackageAccess

-------------------------------------------------------------------
Tue Mar 17 13:10:38 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+19
  * Fixes:
    + S7124404: [macosx] no awt.multiClickInterval desktop property
    + S8065704: Set LC_ALL=C for all relevant commands in the build
      system
    + S8165056: move JIT Compiler related files from runtime/ to
      compiler/ directory
    + S8196969: JTreg Failure: serviceability/sa/ClhsdbJstack.java
      causes NPE
    + S8209901: Canonical file handling
    + S8212749: DecimalFormat.setGroupingSize(int) allows setting
      negative grouping size
    + S8213429: Windows file handling redux
    + S8217997: Better socket support
    + S8218543: ThreadsList handling during error reporting can
      crash
    + S8218877: Help transform transformers
    + S8220186: Improve use of font temporary files
    + S8220302: Better Kerberos ccache handling
    + S8221497: Optional Panes in Swing
    + S8221858: Build Better Processes
    + S8222684: Better support for patterns
    + S8222690: Better Glyph Images
    + S8223158: Docked MacBook cannot start any Java Swing
      applications
    + S8223163: Better pattern recognition
    + S8223326: Regression introduced by CPU sync:
      java.security.AccessControlException: access denied
      ("java.net.NetPermission" "setSocketImpl")
    + S8223505: Better pattern compilation
    + S8223518: Unexpected exception in jjs
    + S8223886: Add in font table referene
    + S8223892: Improved handling of jar files
    + S8224025: Fix for JDK-8220302 is not complete
    + S8224062: Improve String index handling
    + S8224505: TestQuotedLogOutput failure after ProcessBuilder
      changes
    + S8224532: Better Path supports
    + S8224915: Better serial attributes
    + S8225286: Better rendering of native glyphs
    + S8225292: Better Graphics2D drawing
    + S8225298: Improve TLS connection support
    + S8225435: Upgrade IANA Language Subtag Registry to the latest
      for JDK14
    + S8225597: Enhance font glyph mapping
    + S8225654: rework vmTestbase/jit/graph
    + S8226765: Commentary on Javadoc comments
    + S8227231: JDWP help information shows use of obsolete Xdebug
      flag
    + S8227441: Enhance logging when reading the fontconfig info
      file
    + S8227601: Better collection of references
    + S8227662: freetype seeks to index at the end of the font data
    + S8228676: Cleanup the native code related to fonts on Unix
    + S8228825: Enhance ECDSA operations
    + S8229810: [macos] NullPointerException getting bounds of
      GraphicsConfiguration
    + S8229919: Support JNI Critical functions in object pinning
      API on x86_32 platforms
    + S8230865: [TESTBUG] jdk/jfr/event/io/EvilInstrument.java
      fails at-run shell MakeJAR.sh target
    + S8230957: [TESTBUG] containers/docker/TestJcmdWithSideCar.java
      sporadic failures
    + S8231144: Wrap contents of plain HTML files into
      contentContainer
    + S8231213: Migrate SimpleDateFormatConstTest to JDK Repo
    + S8231243: [TESTBUG] CustomFont.java cannot find font file
    + S8231335: [macos] Delete unused and partly implemented
      JOGL/Java2D bridge
    + S8231427: Warning cleanup in tests of java.io.Serializable
    + S8231449: HttpClient's client ssl certificate authentication
      seems to be broken.
    + S8231529: [TESTBUG] runtime/cds/appcds/dynamicArchive/
      /DynamicLotsOfClasses.java shouldn't wrap SkippedException
      into Exception
    + S8231584: Deadlock with ClassLoader.findLibrary and
      System.loadLibrary call
    + S8231586: enlarge encoding space for OopMapValue offsets
    + S8231595: [TEST] develop a test case for SuspendThreadList
      including current thread
    + S8231659: [JVMCI] Could not work PrintAssembly for JVMCI
      installed code
    + S8231717: Improve performance of charset decoding when
      charset is always compactable
    + S8231720: Some perf regressions after 8225653
    + S8231754: [JVMCI] Make r27 unconditionally reserved in JVMCI
    + S8231769: Test tools/javac/tree/MakeTypeTest.java fails with
      -Xcheck:jni
    + S8231947: Shenandoah: cleanup ShenandoahHumongousMoves flag
      treatment
    + S8231956: Remove seq_add_card/reference from PerRegionTable
      class
    + S8231973: Update Graal
    + S8231981: Refactor test definitions to split RT and SVC tests
    + S8231984: Clarify semantics of
      DecimalFormat.getGroupingSize(0)
    + S8231986: [SA] Consolidate parts of the Linux and MacOSX
      versions of ps_core.c
    + S8231988: Unexpected test result caused by C2
      IdealLoopTree::do_remove_empty_loop
    + S8232045: cleanup AIX 5.3 workarounds from libnio/ch/Net.c
    + S8232046: AArch64 build failure after JDK-8225681
    + S8232050: Improve inlining of Klass accessors
    + S8232051: Epsilon should warn about Xms/Xmx/AlwaysPreTouch
      configuration
    + S8232052: use string literal for format string when handling
      PauseAtStartupFile
    + S8232060: add some initializations using sigemptyset in
      os_aix.cpp
    + S8232070: ZGC: Remove unused ZVerifyLoadBarriers
    + S8232071: Avoid shared dictionary lookup when the class name
      is not shared
    + S8232076: Suppress warnings on non-serializable non-transient
      instance fields java.naming
    + S8232078: Suppress warnings on non-serializable non-transient
      instance fields in java.datatransfer
    + S8232102: Shenandoah: print everything in proper units
    + S8232106: [x86] C2: SIGILL due to usage of SSSE3 instructions
      on processors which don't support it
    + S8232107: support ThreadPriorityPolicy flag on AIX
    + S8232116: ZGC: Remove redundant ZLock in ZNMethodTable
    + S8232120: com/sun/jdi/InvokeTest fails with -Xcheck:jni:
      assert(k->is_instance_klass()) failed: cast to InstanceKlass
    + S8232133: Change to GCC 8.3 for building on Linux at Oracle
    + S8232134: Change to Visual Studio 2017 15.9.16 for building
      on Windows at Oracle
    + S8232135: Add diagnostic output to test
      java/util/ProcessBuilder/Basic.java
    + S8232147: Remove notproduct option IgnoreLockingAssertions
    + S8232150: aarch64 build broken after JDK-8232050
    + S8232151: Minimal VM build broken after JDK-8232050
    + S8232165: Reduce allocations in ValueStack copying constructor
    + S8232167: Visual Studio install found through
      --with-tools-dir value is discarded
    + S8232176: Shenandoah: new assert in ShenandoahEvacuationTask
      is too strong
    + S8232182: RedefineNestmateAttr/TestNestmateAttr.java failes
      due to ObjectCollectedException
    + S8232205: Shenandoah: missing "Update References" -> "Update
      Roots" tracing
    + S8232224: [TESTBUG] problemlist JFR TestLargeRootSet.java
    + S8232232: G1RemSetSummary::_rs_threads_vtimes is not
      initialized to zero
    + S8232234: Suppress warnings on non-serializable non-transient
      instance fields in java.rmi
    + S8232260: Remove g1 prefix in
      G1CollectedHeap::g1_hot_card_cache() getter

-------------------------------------------------------------------
Tue Mar 17 09:58:28 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+18
  * Fixes
    + S8043505: G1RemSet::_conc_refine_cards is incremented
      unsynchronized
    + S8170299: Debugger does not stop inside the low memory
      notifications code
    + S8199136: Dead code in src/jdk.jcmd/share/classes/sun/tools/
      /common/ProcessArgumentMatcher.java
    + S8214560: Use {@systemProperty} for definitions of system
      properties (httpserver)
    + S8215521: add microbenchmark to measure
      AccessController.getContext
    + S8216352: SA: ClhsdbLauncher should throw errors on
      Unrecognized commands
    + S8220217: Javadoc missing link to member method
    + S8221092: UseAVX=3 has performance degredation on Skylake
      (X7) processors
    + S8222829: DatagramSocket.setSoTimeout does not specify IAE
      when timeout is negative
    + S8223771: FileSystemProvider.newFileSystem(Path, Map) should
      throw IOException when called with a file that cannot be open
    + S8225681: vmTestbase/nsk/jvmti/RedefineClasses/StressRedefine
      fails due a) MT-unsafe modification of inline cache
    + S8225694: Destination option missing in
      FlightRecorderMXBeanImpl
    + S8229243: SunPKCS11-Solaris provider tests failing on Solaris
      11.4
    + S8229900: RedefineDeleteJmethod.java fails with -Xcheck:jni
    + S8230043: Lazily load libverify
    + S8230140: Remove unused mutex and monitor declarations
    + S8230162: ScopeImpl.remove() has O(N) performance
    + S8230565: ZGC: Redesign C2 load barrier to expand on the
      MachNode level
    + S8230677: Should disable Escape Analysis if JVMTI capability
      can_get_owned_monitor_info was taken
    + S8230946: Clarify security manager behaviour of a connected
      DatagramSocket and DatagramChannel
    + S8231093: Document the ZIP FS properties noCompression and
      releaseVersion
    + S8231153: Improve concurrent refinement statistics
    + S8231161: Wrong return type in code sample in Collector API
      documentation
    + S8231202: Suppress warnings on non-serializable non-transient
      instance fields in serializable classes
    + S8231260: (dc) DatagramChannel::disconnect changes the port
      of the local address to 0 (lnx)
    + S8231262: Suppress warnings on non-serializable instance
      fields in security libs serializable classes
    + S8231288: "jhsdb jmap" test needed to reproduce issues that
      used to be reproduced by JShellHeapDumpTest
    + S8231289: Disentangle JvmtiRawMonitor from ObjectMonitor and
      clean it up
    + S8231355: Remove unused utility methods in libjava
    + S8231368: Suppress warnings on non-serializable non-transient
      instance fields in java.security.jgss
    + S8231489: GC watermark_0_1 failed due to "metaspace.gc.Fault:
      GC has happened too rare"
    + S8231550: C2: ShouldNotReachHere() in
      verify_strip_mined_scheduling
    + S8231563: ZGC: Fails to warn when user sets the max heap size
      to larger than 16TB
    + S8231606: _method_ordering is not set during CDS dynamic dump
      time
    + S8231620: assert(bol->is_Bool()) crash during split if due to
      FastLockNode
    + S8231630: Optimize boot loader with no bootclasspath append
      entry.
    + S8231666: ThreadIdTable::grow() invokes invalid thread
      transition
    + S8231707: Improve Mutex inlining
    + S8231713: x86_32 build failures after JDK-8226721 (Missing
      intrinsics for Math.ceil, floor, rint)
    + S8231737: Cleanup JvmtiRawMonitor code
    + S8231751: on aix handle Power 9 in os::get_summary_cpu_info
    + S8231753: use more Posix functionality in aix
      os::print_os_info
    + S8231768: Remove duplicate if/else in
      vmTestbase/nsk/share/jdi/Binder.java
    + S8231770: Test java/util/zip/FlaterTest.java fails with
      -Xcheck:jni
    + S8231774: ZGC: ZVirtualMemoryManager unmaps incorrect address
    + S8231776: ZGC: Fix incorrect address space description
    + S8231777: Remove extraneous @serial javadoc tag in
      NodeChangeEvent.java
    + S8231825: ZGC: Remove ZMaxHeapSize and ZMaxHeapSizeShift
    + S8231885: Fix/remove malformed assert in os_windows.cpp
    + S8231887: ComodoCA.java fails because certificate was revoked
    + S8231895: Avoid String allocations in JVM_FindLoadedClass
    + S8231902: Build of
      jdk.internal.vm.compiler.management/module-info.java.extra failed
    + S8231903: [Graal] Update com.oracle.mxtool.junit classes
    + S8231921: (se) SelectorImpl.register does not need to set the
      attachment when it is null
    + S8231930: Windows build fails after JDK-8191521
    + S8231931: [TESTBUG] serviceability/sa/TestUniverse.java looks
      for wrong string with Shenandoah
    + S8231932: Shenandoah: conc/par GC threads ergonomics
      overrides user settings
    + S8231946: Remove obsolete and unused
      ShenandoahVerifyObjectEquals flag
    + S8231974: Build fails if no common legal notices are present
    + S8231977: Discuss serializability of collections
    + S8231990: Remove unnecessary else-if branch in Types.union
    + S8231993: Remove redundant pkg_str param from
      is_shared_class_visible_for_classloader
    + S8232003: (fs) Files.write can leak file descriptor in the
      exception case
    + S8232006: Remove dead code from klassVtable
    + S8232056: GetOwnedMonitorInfoWithEATest.java fails with ZGC:
      Heap too small

-------------------------------------------------------------------
Tue Mar 17 09:43:41 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+17
  * Fixes:
    + S8016914: CoreDocumentImpl.setXmlVersion NPE
    + S8184732: Deadlock detection improvements for 'special' locks
    + S8191521: handle long relative path specified in
      -Xbootclasspath/a on windows
    + S8209178: Proxied HttpsURLConnection doesn't send BODY when
      retrying POST request
    + S8219724: ZGC: Make inline cache cleaning more robust
    + S8221623: Add StackWalker micro benchmarks to jdk repo
    + S8223869: Problem list
      java/awt/FontMetrics/MaxAdvanceIsMax.java on more platforms
    + S8226690: SIGSEGV in MetadataOnStackClosure::do_metadata
    + S8226721: Missing intrinsics for Math.ceil, floor, rint
    + S8227384: C2 compilation fails with "graph should be
      schedulable" when running with -XX:-EliminateLocks
    + S8228625: [TESTBUG] sun/tools/jhsdb/JShellHeapDumpTest.java
      fails with RuntimeException 'JShellToolProvider' missing from
      stdout/stderr
    + S8229022: BufferedReader performance can be improved by using
      StringBuilder
    + S8229333: java/io/File/SetLastModified.java timed out
    + S8229338: clean up test/jdk/java/util/RandomAccess/Basic.java
    + S8229499: Node budget assert in fuzzed test.
    + S8229872: (fs) Increase buffer size used with getmntent
    + S8230062: assert(i == p->size()-1) failed: must be last
      element of the pack
    + S8230415: Avoid redundant permission checking in
      FilePermissionCollection and SocketPermissionCollection
    + S8230942: Support compressed cores in SA tests
    + S8231032: ThreadMXBean locking tests fail after JSR 166
      refresh
    + S8231036: vmTestbase monitoring tests fail after JSR 166
      refresh
    + S8231037: java/net/InetAddress/ptr/Lookup.java fails
      intermittently due to reverse lookup failed
    + S8231209: [REDO] ThreadMXBean::getThreadAllocatedBytes() can
      be quicker for self thread
    + S8231223: C2's conditional move optimization fails with
      assert(bol->Opcode() == Op_Bool) failed
    + S8231287: JMap should do a better job of reporting exception
      it catches
    + S8231294: ZGC: vmTestbase/nsk/jvmti/ResourceExhausted/
      /resexhausted002 fails
    + S8231296: ZGC: vmTestbase/nsk/jvmti/Allocate/alloc001/ fails
    + S8231314: java.time serialization warning cleanup
    + S8231321:
      compiler/codecache/stress/UnexpectedDeoptimizationAllTest.java
      failed assertion
    + S8231357: sun/security/pkcs11/Cipher/TestKATForGCM.java fails
      on SLES11 using mozilla-nss-3.14
    + S8231403: [ppc]: Align ReservedCodeCacheSize default value
      with other platforms
    + S8231405: [Shenandoah] guarantee(d != NULL) failed: Null
      dominator info
    + S8231414: Mark various instance fields of javac internal
      types as transient
    + S8231431: JAOTC issues with JAR path containing spaces
    + S8231445: check ZALLOC return values in awt coding
    + S8231448: s390 and ppc - replace JVM type comparisons to
      T_OBJECT and T_ARRAY with call to is_reference_type
    + S8231457: Asserts on AIX because os::elapsed_counter() is not
      monotonic
    + S8231467: Missing make prerequisite declaration corrupts make
      dependency files on Windows
    + S8231471: Obsolete -XX:CompilationPolicyChoice
    + S8231472: Clean up Monitor::_safepoint_check usage to
      Mutex::_safepoint_check
    + S8231499: Shenandoah:
      compiler/arraycopy/TestDefaultMethodArrayCloneDeoptC2 fails
    + S8231503: [TESTBUG] compiler/{jvmci,aot} tests should not run
      with GCs that do not support JVMCI/AOT
    + S8231504: Update networking tests to avoid implicit
      dependency on the system proxies
    + S8231505: Bump required boot jdk version to 13
    + S8231506: Fix some instabilities in a few networking tests
    + S8231545: Suppress warnings on non-serializable instance
      fields in jdk.jshell module
    + S8231546: Suppress warnings on non-serializable instance
      fields in java.prefs module
    + S8231553: Deprecate unused G1RSetScanBlockSize command line
      option
    + S8231557: Suppress warnings on non-serializable instance
      fields in jdk.scripting.nashorn module
    + S8231567: minimal build failed after JDK-8226690
    + S8231583: Shenandoah: Fix register clash in
      SBSA::resolve_forwarding_pointer() borrowing
    + S8231594: Configure fails on some Linux systems
    + S8231600: Avoid GCC 8 strncpy error in jdk.jdwp.agent
    + S8231603: (se) Selector implementations do not need to use
      cancelledKeys
    + S8231616: Simplify compilation policy hierarchy
    + S8231626: DeoptimizeRandom should not be a product flag
    + S8231663: Incorrect GPL header in some RMI/SQL
      package-info.java files
    + S8231665: 8231055 broke escapeAnalysis/TestSelfArrayCopy.java
    + S8231667: Shenandoah: Full GC should take empty regions into
      slices for compaction
    + S8231671: Fix copyright headers in hotspot (missing comma
      after year)

-------------------------------------------------------------------
Tue Mar 17 09:30:11 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+16
  * Fixes:
    + S8146238: [macosx] Java2D Queue Flusher crash on OSX after
      switching between user accounts
    + S8150741: make <module> not equivalent to make
      <module-dependencies> <module>
    + S8159984: Remove call to
      ClassLoaderDataGraph::clear_claimed_marks during the initial
      mark pause
    + S8165828: [TEST_BUG] The reg case:javax/swing/plaf/metal/
      /MetalIcons/MetalHiDPIIconsTest.java failed as No Metal Look
      and Feel
    + S8176837: SunPKCS11 provider needs to check more details on
      PKCS11 Mechanism
    + S8180837: SunPKCS11-NSS tests failing with
      CKR_ATTRIBUTE_READ_ONLY and CKR_MECHANISM_PARAM_INVALID
    + S8185005: Improve performance of
      ThreadMXBean.getThreadInfo(long ids[], int maxDepth)
    + S8194944: Regression automated test 'open/test/jdk/javax/
      /swing/JInternalFrame/8145896/TestJInternalFrameMaximize.java'
      fails
    + S8199424: consider removing ObjectInputStream and
      ObjectOutputStream native methods
    + S8206125: [windows] cannot pass relative path to
      --with-boot-jdk
    + S8210794: Incorrect escaping of  in native test libraries
    + S8213150: Add verification for locking by VMThread
    + S8216565: Specifying the same path creates a new directory in
      JFR.configure
    + S8217825: Verify @AfterTest is used correctly in WebSocket
      tests
    + S8224820: ZGC: Support discontiguous heap reservations
    + S8225101: Crash at sun.awt.X11.XlibWrapper.XkbGetUpdatedMap
      when change keybord map
    + S8225372: accessibility errors in tables in java.desktop files
    + S8225628: Remove unused Thread::muxAcquireW function
    + S8225805: Java Access Bridge does not close the logger
    + S8226705: [REDO] Deoptimize with handshakes
    + S8228580: DnsClient TCP socket timeout
    + S8228659: Record which Java methods are called by native
      codes in JGSS and JAAS
    + S8229201: Update Graal
    + S8229483: Sinking load out of loop may trigger:
      assert(found_sfpt) failed: no node in loop that's not input
      to safepoint
    + S8229515: [macos] access to window property of NSView on
      wrong thread
    + S8229778: TestJstatdDefaults.java failed due to "fatal error:
      LEAF method calling lock?"
    + S8229800: WindowsServerCore 1809 does not provide d2d1.dll
      library required by awt.dll
    + S8229853: Problemlist
      compiler/codecache/jmx/PoolsIndependenceTest.java
    + S8229896: Delete an unused code in the BufferedContext
    + S8230061: # assert(mode == ControlAroundStripMined && use ==
      sfpt) failed: missed a node
    + S8230110: TestLinkageErrorInGenerateOopMap times out
    + S8230395: Code checks for NULL value returned from
      NEW_C_HEAP_ARRAY which can not happen
    + S8230480: check malloc/calloc results in java.desktop
    + S8230505: Replace JVM type comparisons to T_OBJECT and
      T_ARRAY with call to is_reference_type
    + S8230531: API Doc for CharsetEncoder.maxBytesPerChar() should
      be clearer about BOMs
    + S8230648: Replace @exception tag with @throws in java.base
    + S8230728: Thin stroked shapes are not rendered if affine
      transform has flip bit
    + S8230756: ZGC: Remove redundant memset in ZStatValue
    + S8230758: ZGC: Add missing precompiled include and fix friend
      declaration
    + S8230759: ZGC: Fix integer types
    + S8230768: Arrays of SoftReferences in MethodTypeForm should
      not be @Stable
    + S8230782: Robot.createScreenCapture() fails if "awt.robot.gtk"
      is set to false
    + S8230814: Enable SAX ContentHandler to handle XML Declaration
    + S8230857: Avoid reflection in sun.tools.common.ProcessHelper
    + S8231055: C2: arraycopy with same non escaping src and dest
      but different positions causes wrong execution
    + S8231058: VerifyOops crashes with assert(_offset >= 0)
      failed: offset for non comment?
    + S8231083: Clarify SAX documentation
    + S8231097: [TESTBUG] runtime/cds/appcds/DirClasspathTest.java
      can fail with a mapping error
    + S8231098: (tz) Upgrade time-zone data to tzdata2019c
    + S8231113: Remove CollectedHeap::check_oop_location()
    + S8231117: Remove G1EvacuationRootClosures::raw_strong_oops()
    + S8231122: @index tag with newline causes tag search to fail
    + S8231125: Improve testing of parallel loading of shared
      classes by the boot class loader
    + S8231149: (fs) Small verbiage errors in java.nio.file package
      documentation
    + S8231171: remove remaining sun.java.launcher.pid references
    + S8231174: (fs) FileTime should have 100ns resolution (win)
    + S8231186: Replace html tag <code>foo</code> with javadoc tag
      {@code foo} in java.base
    + S8231187: SelectorProvider.inheritedChannel() returns TCP
      socket channel for Unix domain socket
    + S8231189: Rename worker_i parameters to worker_id
    + S8231197: Shenandoah: JVMTI heap walking cleanup crashes with
      NULL forwardee
    + S8231198: Shenandoah: heap walking should visit all roots
      most of the time
    + S8231201: hs_err should print coalesced safepoint operations
      in Events section
    + S8231222: fix pkcs11 P11_DEBUG guarded native traces
    + S8231242: G1CollectedHeap::print_regions_on() does not print
      description for "OA" and "CA" regions
    + S8231244: Shenandoah: all-roots heap walking misses some weak
      roots
    + S8231249: Shenandoah: GC retries are too aggressive for tests
      that expect OOME
    + S8231250: Shenandoah: Traversal GC should keep alive weak
      load from heap
    + S8231251: ZGC: Fix ZHeap includes
    + S8231254: (fs) Add test for macOS Catalina changes to protect
      system software
    + S8231257: Avoid calling FileMapInfo::write_region twice
    + S8231266: ZGC: Minor cleanups in ZCollectedHeap and ZHeap
    + S8231270: ZGC: Remove ZAddressSpace* and ZAddressReserved*
    + S8231275: Remove null check in the beginning of
      SystemDictionary::load_shared_class()
    + S8231278: Rename FileMapHeader::_read_only_tables_start to
      _serialized_data_start
    + S8231293: Shenandoah: Traversal should not revive dead weak
      roots
    + S8231317: jdk/jfr/jcmd/TestJcmdConfigure.java fails with
      "java.lang.RuntimeException: assertTrue: expected true, was
      false"
    + S8231323: ProblemList jdk/jfr/jcmd/TestJcmdConfigure.java
    + S8231334: Suppress warnings on non-serializable instance
      fields in client libs serializable classes
    + S8231351: Add notes for PKCS11 tests in the test doc
    + S8231367: [TESTBUG] ParallelLoadTest.java fails with
      "test.dynamic.dump not supported"
    + S8231375: AArch64 build failure after JDK-8230505
    + S8231376: Unproblem list
      compiler/unsafe/Unsafe{Off,On}HeapBooleanTest.java tests
    + S8231387: java.security.Provider.getService returns random
      result due to race condition with mutating methods in the same class
    + S8231395: Backout JDK-8231249
    + S8231410: Shenandoah: clone barrier should use base pointer
    + S8231413: Several test/hotspot/jtreg/runtime tests updates to
      run with --illegal-access=deny
    + S8231442: Suppress warnings on non-serializable instance
      fields in java.sql.* modules
    + S8231443: Add java.io.Serial to list of platform annotations
      for annotation processing
    + S8231447: Shenandoah: Compilation-time regression after
      JDK-8231086
    + S8231450: Copyright header line omitted from 8231187 changeset

-------------------------------------------------------------------
Tue Mar 17 08:33:30 UTC 2020 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+15
  * Fixes:
    + S8066774: Rename the annotations arrays names in
      ClassFileParser
    + S8145138: CyclicBarrier/Basic.java failed with "3 not equal
      to 4"
    + S8151678: com/sun/jndi/ldap/LdapTimeoutTest.java failed due
      to timeout on DeadServerNoTimeoutTest is incorrect
    + S8186825: some memory leak issues in the
      transport_startTransport
    + S8186988: use log_warning() and log_error() instead of
      tty->print_cr for CDS warning and error messages
    + S8192057: com/sun/jdi/BadHandshakeTest.java fails with
      java.net.ConnectException
    + S8207266: ThreadMXBean::getThreadAllocatedBytes() can be
      quicker for self thread
    + S8216354: Syntax error in toolchain_windows.m4
    + S8220416: Comparison of klass pointers is not optimized any
      more
    + S8221168: java/util/concurrent/CountDownLatch/Basic.java fails
    + S8223490: Optimize search algorithm for determining default
      time zone
    + S8225490: Miscellaneous changes imported from jsr166 CVS
      2019-09
    + S8225797: OldObjectSample event creates unexpected amount of
      checkpoint data
    + S8227235: rare failures in testForkHelpQuiesce tck tests
    + S8228460: bootstrap class path not set in conjunction with
      -source 11
    + S8228482: fix xlc16/xlclang comparison of distinct pointer
      types and string literal conversion warnings
    + S8229202: Docker reporting causes secondary crashes in error
      handling
    + S8229378: jdwp library loader in linker_md.c quietly
      truncates on buffer overflow
    + S8229442: AQS and lock classes refresh
    + S8229701: aarch64: C2 OSR compilation fails with "shouldn't
      process one node several times" in final graph reshaping
    + S8230085: (fs) FileStore::isReadOnly is always true on macOS
      Catalina
    + S8230136:
      DateTimeFormatterBuilder.FractionPrinterParser#parse fails to
      verify minWidth
    + S8230342: LineNumberReader.getLineNumber() returns
      inconsistent results after EOF
    + S8230350: Shenandoah: Assertion failed when GC is cancelled
      by a worker thread
    + S8230423: Move os::sleep to JavaThread::sleep
    + S8230424: Use platform independent code for Thread.interrupt
      support
    + S8230470: Shenandoah doesn't need change from JDK-8212610
      anymore
    + S8230586: Encapsulate fields in filemap.hpp
    + S8230674: Heap dumps should exclude dormant CDS archived
      objects of unloaded classes
    + S8230734: Remove default constructors from java.compiler
    + S8230742: Make AggressiveUnboxing a diagnostic flag
    + S8230762: Change MacroAssembler::debug32/64 to use fatal
      instead of assert
    + S8230796: Remove BarrierSet::oop_equals_operator_allowed()
    + S8230808: Remove Access::equals()
    + S8230829: Matcher matches a surrogate pair that crosses
      border of the region
    + S8230830: No required ResourceMark in src/hotspot/share/
      /prims/jvmtiImpl.cpp:JvmtiSuspendControl::print()
    + S8230841: Remove oopDesc::equals()
    + S8230845: ZGC: Implement ZLock using os::PlatformMutex
    + S8230846: ZGC: Make ZUtils::alloc_aligned() posix-specific
    + S8230850: Test sun/tools/jcmd/TestProcessHelper.java fails
      intermittently
    + S8230854: Cleanup SuppressWarnings in test lib and remove
      noisy traces in StreamPumper
    + S8230856: Java_java_net_NetworkInterface_getByName0 on unix
      misses ReleaseStringUTFChars in early return
    + S8230858: Replace wildcard address with loopback or local
      host in tests - part 23
    + S8230861: missing ReleaseStringUTFChars in
      Java_sun_security_pkcs11_wrapper_PKCS11_connect
    + S8230870: (zipfs) Add a ZIP FS test that is similar to
      test/jdk/java/util/zip/EntryCount64k.java
    + S8230877: Rename THREAD_LOCAL_DECL to THREAD_LOCAL
    + S8230878: ZGC: Use THREAD_LOCAL instead of __thread
    + S8230881: serviceability/sa/TestJmapCore tests fail with
      java.lang.RuntimeException: Could not find dump file
    + S8230882: Use @index in javax.lang.model javadoc
    + S8230888: jfrVirtualMemory.cpp should include globals.hpp
    + S8230900: missing ReleaseStringUTFChars in java.desktop
      native code
    + S8230901: missing ReleaseStringUTFChars in serviceability
      native code
    + S8230910: libsspi_bridge does not build on Windows 32bit
    + S8230937: Update bugid in ProblemList for
      vmTestbase/nsk/jdb/eval/eval001/eval001.java
    + S8230938: Deprecate MonitorBound
    + S8230943: False deadlock detection with
      -XX:+CIPrintCompileQueue after JDK-8163511
    + S8231024: Improve the debug info when the output is truncated
    + S8231025: Incorrect method tag offset for big endian platform
    + S8231027: Correct typos
    + S8231033: Problemlist ReservedStackTest
    + S8231034: ProblemList failing ThreadMXBean tests
    + S8231051: Remove check_obj_alignment() and replace with
      is_object_aligned()
    + S8231085: C2/GC: Better GC-interface for expanding clone
    + S8231086: Shenandoah: Stronger invariant for object-arraycopy
    + S8231087: Shenandoah: Self-fixing load reference barriers for
      C1/C2
    + S8231094: os::sleep in assert message should be changed to
      JavaThread::sleep
    + S8231124: Missing closedir call with JDK-8223490
    + S8231145: [Graal]
      org.graalvm.compiler.debug.test.DebugContextTest fails because
      DebugContextTest.testLogging.input is not available
    + S8231162: JVMTI RawMonitorWait triggers assertion failure:
      Only JavaThreads can be interruptible
    + S8231176: Test
      tools/javac/options/BCPOrSystemNotSpecified.java broken on
      Windows
    + S8231210: [BACKOUT] JDK-8207266
      ThreadMXBean::getThreadAllocatedBytes() can be quicker for
      self thread

-------------------------------------------------------------------
Tue Oct  8 15:35:31 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Do not fail installation when the manpages are not present
  (bsc#1115375)

-------------------------------------------------------------------
Tue Sep 17 10:59:10 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+14
  * Fixes:
    + S8171405: java/net/URLConnection/ResendPostBody.java failed
      with "Error while cleaning up threads after test"
    + S8177068: incomplete classpath causes NPE in Flow
    + S8177389: Hyphen "-" should be removed in URL class
      documentation
    + S8187898: PrintStream should override
      FilterOutputStream#write(byte[]) with a method that has no
      throws clause
    + S8207800: always_do_update_barrier is unused
    + S8212117: Class.forName may return a reference to a loaded
      but not linked Class
    + S8221361: Eliminate two-phase initialization for PtrQueueSet
      classes
    + S8224599: Remove globals_ext.hpp
    + S8224815: Remove non-GC uses of
      CollectedHeap::is_in_reserved()
    + S8225653: Provide more information when hitting SIGILL from
      HaltNode
    + S8225761: Update --release 13 symbol information after JDK 13
      GA
    + S8226953: AOT: assert(oopDesc::is_oop(obj)) failed: not an oop
    + S8227168: Cleanup usage of NEW_C_HEAP_ARRAY
    + S8227563: jvmti/scenarios/contention/TC05/tc05t001 fails due
      to "ERROR: tc05t001.cpp, 278: (waitedThreadCpuTime -
      waitThreadCpuTime) < (EXPECTED_ACCURACY * 1000000)"
    + S8228758: assert(_no_handle_mark_nesting == 0) failed:
      allocating handle inside NoHandleMark
    + S8228854: Default ErrorListener reports warnings and errors
      to the console
    + S8228967: Trust/Key store and SSL context utilities for tests
    + S8229189: Improve JFR leak profiler tracing to deal with
      discontiguous heaps
    + S8229280: Test failures on several linux hosts after
      JDK-8181493
    + S8229496: SIGFPE (division by zero) in C2 OSR compiled method
    + S8229785: MethodType::fromMethodDescriptorString should
      require security permission if loader is null
    + S8229831: Upgrade Character.isUnicodeIdentifierStart/Part()
      methods to the latest standard
    + S8229960: Remove sun.nio.cs.map system property
    + S8230129: Add jtreg "serviceability/sa/ClhsdbInspect.java" to
      graal problem list.
    + S8230132: java/net/NetworkInterface/
      /NetworkInterfaceRetrievalTests.java to skip Teredo Tunneling
      Pseudo-Interface
    + S8230284: Accounting currency format support does not cope
      with explicit number system
    + S8230303: JDB hangs when running monitor command
    + S8230363: C2: Let ConnectionGraph::not_global_escape(Node* n)
      return false if n is not in the CG
    + S8230398: Remove NULL checks before FREE_C_HEAP_ARRAY
    + S8230404: Refactor logged card refinement support in
      G1DirtyCardQueueSet
    + S8230422: Convert uninterruptible os::sleep calls to
      os::naked_short_sleep
    + S8230435: Replace wildcard address with loopback or local
      host in tests - part 22
    + S8230454: [Graal] Add "com/sun/crypto/provider/KeyFactory/
      /TestProviderLeak.java" to Graal problem list.
    + S8230466: check malloc/calloc results in jdk.hotspot.agent
    + S8230516: invalid html in jdwp-protocol.html
    + S8230526: jdk.internal.net.http.PlainProxyConnection is never
      reused by HttpClient
    + S8230561: Remove logTag_ext.hpp
    + S8230562: Remove g1HeapSizingPolicy_ext.cpp
    + S8230563: Remove arguments_ext.cpp
    + S8230564: Remove os_ext.hpp
    + S8230566: ZGC: Don't substitute klass pointer during array
      clearing
    + S8230624: [TESTBUG] Problemlist JFR
      compiler/TestCodeSweeper.java
    + S8230626: Make UnknownFooException strings more informative
    + S8230632: [TESTBUG] appcds/NonExistClasspath.java and
      ClassPathAttr.java failed when running in
      hotspot_appcds_dynamic test group
    + S8230642: 8224815 broke Shenandoah build
    + S8230646: Epsilon does not extend TLABs to max size
    + S8230662: Remove dead code from MethodTypeForm
    + S8230666: Exclude serviceability/sa/TestInstanceKlassSize.java
      on linuxppc64 and linuxppc64le
    + S8230669: [s390] C1: assert(is_bound() || is_unused())
      failed: Label was never bound to a location, but it was used
      as a jmp target
    + S8230671: x86_32 build failures after JDK-8229496
    + S8230680: latest Graal unittests depend on jdk.internal.module
    + S8230681: Add @since tag to java.io.Serial
    + S8230694: http.keepAlive system property is
      inconsistently/incorrectly documented
    + S8230708: Hotspot fails to build on linux-sparc with gcc-9
    + S8230709: Array index out of bounds in ES6 mode
    + S8230711: ConnectionGraph::unique_java_object(Node* N) return
      NULL if n is not in the CG
    + S8230715: Baseline compare build on Windows fails
      intermittently in file type for jvm.pdb
    + S8230723: Remove default constructors from java.lang and
      java.io
    + S8230730: UseCompressedOops test crash with assertion failure
    + S8230766: Changed message in IllegalMonitorStateException
    + S8230769: BufImg_SetupICM add ReleasePrimitiveArrayCritical
      call in early return
    + S8230781: Add JTREG_FAILURE_HANDLER_TIMEOUT to control
      timeout handler timeout
    + S8230794: Improve assert to get more information about the
      JDK-8227695 failure
    + S8230813: Add JDK-8010500 to compiler/loopopts/superword/
      /TestFuzzPreLoop.java bug list

-------------------------------------------------------------------
Fri Sep  6 15:05:22 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+13
  * Fixes:
    + S6313903: Thread.sleep(3) might wake up immediately on windows
    + S8182119: jdk.hotspot.agent's
      META-INF/services/com.sun.jdi.connect.Connector no longer
      needed
    + S8193596: java/net/DatagramPacket/ReuseBuf.java failed due to
      timeout
    + S8209802: Garbage collectors should register JFR types
      themselves to avoid build errors.
    + S8216977: ShowHiddenFrames use in
      java_lang_StackTraceElement::fill_in appears broken
    + S8221312: test/jdk/sanity/client/SwingSet/src/
      /ColorChooserDemoTest.java failed
    + S8222108: Reduce minRefreshTime for updating remote printer
      list on Windows
    + S8223714: HTTPSetAuthenticatorTest could be made more
      resilient
    + S8224214: [AIX] Remove support for legacy xlc compiler
    + S8225505: ctrl-F1 does not show the tooltip of a menu item
      (JMenuItems)
    + S8226221: Update PKCS11 tests to use NSS 3.46 libs
    + S8226513: JEditorPane is shown with incorrect size
    + S8227224: GenCollectedHeap: add subspace transitions for
      young gen for gc+heap=info log lines
    + S8227236: assert(singleton != __null && singleton !=
      declared_interface) failed
    + S8227411: TestTimeMultiple.java failed "assert(!lease())
      failed: invariant"
    + S8228554: Accessibility errors in jdwp-protocol.html
    + S8228711: Path rendered incorrectly when it goes outside the
      clipping region
    + S8228960: [TESTBUG] containers/docker/
      /TestJcmdWithSideCar.java: jcmd reports main class as Unknown
    + S8229182: runtime/containers/docker/TestMemoryAwareness.java
      test fails on SLES12
    + S8229210: [TESTBUG] Move gc stress tests from JFR directory
      tree to gc/stress
    + S8229235: com.sun.net.httpserver.HttpExchange should
      implement AutoCloseable
    + S8229284: jdk/internal/platform/cgroup/TestCgroupMetrics.java
      fails for - memory:getMemoryUsage
    + S8229422: Taskqueue: Outdated selection of weak memory model
      platforms
    + S8229437: assert(is_aligned(ref, HeapWordSize)) failed:
      invariant
    + S8229450: C2 compilation fails with assert(found_sfpt) failed
    + S8229797: [JVMCI] Clean up no longer used
      JVMCI::dependencies_invalid value
    + S8229997: Apply java.io.Serial annotations in java.base
    + S8229999: Apply java.io.Serial annotations to security types
      in java.base
    + S8230004: jdk/internal/jimage/JImageOpenTest.java runs no test
    + S8230037: Confused MetaData dumped by PrintOptoAssembly
    + S8230074: Improve specification for {Math,
      StrictMath}.negateExact
    + S8230105: -XDfind=diamond crashes
    + S8230109: G1DirtyCardQueueSet should use card counts rather
      than buffer counts
    + S8230115: Problemlist JFR TestNetworkUtilization test
    + S8230159: Add test to verify that
      com.sun.net.httpserver.BasicAuthenticator constructors throw
      expected exceptions
    + S8230203: Replace markWord enums with typed constants
    + S8230228: [TESTBUG] Several runtime/ErrorHandling tests may
      fail on some platforms
    + S8230238: Add another regression test for JDK-8134739
    + S8230302: GenerateJLIClassesPlugin can generate invalid
      DirectMethodHandle methods
    + S8230307: ZGC: Make zGlobals and zArguments OS agnostic
    + S8230310: SocksSocketImpl should handle the
      IllegalArgumentException thrown by ProxySelector.select usage
    + S8230327: Make G1DirtyCardQueueSet free-id init unconditional
    + S8230332: G1DirtyCardQueueSet _notify_when_complete is always
      true
    + S8230337: Clarify intention of Elements.{getPackageOf,
      getModuleOf}
    + S8230338: Accurate error message about bad Unicode block name
    + S8230372: Remove G1GCPhaseTimes::MergeLBProcessedBuffers
    + S8230373: Use java.io.Serial in generated exception types
    + S8230376: [TESTBUG] runtime/StackTrace/HiddenFrameTest.java
      fails with release VM
    + S8230388: Problemlist additional compiler/rtm tests
    + S8230390: Problemlist SA tests with AOT
    + S8230401: ClassLoaderData::_keep_alive is read with wrong
      type in c2i entry barrier
    + S8230425: Shenandoah forces +UseNUMAInterleaving even after
      explicitly disabled
    + S8230428: Cleanup dead CastIP node code in formssel.cpp
    + S8230431: Move G1 trace code from gcTrace* to G1 directory
    + S8230434: [C1, C2] Release barrier for volatile field stores
      in constructors implemented inconsistently
    + S8230483: Shenandoah: consistently disable concurrent roots
      for Traversal mode
    + S8230485: add handling of aix tar in configure

-------------------------------------------------------------------
Mon Sep  2 11:30:33 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+12
  * Fixes:
    + S8078219: Verify lack of @test tag in files in java/net test
      directory
    + S8177648: getResponseCode() throws IllegalArgumentException
      caused by protocol error while following redirect
    + S8189633: Missing -Xcheck:jni checking for DeleteWeakGlobalRef
    + S8199849: Add support for UTF-8 encoded credentials in HTTP
      Basic Authentication
    + S8207814: (proxy) upgrade the proxy class generator
    + S8215166: Remove unused G1PretouchAuxiliaryMemory option
    + S8219708: Stop flushing OSR nmethods earlier in the sweeper
    + S8222363: Update ServerSocket.isBound spec to reflect
      implementation after close
    + S8224624: Inefficiencies in CodeStrings::add_comment cause
      timeouts
    + S8224878: Use JVMFlag parameters instead of name strings
    + S8225436: Stapled OCSPResponses should be added to
      PKIXRevocationChecker irrespective of revocationEnabled flag
    + S8226779: [TESTBUG] Test JFR API from Java agent
    + S8226831: Use Objects.equals() when appropriate
    + S8227021: VM fails if any sun.boot.library.path paths are
      longer than JVM_MAXPATHLEN
    + S8227053: ServiceThread cleanup of OopStorage is missing some
    + S8227054: ServiceThread needs to know about all OopStorage
      objects
    + S8227226: ZGC: Segmented array clearing
    + S8227370: Remove SharedPathsMiscInfo
    + S8228507: Archive FDBigInteger
    + S8228839: Non-CFG nodes have control edges to calls, instead
      of the call's control projection
    + S8229127: Make some methods in the allocation path non-virtual
    + S8229278: Improve hs_err location printing to assume less
      about GC internals
    + S8229337: java.lang.Math class doc should be adjusted
      regarding -Exact methods
    + S8229388: ErrorHandler and ContentHandler contain
      ambiguous/unfinished specification
    + S8229451: ZGC: Make some roots invisible to the heap iterator
    + S8229485: Add decrementExact(), incrementExact(), and
      negateExact() to java.lang.StrictMath
    + S8229706: java/net/MulticastSocket/NoLoopbackPackets.java
      fails on some AIX machines
    + S8229836: Remove include of globals.hpp from allocation.hpp
    + S8229844: Remove attempt_rebias parameter from
      revoke_and_rebias()
    + S8229848: [Graal] missing Graal intrinsics for Electronic
      Code Book (ECB) encryption
    + S8229887: (zipfs) zip file corruption when replacing an
      existing STORED entry
    + S8229912: [TESTBUG] java/net/Socks/SocksIPv6Test fails
      without IPv6
    + S8229925: [s390, PPC64] Exception check missing in interpreter
    + S8229957: Harden pid verification in attach mechanism
    + S8229967: Enable thread local handshakes on zero
    + S8229970: ZGC: C2: fixup_uses_in_catch may fail when
      expanding many uses
    + S8229998: Build failure after JDK-8227054
    + S8230000: some httpclients testng tests run zero test
    + S8230002: javax/xml/jaxp/unittest/transform/
      /SecureProcessingTest.java runs zero test
    + S8230003: Make Monitor inherit from Mutex
    + S8230010: Remove jdk8037819/BasicTest1.java
    + S8230011: Consolidate duplicated classpath parsing code in
      classLoader.cpp
    + S8230020: [BACKOUT] compiler/types/correctness/* tests fail
      with "assert(recv == __null || recv->is_klass()) failed: wrong
      type"
    + S8230024: Shenandoah: remove unnecessary
      ShenandoahTimingConverter
    + S8230046: Build failure after JDK-8230003
    + S8230058: Replace exception from
      sun.rmi.runtime.Log#getSource() with StackWalker
    + S8230079: Update test document by changing "TIMEOUT" to
      "TIMEOUT_FACTOR"
    + S8230090: ZGC: Introduce ZSyscall
    + S8230091: Add verification of clean_catch_blocks
    + S8230092: ZGC: Consolidate ZBackingFile, ZBackingPath and
      ZPhysicalMemoryBacking on Linux
    + S8230094: CCE in createXMLEventWriter(Result) over an
      arbitrary XMLStreamWriter
    + S8230096: ZGC: Remove unused ZObjectAllocator::_nworkers
    + S8230104: JNU_IsInstanceOfByName needs const parameter
    + S8230116: Test workaround to Klass::_class_loader_data
      sometimes NULL problem
    + S8230118: 32-bit build failures after JDK-8227054
    + S8230126: delay_to_keep_mmu can delay shutdown
    + S8230168: Use ClasspathStream for
      FileMapInfo::create_path_array
    + S8230184: rename, whitespace, indent and comments changes in
      preparation for lock free Monitor lists
    + S8230192: Rename G1RedirtyCardsBufferList to G1BufferNodeList
    + S8230214: AArch64 build failures after JDK-8229836 (Remove
      include of globals.hpp from allocation.hpp)
    + S8230215: MacOS debug build is broken after JDK-8230003
    + S8230220: java/net/HttpURLConnection/
      /HttpURLProxySelectionTest.java fails intermittently
    + S8230294: runtime/cds/appcds/ClassPathAttr.java failed with
      jar operation failed
    + S8230317: serviceability/sa/ClhsdbPrintStatics.java fails
      after 8230184
- Upgrade to upstream tag jdk-14+11
  * Fixes:
    + S8139820: URLClassPath.FileLoader constructor redundantly
      checks protocol
    + S8152467: remove uses of anachronistic array declarations for
      method return type
    + S8191169: java/net/Authenticator/B4769350.java failed
      intermittently
    + S8193325: StackFrameInfo::getByteCodeIndex returns wrong
      value if bci > 32767
    + S8202385: Annotation to mark serial-related fields and methods
    + S8211360: Change #if DEF to #if defined(DEF)
    + S8220700: jlink generated launcher script needs quoting to
      avoid parameter expansion
    + S8221307: String.substring() OOB exception on start index
      reports improper information
    + S8224659: Parallel GC: Use WorkGang (1: PCRefProcTask)
    + S8224660: Parallel GC: Use WorkGang (2: MarksFromRootsTask)
    + S8224661: Parallel GC: Use WorkGang (3:
      UpdateDensePrefixAndCompactionTask)
    + S8224662: Parallel GC: Use WorkGang (4:
      SharedRestorePreservedMarksTaskExecutor)
    + S8224663: Parallel GC: Use WorkGang (5: ScavengeRootsTask)
    + S8224664: Parallel GC: Use WorkGang (6: PSRefProcTaskProxy)
    + S8224665: Parallel GC: Use WorkGang (7: remove task manager)
    + S8224666: Parallel GC: Use WorkGang (8: obsolete and remove
      flags)
    + S8224974: Implement JEP 352
    + S8224997: ChaCha20-Poly1305 TLS cipher suite decryption
      throws ShortBufferException
    + S8225425: java.lang.UnsatisfiedLinkError: net.dll: Can't find
      dependent libraries
    + S8225625: AES Electronic Codebook (ECB) encryption and
      decryption optimization using AVX512 + VAES instructions
    + S8225788: Dead code in thread and safepoint
    + S8226204: SA: Refactoring for option processing in SALauncher
    + S8226645: [TESTBUG] some AppCDS tests rely on illegal
      reflective access
    + S8226848: jline/terminal/impl files missing classpath
      exception clause in license header
    + S8227086: Use AS_NO_KEEPALIVE loads in HeapDumper
    + S8227442: Make young_index_in_cset zero-based
    + S8228547: accessibility errors in jvmti.html
    + S8228757: Fail fast if the handshake type is unknown
    + S8228858: Reimplement JVM_RawMonitors to use PlatformMutex
    + S8228888: C2 compilation fails with assert "m has strange
      control"
    + S8229044: G1RedirtyCardsQueueSet should be local to a
      collection
    + S8229118: [TESTBUG] serviceability/sa/ClhsdbFindPC fails on
      AArch64
    + S8229158: make UseSwitchProfiling non-experimental or false
      by-default
    + S8229254: solaris_x64 build fails after JDK-8191278
    + S8229258: Rework markOop and markOopDesc into a simpler mark
      word value carrier
    + S8229345: Memory leak due to vtable stubs not being shared on
      SPARC
    + S8229352: Use of an uninitialized register in 32-bit ARM
      template interpreter
    + S8229420: [Redo] jstat reports incorrect values for OU for
      CMS GC
    + S8229421: The logic of java/net/ipv6tests/TcpTest.java is
      flawed
    + S8229481: sun/net/www/protocol/https/ChunkedOutputStream.java
      failed with a SSLException
    + S8229486: Replace wildcard address with loopback or local
      host in tests - part 21
    + S8229699: [Graal] jck tests fail on windows with AOTed Graal
    + S8229767: Typo in java.security: Sasl.createClient and
      Sasl.createServer
    + S8229773: Resolve permissions for code source URLs lazily
    + S8229775: Incorrect warning when jar was signed with
      -sectionsonly
    + S8229808: javaVFrame::print_lock_info_on fails to disable
      extra printing
    + S8229835: Shenandoah should recommend -Xlog:safepoint+stats
    + S8229838: Rename markOop files to markWord
    + S8229839: Break circular dependency between oop.inline.hpp
      and markWord.inline.hpp
    + S8229854: Move runtime/ErrorHandling/
      /TestHeapDumpOnOutOfMemoryErrorInMetaspace.java out of
      tier1_runtime
    + S8229865: Use explicit #include debug.hpp for STATIC_ASSERT
      in gc/shenandoah/shenandoahUtils.cpp
    + S8229899: Make java.io.File.isInvalid() less racy
    + S8229916: Delete redundant test
      java/net/Socket/reset/Test.java
    + S8229921: Shenandoah: Make Traversal mode non-experimental
    + S8229930: internal_name() in annotations.hpp returns
      "{constant pool}"
    + S8229977: Shenandoah: save/restore FPU state aroud LRB
      runtime call
- Upgrade to upstream tag jdk-14+10
  * Fixes:
    + S5103339: Strengthen NoSafepointVerifier
    + S8184432: Remove references to jdbc@sun.com from
      javax.sql.rowset.spi.SyncProvider
    + S8185898: setRequestProperty(key, null) results in HTTP
      header without colon in request
    + S8209005: Lookup.unreflectSpecial fails for default methods
      when Lookup.findSpecial works
    + S8209078: Unable to call default method from interface in
      another module from named module
    + S8211990: DateTimeException thrown when calculating duration
      between certain dates
    + S8215181: Accounting currency format support
    + S8217606: LdapContext#reconnect always opens a new connection
    + S8219082: jdk/jfr/event/runtime/TestShutdownEvent.java failed
      in validateStackTrace()
    + S8224957: C2 compilation fails with assert: Bad graph
      detected in build_loop_late
    + S8225430: Replace wildcard address with loopback or local
      host in tests - part 14
    + S8225670: compiler/types/correctness/* tests fail with
      "assert(recv == __null || recv->is_klass()) failed: wrong
      type"
    + S8226228: Make Threads_lock an always safepoint checked lock.
    + S8226374: Restrict TLS signature schemes and named groups
    + S8226530: ZipFile reads wrong entry size from ZIP64 entries
    + S8227439: Turn off AOT by default
    + S8227642: [TESTBUG] Make docker tests podman compatible
    + S8227645: Some tests in serviceability/sa run with fixed -Xmx
      values and risk running out of memory
    + S8227697: Improve text in Taglet API spec for expected
      results with standard doclet
    + S8227922: DocTreeScanner does not dive into
      AttributeTree.getValue() and LiteralTree.getBody()
    + S8228359: [TESTBUG]
      jdk.jfr.e.g.c.TestGCHeapConfigurationEventWith32BitOops.java
      does not expect MinHeapSize to be aligned to HeapAlignment
    + S8228369: Shenandoah: Refactor LRB C1 stubs
    + S8228434: jdk/net/Sockets/Test.java fails after JDK-8227642
    + S8228502: javac crashed on a broken classfile with
      ConstantValue attribute on a field of type Object
    + S8228508: [TESTBUG] java/net/httpclient/SmokeTest.java fails
      on Windows7
    + S8228613: java.security.Provider#getServices order is no
      longer deterministic
    + S8228647: Broken enum produce inconvenient errors and AST
    + S8228772: C2 compilation fails due to unschedulable graph if
      DominatorSearchLimit is reached
    + S8228778: JDK 13 L10n resource files update - msgdrop 20
    + S8228835: Memory leak in PKCS11 provider when using AES GCM
    + S8228857: Refactor PlatformMonitor into PlatformMutex and
      PlatformMonitor
    + S8228970: AssertionError in
      ResponseSubscribers$HttpResponseInputStream
    + S8228971: Locale API doc has redundant hyphens for some
      parameters
    + S8229027: Improve how JNIHandleBlock::oops_do distinguishes
      oops from non-oops
    + S8229036: Remove the testing against NSK_TRUE from tests
    + S8229169: False failure of GenericTaskQueue::pop_local on
      architectures with weak memory model
    + S8229180: Remove EA from JDK 13 version string
    + S8229212: clear up CHECK_OWNER confusion in objectMonitor.cpp
    + S8229214: Don't use GCM with PKCS5Padding in
      test/micro/org/openjdk/bench/javax/crypto/
    + S8229219: C2 compilation fails with assert: Bad graph
      detected in build_loop_late
    + S8229236: CriticalJNINatives: dll handling should be done in
      native thread state
    + S8229267: [TESTBUG] Remove unnecessary @modules dependencies
      in CDS tests
    + S8229283: StringLatin1 should consistently use
      CharacterDataLatin1.instance when applicable
    + S8229348: java/net/DatagramSocket/
      /UnreferencedDatagramSockets.java fails intermittently
    + S8229350: Shenandoah does not need barriers before CreateEx
    + S8229386: Typo "lables" in doc comment
    + S8229406: ZGC: Fix incorrect statistics
    + S8229407: Avoid ConcurrentHashMap resizes during bootstrap
    + S8229416: Shenandoah: Demote or remove
      ShenandoahOptimize*Final optimizations
    + S8229419: Shenandoah: Cleanup LRB strength selector code
    + S8229447: Problem list
      compiler/unsafe/UnsafeGetConstantField.java on Sparc until
      JDK-8229446 is fixed
    + S8229470: Shenandoah: Fix C1 getAndSetObject() failure
    + S8229474: Shenandoah: Cleanup CM::update_roots()
    + S8229707: [TESTBUG] Some Shenandoah tests assume Server VM by
      default
    + S8229709: x86_32 build and test failures after JDK-8228369
      (Shenandoah: Refactor LRB C1 stubs)
- Upgrade to upstream tag jdk-14+9
  * Fixes:
    + S6394013: C2: Remove VerifyOpto
    + S8058539: Platform specific source files may not end up in
      src.zip
    + S8158880: test/java/time/tck/java/time/format/
      /TCKDateTimeFormatterBuilder.java fail with zh_CN locale
    + S8210755: Define standard names for EC curves and TLS
      signature schemes
    + S8213031: (zipfs) Add support for POSIX file permissions
    + S8217676: Upgrade libpng to 1.6.37
    + S8225776: Optimize branch frequency of G1's write
      post-barrier in C2
    + S8226899: Problemlist compiler/rtm tests
    + S8226964: [Yaru] GTK L&F: There is no difference between menu
      selected and de-selected
    + S8227225: ParallelGC: add subspace transitions for young gen
      for gc+heap=info log lines
    + S8227605: Kitchensink fails "assert((((klass)->trace_id() &
      (JfrTraceIdEpoch::leakp_in_use_this_epoch_bit())) != 0))
      failed: invariant"
    + S8227919: 8213232 causes crashes on solaris sparc64
    + S8228352: CANON_EQ breaks when pattern contains supplementary
      codepoint
    + S8228393: Add an indicator for external links in javadoc
    + S8228469: (tz) Upgrade time-zone data to tzdata2019b
    + S8228503: Rename "rs_lengths" to "rs_length" in ergo code
    + S8228585: jdk/internal/platform/cgroup/TestCgroupMetrics.java
      - NumberFormatException because of large long values (memory
      limit_in_bytes)
    + S8228601: AArch64: Fix interpreter code at JVMCI
      deoptimization entry
    + S8228649: [PPC64] SA reads wrong slots from interpreter frames
    + S8228650: runtime/SharedArchiveFile/
      /CheckDefaultArchiveFile.java test fails on AIX
    + S8228657: ZGC: ZObjectAllocator::used() should take undone
      allocations into account
    + S8228658: test GetTotalSafepointTime.java fails on fast Linux
      machines with Total safepoint time 0 ms
    + S8228687: [TESTBUG] exclude Container tests from hotspot_misc
      group
    + S8228710: Disable AggressiveUnboxing until JDK-8224957 is
      fixed
    + S8228749: Deprecate product flag -XX:CompactFields
    + S8228753: Deprecate -XX:FieldsAllocationStyle product option
    + S8228764: New library dependencies due to JDK-8222720
    + S8228834: Regression caused by JDK-8214542 not installing
      complete checkpoint data to candidates
    + S8228902: add os::dll_load to the unified logging os category
    + S8228998: Remove the testing against NSK_FALSE from tests
    + S8228999: ProblemList vmTestbase/nsk/jvmti/GetThreadState/
      /thrstat001/TestDescription.java
    + S8229000: Fix lock and reenable assert in
      Monitor::check_safepoint_state
    + S8229002: Shenandoah: Missing node types in
      ShenandoahLoadReferenceBarrier::needs_barrier_impl()
    + S8229016: C2 scalarization crashes with assert(node->Opcode()
      == Op_CastP2X) failed: ConvP2XNode required
    + S8229017: ZGC: Various cleanups of ZVerify
    + S8229018: Switching to an infinite socket timeout on Windows
      leads to high CPU load
    + S8229020: Failure on CPUs allowing loads reordering:
      assert(_tasks[t] == 1) failed: What else?
    + S8229032: ProblemList jdk/internal/platform/docker/
      /TestDockerMemoryMetrics.java
    + S8229128: ZGC: Remove unused ZThreadRootsIterator
    + S8229129: ZGC: Fix incorrect format string for doubles
    + S8229134: [TESTBUG] 32-bit build fails
      gc/arguments/TestSurvivorAlignmentInBytesOption.java after
      JDK-8228855
    + S8229135: ZGC: Adding missing ZStatTimerDisable before call
      to ZVerify::roots_strong()
    + S8229156: ProblemList
      gc/stress/gclocker/TestExcessGCLockerCollections.java
    + S8229176: Shenandoah should acquire CodeCache_lock without
      safepoint check
    + S8229206: Shenandoah: ShenandoahWeakRoot::oops_do() uses
      wrong timing phase
    + S8229208: Remove Monitor::ClearMonitor
    + S8229213: Shenandoah: Allow VM global oop storage to be
      processed concurrently
- Upgrade to upstream tag jdk-14+8
  * Fixes:
    + S6573239: Typo in jfc text file
    + S8042383: [TEST_BUG] Test javax/swing/plaf/basic/BasicMenuUI/
      /4983388/bug4983388.java fails with shortcuts on menus do not
      work
    + S8048556: Unnecessary GCLocker-initiated young GCs
    + S8068376: Validator fails valid XML files due to String == in
      XSD validator code
    + S8071275: remove AbstractAssembler::update_delayed_values
      dead code
    + S8078891: java.io.SequenceInputStream.close is not atomic and
      not idempotent
    + S8134672: [TEST_BUG] Some tests should check
      isDisplayChangeSupported
    + S8156207: Resource allocated BitMaps are often cleared
      unnecessarily
    + S8173978: Lookup.in should allow teleporting from a lookup
      class in a named module without dropping all access
    + S8180392: SunJCE provider should throw exceptions for
      unsupported mode and padding combinations
    + S8181493: (fs) Files.readAttributes(path,
      BasicFileAttributes.class) should preserve nano second time
      stamps
    + S8184157: (ch) AsynchronousFileChannel hangs with internal
      error when reading locked file
    + S8191138: Remove deprecated java.security.acl APIs
    + S8193042: NativeLookup::lookup_critical_entry() should only
      load shared library once
    + S8196467: javax/swing/JInternalFrame/Test6325652.java fails
    + S8202339: [TESTBUG] Consolidate the tests in
      runtime/SharedArchiveFile and runtime/appcds
    + S8212970: TZ database in "vanguard" format support
    + S8214469: [macos] PIT: java/awt/Choice/ChoiceKeyEventReaction/
      /ChoiceKeyEventReaction.java fails
    + S8221205: Obsolete AllowJNIEnvProxy
    + S8222563: Remove terminally deprecated method
      netscape.javascript.JSObject::getWindow
    + S8223769: Assert triggers with -XX:+StressReflectiveCode
    + S8224171: The cleanup multi-font related code in the XFontPeer
    + S8226361: jdk ProblemList file contains more than 1 entry for
      a test
    + S8226697: Several tests which need the @key headful keyword
      are missing it.
    + S8226771: Update Graal
    + S8226796: Reduce debug level logging for oopstorage+blocks
    + S8226808: PreparedStatement javadoc typo
    + S8226905: unproblem list applications/ctw/modules/* tests on
      windows
    + S8227123: Assertion failure when setting SymbolTableSize
      larger than 2^17 (131,072)
    + S8227170: (.hg)Ignore the JTwork and JTreport directories
      generated at the root of the repo
    + S8227250: UserHandler contains ancient LinuxThreads code
    + S8227260: JNI upcalls should bypass class initialization
      barrier in c2i adapter
    + S8227407: ZGC: C2 loads and load barriers can get separated
      by safepoints
    + S8227528: TestAbortVMOnSafepointTimeout.java failed due to
      "RuntimeException: 'Safepoint sync time longer than' missing
      from stdout/stderr"
    + S8227595: keytool/fakegen/DefaultSignatureAlgorithm.java
      fails due to "exitValue = 6"
    + S8227609: (fs) Files.newInputStream(...).skip(n) should allow
      skipping beyond file size
    + S8227680: FastJNIAccessors: Check for JVMTI field access
      event requests at runtime
    + S8227721: test/jdk/java/net/NetworkInterface/
      /NetworkInterfaceRetrievalTests.java should open the java.net
      package
    + S8227927: Move ParallelCleaningTask back to G1
    + S8228341: SignTwice.java fails intermittently on Windows
    + S8228397: Missing license copyright header in some properties
      files
    + S8228400: Remove built-in AArch64 simulator
    + S8228403: SignTwice.java failed with
      java.io.FileNotFoundException: File name too long
    + S8228407: JVM crashes with shared archive file mismatch
    + S8228465: HOST locale provider holds wrong era name for
      GregorianCalendar in US locale
    + S8228479: Correct the format of ColorChooserDemoTest
    + S8228485: JVM crashes when bootstrap method for condy
      triggers loading of class whose static initializer throws
      exception
    + S8228490: Shenandoah: Shenandoah concurrent root evacuation
      may race against OopStorage::release()
    + S8228494: Update nroff version of man pages
    + S8228501: java_props_macosx.c - provide missing CFRelease for
      CFLocaleCopyCurrent
    + S8228532: Shenandoah: Implement
      SBSA::try_resolve_jobject_in_native()
    + S8228571: [TESTBUG] Fix tests failing on non-aot platforms
      after JDK-8227512
    + S8228578: fix CFData object leak in macosx KeystoreImpl.m
    + S8228585: jdk/internal/platform/cgroup/TestCgroupMetrics.java
      - NumberFormatException because of large long values (memory
      limit_in_bytes)
    + S8228589: BasicJStackTest.java and
      JcmdOutputEncodingTest.java failing after JDK-8227868
    + S8228596: Class redefinition fails when condy instructions
      are removed
    + S8228602: Add sun/security/tools/jarsigner/
      /PreserveRawManifestEntryAndDigest.java to problem list
    + S8228618: s390: c1/c2 fail to add a metadata relocation in
      the static call stub.
    + S8228623: Update copyright year to 2019 for several java
      properties file
    + S8228630: Remove always true parameter to NoSafepointVerifier
    + S8228631: Fix inconsistent OopStorage::Block owner usage
    + S8228645: Don't run sun/security/pkcs11/Cipher/
      /TestKATForGCM.java on buggy NSS solaris versions
    + S8228650: runtime/SharedArchiveFile/
      /CheckDefaultArchiveFile.java test fails on AIX
    + S8228658: test GetTotalSafepointTime.java fails on fast Linux
      machines with Total safepoint time 0 ms
    + S8228668: compiler/codegen/aes/TestAESMain.java failed with
      GCM mode must be used with NoPadding
    + S8228671: Fastdebug VM throws InternalError when
      publicLookup.in(T) is used to resolve a member
    + S8228672: [TESTBUG] gc/metaspace/TestSizeTransitions.java
      fails on 32-bit platforms
    + S8228673: Remove develop flag StrictSafepointChecks
    + S8228674: LogCompilation: Improvements to log compare feature
    + S8228725: AArch64: Purge method call format support
    + S8228742: Remove javax/net/ssl/SSLSocket/Tls13PacketSize.java
      from ProblemList
    + S8228743: [PPC64, s390] Implement FastJNIAccessors
    + S8228745: sun/security/tools/jarsigner/Warning.java test
      timeout
    + S8228755: ProblemList
      sun/security/tools/jarsigner/Warning.java
    + S8228775: Shenandoah: Remove useless null-input-verification
      in Shenandoah/C2 verifier
    + S8228855: Test runtime/CommandLine/OptionsValidation/
      /TestOptionsWithRanges fails after JDK-8227123
    + S8228904: Problemlist docker/TestJcmdWithSideCar.java until
      JDK-8228850 and JDK-8228960 are fixed
    + S8228907: Some gc argument checking tests fail after
      JDK-8228855
- Upgrade to upstream tag jdk-14+7
  * Fixes:
    + S8048595: problemList failing/ignored manual tests in
      security-libs
    + S8067801: Enforce null check for underlying I/O streams
    + S8073213: javadoc of PushbackInputStream methods should
      specify NullPointerExceptions
    + S8131664: Javadoc for PrintStream is now incorrect
    + S8154520: java.time: appendLocalizedOffset() should return
      the localized "GMT" string
    + S8157830: Errors in XSLT stylesheet are not dispatched
      correctly to ErrorListener
    + S8162929: Enqueuing dirty cards into a single DCQS during GC
      does not scale
    + S8206179: com/sun/management/OperatingSystemMXBean/
      /GetCommittedVirtualMemorySize.java fails with Committed
      virtual memory size illegal value
    + S8212328: Exceptional throw cases
    + S8213431: Improve file protocol handling
    + S8213432: Better copies of CopiesList
    + S8216381: More limited privilege usage
    + S8217375: jarsigner breaks old signature with long lines in
      manifest
    + S8217563: Improve realm maintenance
    + S8218863: Better endpoint checks
    + S8218873: Improve JSSE endpoint checking
    + S8218876: Improve PNG support options
    + S8219774: Reexamine the initialization of LangReflectAccess
      shared secret at AccessibleObject::<clinit>
    + S8219775: Certificate validation improvements
    + S8220517: Enhanced GIF support
    + S8221303: sun/management/jmxremote/bootstrap/
      /JMXInterfaceBindingTest.java fails due to
      java.rmi.server.ExportException: Port already in use
    + S8221345: Better Poly1305 support
    + S8221518: Normalize normalization
    + S8222678: Improve TLS negotiation
    + S8222751: closed/test/jdk/sun/security/util/
      /DerIndefLenConverter/IndefBerPkcs12.java fail
    + S8222791: Order of evaluation of -link params in Javadoc tool
      reversed -> regression with split packages
    + S8224674: NMethod state machine is not monotonic
    + S8224825: java/awt/Color/AlphaColorTest.java fails in
      linux-x64 system
    + S8225648: [TESTBUG] java/lang/annotation/loaderLeak/Main.java
      fails with -Xcomp
    + S8225782: Remove expired flags in JDK 14
    + S8226232: Move merge heap roots code out from
      G1RemSetScanState
    + S8226338: Updates to Stateless Resumption
    + S8226406: JVM fails to detect mismatched or corrupt CDS
      archive
    + S8226653: [accessibility] Can edit text cell correctly, but
      Accessibility Tool reads nothing about editor
    + S8226910: make it possible to use jtreg's -match via run-test
      framework
    + S8226913: Scale cards per chunk used during heap root
      scanning with region size
    + S8227041: runtime/memory/RunUnitTestsConcurrently.java has a
      memory leak
    + S8227084: Add timing information for merge heap root
      preparation
    + S8227089: Add timing information for merging humongous
      remembered sets
    + S8227090: G1 does not account the OptMergeRS in cost per card
      calculation
    + S8227122: [TESTBUG] Create Docker sidecar test cases
    + S8227179: Test for new gc+metaspace=info output format
    + S8227247: tools/sjavac/IdleShutdown.java fails with
      AssertionError: Error too big on windows
    + S8227252: [aix] Disable
      jdk/java/lang/reflect/exeCallerAccessTest
    + S8227260: JNI upcalls should bypass class initialization
      barrier in c2i adapter
    + S8227368: EnumSet.class serialization broken in JDK 9+
    + S8227392: Colors with alpha are painted incorrectly on Linux,
      after JDK-8214579
    + S8227397: Add --with-extra-asflags configure option
    + S8227435: Perf::attach() should not throw a
      java.lang.Exception
    + S8227437: S4U2proxy cannot continue because server's TGT
      cannot be found
    + S8227496: Update NUM_CDS_REGIONS and
      CURRENT_CDS_ARCHIVE_VERSION in cds.h
    + S8227551: Session Resumption without Server-Side State off by
      default
    + S8227587: Add internal privileged System.loadLibrary
    + S8227633: avoid comparing this pointers to NULL
    + S8227635: Shenandoah: SHBSA::load_at() needs to deal
      IN_NATIVE load
    + S8227636: Fix output dir for jlink_jre target in Images.gmk
    + S8227640: javac crashes on text blocks with invalid escapes.
    + S8227642: [TESTBUG] Make docker tests podman compatible
    + S8227646: [TESTBUG] appcds/SharedArchiveConsistency timed out
    + S8227652: SetupOperatorNewDeleteCheck should discuss deleting
      destructors
    + S8227653: Add VM Global OopStorage
    + S8227671: G1: assert_used_and_recalculate_used_equal performs
      work in product builds
    + S8227677: Shenandoah: C2: Make in-native LRB special case of
      normal LRB
    + S8227692: Remove develop feature PrintMallocStatistics
    + S8227693: HTML error in jdwp-protocol.html
    + S8227719: G1 Pending cards estimation too conservative in
      cost prediction
    + S8227737: avoid implicit-function-declaration on AIX
    + S8227738: jvmti/DataDumpRequest/datadumpreq001 failed due to
      "exit code is 134"
    + S8227755: Need more than 2 distinct CodeCache unloading cycles
    + S8227766: CheckUnhandledOops is broken in MemAllocator
    + S8227815: Minimal VM: set_state is not a member of
      AttachListener
    + S8227834: build.log output from failing commands : include
      the hs_error file path in case of crashes in build
    + S8227866: Shenandoah: Split weak root processing and class
      unloading in parallel cleaning task
    + S8227868: jinfo and jstack can fail converting UTF8 output to
      strings
    + S8227869: fix wrong format specifiers in os_aix.cpp
    + S8227923: End position of EndElementTree is -1
    + S8228204: Fix for JDK-8067801 breaks
      java/io/NegativeInitSize.java
    + S8228338: tools/pack200/TimeStamp.java fails with
      NullPointerException
    + S8228340: JVMCI deleteGlobalHandle doesn't delete the handle
    + S8228342: Add SignTwice.java to problem list
    + S8228364: Shenandoah: Remove unused code from
      ShenandoahBarrierSetC1
    + S8228368: avoid incompatible pointer to integer conversion
      initializing gint in gtk2_interface
    + S8228388: Add information about dirty/skipped card for Merge
      HCC in G1 log
    + S8228392: Backout incorrect change done by JDK-8067801
    + S8228394: Cleanup unused java.net SharedSecrets classes
    + S8228396: Re-enable Stateless Resumption On by default for
      merge to mainline
    + S8228399: Remove mistaken open.iml
    + S8228420: compile error in shenandoahSupport.cpp with clang 9
    + S8228426: xlc: switch to clang-style warning disabling
    + S8228434: jdk/net/Sockets/Test.java fails after JDK-8227642
    + S8228450: unicode.md and icu.md text should be pre-formatted
    + S8228468: awt_Robot.c : format string contains 0 within the
      string body
    + S8228484: Remove NoAllocVerifier because nothing uses it
    + S8228492: Remove pako.md
- Upgrade to upstream tag jdk-14+6
  * Fixes:
    + S7148925: StAXSource causes exceptions to be thrown with
      certain wellformed XML instances
    + S8176447: javax.xml.validation.Validator validates
      incorrectly on uniqueness constraint
    + S8178843: A bug in an inner loop in MethodGenerator's
      getLocals method
    + S8181386: CipherSpi ByteBuffer to byte array conversion fails
      for certain data overlap conditions
    + S8209790: SA tools not providing option to connect to debug
      server
    + S8220041: NullPointerException at
      jdk.compiler/com.sun.tools.javac.jvm.Code.emitop0
    + S8222446: assert(
      C->env()->system_dictionary_modification_counter_changed())
      failed: Must invalidate if TypeFuncs differ
    + S8223451: Make optimistic types disabled by default
    + S8224560: (tz) Upgrade time-zone data to tzdata2019a
    + S8225423: GTK L&F: JSplitPane: There is no divider shown
    + S8225479: com.sun.net.httpserver.HttpContext that does not
      end with '/' has surprising matches
    + S8225483: Shenandoah: Enhance native access barrier
    + S8225580: tzdata2018i integration causes test failures on
      jdk-13
    + S8225687: Newly added sspi.cpp in JDK-6722928 still contains
      some small errors
    + S8225690: Multiple AttachListener threads can be created
    + S8225715: jhsdb jmap fails to write binary heap dump of a
      jshell process
    + S8225745: NoSuchAlgorithmException exception for
      SHA256withECDSA with RSASSA-PSS support
    + S8226525: HotSpot compile-time error for x86-32
    + S8226536: Catch OOM from deopt that fails rematerializing
      objects
    + S8226695: Shenandoah: Wire C1 and C2 IN_NATIVE barrier
    + S8226756: Replace wildcard address with loopback or local
      host in tests - part 18
    + S8226798: JVM crash in
      klassItable::initialize_itable_for_interface(int,
      InstanceKlass*, bool, Thread*)
    + S8227009: JDK 13 L10n resource files update - msgdrop 10
    + S8227031: Print NMT statistics on fatal errors
    + S8227059: sun/security/tools/keytool/
      /DefaultSignatureAlgorithm.java timed out
    + S8227068: [Graal] MappedByteBuffer bulk access memory
      failures are not handled gracefully
    + S8227275: Within native OOM error handling, assertions may
      hang the process
    + S8227289: Enable assertions for some shell to java conversion
      tests after JDK-8218960
    + S8227338: templateInterpreter.cpp: copy_table() needs to be
      safer
    + S8227381: GSS login fails with PREAUTH_FAILED
    + S8227391: Update double-conversion to version 3.1.5
    + S8227416: Add a "Table Of Contents" to HTML version of man
      pages
    + S8227422: sun/net/www/protocol/file/DirPermissionDenied.java
      failed on Windows 2016 because DirPermissionDenied directory
      has no read permission
    + S8227438: [TESTLIB] Determine if file exists by Files.exists
      in function FileUtils.deleteFileIfExistsWithRetry
    + S8227440: Implement fix to JDK-8224642 on all platforms
    + S8227512: [TESTBUG] Fix JTReg javac test failures with Graal
    + S8227527: LogDecorations should lazily resolve host name
    + S8227539: Replace wildcard address with loopback or local
      host in tests - part 20
    + S8227549: Fix style of links in specs for consistency
    + S8227574: [TESTBUG] JTReg tests fail with Graal due to access
      denied
    + S8227578: Wrong JRE targets in Images.gmk after JDK-8219971
    + S8227582: runtime/TLS/testtls.sh fails on x86_32
    + S8227594: sadebugd/DebugdConnectTest.java fails due to
      "java.rmi.NotBoundException: SARemoteDebugger"
    + S8227602: Update nroff version of man pages
    + S8227613: "draft" header should be in a <header> instead of
      <div>
    + S8227615: [TESTBUG] JTReg "jdk/sun/security/util/
      /FilePermCompat/CompatImpact.java" fails with graal
    + S8227630: adjust format specifiers in loadlib_aix.cpp
    + S8227631: Adjust AIX version check
    + S8227632: Incorrect PrintCompilation message: made not
      compilable on levels 0 1 2 3 4
    + S8227637: Adjust Shenandoah C2 verifier to recognize
      IN_NATIVE barriers
    + S8227644: make more build-time variables available to
      Markdown files
    + S8227676: Shenandoah: More consistent naming of LRB entry
      points
    + S8227720: Improve ExtendedSocketOptions initialization
- Upgrade to upstream tag jdk-14+5
  * Fixes:
    + S8191890: Biased locking still uses the inferior stop the
      world safepoint for revocation
    + S8214542: JFR: Old Object Sample event slow on a deep heap in
      debug builds
    + S8217170: gc/arguments/TestUseCompressedOopsErgo.java timed
      out
    + S8219687: G1 asserts nmethod should not be unloaded during
      parallel code cache unloading
    + S8221514: [Graal] java/lang/String/CompactString/ tests fail
      with "GraalError: failed guarantee: no FrameState at
      DeoptimizingNode" in Graal -Xcomp mode
    + S8221577: [Graal] Implement basic type consistency checks for
      Low level MH intrinsics
    + S8222079: Don't use memset to initialize fields decode_env
      constructor in disassembler.cpp
    + S8223291: Whitespace is added to CDATA tags when using
      OutputKeys.INDENT to format XML
    + S8223443: Calling Trees.getScope early changes names of
      local/anonymous classes
    + S8223575: add subspace transitions to gc+metaspace=info log
      lines
    + S8224254: compiler/graalunit/HotspotJdk9Test.java is timing
      out intermittently
    + S8224531: SEGV while collecting Klass statistics
    + S8224560: (tz) Upgrade time-zone data to tzdata2019a
    + S8224657: [TESTBUG] java/util/Locale/SoftKeys.java should be
      ignored but run
    + S8224673: Adjust permission for delayed starting of debugging
    + S8224741: Optimize the scan area during the Scan Heap Roots
      phase
    + S8224881: Shenandoah: trashing "Collection Set, Pinned"
      region during Degenerated GC
    + S8225035: Thread stack size issue caused by large TLS size
    + S8225064: [Graal] Application SEGV in
      G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr,
      oopDesc*, markOopDesc*)+0x48
    + S8225239: Refactor NetworkInterface lookups
    + S8225475: Node budget asserts on x86_32/64
    + S8225580: tzdata2018i integration causes test failures on
      jdk-13
    + S8225626: JMH Test Support for JDK-8222074
    + S8225642: ZGC: Crash due to bad oops being spilled to stack
      in load barriers
    + S8225679: reference to
      http://java.sun.com/products/JavaManagement/download.html
    + S8225706: JFR RootResolver resets CLD claims with no restore
    + S8225770: ZGC: C2: Generates on_weak instead of on_strong
      barriers
    + S8226302: Test failures on IBM platforms (power and s/390)
      after JDK-8223837
    + S8226366: Excessive ServiceThread wakeups for OopStorage
      cleanup
    + S8226409: Enable argument profiling for
      sun.misc.Unsafe.put*/get*
    + S8226522: No compilation error reported when yield is used in
      incorrect context
    + S8226566: [JVMCI] java.* classes are no longer necessarily
      resolved by the boot class loader
    + S8226596: Accessibility errors in jdwp-protocol.html
    + S8226627: assert(t->singleton()) failed: must be a constant
    + S8226654: Some swing gtk regression tests fail with
      "java.lang.InternalError: Unable to load native GTK libraries
    + S8226719: Kerberos login to Windows 2000 failed with
      "Inappropriate type of checksum in message"
    + S8226757: Shenandoah: Make traversal and passive modes
      explicit
    + S8226793: Replace OopStorage dup_name with os::strdup
    + S8226822: GC interface for C1 runtime calls
    + S8226823: Adjust BarrierSetC2 for C2 runtime calls
    + S8226943: compile error in libfollowref003.cpp with XCode
      10.2 on macosx
    + S8226963: More clarification on possible sequencing error in
      GSSContext::unwrap
    + S8227010: Error recovery after local variable redeclaration
      can be improved
    + S8227011: Starting a JFR recording in response to JVMTI
      VMInit and / or Java agent premain corrupts memory
    + S8227032: MetaspaceUtils::print_report crashes when called
      before initialization
    + S8227034: Graal crash with gcbasher
    + S8227039: Shenandoah: Aggressive heuristics for Traversal mode
    + S8227055: Minor edits to launcher help text
    + S8227061: KDC.java test behaves incorrectly when AS-REQ
      contains a PAData not PA-ENC-TS-ENC
    + S8227080: (fs) Files.newInputStream(...).skip(n) is slow
    + S8227083: ZGC: C2: Generates on_weak barrier for
      WeakCompareAndSwap
    + S8227112: exclude compiler/intrinsics/sha/sanity tests from
      AOT runs
    + S8227117: normal interpreter table is not restored after
      single stepping with TLH
    + S8227124: "could not open pipe" error does not report error
      details
    + S8227127: Era designator not displayed correctly using the
      COMPAT provider
    + S8227171: provide function names in native stack trace on aix
      with xlc16
    + S8227173: Minor cleanup of unused code in compile.hpp
    + S8227175: ZGC: ZHeapIterator visits potentially dead objects
    + S8227178: Backout of 8215523
    + S8227199: Shenandoah: Remove superfluous calls to
      can_do_traversal_gc()
    + S8227202: clarify Class.isEnum() doc
    + S8227222: vmTestbase/jit/FloatingPoint/gen_math/Loops04/
      /Loops04.java failed XMM register should be 0-15
    + S8227237: [Graal] org.graalvm.compiler.api.directives.test
      .ProbabilityDirectiveTest fails with -Xcomp
    + S8227252: [aix] Disable
      jdk/java/lang/reflect/exeCallerAccessTest
    + S8227277: HeapInspection::find_instances_at_safepoint walks
      dead objects
    + S8227305: Krb5Util::getTicketFromSubjectAndTgs is useless
    + S8227327: Shenandoah: Faster and more parallel tests
    + S8227389: Remove unsupported xlc16 compile options on aix
- Upgrade to upstream tag jdk-14+4
  * Fixes:
    + S8211723: AppCDS: referring to a jar file in any way other
      than exactly how it was done during dumping doesn't work
    + S8213108: Improve work distribution during remembered set scan
    + S8215523: jstat reports incorrect values for OU for CMS GC
    + S8222968: ByteArrayPublisher is not thread-safe resulting in
      broken re-use of HttpRequests
    + S8223173: Implement fast class initialization checks on
      AARCH64
    + S8224480: (fc) java/nio/channels/FileChannel/MapTest.java
      fails intermittently
    + S8224650: Add tests to support X25519 and X448 in TLS
    + S8224716: Javadoc of Int/Long/DoubleSummaryStatistics should
      mention possible overflow of count
    + S8224764: Create jtreg test for JDK-8222252
    + S8225344: Avoid VM_EnableBiasedLocking VM operation during
      bootstrap if BiasedLockingStartupDelay is 0
    + S8225437: JvmtiExport::gc_epilogue is unnecessary
    + S8225497: Update Graal
    + S8225702: Safepoint counter can't be used for safepoint
      detection
    + S8225770: ZGC: C2: Generates on_weak instead of on_strong
      barriers
    + S8226238: Improve error output and fix elf issues in
      os::dll_load
    + S8226287: Make process_users_of_allocation handle gc barriers
    + S8226462: [TESTBUG] runtime/appcds/sharedStrings/
      /SysDictCrash.java failed with Cannot dump shared archive
    + S8226510: No compilation error when switch expression has no
      result expressions
    + S8226514: Replace wildcard address with loopback or local
      host in tests - part 14
    + S8226515: AArch64: float point register corruption in
      ZBarrierSetAssembler::load_at
    + S8226525: HotSpot compile-time error for x86-32
    + S8226533: JVMCI: findUniqueConcreteMethod should handle
      statically bindable methods directly
    + S8226602: Test convenience reactive primitives from
      java.net.http with RS TCK
    + S8226603: accessibility issues in specs/jvmti.html
    + S8226607: Inconsistent info between pcsclite.md and MUSCLE
      headers
    + S8226608: Hide the onjcmd option from the help output
    + S8226651: Setting the mgfHash in CK_RSA_PKCS_PSS_PARAMS has
      no effect
    + S8226699: [BACKOUT] JDK-8221734 Deoptimize with handshakes
    + S8226706: (se) Reduce the number of outer loop iterations on
      Windows in java/nio/channels/Selector/RacyDeregister.java
    + S8226709: MethodTypeDesc::resolveConstantDesc needs access
      check per the specification
    + S8226730: Missing `@` in code tags
    + S8226778: [JVMCI] Handle unpacking properly in
      Deoptimiziation::get_cached_box()
    + S8226783: GTK is not being returned as the System L&F on Gnome
    + S8226809: Circular reference in printed stack trace is not
      correctly indented & ambiguous
    + S8226825: Replace wildcard address with loopback or local
      host in tests - part 19
    + S8226869: Test java/util/Locale/LocaleProvidersRun.java
      should enable assertions
    + S8226871: invalid use of incomplete type class MacroAssembler
      when building minimal after JDK-8191278
    + S8226876: Assertion in sun/util/locale/provider/
      /CalendarDataUtility on Windows after JDK-8218960
    + S8226878: zero crashes after JDK-8191278
    + S8226879: Memory leak in Type::hashcons
    + S8226917: jvmti/scenarios/contention/TC04/tc04t001/
      /TestDescription.java fails on
      jvmti->InterruptThread (JVMTI_ERROR_THREAD_NOT_ALIVE)
    + S8226956: Add invocation tests for Graal and C1
    + S8226957: Shenandoah: Remove obsoleted ShenandoahStoreCheck
      option
    + S8226967: Minimal VM: FALSE was not declared in this scope
    + S8226976: SessionTimeOutTests uses == operator for String
      value check
    + S8227035: JVM::printFlags fails in native OOM situations
    + S8227041: runtime/memory/RunUnitTestsConcurrently.java has a
      memory leak
    + S8227083: ZGC: C2: Generates on_weak barrier for
      WeakCompareAndSwap
    + S8227085: ZGC: Add on_weak load barrier verification
    + S8227101: Shenandoah: Use ShenandoahSharedFlag for claimed
      flag in ShenandoahSerialRoot
- Upgrade to upstream tag jdk-14+3
  * Fixes:
    + S8133489: Better messaging for PKIX path validation matching
    + S8180005: Provide specific links in KeyManagerFactory and
      TrustManagerFactory to the Standard Algorithm Names
      Specification
    + S8185139: [Graal] Tests which set too restrictive security
      manager fail with Graal
    + S8191278: MappedByteBuffer bulk access memory failures are
      not handled gracefully
    + S8213561: ZipFile/MultiThreadedReadTest.java timed out in
      tier1
    + S8214822: Move ConcurrentHashTable VALUE parameter to CONFIG
    + S8219804: java/net/MulticastSocket/Promiscuous.java fails
      intermittently due to NumberFormatException
    + S8220175: serviceability/dcmd/framework/VMVersionTest.java
      fails with a timeout
    + S8220229: Timezone pattern "OOOO" does not result in the full
      "GMT+00:00" substring
    + S8223727: com/sun/jndi/ldap/privconn/RunTest.java failed due
      to hang in LdapRequest.getReplyBer
    + S8223736: jvmti/scenarios/contention/TC04/tc04t001/
      /TestDescription.java fails due to wrong number of
      MonitorContendedEntered events
    + S8223794: applications/kitchensink/Kitchensink.java crash bad
      oop with Graal
    + S8224137: Analyze and port invocation tests to jtreg and
      co-locate to jdk repo
    + S8224157: BCEL: update to version 6.3.1
    + S8224502: [TESTBUG] JDK docker test TestSystemMetrics.java
      fails with access issues and OOM
    + S8224506: [TESTBUG] TestDockerMemoryMetrics.java fails with
      exitValue = 137
    + S8224555: vmTestbase/nsk/jvmti/scenarios/contention/TC02/
      /tc02t001/TestDescription.java failed
    + S8224642: Test sun/tools/jcmd/TestJcmdSanity.java fails: Bad
      file descriptor
    + S8224849: Flag (?U:...) is allowed for non-capturing groups
    + S8225146: Accessibility issues in
      javax/swing/plaf/nimbus/doc-files/properties.html
    + S8225255: Make SATB qset lock-free
    + S8225257: sun/security/tools/keytool/PSS.java timed out
    + S8225369: [AOT] vm/classfmt/cpl/cplres001/cplres00101m004/
      /cplres00101m004.html fails
    + S8225590: Shenandoah: Refactor ShenandoahClassLoaderDataRoots
      API
    + S8225644: C1 dumps incorrect class name in ClassCastException
      message
    + S8225682: Reference to JNI spec on java.sun.com
    + S8225684: [AOT] vmTestbase/vm/oom/production/
      /AlwaysOOMProduction tests fail with AOTed java.base
    + S8225716: G1 GC: Undefined behaviour in
      G1BlockOffsetTablePart::block_at_or_preceding
    + S8225766: Curve in certificate should not affect signature
      scheme when using TLSv1.3
    + S8225789: Empty method parameter type should generate
      ClassFormatError
    + S8225802: Remove unused CSS classes from HTML doclet
    + S8225810: Update JVMCI
    + S8226203: MappedByteBuffer.force method may have no effect on
      implementation specific map modes
    + S8226269: Race in SetupProcessMarkdown
    + S8226286: Remove unused method
      java.lang.Integer::formatUnsignedInt and cleanup Integer/Long
      classes
    + S8226307: Curve names should be case-insensitive
    + S8226310: Shenandoah: Concurrent evacuation of CLDG
    + S8226311: Shenandoah: Concurrent evacuation of OopStorage
      backed weak roots
    + S8226313: problem list compiler/types/correctness tests
    + S8226325: Support building of filtered spec bundles
    + S8226360: merge entries in hotspot problem lists
    + S8226381: ProblemList
      java/lang/reflect/PublicMethods/PublicMethodsTest.java
    + S8226382: ProblemList
      java/lang/constant/MethodTypeDescTest.java
    + S8226394: [TESTBUG] vmTestbase/metaspace/flags/
      /maxMetaspaceSize/TestDescription.java fails with
      java.lang.NoClassDefFoundError
    + S8226404: bootcycle build uses wrong CDS archive
    + S8226412: Fix command-line help text for javac -target
    + S8226413: Shenandoah: Separate root scanner for
      SH::object_iterate()
    + S8226468: [aix] loadquery failed error message displayed
    + S8226518: Typo in the ConnectionBuilder javadoc examples
    + S8226521: Detect WSL2 as WSL in configure
    + S8226538: find-files.gmk gets corrupted if tab completion is
      used before running make first
    + S8226543: Reduce GC pressure during message digest
      calculations in password-based encryption
    + S8226586: Shenandoah: No need to pre-evacuate roots for
      degenerated GC
    + S8226592: Fix HTML in table for jdk.zipfs module-info
    + S8226593: Fix HTML in com/sun/jdi/doc-files/signature.html
    + S8226595: jvmti/scenarios/contention/TC04/tc04t001/
      /TestDescription.java still fails due to wrong number of
      MonitorContendedEntered events
    + S8226607: Inconsistent info between pcsclite.md and MUSCLE
      headers
    + S8226628: The copyright footer should be enclosed in <footer>
    + S8226683: Remove review suggestion from fix to 8219804
    + S8226699: [BACKOUT] JDK-8221734 Deoptimize with handshakes
    + S8226785: MandatoryWarningHandler.java contains
      implementation of Objects.equals functionality

-------------------------------------------------------------------
Thu Jun 20 07:49:54 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+2
  * Fixes:
    + S8159740: JShell: corralled declarations do not have correct
      source to wrapper mapping
    + S8164819: Make javac's toString() on annotation objects
      consistent with core reflection
    + S8181837: [Graal] compiler/jvmci/SecurityRestrictionsTest.java
       fails with AccessControlException
    + S8200701: jdk/jshell/ExceptionsTest.java fails on Windows,
      after JDK-8198801
    + S8209590: compiler/compilercontrol/DontInlineCommandTest.java
      test fails with "Inline message differs" error
    + S8212167: JShell : Stack trace of exception has wrong line
      number
    + S8217348: assert(thread->is_Java_thread()) failed: just
      checking
    + S8217705: HttpClient - wrong exception type when bad status
      line is received
    + S8222369: ExecutableElement.getReceiverType returns null
      instead of NOTYPE
    + S8223813: (aio) Iocp.getErrorMessage should drop trailing \r\n
    + S8224829: AsyncSSLSocketClose.java has timing issue
    + S8224851: AArch64: fix warnings and errors with Clang and GCC
      8.3
    + S8225310: JFR crashed in
      JfrPeriodicEventSet::requestProtectionDomainCacheTableStatistics()
    + S8225339: Optimize HashMap.keySet()/HashMap.values()/HashSet
      toArray() methods
    + S8225392: Comparison builds are failing due to cacerts file
    + S8225543: Jcmd fails to attach to the Java process on Linux
      using the main class name if whitespace options were used to
       launch the process
    + S8225550: Shenandoah: Prevent SH::object_iterate() call's
      side-effects
    + S8225573: Shenandoah: Enhance ShenandoahVerifier to ensure
      roots to-space invariant
    + S8225578: Replace wildcard address with loopback or local
      host in tests - part 16
    + S8225582: Shenandoah: Enable concurrent evacuation of
      JNIHandles
    + S8225583: Examine the HttpResponse.BodySubscribers for null
      handling
    + S8225636: SA can't handle prelinked libraries
    + S8225680: Address links in java.sql.rowset
    + S8225695: 32-bit build failures after JDK-8080462 (Update
      SunPKCS11 provider with PKCS11 v2.40 support)
    + S8225716: G1 GC: Undefined behaviour in
      G1BlockOffsetTablePart::block_at_or_preceding
    + S8225730: Add sun/security/pkcs11/tls/tls12/FipsModeTLS12.java
      to ProblemList for linux
    + S8225743: Remove
      ShenandoahBarrierSetC2::escape_is_barrier_node and related GC
      interface
    + S8225746: hotspot problem lists list unexciting tests
    + S8225748: Use SHA-256 for javap classfile checksum
    + S8225779: Remove unused CollectedHeap::cell_header_size()
    + S8225783: Incorrect use of binary operators on booleans in
      type.cpp
    + S8225801: Shenandoah: Adjust SA to reflect recent forwarding
      pointer changes
    + S8225804: SA: Remove unused CollectedHeap.oopOffset() method
    + S8226198: use of & instead of && in
      LibraryCallKit::arraycopy_restore_alloc_state
    + S8226222: [JVMCI] Export AArch64 field
      VM_Version::_psr_info.dczid_el0
    + S8226227: Missing include of thread.inline.hpp
    + S8226242: Diagnostic output for posix_spawn failure
    + S8226303: Examine the HttpRequest.BodyPublishers for
      exception handling
    + S8226304: Obsolete the -XX:+FailOverToOldVerifier option
    + S8226319: Add forgotten
      test/jdk/java/net/httpclient/BodySubscribersTest.java
    + S8226359: Switch to JCov build which supports byte code
      version 58

-------------------------------------------------------------------
Wed Jun 19 11:06:15 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-14+1 (first iteration towards jdk14)
  * Fixes:
    + S6722928: Support SSPI as a native GSS-API provider
    + S7086604: (reflect) Clarifications to javadoc for
      getGeneric*Type methods in j.l.r
    + S8042748: Clarify exception thrown by
      ParameterizedTypeImpl.validateConstructorArguments()
    + S8066173: compiler/types/correctness/OffTest.java failed with
      assert
    + S8080462: Update SunPKCS11 provider with PKCS11 v2.40 support
    + S8149040: Cleanup compiler/jsr292/NonInlinedCall tests after
      JDK-8148994
    + S8158048: Fix failure message from jtreg gtest wrapper
    + S8171279: Support X25519 and X448 in TLS
    + S8181869: getAnnotatedParameterTypes%G?%@() specification
      should be clarified
    + S8196096: javax/swing/JPopupMenu/6580930/bug6580930.java fails
    + S8197927: Allow the system property `java.vendor.version` to
      be undefined
    + S8203444: String::formatted (Preview)
    + S8205126: JVMTI spec incorrectly states that PopFrame can not
      be called on the current thread
    + S8205131: remove Runtime trace methods
    + S8206074: nsk/jdi/EventRequestManager/createStepRequest/
      /crstepreq001/TestDescription.java is timing out
    + S8208236: [TESTBUG] vmTestbase/nsk/stress/stack tests fail by
      timeout
    + S8208379: compiler/jvmci/events/
      /JvmciNotifyInstallEventTest.java failed with "Got unexpected
      event count after 2nd install attempt: expected 9 to equal 2"
    + S8209381: Default CDS classlist generation should run with an
      explicit locale setting
    + S8209626: [JVMCI] Use implicit exception table for dispatch
      and printing
    + S8209917: fix TODO in GatherDiagnosticInfoObserver
    + S8211018: Session Resumption without Server-Side State
    + S8214399: Javap -help should provide information about
      --multi-release option
    + S8214527: ZGC for Aarch64
    + S8214546: Start of release updates for JDK 14
    + S8214547: Add SourceVersion.RELEASE_14
    + S8214548: Add source 14 and target 14 to javac
    + S8214549: Bump maximum recognized class file version to 58
      for JDK 14
    + S8215032: Support Kerberos cross-realm referrals (RFC 6806)
    + S8216064: -XX:StartFlightRecording:settings= doesn't work
      properly
    + S8216261: Javap ignores default modifier on interfaces
    + S8216283: Allow shorter method sampling interval than 10 ms
    + S8216417: cleanup of IPv6 scope-id handling
    + S8216988: ServerSocket.implAccept should include warnings
      about Socket type/state
    + S8217731: Font rendering and glyph spacing changed from jdk-8
      to jdk-11
    + S8217739: Cannot reuse java.base UnixConstants.java from
      target in BuildJDK when cross compiling
    + S8219205: JFR file without license header
    + S8219992: Correct the documentation of PrintWriter to refer
      System.lineSeparator
    + S8220018: javac crash when compiling try-catch-finally inside
      switch expression
    + S8220657: JFR.dump does not work when filename is set
    + S8221246: NullPointerException within Win32ShellFolder2
    + S8221719: Jarsigner fails to verify signed by alias if alias
      given in wrong case
    + S8222083: Support of "64-bit IEEE floating point" encoding
      for the AU file format
    + S8222145: Add -XX:SoftMaxHeapSize flag
    + S8222182: ZGC: Use SoftMaxHeapSize to guide GC heuristics
    + S8222371: Use UL for TraceNMethodInstalls code
    + S8222412: AARCH64: multiple instructions encoding issues
    + S8222467: ZGC: Log min/max/softmax capacity
    + S8222828: vmTestbase/nsk/jdi/BScenarios/multithrd/tc02x004/
      /TestDescription.java failed
    + S8223045: GraphicsEnvironment does not detect resolution
      changes in multiscreen systems
    + S8223050: JVMCI: findUniqueConcreteMethod() should not use
      Dependencies::find_unique_concrete_method() for non-virtual
      methods
    + S8223249: [s390] Cleanup
      TemplateInterpreterGenerator::generate_fixed_frame
    + S8223305: Compiler support for Switch Expressions
    + S8223364: Bad placement of anchor relative to header
    + S8223775: String::stripIndent (Preview)
    + S8223780: String::translateEscapes (Preview)
    + S8223782: jshell parser should handle Text Blocks
    + S8223796: JVMCIEnv::get_jvmci_type does not keep klasses alive
    + S8223837: Add -XX:MinHeapSize flag to set the minimum heap
      size
    + S8223942: Missing methods in
      ClientCodeWrapper$WrappedJavaFileManager
    + S8223967: Implement Text Blocks (Preview) in the Java compiler
    + S8224090: [PPC64] Fix SLP patterns for filling an array with
      double float literals
    + S8224139: Deprecate -XX:FlightRecorder option
    + S8224151: Test vmTestbase/nsk/sysdict/vm/stress/chain/
      /chain007/chain007.java might hang with release binaries
    + S8224161: Check.checkOverrideClashes n^2 algorithm
    + S8224162: assert(profile.count() == 0) failed: sanity in
      InlineTree::is_not_reached
    + S8224184: jshell got IOException at exiting with AIX
    + S8224217: RecordingInfo should use textual representation of
      path
    + S8224234: compiler/codegen/TestCharVect2.java fails in
      test_mulc
    + S8224257: fix issues in files generated by pandoc
    + S8224497: Remove FIXME in metaspaceClosure.cpp
    + S8224617: (fs) java/nio/file/FileStore/Basic.java found
      filesystem twice
    + S8224645: Only test multicast interfaces if they exist
    + S8224658: Unsafe access C2 compile fails with assert(flat !=
      TypePtr::BOTTOM) failed: cannot alias-analyze an untyped ptr:
      adr_type = NULL
    + S8224675: Late GC barrier insertion for ZGC
    + S8224710: [TESTBUG] dynamicArchive/ExcludedClasses.java test
      failed in tier6 testing on Windows
    + S8224826: Implement fast class initialization checks on PPC64
    + S8224827: Implement fast class initialization checks on s390
    + S8224847: gc/stress/TestReclaimStringsLeaksMemory.java fails
      with reserved greater than expected
    + S8224853: CDS address sanitizer errors
    + S8224865: Replace wildcard address with loopback or local
      host in tests - part 13
    + S8224871: os::attempt_reserve_memory_at() tries too hard
    + S8224876: javax/swing/JWindow/ShapedAndTranslucentWindows/
      /ShapedPerPixelTranslucentGradient.java fails on linux-x64
    + S8224881: Shenandoah: trashing "Collection Set, Pinned"
      region during Degenerated GC
    + S8224905: java/lang/ProcessBuilder/Basic.java#id1 failed with
      stream closed
    + S8224952: RI deviates from JVMS - non-zero minor_version for
      class files throws UnsupportedClassVersionError.
    + S8224958: add os::dll_load calls to event log
    + S8224966: ZGC: Don't skip oop verification in
      OopMapSet::all_do()
    + S8225106: C2: Parse::clinit_deopt asserts when holder klass
      is in error state
    + S8225118: Robot.createScreenCapture() returns black image on
      HiDPI linux with gtk3
    + S8225141: Better handling of classes in error state in fast
      class initialization checks
    + S8225144: [macos] In Aqua L&F backspace key does not delete
      when Shift is pressed
    + S8225180: SignedObject with invalid Key not throwing the
      InvalidKeyException in Windows
    + S8225182: JNI exception pending in DestroyXIMCallback of
      awt_InputMethod.c:1327
    + S8225189: Multiple JNI calls within critical region in ZIP
      Library
    + S8225227: ZGC: Be exact in what load barrier to use in
      ZHeapIterator
    + S8225304: Tiny HTML error (bad heading) in org.ietf.jgss
      package-info.java
    + S8225321: Repeated use of {@systemProperty} in a file causes
      duplicate ids
    + S8225322: Broken links in java.sql
    + S8225325: Add tests for redefining a class' private method
      during resolution of the bootstrap specifier
    + S8225340: ZGC: Add logging of High Usage rule
    + S8225347: [s390] Unexpected exit from stack overflow test
    + S8225350: compiler/jvmci/compilerToVM/IsCompilableTest.java
      timed out
    + S8225357: Rewire ShenandoahHeap::maybe_update_with_forwarded
      for contending fixups
    + S8225368: broken links in java.desktop files
    + S8225386: test for JDK-8216261 fails in Windows
    + S8225388: Running jcmd Compiler.CodeHeap_Analytics all 0
      cause crash.
    + S8225390: ProblemList sun/security/pkcs11/sslecc/
      /ClientJSSEServerJSSE.java due to JDK-8161536
    + S8225397: Integer value miscalculation in toString() method
      of BitSet
    + S8225402: events logging in deoptimization.cpp should go to
      deopt-log
    + S8225418: G1: region attribute remembered set state disagrees
      with actual remembered set state
    + S8225424: Add jdk.net.usePlainSocketImpl runs to a couple of
      tests
    + S8225426: Replace plain with system-default in Socket and
      ServerSocket
    + S8225429: Regression in disassembly quality
    + S8225441: Cleanup ShenandoahHeap::atomic_compare_exchange_oop
    + S8225448: String::translateEscapes javadoc has accessibility
      issues
    + S8225450: use @file in CtwRunner
    + S8225453: is_busy diagnostics and other baseline cleanups
      from Async Monitor Deflation project
    + S8225465: Add @jls tags to receiver type methods
    + S8225469: clean up problem lists
    + S8225478: Make G1CMRootRegions independent of HeapRegions
    + S8225487: giflib legal file is missing attribution for
      openbsd-reallocarray.c
    + S8225492: Update JVMCI
    + S8225509: clean_catch_blocks must add preds first
    + S8225511: javax/swing/JWindow/ShapedAndTranslucentWindows/
      /ShapedTranslucentPerPixelTranslucentGradient.java fails in
      linux-x64
    + S8225512: Replace wildcard address with loopback or local
      host in tests - part 15
    + S8225514: Shenandoah: ShenandoahCodeRoots should inherit from
      AllStatic
    + S8225532: Update source enums to describe 12 and 13 language
      features
    + S8225543: Jcmd fails to attach to the Java process on Linux
      using the main class name if whitespace options were used to
      launch the process
    + S8225564: Remove wrong assert in clean_catch_blocks
    + S8225567: Wrong file headers with 8202414 fix changeset
    + S8225568: ProblemList compiler/compilercontrol/jcmd/
      /ClearDirectivesFileStackTest.java
    + S8225572: Shenandoah: Move JNIHandles root out of serial roots
    + S8225622: [AOT] runtime/SharedArchiveFile/
      /TestInterpreterMethodEntries.java crashed with AOTed
      java.base
    + S8225651: Missed the `@` in a couple of code tags of
      SocketImpl
    + S8225663: [testbug] Missing JNIEXPORT in XAbortProvoker
      native function
    + S8225671: Support HTML 5 character references in javadoc
    + S8225675: Outdated citation of JLS in java.lang.ref.Reference
    + S8225676: cleanup hotspot ProblemList
    + S8225730: Add sun/security/pkcs11/tls/tls12/FipsModeTLS12.java
      to ProblemList for linux

-------------------------------------------------------------------
Fri Jun 14 07:58:55 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+24
  * Fixes:
    + S6394787: Typos in javadoc of OIS.readObjectOverride and
      OOS.writeObjectOverride
    + S6933331: (d3d/ogl) java.lang.IllegalStateException: Buffers
      have not been created
    + S8080353: JShell: Better error message on attempting to add
      default method
    + S8173196: [REDO] C2 does not optimize redundant memory
      operations with G1
    + S8178982: Javadoc search specification
    + S8188872: runtime/ErrorHandling/
      /TimeoutInErrorHandlingTest.java fails intermittently
    + S8193255: Root Certificates should be stored in text format
      and assembled at build time
    + S8194231: java/net/DatagramSocket/ReuseAddressTest.java
      failed with java.net.BindException: Address already in use:
      Cannot bind
    + S8199623: JShell: corralling not restored on drop
    + S8211703: JInternalFrame : java.lang.AssertionError: cannot
      find the internal frame
    + S8212630: jtreg/gc/logging/TestMetaSpaceLog.java failed with
      Agent timed out
    + S8212807: tools/jar/multiRelease/Basic.java times out
    + S8213516: jck test api/javax_accessibility/AccessibleState/
      /fields.html fails intermittent
    + S8214126: Method signatures not formatted correctly in browser
    + S8214579: JFrame does not paint content in XVFB / X11vnc
      environment
    + S8214702: Wrong text position for whitespaced string in
      printing Swing text
    + S8216535: tools/jimage/JImageExtractTest.java timed out
    + S8217412: deprecate rmic for removal
    + S8219149: ProcessTools.ProcessBuilder should print timing
      info for subprocesses
    + S8219788: Configure recommends JDK 8
    + S8219901: Noto fonts for East Asian countries cannot belong
      to CompositeFont
    + S8220238: Enhancing j.l.Runtime/System::gc specification with
      an explicit 'no guarantee' statement
    + S8220251: fix headings in java.management
    + S8221368: Error message when module main class cannot be
      loaded is missing exception details
    + S8221481: Reimplement the Legacy Socket API
    + S8221709: replace use of style blockListLast
    + S8222091: Javadoc does not handle package annotations
      correctly on package-info.java
    + S8222103: [testbug] compiler/compilercontrol/jcmd/
      /ClearDirectivesFileStackTest may exceed VM limit
    + S8222252: Java ergonomics limits heap to 128GB with disabled
      compressed oops
    + S8222448: java/lang/reflect/PublicMethods/
      /PublicMethodsTest.java times out
    + S8222468: [TESTBUG] vmTestbase/metaspace/flags/
      /maxMetaspaceSize/TestDescription.java fails with
      java.lang.NoClassDefFoundError
    + S8222917: GraphicsEnvironment for Unix still have an unused
      dependency on Solaris
    + S8222936: mlvm/anonloader/stress/randomBytecodes/Test.java
      fails due to "ERROR: There were 1 hangups during parsing."
    + S8223162: Improve ergonomics for Sparse PRT entry sizing
    + S8223213: Implement fast class initialization checks on x86-64
    + S8223216: C2: Unify class initialization checks between new,
      getstatic, and putstatic
    + S8223271: SplashScreen is still shown if defaulting to
      headless on MacOS
    + S8223320: [AOT] jck test api/javax_script/ScriptEngine/
      /PutGet.html fails when test classes are AOTed
    + S8223336: Assert in
      VirtualMemoryTracker::remove_released_region when running the
      SharedArchiveConsistency.java test with
      -XX:NativeMemoryTracking=detail
    + S8223363: Bad node estimate assertion failure
    + S8223396: [TESTBUG] several jfr tests do not clean up files
      created in /tmp
    + S8223502: Node estimate for loop unswitching is not correct:
      assert(delta <= 2 * required) failed: Bad node estimate
    + S8223504: Improve performance of forall loops by better
      inlining of "iterator()" methods
    + S8223678: Add Visual Studio Code workspace generation support
      (for native code)
    + S8223688: JShell: crash on the instantiation of raw anonymous
      class
    + S8223693: Memory wastage in size of per-region type buffers
      in GC
    + S8223718: Checks in check_slot_type_no_lvt() should be always
      executed
    + S8223766: Remains of ancient code in AWT initialization
    + S8223773: DateTimeFormatter Fails to throw an Exception on
      Invalid CLOCK_HOUR_OF_AMPM and HOUR_OF_AMPM
    + S8223777: In posix_spawn mode, failing to exec() jspawnhelper
      does not result in an error
    + S8223804: [macos] remove obsoleted reference to security
      framework in launcher code
    + S8223805: DocCommentParser should allow for <main> and </main>
    + S8223937: PIT: java/awt/Window/ShapedAndTranslucentWindows/
      /StaticallyShaped.java listed twice in ProblemList
    + S8224011: Failure handling in ExecuteWithLog fails in
      run-test-prebuilt
    + S8224056: Fix some assignments of string literals to LPSTR
      (instead of LPCSTR)
    + S8224081: SOCKS v4 doesn't work with IPv6
    + S8224082: NPE in javadoc Reporter
    + S8224083: javadoc Reporter generates warning for Kind.NOTE
    + S8224096: Add relevant bugid to java/awt/Window/
      /ShapedAndTranslucentWindows/StaticallyShaped.java in
      ProblemList
    + S8224152: [macOS] ProblemList tests that leave rubbish on the
      screen
    + S8224172: assert(jfr_is_event_enabled(id)) failed: invariant
    + S8224181: On child process spawn, child may write to random
      file descriptor instead of the fail pipe
    + S8224240: Properties.load fails to throw IAE on malformed
      unicode in certain circumstances
    + S8224247: AllocateOldGenAt fires assertion failure
    + S8224257: fix issues in files generated by pandoc
    + S8224538: LoadBarrierNode::common_barrier must check address
    + S8224580: Matcher can cause oop field/array element to be
      reloaded
    + S8224600: Provide VM.events command
    + S8224629: Unnecessary cast in LambdaToMethod
    + S8224632: testbug: java/awt/dnd/RemoveDropTargetCrashTest/
      /RemoveDropTargetCrashTest.java fails on MacOS
    + S8224648: assert(!exceeding_node_budget()) failed: Too many
      NODES required! failure with ctw
    + S8224687: Add clarifying overrides of Element.asType to more
      specific subinterfaces
    + S8224692: runtime/appcds tests crash in
      "HotSpotJVMCI::compute_offset" when running in Graal as JIT
      mode
    + S8224705: Tests that need to be problem-listed or have
      printer resources
    + S8224729: Cleanups in sun/security/provider/certpath/ldap/
      /LDAPCertStoreImpl.java
    + S8224730: java.net.ServerSocket::toString not invoking
      checkConnect
    + S8224767: Add String constants for Canonical XML 1.1 URIs
    + S8224771: backout RemoveDropTargetCrashTest.java fix to
      re-push with correct bugid
    + S8224778: test/jdk/demo/jfc/J2Ddemo/J2DdemoTest.java cannot
      find J2Ddemo.jar
    + S8224789: Parsing repetition count in regex does not detect
      numeric overflow
    + S8224790: Remove Xusage.txt file
    + S8224793: os::die() does not honor CreateCoredumpOnCrash
      option
    + S8224814: Remove dead JNIHandleBlock freelist code
    + S8224816: Provide os::processor_id() implementation for Mac OS
    + S8224821: java/awt/Focus/NoAutotransferToDisabledCompTest/
      /NoAutotransferToDisabledCompTest.java fails linux-x64
    + S8224824: ProblemList java/awt/Color/AlphaColorTest failure
      in linux_x64
    + S8224828: aarch64: rflags is not correct after safepoint poll
    + S8224830: test/jdk/java/awt/Focus/
      /ModalExcludedWindowClickTest/
      /ModalExcludedWindowClickTest.java fails on linux-x64
    + S8224931: disable JAOTC invokedynamic support until 8223533
      is fixed
    + S8224946: jrtfs URI to Path and Path to URI conversions are
      wrong
    + S8224962: ZGC: Strengthen ZHeap::is_oop()
    + S8224965: ZGC: Strengthen ZHeap::is_in()
    + S8224973: URLStreamHandler.openConnection(URL,Proxy) - spec
      and implementation mismatch
    + S8224978: Shenandoah: Allows root verifier to verify some
      roots outside safepoints with proper locks
    + S8224986: (str) optimize StringBuilder.append(CharSequence,
      int, int) for String arguments
    + S8224991: Problemlist javax/net/ssl/ServerName/
      /SSLEngineExplorerMatchedSNI.java
    + S8225007: java/awt/print/PrinterJob/
      /LandscapeStackOverflow.java may hang
    + S8225014: Separate ShenandoahRootScanner method for
      object_iterate
    + S8225016: Dead code due to VMOperationQueue::add() always
      returning true
    + S8225017: [TESTBUG] gc/shenandoah/oom/TestThreadFailure.java
      takes too long
    + S8225019: Update JVMCI
    + S8225020: Problem list some sanity test failures
    + S8225022: Put compiler/graalunit/JttThreadsTest.java on
      ProblemList-graal.txt
    + S8225032: Fix some C++ conformance issues in AWT Windows code
    + S8225037: java.net.JarURLConnection::getJarEntry() throws
      NullPointerException
    + S8225046: Shenandoah metrics logs refactoring
    + S8225048: Shenandoah x86_32 support
    + S8225060: java.net.DefaultInterface invokes
      NetworkInterface::getInetAddresses without doPriv
    + S8225061: Performance regression in Regex
    + S8225066: Add missing file
    + S8225077: fix references to broken link in java.compiler
      module
    + S8225084: gc/z/TestHighUsage.java fails with unexpected
      allocation stall
    + S8225094: Fix minor HTML issues in jdk.zipfs
    + S8225104: 32-bit build failures after JDK-8222252
    + S8225105: java/awt/Focus/ShowFrameCheckForegroundTest/
      /ShowFrameCheckForegroundTest.java fails in Windows 10
    + S8225110: IGV build definition uses non-secure transport
    + S8225111: Make Shenandoah tests work with 32-bit VMs
    + S8225117: java/math/BigInteger/SymmetricRangeTests.java fails
      with ParseException
    + S8225129: Fix minor HTML issues in java.naming
    + S8225134: Update man-page files
    + S8225140: Build fails if directory contains 'unix'
    + S8225151: JShell API: Fix position of @jls tag
    + S8225171: Remove leftovers in shenandoahBarrierSetC1.cpp
    + S8225178: [Solaris] os::signal() should call sigaction() with
      SA_SIGINFO
    + S8225179: (regex) Minor Pattern cleanup
    + S8225198: Optimize regex tree for greedy quantifiers of type
      {N,}
    + S8225199: [Graal] compiler/jvmci/compilerToVM/
      /IsMatureVsReprofileTest.java fails with
      -XX:CompileThresholdScaling=0.1
    + S8225202: Add missing include after JDK-8223320
    + S8225207: redundant <p> in Instrumentation.java
    + S8225208: Re-Problem list jdk/jshell/ExceptionsTest.java
      fails on windows
    + S8225212: ProblemList gc/stress/
      /TestReclaimStringsLeaksMemory.java
    + S8225214: Socket.getOption(SocketOption) not returning the
      expected type for the StandardSocketOptions.SO_LINGER
    + S8225217: Backout: JDK-8224814: Remove dead JNIHandleBlock
      freelist code
    + S8225225: stringStream internal buffer should always be zero
      terminated
    + S8225229: Shenandoah: trim down default number of GC threads
    + S8225305: ProblemList java/lang/invoke/VarHandles tests
    + S8225306: bad headings in java.sql.rowset SyncProvider.java
    + S8225307: ProblemList compiler/codegen/TestCharVect2.java and
      compiler/c2/cr6340864/TestLongVect.java
    + S8225309: HTML issues in jdk.jdi module
    + S8225314: broken links in java.base
    + S8225315: test java/util/ArrayDeque/WhiteBox.java isn't part
      of the jdk_collections test group
    + S8225324: Bad HTML in jdk.jfr module-info.java
    + S8225341: Shenandoah: CM::update_thread_roots() needs to
      handle derived pointers
    + S8225342: Shenandoah: use COMPILER2_OR_JVMCI macro
      consistently
    + S8225346: Convert file to HTML5
    + S8225348: serviceability/dcmd/vm/EventsTest.java failed
    + S8225353: Add @jls links to java.lang.Enum

-------------------------------------------------------------------
Fri Jun 14 07:48:32 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+23
  * Fixes:
    + S6682540: Incorrect SASL DIGEST-MD5 behavior
    + S7061590: Javadoc issues in Charset and StandardCharsets
    + S7107615: scalability bloker in javax.crypto.JceSecurity
    + S8042904: apple.security.KeychainStore.getSalt() calling
      generateSeed()
    + S8046018: JVMTI Spec: can_redefine_any_class capability spec
      is inconsistent
    + S8202651: Test ComodoCA.java fails
    + S8213416: Replace some enums with static const members in
      hotspot/compiler
    + S8214563: Use {@systemProperty} in specification of system
      properties in java.nio packages
    + S8214565: Use {@systemProperty} for definitions of system
      properties
    + S8215156: Deprecate the -Xfuture option
    + S8216553: JrtFIleSystemProvider getPath(URI) omits /modules
      element from file path
    + S8217089: JFR: Lazy install os interface components for
      improved startup
    + S8219147: Javadoc should expose covariant return type
      overrides
    + S8220394: bufferedStream does not honor size limit
    + S8220449: serviceability/dcmd/compiler/CodelistTest.java
      failure
    + S8220478: java/util/concurrent/ConcurrentHashMap/ToArray.java
      timed out intermittently
    + S8220688: [TESTBUG] runtime/NMT/MallocStressTest.java timed
      out
    + S8220702: compiling in the context of an automatic module
      disallows --add-modules ALL-MODULE-PATH
    + S8221121: applications/microbenchmarks are encountering
      crashes in tier5
    + S8221431: Support for Unicode 12.1
    + S8221543: Indify-dependent microbenchmarks are broken
    + S8221734: Deoptimize with handshakes
    + S8222318: javadoc does not accept valid HTML5 entity names
    + S8222414: bring googlemock v1.8.1
    + S8223053: [xmldsig] Add KeyValue::EC_TYPE
    + S8223245: Miscellaneous changes imported from jsr166 CVS
      2019-06
    + S8223379: Clarify ForkJoinPool.getStealCount() javadoc
    + S8223392: Add missing BitMap comments for JDK-8222986
    + S8223482: Unsupported ciphersuites may be offered by a TLS
      client
    + S8223553: Fix code constructs that do not compile with the
      Eclipse Java Compiler
    + S8223581: C2 compilation failed with assert(!q->is_MergeMem())
    + S8223658: Performance regression of XML.validation in 13-b19
    + S8223660: jtreg: Decouple Unsafe from RTM tests
    + S8223814: SA: jhsdb common help needs to be more detailed
    + S8224012: AnnotatedType implementations of hashCode() lead to
      StackOverflowError
    + S8224024: java/util/concurrent/BlockingQueue/
      /DrainToFails.java testBounded fails intermittently
    + S8224035: Replace wildcard address with loopback or local
      host in tests - part 9
    + S8224087: Compile C code for at least C99 Standard compliance
    + S8224115: Shenandoah: Eliminate RWLock that protects recorded
      nmethod data array
    + S8224145: Build compare script fails intermittently on test
      image native libraries
    + S8224165: [TESTBUG] Docker tests produce excessive output
    + S8224176: Fix inconsistencies in @jls tags in
      java.util.concurrent
    + S8224177: Harden annotation processing framework to irregular
      behavior from processors
    + S8224185: ZGC: Introduce "High Usage" rule
    + S8224202: Speed up Properties.load
    + S8224221: add memprotect calls to event log
    + S8224252: [TESTBUG] hotspot/test/serviceability/sa/sadebugd/
      /SADebugDTest.java is timing out again after fix for
      JDK-8163805
    + S8224256: test/jdk/java/security/SecureClassLoader/
      /DefineClass.java hardcodes 127.0.0.1
    + S8224264: [TESTBUG] HelloDynamicCustom.java test failed on
      the Windows platform in tiers 6 and 7 testing
    + S8224477: java.net socket types new-style socket option
      methods - spec and impl mismatch
    + S8224496: Shenandoah compilation fails with
      assert(is_CountedLoopEnd()) failed: invalid node class
    + S8224539: C2 compilation fails during ArrayCopyNode
      optimizations with assert(i < _max) failed: oob: i=1, _max=1
    + S8224548: [TESTBUG] runtime/appcds/jvmti/
      /ClassFileLoadHookTest.java failed: must be shared
    + S8224558: Fix replicateB encoding
    + S8224584: Shenandoah: Eliminate forwarding pointer word
    + S8224603: Replace wildcard address with loopback or local
      host in tests - part 11
    + S8224626: Shenandoah: Elide barriers on uncommon traps
    + S8224628: Note that type parameters are not visited by
      ElementScanners
    + S8224635: Revert 8224256 and add back java/security/
      /SecureClassLoader/DefineClass.java test
    + S8224652: 32-bit build failures after JDK-8213084
    + S8224656: Problem list java/security/SecureClassLoader/
      /DefineClass.java until JDK-8224635 is fixed
    + S8224667: Shenandoah: Post-LRB cleanup
    + S8224671: AArch64: mauve System.arraycopy test failure
    + S8224672: (lib)hsdis-<arch>.so search incorrect after
      JDK-8213084
    + S8224677: Dtrace .d files clash with make dependency .d files
    + S8224679: Shenandoah: Make
      ShenandoahParallelCodeCacheIterator noncopyable
    + S8224682: Remove the
      com.sun.CORBA.ORBIorTypeCheckRegistryFilter security property
    + S8224689: ProblemList runtime/appcds/
      /SharedArchiveConsistency.java
    + S8224698: ConcurrentSkipListMap.java does not compile with
      the Eclipse Java Compiler
    + S8224706: [TESTBUG] problem list failing JDK docker API tests
    + S8224715: ProblemList compiler/graalunit/HotspotJdk9Test.java
    + S8224723: [TESTBUG] compiler/arraycopy/
      /TestArrayCopyWithBadOffset.java failed
    + S8224727: Problem list test security/infra/java/security/cert/
      /CertPathValidator/certification/ActalisCA.java
    + S8224742: JLONG_FORMAT_W incompatible with type jlong
    + S8224750: Display thread once in Internal exceptions event
      log lines
    + S8224751: Shenandoah: Shenandoah Verifier should select
      proper roots according to current GC cycle
    + S8224761: Replace wildcard address with loopback or local
      host in tests - part 12
    + S8224763: Update man pages to show deprecation of
      -Xverify:none
    + S8224783: Javadoc of String strip methods uses link where
      linkplain would be better
    + S8224795: some runtime/SelectionResolution tests are timing
      out
    + S8224796: C code is not compiled correctly due to undefined
      "i386"
    + S8224836: Backout: JDK-8224626: Shenandoah: Elide barriers on
      uncommon traps
    + S8224870: Problemlist compiler/c2/Test8004741.java until
      JDK-8214904 is fixed
    + S8224875: Shenandoah: ParallelCleaning code unloading should
      take lock to protect shared code roots array
    + S8224880: AArch64: java/javac error with
      AllocatePrefetchDistance
    + S8224885: ProblemList sun/security/tools/keytool/
      /KeyToolTest.java and WeakAlgTest.java on Solaris
    + S8224908: Revert: 8216553: JrtFileSystemProvider getPath(URI)
      omits /modules element from file path
    + S8224932: Shenandoah: Rename ShenandoahHeapLock, make it
      general purpose lock
    + S8224945: googlemock update breaks the build of arm32 and ppc
    + S8224970: ShenandoahRootScanner::roots_do assert is too strong
    + S8224981: Problemlist test/jdk/sun/security/pkcs11/tls/tls12/
      /FipsModeTLS12.java
    + S8224982: JDK-8222318 breaks tools/doclint/html/
      /EntitiesTest.java
    + S8224984: Problemlist javax/net/ssl/SSLSocket/
      /Tls13PacketSize.java
    + S8225005: Xerces 2.12.0: License file

-------------------------------------------------------------------
Fri Jun 14 07:31:06 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+22
  * Fixes:
    + S8130017: use _FORTIFY_SOURCE in gcc fastdebug builds
    + S8160539: Stack frame scanning acquires
      DerivedPointerTableGC_lock mutex
    + S8163805: hotspot/test/serviceability/sa/sadebugd/
      /SADebugDTest.java failed with timed out
    + S8183273: Clarify Instrumentation interface should not be
      implemented outside java.instrument module
    + S8206879: Currency decimal marker incorrect for Peru
    + S8207812: Implement Dynamic CDS Archive
    + S8213084: Rework and enhance Print[Opto]Assembly output
    + S8214545: sun/management/jmxremote/bootstrap tests hang in
      revokeall.exe on Windows
    + S8215792: AArch64: String.indexOf generates incorrect result
    + S8218966: AArch64: String.compareTo() can read memory after
      string
    + S8218997: Xusage text, man help, etc doesn't mention -Xlog
      option.
    + S8219313: Support module specific stylesheets
    + S8219692: DOM and SAX parsers ignore namespace
    + S8219781: Localized names for Japanese era Reiwa in COMPAT
      provider
    + S8220072: GCC 8.3 reports errors in java.base
    + S8220166: Performance regression in deserialization (4-6% in
      SPECjbb)
    + S8220293: Deadlock in JFR string pool
    + S8220656: ARM32: -XX:MaxVectorSize=16 makes SIGILL
    + S8220672: [TESTBUG] TestCPUSets should check that cpuset does
      not exceed available cores
    + S8221507: Implement JFR Events for Shenandoah
    + S8221967: InternTest.java timed out
    + S8222154: upgrade gtest to 1.8.1
    + S8222169: java.lang.AssertionError switch expression in
      ternary operator - ?
    + S8222276: (zipfs) Refactoring and cleanups to prepare for
      JDK-8213031
    + S8222302: [TESTBUG]test/hotspot/jtreg/compiler/intrinsics/
      /sha/cli/TestUseSHAOptionOnUnsupportedCPU.java fails on any
      other CPU
    + S8222422: vmTestbase/nsk/jdi/ClassLoaderReference/
      /definedClasses tests failed with Unexpected Exception: null
    + S8222482: [Graal] Update java-allocation-instrumenter.jar
      handling in graalunit README.md
    + S8222492: G1 unnecessarily scans remembered set cards for
      regions that already have been evacuated
    + S8222548: Upgrading JDK 13 with the latest available jQuery
      3.4.1
    + S8222807: Address iteration with invalid ZIP header entries
    + S8222825: ARM32 SIGILL issue on single core CPU (not
      supported PLDW instruction)
    + S8223214: Inet6AddressImpl.loopbackAddress() should choose
      loopback address that is available
    + S8223306: Remove threads linked list (use ThreadsList's array
      in SA)
    + S8223313: Use handshakes for CountStackFrames.
    + S8223346: Update Graal
    + S8223438: add VirtualizationInformation JFR event
    + S8223442: java/nio/channels/SocketChannel/AdaptorStreams.java
      testConcurrentTimedReadWrite3(): failure
    + S8223444: Improve CodeHeap Free Space Management
    + S8223472: volatile long field corruption on x86_32
    + S8223499: Remove two DocuSign root certificates that are
      expiring
    + S8223572: ~ThreadInVMForHandshake() should call
      handle_special_runtime_exit_condition()
    + S8223585: vmTestbase/runtime/pcl/* get SEGV in
      MetadataOnStackClosure::do_metadata(Metadata*)+0x0
    + S8223593: Refactor code for reallocating storage
    + S8223595: Consider updating jdk.jshell module description
    + S8223663: Update links for tool guides
    + S8223665: SA: debugd options should follow jhsdb style
    + S8223723: j.l.c.MethodTypeDesc.dropParameterTypes throws the
      undocumented exception: IllegalArgumentException
    + S8223725: j.l.c.MethodHandleDesc::of throws undocumented
      exception IllegalArgumentException
    + S8223726: j.l.c.MethodTypeDesc spec should contain precise
      assertions for one parameter's methods
    + S8223733: "Detail" in headings should be "Details"
    + S8223770: code_size2 still too small in some compressed oops
      configurations
    + S8223774: Shenandoah: Refactor ShenandoahRootProcessor and
      family
    + S8223803: j.l.c.MethodTypeDesc::insertParameterTypes doesn't
      control type of parameters
    + S8223856: Replace wildcard address with loopback or local
      host in tests - part 8
    + S8223910: TestFloatJNIArgs and TestTrichotomyExpressions time
      out with Graal as JIT
    + S8223914: specification of j.l.c.MethodTypeDesc::of should
      document better the exceptions thrown
    + S8223944: fix zlib related building docu and comments
    + S8223951: Shenandoah: Only need to update thread roots during
      final update refs
    + S8223956: Make SymbolTable and StringTable AllStatic
    + S8223961: ZGC: Unexpected behaviour due to
      ZMetronome::wait_for_tick() oversleeping
    + S8224010: Incorrect string interning
    + S8224014: Don't run test/jdk/java/net/NetworkInterface/
      /IPv4Only.java in IPv6 only environment
    + S8224017: [Graal] gc/z/TestUncommit.java fails with Graal
    + S8224018: test/jdk/java/net/ipv6tests/{Tcp,Udp}Test.java
      assume IPv4 is available
    + S8224019: test/jdk/java/nio/channels/DatagramChannel/
      /BasicMulticastTests.java assumes IPv4 is always available
    + S8224020: AsyncGetCallTrace test should not run on PPC64 or
      IA64
    + S8224023: Redo the fix for ErrorFile option does not handle
      pre-existing error files of the same name
    + S8224028: loop initial declarations introduced by JDK-8184770
    + S8224031: Cannot parse switch expressions after type cast
    + S8224033: os::snprintf should be used in
      virtualizationSupport.cpp
    + S8224034: [TESTBUG] runtime/ErrorHandlerTest/ErrorHandler
      fails intermittently for case 13 on Windows
    + S8224038: Fix remaining InCSetState mentions
    + S8224042: Add private alignDown method to MappedByteBuffer
    + S8224043: Shenandoah: Remove clear_claimed_marks() from start
      of concurrent_traversal()
    + S8224105: Cannot parse JapaneseDate string on some specified
      locales
    + S8224119: Safepoint cleanup logging logs times for things it
      doesn't do
    + S8224160: Move G1RemSetScanClosure into g1RemSet.cpp file
    + S8224166: Create a taglet to better handle @jls and @jvms tags
    + S8224167: Refactor PtrQueue completed buffer processing
    + S8224170: Build failures after JDK-8207812 (Implement Dynamic
      CDS Archive)
    + S8224174: java.lang.Number has a default constructor
    + S8224175: Fix inconsistencies in @jls and @jvms tags
    + S8224179: Shenandoah: CTW test failures with traversal GC
    + S8224187: Refactor arraycopy_prologue to allow ZGC read
      barriers on arraycopy
    + S8224193: stringStream should not use Resouce Area
    + S8224201: Simplify JVM flag macro expansions
    + S8224203: Remove need to specify type when using FLAG_SET
      macros
    + S8224204: Replace wildcard address with loopback or local
      host in tests - part 10
    + S8224210: Shenandoah: Refactor ShenandoahRootScanner to
      support scanning CSet codecache roots
    + S8224230: [PPC64, s390] Support AsyncGetCallTrace
    + S8224248: test/jdk/java/net/InetAddress/CheckJNI.java assumes
      127.0.0.1 is available
    + S8224487: outputStream should not be copyable
    + S8224495: Shenandoah: Do not rescan code roots in final mark
      pause if it is not degenerated GC
    + S8224500: Put HeapMonitorStatArrayCorrectnessTest in the
      problem list
    + S8224508: Shenandoah: Need to update thread roots in final
      mark for piggyback ref update cycle
    + S8224522: Shenandoah should apply barriers on deoptimization
    + S8224525: Shenandoah: Eliminate shenandoah verifier's
      side-effects
    + S8224529: [TESTBUG] JFR TestShenandoahHeapRegion* tests fail
      on build w/o Shenandoah
    + S8224568: minimal and zero build fails after JDK-8213084
    + S8224570: Update ProblemList-graal.txt
    + S8224573: Fix windows build after JDK-8221507
    + S8224579: ResourceMark not declared in
      shenandoahRootProcessor.inline.hpp with
      --disable-precompiled-headers
    + S8224589: Improve startup behavior of SecurityProperties

-------------------------------------------------------------------
Tue May 21 09:15:36 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+21
  * Fixes:
    + S7141393: [macosx] CARemoteLayer code refactoring and unit
      test
    + S8042215: javax/management/remote/mandatory/connection/
      /ReconnectTest.java NoSuchObjectException no such object in
      table
    + S8130266: Change the mechanism by which JDK loads the
      platform-specific GraphicsEnvironment class
    + S8144125: [macOS] ava/awt/event/ComponentEvent/
      /MovedResizedTwiceTest/MovedResizedTwiceTest.java failed
      automatically
    + S8184770: JDWP support for IPv6
    + S8189208: Cleanup ancient argument processing code
    + S8191808: Configurable read timeout for CRLs
    + S8200400: Restrict Sasl mechanisms
    + S8200545: Improve filter for enqueued deferred cards
    + S8208179: Devanagari not shown with logical fonts on Windows
      after removal of Lucida Sans from JDK
    + S8211826: StringIndexOutOfBoundsException happens via
      GetStringUTFRegion()
    + S8212676: AWT SystemColor setting on CDE
    + S8212700: Change the mechanism by which JDK loads the
      platform-specific AWT Toolkit
    + S8212701: remove sun.desktop property from launcher code
    + S8213232: Unix/X11 setCompositionEnableNative issue
    + S8214046: [macosx] Undecorated Frame does not Iconify when
      set to
    + S8214796: Create a jlink plugin for stripping debug info
      symbols from native libraries
    + S8215470: Bad EnclosingMethod attribute on classes declared
      in lambdas
    + S8216008: -Djavax.accessibility.assistive_technologies empty
      list leads to exception
    + S8218917: KeyEvent.getModifiers() returns inconsistent values
      for ALT keys
    + S8219023: Investigate syncing JVMTI spec version with JDK
      version
    + S8219060: -linksource broken with modules
    + S8219459: oopDesc::is_valid() is broken
    + S8219914: Change the environment variable for Java Access
      Bridge logging to have a directory.
    + S8220673: Add test library support for determining platform
      IP support
    + S8221253: TLSv1.3 may generate TLSInnerPlainText longer than
      2^14+1 bytes
    + S8221340: [TESTBUG] TestCgroupMetrics.java fails after fix
      for JDK-8219562
    + S8221432: Upgrade CLDR to Version 35.1
    + S8221478: Disable VerifySharedSpaces by default
    + S8221569: JFR tool produces incorrect output when both
      --categories and --events are specified
    + S8221696: MappedByteBuffer.force method to specify range
    + S8221738: ErrorFile option does not handle pre-existing error
      files of the same name
    + S8221759: Crash when completing \"java.io.File.path\"
    + S8222015: Small VM.metaspace improvements
    + S8222136: Remove two Comodo root CA certificates that are
      expiring
    + S8222251: preflow visitor is not visiting lambda expressions
    + S8222292: runtime/exceptionMsgs/ArrayIndexOutOfBoundsException/
      /ArrayIndexOutOfBoundsExceptionTest.java timeout but test
      passed
    + S8222362: Upgrade to Freetype 2.10.0
    + S8222438: Drop of outdated logging in the com.sun.media.sound
      package
    + S8222480: Implementation: JEP 351: ZGC: Uncommit Unused Memory
    + S8222519: ButtonDemoScreenshotTest fails randomly with "still
      state to be reached"
    + S8222533: jtreg test jdk/internal/platform/cgroup/
      /TestCgroupMetrics.java fails on SLES12.3 linux ppc64le
      machine
    + S8222720: Provide extended VMWare/vSphere virtualization
      related info in the hs_error file on linux/windows x86_64
    + S8222789: Replace the usage of "Sun's Xinerama API" by the
      "XFree86's Xinerama API" on Solaris
    + S8222799: java.beans.Introspector uses an obsolete methods
      cache
    + S8222819: Remove setting of headless property on MacOS from
      launcher code.
    + S8222830: PIT: java/awt/Window/AlwaysOnTop/AutoTestOnTop.java
      listed twice in ProblemList
    + S8222841: Incorrect static call stub interactions with class
      unloading
    + S8222969: Migrate RuleBasedCollatorTest to JDK Repo
    + S8222987: sun/security/tools/keytool/PSS.java times out on
      Solaris-SPARC
    + S8222991: Xerces 2.12.0: Validation
    + S8223018: Rename G1RemSet::*oops_into_collection_set_do
      methods
    + S8223040: Add a AsyncGetCallTrace test
    + S8223063: Support CNG RSA keys
    + S8223136: Move compressed oops functions to CompressedOops
      class
    + S8223186: HotSpot compile warnings from GCC 9
    + S8223215: Shenandoah: Support verifying subset of roots
    + S8223235: [Graal] compiler/jsr292/NonInlinedCall/
      /InvokeTest.java failed time out
    + S8223237: Replace use of string.equals("") with isEmpty() in
      java.desktop
    + S8223307: enable the Stack Execution Disable flag for JDK
      binaries on AIX
    + S8223380: [Graal] compiler/c2/Test8062950.java failed with
      time out.
    + S8223427: [TESTBUG] Disable JTReg Shenandoah tests when Graal
      is enabled
    + S8223441: HeapMonitorStatArrayCorrectnessTest fails due to
      sampling determinism
    + S8223454: Reduce String concatenation shapes by folding
      initialLengthCoder into last mixer
    + S8223465: Replace wildcard address with loopback or local
      host in tests - part 3
    + S8223531: [Graal] assert(type() == T_INT) failed: type check
    + S8223532: Don't try creating IPv4 sockets in
      NetworkInterface.c if IPv4 is not supported
    + S8223537: testlibrary_tests/ctw/ClassesListTest.java fails
      with Agent timeout frequently
    + S8223539: compiler/graalunit/HotspotTest.java
      hotspot.test.CheckGraalIntrinsics AssertionError: found
      plugins for intrinsics
    + S8223555: Cleanups in cacerts tests
    + S8223573: Replace wildcard address with loopback or local
      host in tests - part 4
    + S8223574: add more thread-related system settings info to
      hs_error file on AIX
    + S8223583: Build failure after JDK-8223567 (Rename
      ShenandoahBrooksPointer to ShenandoahForwarding)
    + S8223589: Build failures after JDK-8223534 (add back fixed
      test_markOop.cpp)
    + S8223597: jdk/nio/zipfs/ZipFSTester.java RuntimeException:
      CHECK_FAILED! (getAttribute.crc <entries20> failed 6af4413c
      vs 0 ...)
    + S8223599: minimal build fails after JDK-8185525
    + S8223617: code_size2 needs adjustments
    + S8223619: Move VerifyOption out of Universe
    + S8223620: Move IsGCActiveMark implementation out of header
    + S8223621: Move Universe usage out of oopRecorder.hpp
    + S8223622: Move Universe usage out of memAllocator.hpp
    + S8223623: Move oopFactory function definitions out of
      oopFactory.hpp
    + S8223624: Cleanup includes of universe.hpp
    + S8223626: move print() functions to cpp files
    + S8223627: jdk-13+20 bundle name contains null instead of ea
    + S8223632: Replace wildcard address with loopback or local
      host in tests - part 5
    + S8223637: Fix build breakage after 8223136
    + S8223638: Replace wildcard address with loopback or local
      host in tests - part 6
    + S8223639: [JVMCI] jvmciCompiler.cpp needs to include
      "oops/objArrayOop.inline.hpp""
    + S8223645: AArch64 build broken by fix for 8223136
    + S8223651: Build fails with --with-jvm-features=-jfr and
      --disable-precompiled-headers
    + S8223652: Rename
      IPSupport.skipIfCurrentConfigurationIsInvalid() to
      IPSupport.throwSkippedExceptionIfNonOperational()
    + S8223654: Clean up @jls references in com.sun.source
    + S8223657: Remove unused THREAD argument from SymbolTable
      functions
    + S8223667: ASAN build broken
    + S8223675: arm32 build failure after 8223136 (Move compressed
      oops functions to CompressedOops class)
    + S8223676: Minimal VM build failure after 8223136 (Move
      compressed oops functions to CompressedOops class)
    + S8223685: used bundled zlib on AIX by default
    + S8223716: sun/net/www/http/HttpClient/MultiThreadTest.java
      should be more resilient to unexpected traffic
    + S8223730: URLClassLoader.findClass() can throw
      IndexOutOfBoundsException
    + S8223737: Fix HostsFileNameService for IPv6 literal addresses
    + S8223759: Shenandoah should allow arbitrarily low initial
      heap size
    + S8223762: Shenandoah: overflows in calculations involving
      heap capacity
    + S8223767: Shenandoah fails to build on Solaris x86_64
    + S8223779: Build failure after 8223040 (Add a
      AsyncGetCallTrace test)
    + S8223798: Replace wildcard address with loopback or local
      host in tests - part 7
    + S8223810: HotSpot compile warnings from VS2017
    + S8223822: Add gc IDs in the log of gc verification
    + S8223880: Update sun/net/ftp/FtpURL.java and
      sun/net/ftp/FtpURLConnectionLeak.java to work with IPv6
      addresses
    + S8223885: hs_err and replay file may contain garbage when
      overwriting existing file
    + S8223911: Disable bad node budget verification until the fix
    + S8223917: Problemlist compiler/ciReplay/TestServerVM.java
    + S8223921: Update SocketReadWrite benchmark
    + S8223980: Shenandoah: Refactor and fix ObjArrayChunkedTask
      verification

-------------------------------------------------------------------
Tue May 21 09:09:27 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+20
  * Fixes:
    + S8146726: Improve AbstractProcessor to issue warnings for
      repeated information
    + S8185525: Add JFR event for DictionarySizes
    + S8198505: Remove CollectorPolicy and its subclasses
    + S8204203: Many pkcs11 tests failed in Provider
      initialization, after compiler on Windows changed
    + S8216137: assert failed: Live node limit exceeded.
    + S8216978: Drop support for pre JDK 1.4 SocketImpl
      implementations
    + S8217364: Custom URLStreamHandler for jrt or file protocol
      can override default handler
    + S8217846: [Graal] vmTestbase/nsk/jdi/VirtualMachine/
      /instanceCounts/instancecounts003/instancecounts003.java crash
    + S8218700: infinite loop in
      HotSpotJVMCIMetaAccessContext.fromClass after OutOfMemoryError
    + S8218875: Add new FileSystems.newFileSystem methods
    + S8219013: Update Apache Santuario (XML Signature) to version
      2.1.3
    + S8219138: Miscellaneous changes imported from jsr166 CVS
      2019-05
    + S8219202: Use Unsynchronized StringBuilder in
      sun.net.www.ParseUtil
    + S8219483: j.l.c.ClassDesc::nested(String, String...) doesn't
      throw NPE if any arg is null
    + S8219520: assert failed: Live node limit exceeded.
    + S8219902: C2: MemNode::can_see_stored_value() ignores casts
      which carry control dependency
    + S8219991: New fix of the deadlock in
      sun.security.ssl.SSLSocketImpl
    + S8220037: Inconsistencies of generated timezone files between
      Windows and Linux
    + S8220248: fix headings in java.util.concurrent
    + S8220724: TestBiasedLockRevocationEvents fails while matching
      revoke events to VMOperation events
    + S8220793: (fs) No support for changing modification time of
      symlink
    + S8221120: CopyOnWriteArrayList.set should always have
      volatile write semantics
    + S8221359: Eliminate SATBMarkQueueSet::filter_thread_buffers
    + S8221509: Refactor assert( G1CollectedHeap::used() ==
      recalculate_used() ) with better message
    + S8221542: ~15% performance degradation due to less optimized
      inline decision
    + S8221892: ThreadPoolExecutor: Thread.isAlive() is not
      equivalent to not being startable
    + S8222074: Enhance auto vectorization for x86
    + S8222500: runtime/8176717/TestInheritFD.java failed with
      java.nio.file.NoSuchFileException:
      /tmp/communication7071713601211876892.txt
    + S8222534: VerifyBeforeExit is not honored when System.exit is
      called
    + S8222665: Update Graal
    + S8222667: vmTestbase/nsk/jdi/ThreadStartRequest/
      /addThreadFilter/addthreadfilter002/TestDescription.java
      failed with "event IS NOT a breakpoint"
    + S8222670: pathological case of JIT recompilation and code
      cache bloat
    + S8222738: Shenandoah: assert(is_Proj()) failed when running
      cometd benchmarks
    + S8222893: markOopDesc::print_on() is a bit confused
    + S8222895: StackOverflowError in custom security manager that
      relies on ClassSpecializer
    + S8222926: Shenandoah build fails with
      --with-jvm-features=-compiler1
    + S8222930: ConcurrentSkipListMap.clone() shares size variable
      between original and clone
    + S8222949: add condy support to javac's pool API
    + S8222955: Optimize String.replace(CharSequence, CharSequence)
      for common cases
    + S8222986: Add parameter to skip clearing CHeapBitMaps when
      resizing
    + S8222992: Shenandoah: Pre-evacuate all roots
    + S8223044: Add back exception checking in tests
    + S8223052: Cleanup: NodeSortRecord
    + S8223054: [TESTBUG] Put graalJarsCP before existing classpath
      in GraalUnitTestLauncher
    + S8223064: Minor cleanups in ResolvedMethodTable
    + S8223137: Rename predicate 'do_unroll_only()' to
      'is_unroll_only()'.
    + S8223138: Small clean-up in loop-tree support.
    + S8223139: Rename mandatory policy-do routines.
    + S8223140: Clean-up in 'ok_to_convert()'.
    + S8223141: Change (count) suffix _ct into _cnt.
    + S8223142: Clean-up WS and CB.
    + S8223143: Restructure/clean-up for 'loopexit_or_null()'.
    + S8223145: Replace wildcard address with loopback or local
      host in tests - part 1
    + S8223171: Redundant nmethod dependencies for effectively
      final methods
    + S8223174: Pattern.compile() can throw confusing
      NegativeArraySizeException
    + S8223177: Data race on JvmtiEnvBase::_tag_map in
      double-checked locking
    + S8223178: Improve FileSystems.newFileSystem example with map
      factory methods
    + S8223194: runtime/Shutdown/ShutdownTest.java due to
      "OutOfMemoryError: Java heap too small"
    + S8223227: Rename acquire_tag_map() to tag_map_acquire() in
      jvmtiEnvBase
    + S8223244: Fix usage of ARRAYCOPY_DISJOINT decorator
    + S8223248: [AIX] Remove old xlC 10 workaround for load acquire
    + S8223254: DataOutputStream/WriteUTF.java fails due to
      "OutOfMemoryError: Java heap space"
    + S8223258: Shenandoah: SRP::process_all_roots_slow processes
      JvmtiExport weak oops twice
    + S8223262: [AOT] jaotc crashes with
      assert(!(((ThreadShadow*)__the_thread__)->has_pending_exception()))
      failed: Should not allocate with exception pending
    + S8223265: Clarify operational semantics of
      java.util.Objects.equals()
    + S8223267: Fix incorrect usage of GCTraceTime in
      g1FullCollector and g1CollectedHeap
    + S8223308: ZGC: Remove ZGranuleMap::size()
    + S8223309: test failing due to self-assign-overloaded
    + S8223319: Add copyright footer to specs and man pages
    + S8223332: Update JVMCI
    + S8223335: Compare baseline builds on linux are failing
    + S8223353: (ch) Change channel close implementation to not
      wait for I/O threads
    + S8223359: JDK-8221359 breaks TestG1ParallelPhases.java
    + S8223389: Shenandoah optimizations fail with
      assert(!phase->exceeding_node_budget())
    + S8223391: Unsynchronized iteration of ClassLoaderDataGraph
    + S8223395: PPC64: Improve comments in the JVM signal handler
      to match ISA text
    + S8223397: gc+promotion log lines are missing the GC id
    + S8223412: tier1 build failure after 8222893
    + S8223414: ProblemList java/lang/ref/ReachabilityFenceTest.java
      when running in Graal as JIT mode
    + S8223416: Exclude javax/management/monitor/
      /DerivedGaugeMonitorTest.java until JDK-8042211 is fixed.
    + S8223422: [Graal]
      assert(!m->can_be_statically_bound(InstanceKlass::cast(ctxk)))
      failed: redundant
    + S8223437: Backout JDK-8219974 Restore static callsite
      resolution for the current class
    + S8223445: compiler/intrinsics/mathexact/
      /LongMulOverflowTest.java java timeout
    + S8223446: Shenandoah breaks alignment with some
      HumongousThreshold values
    + S8223447: Stabilize gc/shenandoah/TestStringDedupStress test
    + S8223448: Shenandoah disabled barriers blocks omit LRB
    + S8223449: Unprotected UseCompressedOops block in
      gc/shenandoah/shenandoahBarrierSetC1_x86.cpp
    + S8223450: Disable Shenandoah C2 barriers verification for
      x86_32
    + S8223457: java.net.ServerSocket protected constructor should
      throw NPE if impl null
    + S8223463: Replace wildcard address with loopback or local
      host in tests - part 2
    + S8223464: Improve version string for Oracle CI builds
    + S8223481: gtest/GTestWrapper.java failed due to "assert(ret
      == 0) failed: sem_post failed; error='Invalid argument'
      (errno=EINVAL)"
    + S8223534: add back fixed test_markOop.cpp
    + S8223567: Rename ShenandoahBrooksPointer to
      ShenandoahForwarding
    + S8223570: Shenandoah needs to acquire lock before
      CLDG::clear_claimed_marks

-------------------------------------------------------------------
Tue May 21 08:50:44 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+19
  * Fixes:
    + S8036608: Key.getAlgorithm link to standard algorithm names
      needs to be updated
    + S8074355: make MutexLocker smarter about non-JavaThreads
    + S8129315: java/net/Socket/LingerTest.java and
      java/net/Socket/ShutdownBoth.java timeout intermittently
    + S8139965: Hang seen when using
      com.sun.jndi.ldap.search.replyQueueSize
    + S8202414: Unsafe write after primitive array creation may
      result in array length change
    + S8213399: DecoderLocker is unused
    + S8215113: Sampling interval not always correct
    + S8216577: Add GlobalSign's R6 Root certificate
    + S8218152: [javac] fails and exits with no error if a bad
      annotation processor provided
    + S8218280: LineNumberReader throws "Mark invalid" exception if
      CRLF straddles buffer.
    + S8219403: JVMCIRuntime::adjust_comp_level should be replaced
    + S8219487: j.l.c.ClassDesc spec should contain precise
      assertions for one parameter's methods
    + S8219807: C2 crash in IfNode::up_one_dom(Node*, bool)
    + S8220388: Increase -inlinehint-threshold for Clang to avoid
      G1 pause time regression
    + S8220497: Improve Javadoc search feature and add test coverage
    + S8220623: [JVMCI] Update JVMCI to support JVMCI based
      Compiler compiled into shared library
    + S8220795: Rework naked_short_nanosleep on Windows to improve
      time-to-safepoint
    + S8220813: update hotspot tier1_gc tests depending on GC to
      use @requires vm.gc.X
    + S8220818: Validator does not find missing match for keyref
      error
    + S8221267: Document the jdk.net.URLClassPath
      .showIgnoredClassPathEntries system property
    + S8221592: C2 compilation failed with assert(!q->is_MergeMem())
    + S8221639: [i386] expand_exec_shield_cs_limit workaround is
      undefined code after JDK-8199717
    + S8221786: ZGC: Increase max heap size to 16TB
    + S8221988: add possibility to build with Visual Studio 2019
    + S8221991: Improve the HTML for the inheritance tree for a type
    + S8222137: Remove T-Systems root CA certificate
    + S8222440: (zipfs) JarFileSystem does not correctly handle
      versioned entries if no root entry is present
    + S8222462: Introduce CollectedHeap::unused()
    + S8222469: ZGC: Generalize ZPageCache::flush()
    + S8222518: Remove unnecessary caching of Parker object in
      java.lang.Thread
    + S8222529: sun.jdwp.listenerAddress agent property uses wrong
      encoding
    + S8222562: Don't set IPV6_V6ONLY when IPv4 is not available
    + S8222637: Obsolete NeedsDeoptSuspend
    + S8222664: runtime/appcds/sharedStrings/
      /SharedStringsStress.java assert GC active during NoGCVerifier
    + S8222743: Xerces 2.12.0: DOM Implementation
    + S8222744: add support for generating method handles from a
      variable symbol
    + S8222749: vmTestbase/nsk/jdi/ThreadStartRequest/
      /addThreadFilter/addthreadfilter001/TestDescription.java
      failed with "eventSet1.size() != 3 :: 2"
    + S8222769: [TESTBUG] TestJFRNetworkEvents should not rely on
      hostname command
    + S8222774: (ch) Replace uses of stateLock and blockingLock
      with j.u.c. locks
    + S8222811: Consolidate MutexLockerEx and MutexLocker
    + S8222821: com/sun/jdi/ExceptionEvents.java failed
    + S8222852: Reduce String concat combinator tree shapes by
      folding constants into prependers
    + S8222888: [TESTBUG] docker/TestJFREvents.java fails due to
      "RuntimeException: JAVA_MAIN_CLASS_ is not defined"
    + S8222913: Add Jib support for VERSION_EXTRA*
    + S8222934: mark new VM option
      AllowRedefinitionToAddOrDeleteMethods as deprecated
    + S8222935: Fix ExceptionCheckingJniEnv system
    + S8222952: Typo in test/hotspot/jtreg/TEST.groups is causing
      test harness failures
    + S8222970: Update ProblemList for vmTestbase/nsk/jdb/eval/
      /eval001/eval001.java
    + S8222977: Fix shenandoah broken with JDK-8222811
    + S8222980: Upgrade IANA Language Subtag Registry to Version
      2019-04-03
    + S8222988: Use MonitorLocker rather than MutexLocker when
      wait/notify used
    + S8223003: SunMSCAPI keys are not cleaned up
    + S8223015: Cleanups for zipfs tests
    + S8223016: ZGC: Fix misaligned statistics printout
    + S8223020: aarch64: expand minI_rReg and maxI_rReg patterns
      into separate instructions
    + S8223026: [BACKOUT] Typo in test/hotspot/jtreg/TEST.groups is
      causing test harness failures
    + S8223078: Add microbenchmark for array
      copying/clearing/resizing
    + S8223146: [TESTBUG] new test vmTestbase/nsk/share/
      /ExceptionCheckingJniEnv/exceptionjni001/ fails on Windows
    + S8223184: Shenandoah: Missing roots in
      SRP::process_all_roots_slow
    + S8223190: Test gc/arguments/TestShrinkHeapInSteps.java breaks
      with change for JDK-8074355

-------------------------------------------------------------------
Tue May 21 08:42:46 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+18
  * Fixes:
    + S8192936: RI does not follow the JVMTI RedefineClasses spec
      that is too strict in the definition
    + S8213501: Deploy ExceptionJniWrapper for a few tests
    + S8215017: Improve String::equals warmup characteristics
    + S8215580: Remove support for `--no-module-directories`
    + S8217338: [Containers] Improve systemd slice memory limit
      support
    + S8218994: Consolidate indy and condy JVM information within
      a BootstrapInfo data structure
    + S8219566: JFR did not collect call stacks when
      MaxJavaStackTraceDepth is set to zero
    + S8219998: Eliminate inherently singleton lists
    + S8220231: Cache HarfBuzz face object for same font's text
      layout calls
    + S8220513: Wrapper Key may get deleted when closing sessions
      in SunPKCS11 crypto provider
    + S8221271: sun/security/pkcs11/tls/tls12/TestTLS12.java test
      failed
    + S8221598: Update Graal
    + S8221685: -XX:BytecodeVerificationRemote and
      -XX:BytecodeVerificationLocal should be diagnostic options
    + S8222280: Provide virtualization related info in the hs_error
      file on AIX
    + S8222295: more baseline cleanups from Async Monitor Deflation
      project
    + S8222332: PIT: Problemlist tests that times out consistently
    + S8222379: JFR TestClassLoadEvent.java failed due to
      EXCEPTION_ACCESS_VIOLATION
    + S8222391: javax/net/ssl/compatibility/Compatibility.java
      should be more flexible
    + S8222502: Replace 19,20 case alternatives with
      JVM_CONSTANT_Module/Package names
    + S8222526: Use of no longer existing jquery directory in
      script.js
    + S8222527: HttpClient doesn't send HOST header when tunelling
      HTTP/1.1 through http proxy
    + S8222532: (zipfs) Performance regression when writing
      ZipFileSystem entries in parallel
    + S8222550: runtime/MemberName/MemberNameLeak.java times out
    + S8222558: Rework ResolvedMethodTable verification
    + S8222668: Add @since tag to JapaneseEra.REIWA
    + S8222669: Create and use new html.Entity class
    + S8222713: Add OutputAnalyzer(Path) constructor
    + S8222735: Update doc/building.md with current Oracle build
      platforms and compilers
    + S8222741: jdi/EventQueue/remove/remove004 fails due to
      VMDisconnectedException
    + S8222747: [Graal] mx_subprocess files miss testing VM flags
    + S8222753: AAarch64: Add CPU implementer code for Ampere
    + S8222785: aarch64: add necessary masking for immediate shift
      counts
    + S8222786: Shenandoah get_barrier_strength should accept all
      shapes of (Weak)CAS reference barriers
    + S8222805: sun/security/pkcs11/tls/tls12/TestTLS12.java fails
      with Unsupported signature algorithm: rsa_pss_rsae_sha256
    + S8222817: Refactor printing processor to use streams
    + S8222838: Shenandoah: SEGV on accessing cset bitmap for NULL
      ptr
    + S8222843: Print Shenandoah cset map addresses in hs_err

-------------------------------------------------------------------
Tue May 21 08:39:15 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+17 (April 2019 CPU)
  * Security fixes
    + S8211936, CVE-2019-2602, bsc#1132728: Better String parsing
    + S8214809: CDS storage improvements
    + S8218453, CVE-2019-2684, bsc#1132732: More dynamic RMI
      interactions
  * Fixes:
    + S6684386: ElementIterator javadoc bug
    + S8163363: AArch64: Stack size in tools/launcher/Settings.java
      needs to be adjusted
    + S8180573: Refactor sun/security/tools shell tests to plain
      java tests
    + S8208066: compiler/graalunit/JttThreadsTest.java failed with
      org.junit.runners.model.TestTimedOutException: test timed out
      after 20 seconds
    + S8215407: javac should reject class files with bad
      EnclosingMethod attributes
    + S8216326: SSLSocket stream close() does not close the
      associated socket
    + S8217013: javadoc generates references to missing file
      overview-frame.html
    + S8217047: Provide a way to inject missing parameter names
    + S8217405: rmic should reject class files with preview
      features enabled
    + S8218147: make_walkable asserts on multiple calls
    + S8218468: Load barrier slow path node should be MachTypeNode
    + S8219718: ZGC: Make nmethod entry barriers and
      nmethod::is_unloading use ZNMethodDataOops
    + S8220349: The fix done for JDK-8214253 have caused issues in
      JTree behaviour
    + S8220382: Cleanup doclet instantiation
    + S8220477: Channels.newWriter() does not close if underlying
      channel throws an IOException
    + S8220625: tools/javac/classreader/8171132/
      /BadConstantValue.java failed with "did not see expected
      error"
    + S8220743: [TESTBUG] Review Runtime tests recently migrated
      from JDK subdirs
    + S8221263: [TEST_BUG] RemotePrinterStatusRefresh test is hard
      to use
    + S8221393: ResolvedMethodTable too small for StackWalking
      applications
    + S8221397: Support implementation-defined Map Modes
    + S8221445: FastSysexMessage constructor crashes MIDI
      reception thread
    + S8221644: jquery directory should be renamed
    + S8221661: javax.swing.text.View.getPreferredSpan(int axis)
    + S8221711: [TESTBUG] create more tests for JFR in container
      environment
    + S8221857: Collect code coverage for a subset of code
    + S8221885: Add intermittent test in the JavaSound to the
      ProblemList
    + S8221913: Add GC.selected() jtreg-ext function
    + S8221915: cleanup ticks related coding in os_perf_aix.cpp
      [aix]
    + S8221979: Cleanups for building Windows resources
    + S8222034: Thread-SMR functions should be updated to remove
      work around
    + S8222035: minimal inference context optimization is forcing
      resolution with incomplete constraints
    + S8222072: JVMTI GenerateEvents() sends CompiledMethodLoad
      events to wrong jvmtiEnv
    + S8222090: Add Hygon Dhyana processor support
    + S8222097: ProblemList tests that are failing recurringly and
      intermittently in PIT
    + S8222151: refactoring: enhancements to
      java.lang.Class::methodToString and
      java.lang.Class::getTypeName
    + S8222188: Shenandoah: Adjust Shenandoah work gang types
    + S8222224: vmTestbase/nsk/jvmti/SingleStep/singlestep001/
      /TestDescription.java fails
    + S8222231: Clean up interfaceSupport.inline.hpp duplicated code
    + S8222271: [s390] optimize register usage in C2 instruction
      forms for clearing arrays
    + S8222275: sun/security/tools/keytool/Serial64.java:
      assertTrue: expected true, was false
    + S8222289: Overhaul logic for reading/writing constant pool
      entries
    + S8222297: IRT_ENTRY/IRT_LEAF etc are the same as JRT
    + S8222299: [TESTBUG] move hotspot container tests to
      hotspot/containers
    + S8222300: Zero build broken after JDK-8222231
    + S8222327: java_lang_Thread _thread_status_offset, remove pre
      1.5 code paths
    + S8222333: fastdebug build broken after JDK-8221393
      (phase_mapping[] doesn't match enum Phase in
      WeakProcessorPhases)
    + S8222334: java -Xss0 triggers StackOverflowError
    + S8222378: Provide mechanism to query preview feature status
      for annotation processors
    + S8222387: Out-of-bounds access to CPU _family_id_xxx array
    + S8222395: Refactor the abstract classes of package and module
      index writer
    + S8222397: x86_32 tests with UseSHA1Intrinsics SEGV due to
      garbled registers
    + S8222403: Shenandoah: Remove ShenandoahAlwaysTrueClosure, use
      AlwaysTrueClosure instead
    + S8222410: java/nio/file/attribute/BasicFileAttributeView/
      /UnixSocketFile hangs when "nc" does not accept "-U"
    + S8222415: Xerces 2.12.0: Parsing Configuration
    + S8222417: compiler/loopopts/TestOverunrolling.java times out
    + S8222418: compiler/arguments/TestScavengeRootsInCode.java
      times out
    + S8222419: Shenandoah: Remove unused _par_state_string in
      ShenandoahRootProcessor
    + S8222425: Shenandoah: Move commonly used closures to separate
      files
    + S8222430: Add tests for ElementKind predicates
    + S8222444: Add a suggestion for non-US locale in the test doc
    + S8222484: Specialize generation of simple String
      concatenation expressions
    + S8222490: Shenandoah: Remove unused _par_state_string in
      ShenandoahRootEvacuator
    + S8222491: jcmd can fail converting UTF8 output to strings
    + S8222501: [TESTBUG] Docker support is always set to true in
      jtreg-ext/requires/VMProps.java
    + S8222510: Small cleanup for JDK launcher's make file
    + S8222522: Add configure options for Mac Bundle creation
    + S8222528: Fix javadoc headers in Nashorn sources
    + S8222627: Remove sneaky token 'Name' in jdk-version.m4

-------------------------------------------------------------------
Tue May 21 08:33:48 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgreade to upstream tag jdk-13+16
  * Fixes:
    + S8020637: Permissions.readObject doesn't enforce proper Class
      to PermissionCollection mappings
    + S8163326: Update the default enabled cipher suites preference
    + S8203364: Some serviceability/sa/ tests intermittently fail
      with java.io.IOException: LingeredApp terminated with
      non-zero exit code 3
    + S8216039: TLS with BC and RSASSA-PSS breaks
      ECDHServerKeyExchange
    + S8216551: GraalUnitTestLauncher should be executed as '@run
      driver'
    + S8217610: TLSv1.3 fail with ClassException when EC keys are
      stored in PKCS11
    + S8217728: Speed up incremental rerun of "make hotspot"
    + S8218049: Survivor MemoryMXBean used() size granularity is
      region based
    + S8218458: [TESTBUG] runtime/NMT/
      /CheckForProperDetailStackTrace.java fails with Expected
      stack trace missing from output
    + S8218483: Crash in "assert(_daemon_threads_count->get_value()
      > daemon_count) failed: thread count mismatch 5 : 5"
    + S8218547: Simplify JLI_Open on Windows in native code (libjli)
    + S8218668: Clean up evacuation of optional collection set
    + S8219241: Provide basic virtualization related info in the
      hs_error file on linux/windows x86_64
    + S8219861: Add new keytool -showinfo -tls command for
      displaying TLS configuration information
    + S8219918: ProblemList hotspot tests failing in SAP testing.
    + S8219993: AArch64: Compiled CI stubs are unsafely modified
    + S8220282: Add MethodHandle tests on accessing final fields
    + S8221325: Add information about swap space to
      print_memory_info() on MacOS
    + S8221430: StringBuffer(CharSequence) constructor truncates
      when -XX:-CompactStrings specified
    + S8221470: Print methods in exception messages in java-like
      Syntax.
    + S8221477: Inject os/cpu-specific constants into Unsafe from
      JVM
    + S8221529: [TESTBUG] Docker tests use old/deprecated image on
      AArch64
    + S8221530: Caller sensitive methods not handling caller = null
      when invoked by JNI code with no java frames on stack
    + S8221535: add steal tick related information to hs_error file
      [linux]
    + S8221539: [metaspace] Improve
      MetaspaceObj::is_metaspace_obj() and friends
    + S8221584: SIGSEGV in os::PlatformEvent::unpark() in
      JvmtiRawMonitor::raw_exit while posting method exit event
    + S8221597: A typo in the Java API doc for File.getUsableSpace()
    + S8221658: aarch64: add necessary predicate for ubfx patterns
    + S8221710: [TESTBUG] more configurable parameters for docker
      testing
    + S8221730: jcmd process name matching broken
    + S8221764: Reduce make Init.gmk logging overhead
    + S8221766: Load-reference barriers for Shenandoah
    + S8221833: Readability check in Symbol::is_valid not performed
      for some addresses
    + S8221836: Avoid recalculating String.hash when zero
    + S8221848: Shenandoah: ArrayCopy post-barrier improvements
    + S8221851: Use of THIS_FILE in hotspot invalidates precompiled
      header on Linux/GCC
    + S8221852: SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE should
      be selected at runtime, not build time
    + S8221853: Data race in compile broker (set_last_compile)
    + S8221871: javadoc should not set role=region on <section>
      elements
    + S8221872: Remove uses of ClassLoaderWeakHandle typedef in
      protection domain table
    + S8221880: Better customization for Windows RC properties
      FileDescription and ProductName
    + S8221882: Use fiber-friendly java.util.concurrent.locks in
      JSSE
    + S8221894: Add comments for docker tests in the test doc
    + S8221907: make reconfigure breaks when configured with
      relative paths
    + S8221917: serviceability/sa/TestPrintMdo.java fails on 32-bit
      platforms
    + S8221918: runtime/SharedArchiveFile/serviceability/
      /ReplaceCriticalClasses.java fails: Shared archive not found
    + S8221921: Implement size() / isEmpty() in immutable
      collections
    + S8221924: get(null) on single-entry unmodifiable Map returns
      null instead of throwing NPE
    + S8221980: Simplify Optional implementation
    + S8221981: Simplify Map/List/Set.of() implementation
    + S8221984: ZGC: Clean up ZOop
    + S8221992: Fix old method replacement in ResolvedMethodTable
    + S8221995: AARCH64: problems with CAS instructions encoding
    + S8221996: Bootcycle build broken
    + S8221997: fix headings in jdk.javadoc
    + S8222027: java/util/logging/LogManager/TestLoggerNames.java
      generates intermittent ClassCastException
    + S8222029: Optimize Math.floorMod
    + S8222032: x86_32 fails with "wrong size of mach node" on
      AVX-512 machine
    + S8222078: test/jdk/java/lang/reflect/exeCallerAccessTest/
      /exeCallerAccessTest.c build fails after 8221530
    + S8222082: Build of test/jdk/java/lang/reflect/
      /exeCallerAccessTest/exeCallerAccessTest.c still failing on
      Windows
    + S8222086: CodeCache::UnloadingScope needs to preserve and
      restore previous IsUnloadingBehavior
    + S8222089: [TESTBUG] sun/security/lib/cacerts/
      /VerifyCACerts.java fails due to cert within 90-day expiry
      window
    + S8222105: Add "use_" prefix to
      G1Policy::adaptive_young_list_length
    + S8222111: exeCallerAccessTest.c fails to build: control
      reaches end of non-void function
    + S8222125: Shenandoah: Crash when running with
      ShenandoahParallelSafepointThreads=1
    + S8222129: Shenandoah: Missing CompareAndSwapP/N case in
      get_barrier_strength()
    + S8222130: Shenandoah should verify roots after pre-evacuation
    + S8222133: Add temporary exceptions for root certs that are
      due to expire soon
    + S8222144: BuiltinClassLoader should create the CodeSource for
      jrt URLs lazily
    + S8222180: ZGC: ZForwarding::verify() failing when checking
      for duplicates
    + S8222185: Shenandoah should report "committed" as capacity
    + S8222186: Shenandoah should not uncommit below minimum heap
      size
    + S8222227: Shenandoah: Fix Traversal GC weak roots handling in
      final-traversal pause
    + S8222229: ProblemList
      compiler/jsr292/InvokerSignatureMismatch.java
    + S8222259: Shenandoah: Pre-evacuate string-dedup roots in
      Traversal GC
    + S8222264: Windows incremental build is broken with JDK-8217728

-------------------------------------------------------------------
Tue May 21 08:27:57 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+15
  * Fixes:
    + S8157372: C2: Node::cmp() should return bool
    + S8157404: Unable to read certain PKCS12 keystores from
      SequenceInputStream
    + S8168261: Use server cipher suites preference by default
    + S8174268: Declare a public field in JapaneseEra for the era
      starting May 2019
    + S8177960: Deprecate the Swing Motif Look and Feel and
      document it as unsupported on macOS
    + S8178335: fake pass: jdk/internal/ref/Cleaner/ExitOnThrow.java
    + S8189861: Refactor CacheFind
    + S8205432: Replace the placeholder Japanese era name
    + S8205934: Define jdk -source/-target version in
      version-numbers file
    + S8212627: [TESTBUG]
      runtime/CreateMirror/ArraysNewInstanceBug.java timed out
    + S8212904: JTextArea line wrapping incorrect when using UI
      scale
    + S8215105: java/awt/Robot/HiDPIScreenCapture/
      /ScreenCaptureTest.java: Wrong Pixel Color
    + S8215599: Remove support for javadoc "frames" mode
    + S8216539: tools/jar/modularJar/Basic.java times out
    + S8216971: [macosx swing] For JCheckBoxMenuItem
      actionPerformed() is called twice, when
      apple.laf.useScreenMenuBar=true and modifier is
      InputEvent.META_DOWN_MASK
    + S8217707: JNICALL declaration breaks Splash screen functions
    + S8217735: awt_image_GifImageDecoder_parseImage() "interlace"
      param has the wrong type
    + S8218418: (fs) Files.createSymbolicLink should use
      SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE (win)
    + S8218727: vmTestbase/nsk/jvmti/scenarios/events/EM04/em04t001/
      /TestDescription.java crash in native library
    + S8219733: Restore javadoc header styles
    + S8220016: Clean up redundant RSA services in the SunJSSE
      provider
    + S8220250: fix headings in java.desktop
    + S8220254: fix headings in java.xml
    + S8220320: Remove unused old code in GraphicsEnvironment on
      unix
    + S8220351: Cross-modifying code
    + S8220495: Update GIFlib library to the 5.1.8
    + S8220530: Build compare script does not compare the contents
      of the test image
    + S8220602: Shenandoah-SA: Enable best-effort implementation of
      heap walk
    + S8220610: Make CollectedHeap nmethod functions pure virtual
    + S8220632: Suggest recompiling with a larger value of
      -Xmaxerrs/-Xmaxwarns if diagnostics were suppressed
    + S8220664: Simplify ShenandoahUpdateHeapRefsClosure
    + S8220671: Initialization race for non-JavaThread PtrQueues
    + S8220707: [TESTBUG]
      serviceability/sa/TestHeapDumpForLargeArray.java fails with
      jtreg -vmoption:-Xmx < 8g
    + S8220786: Create new switch to redirect error reporting
      output to stdout or stderr
    + S8220792: Performance bottleneck in JavacFileManager.list()
    + S8221102: Allow GC threads to participate in threads claiming
      protocol
    + S8221118: Avoid eagerly creating JCDiagnostic for
      CompletionFailures
    + S8221146: ZGC: Reports too much relocated
    + S8221149: os::malloc checks MallocCatchPtr outside of ifdef
      ASSERT block
    + S8221153: ZGC: Heap iteration and verification pollutes GC
      statistics
    + S8221183: Avoid code cache walk in MetadataOnStackMark
    + S8221244: Unexpected behavior of
      PropertyDescription.getReadMethod for boolean properties
    + S8221257: Improve serial number generation mechanism for
      keytool -gencert
    + S8221304: Problem list
      java/awt/FontMetrics/MaxAdvanceIsMax.java
    + S8221341: Update Graal
    + S8221351: Crash in
      KlassFactory::check_shared_class_file_load_hook
    + S8221366: Search box tries to search for "Search"
    + S8221394: Clean up ConcurrentGCThread
    + S8221395: HttpClient leaving connections in CLOSE_WAIT state
      until Java process ends
    + S8221398: Move test NoClassDefFoundMsg.java to subdir
      exceptionMsgs/
    + S8221405: Fix Windows 32bit awt build
    + S8221408: Windows 32bit build build errors/warnings in hotspot
    + S8221411: NullPointerException in RasterPrinterJob without
      PrinterResolution
    + S8221412: lookupPrintServices() does not always update the
      list of Windows remote printers
    + S8221413: javac does not recognize variable assigned in
      switch expression as DA
    + S8221435: Shenandoah should not mark through weak roots
    + S8221436: Incorrect check of package in Line.Info.toString()
    + S8221437: assert(java_lang_invoke_ResolvedMethodName::
      vmtarget(resolved_method()) == m()) failed: Should not change
      after link resolution
    + S8221480: jcmd VM.metaspace shall print limits in basic mode
    + S8221482: Initialize VMRegImpl::regName[] earlier to prevent
      assert during PrintStubCode
    + S8221517: G1: Reserved page size for heap can be wrong
    + S8221532: Incorrect copyright header in FileSystemSupport_md.c
    + S8221533: Incorrect copyright header in
      DurationDayTimeImpl.java, DurationYearMonthImpl.java and
      XMLStreamException.java
    + S8221540: ZGC: Reduce width of zForwardingEntry::from_index
      field
    + S8221541: clean up functions in CompilerOracle
    + S8221558: Remove obsolete uses of
      OopStorage::ParState<'false, false> _par_state
    + S8221568: DataOutputStream/WriteUTF.java fails due to
      "OutOfMemoryError: Java heap space"
    + S8221596: test/hotspot/jtreg/runtime/containers/docker/
      /TestCPUSets.java failed with FileAlreadyExistsException
    + S8221610: Resurrect (legacy) JRE bundle target
    + S8221621: FindTests.gmk cannot handle "=" in TEST.groups
      comments
    + S8221629: Shenandoah: Cleanup class unloading logic
    + S8221643: Tighten up assert(_keep_alive >= 0) in
      CLD::inc_keep_alive
    + S8221648: Remove CollectedHeap::is_in_closed_subset()
    + S8221687: Deprecated j.u.jar.Attributes.Name attributes
      accidentally set to null
    + S8221688: Quarantine Shenandoah string dedup tests
    + S8221694: jstatLineCounts1 needs to be NaN resilient
    + S8221698: Remove redundant includes from popular header files
    + S8221701: Archive constant BaseLocales
    + S8221703: Rmic build for java.management.api has bad
      incremental behavior
    + S8221723: Avoid storing zero to String.hash
    + S8221724: Enable archiving of Strings with hash 0
    + S8221725: AArch64 build failures after JDK-8221408 (Windows
      32bit build build errors/warnings in hotspot)
    + S8221726: Multiple build failures after JDK-8221698 (Remove
      redundant includes from popular header files)
    + S8221731: Fix doclint handling of accessibility heading in
      java.desktop
    + S8221732: Introduce CollectedHeap::hash_oop()
    + S8221735: Shenandoah fails ctw/modules/
      /jdk_management_agent.java with Traversal
    + S8221748: Remove unused oopDesc::is_unlocked_oop()
    + S8221750: Shenandoah: Enable ThreadLocalHandshake by default
    + S8221751: Shenandoah: Improve SATB enqueueing
    + S8221762: Improve Main.gmk/FindTests.gmk bootstrap time
    + S8221763: Build fails when using
      --with-jvm-features=-g1gc,-jfr,-shenandoahgc
    + S8221782: [Graal] Module jdk.internal.vm.compiler.management
      has not been granted accessClassInPackage.jdk.vm.ci.services
    + S8221801: Update src/java.base/share/legal/public_suffix.md
    + S8221824: Build failure with MSVS 2013 after JDK-8218418
    + S8221870: use driver to run CtwRunner in applications/ctw
      tests
    + S8221875: Unquarantine Shenandoah string dedup tests

-------------------------------------------------------------------
Tue May 21 08:21:36 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+14
  * Fixes:
    + S7106851: Test should not use System.exit
    + S8059357: ClassVerifier redundantly checks constant pool
      entries multiple times
    + S8061381: [macosx] Accelerators does not spelled for
      JMenuItems by Voice Over
    + S8078860: (spec) InputStream.read(byte[] b, int off, int len)
      claims to not affect element b[off]
    + S8146986: JDI: Signature lookups for unprepared classes can
      take a long time
    + S8170494: JNI exception pending in PlainDatagramSocketImpl.c
    + S8172695: (scanner) java/util/Scanner/ScanTest.java fails
    + S8200286: (testbug) MOptionTest test fails with
      java.lang.AssertionError: Classfiles too old!
    + S8203026: java.rmi.NoSuchObjectException: no such object in
      table
    + S8204552: NMT: Separate thread stack tracking from virtual
      memory tracking
    + S8210782: Upgrade HarfBuzz to the latest 2.3.1
    + S8211322: Reduce the timeout of tooltip in SwingSet2DemoTest
    + S8211941: Enable checking/ignoring of non-conforming
      Class-Path entries
    + S8213110: Remove the use of applets in automatic tests
    + S8214109: XToolkit is not correctly displayed color on 16-bit
      high color setting
    + S8214112: The whole text in target JPasswordField image are
      not selected
    + S8214253: Tooltip is transparent rather than having a black
      background
    + S8214712: Archive Attributes$Name.KNOWN_NAMES
    + S8215396: JTabbedPane preferred size calculation is wrong for
      SCROLL_TAB_LAYOUT
    + S8216353: Use utility APIs introduced in
      org/netbeans/jemmy/util/LookAndFeel class in client sanity
      test cases
    + S8216558: Lookup.unreflectSetter(Field) fails to throw
      IllegalAccessException for final fields
    + S8216989: CardTableBarrierSetAssembler::
      gen_write_ref_array_post_barrier() does not check for zero
      length on AARCH64
    + S8217347: [TESTBUG]
      runtime/appcds/jvmti/InstrumentationTest.java timed out
    + S8217362: Emergency dump does not work when disk=false is set
    + S8217564: idempotent protection missing in crc32c.h
    + S8217690: Update public suffix version
    + S8217827: [Graal] Some vmTestbase/nsk/jvmti/ResourceExhausted
      tests failing
    + S8218128: vmTestbase/nsk/jvmti/ResourceExhausted/
      /resexhausted003 and 004 use wrong path to test classes
    + S8218399: runtime/RedefineObject/TestRedefineObject.java
      timeout
    + S8218401: WRONG_PHASE: vmTestbase/nsk/jvmti test crash
    + S8218446: SuspendAtExit hangs
    + S8218674: HTML Tooltip with "img=src" on component doesn't
      show
    + S8218854: FontMetrics.getMaxAdvance may be less than the
      maximum FontMetrics.charWidth
    + S8218889: Improperly use of the Optional API
    + S8218914: Support fonts installed per-user on Windows 10
    + S8219100: Improve do_collection_pause_at_safepoint
    + S8219196: DataOutputStream.writeUTF may throw unexpected
      exceptions
    + S8219446: Specify behaviour of timeout accepting methods of
      Socket and ServerSocket if timeout is negative
    + S8219504: Test for JDK-8211435 can be run on all platforms
    + S8219552: bump jtreg requiredVersion to b14 in
      test/jdk/sanity/client/
    + S8219612: compiler.codecache.stress.Helper.TestCaseImpl can't
      be defined in different runtime package as its nest host
    + S8220095: Assertion failure when symlink (with different
      name) is used for lib/modules file
    + S8220198: Lots of com/sun/crypto/provider/Cipher tests fail
      on x86_32 due to missing SHA512 stubs
    + S8220224: With CLDR provider, NumberFormat.format could not
      handle locale with number extension correctly.
    + S8220240: Refactor shared dirty card queue
    + S8220249: fix headings in java.compiler
    + S8220295: sun/tools/jps/TestJps.java still timing out
    + S8220389: Update Graal
    + S8220445: Support for side by side MSVC Toolset versions
    + S8220451: jdi/EventQueue/remove/remove004 failed due to
      "ERROR: thread2 is not alive"
    + S8220456: jdi/EventQueue/remove_l/remove_l004 failed due to
      "TIMEOUT while waiting for event"
    + S8220528: [AIX] Fix basic Xinerama and Xrender functionality
    + S8220570: Additonal trace when native thread creation fails
    + S8220575: Replace hardcoded 127.0.0.1 in URLs with new URI
      builder
    + S8220633: Optimize CacheFSInfo
    + S8220658: Improve the readability of container information in
      the error log
    + S8220674: [TESTBUG] MetricsMemoryTester failcount test in
      docker container only works with debug JVMs
    + S8220682: Heap dumping and inspection fails with JDK-8214712
    + S8220687: Add
      StandardJavaFileManager.getJavaFileObjectsFromPaths overload
    + S8220714: C2 Compilation failure when accessing off-heap
      memory using Unsafe
    + S8220753: Re-introduce the test case for TLS 1.2 algorithms
      in SunPKCS11 crypto provider
    + S8220774: Add HandshakeALot diag option
    + S8220784: hsdis cannot be built with MinGW64
    + S8220794: PPC64: Fix signal handler for SIGSEGV on branch to
      illegal address
    + S8221083: [ppc64] Wrong oop compare in C1-generated code
    + S8221096: Description of -XX:+PrintFlagsRanges is incorrect
    + S8221164: jstatLineCounts tests need to be more resilient for
      NaN outputs
    + S8221172: SunEC specific test is not limited to SunEC
    + S8221175: Fix bad function case for controlled JVM crash on
      PPC64 big-endian
    + S8221179: Zero builds fail when linking with gold and
      bundling libffi.so
    + S8221180: Deprecate AllowJNIEnvProxy
    + S8221207: Redo JDK-8218446 - SuspendAtExit hangs
    + S8221208: Backout JDK-8218446
    + S8221212: ZGC: Command-line flags should be marked
      experimental
    + S8221219: ZGC: Remove ZStallOnOutOfMemory option
    + S8221220: AArch64: Add StoreStore membar explicitly for
      Volatile Writes in TemplateTable
    + S8221252: (sc) SocketChannel and its socket adaptor need to
      handle connection reset
    + S8221259: New tests for java.net.Socket to exercise long
      standing behavior
    + S8221260: Initialize more class members on construction,
      remove some unused ones
    + S8221262: Cleanups in UnixFileSystem/WinNTFileSystem
      implementation classes
    + S8221264: Refactor and update SourceVersion.latestSupported
    + S8221270: Duplicated synchronized keywords in SSLSocketImpl
    + S8221273: put sun/security/pkcs11/tls/tls12/TestTLS12.java on
      ProblemList.txt
    + S8221278: Shenandoah should not enqueue string dedup
      candidates during root scan
    + S8221342: [TESTBUG] Generate Dockerfile for docker testing
    + S8221343: x86_32 crashes on startup with "_hwm out of range"
    + S8221350: more monitor logging updates from Async Monitor
      Deflation project
    + S8221357: Update test documentation by deleting "cd test &&
      make"
    + S8221363: Build failure after JDK-8220240 (Refactor shared
      dirty card queue)
    + S8221392: Reduce ConcurrentGCThreads spinning during start up
    + S8221396: Clean up serviceability/sa/TestUniverse.java
    + S8221400: java/lang/String/StringRepeat.java test requests
      too much heap
    + S8221401: java/math/BigInteger/LargeValueExceptions.java test
      should be disabled on 32-bit platforms
    + S8221406: Windows 32bit build error in
      NetworkInterface_winXP.c
    + S8221407: Windows 32bit build error in
      libsunmscapi/security.cpp
    + S8221414: Bump required boot jdk version to 12
    + S8221434: Fix typo in lib-x11 autoconf error message about
      missing headers
    + S8221456: nmethod::make_unloaded() clears _method member too
      early
    + S8221472: Fix HandshakeSuspendExitTest
    + S8221473: Configuration::reads can use Set.copyOf
    + S8221479: Fix JFR profiling on s390
    + S8221483: TestOopCmp.java fails due to "Multiple garbage
      collectors selected"
    + S8221513: Add vmTestbase/nsk/jdb/eval/eval001/eval001.java to
      ProblemList.txt
    + S8221524: java/util/Base64/TestEncodingDecodingLength.java
      test should be disabled on 32-bit platforms
    + S8221527: [TESTBUG] DockerBasicTest.java contains hard-coded
      reference to JDK 10
    + S8221531: Incorrect copyright header in
      src/java.base/windows/native/libnio/ch/FileChannelImpl.c
    + S8221537: ZGC: Fix incorrect comment in zNMethod table entry
      layout

-------------------------------------------------------------------
Tue May 21 08:14:47 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+13
  * Fixes:
    + S6307456: UnixFileSystem_md.c use of chmod() and access()
      should handle EINTR signal appropriately (unix)
    + S8147502: Digest is incorrectly truncated for ECDSA
      signatures when the bit length of n is less than the field
      size
    + S8153508: ContentHandler API contains link to private
      contentPathProp
    + S8170705: sun/net/www/protocol/http/StackTraceTest.java fails
      intermittently with Invalid Http response
    + S8179549: Typo in network properties documentation
    + S8193277: SimpleFileObject inconsistency between getName and
      getShortName
    + S8211100: hotspot C1 issue with comparing long numbers on x86
      32-bit
    + S8212528: Wrong cgroup subsystem being used for some CPU
      Container Metrics
    + S8213912: Semantic typo in HttpExchange.java
    + S8217766: Container Support doesn't work for some Join
      Controllers combinations
    + S8218166: com/sun/jdi/SimulResumerTest.java failure
    + S8218723: Use SunJCE Mac in SecretKeyFactory PBKDF2
      implementation
    + S8218812: vmTestbase/nsk/jvmti/GetAllThreads/allthr001/
      /TestDescription.java failed
    + S8218975: Bug in macOSX kernel's pthread support
    + S8219139: move hotspot tests from test/jdk/vm
    + S8219197: ThreadGroup.enumerate() may return wrong value
    + S8219562: Line of code in osContainer_linux.cpp L102 appears
      unreachable
    + S8219579: Remove redundant signature parsing from the verifier
    + S8219585: [TESTBUG] sun/management/jmxremote/bootstrap/
      /JMXInterfaceBindingTest.java passes trivially when it
      shouldn't
    + S8219628: [TESTBUG] javadoc/doclet/InheritDocForUserTags
      fails with -othervm
    + S8219691: method summary table head should be enclosed in
      <thead>
    + S8219876: (bf) Improve IndexOutOfBoundsException messages in
      $Type$Buffer classes
    + S8219882: [AOT] Develop regression test for 8218859
    + S8219958: Automatically load taglets from a jar file
    + S8220093: Change to GCC 8.2 for building on Linux at Oracle
    + S8220249: fix headings in java.compiler
    + S8220252: Fix Headings in java.naming
    + S8220281: IBM-858 alias name is missing on IBM00858 charset
    + S8220301: Remove jbyte use in CardTable
    + S8220342: Remove scavenge_root_nmethods_do from
      VM_HeapWalkOperation::collect_simple_roots
    + S8220343: Move scavenge_root_nmethods from shared code
    + S8220345: Use appropriate type for
      G1RemSetScanState::IsDirtyRegionState
    + S8220352: Crash with assert(external_guard || result !=
      __null) failed: Invalid JNI handle
    + S8220355: Improve assertion texts and exception messages in
      eventHandlerVMInit
    + S8220366: Optimize Symbol handling in ClassVerifier and
      SignatureStream
    + S8220374: C2: LoopStripMining doesn't strip as expected
    + S8220378: Unused Names constants
    + S8220379: Fix doclint handling of headings
    + S8220410: sun/security/tools/jarsigner/warnings/
      /NoTimestampTest.java failed with missing expected output
    + S8220411: Remove ScavengeRootsInCode=0 code
    + S8220493: Prepare Socket/ServerSocket for alternative
      platform SocketImpl
    + S8220502: Inefficient pre-sizing of PhiResolverState arrays
      in c1_LIRGenerator
    + S8220512: Deoptimize redefinition functions that have dirty
      ICs
    + S8220555: JFR tool shows potentially misleading message when
      it cannot access a file
    + S8220566: AArch64: Set default vm features for Ampere eMAG
      CPUs
    + S8220569: ZGC: Rename and rework ZUnmapBadViews to
      ZVerifyViews
    + S8220579: [Containers] SubSystem.java out of sync with
      osContainer_linux.cpp
    + S8220586: ZGC: Move relocation logic from ZPage to ZRelocate
    + S8220587: ZGC: Break out forwarding information from ZPage
    + S8220588: ZGC: Convert ZRelocationSet to hold ZForwardings
      instead of ZPages
    + S8220589: ZGC: Remove superfluous ZPageTableEntry
    + S8220590: ZGC: Remove ZPages from ZPageTable when freed
    + S8220591: ZGC: Don't delay reclaimation of ZVirtualMemory
    + S8220592: ZGC: Move destruction of detached ZPages into
      ZPageAllocator
    + S8220593: ZGC: Remove superfluous ZPage::is_detached()
    + S8220594: ZGC: Remove superfluous ZPage::is_active()
    + S8220595: ZGC: Introduce ZAttachedArray
    + S8220596: ZGC: Convert ZNMethodData to use ZAttachedArray
    + S8220597: ZGC: Convert ZForwarding to use ZAttachedArray
    + S8220598: Malformed copyright year range in a few files in
      java.base
    + S8220599: ZGC: Introduce ZSafeDelete
    + S8220600: ZGC: Delete ZPages using ZSafeDelete
    + S8220601: ZGC: Delete ZNMethodTableEntry arrays using
      ZSafeDelete
    + S8220606: Move ScavengableNMethods unlinking to
      unregister_nmethod
    + S8220609: Cleanups in ScavengableNMethods
    + S8220611: compiler/classUnloading/methodUnloading/
      /TestOverloadCompileQueues.java timeout
    + S8220613: java/util/Arrays/TimSortStackSize2.java times out
      with fastdebug build
    + S8220614: (bf) Buffer absolute slice methods should use
      Objects.checkFromIndexSize()
    + S8220628: Move the HeapMonitor library to C++
    + S8220634: SymLinkArchiveTest should handle not being able to
      create symlinks
    + S8220644: Align required/found pairs in diagnostics
    + S8220660: [s390]: debug build broken after JDK-8220301
    + S8220663: Incorrect handling of IPv6 addresses in
      Socket(Proxy.HTTP)
    + S8220676: [TESTBUG] ProblemList TestCPUSets until the test
      issue is resolved
    + S8220678: unquarantine nsk/jdi/ThreadReference/setEnabled/
      /setenabled003
    + S8220684: Process.waitFor(long, TimeUnit) can return false
      for a process that exited within the timeout
    + S8220689: problem list RandomCommandsTest in graal runs
    + S8220690: ATTRIBUTE_ALIGNED requires GNU extensions enabled
    + S8220693: jdk/javadoc/doclet/MetaTag/MetaTag.java with
      unexpected date
    + S8220704: ZGC: gc tests complain Java heap too small
    + S8220712: [TESTBUG] gc/shenandoah/compiler/
      /TestMaybeNullUnsafeAccess should run with Shenandoah enabled
    + S8220719: Allow other named NetPermissions to be used
    + S8220737: Jib based 32 bit windows builds fail
    + S8220738: (sc) Move ServerSocketChannelImpl remaining native
      method to Net
    + S8220741: ZGC: Move CPU agnostic files from linux_x86 to linux
    + S8220744: Move RedefineTests to from runtime to serviceability
    + S8220745: Fix problemlist entry to refer to 8220613
    + S8220780: ShenandoahBS::AccessBarrier::oop_store_in_heap
      ignores AS_NO_KEEPALIVE
    + S8220781: linux-s390 : os::get_summary_cpu_info gives bad
      output
    + S8220812: gc/shenandoah/options/TestLoopMiningArguments.java
      fails if default GC is serial/parallel/cms
    + S8221098: Run java/net/URL/HandlerLoop.java in othervm mode

-------------------------------------------------------------------
Tue May 21 08:08:44 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+12
  * Fixes:
    + S6504660: HPI panic callback is dead code
    + S8013728: nsk/jdi/BScenarios/hotswap/tc10x001 Unrecognized
      Windows Sockets error: 0: recv failed
    + S8074817: Resolve disabled warnings for libverify
    + S8160247: Mark deprecated javax.security.cert APIs with
      forRemoval=true
    + S8163511: Allocation of compile task fails with assert:
      "Leaking compilation tasks?"
    + S8170639: [Linux] jsig is limited to a maximum of 64 signals
    + S8184315: Typo in java.net.JarURLConnection.getCertificates()
      method documentation
    + S8201252: unquarantine
      nsk/jdi/ThreadReference/resume/resume001
    + S8212206: Refactor AdaptiveSizePolicy to separate out code
      related to GC overhead
    + S8213008: Cipher with UNWRAP_MODE should support the
      generation of an AES key type
    + S8213448: [TESTBUG] enhance jfr/jvm/TestDumpOnCrash
    + S8214922: Add vectorization support for fmin/fmax
    + S8215221: Serial GC misreports young GC time
    + S8217216: Launcher does not defend itself against
      LD_LIBRARY_PATH_64 (Solaris)
    + S8217254: CompactNumberFormat::CompactNumberFormat()
      constructor does not comply with spec.
    + S8217417: Decorator name typo: C2_TIGHLY_COUPLED_ALLOC
    + S8217561: X86: Add floating-point Math.min/max intrinsics
    + S8217576: C1 atomic access handlers use incorrect decorators
    + S8217721: CompactNumberFormat::format() method spec for IAEx
      is not complaint
    + S8218074: Update Graal
    + S8218201: Failures when vmIntrinsics::_getClass is not inlined
    + S8218464: vmTestbase/nsk/jdi/VirtualMachine/allThreads/
      /allthreads001/TestDescription.java failed
    + S8218618: Program fails when using JDK addressed by UNC path
      and using Security Manager
    + S8218948: SimpleDateFormat :: format - Zone Names are not
      reflected correctly during run time
    + S8219448: split-if update_uses accesses stale idom data
    + S8219517: assert(false) failed: infinite loop in
      PhaseIterGVN::optimize
    + S8219584: Try to dump error file by thread which causes
      safepoint timeout
    + S8219597: (bf) Heap buffer state changes could provoke
      unexpected exceptions
    + S8219632: Remove reference to com.sun.javadoc API in
      RemoveOldDoclet test
    + S8219633: ZGC: Rename ZPageSizeMin to ZGranuleSize
    + S8219634: ZGC: Rename ZAddressRangeMap to ZGranuleMap
    + S8219642: ciReplay loads wrong data when MethodData size
      changes
    + S8219651: compiler/ciReplay/TestServerVM.java is failing on
      windows
    + S8219685: Startup failure:
      assert(!Universe::is_module_initialized()) failed: Incorrect
      java.lang.Module pre module system initialization
    + S8219705: Wrong media-type for a given serialization method
    + S8219713: Reduce work in
      DefaultMethods::generate_default_methods
    + S8219721: jcmd from earlier release will hang attaching to VM
      with JDK-8215622 applied
    + S8219816: Add IsArray/RemoveExtent type traits utilities
    + S8219817: Remove unused CollectedHeap::block_size()
    + S8219860: Cleanup ClassFileParser::parse_linenumber_table
    + S8219997: [TESTBUG] Create test for JFR events in Docker
      container: CPU, Memory and Process Info
    + S8220005: java/util/Arrays/TimSortStackSize2.java times out
    + S8220050: Deprecate -XX:-ThreadLocalHandshakes
    + S8220083: Use InetAddress.getLoopbackAddress() in place of
      127.0.0.1 for some tests
    + S8220085: runtime/CompressedOops/UseCompressedOops.java times
      out on Windows intermittently
    + S8220087: Remove remnants of HTML4 support
    + S8220153: Shenandoah does not work with TransparentHugePages
      properly
    + S8220159: Optimize various RegMask operations by introducing
      watermarks
    + S8220162: Shenandoah should not commit HugeTLBFS memory
    + S8220165: Encryption using GCM results in RuntimeException-
      input length out of bound
    + S8220173: assert(_handle_mark_nesting > 1) failed: memory
      leak: allocating handle outside HandleMark
    + S8220202: Simplify/standardize method naming for HtmlTree
    + S8220227: Host Locale Provider getDisplayCountry returns
      error message under non-English Win10
    + S8220228: Improve Shenandoah pacing histogram message
    + S8220237: ProcessBuilder API documentation typo
    + S8220244: vmTestbase/nsk/jvmti/scenarios/sampling/SP06/
      /sp06t003 hasn't been un-problemlisted
    + S8220253: Fix Headings in java.sql.rowset
    + S8220256: fix headings in java.security.sasl
    + S8220257: fix headings in java.instrument
    + S8220258: fix headings in java.smartcardio
    + S8220262: fix headings in java.logging
    + S8220283: ZGC fails to build on GCC 4.4.7: ATTRIBUTE_ALIGNED
      compatibility issue
    + S8220290: gc/arguments/TestSurvivorRatioFlag.java fails after
      JDK-8215221 with CMS
    + S8220294: ZGC fails to build on GCC 4.4.7: Type parameter
      issue
    + S8220313: [TESTBUG] Update base image for Docker testing to
      OL 7.6
    + S8220323: Fix copyright header text
    + S8220331: Remove extra spaces in copyright header
    + S8220334: Fix copyright header text
    + S8220341: Class redefinition fails with
      assert(!is_unloaded()) failed: unloaded method on the stack
    + S8220344: Build failures when using
      --with-jvm-features=-g1gc,-jfr
    + S8220346: Refactor java.lang.Throwable to use
      Objects.requireNonNull
    + S8220350: Refactor ShenandoahHeap::initialize
    + S8220353: [TESTBUG] TestRegisterRestoring uses SafepointALot
      without UnlockDiagnosticVMOptions
    + S8220363: hotspot-ide project fails
    + S8220368: Update String.indexOf to test all the C2 intrinsics
    + S8220377: Unused field SourceFileObject.flatname
    + S8220383: Incremental build is broken and inefficient
    + S8220407: compiler/intrinsics/math/TestFpMinMaxIntrinsics.java
      timedout
    + S8220409: jdk/modules/scenarios/overlappingpackages/
      /OverlappingPackagesTest.java - testOverlapWithBaseModule
      tests the wrong thing
    + S8220414: Correct copyright headers in Norm2AllModes.java and
      Normalizer2.java
    + S8220420: Cleanup c1_LinearScan
    + S8220441: [PPC64] Clobber memory effect missing for memory
      barriers in atomics
    + S8220444: Shenandoah should use parallel version of
      WeakProcessor in root processor for weak roots
    + S8220474: Incorrect GPL header in src/java.instrument/share/
      /classes/java/lang/instrument/package-info.java
    + S8220475: Malformed copyright header in
      LinuxSocketOptions.java, MacOSXSocketOptions.java and
      MacOSXSocketOptions.c
    + S8220480: Typo in java.net.http.HttpResponse.BodySubscriber
      documentation
    + S8220496: Race in java_lang_String::length() when
      deduplicating
    + S8220501: Improve c1_ValueStack locks handling
    + S8220504: Move definition of JAVA_VERSION_INFO_RESOURCE to
      Launcher-java.base.gmk
    + S8220515: Revert removal of for_each_lock_value removal
    + S8220529: JDK-8220383 broke test image build
    + S8220546: Shenandoah Reports timing details for weak root
      processing
    + S8220585: Incorrect code in MulticastSocket sample code

-------------------------------------------------------------------
Tue May 21 08:00:02 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+11
  * Fixes
    + S4903717: nsk/jdi/ThreadReference/isSuspended/issuspended002
      failing
    + S5071718: (bf) Add ByteBuffer.slice(int offset, int length)
    + S8207367: 10 vmTestbase/nsk/jdi tests timed out when running
      with jtreg
    + S8209413: AArch64: NPE in clhsdb jstack command
    + S8212932: [TESTBUG] Clean up TestVirtualSpaceNode test
    + S8214854: JDWP: Unforseen output truncation in logging
    + S8215430: Remove the internal package com.sun.net.ssl
    + S8216259: AArch64: Vectorize Adler32 intrinsics
    + S8216580: Fix generation of VNNI vector code by allowing
      adjacent LoadS nodes to be isomorphic
    + S8217868: Crash for overlap between source path and patch
      module path
    + S8217878: ENVELOPING XML signature no longer works in JDK 11
    + S8218167: nsk/jvmti/scenarios/sampling/SP02/sp02t003 fails
    + S8218228: The constructor StringBuffer(CharSequence) violates
      spec for negatively sized argument
    + S8218266: G1 crash in AccessInternal::PostRuntimeDispatch
    + S8218629: XML Digital Signature throws NAMESPACE_ERR
      exception on OpenJDK 11, works 8/9/10
    + S8218880: G1 crashes when issuing a periodic GC while the
      GCLocker is held
    + S8218988: Improve metaspace verifications
    + S8219214: Infinite Loop in CodeSection::dump()
    + S8219369: Add named constants for iterating ExtRootScan phases
    + S8219492: Restore static callsite resolution for the current
      class
    + S8219513: compiler/codegen/aes/
      /TestCipherBlockChainingEncrypt.java timeout on Solaris-sparc
    + S8219519: Remove linux_sparc.ad and linux_aarch64.ad
    + S8219565: [deadcode] remove share/utilities/intHisto.*
    + S8219582: PPC: Crash after C1 checkcast patched and GC
    + S8219613: Use NonJavaThread PtrQueues
    + S8219619: Remove UseFakeTimers and related code
    + S8219650: [Testbug] Fix potential crashes in new test hotspot
      gtest "test_print_hex_dump"
    + S8219658: Deadlock in sun.security.ssl.SSLSocketImpl
    + S8219712: code_size2 (defined in stub_routines_x86.hpp) is
      too small on new Skylake CPUs
    + S8219714: [testbug] com/sun/jdi/RedefineNestmateAttr/
      /TestNestmateAttr.java must pass classpath to subprocess
    + S8219723: javax/net/ssl/compatibility/Compatibility.java
      failed on some SNI cases
    + S8219746: Provide virtualization related info in the hs_error
      file on linux ppc64 / ppc64le
    + S8219747: Remove g1_ prefix to g1_remset and g1_policy
      members in G1CollectedHeap
    + S8219748: Add and use getter for the timing object in G1
    + S8219789: [TESTBUG] TestOptionsWithRanges.java produces
      hs_err_pidXXXXX.log file for
      VMThreadStackSize=9007199254740991
    + S8219798: [deadcode] remove
      src/hotspot/share/prims/evmCompat.cpp
    + S8219801: Pages do not have <h1>
    + S8219803: Nodeca Pako license text needs to be inserted in
      JSZip license text
    + S8219856: Spell out G1CollectorPolicy::is_hetero_heap
    + S8219857: Shenandoah GC may initialize thread's gclab twice
    + S8219888: aarch64: add CPU detection code for HiSilicon TSV110
    + S8219890: Calendar.getDisplayName() returns empty string for
      new Japanese Era on some locales
    + S8219906: Update test documentation with default test jobs
      settings
    + S8219915: [TESTBUG] Fix test langtools/tools/javac/processing/
      /model/completionfailure/SymbolsDontCumulate.java in
      Standalone mode
    + S8219919: RuntimeStub name lost with
      PrintFrameConverterAssembly
    + S8219920: dependency help output in configure-step : support
      zypper tool
    + S8219922: Simplify and optimize IndexSetIterator::next using
      count_trailing_zeros
    + S8219946: Set class on body elements
    + S8219951: Build failure on Mac and Windows after JDK-8219922
    + S8219969: Backout JDK-8219492
    + S8219971: Introduce SetupExecute in build system
    + S8219974: REDO JDK-8219492: Restore static callsite
      resolution for the current class
    + S8219976: GarbageCollectionNotificationInfo always says "No
      GC" when running Shenandoah
    + S8219986: Change to Xcode 10.1 for building on Macosx at
      Oracle
    + S8219988: Change to Visual Studio 2017 15.9.6 for building on
      Windows at Oracle
    + S8219990: Backout JDK-8219658
    + S8219994: CheckSecurityProvider.java fails with unexpected
      sun.security.ssl.SunJSSE
    + S8220030: JdbStopThreadidTest.java failed due to "Unexpected
      IO error while writing command 'quit' to jdb stdin stream"
    + S8220151: SafepointTracing::end_of_last_safepoint_ms should
      return ms since epoch.
    + S8220155: JDK-8219971 broke hotspot build
    + S8220161: Shenandoah does not need to initialize PLABs for
      safepoint workers
    + S8220164: Fix build instructions for AIX
    + S8220211: Small update to Fix generation of VNNI vector code
      by allowing adjacent LoadS nodes to be isomorphic
      (JDK-8216580)

-------------------------------------------------------------------
Tue May 21 07:54:06 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+10
  * Fixes:
    + S4895924: Strings in format #rgb not handled by
      Color.decode() (affects CSS / Swing)
    + S8011135: (bf) CharBuffer.put(String) is slow because of
      String.charAt() call for each char
    + S8048192: (bf) Out of direct buffer memory message should
      include the limits
    + S8078725: method adjustments can be done just once for all
      classes involved into redefinition
    + S8153413: Exceptions::_throw always logs exceptions,
      penalizing performance
    + S8159525: Add @FunctionalInterface annotation to
      PrivilegedAction and PrivilegedExceptionAction
    + S8168069: X509TrustManagerImpl causes ClassLoader leaks with
      unparseable extensions
    + S8181171: Deleting method for RedefineClasses breaks
      ResolvedMethodName
    + S8181383: com/sun/jdi/OptionTest.java fails intermittently
      with bind failed: Address already in use
    + S8183107: PKCS11 regression regarding checkKeySize
    + S8190361: Incorrect version info in jaccessinspector.exe and
      jaccesswalker.exe
    + S8208278: [mlvm] [TESTBUG]
      vm.mlvm.mixed.stress.java.findDeadlock.INDIFY_Test Deadlocked
      threads are not always detected
    + S8209175: Handle 'B' character introduced in CLDR 33 JDK
      update for Burmese (my) locale
    + S8209807: improve handling exception in requires.VMProps
    + S8210457: JVM crash in ResolvedMethodTable::add_method(Handle)
    + S8212202: [Windows] Exception if no printers are installed.
    + S8213071: [macos] The focus disappears after pressing return
      to close the "That was a pretty good movie!" dialog.
    + S8213354: Support package-specific stylesheets
    + S8213781: web page background renders blue in JEditorPane
    + S8214756: SA should ignore archived java heap objects that
      are not in use
    + S8214777: Avoid some GCC 8.X strncpy() errors in HotSpot
    + S8215009: GCC 8 compilation error in libjli
    + S8215307: Pages do not have <h1>
    + S8215524: Finished message validation failure should be
      decrypt_error alert
    + S8215584: Remove support for the "old" doclet API in
      com/sun/javadoc
    + S8216170: java.lang.IllegalArgumentException: directories not
      supported
    + S8216363: NullPointerException in
      java.util.logging.Handler#isLoggable
    + S8217647: JFR: recordings on 32-bit systems unreadable
    + S8217765: Internal Error (javaCalls.cpp:61)
      guarantee(thread->can_call_java()) failed
    + S8218726: Minor Throwable.printStackTrace() typos
    + S8218751: Do not store original classfiles inside the CDS
      archive
    + S8218780: Update MUSCLE PCSC-Lite header files
    + S8218811: replace open by os::open in hotspot coding
    + S8218913: Rename --strip-debug jlink plugin
    + S8218960: CONFIG level logging statements printed in
      CLDRCalendarDataProviderImpl.java even when default log Level
      is INFO
    + S8218974: Free GC native structures in nmethod::flush
    + S8218995: Deprecate the -XX:FailOverToOldVerifier option
    + S8218998: Add metadata to generated API documentation files
    + S8219143: jdb should support breakpoint thread filters
    + S8219156: RTFEditorKit writes background color but doesn't
      read
    + S8219158: use 'test.root' property instead of traversing
      test-src path
    + S8219247: Enable inlining of newly introduced PlatformMonitor
      methods
    + S8219254: Update explicit uses of latest source/target in
      langtools tests to a property
    + S8219256: Update javac diags tests to use properties
    + S8219335: "failed: unexpected type" assert failure in
      ConnectionGraph::split_unique_types() with unsafe accesses
    + S8219378: Ensure ReflectionFactory.langReflectAccess is
      initialized correctly
    + S8219388: Misleading log message "issuspended002a debuggee
      launched"
    + S8219414: SA: jhsdb jsnap throws UnmappedAddressException
      with core generated by gcore
    + S8219417: bump jtreg requiredVersion to b14
    + S8219436: Safepoint logs correction and misc
    + S8219460: ppc: adjust NativeGeneralJump::insert_unconditional
      to stack allocated MacroAssembler
    + S8219462: ZGC: Use wait/notify in ZNMethodTable
    + S8219463: ZGC: Remove redundant ZNMethodTable::_iter_lock
    + S8219464: ZGC: Move nmethod oop properties from
      ZNMethodTableEntry to ZNMethodData
    + S8219466: ZGC: Extract allocation functionality into a new
      ZNMethodAllocator class
    + S8219467: ZGC: Move ZNMethodData to its own file
    + S8219468: ZGC: Extract iteration functionality into a new
      ZNMethodTableIteration class
    + S8219469: ZGC: Extract functions out from ZNMethodTable into
      new ZNMethod class
    + S8219480: j.l.c.ClassDesc::arrayType(int rank) throws
      IllegalArgumentException if rank = 0
    + S8219486: Missing reg_mask_init() breaks x86_32 build
    + S8219497: Unused parameter in
      HtmlDocletWriter::printHtmlDocument
    + S8219524: Shenandoah misreports "committed" size in
      MemoryMXBean
    + S8219548: Better Null paramenter checking in ToolProvider
    + S8219553: [TESTBUG] Problem list JFR TestPeriod test
    + S8219554: Redundant lookup_common in SymbolTable::add
    + S8219558: jdk/javadoc tests fail with missing headings: h1
    + S8219561: Update jdeprscan to avoid the need for
      start-of-release changes
    + S8219571: ProblemList
      serviceability/sa/TestJmapCoreMetaspace.java
    + S8219573: Add NMethodClosure
    + S8219574: Minimal VM build failure after JDK-8219414
    + S8219575: jdk/javadoc/tool/removeOldDoclet/RemoveOldDoclet
      test fails in mach5
    + S8219577: Returning NULL in a function which returns bools
    + S8219583: Windows build failure after JDK-8214777 (Avoid some
      GCC 8.X strncpy() errors in HotSpot)
    + S8219611: Remove superfluous sigfillset code
    + S8219630: cleanup hotspot ostream.cpp
    + S8219635: aarch64: missing LoadStore barrier in
      TemplateTable::fast_storefield
    + S8219638: ZGC: Free ZNMethodDataOops under a lock
    + S8219664: LogCompilation: java.lang.Error: Unexpected method
      mismatch during late inlining
    + S8219675: Disable harfbuzz warnings with gcc 8
    + S8219698: aarch64: SIGILL triggered when specifying
      unsupported hardware features
    + S8219802: Problem list
      java/net/MulticastSocket/SetGetNetworkInterfaceTest.java
    + S8219805: Cross-link javax.lang.model.{type, element}
      packages to utility interfaces
    + S8219814: Help-info for pns(...) on Linux/mips lost

-------------------------------------------------------------------
Tue May 21 07:49:02 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+9
  * Fixes:
    + S4887513: Typo in RMIFailureHandler interface doc page
    + S4919790: Errors in alert ssl message does not reflect the
      actual certificate status
    + S5029431: (bf) Add absolute bulk put and get methods
    + S8065262: (bf spec) CharBuffer.chars() should make it clearer
      that the sequence starts from the buffer position
    + S8079353: [TESTBUG] runtime/CompressedOops/
      /UseCompressedOops.java failed on Windows when getting
      disjoint instead of zero based coops
    + S8087128: C2: Disallow definition split on MachCopySpill nodes
    + S8161334: C2: Cast nodes hinder memory alias analysis
    + S8167548: [TESTBUG] Logging tests put log files in source tree
    + S8183004: Remove code related to gtest death tests from
      assert macro
    + S8187697: Cleanup: irrelevant code in OutputPropertiesFactory
    + S8195057: java/util/concurrent/CountDownLatch/Basic.java
      failed w/ Xcomp
    + S8198411: [TEST_BUG] Two java2d tests are unstable in mach5
    + S8201544: Improve javac command line parsing and error
      reporting
    + S8203232: Shenandoah: Resolve oops in SATB filter
    + S8203469: Faster safepoints
    + S8203627: Swing applications with JRadioButton and JCheckbox
      fail to render correctly when using GTK3 and the GTK L&F
    + S8204551: Event descriptions are truncated in logs
    + S8207938: At step6,Click Add button,case failed automatically.
    + S8209455: [error-prone] JdkObsolete in jdk.management.agent
    + S8211016: make images does not update jdk/lib/src.zip with
      latest changes
    + S8212678: Windows IME related patch
    + S8214363: HeapWord should not be a fake class
    + S8214719: Deprecate -Xverify:none option
    + S8214947: Assertion error in test: StringCompressInflateTest
    + S8215130: Fix errors in LittleCMS 2.9 reported by GCC 8
    + S8215249: Miscellaneous changes imported from jsr166 CVS
      2019-02
    + S8215359: InnocuousForkJoinWorkerThread.setContextClassLoader
      needlessly throws
    + S8215363: needless signals in ForkJoinPool
    + S8215622: Add dump to file support for jmap –histo
    + S8216049: stringTable::intern creates redundant String when
      looking up existing one
    + S8216360: Deprecate -XX:CompilationPolicyChoice
    + S8216592: Removal of the class sun.awt.AWTSecurityManager
    + S8216597: SIGBUS in
      Java_sun_security_pkcs11_wrapper_PKCS11_getNativeKeyInfo after
      JDK-6913047
    + S8217032: Check pandoc capabilities in configure
    + S8217263: Automate DashOffset test
    + S8217289: compiler/graalunit/HotspotTest.java failed with
      InvalidInstalledCodeException
    + S8217381: Incovenient errors reported when annotation
      processor generates source file and errors in the same round
    + S8217385: JTREG: Clean up, make sure to close resources
    + S8217389: JTREG: Clean up, remove unused variable warnings
    + S8217909: Make unused r12 register (without compressed oops)
      available to regalloc in C2
    + S8217998: Remove method_type field associated with the
      appendix field of an indy or method handle call
    + S8218089: Rename DirtyCardQueue et al to follow usual G1
      naming conventions
    + S8218135: Redo: Add ppc64le and s390x profiles to
      jib-profiles.js
    + S8218192: Remove copy constructor for MemRegion
    + S8218287: jshell tool: input behavior unstable after 12-ea+24
      on Windows
    + S8218469: JSlider display issue with slider for GTKLookAndFeel
    + S8218470: JScrollBar display issue with GTKLookAndFeel
    + S8218471: generate-unsafe-access-tests.sh does not correctly
      invoke build.tools.spp.Spp
    + S8218472: JProgressBar display issue with GTKLookAndFeel
    + S8218473: JOptionPane display issue with GTKLookAndFeel
    + S8218479: JTextPane display issue with GTKLookAndFeel
    + S8218599: Add test group jdk_client_sanity under jdk_desktop
      group
    + S8218672: AOT code root scanning shows in the wrong position
      in the logs
    + S8218682: [TEST_BUG] DashOffset fails in mach5
    + S8218721: C1's CEE optimization produces safepoint poll with
      invalid debug information
    + S8218731: SA: Use concrete class the as return type of
      VMObjectFactory.newObject
    + S8218732: SA: Resolves ZPageAllocator::_physical incorrectly
    + S8218733: SA: CollectedHeap provides broken implementation
      for used() and capacity()
    + S8218734: SA: Incorrect and raw loads of OopHandles
    + S8218743: SA: Add support for large bitmaps
    + S8218746: SA: Implement discontiguous bitmap for ZGC
    + S8218753: Obsolete nonproduct flag ProfilerCheckIntervals
    + S8218758: [TESTBUG] compiler/cha/
      /StrengthReduceInterfaceCall.java misses recompilation event
    + S8218767: ZGC: Do not assume that r12 is a special register
      in C2
    + S8218851: JVM crash in custom classloader stress test, JDK 12
      & 13
    + S8218874: C2: Unsafe to access PhaseIdealLoop outside of
      constructors
    + S8218879: Keep track of memory accesses originated from Unsafe
    + S8218881: C2: StaticFinalFieldPrinter doesn't handle T_ARRAY
      values in T_OBJECT fields
    + S8218920: Scan HCC should be on the same level as Update RS
      etc. in the log
    + S8218922: SA: Enable best-effort implementation of live
      regions iteration for ZGC
    + S8218935: Make jfr strncpy uses GCC 8.x friendly
    + S8218936: Test fails in Internet environment
    + S8218937: Make mlvmJvmtiUtils strncpy uses GCC 8.x friendly
    + S8218939: vm/mlvm/anonloader/stress/byteMutation crashed on
      windows
    + S8218941: jdb should support a dbgtrace command that acts the
      same as the dbgtrace command line option
    + S8218944: Fix failed for JDK-8218936
    + S8218947: jdb threads command should print threadID in
      decimal, not hex
    + S8218965: aix: support xlclang++ in the compiler detection
    + S8218970: SA: Enable HeapHprofBinWriter for ZGC
    + S8218978: SA: Enable more ZGC testing
    + S8218991: s390: Add intrinsic for GHASH algorithm
    + S8219002: Some comments and error messages refer to
      VMDisconnectException
    + S8219003: SA: Refactor live regions iteration in preparation
      for JDK-8218922
    + S8219006: AArch64: Register corruption in slow subtype check
    + S8219011: Implement MacroAssembler::warn method on AArch64
    + S8219074: [TESTBUG] runtime/containers/docker/
      /TestCPUAwareness.java typo of printing parameters (period
      should be shares)
    + S8219095: [testbug] Add @key headful to
      com/sun/java/swing/plaf/windows/AltFocusIssueTest.java
    + S8219096: Merge print_termination_stats code with current
      logging
    + S8219097: Move comment about using weak code blobs closure
      for code root scanning to correct place
    + S8219098: Make output of region strings more regular in error
      messages
    + S8219112: name_and_sig_as_C_string usages in frame_s390 miss
      ResourceMark
    + S8219129: Allow overriding of license files in legal dir
    + S8219132: switch to jtreg4.2-b14
    + S8219142: Remove unused JIMAGE_ResourcePath
    + S8219151: Illegal instruction exception on JDK 12 due to
      incorrect CPU feature bits
    + S8219157: vm/mlvm/mixed/stress/java/findDeadlock should be
      problem-listed only on mac
    + S8219228: java/util/Base64/TestEncodingDecodingLength.java
      failing on 8GB test machine
    + S8219229: Make ConstantPool::tag_at and release_tag_at_put
      inlineable
    + S8219232: Unit of concurrent active time logging is wrong
    + S8219244: NMT: Change ThreadSafepointState's allocation type
      from mtInternal to mtThread
    + S8219331: ZGC: Unify TLAB retire/remap handling
    + S8219332: ZGC: Improve ZRootsIteratorClosure abstraction
    + S8219368: Quarantine
      runtime/NMT/CheckForProperDetailStackTrace.java test
    + S8219370: NMT: Move synchronization primitives from
      mtInternal to mtSynchronizer
    + S8219389: Delegated task created by SSLEngine throws
      BufferUnderflowException
    + S8219391: extend gcov support to llvm/clang
    + S8219393: Add native library support for microbenchmarks
    + S8219394: Missing FIXPATH in microbenchmark test runner
    + S8219395: integrate gcov w/ run-test
    + S8219441: test_logMessageTest missing static storage
    + S8219476: cleanup hotspot ProblemList

-------------------------------------------------------------------
Tue May 21 07:43:06 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+8
  * Fixes:
    + S8068225: nsk/jdi/EventQueue/remove_l/remove_l005
      intermittently times out
    + S8145845: [AOT] NullPointerException in
      compiler/whitebox/GetCodeHeapEntriesTest.java
    + S8180569: Refactor sun/security/krb5/ shell tests to plain
      java tests
    + S8182117: Document Zip File System Properties
    + S8193234: When using -Xcheck:jni an internally allocated
      buffer can leak
    + S8195060: vm/mlvm/anonloader/stress/byteMutation
      intermittently times out
    + S8200109: NMT: diff_malloc_site assert(early->flags() ==
      current->flags(), "Must be the same memory type")
    + S8201633: Problems with AES-GCM native acceleration
    + S8205654: serviceability/dcmd/framework/HelpTest.java timed
      out
    + S8210280: Unnecessary reallocation when invoking
      HashMap.putAll()
    + S8211885: Duplicate id declarations in java.awt.geom.Path2D
    + S8212677: X11 default visual support for IM status window on
      VNC
    + S8212828: (process) Change the Process launch mechanism
      default on Linux to be posix_spawn
    + S8212988: add recent class unloading events to the hs_err log
    + S8214076: Cleanup the code related to
      GraphicsEnvironment/Device/Configuration
    + S8214111: There is no icon in all JOptionPane target image
    + S8214236: sun.gc.collector.2.name should be changed
    + S8214252: Expanded & Collapsed nodes of a JTree look the same
      on GTK3
    + S8214471: Enable different look and feel tests in SwingSet3
      demo test ToolTipDemoTest
    + S8214582: BasicJDWPConnectionTest.java: RuntimeException:
      Could not detect port from ''
    + S8214765: All TrayIcon MessageType icons does not show up
      with gtk3 option set
    + S8214823: Javadoc cleanup of java.awt.desktop package
    + S8214918: Unify GraphicsEnvironment.getCenterPoint()/
      /getMaximumWindowBounds() across the platforms
    + S8215790: Delegated task created by SSLEngine throws
      java.nio.BufferUnderflowException
    + S8216263: Add historical data for JDK 12
    + S8216318: The usage of Disposer in the java.awt.Robot can be
      deleted
    + S8216608: Obsolete stale compiler flags
    + S8217235: Create automated test for SwingSet
      ColorChooserDemoTest
    + S8217297: Add support for multiple look and feel for SwingSet
      SliderDemoTest
    + S8217328: Rename CollectionSetChooser to
      G1CollectionSetChooser
    + S8217329: JTREG: Clean up, remove unused imports in gc folder
    + S8217330: Split G1CollectionSetChooser into collection set
      candidate container and the chooser algorithm
    + S8217332: JTREG: Clean up, use generics instead of raw types
    + S8217335: Add a script to generate --release data
    + S8217352: Remove EA from version string starting with Initial
      RC promotion
    + S8217377: javax/swing/JPopupMenu/6583251/bug6583251.java
      failed with UnsupportedOperation exception
    + S8217383: Obsolete UseImplicitStableValues
    + S8217464: Remove resolved client bugs from the ProblemList.txt
    + S8217778: StringTable cleanup miscalculates amount of dead
      objects
    + S8217835: Remove the experimental SunJSSE FIPS compliant mode
    + S8217874: Shenandoah: Clobbered register in
      ShenandoahBarrierSetAssembler::cmpxchg_oop()
    + S8217990: C2 UseOptoBiasInlining: load of markword optimized
      to 0 if running with -XX:-EliminateLocks
    + S8218004: Clean up terminology for shared methods within the
      JVM for indy and condy support
    + S8218136: minor hotspot adjustments for xlclang++ from xlc16
      on AIX
    + S8218169: [AOT] Segmentation fault when running java with
      AOTed Graal in -Xcomp mode on windows
    + S8218411: JDK 12 L10n resource file update msg drop 20
    + S8218413: make reconfigure ignores configure-time AUTOCONF
      environment variable
    + S8218431: Improved platform checking in makefiles
    + S8218461: test/jdk/java/lang/invoke/VarHandles should be
      generated rather than manually edited
    + S8218546: Unable to connect to https://google.com using
      java.net.HttpClient
    + S8218553: Enhance keystore load debug output
    + S8218554: HttpServer: allow custom handlers to request that
      the connection be closed after the exchange.
    + S8218558: NMT stack traces in output should show mt component
      for virtual memory allocations
    + S8218562: handle HOTSPOT_BUILD_COMPILER for clang/xlclang and
      cleanup HOTSPOT_BUILD_COMPILER settings
    + S8218565: HandleMark cleanup
    + S8218580: endpoint identification algorithm should be
      case-insensitive
    + S8218581: Incorrect exception message generation
    + S8218593: Symbol leak in prepend_host_package_name
    + S8218601: [AOT] Crash in
      AOTCodeHeap::mark_evol_dependent_methods
    + S8218625: Remove dead code in relocInfo
    + S8218630: CreateSymbols includes class and module headers
      unnecessarily.
    + S8218662: Allow 204 responses with Content-Length:0
    + S8218675: Reduce verification overhead in ClassFileParser
    + S8218680: G1 crashes during calculation of old collection set
      candidates
    + S8218692: Switch to JCov build which supports byte code
      version 57
    + S8218695: problem list tests failing with Graal
    + S8218702: [TESTBUG] com/sun/jdi/RepStep.java does not report
      debuggee errors
    + S8218705: Test sun/tools/jcmd/TestJcmdDefaults.java fails on
      Linux
    + S8218715: [TESTBUG]
      TestUseOptoBiasInliningWithoutEliminateLocks needs to unlock
      WhiteBoxAPI
    + S8218736: Build warning in lib/JvmFlags.gmk: extraneous text
      after 'ifeq' directive
    + S8218738: Remove dead code in Symbol and friends
    + S8218754: JDK-8068225 regression in JDIBreakpointTest
    + S8218755: Refix Symbol leak in prepend_host_package_name
    + S8218807: Compilation database (compile_commands.json) may
      contain obsolete items
    + S8218882: NET_Writev is declared, NET_WriteV is defined
    + S8218888: keytool -genkeypair should not have the -destalias
      option

-------------------------------------------------------------------
Thu Feb  7 15:54:01 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+7
  * Fixes:
    + S6986483: CHA: optimize calls through interfaces
    + S8059241: C2: Excessive RemoveUseless passes during
      incremental inlining
    + S8075052: Autobox elimination hinders loop unrolling
    + S8139551: Scalability problem with redefinition - multiple
      code cache walks
    + S8160926: FLAGS_COMPILER_CHECK_ARGUMENTS doesn't handle
      cross-compilation
    + S8178798: Two compiler/aot/verification/vmflags tests fail by
      timeout with UseAVX=3
    + S8180901: Transformer.reset() resets the state only once
    + S8186321: Cleanup: SourceTreeManager not used
    + S8188133: C2: Static field accesses in clinit can trigger
      deoptimizations
    + S8195716: BootstrapLoggerTest : Executor still alive
    + S8204564: Need better error output when GenerateLinkOptData
      fails
    + S8206132: DOM parser does not honor
      DocumentBuilderFactory.setExpandEntityReferences(false)
    + S8209951: Problematic sparc intrinsic:
      com.sun.crypto.provider.CipherBlockChaining
    + S8210832: Remove sneaky locking in class Monitor
    + S8212949: Remove ConstantPoolCache::is_constantPoolCache
    + S8213753: SymbolTable is double walked during class unloading
      and clean up table timing in do_unloading
    + S8214935: Upgrade IANA LSR data
    + S8214975: No hs-err file if fatal error is raised during
      dynamic initialization
    + S8215483: Off heap memory accesses should be vectorized
    + S8215505: Cleanup jvm.cpp obsolete code after JDK-8210094:
      Better loading of classloader classes
    + S8215550: Debugger does not work after reattach
    + S8215568: Refactor SA clhsdb tests to use ClhsdbLauncher
    + S8216046: test/jdk/java/beans/PropertyEditor/Test6397609.java
      failing
    + S8216072: Remove TaskTerminator's assignment operator
    + S8216528: test/jdk/java/rmi/transport/
      /runtimeThreadInheritanceLeak/RuntimeThreadInheritanceLeak.java
      failing with Xcomp
    + S8216541: CompiledICHolders of VM locked unloaded nmethods
      are released too late
    + S8216546: Support new Japanese era in java.lang.Character for
      Java SE 11
    + S8217093: Support extended-length paths in parse_manifest.c
      on windows
    + S8217371: Incorrect LP64 guard in x86.ad after JDK-8210764
      (Update avx512 implementation)
    + S8217393: Clarify Attributes.equals()
    + S8217432: MetaspaceGC::_capacity_until_GC exceeds
      MaxMetaspaceSize
    + S8217473: SA: Tests using ClhsdbLauncher fail on SAP docker
      containers
    + S8217474: Remove WhiteBox.getConcurrentGCPhases()
    + S8217579: TLS_EMPTY_RENEGOTIATION_INFO_SCSV is disabled after
      8211883
    + S8217597: [TESTBUG] old version docker does not support --cpus
    + S8217659: monitor_logging updates from Async Monitor
      Deflation project
    + S8217843: Performance regression related to
      os::supports_monotonic_clock() on linux
    + S8217845: SA should refer const values for JVMFlag from
      HotSpot
    + S8217848: [Graal] vmTestbase/nsk/jvmti/ResourceExhausted/
      /resexhausted003/TestDescription.java fails
    + S8217879: hs_err should print more instructions in hex dump
    + S8217892: Clarify the support for the new Japanese era in
      java.time.chrono.JapaneseEra
    + S8217896: Make better use of LCPUs when building on AIX
    + S8217918: C2: -XX:+AggressiveUnboxing is broken
    + S8217919: C2: Enable -XX:+AggressiveUnboxing by default
    + S8217969: Base64.Decoder.decode methods do not need to throw
      OOME due to integer overflow
    + S8218020: Fix version number in mesa.md 3rd party legal file
    + S8218025: disable pop_frame and force_early_return caps for
      Graal
    + S8218029: [TESTBUG] Use -Djava.class.path= to specify empty
      -cp in CDS tests
    + S8218041: Assorted wrong/missing includes
    + S8218046: use bundled freetype in the AIX build by default
    + S8218079: cleanup hotspot ProblemList files
    + S8218133: sun/net/www/protocol/http/ProtocolRedirect.java
      failed with "java.net.ConnectException"
    + S8218134: Modify the jQuery.md file to reflect the exact
      jQuery license content
    + S8218140: Build failures after JDK-8218041 (Assorted
      wrong/missing includes)
    + S8218145: block_if_requested is not proper inlined due to size
    + S8218151: Simplify JavaThread::thread_state definition
    + S8218156: "jcmd VM.metaspace basic" misreports free chunk
      space
    + S8218162: problem list j/u/s/t/o/o/t/java/util/stream/
      /StreamLinkTest.java on solaris w/ Xcomp
    + S8218163: C2: Continuous deoptimization w/
      Reason_speculate_class_check and Action_none
    + S8218164: Improve local control of compiler warnings
    + S8218168: clean up hotspot ProblemList
    + S8218177: Bump jib format_version to support new devkit
      archive layout
    + S8218178: vmTestbase/vm/mlvm/mixed/stress/regression/
      /b6969574/INDIFY_Test.java fails with -Xcomp
    + S8218185: aarch64: missing LoadStore barrier in
      TemplateTable::putfield_or_static
    + S8218186: Clean up CLDR generation in build
    + S8218197: [failurehandler] parent processes shouldn't be
      killed till their children are handle
    + S8218198: Revert devkit change in JDK-8217910 for linux-x64
    + S8218202: gc/stress/TestStressG1Humongous.java to
      ProblemList-graal.txt
    + S8218227: StringBuilder/StringBuffer constructor throws
      confusing NegativeArraySizeException
    + S8218265: java/util/Base64/TestEncodingDecodingLength.java
      failing
    + S8218276: AIX build fails in tieredThresholdPolicy.cpp
    + S8218386: Correct the SE version in j.l.Character
    + S8218406: C1: Redundant nmethod dependency for private method
      is added
    + S8218419: Can't get annotations that are present on packages
      in -Xbootclasspath/a
    + S8218460: Test generation scripts do not invoke stream
      preprocessor correctly
    + S8218544: Fix build on windows: missing include
    + S8218550: Add test omitted from JDK-8212043
    + S8218566: NMT: missing memory tag for assert poison page
    + S8218579: add hotspot/jtreg/runtime/CompressedOops/
      /UseCompressedOops.java to ProblemList.txt

-------------------------------------------------------------------
Thu Jan 31 12:53:32 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+6
  * Fixes:
    + S8067250: [mlvm] vm/mlvm/mixed/stress/regression/b6969574
      fails and perf regression
    + S8150757: [TESTBUG] compiler/ciReplay/TestVM.sh and
      compiler/ciReplay/TestVM_no_comp_level.sh fail when no
      compilations are happening
    + S8158646: [jittester] generated tests may not compile by javac
    + S8163127: Debugger classExclusionFilter does not work
      correctly with method references
    + S8167276: jvmci/compilerToVM/MaterializeVirtualObjectTest.java
      fails with -XX:-EliminateAllocations
    + S8191998: C2: inlining through MH linkers drops speculative
      part of argument types
    + S8192001: C2: inlining through dispatching MH linkers ignores
      speculative type of the receiver
    + S8193367: Annotated type variable bounds crash javac
    + S8194860: Cleanup Semaphore timed-wait time calculations
    + S8207922: ctw of jdk.security.auth failed with "Unexpected
      zero exit codebefore finishing all compilations"
    + S8210130: java/net/httpclient/UnknownBodyLengthTest.java
      failed
    + S8210469: Missing doPriviledged block and permission for
      jdk.zipfs module
    + S8210583: Base64.Encoder incorrectly throws
      NegativeArraySizeException
    + S8212824: Remove unnecessary spaces before/after comparison
      in vmTestbase
    + S8213229: Investigate treating StringTable as weak in young
      collections
    + S8213231: ThreadSnapshot::_threadObj can become stale
    + S8213825: assert(false) failed: Non-balanced monitor
      enter/exit! Likely JNI locking
    + S8214533: IBM-29626C is required for AIX default charset
    + S8214799: Add package declaration to each JTREG test case in
      the gc folder
    + S8214821: Remove ConcurrentHashTable::get_copy
    + S8215047: Task terminators do not complete termination in
      consistent state
    + S8215577: Remove javadoc support for HTML 4
    + S8215921: There is no change when select different Foreground
      and Background by mouse.
    + S8216136: Take Compile_lock for
      SystemDictionary::_modification_counter with safepoint check
    + S8216180: [AOT] compiler/intrinsics/bigInteger/TestMulAdd.java
      crashed with AOT enabled
    + S8216258: Make FreeIdSet semaphore-based
    + S8216386: vmTestbase/nsk/jvmti/PopFrame/popframe005/
      /TestDescription.java fails
    + S8216408: XMLStreamWriter setDefaultNamespace(null) throws
      NullPointerException
    + S8216493: VirtualSpaceNodeTest
      .half_vsn_is_committed_humongous_chunk_is_used_test_vm
      crashes on local machine
    + S8216562: UnknownBodyLength sometimes fails due to
      "Connection reset by peer"
    + S8216970: condy causes JVM crash
    + S8216986: Remove unused code from SocksSocketImpl
    + S8216987: ciMethodData::load_data() unpacks MDOs with
      non-atomic copy
    + S8217016: Shenandoah: Streamline generation of CAS barriers
    + S8217264: HttpClient: Blocking operations in mapper function
      do not work as documented
    + S8217309: ZGC: Fix ZNMethodTable corruption
    + S8217345: [TESTBUG] JFR TestShutdownEvent fails due to
      improper use of Unsafe
    + S8217353: java/util/logging/LogManager/Configuration/
      /updateConfiguration/HandlersOnComplexResetUpdate.java fails
      with Unexpected reference: java.lang.ref.WeakReference
    + S8217366: ZoneStrings are not populated for all the Locales
    + S8217368: AArch64: C2 recursive stack locking optimisation
      not triggered
    + S8217429: WebSocket over authenticating proxy fails to send
      Upgrade headers
    + S8217459: [PPC64] Cleanup non-vector version of CRC32
    + S8217465: [REDO] - Optimize CodeHeap Analytics
    + S8217471: [TESTBUG] gc/epsilon/TestClasses.java fails on some
      platforms - OOME Metaspace
    + S8217518: Crypto benchmarks not warming up in time
    + S8217520: Remove vm.opt.MaxGCPauseMillis == "null" from
      TestOldGenCollectionUsage.java
    + S8217578: Shenandoah cleanup unused timings after concurrent
      string table change
    + S8217579: TLS_EMPTY_RENEGOTIATION_INFO_SCSV is disabled after
      8211883
    + S8217580: Remove tests from problemList as bugs has been
      closed
    + S8217609: New era placeholder not recognized by
      java.text.SimpleDateFormat
    + S8217612: (CL)HSDB cannot show some JVM flags
    + S8217613: [AOT] TEST_OPTS_AOT_MODULES doesn't work on mac
    + S8217618: JVM TI SuspendThread doesn't suspend the current
      thread before returning
    + S8217626: Add setup/teardown functionality to RunTest
    + S8217627: HttpClient: The API documentation of
      BodySubscribers::mapping promotes bad behavior
    + S8217628: Verbose ArrayIndexOutOfBoundsException message also
      in JNI calls.
    + S8217634: RunTest documentation and usability update
    + S8217638: Remove old way of running tests (test/Makefile)
    + S8217657: Move the test for default value of
      jdk.includeInExceptions into own test
    + S8217658: baseline_cleanups from Async Monitor Deflation
      project
    + S8217660: Refactor module related
      locked_create_entry_or_null() functions
    + S8217666: gc/nvdimm/* should not be included any tiers
    + S8217678: [AOT] jck Math/IncrementExact and
      Math/DecrementExact tests fail when test classes are AOTed
    + S8217699: add java/util/concurrent/CountDownLatch/Basic.java
      to ProblemList-Xcomp
    + S8217716: Remove dead code in PhaseChaitin
    + S8217717: ZGC: Broken oop map in C1 load barrier stub
    + S8217730: Split up MakeBase.gmk
    + S8217733: Minor RunTest fixes
    + S8217740: SocksIPv6Test compilation error
    + S8217744: [TESTBUG] JFR TestShutdownEvent fails on some
      systems due to process surviving SIGINT
    + S8217745: ZGC: Simplify ZLoadBarrierStubC1
    + S8217746: Remove java/nio/file/WatchService/LotsOfCancels.java
      from JDK problem list
    + S8217747: ZGC: Minor optimization of ZLoadBarrierStubC1
    + S8217748: [TESTBUG] Exclude TestSig test case from JFR
      TestShutdownEvent
    + S8217760: C2: Missing symbolic info on a call from intrinsics
      when invoked through MethodHandle
    + S8217761: Enhance run-test-prebuilt jib profile to support
      running tests with JCov
    + S8217770: problem list
      org.graalvm.compiler.debug.test.DebugContextTest
    + S8217773: Test langtools/jdk/javadoc/doclet/testLinkOption/
      /TestRedirectLinks.java fails after JDK-8217034
    + S8217777: TEST_BUG: jdk/java/util/prefs/ExportSubtree.java
      passes even when test should fail
    + S8217782: Spill detection broken after JDK-8217716
    + S8217785: Padding
      ParallelTaskTerminator::_offered_termination variable
    + S8217786: Provide virtualization related info in the hs_error
      file on linux s390x
    + S8217794: Missing termination check results violation of
      termination invariant
    + S8217795: Typo in SSLSocket
    + S8217797: ProblemList LongMulOverflowTest.java
    + S8217801: ProblemList INDIFY_Test.java
    + S8217820: Useless cast in ECUtil.java
    + S8217828: Un-ProblemList LongMulOverflowTest.java
    + S8217841: Remove unused class TraceCPUTime
    + S8217850: CompressedClassSpaceSizeInJmapHeap fails after
      JDK-8217612
    + S8217852: problem-list ctw of jdk.jconsole and java.desktop
      on windows
    + S8217854: [TESTBUG] runtime/CompressedOops/
      /UseCompressedOops.java fails with Shenandoah
    + S8217855: ZGC: Clean up ZReferenceProcessor
    + S8217856: ZGC: Break out C2 matching rules into separate AD
      file
    + S8217857: ZGC: Move SvcGCMarker to ZServiceabilityTracer
    + S8217858: ZGC: Clean up ZDriver
    + S8217869: Add count_leading_zeros utility
    + S8217877: Dead code in jdk.jlink's TaskHelper
    + S8217880: AIX build issue after JDK-8214533
    + S8217882: java/net/httpclient/MaxStreams.java failed once
    + S8217903: java/net/httpclient/Response204.java fails with 404
    + S8217910: Slow linking with devkit on Linux
    + S8217916: Build compare script is not comparing jmods
    + S8217921: Runtime dead code removal
    + S8217922: Compiler dead code removal
    + S8217976: test/jdk/java/net/httpclient/websocket/
      /WebSocketProxyTest.java fails intermittently
    + S8217979: lib-freetype related configure messages contain
      wrong configure flag names
    + S8217994: os::print_hex_dump should be more resilient against
      unreadable memory
    + S8218022: Repeated words typos in java.base
    + S8218031: Zero broken after JDK-8217922 (Compiler dead code
      removal)
    + S8218057: Add ppc64le and s390x profiles to jib-profiles.js
    + S8218060: JDK-8217786 breaks build due to remaining unused
      function
    + S8218063: JDK-8218060 breaks build for S390
    + S8218084: Revert JDK-8218057

-------------------------------------------------------------------
Tue Jan 29 08:34:49 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+5
  * Fixes:
    + S8158066: SourceDebugExtensionTest fails to rename file
    + S8181313: SA: Remove libthread_db dependency on Linux
    + S8202952: C2: Unexpected dead nodes after matching
    + S8203687: javax/net/ssl/compatibility/Compatibility.java
      supports TLS 1.3
    + S8207404: MulticastSocket tests failing on AIX
    + S8211919: ZipDirectoryStream should provide a stream of paths
      that are relative to the directory
    + S8212826: Make PtrQueue free list lock-free
    + S8213234: Move LambdaForm.Hidden to jdk.internal.vm.annotation
    + S8213695: gc/TestAllocateHeapAtMultiple.java is slow in some
      configs
    + S8213827: NUMA heap allocation does not respect process
      membind/interleave settings
    + S8213917: [TESTBUG] Shutdown JFR event is not covered by test
    + S8213932: [TESTBUG] assertEquals is invoked with the
      arguments in the wrong order
    + S8214235: arm32: assertion in collectedHeap.cpp: attempt to
      clean empty remainder
    + S8214345: infinite recursion while checking super class
    + S8215280: Double click on titlebar not working for Frame with
      extended state set to MAXIMIZED_BOTH
    + S8215375: [Graal] jck:vm/jvmti/Exception/excp001/excp00101
      fails in Graal as JIT mode and -Xcomp mode
    + S8215467: Files.isHidden should return true for hidden
      directories on Windows
    + S8215694: keytool cannot generate RSASSA-PSS certificates
    + S8215699: -Xlog::file cannot be used with named pipe
    + S8215748: Application fails when executed with Graal
    + S8215757: C2: PhaseIdealLoop::create_new_if_for_predicate()
      computes wrong IDOM
    + S8215776: Keytool importkeystore may mix up certificate chain
      entries when DNs conflict
    + S8215937: Check usages of security-related Resources files
    + S8215952: Update NetBeans project file
    + S8215976: Fix gmtime_r declaration conflicts in zip.cpp with
      linux header files
    + S8216045: The size of key_exchange may be wrong on FFDHE
    + S8216060: [PPC64] Vector CRC implementation should be used by
      interpreter and be faster for short arrays
    + S8216280: Allow later Symantec Policy distrust date for two
      Apple SubCAs
    + S8216314: SIGILL in CodeHeapState::print_names()
    + S8216350: AArch64: monitor unlock fast path not called
    + S8216490: Spammy periodic GC log message contains random time
      stamp with periodic gc disabled
    + S8216532: tools/launcher/Test7029048.java fails (Solaris)
    + S8216561: HttpClient: The logic of retry on connect exception
      is inverted
    + S8216578: Remove unused/obsolete method in JFR code
    + S8216965: crash in freetypeScaler.c CopyBW2Grey8
    + S8216969: ParseException thrown for certain months with
      russian locale
    + S8217014: Epsilon should not ignore Metadata GC causes
    + S8217034: JavadocTester should check for missing files by
      default
    + S8217042: Shenandoah: write barrier on backedge of strip
      mined loop causes c2 crash at expansion time
    + S8217043: Shenandoah: SIGSEGV in Type::meet_helper() at
      barrier expansion time
    + S8217203: Some more includes to .inline.hpp files in gc
      header files
    + S8217213: shenandoahTaskQueue.hpp includes .inline.hpp file
    + S8217230: assert(t == t_no_spec) failure in
      NodeHash::check_no_speculative_types()
    + S8217233: Update build settings for AIX/xlc
    + S8217237: HttpClient does not deal well with multi-valued
      WWW-Authenticate challenge headers
    + S8217250: Optimize CodeHeap Analytics
    + S8217257: ZGC: Minor cleanup of ZBarrierSetC2
    + S8217258: ZGC: Minor cleanup of ZBarrierSetAssembler
    + S8217266: Remove dead LIR_List::compare_to and
      LIR_Code::lir_compare_to
    + S8217291: Failure of ::realloc() should be handled correctly
      in adlc/forms.cpp
    + S8217311: Improve Exception thrown when
      MulticastSocket.setInterface fails on AIX(Unix)
    + S8217315: Proper units should print more significant digits
    + S8217318: Unneeded handleization in
      InstanceKlass::restore_unshareable_info
    + S8217319: Cleanup Shenandoah includes
    + S8217321: [TESTBUG] utilities/test_globalDefinitions.cpp
      should use _LP64, not LP64
    + S8217325: Enable inlining of java_lang_Class::oop_size_raw
    + S8217337: [TESTBUG] TestThreadDumpClassInitMonitor.java fails
      with Unexpected thread info line
    + S8217339: ClassCircularityError loading NumberFormatProvider
    + S8217340: Compilation failed: tools/launcher/Test7029048.java
    + S8217342: Build failed with excluding JFR
    + S8217343: Shenandoah control thread should be able to run at
      critical priority
    + S8217344: Make comparison overflow-aware in
      ECDHKeyAgreement.engineGenerateSecret()
    + S8217349: Problem list java/lang/invoke/LFCaching/
      /LFMultiThreadCachingTest.java
    + S8217357: Implement JCov jib profiles
    + S8217358: Optimized build is broken by Shenandoah changes
    + S8217359: C2 compiler triggers SIGSEGV after transformation
      in ConvI2LNode::Ideal
    + S8217374: Rename G1 EvacuationInfo class to G1EvacuationInfo
    + S8217378: UseCriticalCMSThreadPriority is broken
    + S8217387: Remove dead develop flag CIFireOOMAt
    + S8217388: Remove develop flag ProfilerPCTickThreshold
    + S8217391: [TESTBUG] problem list JFR TestShutdownEvent
    + S8217394: Remove org.graalvm.compiler.debug.test.TimerKeyTest
      from problem list
    + S8217395: Update langtools shell tests to use ${EXE_SUFFIX}
    + S8217399: Backout 8217358
    + S8217400: Optimized build is broken by Shenandoah changes
    + S8217404: --with-jvm-features doesn't work when multiple
      features are explicitly disabled
    + S8217407: StackValue::print_on() crashes on NULL handle
    + S8217419: Shenandoah fails to build after JDK-8212826 (Make
      PtrQueue free list lock-free)
    + S8217423: Windows gtest build fails after JDK-8212826 (Make
      PtrQueue free list lock-free)
    + S8217424: Remove the idempotent parameter to
      Method::sort_methods
    + S8217427: (dc) nio/channels/DatagramChannel/
      /UseDGWithIPv6.java fails without IPv6
    + S8217438: Adapt tools/launcher/Test7029048.java for Aix.
    + S8217442: Optimize native accesses to String.value
    + S8217445: [JVMCI] incorrect management of JVMCI compilation
      failure reason string
    + S8217447: Develop flag TraceICs is broken
    + S8217448: Check for pandoc availability using ENABLE_PANDOC
      and not PANDOC
    + S8217450: Add PackageEntry::locked_lookup_only
    + S8217451: ExtendedSocketOptions should encapsulate support
      for SO_FLOW_SLA
    + S8217461: (ch) Add Net.available to return the number of
      bytes in the socket input buffer
    + S8217466: [BACKOUT] Optimize CodeHeap Analytics
    + S8217467: Access barriers are missing in C2 intrinsic for
      Base64
    + S8217500: (sc) Move SocketChannelImpl's remaining native
      methods to Net
    + S8217503: ZGC: Fix fall through bug in
      ZBarrierSetC2::escape_add_final_edges()
    + S8217512: Message of LinkageError: use 'class' etc. instead
      of 'type'
    + S8217519: Improve RegMask population count calculation
    + S8217522: Missing barriers in some java_lang_String assertion
      code after JDK-8217442
    + S8217629: RegMask::find_lowest_bit can reuse
      count_trailing_zeros utility
    + S8217639: Minimal and Zero builds fail after JDK-8217519
      (Improve RegMask population count calculation)

-------------------------------------------------------------------
Tue Jan 29 08:24:39 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-13+4 (Oracle January 2019 CPU)
  * Security fixes:
    + S8206290, CVE-2019-2422, bsc#1122293: Better FileChannel
      transfer performance
    + S8209094, CVE-2019-2426: Improve web server connections
    + S8210866, CVE-2018-11212, bsc#1122299: Improve JPEG
      processing
  * Security-In-Depth fixes:
    + S8199156: Better route routing
    + S8199166: Better interface lists
    + S8199552: Update to build scripts
    + S8200659: Improve BigDecimal support
    + S8203955: Improve robot support
    + S8204895: Better icon support
    + S8205709: Proper allocation handling
    + S8205714: Initial class initialization
    + S8206295: More reliable p11 transactions
    + S8206301: Improve NIO stability
    + S8210094: Better loading of classloader classes
    + S8210598: Strengthen Windows Access Bridge Support
    + S8210606: Improved data set handling
    + S8210610: Improved LSA authentication
    + S8210870: Libsunmscapi improved interactions
  * Fixes:
    + S6913047: Long term memory leak when using PKCS11 and JCE
      exceeds 32 bit process address space
    + S8007606: Handle realloc() failure in
      unix/native/libnet/net_util_md.c correctly
    + S8080569: java/lang/ProcessBuilder/DestroyTest.java fails
      with "Process terminated prematurely"
    + S8196568: [Graal] LongMulOverflowTest.java fails with
      "runTestOverflow() did not overflow"
    + S8198526: getAnnotatedOwnerType does not handle static nested
      classes correctly
    + S8199892: Missing landmarks when generating docs using html
      sources
    + S8202626: javadoc generates broken links to <Unnamed>
    + S8202675: Replace process-wide terminology in serial
      filtering to be consistent
    + S8203654: Improve cypher state updates
    + S8203688: [testbug] Nashorn test test/nashorn/script/
      /nosecurity/treeapi/diagnostic.js fails
    + S8205360: Choose printer defaults
    + S8207964: [TESTBUG] Change stressTime to default to 30 for
      nsk tests
    + S8208371: Provided supported mechanims to create a
      ModuleElement for an unnamed module
    + S8210392: assert(Compile::current()->live_nodes() <
      Compile::current()->max_node_limit()) failed: Live Node limit
      exceeded limit
    + S8210561: Command-line help wrong for javac --module
    + S8210624: Clean up better loading tests
    + S8211841: [testbug] sun/nio/cs/OLD/TestIBMDB.java does not
      compile (aix)
    + S8212233: javadoc fails on jdk12 with "The code being
      documented uses modules but the packages defined in $URL are
      in the unnamed module."
    + S8213249: compiler/graalunit/HotspotTest.java failed in
      ExplicitExceptionTest
    + S8213299: runtime/appcds/jigsaw/classpathtests/
      /EmptyClassInBootClassPath.java failed with
      java.lang.NoSuchMethodException
    + S8213397: Stack dump should show more clearly when a thread
      is blocked on a class initialization monitor
    + S8214271: Fast primitive to wake many threads
    + S8214418: half-closed SSLEngine status may cause application
      dead loop
    + S8214440: ldap over a TLS connection negotiate failed with
      "javax.net.ssl.SSLPeerUnverifiedException: hostname of the
      server '' does not match the hostname in the server's
      certificate"
    + S8214816: os::read() should not transition to _thread_blocked
      with safepoint check on Solaris
    + S8214827: Incorrect call
      ClassLoaders.toFileURL("jrt:/java.compiler")
    + S8215114: Fix indent and dead code in GCPolicyCounters
    + S8215155: Remove get_insert() from concurrent hashtable and
      gtests
    + S8215244: jdk/jshell/ToolBasicTest.java testHistoryReference
      failed
    + S8215299: Remove G1CMTask::should_exit_termination()'s
      undesirable side-effect
    + S8215313: [AOT] java/lang/String/Split.java fails with AOTed
      java.base
    + S8215482: check for cycles in type variables can provoke NPE
    + S8215493: String::indent inconsistency with blank lines
    + S8215544: SA: Modify ClhsdbLauncher to add sudo privileges to
      enable MacOS tests on Mach5
    + S8215549: Shenandoah deduplication cleans up table/queue twice
    + S8215648: remove equals and hashCode implementations from
      j.l.i.VarHandle
    + S8215724: Epsilon: ArrayStoreExceptionTest.java fails;
      missing arraycopy check
    + S8215729: Enhance makefiles to allow collecting code coverage
      with JCov
    + S8215754: ZGC: nmethod is not unlinked from Method before
      rendezvous handshake
    + S8215889: assert(!_unloading) failed: This oop is not
      available to unloading class loader data with ZGC
    + S8215922: jar spec is not precise when describing jar file
      re-signing
    + S8216050: Superword optimization fails with assert(0 <= i &&
      i < _len) failed: illegal index
    + S8216135: C2 assert(!had_error) failed: bad dominance
    + S8216140: Correct UnicodeDecoder U+FFFE handling
    + S8216151: [Graal] Module jdk.internal.vm.compiler.management
      has not been granted accessClassInPackage.org.graalvm.compiler.debug
    + S8216167: Update include guards to reflect correct directories
    + S8216172: File.renameTo(File dest) should check for NPE at
      the very beginning
    + S8216184: CDS/appCDS tests failed on Windows due to long path
      to a classlist file
    + S8216265: [testbug] Introduce
      Platform.sharedLibraryPathVariableName() and adapt all tests.
    + S8216278: Fix devkit and basic Jib support on WSL
    + S8216308: StackTraceElement::fill_in can use injected Class
      source-file
    + S8216316: Tests fail due to too low specified TLAB size
    + S8216319: Refactor JavadocTester to allow more on-by-default
      checkers; add A11YChecker
    + S8216355: missing NULL checks in libnet in interface
      iteration and potential resource leak in getMacAddress
    + S8216362: Better error message handling when there is an
      invalid Manifest
    + S8216376: [PPC64] Possibly unreliable stack frame resizing in
      template interpreter
    + S8216401: Allow "file:" URLs in Class-Path of local JARs
    + S8216404: Elements.getPackageOf should handle modules
    + S8216424: Remove TimeLivenessAnalysis
    + S8216426: Usage of array placement new may lead to memory
      corruption
    + S8216427: ciMethodData::load_extra_data() does not always
      unpack the last entry
    + S8216428: Remove IgnoreLibthreadGPFault
    + S8216478: Cleanup HttpResponseImpl back reference to
      HttpConnection
    + S8216480: Typo in
      test/hotspot/jtreg/compiler/graalunit/README.md
    + S8216482: Shenandoah: typo in
      ShenandoahBarrierSetC2::clone_barrier_at_expansion() causes
      failed compilations
    + S8216486: Possibility of integer overflow in
      JfrThreadSampler::run()
    + S8216489: Issues with ModulePackages attribute generation on
      incremental build
    + S8216498: Confusing and unneeded wrapping of
      SSLHandshakeException
    + S8216529: in case of a crash, javac should print out the
      parameters passed to it
    + S8216549: Mismatched unsafe access to non escaping object
      fails
    + S8216556: Unnecessary liveness computation with JVMTI
    + S8216559: [JFR] Native libraries not correctly parsed from
      /proc/self/maps
    + S8216560: gtest build broken on PPC64 and aarch64
    + S8216563: [TESTBUG] Change stressTime to default to 30 for
      nsk tests (part 2)
    + S8216589: s390x build failures after JDK-8216167 (Update
      include guards to reflect correct directories)
    + S8216595: Fix broken builds after JDK-8216424
    + S8216973: Kick up cleanup phases in the right places
    + S8216974: HttpConnection not returned to the pool after 204
      response
    + S8216982: Assertion poison page established too early
    + S8216995: Clean up JFR command line processing
    + S8217000: Refactor Class::methodToString
    + S8217017: [TESTBUG] Tests fail to compile after JDK-8216265
    + S8217044: [aix] Launcher still adds old path to jli library
      to LIBPATH
    + S8217088: Disable JDK-6913047 fix (SunPKCS11 memory leak)
      after JDK-8216597 (SIGBUS error in getNativeKeyInfo)
    + S8217094: HttpClient SSL race if a socket IOException is
      raised before ALPN is available
    + S8217214: Recent new javadoc test needs to be updated

-------------------------------------------------------------------
Fri Jan 11 09:46:07 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Rename package to java-13-openjdk and switch to the jdk-13+X tags
- Upgrade to upstream tag jdk-13+3
  * Fixes:
    + S6714324: Removing a component from a JTabbedPane does not
      clear its accessibleParent
    + S6996807: FieldReflectorKey hash code computation can be
      improved
    + S8076988: reevaluate trivial method policy
    + S8179943: Typo in javax.net.ssl.SSLSession.removeValue(String)
      method documentation
    + S8182992: Typo in DatagramPacket constructor API doc
    + S8196347: LogCompilation: generate log file on the fly for
      input to junits
    + S8196681: Java Access Bridge logging and debug flags
      dynamically controlled
    + S8208184: IllegalArgumentException while invoking code
      completion on netbeans IDE
    + S8209414: AArch64: method handle invocation does not respect
      JVMTI interp_only mode
    + S8210669: Some launcher tests assume a pre-JDK 9 run-time
      image layout
    + S8210788: Javadoc for Thread.join(long, int) should specify
      that it waits forever when both arguments are zero
    + S8211267: StackOverflowError happened by
      TextField.setFont(...)
    + S8213001: vmTestbase/nsk/jvmti/ThreadStart/threadstart002/
      /TestDescription.java debug agent times out
    + S8213457: serviceability/sa/ClhsdbInspect.java time out
    + S8214122: JDWP is broken on 32 bit Windows: transport library
      missing onLoad entry
    + S8214442: Improve stack walk API by adding handle marks
    + S8214461: Some unused classes may be removed
    + S8214738: javadoc should honor styles in doc-files
    + S8214862: assert(proj != __null) at compile.cpp:3251
    + S8215044: C2 crash in loopTransform.cpp with
      assert(cl->trip_count() > 0) failed: peeling a fully unrolled
      loop
    + S8215112: String::transform spec clarification
    + S8215123: Crash in runtime image built with jlink --compress=2
    + S8215200: IllegalArgumentException in
      sun.lwawt.macosx.CPlatformWindow
    + S8215265: C2: range check elimination may allow illegal out
      of bound access
    + S8215308: pandoc-html-manpage-filter.js does not work for
      [un]pack200
    + S8215330: javax.xml.catalog.CatalogResolverImpl:
      GroupEntry.matchURI fails to match
    + S8215398: -Xlog option usage => Invalid decorator
      '\temp\app_cds.log'.
    + S8215400: Warn on usage of trampolines with gcc
    + S8215412: Optimize PrintStream.println methods
    + S8215438: jshell tool: Ctrl-D causes EOF
    + S8215489: Remove String::align
    + S8215495: Set isCopy to JNI_FALSE if len == 0
    + S8215510: j.l.c.ClassDesc is accepting descriptors not
      allowed by the spec
    + S8215572: Add new Arrays micros
    + S8215575: C2 crash: assert(get_instanceKlass()->is_loaded())
      failed: must be at least loaded
    + S8215583: Exclude
      runtime/handshake/HandshakeWalkSuspendExitTest.java
    + S8215643: Microbenchmarks for KeyAgreement and Cipher
    + S8215644: Clean up globalDefinitions_<compiler>.hpp
    + S8215681: Remove compiler support for Raw String Literals
      from JDK 12
    + S8215708: ZGC: Add missing LoadBarrierNode::size_of()
    + S8215724: Epsilon: ArrayStoreExceptionTest.java fails;
      missing arraycopy check
    + S8215731: Move forward class definitions out of
      globalDefinitions.hpp
    + S8215755: ZGC: split_barrier_thru_phi: check number of inputs
      of phi
    + S8215756: Memory leaks in the AWT on macOS
    + S8215771: The jfr tool should pretty print reference chains
    + S8215773: applications/kitchensink/Kitchensink.java crash
      with "assert(ZAddress::is_marked(addr)) failed: Should be
      marked"
    + S8215791: Tiny bug in VM monitoring/management
    + S8215798: Use {@systemProperty} for definition of
      org.openjdk.java.util.stream.tripwire property
    + S8215888: Register to register spill may use AVX 512 move
      instruction on unsupported platform.
    + S8215901: [TESTBUG] TestCheckedEnsureLocalCapacity.java fails
      intermittently
    + S8215909: Typo in Swing ProcessMouseEvent method documentation
    + S8215910: Typo in AWT InvocationEvent Method Documentation.
    + S8215911: Various Typos in SQL Method Documentation
    + S8215912: Various Typos in java.net Method Documentation
    + S8215913: [Test_bug]java/util/Locale/LocaleProvidersRun.java
      failed on de_DE and ja_JP locale.
    + S8215947: JVM crash with -XX:+DumpSharedSpaces
    + S8215951: AArch64: jtreg test
      vmTestbase/nsk/jvmti/PopFrame/popframe005 segfaults
    + S8215961: jdk/jfr/event/os/TestCPUInformation.java fails on
      AArch64
    + S8215962: Support ThreadPriorityPolicy mode 1 for non-root
      users on linux/bsd
    + S8215975: [testbug] Adapt nsk tests to the PPC, S390 and AIX
      platforms.
    + S8215985: ZGC: Simplify reference processing in light of
      JDK-8175797
    + S8215990: Avoid using reflection to create common default
      URLStreamHandlers
    + S8215991: Stop hiding exception from ArtifactResolver
      failures in tests
    + S8215994: JDK 12 l10n resource file update - msg drop 10
    + S8215995: Add specialized toArray methods to immutable
      collections
    + S8216010: Change callers of build_u2_from() to call
      Bytes::get_Java_u2() instead
    + S8216021: RunTest.gmk might set concurrency level to 1 on
      Windows
    + S8216048: Fix devkit creation in WSL
    + S8216059: nsk_jvmti_parseoptions still has dependency on
      tilde separator
    + S8216067: Unused local vars in
      windows/native/libjava/io_util_md.c
    + S8216134: (process) ProcessBuilder startPipeline does not
      hide piped streams
    + S8216154: C4819 warnings at HotSpot sources on Windows
    + S8216155: C4819 warning at libfreetype sources on Windows
    + S8216157: Enable inlining of java_lang_Class::is_primitive
    + S8216176: Clarify the singleton description in
      j.t.c.JapaneseEra class
    + S8216188: Remove expired flags in JDK 13
    + S8216189: Remove Klass::compute_is_subtype_of
    + S8216191: Remove FastSuperclassLimit
    + S8216197: Remove unused new_hash methods
    + S8216199: Local variable arg defined but never used in
      BCEscapeAnalyzer::compute_escape_for_intrinsic()
    + S8216200: BCEscapeAnalyzer::ArgumentMap::set_intersect() is
      incorrect
    + S8216205: Java API documentation formatting error in
      System.getEnv
    + S8216262: Remove develop flag DelayCompilationDuringStartup
    + S8216266: ProblemList PeelingZeroTripCount.java
    + S8216267: Fix hotspot-ide-project target on WSL
    + S8216269: [s390] Debug build broken because CodeBlob has not
      been declared
    + S8216271: Make AllocateOldGenAt an unsupported option on AIX.
    + S8216275: Disable annotation processing lint warnings when
      building microbenchmarks
    + S8216285: Enable inlining of
      CollectedHeap::obj-/array-/class_allocate
    + S8216302: StackTraceElement::fill_in can use cached Class.name
    + S8216322: Missing since information in deprecation of
      constructor visitors
    + S8216335: Minor cleanups to javax.annotation.processing and
      javax.lang.model javadoc
    + S8216359: Remove develop flags TraceCompilationPolicy and
      TimeCompilationPolicy
    + S8216366: Add rationale to PER_CPU_SHARES define
    + S8216372: ZGC: Put C2 load barrier stub routines in separate
      codeblobs
    + S8216375: Revert JDK-8145579 after JDK-8076988 is resolved
    + S8216385: ZGC: Fix building without C2
    + S8216403: Allocate fewer EnumSets in JavacFileManager#list
    + S8216413: Long.parseLong() is specified to throw unless
      string contains parsable {@code int}; should be {@code long}
    + S8216423: Remove FillDelaySlots
    + S8216441: problem list
      org.graalvm.compiler.hotspot.test.ExplicitExceptionTest

-------------------------------------------------------------------
Thu Jan 10 12:22:24 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Added patch:
  * loadAssistiveTechnologies.patch
    + Do not crash the whole JVM if assistive technologies crash

-------------------------------------------------------------------
Thu Jan 10 12:13:56 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Do not resolve by default the added JavaEE modules (fixes
  bsc#1120431)

-------------------------------------------------------------------
Wed Jan  9 15:06:27 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-12+26
  * Fixes:
    + S8066619: Fix deprecation warnings in java.util.jar
    + S8198526: getAnnotatedOwnerType does not handle static nested
      classes correctly
    + S8202286: Allocation of old generation of Java heap on
      alternate memory devices
    + S8205505: Expire and remove remaining support for commercial
      features
    + S8206107: [x86_32] jck tests for ldc2_w bytecode fail
    + S8208184: IllegalArgumentException while invoking code
      completion on netbeans IDE
    + S8211343: nsk_jvmti_parseoptions should handle multiple
      suboptions
    + S8211424: Allocation of old generation of java heap on
      alternate memory devices - Parallel GC
    + S8211425: Allocation of old generation of java heap on
      alternate memory devices - G1 GC
    + S8213481: [REDO] Fix incorrect copy constructors in hotspot
    + S8214096: sun.security.util.SignatureUtil passes null
      parameter, so JCE validation fails
    + S8214097: Rework thread initialization and teardown logic
    + S8214180: Need better granularity for sleeping
    + S8214201: Make PtrQueueSet completed buffer list private
    + S8214532: Update RFC 2459 references in javadoc to RFC 5280
    + S8214567: Use {@systemProperty} for definitions of system
      properties
    + S8214569: Use {@systemProperty} for definitions of system
      properties
    + S8214570: Use {@systemProperty} for definitions of system
      properties
    + S8214687: Optimize Collections.nCopies().hashCode() and
      equals()
    + S8215100: AArch64: fix compareTo intrinsic with
      four-character Latin/Unicode
    + S8215202: AArch64: jtreg test
      test/jdk/sun/nio/cs/FindEncoderBugs.java fails
    + S8215291: Broken links when generating from project without
      modules
    + S8215296: do not disable c99 on Solaris
    + S8215322: add @file support to jaotc
    + S8215364: JavaFX crashes on Ubuntu 18.04 with Wayland while
      using Swing-FX interop
    + S8215425: vmTestbase/nsk/jvmti/PopFrame should provide more
      detailed output
    + S8215445: Enable building for Windows in WSL
    + S8215487: ZGC: ZRuntimeWorkers incorrectly identify
      themselves as ZWorkers
    + S8215491: ICStubInterface::finalize finds zombie nmethod with
      ZGC concurrent class unloading
    + S8215492: Rename INTERNAL_EMPTY to something less "internal"
    + S8215500: ICRefillVerifierMark does not set the provided
      verfier as current
    + S8215516: Move JavadocTester to a named package
    + S8215547: ZGC: Fix incorrect match rule for
      loadBarrierWeakSlowRegNoVec
    + S8215548: G1PeriodicGCSystemLoadThreshold needs to be a double
    + S8215551: Missing case label in nmethod::reloc_string_for()
    + S8215555: TieredCompilation C2 threads can excessively block
      handshakes
    + S8215571: jdb does not include jdk.* in the default class
      filter
    + S8215635: Pandoc check in Docs.gmk does not work on Windows
    + S8215687: [Graal] unit test CheckGraalIntrinsics failed after
      8212043
    + S8215707: [macosx] fix pthread_getschedparam and
      pthread_setschedparam calls
    + S8215716: PopFrame() was unexpectedly done
    + S8215727: Restore JFR thread sampler loop to old / previous
      behavior
    + S8215759: [test] java/math/BigInteger/ModPow.java can throw
      an ArithmeticException
    + S8215769: Java cannot probe pkcs12 files exported by Firefox
    + S8215879: AArch64: ReservedStackAccess may leave stack guard
      in inconsistent state
    + S8215897: Build broken on zero after JDK-8211424
    + S8215898: Build broken on 32-bit after JDK-8211425
    + S8215954: [testbug] Remove unnecessary casts in
      test/hotspot/gtest/threadHelper.inline.hpp
    + S8215966: GeneratePropertyPassword.sh uses bash syntax
    + S8215977: hsdis installation documentation update
- Upgrade to upstream tag jdk-12+25
  * Fixes:
    + S8051349: nsk/jvmti/scenarios/sampling/SP06/sp06t003 fails in
      nightly
    + S8183912: java.math.BigDecimal.movePointLeft() should return
      this if called with zero argument
    + S8201655: Add thread-enabled support for the Heap Sampling
    + S8207224: Javac compiles source code despite illegal use of
      unchecked conversions
    + S8209333: Socket reset issue for TLS 1.3 socket close
    + S8209414: AArch64: method handle invocation does not respect
      JVMTI interp_only mode
    + S8211698: Crash in C2 compiled code during execution of
      double array heavy processing code
    + S8212043: Add floating-point Math.min/max intrinsics
    + S8213134: AArch64: vector shift failed with MaxVectorSize=8
    + S8213402: [Testbug] java/lang/System/LoggerFinder/internal/
      /PlatformLoggerBridgeTest creates an invalid nest relationship
    + S8213782: NullPointerException in
      sun.security.ssl.OutputRecord.changeWriteCiphers
    + S8214077: test java/io/File/SetLastModified.java fails on
      ARM32
    + S8214329: SwingMark SubMenus 9% regression in 12-b19 on Linux
      client
    + S8214339: SSLSocketImpl erroneously wraps SocketException
    + S8214352: C1: Unnecessary "compilation bailout: block join
      failed" with JVMTI
    + S8214512: ARM32: Jtreg test compiler/c2/Test8062950.java
      fails on ARM
    + S8214583: AccessController.getContext may return wrong value
      after JDK-8212605
    + S8214946: G1: Initialize all class members on construction
    + S8215099: jshell tool: /help representation of ctrl/meta
      characters inconsistent
    + S8215205: javaVFrame much slower than vframeStream
    + S8215228: Use a constant hash table size in order to enable
      compiler optimization
    + S8215292: Back out changes for node- and link- local ipv6
      multicast address
    + S8215319: jck lang/INTF/intf049/intf04901 fails in Graal as
      JIT mode with -Xcomp and AOTed Graal
    + S8215329: Modify ZGC requirement for
      HeapMonitorThreadTest.java
    + S8215353: x86_32 build failures after JDK-8214751 (X86:
      Support for VNNI Instructions)
    + S8215366: Code quality improvements in
      com.sun.tools.javac.code.TypeAnnotations
    + S8215368: Make Check.checkOverride call diagnosticPositionFor
      lazily
    + S8215372: Incorrect nio/file/DirectoryStream/Basic.java tests
      for validating the use of a glob
    + S8215374: 32-bit build failures after JDK-8181143 (Introduce
      diagnostic flag to abort VM on too long VM operations)
    + S8215380: Backout accidental change to String::length
    + S8215395: Allow null oops in Dictionary and JNIHandle
      verification
    + S8215397: jsig.c missing classpath exception
    + S8215410: Regression test for JDK-8214994
    + S8215411: some GetByteArrayElements calls miss corresponding
      Release
    + S8215443: The use of TransportContext.fatal() leads to bad
      coding style
    + S8215449: Several tests failing when jtreg run with
      -vmoption:--illegal-access=deny
    + S8215451: JNI IsSameObject should not keep objects alive
    + S8215472: (zipfs) Cleanups in implementation classes of
      jdk.zipfs and tests
    + S8215625: javax/sql/testng/util/xxxxx.java tests compilation
      failed after JDK-8207224
- Upgrade to upstream tag jdk-12+24
  * Fixes:
    + S6516099: InputStream.skipFully(int k) to skip exactly k bytes
    + S7092821: java.security.Provider.getService() is synchronized
      and became scalability bottleneck
    + S8076190: Customizing the generation of a PKCS12 keystore
    + S8152724: Sum of eden before GC and current survivor capacity
      may be larger than heap size
    + S8159440: Move marking of promoted objects during initial
      mark into the concurrent phase
    + S8165675: Trace event for thread park has incorrect unit for
      timeout
    + S8177552: Compact Number Formatting support
    + S8181143: Introduce diagnostic flag to abort VM on too long
      VM operations
    + S8193312: Rename VM_CGC_Operation to VM_G1Concurrent
    + S8198398: Test javax/swing/JColorChooser/Test6199676.java
      fails in mach5
    + S8199394: Object.hashCode should not mention anything about
      memory addresses
    + S8200613: SA: jstack throws UnmappedAddressException with a
      CDS core file
    + S8202884: SA: Attach/detach might fail on Linux if debugee
      application create/destroy threads during attaching
    + S8204947: Port ShenandoahTaskTerminator to mainline and make
      it default
    + S8205393: Add SourceVersion.RELEASE_13
    + S8205394: Add source 13 and target 13 to javac
    + S8205421: AARCH64: StubCodeMark should be placed after
      alignment
    + S8205516: JFR tool
    + S8205626: Start of release updates for JDK 13
    + S8205645: Bump maximum recognized class file version to 57
      for JDK 13
    + S8207258: Distrust TLS server certificates anchored by
      Symantec Root CAs
    + S8207829: FlightRecorderMXBeanImpl is leaking the first
      classloader which calls it
    + S8208277: Code cache heap (-XX:ReservedCodeCacheSize) doesn't
      work with 1GB LargePages
    + S8208648: ECC Field Arithmetic Enhancements
    + S8208698: Improved ECC Implementation
    + S8209387: Follow ups to JDK-8195100 Use a low latency
      hashtable for SymbolTable
    + S8210031: implementation for JVM Constants API
    + S8210106: sun/tools/jps/TestJps.java timed out
    + S8210107: vmTestbase/nsk/stress/network tests fail with
      Cannot assign requested address (Bind failed)
    + S8211034: OnStackReplacePercentage option checking has bugs
    + S8211093: Default logging.properties sets log level for
      com.xyz.foo
    + S8211844: [aix] ProcessBuilder: Piping between created
      processes does not work.
    + S8211882: Broken links in serialized-form.html
    + S8212137: Remove JrtFileSystem finalize method
    + S8212232: Wrong metadata for the configuration of the cutoff
      for old object sample events
    + S8212657: Implementation of JDK-8204089 Promptly Return
      Unused Committed Memory from G1
    + S8212703: Remove sun.java2d.fontpath property from java
      launcher code
    + S8212794: IBM-964 is required for AIX default charset
    + S8213009: Refactoring existing SunMSCAPI classes
    + S8213010: Supporting keys created with certmgr.exe
    + S8213049: Invalid HTML5 in javax.swing files
    + S8213127: Refactor test/java/util/ResourceBundle/Control/
      /MissingResourceCauseTest.sh to plain java tests
    + S8213183: InputMethod cannot be used after its restarting
    + S8213224: Move code related to GC threads calculation out of
      AdaptiveSizePolicy
    + S8213409: Refactor sun.text.IntHashtable:i18n shell tests to
      plain java tests
    + S8213421: Line number information for execution samples
      always 0
    + S8213617: JFR should record the PID of the recorded process
    + S8213754: PPC64: Add Intrinsics for
      isDigit/isLowerCase/isUpperCase/isWhitespace
    + S8213890: Implementation of JEP 344: Abortable Mixed
      Collections for G1
    + S8213952: Relax DNSName restriction as per RFC 1123
    + S8213966: The ZGC JFR events should be marked as experimental
    + S8213983: [macosx] Keyboard shortcut “cmd +`” stops working
      properly if popup window is displayed
    + S8214002: Cannot use italic font style if the font has
      embedded bitmap
    + S8214023: Update Graal
    + S8214052: [testbug] vmTestbase/vm/compiler/
      /CodeCacheInfoOnCompilation - wrong shell used
    + S8214074: Ghash optimization using AVX instructions
    + S8214098: sun.security.ssl.HandshakeHash.T12HandshakeHash
      constructor check backwards.
    + S8214114: Switch expressions with try-catch statements
    + S8214128: ARM32: wrong stack alignment on
      Deoptimization::unpack_frames
    + S8214129: SSL session resumption/SNI with TLS1.2 causes
      StackOverflowError
    + S8214148: [TESTBUG] serviceability/tmtools/jstack/
      /WaitNotifyThreadTest.java is not doing what is expected
    + S8214226: Incorrect BCI and Line Number with jstack if the
      top frame is in the interpreter
    + S8214257: IC cache not clean after cleaning assertion failure
    + S8214259: Implementation: JEP 189: Shenandoah: A
      Low-Pause-Time Garbage Collector (Experimental)
    + S8214275: CondyRepeatFailedResolution asserts "Dynamic
      constant has no fixed basic type"
    + S8214310: SymbolTable: Use get and insert
    + S8214315: G1: fatal error: acquiring lock SATB_Q_FL_lock/1
      out of order with lock tty_lock/0
    + S8214338: Move IC stub refilling out of IC cache transitions
    + S8214376: Don't use memset to initialize array of Bundle in
      output.cpp
    + S8214380: AwtDragSource function LoadCache misses a
      ReleaseLongArrayElements in special case
    + S8214401: [AOT] crash in ClassLoaderData::is_alive() with
      AOTed jdk.base
    + S8214427: probable bug in logic of
      ConcurrentHashMap.addCount()
    + S8214457: Miscellaneous changes imported from jsr166 CVS
      2018-12
    + S8214459: NSS source should be removed
    + S8214468: jQuery UI upgrade from 1.11.4 to 1.12.1
    + S8214491: Upgrade to JLine 3.9.0
    + S8214498: java/util/Locale/bcp47u/SystemPropertyTests.java
      wrong locale default
    + S8214514: javac @file option gives error caused by Chinese
      encoding in the path
    + S8214520: [TEST_BUG] sun/security/mscapi/nonUniqueAliases/
      /NonUniqueAliases.java failed with incorrect jtreg tags order
    + S8214531: HeapMonitorEventOnOffTest.java test fails with
      "Statistics should be null to begin with"
    + S8214559: Use {@systemProperty} for definitions of system
      properties
    + S8214568: Use {@systemProperty} for definitions of system
      properties
    + S8214571: -Xdoclint of array serialField gives "error: array
      type not allowed here"
    + S8214688: TLS 1.3 session resumption with hello retry request
      failed with "illegal_parameter"
    + S8214696: Module class should be filtered by core reflection
    + S8214707: Prevent GCC 8 from reporting error in
      ClassLoader::file_name_for_class_name()
    + S8214720: Add pandoc filter to improve html man page output
    + S8214741: docs/index.html has no title or copyright
    + S8214750: Unnecessary <p> tags in jfr classes
    + S8214751: X86: Support for VNNI Instructions
    + S8214773: Replace use of thread unsafe strtok
    + S8214780: Create pandoc package for Windows
    + S8214782: Add missing access barriers on CLD handle area
    + S8214784: Adjust Dictionary and JNIHandle verification
    + S8214785: Remove unused WeakHandleType::vm_string
    + S8214786: Remove unused ThreadLocalAllocBuffer::verify()
    + S8214791: Consistently name gc files containing VM operations
    + S8214795: Add safety check to dynalink inner class lookup
    + S8214805: Mark deprecated
      netscape.javascript.JSObject::getWindow API forRemoval=true
    + S8214807: Improve handling of very old class files
    + S8214817: Bad links in ImageInputStream.java &
      ImageOutputStream.java
    + S8214825: Update preview language features for start of JDK 13
    + S8214840: runtime/NMT/MallocStressTest.java timed out
    + S8214850: Rename vm_operations.?pp files to vmOperations.?pp
      files
    + S8214856: Errors with JSZip in web console after upgrade to
      3.1.5
    + S8214857: "bad trailing membar" assert failure at
      memnode.cpp:3220
    + S8214858: Improve module graph archiving
    + S8214876: Add "intermittent" key for
      imageio/stream/StreamCloserLeak/run_test.sh
    + S8214892: Delayed starting of debugging via jcmd
    + S8214896: JFR Tool left files behind
    + S8214897: ZGC: Concurrent Class Unloading
    + S8214902: Pretty-printing marker annotations add unnecessary
      parenthesis
    + S8214906: [TESTBUG] jfr/event/sampling/TestNative.java fails
      with UnsatisfiedLinkError
    + S8214908: add ctw tests for jdk.jfr and jdk.management.jfr
      modules
    + S8214910: If pandoc is present, markdown spec files should be
      processed
    + S8214912: LogCompilation: Show the comp level
    + S8214915: CtwRunner misses export for jdk.internal.access
    + S8214917: CTW testlibrary shouldn't ignore errors raised by
      the library itself
    + S8214925: JFR tool fails to execute
    + S8214936: assert(_needs_refill == 0) failed: Forgot to handle
      a failed IC transition requiring IC stubs
    + S8214937: sun/security/tools/jarsigner/warnings/
      /NoTimestampTest.java failed due to unexpected expiration date
    + S8214943: PIT: javax/swing/JFrame/NSTexturedJFrame/
      /NSTexturedJFrame.java errors out in mac
    + S8214944: replace strerror by os::strerror
    + S8214961: AARCH64: wrong encoding for exclusive and atomic
      load/stores
    + S8214971: Replace use of string.equals("") with isEmpty()
    + S8214972: Uses of klass_holder() except GC need to apply GC
      barriers
    + S8215000: tools/launcher/JliLaunchTest.java fails on Windows
    + S8215005: Missing include of runtime/os.hpp in zError.cpp
      after JDK-8214925 breaks build without precompiled headers
    + S8215008: Clear confusion between URL/URI paths and file
      system paths
    + S8215015: [TESTBUG] remove unneeded -Xfuture option from tests
    + S8215026: Incorrect amount of memory unmapped with
      ImageFileReader::close()
    + S8215030: Disable shenandoah in Oracle builds
    + S8215034: Remove old HOTSWAP conditionals
    + S8215043: Remove declaration of parallel_worker_threads
    + S8215048: Some classloader typos
    + S8215050: [TESTBUG] serviceability/tmtools/jstack/
      /WaitNotifyThreadTest.java fails when run with flag -Xcomp
    + S8215097: Do not create NonJavaThreads before BarrierSet
    + S8215117: [JVMCI] TestResolvedJavaType.java failing after
      JDK-8210031
    + S8215120: 32-bit build failures after JDK-8212657 (Promptly
      Return Unused Committed Memory from G1)
    + S8215129: Update build documentation with Xrandr
    + S8215131: Pandoc 2.3/build documentation fixes
    + S8215133: AARCH64: disable Math.log intrinsic publishing
    + S8215140: Port missing crypto JMH micros from
      jmh-jdk-microbenchmarks
    + S8215144: PPC64: Wrong assertion "illegal object size"
    + S8215149: TestOptionsWithRangesDynamic.java fails after
      JDK-8215120
    + S8215159: Improve initial setup of system Properties
    + S8215160: Normalize spaces for remaining vmTestbase tests
    + S8215161: Normalize spaces for vmTestbase/[a-j]
    + S8215165: Improve -Xlog:class+preview message text
    + S8215175: Inconsistencies in JFR event metadata
    + S8215194: Initial size of UnicodeBlock map is incorrect
    + S8215206: VtableStubs::find_stub is not appropriately
      protected by VtableStubs_lock
    + S8215217: OpenJDK source has too many swear words
    + S8215220: Simplify Shenandoah task termination in aborted
      paths
    + S8215224: Update Graal
    + S8215237: jdk.jfr.Recording javadoc does not compile
    + S8215238: (jdeps) update jdk8_internals.txt per the removal
      of javafx, corba, EE modules
    + S8215239: Make deletes images/jdk/bin/java if something goes
      wrong
    + S8215243: JShell tests failing intermitently with \"Problem
      cleaning up the following threads:\"
    + S8215262: PPC64: FMA Vectorization on PPC64
    + S8215281: Use String.isEmpty() when applicable in java.base
    + S8215284: Reduce noise induced by periodic task getFileSize()
    + S8215300: additional changes to constants API
    + S8215301: Module-summary page is unreadably wide
    + S8215304: Make target "docs-jdk-index" has unnecessary
      dependencies
    + S8215309: Convert package.html files to package-info.java
      files
    + S8215314: [Graal] Enable
      org.graalvm.compiler.core.test.CountedLoopTest
    + S8215317: [GRAAL] unit test CheckGraalIntrinsics failed
      after 8213754
    + S8215326: Test java/util/concurrent/ConcurrentHashMap/
      /ToArray.java hangs after j.u.c updates
    + S8215342: [Zero] Build fails after JDK-8200613
    + S8215354: x86_32 build failures after JDK-8214074 (Ghash
      optimization using AVX instructions)
    + S8215356: Disable x86_32 Shenandoah build to avoid
      hotspot/tier1 failures
    + S8215362: JFR GTest JfrTestNetworkUtilization fails
    + S8215369: Jcstress pollute /var/tmp with temporary files.
    + S8215534: [testbug] some jfr test don't check @requires
      vm.hasJFR
- Upgrade to upstream tag jdk-12+23
  * Fixes:
    + S4947890: Minimize JNI upcalls in system-properties
      initialization
    + S6849922: java/awt/Choice/ChoiceKeyEventReaction/
      /ChoiceKeyEventReaction.html fails
    + S7124298: [macosx] Nothing heard from VoiceOver when tabbing
      between a nestedtab group and a parent tab group.
    + S7124301: [macosx] When in a tab group if you arrow between
      tabs there are noVoiceOver announcements.
    + S8130264: change the mechanism by which JDK loads the
      platform-specific PrinterJob implementation
    + S8139178: Wrong fontMetrics when printing in Landscape
      (OpenJDK)
    + S8146090: java/lang/ref/ReachabilityFenceTest.java fails with
      -XX:+DeoptimizeALot
    + S8171426: java/lang/ProcessBuilder/Basic.java failed Stream
      closed
    + S8176556: java/awt/dnd/ImageTransferTest/ImageTransferTest.java
      fails for JFIF
    + S8176828: jtools do not list VM process launched with the
      debugger option suspend=y
    + S8186549: move ExtendedRobot closer to tests
    + S8187364: Unable to enter zero width non-joiner (ZWNJ) symbol
      in Swing text component
    + S8193577: nsk/jvmti/IterateThroughHeap/filter-tagged fails
      with Graal in Xcomp mode
    + S8198339: Test javax/swing/border/Test6981576.java is unstable
    + S8206325: AssertionError in
      TypeSymbol.getAnnotationTypeMetadata
    + S8206962: jlink --release-info=del throws NPE if no keys are
      specified
    + S8209123: [Macosx] Maximized frame (frame state set to
      MAXIMIZED_BOTH using setExtendedState) is resizable on Mac
      but not on Windows and Ubuntu
    + S8210102: CDS tests timed out
    + S8210454: jar tool does not allow setting the module version
      without also setting the main class
    + S8210476: sun/security/mscapi/PrngSlow.java fails with Still
      too slow
    + S8210943: Hiding of inner classes not resolved properly
    + S8210985: Update the default SSL session cache size to 20480
    + S8211147: Incorrect comparator
      com.sun.beans.introspect.MethodInfo.MethodOrder
    + S8211283: Miscellaneous changes imported from jsr166 CVS
      2018-11
    + S8211301: [macos] support full window content options
    + S8211422: Reading PNG with corrupt CRC for IEND chunk throws
      IIOException
    + S8211735: Wrong heap mapper can be selected with
      UseLargePages on G1
    + S8211795: ArrayIndexOutOfBoundsException in PNGImageReader
      after JDK-6788458
    + S8211833: Javadoc cleanup of java.applet package
    + S8211842: IPv6_supported wrongly returns false when unix
      domain socket is bound to fd 0
    + S8211877: Broken links in java.util.concurrent.atomic
    + S8212116: IIOException "tEXt chunk length is not proper" on
      opening png file
    + S8212680: (JDK12b14/Solaris-sparc)
      SplashScreen::getSplashScreen call fails with ULE:
      "libsplashscreen.so: ld.so.1: java: fatal: libz.so.1: open
      failed: No such file or directory"
    + S8212870: Broken links for www.usno.navy.mil
    + S8212875: ftp: links for tiff/TTN2.draft.txt do not respond
    + S8212878: host in ftp: link not found
    + S8212882: links to tutorial should be updated to use https:
    + S8212899: java/util/concurrent/tck/JSR166TestCase.java -
      testMissedSignal_8187947(SubmissionPublisherTest): timed out
      waiting for CountDownLatch for 40 sec
    + S8213048: Invalid use of HTML5 in java.awt files
    + S8213051: Invalid use of HTML5 in javax.print files
    + S8213121: javax/swing/GraphicsConfigNotifier/StalePreferredSize.java
      fails on mac10.13
    + S8213168: Enable different look and feel tests in SwingSet3
      demo test FileChooserDemoTest
    + S8213187: Handle libwindowsaccessbridge need to access MSVCRT
      functions
    + S8213209: [REDO] Allow Klass::_subklass and _next_sibling to
      have unloaded classes
    + S8213292: Input freezes after MacOS key-selector (press&hold)
      usage on macOS Mojave
    + S8213294: Upgrade IANA LSR data
    + S8213300: jaxp/unittest/transform/CR6551600Test.java fails
      due to exception in jdk/jdk CI
    + S8213323: sa/TestJmapCoreMetaspace.java and
      sa/TestJmapCore.java fail with ZGC
    + S8213325: (props) Properties.loadFromXML does not fully
      comply with the spec
    + S8213362: [macOS] Could not find libjava.dylib error when
      initializing JVM via JNI_CreateJavaVM
    + S8213406: (fs) More than one instance of built-in FileSystem
      observed in heap
    + S8213532: add missing LocalFree calls after using
      FormatMessage(A) [windows]
    + S8213565: Crash in DependencyContext::remove_dependent_nmethod
    + S8213583: Error while opening the JFileChooser when desktop
      contains shortcuts pointing to deleted files
    + S8213614: DnD operation change feature does not work with
      64bit big endian CPU
    + S8213618: IBM970 charset has missing entry and remove
      unexpected entries
    + S8213703: LambdaConversionException: Invalid receiver type
      not a subtype of implementation type interface
    + S8213725: JShell NullPointerException due to class file with
      unexpected package
    + S8213734: SAXParser.parse(File, ..) does not close resources
      when Exception occurs.
    + S8213817: @return has already been specified (4 occurrences,
      in AWT and Swing)
    + S8213843: Changing L&F from Nimbus to Window L&F causes NPE
      in SwingSet2
    + S8213844: Typo in ProblemList updation under JDK-8213536
    + S8214014: Remove vestiges of gopher: protocol proxy support
    + S8214026: Canonicalized archive paths appearing in diagnostics
    + S8214031: Assertion error in value break statement with
      conditional operator in switch expression
    + S8214061: Buffer written into itself
    + S8214063: OpenJDK will not build on AIX while using the xlc
      13.1 compiler
    + S8214170: ResourceBundle.Control.newBundle should throw
      IllegalAccessException when constructor of the resource
      bundle is not public.
    + S8214179: Add groupname info into keytool -list and
      -genkeypair output
    + S8214195: Align stdout messages in
      test/jdk/java/math/BigInteger/PrimitiveConversionTests.java
    + S8214229: Enable ShowRegistersOnAssert by default
    + S8214230: Classes generated by SystemModulesPlugin.java are
      not reproducable
    + S8214231: Allow concurrent cleaning of TypeStackSlotEntries
      and ReturnTypeEntry
    + S8214278: Cleanup process_completed_threshold and related
      state
    + S8214300: .attach_pid files may remain in the process cwd
    + S8214302: Allow safely calling is_unloading() on zombie
      nmethods
    + S8214309: Enhance makefiles to allow generating JCov
      instrumented build
    + S8214311: dtrace gensrc has missing dependencies
    + S8214332: Add a flag for overriding default JNI library
      search path
    + S8214344: C2: assert(con.basic_type() != T_ILLEGAL) failed:
      elembt=byte; loadbt=void; unsigned=0
    + S8214356: Verification of class metadata unloading takes a
      long time
    + S8214377: ZGC: Don't use memset to initialize array of
      ZForwardingTableEntry
    + S8214388: CDS dumping fails with java heap fragmentation
    + S8214400: Update hotspot application/jcstress jtreg tests
      wrappers to use jcstress 0.5
    + S8214408: Migrate EventsOnOff to using the same
      allocateAndCheck method
    + S8214417: Add space after/before {} in
      vmTestbase/nsk/jvmti/[A-I] tests
    + S8214431: tests failed because can't find jdk.testlibrary.*
      in test directory or libraries
    + S8214434: Disabling ZOptimizeLoadBarriers hits assert
    + S8214443: Remove TLS v1 and v1.1 from SSLContext required
      algorithms
    + S8214444: Wrong strncat limits in dfa.cpp
    + S8214445: [test] java/net/URL/HandlerLoop has illegal
      reflective access
    + S8214451: PPC64/s390: Clean up unused CRC32 prototype and
      function
    + S8214460: MacosX build is broken because of JDK-8214014
    + S8214462: Add serviceability/sa/ClhsdbInspect.java to
      ProblemList.txt
    + S8214465: Upgrade arm-sflt minimum architecture to ARMv5TE
      for assembler
    + S8214466: Append assembler flags on ARM targets
    + S8214470: PIT: javax/swing/JPopupMenu/7154841/bug7154841.java
      errors out on mac10.13
    + S8214476: ZGC: Build ZGC by default
    + S8214484: ZGC: Exclude SA tests ClhsdbJhisto and
      TestHeapDumpFor*
    + S8214499: SA should follow 8150689
    + S8214502: Add space after/before {} in remaining vmTestbase
      tests
    + S8214513: A PKCS12 keystore from Java 8 using custom PBE
      parameters cannot be read in Java 11
    + S8214522: Last runtime locking issues for concurrent class
      unloading
    + S8214523: Fix nmethod asserts for concurrent nmethod unloading
    + S8214525: Bit rot in Nashorn Ant script
    + S8214526: Change CodeHeap State Analytics control from UL to
      Print*
    + S8214529: Exception while using Anonymous class in switch
      expression
    + S8214534: Setting of THIS_FILE in the build is broken
    + S8214541: ZGC: Refactoring from JDK-8214172 may leave
      PhaseIterGVN::_delay_transform set
    + S8214552: Resolve clash between 4947890 and 8130264
    + S8214556: Crash in
      DependencyContext::remove_dependent_nmethod still happens
    + S8214557: Filter out VM flags which don't affect AOT code
      generation
    + S8214558: bad @run tag in CheckPrinterJobSystemProperty.java
    + S8214572: [Graal] nsk/jvmti/unit/ForceEarlyReturn/earlyretbase
      should not suspend the thread when the top frame executes
      JVMCI code
    + S8214710: Fix hg log in update_copyright_year.sh
    + S8214718: Update missing copyright year in build system
    + S8214726: Typo in
      HeapShared::check_closed_archive_heap_region_object
    + S8214728: Unnecessary InstanceKlass::cast at few places
    + S8214744: Unnecessary <p> tags in java.util.zip.Deflater
    + S8214745: Bad link in coll-reference.html
    + S8214770: java/time/test/java/time/format/
      /TestNonIsoFormatter.java failed in non-english locales.
    + S8214787: Zero builds fail with "undefined
      JavaThread::thread_state()"
    + S8214794: java.specification.version should be only the major
      version number
- Upgrade to upstream tag jdk-12+22
  * Fixes:
    + S8046500: GetIpAddrTable function failed on Pure Ipv6
      environment
    + S8150689: Thread dump report "waiting to re-lock in wait()"
      shows incorrectly
    + S8168869: jdeps: localized messages don't use proper line
      breaks
    + S8177286: AttributeSet: attempt to compare Qname and String
    + S8178317: Create man pages using pandoc from markdown sources
    + S8190312: javadoc -link doesn't work with http: -> https: URL
      redirects
    + S8200432: javadoc fails with ClassCastException on {@link
      byte[]}
    + S8202415: Incorrect time logged for monitor deflation
    + S8202621: bad test with broken links needs to be updated
    + S8203264: JNI exception pending in
      PlainDatagramSocketImpl.c:740
    + S8203277: preflow visitor used during lambda attribution
      shouldn't visit class definitions inside the lambda body
    + S8203442: String::transform
    + S8203672: JNI exception pending in PlainSocketImpl.c
    + S8203673: JNI exception pending in
      DualStackPlainDatagramSocketImpl.c:398
    + S8204525: [TESTBUG] runtime/NMT/MallocStressTest.java ran out
      of java heap
    + S8211051: jdeps usage of --dot-output doesn't provide valid
      output for modular jar
    + S8211211: vmTestbase/metaspace/stressDictionary/
      /StressDictionary.java timeout
    + S8211266: [TESTBUG] ZipFSTester.java failed intermittently in
      ZipFSTester.checkRead(): bound must be positive
    + S8211975: move testlibrary/jdk/testlibrary/
      /OptimalCapacity.java to top-level library
    + S8212108: SafepointSynchronizer never ending counter (big
      enough)
    + S8212207: runtime/InternalApi/ThreadCpuTimesDeadlock.java
      crashes with SEGV in pthread_getcpuclockid+0x0
    + S8212748: ZGC: Add reentrant locking functionality
    + S8213015: Inconsistent settings between JFR.configure and
      -XX:FlightRecorderOptions
    + S8213117: adoptNode corrupts attribute values
    + S8213259: [AOT] AOTing java.base fails with
      "java.lang.AssertionError: no fingerprint for
      Ljdk/internal/event/Event"
    + S8213275: ReplaceCriticalClasses.java fails with
      jdk.internal.vm.PostVMInitHook not found
    + S8213486: SIGSEGV in
      CompiledMethod::cleanup_inline_caches_impl with AOT
    + S8213698: Improve devkit creation and add support for
      linux/ppc64/ppc64le/s390x
    + S8213716: javadoc search not working with Japanese and
      Chinese locales
    + S8213755: Let nmethods be is_unloading() outside of safepoints
    + S8213791: StringTable: Use get and insert
    + S8213819: doclint should warn against {@index} inside <a> tag
    + S8213834: JVMTI ResourceExhausted should not be posted in
      CompilerThread
    + S8213845: ARM32: Interpreter doesn't call result handler
      after native calls
    + S8213907: [JVMCI] avoid Class.getDeclared* methods when
      converting JVMCI objects to reflection objects
    + S8213909: jdeps --print-module-deps should report missing
      dependences
    + S8213911: Use example.com in java.net and other examples
    + S8213914: [TESTBUG] Several JFR VM events are not covered by
      tests
    + S8213921: Use {@systemProperty} tag for properties listed in
      "Networking Properties"
    + S8213927: G1 ignores AlwaysPreTouch when
      UseTransparentHugePages is enabled
    + S8213944: Fix AIX build after the removal of Xrandr.h and add
      a configure check for it
    + S8213956: javadoc crash using {@index} in doc-files file
    + S8213996: Remove one of the SparsePRT entry tables
    + S8213997: Remove G1HRRSUseSparseTable flag
    + S8214029: Remove dead code BasicHashtable::bulk_free_entries
    + S8214055: GC/C2 abstraction for phaseX
    + S8214056: Allow the GC to attach context information to
      CompiledMethod
    + S8214057: GC/C2 abstraction for
      Node::has_special_unique_user()
    + S8214059: Undefined behaviour in ADLC
    + S8214068: ZGC crashes with vmTestbase/nsk/jdi/ReferenceType/
      /instances/instances004/TestDescription.java
    + S8214086: [TESTBUG] Fix subgraph test cases in
      ReplaceCriticalClasses.java
    + S8214100: use of keystore probing results in unnecessary
      exception thrown
    + S8214105: [TESTBUG] Bit test is always false in
      serviceability/jvmti/StartPhase/AllowedFunctions
    + S8214108: [TESTBUG] Incorrect Function parameter lists in
      vmTestbase/nsk/jvmti/scenarios/extension/EX03/ex03t001
    + S8214113: Switch expressions may have constant type and may
      be skipped during write
    + S8214118: HeapRegions marked as archive even if CDS mapping
      fails
    + S8214139: Remove wrapper methods from {Base,Html}Configuration
    + S8214151: [TESTBUG] CleanProtectionDomain.java fails due to
      RuntimeException: 'protection domain unlinked' missing
    + S8214161: java.lang.IllegalAccessError: class
      jdk.internal.event.X509CertificateEvent (in module java.base)
      cannot access class jdk.jfr.internal.handlers.EventHandler
      (in module jdk.jfr) because module java.base does not read
      module jdk.jfr
    + S8214172: GC interface entry points for loop opts
    + S8214181: safepoint header cleanup
    + S8214189: test/hotspot/jtreg/compiler/intrinsics/mathexact/
      /MulExactLConstantTest.java fails on Windows x64 when run
      with -XX:-TieredCompilation
    + S8214202: DirtyCardQueueSet::get_completed_buffer should not
      clear _process_completed
    + S8214205: PPC64: Add instructions for counting trailing zeros
    + S8214206: Fix for JDK-8213419 is broken on 32-bit
    + S8214208: Nestmate package validation logging/exception
      should include classloader information
    + S8214217: [TESTBUG] runtime/appcds/LotsOfClasses.java failed
      with fragmented heap
    + S8214223: tools/jdeps/listdeps/ListModuleDeps.java failed due
      to missing Lib2 file
    + S8214241: Problem list com/sun/jndi/ldap/LdapTimeoutTest.java
      for all platforms
    + S8214242: compiler/arguments/TestScavengeRootsInCode.java
      fails because of missing UnlockDiagnosticVMOptions
    + S8214262: SunEC native code does not compile with debug on
    + S8214272: Don't use memset to initialize arrays of
      MemoryUsage in memoryManager.cpp
    + S8214276: Problemlist
      compiler/intrinsics/mathexact/MulExactLConstantTest.java
    + S8214287: SpecJbb2005StressModule got uncaught exception
    + S8214295: Populate handlers while holding streamHandlerLock
    + S8214297: testbug : missing fclose in jvmti_aod.cpp
    + S8214321: Misleading code in SSLCipher
    + S8214343: Handle the absence of Xrandr more generically
    + S8214362: C2: gc interface entry point for split if
    + S8214373: adjust usage of ReleaseLongArrayElements in
      MacosxDebuggerLocal
- Upgrade to upstream tag jdk-12+21
  * Fixes:
    + S8061281: Microbenchmark suite build support, directory
      layout and sample benchmarks
    + S8061282: Migrate jmh-jdk-microbenchmarks into the JDK
    + S8129310: java/net/Socket/asyncClose/AsyncClose.java fails
      intermittently
    + S8148188: Enhance the security libraries to record events of
      interest
    + S8184205: Captions on tabbed tables are squashed together
    + S8191339: [JVMCI] BigInteger compiler intrinsics on Graal
    + S8201375: Add the AllowArchivingWithJavaAgent diagnostic vm
      option to allow the use of the -javaagent option during CDS
      dumping
    + S8203174: [Graal] JDI tests fail with Unexpected exception:
      com.sun.jdi.ObjectCollectedException
    + S8206475: Repeated word in error message
    + S8209923: Unicode 11.0.0.
    + S8210024: JFR calls virtual is_Java_thread from ~Thread()
    + S8210408: Refactor java.util.ResourceBundle:i18n shell tests
      to plain java tests
    + S8210722: JAXP Tests: CatalogSupport2 and CatalogSupport3
      generate incorrect messages upon failure
    + S8210742: compound var declaration type is not uniform for
      all variables
    + S8210777: Update Graal
    + S8210838: Override javax.crypto.Cipher.toString()
    + S8211106: [windows] Update OS detection code to recognize
      Windows Server 2019
    + S8211326: add OS user related information to hs_err file
    + S8211451: ~2.5% regression on compression benchmark starting
      with 12-b11
    + S8211787: javax/net/ssl/TLSCommon/TLSTest.java throws
      java.net.SocketTimeoutException: Read timed out
    + S8212003: Deprecating the default keytool -keyalg option
    + S8212070: Introduce diagnostic flag to abort VM on failed JIT
      compilation
    + S8212682: Avoid holding Compile_lock when blocking for GC in
      ObjArrayKlass::allocate_objArray_klass()
    + S8212779: ADL Parser does not check allocation return values
      in all cases
    + S8212931: HeapMonitorStatIntervalTest.java fails due average
      calculation
    + S8212982: Rule cases in switch expression accepted even if
      complete normally
    + S8212992: Change mirror accessor in Klass::verify_on() to use
      AS_NO_KEEPALIVE
    + S8213033: Archive remaining primitive box caches
    + S8213092: Add more runtime locks for concurrent class
      unloading
    + S8213202: Possible race condition in TLS 1.3 session
      resumption
    + S8213235: java/nio/channels/SocketChannel/
      /AsyncCloseChannel.java fails with threads that didn't exit
    + S8213352: Separate BufferNode allocation from PtrQueueSet
    + S8213363: X25519 private key PKCS#8 encoding/decoding is
      incorrect
    + S8213373: Bulk MarkBitMap clearing methods
    + S8213410: UseCompressedOops requirement check fails fails on
      32-bit system
    + S8213419: C2 may hang in MulLNode::Ideal()/MulINode::Ideal()
      with gcc 8.2.1
    + S8213538: VM crashes when MaxVectorSize is set to 0, 1 or 2
    + S8213560: gtests might hang
    + S8213587: Speed up CDS dump time by using resizable hashtables
    + S8213615: GC/C2 abstraction for escape analysis
    + S8213616: URLPermission with query or fragment behaves
      incorrectly
    + S8213623: ZGC: Let heap iteration walk all roots
    + S8213713: Minor issues during
      MetaspaceShared::initialize_runtime_shared_and_meta_spaces
    + S8213721: [Graal] Tests vmTestbase/nsk/stress/except/except*
      may be encountering SEGV during out-of-memory conditions
    + S8213723: More Monitor/mutex initialization management
    + S8213736: Build fails with LOG=debug on F28 after JDK-8210958
    + S8213746: GC/C2 abstraction for C2 matcher
    + S8213751: ClassLoaderDataGraph::cld_do() should sometimes
      require CLDG_lock
    + S8213779: Loop opts anti dependent store detection should
      ignore uncommon trap calls
    + S8213794: ARM32: disable TypeProfiling, CriticalJNINatives,
      Serviceablity tests for ARM32
    + S8213829: Remove circular dependency between g1CollectedHeap
      and g1ConcurrentMark
    + S8213893: StringTable_lock is unused
    + S8213898: CDS dumping of springboot asserts in
      G1ArchiveAllocator::alloc_new_region
    + S8213902: com/sun/jdi/SetLocalWhileThreadInNative.java times
      out
    + S8213906: Update arm devkits with libXrandr headers
    + S8213908: AssertionError in DeferredAttr at setOverloadKind
    + S8213910: Invalid HTML in java.net.http.HttpClient
    + S8213913: Redundant HTML in java.se/module-info.java
    + S8213916: no copyright in signature.html
    + S8213920: Use {@systemProperty} tag for properties listed in
      System.getProperties
    + S8213922: fix ctw stand-alone build
    + S8213926: WB_EnqueueInitializerForCompilation requests
      compilation for NULL
    + S8213942: URLStreamHandler initialization race
    + S8213947: ARM32: failed check_simd should set
      UsePopCountInstruction to false
    + S8213948: Solaris-X64 build fails with compact hashtable
    + S8213959: add org.graalvm.compiler.replacements.test.
      StringCompressInflateTest to graal problem list
    + S8213992: Rename and make DieOnSafepointTimeout the
      diagnostic option
    + S8214003: Limit default test jobs based on memory size
    + S8214004: Missing space between compiler thread name and task
      info in hs_err
    + S8214007: Fix sun.awt.nativedebug on X11 platforms
    + S8214025: assert(t->singleton()) failed: must be a constant
      when ScavengeRootsInCode < 2
    + S8214027: Reinstate testB_mem_imm pattern in x86_64.ad
    + S8214045: Missing explicit dependencies of
      build-microbenchmark cause intermittent build failure
    + S8214062: JDK-8167368 Leftover: get_source.sh in build
      documentation
    + S8214071: Broken msg.bug diagnostics when using the compiler
      API
    + S8214075: [BACKOUT] 8214007: Fix sun.awt.nativedebug on X11
      platforms
    + S8214078: (fs) SecureDirectoryStream not supported on arm32
    + S8214120: [REDO] Fix sun.awt.nativedebug on X11 platforms
    + S8214124: [TESTBUG] Bugs in runtime/NMT/MallocStressTest.java
    + S8214125: [test] Fix comparison between pointer and integer
      in test_ptrQueueBufferAllocator.cpp
    + S8214144: Remove confusing locking_enqueue_completed_buffer
    + S8214149: Move out assignments when not using NSK*VERIFY
      macros
    + S8214154: problem list HeapMonitorStatIntervalTest.java
- Upgrade to upstream tag jdk-12+20
  * Fixes
    + S5076751: System properties documentation needed in javadocs
    + S7124293: [macosx] VoiceOver reads percentages rather than
      the actual values for sliders.
    + S8080406: VM_GetOrSetLocal doesn't check local slot type
      against requested type
    + S8160768: Add capability to custom resolve host/domain names
      within the default JNDI LDAP provider
    + S8185496: Improve performance of system properties
      initialization in initPhase1
    + S8192888: AllSwingComponentsBaselineTest fails with
      NullPointerException for NimbusLookAndFeel
    + S8198000: java/awt/List/EmptyListEventTest/
      /EmptyListEventTest.java debug assert on Windows
    + S8198001: java/awt/Menu/WrongParentAfterRemoveMenu/
      /WrongParentAfterRemoveMenu.java debug assert on Windows
    + S8198002: java/awt/Mixing/Validating.java debug assert on
      Windows
    + S8198321: javax/swing/JEditorPane/5076514/bug5076514.java
      fails
    + S8198624: java/awt/KeyboardFocusmanager/TypeAhead/
      /SubMenuShowTest/SubMenuShowTest.html fails on mac
    + S8199072: Test javax/swing/GroupLayout/6613904/bug6613904.java
      is unstable
    + S8202285: (fs) Add a method to Files for comparing file
      contents
    + S8202886: [macos] Test
      java/awt/MenuBar/8007006/bug8007006.java fails on MacOS
    + S8204142: AWT hang occurs when sequenced events arrive out of
      sequence in multiple AppContexts
    + S8204529: gc/TestAllocateHeapAtMultiple.java fail with Agent
      7 timed out
    + S8205574: Loop predication "assert(f <= 1 && f >= 0) failed
      Incorrect frequency"
    + S8207070: Webstart app popup on wrong screen in a one-screen
      setup changing to multi-monitor
    + S8208543: [macos] Support for apple.awt.documentModalSheet
      incomplete
    + S8208702: javax/swing/reliability/
      /HangDuringStaticInitialization.java may hang on macos
    + S8209055: c.s.t.javac.code.DeferredCompletionFailureHandler
      seems to use WeakHashMap incorrectly
    + S8209139: globalCounter bootstrap issue
    + S8209415: Fix JVMTI test failure HS202
    + S8210057: Enable different look and feels in SwingSet3 demo
      test InternalFrameDemoTest
    + S8210197: javac can't tell during speculative attribution if
      a diamond expression is creating an anonymous inner class or
      not
    + S8210493: Bind to node- or linklocal ipv6 multicast address
      fails
    + S8210776: Upgrade X Window System 6.8.2 to the latest XWD
      1.0.7
    + S8210803: Compilation failure in codeBlob.cpp for Windows
      32-bit
    + S8210863: Remove Xrandr include files from JDK sources
    + S8210886: Remove references in xwindows.md to non-existent
      files.
    + S8211403: Rename SafepointMechanism::poll(...)
    + S8211435: Exception in thread "AWT-EventQueue-1"
      java.lang.IllegalArgumentException: null source
    + S8211443: Enable different look and feels in SwingSet3 demo
      test SplitPaneDemoTest
    + S8211450: UndetVar::dup is not copying the kind field to the
      duplicated instance
    + S8211727: Adjust default concurrency settings for running
      tests on Sparc
    + S8211781: re-building fails after changing Graal sources
    + S8211810: X11 Time stamp data should be unsigned
    + S8211822: Some tests fail after JDK-8210039
    + S8211845: A new switch to control verbosity of hs-err files
    + S8211926: Catastrophic size_t underflow in BitMap::*_large
      methods
    + S8211951: Broken links in java.management files
    + S8211992: GraphicsConfiguration.getDevice().getDisplayMode()
      causes JVM crash on Mac
    + S8212221: GraalUnitTestLauncher should generate
      MX_SUBPROCESS_COMMAND_FILE
    + S8212261: Add SSLSession accessors to HttpsURLConnection and
      SecureCacheResponse
    + S8212673: jtreg/applications/runthese/RunThese30M.java fails
      in C2 with "assert(!had_error) failed: bad dominance"
    + S8212735: Compilation issue with javax.swing.InputVerifier
      example in javadoc section
    + S8212790: Javadoc cleanup of java.awt.color package
    + S8212865: Broken external link to TIFF6.pdf in ImageIO
      package-info.java
    + S8212885: TLS 1.3 resumed session does not retain peer
      certificate chain
    + S8212903: [TestBug] Tests test/jdk/javax/swing/LookAndFeel/
      /8145547/DemandGTK2.sh and DemandGTK3.sh fail on Ubuntu 18.04
      LTS
    + S8212928: Assertion too strict in
      compiledVFrame::update_deferred_value on SPARC
    + S8212939: Add space after if/while/for/switch and parenthesis
    + S8213113: Dead code related to UseAdaptiveSizePolicy in
      ParNewGeneration
    + S8213116: javax/swing/JComboBox/WindowsComboBoxSize/
      /WindowsComboBoxSizeTest.java fails in Windows
    + S8213130: Update ProblemList after verification of jtreg
      tests in Win 7
    + S8213137: Remove static initialization of monitor/mutex
      instances
    + S8213138: Update ProblemList.txt for mac
    + S8213154: Update copyright headers of files in src tree that
      are missing Classpath exception
    + S8213181: Updation of ProblemList.txt for removal of passing
      swing test
    + S8213189: Make restricted headers in HTTP Client configurable
      and remove Date by default
    + S8213199: GC abstraction for
      Assembler::needs_explicit_null_check()
    + S8213213: Remove src/java.desktop/unix/classes/sun/awt/X11/
      /keysym2ucs.h
    + S8213250: CDS archive creation aborts due to metaspace object
      allocation failure
    + S8213261: test javax/swing/plaf/nimbus/
      /AllSwingComponentsBaselineTest.java fails
    + S8213307: G1 should clean up RMT with
      ClassUnloadingWithConcurrentMark
    + S8213338: Reduce the number of generated make targets
    + S8213346: Re-implement shared dictionary using
      CompactHashtable
    + S8213348: jdk.internal.vm.compiler.management service
      providers missing in module descriptor
    + S8213383: Wrap up pthread_cond_wait into a loop to workaround
      potential spurious wakeups
    + S8213400: Support choosing group name in keytool keypair
      generation
    + S8213411: JDK-8209189 incorrect for Big Endian (JVM crashes)
    + S8213418: Socket/ServerSocket supportedOptions does not work
      with custom SocketImpl
    + S8213424: VersionProps duplicate and skipped initialization
    + S8213428: Add a no precompiled header Linux build to
      builds-tier1 and jdk-submit
    + S8213436: Obsolete UseMembar
    + S8213438: Remove ClearResponsibleAtSTW
    + S8213439: Run class initialization for boot loader classes
      with registered subgraph archiving entry field during CDS
      dump time.
    + S8213440: Lingering INCLUDE_ALL_GCS in
      test_oopStorage_parperf.cpp
    + S8213473: Replace testB_mem_imm matcher with testUB_mem_imm
    + S8213478: Reduce rebinds when applying repeated filters and
      conversions
    + S8213479: Missing x86_64.ad patterns for 8-bit logical
      operators with destination in memory
    + S8213480: update internal ASM version to 7.0
    + S8213489: GC/C2 abstraction for
      Compile::final_graph_reshaping()
    + S8213490: Networking area typos and inconsistencies cleanup
    + S8213515: Improve freetype detection on
      linux/ppc64/ppc64le/s390x
    + S8213525: new unit test GetLocalVariable/LocalVars is not
      stable
    + S8213527: [testbug] Fix PrintMetaspaceDcmd test using
      UseCompressedOops for 32-bit.
    + S8213536: Update ProblemList for Linux
    + S8213563: appcds/sharedStrings/SharedStringsStress.java fails
      with 'GC triggered before VM initialization completed' error
    + S8213568: Typo in
      java/awt/GraphicsEnvironment/LoadLock/GE_init5.java
    + S8213569: Bump minimum boot jdk to JDK 11
    + S8213570: [TESTBUG] Update JFR sanity test set
    + S8213574: Deadlock in string table expansion when dumping
      lots of CDS classes
    + S8213576: Make test AsyncCloseChannel.java run in othervm
    + S8213588: compiler/graalunit/HotspotTest.java fails after
      8213348 / 8211781 were pushed
    + S8213591: running bin/idea.sh in Cygwin: generated project
      cannot be imported
    + S8213592: Misaligned code in globals.hpp after 8211845
    + S8213596: test failure with Graal when security manager and
      policy file are used
    + S8213604: Fix missing includes after JDK-8212673
    + S8213622: Windows VS2013 build failure - "'snprintf':
      identifier not found"
    + S8213694: Test Timeout.java should run in othervm mode
    + S8213701: Add org.graalvm.compiler.debug.test.TimerKeyTest to
      problem list
    + S8213704: increase default timeout for
      vmTestbase/metaspace/stressDictionary/StressDictionary.java
    + S8213707: [TEST] vmTestbase/nsk/stress/except/except011.java
      failed due to wrong class name
    + S8213708: Different #ifdef guards cause incorrect use of
      Monitor::check_block_state()
    + S8213709: jdk/javadoc/doclet/testValueTag/
      /TestValueTagInModule.java missing modules declaration
    + S8213711: Zero build broken after JDK-8213199 (GC abstraction
      for Assembler::needs_explicit_null_check())
    + S8213718: [TEST] Wrong classname in
      vmTestbase/nsk/stress/except/except002 and except003
    + S8213741: Consolidate Object and String Stringifiers
    + S8213745: Don't use memset to initialize array of RegMask in
      matcher.cpp
    + S8213760: os::obsolete_option is obsolete and should be
      removed
    + S8213767: Remove the -Xconcurrentio flag and associated code
    + S8213795: Force explicit null check on patching placeholder
      offset
    + S8213814: build error in jtreg test jvmti/GetLocalVariable
    + S8213818: @return has already been specified
    + S8213820: unknown tag: @returns
    + S8213826: Disable ARMv6 memory barriers on ARMv5 processors
- Upgrade to upstream tag jdk-12+19
  * Fixes:
    + S6304578: (reflect) toGenericString fails to print bounds of
      type variables on generic methods
    + S6735527: Bitmap - speed up searches
    + S8152988: [AOT] Update test batch definitions to include
      aot-ed java.base module mode into hs-comp testing
    + S8177708: Convert TestReserveMemorySpecial_test to Gtest
    + S8177711: Convert TestVirtualSpaceNode_test to GTest
    + S8198294: AARCH64 - Set flags' optimal defaults for Cavium
      Thunder X2 CPU
    + S8204521:
      compiler/jsr292/RedefineMethodUsedByMultipleMethodHandles.java
      fails trying to delete temp file
    + S8206330: Revisit com/sun/jdi/RedefineCrossEvent.java
    + S8207059: Update test certificates in QuoVadisCA.java test
    + S8208519: Remove rehashable hashtable
    + S8209189: Make CompiledMethod::do_unloading more concurrent
    + S8209495: NMethodSweeper::sweep_code_cache cause severe delays
    + S8209564: runtime/appcds/CDSandJFR.java timeout on tier6 on
      sparc
    + S8209835: Aarch64: elide barriers on all volatile operations
    + S8209960: -Xlog:jfr* doesn't work with the JFR
    + S8210405: Javadoc search doesn't always consider full input
      upon Enter
    + S8210409: Refactor java.util.TimeZone:i18n shell tests to
      plain java tests
    + S8210986: Add OopStorage cleanup to ServiceThread
    + S8211013: [TESTBUG] nsk/jdb/kill/kill002 wait for message and
      prompt
    + S8211049: Second parameter of "initialize" method is not used
    + S8211122: Reduce the number of internal classes made
      accessible to jdk.unsupported
    + S8211320: Aarch64: unsafe.compareAndSetByte() and
      unsafe.compareAndSetShort() c2 intrinsics broken with negative
      expected value
    + S8211336: [TESTBUG] appcds tests with incorrect usage of
      -XX:+UseStringDeduplication
    + S8211339: NPE during SSL handshake caused by HostnameChecker
    + S8211382: ISO2022JP and GB18030 NIO converter issues
    + S8212184: Incorrect oop ref strength used for referents in
      FinalReference
    + S8212217: JGSS: Don't dispose() of creds too eagerly
    + S8212243: More gc interface tweaks for arraycopy
    + S8212585: Clean up CompiledMethod::oops_reloc_begin()
    + S8212605: Pure-Java implementation of
      AccessController.doPrivileged
    + S8212610: Fix handling of memory in
      PhaseIdealLoop::clone_loop_predicates()
    + S8212669: Add note to Cipher javadoc about using full
      transformation and not relying on defaults
    + S8212681: Refactor IC locking to use a fine grained
      CompiledICLocker
    + S8212828: (process) Provide a way for Runtime.exec to use
      posix_spawn on linux
    + S8212871: Broken links give 401-Unauthorized
    + S8212872: Broken link to Namespaces in XML Errata
    + S8212876: ftp: links for character-sets require a login
      password
    + S8212883: Setting a double manageable flag with jcmd/jinfo
      crashes the JVM
    + S8212921: ZGC: Move verification to after resurrection
      unblocked
    + S8212934: [JVMCI] do not propagate resolution error in
      HotSpotResolvedJavaFieldImpl.getType
    + S8212937: Parent class loader may not have a referred
      ClassLoaderData instance when obtained in
      Klass::class_in_module_of_loader
    + S8212989: Allow CompiledMethod ExceptionCache have unloaded
      klasses
    + S8212995: Placing the Integer.IntegerCache and cached Integer
      objects in the closed archive heap region.
    + S8212996: Use AS_NO_KEEPALIVE when accessing dead
      java.lang.invoke.CallSites during nmethod unloading
    + S8213000: Obsolete the IgnoreUnverifiableClassesDuringDump vm
      option
    + S8213014: Crash in CompileBroker::make_thread due to OOM
    + S8213046: Define Japanese new Era character
    + S8213052: HTML errors in JPDA spec
    + S8213058: remove ExecuteInternalVMTests and
      VerboseInternalVMTests flags
    + S8213085: (tz) Upgrade time-zone data to tzdata2018g
    + S8213103: RoundEnvironment.getElementsAnnotatedWith(Class)
      crashes with -source 8
    + S8213196: [ppc] [s390]: prepare code for gcc7.3.1 warning
      (int-in-bool-context)
    + S8213203: [JVMCI] adopt formatting changes from jvmci 8
    + S8213210: Change ServerSocket(SocketImpl impl) constructor to
      protected access
    + S8213227: Update jib src excludes to filter webrev and Jreg
      directories
    + S8213236: A partial removed/deleted JavaThread cannot
      transition
    + S8213237: Remove test-compile-commands from jib-profiles.js
    + S8213245: Restoring nsk/jvmti/scenarios/hotswap tests from
      ProblemList.txt
    + S8213246: Fix typo in vmTestbase failuire to failure
    + S8213256: Clarify runtime vs compile time annotations for
      RoundEnvironment.getElementsAnnotatedWith(Class)
    + S8213263: fix legal headers in test/langtools
    + S8213265: fix missing newlines at end of files
    + S8213296: Fix legal headers in test/jdk/java/net
    + S8213301: Fix legal headers in jdk logging tests
    + S8213305: Fix legal headers in test/java/math
    + S8213306: Fix legal headers in test/java/nio
    + S8213308: ProblemList runtime/appcds/jigsaw/classpathtests/
      /EmptyClassInBootClassPath.java
    + S8213321: Fix legal headers in test/jaxp
    + S8213328: Update test copyrights in test/java/util/zip and
      test/jdk/tools
    + S8213330: Fix legal headers in i18n tests
    + S8213337: windows-x64-slowdebug build is broken by 8177708
    + S8213339: Update precompiled.hpp with headers based on
      current frequency
    + S8213347: [JVMCI] remove use of reflection in JVMCI
    + S8213366: (fs) avoid handle leak in
      Java_sun_nio_fs_WindowsNativeDispatcher_FindFirstFile0
    + S8213371: GC/C2 abstraction and cleanup to handle custom
      offset for GC memory accesses
    + S8213381: Hook to allow GC to inject Node::Ideal() calls
    + S8213384: Move G1/C2 barrier verification into G1BarrierSetC2
    + S8213414: Fix incorrect copy constructors in hotspot
    + S8213444: Missing emphasis for term being defined
    + S8213464: Fix missing include after JDK-8212243
    + S8213469: Remove/fix leftovers from JDK-8213384: Move G1/C2
      barrier verification into G1BarrierSetC2
    + S8213487: [BACKOUT] 8213414 Fix incorrect copy constructors
      in hotspot
- Upgrade to upstream tag jdk-12+18
  * Fixes:
    + S6490394: G1: Allow heap shrinking / memory unmapping after
      reclaiming regions during Remark
    + S8017061: os_bsd.cpp contains code for UseSHM and UseHugeTLBFS
    + S8021335: Missing synchronization when reading counters for
      live threads and peak thread count
    + S8024368: private methods are allocated vtable slots
    + S8071913: Filter out entries to free/uncommitted regions
      during iteration
    + S8157728: Convert GCTimer_test to GTest
    + S8164546: Convert DirectivesParser_test to GTest
    + S8177710: Convert TestMetaspaceUtils_test to GTest
    + S8177899: Tests fail due to code cache exhaustion on machines
      with many cores
    + S8192864: defmeth tests can hide failures
    + S8195627: [Graal] nsk/jdi/VirtualMachine/redefineClasses/
      /redefineclasses026 hangs with Graal in Xcomp mode
    + S8198945: Invalid RuntimeVisibleTypeAnnotations for
      annotation on anonymous class type parameter
    + S8203629: Produce events in the JDK without a dependency on
      jdk.jfr
    + S8203953: Rename SystemDictionary::load_shared_class(Symbol*,
      Handle, TRAPS) to load_shared_boot_class().
    + S8205327: Clean up #if INCLUDE_CDS in classLoaderExt.cpp and
      classLoaderExt.hpp
    + S8205476: KeyAgreement#generateSecret is not reset for ECDH
      based algorithm
    + S8209093: JEP 340: One AArch64 Port, Not Two
    + S8209566: [TESTBUG] runtime/appcds/jigsaw/modulepath/
      /JvmtiAddPath.java timeout on tier6 on sparc
    + S8209598: Clean up how messages are printed when CDS aborts
      start-up
    + S8209768: Refactor java/util/prefs/CheckUserPrefsStorage.sh
      to plain java test
    + S8210242: vmTestbase/nsk/stress/jni/jnistress001.java crashes
      with EXCEPTION_ACCESS_VIOLATION on windows-x86
    + S8210244: {@value} should be permitted in module documentation
    + S8210808: jshell tool: only considers the first snippet of
      the external editor
    + S8210837: Add libXrandr-devel to the Linux devkits
    + S8210853: JIT: C2 doesn't skip post barrier for new allocated
      objects
    + S8210908: Refactor java/util/prefs/PrefsSpi.sh to plain java
      test
    + S8210958: Rename "make run-test" to "make test"
    + S8211388: Make OtherRegionsTable independent of the region it
      is for
    + S8211694: JShell: Redeclared variable should be reset
    + S8211743: [AOT] crash in ScopeDesc::decode_body() when JVMTI
      walks AOT frames
    + S8211883: Disable anon and NULL cipher suites
    + S8212081: AnnotatedType.toString implementation don't print
      annotations on embedded types
    + S8212129: Remove finalize methods from
      java.util.zip.ZipFIle/Inflator/Deflator
    + S8212151: jdi/ExclusiveBind.java times out due to "bind
      failed: Address already in use" on Solaris-X64
    + S8212154: [TESTBUG] CheckArchivedModuleApp fails with NPE
      when JVMCI is absent
    + S8212173: Thread._stack_base/_stack_size initialized too late
      for new threads
    + S8212200: assert when shared java.lang.Object is redefined by
      JVMTI agent
    + S8212205: VM asserts after CDS archive has been unmapped
    + S8212481: PPC64: Enable POWER9 CPU detection
    + S8212624: remove outdated entries from langtools problem list
    + S8212694: Using Raw String Literals with align() and
      Integer.MIN_VALUE causes out of memory error
    + S8212738: Incorrectly named signature scheme
      ecdsa_secp512r1_sha512
    + S8212766: TestPromotionEventWithG1.java failed due to
      "RuntimeException: PLAB size is smaller than object size."
    + S8212770: Remove spaces before/after () for
      vmTestbase/jvmti/[s-u]
    + S8212795: ThreadInfoCompositeData.toCompositeData fails to
      map ThreadInfo to CompositeData
    + S8212827: GlobalCounter should support nested critical
      sections
    + S8212866: Broken link to schematron.com
    + S8212867: Link to DRBG test vectors is redirected to a broken
      link
    + S8212877: Restore JTREG_VERBOSE value for mach5 testing
    + S8212880: Cannot access ftp: site for fdlibm.tar
    + S8212884: Remove the assignments in ifs for vmTestbase/[a-s]
    + S8212897: Some improvements in the EditorPaneDemotest
    + S8212911: Unify and micro-optimize handling of
      non-in-collection set references in oop closures
    + S8212926: HttpClient does not retrieve files with large sizes
      over HTTP/1.1
    + S8212933: Thread-SMR: requesting a VM operation whilst
      holding a ThreadsListHandle can cause deadlocks
    + S8212941: Loosen the range of JapaneseEra
    + S8212948: Remove unused jdk.internal.misc.VMNotification
      interface
    + S8212956: [JVCMI] SpeculationReason should maintain identity
    + S8212958: Allow Klass::_subklass and _next_sibling to have
      unloaded classes
    + S8212974: Update RS Skipped cards uses wrong enum to register
      to phase
    + S8212978: Add RedefineMethodUsedByMultipleMethodHandles.java
      to problem list
    + S8212994: Links to Oracle websites should use "https:"
    + S8212997: [TESTBUG] Remove defmeth tests for class file
      versions 50 and 51
    + S8213005: Missing symbols in hs_err files on Windows after
      JDK-8212028
    + S8213007: Update the link in
      test/jdk/sun/security/provider/SecureRandom/DrbgCavp.java
    + S8213017: jspawnhelper: need to handle pipe write failure
      when sending return code
    + S8213035: Pack MethodHandleInlineStrategy coder and length
      into a long
    + S8213043: Add internal Unsafe xxxObject methods as jsr166 is
      broken
    + S8213056: Nested anchor tags in java.lang.module
    + S8213086: Compiler thread creation should be bounded by
      available space in memory and Code Cache
    + S8213100: fix test OptionSmokeTest before removing it from
      the problem list
    + S8213102: Oracle Unilinks are [301 Moved Permanently] to
      https://docs.oracle.com
    + S8213107: Make ClassLoaderDataGraph iterator skip unloaded
      CLDs
    + S8213142: Use RAII to set the scanning source in
      G1ScanEvacuatedObjClosure
    + S8213148: JDK build fails because of missing #includes
    + S8213151: [AIX] Some class library files are missing the
      Classpath exception
    + S8213172: CDS and JFR tests fail with
      assert(JdkJfrEvent::is(klass)) failed: invariant
    + S8213182: Minimal VM build failure after JDK-8212200 (assert
      when shared java.lang.Object is redefined by JVMTI agent)
    + S8213184: Revert change in jib-profiles.js from
      run-test-prebuilt to test-prebuilt
    + S8213204: ReservedStackTest and ReservedStackTestCompiler
      tests fail on windows
    + S8213211: [BACKOUT] Allow Klass::_subklass and _next_sibling
      to have unloaded classes
- Upgrade to upstream tag jdk-12+17
  * Fixes:
    + S6821316: comment in source code of SynthStyleFactory.java
      has a self-reference
    + S6828982: UIDefaults.getUI swallows original exception
    + S6994403: Grammatical error in documentation of
      javax.swing.GroupLayout.ParallelGroup
    + S8014503: AWT Choice implementation should be made consistent
     across platforms.
    + S8061359: [macosx] Checkbox toggles on Space press but does
      not spoken by Voice Over
    + S8133713: [macosx] Accessible JTables always reported as empty
    + S8150552: Remove -XX:+AggressiveOpts
    + S8171097: Convert TestReservedSpace_test to Gtest
    + S8177709: Convert TestVirtualSpace_test to GTest
    + S8182041: File Chooser Shortcut Panel folders under on JDK 9
      8062648: FileSystemView.getDefaultDirectory() should check
      read access on Unix systems
    + S8195793: Remove GTE CyberTrust Global Root
    + S8199567: [Nestmates] Cleanup instanceKlass.cpp
    + S8200151: Add 8 JNDI tests to com/sun/jndi/dns/ConfigTests/
    + S8201355: Avoid native memory allocation in
      sun.security.mscapi.PRNG.generateSeed
    + S8203281: [Windows] JComboBox change in ui when
      editor.setBorder() is called
    + S8207146: Rename jdk.internal.misc.Unsafe::xxxObject to
      xxxReference
    + S8208542: Add 4 JNDI tests to com/sun/jndi/dns/ListTests/
    + S8208595: [parfait] Better X11 font support
    + S8208638: Instead of circle rendered in appl window, but
      ellipse is produced JEditor Pane
    + S8209087: Clean up runtime code that compares 'this' to NULL
    + S8210306: Missing closing bracket in GridBagLayout gridwidth,
      gridheight description
    + S8210339: Add 10 JNDI tests to com/sun/jndi/dns/FedTests/
    + S8210353: Move java/util/Arrays/TimSortStackSize2.java back
      to tier1
    + S8210406: Refactor java.util.PluggableLocale:i18n shell tests
      to plain java tests
    + S8210407: Refactor java.util.Calendar:i18n shell tests to
      plain java tests
    + S8210448: Copy Java XML Digital Signature API Specification
      into java.xml.crypto javadocs
    + S8210632: Add key exchange algorithm to
      javax/net/ssl/TLSCommon/CipherSuite.java
    + S8210739: Calling JSpinner's setFont with null throws
      NullPointerException
    + S8210910: Create test for FileChooserDemo
    + S8210923: JShell: support for switch expressions
    + S8210959: JShell fails and exits when statement throws an
      exception whose message contains a '%'.
    + S8210990: [TESTBUG] Some CDS tests don't respect JVM variant
      being tested
    + S8211031: Remove un-needed qualified export to java.desktop
      from java.base on macos
    + S8211055: Provide print to a file (PDF) feature even when
      printer was not connected
    + S8211218: remove double semicolon in
      src/java.desktop/macosx/classes/sun/font/CFont.java
    + S8211300: Convert C-style array declarations in JDK client
      code
    + S8211317: avoid memory leak in
      Java_sun_awt_UNIXToolkit_load_1stock_1icon
    + S8211393: Memory leak issue on awt_InputMethod.c
    + S8211437: java.net.http.HttpClient hangs on 204 reply without
      Content-length 0
    + S8211693: Convert C-style array declarations in client demos
      and jdk.accessibility
    + S8211736: jdb doesn't print prompt when breakpoint is hit and
      suspend policy is STOP_EVENT_THREAD
    + S8211806: TLS 1.3 handshake server name indication is missing
      on a session resume
    + S8211853: Avoid additional duplicate work when a reference in
      the task queue has already been evacuated
    + S8211876: Broken links in java.base files
      (ClassLoader.html#name)
    + S8211879: Broken links in API overview
    + S8211886: Bad/broken link in synthFileFormat.html
    + S8211899: Remove the NSK_CPP_STUB macros from vmTestbase for
      jvmti/scenarios/[E-M]
    + S8211987: Menu bar gets input focus even if Alt-released
      event is consumed
    + S8212040: Compilation error due to wrong usage of
      NSPrintJobDispositionValue in mac10.12
    + S8212071: Need to set the FreeType LCD Filter to reduce
      fringing.
    + S8212098: Cleanup of ProblemList.txt for fixed swing tests
    + S8212114: Reconsider the affect on closed streams resulting
      from 8189366
    + S8212148: Remove remaining NSK_CPP_STUBs
    + S8212186: JVMTI lacks a few GC barriers/hooks
    + S8212213: All tests for splashscreen stopped worked in
      jdk12b13
    + S8212216: JGSS: Fix leak in exception cases in getJavaOID()
    + S8212220: add code to verify results to
      metaspace/stressDictionary/StressDictionary.java
    + S8212535: Remove spaces before/after () for vmTestbase/[a-j]*
    + S8212553: [TESTBUG] TestTrichotomyExpressions.java times out
      with Graal as JIT
    + S8212587: equals in MakeBase does not handle empty strings
      correctly
    + S8212595: Remove unused size_helper() in oop_oop_iterate* in
      instanceKlass.inline.hpp
    + S8212603: Need to step over GC barriers in Node::eqv_uncast()
    + S8212611: Small collection of simple changes from shenandoah
    + S8212612: Add documentation about Arguments::_exit_hook
    + S8212616: x86_32 build failures after JDK-8210498 (nmethod
      entry barriers)
    + S8212617: ARM32 build failures after JDK-7041262 (VM_Version
      should be called instead of Abstract_VM_Version so that
      overriding works)
    + S8212629: [TEST] wrong breakpoint in
      test/jdk/com/sun/jdi/DeferredStepTest
    + S8212642: Remove SystemDictionary::InitOption enum
    + S8212662: Fix javadoc typo in java.lang.ref.Cleaner
    + S8212663: Remove conservative at_safepoint assert when JFR
      writes type sets during class unloading
    + S8212665: com/sun/jdi/DeferredStepTest.java: jj1 (line 57) -
      unexpected. lastLine=52, minLine=52, maxLine=55
    + S8212695: Add explicit timeout to several HTTP Client tests
    + S8212698: Minor g1 #include changes and memoryService.hpp
      copyright date update
    + S8212706: nmethod jvmci_installed_code_name need to be XML
      escaped
    + S8212707: GlobalCounter padding is too optimistic
    + S8212718: Refactor some annotation processor tests to better
      use collections
    + S8212726: Replace some use of drop- and foldArguments with
      filtering argument combinator in StringConcatFactory
    + S8212752: Typo in SSL log message related to
      inactive/disabled signature scheme
    + S8212753: Improve oopDesc::forward_to_atomic
    + S8212754: Build failure: undefined
      JvmtiSampledObjectAllocEventCollector::object_alloc_is_safe_to_sample
    + S8212771: Remove remaining spaces before/after () for
      vmTestbase
    + S8212774: Remove dead code touching Klass::_lower_dimension
    + S8212817: [JVMCI] ResolvedJavaMethod.isInVirtualMethodTable
      throws InternalError
    + S8212896: AIX build breaks after 8212611
    + S8212913: (Nested)ThreadsListHandleInErrorHandlingTest need
      to disable ShowRegistersOnAssert
- Removed patches:
  * fix-arm32-build.patch
  * fix-i586-build.patch
    + Fixed upstream

-------------------------------------------------------------------
Thu Oct 25 19:32:05 UTC 2018 - Antoine Belvire <antoine.belvire@opensuse.org>

- Remove hardcoded Java version in jconsole desktop file.

-------------------------------------------------------------------
Tue Oct 23 10:31:57 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Merge into the JDK following modules from github.com/javaee:
  * com.sum.xml.fastinfoset
  * org.jvnet.staxex
  * com.sun.istack.runtime
  * com.sun.xml.txw2
  * com.sun.xml.bind
    + This provides a default implementation of JAXB-API that
      existed in JDK before Java 11 and that some applications
      depend on.

-------------------------------------------------------------------
Sun Oct 21 11:23:13 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Added patches:
  * fix-i586-build.patch
    + S8212616: x86_32 build failures after JDK-8210498 (nmethod
      entry barriers)
  * fix-arm32-build.patch
    + S8212617: ARM32 build failures after JDK-7041262 (VM_Version
      should be called instead of Abstract_VM_Version so that
      overriding works)

-------------------------------------------------------------------
Fri Oct 19 06:38:35 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Upgraded to upstream tag jdk-12+16 (Oracle October 2018 CPU)
  * Security fixes:
    + S8202936, CVE-2018-3183, bsc#1112148: Improve script engine
      support
    + S8199226, CVE-2018-3169, bsc#1112146: Improve field accesses
    + S8199177, CVE-2018-3149, bsc#1112144: Enhance JNDI lookups
    + S8208209, CVE-2018-3180, bsc#1112147: Improve TLS connection
      stability again
    + S8199172, CVE-2018-3150, bsc#1112145: Improve jar attribute
      checks
    + S8200648, CVE-2018-3157, bsc#1112149: Make midi code more
      sound
    + S8194534, CVE-2018-3136, bsc#1112142: Manifest better support
    + S8208754, CVE-2018-3136, bsc#1112142: The fix for JDK-8194534
      needs updates
    + S8196902, CVE-2018-3139, bsc#1112143: Better HTTP Redirection
  * Security-In-Depth fixes:
    + S8194546: Choosier FileManagers
    + S8195874: Improve jar specification adherence
    + S8196897: Improve PRNG support
    + S8197881: Better StringBuilder support
    + S8201756: Improve cipher inputs
    + S8204497: Better formatting of decimals
    + S8199110: Address Internet Addresses
  * Fixes
    + S7041262: VM_Version should be called instead of
      Abstract_VM_Version so that overriding works
    + S8027434: "-XX:OnOutOfMemoryError" uses fork instead of vfork
    + S8048215: [TESTBUG] java/lang/management/ManagementFactory/
      /ThreadMXBeanProxy.java Expected non-null LockInfo
    + S8058202: AnnotatedType implementations don't override
      toString(), equals(), hashCode()
    + S8079784: Unexpected IllegalAccessError when trying access
      InnerClasses attribute
    + S8152910: Get performance improvement with Stable annotation
    + S8186610: move ModuleUtils to top-level testlibrary
    + S8187522: test/sun/net/ftp/FtpURLConnectionLeak.java timed out
    + S8189366: SocketInputStream.available() should check for eof
    + S8191053: Provide a mechanism to make system's security
      manager immutable
    + S8192939: Remove Finalize methods from FileInputStream and
      FileOutputStream
    + S8195703: BasicJDWPConnectionTest.java: 'App exited
      unexpectedly with 2'
    + S8201436: Replace oop_ps_push_contents with oop_iterate and
      closure
    + S8203850: java.net.http HTTP client should allow specifying
      Origin and Referer headers
    + S8204667: Resources not freed on exception
    + S8209499: Create test for SwingSet EditorPaneDemo
    + S8209862: CipherCore performance improvement
    + S8210055: Enable different look and feel tests in SwingSet3
      demo tests
    + S8210064: ZGC: Introduce ZConcurrentRootsIterator for
      scanning a subset of strong IN_NATIVE roots concurrently
    + S8210215: C2 should optimize trichotomy calculations
    + S8210330: Make CLD claiming allow multiple claim bits
    + S8210389: C2: assert(n->outcnt() != 0 || C->top() == n ||
      n->is_Proj()) failed: No dead instructions after post-alloc
    + S8210403: Refactor java.util.Locale:i18n shell tests to plain
      java tests
    + S8210492: PLAB object promotion events report object sizes in
      words
    + S8210498: nmethod entry barriers
    + S8210683: Search result display order reversed for overloaded
      entries
    + S8210989: RSASSA-PSS certificate cannot be selected for
      client auth on TLSv1.2
    + S8211046: Forced data dependencies serve no purpose on x86
    + S8211139: Increase timeout value in all tests under
      jdk/sanity/client/SwingSet/src
    + S8211233: MemBarNode::trailing_membar() and
      MemBarNode::leading_membar() need to handle dying subgraphs
      better
    + S8211396: Broken link in javadoc for private
      java.util.regex.Pattern#normalize()
    + S8211432: [REDO] Handle JNIGlobalRefLocker.cpp
    + S8211446: Replace oop_pc_follow_contents with oop_iterate and
      closure
    + S8211447: Replace oop_pc_update_pointers with oop_iterate and
      closure
    + S8211714: Need to update vm_version.cpp to recognise VS2017
      minor versions
    + S8211731: Reconsider default option for ClassPathURLCheck
      change done in JDK-8195874
    + S8211740: [AOT] -XX:AOTLibrary doesn't accept windows path
    + S8211801: Remove the NSK_CPP_STUB macros from vmTestbase for
      jvmti/scenarios/[A-E]
    + S8211821: PrintStringTableStatistics crashes JVM
    + S8211852: inspect stack during error reporting
    + S8211866: TLS 1.3 CertificateRequest message sometimes offers
      disallowed signature algorithms
    + S8211878: Bad/broken links in docs/api/java.xml.crypto/
      /javax/xml/crypto/dsig/Reference.html
    + S8211901: javadoc generates broken links on deprecated items
      page
    + S8211909: JDWP Transport Listener: dt_socket thread crash
    + S8211921: AssertionError in MethodHandles$Lookup.defineClass
    + S8211922: Remove test/jdk/javax/naming/module/RunBasic.java
      from the ProblemList
    + S8211929: hotspot/share/opto/parse2.cpp compile error with
      gcc 7.3.1
    + S8211931: [ppc][testbug] runtime/jni/terminatedThread/
      /TestTerminatedThread.java fails as threads don't terminate
      immediately
    + S8211950: Deprecate the check if a JVMTI collector is present
      assertion
    + S8211952: Broken links in java.time API
    + S8211955: GC abstraction for LAB reserve
    + S8211956: AppCDS crashes for some uses with JRuby
    + S8211957: Broken links to stylesheet in java.base/doc-files
    + S8211960: broken links in java.util.logging
    + S8211961: Broken link in java.util.Locale
    + S8211962: Implicit narrowing in MacOSX java.desktop jsound
    + S8211971: Move security/cacerts/VerifyCACerts.java and
      security/CheckBlacklistedCerts.java
    + S8211978: Move testlibrary/jdk/testlibrary/
      /SimpleSSLContext.java and testkeys to network testlibrary
    + S8211980: Remove ThreadHeapSampler enable/disable/enabled
      methods
    + S8212001: Verify exported symbols in java.base (libjava)
    + S8212004: Optional compile_commands.json field not compatible
      with older libclang
    + S8212005: Epsilon elastic TLAB sizing may cause misalignment
    + S8212008: Use of TREAT_EXIT_CODE_1_AS_0 hide problems with
      jtreg Java
    + S8212023: Implicit narrowing in Solaris/sparc initializers
    + S8212025: Remove collector_present variable from
      ThreadHeapSampler
    + S8212028: Use run-test makefile framework for testing in
      Oracle's Mach5
    + S8212045: Add back tests removed from HashesTest.java and
      AddExportsTest.java
    + S8212053: A few more missing object equals barriers
    + S8212054: Boilerplate to bind oopDesc::equals_raw() to actual
      raw implementation
    + S8212074: Add method to peek the remaining tasks in task
      queues
    + S8212082: Remove the NSK_CPP_STUB macros for remaining
      vmTestbase/jvmti/[sS]*
    + S8212083: Handle remaining gc/lock native code and fix two
      strings
    + S8212110: Build of saproc.dll broken on Windows 32 bit after
      JDK-8210647
    + S8212165: JGSS: Fix cut/paste error in NativeUtil.c
    + S8212177: Epsilon alignment adjustments can overflow max TLAB
      size
    + S8212178: Soft reference reclamation race in
      com.sun.xml.internal.stream.util.ThreadLocalBufferAllocator
    + S8212181: ZGC: Fix incorrect root iteration in ZHeapIterator
    + S8212197: OpenDataException thrown when constructing
      CompositeData for StackTraceElement
    + S8212201: Classlist build tool should be built for the target
      JDK version
    + S8212212: (bf) Incorrect path to stream preprocessor source
      in java.nio Buffer test scripts
    + S8212562: To remove lib/security from test/jdk/TEST.groups
    + S8212597: Optimize String concatenation setup when using
      primitive operands
    + S8212608: Minimal VM build failure after JDK-8210498 (nmethod
      entry barriers)

-------------------------------------------------------------------
Thu Oct 11 09:58:01 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Upgraded to upstream tag jdk-12+15
  * Fixes:
    + S8036026: nsk/jvmti/scenarios/capability/CM02/cm02t001 fails
      intermittently
    + S8166138: DateTimeFormatter.ISO_INSTANT should handle offsets
    + S8181443: Replace usages of jdk.internal.misc.Unsafe with
      MethodHandles.Lookup.defineClass
    + S8193879: Java debugger hangs on method invocation
    + S8201603: MonitorContendedEnter failure in
      nsk/jvmti/scenarios/contention/TC02/tc02t001
    + S8202359: [GRAAL] compiler/uncommontrap/TestDeoptOOM.java
      failed with OutOfMemoryError
    + S8202951: Implementation of JEP 341: Default CDS Archives
    + S8206009: Move CDS java heap object archiving code to
      heapShared.hpp and heapShared.cpp
    + S8206240: java.lang.Class.newInstance() is causing caller to
      leak
    + S8206963: [AOT] bug with multiple class loaders
    + S8207689: Remove perfCounter _load_instance_class_failCounter
      used by deleted flag UnsyncloadClass
    + S8208686: [AOT] JVMTI ResourceExhausted event repeated for
      same allocation
    + S8209136: [JVMCI] Make sure volatile fields are read as
      volatile during constant reflection.
    + S8209407: VerifyError is thrown for inner class with lambda
    + S8209739: [TESTBUG] javax/imageio/plugins/png/
      /ItxtUtf8Test.java fails with OutOfMemoryError when running
      in CDS mode
    + S8209889: RedefineStress tests crash
    + S8210303: VM_HandshakeAllThreads fails assert with "failed:
      blocked and not walkable"
    + S8210376: [TESTBUG] @requires vm.cds should be replaced by
      @requires vm.cds.archived.java.heap and documentation is
      required for vm.gc==null
    + S8210388: Use hash table to store archived subgraph_info
      records
    + S8210395: Add doc to SecurityTools.java
    + S8210459: Add support for generating compile_commands.json
    + S8210592: Convert CDS-mode test sets in tier5 and tier6 to
      non-CDS-mode tests
    + S8210754: print_location is not reliable enough (printing
      register info)
    + S8210789: langtools/tools/javac/T8152616.java missing @modules
    + S8211065: Private method check in linkResolver is incorrect
    + S8211123: GC Metaspace printing after full gc
    + S8211131: Remove the NSK_CPP_STUB macros from vmTestbase for
      jvmti/[G-I]*
    + S8211148: var in implicit lambdas shouldn't be accepted for
      source < 11
    + S8211219: Type inconsistency in
      LIRGenerator::atomic_cmpxchg(..)
    + S8211232: GraphKit::make_runtime_call() sometimes attaches
      wrong memory state to call
    + S8211261: Remove the NSK_CPP_STUB macros from vmTestbase for
      jvmti/[A-G]*
    + S8211270: GC abstraction to get real object and headers size
    + S8211279: Verify missing object equals barriers
    + S8211292: [TEST] convert com/sun/jdi/DeferredStepTest.sh test
    + S8211296: Remove HotSpot deprecation warning suppression for
      Mac/clang
    + S8211324: Link to java.lang.ThreadGroup in JDWP spec is broken
    + S8211332: Space for stub routines (code_size2) is too small
      on new Skylake CPUs
    + S8211387: [Zero] atomic_copy64: Use ldrexd for atomic reads
      on ARMv7
    + S8211394: CHECK_ must be used in the rhs of an assignment
      statement within a block
    + S8211398: Square character support for the Japanese new era
    + S8211407: Bad links to non-existent entries on
      serialized-form page
    + S8211420: com.sun.net.httpserver.HttpServer returns
      Content-length header for 204 response code
    + S8211438: [Testbug] runtime/XCheckJniJsig/XCheckJSig.java
      looks for libjsig in wrong location
    + S8211677: Java resource copy and clean should use
      MakeTargetDir macro
    + S8211718: Supporting multiple concurrent OopStorage iterators
    + S8211724: Change mkdir -p to MakeDir macro where possible
    + S8211728: JarFile::versionedStream() does not filter META-INF
      resources in versioned stream
    + S8211765: JarFile constructor throws undocumented exception
    + S8211768: [s390] Implement JFR profiling
    + S8211776: 8210887 broke arraycopy optimization when ZGC is
      enabled
    + S8211782: Remove the NSK_CPP_STUB macros from vmTestbase for
      jvmti/[I-S]*
    + S8211792: Fix misplaced BarrierSet forward declarations
    + S8211794: Remove jdk/java/nio/channels/Selector/
      /RacyDeregister.java from problem list
    + S8211804: Constant AO_UNUSED_MBZ uses left shift of negative
      value
    + S8211825: ModuleLayer.defineModulesWithXXX does not setup
      delegation when module reads automatic module
    + S8211837: Creation of the default CDS Archive should depend
      on ENABLE_CDS
    + S8211856: [ppc, s390] ProblemList some failing tests.
    + S8211859: Avoid initializing AtomicBoolean from
      RandomAccessFile
    + S8211860: Avoid reading security properties eagerly on
      Manifest class initialization
    + S8211863: Problem list test/jdk/javax/naming/module/
      /RunBasic.java
    + S8211880: Broken links in java.util.jar
    + S8211902: broken link in java.net.http.WebSocket.Builder
    + S8211905: Remove multiple casts for EM06 file
    + S8211908: PPC64: Enable SuperWordLoopUnrollAnalysis by default
    + S8211920: Close server socket and cleanups in
      test/jdk/javax/naming/module/RunBasic.java
    + S8211927: Add additional diagnostic information to
      java/net/BindException/Test.java
    + S8211969: test/jdk/lib/security/CheckBlacklistedCerts.java
      searching for wrong paths
    + S8212000: Verify exported symbols in java.base (libnet,
      libnio/ch)

-------------------------------------------------------------------
Thu Oct  4 10:28:18 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Upgraded to upstream tag jdk-12+14
  * Fixes:
    + S7017058: Malayalam glyph substitution is failing for
      Malayalam with Windows Kartika font.
    + S7033681: Arrays.asList methods needs better documentation
    + S8039082: [TEST_BUG] Test java/awt/dnd/BadSerializationTest/
      /BadSerializationTest.java fails
    + S8130655: OS X: keyboard input in textfield is not possible
      if the window contained textfield is owned by EmbeddedFrame
    + S8146310: [macosx]
      com.apple.eawt.Application.setDefaultMenuBar does not
      initialize screen menu bar
    + S8163083: SocketListeningConnector does not allow invocations
      with port 0
    + S8169718: nsk/jdb/locals/locals002: ERROR: Cannot find
      boolVar with expected value: false
    + S8170937: Swing apps are slow if displaying from a remote
      source to many local displays
    + S8188764: Obsolete AssumeMP and then remove all support for
      non-MP builds
    + S8191130: Sinhala text rendering problem with
      C+VIRAMA+ZWJ+RA/YA+V
    + S8191178: [macos] Problem with input of yen symbol
    + S8195836: opentype:Bengali: "Khanda Ta" shaping issue with
      U+09A4 TA, U+09CD virama, U+200D ZWJ
    + S8199885: [Graal]
      org.graalvm.compiler.core.test.CountedLoopTest fails with
      "ControlFlowAnchor should never be cloned in the same graph"
    + S8200381: Typos in javadoc - missing verb "be" and alike
    + S8201818: [macosx] Printing attributes break page size set
      via "java.awt.print.Book" object
    + S8201925: JEditorPane unordered list bullets look pixelated
    + S8202013: JEditorPane shows large HTML unordered list bullets
    + S8202282: [TESTBUG] appcds
      TestCommon.makeCommandLineForAppCDS() can be removed
    + S8202628: javadoc generates bad links in TestModules.java
    + S8202702: Clearing selection on JTable causes disappearance
      of a row
    + S8203904: javax/swing/JSplitPane/4816114/bug4816114.java: The
      divider location is wrong
    + S8203928: [Test] Convert non-JDB scaffolding serviceability
      shell script tests to java
    + S8204294: [REDO] - JVMFlag::printError missing
      ATTRIBUTE_PRINTF
    + S8204963: javax.swing.border.TitledBorder has a memory leak
    + S8205479: OS X: requestFocus() does not work properly for
      embedded frame
    + S8205535: Useless (or buggy) call to Math.round on int input
    + S8205537: Drop of sun.applet package
    + S8206392: [macosx] Cycling through windows (JFrames) does not
      work with keyboard shortcut
    + S8207003: Miscellaneous changes imported from jsr166 CVS
      2018-09
    + S8207150: Clip.isRunning() may return true after Clip.stop()
      was called
    + S8207745: serviceability/sa/TestJmapCore.java times out
      parsing a 4GB hprof file
    + S8207768: Improve exception messages during manifest parsing
      of jar archives
    + S8208473: [TESTBUG] nsk/jdb/exclude/exclude001/exclude001.java
      is timing out on solaris-sparc again
    + S8208531: -javafx mode should be on by default when JavaFX is
      available
    + S8208996: X11 icon window color handing bug
    + S8209138: Symbol constructor uses u1 as the element type of
      its name argument
    + S8209332: [TEST] test/jdk/com/sun/jdi/CatchPatternTest.sh is
      incorrect
    + S8209340: The code which avoids synthetic accessors has
      become outdated
    + S8209343: Test javax/swing/border/TestTitledBorderLeak.java
      should be marked as headful
    + S8209454: [error-prone] TypeParameterUnusedInFormals in
      jdk.net
    + S8209546: Make sun/security/tools/keytool/autotest.sh to
      support macosx
    + S8209548: Unused and incorrect calls to FT_Get_Char_Index
    + S8209645: Split ClassLoaderData and ClassLoaderDataGraph into
      separate files
    + S8209946: [TESTBUG] CDS tests should use "@run driver"
    + S8209963: source file mode for JVM should provide a hook to
      locate the source file
    + S8210052: Enable testing for all the available look and feels
      in SwingSet3 demo tests
    + S8210274: Source Launcher should work with a security manager
    + S8210286: Drop of sun.awt.HToolkit class
    + S8210335: Clipping problems with complex affine transforms:
      negative scaling factors or small scaling factors
    + S8210384: SunLayoutEngine.isAAT() font is expensive on MacOS
    + S8210555: create --source --target synonyms for -source
      -target
    + S8210692: The "com.sun.awt.SecurityWarning" class can be
      dropped
    + S8210716: Detailed GC logging request misses some
    + S8210766: Remove obsolete qualified export sun.net.www to
      java.desktop
    + S8210810: Escaped character at specific position in argument
      file is not handled properly
    + S8210821: Support dns_canonicalize_hostname in krb5.conf
    + S8210842: Handle JNIGlobalRefLocker.cpp
    + S8210856: Move InstanceKlass DependencyContext cleaning to
      SystemDictionary::do_unloading()
    + S8210866: Remove HPKeysym.h from JDK sources
    + S8210880: Remove HPKeysym.h from JDK sources
    + S8210885: Convert left over loads/stores to access api
    + S8210887: Tweak C2 gc api for arraycopy
    + S8210892: Deprecate TLABStats
    + S8210926: vmTestbase/nsk/jvmti/scenarios/allocation/AP11/
      /ap11t001/TestDescription.java failed with
      JVMTI_ERROR_INVALID_CLASS in CDS mode
    + S8210964: add more ld preloading related info to hs_error
      file on Linux
    + S8210971: Add exception handling methods to CompletionStage
      and CompletableFuture
    + S8210972: Add comment text to C1 patching code
    + S8210984: [TESTBUG] hs203t003 fails with "# ERROR:
      hs203t003.cpp, 218: NSK_CPP_STUB2 ( ResumeThread, jvmti,
      thread)"
    + S8210994: Create test for SwingSet3 FrameDemo
    + S8211036: Remove the NSK_STUB macros from vmTestbase for non
     jvmti
    + S8211057: Gensrc step CompileProperties generates unstable
      CompilerProperties output
    + S8211071: unpack.cpp fails to compile with statement has no
      effect [-Werror=unused-value]
    + S8211080: RawStringLiteralLangAPI.java test times out by
      default
    + S8211092: test/jdk/sun/net/www/http/HttpClient/
      /MultiThreadTest.java fails intermittently when cleaning up
    + S8211097: aix: fix build after JDK-8210919
    + S8211102: Crash with -XDfind=lambda and -source 7
    + S8211107: LDAPS communication failure with jdk 1.8.0_181
    + S8211121: Remove
      sun.reflect.ReflectionFactory::newInstanceForSerialization
    + S8211124: HotSpot update for vm_version.cpp to recognise
      updated VS2017
    + S8211125: backout fix for 8210880 which was pushed under
      another ID
    + S8211129: compiler/whitebox/ForceNMethodSweepTest.java fails
      after JDK-8132849
    + S8211130: Change to Oracle Developer Studio 12.6 for building
      on Solaris at Oracle
    + S8211138: Missing Flag enum constants
    + S8211145: [ppc] [s390]: Build fails due to -Werror=switch
      (introduced with JDK-8211029)
    + S8211149: fix potential memleak in getJavaIDFromLangID after
      failing SetupI18nProps call [windows]
    + S8211150: G1 Full GC not purging code root memory and hence
      causing memory leak
    + S8211160: Handle different look and feels in
      JInternalFrameOperator
    + S8211163: UNIX version of Java_java_io_Console_echo does not
      return a clean boolean
    + S8211165: License header is absent in a few J2Ddemo source
      code files
    + S8211168: Solaris-X64 build failure with error nreg hides the
      same name in an outer scope
    + S8211170: AArch64: Warnings in C1 and template interpreter
    + S8211171: move JarUtils to top-level testlibrary
    + S8211175: Remove temporary clock initialization duplication
    + S8211176: Initialize ObjectMonitor eagerly
    + S8211180: SourceLauncherTest.java fails in JDK12 CI on Win*
    + S8211208: make AllocateHeapAt an unsupported option on AIX
    + S8211212: ARM: -Werror=switch build failure
    + S8211231: BarrierSetC1::generate_referent_check() confuses
      register allocator
    + S8211239: Build fails without JFR: empty JFR events
      signatures mismatch
    + S8211241: Missing obj equals in TemplateTable::fast_aldc
    + S8211251: Default mask register for avx512 instructions
    + S8211268: Disable unsupported GCs for Zero
    + S8211269: Make declaration of Allocation protected in
      MemAllocator
    + S8211272: x86_32 build failures after JDK-8210764 (Update
      avx512 implementation)
    + S8211274: x86_32 build failures after JDK-8211029 (Have a
      common set of enabled warnings for all native libraries)
    + S8211278: Update ProblemList
    + S8211287: ClassPathTests.java fails due to "Unable to map
      MiscData shared space at required address."
    + S8211291: Backout JDK-8210842 Handle JNIGlobalRefLocker.cpp
    + S8211295: DriverManager.getConnection fails when called from
      com.sun.rowset.JdbcRowSetImpl
    + S8211325: test/jdk/java/net/Socket/LingerTest.java fails with
      cleaning up
    + S8211328: Different declaration and definition of
      ClassLoaderData::classes_do() leads to build failures
    + S8211333: AArch64: Fix another build failure after JDK-8211029
    + S8211349: Bad HTML in {@link} for
      HttpResponse.BodyHandlers.ofPublisher
    + S8211350: Remove jprt support
    + S8211364: Remove expired flags
    + S8211375: Minimal VM build failures after JDK-8211251
      (Default mask register for avx512 instructions)
    + S8211384: Obsolete -XX:+/-MonitorInUseLists option
    + S8211385: (zipfs) ZipDirectoryStream yields a stream of
      absolute paths when directory is relative
    + S8211392: compiler/profiling/
      /spectrapredefineclass_classloaders/Launcher.java times out in
      JDK12 CI
- Removed patches:
  * fix_arm_build.patch
  * fix_x86_32_build.patch
  * zero-unsupported-gcs.patch
    + integrated upstream
  * java11-improved-fonts.patch
    + code in the context changed considerably
    + some of the hunks in the patch integrated upstream

-------------------------------------------------------------------
Mon Oct  1 05:27:10 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Added patch:
  * zero-unsupported-gcs.patch
    + S8211268: Disable unsupported GCs for Zero

-------------------------------------------------------------------
Sat Sep 29 05:58:33 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Upgraded to upstream tag jdk-12+13
  * Fixes:
    + S8072130: java/lang/instrument/BootClassPath/
      /BootClassPathTest.sh fails on Mac OSX
    + S8132849: Increased stop time in cleanup phase because of
      single-threaded walk of thread stacks in
      NMethodSweeper::mark_active_nmethods()
    + S8169246: java/net/DatagramSocket/ReportSocketClosed.java
      fails intermittently with BindException
    + S8173730: Stop including enhanced for-loop tip for enum
      values() method
    + S8190985: .jcheck/conf files contain 'project=jdk10'
    + S8196341: Add JFR events for parallel phases of G1
    + S8198717: Remove compute_optional_offset
    + S8199931: java/net/MulticastSocket/
      /UnreferencedMulticastSockets.java fails with "incorrect data
      received"
    + S8202201: All oop stores in the x64 interpreter are treated
      as volatile when using G1
    + S8202462: {@index} may cause duplicate labels
    + S8205461: Create Collector which merges results of two other
      collectors
    + S8205593: Javadoc -link makes broken links if module name
      matches package name
    + S8208471: nsk/jdb/unwatch/unwatch002/unwatch002.java fails
      with "Prompt is not received during 300200 milliseconds"
    + S8209019: Remove tests affected by JDK-8208690 from the
      ProblemList
    + S8209022: Missing checkcast when casting to type parameter
      bounded by intersection type
    + S8209058: Cannot find annotation method 'value()' in type
      'Profile+Annotation'
    + S8209695: ARM: Explicit barriers for interpreter
    + S8209697: ARM: Explicit barriers for C1/assembler
    + S8209817: stack is executable when building with Clang on
      Linux
    + S8209865: Incorrect 'multiple elements' notes with
      Elements#getTypeElement and --release
    + S8210152: Optimize integer divisible by power-of-2 check
    + S8210275: Source Launcher should fail if --source is used
      without a source file
    + S8210284: "assert((av & 0x00000001) == 0) failed: unsupported
      V8" on Solaris 11.4
    + S8210390: C2 still crashes with "assert(mode ==
      ControlAroundStripMined && use == sfpt) failed: missed a node"
    + S8210413: AArch64: Optimize div/rem by constant in C1
    + S8210443: Migrate Locale matching tests to JDK Repo.
    + S8210465: ARM: Object equals abstraction for
      BarrierSetAssembler
    + S8210466: Modularize allocations in assembler
    + S8210557: G1 next bitmap verification at the end of
      concurrent mark sometimes fails
    + S8210633: Cannot parse JapaneseDate string with
      DateTimeFormatterBuilder Mapped-values
    + S8210689: Remove the multi-line old C style for string
      literals
    + S8210705: Stop exporting all symbols on macosx
    + S8210725: com/sun/jdi/RedefineClearBreakpoint.java fails with
      waitForPrompt timed out after 60 seconds
    + S8210748: [TESTBUG] lib.jdb.Jdb.waitForPrompt() should
      clarify which output is the pending reply after a timeout
    + S8210752: Remaining explicit barriers for C2
    + S8210760: [TEST] rewrite com/sun/jdi shell tests to java
      version - step4
    + S8210761: libjsig is being compiled without optimization
    + S8210764: Update avx512 implementation
    + S8210829: Modularize allocations in C2
    + S8210839: Improve interaction between source launcher and
      classpath
    + S8210846: TLSv.1.3 interop problems with OpenSSL 1.1.1 when
      used on the client side with mutual auth
    + S8210848: Obsolete SyncKnobs
    + S8210857: Allow retiring TLABs and collecting statistics in
      parallel
    + S8210875: Refactor CompactHashtable
    + S8210879: ClassLoaderStatsClosure does raw oop comparison
    + S8210881: ZGC: Introduce ZRootsIteratorClosure
    + S8210883: ZGC: Parallel retire/resize/remap of TLABs
    + S8210884: ZGC: Remove insertion of filler objects
    + S8210889: Some service thread cleanups can be starved
    + S8210894: remove jdk/testlibrary/Asserts
    + S8210918: Add test to exercise server-side client hello
      processing
    + S8210919: Remove statically linked libjli on Windows
    + S8210920: Native C++ tests are not using CXXFLAGS
    + S8210924: Remove PACKAGE_PATH
    + S8210931: JLI and launchers normalization and cleanup
    + S8210934: Move sun/net/www/protocol/http/GetErrorStream.java
      to OpenJDK
    + S8210941: Stop filtering out -xregs=no%appl for libsunec
    + S8210944: Stop replacing -MD with -MT in
      libwindowsaccessbridge
    + S8210949: Stop filtering out -xc99=%none for liblcms
    + S8210960: Allow --with-boot-jdk-jvmargs to work during
      configure
    + S8210961: [aix] enhance list of environment variables
      reported in error log file on AIX
    + S8210962: Deprecate jdk-variant
    + S8210963: Build failures after "8210829: Modularize
      allocations in C2"
    + S8210974: No extensions debug log for ClientHello
    + S8210987: Extra newlines on Windows when running nsk jdb tests
    + S8210988: Improved handling of compiler warnings in the build
    + S8211029: Have a common set of enabled warnings for all
      native libraries
    + S8211037: Load jib jars dynamically from JibArtifactManager
    + S8211045: [Testbug] Fix for 8144279 didn't define a test case!
    + S8211061: Tests fail with
      assert(VM_Version::supports_sse4_1()) on ThreadRipper CPU
    + S8211064: [AArch64] Interpreter and c1 don't correctly handle
      jboolean results in native calls
    + S8211099: ProblemList two networking tests until jtreg b14 is
      promoted
    + S8211103: ProblemList runtime/XCheckJniJsig/XCheckJSig.java
      on MacOS X
    + S8211127: TestNewLanguageFeatures.java fails after JDK-8173730
    + S8211134: problem list
      compiler/whitebox/ForceNMethodSweepTest.java
    + S8211146: fix problematic elif-tests after recent gcc warning
      changes Werror=undef
- Added patches:
  * fix_x86_32_build.patch
    + upstream fixes for i586 build breakages
  * fix_arm_build.patch
    + upstream fixes for arm build breakages

-------------------------------------------------------------------
Fri Sep 21 06:24:35 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Upgraded to upstream tag jdk-12+12
  * Fixes:
    + S8029661: Support TLS v1.2 algorithm in SunPKCS11 provider
    + S8034802: (zipfs) newFileSystem throws UOE when the zip file
      is located in a custom file system
    + S8098798: Thread.join(ms) on Linux still affected by changes
      to the time-of-day clock
    + S8140466: ChaCha20 and Poly1305 TLS Cipher Suites
    + S8183548: Comma-expressions shouldn't use any temporary
      variable
    + S8190737: use unicode version of the canonicalize() function
      to handle long path on windows
    + S8193037: package-info annotations are not reported when
      annotation processing is enabled
    + S8193561: Cyclic hierarchy causes a NullPointerException when
      setting DEFAULT flag
    + S8200434: String::align, String::indent
    + S8203466: intermittent crash at
      jdk.internal.misc.Unsafe::getObjectVolatile (native)
    + S8206981: Compiler support for Raw String Literals
    + S8207160: ClassReader::adjustMethodParams can potentially
      return null if the args list is empty
    + S8207264: solaris-sparcv9-cmp-baseline fails
    + S8207760: SAXException: Invalid UTF-16 surrogate detected:
      d83c ?
    + S8207954: Data for --release 11
    + S8208468: [TESTBUG] nsk/jdb/locals/locals002: fails with
      "Prompt is not received during ... milliseconds"
    + S8208780: (se) test
      SelectWithConsumer.testReadableAndWriteable(): failure
    + S8209031: SSLSocket should throw an exception when
      configuring DTLS
    + S8209163: SA: Show Object Histogram asserts with ZGC
    + S8209167: Use CLDR's time zone mappings for Windows
    + S8209574: [AOT] breakpoint events are generated in different
      threads does not meet expected count
    + S8209772: Refactor shell test
      java/util/ServiceLoader/basic/basic.sh to java
    + S8209880: tzdb.dat is not reproducibly built
    + S8209914: javadoc search sometimes generates bad URIs
    + S8209916: NPE in SupportedGroupsExtension
    + S8209972: [GRAAL] Don't run RTM tests with Graal
    + S8210004: Thread.sleep(millis, nanos) timeout returns early
    + S8210047: some pages contain content outside of landmark
      region
    + S8210056: Enable different look and feel tests in SwingSet3
      demo test TextFieldDemoTest
    + S8210193: [TESTBUG]
      gc/g1/mixedgc/TestOldGenCollectionUsage.java fails
      intermittently with OutOfMemoryError in CDS mode.
    + S8210220: [AOT] jdwp test cases are failing with error #
      ERROR: TEST FAILED: Cought IOException while receiving event
      packet
    + S8210237: [TESTBUG]gc/stress/TestStressIHOPMultiThread.java
      fails with 'Unexpected exit from test [exit code: 1]' in CDS
      mode
    + S8210252: com/sun/jdi/DebuggerThreadTest.java fails with NPE
    + S8210311: IllegalArgumentException in CookieManager -
      Comparison method violates its general contract
    + S8210416: [linux] Poor StrictMath performance due to
      non-optimized compilation
    + S8210425: [x86] sharedRuntimeTrig/sharedRuntimeTrans compiled
      without optimization
    + S8210461: AArch64: Math.cos intrinsic gives incorrect results
    + S8210478: Update Graal
    + S8210481: Remove #ifdef cplusplus from vmTestbase
    + S8210483: AssertionError in DeferredAttr at setOverloadKind
      caused by JDK-8203679
    + S8210490: TimeZone.getDisplayName given Locale.US doesn't
      always honor the Locale.
    + S8210496: Improve filtering for classes with security
      sensitive fields
    + S8210523: runtime/appcds/cacheObject/DifferentHeapSizes.java
      crash
    + S8210559: ClassLoaderData Symbols can leak
    + S8210560: [TEST] convert com/sun/jdi redefineClass-related
      tests
    + S8210593: Clean up JNI_ENV_ARG and factorize the macros for
      vmTestbase/jvmti[N-R] tests
    + S8210596: jshell does not support raw string literals
    + S8210647: libsaproc is being compiled without optimization.
    + S8210660: PPC64: Mapping floating point registers to vsx
      registers in ppc.ad
    + S8210665: Clean up JNI_ENV_ARG and factorize the macros for
      vmTestbase/jvmti[R-U] tests
    + S8210671: CheckExamples.java fail after Raw String Literals
      checkin
    + S8210674: Need to add examples for use of javac properties
      introduced by Raw String Literals
    + S8210676: Remove some unused Label variables
    + S8210695: Create test to cover JDK-8205330 InitialDirContext
      ctor sometimes throws NPE if the server has sent a disconnection
    + S8210699: Problem list tests which times out in Xcomp mode
    + S8210700: Clean up JNI_ENV_ARG and factorize the macros for
      vmTestbase/jvmti/unit tests
    + S8210702: Remove dtrace mapfiles
    + S8210703: vmStructs.cpp compiled with -O0
    + S8210704: Remove dead build tools
    + S8210710: Rename ThreadLocalAllocBuffer::myThread() to
      thread()
    + S8210711: Remove unused offset getters in
      ThreadLocalAllocBuffer
    + S8210713: Let CollectedHeap::ensure_parsability() take care
      of TLAB statistics gathering
    + S8210714: ZGC: ZWeakRootsIterator should no longer call
      reset/finish_dead_counter()
    + S8210721: Replace legacy serial exception field with
      Throwable::cause
    + S8210723: Better information in configure for invalid Xcode
    + S8210724: Change the verbosity threshold of logging for
      [oopstorage,ref]
    + S8210726: Fix up a few minor nits forgotten by JDK-8210665
    + S8210729: Clean up macosx static library handling
    + S8210731: PropertiesParser does not produce reproducible
      output
    + S8210732: remove jdk.testlibrary.Utils
    + S8210736: jdk/javax/xml/crypto/dsig/GenerationTests.java slow
      on linux
    + S8210741: Typo in Java API documentation of
      java.nio.file.Paths
    + S8210750: Clean up compare.sh exceptions
    + S8210753: Make ThreadLocalAllocBuffer::resize() public
    + S8210775: JVM TI Spec missing copyright
    + S8210779: 8182404 and 8210732 haven't updated copyright years
    + S8210785: Trivial typo fix in X509ExtendedKeyManager javadoc
    + S8210786: Typo s/overriden/overridden/ in several places
    + S8210787: Object.wait(long, int) throws inappropriate
      IllegalArgumentException
    + S8210793: [JVMCI] AllocateCompileIdTest.java failed to find
      DiagnosticCommand.class
    + S8210802: temp files left by tests in jdk/java/net/httpclient
    + S8210817: Minor typo in java.nio.file.attribute package
      summary
    + S8210819: Update the host name in CNameTest.java
    + S8210836: Build fails with warn_unused_result in
      openjdk/src/jdk.hotspot.agent/linux/native/libsaproc/ps_core.c
    + S8210841: test/jdk/vm/runtime/ReflectStackOverflow.java fails
      with NoClassDefFoundError
    + S8210861: Move assert to help diagnose rare RedefineStress
      crash
    + S8210864: Reduce the use of metaspaceShared.hpp
    + S8210874: Test for JDK-8209615
    + S8210899: (zipfs) ZipFileSystem.EntryOutputStreamCRC32
      mistakenly set the crc32 value into size field
    + S8210912: Build error in src/jdk.crypto.cryptoki/
      /share/native/libj2pkcs11/p11_convert.c after JDK-8029661

-------------------------------------------------------------------
Fri Sep 14 07:39:00 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-12+11
  * Fixes:
    + S6899533: SecureClassLoader and URLClassLoader have
      unnecessary check for createClassLoader permission
    + S8042902: Test java/net/Inet6Address/serialize/
      /Inet6AddressSerializationTest.java fails intermittently
    + S8056217: Remove awt_makecube.cpp
    + S8059019: sdp.conf.template should be copied on linux too
    + S8081858: make dist-clean does not delete all log files
    + S8182404: remove jdk.testlibrary.JDKToolFinder and
      JDKToolLauncher
    + S8185145: AppCDS custom loader support on Mac OS X
    + S8199874: [TESTBUG] runtime/Thread/ThreadPriorities.java
      fails with "expected 0 to equal 10"
    + S8200609: Proper fix for mapfile removal for libjsig
    + S8205330: InitialDirContext ctor sometimes throws NPE if the
      server has sent a disconnection
    + S8205507: jdk/javax/xml/crypto/dsig/GenerationTests.java
      timed out
    + S8208171: PPC64: Enrich SLP support
    + S8208352: Merge HeapMonitorTest and HeapMonitorGCTest code
    + S8208697: vmTestbase/metaspace/stressHierarchy/
      /stressHierarchy012/TestDescription.java fails with
      OutOfMemoryError: Metaspace
    + S8209361: [AOT] Unexpected number of references for
      JVMTI_HEAP_REFERENCE_CONSTANT_POOL [111-->111]: 0 (expected
      at least 1)
    + S8209386: [error-prone] StreamResourceLeak in jdk.internal.ed
      module
    + S8209544: AES encrypt performance regression in jdk11b11
    + S8209773: Refactor shell test javax/naming/module/basic.sh to
      java
    + S8209786: JDK12 fails to build on s390x with gcc 7.3
    + S8209843: Optimize oop scan closure closures wrt to reference
      processing in G1
    + S8209930: Refactor java/util/zip/ZipFile/deletetempjar.sh to
      plain java test
    + S8209971: TestOptionsWithRanges.java crashes in CDS mode with
      G1UpdateBufferSize=1.
    + S8210009: Source Launcher classloader should support
      getResource and getResourceAsStream
    + S8210112: remove jdk.testlibrary.ProcessTools
    + S8210131: vmTestbase/nsk/jvmti/scenarios/allocation/AP10/
      /ap10t001/TestDescription.java failed with ObjectFree:
      GetCurrentThreadCpuTimerInfo returned unexpected error code
    + S8210142: java.util.Calendar.clone() doesn't respect
      sharedZone flag
    + S8210187: Explicit barriers for C2
    + S8210198: Clean up JNI_ENV_ARG for vmTestbase/jvmti/Get[A-F]
      tests
    + S8210233: Prepare Klass::is_loader_alive() for concurrent
      class unloading
    + S8210236: Prepare
      ciReceiverTypeData::translate_receiver_data_from for
      concurrent class unloading
    + S8210283: Support git as an SCM alternative in the build
    + S8210285: CharsetDecoder/Encoder's constructor does not
      reject NaN
    + S8210289: ArchivedKlassSubGraphInfoRecord is incomplete
    + S8210300: runtime/MemberName/MemberNameLeak.java fails with
      RuntimeException
    + S8210318: idea.sh script doesn't work on Mac
    + S8210319: [s390]: Use of shift operators not covered by cpp
      standard
    + S8210321: Create NO_KEEPALIVE CLD holder accessor
    + S8210334: TLS 1.3 server fails if ClientHello doesn't have
      pre_shared_key and psk_key_exchange_modes
    + S8210345: The Japanese message of FileNotFoundException
      garbled
    + S8210347: Combine subsequent calls to Set.contains() and
      Set.add()
    + S8210381: Obsolete EmitSync
    + S8210385: Clean up JNI_ENV_ARG and factorize the macros for
      vmTestbase/jvmti[A-N] tests
    + S8210387: C2 compilation fails with "assert(node->_last_del
      == _last) failed: must have deleted the edge just produced"
    + S8210422: runtime/modules/ModuleStress/
      /ExportModuleStressTest.java - assertion failed: address not
      aligned: 0x00000008baadbabe
    + S8210429: Clean up JNI_ENV_ARG for vmTestbase/jvmti/Get[G-Z]
      tests
    + S8210432: Add additional TeliaSonera root certificate
    + S8210434: [Graal] 8209301 prevents GitHub Graal from
      compiling with latest JDK
    + S8210435: don't add local variable spots if they are DCE'ed
      by the compiler
    + S8210463: Recalculate_used() always sets time taken in
      G1GCPhaseTimes
    + S8210467: Remove unused G1CollectedHeap::_max_heap_capacity
    + S8210470: Remove unused Verifier::verify() Verifier::Mode
      argument
    + S8210486: Unused code in check_nest_attributes function
    + S8210495: compiler crashes because of illegal signature in
      otherwise legal code
    + S8210497: [PPC64] Vector registers not saved across safepoint
    + S8210502: jdeps does not handle properly on analyzing a
      mixture of MR JARs and non-MR JARs
    + S8210511: TestSingleWriterSynchronizer can deadlock
    + S8210512: [Testbug] vmTestbase/nsk/jdi/ObjectReference/
      /referringObjects/referringObjects002/referringObjects002.java
      fails with unexpected size of
      ClassLoaderReference.referringObjects
    + S8210513: Obsolete SyncFlags
    + S8210514: Obsolete SyncVerbose
    + S8210515: [TESTBUG]CheckArchivedModuleApp.java needs to check
      if EnableJVMCI is set.
    + S8210519: build/releaseFile/CheckSource.java failed
      additional sources found
    + S8210578: AArch64: Invalid encoding for fmlsvs instruction

-------------------------------------------------------------------
Tue Sep 11 06:20:43 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-12+10
  * Fixes:
    + S6657100: Rename sparcWorks to solstudio in HotSpot
    + S8067354: com/sun/jdi/GetLocalVariables4Test.sh failed
    + S8165440: Add Zero support for x86_64-linux-gnux32 target
    + S8170089: nsk/jdi/EventSet/resume/resume008: ERROR:
      suspendCounts don't match for : Common-Cleaner
    + S8176453: Javadoc search: there are issues with generics in
      parameters
    + S8182733: aarch64 build documentation misleading
    + S8187078: -XX:+VerifyOops finds numerous problems when
      running JPRT
    + S8197398: (zipfs) Files.walkFileTree walk indefinitelly while
      processing JAR file with "/" as a directory inside.
    + S8199811: com/sun/jdi/ProcessAttachTest.java fails
      intermittently: Remote thread failed for unknown reason
    + S8203356: VM Object Allocation Collector can infinite recurse
    + S8206424: Use locking for cleaning ProtectionDomainTable
    + S8207200: Committed > max memory usage when getting
      MemoryUsage
    + S8207247: AARCH64: Enable Minimal and Client VM builds
    + S8207343: Automate vtable/itable stub size calculation
    + S8207744: Clean up inconsistent use of opendir/closedir
      versus opendir64/closedir64
    + S8207793: [TESTBUG] runtime/Metaspace/FragmentMetaspace.java
      fails: heap needs to be increased
    + S8208186: SetHeapSamplingInterval handles 1 explicitly
    + S8208280: java/nio/channels/Selector/RegisterDuringSelect.java
      fails with "key not removed from key set"
    + S8208608: Update --module-source-path to allow explicit
      source paths for specific modules
    + S8209052: Low contrast in docs/api/constant-values.html
    + S8209152: (so) ServerSocketChannel::supportedOptions includes
      IP_TOS
    + S8209362: sun/security/ssl/SSLSocketImpl/ReuseAddr.java
      failed due to "BindException: Address already in use (Bind
      failed)"
    + S8209408: Primitive heap access for interpreter
      BarrierSetAssembler/arm32
    + S8209585: [Graal] vmTestbase/nsk/jvmti/scenarios/sampling
      tests fail with "Too small stack of resumed thread"
    + S8209594: guarantee(this->is8bit(imm8)) failed: Short forward
      jump exceeds 8-bit offset
    + S8209604: [TEST] rewrite com/sun/jdi shell tests to java
      version - step2
    + S8209736: runtime/RedefineTests/ModifyAnonymous.java fails
      with NullPointerException when running in CDS mode
    + S8209832: Refactor jdk/internal/reflect/Reflection/
      /GetCallerClassTest.sh to plain java test
    + S8209856: Obsolete error reporter
    + S8209942: [epsilon] range function for EpsilonTLABElasticity
      causes compiler warning
    + S8209950: SIGBUS in CodeHeapState::print_names()
    + S8209975: Some GCThreadLocalData not initialized
    + S8209993: Create a test for SwingSet3 ToolTipDemo
    + S8210039: move OSInfo to top level testlibrary
    + S8210061: ZGC: Remove STW weak processor mode
    + S8210063: ZGC: Enable load barriers for IN_NATIVE runtime
      barriers
    + S8210065: ZGC: Remove mode for treating weaks as strong
    + S8210066: [JVMCI] iterateFrames uses wrong GrowableArray API
      for appending
    + S8210087: Classes in jdk.unsupported not accessible from
      jconsole plugin
    + S8210118: better jdb test diagnostics when getting "Prompt is
      not received during ... milliseconds" failures
    + S8210119: Rename SubTasksDone::is_task_claimed
    + S8210147: adjust some WSAGetLastError usages in windows
      network coding
    + S8210150: Allow custom-hook.m4 to include files from
      CUSTOM_CONFIG_DIR
    + S8210153: localized currency symbol of VES
    + S8210155: Lock ClassLoaderDataGraph
    + S8210158: Accessorize JFR getEventWriter() intrinsics
    + S8210160: Remove deprecated configure arguments
    + S8210164: building Minimal VM fails with error: comparison of
      unsigned expression < 0 is always false [-Werror=type-limits]
    + S8210167: ProblemList vmTestbase/nsk/jvmti/scenarios/
      /allocation/AP10/ap10t001/TestDescription.java
    + S8210168: JCK test
      .vm.classfmt.ins.code__002.code__00201m1.code__00201m1 hangs
      with -noverify
    + S8210182: Remove macros for C compilation from vmTestBase but
      non jvmti
    + S8210192: Hsperf counter ParNew::CMS should be ParNew:CMS
    + S8210194: [TESTBUG] jvmti_FollowRefObjects.cpp missing
      initializer for member
      _jvmtiHeapCallbacks::heap_reference_callback
    + S8210205: build fails on AIX in hotspot cpp tests (for
      example getstacktr001.cpp)
    + S8210226: Add support for multiple project folders to idea.sh
    + S8210235: JvmtiTrace::safe_get_current_thread_name is unsafe
      in debug builds
    + S8210243: [TEST] rewrite com/sun/jdi shell tests to java
      version - step3
    + S8210246: NMTUtil::_memory_type_names should be in sync with
      MemoryType
    + S8210259: [testbug] IncompatibleOptions.java fails if VM
      configured without ZGC
    + S8210265: Crash in HSpaceCounters::update_used()
    + S8210279: (bf) Remove unused package private method
      java.nio.Buffer.truncate()
    + S8210307: 8210246 broke NMT jtreg tests
    + S8210314: [aix] NMT does not show "Safepoint" memory type
    + S8210320: PPC64: Fix uninitialized variable in C1 LIR
      assembler code
    + S8210338: Better output for GenerationTests.java
    + S8210341: (fs) Typos in PosixFileAttributeView javadoc
    + S8210355: Minimal and Zero non-PCH builds fail after
      JDK-8207343 (Automate vtable/itable stub size calculation)
    + S8210357: Zero builds fail after JDK-8207343 (Automate
      vtable/itable stub size calculation)
    + S8210366: Typo in MethodHandles.Lookup: must be either be
    + S8210394: (zipfs) jdk/nio/zipfs/ZFSTests.java rootdir.zip:
      The process cannot access the file because it is being used by
      another process

-------------------------------------------------------------------
Tue Sep 11 06:15:20 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Update jax-ws-spec and jaxb-spec tarball to the latest versions
- Modified patch:
  * annotation-module.patch
    + module name change from java.xml.ws.annotation to
      java.annotation

-------------------------------------------------------------------
Mon Sep 10 21:26:26 UTC 2018 - Mark Hammons <markehammons@gmail.com>

- Update configuration flags to enable ZGC on x86_64 platforms

-------------------------------------------------------------------
Fri Aug 31 15:06:55 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-12+9
  * Fixes:
    + S6474858: CardChannel.transmit(CommandAPDU) throws unexpected
      ArrayIndexOutOfBoundsException
    + S8019927: [TESTBUG] nsk/jvmti/GetThreadInfo/thrinfo001
      intermittently fails with 'invalid thread group' when running
      with JFR
    + S8034084: nsk.nsk/jvmti/ThreadStart/threadstart003 Wrong
      number of thread end events
    + S8072498: Multi-thread JNI weak reference processing
    + S8167314: Enable the check to detect duplicate provides in in
      GenModuleInfoSource
    + S8176553: LdapContext follows referrals infinitely ignoring
      set limit
    + S8180193: Make marking bitmap code available to other GCs
    + S8186186: GSSContext.isEstablished() can return true on error
      state
    + S8186548: move jdk.testlibrary.JcmdBase closer to tests
    + S8201224: Make string buffer size dynamic in mlvmJvmtiUtils.c
    + S8201317: X25519/X448 code improvements
    + S8202342: [Graal] fromTonga/nsk/jvmti/unit/FollowReferences/
      /followref003/TestDescription.java fails with "Location
      mismatch" errors
    + S8202578: Revisit location for class unload events
    + S8203393: com/sun/jdi/JdbMethodExitTest.sh and JdbExprTest.sh
      fail due to timeout
    + S8204308: SA: serviceability/sa/TestInstanceKlassSize*.java
      fails when running in CDS mode
    + S8206457: Code paths from oop_iterate() must use barrier-free
      access
    + S8206467: Refactor G1ParallelCleaningTask into shared
    + S8206986: Compiler support for Switch Expressions (Preview)
    + S8207211: [TESTBUG] Remove excessive output from CDS/AppCDS
      tests
    + S8207317: SSLEngine negotiation fail exception behavior
      changed from fail-fast to fail-lazy
    + S8207405: Compiler Tree API support for Switch Expressions
      (Preview)
    + S8207838: AArch64: Float registers incorrectly restored in
      JNI call
    + S8208061: runtime/LoadClass/TestResize.java fails with "Load
      factor too high" when running in CDS mode.
    + S8208091: SA: jhsdb jstack --mixed throws
      UnmappedAddressException on i686
    + S8208172: SIGSEGV when owner of invokedynamic bootstrap
      method throws an exception - Symbol::increment_refcount()+0x0
    + S8208480: Test failure: assert(is_bound() || is_unused())
      after JDK-8206075 in C1
    + S8208498: Put archive regions into a first-class HeapRegionSet
    + S8208601: Introduce native oop barriers in C2 for OopHandle
    + S8208658: Make CDS archived heap regions usable even if
      compressed oop encoding has changed
    + S8208665: Amend cross-compilation docs with qemu-debootstrap
      recipe
    + S8208746: ISO 4217 Amendment #168 update
    + S8209061: Move G1 serviceability functionality to
      G1MonitoringSupport
    + S8209062: Clean up G1MonitoringSupport
    + S8209064: Make intellij support more robust after changes for
      2018.2
    + S8209129: Further improvements to cipher buffer management
    + S8209150: [TESTBUG] Add logging to verify JDK-8197901 to a
      different test
    + S8209171: Simplify Java implementation of
      Integer/Long.numberOfTrailingZeros()
    + S8209173: javac fails with completion exception while
      reporting an error
    + S8209420: Track membars for volatile accesses so they can be
      properly optimized
    + S8209494: Create a test for SwingSet InternalFrameDemo
    + S8209534: [TESTBUG]runtime/appcds/cacheObject/
      /ArchivedModuleCompareTest.java fails with EnableJVMCI.
    + S8209605: com/sun/jdi/BreakpointWithFullGC.java fails with ZGC
    + S8209611: use C++ compiler for hotspot tests
    + S8209615: ParseError in XMLEventReader on a valid input
    + S8209622: applications/kitchensink/Kitchensink.java failed
      with Kitchensink failed with exit code = 138
    + S8209637: [s390x] Interpreter doesn't call result handler
      after native calls
    + S8209639: assert failure in coalesce.cpp: attempted to spill
      a non-spillable item
    + S8209651: better TLS poll for x64 C2
    + S8209657: Refactor filemap.hpp to simplify integration with
      Serviceability Agent
    + S8209667: Explicit barriers for C1/LIR
    + S8209670: CompilerThread releasing code buffer in destructor
      is unsafe
    + S8209684: Intrinsics that assume some input non null should
      use GraphKit::must_be_not_null()
    + S8209686: cleanup arguments to PhaseIdealLoop() constructor
    + S8209691: Allow MemBar on single memory slice
    + S8209698: Remove "Pinned" from HeapRegionTraceType
    + S8209700: Remove HeapRegionSetBase::RegionSetKind for a more
      flexible approach
    + S8209735: Disable avx512 by default
    + S8209743: [TESTBUG] java/lang/management/MemoryMXBean/
      /LowMemoryTest2.sh fails with OutOfMemoryError running in CDS
      mode
    + S8209771: jdk.test.lib.Utils::runAndCheckException error
    + S8209775: ISO 4217 Amendment #169 update
    + S8209783: AArch64: Combine Multiply and Neg operations in C2
    + S8209789: Synchronize test/jdk/sanity/client/lib/jemmy with
      code-tools/jemmy/v2
    + S8209801: Rename C1_WRITE_ACCESS and C1_READ_ACCESS
      decorators to ACCESS_READ and ACCESS_WRITE
    + S8209806: API docs should be updated to refer to javase11
    + S8209821: Make JVMTI GetClassLoaderClasses not walk CLDG
    + S8209825: guarantee(false) failed: wrong number of expression
      stack elements during deopt
    + S8209826: Undefined reference to os::write after JDK-8209657
      (filemap.hpp cleanup)
    + S8209829: SpnegoUnknownMech.java does not contain the
      SpnegoUnknownMech class
    + S8209831: ZGC: Clean up
      ZRelocationSetSelectorGroup::semi_sort()
    + S8209833: C2 compilation fails with
      "assert(ex_map->jvms()->same_calls_as(_exceptions->jvms()))
      failed: all collected exceptions must come from the same
      place"
    + S8209837: Avoid initializing ExpiringCache during bootstrap
    + S8209839: [Backout] Backout JDK-8206467 Refactor
      G1ParallelCleaningTask into shared
    + S8209841: [REDO] Refactor G1ParallelCleaningTask into shared
    + S8209844: MemberNameLeak.java fails when ResolvedMethod entry
      is not removed
    + S8209850: Allow NamedThreads to use GlobalCounter critical
      sections
    + S8209851: Algorithm name is compared via reference identity
    + S8209852: Counters in StringCleaningTask should be type of
      size_t
    + S8209854: ProblemList MemberNameLeak
    + S8209873: Typo in javax.xml.validation.Validator.validate
      documentation
    + S8209883: ZGC: Compile without C1 broken
    + S8209894: ZGC: Cap number of GC workers based on heap size
    + S8209911: More blob types in hs_err printout
    + S8209915: Fix license headers
    + S8209920: runtime/logging/RedefineClasses.java fail with OOME
      with ZGC
    + S8209939: [testbug][ppc] Test SafepointPollingPages fails
      after 8208499 with UseSIGTRAP on.
    + S8209958: Clean up duplicate basic array type statics in
      Universe
    + S8209965: The "supported_groups" extension in ServerHellos
    + S8209976: Improve iteration over non-JavaThreads
    + S8209987: Minor cleanup in Level.java
    + S8209994: windows: Java_java_net_NetworkInterface_getAll
      misses releasing interface-list
    + S8209995: java.base does not need to export sun.security.ssl
      to java.security.jgss
    + S8209996: [PPC64] Fix JFR profiling
    + S8210008: custom extension for make/SourceRevision.gmk
    + S8210022: remove jdk.testlibrary.ProcessThread, TestThread
      and XRun
    + S8210035: Fix copyrights for files created for the
      HeapMonitor work
    + S8210040: TestOptionsWithRanges.java is very slow
    + S8210043: Invalid assert(HeapBaseMinAddress > 0) in
      ReservedHeapSpace::initialize_compressed_heap
    + S8210045: Allow using a subset of worker threads even when
      UseDynamicNumberOfGCThreads is not set
    + S8210088: ProblemList gc/epsilon/TestMemoryMXBeans.java
    + S8210108: sun/tools/jstatd test build failures after
      JDK-8210022

-------------------------------------------------------------------
Thu Aug 23 09:21:54 UTC 2018 - fstrba@suse.com

- Upgrade to upstream tag jdk-12+8
  * Fixes:
    + S8154343: Make SATB related code available to other GCs
    + S8164639: Configure PKCS11 tests to use user-supplied NSS
      libraries
    + S8194949: [Graal] gc/TestNUMAPageSize.java fail with OOM in
      -Xcomp
    + S8203614: Java API SSLEngine example code needs correction
    + S8203792: Remove "compatibility" features from Head.java
    + S8205687: TimeoutHandler generates huge core files
    + S8206176: Remove the temporary tls13VN field
    + S8206423: Use locking for cleaning ResolvedMethodTable
    + S8206965: java/util/TimeZone/Bug8149452.java failed on de_DE
      and ja_JP locale.
    + S8206992: Update Graal
    + S8207009: TLS 1.3 half-close and synchronization issues
    + S8207334: VM times out in VM_HandshakeAllThreads::doit() with
      RunThese30M
    + S8207746: C2: Lucene crashes on AVX512 instruction
    + S8207966: HttpClient response without content-length does not
      return body
    + S8208125: Cannot input text into JOptionPane Text Input Dialog
    + S8208269: Javadoc does not support module-info in a
      multi-release jar
    + S8208275: C2 crash in Node::add_req(Node*)
    + S8208350: Disable all DES cipher suites
    + S8208640: [a11y] [macos] Unable to navigate between
      Radiobuttons in Radio group using keyboard.
    + S8208675: Remove legacy sun.security.key.serial.interop
      property
    + S8208715: Conversion of milliseconds to nanoseconds in
      UNIXProcess contains bug
    + S8209301: JVM rename is_anonymous, host_klass to unsafe
      specific terminology ahead of Unsafe.defineAnonymousClass
      deprecation
    + S8209304: Deprecate serialVersionUID fields in interfaces
    + S8209342: Problemlist SA tests on Solaris due to Error
      attaching to process: Can't create thread_db agent!
    + S8209385: CDS runtime classpath checking is too strict when
      only classes from the system modules are archived
    + S8209389: SIGSEGV in WalkOopAndArchiveClosure::do_oop_work.
    + S8209451: Please change jdk 11 milestone to FCS
    + S8209452: VerifyCACerts.java failed with "At least one cacert
      test failed"
    + S8209456: [error-prone] ShortCircuitBoolean in java.logging
    + S8209506: Add Google Trust Services GlobalSign root
      certificates
    + S8209517: com/sun/jdi/BreakpointWithFullGC.java fails with
      timeout
    + S8209537: Two security tests failed after JDK-8164639 due to
      dependency was missed
    + S8209545: Simplify HeapShared::archive_module_graph_objects
    + S8209549: remove VMPropsExt from TEST.ROOT
    + S8209573: [TESTBUG] gc/epsilon/TestMemoryMXBeans should retry
      on failure
    + S8209576: java.nio.file.Files.writeString writes garbled
      UTF-16 instead of UTF-8
    + S8209586: AARCH64: SymbolTable changes throw assert on aarch64
    + S8209587: Update test/hotspot/jtreg/ProblemList-graal.txt
    + S8209588: SIGSEGV in MethodArityHistogram() with
      -XX:+CountCompiledCalls
    + S8209607: Remove stale comment for JNI mutexes
    + S8209608: Problem list com/sun/jdi/BreakpointWithFullGC.java
    + S8209624: [JVMCI] Invalidate nmethods instead of directly
      unloading them when the InstalledCode is dropped
    + S8209633: Avoid creating WeakEntry wrappers when looking up
      cached MethodType
    + S8209647: constantPoolHandle::constantPoolHandle(ConstantPool*)
      when precompiled header is disabled
    + S8209668: Explicit barriers for C1/assembler
    + S8209689: Compiler.isGraalEnabled should not check
      jvmci.Compiler property
    + S8209738: Remove ClassLoaderDataGraph::*oops_do functions
    + S8209740: typo in test/lib/jtreg/SkippedException.java
    + S8209758: 2 classes with same name G1PrintCollectionSetClosure
      cause crash when logging is enabled
    + S8209760: merge error: restore ea in make/conf/jib-profiles.js
    + S8209792: Remove ClassLoaderDataGraph::keep_alive_cld_do

-------------------------------------------------------------------
Tue Aug 21 14:41:49 UTC 2018 - fstrba@suse.com

- Added patch:
  * jaw-nogtk.patch
    + Don't build against gdk making the accessibility depend on a
      particular version of gtk.

-------------------------------------------------------------------
Mon Aug 20 06:21:49 UTC 2018 - fstrba@suse.com

- Upgrade to upstream tag jdk-12+7
  * Fixes:
    + S5075463: (enum) Serialized Form javadoc for java.lang.Enum
      is misleading
    + S8021322: [Fmt-Ch] Implementation of ChoiceFormat math
      methods should delegate to java.lang.Math methods
    + S8031761: [TESTBUG] Add a regression test for JDK-8026328
    + S8061467: Add UseLargePages to TestNUMAPageSize
    + S8069343: Improve gc/g1/TestHumongousCodeCacheRoots.java to
      use jtreg @requires
    + S8079682: [mlvm] remove SAM code in MHTransformationGen
    + S8151259: [TESTBUG] nsk/jvmti/RedefineClasses/redefclass030
      fails with "unexpected values of outer fields of the class"
      when running with -Xcomp
    + S8164683: Solaris: JVM abuses thread preemption control
    + S8169004: Fix redundant @requires tags in tests
    + S8171157: Convert ObjectMonitor_test to GTest
    + S8174691: [TESTBUG] A number of native hotspot unit tests
      fail when executed in stand-alone mode
    + S8176425: Add radix indication in NumberFormatException
      message for Integer.decode
    + S8185531: [TESTBUG] Improve test configuration for shared
      strings
    + S8186766: UnixNativeDispatcher::readlink() may truncate
      overlong paths
    + S8189667: Desktop#moveToTrash expects incorrect "<<ALL
      FILES>>" FilePermission
    + S8189922: UseNUMA memory interleaving vs membind
    + S8190886: package-info handling in
      RoundEnvironment.getElementsAnnotatedWith
    + S8191006: hsdis disassembler plugin does not compile with
      binutils 2.29+
    + S8193822: Remove unused newDirectByteBuffer and truncate
      methods from buffer classes
    + S8194230: jdk/internal/jrtfs/remote/RemoteRuntimeImageTest.java
      fails with java.lang.NullPointerException
    + S8194958: [Graal] disable compiler/c2/cr7200264 tests
    + S8195100: Use a low latency hashtable for SymbolTable
    + S8195156: [Graal] serviceability/jvmti/GetModulesInfo/
      /JvmtiGetAllModulesTest.java fails with Graal in Xcomp mode
    + S8199081: [Testbug] compiler/linkage/LinkageErrors.java fails
      if run twice
    + S8199155: Accessibility issues in jdk.jdi
    + S8199486: [Graal] gc/g1/ihop/TestIHOPStatic.java fails by
      timeout with -Xcomp
    + S8199868: Support JNI critical functions in object pinning API
    + S8200365: TestOptionsWithRanges.java of
      '-XX:TLABWasteTargetPercent=100' fails intermittently
    + S8201290: keytool importcert fails with
      CertificateParsingException if unknown certificate algorithms
      should be imported
    + S8201394: Update java.se module summary to reflect removal of
      java.se.ee module
    + S8202171: Some oopDesc functions compare this with NULL
    + S8202941: GenModuleInfoSource build tool does not detect
      missing semicolons
    + S8203230: update VerifyCACerts test
    + S8203504: [Graal]
      org.graalvm.compiler.debug.test.DebugContextTest fails with
      java.util.ServiceConfigurationError
    + S8203791: Remove "compatibility" features from Table.java
    + S8203820: [TESTBUG] vmTestbase/metaspace/staticReferences/
      /StaticReferences.java timed out
    + S8204196: integer cleanup
    + S8204931: Colors with alpha are painted incorrectly on Linux
    + S8204966: [TESTBUG] hotspot/test/compiler/whitebox/
      /IsMethodCompilableTest.java test fails with
      -XX:CompileThreshold=1
    + S8204969: Asserts in objArrayKlass.cpp need to use _raw
      variants of obj_addr_at()
    + S8204970: Remaing object comparisons need to use
      oopDesc::equals()
    + S8205078: [Graal]
      org.graalvm.compiler.core.test.VerifyDebugUsageTest fails with
      "Expected exception: VerificationError"
    + S8205399: Set node color on pinned HashMap.TreeNode deletion
    + S8205523: Explicit barriers for interpreter
    + S8205608: Fix 'frames()' in ThreadReferenceImpl.c to prevent
      quadratic runtime behavior
    + S8205633: TestOptionsWithRanges.java of
      '-XX:TLABSize=2147483648' fails intermittently
    + S8205921: Optimizing best-of-2 work stealing queue selection
    + S8205992: jhsdb cannot attach to Java processes running in
      Docker containers
    + S8206115: Use shared macros for JavaClasses::compute_offsets
      and MetaspaceShared::serialize_well_known_classes
    + S8206171: Signature#getParameters for RSASSA-PSS throws
      ProviderException when not initialized
    + S8206241: compiler/graalunit/PhasesCommonTest.java fails with
      java.lang.Error: TESTBUG: no tests found for prefix
      org.graalvm.compiler.phases.common.test
    + S8206258: [Test Error] sun/security/pkcs11 tests fail if NSS
      libs not found
    + S8206445: JImageListTest.java failed in Windows
    + S8206865: RMI activation tests fail with InvalidClassException
    + S8206886: Java does not set the default format locale
      correctly on mac10.13
    + S8206895: aarch64: rework error-prone cmp instuction
    + S8206955: MethodHandleProxies.asInterfaceInstance does not
      support default methods
    + S8206965: java/util/TimeZone/Bug8149452.java failed on de_DE
      and ja_JP locale.
    + S8207009: TLS 1.3 half-close and synchronization issues
    + S8207046: arm32 vm crash: C1 arm32 platform functions
      parameters type mismatch
    + S8207056: Epsilon GC to support object pinning
    + S8207069: [AOT] we should check that VM uses the same GC as
      one used for AOT library generation.
    + S8207139: NMT is not enabled on Windows 2016/10
    + S8207153: Some intrinsic tests take long time to run
    + S8207223: SSL Handshake failures are reported with more
      generic SSLException
    + S8207237: SSLSocket#setEnabledCipherSuites is accepting empty
      string
    + S8207243: Fix translation filtering to also support zh_HK and
      zh_TW
    + S8207244: java/nio/channels/Selector/SelectWithConsumer.java
      testInterruptDuringSelect() fails intermittently
    + S8207252: C1 still does eden allocations when TLAB is enabled
    + S8207263: Store the Configuration for system modules into CDS
      archive.
    + S8207320: Wrong type order for intersection lambdas with
      multiple abstract methods
    + S8207355: C1 compilation hangs in
      ComputeLinearScanOrder::compute_dominator
    + S8207364: nsk/jvmti/ResourceExhausted/resexhausted003 fails
      to start
    + S8207365: Make man pages optional
    + S8207383: [Graal] SelfChangedCDS.java fails with
      "guarantee(disp == (intptr_t)(jint)disp) failed: must be
      32-bit offset"
    + S8207392: [PPC64] Implement JFR profiling.
    + S8207584: ARM32: ShouldNotReachHere assertion on Test8168712
      jtreg test
    + S8207756: ZGC: jstat should show CGC STW phases
    + S8207765: HeapMonitorStatIntervalTest.java fails with ZGC
    + S8207765: HeapMonitorTest.java intermittent failure
    + S8207766: [testbug] Adapt tests for Aix.
    + S8207775: Better management of CipherCore buffers
    + S8207778: Add locking to ModuleEntry and PackageEntry tables
    + S8207779: Method::is_valid_method() compares 'this' with NULL
    + S8207830: [aix] disable jfr in build and tests
    + S8207832: serviceability/sa/ClhsdbCDSCore.java failed with
      "Couldn't find core file location"
    + S8207833: java/nio/channels/Selector/SelectWithConsumer.java
      testCancel() fails intermittently
    + S8207846: Generalize the jdk.net.includeInExceptions security
      property
    + S8207915: [AOT] jaotc w/ '--ignore-errors' should ignore
      illegal class files
    + S8207924: serviceability/sa/TestUniverse.java#id0
      intermittently fails with
      assert(get_instanceKlass()->is_loaded()) failed: must be at
      least loaded
    + S8207944: java.lang.ClassFormatError: Extra bytes at the end
      of class file test" possibly violation of JVMS 4.7.1
    + S8207948: JDK 11 L10n resource file update msg drop 10
    + S8207952: Problem-list 3 sctp tests
    + S8207959: The initial value of
      SETTINGS_MAX_CONCURRENT_STREAMS should have no limit
    + S8207960: Non-negative WINDOW_UPDATE increments may leave the
      stream window size negative
    + S8207965: C2-only debug build fails
    + S8208074: [TESTBUG] vmTestbase/nsk/jvmti/RedefineClasses/
      /StressRedefineWithoutBytecodeCorruption/TestDescription.java
      failed with NullPointerException
    + S8208075: Quarantine vmTestbase/nsk/jvmti/RedefineClasses/
      /StressRedefineWithoutBytecodeCorruption/TestDescription.java
    + S8208080: Locale extensions via Service provider is not
      working for region extensions
    + S8208084: Windows build failure - "'snprintf': identifier not
      found"
    + S8208092: ProblemList serviceability/sa/ClhsdbCDSCore.java
    + S8208096: Update build documentation to reflect compiler
      upgrades at Oracle
    + S8208111: Problem list
      java/nio/channels/Selector/RacyDeregister.java
    + S8208164: (str) improve specification of String::lines
    + S8208166: Still unable to use custom SSLEngine with default
      TrustManagerFactory after JDK-8207029
    + S8208183: update HSDIS plugin license to UPL
    + S8208189: ProblemList compiler/graalunit/JttThreadsTest.java
    + S8208200: Add missing periods to sentences in
      RoundEnvironment specs
    + S8208201: Update SourceVersion.RELEASE_11 docs to mention var
      for lambda param
    + S8208205: ProblemList tests that fail due to 'Error attaching
      to process: Can't create thread_db agent!'
    + S8208226: ProblemList com/sun/jdi/BasicJDWPConnectionTest.java
    + S8208227: tools/jdeps/DotFileTest.java fails on Win-X64
    + S8208242: Add @requires to vmTestbase/gc/g1 tests
    + S8208246: flags duplications in
      vmTestbase_vm_g1classunloading tests
    + S8208249: TriggerUnloadingByFillingMetaspace generates
      garbage class names
    + S8208251: serviceability/jvmti/HeapMonitor/MyPackage/
      /HeapMonitorGCCMSTest.java fails intermittently on Linux-X64
    + S8208279: Add 8 JNDI tests to com/sun/jndi/dns/EnvTests/
    + S8208297: Allow printing of taskqueue stats if compiled in in
      product builds
    + S8208303: Track JNI failures and fail tests
    + S8208305: ProblemList
      compiler/jvmci/compilerToVM/GetFlagValueTest.java
    + S8208347: ProblemList
      compiler/cpuflags/TestAESIntrinsicsOnSupportedConfig.java
    + S8208353: Upgrade JDK 11 to libpng 1.6.35
    + S8208358: update bug ids mentioned in tests
    + S8208362: (bf) Long chains created by direct Buffer::slice
    + S8208363: test/jdk/java/lang/Package/PackageFromManifest.java
      missing module dependencies declaration
    + S8208364: java/lang/reflect/callerCache/
      /ReflectionCallerCacheTest.java missing module dependencies
      declaration
    + S8208370: fix typo in ReservedStack tests' @requires
    + S8208391: Differentiate response and connect timeouts in HTTP
      Client API
    + S8208399: Metadata methods print_(value_)on_maybe_null()
      compare 'this' to NULL
    + S8208463: jdk.internal.vm.compiler's module-info.java.extra
      contains duplicated provides of the same service interface
    + S8208466: Fix potential memory leak in harfbuzz shaping.
    + S8208483: Add 5 JNDI tests to com/sun/jndi/dns/FactoryTests/
    + S8208484: color contrast issues in a couple of spec files
    + S8208496: New Test to verify concurrent behavior of TLS.
    + S8208499: NMT: Missing memory tag for Safepoint polling page
    + S8208521: ProblemList more tests that fail due to 'Error
      attaching to process: Can't create thread_db agent!'
    + S8208524: IntelliJ support broken since 2018.2
    + S8208541: non-ASCII characters in hsdis UPL text
    + S8208560: ChoiceFormat class has unused constants needs
      cleanup
    + S8208575: Remove Atomic::add/sub for short
    + S8208582: Introduce native oop barriers in C1 for OopHandle
    + S8208583: Better management of internal KeyStore buffers
    + S8208602: Cannot read PEM X.509 cert if there is whitespace
      after the header or footer
    + S8208604: Metadata::print_value_string() compares 'this' to
      NULL
    + S8208605: Fix for 8199868 breaks tier1 build
    + S8208611: Refactor SATBMarkQueue filtering to allow
      GC-specific filters
    + S8208623: [TESTBUG] runtime/LoadClass/LongBCP.java fails in
      AUFS file system
    + S8208634: Add x-IBM-1129 charset
    + S8208635: Minimal VM build is broken after JDK-8199868
      (Support JNI critical functions in object pinning API)
    + S8208647: switch jtreg to 4.2b13
    + S8208655: use JTreg skipped status in hotspot tests
    + S8208656: Move java/util/Calendar/CalendarTestScripts tests
      into OpenJDK
    + S8208663: JDK 11 L10n resource file update msg drop 20
    + S8208669: GC changes to allow enabling -Wreorder
    + S8208670: Compiler changes to allow enabling -Wreorder
    + S8208671: Runtime, JFR, Serviceability changes to allow
      enabling -Wreorder
    + S8208672: Enable -Wreorder in make files for gcc, clang
    + S8208676: Missing NULL check and resource leak in
      NetworkPerformanceInterface::NetworkPerformance::network_utilization
    + S8208677: Move inner metaspace cleaning out of class unloading
    + S8208691: Tighten up jdk.includeInExceptions security property
    + S8208699: remove unneeded imports from runtime tests
    + S8208701: Fix for JDK-8208655 causes test failures in CI tier1
    + S8208704: runtime/appcds/MultiReleaseJars.java timed out
      often in hs-tier7 testing
    + S8208705: [TESTBUG] The -Xlog:cds,cds+hashtables vm option is
      not always required for appcds tests
    + S8208706: compiler/tiered/ConstantGettersTransitionsTest.java
      fails to compile
    + S8208744: remove unneeded -DUSE_MMAP settings for JDK native
      libs builds
    + S8208782: Remove extra type in throws clause of
      SerialClob.writeObject
    + S8208998: Typo in ModueInfo.java, field for ModuleHashes
      should be moduleHashes
    + S8208999: Some use of Klass* should be replaced by
      InstanceKlass*
    + S8209003: Consolidate use of empty collections in
      java.lang.module
    + S8209011: [TESTBUG] AArch64:
      sun/security/pkcs11/Secmod/TestNssDbSqlite.java fails in
      aarch64 platforms
    + S8209018: ProblemList tests affected by JDK-8208690
    + S8209020: ProblemList tests affected by JDK-8208778
    + S8209023: fix 2 compiler tests to avoid JDK-8208690
    + S8209024: Use SuppressWarnings on serialVersionUID fields in
      interfaces
    + S8209029: ProblemList tests that fail due to 'Error attaching
      to process: Can't create thread_db agent!' in jdk-11+25
      testing
    + S8209047: "Illegal pattern character 'B'"
      IllegalArgumentException with Burmese locales
    + S8209109: [TEST] rewrite com/sun/jdi shell tests to java
      version - step1
    + S8209115: adjust libsplashscreen linux ppc64le builds for
      easier libpng update
    + S8209118: Abstract SATBMarkQueueSet's ThreadLocalData access
    + S8209120: Archive the Integer.IntegerCache
    + S8209125: ZGC: Clean up ZServiceabilityCounters
    + S8209126: ZGC: ZMarkStackAllocator::is_initialized() never
      called
    + S8209127: ZGC: Improve error message when failing to map
      memory for mark stacks
    + S8209149: [TESTBUG] runtime/RedefineTests/
      /RedefineRunningMethods.java needs a longer timeout
    + S8209164: [TESTBUG] Apply jtreg skipped status to cds tests
    + S8209186: Rename SimpleThresholdPolicy to
      TieredThresholdPolicy
    + S8209193: Fix aarch64-linux compilation after -Wreorder
      changes
    + S8209345: Merge SATBMarkQueueFilter into SATBMarkQueueSet
    + S8209346: Refactor SATBMarkQueue filter configuration
    + S8209347: SATBMarkQueue.cpp should not need jvm.h
    + S8209357: [PPC64] Fix build which was broken by 8208672
      (Enable -Wreorder)
    + S8209375: ZGC: Use dynamic base address for mark stack space
    + S8209376: ZGC: Move ZMarkStackAllocator into a separate file
    + S8209378: Fix Minimal VM after JDK-8208677
    + S8209380: ARM: cleanup maybe-uninitialized and reorder
      compiler warnings
    + S8209382: [error-prone] HashtableContains in
      sun/rmi/server/ActivationGroupImpl.java
    + S8209384: ProblemList stressHierarchy metaspace tests
    + S8209396: Make PtrQueueSets not statically allocated
    + S8209416: Refactoring GetPropertyAction calls in security libs
    + S8209418: Synchronize test/jdk/sanity/client/lib/jemmy with
      code-tools/jemmy/v2
    + S8209433: [s390] Fix build, broken by 8208672 (Enable
      -Wreorder)
    + S8209439: C2 library_call can potentially ignore Math.pow
      intrinsic or use null pointer
    + S8209447: vmTestbase/vm/mlvm/indy/func/jvmti/
      /mergeCP_none2indy_b/TestDescription.java timed out
    + S8209452: VerifyCACerts.java failed with "At least one cacert
      test failed"
    + S8209459: TestSHA512MultiBlockIntrinsics failed on AArch64
    + S8209511: C2 asserts with UseSSE < 4 and AVX enabled: "Label
      was never bound to a location, but it was used as a jmp target'
    + S8209518: symbol table gtest fails with semaphore error
    + S8209535: [JVMCI] Do not swallow NoClassDefFoundError when
      converting JVMCI methods and fields to reflection objects
    + S8209541: Fix merge problem in
      SymbolTable::do_check_concurrent_work

-------------------------------------------------------------------
Thu Jul 26 18:10:28 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-12+4 (Oracle July 2018 CPU)
  * Security fixes:
    + S8197925: Better stack walking (CVE-2018-2940, bsc#1101645)
    + S8199547: Exception to Pattern Syntax (CVE-2018-2952,
      bsc#1101651)
    + S8200332: Improve GCM counting (CVE-2018-2972, bsc#1101655)
    + S8200666: Improve LDAP support (CVE-2018-2973, bsc#1101656)
  * Security-In-Depth fixes:
    + S8191239: Improve desktop file usage
    + S8193419: Better Internet address support
  * Fixes:
    + S8181855: [Graal]
      runtime/ReservedStack/ReservedStackTest.java triggers:
      assert(thread->deopt_mark() == __null) failed: no stack
      overflow from deopt blob/uncommon trap
    + S8189747: JDK9 javax.lang.model.util.Elements#getTypeElement
      regressed 1000x in performance.
    + S8193214: Incorrect annotations.without.processors warnings
      with JDK 9
    + S8193462: Fix Filer handling of package-info initial elements
    + S8195991: [TEST_BUG]:Regression manual Test
      java/awt/TrayIcon/RightClickWhenBalloonDisplayed/
      /RightClickWhenBalloonDisplayed.html fails
    + S8196224: Even better Internet address support
    + S8197810: Test java/awt/Choice/SelectCurrentItemTest/
      /SelectCurrentItemTest.html fails on Windows
    + S8198882: Add 10 JNDI tests to
      com/sun/jndi/dns/AttributeTests/
    + S8202837: PBES2 AlgorithmId encoding error in PKCS12 KeyStore
    + S8203263: Remove unnecessary throws clauses from
      serialization-related methods
    + S8203382: Rename SystemDictionary::initialize_wk_klass to
      resolve_wk_klass
    + S8204695: [Graal] vmTestbase/nsk/jdi/ClassPrepareRequest/
      /addSourceNameFilter/addSourceNameFilter002/
      /addSourceNameFilter002.java fails
    + S8205390: jtreg: Fix failing TestRTMSpinLoopCount on PPC64
    + S8205491: adjust reflective access checks
    + S8205493: OptionSmokeTest.java uses hard-coded release values
    + S8205541: serviceability/jvmti/HeapMonitor/MyPackage/
      /HeapMonitorStatArrayCorrectnessTest.java fails with Should
      not have any events stored yet.
    + S8205578: jtreg: Fix failing TestRTMAbortRatio on PPC64
    + S8205580: PPC64: RTM: Don't retry lock on abort if abort was
      intentional
    + S8205581: PPC64: RTM: Fix abort on native calls
    + S8205582: PPC64: RTM: Fix counter for aborts on nested
      transactions
    + S8205652: serviceability/jvmti/HeapMonitor/MyPackage/
      /HeapMonitorStatRateTest.java fails
    + S8205725: Update the JVMTI Spec for Heap Sampling
    + S8206075: On x86, assert on unbound assembler Labels used as
      branch targets
    + S8206265: aarch64 jtreg: assert in TestOptionsWithRanges.jtr
    + S8206271: CodeHeap State Analytics must digest new method
      state
    + S8206343: There is a typo in the java documentation of
      javax.swing.JScrollBar.
    + S8206448: (fs) Extended attributes assumed to be enabled on
      ext3 (lnx)
    + S8206456: [TESTBUG] docker jtreg tests fail on systems
      without cpuset.effective_cpus / cpuset.effective_mem
    + S8206471: Race with ConcurrentHashTable deleting items on
      insert with cleanup thread
    + S8206874: Evaluate LoadClassFromJava6CreatedJarTest.java
      after dropping -source 6
    + S8206886: Java does not set the default format locale
      correctly on mac10.13
    + S8206929: Check session context for TLS 1.3 session resumption
    + S8206931: Misleading "COMPILE SKIPPED: invalid non-klass
      dependency" compile log
    + S8207032: Compilation succeeds without checking readability
      when --add-exports used
    + S8207190: JDK 11 javadoc generates bad code example
    + S8207202: [Graal] compiler/graalunit/CoreTest.java fails
    + S8207214: Broken links in JDK API serialized-form page
    + S8207233: Minor improvements of jdk C-coding
    + S8207237: SSLSocket#setEnabledCipherSuites is accepting empty
      string
    + S8207240: AARCH64: C2-only VM does not build
    + S8207250: setUseClientMode post handshake with the same value
      as before does not throw IAE
    + S8207261: [Graal] JDI and JDWP tests that consume all memory
      should be filtered out to not run with Graal
    + S8207262: enable applications/ctw/modules/java_desktop_2.java
      test again
    + S8207265: Bad HTML in {@link} in
      HttpResponse.BodySubscribers.ofPublisher
    + S8207314: Unnecessary reallocation when constructing
      WeakHashMap from a large Map
    + S8207316: java/nio/channels/spi/SelectorProvider/
      /inheritedChannel/InheritedChannelTest.java failed
    + S8207318: KeyStore#getInstance(File, LoadStoreParameter) does
      not load the keystore
    + S8207342: error occurred during error reporting (printing
      register info)
    + S8207345: AArch64: Trampoline generation code reads from
      unitialized memory
    + S8207359: Make SymbolTable increment_refcount disallow zero
    + S8207380: compiler/graalunit/JttLangMTest.java timeout
    + S8207395: jar has issues with UNC-path arguments for the jar
      -C parameter [windows]
    + S8207753: Handle to process snapshot is leaked if
      Process32First() fails
    + S8207761: Split compiler/graalunit/JttReflectFTest.java
    + S8207763: serviceability/jvmti/HeapMonitor/MyPackage/
      /HeapMonitorStatRateTest.java failed with Error. Parse
      Exception: Can't find source file:
      HeapMonitorStatIntervalTest.java
    + S8207765: HeapMonitorStatIntervalTest.java fails with ZGC
    + S8207816: Align declaration of SerializedLambda.readResolve
      with serialization conventions
    + S8207818: Problem list several rmi tests
    + S8207819: Problem list serviceability/jvmti/HeapMonitor/
      /MyPackage/HeapMonitorStatRateTest.java
    + S8207849: Allow the addition of more number to the Java
      version string
    + S8207855: Make applications/jcstress invoke tests in batches
    + S8207941: javax/swing/plaf/basic/BasicGraphicsUtils/8132119/
      /bug8132119.java fails on machines without Arial font [testbug]
    + S8207953: Remove dead code in G1CopyingKeepAliveClosure
    + S8208060: Additional corrections of serial-related
      declarations
    + S8208092: ProblemList serviceability/sa/ClhsdbCDSCore.java
    + S8208157: requires.VMProps throws NPE for missing properties
      in "release" file

-------------------------------------------------------------------
Fri Jul 20 06:55:32 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-12+3
  * Fixes:
    + S8028563: Remove javac support for 6/1.6 source and target
      values
    + S8139876: Exclude hanging nsk/stress/stack from execution
      with deoptimization enabled
    + S8173606: Deprecate constructors of 7-era visitors
    + S8178712: ResourceMark may be missing inside
      initialize_[vi]table
    + S8179098: Crypto AES/ECB encryption/decryption performance
      regression (introduced in jdk9b73)
    + S8185740: The help-doc.html generated by the doclet is
      outdated
    + S8187069: The case auto failed with the
      java.lang.ClassNotFoundException:
      IPv6NameserverPlatformParsingTest exception
    + S8189604: possible hang in
      sun.awt.shell.Win32ShellFolder2$KnownFolderDefinition::<clinit>
    + S8189717: Too much documentation of ProcessBuilder.start
      copied to ProcessBuilder.startPipeline
    + S8189747: JDK9 javax.lang.model.util.Elements#getTypeElement
      regressed 1000x in performance.
    + S8191948: db error: InvalidTypeException: Can't assign
      double[][][] to double[][][]
    + S8193126: Incorrect setting of MetaspaceSize and
      NewSizeThreadIncrease when using JVMCI compiler
    + S8193444: SimpleDateFormat throws
      ArrayIndexOutOfBoundsException when format contains long
      sequences of unicode characters
    + S8194680: StartElement#getAttributes and getNamespaces refer
      to incorrect package
    + S8194740: UseSubwordForMaxVector causes performance regression
    + S8198346: assert(!_cld->claimed()) failed in
      TestObjectDescription.java
    + S8198352: java.util.MissingResourceException:
      sun.security.util.AuthResources when trying to use
      com.sun.security.auth.module.UnixLoginModule
    + S8198405: JImageExtractTest.java & JImageListTest.java failed
      in Windows.
    + S8198720: Obsolete PrintSafepointStatistics,
      PrintSafepointStatisticsTimeout and
      PrintSafepointStatisticsCount options
    + S8198819: tools/jimage/JImageExtractTest.java, fails
      intermittently at testExtract (macos)
    + S8199645: javax/net/ssl/SSLSession/TestEnabledProtocols.java
      failed with Connection reset
    + S8199779: Add T-Systems, GlobalSign and Starfield services
      root certificates
    + S8200282: Serializing non-zero byte as zero to ByteBuffer
    + S8201513: nsk/jvmti/IterateThroughHeap/filter-* are broken
    + S8201611: Broken links in java.desktop javadoc
    + S8202123: C2 Crash in Node::in(unsigned int) const+0x14
    + S8202264: Race condition in AudioClip.loop()
    + S8202329: [AIX] Fix codepage mappings for IBM-943 and Big5
    + S8202353: os::readdir should use readdir instead of readdir_r
    + S8202481: RegisterDuringSelect.java fails with
      java.util.concurrent.ExecutionException:
      java.nio.channels.ClosedSelectorException
    + S8202561: clean up TEST.groups file
    + S8202769: jck test fails with C2: vm/jvmti/FollowReferences/
      /fref001/fref00113/fref00113.html
    + S8202794: Native Unix code should use readdir rather than
      readdir_r
    + S8202835: jfr/event/os/TestSystemProcess.java fails on
      missing events
    + S8203007: Address missing block coverage for ChaCha20 and
      Poly1305 algorithms
    + S8203230: update VerifyCACerts test
    + S8203943: eventThreadGroup was null in
      TestJavaBlockedEvent.java
    + S8204267: Generate comments in -XX:+PrintInterpreter to link
      to source code
    + S8204591: Expire/remove the UseAppCDS option in JDK 12
    + S8204603: Short week days, NaN value and timezone name are
      inconsistent between CLDR and Java in zh_CN, zh_TW locales.
    + S8204630: Generating an anonymous class with
      Filer#createClassFile causes an NPE in
      JavacProcessingEnvironment
    + S8204691: HeapRegion.apply_to_marked_objects_other_vm_test
      fails with assert(!hr->is_free() || hr->is_empty()) failed:
      Free region 0 is not empty for set Free list #
    + S8204860: The frame could be resized by dragging a corner of
      the frame with the mouse
    + S8205426: Humongous continues remembered set does not match
      humongous start region one after Remark
    + S8205454: &amp; is displayed in some Swing docs
    + S8205472: Deadlock in Kitchensink when trying to print
      compile queues causing timeout
    + S8205563: modules/AnnotationProcessing.java failed
      testGenerateSingleModule
    + S8205576: forkjoin/FJExceptionTableLeak.java fails
      "AssertionError: failed to satisfy condition"
    + S8205588: Deprecate for removal com.sun.awt.SecurityWarning
    + S8205610: [TESTLIB] Improve listing of open file descriptors
    + S8205611: Improve the wording of LinkageErrors to include
      module and class loader information
    + S8205643: HeapMonitorGCCMSTest fails with Graal
    + S8205646: Broken link in jdk.jsobject
    + S8205878: pthread_getcpuclockid is expected to return 0 code
    + S8205924: ZGC: Premature OOME due to failure to expand
      backing file
    + S8205928: [TESTBUG]
      jdk/internal/platform/docker/TestDockerMemoryMetrics
    + S8205966: [testbug] New Nestmates JDI test times out with
      Xcomp on sparc
    + S8205967: Remove sun/security/krb5/auto/UnboundSSL.java from
      ProblemList.txt
    + S8205973: Client jtreg ProblemList cleanup
    + S8205984: javax/net/ssl/compatibility/Compatibility.java
      failed to access port log file
    + S8205999: C2 compilation fails with
      "assert(store->find_edge(load) != -1) failed: missing
      precedence edge"
    + S8206001: Enable TLS1.3 by default in Http Client
    + S8206007: nsk/jdb/exclude001 test is taking a long time on
      some builds
    + S8206106: [solaris sparc] jck tests
      api/javax_print/PrintService failing
    + S8206122: Use Queue in place of ArrayList when need to remove
      first element
    + S8206135: Building jvm with AOT but without JVMCI should fail
      at configure time
    + S8206145: dbgsysSocketClose - do not restart close if errno
      is EINTR [linux]
    + S8206163: AArch64: incorrect code generation for StoreCM
    + S8206173: MallocSiteTable::initialize() doesn't take function
      descriptors into account
    + S8206183: Possible construct EMPTY_STACK and allocation
      stack, etc. on first use
    + S8206184: docs-reference build fails due to
      extlink.spec.version property not set
    + S8206189: sun/security/pkcs12/EmptyPassword.java fails with
      Sequence tag error
    + S8206238: Aspect ratio is not maintained when Image is scaled
      in JEditorPane
    + S8206243: java -XshowSettings fails if memory.limit_in_bytes
      overflows LONG.max
    + S8206254: Unable to complete emergency dump during safepoint
    + S8206255: fix compiler/intrinsics/sha/cli/
      /TestUseSHAOptionOnSupportedCPU.java jtreg test on linux s390x
    + S8206265: aarch64 jtreg: assert in TestOptionsWithRanges.jtr
    + S8206287: fix legal notice in hotspot tests
    + S8206316: ZGC: Preferred tmpfs mount point not found on Debian
    + S8206322: ZGC: Incorrect license header in gtests
    + S8206323: Missing some legal notices in docs bundle
    + S8206324: compiler/whitebox/DeoptimizeFramesTest.java to
      ProblemList-graal.txt
    + S8206355: SSLSessionImpl.getLocalPrincipal() throws NPE
    + S8206375: ProblemList update of bug ID for
      SwingFontMetricsTest
    + S8206378: Backout JDK-8202561
    + S8206394: missing ResourceMark in
      AOTCompiledMethod::metadata_do,
      AOTCompiledMethod::clear_inline_caches,
      CompiledMethod::clear_ic_stubs,
      CompiledMethod::cleanup_inline_caches_impl
    + S8206408: Add missing CPU/system info to vm_version_ext on
      PPC64
    + S8206428: Upgrade JDK11 to harfbuzz 1.8.2
    + S8206429: [REDO] 8202561 clean up TEST.groups
    + S8206433: Several jib profiles missing autoconf dependency
    + S8206436: sun/nio/cs/TestIBMBugs.java no longer compiles
    + S8206443: Update security libs manual test to cope with
      removal of javac -source/-target 6
    + S8206448: (fs) Extended attributes assumed to be enabled on
      ext3 (lnx)
    + S8206450: Add JImageListTest.java to ProblemList.txt
    + S8206459: [s390] Prevent restoring incorrect bcp and locals
      in interpreter and avoid incorrect size of
      partialSubtypeCheckNode in C2
    + S8206470: Incorrect use of os::lasterror in ClassListParser
    + S8206476: Wrong assert in phase_enum_2_phase_string() in
      referenceProcessorPhaseTimes.cpp
    + S8206863: A closed JarVerifier.VerifierStream should throw
      IOException
    + S8206873: 2 Null pointer dereference defect groups in
      LIRGenerator
    + S8206903: Unable to build Client VM with JVMCI
    + S8206915: XDH TCK issues
    + S8206919: s390: add missing info to vm_version_ext_s390
    + S8206951: [Graal]
      org.graalvm.compiler.hotspot.test.GraalOSRTest to
      ProblemList-graal.txt
    + S8206952: java/lang/Class/GetPackageBootLoaderChildLayer.java
      fails with Graal
    + S8206953: compiler/profiling/TestTypeProfiling.java fails
      when JVMCI build disabled
    + S8206954: Test runtime/Thread/ThreadPriorities.java crashes
      with SEGV in pthread_getcpuclockid
    + S8206960: HeapMonitor tests fail with Graal
    + S8206975: AArch64: Fix CompareAndSwapOp when useLSE is
      enabled in Graal
    + S8206977: Minor improvements of runtime code.
    + S8206980: ZonedDateTime could not parse timezone name with
      zh_CN locale correctly.
    + S8206998: [test] runtime/ElfDecoder/TestElfDirectRead.java
      requires longer timeout on ppc64
    + S8207001: *.obj.log files get truncated causing unreliable
      incremental builds on Windows
    + S8207005: Disable the file canonicalization cache by default
    + S8207006: serviceability/sa/TestUniverse.java#id0 crashes
      with EpsilonGC and AOT
    + S8207007: Add missing license header to zHash.inline.hpp
    + S8207011: Remove uses of the register storage class specifier
    + S8207016: Avoid redundant native memory allocation in
      getFinalPath()
    + S8207023: Add trace info to
      java/nio/channels/Selector/RegisterDuringSelect.java
    + S8207027: Lookup.accessClass fails for an array type in the
      same package when assertions are enabled
    + S8207029: Unable to use custom SSLEngine with default
      TrustManagerFactory after updating to JDK 11 b21
    + S8207044: minimal vm build fail: missing #include
    + S8207047: Multiple VM variants build fail
    + S8207049: Minor improvements of compiler code.
    + S8207055: Make javac -help output for -source and -target
      more informative
    + S8207056: Epsilon GC to support object pinning
    + S8207057: No debug info for assembler files
    + S8207060: Memory leak when malloc fails within
      WITH_UNICODE_STRING block
    + S8207065: Cleanup compiler tests for Client VM
    + S8207067: [test] prevent timeouts in
      serviceability/tmtools/jstat/{GcTest02,GcCauseTest02}.java
    + S8207068: Add Entrust root certificates
    + S8207145: (fs) Native memory leak in
      WindowsNativeDispatcher.LookupPrivilegeValue0
    + S8207152: Placeholder for Japanese new era should be two
      characters
    + S8207210: Problem list
      javax/sound/sampled/Clip/AutoCloseTimeCheck.java
    + S8207213: The help-doc.html generated by the doclet is
      incomplete
    + S8207217: Problem list
      java/lang/management/ThreadMXBean/AllThreadIds.java
    + S8207229: Trees.getScope crashes for broken lambda
    + S8207230: Trees.getScope runs Analyzers
    + S8207235:
      ManagementFactory.getPlatformMXBeans(BufferPoolMXBean.class)
      throws NPE
    + S8207248: Reduce incidence of
      compiler.warn.source.no.bootclasspath in javac tests
    + S8207321: Merge error with 8199779
    + S8207340: (fs) UnixNativeDispatcher close and readdir usages
      should be fixed
    + S8207393: ServiceLoader class description improvements
    + S8207748: Fix for 8202794 breaks tier1 builds
    + S8207750: Native handle leak in java.io.WinNTFileSystem.list()
    + S8207751: Remove misleading serialVersionUID from
      JulienFields.Field

-------------------------------------------------------------------
Sat Jul 14 18:20:47 UTC 2018 - fstrba@suse.com

- Merge standalone modules java.activation, java.xml.bind,
  java.xml.soap, java.xml.ws.annotation and java.xml.ws into the
  OpenJDK
- Added patches:
  * activation-module.patch
    + add module-info.java file for java.activation module
  * annotation-module.patch
    + add module-info.java file for java.xml.ws.annotation

-------------------------------------------------------------------
Thu Jul 12 17:01:06 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-12+2
  * Fixes:
    + S8194899: Remove unused sun.net classes
    + S8202035: Archive the set of ModuleDescriptor and
      ModuleReference objects for observable system modules with
      unnamed initial module.
    + S8202737: Obsolete AllowNonVirtualCalls option
    + S8203911: Test runtime/modules/getModuleJNI/GetModule fails
      with -Xcheck:jni
    + S8204834: Fix confusing "allocate" naming in OopStorage
    + S8205417: Obsolete UnlinkSymbolsALot debugging option
    + S8205548: Remove multi-release jar related vm code
    + S8205576: forkjoin/FJExceptionTableLeak.java fails
      "AssertionError: failed to satisfy condition"
    + S8205620: Miscellaneous changes imported from jsr166 CVS
      2018-07
    + S8205878: pthread_getcpuclockid is expected to return 0 code
    + S8205946: JVM crash after call to
      ClassLoader::setup_bootstrap_search_path()
    + S8205966: [testbug] New Nestmates JDI test times out with
      Xcomp on sparc
    + S8206123: ArrayDeque created with default constructor can
      only hold 15 elements
    + S8206164: forgot to "throw" TransformerConfigurationException
    + S8206272: Remove stray BarrierSetAssembler call
    + S8206318: Enhance package documentation for internal javadoc
      packages
    + S8206350: java/util/Locale/bcp47u/SystemPropertyTests.java
      failed on Mac 10.13 with zh_CN and zh_TW locales.
    + S8206389: JarEntry.setCreation/LastAccessTime without
      setLastModifiedTime causes Invalid CEN header
    + S8206407: Primitive atomic_cmpxchg_in_heap_at() in
      BarrierSet::Access needs to call non-oop raw method
    + S8206439: Remove javac -source/-target 6 from langtools
      regression tests
    + S8206440: Remove javac -source/-target 6 from jdk regression
      tests
    + S8206453: Taskqueue stats should count real steal attempts,
      not calls to GenericTaskQueueSet::steal
    + S8206471: Race with ConcurrentHashTable deleting items on
      insert with cleanup thread
    + S8206495: Redundant System.setProperty(null) tests
    + S8206931: Misleading "COMPILE SKIPPED: invalid non-klass
      dependency" compile log
    + S8206954: Test runtime/Thread/ThreadPriorities.java crashes
      with SEGV in pthread_getcpuclockid

-------------------------------------------------------------------
Thu Jul 12 07:05:57 UTC 2018 - guillaume.gardet@opensuse.org

- Switch armv6 to zero JVM variant (without JIT) since client and
  server JVM do not build for armv6 ATM

-------------------------------------------------------------------
Mon Jul  9 07:17:19 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-12+1
  * Fixes:
    + S8134538: Duplicate implementations of os::lasterror
    + S8149729: [jittester] Replace all 'path1 +"/" + path2' with
      Paths::get
    + S8177275: IllegalArgumentException when MH would have too
      many parameters is not specified for several methods
    + S8190835: Subtraction with two javax.xml.datatype.Duration
      gives incorrect result
    + S8193290: Add source 12 and target 12 to javac
    + S8193292: Add SourceVersion.RELEASE_12
    + S8195630: [Graal] vmTestbase/nsk/jvmti/AttachOnDemand/
      /attach024/TestDescription.java fails with Graal
    + S8195774: Add Entrust root certificates
    + S8201552: Ellipsis in "Classical" label in SwingSet2 demo
      with Windows L&F at Hidpi
    + S8202252: (aio) Closed AsynchronousSocketChannel keeps
      completion handler alive
    + S8202959: Rearrange the top and bottom navigation bar in the
      javadoc generated pages
    + S8203504: [Graal] org.graalvm.compiler.debug.test.DebugContextTest
      fails with java.util.ServiceConfigurationError
    + S8203848: Missing remembered set entry in j.l.ref.references
      after JDK-8203028
    + S8204310: Simpler RandomAccessFile.setLength() on Windows
    + S8204329: Java API doc for XMLStreamReader.next() needs to be
      clarified for the exception thrown when hasNext() method
      returns false
    + S8204355: [Graal] org.graalvm.compiler.debug.test.CSVUtilTest
      fails on Windows due to improper line separator used
    + S8204517: [Graal] org.graalvm.compiler.debug.test.VersionsTest
      fails with InvalidPathException on windows
    + S8205207: Port Graal unit tests under jtreg
    + S8205418: Assorted improvements to source code model
    + S8205499: C1 temporary code buffers are not removed with
      -XX:+UseDynamicNumberOfCompilerThreads
    + S8205515: assert(opcode == Op_RangeCheck) failed: no other if
      variant here
    + S8205534: Remove SymbolTable dependency from serviceability
      agent
    + S8205615: Start of release updates for JDK 12
    + S8205619: Bump maximum recognized class file version to 56
      for JDK 12
    + S8205621: Increment JDK version for JDK 12
    + S8205653: test/jdk/sun/management/jmxremote/bootstrap/
      /RmiRegistrySslTest.java and RmiSslBootstrapTest.sh fail with
      handshake_failure
    + S8205720: KeyFactory#getKeySpec and translateKey thorws
      NullPointerException with Invalid key
    + S8205927: Update src/java.base/share/legal/public_suffix.md
      to match the actual file version
    + S8205940: LoadNode::find_previous_arraycopy fails with
      "broken allocation" assert
    + S8205965: SIGSEGV on write to NativeCallStack::EMPTY_STACK
    + S8205999: C2 compilation fails with
      "assert(store->find_edge(load) != -1) failed: missing
      precedence edge"
    + S8206003: SafepointSynchronize with TLH: StoreStore barriers
      should be moved out of the loop
    + S8206006: Build failed on Windows
    + S8206022: Add test to check that the JVM accepts class files
      with version 56
    + S8206083: Make tools/javac/api/T6265137.java robust to JDK
      version changes
    + S8206085: Refactor langtools/tools/javac/versions/Versions.java
    + S8206086: [Graal] JDI tests fail with
      com.sun.jdi.ObjectCollectedException
    + S8206087: windows-x64-cmp-baseline fails with The files do
      not have the same suffix type
    + S8206088: 8205207 broke builds
    + S8206093: compiler/graalunit/HotspotTest.java fails in
      CheckGraalIntrinsics
    + S8206114: Refactor
      langtools/tools/javac/classfiles/ClassVersionChecker.java
    + S8206117: failed to get JDK properties for JVM w/o JVMCI
    + S8206120: Add test cases for lenient Japanese era parsing
    + S8206309: Tier1 SA tests fail
- Removed patch:
  * java-12-version.patch
    + Not needed any more

-------------------------------------------------------------------
Fri Jun 29 06:07:47 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-12+0, first branch tag for openjdk 12
  * Fixes:
    + S4475138: getBestCursorSize and XFree86 4.1.0
    + S7007966: Add Brainpool ECC support (RFC 5639)
    + S8003209: JFR events for network utilization
    + S8010319: Implementation of JEP 181: Nest-Based Access Control
    + S8060192: Add default method <A> A[]
      Collection.toArray(IntFunction<A[]> generator)
    + S8066709: Make some JDK system properties read only
    + S8137164: Include PID in the JFR jcmd hint
    + S8144992: Remove OopIterateClosure::idempotent
    + S8153732: Windows remote printer changes do not reflect in
      lookupPrintServices()
    + S8155192: [TESTBUG] SHA tests assumes that x86 does not have
      SHA intrinsics
    + S8160673: Jittester: investigate bytecode generation hangs
      during bytecode tests generation
    + S8169559: Add class loader names to relevant VM messages
    + S8172854: [TESTBUG] Exclude
      runtime/ReservedStack/ReservedStackTest.java from being run
      with DeoptimizeALot option
    + S8185927: create regression test for 8062950
    + S8187100: Support Unicode Variation Selectors
    + S8187218: GSSCredential.getRemainingLifetime() returns
      negative value for TTL > 24 days.
    + S8187288: bad (no) wrapping for modifier and type column
    + S8189103: AARCH64: optimize String indexOf intrinsic
    + S8189105: AARCH64: create intrinsic for sin and cos
    + S8189112: AARCH64: optimize StringUTF16 compress intrinsic
    + S8189113: AARCH64: StringLatin1 inflate intrinsic doesn't use
      prefetch instruction
    + S8189429: SA: MacOSX: Replace the deprecated PT_ATTACH with
      PT_ATTACHEXC
    + S8190876: javadoc search on "java.se" shows "java.se" the
      last one among other modules
    + S8192953: sun/management/jmxremote/bootstrap/*.sh tests fail
      with error : revokeall.exe: Permission denied
    + S8194152: sun/security/tools/jarsigner/AltProvider.java
      failed on de-DE locale
    + S8194873: right ALT key hotkeys no longer work in Swing
      components
    + S8194937: Inconsistent behavior of --validate-modules when
      combined with -m and other options
    + S8195077: [Testbug] tools/javac/processing/model/
      /completionfailure/NoAbortForBadClassFile.java -
      AccessDeniedException
    + S8195607: sun/security/pkcs11/Secmod/TestNssDbSqlite.java
      failed with "NSS initialization failed" on NSS 3.34.1
    + S8195650: Method references to VarHandle accessors
    + S8195986: Incorrect javac -h output with annotation
      processing and missing classes
    + S8196213:
      sun/security/tools/jarsigner/warnings/NoTimestampTest.java
      test fails on ar_SA locale.
    + S8196402: AARCH64: create intrinsic for Math.log
    + S8196425: tools/javac/modules/AnnotationProcessing.java failed
    + S8196584: TLS 1.3 Implementation
    + S8197425: Liveset information for Old Object sample event
    + S8197532: Re-examine policy for the default set of modules
      when compiling or running code on the class path
    + S8198372: API to create a SelectableChannel to a
      FileDescriptor
    + S8198909: [Graal]
      compiler/codecache/stress/UnexpectedDeoptimizationTest.java
      crashed with SIGSEGV
    + S8199124: (fs) Reduce allocation for file system methods that
      are invoked with no open options
    + S8199265: java/util/Arrays/TimSortStackSize2.java fails with
      OOM
    + S8199580: [TESTBUG] Un-quarantine
      vm/mlvm/indy/func/jdi/breakpointOtherStratum and breakpoint
    + S8199940: Print more information about class loaders in
      IllegalAccessErrors.
    + S8200243: System error message is decoded as invalid encoding
      in Windows.
    + S8200720: Print additional information in thread dump (times,
      allocated bytes etc.)
    + S8201610: Broken link on the page
      api/java.rmi/java/rmi/server/UnicastRemoteObject.html
    + S8201815: Use Mozilla Public Suffix List
    + S8202292:
      java/io/FileOutputStream/UnreferencedFOSClosesFd.java fails
      with "raw fd count wrong"
    + S8202299: Java Keystore fails to load PKCS12/PFX certificates
      created in WindowsServer2016
    + S8202326: AARCH64: optimize string compare intrinsic
    + S8202331: Obsolete support for commercial features
    + S8202422: value of 'sizeCtl' in ConcurrentHashMap varies with
      the constructor called
    + S8202554: Remove hotspot tests for javafx.* modules
    + S8202608: CommonSeeder test needs a white-box testing
      mechanism to replace the default entropy source
    + S8202615: Remove NativeMonitorSpinLimit, NativeMonitorFlags
      and NativeMonitorTimeout experimental flags
    + S8202696: Remove exclusion range for phonetic chars in
      windows fontconfig.properties
    + S8202698: Update Graal for JEP 181 - Nest-based access control
    + S8202788: Explicitly reclaim cached thread-local direct
      buffers at thread exit
    + S8202922: Method reference identity is broken by serialization
    + S8203003: Several FileDialog Modality Tests fail on Linux due
      to X errors
    + S8203184: List.copyOf() fails to copy sublists
    + S8203188: Add JEP-181 support to the Zero interpreter
    + S8203228: Branch-free output conversion for X25519 and X448
    + S8203299: StringPoolBuffer access covered by exclusive access
      invariant, remove (problematic) cas operations
    + S8203481: Incorrect constraint for unextended_sp in
      frame:safe_for_sender
    + S8203664: JFR start failure after AppCDS archive created with
      JFR StartFlightRecording
    + S8203670: unmodifiable List iterator() implementations should
      not be ListIterators
    + S8203681: Miscellaneous changes imported from jsr166 CVS
      2018-06
    + S8203814: javac --release=8 \"cannot find symbol\" for
      NashornException.getEcmaError()
    + S8203864: Execution error in Java's Timsort
    + S8203929: Limit amount of data for JFR.dump
    + S8204082: Make names of Young GCs more uniform in logs
    + S8204157: Compiler.sunflow hangs after JDK-8192992
    + S8204209: [Graal] Compilation fails during nmethod printing
      with "assert(bci == 0 || 0 <= bci && bci < code_size())
      failed: illegal bci"
    + S8204233: Add configurable option for enhanced socket
      IOException messages
    + S8204289: AARCH64: enable math intrinsics usage in
      interpreter and C1
    + S8204331: AArch64: fix CAS not embedded in normal graph error
    + S8204492: Add deprecation annotation to Nashorn APIs and
      warning to nashorn, jjs
    + S8204524: Unnecessary memory barriers in
      G1ParScanThreadState::copy_to_survivor_space
    + S8204540: Automatic oop closure devirtualization
    + S8204661: Show error 'Port already in use' in
      HashedPasswordFileTest.java
    + S8204930: Reader:nullReader() spec does not match the behavior
    + S8204946: Clean-up problem list for JDK-8202933 and
      JDK-8202934
    + S8204967: Resolve disabled warnings for libunpack
    + S8205004: AArch64: fix failures in jtreg ArraysEqCmpTest
    + S8205053: Decouple type registration from framework lifecycle
    + S8205058: (fs) Files read/writeString should throw
      CharacterCodingException instead of IOException with an
      IllegalArgumentException as cause
    + S8205107: assert(c->Opcode() == Op_SafePoint) failed: broken
      outer loop
    + S8205111: Develop new Test to verify different key types for
      supported TLS protocols.
    + S8205113: Update JVMTI doc references to object allocation
      tracking
    + S8205119: SwingApplet demo should be removed
    + S8205136: Move StylePad demo to the open repository
    + S8205144: JSpinner may change the font after became visible
    + S8205153: Delete "standard instructions" machinery in the
      open automated tests
    + S8205158: Update the .md files for 3rd party software Unicode
      10.0, ICU 60.2, and CLDR v33.
    + S8205160: jQuery UI, jQuery-migrate, and jQuery license file
      to be updated to the revision present.
    + S8205175: Deprecate UnlinkSymbolsALot debugging option.
    + S8205184: Delegating Iterator implementations that don't
      delegate forEachRemaining()
    + S8205194: Improve the Array Comparison when there is mismatch
      at first element.
    + S8205195: NestedThreadsListHandleInErrorHandlingTest fails
      because hs_err doesn't contain _nested_thread_list_max
    + S8205197: Never default to using libc++ on Linux
    + S8205199: more Linux clang compile failures
    + S8205324: Part of java.awt.Desktop.browse(URI) spec is
      outdated after support of applets was removed
    + S8205342: windows : potential memleaks in getAdapter(s) in
      NetworkInterface_winXP.c
    + S8205397: InetAddress has wrong declaration for
      readObjectNoData
    + S8205398: AES-CBC decryption algorithm using AVX512
      instructions
    + S8205400: [Graal]
      compiler/jvmci/compilerToVM/DisassembleCodeBlobTest.java fails
      with can't be enqueued for compilation on level 4
    + S8205405: ZGC: Decouple JFR type registration
    + S8205416: windows: fix checking of CloseHandle return code in
      Java_java_io_FileCleanable_cleanupClose0
    + S8205419: [testbug] TestJmapCore failing without SA:
      introduce @requires vm.hasSAandCanAttach
    + S8205422: assert(false) failed: Bad verification_type_info
    + S8205424: Change to Xcode 9.4 for building on Macosx at Oracle
    + S8205438: Re-enable shebang tests in
      test/jdk/tools/launchers/SourceMode.java
    + S8205441: Upgrade to harfbuzz 1.8.1
    + S8205442: Avoid hard-coding --source value in
      SourceLauncherTest.java
    + S8205445: Add RSASSA-PSS Signature support to SunMSCAPI
    + S8205455: jdeprscan issues annotation processor warning
      regarding RELEASE_10
    + S8205456: Unification of iterations over arrays
    + S8205459: Rename Access API flag decorators
    + S8205474: AARCH64: wrong zr encoding for ccmp instruction
    + S8205475: AARCH64: optimize FPU loads and stores in
      C1_Runtime1_aarch64.cpp
    + S8205490: update ProblemList-graal
    + S8205494: Convert or remove all AWT applet demos
    + S8205498: Typo in fix for 8205119 breaks Solaris demo build
    + S8205508: hotspot/jtreg/vmTestbase/nsk/jdb/exclude/exclude001/
      /exclude001.java fails with Prompt is not received during
      300200 milliseconds.
    + S8205509: assert(_name_and_id != 0LL) failed: encountered a
      class loader null name and id
    + S8205528: Base64 encoding algorithm using AVX512 instructions
    + S8205531: jcmd VM.classloaders should fold similar loaders
    + S8205533: Class.getPackage() fails with InternalError if
      class is defined to the bootstrap class loader but module is
      not in the boot layer
    + S8205540: test/hotspot/jtreg/vmTestbase/nsk/jdb/trace/
      /trace001/trace001.java fails with Debuggee did not exit after
      15 <cont> commands
    + S8205547: FileChannel/CleanerTest.java fails due to expected
      FD count
    + S8205559: Remove IN_CONCURRENT_ROOT Access decorator
    + S8205570: fix a number of typos in the JVMTI spec
    + S8205577: parallel/TestPrintGCDetailsVerbose.java fails
      assertion
    + S8205583: Crash in ConcurrentHashTable
      do_bulk_delete_locked_for
    + S8205605: [testbug][aix] Various test adaption to aix
      pecularities.
    + S8205607: Use oop_iterate instead of oop_iterate_no_header
    + S8205609: [PPC64] Fix PPC64 part of 8010319 and TLH without
      UseSIGTRAP on AIX
    + S8205612: (fc) Files.readAllBytes fails with
      ClosedByInterruptException when interrupt status set
    + S8205614: NestMates tests failing in CI jdk11-jdk.931
    + S8205616: Build fails with system headers after 8204572
    + S8205623: Replace use of Class::getPackage with
      Class::getPackageName
    + S8205625: linux-aarch64-cmp-baseline fails builds-tier5
    + S8205627: Replace hardcoded spec version value in
      build.tools.ExtLink taglet
    + S8205632: Include stack.inline.hpp in markSweep.inline.hpp
    + S8205641: Make java/nio/channels/Selector/RacyDeregister.java
      noisier and flush after prints
    + S8205648: fix for 8205195 breaks secondary error handling
    + S8205649: Make clang stack flags independent of OS
    + S8205663: ZGC: Log metaspace used/capacity/committed/reserved
    + S8205664: Move detailed metaspace logging from debug to trace
    + S8205671: Remove HTTP Client tests erroneously problem listed
      by the TLS 1.3 integration
    + S8205673: Problem list RmiRegistrySslTest.java and
      RmiSslBootstrapTest.sh
    + S8205676: ZGC: Remove TLAB allocations in relocation path
    + S8205678: ZGC: Remove unused ZAllocationFlags::java_thread()
    + S8205679: Remove unused
      ThreadLocalAllocBuffer::undo_allocate()
    + S8205681: [TEST_BUG] vmTestbase/nsk/jvmti/Allocate/alloc001/
      /TestDescription.java fails with exit code 98
    + S8205683: Refactor heap allocation to separate concerns
    + S8205694: AArch64: Add test to validate volatile load, store
      and CAS code generation
    + S8205696: Undo licence.md
    + S8205699: assert(_owner_offset != 0) failed in javaClasses.cpp
    + S8205701: Problem list serviceability/jvmti/HeapMonitor/
      /MyPackage/HeapMonitorGCCMSTest.java
    + S8205702: assert(UseCompressedClassPointers) failed in
      universe.hpp
    + S8205703: [JVMCI] Expose all GC selection flags
    + S8205719: Windows
      Java_sun_tools_attach_VirtualMachineImpl_enqueue() method
      should include exitCode in exception message
    + S8205721: Problem list serviceability/jvmti/HeapMonitor/
      /MyPackage/HeapMonitorStatArrayCorrectnessTest.java
    + S8205723: Problem list serviceability/jvmti/HeapMonitor/
      /MyPackage/HeapMonitorStatRateTest.java
    + S8205824: Update Graal
    + S8205906: jdk.jfr.jcmd.TestJcmdDumpLimited fails due to
      erronous processing of -XX:FlightRecorderOptions
    + S8205913: Inconsistent source code model
    + S8205916: [test] Fix jdk/tools/launcher/RunpathTest to handle
      both, RPATH and RUNPATH
    + S8205923: ZGC: Verification applies load barrier before
      verification
    + S8205923: ZGC: Verification applies load barriers before
      verification
    + S8205925: Print correct and more information about secondary
      errors
    + S8205926: Support invokeSpecialIFC in GenerateJLIClassesPlugin
    + S8205942: Build failure on macosx after JDK-8189429
    + S8205945: Revert unintended changes to
      make/gensrc/Gensrc-jdk.hotspot.agent.gmk
    + S8205954: clean up hotspot ProblemList
    + S8205956: Fix usage of "OpenJDK" in build and test
      instructions
    + S8205959: Do not restart close if errno is EINTR
    + S8205985: Remove
      tools/javac/options/release/ReleaseOptionUnsupported.java from
      problem list
    + S8205993: ZGC: Fix typos and incorrect indentations
    + S8205996: JDK-8205906 broke the build on Mac
    + S8206004: [BACKOUT] errant changeset for JDK-8137164
- Added patch:
  * java-12-version.patch
    + Upstream commit to change different versions that did not
      make it into the tag
- Removed patch:
  * generated-headers.patch
    + Integrated upstream
- Modified patch:
  * alternative-tzdb_dat.patch
    + Modify to upstream changes in the context

-------------------------------------------------------------------
Fri Jun 22 05:46:26 UTC 2018 - fstrba@suse.com

- Added patch:
  * missing-return.patch
    + fix no-return-in-nonvoid-function

-------------------------------------------------------------------
Thu Jun 21 09:48:25 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+19
  * Fixes:
    + S6545967: sp05t003 failed ResumeThread() due to
      THREAD_NOT_SUSPENDED
    + S6608234: SwingWorker.get throws CancellationException
    + S7183985: (ann) Class.getAnnotation() throws an
      ArrayStoreException when the annotation class not present
    + S8029250: [macosx] There is no tray icon shown in the system
      tray area when case starts
    + S8042131: DateTimeFormatterBuilder Mapped-values do not work
      for JapaneseDate
    + S8043575: Dynamically parallelize reference processing work
    + S8149565: -locale option issues
    + S8153107: enabling ObjectSynchronizer::quick_enter() on ARM64
      causes hangs
    + S8170159: Improve the performance of BitSet traversal
    + S8177334: Update xmldsig implementation to Apache Santuario
      2.1.1
    + S8178150: Regression in logic for handling inference stuck
      constraints
    + S8184349: There should be some verification that EnableJVMCI
      is disabled if a GC not supporting JVMCI is selected
    + S8191512: T2K font rasterizer code removal
    + S8193302: Javac AssertionError: typeSig ERROR on usage of
      @Generated
    + S8194308: jdeprscan will need updates to deal with the
      removal of the Java EE modules
    + S8195115: G1 Old Gen MemoryPool CollectionUsage.used values
      don't reflect mixed GC results
    + S8195293: Issue more comprehensive warnings for use of
      \"var\" in earlier source versions
    + S8196618: Create API to list supported values for javac
      --release option
    + S8196988: Resolve disabled warnings for libjimage
    + S8198669: Refactor annotation array value parsing to reduce
      duplication
    + S8198719: MethodHandleHelper.linkToStatic should drop MH arg
    + S8199433: (se) select(Consumer<SelectionKey> action) as
      alternative to selected-key set
    + S8199435: Unsafe publication of java.util.Properties.map
    + S8199441: Wrong caret position in multiline text components
      on Windows with a screen resolution higher than 100%
    + S8199871: Deprecate pack200 and unpack200 tools
    + S8200115: System property java.vm.vendor value includes
      quotation marks
    + S8200121: Remove unused qualified exports in java.base
    + S8200353: Shift or Capslock not working in Textfield after
      accented keystrokes
    + S8200605: Create test for GridBagLayoutDemo
    + S8200867: Remove references to "jdk 9" in build system
    + S8201276: (fs) Add methods to Files for reading/writing a
      string from/to a file
    + S8202199: Provide public, unsupported JDK API for
      JavaFX/Swing interop
    + S8202216: Add Buffer mismatch methods
    + S8202537: CLDR33
    + S8202559: Tests which start VM using JNI start failing after
      compile upgrade to VC 2017
    + S8202605: Standardize on ClassLoaderData::loader_name()
      throughout the VM to obtain a class loader's name
    + S8202624: javadoc generates references to enum constructors,
      which are not documented
    + S8202740: runtime/8176717/TestInheritFD.java fails with
      java.lang.RuntimeException: could not match:
      VM RESULT => RETAINS FD
    + S8202768: [macos] Appkit thread slows when any Window Manager
      active
    + S8202845: Refactor reference processing for improved
      parallelism
    + S8202948: C2: assert(init_offset >= 0) failed: positive
      offset from object start
    + S8203030: Zero s390 31 bit size_t type conflicts in shared
      code
    + S8203157: Object equals abstraction for BarrierSetAssembler
    + S8203197: C2: consider all paths in loop body for loop
      predication
    + S8203301: Linux-sparc fails to build after JDK-8199712
      (Flight Recorder)
    + S8203338: Unboxing in return from lambda miscompiled to throw
      ClassCastException
    + S8203343: VM.{metaspace|classloaders|classhierarchy...} jcmd
      should show invocation targets for
      Generated{Method|Constructor}AccessorImpl classes
    + S8203344: Make C1 leal patchable on SPARC
    + S8203357: Container Metrics
    + S8203394: Implementation of JEP 331: Low-Overhead Heap
      Profiling
    + S8203479: JFR enabled ARM32 build assertion failure
    + S8203491: [TESTBUG] Port heapdump tests into java
    + S8203641: Refactor String Deduplication into shared
    + S8203667: Platform specific include files in jdk image in
      wrong sub directory
    + S8203680: os::stat() on Posix platform does not need to copy
      input path
    + S8203691: Test /runtime/containers/cgroup/PlainRead.java fails
    + S8203809: [Graal] JDI tests fail with:
      JDITestRuntimeException : ** event IS NOT a breakpoint **
    + S8203813: javac accepts an illegal name as a receiver
      parameter name
    + S8203838: javac performance regression in 11+11
    + S8203915: Induction variable of over-unrolled loop conflicts
      with range checks
    + S8204152: SignedObject throws NullPointerException for null
      keys with an initialized Signature object
    + S8204166: TLH: Semaphore may not be destroy until signal have
      returned.
    + S8204169: Humongous continues region remembered set states do
      not match the one from the corresponding humongous start
      region
    + S8204172: Predicate::not should explicitly mention
      "NullPointerException - if target is null"
    + S8204231: Update Graal
    + S8204236: JFR unit test of thread CPU load should be enabled
    + S8204240: Extend MDO to allow more reasons to be recorded per
      bci
    + S8204268: Improve some IncompatibleClassChangeError messages.
    + S8204330: Javadoc IllegalArgumentException: HTML special
      chars in constant value
    + S8204342: methods in java.time s TCKZoneRules OpenJDK test
      miss Test annotation
    + S8204353: AARCH64: optimize FPU load and stores in
      macroAssembler
    + S8204454: Remove of sun.applet.AppletAudioClip
    + S8204473: AARCH64: register post-index addressing mode is not
      supported directly
    + S8204509: Fix compilation error in harfbuzz 1.7.6 for Solaris
      Developer Studio 12.6
    + S8204531: Remove unused chars following '\0'
    + S8204538: Split ScanClosure and ScanClosureWithParBarrier
    + S8204571: Add support for launching multiple startup
      recordings
    + S8204613: StringTable: Calculates wrong number of uncleaned
      items.
    + S8204620: ModuleEntry::is_non_jdk_module() determination for
      what is a jdk module is incorrect
    + S8204654: [testbug] Fix pattern matching in jstat tests.
    + S8204663: clean up remaining native parts after JDK-8187631
    + S8204664: PrepareFailureLogs should be done after sequential
      make targets
    + S8204666: javadoc should be updated to use jQuery 3.3.1
    + S8204668: Cleanup management of the java.vm.info System
      property
    + S8204679: HTTP Client refresh
    + S8204685: Abstraction for TLAB dummy object
    + S8204701: [TESTBUG] runtime/SharedArchiveFile/
      /BootAppendTests.java should handle mapping failure
    + S8204857: ConcurrentHashTable: Fix parallel processing
    + S8204859: [macosx] Remove javax/swing/plaf/nimbus/8057791/
      /bug8057791.java from the ProblemList.txt
    + S8204915: (fs) Add some print diagnostics to
      java/nio/file/Files/CopyAndMove.java
    + S8204922: Create bootcycle jib profiles
    + S8204923: Restore Symantec root verisignclass2g2ca
    + S8204927: ZGC: assert(phase->idom(head) ==
      head->in(LoopNode::EntryControl)) failed
    + S8204929: Fonts with embedded bitmaps are not always rotated
    + S8204935: [aix] TOC overflow in libjvm.so (release build)
    + S8204939: Change Access nomenclature: root to native
    + S8204941: Refactor TemplateTable::_new to use MacroAssembler
      helpers for tlab and eden
    + S8204943: Improve message of ArrayStoreException.
    + S8204944: Remove java/util/Map/InPlaceOpsCollisions.java from
      ProblemList
    + S8204957: Remove TestBiasedLockRevocationEvents from
      ProblemList.txt
    + S8204958: Minor cleanups for the diagnostic framework
    + S8204961: JVMTI jtreg tests build warnings on 32-bit platforms
    + S8204965: Fix '--disable-cds' and disable CDS on AIX by
      default
    + S8204973: Add build support for filtering translations
    + S8204978: [Graal] Disable Epsilon GC tests from running with
      Graal
    + S8205003: Replace selected link tags with linkplain in
      java.lang.Class
    + S8205006: Assertion failure when rehashing stringtable
    + S8205020: ZGC: Apply workaround for buggy sem_post() in glibc
      < 2.21
    + S8205022: ZGC: SoftReferences not always cleared before
      throwing OOME
    + S8205024: ZGC: Worker threads boost mode not always enabled
      when is should be
    + S8205025: [AOT] make jdk.aot module upgradeable
    + S8205028: ZGC: Remove incorrect comment in
      ZHeap::object_iterate()
    + S8205033: [REDO] Induction variable of over-unrolled loop
      conflicts with range checks
    + S8205034: [BACKOUT] Induction variable of over-unrolled loop
      conflicts with range checks
    + S8205043: Make parallel reference processing default for G1
    + S8205050: ZGC: Incorrect use of RootAccess in ZHeapIterator
    + S8205052: No compilation error thrown when no valid
      parameterization exists for functional interface type
    + S8205054: Could not find "lsof" on test machine
    + S8205055: Fix compilation optimization errors with new
      Solaris toolchain
    + S8205062: (fs) Improve some print diagnostics in
      java/nio/file/Files/CopyAndMove.java
    + S8205064: Fail immediately if an unavailable GC is selected
    + S8205074: [Graal] Add rest of compiler/stable tests into
      ProblemList-graal.txt
    + S8205091: AIX: build errors in hotspot after 8203641:
      Refactor String Deduplication into shared
    + S8205096: Add missing files for 8203394
    + S8205108: [testbug] Fix pattern matching in jstatd tests.
    + S8205110: Fix xchip warnings with new Solaris toolchain
    + S8205112: Remove non-existent modules from
      test/jdk/jdk/modules/etc/UpgradeableModules.java
    + S8205116: jdeps --system $java.home fails with IAE
    + S8205141: runtime/exceptionMsgs/ArrayStoreException/
      /ArrayStoreExceptionTest.java failed with
      "assert(k->is_objArray_klass()) failed: cast to ObjArrayKlass
    + S8205148: Turn off logging in jQuery-migrate
    + S8205149: hs201t002 should be put on the problem list
    + S8205163: ZGC: Keeps finalizable marked PhantomReference
      referents strongly alive
    + S8205172: 32 bit build broken
    + S8205181: ProblemList
      applications/ctw/modules/java_desktop_2.java
    + S8205183: Warning about using VS2017 should be removed
    + S8205338: ZGC: LeakProfiler not yet supported
    + S8205339: ZGC: VerifyBeforeIteration not yet supported
    + S8205341: AARCH64: Clean up duplicate uzp1 & uzp2 instruction
      definition
    + S8205344: TraceMemoryManagerStats changes in JDK-8195115
      broke ZGC
    + S8205407: [windows, vs<2017] C4800 after 8203197
- Modified patches:
  * generated-headers.patch
    + Better version resulting from discussion with upstream
  * java11-improved-fonts.patch
    + Rediff to changed context

-------------------------------------------------------------------
Thu Jun 14 13:05:23 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+18
  * Fixes:
    + S6350055: (se) SelectionKey.interestOps variants to
      atomically update interest ops
    + S8174734: Safepoint sync time did not increase
    + S8178374: Problematic ByteBuffer handling in
      CipherSpi.bufferCrypt method
    + S8190326: Robot.mouseMove uses scaling factor of main display
      on unscaled second display
    + S8194073: Invalid SunNativeProvider.INSTANCE initialization
    + S8195097: Make it possible to process StringTable outside
      safepoint
    + S8196030: AWT Robot mouseMove fails on Windows 10 1709 with
      HiDPI
    + S8196141: Add GoDaddy root certificates
    + S8196990: Resolve disabled warnings for libjli
    + S8196993: Resolve disabled warnings for libunpack
    + S8197930: JNI exception pending in initializeEncoding of
      jni_util.c
    + S8200132: Remove jre images and bundles
    + S8200387: [Graal] fromTonga/nsk/jdi tests hang with Graal as
      JIT
    + S8201193: Use XMM/YMM for objects initialization
    + S8201274: Launch Single-File Source-Code Programs
    + S8201407: Files.move throws DirectoryNonEmptyException when
      moving directory across file system
    + S8201528: Add new test to check for package versioning
      information in OpenJDK
    + S8201608: fix broken links in javax/sql/rowset/package.html
      and javax/sql/rowset/spi/package.html
    + S8202049: G1: ReferenceProcessor doesn't handle mark stack
      overflow
    + S8202088: Japanese new era implementation
    + S8202611: [GRAAL] Exclude CMS GC testing from runs with Graal
    + S8202705: ARM32 build crashes on long JavaThread offsets
    + S8202747: C2: assert(mode == ControlAroundStripMined && use
      == sfpt) failed: missed a node
    + S8202772: NMT thread stack tracking causes crashes on AIX
    + S8202864: [TESTBUG] Need to replace the image used in two
      Swing tests
    + S8203033: [Testbug] vmTestbase/nsk/jdi/TypeComponent/
      /isSynthetic/issynthetic002/TestDescription.java fails with
      nestmates
    + S8203172: Primitive heap access for interpreter
      BarrierSetAssembler/aarch64
    + S8203224: java.awt.desktop.*Event classes could not be
      instantiated if Desktop feature is not supported
    + S8203308: Remove the appletviewer classes
    + S8203329: JDWP/JDI VM information string is incorrect
    + S8203353: Fixup inferred decorators in the interpreter
    + S8203367: Upgrade to freetype 2.9.1
    + S8203425: assert(is_Loop()) failed: invalid node class
    + S8203480: IncompatibleClassChangeError thrown at sites linked
      to default interface methods
    + S8203499: Uninitialised memory in WinAccessBridge.cpp
    + S8203679: AssertionError in DeferredAttr with parenthesized
      method reference
    + S8203682: Add jcmd "VM.classloaders" command to print out
      class loader hierarchy, details
    + S8203796: Define API to support specifying ownership of print
      dialogs
    + S8203822: AIX version of jsig.c was not removed in JDK-8200298
    + S8203839: API clarification: versioned jar entry verification
      in multi-release jar file
    + S8204081: Mismatch in rebuild policy and collection set
      chooser causes remembered sets to be kept errorneously
    + S8204084: Remove the G1RSBarrierRegionFilter develop flag
    + S8204097: Simplify OopStorage::AllocateList block entry access
    + S8204110: serviceability/sa/ClhsdbSymbol.java and
      ClhsdbInspect.java failed when running in CDS mode
    + S8204113: Upgrade linker used in AOT tests to be same version
      as build toolchain
    + S8204118: [macos] Nonsensical self == [super init] in
      CFileDialog.m
    + S8204126: MonospacedGlyphWidthTest.java failed again
    + S8204127: Change bundle format on Windows to zip
    + S8204180: Implementation: JEP 318: Epsilon, A No-Op Garbage
      Collector
    + S8204187: Remove proprietary JPEG code from javax.imageio
    + S8204210: Implementation: JEP 333: ZGC: A Scalable
      Low-Latency Garbage Collector (Experimental)
    + S8204211: windows : handle potential C++ exception in
      GDIRenderer
    + S8204229: Formatter and String.format ignore the width with
      the percent modifier (%5%)
    + S8204243: remove Thread.destroy() and Thread.stop(Throwable)
    + S8204287: Phase timings not updated correctly after
      JDK-6672778
    + S8204288: Matching the end of a string followed by an empty
      greedy regex and a word boundary fails
    + S8204290: Add check to limit number of capture groups
    + S8204303: Add redirect for overview-summary.html
    + S8204335: [ppc] Assembler::add_const_optimized incorrect for
      some inputs
    + S8204375: Add TimeUnit#convert(Duration)
    + S8204377: Rename Object#wait parameter name from "timeout" to
      "timeoutMillis"
    + S8204444: java.time cleanup
    + S8204474: Have instanceRefKlass use HeapAccess when loading
      the referent
    + S8204476: Add additional statistics to
      CodeCache::print_summary
    + S8204477: Count linkage errors and print in
      Exceptions::print_exception_counts_on_error
    + S8204479: Bitwise AND on byte value sometimes produces wrong
      result
    + S8204494: Fix for 8200530 triggered regression,
      closed/test/jdk/security/infra/java/security/KeyStore/
      /BouncyCastleInterop.java failed
    + S8204496: backout fix for 8203796 which was pushed under
      another ID
    + S8204504: Fix for 8198285 breaks slowdebug builds
    + S8204539: improve error messages in matchJavaTZ [windows]
    + S8204549: [aix][testbug] signal tests fail because vm can not
      start in primordial thread.
    + S8204554: JFR TLAB tracing broken after 8202776
    + S8204557: NMT: Linux os::committed_in_range() does not break
      out outer loop when contiguous region is found
    + S8204561: JVM_GetClassSigners: wrap signers oop in an
      objArrayHandle for subsequent safepoint
    + S8204563: UseAppCDS obsolete message confusing
    + S8204565: (spec) Document java.{vm.}?specification.version
      system properties' relation to $FEATURE
    + S8204572: SetupJdkLibrary should setup SRC and -I flags
      automatically
    + S8204576: (fs) java/nio/file/Files/CopyAndMove.java does not
      set isUnix = true on macOS
    + S8204577: jittester generator doesn't kill processes on
      timeout
    + S8204584: jdeps generates illegal dot file containing
      ranksep=0,600000
    + S8204585: Remove IN_ARCHIVE_ROOT from Access API
    + S8204588: Test failures after "Launch Single-File Source-Code
      Programs"
    + S8204589: ProblemList failing launcher tests
    + S8204598: add more thread-related system settings info to
      hs_error file on Linux
    + S8204602: Add devkit for linux-arm32
    + S8204606: [Aarch64] SIGSEGVs caused by C1 because of improper
      register usage
    + S8204610: Compiler confused by parenthesized "this" in final
      fields assignments
    + S8204617: ParallelGC parallel reference processing does not
      set MT degree in reference processor
    + S8204618: The parallel GC reference processing task executor
      enqueues a wrong number of tasks into the queue
    + S8204628: [AArch64] Assertion failure in
      BarrierSetAssembler::load_at
    + S8204648: test/jdk/tools/launchers/SourceMode.java fails with
      long shebang line
    + S8204652: [aix] fix thread stack allocation, too big stack
      sizes not recognized
    + S8204674: Inconsistent lambda parameter span
    + S8204680: Disassembly does not display code strings in stubs
    + S8204682: Parsing for LOG=report=none is broken when combined
      with other keywords
    + S8204684: [AIX] Build of libjli_static broken after change
      8204572 (SetupJdkLibrary)
    + S8204694: Add failed compiler/stable tests into
      ProblemList-graal.txt
    + S8204850: BarrierSet::make_* should be static
    + S8204861: fix for 8196993 has broken the build on linux
- Modified patch:
  * system-pcsclite.patch
    + rediff to changed context
- Added patch:
  * generated-headers.patch
    + fix a regression after JDK-8204572

-------------------------------------------------------------------
Thu Jun  7 10:48:31 UTC 2018 - fstrba@suse.com

- Update tu upstream tag jdk-11+17
  * Fixes:
    + S5109146: PNGMetadata Background color initialization from
      standard metadata is incomplete
    + S8050818: Predicate::not - provide an easier way to negate a
      predicate
    + S8072996: Deprecate stream-based GSSContext methods
    + S8150156: Update bugs.sun.com references to bugs.java.com
    + S8153029: ChaCha20 Cipher Implementation
    + S8154736: enhancement of cmpxchg and copy_to_survivor for
      ppc64
    + S8177276: MethodHandles.insertArguments doesn't specify
      IllegalArgumentException on index mismatch
    + S8187289: NotifyFramePop request is not cleared if
      JVMTI_EVENT_FRAME_POP is disabled
    + S8189335: javac exception when referencing private inner
      class with same name as normal class with dollar_1
    + S8189949: Remove Baltimore Cybertrust Code Signing CA
    + S8190417: javadoc updates to java.util.regex.Matcher
    + S8190875: modules not listed in overview/index page
    + S8191031: Remove several Symantec Root CAs
    + S8191522: Remove Bigelow&Holmes Lucida fonts from JDK sources
    + S8193552: ISO 4217 amendment 165
    + S8194327: [macos] AWT windows have incorrect main/key window
      behaviors
    + S8195624: Desktop API cannot be used without permission to
      read "os.version"
    + S8196373: Introspector does not see overridden generic setter
      method
    + S8197387: jcmd started by "root" must be allowed to access
      all VM processes
    + S8197989: java/util/zip/ZipFile/TestCleaner.java failed with
      "cleaner failed to clean zipfile
    + S8198285: More consistent Access API for arraycopy
    + S8198378: javac crash when checking imports and a broken
      class is present
    + S8199150: Accessibility issues in java.desktop
    + S8199268:
      docs/api/jdk.javadoc/com/sun/javadoc/package-summary.html
      contain low contrast text
    + S8199371: [TESTBUG] Open source vm testbase JDWP tests
    + S8199380: [TESTBUG] Open source VM testbase AOD tests
    + S8199388: Test development for ChaCha20 and Poly1305
      algorithms
    + S8199530: Upgrade to harfbuzz 1.7.6
    + S8199723: Test java/awt/TextComponent/
      /DeselectionDuringDoSelectionNonVisibleTest/
      /DeselectionDuringDoSelectionNonVisibleTest.java fails
    + S8199882: compiler/uncommontrap/TestDeoptOOM.java failed w/
      fatal error: ExceptionMark constructor expects no pending
      exceptions
    + S8199893: the javadoc tool generates pages with a low
      constrast
    + S8200052: libjavajpeg: Fix compile warning in jchuff.c
    + S8200166: Repeating annotations refering to to-be-generated
      classes don't work.
    + S8200288: [SPARC] "assert(!(is_cti(prev) && is_cti(insn)))
      failed: CTI-CTI not allowed"
    + S8200530: '\r' is not supported as "newline" in
      java.util.jar.Manifest
    + S8200623: Primitive heap access for interpreter
      BarrierSetAssembler/x86
    + S8201279: javax.sound tests should not set java.home system
      property
    + S8201364: [macosx] Component.getLocation() gives inconsistent
      coordinate for a component at (0,0)
    + S8201429: Support AIX Input Method Editor (IME) for AWT Input
      Method Framework (IMF)
    + S8202026: ISO 4217 amendment 166
    + S8202051: Address compilation warnings in libawt with VS2017
    + S8202094: jdk/jfr/api/recording/event/TestEventTime.java
      intermittently times out
    + S8202095: JFR TestBiasedLockRevocationEvents should cope with
      multiple events during a single safepoint
    + S8202360: [TESTBUG] runtime/LoadClass/TestResize.java needs
      to print output when it fails
    + S8202547: Move G1 runtime calls used by generated code to
      G1BarrierSetRuntime
    + S8202627: javadoc generates broken links to deprecated items
      when -nodeprecated is used
    + S8202670: Update Graal
    + S8202758: SIGSEGV calling
      Class.forName(String,Boolean,ClassLoader) with mocked loader
    + S8202776: Modularize GC allocations in runtime
    + S8202812: [TESTBUG] Open source VM testbase compiler tests
    + S8202913: loader constraint message for fields specifies
      incorrect referring class
    + S8203027: Open source tests for "java.awt.geom"
    + S8203031: segfaults from jvmti_AddToBootstrapClassLoaderSearch
    + S8203182: Release session if initialization of SunPKCS11
      Signature fails
    + S8203219: VM.metaspace jcmd should optionally show loaded
      classes for loaders
    + S8203237: JFR TestBiasedLockRevocationEvents should ignore
      events unrelated to the test
    + S8203319: JDK-8201487 disabled too much queue balancing
    + S8203321: assert(current_query_index <
      process_query_set->size) failed: invariant
    + S8203324: Use out of scope in getMacOSXLocale of
      java_props_macosx.c:120
    + S8203380: Missing platform and bug information for
      MouseModifiersInKeyEvent test
    + S8203435: Circular nested dynamic constant test needed to
      confirm JVMS resolution behavior
    + S8203445: [TESTBUG] Remove
      appcds/jigsaw/limitmods/LimitModsTests.java
    + S8203474: Update description of "Cyrillic Supplementary"
      block name in Character.UnicodeBlock class.
    + S8203485: [freetype] text rotated on 180 degrees is too narrow
    + S8203498: The specification for java.applet package should be
      updated
    + S8203669: PPC64: Fix jtreg RTM tests after "8203305: Improve
      TM detection for enabling RTM on Linux / POWER9"
    + S8203765: java/nio/channels/Selector/SelectAndClose: add some
      prints and @intermittent tag
    + S8203780: javadoc should be updated to use jquery 1.12.4,
      jquery-ui 1.12.1 and jszip v3.1.5
    + S8203787: Hotspot build broken on linux-sparc after 8202377
    + S8203802: Jvmti test fails to build with VS2017
    + S8203827: Upgrade JLine to 2.14.6
    + S8203837: Split nmethod unloading from inline cache cleaning
    + S8203872: Upgrading JDK with latest available LSR data from
      IANA.
    + S8203891: Upgrade JOpt Simple to 5.0.4
    + S8203919: Remove "-add-modules" hint from error message
    + S8203921: JFR thread sampling is missing fixes from
      JDK-8194552
    + S8203923: Add @requires feature to check flag values for the
      running JVM
    + S8203924: Zero: bootcycle-images build fails on x86_64
    + S8203937: Not possible to read data from socket after write
      detects connection reset
    + S8203939: JVMFlag::printError missing ATTRIBUTE_PRINTF
    + S8203945: Cleanup nashorn build
    + S8203946: Move UnpackSecurity.gmk to closed
    + S8203948: Expand JVMTI callback notion of "internal threads"
    + S8203960: [TESTBUG] runtime/logging/DefaultMethodsTest.java
      failed when running in CDS mode
    + S8204055: SIGSEGV in java -XX:
    + S8204085: avoid printing uninitialized pointer in
      java.desktop/windows/native/libawt/java2d/windows/
      /GDIWindowSurfaceData.cpp
    + S8204087: C++ Interpreter code left over in MethodData
    + S8204091: Configure broken on MIPS when uname returns mipsel
      or mips64el
    + S8204094: assert(worker_i < _length) failed: Worker 15 is
      greater than max: 11 at ReferenceProcessorPhaseTimes
    + S8204095: [TESTBUG] TestPrintReferences.java fails if
      multiple concurrent mark happens
    + S8204103: Mark test
      serviceability/dcmd/compiler/CompilerQueueTest.java as
      intermittent and exclude it from tier1
    + S8204109: JDK-8203945 broke nashorn
    + S8204122: Update harfbuzz.md
    + S8204134: jtreg: Fix RTM abort provoker for various tests
      after "8149159: Clean up Unsafe"
    + S8204136: jtreg: Fix failing RTM test RTMSpinLoopCount
    + S8204160: BiasedLockingTest needs -XX:+UseBiasedLocking
    + S8204162: TestG1HeapRegion needs @requires vm.gc.G1
    + S8204163: Also detect concurrent GCs in MetaspaceBaseGC.java
    + S8204164: OOM-only logging in Metaspace
    + S8204165: Filter out tests requiring class unloading when
      ClassUnloading is disabled
    + S8204167: Filter out tests requiring compressed oops when
      CompressedOops is disabled
    + S8204168: Increase small heap sizes in tests to accommodate
      ZGC
    + S8204173: Lower the minimum number of heap memory pools in
      MemoryTest.java
    + S8204179: [BACKOUT] OopStorage should use GlobalCounter
    + S8204194: Lazily create
      MethodHandleImpl$AsVarargsCollector.asCollectorCache
    + S8204195: Clean up macroAssembler.inline.hpp and other
      inline.hpp files included in .hpp files
    + S8204199: Test fails after 8202670 Graal update
    + S8204237: Clean up incorrectly included .inline.hpp files
      from jvmciJavaClasses.hpp
    + S8204250: Problem list pkcs11 tests on windows
    + S8204269: ISO 4217 amendment 167
    + S8204277: [testbug] fix DisassembleCodeBlobTest.
    + S8204292: PPC64: Fix missing includes after 8204195
    + S8204295: [BACKOUT] - JVMFlag::printError missing
      ATTRIBUTE_PRINTF
    + S8204301: Make OrderAccess functions available to hpp rather
      than inline.hpp files
    + S8204321: javadoc tests fail after JDK-8203780
    + S8204322: "+=" applied to String operands can provoke side
      effects
    + S8204341: AArch64: AOT runtime does not need a workaround for
      far calls
    + S8204345: [s390]: no precompiled headers build broken
    + S8204348: AArch64: Remove C2 address reshaping code

-------------------------------------------------------------------
Tue Jun  5 15:14:58 UTC 2018 - fstrba@suse.com

- Change the alternatives priority from 0 to 2105, since OpenJDK 11
  should now be in a shape to be able to be used.

-------------------------------------------------------------------
Tue Jun  5 09:38:41 UTC 2018 - fstrba@suse.com

- Change build requirement to Java 10 or 11, since Java 9 cannot
  build OpenJDK 11 any more.

-------------------------------------------------------------------
Thu May 31 10:04:18 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+16
  * Fixes:
    + S8133564: Runtime - 2nd followup to Validate JVM Command-Line
      Flag Arguments
    + S8184030: TestUseRTMLockingOptionOnUnsupportedVM - RTM
      locking optimization not supported is missing
    + S8188248: NullPointerException on generic methods
    + S8189766: whitebox failure with -Xcheck:jni
    + S8191844: Remove SECOM root (secomevrootca1)
    + S8193717: Import resolution performance regression in JDK 9
    + S8194298: Add support for per Socket configuration of TCP
      keepalive
    + S8194630: Uninitialized initiator_address in native GSS
    + S8196202: Javadoc should not generate frames by default
    + S8196913: javadoc does not (over)write stylesheet.css
    + S8198323: testing.md not updated for repository layout change
    + S8199255: [TESTBUG] Open source VM testbase default methods
      tests
    + S8199307: NPE in
      jdk.javadoc.internal.doclets.toolkit.util.Utils.getLineNumber
    + S8199383: [TESTBUG] Open source VM testbase JVMTI tests
    + S8200172: String.split non-positive term incorrect use
    + S8200266: [Graal] Update ProblemList-graal.txt files
    + S8201518: add test for randomized iteration order of
      unmodifiable Set and Map
    + S8202178: type.getKind() for var is None instead of Error
    + S8202290: AtomicAppend tests fail on macOS 10.13 ("High
      Sierra")
    + S8202813: Move vm_weak processing from SystemDictionary to
      WeakProcessor
    + S8202832: cycle detection depends on ordering of requires
      directives
    + S8202842: G1 footprint regressions in jdk11+10
    + S8202945: OopStorage should use GlobalCounter
    + S8202947: Fix minor issues with taglets
    + S8202949: C2: assert(false) failed: Bad graph detected in
      build_loop_late
    + S8202950: C2: assert(found_sfpt) failed: no node in loop
      that's not input to safepoint
    + S8203014: jcmd should output command list if no command is
      given
    + S8203028: Simplify reference processing in light of
      JDK-8175797
    + S8203041: AArch64: fix overflow in immediate cmp/cmn
      instruction
    + S8203183:
      vmTestbase/vm/mlvm/anonloader/stress/oome/heap/Test.java times
      out
    + S8203221: Makefile fixes after Flight Recorder
    + S8203225: Fix of redefining a method that removes 1 or more
      lambda expressions failed to commit test cases
    + S8203233: (tz) Upgrade time-zone data to tzdata2018e
    + S8203262: Incorrect cmpxchg usage in
      MetaspaceGC::inc_capacity_until_GC
    + S8203297: java/net/URL/OpenStream.java fails intermittently
    + S8203327: Small cleanups in java.lang.ref
    + S8203328: Rename EFS in java.util.zip internals to something
      meaningful
    + S8203354: assert in
      ClassLoader::update_module_path_entry_list() could have
      incorrect message
    + S8203366: Tag added wrongly in Docs.gmk
    + S8203368: ObjectInputStream filterCheck method throws
      NullPointerException
    + S8203369: Check for both EAGAIN and EWOULDBLOCK error codes
    + S8203370: [JVMCI] UseJVMCICompiler should imply EnableJVMCI
    + S8203455: jcmd: VM.metaspace: print loader name for anonymous
      CLDs
    + S8203488: Remove error generation from TransTypes
    + S8203497: Bump Jib format version to 1.2
    + S8203628: Optimize (masked) byte memory comparisons on x86
    + S8203686: Add JDK 11 major version to
      javax/net/ssl/compatibility/JdkRelease.java
    + S8203689: Add failure code to threaddb exception messages`
    + S8203699: java/lang/invoke/SpecialInterfaceCall fails with
      SIGILL on aarch64
    + S8203766: Add some instrumentation to
      jdk/java/nio/channels/Selector/RacyDeregister.java
    + S8203769: ProblemList
      test/jdk/java/util/Map/InPlaceOpsCollisions.java
    + S8203774: jdk/jfr/api/recorder/TestStartStopRecording.java
      failed due to compilation failed
    + S8203793: cacerts/VerifyCACerts.java fails with
      java.lang.Exception: At least one cacert test failed
    + S8203795: Change default compiler on Windows to VS2017
    + S8203815: add tests failed because of 8203809 to the
      ProblemList-graal
    + S8203816: add tests failed because of 8203174 to the
      ProblemList-graal
    + S8203817: Monitor::try_lock() should not call
      check_prelock_state()
    + S8203843: BasicParState::default_estimated_thread_count(false)
      can return 0 in gtest
    + S8203865: Metaspace cleanup: Remove unused MemRegion in
      VirtualSpaceNode
    + S8203881: Print erroneous size in NegativeArraySizeException
    + S8203885: ConcurrentLocksDump::dump_at_safepoint() should not
      allocate array in resource area
    + S8203886: Invoke LambdaMetafactory::altMetafactory exactly
      from the BootstrapMethodInvoker
    + S8203892: Target interface added as marker interface in calls
      to altMetafactory
    + S8203926: Problem list
      test/langtools/tools/javac/importscope/T8193717.java
    + S8203932: Windows devkit has wrong dlls in 32 bit tools dir
    + S8203938: Fix build failures from JDK-8133564

-------------------------------------------------------------------
Fri May 25 08:43:23 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+15
  * Fixes:
    + S8027760: JFC schema condition should not have defaults
    + S8134537: Much nearly duplicated code for sun.misc.Signal
      support
    + S8146293: Add support for RSASSA-PSS Signature algorithm
    + S8148354: Errors targeting functional interface intersection
      types
    + S8176808: Split up metaspace.cpp
    + S8185803: JdbExprTest.sh fails in JDK10-hs nightly due to
      "Name unknown: java.lang.Long.MAX_VALUE "
    + S8192992: Test8007294.java failed: attempted to spill a
      non-spillable item
    + S8193332: MetaspaceShared::check_shared_class_loader_type is
      not used during archive creation
    + S8195098: Low latency hashtable for read-mostly scenarios
    + S8195817: JFR.stop should require name of recording
    + S8195818: JFR.start should increase autogenerated name by one
    + S8195819: Remove recording=x from jcmd JFR.check output
    + S8196048: thrown type variables should be roots in the
      minimum inference graph
    + S8196201: Generate pages to list all classes and all packages
      in javadoc output
    + S8196619: [TESTBUG] restore current version check in
      runtime/appcds/MultiReleaseJars.java
    + S8196987: Resolve disabled warnings for libzip
    + S8198315: Incomplete classpath causes NPE in TransTypes
    + S8198337: -XX:StartFlightRecording=dumponexit=true,disk=false
      doesn't work
    + S8198548: Initialization race in
      com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.getRange()
      on Token.categories
    + S8199064: Test applications/jcstress/other/Test.java#id1108
      fails on Sparc
    + S8199257: [TESTBUG] Open source VM testbase metaspace tests
    + S8199271: [TESTBUG] open source VM testbase stress tests
    + S8199370: [TESTBUG] Open source vm testbase GC tests
    + S8199379: [TESTBUG] Open source vm testbase JDB tests
    + S8199384: [TESTBUG] Open source VM testbase MLVM tests
    + S8199807: AppCDS performs overly restrictive path matching
      check.
    + S8200380: String::lines
    + S8200436: String::isBlank
    + S8201331: Better test cleanup for
      jdk/jfr/api/consumer/TestRecordingFile.java
    + S8201386: Miscellaneous changes imported from jsr166 CVS
      2018-05
    + S8201627: Kerberos sequence number issues
    + S8201867: Kerberos keytabs with holes in certain places are
      parsed incorrectly
    + S8202014: Possible to receive signal before signal semaphore
      created
    + S8202076: test/jdk/java/io/File/WinSpecialFiles.java on
      windows with VS2017
    + S8202305: [Graal] org.graalvm.compiler.core.test.GraphResetDebugTest
      fails with java.util.ServiceConfigurationError
    + S8202377: Modularize C2 GC barriers
    + S8202427: Enhance os::print_memory_info on Windows
    + S8202466: Test serviceability/tmtools/jstat/GcTest01.java
      fails: Number of concurrent GC events is 1, but CGCT is 0
    + S8202479: Add missing try_resolve_jobject_in_native calls
    + S8202669: Intermittent crash in
      ClassLoadingService::compute_class_size()
    + S8202685: Optimize ArrayList subList replaceAll
    + S8202710: AARCH64: sporadic jtreg test fail
    + S8202713: Create a MacroAssembler::access_load/store_at
      wrapper for S390 and PPC
    + S8202771: Migrate Unicode character tests to JDK Repo
    + S8202848: -XX:+ExecuteInternalVMTests asserts with
      "assert(cd.valid() == true) failed: failed on a valid
      DirectivesParser string"
    + S8202853: NotifyCount is not initialized
    + S8202863: Rename OopStorage inner collection classes
    + S8202978: Incorrect tmp register passed to
      MacroAssembler::load_mirror()
    + S8202989: Add missing decorators in calls to to
      arraycopy_prologue/epilogue
    + S8203196: C1 emits incorrect code due to integer overflow in
      _tableswitch keys
    + S8203215: IdealLoopTree::split_outer_loop leaves phi-nodes
      with only one input
    + S8203227: Introduce os::processor_id() for Linux and Solaris
    + S8203279: Faster rounding up to nearest power of two
    + S8203287: Zero fails to build after JDK-8199712 (Flight
      Recorder)
    + S8203288: PPC64 and s390 fail to build after JDK-8199712
      (Flight Recorder)
    + S8203292: Print complete set of flags in the hs_err file
    + S8203305: PPC64: Improve TM detection for enabling RTM on
      Linux / POWER9
    + S8203318: compiler/stable/TestStableShort.java is broken
    + S8203339: Add oopDesc::field_offset()
    + S8203341: Add a safepoint-aware Semaphore
    + S8203346: JFR: Inconsistent signature of
      jfr_add_string_constant
    + S8203352: Improve java implementation of
      Integer/Long.numberOfLeadingZeros
    + S8203355: MITSHM define guarding missing
    + S8203377: Cleanup the usage of os::file_name_strcmp() in
      SharedPathsMiscInfo::check().
    + S8203381: Replace InstanceKlass::allocate_instance_handle
      with JavaCalls::construct_new_instance
    + S8203391: Update com/sun/jdi/JdbMethodExitTest.sh to pass
      valid URL[]
    + S8203398: Test test/langtools/tools/javac/options/release/
      /ReleaseOptionCurrent.java writes into the source directory
    + S8203400: Fix issue with "8199852: Print more information
      about class loaders in LinkageErrors."
    + S8203410: Zero: Disable jfr feature by default
    + S8203431: TestFloatsOnStackDeopt.java throws
      java.lang.LinkageError: loader <bootstrap> attempted duplicate
      class definition for
      java.lang.invoke.BoundMethodHandle$Species_LLL
    + S8203436: javac should fail early when emitting illegal
      signature attributes
    + S8203437: 8199370 broke build on linux-ppc64le (w/ GCC 4.8.5.)
    + S8203454: Minimal, Zero builds fail after JDK-8202377
      (Modularize C2 barriers)
    + S8203457: Add back missing full buffer notification
    + S8203486: skip type inference for non functional interface
      components of intersection types
    + S8203487: Typo in ICUBinary.java: s/Magin/Magic/
    + S8203490: StringTable::dump lacks a load barrier
    + S8203500: Fix broken links to Specification in "specs"
      directory
    + S8203626: ProblemList
      compiler/runtime/TestFloatsOnStackDeopt.java
    + S8203635: JFR sampler thread does not record stack info
    + S8203694: Add a safepoint-aware Semaphore - part 2
- Removed patch:
  * fix-s390x-and-ppc64-builds.patch
    + integrated upstream

-------------------------------------------------------------------
Tue May 22 09:52:02 UTC 2018 - fstrba@suse.com

- Added patch:
  * fix-s390x-and-ppc64-builds.patch
     + upstream fix for broken s390x and ppc64/ppc64le builds

-------------------------------------------------------------------
Thu May 17 11:55:30 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+14
  * Fixes:
    + S8132287: obsolete the "InlineNotify" flag option
    + S8174995: SA: clhsdb 'where -a' throws Assertion Failure with
      illegal code 236 when CDS is used
    + S8176510: java/awt/font/GlyphVector/TestLayoutFlags.java
      fails with OpenJDK
    + S8183910: gc/arguments/TestAggressiveHeap.java fails
      intermittently
    + S8185505: AArch64: Port AOT to AArch64
    + S8189140: SystemDictionaryShared::initialize() should be
      renamed to be more meaningful
    + S8189271: Metaspace::_capacity_until_GC should be size_t
    + S8191533: jar --describe-module prints service provider class
      names in lower case
    + S8193935: Illegal countedLoops transformation
    + S8194998: broken error message for subclass of interface with
      private method
    + S8195613: [SA] HotSpotTypeDataBase.readVMLongConstants
      truncates values to int
    + S8196340: (coll) Examine overriding inherited methods in
      ArrayList and ArrayList.SubList
    + S8196360: java/awt/Dialog/SiblingChildOrder/
      /SiblingChildOrderTest.java fails
    + S8196616: java/awt/GraphicsDevice/DisplayModes/
      /CompareToXrandrTest.java fails
    + S8197948: Create test for SwingSet2 main window
    + S8198412: MonospacedGlyphWidthTest.java may fail on Solaris
    + S8198991: Move Java2D demo to the open repository
    + S8199252: [TESTBUG] Open source VM testbase system dictionary
      tests
    + S8199712: Flight Recorder
    + S8200377: String::strip, String::stripLeading,
      String::stripTrailing
    + S8201447: C1 does backedge profiling incorrectly
    + S8201491: G1 support for java.lang.ref.Reference precleaning
    + S8201532: Update idom to get correct dom depth calculation
    + S8201593: Print array length in
      ArrayIndexOutOfBoundsException.
    + S8201604: ARM64 - Build failure after JDK-8193260
    + S8202016: Use obj+offset in interpreter array access
    + S8202064: Jemmy JInternalFrameOperator: Add wait for close(),
      activate(), resize() and move() operations
    + S8202113: Reflection API is causing caller classes to leak
    + S8202289: Non-empty directory in module path is not handled
      properly at CDS/AppCDS dump time
    + S8202322: AIX: symbol visibility flags not support on xlc 12.1
    + S8202392: [TESTBUG] open source vm testbase heapdump tests
    + S8202395: AARCH64: wrong encoding for SIMD instructions zip,
      trn, uzp
    + S8202426: NPE thrown by Transformer when XMLStreamReader
      reports no xml attribute type
    + S8202476: ImageLib is broken in 32 bit Windows
    + S8202519: Crash during large AppCDS dump
    + S8202544: Hide unused exports in libzip
    + S8202553: Update FXLauncherTest as part of removing JavaFX
      from JDK
    + S8202557: OpenJDK fails to start in Windows 7 and 8.1 after
      upgrading compiler to VC 2017
    + S8202580: Dashed BasicStroke randomly painted incorrectly,
      may freeze application
    + S8202614: Add ability to validate links in JavadocTester
    + S8202679: Updates on windows failures in the problem list
    + S8202683: Minimal VM should build cleanly on 64-bit platforms
    + S8202708: Add a check of opening stream for not-existing UNC
      url
    + S8202714: Create a MacroAssembler::access_load/store_at
      wrapper for AArch64
    + S8202718: Jemmy JInternalFrameOperator: Dependency with
      orders of Minimize, Maximize and Close buttons
    + S8202738: vm_version Abstract_VM_Version::internal_vm_info_string()
      returns same string for different incremental builds
    + S8202745: Remove hyphens from "out-of-bounds".
    + S8202748: jtreg :hotspot_misc group shouldn't include
      vmTestbase tests
    + S8202756: move FilterUSRTest.java to openJDK
    + S8202763: failure_handler: list open files for macOS
    + S8202764: api/java_text/SimpleDateFormat/index.html#Format
      testcases started to fail with JDK11 b12
    + S8202767: java/awt/font/GlyphVector/TestLayoutFlags.java is
      missing null check
    + S8202773: Unhandled oop in JavaThread::collect_counters
    + S8202811: Problem List some tests that leave windows open on
      the desktop
    + S8202822: Add .git to .hgignore
    + S8202824: Cleanup discrepancies in ProblemList for java_awt
      jtreg tests
    + S8202829: Implement CollectedHeap::get_safepoint_workers()
      for G1
    + S8202843: langtools ant build fails
    + S8202878:
      com/apple/laf/ScreenMenu/ScreenMenuMemoryLeakTest.java fails
    + S8202889: Remove trailing LF from perf log
    + S8202914: Let custom makefile override jmod intput dir
      locations
    + S8202915: [JAXP] Performance enhancements and cleanups in
      com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator
    + S8202919: JDK-8202683 broke macosx build
    + S8202920: jvm.cfg generation incorrect
    + S8202974: Backout JDK-8202683
    + S8202976: Add C1 lea patching support for x86
    + S8202993: Add support for x86 testptr/testq with register and
      address
    + S8202994: Add support for undoing last TLAB allocation
    + S8202997: Split test/jdk/:tier1 to enable better parallel
      execution
    + S8203032: PrintMetaspaceDcmd fails: Non-Class: missing from
      stdout/stderr
    + S8203059: (so) Closing a socket channel registered with
      Selector and with SO_LINGER set to 0 does not reset connection
    + S8203176: javadoc handles non-ASCII characters incorrectly.
    + S8203220: Introduce ATTRIBUTE_ALIGNED macro
    + S8203223: Signed integer overflow in ImageStrings::hash_code
      (libjimage.so)
    + S8203250: runtime/LoadClass/test-classes/Hello.java has wrong
      legal notice
    + S8203251: Non-PCH build failed after JDK-8199712 (Flight
      Recorder)
    + S8203274: 32-bit build failures after JDK-8199712 (Flight
      Recorder)
    + S8203278: AArch64/PPC64 build failures after JDK-8199712
      (Flight Recorder)
    + S8203285: Minimal VM fails to build after JDK-8199712 (Flight
      Recorder)

-------------------------------------------------------------------
Mon May 14 07:17:53 UTC 2018 - fstrba@suse.com

- s390x: avoid packaging files that are not present on this
  architecture

-------------------------------------------------------------------
Fri May 11 09:52:20 UTC 2018 - fstrba@suse.com

- Update to ustream tag jdk-11+13
  * Fixes:
    + S4842658: DefaultListModel and DefaultComboBoxModel should
      support addAll (Collection c)
    + S6574555: PNGImageWriter incorrectly sets bKGD chunk
    + S6788458: PNGImageReader ignores tRNS chunk while reading
      non-indexed RGB/Gray images
    + S8153532: Add @throws NPE javadoc to
      UIManager.setLookAndFeel(String) method description
    + S8154463: New failure of
      closed/java/awt/font/Outline/OutlineInvarianceTest.java
    + S8171277: Elliptic Curves for Security in Crypto
    + S8176717: GC log file handle leaked to child processes
    + S8181594: Efficient and constant-time modular arithmetic
    + S8181910: [macos] Support dark title bars on macOS
    + S8185034: Cleanup and consolidate Metaspace coding
    + S8187123: (reflect) Class#getCanonicalName and
      Class#getSimpleName is a part of performance issue
    + S8187392: Deprecated methods in the peers can be removed
    + S8189687: Swing: Invalid position of candidate pop-up of
      InputMethod in Hi-DPI on Windows
    + S8189916: Dynamic Constant support for Sparc
    + S8191410: Unicode 10
    + S8194968: problem list actions for
      tools/javac/jvm/VerboseOutTest
    + S8195002: Fix test/hotspot/jtreg/gtest/GTestWrapper.java on
      Alpine/Musl
    + S8195717: test java/lang/invoke/MethodHandlesTest timed out
      running testAsCollector1
    + S8196113: Remove the Compact Profile builds
    + S8196572: Tests ColConvCCMTest.java and MTColConvTest.java
      fail
    + S8197388: Added not existing bug id in jdk/ProblemList.txt
    + S8197447: LogCompilation throws "couldn't find bytecode"
    + S8197954: Remove unnecessary intermediary APIs from AppCDS
      implementation
    + S8198342: Test FileSystemViewListenerLeak.java is unstable
    + S8199067: [REDO] NMT: Enhance thread stack tracking
    + S8199196: Add javadoc support for preview features
    + S8199382: [TESTBUG] Open source VM testbase JDI tests
    + S8199748: Touch keyboard is not shown, if text component gets
      focus from other text component
    + S8199852: Print more information about class loaders in
      LinkageErrors.
    + S8199912: jshell tool: /open from URI
    + S8199932: Missing copyright header in AWT source code
    + S8200083: Bump bootjdk requirement for JDK 11 to JDK 10
    + S8200094: Turkish locale reports NPE No enum constant
      com.sun.source.doctree.DocTree.Kind.SİNCE
    + S8200146: Remove the appletviewer launcher
    + S8200313: java/awt/Gtk/GtkVersionTest/GtkVersionTest.java
      fails
    + S8200372: String::trim JavaDoc should clarify meaning of space
    + S8200557: OopStorage parallel iteration scales poorly
    + S8200716: Object propertyIsEnumerable buggy behavior on short
      integer-string key
    + S8200729: Conditional compilation of GCs
    + S8201138: Defect in XMLEventReader.getElementText() may cause
      data to be skipped, duplicated or otherwise result in a
      ClassCastException
    + S8201433: Fix potential crash in BufImg_SetupICM
    + S8201492: Properly implement non-contiguous generations for
      Reference discovery
    + S8201524: [AIX] Don't link libfontmanager against
      libawt_headless
    + S8201572: Improve Metaspace Statistics
    + S8201598: Fix for 8181910: Support dark title bars on macOS
      broke the MacOS build
    + S8201602: ARM32 - Minimal Dynamic Constant support
    + S8201626: Typo in MakeWindowAlwaysOnTop test
    + S8201640: Use _ref_processor_* member variables directly in
      G1CollectedHeap
    + S8201793: (ref) Reference object should not support cloning
    + S8202017: Merge Reference Enqueuing phase with phase 3 of
      Reference processing
    + S8202018: Move card table clear before enqueuing pending
      references
    + S8202021: Improve variable naming in ReferenceProcesso
    + S8202050: Add javax/sound/midi/Sequencer/Recording.java to
      the problemList
    + S8202080: Introduce ordering semantics for Atomic::add and
      other RMW atomics
    + S8202083: Remove explicit CMS checks in CardTableBarrierSet
    + S8202143: Parts of 8193435 added in merge change set.
    + S8202181: Correctly specify size of hostname buffer in Unix
      Inet*AddressImpl_getLocalHostName implementations
    + S8202291: java/rmi/Naming/LookupIPv6.java failed with
      Connection refused
    + S8202301: Add tests related to JDK-8196572 to the ProblemList
    + S8202303: LogStream should autoflush on destruction
    + S8202319: Fix compilation warnings in Solaris debug builds
      for DevStudio 12.6
    + S8202387: javac --release 11 not supported
    + S8202424: Metaspace: on chunk retirement, use correct lower
      limit on chunksize when adding blocks to free blocks list
    + S8202435: [aix] print program break as part of memory info
      into hs-err file
    + S8202447: Fix unloading_occurred to mean unloading_occurred
    + S8202465: [C1] casts should not be eliminated for interface
      types
    + S8202548: Use reservation Object when creating SpeciesData
    + S8202552: [AOT][JVMCI] Incorrect usage of INCLUDE_JVMCI and
      INCLUDE_AOT
    + S8202563: BigInteger/BigDecimal not immune to overflow,
      contrary to spec
    + S8202564: java/lang/management/ThreadMXBean/ThreadCounts.java
      fails
    + S8202565: C1 compilation crashes with
      "assert(is_double_stack() && !is_virtual()) failed: type check"
    + S8202575: Remove java/lang/String/nativeEncoding/
      /StringPlatformChars.java from ProblemList
    + S8202581: failure_handler: gather more environment
      information on macOS
    + S8202582: DateTimeFormatterBuilder.parseOffsetBased
      unnecessarily calls toString()
    + S8202583: Remove experimental ClassForNamePlugin
    + S8202584: de-problem list tools/javac/jvm/VerboseOutTest
    + S8202591: Remove usage of CMSEdenChunksRecordAlways in
      defNewGeneration.cpp
    + S8202592: Remove unused EvacuateFollowersClosure
    + S8202597: javac is not inducing a notional interface if
      Object appears in an intersection type
    + S8202599: Mark intermittently failing jshell tests
    + S8202606: Deprecate AllowNonVirtualCalls option
    + S8202631: JVM_Clone to throw CloneNotSupportException for
      Reference object
    + S8202634: Metaspace: simplify SpaceManager lists
    + S8202639: Use concrete Generation classes in SerialHeap and
      CMSHeap
    + S8202640: Small C1 cleanups for BarrierSetC1
    + S8202641: Replace OOP_SINCE_SAVE_MARKS with templates
    + S8202642: Replace PAR_OOP_ITERATE with templates
    + S8202647: Add deduplicate_string function to CollectedHeap
    + S8202649: Move the Parallel GC specific task creation
      functions out of Threads
    + S8202650: Enforce group for attach listener file
    + S8202662: JFR tests fails: Could not find leak with class
    + S8202672: Build failed in metaspace.cpp with VS2017
    + S8202676: AArch64: Missing enter/leave around barrier leads
      to infinite loop
    + S8202684: Minimal VM build is broken after JDK-8199067,
      JDK-8202638
    + S8202686: Missing test case for 8200167 - final Object methods
    + S8202690: jdk/jshell/ToolBasicTest.java failed in
      testOpenFileOverHttp() and testOpenLocalFileUrl()
    + S8202709: Move oopDesc::is_archive_object to
      MetaspaceShared::is_archive_object
    + S8202711: Merge tiered compilation policies
    + S8202719: Use Collections.emptyEnumeration where possible
    + S8202722: Move marksweep_init into GC code
    + S8202744: Expired flag removal for JDK 11
    + S8202780: Remove EnqueueTask related code from
      ReferenceProcessor after JDK-8202017
    + S8202781: Fix typo in DiscoveredListIterator::complete_enqeue
    + S8202810: Remove class-for-name test
    + S8202816: Update JarSigning.keystore
- Removed patch:
  * aarch64-infinite-loop.patch
    - Integrated upstream
- Modified patch:
  * java11-improved-fonts.patch
    - Rediff to changed context

-------------------------------------------------------------------
Thu May 10 14:48:52 UTC 2018 - fstrba@suse.com

- Fix s390x build, since INCLUDE_SA is false by default on this
  architecture

-------------------------------------------------------------------
Tue May  8 07:57:54 UTC 2018 - fstrba@suse.com

- Added patch:
  * aarch64-infinite-loop.patch
    + Fix inifinite loop in aarch64 build

-------------------------------------------------------------------
Mon May  7 15:55:39 UTC 2018 - guillaume.gardet@opensuse.org

- Update fix_armv6_build.patch

-------------------------------------------------------------------
Mon May  7 11:02:49 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+12
  * Fixes:
    + S6672778: G1 should trim task queues more aggressively during
      evacuation pauses
    + S8154204: [TESTBUG] Update DefaultUseWithClient test to
      handle client-less builds
    + S8174994: SA: clhsdb printmdo throws WrongTypeException when
      attached to a process with CDS
    + S8179071: Month value is inconsistent between CLDR and Java
      in some locales
    + S8179887: Build failure with glibc >= 2.24: error: 'int
      readdir_r(DIR*, dirent*, dirent**)' is deprecated
    + S8181157: CLDR Timezone name fallback implementation
    + S8182731: Odd handling of -XX:-UseAppCDS and
      -XX:SharedArchiveFile.
    + S8191471: Elastic TLABs for G1
    + S8191798: redo nested ThreadsListHandle to drop Threads_lock
    + S8193213: Make the UseAppCDS option obsolete.
    + S8197959: [TESTBUG] Some (App)CDS tests require modification
      due to the removal of the Java EE and CORBA modules
    + S8197960: [TESTBUG] remove/modify runtime tests which use
      java ee or corba modules
    + S8199375: [TESTBUG] Open source vm testbase monitoring tests
    + S8199643: [TESTBUG] Open source common VM testbase code
    + S8200167: Validate more special case invocations
    + S8200235: Generalize jniFastGetField jobject/jweak resolve
    + S8200466: Revisit the setting of _transitive_interfaces in
      InstanceKlass
    + S8200478: For boxing conversion javac uses Long.valueOf which
      does not guarantee caching according to its javadoc
    + S8201367: assert(current != first_mem) failed: corrupted
      memory graph in superword code
    + S8201509: Zero: S390 31bit atomic_copy64 inline assembler is
      wrong
    + S8201542: Remove unused _gc_timer field in GCMemoryManager
    + S8201543: Modularize C1 GC barriers
    + S8201545: InetAddress.getByName/getAllByName should clarify
      empty String behavior
    + S8201622: Reduce unnecessary Package.complete() calls in
      javadoc
    + S8201634: Random seedUniquifier uses incorrect LCG
    + S8201650: Move iteration order randomization of unmodifiable
      Set and Map to iterators
    + S8201786: Modularize interpreter GC barriers: leftovers for
      ARM32
    + S8201817: Taglet.init should be called with the "primary"
      doclet
    + S8202082: Remove explicit CMS checks in
      CardTableBarrierSetAssembler
    + S8202105: Console echo is disabled when exiting jshell
    + S8202130: [TESTBUG] Some appcds regression test cases fail
      with "Error: VM option 'PrintSystemDictionaryAtExit' is
      notproduct and is available only in debug version of VM"
    + S8202140: TLAB logging is not correct for G1
    + S8202150: [REDO] Split globals.hpp to factor out the Flag
      class
    + S8202179: Compilation fails with assert(n->is_expensive())
      failed: expensive nodes with non-null control here only
    + S8202186: AArch64: Debug build VM crashes with
      PrintC1Statistics option
    + S8202200: set INCLUDE_SA to false on s390x by default
    + S8202204: Rename hotspot runtime jtreg constantPool
      ConstantPool directories
    + S8202230: Provide accessors for JNIHandles storage objects
    + S8202261: (fc) FileChannel.map and RandomAccessFile.setLength
      should not preallocate space
    + S8202273: [AOT] Graal does not support the CMS collector
    + S8202284: FileChannel and FileOutpuStream variants of
      AtomicAppend should fail silently on macOS >= 10.13
    + S8202324: Avoid loading FileInput-/OutputStream$AltFinalizer
    + S8202325: [aix] disable warnings-as-errors by default
    + S8202330: Add Unreferenced{FOS,FIS,RAF}ClosesFd to problem
      list
    + S8202334: Update javax.lang.model.util visitors for 11
    + S8202364: Add GCConfig::hs_err_name() to avoid GC-specific
      code in error reporting
    + S8202366: Add macro for common loop in GCConfig
    + S8202367: AIX build broken after JDK-8201543
    + S8202372: Diagnostic with incorrect line info generated when
      compiling lambda expression
    + S8202373: Forcing eager initialization of CHM$ReservationNode
      avoids deoptimization
    + S8202379: ARM32 is broken after JDK-8201543 (Modularize C1 GC
      barriers)
    + S8202381: (Solaris) SIGBUS in # V [libjvm.so+0xcee494]
      jni_GetIntField+0x224
    + S8202382: Filter docs modules
    + S8202383: Custom extensions for jvmti doc
    + S8202397: Typo in X-Buffer javadoc
    + S8202398: Optimize Arrays.deepHashCode
    + S8202399: [C1] LIRGenerator::do_CheckCast needs to exclude
      is_invokespecial_receiver_check() when using PatchAlot
    + S8202417: [TESTBUG] Broken hard-coded dependency in
      serviceability/sa/ClhsdbJhisto.java
    + S8202418: Remove explicit CMS checks in
      CardTableBarrierSetAssembler: ARM32 leftovers
    + S8202419: Avoid creating Permission constants early
    + S8202423: Small HTTP Client refresh
    + S8202425: [s390] C2: Wrong unsigned comparison with 0
    + S8202452: Delete test files missed from commit for
      8193213 & 8182731.
    + S8202484: Unused field in TimeZone
    + S8202505: ctw2 tasks are timing out in hs-tier3
    + S8202507: Remove IO and NIO AtomicAppend tests from problem
      list
    + S8202520: JShell tests: move intermittently failing tests to
      tier2

-------------------------------------------------------------------
Mon May  7 08:29:41 UTC 2018 - guillaume.gardet@opensuse.org

- Remove armv6 and armv7 overwrite conditions in _constraints to
  avoid OOM errors

-------------------------------------------------------------------
Fri Apr 27 08:01:39 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+11
  * Fixes:
    + S6341887: java.util.zip: Add ByteBuffer methods to
      Inflater/Deflater
    + S6805750: Improve handling of Attributes.Name
    + S8025091: VisibleMemberMap.java possible performance
      improvements
    + S8081519: Split globals.hpp to factor out the Flag class
    + S8144806: sun/security/tools/keytool/standard.sh fails
      intermittently at deleting x.jks
    + S8154528: Reclaim regions emptied by marking in Remark pause
    + S8157543: java/nio/channels/Selector/SelectAndCancel.java
      fails intermittently
    + S8161991: java/nio/channels/AsynchronousSocketChannel/Basic.java
      failed due to RuntimeException: WritePendingException expected
    + S8171404: java/nio/channels/AsynchronousSocketChannel/Basic.java
      failed with "AsynchronousCloseException expected"
    + S8178105: Switch mark bitmaps during Remark
    + S8178825: unused variable threadObj in jvmci_counters_include
    + S8184693: add Pattern.isEmpty
    + S8187490: HotSpotGraalMBean should be moved to Graal
      management module
    + S8187496: Possible memory leak in
      java.apple.security.KeychainStore.addItemToKeychain
    + S8188105: Make -Xshare:auto the default for server VM
    + S8190227: Forward port 8188880 to JDK10CPU
    + S8192789: Avoid using AtomicReference in
      sun.security.provider.PolicyFile
    + S8193524: Redefining a method that removes use of 1 or more
      lambda expressions causes the JVM to hang
    + S8196071: Change G1 Full GC heap and thread sizing ergonomics
    + S8196325: GarbageCollectionNotificationInfo has same
      information for before and after
    + S8196433: use the new error diagnostic approach at javac.Main
    + S8196540: [Testbug] java/security/AccessController/
      /DoPrivAccompliceTest.java doesn't handle unrelated warnings
    + S8198756: Lazy allocation of compiler threads
    + S8198793: Add launcher support for preview features
    + S8198816: AbstractScriptEngine.getScriptContext creation of
      SimpleScriptContext is inefficient
    + S8198890: The standard doclet incorrectly produces wrong
      method signatures in certain cases.
    + S8199193: jshell tool: Add support for preview features
    + S8199519: Several GC tests fails with:
      java.lang.NumberFormatException: Unparseable number: "-"
    + S8199755: Update Graal
    + S8200101: sun/security/krb5/auto/Renewal.java fails
      intermittently
    + S8200196: [Graal] implement Object.notify/notifyAll intrinsics
    + S8200303: C2 should leverage profiling for
      lookupswitch/tableswitch
    + S8200426: Make G1 code use _g1h members
    + S8200450: Root cause analysis for JDK-8200366
    + S8200477: Integer dot product no longer autovectorised
    + S8200555: OopHandle should use Access API
    + S8200556: AArch64: assertion failure in slowdebug builds
    + S8200723: Suppress rs_length and predicted_cards sampling
      during mixed gcs
    + S8200730: Fix debug=gc+phases time tracking in Remark and
      Cleanup
    + S8201172: Parallelize Remset Tracking Update Before Rebuild
      phase
    + S8201226: missing JNIEXPORT / JNICALL at some places in
      function declarations/implementations
    + S8201259: Fix warning with VS2017 in jdk.pack
    + S8201281: Truncated error message with Incompatible : null
    + S8201315: (se) Allow SelectableChannel.register to be invoked
      while selection operation is in progress
    + S8201368: IfNode::fold_compares() may lead to incorrect
      execution
    + S8201369: Inet4AddressImpl_getLocalHostName reverse lookup on
      Solaris only
    + S8201466: Nashorn: defineProperty setters/getters on
      prototype object ignored with numeric property names
    + S8201487: Do not rebalance reference processing queues if not
      doing parallel reference processing
    + S8201490: Improve concurrent mark keep alive closure
      performance
    + S8201505: Use WeakHandle for ProtectionDomainCacheTable and
      ResolvedMethodTable
    + S8201510: Merge TwoStacksPlainSocketImpl into
      DualStackPlainSocketImpl [win]
    + S8201520: AsynchronousSocketChannel/Basic.java timeout
      intermitently
    + S8201527: Bump default value of G1RefProcDrainInterval
    + S8201536: configure fails compiler check due to bad -m32 flag
    + S8201537: Remove is_alive closure from
      Klass::is_loader_alive()
    + S8201540: [AIX] Extend the set of supported charsets in
      java.base
    + S8201556: Disallow reading oops in ClassLoaderData if
      unloading
    + S8201596: java.lang.ref.Reference processing total time
      logging broken
    + S8201597: AArch64: Update relocs for CompiledDirectStaticCall
    + S8201616: Hotspot crashes on linux-sparc after 8189941
    + S8201646: Introduce ReferenceDiscoverer interface
    + S8201647: Make initial clearing of CHeapBitMap optional
    + S8201649: Remove dubious call_jio_print in ostream.cpp
    + S8201766: Mark TimSortStackSize2.java as intermittently
      failing
    + S8201785: Make ModRefBarrierSetAssembler abstract on all
      platforms
    + S8201788: Number of make jobs wrong for bootcycle-images
      target
    + S8201794: [Graal] fix regressions from JDK-8187490
    + S8201799: Build failures after JDK-8195099 (Concurrent
      safe-memory-reclamation mechanism)
    + S8201800: Add support for adjusting heap addresses in a TLAB
    + S8201826: G1: Don't invoke WeakProcessor if mark stack has
      overflowed
    + S8201850: [AOT] vm crash when run test
      compiler/aot/fingerprint/SelfChangedCDS.java
    + S8202000: AIX build broken after JDK-8195099
    + S8202037: Split slow ctw_1 tests
    + S8202052: Disable warnings when building libawt with VS2017
    + S8202060: Add javax/net/ssl/DTLS/CipherSuite.java to
      ProblemList
    + S8202062: Put FileChannel and FileOutpuStream variants of
      AtomicAppend on problem list
    + S8202070: Cleanup code after JDK-8200450, JDK-8200366
    + S8202073: MetaspaceAllocationTest gtest shall lock during
      space creation
    + S8202074: Metaspace: If humongous chunk is added to
      SpaceManager, previous current chunk may not get retired correctly.
    + S8202075: Crash when running
      compiler/codecache/OverflowCodeCacheTest.java
    + S8202079: [s390]: Build failure w/o precompiled headers
    + S8202081: Introduce CollectedHeap::is_oop()
    + S8202091: Rename DualStackPlainSocketImpl to PlainSocketImpl
      [win]
    + S8202134: Non-PCH build for arm32 fails
    + S8202141: Unique symbols for .class
    + S8202151: [BACKOUT] Split globals.hpp to factor out the Flag
      class
    + S8202152: test/hotspot/jtreg/runtime/whitebox/WBStackSize.java
      fails
    + S8202154: Remove unused code in
      java.base/windows/native/libnet
    + S8202155: quarantine test com/sun/jdi/JdbExprTest.sh on all
      platforms
    + S8202157: remove the use of string keys at
      InapplicableMethodException
    + S8202164: Remove some unneeded BoolObjectClosure* is_alive
      parameters
    + S8202169: Reduce ctw_2 duration by parallelizing CtwRunner
      invocations
    + S8202184: Reduce time blocking the ClassSpecializer cache
      creating SpeciesData
    + S8202210: jlink uses little-endian for big-endian
      cross-compilation targets
    + S8202276: Update test/hotspot/jtreg/ProblemList-graal.txt
- Removed patch:
  * bootcycle_jobs.patch
    + Integrated upsteam

-------------------------------------------------------------------
Fri Apr 20 20:40:43 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+10 (April 2018 CPU)
  * Security fixes:
    + S8194238: Trying exceptions in MethodHandles (CVE-2018-2826,
      bsc#1090197)
    + S8194233: Improve support for array handles (CVE-2018-2825,
      bsc#1090196)
    + S8192025: Less referential references (CVE-2018-2814,
      bsc#1090032)
    + S8189997: Enhance keystore mechanisms (CVE-2018-2794,
      bsc#1090024)
    + S8189977: Improve permission portability (CVE-2018-2795,
      bsc#1090025)
    + S8189993: Improve document portability (CVE-2018-2799,
      bsc#1090029)
    + S8189989: Improve container portability (CVE-2018-2798,
      bsc#1090028)
    + S8189985: Improve tabular data portability (CVE-2018-2797,
      bsc#1090027)
    + S8189981: Improve queuing portability (CVE-2018-2796,
      bsc#1090026)
    + S8189969: Manifest better manifest entries (CVE-2018-2790,
      bsc#1090023)
  * Security-In-Depth fixes:
    + S8182362: Update CipherOutputStream Usage
    + S8183032: Upgrade to LittleCMS 2.9
    + S8189123: More consistent classloading
    + S8190478: Improved interface method selection
    + S8190877: Better handling of abstract classes
    + S8191696: Better mouse positioning
    + S8192030: Better MTSchema support
    + S8193409: Improve AES supporting classes
    + S8193414: Improvements in MethodType lookups
  * Fixes:
    + S8009632: (fs) FileStore.supportsFileAttributeView does not
      detect user_xattr enabled on ext4
    + S8049695: nsk/jdb/options/connect/connect003 fails with
      "Launched jdb could not attach to debuggee during 300000
      milliseconds"
    + S8057732: sun/jvmstat/monitor/MonitoredVm/
      /MonitorVmStartTerminate.java: Invalid PerfMemory size
    + S8078221: java/rmi/Naming/DefaultRegistryPort.java fails
      intermittently
    + S8151171: Bring g1ConcurrentMark files up to current coding
      conventions
    + S8152821: Merge jdk.internal.misc.JavaSecurityAccess and
      jdk.internal.misc.JavaSecurityProtectionDomainAccess shared
      secrets
    + S8175075: Add 3DES to the default disabled algorithm security
      property
    + S8180415: Rebuild remembered sets during the concurrent cycle
    + S8183238: Obsolete CheckEndorsedAndExtDirs and remove checks
      for lib/endorsed and lib/ext
    + S8184692: add Pattern.asMatchPredicate
    + S8186032: Disable XML Signatures signed with EC keys less
      than 224 bits
    + S8187472: AARCH64: array_equals intrinsic doesn't use
      prefetch for large arrays
    + S8189101: AARCH32 - 'minimal' build fails because CMS bits
      are referred unconditionally
    + S8189765: Improve error reporting for compiling against
      package not visible due to modules
    + S8191101: Show register content in hs-err file on assert
    + S8191358: Restore TSA certificate expiration check
    + S8193067: gc/g1/TestVerifyGCType.java still unstable
    + S8194259: keytool error: java.io.IOException: Invalid secret
      key format
    + S8194260: Point-to-point interface should be excluded from
      java/net/ipv6tests/*
    + S8194734: Handle to jimage file inherited into child
      processes (win)
    + S8194750: Console.readPassword does not save/restore tty
      settings
    + S8194812: Extend class-data sharing to support the module path
    + S8195099: Concurrent safe-memory-reclamation mechanism
    + S8195662: Add T6587786.java to problem list before
      JDK-8195589 is resolved
    + S8195972: Refactor oops in JNI to use the Access API
    + S8196289: Update src/java.desktop/share/legal/lcms.md for
      LCMS 2.9
    + S8196485: FromCardCache default card index can cause crashes
    + S8196516: libfontmanager must be built with LDFLAGS allowing
      unresolved symbols
    + S8196865: G1 log for active workers is wrong
    + S8197441: Signature#initSign/initVerify for an invalid
      private/public key fails with ClassCastException for SunPKCS11
      provider
    + S8197443: ArrayIndexOutOfBoundsException in
      UcryptoException.getError
    + S8197564: HTTP Client implementation
    + S8197569: Refactor eager reclaim for concurrent remembered
      set rebuilding
    + S8197570: Make rules for choosing collection set candidates
      more explicit
    + S8197573: Remove concurrent cleanup and secondary free list
      handling
    + S8197850: Calculate liveness in regions during marking
    + S8197928: Only enqueue deferred cards with references into
      regions that have a tracked remembered set during GC
    + S8197931: Null pointer dereference in Unique_Node_List::push
      of node.hpp:1510
    + S8197932: Better split work in rebuild remembered sets phase
    + S8197972: Always verify non-system classes during CDS dump
      time
    + S8198240: Allow cacerts test to pass when GTECyberTrust root
      expires
    + S8198313: Wrap holder object for ClassLoaderData in a
      WeakHandle
    + S8198335: java/awt/FullScreen/UninitializedDisplayModeChangeTest/
      /UninitializedDisplayModeChangeTest.java fails in headless mode
    + S8198393: Instrumentation.retransformClasses() throws
      NullPointerException when handling a zero-length array
    + S8198655: test/lib/jdk/test/lib/apps/LingeredApp shouldn't
      inherit cout/cerr
    + S8198691: CodeHeap State Analytics
    + S8198760: Move global lock SpaceManager::_expand_lock to
      MutexLocker.cpp
    + S8198908: Add JVM support for preview features
    + S8198915: [Graal] 3rd testcase of compiler/types/
      /TestMeetIncompatibleInterfaceArrays.java takes more than 10
      mins
    + S8198950: AArch64:
      org.openjdk.jcstress.tests.varhandles.DekkerTest fails
    + S8199007: ClassLoaderDataGraph::unload_list_contains() is
      wrong
    + S8199194: Add javac support for preview features
    + S8199326: Remove G1 gc time stamp logic
    + S8199360: Rework the support for the 'ignored' module options
      in CDS
    + S8199406: Performance drop with Java JDK 1.8.0_162-b32
    + S8199417: Modularize interpreter GC barriers
    + S8199619: Building HotSpot on Windows should define NOMINMAX
    + S8199627: Use "Per-Monitor V2" High DPI awareness for Windows
      10 v1703
    + S8199717: Avoid calculating primordial thread stack bounds on
      VM startup
    + S8199735: Mark word updates need to use Access API
    + S8199736: Define WIN32_LEAN_AND_MEAN before including
      windows.h
    + S8199742: Clean up state flags in G1CollectorState
    + S8199780: SetMemory0 and CopyMemory0 in unsafe.cpp need to
      resolve their operands
    + S8199781: Don't use naked == for comparing oops
    + S8199782: Fix compilation warnings detected by Solaris
      Developer Studio 12.6
    + S8199793: [Graal] runtime/CommandLine/
      /PrintTouchedMethods.java crashes with assertion "reference
      count underflow for symbol"
    + S8199813: SIGSEGV in ThreadsList::includes()
    + S8199850: Move parsing of VerifyGCType to G1
    + S8199918: Shorten names of CollectedHeap::Name members
    + S8199925: Break out GC selection logic from GCArguments to
      GCConfig
    + S8199927: Make WhiteBox more GC agnostic
    + S8199946: Move load/store and encode/decode out of oopDesc
    + S8200067: Add support for vpclmulqdq for crc32
    + S8200074: Remove
      G1ConcurrentMark::_concurrent_marking_in_progress
    + S8200078: [Graal] runtime/appcds/GraalWithLimitedMetaspace.java
      crashes in visit_all_interfaces
    + S8200091: [TESTBUG] Update jittester for jdk11
    + S8200105: Remove cyclic dependency between oop.inline.hpp and
      collectedHeap.inline.hpp
    + S8200106: Move NoSafepointVerifier out from gcLocker.hpp
    + S8200111: MallocArrayAllocator::free should not take a length
      parameter
    + S8200113: Make Access load proxys smarter
    + S8200126: [TESTBUG] Open source VM runtime signal tests
    + S8200149: The "com.sun.awt.AWTUtilities" class can be dropped
    + S8200168: Remove DONT_USE_REGISTER_DEFINES on Sparc
    + S8200169: Flatten G1Allocator class hierarchy
    + S8200187: Exclude 3 long-running tests from tier1
    + S8200195: serviceability/jvmti/FieldAccessWatch/
      /FieldAccessWatch.java crashes with
      "assert(thread->thread_state() == _thread_in_native) failed:
      coming from wrong thread state"
    + S8200197: Zero fails to build after 8200105
    + S8200202: Remove unused _boot_modules_array and
      _platform_modules_array from classLoader.*.
    + S8200203: Missing platform definitions for ia64
    + S8200227: [Graal] Test times out with Graal due to low
      compile threshold
    + S8200228: Change default value of HeapSizePerGCThread
    + S8200230: [Graal] Compilations should not be enqueued before
      Graal is initialized
    + S8200232: Build failures after JDK-8200106 (Move
      NoSafepointVerifier out from gcLocker.hpp)
    + S8200233: Simple G1 evacuation path performance enhancements
    + S8200234: Cleanup Remark and Cleanup pause code
    + S8200238: Reduce number of exceptions created when calling
      MemberName$Factory::resolveOrNull
    + S8200245: Zero fails to build on linux-ia64 due to
      ia64-specific cruft
    + S8200246: AIX build fails after adjustments of
      src/hotspot/share/trace/traceEventClasses.xsl
    + S8200251: AArch64::CPUFeature out of sync with
      VM_Version::Feature_Flag
    + S8200255: Remove G1CMTask::_concurrent
    + S8200261: Regression with JVM anonymous class
    + S8200276: Cleanup allocation.hpp includes
    + S8200290: Scratch buffer creation fails with
      "assert(!current_thread_in_native()) failed: must not be in
      native" on SPARC
    + S8200292: Move PushAndMarkVerifyClosure::do_oop_work to
      concurrentMarkSweepGeneration.cpp
    + S8200297: Build failures after JDK-8198691 (CodeHeap State
      Analytics)
    + S8200299: Non-PCH build for aarch64 fails
    + S8200302: ppc, s390 (non-pch) build errors
    + S8200305: Update gc,liveness output with remset state after
      rebuild remset concurrently changes
    + S8200343: Minor JViewport documentation typo
    + S8200360: MeetIncompatibleInterfaceArrays fails with
      "MeetIncompatibleInterfaceArrays0ASM.run() must be compiled at
      tier 0 !"
    + S8200362: G1Mux2Closure should disable implicit oop
      verification
    + S8200366: SIGSEGV in CodeHeapState::print_names()
    + S8200371: In g1, rename ConcurrentMarkThread to
      G1ConcurrentMarkThread
    + S8200374: Add
      ThreadsSMRSupport::verify_hazard_pointer_scanned() to verify
      threads_do().
    + S8200383: Can't build on SPARC Hotspot with code which use
      math functions
    + S8200384: jcmd help output should be sorted
    + S8200385: Eagerly reclaimed humongous objects leave mark in
      prev bitmap
    + S8200391: clean up test/hotspot/jtreg/ProblemList.txt
      (compiler related)
    + S8200423: Non-PCH build for x86_32 fails
    + S8200424: Windows build fails due to implicit jboolean to
      bool conversion
    + S8200429: Adjust object pinning interface on CollectedHeap
    + S8200438: Non-PCH x86_32 build failure: err_msg is not defined
    + S8200461: MeetIncompatibleInterfaceArrays test fails with
      -Xcomp
    + S8200468: Port the native GSS-API bridge to Windows
    + S8200524: AArch64: CPUFeature and Flag enums are not passed
      through JVMCI
    + S8200525: test java/awt/event/SequencedEvent/SequencedEventTest.java
      fails to compile
    + S8200526: Test sun/java2d/marlin/ClipShapeTest.java times out
    + S8200550: Xcode 9.3 produce warning -Wexpansion-to-defined
    + S8200607: Add missing include dependency in bitMap.hpp
    + S8200608: Build failures after JDK-8191101 (Show register
      content in hs-err file on assert)
    + S8200626: Restore history for g1ConcurrentMarkThread.*
    + S8200627: aarch32 - Broken build after JDK-8198949
    + S8200628: aarch32 - Broken build after JDK-8199809
    + S8200630: Globally suppress Visual Studio warning C4351
    + S8200697: Add utility for spin wait with fallback to
      yield/sleep
    + S8200719: Cannot connect to IPv6 host when exists any active
      network interface without IPv6 address
    + S8200735: Move CMS specific code from binaryTreeDictionary
      and freeList to CMS files
    + S8200736: Move CMSGCStats to the cms directory
    + S8200737: Move GC code out of
      Arguments::check_vm_args_consistency into GCArguments
    + S8200759: Move GC entries in vmStructs.cpp to GC specific
      files
    + S8201136: Move GC flags from globals.hpp to GC specific files
    + S8201167: Remove MacroAssembler::cmp_heap_oop on x86
    + S8201168: Move GC command line constraint functions to GC
      specific files
    + S8201171: Cleanup in g1CollectedHeap, change CamelCase to
      snake_case
    + S8201175: Move FilteringClosure::do_oop to genOopClosures
    + S8201185: AARCH64: bfm instruction encoding hits assert on
      zero register
    + S8201209: Separate out CMS specific functions into
      CMSCardTable
    + S8201212: Remove INCLUDE_ALL_GCS from OopStorage files
    + S8201213: Remove INCLUDE_ALL_GCS from
      memset_with_concurrent_readers
    + S8201217: Split specialized_oop_closures.hpp into GC specific
      files
    + S8201218: PPC64: Avoid use of yield instruction on spinlock
    + S8201227: Add ALL_GCS_ONLY
    + S8201240: Improve releasing native resources of
      BufImgSurfaceData.ICMColorData
    + S8201242: Include source file/line number when reporting
      native call stack on supported platforms
    + S8201244: Clean out unnecessary includes of heap headers
    + S8201247: Various cleanups in the attach framework
    + S8201265: Native memory leak in
      ClassLoader::add_to_exploded_build_list
    + S8201316: Move G1-related static members from JavaThread to
      G1BarrierSet
    + S8201318: Introduce GCThreadLocalData to abstract GC-specific
      data belonging to a thread
    + S8201321: NMT: Unnecessary re-recording thread stack and size
      when attaching listener to JavaThread
    + S8201330: Add java/lang/management/ThreadMXBean/
      /ThreadMXBeanStateTest.java to the ProblemList
    + S8201334: Move runtime/NMT/MallocStressTest.java to
      hotspot_tier3_runtime
    + S8201359: Incorrect header guards after JDK-8198949
      (Modularize arraycopy stub routine GC barriers)
    + S8201362: Remove CollectedHeap::barrier_set()
    + S8201365: Remove G1Policy::should_process_references()
    + S8201370: GC specific data is referred from common
      precompiled headers and defNewGeneration.cpp
    + S8201427: Fix Minimal VM builds on Linux x64
    + S8201430: [TESTBUG] Remove script from runtime/6626217
    + S8201442: objArrayOopDesc::atomic_compare_exchange_oop() must
      use obj+offset in HeapAccess call
    + S8201443: NoSuchMethodException JarFile.open when jar file is
      used in classpath
    + S8201450: Provide access to LogHandle tagset
    + S8201474: (so) Socket adaptor connect(InetAddress, timeout)
      succeeds when connection fails
    + S8201475: 8199417 breaks AIX and non-pch on s390 (and
      presumably aarch64)
    + S8201480: ISA/CPU feature detection code crashes on
      linux-sparc
    + S8201483: Make it possible to disable JVM features
    + S8201494: Avoid early initialization of java.nio.Bits
    + S8201495: [Zero] Reduce limits of max heap size for boot JDK
      on s390
    + S8201498: test/langtools/tools/javac/diags/CheckExamples.java
      6 errors occurred
    + S8201507: Generate alias entries in j.t.f.ZoneName from tzdb
      at build time
    + S8201508: Macosx builds fail in GenerateLinkOptData.gmk
    + S8201554: Disable failing tier1 test for JDK-8201498
    + S8201584: Fix configure on SLES 11 after 8201483
    + S8201591: JVM features with "-" in name is not correctly
      handled
    + S8201609: Split test/jdk/:tier2 to enable better parallel
      execution
- Removed patch
  * fix-arm-build.patch
    + Integrated upstream
- Modified patch:
  * memory-limits.patch
    + Rediff with changes in the right files


-------------------------------------------------------------------
Thu Apr 19 13:34:02 UTC 2018 - guillaume.gardet@opensuse.org

- Fix armv6 build with fix_armv6_build.patch

-------------------------------------------------------------------
Fri Apr 13 14:39:34 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+9
  * Fixes
    + S8071367: JMX: Remove SNMP support
    + S8164781: Pattern.asPredicate specification is incomplete
    + S8178867: tools/jlink/multireleasejar/
      /JLinkMultiReleaseJarTest.java failed to clean up files
    + S8180570: Refactor sun/security/mscapi shell tests to plain
      java tests
    + S8188897: java/rmi/registry/reexport/Reexport.java failed
      with Port already in use
    + S8189784: Parsing with Java 9 AKST timezone returns the
      SystemV variant of the timezone
    + S8190333: sun/security/ssl/X509KeyManager/PreferredKey.java
      failed with "Failed to get the preferable key aliases"
    + S8196200: Implement a navigation builder in javadoc
    + S8196724: Change macosx deployment target to 10.9
    + S8196750: [Testbug] tools/launcher tests need to tolerate
      unrelated warnings
    + S8196775: java/net/Socket/asyncClose/Race.java failed
      intermittently on Windows with ConnectException: Connection
      refused
    + S8197418: Move java/util/RandomAccess/ tests into OpenJDK
    + S8197531: Miscellaneous changes imported from jsr166 CVS
      2018-04
    + S8199539: Provide a standard way for the build to filter
      un-needed legal .md files
    + S8199608: Clean up LDFLAGS for libfontmanager
    + S8199744: Incorrect compiler message for ReceiverParameter in
      inner class constructor
    + S8199875: Require first parameter type of a condy bootstrap
      to be Lookup
    + S8200125: Fix some classloader/module typos
    + S8200127: Replace collection.stream().forEach() with
      collection.forEach()
    + S8200128: Fix some "annoations" typos
    + S8200131: Improve lazy init of InetAddress.canonicalHostName
      and NativeObject.pageSize
    + S8200134: Improve ModuleHashesBuilder
    + S8200152: KerberosString should use UTF-8 by default
    + S8200258: Improve CopyOnWriteArrayList subList code
    + S8200298: Unify all unix versions of libjsig/jsig.c
    + S8200358: Remove mapfiles for JDK executables
    + S8200359: (tz) Upgrade time-zone data to tzdata2018d
    + S8200458: (se) Readiness information previously recorded in
      the ready set not preserved
    + S8200520: forkjoin tasks interrupted after shutdown
    + S8200583: (se) Selector clean-up, part 4
    + S8200664: fix broken links in java.base docs
    + S8200706: Better cleanup for open/test/jdk/java/lang/
      /ProcessBuilder/DestroyTest.java
    + S8200727: linux-aarch64 profile should use bundled freetype
    + S8200728: Docs (Comparison of Stack and Deque methods) for
      Deque is not correct
    + S8200788: Optimal initial capacity of
      java.lang.VarHandle.AccessMode.methodNameToAccessMode
    + S8200792: PKCS12Attribute#hashCode is always constant -1
    + S8200888: typo in name of exception in @throws
    + S8201178: Remove sun.nio.cs.FastCharsetProvider
    + S8201179: Regression due loading
      java.nio.charset.StandardCharsets during bootstrap
    + S8201194: Handle local variable declarations in lambda
      deduplication
    + S8201221: JDK-8199608 introduced a build race on macosx
    + S8201222: JDK-8199539 broke the OpenJDK build
    + S8201236: Straighten out dtrace build logic
    + S8201246: Export native function to set platform encoding
    + S8201251: The tests for JDK-8187247 should be under
      test/langtools
    + S8201263: Trailing backslash in VS120COMNTOOLS leads to ugly
      error message when running tests
    + S8201267: Disable warnings for VS2017 to enable building
    + S8201320: Allow PrintFailureReports to be turned off
    + S8201327: Make Sensor deeply immutably thread safe
    + S8201328: SynthParser should use Boolean.parseBoolean
    + S8201348: ProblemList update for bugid associated with
      SSLSocketParametersTest.sh
    + S8201357: ALSA_CFLAGS is needed; was dropped in JDK-8071469
    + S8201396: fix broken links generated by javadoc doclet
    + S8201439: Enable linux-arm-vfp-hflt profile to be configured
      with jib again
    + S8201440: javac should create unique DynamicMethodSymbols at
      LambdaToMethod
- Modified patches:
  * java11-improved-fonts.patch
    + Rediff to changed context
  * fix-arm-build.patch
    + Use upstream fixes

-------------------------------------------------------------------
Wed Apr 11 08:32:38 UTC 2018 - fstrba@suse.com

- Modified patch:
  * fix-arm-build.patch
    + fix more duplicate commas in headers

-------------------------------------------------------------------
Fri Apr  6 10:58:01 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+8
  * Fixes
    + S4954348: JPGWriter.getNumThumbnailsSupported does not return
      -1 when passing null values
    + S8074286: Add getSelectedIndices() to ListSelectionModel
    + S8178370: [TEST_BUG]
      java/security/Signature/SignatureLength.java fails
    + S8191957: JFileChooser shows empty name for external drives
      shown under Desktop
    + S8193032: Remove terminally deprecated SecurityManager APIs
    + S8195649: reorganize tests for java.util.Optional
    + S8198314: javac hidden options violate standard syntax for
      options
    + S8198801: JShell: user exception chained cause not retained
    + S8198885: upgrade Marlin (java2d) to 0.9.1
    + S8198990: Move SwingSet2 from closed to OpenJDK
    + S8199176: Accessibility issues in java.base docs
    + S8199800: Optimize Boolean.parseBoolean(String)
    + S8199947: Rename HTML element id in ClassLoader javadoc to
      avoid name conflict with private elements
    + S8200200: test java/awt/image/ColorModel/Non_sRGBCMTest.java
      fails with open profiles
    + S8200257: (se) More Selector cleanup
    + S8200267: a.out created at top dir by Solaris build
    + S8200364: Remove unnecessary boxing via primitive wrapper
      valueOf(String) methods
    + S8200375: Change to GCC 7.3.0 for building Linux at Oracle
    + S8200469: Update link to license in Docs.gmk
    + S8200538: cl : Command line warning D9014 : invalid value
      '2220' for '/wd'
    + S8200586: Update JDK11 release date to 2018-09-25
    + S8200658: Fix incremental builds of hotspot on solaris
    + S8200696: Optimal initial capacity of
      java.lang.Class.enumConstantDirectory
    + S8200703: Problem list jdk/jshell/ExceptionsTest.java fails
      on windows

-------------------------------------------------------------------
Thu Apr  5 11:41:10 UTC 2018 - fstrba@suse.com

- Added patch:
  * fix-arm-build.patch
    + fix a duplicate comma in a header

-------------------------------------------------------------------
Tue Apr  3 11:57:22 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+7
  * Fixes:
    + S4912693: Behavior of null arguments not specified in Java
      Sound
    + S6686236: GIF native IIOMetadata assumes
      characterCellWidth/Height as 2bytes
    + S7031957: DIB header of type BITMAPV2INFOHEADER &
      BITMAPV3INFOHEADER is not supported in BMPImageReader
    + S7108280: JList.getSelectedValuesList fails if
      JList.setSelectionInterval larger than list
    + S7158623: Should an unfocusable maximized Frame be resizable
    + S8071282: remove misc dead code
    + S8071469: Cleanup include and exclude of sound native
      libraries
    + S8140359: get_locked_message_ext() should return Flag::MsgType
    + S8144300: http.nonProxyHosts value having wildcard * both at
      end and start are not honored
    + S8146201: [AOT] Class static initializers that are not pure
      should not be executed during static compilation
    + S8152974: AWT hang occurrs when sequenced events arrive out
      of sequence
    + S8153333: [REDO] STW phases at Concurrent GC should count in
      PerfCounte
    + S8159850: Remove unneeded parsing of optional-size when
      parsing array types
    + S8166642: serviceability/dcmd/framework/* timeout
    + S8170541: serviceability/jdwp/AllModulesCommandTest.java
      fails intermittently on Windows and Solaris
    + S8173070: Remove ValueObj class for allocation subclassing
      for runtime code
    + S8173100: AArch64: -XX:-UseOnStackReplacement does not work
      together with -XX:+TieredCompilation
    + S8175312: SA: clhsdb: Provide an improved heap summary for
      'universe' for G1GC
    + S8180410: ByteArrayOutputStream should not throw IOExceptions
    + S8180451: ByteArrayInputStream should override readAllBytes,
      readNBytes, and transferTo
    + S8191102: Incorrect include file use in classLoader.hpp
    + S8191418: List.of().indexOf(null) doesn't throw
      NullPointerException
    + S8191585: VM anonymous classes created during CDS dump time
      cause crash
    + S8191924: Adjust DelegatingClassLoader's metadata space
      sizing algorithm
    + S8191954: AArch64: disable UseCISCSpill in C2
    + S8193128: Reduce number of implementation classes returned by
      List/Set/Map.of()
    + S8193130: Bad graph when unrolled loop bounds conflicts with
      range checks
    + S8193266: AArch64: TestOptionsWithRanges.java SIGSEGV
    + S8193369: post_field_access does not work for some functions,
      possibly related to fast_getfield
    + S8193429: "assert(false) failed: GetModuleFileName failed
      (126)" in symbolengine.cpp
    + S8193434: [GRAAL] Graal classes are not loaded with
      -Xshare:dump
    + S8194054: [TESTBUG] Test runtime/CommandLine/
      /OptionsValidation/TestOptionsWithRanges.java failed with
      -1073740940 (FFFFFFFFC0000374)
    + S8194490: [JVMCI] Move `iterateFrames` to C++
    + S8194746: (fs) Add equivalents of Paths.get to Path interface
    + S8194759: Support caching class mirror objects.
    + S8194978: Javac produces dead code for try-with-resource
    + S8195095: Images are not scaled correctly in JEditorPane
    + S8195109: ServiceUtil::visible_oop is not needed anymore
    + S8195148: Collapse G1SATBCardTableModRefBS and
      G1SATBCardTableLoggingModRefBS into a single G1BarrierSet
    + S8196028: JMX: Not enough JDP packets received before timeout
    + S8196121: runtime/appcds/ClassLoaderTest.java fails silently
    + S8196294: LoopStripMiningIterShortLoop is set to zero by
      default
    + S8196337: Add commit methods that take all event properties
      as argument
    + S8196399: Formatting a decimal using locale-specific grouping
      separators causes ArithmeticException (division by zero).
    + S8196519: Incomplete classpath causes infinite recursion in
      Resolve.isAccessible
    + S8196590: Enable docker container related tests for linux
      AARCH64
    + S8196626: [Graal] runtime/appcds/UseAppCDS.java crashes with
      "VM thread using lock Heap_lock (not allowed to block on)"
    + S8196668: revisit test SunPackageAccess and
      GrantedSunPackageAccess
    + S8196876: OopStorage::assert_at_safepoint clashes with
      assert_at_safepoint macros in g1CollectedHeap.hpp
    + S8197235: src/hotspot/share/jvmci/jvmciCompilerToVM.cpp takes
      4 minutes to compile on windows
    + S8197405: Improve messages of AbstractMethodErrors and
      IncompatibleClassChangeErrors.
    + S8197429: Increased stack guard causes segfaults on x86-32
    + S8197554: Create test for SwingSet TableDemo
    + S8197595: Serialization javadoc should link to security best
      practices
    + S8197842: Remove unused macros VM_STRUCTS_EXT and VM_TYPES_EXT
    + S8197843: Remove unused method
      G1EvacuationRootClosures::create_root_closures_ext
    + S8197844: JVMTI GetLoadedClasses should use the Access API
    + S8197845: Remove unnecessary method
      G1CollectedHeap::create_g1_policy
    + S8197847: Remove unused file g1ParScanThreadState_ext.cpp
    + S8197852: Move G1DefaultPolicy into G1Policy
    + S8197944: Condy tests fails on Windows
    + S8198243: Add build time check for global operator new/delete
      in object files
    + S8198358: Align organization of TwoStacksPlainSocketImp with
      DualStackPlainSocketImpl [win]
    + S8198423: Improve metaspace chunk allocation
    + S8198424: Remove G1AllocationContext
    + S8198430: Remove G1Allocator extension point
    + S8198431: Remove G1FullCollector extension point
    + S8198432: Remove Thread extension point
    + S8198433: Remove WhiteBox extension point
    + S8198445: Access API for primitive/native arraycopy
    + S8198447: Remove ClassLoaderExt::check().
    + S8198510: Enable UseDynamicNumberOfGCThreads by default
    + S8198546: [Redo] JDK-8196883 G1RemSet::refine_card_concurrently
      doesn't need to check for cards in collection set
    + S8198552: Multiple javac plugins do not work at the same time.
    + S8198571: [JVMCI] must not install wide vector code unless
      runtime supports it
    + S8198591: compiler/aot/fingerprint tests should be moved to
      open
    + S8198608: Improvements to command-line flags printing
    + S8198649: Switch AWT/Swing's default GTK version to 3
    + S8198652: Stop linking with -base:0x8000000 on Windows
    + S8198753: (dc) DatagramChannel throws unspecified exceptions
    + S8198789: [TESTBUG] CTW of java.base and java.desktop takes
      long time
    + S8198794: Hotspot crash on Cassandra 3.11.1 startup with
      libnuma 2.0.3
    + S8198796: Create test case for CDS + condy
    + S8198826: -XX:+VerifyStack fails with fatal error:
      ExceptionMark constructor expects no pending exceptions
    + S8198833: TestMemoryAwareness Docker container fails with too
      small maximum heap
    + S8198845: Missing resource mark results disassembling
      generated code failure in hs error report
    + S8198894: [PPC64] More generic vector CRC implementation
    + S8198895: Compilation errors in java.desktop with VS 2017
    + S8198896: Remove dead code: cardTableModRefBSForCTRS.hpp
    + S8198897: Compilation errors in jdk.accessibility with VS 2017
    + S8198906: JDK-8196882 breaks VS2013 Win32 builds
    + S8198924: [Graal] java/lang/StackWalker/LocalsAndOperands.java
      timeouts with Graal
    + S8198926: Move ClassLoaderData::_dependencies to
      ClassLoaderData::_handles
    + S8198948: Remove unused parameter evacuation_info from
      G1CollectedHeap::evacuate_collection_set
    + S8198949: Modularize arraycopy stub routine GC barriers
    + S8198950: AArch64:
      org.openjdk.jcstress.tests.varhandles.DekkerTest fails
    + S8198957: Remove unused function
      ArgumentsExt::set_gc_specific_flags
    + S8198969: Update Graal
    + S8198987: [Graal] compiler/intrinsics/sha/sanity tests fail
      on macos with Graal as JIT
    + S8198997: Cache normalized/resolved user.dir property
    + S8199010: attachListener.hpp: Fix potential null termination
      issue found by coverity scans
    + S8199012: SEGV in jni_DetachCurrentThread during VM shutdown
    + S8199024: Remove unneccessary protected and virtual modifiers
      from G1CollectedHeap
    + S8199027: Make protected members private in G1Policy
    + S8199050: reenable concurrent execution of compiler tests
    + S8199066: [JVMCI] EagerJVMCI option should also initialize
      the JVMCI compiler
    + S8199133: [BACKOUT] NMT: Enhance thread stack tracking
    + S8199137: StringInternSync test crashes in exit verification
    + S8199212: [TESTBUG] don't run compiler/aot tests with -Xcomp
    + S8199219: Build failures after JDK-8195148 (Collapse
      G1SATBCardTableModRefBS and G1SATBCardTableLoggingModRefBS
      into a single G1BarrierSet)
    + S8199220: Zero build broken after 8195103, 8191102 and 8189871
    + S8199243: aarch32: ARM 32 build broken after 8165929
    + S8199263: Split interfaceSupport.hpp to not require including
      .inline.hpp files
    + S8199264: Remove universe.inline.hpp to simplify include
      dependencies
    + S8199272: Broken assertion in ClassLoaderData::remove_handle
    + S8199275: Fix inclusions of allocation.inline.hpp
    + S8199278: Javadoc search results does not link to anchors on
      a page
    + S8199282: Remove ValueObj class for allocation subclassing
      for gc code
    + S8199283: Remove ValueObj class for allocation subclassing
      for compiler code
    + S8199319: Remove handles.inline.hpp include from
      reflectionUtils.hpp
    + S8199323: hsdis could not be loaded which are located on long
      path
    + S8199328: Fix unsafe field accesses in heap dumper
    + S8199342: The constant pool forgets it has a Dynamic entry if
      there are overpass methods
    + S8199356: Fix hotspot to allow stdlib to use libc++ and to
      allow changing the deployment target to 10.9
    + S8199421: Add support for vector popcount
    + S8199422: Hotspot build is broken after push of 8197235
    + S8199425: JTReg failure:
      runtime/stringtable/StringTableVerifyTest.java
    + S8199430: Rename MetaspaceAux to something more meaningful
    + S8199431: Split up class Metaspace into a static and a
      non-static part
    + S8199432: metaspace: fix wrong comment and condition in
      SpaceManager::verify()
    + S8199465: {@docRoot} references need to be updated to reflect
      new module/package structure
    + S8199467: Compilation Errors in libinstrument Reentrancy.c
      with VS2017
    + S8199472: Fix non-PCH build after JDK-8199319
    + S8199489: [TESTBUG] don't run CTW tests with -Xcomp
    + S8199511: Do not generate g1_{pre|post}_barrier_slow_id
      without CardTable-enabled barrier set
    + S8199516: Remove dead code overlooked during Full GC work
    + S8199518: test/hotspot/jtreg/runtime/SelectionResolution
      tests take a lot longer to run with fastdebug after JDK-8198423
    + S8199532: [TESTBUG] AbstractMethodErrorTest.java test failed
      with -Xcomp
    + S8199533: ProblemList tests failing after JDK-8153333
    + S8199557: Assert in fromTonga/vm/runtime/defmeth/scenarios/
      /Stress_noredefine/TestDescription.java
    + S8199559: objArrayKlass::oop_iterate() and friends must use
      base_raw() instead of base()
    + S8199561: Fix two typos in the JVMTI documentation
    + S8199603: Build failures after JDK-8199421 "Add support for
      vector popcount"
    + S8199604: Rename CardTableModRefBS to CardTableBarrierSet
    + S8199620: Support for JNI object pinning
    + S8199624: [Graal] Blocking jvmci compilations time out
    + S8199656: Make slow metaspace verifications switchable in
      debug builds
    + S8199667: Unify metaspace list index handling and
      reinstantiate ChunkManager listindex gtest
    + S8199672: ClassCastException is thrown by java.util.Formatter
      when an NumberFormatProvider SPI is used.
    + S8199674: Improve G1 Full GC array marking
    + S8199685: Access arraycopy build failure with GCC 7.3.1
    + S8199696: Remove Runtime1::arraycopy
    + S8199698: Change 8199275 breaks template instantiation for
      xlC (and potentially other compliers)
    + S8199705: Docs.gmk needs to be updated to remove the -html5
      option
    + S8199716: Unused AdjustKlassClosure in psParallelCompact.hpp
    + S8199728: Remove oopDesc::is_scavengable
    + S8199739: Use HeapAccess when loading oops from static fields
      in javaClasses.cpp
    + S8199741: NMT: Tag safepoint polling pages
    + S8199752: NMT: Memory allocated by Unsafe.allocateMemory
      should be tagged as mtOther
    + S8199756: Simplify language, country, script, and variant
      property initialization
    + S8199762: JShell API: Failed to detect override when snippet
      to be overridden has been changed before
    + S8199773: (bf) XXXBuffer:compareTo method is not working as
      expected
    + S8199777: Deprecate -XX:+AggressiveOpts
    + S8199784: PhaseIdealLoop::place_near_use() might return wrong
      control with loop strip mining
    + S8199789: Emit a warning message when t2k is selected via
      system property
    + S8199791: (se) More Selector cleanup
    + S8199809: Don't include frame.inline.hpp and other.inline.hpp
      from .hpp files
    + S8199843: Optimize Integer/Long.highestOneBit()
    + S8199870: colorimaging.md needs to remove mention of KCMS
    + S8199880: runtime/appcds/condy/CondyHelloTest.java missing at
      requires vm.cds
    + S8199886: gc/cslocker/TestCSLocker.java crashes
    + S8199896: [Graal] build Graal on all x86 platforms
    + S8199902: {@docRoot} references need to be updated to reflect
      new module/package structure
    + S8199910: Compiler crashes with -g option and variables of
      intersection type inferred by `var`
    + S8199924: Solaris: Correctly enqueue null arguments of attach
      operations
    + S8200071: Fix test/hotspot/jtreg/ProblemList-graal.txt
    + S8200072: Remove un-needed qualified export from java.base to
      java.desktop
    + S8200116: ConstructInflaterOutput, ConstructDeflaterInput
      still spamming test logs
    + S8200118: [TESTBUG] String concat tests should test
      toString() application order
    + S8200122: Remove unused field Thread.threadQ
    + S8200123: Replace Thread.init with telescoping constructor
    + S8200124: Various cleanups in jar/zip
    + S8200129: Remove D3D Performance Counter.
    + S8200135: test/hotspot/jtreg/compiler/jvmci/compilerToVM/
      /GetExceptionTableTest.java is failing after JDK-8194978
    + S8200136: Problem list test/hotspot/jtreg/compiler/jvmci/
      /compilerToVM/GetExceptionTableTest.java
    + S8200174: compare.sh improvements
    + S8200178: Remove mapfiles for JDK native libraries
    + S8200179: (se) More Selector cleanup
    + S8200180: fix a typo in run-test framework documentation
    + S8200181: Remove superflous non-IPv4 code from
      Java_java_net_TwoStacksPlainSocketImpl_socketListen
    + S8200198: javah man pages were not removed by JDK-8191054
    + S8200199: javac suggests to use var even when var is used
    + S8200213: Configure broken on MIPS
    + S8200215: 17th loop of "let foo = ''"; throws ReferenceError
    + S8200229: Simplify building of libjsig
    + S8200241: [TESTBUG] java/lang/String/concat/ tests should not
      force source/target = 9 anymore
    + S8200256: java/nio/channels/AsynchronousChannelGroup/Basic.java
      fails intermittently
    + S8200289: Reduce number of exceptions created when calling
      Lookup::canBeCached
    + S8200301: deduplicate lambda methods
    + S8200304: TwoStacksPlainDatagramSocketImpl and socket cleaner
    + S8200310: Avoid charset lookup machinery in
      java.nio.charset.StandardCharsets
    + S8200355: local variable inference regression test generates
      classfile in test folder
    + S8200357: Inline SoundLibraries.gmk into Lib-java.desktop.gmk
    + S8200409: jdk11 nightly solaris sparc build failure
    + S8200449: ReadAllReadNTransferTo fails occasionally
- Modified patch:
  * system-pcsclite.patch
    + Rediff to changed context

-------------------------------------------------------------------
Fri Mar 23 18:37:43 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+6
  * Fixes:
    + S8186228: sun/security/krb5/auto/KdcPolicy.java fails with
      "java.lang.Exception: Does not match. Output is
      c30000c30000c30000"
    + S8193033: remove terminally deprecated
      sun.misc.Unsafe.defineClass
    + S8196298: Add null Reader and Writer
    + S8199437: Improve diagnostic system assertion message in
      com.sun.net.httpserver impl
    + S8199682: Clean up building the saproc library
    + S8199749: Debug symbols are not copied to exploded image on
      Mac
    + S8199768: jdk/test/lib/compiler/CompilerUtils.java needs to
      provide more control over compilation
    + S8199792: Wrong license header in XMLLimitAnalyzer.java
    + S8199858: solaris-x86_64 : unpack200 fails linking with SS12u4
    + S8199862: Examine ProxyBuilder::referencedTypes startup cost
    + S8199865: Avoid initializing ShortCache in ProxyGenerator
    + S8199869: Missing copyright headers in nashorn source code
    + S8199884: JDK-8199749 broke build with make 3.81

-------------------------------------------------------------------
Tue Mar 20 06:51:13 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+5
  * Fixes:
    + S8160767: [TEST_BUG]
      java/awt/Frame/MaximizedToIconified/MaximizedToIconified.java
    + S8182684: Further clarify InputStream#available()
    + S8183554: Add constructors with Charset parameter for
      FileReader and FileWriter
    + S8187635: On Windows Swing changes keyboard layout on a
      window activation
    + S8188240: Reflection Proxy should skip static methods
    + S8189230: JDK method:
      java.lang.Integer.numberOfLeadingZeros(int) can be optimized
    + S8190347: [TESTBUG] Test javax/swing/JWindow/
      /ShapedAndTranslucentWindows/TranslucentJComboBox.java fails
    + S8190767: if JFrame is maximized on OS X, all new JFrames
      will be maximized by default
    + S8193017: Import freetype sources into OpenJDK source tree
    + S8193584: (testbug) TestSocketFactory fails intermittently
      with ConcurrentModificationException
    + S8194767: Regression automated Test
      'javax/swing/JEditorPane/6917744/bug6917744.java' fails
    + S8194943: Regression automated test 'open/test/jdk/javax/
      /swing/JInternalFrame/8020708/bug8020708.java' fails
    + S8195738: scroll poistion in ScrollPane is reset after
      calling validate()
    + S8196435: Regression automated Test 'java/awt/Mouse/
      /GetMousePositionTest/GetMousePositionWithOverlay.java' fails
    + S8196748: tools/jar tests need to tolerate unrelated warnings
    + S8197785: javax.accessibility.AccessibleBundle will reload
      the ResourceBundle for every call to toDisplayString
    + S8198406: Test TestAATMorxFont is unstable
    + S8198605: Touch keyboard is shown for a non-focusable text
      component
    + S8198606: Touch keyboard does not hide, when a text component
      looses focus
    + S8198613: Test cases result in failure or timeout when run
      with OpenGL backend
    + S8198777: JList.getPreferredScrollableViewportSize(): fix
      mistake in doc for height calc
    + S8198889: Clarify the throwing of exceptions from
      ConstantBootstraps.invoke
    + S8198922: Provide instrumentation for
      sanity/client/SwingSet/src/ButtonDemoScreenshotTest.java
    + S8198989: Provide more diagnostic IAE messages
    + S8199009: test/jdk/java/util/Locale/SoftKeys.java fails with
      OutOfMemoryError
    + S8199022: New failures should be added to ProblemList
    + S8199215: Re-examine getFreePort method in test
      infrastructure library
    + S8199258: BigInteger.bitLength() should explicitly specify
      behavior when the value is zero
    + S8199329: Remove code that attempts to read bytes after
      connection reset reported
    + S8199420: Update javadoc tags in java.lang.System and related
    + S8199423: Create builds-infra Mach5 job
    + S8199428: install-file macro fails on filenames with space on
      Solaris
    + S8199443: Nashorn multithread bottleneck with "use strict"
    + S8199451: Create linux-aarch64 cross-compilation devkit, and
      fix cross-compilation
    + S8199453: Enable link-time generation of constructor forms
    + S8199462: Use Reference.reachabilityFence in direct
      ByteBuffer methods
    + S8199464: Remove remaining vestiges of
      Java_sun_reflect_Reflection_getCallerClass
    + S8199469: Disable generate-jli-classes when building
      interim-image
    + S8199470: Remove unused property file.encoding.pkg
    + S8199471: Enable generation of callSiteForms at link time
    + S8199473: Support Visual Studio BuildTools with VS2017
    + S8199483: Clean up some non-standard LDFLAGS usage
    + S8199606: Set -lc as global LIBS on solstudio
    + S8199611: (se) Minor selector implementation clean-up
    + S8199616: Fix @module declarations in tier1 tests
    + S8199636: Unify naming for jaas_unix and jaas_nt
    + S8199639: Introduce SetupJdkLibrary and SetupJdkExecutable
    + S8199640: Split up BUILD_LIBKRB5 into the two, unrelated
      compilations it consists of
    + S8199647: java/util/Locale/SoftKeys.java fails with
      OutOfMemoryError again
    + S8199668: make/lib cleanup
    + S8199681: Remove boilerplate code from creating native jtreg
      tests
    + S8199745: JDK-8199668 introduced a build race on macosx
- Modified patches:
  * system-pcsclite.patch
  * java10-improved-fonts.patch -> java11-improved-fonts.patch
    + Rediff to changed context

-------------------------------------------------------------------
Tue Mar 13 07:05:14 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+4
  * Fixes:
    + S4993841: (str) java.lang.Character should have a
      toString(int) method
    + S5076761: JList.setSelectedValue(null, ...) doesn't do
      anything
    + S6372077: JarFile.getManifest() should handle manifest
      attribute name 70 bytes
    + S8041626: Shutdown tracing event
    + S8129569: [TEST_BUG] Test java/awt/Frame/
      /MaximizedToUnmaximized/MaximizedToUnmaximized.java fails
    + S8137326: Methods for comparing CharSequence, StringBuilder,
      and StringBuffer
    + S8148871: Possible wrong expression stack depth at deopt point
    + S8153945: Track if log configuration has changed during
      runtime
    + S8168722: Unified Logging configuration output needs
      simplifying
    + S8169358: httpserver does not close connections when
      RejectedExecutionException occurs
    + S8170976: [TESTBUG] LogTestFixture does not restore previous
      logging state
    + S8171000: Robot.createScreenCapture() crashes in wayland mode
    + S8182765: HTML5 must be the default javadoc codegen mode in
      the near future
    + S8186513: [TESTBUG] javax/swing/JInternalFrame/8160248/
      /JInternalFrameDraggingTest.java
    + S8187066: -Xlog:help "=debug" example is not quite accurate
    + S8187653: Lock in CoderResult.Cache becomes performance
      bottleneck
    + S8187950: javax.lang.model APIs throws CompletionFailure or a
      subtype of CompletionFailure.
    + S8190346: improve unified JVM logging help message and
      warnings
    + S8190679: java/util/Arrays/TimSortStackSize2.java fails with
      "Initial heap size set to a larger value than the maximum heap
      size"
    + S8191139: Remove deprecated javax.security.auth.Policy API
    + S8191369: NMT: Enhance thread stack tracking
    + S8191421: Deprecate PrintSafepointStatistics,
      PrintSafepointStatisticsTimeout and
      PrintSafepointStatisticsCount options
    + S8193262: JNI array not released in libsunmscapi
      convertToLittleEndian
    + S8193660: Check SOURCE line in "release" file for closedjdk
    + S8194085: Obsolete the deprecated SafepointSynchronize flags
      and remove related code
    + S8194296: Check copyright of files in make/langtools/tools
    + S8194870: Some regression tests throw NPE exception on a
      specific Solaris 11.2 sun4v sparc machine
    + S8195065: runtime/appcds/ProhibitedPackage.java intermittent
      failure
    + S8195131: Dead code removal for changes present in JDK-8176795
    + S8195142: Refactor out card table from CardTableModRefBS to
      flatten the BarrierSet hierarchy
    + S8195632: [Graal] Introduce EagerJVMCI flag to force eager
      JVMCI initialization
    + S8196064: AArch64: Merging ld/st into ldp/stp in
      macro-assembler
    + S8196133: JShell crashes when attempting to use bad source
      file in class path
    + S8196196: Headful tests should not be run in headless mode
    + S8196322: [macosx] When the screen menu bar is used, clearing
      the default menu bar should permit AWT shutdown
    + S8196338: [TEST_BUG] sanity/client/SwingSet/src/
      /TextFieldDemoTest.java Failed with timeout
    + S8196868: AARCH64: ld/st instructions hit guarantee assert
      while using sp
    + S8196882: VS2017 Hotspot Defined vsnprintf Function Causes
      C2084 Already Defined Compilation Error
    + S8197408: Bad pointer comparison and small cleanup in
      os_linux.cpp
    + S8197453: Add support of extra problem list
    + S8197482: Make Jemmy ComponentChooser lambda friendly
    + S8197499: RepaintManager does not increase double buffer
      after attaching a device with higher resolution
    + S8197533: Move javax.transaction.xa  to its own module
    + S8197538: Remove mention of hotjava paths in MimeTable.java
    + S8197546: Fix for 8171000 breaks Solaris + Linux builds
    + S8197549: Implement a new method similar to waitState() on
      Operator which run the check on event queue
    + S8197594: String#repeat
    + S8197808: Test java/awt/Dialog/MakeWindowAlwaysOnTop/
      /MakeWindowAlwaysOnTop.java fails on Windows
    + S8197841: Remove unused function Universe::create_heap_ext
    + S8197864: VS2017 (C4334) Result of 32-bit Shift Implicitly
      Converted to 64 bits
    + S8197926: java/awt/dnd/ImageTransferTest/ImageTransferTest.java
      doesnt close the windows in HiDPI setting
    + S8198004: javax/swing/JFileChooser/6868611/bug6868611.java
      throws error
    + S8198005: javax/swing/JFileChooser/7199708/bug7199708.java
      throws error
    + S8198252: Null pointer dereference in fold_compares_helper
    + S8198253: ThreadInfo.from(CompositeData) incorrectly accepts
      CompositeData with missing JDK 6 attributes
    + S8198293: AARCH64 - Add CPU detection code for Cavium Thunder
      X2
    + S8198302: VS2017 (C4477) java.base/windows/native/libnet/
      /NetworkInterface_winXP.c incorrect printf format strings
    + S8198304: VS2017 (C4838, C4312) Various conversion issues
      with gtest tests
    + S8198312: VS2017: Upgrade HOTSPOT_BUILD_COMPILER in
      vm_version.cpp
    + S8198333: ProblemList should be updated for headless mode
    + S8198474: Move JNIHandles::resolve into jniHandles.inline.hpp
    + S8198554: Add fuzzy matching for log levels and tags when
      parsing -Xlog
    + S8198628: further simplifications to lambda classification at
      JavacParser
    + S8198640: VS2017 (LNK4281) Link Warning Against Missed ASLR
      Optimization
    + S8198693: Update ProblemsList for mac
    + S8198697: Simplify initialization of platform encoding
    + S8198703: Missing #include "gc/shared/cardTableModRefBS.hpp"
      in graphKit.hpp
    + S8198724: Refactor FLAGS handling in configure
    + S8198750: [s390+x86_32+aarch64] Fix build after jdk-8195142
    + S8198810: URLClassLoader does not specify behavior when URL
      array contains null
    + S8198821: fix test methods access for test
      java/text/Normalizer/NormalizerAPITest.java
    + S8198825: Resolve missing review feedback for JDK-8170976
    + S8198833: TestMemoryAwareness Docker container fails with too
      small maximum heap
    + S8198834: (ch) Enable java/nio/channels/spi/SelectorProvider/
      /inheritedChannel/InheritedChannelTest.java on linux-x64
    + S8198841: Thread.interrupt should set interrupt status while
      holding blockerLock
    + S8198844: Clean up GensrcX11Wrappers
    + S8198859: Use elfedit to silence linker warnings on solaris
    + S8198862: Stop doing funky compilation stuff for dtrace
    + S8198887: JDK-8168722 broke the build on macosx
    + S8198888: Reduce string allocation churn in
      InvokerBytecodeGenerator
    + S8198898: Compilation errors in jdk.crypto.mscapi with VS 2017
    + S8198899: Compilation errors in java.prefs with VS 2017
    + S8198928: (so) SocketChannel connect may deadlock if closed
      at around same time that connect fails
    + S8198931: remove java.xml.bind module dependency for
      com/sun/jndi tests
    + S8198933: Update JDI tests to pass valid URL[]
    + S8198955: String#repeat loop optimization
    + S8198966: To make CoderResult.Cache.cache final and allocate
      it eagerly
    + S8198970: jnu_util.c compilation error on Solaris
    + S8199015: (se) SocketChannelImpl.translateXXXOps access
      channel state without synchronization
    + S8199018: Test crypto provider not registering
    + S8199052: Configure broken on aarch64
    + S8199103: Can't use COMPARE_BUILD with PATCH from custom root
    + S8199118: Filtering of filename for microsoft CL broken on
      newer Cygwin
    + S8199120: (so) SocketChannelImpl read/write don't need
      stateLock when channel is configured non-blocking
    + S8199125: --disable-warnings-as-errors does not work for
      native jtreg test code
    + S8199152: Configure broken on arm32
    + S8199154: Accessibility issues in jdk.security.auth
    + S8199197: Set _NT_SYMBOL_PATH when running tests on windows
    + S8199198: Remove unused functions in jdk.crypto.mscapi native
      code
    + S8199224: Refactor add_native_source in SetupNativeCompilation
    + S8199236: Nashorn uses deprecated HTML tags in Javadoc
    + S8199266: Update boot and build jdk requirements in configure
    + S8199327: nuke var type name after a lambda has been accepted
    + S8199331: Don't limit debug information for fastdebug JDK
      native libraries
    + S8199338: Use -g0 on solstudio also for compiling C programs
    + S8199339: JDK-8198859 broke solaris x64
    + S8199347: Always use -Z7 for debug symbols when compiling on
      Windows
    + S8199352: The Jib artifact resolver in test lib needs to
      print better error messages
    + S8199403: Require binutils 2.18 or newer
    + S8199405: Bump lowest supported gcc to 4.8
    + S8199416: Remove debug output left over since JDK-8198844
- Removed patches:
  * sorted-diff.patch
    + context changed completely
  * jdk10-gcc6.patch
    + not needed
  * boot_jdk_version.patch
    + correct boot versions handled upsteam
- Changed patch:
  * java10-improved-fonts.patch
    + rediffed to changed context

-------------------------------------------------------------------
Fri Mar  2 07:05:17 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+3
  * Fixes:
    + S4916621: Update those still using JDIScaffold to use
      TestScaffold instead.
    + S7127700: G1: Replace G1PLAB with PLAB
    + S8038043: Xerces Update: XInclude update
    + S8060094: java/util/Formatter/Basic.java failed in tr locale
    + S8068593: Remove or repurpose unused PerfCounters from
      objectMonitor
    + S8165929: Constify arguments of Copy methods
    + S8166232: jshell tool: cannot access previous history
    + S8175384: SA: clhsdb 'printall' throws ClassCastException
      while printing out the bytecodes
    + S8176298: Log tags in -Xlog:help not sorted
    + S8179249: Improve process output analysis in CDS tests
    + S8182847: Copy class should use assert macros
    + S8184289: Obsolete -XX:+UnsyncloadClass and
      -XX:+MustCallLoadClassInternal options
    + S8186211: Negative tests for CONSTANT_Dynamic
    + S8186688: javax.lang.model.util.Elements.hides does not work
      correctly with interfaces
    + S8189330: Cleanup FileDescriptor implementation
    + S8190428: Minimal Dynamic Constant support for AArch64
    + S8191375: Add high-level jtreg VMProps to filter out CDS tests
    + S8193056: Title from build failure with Xcode 9.1
    + S8193150: Create a jtreg version of the test from JDK-8187143.
    + S8193373: Cleanup ElfFile and family
    + S8193846: Obsolete the VM option UseUTCFileTimestamp
    + S8193892: Impact of noncloneable MessageDigest implementation
    + S8193909: Obsolete(remove) Co-operative Memory Management (CMM)
    + S8194084: Obsolete FastTLABRefill and remove the related code
    + S8194691: Cleanup unnecessary casts in Atomic/OrderAccess uses
    + S8194994: Remove redundant string streams used for logging
    + S8195103: Refactor out card table from CardTableModRefBS to
      flatten the BarrierSet hierarchy
    + S8195112: x86 (32 bit): implementation for Thread-local
      handshakes
    + S8196308: Update tests AllLineLocations and ClassesByName to
      use TestScaffold instead of JDIScaffold.
    + S8196324: Update tests FilterMatch and FilterNoMatch to use
      TestScaffold.
    + S8196405: [REDO] NMT: add_committed_regions doesn't merge
      succeeding regions
    + S8196602: Change HeapRegionClosure to comply to naming
      conventions
    + S8196759: Move two java/text/Normalizer tests into OpenJDK
    + S8196783: Refactor LogTagLevelExpression into separate classes
    + S8196786: [PPC64+s390] ConstantDynamic support
    + S8196830: publicLookup().findVirtual should not return method
      handle to AccessibleObject.setAccessible
    + S8196880: VS2017 Addition of Global Delete Operator with Size
      Parameter Conflicts with Arena's Chunk Provided One
    + S8196884: VS2017 Multiple Type Cast Conversion Compilation
      Errors
    + S8196889: VS2017 Unable to Instantiate
      OrderAccess::release_store with an Incomplete Class Within an
      Inlined Method
    + S8196909: gcc 7.2.1 compiler warning in libdt_socket
    + S8196920: VerifierTest_1A.java and VerifierTest_1B.java fail:
      assert(receiver_klass->is_subtype_of(static_receiver_klass))
      failed: actual receiver must be subclass of static receiver
      klass
    + S8196930: [Testbug] serviceability/sa/ClhsdbFindPC.java fails
      to find expected output
    + S8196992: Resolve disabled warnings for libdt_socket
    + S8196997: VS2017 The non-Standard std::tr1 namespace and
      TR1-only machinery are deprecated and will be removed
    + S8197412: Enable docker container related tests for linux
      s390x
    + S8197454: Need Access decorator for storing oop into
      uninitialized location
    + S8197518: Kerberos krb5 authentication: AuthList's put method
      leads to performance issue
    + S8197563: assert(is_Loop()) crash in
      PhaseIdealLoop::try_move_store_before_loop()
    + S8197572: s390 build broken after 8165929
    + S8197589: Update CPU count algorithm when both cpu shares and
      quotas are used
    + S8197608: MacroAssembler::unimplemented calls global operator
      new[]
    + S8197772: metaspace uses global operator new/delete for gtest
      testing
    + S8197780: Null pointer dereference in
      Klass::is_instance_klass of klass.hpp:532
    + S8197789: os::SuspendedThreadTask causes references to global
      operator delete
    + S8197827: [windows] Small cleanups after JDK-8185712
    + S8197828: Null pointer dereference in
      MultiNode::proj_out_or_null
    + S8197857: fieldDescriptor prints incorrect 32-bit
      representation of compressed oops
    + S8197859: VS2017 Complains about UINTPTR_MAX definition in
      globalDefinitions_VisCPP.hpp
    + S8197868: VS2017 (C2065) 'timezone': Undeclared Identifier in
      share/runtime/os.cpp
    + S8197901: Crash during GC when logging level is debug
    + S8197906: Enable CDS mode execution of jtreg tests via make
    + S8197945: Qurarantine failing condy tests
    + S8197956: VS2017 (C4838) Narrowing conversion required from
      __int64 to julong
    + S8197968: [Backout] JDK-8196883
      G1RemSet::refine_card_concurrently doesn't need to check for
      cards in collection set
    + S8197992: Move the OopStorage::ParState type out of inline.hpp
    + S8197993: Remove last use of
      JavaThread::flush_barrier_queues()
    + S8197994: Move JavaThread::initialize_queues() logic to
      G1SATBCardTableLoggingModRefBS
    + S8197999: Accessors in typeArrayOopDesc should use new Access
      API
    + S8198225: os::attempt_reserve_memory_at records memory as
      committed
    + S8198249: Remove deprecated Runtime::runFinalizersOnExit and
      System::runFinalizersOnExit
    + S8198251: [Graal] compiler/intrinsics/bmi/verifycode tests
      fail with Graal on macos
    + S8198265: Make
      CollectorPolicy::satisfy_failed_metadata_allocation() virtual
    + S8198267: Allow GCId::current_raw() calls from
      non-NamedThreads
    + S8198268: Add time argument to
      ConcurrentGCTimer::register_gc_pause_start/_end
    + S8198269: Allow GCCauseSetter to be used outside of safepoints
    + S8198270: Remove dangerous assert in HandleArea::oops_do()
    + S8198271: Make CollectedHeap::create_heap_space_summary()
      virtual
    + S8198275: AIX build broken after latest whitebox.cpp changes
    + S8198286: Direct memory accessors in typeArrayOop.hpp should
      use Access API
    + S8198287: Cleanup ElfFile usage in whitebox.cpp
    + S8198311: Avoid uses of global malloc and free
    + S8198341: Build failures after 8194084 (Obsolete
      FastTLABRefill and remove the related code)
    + S8198369: Clean up GCId and GCIdMark
    + S8198373: Remove CollectorPolicy::is/as functions
    + S8198375: Passing 'null' value to lookup param of
      ConstantBootstraps.invoke does not throw NullPointerException
    + S8198420: Remove unused extension point AllocationContextStats
    + S8198439: Fix aarch64 code for handling generate_code_for
      after FastTLABFill obsolete code
    + S8198480: Improve ClassLoaders static init block
    + S8198481: Coding style cleanups for
      src/java.base/share/classes/jdk/internal/loader
    + S8198482: The URLClassPath field "urls" should be renamed to
      "unopenedUrls"
    + S8198484: URLClassPath should use an ArrayDeque instead of a
      Stack
    + S8198485: Simplify a URLClassPath constructor
    + S8198490: java/util/logging/TestLogConfigurationDeadLock.java
      timed out.
    + S8198492: Bootstrapping java.lang.invoke can cause deadlock
      after JDK-8198418
    + S8198507: Remove CollectorPolicy::create_rem_set
    + S8198509: Move satisfy_failed_metadata_allocation out from
      CollectorPolicy
    + S8198511: Move allocation functions from GenCollectorPolicy
      to GenCollectedHeap
    + S8198515: Extract SoftReferencePolicy code out of
      CollectorPolicy
    + S8198522: Javadoc search broken after output files
      organization for modules
    + S8198525: Move _size_policy out of GenCollectorPolicy into
      GenCollectedHeap
    + S8198528: Move GenerationSpecs from GenCollectorPolicy to
      GenCollectedHeap
    + S8198530: Move _gc_policy_counters from GenCollectorPolicy to
      GenCollectedHeap
    + S8198533: Remove obsolete JDIScaffold class from repo.
    + S8198539: Cleanup of unused imports in
      java/util/jar/Attributes.java (java.base) and
      JdpController.java (jdk.management.agent)
    + S8198551: Rename hotspot_tier1 test group to tier1
    + S8198553: jcmd: separate Metaspace statistics from NMT
    + S8198558: Windows does not build without precompiled headers
    + S8198560: Remove implicit casts from oop to JavaThread* and
      jlong*
    + S8198562: (ch) Separate blocking and non-blocking code paths
      (part 1)
    + S8198564: Multiple crashes on SPARC
    + S8198568: clean up test/hotspot/jtreg/ProblemList.txt
    + S8198569: SetupTextFileProcessing should use sed with 'g'
    + S8198573: JShell: class replace loses instances
    + S8198585: add asserts to verify that ServiceUtil::visible_oop
      is not needed
    + S8198627: JDK-8198318 broke readlink testing
    + S8198635: Remove unused safepoint message functions and
      ShowSafepointMsgs
    + S8198645: Use System.lineSeparator() instead of
      getProperty("line.separator")
    + S8198653: ClassLoader::getSystemClassLoader throws
      InternalError when called after shutdown
    + S8198656: Update copyright to 2018
    + S8198658: Docs still point to JDK 9 docs
    + S8198670: [testbug] Test
      jdk/internal/jline/extra/HistoryTest.java is broken after
      8166232
    + S8198726: Quarantine SADebugDTest.java again
    + S8198751: Refactor SetupNativeCompilation to take NAME and
      TYPE
    + S8198754: (ch) Separate blocking and non-blocking code paths
      (part 2)
    + S8198755: Reduce cost of
      InvokerBytecodeGenerator::isStaticallyInvocable/-Nameable
    + S8198808: jdi tests failing after JDK-8198484
    + S8198820: Problem list tools/jimage/JImageExtractTest.java
    + S8198831: Lazy initialization of ValueConversions
      MethodHandles
- Modified patch:
  * system-pcsclite.patch
    + Fix merge error in the patch

-------------------------------------------------------------------
Mon Feb 26 07:04:47 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+2
  * Fixes:
    + S8058965: Remove IPv6 support from TwoStacksPlainSocketImpl
      [win]
    + S8153294: Solaris devkit uses linker from system instead of
      in devkit
    + S8170120: jimage throws IOException when the given file is
      not a jimage file
    + S8176474: test/jdk/jshell/JdiBogusHostListenExecutionControlTest.java
      fails with java.net.BindException
    + S8190904: Incorrect currency instance returned by
      java.util.Currency.getInstance()
    + S8194154: System property user.dir should not be changed
    + S8194892: add compiler support for local-variable syntax for
      lambda parameters
    + S8194922: jlink --exclude-resources should never exclude
      module-info.class
    + S8196959: NullPointerException in discovery003.java
    + S8197439: Crash with -XDfind=lambda for anonymous class in
      anonymous class.
    + S8197812: (ref) Data race in Finalizer
    + S8198227: Fix COMPARE_BUILD after forest consolidation
    + S8198228: Spec clarification: j.u.Locale.getDisplayName()
    + S8198301: jdk11+1 was built as 'fcs' instead of 'ea'
    + S8198303: jdk11+1 was build with incorrect GA date as
      2018-03-20
    + S8198306: Add post custom extension hooks to two launchers
    + S8198318: Make build comparisons clean again
    + S8198328: Create devkit for Solaris with developer studio
      12.6 and Solaris11.3
    + S8198379: tools/jimage/JImageListTest.java failing
    + S8198380: tools/jimage/JImageExtractTest.java failing
    + S8198385: Remove property sun.locale.formatasdefault
    + S8198417: Exclude tools/jimage/JImageExtractTest.java and
      tools/jimage/JImageListTest.java on Windows
    + S8198418: Invoke LambdaMetafactory::metafactory exactly from
      the BootstrapMethodInvoker
    + S8198425: make/Main.gmk Add extra extension/override points
      to the make file
    + S8198441: Replace native Runtime::runFinalization0 method
      with shared secrets
    + S8198450: Make jdk.internal.vm.compiler/module-info.java.extra
      reproducable
    + S8198479: JDK build is broken by 8194892
    + S8198502: Exception at runtime due to lambda analyzer
      reattributes live AST
    + S8198512: compiler support for local-variable syntax for
      lambda parameters
    + S8198523: Refactor BootstrapMethodInvoker to further avoid
      runtime type checks
    + S8198563: Test langtools/tools/javac/analyzer/AnonymousInAnonymous.java
      failing after JDK-8198502

-------------------------------------------------------------------
Mon Feb 19 05:07:10 UTC 2018 - fstrba@suse.com

- Update to upstream tag jdk-11+1
- Removed patches:
  * JDK-8194739-zero.patch
  * aarch64-form_address.patch
    + Integrated upstream
- Modified patch:
  * system-pcsclite.patch
    + Rediff to changed context

-------------------------------------------------------------------
Mon Jan 29 12:15:37 UTC 2018 - fstrba@suse.com

- Added patch:
  * aarch64-form_address.patch
    - Fix crash due to mistake in committed patch for JDK-8195859

-------------------------------------------------------------------
Fri Jan 26 14:06:31 UTC 2018 - fstrba@suse.com

- Upgrade to the tip of jdk repository of January 26th, 2018
- Modified patches:
  * disable-doclint-by-default.patch
  * jdk10-gcc6.patch
    + Rediffed to a changed context
- Removed patches:
  * java-10-openjdk-linuxfilestore.patch
  * remove_javah_for_real.patch
    + Integrated upstream
- Added patch:
  * JDK-8194739-zero.patch
    + S8194739: Zero port of 8174962: Better interface invocations

-------------------------------------------------------------------
Tue Jan 16 12:20:48 UTC 2018 - fstrba@suse.com

- Recommend tzdata-java8 instead of depending on it. This fixes
  build cycles.

-------------------------------------------------------------------
Fri Dec 15 06:55:49 UTC 2017 - fstrba@suse.com

- Initial package of jdk-11+0
  * java-11-openjdk technology preview
