-------------------------------------------------------------------
Mon Jul 22 06:12:22 UTC 2024 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-22.0.2+9 (July 2024 CPU)
  * Security fixes
    + JDK-8314794, CVE-2024-21131, bsc#1228046: Improve UTF8 String
      supports
    + JDK-8319859, CVE-2024-21138, bsc#1228047: Better symbol
      storage
    + JDK-8320097: Improve Image transformations
    + JDK-8320548, CVE-2024-21140, bsc#1228048: Improved loop
      handling
    + JDK-8323231, CVE-2024-21147, bsc#1228052: Improve array
      management
    + JDK-8323390: Enhance mask blit functionality
    + JDK-8324559, CVE-2024-21145, bsc#1228051: Improve 2D image
      handling
    + JDK-8325600: Better symbol storage
    + JDK-8327413: Enhance compilation efficiency
  * Other changes:
    + JDK-8185862: AWT Assertion Failure in ::GetDIBits(hBMDC, hBM, 
      0, 1, 0, gpBitmapInfo, 0) 'awt_Win32GraphicsDevice.cpp', at
      line 185
    + JDK-8187759: Background not refreshed when painting over a 
      transparent JFrame
    + JDK-8238169: BasicDirectoryModel getDirectories and 
      DoChangeContents.run can deadlock
    + JDK-8261433: Better pkcs11 performance for 
      libpkcs11:C_EncryptInit/libpkcs11:C_DecryptInit
    + JDK-8295111: dpkg appears to have problems resolving 
      symbolically linked native libraries
    + JDK-8305072: Win32ShellFolder2.compareTo is inconsistent
    + JDK-8309218: java/util/concurrent/locks/Lock/OOMEInAQS.java 
      still times out with ZGC, Generational ZGC, and SerialGC
    + JDK-8310072: JComboBox/DisabledComboBoxFontTestAuto: Enabled 
      and disabled ComboBox does not match in these LAFs: GTK+
    + JDK-8310513: [s390x] Intrinsify recursive ObjectMonitor 
      locking
    + JDK-8312383: Log X509ExtendedKeyManager implementation class 
      name in TLS/SSL connection
    + JDK-8315708: Enhance HTTP/2 client usage
    + JDK-8316138: Add GlobalSign 2 TLS root certificates
    + JDK-8316328: Test jdk/jfr/event/oldobject/
      /TestSanityDefault.java times out for some heap sizes
    + JDK-8319548: Unexpected internal name for Filler array klass 
      causes error in VisualVM
    + JDK-8320005: Allow loading of shared objects with .a 
      extension on AIX
    + JDK-8320692: Null icon returned for .exe without custom icon
    + JDK-8320707: Virtual thread test updates
    + JDK-8321075: RISC-V: UseSystemMemoryBarrier lacking proper OS 
      support
    + JDK-8322078: ZipSourceCache.testKeySourceMapping() test fails 
      with The process cannot access the file because it is being
      used by another process
    + JDK-8322122: Enhance generation of addresses
    + JDK-8322484: 22-b26 Regression in J2dBench-bimg_misc-G1 (and 
      more) on Windows-x64 and macOS-x64
    + JDK-8322503: Shenandoah: Clarify gc state usage
    + JDK-8322726: C2: Unloaded signature class kills argument value
    + JDK-8322943: runtime/CompressedOops/
      /CompressedClassPointers.java fails on AIX
    + JDK-8322962: Upcall stub might go undetected when freezing 
      frames
    + JDK-8323519: Add applications/ctw/modules to Hotspot tiered 
      testing
    + JDK-8323552: AbstractMemorySegmentImpl#mismatch returns -1 
      when comparing distinct areas of the same instance of
      MemorySegment
    + JDK-8323670: A few client tests intermittently throw 
      ConcurrentModificationException
    + JDK-8323685: PrintSystemDictionaryAtExit has mutex rank assert
    + JDK-8323782: Race: Thread::interrupt vs. 
      AbstractInterruptibleChannel.begin
    + JDK-8323801: <s> tag doesn't strikethrough the text
    + JDK-8323918: Update the release version after forking Apr 
      CPU24_04
    + JDK-8323919: Update the Jul CPU24_07 release date in master 
      branch after forking Apr CPU24_04
    + JDK-8323994: gtest runner repeats test name for every single 
      gtest assertion
    + JDK-8324121: SIGFPE in 
      PhaseIdealLoop::extract_long_range_checks
    + JDK-8324243: Compilation failures in java.desktop module with 
      gcc 14
    + JDK-8324632: Update Zlib Data Compression Library to Version 
      1.3.1
    + JDK-8324646: Avoid Class.forName in SecureRandom constructor
    + JDK-8324648: Avoid NoSuchMethodError when instantiating 
      NativePRNG
    + JDK-8324733: [macos14] Problem list tests which fail due to 
      macOS bug described in JDK-8322653
    + JDK-8324834: Use _LARGE_FILES on AIX
    + JDK-8324874: AArch64: crypto pmull based CRC32/CRC32C 
      intrinsics clobber V8-V15 registers
    + JDK-8324933: ConcurrentHashTable::statistics_calculate 
      synchronization is expensive
    + JDK-8325028: (ch) Pipe channels should lazily set socket to 
      non-blocking mode on first use by virtual thread
    + JDK-8325095: C2: bailout message broken: ResourceArea 
      allocated string used after free
    + JDK-8325179: Race in BasicDirectoryModel.validateFileCache
    + JDK-8325255: jdk.internal.util.ReferencedKeySet::add using 
      wrong test
    + JDK-8325313: Header format error in TestIntrinsicBailOut 
      after JDK-8317299
    + JDK-8325432: enhance assert message "relocation addr must be 
      in this section"
    + JDK-8325567: jspawnhelper without args fails with segfault
    + JDK-8325579: Inconsistent behavior in 
      com.sun.jndi.ldap.Connection::createSocket
    + JDK-8325587: Shenandoah: ShenandoahLock should allow blocking 
      in VM
    + JDK-8325613: CTW: Stale method cleanup requires GC after 
      Sweeper removal
    + JDK-8325621: Improve jspawnhelper version checks
    + JDK-8325730: StringBuilder.toString allocation for the empty 
      String
    + JDK-8325743: test/jdk/java/nio/channels/unixdomain/
      /SocketOptions.java enhance user name output in error case
    + JDK-8325763: Revert properties: vm.opt.x.*
    + JDK-8325862: set -XX:+ErrorFileToStderr when executing java 
      in containers for some container related jtreg tests
    + JDK-8326006: Allow TEST_VM_FLAGLESS to set flagless mode
    + JDK-8326106: Write and clear stack trace table outside of 
      safepoint
    + JDK-8326140: src/jdk.accessibility/windows/native/
      /libjavaaccessbridge/AccessBridgeJavaEntryPoints.cpp
      ReleaseStringChars might be missing in early returns
    + JDK-8326201: [S390] Need to bailout cleanly if creation of 
      stubs fails when code cache is out of space
    + JDK-8326351: Update the Zlib version in 
      open/src/java.base/share/legal/zlib.md to 1.3.1
    + JDK-8326446: The User and System of jdk.CPULoad on Apple M1 
      are inaccurate
    + JDK-8326496: [test] checkHsErrFileContent  support printing 
      hserr in error case
    + JDK-8326521: JFR: CompilerPhase event test fails on windows 
      32 bit
    + JDK-8326529: JFR: Test for CompilerCompile events fails due 
      to time out
    + JDK-8326643: JDK server does not send a dummy 
      change_cipher_spec record after HelloRetryRequest message
    + JDK-8326891: Prefer RPATH over RUNPATH for $ORIGIN rpaths in 
      internal JDK binaries
    + JDK-8326936: RISC-V: Shenandoah GC crashes due to incorrect 
      atomic memory operations
    + JDK-8326960: GHA: RISC-V sysroot cannot be debootstrapped due 
      to ongoing Debian t64 transition
    + JDK-8326974: ODR violation in macroAssembler_aarch64.cpp
    + JDK-8327040: Problemlist ActionListenerCalledTwiceTest.java 
      test failing in macos14
    + JDK-8327059: os::Linux::print_proc_sys_info add swappiness 
      information
    + JDK-8327137: Add test for ConcurrentModificationException in 
      BasicDirectoryModel
    + JDK-8327391: Add SipHash attribution file
    + JDK-8327467: Bump version numbers for 22.0.2
    + JDK-8327468: Do not restart close if errno is EINTR 
      [macOS/linux]
    + JDK-8327501: Common ForkJoinPool prevents class unloading in 
      some cases
    + JDK-8327631: Update IANA Language Subtag Registry to Version 
      2024-03-07
    + JDK-8327990: [macosx-aarch64] Various tests fail with 
      -XX:+AssertWXAtThreadSync
    + JDK-8328066: WhiteBoxResizeTest failure on linux-x86: Could 
      not reserve enough space for 2097152KB object heap
    + JDK-8328075: Shenandoah: Avoid forwarding when objects don't 
      move in full-GC
    + JDK-8328165: improve assert(idx < _maxlrg) failed: oob
    + JDK-8328166: Epsilon: 'EpsilonHeap::allocate_work' misuses 
      the parameter 'size' as size in bytes
    + JDK-8328168: Epsilon: Premature OOM when allocating object 
      larger than uncommitted heap size
    + JDK-8328316: Finisher cannot emit if stream is sequential and 
      integrator returned false
    + JDK-8328366: Thread.setContextClassloader from thread in FJP 
      commonPool task no longer works after JDK-8327501
    + JDK-8328524: [x86] StringRepeat.java failure on linux-x86: 
      Could not reserve enough space for 2097152KB object heap
    + JDK-8328589: unify os::breakpoint among posix platforms
    + JDK-8328604: remove on_aix() function
    + JDK-8328638: Fallback option for POST-only OCSP requests
    + JDK-8328702: C2: Crash during parsing because sub type check 
      is not folded
    + JDK-8328703: Illegal accesses in 
      Java_jdk_internal_org_jline_terminal_impl_jna_linux_CLibraryImpl_ioctl0
    + JDK-8328705: GHA: Cross-compilation jobs do not require build 
      JDK
    + JDK-8328709: AIX os::get_summary_cpu_info  support Power 10
    + JDK-8328744: Parallel: Parallel GC throws OOM before heap is 
      fully expanded
    + JDK-8328776: [AIX] remove checked_vmgetinfo, use vmgetinfo 
      directly
    + JDK-8328812: Update and move siphash license
    + JDK-8328822: C2: "negative trip count?" assert failure in 
      profile predicate code
    + JDK-8328825: Google CAInterop test failures
    + JDK-8328948: GHA: Restoring sysroot from cache skips the 
      build after JDK-8326960
    + JDK-8328953: JEditorPane.read throws ChangedCharSetException
    + JDK-8328988: [macos14] Problem list LightweightEventTest.java 
      which fails due to macOS bug described in JDK-8322653
    + JDK-8328989: Incorrect milestone for release JDK 22.0.2
    + JDK-8328997: Remove unnecessary template parameter lists in 
      GrowableArray
    + JDK-8329013: StackOverflowError when starting Apache Tomcat 
      with signed jar
    + JDK-8329109: Threads::print_on() tries to print CPU time for 
      terminated GC threads
    + JDK-8329134: Reconsider TLAB zapping
    + JDK-8329163: C2: possible overflow in 
      PhaseIdealLoop::extract_long_range_checks()
    + JDK-8329213: Better validation for 
      com.sun.security.ocsp.useget option
    + JDK-8329223: Parallel: Parallel GC resizes heap even if -Xms 
      = -Xmx
    + JDK-8329510: Update ProblemList for 
      JFileChooser/8194044/FileSystemRootTest.java
    + JDK-8329528: G1 does not update TAMS correctly when dropping 
      retained regions during Concurrent Start pause
    + JDK-8329545: [s390x] Fix garbage value being passed in 
      Argument Register
    + JDK-8329570: G1: Excessive is_obj_dead_cond calls in 
      verification
    + JDK-8329605: hs errfile generic events - move memory 
      protections and nmethod flushes to separate sections
    + JDK-8329656: assertion failed in MAP_ARCHIVE_MMAP_FAILURE 
      path: Invalid immediate -5 0
    + JDK-8329663: hs_err file event log entry for thread 
      adding/removing should print current thread
    + JDK-8329823: RISC-V: Need to sync CPU features with related 
      JVM flags
    + JDK-8329840: Fix ZPhysicalMemorySegment::_end type
    + JDK-8329850: [AIX] Allow loading of different members of same 
      shared library archive
    + JDK-8329862: libjli GetApplicationHome cleanups and enhance 
      jli tracing
    + JDK-8329958: Windows x86 build fails: downcallLinker.cpp(36) 
      redefinition
    + JDK-8329961: Buffer overflow in os::Linux::kernel_version
    + JDK-8330011: [s390x] update block-comments to make code 
      consistent
    + JDK-8330027: Identity hashes of archived objects must be 
      based on a reproducible random seed
    + JDK-8330094: RISC-V: Save and restore FRM in the call stub
    + JDK-8330156: RISC-V: Range check auipc + signed 12 imm 
      instruction
    + JDK-8330232: Change milestone to fcs for all releases
    + JDK-8330242: RISC-V: Simplify and remove 
      CORRECT_COMPILER_ATOMIC_SUPPORT in atomic_linux_riscv.hpp
    + JDK-8330275: Crash in XMark::follow_array
    + JDK-8330464: hserr generic events - add entry for the 
      before_exit calls
    + JDK-8330523: Reduce runtime and improve efficiency of 
      KeepAliveTest
    + JDK-8330524: Linux ppc64le compile warning with clang  in 
      os_linux_ppc.cpp
    + JDK-8330576: ZYoungCompactionLimit should have range check
    + JDK-8330615: avoid signed integer overflows in zip_util.c 
      readCen / hashN
    + JDK-8330748: ByteArrayOutputStream.writeTo(OutputStream) pins 
      carrier
    + JDK-8330814: Cleanups for KeepAliveCache tests
    + JDK-8330815: Use pattern matching for instanceof in 
      KeepAliveCache
    + JDK-8331031: unify os::dont_yield and os::naked_yield across 
      Posix platforms
    + JDK-8331164: createJMHBundle.sh download jars fail when url 
      needed to be redirected
    + JDK-8331167: UBSan enabled build fails in adlc on macOS
    + JDK-8331298: avoid alignment checks in UBSAN enabled build
    + JDK-8331331: :tier1 target explanation in doc/testing.md is 
      incorrect
    + JDK-8331344: No compiler replay file with CompilerCommand 
      MemLimit
    + JDK-8331352: error: template-id not allowed for 
      constructor/destructor in C++20
    + JDK-8331466: Problemlist 
      serviceability/dcmd/gc/RunFinalizationTest.java on generic-all
    + JDK-8331589: The DEFAULT_PROMOTED_VERSION_PRE not correct for 
      RDP2 CPU24_07
    + JDK-8331714: Make OopMapCache installation lock-free
    + JDK-8331746: Create a test to verify that the cmm id is not 
      ignored
    + JDK-8331885: C2: meet between unloaded and speculative types 
      is not symmetric
    + JDK-8331894: [jdk22] compiler/print/CompileCommandMemLimit.java
      fails after backporting JDK-8325095
    + JDK-8331942: On Linux aarch64, CDS archives should be using 
      64K alignment by default
    + JDK-8332253: Linux arm32 build fails after 8292591
    + JDK-8332490: JMH org.openjdk.bench.java.util.zip
      .InflaterInputStreams.inflaterInputStreamRead OOM
    + JDK-8333093: Incorrect comment in zAddress_aarch64.cpp

-------------------------------------------------------------------
Fri Jun  7 11:24:30 UTC 2024 - Fridrich Strba <fstrba@suse.com>

- Added patch:
  * reproducible-jlink.patch
    + make the timestamp in jmods reproducible

-------------------------------------------------------------------
Thu Apr 18 14:57:53 UTC 2024 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream tag jdk-22.0.1+8 (April 2024 CPU)
  * Security fixes
    + JDK-8315708, CVE-2024-21012, bsc#1222987: Enhance HTTP/2
      client usage
    + JDK-8318340: Improve RSA key implementations
    + JDK-8319851, CVE-2024-21011, bsc#1222979: Improve exception
      logging
    + JDK-8322122, CVE-2024-21068, bsc#1222983: Enhance generation
      of addresses
  * Other changes
    + JDK-8314164: java/net/HttpURLConnection/
      /HttpURLConnectionExpectContinueTest.java fails intermittently
      in timeout
    + JDK-8314275: Incorrect stepping in switch
    + JDK-8317299: safepoint scalarization doesn't keep track of 
      the depth of the JVM state
    + JDK-8317804: com/sun/jdi/JdwpAllowTest.java fails on Alpine 
      3.17 / 3.18
    + JDK-8318158: RISC-V: implement roundD/roundF intrinsics
    + JDK-8318603: Parallelize sun/java2d/marlin/ClipShapeTest.java
    + JDK-8318696: Do not use LFS64 symbols on Linux
    + JDK-8319382: com/sun/jdi/JdwpAllowTest.java shows failures on 
      AIX if prefixLen of mask is larger than 32 in IPv6 case
    + JDK-8320890: [AIX] Find a better way to mimic dl handle 
      equality
    + JDK-8321151: JDK-8294427 breaks Windows L&F on all older 
      Windows versions
    + JDK-8321374: Add a configure option to explicitly set 
      CompanyName property in VersionInfo resource for Windows
      exe/dll
    + JDK-8321408: Add Certainly roots R1 and E1
    + JDK-8321480: ISO 4217 Amendment 176 Update
    + JDK-8321489: Update LCMS to 2.16
    + JDK-8321815: Shenandoah: gc state should be synchronized to 
      java threads only once per safepoint
    + JDK-8321972: test runtime/Unsafe/InternalErrorTest.java 
      timeout on linux-riscv64 platform
    + JDK-8322092: Bump version numbers for 22.0.1
    + JDK-8322098: os::Linux::print_system_memory_info enhance the 
      THP output with 
      /sys/kernel/mm/transparent_hugepage/hpage_pmd_size
    + JDK-8322159: ThisEscapeAnalyzer crashes for erroneous code
    + JDK-8322163: runtime/Unsafe/InternalErrorTest.java fails on 
      Alpine after JDK-8320886
    + JDK-8322417: Console read line with zero out should zero out 
      when throwing exception
    + JDK-8322725: (tz) Update Timezone Data to 2023d
    + JDK-8322772: Clean up code after JDK-8322417
    + JDK-8322783: prioritize /etc/os-release over 
      /etc/SuSE-release in hs_err/info output
    + JDK-8322790: RISC-V: Tune costs for shuffles with no 
      conversion
    + JDK-8322945: Problemlist runtime/CompressedOops/
      /CompressedClassPointers.java on AIX
    + JDK-8323021: Shenandoah: Encountered reference count always 
      attributed to first worker thread
    + JDK-8323065: Unneccesary CodeBlob lookup in 
      CompiledIC::internal_set_ic_destination
    + JDK-8323086: Shenandoah: Heap could be corrupted by oom 
      during evacuation
    + JDK-8323154: C2: assert(cmp != nullptr && cmp->Opcode() == 
      Op_Cmp(bt)) failed: no exit test
    + JDK-8323170: j2dbench is using outdated  javac source/target 
      to be able to build by itself
    + JDK-8323210: Update the usage of cmsFLAGS_COPY_ALPHA
    + JDK-8323331: fix typo hpage_pdm_size
    + JDK-8323428: Shenandoah: Unused memory in regions compacted 
      during a full GC should be mangled
    + JDK-8323515: Create test alias "all" for all test roots
    + JDK-8323637: Capture hotspot replay files in GHA
    + JDK-8323657: Compilation of snippet results in VerifyError at 
      runtime with --release 9 (and above)
    + JDK-8323664: java/awt/font/JNICheck/FreeTypeScalerJNICheck.java
      still fails with JNI warning on some Windows configurations
    + JDK-8323675: Race in jdk.javadoc-gendata
    + JDK-8323920: Change milestone to fcs for all releases
    + JDK-8323964: runtime/Thread/ThreadCountLimit.java fails 
      intermittently on AIX
    + JDK-8324041: ModuleOption.java failed with update release 
      versioning scheme
    + JDK-8324050: Issue store-store barrier after re-materializing 
      objects during deoptimization
    + JDK-8324280: RISC-V: Incorrect implementation in 
      VM_Version::parse_satp_mode
    + JDK-8324347: Enable "maybe-uninitialized" warning for 
      FreeType 2.13.1
    + JDK-8324598: use mem_unit when working with sysinfo memory 
      and swap related information
    + JDK-8324637: [aix] Implement support for reporting swap space 
      in jdk.management
    + JDK-8324647: Invalid test group of lib-test after JDK-8323515
    + JDK-8324659: GHA: Generic jtreg errors are not reported
    + JDK-8324753: [AIX] adjust os_posix after JDK-8318696
    + JDK-8324937: GHA: Avoid multiple test suites per job
    + JDK-8325074: ZGC fails assert(index == 0 || 
      is_power_of_2(index)) failed: Incorrect load shift: 11
    + JDK-8325150: (tz) Update Timezone Data to 2024a
    + JDK-8325203: System.exit(0) kills the launched 3rd party 
      application
    + JDK-8325213: Flags introduced by configure script are not 
      passed to ADLC build
    + JDK-8325313: Header format error in TestIntrinsicBailOut 
      after JDK-8317299
    + JDK-8325326: [PPC64] Don't relocate in case of allocation 
      failure
    + JDK-8325470: [AIX] use fclose after fopen in read_psinfo
    + JDK-8325496: Make TrimNativeHeapInterval a product switch
    + JDK-8325590: Regression in round-tripping UTF-16 strings 
      after JDK-8311906
    + JDK-8325672: C2: allocate PhaseIdealLoop::_loop_or_ctrl from 
      C->comp_arena()
    + JDK-8325876: crashes in docker container tests on 
      Linuxppc64le Power8 machines
    + JDK-8326000: Remove obsolete comments for class 
      sun.security.ssl.SunJSSE
    + JDK-8326101: [PPC64] Need to bailout cleanly if creation of 
      stubs fails when code cache is out of space
    + JDK-8326360: Update the Zlib version in 
      open/src/java.base/share/legal/zlib.md to 1.3
    + JDK-8326638: Crash in 
      PhaseIdealLoop::remix_address_expressions due to unexpected
      Region instead of Loop
    + JDK-8327391: Add SipHash attribution file
- Modified patches:
  * PStack-808293.patch
  * disable-doclint-by-default.patch
  * fips.patch
  * java-22-openjdk.spec
  * java-atk-wrapper-security.patch
  * loadAssistiveTechnologies.patch
  * memory-limits.patch
  * multiple-pkcs11-library-init.patch
  * reproducible-properties.patch
  * system-pcsclite.patch
  * zero-ranges.patch
    + rediff to apply without fuzz

-------------------------------------------------------------------
Fri Mar 15 14:45:03 UTC 2024 - Fridrich Strba <fstrba@suse.com>

- Initial packaging of OpenJDK 22 release
  * Features
    + 423: Region Pinning for G1
    + 447: Statements before super(...) (Preview)
    + 454: Foreign Function & Memory API
    + 456: Unnamed Variables & Patterns
    + 457: Class-File API (Preview)
    + 458: Launch Multi-File Source-Code Programs
    + 459: String Templates (Second Preview)
    + 460: Vector API (Seventh Incubator)
    + 461: Stream Gatherers (Preview)
    + 462: Structured Concurrency (Second Preview)
    + 463: Implicitly Declared Classes and Instance Main Methods
           (Second Preview)
    + 464: Scoped Values (Second Preview)
