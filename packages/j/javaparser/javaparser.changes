-------------------------------------------------------------------
Mon Dec 12 16:35:19 UTC 2022 - Anton Shvetz <shvetz.anton@gmail.com>

- Upgrade to upstream version 3.24.9
  * Highlights
    + Remove "executable" bit from code files (PR #3755 by @icmdaf)
  * Added
    + Created TypeSolverBuilder (PR #3421 by @4everTheOne)
  * Changed
    + Changing, in test classes, the initialization of the lexical
      preserva… (PR #3779 by @jlerbsc)
    + chore(deps): bump maven-dependency-plugin from 3.3.0 to 3.4.0
      (PR #3770 by @dependabot[bot])
    + chore(deps): bump maven-install-plugin from 3.0.1 to 3.1.0
      (PR #3756 by @dependabot[bot])
  * Fixed
    + Fix: #3195 Resolved methods in outer classes not inferred
      correcly (PR #3778 by @jlerbsc)
    + Fix: #3681 LineComment alwaysing trimming content (PR #3777
      by @jlerbsc)
    + Fix: #3773 Replacing nodes causes error in lexical preserving
      printer… (PR #3776 by @jlerbsc)
    + Fix: #2517 Modifying some nodes with the lexicalPreservation
      enabled … (PR #3775 by @jlerbsc)
    + Fix: #3725 JavaParserFacade var type in for-each loop cannot
      be resolved (PR #3768 by @abego)
    + Fix: #3216 LexicalPreservingPrinter add Wrong indentation
      when removing comments (PR #3766 by @jlerbsc)
    + Fix: #3472 Line comment removal causes IllegalStateException
      with LexicalPreservingPrinter (PR #3765 by @jlerbsc)
    + Fix: #3441 LexicalPreservingPrinter prints wrong output with
      line com… (PR #3764 by @jlerbsc)
    + Fix: #2137 ClassOrInterfaceDeclaration addMember using index
      (PR #3763 by @jlerbsc)
    + Fix: #3761 Lexical preserving corrupts source when adding a
      modifier in first position (PR #3762 by @jlerbsc)
    + Fix: #3693 Removing modifiers from method declaration results
      in loss… (PR #3760 by @jlerbsc)
    + Fix: #3750 Lexical preserving corrupts source (PR #3759 by
      @jlerbsc)
    + Fix: Fix the indentation generated by the
      LexicalPreservingPrinter wh… (PR #3758 by @jlerbsc)
  * Security
    + Remove "executable" bit from code files (PR #3755 by @icmdaf)
- Add build dependency on mvn(org.checkerframework:checker-qual)

-------------------------------------------------------------------
Sun Nov 27 13:34:32 UTC 2022 - Anton Shvetz <shvetz.anton@gmail.com>

- Upgrade to upstream version 3.24.8
  * Added
    + [Fixes #3099] Added ability to solve type with a list of
      expected type arguments
    + [Suggestion] NonNull generator for parameters
  * Changed
    + Updated workflow to only run one job per PR
    + Remove or comment system.out.println statement in unit tests
    + Added Optional method in SymbolReference
    + Centralized management of symbol solver exceptions to prevent
      exception type Erasion
  * Fixed
    + Fix issue #1827 Issue resolving a constructor of a class
      using generics
    + Fix issue #3728 ParseProblemException
    + Updated Badge for Build and Coverage
    + Position
    + Fix part of issue #3721 UnsupportedOperationException while
      trying to modify the type of a variable
    + Implemented isReferenceType in ResolvedTypeDeclaration and
      isTypeParameter in ResolvedTypeParameterDeclaration
  * Developer Changes
    + chore(deps): bump versions-maven-plugin from 2.12.0 to 2.13.0
    + Fix maven wrapper not found in generator scripts
    + chore(deps): bump actions/checkout from 3.0.2 to 3.1.0
  * Uncategorised
    + Change issue 1945 test to paramaterized
    + More unit tests for JavaToken and CodeGenerationUtils
- Upgrade to upstream version 3.24.7
  * Highlights
    + Issue #3415
  * Changed
    + Refactoring - use of existing methods
    + Refactoring adding convenient methods to know if a
      DifferenceElement is added, removed or kept
  * Deprecated
    + Issue #3415
  * Fixed
    + Fix for ReflectionAnnotationDeclaration getClassName()
    + Fix some yield expressions not recognized
    + Accept final in instanceof pattern
    + [Fix] Avoid test failure due to line separator differences on
      windows host
    + Fix issue #3700 Removing last statement with
      LexicalPreservingPrinter results in loss of indendation
    + Fix issue #3678 Function accepts a configuration but it does
      not do anything
- Upgrade to upstream version 3.24.3
  * API or Behaviour Change
    + Issue #3405 thread safety of pre/postprocessors (incl.
      breaking change to Processor with pre/post processor
      methods).
  * Changed
    + Minor refactoring to manage check in range and use hasRange
      method in class CommentsInserter
    + Renaming PACKAGE_PRIVATE to NONE (this refers to the
      discussion in the issue #2242)
  * Fixed
    + Fix documentation of JAVA_17
    + Fix issue 3631 NameExpr.resolve() does not take end of inner
      block scopes into account
    + Fix issue #3588 Modifier is removed when removing an
      annotation
    + Fix lambda generic types that are always resolved to the
      first type param
    + Fix issue #3489 SourceRoot.tryToParse() fails if the root
      path ends with a directory that is not a java identifier
    + Default pretty printer should print inner-class receiver
      parameters on constructors
    + Issue #3405 thread safety of pre/postprocessors (incl.
      breaking change to Processor with pre/post processor
      methods).
  * Developer Changes
    + chore(deps): update actions/checkout action to v3.0.1
    + official Apache Maven wrapper
    + chore(deps): update codecov/codecov-action action to v3
    + chore(deps): update dependency org.jacoco:jacoco-maven-plugin
      to v0.8.8
    + chore(deps): update dependency
      org.apache.maven.plugins:maven-clean-plugin to v3.2.0
    + chore(deps): update dependency
      org.apache.maven.plugins:maven-surefire-plugin to v3.0.0-m6
- Re-enable modules:
  javaparser-symbol-solver-{core,logic,model,testing}
- Add build dependency on mvn(org.javassist:javassist)
- Update summary and description

-------------------------------------------------------------------
Mon May 23 12:17:32 UTC 2022 - Fridrich Strba <fstrba@suse.com>

- Upgrade to upstream version 3.24.2
  * Fixes:
    + Adding constructor descriptor
    + Fix issue #3491  Method has a multidimensional arrays argument
      in jar file. when call the method throw
      UnsolvedSymbolException
    + Fix issue #3218 GetSourceRoots() does not return all source
      roots
    + Bug in ArrayCreationExpr constructors
    + Fix issue 3440 Removing a node with LexicalPreservingPrinter
      causes UnsupportedOperationException
    + Improve unit test for BlockStmtContextResolutionTest
    + Improve Conditional Operator resolution [JLS 15.25]
    + Fix issue #3526 Variable or FieldDeclaration is not resolved
      correctly when another variable with the same name is
      declared in the same block

-------------------------------------------------------------------
Thu Mar 10 11:36:18 UTC 2022 - Fridrich Strba <fstrba@suse.com>

- Upgrade to the latest version 3.24.0
  * A long list of fixes is to be found at https://github.com/
    /javaparser/javaparser/blob/master/changelog.md
  * Upgrade needed to be able to upgrade jctools and make them
    not depend hard on Java 8

-------------------------------------------------------------------
Tue Oct  1 13:29:42 UTC 2019 - Fridrich Strba <fstrba@suse.com>

- Initial packaging of javaparser 3.3.5
