-------------------------------------------------------------------
Fri Apr 26 11:22:00 UTC 2024 - xtexchooser@duck.com

- Update to version 0.2.5:
  * chore: bump version to 0.2.5
  * feat: new builtin `session.lua` plugin (#940)
  * feat: split `ya send` into `ya pub` and `ya pub-static` to make it more ergonomic (#933)
  * perf: cache each file's icon to avoid redundant calculations at rendering (#931)
  * feat: preserve files' modified at timestamp while copying (#926)
  * fix: prevent pasting a directory into itself (#925)
  * feat: change status bar percent at 100 to Bot (#930)
  * fix: always persist static messages even when there are no remote clients (#928)
  * feat: expand the types supported by the event system (#923)
  * fix: rollback ratatui to v0.26.1 to avoid panicking (#922)
  * feat: allow opening interactively with the `--chosen-file` flag (#920)
  * feat: generate autocomplete script for `ya` command (#919)
  * feat: allow creating a tab with the startup directory when the `tab_create` command is called without specifying a `path` parameter (#917)
  * feat: add a new `ya send` command to allow standalone client processes to communicate with DDS from the command line (#913)
  * feat: smart case completion in `cd` paths (#910)
  * feat: trigger path completion with both `/` and `\` on Windows (#909)
  * perf: switch to `globset` to reduce CPU time spent on matching icons (#908)
  * feat: default "Reveal" opener for Linux (#907)
  * feat: add loading state to directories (#904)
  * feat: when there are no files in the list, add a placeholder message (#900)
  * feat: add `YAZI_ID` environment variable (#895)
  * feat: add new `move`, `trash`, and `delete` event kinds to DDS (#880)
  * fix: file list expansion arguments (`$@`, `$*`) of shell command under opener rules are out of order (#890)
  * feat: add new `--orphan` option to the `shell` command (#887)
  * feat: re-implement `fzf` as a built-in plugin (#884)
  * feat: re-implement `zoxide` as a built-in plugin (#881)
  * fix: CJK text rendering issue where the input popup component overlaps with images (#879)
  * perf: re-implement file watcher in an async way (#877)
  * feat: add `is_exec` and `is_sticky` to `Cha` bindings (#875)
  * feat: merge the `sender` and `severity` in the DDS payload into the same field to simplify the protocol (#871)
  * fix: a race condition in DDS static messages sent as internal events (#868)
  * feat: detect CSI u through `Stderr` to allow using `Stdout` as the carrier of DDS payload without an ANSI sequence response timeout (#867)
  * feat: the `cd` event in DDS will now also be triggered when the tab is first created (#861)
  * fix: wrong `state` pointed to and ignore plugin/flavor directory creation errors
  * feat: add a new `sender` property to the DDS payload (#855)
  * feat: readable toml parsing error (#854)
  * fix: do not default to passing `self` to `setup` to respect user invocation behavior
  * perf: port `require()` and `ya.sync()` to Rust to avoid plugin information initialization process (#853)
  * feat: DDS (Data Distribution Service) (#826)
  * perf: add `BufWriter` to `Stderr` to avoid frequent system calls and increase rendering frame rate (#849)
  * fix: Windows `cmd.exe` not responding to correct CSI sequences due to ConPTY (#845)
  * feat: add support for `YAZI_FILE_ONE` to the built-in `file` previewer (#846)
  * feat: time-based selection order preservation (#843)
  * fix: mime-type for xz archives (#841)
  * perf: accelerate kitty graphics protocol encoding by avoiding string reallocation (#837)
  * feat: enhance the `ya.dbg()` and `ya.err()` debugging functions (#835)
  * fix: disable ANSI colours for the `tracing_subscriber` so that the logs are not polluted with escape codes (#832)
  * fix: adjust calculation for number of lines in a notification message (#828)
  * feat: add a bunch of new debugging information to `yazi --debug` (#824)
  * fix: kill all spawned processes when exiting Yazi (#812)
  * feat: fix all dependencies to specific version numbers to allow non-`--locked` builds (#821)
  * refactor: switch to `stderr` (#819)
  * fix: respond to the `SIGTERM` signal even when Yazi is in the background and has passed control of the terminal to the spawned process (#797)
  * fix: wrong type in iterator binding
  * refactor: wrap `Opener` with `Cow` to avoid unnecessary memory reallocations when opening files (#805)
  * fix: use `BTreeSet` for selected files to maintain order (#799)

-------------------------------------------------------------------
Sat Mar 30 23:12:22 UTC 2024 - xtexChooser <xtexchooser@duck.com>

- Fix ripgrep depends

-------------------------------------------------------------------
Sat Mar 30 08:06:11 UTC 2024 - xtexChooser <xtexchooser@duck.com>

- Lock dependencies from being updated when packaging
  Updating deps when vendoring causes build errors

-------------------------------------------------------------------
Sat Mar 23 12:01:07 UTC 2024 - xtexchooser@duck.com

- Update to version 0.2.4:
  * feat: add `--debug` flag to print debug information (#794)
  * feat: `ya.hide()` plugin API (#792)
  * feat: truncate path for deeply nested directories (#787)
  * fix: track the latest file changes for the `selected`, `yanked` state when available (#791)
  * feat: `cx.yanked` plugin API (#788)
  * feat: send a foreground notification to the user when the process fails to run (#775)
  * feat: add `<C-p>` and `<C-n>` to the select component for moving the cursor up/down (#779)
  * feat: test new color system
  * feat: `ui.Clear` component for UI plugins (#786)
  * feat: `ya.notify()` plugin API (#780)
  * feat: add `parse` method to `Line` element
  * feat: add `Ctrl-[` as an escape key (#763)
  * refactor: add new `run` property (#773)
  * fix: nested conflict detection exception when performing cross-level searches (#769)
  * feat: add musl linux build targets (#759)
  * fix: remove redundant check to allow operations on the `shell` command with an empty file list
  * feat: `ya.input()` plugin API (#762)
  * feat: support `%0` as the hovered file for Windows (#761)
  * perf: apply `add_many()`/`remove_many()` to the visual mode items for selection conflict detecting (#758)
  * feat: allow both '/' and '\' in folder creation (#751)
  * feat: support `YAZI_FILE_ONE` environment variable for `file(1)` path (#752)
  * feat: add `prepend_rules` and `append_rules` for `[open]` in `yazi.toml` (#754)
  * feat: switch to inline images protocol for VSCode, Tabby, and Hyper
  * feat: add a new `[notify]` section to the `theme.toml` to configure the `notify` component's style (#749)
  * feat: flavor (#753)
  * feat: add hovered as `$0` for shell and opener (#738)
  * ci: add cachix workflow (#740)
  * refactor: prefer `Display` over `ToString` (#734)
  * perf: prefer `raw_get()` and `raw_set()`
  * feat: support `is` rule for `[icon]` (#720)
  * fix: initialize logs right after configurations (#708)
  * refactor: new `yazi-boot` crate (#728)
  * feat: add `idx` field to the file API
  * fix: skip when the mime-type cannot match due to file permissions (#725)
  * fix: rendering fails when no file type style is matched (#721)
  * feat: better accessibility (#719)
  * feat: add csharp, kdl and nu icons (#711)
  * perf: cache loaded plugins (#710)
  * fix: ignore further classified mime-types (#707)
  * feat: `state` now accepts a name for the bucket
  * fix: allow running `ya.sync` in a sync plugin call (#702)
  * fix: `any_file` and `any_dir` should check `is_folder`
  * docs: move image preview details to the website
  * feat: cross-directory selection (#693)
  * docs: Yazi must have a duck logo in README (#691)
  * feat: nested selection conflict detection (#689)
  * fix: if block in paste command was wrong
  * refactor: using definite patterns to simplify keybindings (#690)
  * feat: add a new option `--hovered` to the `open` command allowing users to only open the currently hovered file (#687)
  * feat: add icons for Scala, Elm and Java (.jar & .class)
  * feat: add counter component to the header for displaying currently yanked/selected items (#646)
  * feat: add new file marked state (#682)
  * feat: expose selected/yanked files as API (#674)
  * feat: add color to icons (#683)
  * feat: add new `scrolloff` option to `[manager]` (#679)
  * feat: add `prepend_rules` and `append_rules` for `[icon]` (#670)
  * fix: allow access to the current tab via `tabs` for consistency
  * feat: Vim-like notification (#659)
  * refactor: tab-specific selection (#653)
  * feat: enable the ability to sort the which key (#662)
  * ci: add clippy/rustfmt workflow (#663)
  * feat: add `<Delete>` to `[input]` keymap (#665)
  * feat: add `<Home>` and `<End>` to `[input]` keymap
  * feat: calling sync functions within the async plugin (#649)
  * feat: merge wildcard preloader and previewer rules via `append_preloaders` and `append_previewers`
  * fix: initialize `window` in `Folder::make` for folder preview
  * fix: do not use jemalloc on macOS and Windows
  * feat: allows access to complete app data for all tabs (#644)
  * perf: cheaper sync context initialization (#643)

-------------------------------------------------------------------
Wed Feb 07 14:25:50 UTC 2024 - xtexchooser@duck.com

- Update to version 0.2.3:
  * chore: bump version to 0.2.3
  * feat: if input is empty, close it on `backspace` command (#630)
  * feat: add `ya.quote()` function instead of `ya.shell_join()`
  * fix: task manager not re-rendering after progress update (#633)
  * fix: hidden attribute of files on Windows (#632)
  * feat: support char device in filetype (#628)
  * feat: add `ya.shell_join()` API
  * fix: attach plugin `args` to the `entry` method for better future optimization possibilities (#627)
  * feat: `app_emit` and `manager_emit` accepts boolean, integer, and number as option values (#625)
  * fix: image rotation with orientation 4
  * feat: add `plugin` command to each layer
  * feat: plugin interface for key events via `ya.which()` (#617)
  * perf: use lazy sorting when loading large directories to reduce unnecessary CPU consumption (#607)
  * feat: make `trash` crate optional on Android (#600)
  * feat: support `unyank` (#313)
  * refactor: use `Cmd` instead of `Exec` (#604)
  * perf: read directory in bulk in the background at startup (#599)
  * feat: preview image over SSH (#585)
  * feat: plugin-specific state persistence (#590)
  * feat: support passing arguments to plugin (#587)
  * feat: allow to configure image filter (#586)
  * feat: shorten unit names and add more units to `ya.readable_size`
  * fix: parent folder not tracking CWD (#581)
  * feat: new `image_quality` and `sixel_fraction` options to allow users to configure the image preview quality (#576)
  * fix: input offset is not reset when renaming with `--cursor=start` and the filename is too long (#575)
  * feat: customizing the number of columns of "which key" component (#571)

-------------------------------------------------------------------
Fri Feb  2 00:15:25 UTC 2024 - xtexChooser <xtexchooser@duck.com>

- Use system lua5.4.
- Use remove tar.zst source, and keep only obscpio source.

-------------------------------------------------------------------
Wed Jan 31 11:02:18 UTC 2024 - xtexChooser <xtexchooser@duck.com>

- Package vendored lua for lua 5.4 syntax support.
  LuaJIT only supports up to lua 5.1 syntax.

-------------------------------------------------------------------
Wed Jan 31 09:09:58 UTC 2024 - xtexChooser <xtexchooser@duck.com>

- Build shell completions packages

-------------------------------------------------------------------
Wed Jan 31 04:24:38 UTC 2024 - xtexChooser <xtexchooser@duck.com>

- Fix rustc SIGSEGV exception

-------------------------------------------------------------------
Wed Jan 31 03:29:18 UTC 2024 - xtexChooser <xtexchooser@duck.com>

- Init package yazi v0.2.2
