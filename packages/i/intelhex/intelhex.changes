-------------------------------------------------------------------
Tue Mar 11 05:03:44 UTC 2025 - Steve Kowalik <steven.kowalik@suse.com>

- Sprinkle in python-rpm-macros, build/install with pyproject macros.
- Run fdupes.
- Run the testsuite.
- No more greedy globs for sitelib.

-------------------------------------------------------------------
Wed Jun 15 16:49:42 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 2.3.0:
  * Add IntelHex.find() method to find a given byte pattern. (Scott Armitage)
  * API changes: IntelHex.segments() method supports new optional parameter
  * min_gap to allow consolidation of segments with small but existing gaps
    into a single segment. Default value is 1. (Ryan Downing)
  * API changes: IntelHex.tofile() now supports the optional byte_count
    parameter from IntelHex.write_hex_file(). Only used if format = hex.
  * Fix Python 3.9 compatibility issue with 'array' module (Piotr Korowacki)
  * Fix installation for Python version taking setup rather from setuptools than
    distutils (Theo Sbrissa)

-------------------------------------------------------------------
Sun Aug 16 10:16:54 UTC 2020 - Klaus Kämpf <kkaempf@suse.com>

- build with Python3

-------------------------------------------------------------------
Fri Jun  8 13:17:29 UTC 2018 - kkaempf@suse.com

- Update to 2.2.1
  * Fixes for PyPI.

- Fix project URL

- Update to 2.2
  * API changes: IntelHex.write_hex_file method: added support for new
    parameter: eolstyle = native | CRLF. (Alexander Belchenko)
  * API changes: IntelHex.write_hex_file() method gets new optional
    parameter byte_count to specify how many bytes should be written to
    each data record in output file. Default value is 16. (patch from
    GitHub user erki1993)
  * Unit tests: Fixed xrange overflow test for Python 2.7 on 64-bit
    platforms. Use sys.maxint to ensure we trigger an exception. (Masayuki
    Takeda)
  * Script hexinfo.py: Python 3 compatibility for processing start address
    dict keys. (patch from GitHub user mentaal)
  * Added get_memory_size() method: approx memory footprint of IntelHex
    object plus data. (Alexander Belchenko)
  * Better compatibility with Python 3. (Alexander Belchenko)

- Update to 2.1
  * API changes: added IntelHex.segments() method that returns a list
    of ordered tuple objects, representing contiguous occupied data
    addresses. (Andrew Fernandes)
  * New command-line script hexinfo.py to print summary about hex files
    contents (file name, start address, address ranges covered by the
    data) in YAML format. (Andrew Fernandes)
  * Better Python 3 compatibility when hex2bin.py and bin2hex.py scripts
    are trying to read/write binary data from stdin or to stdout. (GitHub
    issue https://github.com/bialix/intelhex/issues/4)
  * The main activity of the IntelHex project slowly drifting towards
    GitHub - the main social network for OSS developers. I'd really like
    to get some help from additional maintainer though.
  * API changes: IntelHex.dump() method gets new optional parameters:
    width, withpadding to control generation of output text. (patch from
    GitHub user durexyl)
  * Script hex2dump.py gets new option --width to support corresponding
    parameter in IntelHex.dump() method.

- Update to 2.0
  * The same codebase can be run on both Python 2 (2.4-2.7) and Python 3
    (3.2+). No need to use 2to3.
  * compat.py: provide more helper functions and aliases to reduce
    changes required to convert python 2 compatible sources to python 3.
    The code becomes quite ugly, but such compatibility has its price.
  * Python 3 compatibility: tobinstr should return bytes not unicode
    string (Bug #1212698).
  * Python 2: better support for long int addresses (over 2GB) (Bug
    #1408934)
-------------------------------------------------------------------
Fri Jul  1 17:11:01 UTC 2016 - toddrme2178@gmail.com

- Fix Group tag.

-------------------------------------------------------------------
Tue May 27 21:37:29 CEST 2014 - sbrabec@suse.cz

- Created new package, version 1.5.

