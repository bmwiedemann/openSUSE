--- src/mp3_parse.cpp
+++ src/mp3_parse.cpp
@@ -408,6 +408,8 @@
         else
           _mp3_header_output->framesize =  72000 * _mp3_header_output->bitrate / _mp3_header_output->frequency + (_tmpheader->padding_bit ? 1 : 0); //Mpeg2 + Mpeg2.5
         break;
+      default:
+        break;
     }
 //    if (_mp3_header_output->layer == MPEGLAYER_I)
 //      _mp3_header_output->framesize = fto_nearest_i((float)((48 * (float)_mp3_header_output->bitrate) / _mp3_header_output->frequency)) + (_tmpheader->padding_bit ? 4 : 0);
@@ -494,11 +496,11 @@
       pvbrdata += 4;
 
       //  read entire vbr header
-      int vbr_header_size = VBR_HEADER_MIN_SIZE
-                           + ((vbr_flags & FRAMES_FLAG)? 4:0)
-                           + ((vbr_flags & BYTES_FLAG)? 4:0)
-                           + ((vbr_flags & TOC_FLAG)? 100:0)
-                           + ((vbr_flags & SCALE_FLAG)? 4:0);
+      unsigned int vbr_header_size = VBR_HEADER_MIN_SIZE
+                                    + ((vbr_flags & FRAMES_FLAG)? 4:0)
+                                    + ((vbr_flags & BYTES_FLAG)? 4:0)
+                                    + ((vbr_flags & TOC_FLAG)? 100:0)
+                                    + ((vbr_flags & SCALE_FLAG)? 4:0);
 
       if (mp3size >= vbr_header_offest + vbr_header_size) 
       {
--- src/tag.cpp
+++ src/tag.cpp
@@ -646,7 +646,7 @@
  **/
 size_t ID3_Tag::Render(uchar* buffer, ID3_TagType tt) const
 {
-  ID3_MemoryWriter mw(buffer, -1);
+  ID3_MemoryWriter mw(buffer, static_cast<unsigned int>(-1));
   return this->Render(mw, tt);
 }
 
