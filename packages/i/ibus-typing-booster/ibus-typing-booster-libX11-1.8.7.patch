Index: ibus-typing-booster-2.24.2/tests/test_itb.py
===================================================================
--- ibus-typing-booster-2.24.2.orig/tests/test_itb.py
+++ ibus-typing-booster-2.24.2/tests/test_itb.py
@@ -2367,89 +2367,73 @@ class ItbTestCase(unittest.TestCase):
             ['en_US'], update_gsettings=False)
         self.engine.do_process_key_event(IBus.KEY_dead_macron, 0, 0)
         self.assertEqual(self.engine.mock_preedit_text, '¯')
-        self.engine.do_process_key_event(0x010001EB, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭ')
-        self.engine.do_process_key_event(IBus.KEY_Multi_key, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭ·')
-        self.engine.do_process_key_event(IBus.KEY_macron, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭ¯')
-        self.engine.do_process_key_event(0x010001EB, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭ')
-        self.engine.do_process_key_event(IBus.KEY_Multi_key, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭ·')
-        self.engine.do_process_key_event(IBus.KEY_underscore, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭ_')
-        self.engine.do_process_key_event(0x010001EB, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭ')
-        self.engine.do_process_key_event(IBus.KEY_dead_macron, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭ¯')
         self.engine.do_process_key_event(IBus.KEY_dead_ogonek, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭ¯˛')
+        self.assertEqual(self.engine.mock_preedit_text, '¯˛')
         self.engine.do_process_key_event(IBus.KEY_o, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭ')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭ')
         self.engine.do_process_key_event(IBus.KEY_dead_macron, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭ¯')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭ¯')
         self.engine.do_process_key_event(IBus.KEY_Multi_key, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭ¯·')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭ¯·')
         self.engine.do_process_key_event(IBus.KEY_semicolon, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭ¯·;')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭ¯·;')
         self.engine.do_process_key_event(IBus.KEY_o, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭ')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭ')
         self.engine.do_process_key_event(IBus.KEY_Multi_key, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭ·')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭ·')
         self.engine.do_process_key_event(IBus.KEY_macron, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭ¯')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭ¯')
         self.engine.do_process_key_event(IBus.KEY_dead_ogonek, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭ¯˛')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭ¯˛')
         self.engine.do_process_key_event(IBus.KEY_o, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭ')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭ')
         self.engine.do_process_key_event(IBus.KEY_Multi_key, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭ·')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭ·')
         self.engine.do_process_key_event(IBus.KEY_macron, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭ¯')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭ¯')
         self.engine.do_process_key_event(IBus.KEY_semicolon, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭ¯;')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭ¯;')
         self.engine.do_process_key_event(IBus.KEY_o, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭ')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭ')
         self.engine.do_process_key_event(IBus.KEY_Multi_key, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭ·')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭ·')
         self.engine.do_process_key_event(IBus.KEY_underscore, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭ_')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭ_')
         self.engine.do_process_key_event(IBus.KEY_dead_ogonek, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭ_˛')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭ_˛')
         self.engine.do_process_key_event(IBus.KEY_o, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭ')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭ')
         self.engine.do_process_key_event(IBus.KEY_Multi_key, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭ·')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭ·')
         self.engine.do_process_key_event(IBus.KEY_underscore, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭ_')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭ_')
         self.engine.do_process_key_event(IBus.KEY_semicolon, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭ_;')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭ_;')
         self.engine.do_process_key_event(IBus.KEY_o, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭǭ')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭ')
         self.engine.do_process_key_event(IBus.KEY_dead_caron, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭǭˇ')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭˇ')
         self.engine.do_process_key_event(IBus.KEY_EZH, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭǭǮ')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǮ')
         self.engine.do_process_key_event(IBus.KEY_Multi_key, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭǭǮ·')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǮ·')
         self.engine.do_process_key_event(IBus.KEY_c, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭǭǮc')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǮc')
         self.engine.do_process_key_event(IBus.KEY_EZH, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭǭǮǮ')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǮǮ')
         self.engine.do_process_key_event(IBus.KEY_dead_caron, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭǭǮǮˇ')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǮǮˇ')
         self.engine.do_process_key_event(IBus.KEY_ezh, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭǭǮǮǯ')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǮǮǯ')
         self.engine.do_process_key_event(IBus.KEY_Multi_key, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭǭǮǮǯ·')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǮǮǯ·')
         self.engine.do_process_key_event(IBus.KEY_c, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭǭǮǮǯc')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǮǮǯc')
         self.engine.do_process_key_event(IBus.KEY_ezh, 0, 0)
-        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǭǭǭǮǮǯǯ')
+        self.assertEqual(self.engine.mock_preedit_text, 'ǭǭǭǭǭǭǮǮǯǯ')
         self.engine.do_process_key_event(IBus.KEY_space, 0, 0)
         self.assertEqual(self.engine.mock_preedit_text, '')
-        self.assertEqual(self.engine.mock_committed_text, 'ǭǭǭǭǭǭǭǭǭǮǮǯǯ ')
+        self.assertEqual(self.engine.mock_committed_text, 'ǭǭǭǭǭǭǮǮǯǯ ')
         if self._compose_sequences.compose([IBus.KEY_Multi_key, 0x01002276, IBus.KEY_slash]) != '≸':
             self.skipTest(
                 'Compose file too old, older than '
@@ -2462,7 +2446,7 @@ class ItbTestCase(unittest.TestCase):
         self.assertEqual(self.engine.mock_preedit_text, '≸')
         self.engine.do_process_key_event(IBus.KEY_space, 0, 0)
         self.assertEqual(self.engine.mock_preedit_text, '')
-        self.assertEqual(self.engine.mock_committed_text, 'ǭǭǭǭǭǭǭǭǭǮǮǯǯ ≸ ')
+        self.assertEqual(self.engine.mock_committed_text, 'ǭǭǭǭǭǭǮǮǯǯ ≸ ')
         self.engine.do_process_key_event(IBus.KEY_Multi_key, 0, 0)
         self.assertEqual(self.engine.mock_preedit_text, '·')
         self.engine.do_process_key_event(0x0100093C, 0, 0)
@@ -2473,7 +2457,7 @@ class ItbTestCase(unittest.TestCase):
         self.engine.do_process_key_event(IBus.KEY_space, 0, 0)
         self.assertEqual(self.engine.mock_preedit_text, '')
         self.assertEqual(self.engine.mock_committed_text,
-                         'ǭǭǭǭǭǭǭǭǭǮǮǯǯ ≸ \u0915\u093C ')
+                         'ǭǭǭǭǭǭǮǮǯǯ ≸ \u0915\u093C ')
 
     def test_compose_combining_chars_in_preedit_representation(self) -> None:
         self.engine.set_current_imes(
