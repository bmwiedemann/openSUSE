-------------------------------------------------------------------
Mon Dec  2 15:18:32 UTC 2024 - Friedrich Haubensak <hsk17@mail.de>

- to support gcc14, add patch cgdb-0.8.0-configure-c99.patch (from
  gentoo) and run autoreconf in %prep stage

-------------------------------------------------------------------
Tue May 17 09:18:52 UTC 2022 - Ferdinand Thiessen <rpm@fthiessen.de>

- Update to 0.8.0:
  * CGDB now exits when gdb exits, previously if gdb exited but the
    inferior, or child of the inferior was still running, cgdb would
    possibly continue running in a non responsive state.
    Now cgdb exits when gdb does.
  * Single stepping through disassembly without debug symbols does not
    move arrow in source window. Now the arrow moves in the source
    window as expected.
  * Fix CGDB freezes when pressing "o" to open the file dialog
  * Fix breakpoint handling is broken in disasembly view
  * Fix CGDB would not process commands after F5, F6, etc
  * CGDB implements a virtual terminal in the GDB window
    * The GDB scroller is now a virtual terminal (using libvterm)
    * The scrollback buffer has been reimplemented using libvterm
      The cursor row/col position is now known, rather than just the row
    * Searching in the scrollback buffer is improved
    * The scrollback buffer size is configurable with a new option,
      scrollbackbuffersize (sbbs) and is defaulted to 10000.
    * Mark commands in the GDB scroller have been removed
    * Unicode is now fully supported in the gdb window
    * libvterm does not support reflow yet, so resizing the terminal or
      switching the window orientation (winsplitorientation) after startup
      may cause the text in the GDB window to not be as expected
    * Colors in the GDB window are not fully supported yet.
      Ncurses is difficult to work with, considering switching.
      RGB vterm colors are unsupported at the moment.
  * CGDB implements GDB/MI in favor of GDB/Annotations
  * Add the nexti and stepi configuration commands
  * Fix ANSI escape issues with GDB-9
  * Fix auto source reload issue
  * CGDB works again with newer versions of GDB (gdb 8.3 and above)
  * CGDB now supports a configurable home directory.

-------------------------------------------------------------------
Wed Aug 19 10:02:10 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- update to 0.7.1:
  * Status bar messages are now displayed properly in veritical mode.
    The message is now truncated according to the status bar width instead
    of the width of the terminal.
  * Fix spurious error from CGDB on shutdown. You may have seen,
       CGDB had unexpected results. Search the logs for more details.
    In the log there was a waitpid error. CGDB was using the API wrong.
  * Fix issue #161 - CGDB would lock up when doing a regex search from
    the status bar if the file was just opened from the file dialog and
    the search did not match any text in the file. Now the search fails
    to match text as expected.
  * Status bar commands and gdb console commands now both show gdb
    output in the gdb window (instead of only the gdb console commands).
    This fixed issue #154 on github.
  * Fixed issue where typing F8 would do a 'next', 'step' and
    screen refresh instead of just doing a 'next' command.
  * Fix issue #139 - Show appropriate logos when color disabled
    Previously, if the user had colors disabled, CGDB would still show
    logos that had ansi escape color sequences in them.
  * Fixed :highlight regression introduced in 0.7.0.
    In 0.6.8, if the user entered a :highlight command from the CGDB
    status bar, for instance:
        :highlight Comment ctermfg=Blue
    CGDB would updated the currently displayed source file
    with the requested highlighting changes. In 0.7.0 this would not occur.
    Both versions honored :highlight in the .cgdbrc file.
  * Fix issue #125 - CGDB can cross compile again.
  * The rust syntax highlighter is now case sensitive instead of case
    insensitive.
  * Fix issue #129. CGDB with old versions of ncurses (5.6 or before)
    would not display colors. Now it will display colors, but will
    not support ansi colors in the GDB window.
  * Fix issue #137. rustlexer.lpp fails to compile with some versions
    of GNU autotools.
  * Fix issue #135. CGDB would "freeze" when opening the file
    dialog if the number of files was very large. Updating the
    gdbwire parser resolved the issue.
  * Add support for readline's backward-kill-word and kill-word at gdb prompt

-------------------------------------------------------------------
Thu Jan 11 04:58:30 UTC 2018 - avindra@opensuse.org

- Update to 0.7.0
  * Support for curses was removed (only ncurses is supported)
  * Remove help2man dependency
  * hlsearch option added (off by default). Improves searching
    and displaying of searching functionality within CGDB. If
    enabled, and previous search exists, CGDB will display search
    results using the Search highlighting group. The IncSearch
    highlighting group is used to display the active search. The
    hlsearch option highlights previous searches in the source
    window, the gdb window when in scroll mode and the file dialog
    window.
  * Assembly code support.  Assembly code will be shown when no
    source code is available. The option 'set disasm' allows you
    to show mixed source/assembly when both are available.
  * Add support to enable/disable showing assembly code in CGDB.
    Disabled by default. The 'set disasm' enables showing mixed
    assembly mode by default. See the documentation for more
    information.
  * Add the :logo command to cgdb. This tells CGDB to display a
    logo in the source window.
  * Initial Rust syntax highlighter.
  * Support vi type <digit>j and <digit>k motions. Previously only
    typing j or k with out a number was supported.
  * Support for vim like marks. Showmarks option was introduced
    to show the marks in the source window. Default is true.
    You can disable the viewing of marks using 'set noshowmarks'.
  * Color support. Default is enabled.
  * Ansi escape codes representing color will show correctly.
    Configurable with the `set debugwincolor` option.
  * Add the winminwidth option- it controls the minimum width that
    a window can be resized.
  * Support for vertical or horizontal splitting of the CGDB/GDB
    windows. You can change the window orientation by using the
    command 'set winsplitorientation=horizontal or vertical'.
    horizontal is the default orientation. Type Ctrl-w to switch
    between vertical and horizontal viewing.
  * Remove the TTY mode and TTY window. It is now recommended to
    attach to your program from a separate terminal.
  * -w command line option. CGDB will wait to start until either
    a debugger is attached to it, or until a key is written to it's
    stdin. Useful for debugging CGDB itself.
  * Added scroll mode in addition to the existing GDB command mode.
    To enter scroll mode, type 'page up' when in GDB mode and to
    exit type 'q', 'i' or 'Enter'. In scroll mode, you can scroll
    through the GDB output. You can also search the GDB output with
    the /, ?, n and N keys. Vim marks are also supported.
  * Extended support for the vim G command when in CGDB mode.
    [<number>]G works as it does in vim now.
  * Support for 'executinglinedisplay' and 'selectedlinedisplay'
    configuration options. It allows you to configure how CGDB
    displays both the currently executing line and the currently
    selected line. Default for executing line is set to
    longarrow. Default for selected line is set to block. The
    'arrowstyle' option has been deprecated (but still supported).
    Use 'executinglinedisplay' instead.
- Cleanup spec file with spec-cleaner

-------------------------------------------------------------------
Thu Apr  2 17:28:14 UTC 2015 - mpluskal@suse.com

- Update project and download url
- Update dependencies
- Cleanup spec file with spec-cleaner
- Update to 0.6.8
  * Fix issue #40, the map commands were adding additional new lines
    to the mappings. For instance, 'imap a b' in the ~/.cgdb/cgdbrc
    file would cause a to map to 'b<cr>' instead of just 'b'.
  * Added feature from issue #29, added 'until' command to CGDB.
  * Updated autotools configuration files to satisfy warnings and
    recommendations produced by autotools when run.
  * Fix issue #49, a gcc compiler warning.
  * Fixed a hang consuming 100% CPU usage on OS X Mavericks (github #48).
  * Fixed a hang when quitting cgdb while inferior is running
    (github #1 and #5 and #46). This was believed to be fixed in the last
    release but I've finally reproduced the issue and fixed it for good.

-------------------------------------------------------------------
Fri Jun 14 23:18:51 UTC 2013 - nevion@gmail.com

-update to 0.6.7 
  - Changed documentation license from GFDL to GPL (github #6).

  - Fixed a hang on MacOS when quitting cgdb while inferior is
    running (github #1 and #5).

  - Fixed a crash when pressing 'n' in source window (github #5).

  - Fixed a bug opening files (and toggling breakpoints in files)
    with special characters (e.g. space) in their names.

-------------------------------------------------------------------
Tue Feb 14 14:34:03 UTC 2012 - puzel@suse.com

- fix build on sle11-sp1 

-------------------------------------------------------------------
Thu Jan 12 11:30:32 UTC 2012 - coolo@suse.com

- change license to be in spdx.org format

-------------------------------------------------------------------
Sat Sep 17 22:48:35 UTC 2011 - jengelh@medozas.de

- Remove redundant tags/sections from specfile
- Use %_smp_mflags for parallel build

-------------------------------------------------------------------
Wed Sep  7 07:44:42 UTC 2011 - puzel@suse.com

- update to cgdb-0.6.6
  - Fixed a segfault on 64-bit systems in rline.c due to a missing
    prototype of cgdb_malloc. Thanks to Pietro Cerutti for
    reporting and diagnosing this one!
  - Fixed a bug in the file dialog. When searching for a file, and
    you hit enter to select it, CGDB would sometimes skip to the
    next file that matches and open that file instead.
  - No longer set the prompt to (gdb) on startup.

-------------------------------------------------------------------
Wed Dec 22 12:14:10 UTC 2010 - puzel@novell.com

- clean up specfile 

-------------------------------------------------------------------
Wed May 26 07:35:42 UTC 2010 - puzel@novell.com

- require gdb 

-------------------------------------------------------------------
Mon Jan  4 12:56:39 UTC 2010 - puzel@novell.com

- update to cgdb-0.6.5
   * Turn autosourcereload to on by default. This matches GDB's 
     behavior.
   * Add support for :up and :down in the cgdb status bar.
     Thanks Benoit Pierre for reporting this.
   * Enhanced tgdb in a2 mode. It now understands GNAT's 
     pre-instance-choice, instance-choice, post-instance-choice 
	 extension.
   * Made searching and :commands a little more vi-like. If you abort a
     search, you can still recall the last search with 'n' or 'N'. 
	 If you backspace to the beginning of the line, a :command 
	 or /search is aborted.
   * Added some new cgdb commands.
       :c is now a synonym for :continue
       :f is now a synonym for :finish
       :n is now a synonym for :next
       :r is not a synonym for :run
       :s is now a synonym for :step
       :start is a new command that will send "start" to the debugger
       :kill is a new command that will send "kill" to the debugger
   * Shortcut mode has been removed from cgdb. If you liked it, you can
     put these commands in your cgdbrc file,
       map r :run<CR>
       map c :continue<CR>
       map f :finish<CR>
       map n :next<CR>
       map s :step<CR>
     and you will get the same functionality. Do not forget that,
       F5 is the same as 'run'.
       F6 is the same as 'continue'.
       F7 is the same as 'finish'.
       F8 is the same as 'next'.
       F10 is the same as 'step'.
     are always available.
   * Added a feature to CGDB which allows it to ask readline what key
     sequence it uses for the Home and End keys. That way, if the terminfo
     database is wrong, but the OS vendor modified /etc/inputrc, CGDB will
     have a working Home and End key.
   * CGDB fully supports the use of maps now. The feature is similar in 
     nature to the vim map feature.  It supports map, unmap, imap
     and iunmap. The map/unmap work in CGDB mode and the imap/iunmap
     work in GDB mode.
   * Added the cgdbmodekey configuration option. This allows the user to
     change the key that switches them from GDB mode to CGDB mode. The
     default value is the Escape key. This is useful for users that want
     to use readline in vi-mode.
   * Fixed a bug in CGDB where the Insert and Delete keys were not 
     recognized properly all of the time.

-------------------------------------------------------------------
Thu Mar 19 15:28:36 CET 2009 - puzel@suse.cz

- prepare for contrib 

-------------------------------------------------------------------
Fri Jul 18 13:47:19 CEST 2008 - bwalle@suse.de

- change source file format to bzip2

-------------------------------------------------------------------
Fri Jul 18 00:23:27 CEST 2008 - bwalle@suse.de

- initial package

-------------------------------------------------------------------

