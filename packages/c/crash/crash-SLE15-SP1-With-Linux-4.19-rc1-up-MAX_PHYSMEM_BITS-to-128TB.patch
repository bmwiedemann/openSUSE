From 599a6579aa916df7800f8e889d68e4287e4520dd Mon Sep 17 00:00:00 2001
From: Hari Bathini <hbathini@linux.ibm.com>
Date: Thu, 27 Sep 2018 02:06:49 +0530
Subject: ppc64: increase MAX_PHYSMEM_BITS to 128TB
Upstream: no, adapts the below upstream commit for SLE15 SP1
Git-commit: 599a6579aa916df7800f8e889d68e4287e4520dd

With Linux 4.19-rc1 commit 7d4340bb92a9df78e6e28152f3dd89d9bd82146b,
titled "powerpc/mm: Increase MAX_PHYSMEM_BITS to 128TB with
SPARSEMEM_VMEMMAP config", the PPC64 MAX_PHYSMEM_BITS value has been
bumped up to 47.  The appropriate update has been made in this patch.
(hbathini@linux.ibm.com)

[note: apply on 4.12+ for SLE 15 SP1 - incompatible with SLE 15 SP0]
---

Index: crash-7.2.8/defs.h
===================================================================
--- crash-7.2.8.orig/defs.h
+++ crash-7.2.8/defs.h
@@ -6896,6 +6896,9 @@ extern struct lkcd_environment *lkcd;
 #define is_SLES9() \
 	((THIS_KERNEL_VERSION == LINUX(2,6,5)) && kt->is_suse_kernel)
 
+#define is_SLE15SP1() \
+	((THIS_KERNEL_VERSION >= LINUX(4,12,0)) && kt->is_suse_kernel)
+
 /*
  *  gdb_interface.c
  */
Index: crash-7.2.8/ppc64.c
===================================================================
--- crash-7.2.8.orig/ppc64.c
+++ crash-7.2.8/ppc64.c
@@ -244,9 +244,14 @@ static int set_ppc64_max_physmem_bits(vo
 		 */
 		machdep->max_physmem_bits = _MAX_PHYSMEM_BITS_4_20;
 	} else if ((machdep->flags & VMEMMAP) &&
-	    ((THIS_KERNEL_VERSION >= LINUX(4,19,0)) || is_RHEL8())) {
-		/* SPARSEMEM_VMEMMAP & v4.19 kernel or later, or RHEL8 */
-		machdep->max_physmem_bits = _MAX_PHYSMEM_BITS_4_19;
+	    ((THIS_KERNEL_VERSION >= LINUX(4,19,0)) ||
+		is_RHEL8() ||
+		is_SLE15SP1())) {
+			/*
+			 * SPARSEMEM_VMEMMAP & v4.19 kernel or later,
+			 * or RHEL8 or SLE-15-SP1
+			 */
+			machdep->max_physmem_bits = _MAX_PHYSMEM_BITS_4_19;
 	} else if (THIS_KERNEL_VERSION >= LINUX(3,7,0))
 		machdep->max_physmem_bits = _MAX_PHYSMEM_BITS_3_7;
 	else
