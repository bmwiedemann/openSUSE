From 3d9fd5cd0f0f3c33dde263cba299467c4dff222b Mon Sep 17 00:00:00 2001
From: fenuks <fenuks>
Date: Mon, 29 Jan 2024 23:37:31 +0100
Subject: [PATCH] Update for tablib 2.0 compatibility

---
 CMakeLists.txt | 3 ++-
 tags/tags.cpp  | 8 ++++----
 2 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index b99e161..ad8e987 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -139,7 +139,7 @@ endif ()
 
 if (ENABLE_TAGLIB)
     if (NOT TAGLIB_FOUND)
-        set(TAGLIB_MIN_VERSION "1.6")
+        set(TAGLIB_MIN_VERSION "2.0")
         find_package(Taglib)
     endif()
     macro_log_feature(TAGLIB_FOUND "TagLib" "Tag editor, file organiser, etc." "http://taglib.github.io/")
@@ -186,6 +186,7 @@ if (TAGLIB_FOUND)
         macro_log_feature(MTP_FOUND "libmtp" "MTP Device Support." "http://libmtp.sourceforge.net")
     endif ()
 else (TAGLIB_FOUND)
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unused-but-set-variable -Wno-unused-parameter")
    set(ENABLE_DEVICES_SUPPORT OFF)
 endif ()
 
diff --git a/tags/tags.cpp b/tags/tags.cpp
index ce86a1e..5817dc1 100644
--- a/tags/tags.cpp
+++ b/tags/tags.cpp
@@ -619,7 +619,7 @@ static void readAPETags(TagLib::APE::Tag *tag, Song *song, ReplayGain *rg, QImag
         if (map.contains("COVER ART (FRONT)")) {
             const TagLib::ByteVector nullStringTerminator(1, 0);
 
-            TagLib::ByteVector item = map["COVER ART (FRONT)"].value();
+            TagLib::ByteVector item = map["COVER ART (FRONT)"].binaryData();
             int pos = item.find(nullStringTerminator);   // Skip the filename
 
             if (++pos > 0) {
@@ -1301,7 +1301,7 @@ static void readTags(const TagLib::FileRef fileref, Song *song, ReplayGain *rg,
         }
     } else if (TagLib::RIFF::WAV::File *file = dynamic_cast< TagLib::RIFF::WAV::File * >(fileref.file())) {
         if (file->tag()) {
-            readID3v2Tags(file->tag(), song, rg, img, lyrics, rating);
+            readID3v2Tags(file->ID3v2Tag(), song, rg, img, lyrics, rating);
         }
     #ifdef TAGLIB_ASF_FOUND
     } else if (TagLib::ASF::File *file = dynamic_cast< TagLib::ASF::File * >(fileref.file())) {
@@ -1419,7 +1419,7 @@ static bool writeTags(const TagLib::FileRef fileref, const Song &from, const Son
         }
     } else if (TagLib::RIFF::WAV::File *file = dynamic_cast< TagLib::RIFF::WAV::File * >(fileref.file())) {
         if (file->tag()) {
-            changed=writeID3v2Tags(file->tag(), from, to, rg, img, rating) || changed;
+            changed=writeID3v2Tags(file->ID3v2Tag(), from, to, rg, img, rating) || changed;
         }
     #ifdef TAGLIB_ASF_FOUND
     } else if (TagLib::ASF::File *file = dynamic_cast< TagLib::ASF::File * >(fileref.file())) {
@@ -1455,7 +1455,7 @@ Song read(const QString &fileName)
 
     readTags(fileref, &song, nullptr, nullptr, nullptr, nullptr);
     song.file=fileName;
-    song.time=fileref.audioProperties() ? fileref.audioProperties()->length() : 0;
+    song.time=fileref.audioProperties() ? fileref.audioProperties()->lengthInSeconds() : 0;
     return song;
 }
 
-- 
2.43.1

