diff -up chromium-122.0.6261.69/base/metrics/persistent_histogram_allocator.cc.than chromium-122.0.6261.69/base/metrics/persistent_histogram_allocator.cc
--- chromium-122.0.6261.69/base/metrics/persistent_histogram_allocator.cc.than	2024-02-22 22:42:43.000000000 +0100
+++ chromium-122.0.6261.69/base/metrics/persistent_histogram_allocator.cc	2024-02-24 13:13:32.484503735 +0100
@@ -218,13 +218,13 @@ PersistentSparseHistogramDataManager::Lo
     // The sample-record could be for any sparse histogram. Add the reference
     // to the appropriate collection for later use.
     if (found_id == match_id) {
-      found_records.emplace_back(ref, value);
+      found_records.emplace_back() = {ref, value};
       found = true;
     } else {
       std::vector<ReferenceAndSample>* samples =
           GetSampleMapRecordsWhileLocked(found_id);
       CHECK(samples);
-      samples->emplace_back(ref, value);
+      samples->emplace_back() = {ref, value};
     }
   }
 
diff -up chromium-122.0.6261.69/base/nix/mime_util_xdg.cc.than chromium-122.0.6261.69/base/nix/mime_util_xdg.cc
--- chromium-122.0.6261.69/base/nix/mime_util_xdg.cc.than	2024-02-22 22:42:43.000000000 +0100
+++ chromium-122.0.6261.69/base/nix/mime_util_xdg.cc	2024-02-24 13:13:44.158712756 +0100
@@ -56,7 +56,7 @@ void LoadAllMimeCacheFiles(MimeTypeMap&
   for (const auto& path : GetXDGDataSearchLocations(env.get())) {
     FilePath mime_cache = path.Append("mime/mime.cache");
     if (GetFileInfo(mime_cache, &info) && ParseMimeTypes(mime_cache, map)) {
-      files.emplace_back(mime_cache, info.last_modified);
+      files.emplace_back() = {mime_cache, info.last_modified};
     }
   }
 }
diff -up chromium-122.0.6261.69/base/trace_event/trace_log.cc.than chromium-122.0.6261.69/base/trace_event/trace_log.cc
--- chromium-122.0.6261.69/base/trace_event/trace_log.cc.than	2024-02-22 22:42:43.000000000 +0100
+++ chromium-122.0.6261.69/base/trace_event/trace_log.cc	2024-02-24 13:13:32.484503735 +0100
@@ -2198,8 +2198,8 @@ void TraceLog::SetTraceBufferForTesting(
 #if BUILDFLAG(USE_PERFETTO_CLIENT_LIBRARY)
 void TraceLog::OnSetup(const perfetto::DataSourceBase::SetupArgs& args) {
   AutoLock lock(track_event_lock_);
-  track_event_sessions_.emplace_back(args.internal_instance_index, *args.config,
-                                     args.backend_type);
+  track_event_sessions_.emplace_back() = {args.internal_instance_index, *args.config,
+                                     args.backend_type};
 }
 
 void TraceLog::OnStart(const perfetto::DataSourceBase::StartArgs&) {
diff -up chromium-122.0.6261.69/chrome/browser/content_settings/one_time_permission_provider.cc.than chromium-122.0.6261.69/chrome/browser/content_settings/one_time_permission_provider.cc
--- chromium-122.0.6261.69/chrome/browser/content_settings/one_time_permission_provider.cc.than	2024-02-22 22:42:50.000000000 +0100
+++ chromium-122.0.6261.69/chrome/browser/content_settings/one_time_permission_provider.cc	2024-02-24 13:13:32.485503752 +0100
@@ -252,8 +252,8 @@ void OneTimePermissionProvider::OnSuspen
 
       while (rule_iterator && rule_iterator->HasNext()) {
         auto rule = rule_iterator->Next();
-        patterns_to_delete.emplace_back(setting_type, rule->primary_pattern,
-                                        rule->secondary_pattern);
+        patterns_to_delete.emplace_back() = {setting_type, rule->primary_pattern,
+                                        rule->secondary_pattern};
         permissions::PermissionUmaUtil::RecordOneTimePermissionEvent(
             setting_type,
             permissions::OneTimePermissionEvent::EXPIRED_ON_SUSPEND);
@@ -355,8 +355,8 @@ void OneTimePermissionProvider::DeleteEn
     auto rule = rule_iterator->Next();
     if (rule->primary_pattern.Matches(origin_gurl) &&
         rule->secondary_pattern.Matches(origin_gurl)) {
-      patterns_to_delete.emplace_back(
-          content_setting_type, rule->primary_pattern, rule->secondary_pattern);
+      patterns_to_delete.emplace_back() = {
+          content_setting_type, rule->primary_pattern, rule->secondary_pattern};
       permissions::PermissionUmaUtil::RecordOneTimePermissionEvent(
           content_setting_type, trigger_event);
     }
diff -up chromium-122.0.6261.69/chrome/browser/enterprise/profile_management/profile_management_navigation_throttle.cc.than chromium-122.0.6261.69/chrome/browser/enterprise/profile_management/profile_management_navigation_throttle.cc
--- chromium-122.0.6261.69/chrome/browser/enterprise/profile_management/profile_management_navigation_throttle.cc.than	2024-02-22 22:42:50.000000000 +0100
+++ chromium-122.0.6261.69/chrome/browser/enterprise/profile_management/profile_management_navigation_throttle.cc	2024-02-24 13:13:32.485503752 +0100
@@ -67,8 +67,8 @@ base::flat_map<std::string, SAMLProfileA
   // TODO(crbug.com/1445072): Add actual domains with attribute names.
   profile_attributes->insert(std::make_pair(
       "supported.test",
-      SAMLProfileAttributes("placeholderName", "placeholderDomain",
-                            "placeholderToken")));
+      SAMLProfileAttributes{"placeholderName", "placeholderDomain",
+                            "placeholderToken"}));
 
   // Extract domains and attributes from the command line switch.
   const base::CommandLine& command_line =
diff -up chromium-122.0.6261.69/chrome/browser/ui/autofill/autofill_context_menu_manager.cc.than chromium-122.0.6261.69/chrome/browser/ui/autofill/autofill_context_menu_manager.cc
--- chromium-122.0.6261.69/chrome/browser/ui/autofill/autofill_context_menu_manager.cc.than	2024-02-22 22:42:54.000000000 +0100
+++ chromium-122.0.6261.69/chrome/browser/ui/autofill/autofill_context_menu_manager.cc	2024-02-24 13:13:44.159712774 +0100
@@ -283,8 +283,8 @@ void AutofillContextMenuManager::Execute
     AutofillManager& manager) {
   auto& driver = static_cast<ContentAutofillDriver&>(manager.driver());
   driver.browser_events().RendererShouldTriggerSuggestions(
-      FieldGlobalId(driver.GetFrameToken(),
-                    FieldRendererId(params_.field_renderer_id)),
+      FieldGlobalId{driver.GetFrameToken(),
+                    FieldRendererId(params_.field_renderer_id)},
       AutofillSuggestionTriggerSource::kManualFallbackPayments);
 }
 
diff -up chromium-122.0.6261.69/chrome/browser/ui/omnibox/chrome_omnibox_client.cc.than chromium-122.0.6261.69/chrome/browser/ui/omnibox/chrome_omnibox_client.cc
--- chromium-122.0.6261.69/chrome/browser/ui/omnibox/chrome_omnibox_client.cc.than	2024-02-22 22:42:55.000000000 +0100
+++ chromium-122.0.6261.69/chrome/browser/ui/omnibox/chrome_omnibox_client.cc	2024-02-24 13:13:32.485503752 +0100
@@ -474,10 +474,10 @@ void ChromeOmniboxClient::OnAutocomplete
               alternative_nav_match);
 
   // Store the details necessary to open the omnibox match via browser commands.
-  location_bar_->set_navigation_params(LocationBar::NavigationParams(
+  location_bar_->set_navigation_params(LocationBar::NavigationParams{
       destination_url, disposition, transition, match_selection_timestamp,
       destination_url_entered_without_scheme,
-      destination_url_entered_with_http_scheme));
+      destination_url_entered_with_http_scheme});
 
   if (browser_) {
     auto navigation = chrome::OpenCurrentURL(browser_);
diff -up chromium-122.0.6261.69/chrome/browser/ui/safety_hub/menu_notification_service.cc.than chromium-122.0.6261.69/chrome/browser/ui/safety_hub/menu_notification_service.cc
diff -up chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_ask_view.cc.than chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_ask_view.cc
--- chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_ask_view.cc.than	2024-02-22 22:42:55.000000000 +0100
+++ chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_ask_view.cc	2024-02-24 13:13:32.486503770 +0100
@@ -60,12 +60,12 @@ std::vector<EmbeddedPermissionPromptAskV
 EmbeddedPermissionPromptAskView::GetButtonsConfiguration() const {
   std::vector<ButtonConfiguration> buttons;
   if (base::FeatureList::IsEnabled(permissions::features::kOneTimePermission)) {
-    buttons.emplace_back(
+    buttons.emplace_back() = {
         l10n_util::GetStringUTF16(IDS_PERMISSION_ALLOW_THIS_TIME),
-        ButtonType::kAllowThisTime, ui::ButtonStyle::kTonal);
+        ButtonType::kAllowThisTime, ui::ButtonStyle::kTonal};
   }
-  buttons.emplace_back(l10n_util::GetStringUTF16(IDS_PERMISSION_ALLOW),
-                       ButtonType::kAllow, ui::ButtonStyle::kTonal, kAllowId);
+  buttons.emplace_back() = {l10n_util::GetStringUTF16(IDS_PERMISSION_ALLOW),
+                       ButtonType::kAllow, ui::ButtonStyle::kTonal, kAllowId};
   return buttons;
 }
 
diff -up chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_base_view.h.than chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_base_view.h
--- chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_base_view.h.than	2024-02-22 22:42:55.000000000 +0100
+++ chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_base_view.h	2024-02-24 13:13:32.486503770 +0100
@@ -87,6 +87,7 @@ class EmbeddedPermissionPromptBaseView :
   struct RequestLineConfiguration {
     const raw_ptr<const gfx::VectorIcon> icon;
     std::u16string message;
+    RequestLineConfiguration(auto i, auto m) : icon(i), message(m) { }
   };
 
   struct ButtonConfiguration {
diff -up chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_policy_view.cc.than chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_policy_view.cc
--- chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_policy_view.cc.than	2024-02-22 22:42:55.000000000 +0100
+++ chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_policy_view.cc	2024-02-24 13:13:32.486503770 +0100
@@ -64,8 +64,8 @@ EmbeddedPermissionPromptPolicyView::GetR
 std::vector<EmbeddedPermissionPromptPolicyView::ButtonConfiguration>
 EmbeddedPermissionPromptPolicyView::GetButtonsConfiguration() const {
   std::vector<ButtonConfiguration> buttons;
-  buttons.emplace_back(l10n_util::GetStringUTF16(IDS_EMBEDDED_PROMPT_OK_LABEL),
-                       ButtonType::kPolicyOK, ui::ButtonStyle::kTonal);
+  buttons.emplace_back() = {l10n_util::GetStringUTF16(IDS_EMBEDDED_PROMPT_OK_LABEL),
+                       ButtonType::kPolicyOK, ui::ButtonStyle::kTonal};
   return buttons;
 }
 
diff -up chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_denied_view.cc.than chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_denied_view.cc
--- chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_denied_view.cc.than	2024-02-22 22:42:55.000000000 +0100
+++ chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_denied_view.cc	2024-02-24 13:13:44.153712667 +0100
@@ -79,17 +79,17 @@ EmbeddedPermissionPromptPreviouslyDenied
 std::vector<EmbeddedPermissionPromptPreviouslyDeniedView::ButtonConfiguration>
 EmbeddedPermissionPromptPreviouslyDeniedView::GetButtonsConfiguration() const {
   std::vector<ButtonConfiguration> buttons;
-  buttons.emplace_back(
+  buttons.emplace_back() = {
       l10n_util::GetStringUTF16(IDS_EMBEDDED_PROMPT_CONTINUE_NOT_ALLOWING),
-      ButtonType::kContinueNotAllowing, ui::ButtonStyle::kTonal);
+      ButtonType::kContinueNotAllowing, ui::ButtonStyle::kTonal};
 
   if (base::FeatureList::IsEnabled(permissions::features::kOneTimePermission)) {
-    buttons.emplace_back(
+    buttons.emplace_back() = {
         l10n_util::GetStringUTF16(IDS_PERMISSION_ALLOW_THIS_TIME),
-        ButtonType::kAllowThisTime, ui::ButtonStyle::kTonal, kAllowThisTimeId);
+        ButtonType::kAllowThisTime, ui::ButtonStyle::kTonal, kAllowThisTimeId};
   } else {
-    buttons.emplace_back(l10n_util::GetStringUTF16(IDS_PERMISSION_ALLOW),
-                         ButtonType::kAllow, ui::ButtonStyle::kTonal);
+    buttons.emplace_back() = {l10n_util::GetStringUTF16(IDS_PERMISSION_ALLOW),
+                         ButtonType::kAllow, ui::ButtonStyle::kTonal};
   }
   return buttons;
 }
diff -up chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_granted_view.cc.than chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_granted_view.cc
--- chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_granted_view.cc.than	2024-02-22 22:42:55.000000000 +0100
+++ chromium-122.0.6261.69/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_granted_view.cc	2024-02-24 13:13:44.153712667 +0100
@@ -74,12 +74,12 @@ EmbeddedPermissionPromptPreviouslyGrante
 std::vector<EmbeddedPermissionPromptPreviouslyGrantedView::ButtonConfiguration>
 EmbeddedPermissionPromptPreviouslyGrantedView::GetButtonsConfiguration() const {
   std::vector<ButtonConfiguration> buttons;
-  buttons.emplace_back(
+  buttons.emplace_back() = {
       l10n_util::GetStringUTF16(IDS_EMBEDDED_PROMPT_CONTINUE_ALLOWING),
-      ButtonType::kContinueAllowing, ui::ButtonStyle::kTonal);
+      ButtonType::kContinueAllowing, ui::ButtonStyle::kTonal};
 
-  buttons.emplace_back(
+  buttons.emplace_back() = {
       l10n_util::GetStringUTF16(IDS_EMBEDDED_PROMPT_STOP_ALLOWING),
-      ButtonType::kStopAllowing, ui::ButtonStyle::kTonal, kStopAllowingId);
+      ButtonType::kStopAllowing, ui::ButtonStyle::kTonal, kStopAllowingId};
   return buttons;
 }
diff -up chromium-122.0.6261.69/chrome/browser/ui/web_applications/sub_apps_service_impl.cc.than chromium-122.0.6261.69/chrome/browser/ui/web_applications/sub_apps_service_impl.cc
--- chromium-122.0.6261.69/chrome/browser/ui/web_applications/sub_apps_service_impl.cc.than	2024-02-22 22:42:55.000000000 +0100
+++ chromium-122.0.6261.69/chrome/browser/ui/web_applications/sub_apps_service_impl.cc	2024-02-24 13:13:44.159712774 +0100
@@ -102,7 +102,7 @@ AddOptionsFromMojo(
                      ConvertPathToUrl(sub_app->manifest_id_path, origin));
     ASSIGN_OR_RETURN(GURL install_url,
                      ConvertPathToUrl(sub_app->install_url_path, origin));
-    sub_apps.emplace_back(std::move(manifest_id), std::move(install_url));
+    sub_apps.emplace_back() = {std::move(manifest_id), std::move(install_url)};
   }
   return sub_apps;
 }
@@ -391,7 +391,7 @@ void SubAppsServiceImpl::ScheduleSubAppI
         base::BindOnce(
             [](webapps::ManifestId manifest_id, const webapps::AppId& app_id,
                webapps::InstallResultCode result_code) {
-              return SubAppInstallResult(manifest_id, app_id, result_code);
+              return SubAppInstallResult{manifest_id, app_id, result_code};
             },
             manifest_id)
             .Then(install_results_collector));
diff -up chromium-122.0.6261.69/chrome/test/chromedriver/capabilities.cc.than chromium-122.0.6261.69/chrome/test/chromedriver/capabilities.cc
--- chromium-122.0.6261.69/chrome/test/chromedriver/capabilities.cc.than	2024-02-22 22:42:56.000000000 +0100
+++ chromium-122.0.6261.69/chrome/test/chromedriver/capabilities.cc	2024-02-24 13:13:32.486503770 +0100
@@ -346,7 +346,7 @@ Status ParseMobileEmulation(const base::
                         "'version' field of type string");
         }
 
-        brands.emplace_back(*brand, *version);
+        brands.emplace_back() = {*brand, *version};
       }
 
       client_hints.brands = std::move(brands);
@@ -384,7 +384,7 @@ Status ParseMobileEmulation(const base::
                         "a 'version' field of type string");
         }
 
-        full_version_list.emplace_back(*brand, *version);
+        full_version_list.emplace_back() = {*brand, *version};
       }
 
       client_hints.full_version_list = std::move(full_version_list);
diff -up chromium-122.0.6261.69/components/password_manager/core/browser/password_manager.cc.than chromium-122.0.6261.69/components/password_manager/core/browser/password_manager.cc
--- chromium-122.0.6261.69/components/password_manager/core/browser/password_manager.cc.than	2024-02-22 22:43:02.000000000 +0100
+++ chromium-122.0.6261.69/components/password_manager/core/browser/password_manager.cc	2024-02-24 13:13:44.154712685 +0100
@@ -673,7 +673,7 @@ void PasswordManager::OnUserModifiedNonP
     it->second.last_change = base::Time::Now();
   } else {
     possible_usernames_.Put(
-        PossibleUsernameFieldIdentifier(driver_id, renderer_id),
+        PossibleUsernameFieldIdentifier{driver_id, renderer_id},
         PossibleUsernameData(GetSignonRealm(driver->GetLastCommittedURL()),
                              renderer_id, value, base::Time::Now(), driver_id,
                              autocomplete_attribute_has_username,
diff -up chromium-122.0.6261.69/components/performance_manager/worker_watcher.cc.than chromium-122.0.6261.69/components/performance_manager/worker_watcher.cc
--- chromium-122.0.6261.69/components/performance_manager/worker_watcher.cc.than	2024-02-22 22:43:02.000000000 +0100
+++ chromium-122.0.6261.69/components/performance_manager/worker_watcher.cc	2024-02-24 13:13:44.158712756 +0100
@@ -239,7 +239,7 @@ void WorkerWatcher::OnWorkerCreated(
   DCHECK(insertion_result.second);
 
   absl::visit(
-      base::Overloaded(
+      base::Overloaded{
           [&,
            this](const content::GlobalRenderFrameHostId& render_frame_host_id) {
             AddFrameClientConnection(insertion_result.first->second.get(),
@@ -248,7 +248,7 @@ void WorkerWatcher::OnWorkerCreated(
           [&, this](blink::DedicatedWorkerToken dedicated_worker_token) {
             ConnectDedicatedWorkerClient(insertion_result.first->second.get(),
                                          dedicated_worker_token);
-          }),
+          }},
       creator);
 }
 
@@ -265,7 +265,7 @@ void WorkerWatcher::OnBeforeWorkerDestro
   // First disconnect the creator's node from this worker node.
 
   absl::visit(
-      base::Overloaded(
+      base::Overloaded{
           [&,
            this](const content::GlobalRenderFrameHostId& render_frame_host_id) {
             RemoveFrameClientConnection(worker_node.get(),
@@ -274,7 +274,7 @@ void WorkerWatcher::OnBeforeWorkerDestro
           [&, this](blink::DedicatedWorkerToken dedicated_worker_token) {
             DisconnectDedicatedWorkerClient(worker_node.get(),
                                             dedicated_worker_token);
-          }),
+          }},
       creator);
 
   // Disconnect all child workers before destroying the node.
@@ -446,7 +446,7 @@ void WorkerWatcher::OnControlleeAdded(
     const std::string& client_uuid,
     const content::ServiceWorkerClientInfo& client_info) {
   absl::visit(
-      base::Overloaded(
+      base::Overloaded{
           [&, this](content::GlobalRenderFrameHostId render_frame_host_id) {
             // For window clients, it is necessary to wait until the navigation
             // has committed to a RenderFrameHost.
@@ -484,7 +484,7 @@ void WorkerWatcher::OnControlleeAdded(
               ConnectSharedWorkerClient(service_worker_node,
                                         shared_worker_token);
             }
-          }),
+          }},
       client_info);
 }
 
@@ -524,7 +524,7 @@ void WorkerWatcher::OnControlleeRemoved(
     return;
 
   absl::visit(
-      base::Overloaded(
+      base::Overloaded{
           [&, this](content::GlobalRenderFrameHostId render_frame_host_id) {
             RemoveFrameClientConnection(worker_node, render_frame_host_id);
           },
@@ -534,7 +534,7 @@ void WorkerWatcher::OnControlleeRemoved(
           },
           [&, this](blink::SharedWorkerToken shared_worker_token) {
             DisconnectSharedWorkerClient(worker_node, shared_worker_token);
-          }),
+          }},
       client);
 }
 
@@ -810,7 +810,7 @@ void WorkerWatcher::ConnectAllServiceWor
 
   for (const auto& kv : it->second) {
     absl::visit(
-        base::Overloaded(
+        base::Overloaded{
             [&, this](content::GlobalRenderFrameHostId render_frame_host_id) {
               AddFrameClientConnection(service_worker_node,
                                        render_frame_host_id);
@@ -822,7 +822,7 @@ void WorkerWatcher::ConnectAllServiceWor
             [&, this](blink::SharedWorkerToken shared_worker_token) {
               ConnectSharedWorkerClient(service_worker_node,
                                         shared_worker_token);
-            }),
+            }},
         kv.second);
   }
 }
@@ -837,7 +837,7 @@ void WorkerWatcher::DisconnectAllService
 
   for (const auto& kv : it->second) {
     absl::visit(
-        base::Overloaded(
+        base::Overloaded{
             [&, this](
                 const content::GlobalRenderFrameHostId& render_frame_host_id) {
               RemoveFrameClientConnection(service_worker_node,
@@ -851,7 +851,7 @@ void WorkerWatcher::DisconnectAllService
             [&, this](const blink::SharedWorkerToken& shared_worker_token) {
               DisconnectSharedWorkerClient(service_worker_node,
                                            shared_worker_token);
-            }),
+            }},
         kv.second);
   }
 }
diff -up chromium-122.0.6261.69/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.cc.than chromium-122.0.6261.69/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.cc
--- chromium-122.0.6261.69/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.cc.than	2024-02-22 22:43:05.000000000 +0100
+++ chromium-122.0.6261.69/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.cc	2024-02-24 13:13:44.151712632 +0100
@@ -1573,7 +1573,7 @@ void SkiaOutputSurfaceImplOnGpu::CopyOut
 
       // Issue readbacks from the surfaces:
       for (size_t i = 0; i < CopyOutputResult::kNV12MaxPlanes; ++i) {
-        SkISize size(plane_surfaces[i]->width(), plane_surfaces[i]->height());
+        SkISize size{plane_surfaces[i]->width(), plane_surfaces[i]->height()};
         SkImageInfo dst_info = SkImageInfo::Make(
             size, (i == 0) ? kAlpha_8_SkColorType : kR8G8_unorm_SkColorType,
             kUnpremul_SkAlphaType);
diff -up chromium-122.0.6261.69/content/browser/download/save_package.cc.than chromium-122.0.6261.69/content/browser/download/save_package.cc
--- chromium-122.0.6261.69/content/browser/download/save_package.cc.than	2024-02-22 22:43:05.000000000 +0100
+++ chromium-122.0.6261.69/content/browser/download/save_package.cc	2024-02-24 13:13:44.151712632 +0100
@@ -801,8 +801,8 @@ void SavePackage::Finish() {
   if (download_) {
     std::vector<download::DownloadSaveItemData::ItemInfo> files;
     for (auto& item : saved_success_items_) {
-      files.emplace_back(item.second->full_path(), item.second->url(),
-                         item.second->referrer().url);
+      files.emplace_back() = {item.second->full_path(), item.second->url(),
+                         item.second->referrer().url};
     }
     download::DownloadSaveItemData::AttachItemData(download_, std::move(files));
   }
diff -up chromium-122.0.6261.69/content/browser/first_party_sets/first_party_set_parser.cc.than chromium-122.0.6261.69/content/browser/first_party_sets/first_party_set_parser.cc
--- chromium-122.0.6261.69/content/browser/first_party_sets/first_party_set_parser.cc.than	2024-02-22 22:43:05.000000000 +0100
+++ chromium-122.0.6261.69/content/browser/first_party_sets/first_party_set_parser.cc	2024-02-24 13:13:44.158712756 +0100
@@ -773,7 +773,7 @@ FirstPartySetParser::ParseSetsFromEnterp
                      context.GetPolicySetsFromList(
                          policy.FindList(kFirstPartySetPolicyAdditionsField),
                          PolicySetType::kAddition));
-    return ParsedPolicySetLists(std::move(replacements), std::move(additions));
+    return ParsedPolicySetLists{std::move(replacements), std::move(additions)};
   }();
 
   context.PostProcessSetLists(set_lists);
diff -up chromium-122.0.6261.69/content/browser/interest_group/header_direct_from_seller_signals.h.than chromium-122.0.6261.69/content/browser/interest_group/header_direct_from_seller_signals.h
--- chromium-122.0.6261.69/content/browser/interest_group/header_direct_from_seller_signals.h.than	2024-02-22 22:43:05.000000000 +0100
+++ chromium-122.0.6261.69/content/browser/interest_group/header_direct_from_seller_signals.h	2024-02-24 13:13:44.158712756 +0100
@@ -133,6 +133,7 @@ class CONTENT_EXPORT HeaderDirectFromSel
 
     // The Ad-Auction-Signals response served by `origin`.
     std::string response_json;
+    UnprocessedResponse(auto u, auto s) : origin(u), response_json(s) { }
   };
 
   // Information from ParseAndFind() calls used by ParseAndFindCompleted.
diff -up chromium-122.0.6261.69/content/browser/interest_group/interest_group_storage.cc.than chromium-122.0.6261.69/content/browser/interest_group/interest_group_storage.cc
--- chromium-122.0.6261.69/content/browser/interest_group/interest_group_storage.cc.than	2024-02-22 22:43:05.000000000 +0100
+++ chromium-122.0.6261.69/content/browser/interest_group/interest_group_storage.cc	2024-02-24 13:13:44.152712649 +0100
@@ -3461,10 +3461,10 @@ DoGetKAnonymityData(sql::Database& db,
 
   std::vector<StorageInterestGroup::KAnonymityData> k_anon_data;
   while (interest_group_kanon_query.Step()) {
-    k_anon_data.emplace_back(
+    k_anon_data.emplace_back() = {
         /*key=*/interest_group_kanon_query.ColumnString(0),
         /*is_k_anonymous=*/interest_group_kanon_query.ColumnBool(1),
-        /*last_updated=*/interest_group_kanon_query.ColumnTime(2));
+        /*last_updated=*/interest_group_kanon_query.ColumnTime(2)};
   }
   if (!interest_group_kanon_query.Succeeded()) {
     return std::nullopt;
diff -up chromium-122.0.6261.69/content/browser/renderer_host/render_frame_host_impl.cc.than chromium-122.0.6261.69/content/browser/renderer_host/render_frame_host_impl.cc
--- chromium-122.0.6261.69/content/browser/renderer_host/render_frame_host_impl.cc.than	2024-02-24 13:13:44.157712739 +0100
+++ chromium-122.0.6261.69/content/browser/renderer_host/render_frame_host_impl.cc	2024-02-24 13:18:39.480119447 +0100
@@ -8632,7 +8632,7 @@ void RenderFrameHostImpl::SendFencedFram
   for (const blink::FencedFrame::ReportingDestination& destination :
        destinations) {
     SendFencedFrameReportingBeaconInternal(
-        DestinationEnumEvent(event_type, event_data), destination);
+        DestinationEnumEvent{event_type, event_data}, destination);
   }
 }
 
@@ -8661,7 +8661,7 @@ void RenderFrameHostImpl::SendFencedFram
   }
 
   SendFencedFrameReportingBeaconInternal(
-      DestinationURLEvent(destination_url),
+      DestinationURLEvent{destination_url},
       blink::FencedFrame::ReportingDestination::kBuyer);
 }
 
@@ -8792,7 +8792,7 @@ void RenderFrameHostImpl::MaybeSendFence
         data = info->data;
       }
       initiator_rfh->SendFencedFrameReportingBeaconInternal(
-          AutomaticBeaconEvent(event_type, data), destination,
+          AutomaticBeaconEvent{event_type, data}, destination,
           navigation_request.GetNavigationId());
     }
   } else {
@@ -8803,7 +8803,7 @@ void RenderFrameHostImpl::MaybeSendFence
     for (blink::FencedFrame::ReportingDestination destination :
          info->destinations) {
       initiator_rfh->SendFencedFrameReportingBeaconInternal(
-          AutomaticBeaconEvent(event_type, info->data), destination,
+          AutomaticBeaconEvent{event_type, info->data}, destination,
           navigation_request.GetNavigationId());
     }
   }
diff -up chromium-122.0.6261.69/content/browser/service_worker/service_worker_container_host.cc.than chromium-122.0.6261.69/content/browser/service_worker/service_worker_container_host.cc
--- chromium-122.0.6261.69/content/browser/service_worker/service_worker_container_host.cc.than	2024-02-22 22:43:06.000000000 +0100
+++ chromium-122.0.6261.69/content/browser/service_worker/service_worker_container_host.cc	2024-02-24 13:13:44.159712774 +0100
@@ -870,7 +870,7 @@ ServiceWorkerContainerHost::GetClientTyp
   DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_);
   DCHECK(client_info_);
   return absl::visit(
-      base::Overloaded(
+      base::Overloaded{
           [](GlobalRenderFrameHostId render_frame_host_id) {
             return blink::mojom::ServiceWorkerClientType::kWindow;
           },
@@ -879,7 +879,7 @@ ServiceWorkerContainerHost::GetClientTyp
           },
           [](blink::SharedWorkerToken shared_worker_token) {
             return blink::mojom::ServiceWorkerClientType::kSharedWorker;
-          }),
+          }},
       *client_info_);
 }
 
diff -up chromium-122.0.6261.69/content/browser/service_worker/service_worker_main_resource_loader_interceptor.cc.than chromium-122.0.6261.69/content/browser/service_worker/service_worker_main_resource_loader_interceptor.cc
--- chromium-122.0.6261.69/content/browser/service_worker/service_worker_main_resource_loader_interceptor.cc.than	2024-02-22 22:43:06.000000000 +0100
+++ chromium-122.0.6261.69/content/browser/service_worker/service_worker_main_resource_loader_interceptor.cc	2024-02-24 13:13:44.159712774 +0100
@@ -363,10 +363,10 @@ ServiceWorkerMainResourceLoaderIntercept
   }
   auto* storage_partition = process->GetStoragePartition();
 
-  return absl::visit(base::Overloaded([&, this](auto token) {
+  return absl::visit(base::Overloaded{[&, this](auto token) {
                        return GetStorageKeyFromWorkerHost(storage_partition,
                                                           token, origin);
-                     }),
+                     }},
                      *worker_token_);
 }
 
diff -up chromium-122.0.6261.69/content/browser/worker_host/dedicated_worker_host.cc.than chromium-122.0.6261.69/content/browser/worker_host/dedicated_worker_host.cc
--- chromium-122.0.6261.69/content/browser/worker_host/dedicated_worker_host.cc.than	2024-02-22 22:43:06.000000000 +0100
+++ chromium-122.0.6261.69/content/browser/worker_host/dedicated_worker_host.cc	2024-02-24 13:13:44.159712774 +0100
@@ -252,7 +252,7 @@ void DedicatedWorkerHost::StartScriptLoa
   RenderFrameHostImpl* creator_render_frame_host = nullptr;
   DedicatedWorkerHost* creator_worker = nullptr;
 
-  absl::visit(base::Overloaded(
+  absl::visit(base::Overloaded{
                   [&](const GlobalRenderFrameHostId& render_frame_host_id) {
                     creator_render_frame_host =
                         RenderFrameHostImpl::FromID(render_frame_host_id);
@@ -260,7 +260,7 @@ void DedicatedWorkerHost::StartScriptLoa
                   [&](blink::DedicatedWorkerToken dedicated_worker_token) {
                     creator_worker = service_->GetDedicatedWorkerHostFromToken(
                         dedicated_worker_token);
-                  }),
+                  }},
               creator_);
 
   if (!creator_render_frame_host && !creator_worker) {
diff -up chromium-122.0.6261.69/net/dns/host_resolver_cache.cc.than chromium-122.0.6261.69/net/dns/host_resolver_cache.cc
--- chromium-122.0.6261.69/net/dns/host_resolver_cache.cc.than	2024-02-22 22:43:17.000000000 +0100
+++ chromium-122.0.6261.69/net/dns/host_resolver_cache.cc	2024-02-24 13:13:44.152712649 +0100
@@ -368,7 +368,7 @@ void HostResolverCache::Set(
 
   std::string domain_name = result->domain_name();
   entries_.emplace(
-      Key(std::move(domain_name), network_anonymization_key),
+      Key{std::move(domain_name), network_anonymization_key},
       Entry(std::move(result), source, secure, staleness_generation));
 
   if (entries_.size() > max_entries_) {
diff -up chromium-122.0.6261.69/third_party/blink/renderer/platform/fonts/font_palette.h.than chromium-122.0.6261.69/third_party/blink/renderer/platform/fonts/font_palette.h
--- chromium-122.0.6261.69/third_party/blink/renderer/platform/fonts/font_palette.h.than	2024-02-22 22:43:25.000000000 +0100
+++ chromium-122.0.6261.69/third_party/blink/renderer/platform/fonts/font_palette.h	2024-02-24 13:13:44.152712649 +0100
@@ -96,7 +96,7 @@ class PLATFORM_EXPORT FontPalette : publ
       Color::ColorSpace color_interpolation_space,
       absl::optional<Color::HueInterpolationMethod> hue_interpolation_method) {
     return base::AdoptRef(new FontPalette(
-        start, end, NonNormalizedPercentages(start_percentage, end_percentage),
+        start, end, NonNormalizedPercentages{start_percentage, end_percentage},
         normalized_percentage, alpha_multiplier, color_interpolation_space,
         hue_interpolation_method));
   }
@@ -170,7 +170,7 @@ class PLATFORM_EXPORT FontPalette : publ
       double normalized_percentage) {
     double end_percentage = normalized_percentage * 100.0;
     double start_percentage = 100.0 - end_percentage;
-    return NonNormalizedPercentages(start_percentage, end_percentage);
+    return NonNormalizedPercentages{start_percentage, end_percentage};
   }
 
   double GetAlphaMultiplier() const {
diff -up chromium-122.0.6261.69/third_party/blink/renderer/platform/fonts/palette_interpolation.cc.than chromium-122.0.6261.69/third_party/blink/renderer/platform/fonts/palette_interpolation.cc
--- chromium-122.0.6261.69/third_party/blink/renderer/platform/fonts/palette_interpolation.cc.than	2024-02-22 22:43:25.000000000 +0100
+++ chromium-122.0.6261.69/third_party/blink/renderer/platform/fonts/palette_interpolation.cc	2024-02-24 13:13:44.152712649 +0100
@@ -31,7 +31,7 @@ Vector<FontPalette::FontPaletteOverride>
         color_interpolation_space, hue_interpolation_method, start_color,
         end_color, percentage, alpha_multiplier);
 
-    FontPalette::FontPaletteOverride result_color_record(i, result_color);
+    FontPalette::FontPaletteOverride result_color_record{static_cast<int>(i), result_color};
     result_color_records.push_back(result_color_record);
   }
   return result_color_records;
diff -up chromium-122.0.6261.69/third_party/pdfium/core/fpdfapi/render/cpdf_renderstatus.cpp.than chromium-122.0.6261.69/third_party/pdfium/core/fpdfapi/render/cpdf_renderstatus.cpp
--- chromium-122.0.6261.69/third_party/pdfium/core/fpdfapi/render/cpdf_renderstatus.cpp.than	2024-02-22 22:45:02.000000000 +0100
+++ chromium-122.0.6261.69/third_party/pdfium/core/fpdfapi/render/cpdf_renderstatus.cpp	2024-02-24 13:13:44.153712667 +0100
@@ -507,7 +507,7 @@ void CPDF_RenderStatus::ProcessClipPath(
     } else {
       m_pDevice->SetClip_PathFill(
           *pPath, &mtObj2Device,
-          CFX_FillRenderOptions(ClipPath.GetClipType(i)));
+          CFX_FillRenderOptions{ClipPath.GetClipType(i)});
     }
   }
 
diff -up chromium-122.0.6261.69/ui/base/wayland/color_manager_util.h.than chromium-122.0.6261.69/ui/base/wayland/color_manager_util.h
--- chromium-122.0.6261.69/ui/base/wayland/color_manager_util.h.than	2024-02-22 22:44:12.000000000 +0100
+++ chromium-122.0.6261.69/ui/base/wayland/color_manager_util.h	2024-02-24 13:13:44.153712667 +0100
@@ -52,53 +52,53 @@ constexpr auto kChromaticityMap = base::
     zcr_color_manager_v1_chromaticity_names,
     PrimaryVersion>(
     {{ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_BT601_525_LINE,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::SMPTE170M,
-                     kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::SMPTE170M,
+                     kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_BT601_625_LINE,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::BT470BG,
-                     kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::BT470BG,
+                     kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTE170M,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::SMPTE170M,
-                     kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::SMPTE170M,
+                     kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_BT709,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::BT709, kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::BT709, kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_BT2020,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::BT2020, kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::BT2020, kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SRGB,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::BT709, kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::BT709, kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_DISPLAYP3,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::P3, kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::P3, kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_ADOBERGB,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::ADOBE_RGB,
-                     kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::ADOBE_RGB,
+                     kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_WIDE_GAMUT_COLOR_SPIN,
-      PrimaryVersion(
+      PrimaryVersion{
           gfx::ColorSpace::PrimaryID::WIDE_GAMUT_COLOR_SPIN,
-          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_WIDE_GAMUT_COLOR_SPIN_SINCE_VERSION)},
+          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_WIDE_GAMUT_COLOR_SPIN_SINCE_VERSION}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_BT470M,
-      PrimaryVersion(
+      PrimaryVersion{
           gfx::ColorSpace::PrimaryID::BT470M,
-          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_BT470M_SINCE_VERSION)},
+          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_BT470M_SINCE_VERSION}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTE240M,
-      PrimaryVersion(
+      PrimaryVersion{
           gfx::ColorSpace::PrimaryID::SMPTE240M,
-          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTE240M_SINCE_VERSION)},
+          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTE240M_SINCE_VERSION}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_XYZ_D50,
-      PrimaryVersion(
+      PrimaryVersion{
           gfx::ColorSpace::PrimaryID::XYZ_D50,
-          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_XYZ_D50_SINCE_VERSION)},
+          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_XYZ_D50_SINCE_VERSION}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTEST428_1,
-      PrimaryVersion(
+      PrimaryVersion{
           gfx::ColorSpace::PrimaryID::SMPTEST428_1,
-          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTEST428_1_SINCE_VERSION)},
+          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTEST428_1_SINCE_VERSION}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTEST431_2,
-      PrimaryVersion(
+      PrimaryVersion{
           gfx::ColorSpace::PrimaryID::SMPTEST431_2,
-          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTEST431_2_SINCE_VERSION)},
+          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTEST431_2_SINCE_VERSION}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_FILM,
-      PrimaryVersion(
+      PrimaryVersion{
           gfx::ColorSpace::PrimaryID::FILM,
-          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_FILM_SINCE_VERSION)}});
+          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_FILM_SINCE_VERSION}}});
 
 // A map from the zcr_color_manager_v1 eotf_names enum values
 // representing well-known EOTFs, to their equivalent TransferIDs.
@@ -107,68 +107,68 @@ constexpr auto kEotfMap = base::MakeFixe
     zcr_color_manager_v1_eotf_names,
     TransferVersion>({
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LINEAR,
-     TransferVersion(gfx::ColorSpace::TransferID::LINEAR,
-                     kDefaultSinceVersion)},
+     TransferVersion{gfx::ColorSpace::TransferID::LINEAR,
+                     kDefaultSinceVersion}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB,
-     TransferVersion(gfx::ColorSpace::TransferID::SRGB, kDefaultSinceVersion)},
+     TransferVersion{gfx::ColorSpace::TransferID::SRGB, kDefaultSinceVersion}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB_HDR,
-     TransferVersion(gfx::ColorSpace::TransferID::SRGB_HDR,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB_HDR_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::SRGB_HDR,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB_HDR_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT709,
-     TransferVersion(gfx::ColorSpace::TransferID::BT709,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT709_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::BT709,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT709_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2087,
-     TransferVersion(gfx::ColorSpace::TransferID::GAMMA24,
-                     kDefaultSinceVersion)},
+     TransferVersion{gfx::ColorSpace::TransferID::GAMMA24,
+                     kDefaultSinceVersion}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_ADOBERGB,
      // This is ever so slightly inaccurate. The number ought to be
      // 2.19921875f, not 2.2
-     TransferVersion(gfx::ColorSpace::TransferID::GAMMA22,
-                     kDefaultSinceVersion)},
+     TransferVersion{gfx::ColorSpace::TransferID::GAMMA22,
+                     kDefaultSinceVersion}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_PQ,
-     TransferVersion(gfx::ColorSpace::TransferID::PQ, kDefaultSinceVersion)},
+     TransferVersion{gfx::ColorSpace::TransferID::PQ, kDefaultSinceVersion}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_HLG,
-     TransferVersion(gfx::ColorSpace::TransferID::HLG,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_HLG_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::HLG,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_HLG_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTE170M,
-     TransferVersion(gfx::ColorSpace::TransferID::SMPTE170M,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTE170M_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::SMPTE170M,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTE170M_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTE240M,
-     TransferVersion(gfx::ColorSpace::TransferID::SMPTE240M,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTE240M_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::SMPTE240M,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTE240M_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTEST428_1,
-     TransferVersion(
+     TransferVersion{
          gfx::ColorSpace::TransferID::SMPTEST428_1,
-         ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTEST428_1_SINCE_VERSION)},
+         ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTEST428_1_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LOG,
-     TransferVersion(gfx::ColorSpace::TransferID::LOG,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LOG_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::LOG,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LOG_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LOG_SQRT,
-     TransferVersion(gfx::ColorSpace::TransferID::LOG_SQRT,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LOG_SQRT_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::LOG_SQRT,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LOG_SQRT_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_IEC61966_2_4,
-     TransferVersion(
+     TransferVersion{
          gfx::ColorSpace::TransferID::IEC61966_2_4,
-         ZCR_COLOR_MANAGER_V1_EOTF_NAMES_IEC61966_2_4_SINCE_VERSION)},
+         ZCR_COLOR_MANAGER_V1_EOTF_NAMES_IEC61966_2_4_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT1361_ECG,
-     TransferVersion(gfx::ColorSpace::TransferID::BT1361_ECG,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT1361_ECG_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::BT1361_ECG,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT1361_ECG_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2020_10,
-     TransferVersion(gfx::ColorSpace::TransferID::BT2020_10,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2020_10_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::BT2020_10,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2020_10_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2020_12,
-     TransferVersion(gfx::ColorSpace::TransferID::BT2020_12,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2020_12_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::BT2020_12,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2020_12_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SCRGB_LINEAR_80_NITS,
-     TransferVersion(
+     TransferVersion{
          gfx::ColorSpace::TransferID::SCRGB_LINEAR_80_NITS,
-         ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SCRGB_LINEAR_80_NITS_SINCE_VERSION)},
+         ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SCRGB_LINEAR_80_NITS_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_GAMMA18,
-     TransferVersion(gfx::ColorSpace::TransferID::GAMMA18,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_GAMMA18_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::GAMMA18,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_GAMMA18_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_GAMMA28,
-     TransferVersion(gfx::ColorSpace::TransferID::GAMMA28,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_GAMMA28_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::GAMMA28,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_GAMMA28_SINCE_VERSION}},
 });
 
 // A map from the SDR zcr_color_manager_v1 eotf_names enum values
@@ -177,18 +177,18 @@ constexpr auto kEotfMap = base::MakeFixe
 constexpr auto kTransferMap =
     base::MakeFixedFlatMap<zcr_color_manager_v1_eotf_names, TransferFnVersion>({
         {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LINEAR,
-         TransferFnVersion(SkNamedTransferFn::kLinear, kDefaultSinceVersion)},
+         TransferFnVersion{SkNamedTransferFn::kLinear, kDefaultSinceVersion}},
         {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB,
-         TransferFnVersion(SkNamedTransferFnExt::kSRGB, kDefaultSinceVersion)},
+         TransferFnVersion{SkNamedTransferFnExt::kSRGB, kDefaultSinceVersion}},
         {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT709,
-         TransferFnVersion(
+         TransferFnVersion{
              SkNamedTransferFnExt::kRec709,
-             ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT709_SINCE_VERSION)},
+             ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT709_SINCE_VERSION}},
         {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2087,
-         TransferFnVersion(gamma24, kDefaultSinceVersion)},
+         TransferFnVersion{gamma24, kDefaultSinceVersion}},
         {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_ADOBERGB,
-         TransferFnVersion(SkNamedTransferFnExt::kA98RGB,
-                           kDefaultSinceVersion)},
+         TransferFnVersion{SkNamedTransferFnExt::kA98RGB,
+                           kDefaultSinceVersion}},
     });
 
 // A map from the HDR zcr_color_manager_v1 eotf_names enum values
@@ -197,70 +197,70 @@ constexpr auto kTransferMap =
 constexpr auto kHDRTransferMap =
     base::MakeFixedFlatMap<zcr_color_manager_v1_eotf_names, TransferFnVersion>(
         {{ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LINEAR,
-          TransferFnVersion(SkNamedTransferFn::kLinear, kDefaultSinceVersion)},
+          TransferFnVersion{SkNamedTransferFn::kLinear, kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB_HDR,
-          TransferFnVersion(
+          TransferFnVersion{
               SkNamedTransferFnExt::kSRGB,
-              ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB_HDR_SINCE_VERSION)},
+              ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB_HDR_SINCE_VERSION}},
          {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_PQ,
-          TransferFnVersion(SkNamedTransferFn::kPQ, kDefaultSinceVersion)},
+          TransferFnVersion{SkNamedTransferFn::kPQ, kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_HLG,
-          TransferFnVersion(SkNamedTransferFn::kHLG,
-                            ZCR_COLOR_MANAGER_V1_EOTF_NAMES_HLG_SINCE_VERSION)},
+          TransferFnVersion{SkNamedTransferFn::kHLG,
+                            ZCR_COLOR_MANAGER_V1_EOTF_NAMES_HLG_SINCE_VERSION}},
          {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_EXTENDEDSRGB10,
-          TransferFnVersion(
+          TransferFnVersion{
               SkNamedTransferFnExt::kSRGBExtended1023Over510,
-              ZCR_COLOR_MANAGER_V1_EOTF_NAMES_EXTENDEDSRGB10_SINCE_VERSION)}});
+              ZCR_COLOR_MANAGER_V1_EOTF_NAMES_EXTENDEDSRGB10_SINCE_VERSION}}});
 
 // A map from zcr_color_manager_v1 matrix_names enum values to
 // gfx::ColorSpace::MatrixIDs.
 constexpr auto kMatrixMap =
     base::MakeFixedFlatMap<zcr_color_manager_v1_matrix_names, MatrixVersion>(
         {{ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_RGB,
-          MatrixVersion(gfx::ColorSpace::MatrixID::RGB, kDefaultSinceVersion)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::RGB, kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_BT709,
-          MatrixVersion(gfx::ColorSpace::MatrixID::BT709,
-                        kDefaultSinceVersion)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::BT709,
+                        kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_BT470BG,
-          MatrixVersion(
+          MatrixVersion{
               gfx::ColorSpace::MatrixID::BT470BG,
-              ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_BT470BG_SINCE_VERSION)},
+              ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_BT470BG_SINCE_VERSION}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_BT2020_NCL,
-          MatrixVersion(gfx::ColorSpace::MatrixID::BT2020_NCL,
-                        kDefaultSinceVersion)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::BT2020_NCL,
+                        kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_BT2020_CL,
-          MatrixVersion(gfx::ColorSpace::MatrixID::BT2020_CL,
-                        kDefaultSinceVersion)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::BT2020_CL,
+                        kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_FCC,
-          MatrixVersion(gfx::ColorSpace::MatrixID::FCC, kDefaultSinceVersion)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::FCC, kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_YCOCG,
-          MatrixVersion(gfx::ColorSpace::MatrixID::YCOCG,
-                        ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_YCOCG_SINCE_VERSION)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::YCOCG,
+                        ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_YCOCG_SINCE_VERSION}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_YDZDX,
-          MatrixVersion(gfx::ColorSpace::MatrixID::YDZDX,
-                        ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_YDZDX_SINCE_VERSION)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::YDZDX,
+                        ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_YDZDX_SINCE_VERSION}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_GBR,
-          MatrixVersion(gfx::ColorSpace::MatrixID::GBR,
-                        ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_GBR_SINCE_VERSION)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::GBR,
+                        ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_GBR_SINCE_VERSION}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_SMPTE170M,
-          MatrixVersion(gfx::ColorSpace::MatrixID::SMPTE170M,
-                        kDefaultSinceVersion)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::SMPTE170M,
+                        kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_SMPTE240M,
-          MatrixVersion(gfx::ColorSpace::MatrixID::SMPTE240M,
-                        kDefaultSinceVersion)}});
+          MatrixVersion{gfx::ColorSpace::MatrixID::SMPTE240M,
+                        kDefaultSinceVersion}}});
 
 // A map from zcr_color_manager_v1 range_names enum values to
 // gfx::ColorSpace::RangeIDs.
 constexpr auto kRangeMap =
     base::MakeFixedFlatMap<zcr_color_manager_v1_range_names, RangeVersion>(
         {{ZCR_COLOR_MANAGER_V1_RANGE_NAMES_LIMITED,
-          RangeVersion(gfx::ColorSpace::RangeID::LIMITED,
-                       kDefaultSinceVersion)},
+          RangeVersion{gfx::ColorSpace::RangeID::LIMITED,
+                       kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_RANGE_NAMES_FULL,
-          RangeVersion(gfx::ColorSpace::RangeID::FULL, kDefaultSinceVersion)},
+          RangeVersion{gfx::ColorSpace::RangeID::FULL, kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_RANGE_NAMES_DERIVED,
-          RangeVersion(gfx::ColorSpace::RangeID::DERIVED,
-                       kDefaultSinceVersion)}});
+          RangeVersion{gfx::ColorSpace::RangeID::DERIVED,
+                       kDefaultSinceVersion}}});
 
 zcr_color_manager_v1_chromaticity_names ToColorManagerChromaticity(
     gfx::ColorSpace::PrimaryID primaryID,
@@ -283,4 +283,4 @@ zcr_color_manager_v1_eotf_names ToColorM
 
 }  // namespace ui::wayland
 
-#endif  // UI_BASE_WAYLAND_COLOR_MANAGER_UTIL_H_
\ Kein Zeilenumbruch am Dateiende.
+#endif  // UI_BASE_WAYLAND_COLOR_MANAGER_UTIL_H_
diff -up chromium-122.0.6261.69/ui/gtk/gtk_ui.cc.than chromium-122.0.6261.69/ui/gtk/gtk_ui.cc
--- chromium-122.0.6261.69/ui/gtk/gtk_ui.cc.than	2024-02-22 22:44:13.000000000 +0100
+++ chromium-122.0.6261.69/ui/gtk/gtk_ui.cc	2024-02-24 13:13:44.153712667 +0100
@@ -1007,11 +1007,11 @@ ui::DisplayConfig GtkUi::GetDisplayConfi
     GdkRectangle geometry;
     gdk_monitor_get_geometry(monitor, &geometry);
     int monitor_scale = std::max(1, gdk_monitor_get_scale_factor(monitor));
-    config.display_geometries.emplace_back(
+    config.display_geometries.emplace_back() = {
         gfx::Rect(monitor_scale * geometry.x, monitor_scale * geometry.y,
                   monitor_scale * geometry.width,
                   monitor_scale * geometry.height),
-        monitor_scale * font_scale);
+        static_cast<float>(monitor_scale * font_scale)};
   }
   return config;
 }
diff -up chromium-122.0.6261.69/components/memory_pressure/unnecessary_discard_monitor.cc.me chromium-122.0.6261.69/components/memory_pressure/unnecessary_discard_monitor.cc
--- chromium-122.0.6261.69/components/memory_pressure/unnecessary_discard_monitor.cc.me	2024-02-24 18:06:46.509393032 +0100
+++ chromium-122.0.6261.69/components/memory_pressure/unnecessary_discard_monitor.cc	2024-02-24 18:07:11.258948241 +0100
@@ -92,8 +92,8 @@ void UnnecessaryDiscardMonitor::OnDiscar
   DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_);
   if (current_reclaim_event_) {
     // Cache this kill event along with the time it took place.
-    current_reclaim_event_kills_.emplace_back(memory_freed_kb,
-                                              discard_complete_time);
+    current_reclaim_event_kills_.emplace_back() = {memory_freed_kb,
+                                              discard_complete_time};
   }
 }
 
diff -up chromium-122.0.6261.69/components/autofill/core/browser/webdata/addresses/address_autofill_table.cc.me chromium-122.0.6261.69/components/autofill/core/browser/webdata/addresses/address_autofill_table.cc
--- chromium-122.0.6261.69/components/autofill/core/browser/webdata/addresses/address_autofill_table.cc.me	2024-02-24 19:58:09.929371791 +0100
+++ chromium-122.0.6261.69/components/autofill/core/browser/webdata/addresses/address_autofill_table.cc	2024-02-24 19:59:07.149524862 +0100
@@ -631,10 +631,10 @@ std::unique_ptr<AutofillProfile> Address
     }
 
     base::span<const uint8_t> observations_data = s.ColumnBlob(3);
-    field_type_values.emplace_back(
+    field_type_values.emplace_back() = {
         type, s.ColumnString16(1), s.ColumnInt(2),
         std::vector<uint8_t>(observations_data.begin(),
-                             observations_data.end()));
+                             observations_data.end())};
 
     if (type == ADDRESS_HOME_COUNTRY) {
       country_code = base::UTF16ToUTF8(s.ColumnString16(1));
diff -up chromium-122.0.6261.69/components/autofill/core/browser/webdata/addresses/contact_info_sync_util.cc.me chromium-122.0.6261.69/components/autofill/core/browser/webdata/addresses/contact_info_sync_util.cc
--- chromium-122.0.6261.69/components/autofill/core/browser/webdata/addresses/contact_info_sync_util.cc.me	2024-02-24 19:52:02.173682060 +0100
+++ chromium-122.0.6261.69/components/autofill/core/browser/webdata/addresses/contact_info_sync_util.cc	2024-02-24 19:52:25.247216329 +0100
@@ -192,9 +192,9 @@ class ContactInfoProfileSetter {
       CHECK(observations.empty());
       for (const sync_pb::ContactInfoSpecifics::Observation& proto_observation :
            metadata.observations()) {
-        observations.emplace_back(proto_observation.type(),
+        observations.emplace_back() = {proto_observation.type(),
                                   ProfileTokenQuality::FormSignatureHash(
-                                      proto_observation.form_hash()));
+                                      proto_observation.form_hash())};
       }
     }
   }
diff -up chromium-122.0.6261.69/content/browser/fenced_frame/fenced_frame_config.cc.me chromium-122.0.6261.69/content/browser/fenced_frame/fenced_frame_config.cc
--- chromium-122.0.6261.69/content/browser/fenced_frame/fenced_frame_config.cc.me	2024-02-25 00:14:26.830323365 +0100
+++ chromium-122.0.6261.69/content/browser/fenced_frame/fenced_frame_config.cc	2024-02-25 00:15:17.939241091 +0100
@@ -402,7 +402,7 @@ void FencedFrameProperties::UpdateParent
         feature, allow_list.AllowedOrigins(), allow_list.SelfIfMatches(),
         allow_list.MatchesAll(), allow_list.MatchesOpaqueSrc());
   }
-  parent_permissions_info_.emplace(parsed_policies, parent_origin);
+  parent_permissions_info_.emplace() = {parsed_policies, parent_origin};
 }
 
 }  // namespace content
diff -up chromium-122.0.6261.69/content/browser/interest_group/interest_group_storage.cc.me chromium-122.0.6261.69/content/browser/interest_group/interest_group_storage.cc
--- chromium-122.0.6261.69/content/browser/interest_group/interest_group_storage.cc.me	2024-02-25 00:17:31.799644691 +0100
+++ chromium-122.0.6261.69/content/browser/interest_group/interest_group_storage.cc	2024-02-25 00:18:54.157123519 +0100
@@ -3332,9 +3332,9 @@ std::optional<DebugReportCooldown> DoGet
     return std::nullopt;
   }
 
-  return DebugReportCooldown(cooldown_debugging_only_report.ColumnTime(0),
+  return DebugReportCooldown{cooldown_debugging_only_report.ColumnTime(0),
                              static_cast<DebugReportCooldownType>(
-                                 cooldown_debugging_only_report.ColumnInt(1)));
+                                 cooldown_debugging_only_report.ColumnInt(1))};
 }
 
 void DoGetDebugReportCooldowns(
diff -up chromium-122.0.6261.69/content/browser/interest_group/interest_group_auction.cc.me chromium-122.0.6261.69/content/browser/interest_group/interest_group_auction.cc
--- chromium-122.0.6261.69/content/browser/interest_group/interest_group_auction.cc.me	2024-02-25 00:20:33.535907981 +0100
+++ chromium-122.0.6261.69/content/browser/interest_group/interest_group_auction.cc	2024-02-25 00:21:01.082402610 +0100
@@ -501,7 +501,7 @@ bool SampleDebugReport(
           ? DebugReportCooldownType::kShortCooldown
           : DebugReportCooldownType::kRestrictedCooldown;
   new_debug_report_lockout_and_cooldowns.debug_report_cooldown_map[origin] =
-      DebugReportCooldown(now, cooldown_type);
+      DebugReportCooldown{now, cooldown_type};
   base::UmaHistogramEnumeration(
       "Ads.InterestGroup.Auction.ForDebuggingOnlyCooldownType", cooldown_type);
 
diff -up chromium-122.0.6261.69/chrome/browser/ui/safety_hub/menu_notification_service.h.me chromium-122.0.6261.69/chrome/browser/ui/safety_hub/menu_notification_service.h
--- chromium-122.0.6261.69/chrome/browser/ui/safety_hub/menu_notification_service.h.me	2024-02-25 15:34:16.140768445 +0100
+++ chromium-122.0.6261.69/chrome/browser/ui/safety_hub/menu_notification_service.h	2024-02-25 15:37:47.789665835 +0100
@@ -24,6 +24,7 @@ struct MenuNotificationEntry {
   int command = 0;
   std::u16string label;
   safety_hub::SafetyHubModuleType module;
+  MenuNotificationEntry(auto c, auto l, auto m) : command(c), label(l), module(m) { }
 };
 
 namespace {
diff -up chromium-122.0.6261.69/chrome/browser/ui/views/tabs/tab_style_views.cc.me chromium-122.0.6261.69/chrome/browser/ui/views/tabs/tab_style_views.cc
--- chromium-122.0.6261.69/chrome/browser/ui/views/tabs/tab_style_views.cc.me	2024-02-25 16:22:46.601209269 +0100
+++ chromium-122.0.6261.69/chrome/browser/ui/views/tabs/tab_style_views.cc	2024-02-25 16:24:48.110618475 +0100
@@ -1214,10 +1214,10 @@ SkPath ChromeRefresh2023TabStyleViews::G
 
     // Radii are clockwise from top left.
     const SkVector radii[4] = {
-        SkVector(top_content_corner_radius, top_content_corner_radius),
-        SkVector(top_content_corner_radius, top_content_corner_radius),
-        SkVector(bottom_content_corner_radius, bottom_content_corner_radius),
-        SkVector(bottom_content_corner_radius, bottom_content_corner_radius)};
+        SkVector{top_content_corner_radius, top_content_corner_radius},
+        SkVector{top_content_corner_radius, top_content_corner_radius},
+        SkVector{bottom_content_corner_radius, bottom_content_corner_radius},
+        SkVector{bottom_content_corner_radius, bottom_content_corner_radius}};
     SkRRect rrect;
     rrect.setRectRadii(SkRect::MakeLTRB(left, top, right, bottom), radii);
     SkPath path;
diff -up chromium-122.0.6261.69/chrome/browser/file_system_access/chrome_file_system_access_permission_context.cc.me chromium-122.0.6261.69/chrome/browser/file_system_access/chrome_file_system_access_permission_context.cc
--- chromium-122.0.6261.69/chrome/browser/file_system_access/chrome_file_system_access_permission_context.cc.me	2024-02-25 18:49:32.512080085 +0100
+++ chromium-122.0.6261.69/chrome/browser/file_system_access/chrome_file_system_access_permission_context.cc	2024-02-25 19:07:36.518711693 +0100
@@ -386,7 +386,7 @@ bool ShouldBlockAccessToPath(const base:
       DCHECK(block.path);
       blocked_path = base::FilePath(block.path);
     }
-    rules.emplace_back(blocked_path, block.type);
+    rules.emplace_back() = {blocked_path, block.type};
   }
 
   base::FilePath nearest_ancestor;
@@ -1575,11 +1575,11 @@ void ChromeFileSystemAccessPermissionCon
   // profile's directory, assuming the profile dir is a child of the user data
   // dir.
   std::vector<BlockPathRule> extra_rules;
-  extra_rules.emplace_back(profile_->GetPath().DirName(), kBlockAllChildren);
+  extra_rules.emplace_back() = {profile_->GetPath().DirName(), kBlockAllChildren};
   if (g_browser_process->profile_manager()) {
-    extra_rules.emplace_back(
+    extra_rules.emplace_back() = {
         g_browser_process->profile_manager()->user_data_dir(),
-        kBlockAllChildren);
+        kBlockAllChildren};
   }
 
   base::ThreadPool::PostTaskAndReplyWithResult(
diff -up chromium-122.0.6261.69/chrome/browser/performance_manager/mechanisms/page_discarder.cc.me chromium-122.0.6261.69/chrome/browser/performance_manager/mechanisms/page_discarder.cc
--- chromium-122.0.6261.69/chrome/browser/performance_manager/mechanisms/page_discarder.cc.me	2024-02-25 19:14:16.227843148 +0100
+++ chromium-122.0.6261.69/chrome/browser/performance_manager/mechanisms/page_discarder.cc	2024-02-25 19:15:04.589307468 +0100
@@ -53,7 +53,7 @@ std::vector<PageDiscarder::DiscardEvent>
     if (lifecycle_unit->DiscardTab(
             discard_reason,
             /*memory_footprint_estimate=*/proxy.second)) {
-      discard_events.emplace_back(base::TimeTicks::Now(), proxy.second);
+      discard_events.emplace_back() = {base::TimeTicks::Now(), proxy.second};
     }
   }
   return discard_events;
diff -up chromium-122.0.6261.69/extensions/browser/service_worker_task_queue.h.me chromium-122.0.6261.69/extensions/browser/service_worker_task_queue.h
--- chromium-122.0.6261.69/extensions/browser/service_worker_task_queue.h.me	2024-02-25 17:26:25.623572458 +0100
+++ chromium-122.0.6261.69/extensions/browser/service_worker_task_queue.h	2024-02-25 17:29:52.983345280 +0100
@@ -204,6 +204,7 @@ class ServiceWorkerTaskQueue : public Ke
     raw_ptr<content::BrowserContext> browser_context;
     base::UnguessableToken token;
 
+    SequencedContextId(auto e, auto b, auto t) : extension_id(e), browser_context(b), token(t) { }
     bool operator<(const SequencedContextId& rhs) const {
       return std::tie(extension_id, browser_context, token) <
              std::tie(rhs.extension_id, rhs.browser_context, rhs.token);
diff -up chromium-122.0.6261.69/chrome/browser/renderer_context_menu/render_view_context_menu.cc.me chromium-122.0.6261.69/chrome/browser/renderer_context_menu/render_view_context_menu.cc
--- chromium-122.0.6261.69/chrome/browser/renderer_context_menu/render_view_context_menu.cc.me	2024-02-25 20:05:40.567891077 +0100
+++ chromium-122.0.6261.69/chrome/browser/renderer_context_menu/render_view_context_menu.cc	2024-02-25 20:05:46.407001997 +0100
@@ -3993,10 +3993,10 @@ void RenderViewContextMenu::ExecOpenComp
     autofill::LocalFrameToken frame_token = driver->GetFrameToken();
     client->GetManager().OpenCompose(
         *driver,
-        autofill::FormGlobalId(
-            frame_token, autofill::FormRendererId(params_.form_renderer_id)),
-        autofill::FieldGlobalId(
-            frame_token, autofill::FieldRendererId(params_.field_renderer_id)),
+        autofill::FormGlobalId{
+            frame_token, autofill::FormRendererId(params_.form_renderer_id)},
+        autofill::FieldGlobalId{
+            frame_token, autofill::FieldRendererId(params_.field_renderer_id)},
         compose::ComposeManagerImpl::UiEntryPoint::kContextMenu);
     new_badge_tracker_.ActionPerformed("compose_menu_item_activated");
   } else {
