commit 0bed9a54baa5058e711a1f051a766f67e1842ec5
Author: Jose Dapena Paz <jdapena@igalia.com>
Date:   Tue Apr 16 10:59:08 2024 +0000

    Remove more instances of std::vector<const T>
    
    Bug: 323708866
    Change-Id: I50ef671f18f0d152ecccbf0f345f84db005c06d7
    Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5440252
    Reviewed-by: Yuzhu Shen <yzshen@chromium.org>
    Reviewed-by: Vasilii Sukhanov <vasilii@chromium.org>
    Commit-Queue: Jos√© Dapena Paz <jdapena@igalia.com>
    Reviewed-by: Matthew Jones <mdjones@chromium.org>
    Cr-Commit-Position: refs/heads/main@{#1287935}

diff --git a/chrome/browser/sync/test/integration/product_specifications_helper.cc b/chrome/browser/sync/test/integration/product_specifications_helper.cc
index d664b952801f8..3ed308b4b7ad8 100644
--- a/chrome/browser/sync/test/integration/product_specifications_helper.cc
+++ b/chrome/browser/sync/test/integration/product_specifications_helper.cc
@@ -41,9 +41,9 @@ bool ProductSpecificationsChecker::IsExitConditionSatisfied(std::ostream* os) {
 bool ProductSpecificationsChecker::IsSpecificsAvailableAndEqual() {
   for (const ProductSpecificationsSet& product_specifications_set :
        service_->GetAllProductSpecifications()) {
-    std::vector<const GURL> specifics_urls;
+    std::vector<GURL> specifics_urls;
     for (sync_pb::ComparisonData data : compare_specifics_->data()) {
-      specifics_urls.push_back(GURL(data.url()));
+      specifics_urls.emplace_back(data.url());
     }
     if (product_specifications_set.uuid().AsLowercaseString() ==
             compare_specifics_->uuid() &&
diff --git a/components/commerce/core/product_specifications/product_specifications_service.cc b/components/commerce/core/product_specifications/product_specifications_service.cc
index eaa362dd46ea0..171ea09f0a6b3 100644
--- a/components/commerce/core/product_specifications/product_specifications_service.cc
+++ b/components/commerce/core/product_specifications/product_specifications_service.cc
@@ -24,11 +24,11 @@ ProductSpecificationsService::GetSyncControllerDelegate() {
   return bridge_->change_processor()->GetControllerDelegate();
 }
 
-const std::vector<const ProductSpecificationsSet>
+const std::vector<ProductSpecificationsSet>
 ProductSpecificationsService::GetAllProductSpecifications() {
-  std::vector<const ProductSpecificationsSet> product_specifications;
+  std::vector<ProductSpecificationsSet> product_specifications;
   for (auto& entry : bridge_->entries()) {
-    std::vector<const GURL> urls;
+    std::vector<GURL> urls;
     for (auto& data : entry.second.data()) {
       urls.emplace_back(data.url());
     }
@@ -43,7 +43,7 @@ ProductSpecificationsService::GetAllProductSpecifications() {
 const std::optional<const ProductSpecificationsSet>
 ProductSpecificationsService::AddProductSpecificationsSet(
     const std::string& name,
-    const std::vector<const GURL>& urls) {
+    const std::vector<GURL>& urls) {
   // TODO(crbug.com/332545064) add for a product specification set being added.
   std::optional<sync_pb::CompareSpecifics> specifics =
       bridge_->AddProductSpecifications(name, urls);
diff --git a/components/commerce/core/product_specifications/product_specifications_service.h b/components/commerce/core/product_specifications/product_specifications_service.h
index 4afe013a0869f..0f84ae04fd228 100644
--- a/components/commerce/core/product_specifications/product_specifications_service.h
+++ b/components/commerce/core/product_specifications/product_specifications_service.h
@@ -26,14 +26,13 @@ class ProductSpecificationsService : public KeyedService {
   base::WeakPtr<syncer::ModelTypeControllerDelegate>
   GetSyncControllerDelegate();
 
-  const std::vector<const ProductSpecificationsSet>
-  GetAllProductSpecifications();
+  const std::vector<ProductSpecificationsSet> GetAllProductSpecifications();
 
   // Add new product specifications set called |name| with product pages
   // corresponding to |urls|.
   const std::optional<const ProductSpecificationsSet>
   AddProductSpecificationsSet(const std::string& name,
-                              const std::vector<const GURL>& urls);
+                              const std::vector<GURL>& urls);
 
   // Deletes product specification set corresponding to identifier |uuid|.
   void DeleteProductSpecificationsSet(const std::string& uuid);
diff --git a/components/commerce/core/product_specifications/product_specifications_service_unittest.cc b/components/commerce/core/product_specifications/product_specifications_service_unittest.cc
index 6e0072a5318e8..4087d7f19424a 100644
--- a/components/commerce/core/product_specifications/product_specifications_service_unittest.cc
+++ b/components/commerce/core/product_specifications/product_specifications_service_unittest.cc
@@ -82,9 +82,9 @@ void AddTestSpecifics(commerce::ProductSpecificationsSyncBridge* bridge) {
 }
 
 MATCHER_P(HasAllProductSpecs, compare_specifics, "") {
-  std::vector<const GURL> specifics_urls;
+  std::vector<GURL> specifics_urls;
   for (const sync_pb::ComparisonData& data : compare_specifics.data()) {
-    specifics_urls.push_back(GURL(data.url()));
+    specifics_urls.emplace_back(data.url());
   }
   return arg.uuid().AsLowercaseString() == compare_specifics.uuid() &&
          arg.creation_time() ==
@@ -217,7 +217,7 @@ class ProductSpecificationsServiceTest : public testing::Test {
                   specifics.update_time_unix_epoch_micros()),
               specifications.update_time());
     EXPECT_EQ(specifics.name(), specifications.name());
-    std::vector<const GURL> urls;
+    std::vector<GURL> urls;
     for (const sync_pb::ComparisonData& data : specifics.data()) {
       urls.emplace_back(data.url());
     }
@@ -243,7 +243,7 @@ TEST_F(ProductSpecificationsServiceTest, TestGetProductSpecifications) {
   for (const sync_pb::CompareSpecifics& specifics : kCompareSpecifics) {
     bridge()->AddCompareSpecifics(specifics);
   }
-  const std::vector<const ProductSpecificationsSet> specifications =
+  const std::vector<ProductSpecificationsSet> specifications =
       service()->GetAllProductSpecifications();
   EXPECT_EQ(2u, specifications.size());
   for (uint64_t i = 0; i < specifications.size(); i++) {
@@ -252,8 +252,8 @@ TEST_F(ProductSpecificationsServiceTest, TestGetProductSpecifications) {
 }
 
 TEST_F(ProductSpecificationsServiceTest, TestAddProductSpecificationsSuccess) {
-  std::vector<const GURL> expected_product_urls{GURL(kProductOneUrl),
-                                                GURL(kProductTwoUrl)};
+  std::vector<GURL> expected_product_urls{GURL(kProductOneUrl),
+                                          GURL(kProductTwoUrl)};
   EXPECT_CALL(*observer(),
               OnProductSpecificationsSetAdded(HasProductSpecsNameUrl(
                   kProductSpecsName, expected_product_urls)))
diff --git a/components/commerce/core/product_specifications/product_specifications_set.cc b/components/commerce/core/product_specifications/product_specifications_set.cc
index 7005b6c5b3448..408bfde664f2a 100644
--- a/components/commerce/core/product_specifications/product_specifications_set.cc
+++ b/components/commerce/core/product_specifications/product_specifications_set.cc
@@ -12,7 +12,7 @@ ProductSpecificationsSet::ProductSpecificationsSet(
     const std::string& uuid,
     const int64_t creation_time_usec_since_epoch,
     const int64_t update_time_usec_since_epoch,
-    const std::vector<const GURL>& urls,
+    const std::vector<GURL>& urls,
     const std::string& name)
     : uuid_(base::Uuid::ParseLowercase(uuid)),
       creation_time_(base::Time::FromMillisecondsSinceUnixEpoch(
@@ -34,9 +34,9 @@ ProductSpecificationsSet::~ProductSpecificationsSet() = default;
 
 ProductSpecificationsSet ProductSpecificationsSet::FromProto(
     const sync_pb::CompareSpecifics& specifics) {
-  std::vector<const GURL> urls;
+  std::vector<GURL> urls;
   for (const sync_pb::ComparisonData& data : specifics.data()) {
-    urls.push_back(GURL(data.url()));
+    urls.emplace_back(data.url());
   }
   return ProductSpecificationsSet(
       specifics.uuid(), specifics.creation_time_unix_epoch_micros(),
diff --git a/components/commerce/core/product_specifications/product_specifications_set.h b/components/commerce/core/product_specifications/product_specifications_set.h
index d761fabafb702..18e3aa113120b 100644
--- a/components/commerce/core/product_specifications/product_specifications_set.h
+++ b/components/commerce/core/product_specifications/product_specifications_set.h
@@ -43,7 +43,7 @@ class ProductSpecificationsSet {
   ProductSpecificationsSet(const std::string& uuid,
                            const int64_t creation_time_usec_since_epoch,
                            const int64_t update_time_usec_since_epoch,
-                           const std::vector<const GURL>& urls,
+                           const std::vector<GURL>& urls,
                            const std::string& name);
 
   ProductSpecificationsSet(const ProductSpecificationsSet&);
@@ -61,7 +61,7 @@ class ProductSpecificationsSet {
   const base::Time& update_time() const { return update_time_; }
 
   // Product urls for each item in the set
-  const std::vector<const GURL>& urls() const { return urls_; }
+  const std::vector<GURL>& urls() const { return urls_; }
 
   // Name of the set
   const std::string& name() const { return name_; }
@@ -76,7 +76,7 @@ class ProductSpecificationsSet {
   const base::Uuid uuid_;
   const base::Time creation_time_;
   const base::Time update_time_;
-  const std::vector<const GURL> urls_;
+  const std::vector<GURL> urls_;
   const std::string name_;
 };
 
diff --git a/components/commerce/core/product_specifications/product_specifications_sync_bridge.cc b/components/commerce/core/product_specifications/product_specifications_sync_bridge.cc
index 09c3fc5f5cede..40e1c4690aa49 100644
--- a/components/commerce/core/product_specifications/product_specifications_sync_bridge.cc
+++ b/components/commerce/core/product_specifications/product_specifications_sync_bridge.cc
@@ -131,7 +131,7 @@ void ProductSpecificationsSyncBridge::GetAllDataForDebugging(
 const std::optional<sync_pb::CompareSpecifics>
 ProductSpecificationsSyncBridge::AddProductSpecifications(
     const std::string& name,
-    const std::vector<const GURL>& urls) {
+    const std::vector<GURL>& urls) {
   if (!change_processor()->IsTrackingMetadata()) {
     return std::nullopt;
   }
diff --git a/components/commerce/core/product_specifications/product_specifications_sync_bridge.h b/components/commerce/core/product_specifications/product_specifications_sync_bridge.h
index 0988e7b91ea97..aa7b7a6ba24eb 100644
--- a/components/commerce/core/product_specifications/product_specifications_sync_bridge.h
+++ b/components/commerce/core/product_specifications/product_specifications_sync_bridge.h
@@ -64,7 +64,7 @@ class ProductSpecificationsSyncBridge : public syncer::ModelTypeSyncBridge {
 
   virtual const std::optional<sync_pb::CompareSpecifics>
   AddProductSpecifications(const std::string& name,
-                           const std::vector<const GURL>& urls);
+                           const std::vector<GURL>& urls);
 
   void DeleteProductSpecificationsSet(const std::string& uuid);
 
diff --git a/components/commerce/core/product_specifications/product_specifications_sync_bridge_unittest.cc b/components/commerce/core/product_specifications/product_specifications_sync_bridge_unittest.cc
index 3525177044541..7d0409dfe715d 100644
--- a/components/commerce/core/product_specifications/product_specifications_sync_bridge_unittest.cc
+++ b/components/commerce/core/product_specifications/product_specifications_sync_bridge_unittest.cc
@@ -178,7 +178,7 @@ class ProductSpecificationsSyncBridgeTest : public testing::Test {
 
   std::optional<sync_pb::CompareSpecifics> AddProductSpecifications(
       const std::string& name,
-      const std::vector<const GURL> urls) {
+      const std::vector<GURL> urls) {
     return bridge().AddProductSpecifications(name, urls);
   }
 
diff --git a/components/commerce/core/shopping_service.cc b/components/commerce/core/shopping_service.cc
index 236a8befae286..ae17aea1053d0 100644
--- a/components/commerce/core/shopping_service.cc
+++ b/components/commerce/core/shopping_service.cc
@@ -1734,7 +1734,7 @@ void ShoppingService::GetProductIdentifierForUrl(
           std::move(callback)));
 }
 
-const std::vector<const ProductSpecificationsSet>
+const std::vector<ProductSpecificationsSet>
 ShoppingService::GetAllProductSpecificationSets() {
   return product_specifications_service_->GetAllProductSpecifications();
 }
diff --git a/components/commerce/core/shopping_service.h b/components/commerce/core/shopping_service.h
index 304e33d7c5260..5b6d9d2321281 100644
--- a/components/commerce/core/shopping_service.h
+++ b/components/commerce/core/shopping_service.h
@@ -624,7 +624,7 @@ class ShoppingService : public KeyedService,
                                   UrlProductIdentifierTupleCallback callback);
 
   // Return all ProductSpecificationsSets from ProductSpecificationsService.
-  virtual const std::vector<const ProductSpecificationsSet>
+  virtual const std::vector<ProductSpecificationsSet>
   GetAllProductSpecificationSets();
 
   // Updates the bookmark model used for sync (and shopping) if needed. Invoked
diff --git a/mojo/public/cpp/base/proto_wrapper.cc b/mojo/public/cpp/base/proto_wrapper.cc
index ad5b76632d76e..c5fa9f48a1a46 100644
--- a/mojo/public/cpp/base/proto_wrapper.cc
+++ b/mojo/public/cpp/base/proto_wrapper.cc
@@ -57,7 +57,7 @@ bool ProtoWrapper::DeserializeToMessage(
     // Make an in-process copy here as protobuf is not designed to
     // safely parse data that might be changing underneath it.
     auto as_span = base::make_span(bytes_->data(), bytes_->size());
-    const std::vector<const uint8_t> copy(as_span.begin(), as_span.end());
+    const std::vector<uint8_t> copy(as_span.begin(), as_span.end());
     return message.ParseFromArray(copy.data(), copy.size());
   }
 }
