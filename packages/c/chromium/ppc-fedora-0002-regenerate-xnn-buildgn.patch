File regenerated by running 'python3 generate_build_gn.py'

Index: chromium-140.0.7339.41/third_party/xnnpack/BUILD.gn
===================================================================
--- chromium-140.0.7339.41.orig/third_party/xnnpack/BUILD.gn
+++ chromium-140.0.7339.41/third_party/xnnpack/BUILD.gn
@@ -32,10 +32,10 @@ config("xnnpack_public_config") {
   }
 
   defines = [
-              "CHROMIUM",
-              "XNN_LOG_LEVEL=0",
-              "XNN_LOG_TO_STDIO=0",
-            ] + xnn_defines
+    "CHROMIUM",
+    "XNN_LOG_LEVEL=0",
+    "XNN_LOG_TO_STDIO=0",
+  ] + xnn_defines
 }
 
 config("xnnpack_private_config") {
@@ -45,7 +45,9 @@ config("xnnpack_private_config") {
   ]
 }
 
+
 if (current_cpu == "x64" || current_cpu == "x86") {
+
   xnnpack_deps = [
     ":configs_x64",
     ":enums_x64",
@@ -547,515 +549,517 @@ if (current_cpu == "x64" || current_cpu
     ":xx-fill_x64",
     ":xx-pad_sse2-no-sse3",
     ":xx-pad_x64",
-    ":xx-transposev_x64",
+    ":xx-transposev_x64"
   ]
 
   if (build_with_internal_optimization_guide) {
     xnnpack_standalone_deps = [
-      ":configs_x64_standalone",
-      ":enums_x64_standalone",
-      ":f16-avgpool_f16c-no-avx2-no-fma_standalone",
-      ":f16-dwconv_f16c-fma-no-avx2_standalone",
-      ":f16-f32-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f16-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":f16-f32-vcvt_f16c-no-avx2-no-fma_standalone",
-      ":f16-f32-vcvt_sse2-no-sse3_standalone",
-      ":f16-f32-vcvt_sse4.1-no-sse4.2_standalone",
-      ":f16-f32-vcvt_x64_standalone",
-      ":f16-f32acc-gemm_f16c-fma-avx2_standalone",
-      ":f16-f32acc-igemm_f16c-fma-avx2_standalone",
-      ":f16-f32acc-rdsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":f16-f32acc-rdsum_f16c-no-avx2-no-fma_standalone",
-      ":f16-f32acc-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":f16-f32acc-rsum_f16c-no-avx2-no-fma_standalone",
-      ":f16-ibilinear_f16c-fma-no-avx2_standalone",
-      ":f16-maxpool_f16c-fma-avx2_standalone",
-      ":f16-maxpool_sse4.1-no-sse4.2_standalone",
-      ":f16-qs8-vcvt_x64_standalone",
-      ":f16-qu8-vcvt_x64_standalone",
-      ":f16-raddstoreexpminusmax_f16c-fma-avx2_standalone",
-      ":f16-rdminmax_x64_standalone",
-      ":f16-rminmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-avx512fp16_standalone",
-      ":f16-rminmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":f16-rminmax_f16c-no-avx2-no-fma_standalone",
-      ":f16-rminmax_x64_standalone",
-      ":f16-vapproxgelu_x64_standalone",
-      ":f16-vbinary_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-avx512fp16_standalone",
-      ":f16-vbinary_f16c-no-avx2-no-fma_standalone",
-      ":f16-vclamp_f16c-no-avx2-no-fma_standalone",
-      ":f16-vcos_x64_standalone",
-      ":f16-velu_f16c-fma-avx2_standalone",
-      ":f16-vexp_x64_standalone",
-      ":f16-vgelu_x64_standalone",
-      ":f16-vhswish_f16c-no-avx2-no-fma_standalone",
-      ":f16-vlrelu_f16c-no-avx2-no-fma_standalone",
-      ":f16-vmulcaddc_f16c-fma-no-avx2_standalone",
-      ":f16-vrnd_f16c-no-avx2-no-fma_standalone",
-      ":f16-vrsqrt_f16c-no-avx2-no-fma_standalone",
-      ":f16-vsigmoid_f16c-fma-avx2_standalone",
-      ":f16-vsin_x64_standalone",
-      ":f16-vsqrt_f16c-no-avx2-no-fma_standalone",
-      ":f16-vtanh_f16c-fma-no-avx2_standalone",
-      ":f16-vtanh_f16c-no-avx2-no-fma_standalone",
-      ":f16-vunary_f16c-no-avx2-no-fma_standalone",
-      ":f16-vunary_sse2-no-sse3_standalone",
-      ":f32-argmaxpool_sse2-no-sse3_standalone",
-      ":f32-argmaxpool_x64_standalone",
-      ":f32-avgpool_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-avgpool_avx512f_standalone",
-      ":f32-avgpool_sse2-no-sse3_standalone",
-      ":f32-avgpool_x64_standalone",
-      ":f32-conv-hwc2chw_sse-no-sse2_standalone",
-      ":f32-conv-hwc2chw_x64_standalone",
-      ":f32-dwconv2d-chw_sse-no-sse2_standalone",
-      ":f32-dwconv2d-chw_ssse3-no-sse4.1_standalone",
-      ":f32-dwconv2d-chw_x64_standalone",
-      ":f32-dwconv_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-dwconv_avx512f_standalone",
-      ":f32-dwconv_f16c-fma-no-avx2_standalone",
-      ":f32-dwconv_sse-no-sse2_standalone",
-      ":f32-dwconv_x64_standalone",
-      ":f32-f16-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-f16-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":f32-f16-vcvt_f16c-no-avx2-no-fma_standalone",
-      ":f32-f16-vcvt_sse2-no-sse3_standalone",
-      ":f32-f16-vcvt_sse4.1-no-sse4.2_standalone",
-      ":f32-f16-vcvt_x64_standalone",
-      ":f32-gemm_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-gemm_avx512f_standalone",
-      ":f32-gemm_f16c-fma-no-avx2_standalone",
-      ":f32-gemm_sse-no-sse2_standalone",
-      ":f32-gemm_x64_standalone",
-      ":f32-ibilinear-chw_sse-no-sse2_standalone",
-      ":f32-ibilinear-chw_x64_standalone",
-      ":f32-ibilinear_sse-no-sse2_standalone",
-      ":f32-ibilinear_x64_standalone",
-      ":f32-igemm_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-igemm_avx512f_standalone",
-      ":f32-igemm_f16c-fma-no-avx2_standalone",
-      ":f32-igemm_sse-no-sse2_standalone",
-      ":f32-igemm_x64_standalone",
-      ":f32-maxpool_sse2-no-sse3_standalone",
-      ":f32-maxpool_x64_standalone",
-      ":f32-qc4w-gemm_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-qc4w-gemm_f16c-fma-avx2_standalone",
-      ":f32-qc4w-gemm_f16c-fma-no-avx2_standalone",
-      ":f32-qc4w-gemm_sse4.1-no-sse4.2_standalone",
-      ":f32-qc4w-gemm_x64_standalone",
-      ":f32-qc8w-gemm_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-qc8w-gemm_f16c-fma-avx2_standalone",
-      ":f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":f32-qc8w-gemm_f16c-fma-no-avx2_standalone",
-      ":f32-qc8w-gemm_sse4.1-no-sse4.2_standalone",
-      ":f32-qc8w-gemm_x64_standalone",
-      ":f32-qs8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-qs8-vcvt_f16c-fma-avx2_standalone",
-      ":f32-qs8-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":f32-qs8-vcvt_sse2-no-sse3_standalone",
-      ":f32-qs8-vcvt_sse4.1-no-sse4.2_standalone",
-      ":f32-qs8-vcvt_x64_standalone",
-      ":f32-qu8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-qu8-vcvt_f16c-fma-avx2_standalone",
-      ":f32-qu8-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":f32-qu8-vcvt_sse2-no-sse3_standalone",
-      ":f32-qu8-vcvt_x64_standalone",
-      ":f32-raddstoreexpminusmax_avx512f_standalone",
-      ":f32-raddstoreexpminusmax_f16c-fma-avx2_standalone",
-      ":f32-raddstoreexpminusmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":f32-raddstoreexpminusmax_sse2-no-sse3_standalone",
-      ":f32-raddstoreexpminusmax_x64_standalone",
-      ":f32-rdminmax_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-rdminmax_avx512f_standalone",
-      ":f32-rdminmax_sse2-no-sse3_standalone",
-      ":f32-rdminmax_x64_standalone",
-      ":f32-rdsum_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-rdsum_avx512f_standalone",
-      ":f32-rdsum_sse2-no-sse3_standalone",
-      ":f32-rdsum_x64_standalone",
-      ":f32-rminmax_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-rminmax_avx512f_standalone",
-      ":f32-rminmax_sse-no-sse2_standalone",
-      ":f32-rminmax_x64_standalone",
-      ":f32-rsum_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-rsum_avx512f_standalone",
-      ":f32-rsum_sse2-no-sse3_standalone",
-      ":f32-rsum_x64_standalone",
-      ":f32-spmm_sse-no-sse2_standalone",
-      ":f32-spmm_x64_standalone",
-      ":f32-vapproxgelu_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vapproxgelu_avx512f_standalone",
-      ":f32-vapproxgelu_f16c-fma-no-avx2_standalone",
-      ":f32-vapproxgelu_sse2-no-sse3_standalone",
-      ":f32-vapproxgelu_x64_standalone",
-      ":f32-vbinary_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vbinary_avx512f_standalone",
-      ":f32-vbinary_sse-no-sse2_standalone",
-      ":f32-vbinary_sse2-no-sse3_standalone",
-      ":f32-vbinary_x64_standalone",
-      ":f32-vclamp_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vclamp_avx512f_standalone",
-      ":f32-vclamp_sse2-no-sse3_standalone",
-      ":f32-vclamp_x64_standalone",
-      ":f32-vcmul_avx512f_standalone",
-      ":f32-vcmul_f16c-fma-no-avx2_standalone",
-      ":f32-vcmul_sse-no-sse2_standalone",
-      ":f32-vcmul_x64_standalone",
-      ":f32-vcopysign_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vcopysign_avx512f_standalone",
-      ":f32-vcopysign_sse2-no-sse3_standalone",
-      ":f32-vcopysign_x64_standalone",
-      ":f32-vcos_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vcos_avx512f_standalone",
-      ":f32-vcos_f16c-fma-no-avx2_standalone",
-      ":f32-vcos_sse2-no-sse3_standalone",
-      ":f32-vcos_x64_standalone",
-      ":f32-velu_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-velu_avx512f_standalone",
-      ":f32-velu_f16c-fma-avx2_standalone",
-      ":f32-velu_sse2-no-sse3_standalone",
-      ":f32-velu_x64_standalone",
-      ":f32-vexp_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vexp_avx512f_standalone",
-      ":f32-vexp_f16c-fma-no-avx2_standalone",
-      ":f32-vexp_sse2-no-sse3_standalone",
-      ":f32-vexp_x64_standalone",
-      ":f32-vgelu_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vgelu_avx512f_standalone",
-      ":f32-vgelu_f16c-fma-no-avx2_standalone",
-      ":f32-vgelu_sse2-no-sse3_standalone",
-      ":f32-vgelu_x64_standalone",
-      ":f32-vhswish_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vhswish_avx512f_standalone",
-      ":f32-vhswish_f16c-fma-no-avx2_standalone",
-      ":f32-vhswish_sse2-no-sse3_standalone",
-      ":f32-vhswish_x64_standalone",
-      ":f32-vlog_avx512f_standalone",
-      ":f32-vlog_f16c-fma-avx2_standalone",
-      ":f32-vlog_f16c-fma-no-avx2_standalone",
-      ":f32-vlog_sse2-no-sse3_standalone",
-      ":f32-vlog_x64_standalone",
-      ":f32-vlrelu_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vlrelu_avx512f_standalone",
-      ":f32-vlrelu_sse-no-sse2_standalone",
-      ":f32-vlrelu_sse4.1-no-sse4.2_standalone",
-      ":f32-vlrelu_x64_standalone",
-      ":f32-vmulcaddc_sse-no-sse2_standalone",
-      ":f32-vmulcaddc_x64_standalone",
-      ":f32-vrnd_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vrnd_avx512f_standalone",
-      ":f32-vrnd_sse2-no-sse3_standalone",
-      ":f32-vrnd_sse4.1-no-sse4.2_standalone",
-      ":f32-vrnd_x64_standalone",
-      ":f32-vrsqrt_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vrsqrt_avx512f_standalone",
-      ":f32-vrsqrt_sse2-no-sse3_standalone",
-      ":f32-vrsqrt_x64_standalone",
-      ":f32-vsigmoid_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vsigmoid_avx512f_standalone",
-      ":f32-vsigmoid_f16c-fma-avx2_standalone",
-      ":f32-vsigmoid_sse2-no-sse3_standalone",
-      ":f32-vsigmoid_sse4.1-no-sse4.2_standalone",
-      ":f32-vsigmoid_x64_standalone",
-      ":f32-vsin_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vsin_avx512f_standalone",
-      ":f32-vsin_f16c-fma-no-avx2_standalone",
-      ":f32-vsin_sse2-no-sse3_standalone",
-      ":f32-vsin_x64_standalone",
-      ":f32-vsqrt_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vsqrt_avx512f_standalone",
-      ":f32-vsqrt_sse2-no-sse3_standalone",
-      ":f32-vsqrt_x64_standalone",
-      ":f32-vtanh_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vtanh_avx512f_standalone",
-      ":f32-vtanh_f16c-fma-no-avx2_standalone",
-      ":f32-vtanh_sse2-no-sse3_standalone",
-      ":f32-vtanh_x64_standalone",
-      ":f32-vunary_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":f32-vunary_avx512f_standalone",
-      ":f32-vunary_sse2-no-sse3_standalone",
-      ":f32-vunary_x64_standalone",
-      ":operators_x64_standalone",
-      ":qd8-f16-qb4w-gemm_f16c-fma-avx2_standalone",
-      ":qd8-f16-qc4w-gemm_avx2-avxvnni-f16c-fma_standalone",
-      ":qd8-f16-qc4w-gemm_f16c-fma-avx2_standalone",
-      ":qd8-f16-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
-      ":qd8-f16-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qd8-f16-qc8w-gemm_avx2-avxvnni-f16c-fma_standalone",
-      ":qd8-f16-qc8w-gemm_f16c-fma-avx2_standalone",
-      ":qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone",
-      ":qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
-      ":qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qd8-f16-qc8w-igemm_avx2-avxvnni-f16c-fma_standalone",
-      ":qd8-f16-qc8w-igemm_f16c-fma-avx2_standalone",
-      ":qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone",
-      ":qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
-      ":qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qd8-f32-qb4w-gemm_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qd8-f32-qb4w-gemm_f16c-fma-avx2_standalone",
-      ":qd8-f32-qb4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni_standalone",
-      ":qd8-f32-qb4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
-      ":qd8-f32-qb4w-gemm_sse2-no-sse3_standalone",
-      ":qd8-f32-qb4w-gemm_sse4.1-no-sse4.2_standalone",
-      ":qd8-f32-qb4w-gemm_x64_standalone",
-      ":qd8-f32-qc4w-gemm_avx2-avxvnni-f16c-fma_standalone",
-      ":qd8-f32-qc4w-gemm_f16c-fma-avx2_standalone",
-      ":qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone",
-      ":qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni_standalone",
-      ":qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
-      ":qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qd8-f32-qc4w-gemm_sse2-no-sse3_standalone",
-      ":qd8-f32-qc4w-gemm_ssse3-no-sse4.1_standalone",
-      ":qd8-f32-qc4w-gemm_x64_standalone",
-      ":qd8-f32-qc8w-gemm_avx2-avxvnni-f16c-fma_standalone",
-      ":qd8-f32-qc8w-gemm_f16c-fma-avx2_standalone",
-      ":qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone",
-      ":qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
-      ":qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qd8-f32-qc8w-gemm_sse2-no-sse3_standalone",
-      ":qd8-f32-qc8w-gemm_sse4.1-no-sse4.2_standalone",
-      ":qd8-f32-qc8w-gemm_x64_standalone",
-      ":qd8-f32-qc8w-igemm_avx2-avxvnni-f16c-fma_standalone",
-      ":qd8-f32-qc8w-igemm_f16c-fma-avx2_standalone",
-      ":qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone",
-      ":qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
-      ":qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qd8-f32-qc8w-igemm_sse2-no-sse3_standalone",
-      ":qd8-f32-qc8w-igemm_sse4.1-no-sse4.2_standalone",
-      ":qd8-f32-qc8w-igemm_x64_standalone",
-      ":qs8-dwconv_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qs8-dwconv_f16c-fma-avx2_standalone",
-      ":qs8-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qs8-dwconv_sse2-no-sse3_standalone",
-      ":qs8-dwconv_sse4.1-no-sse4.2_standalone",
-      ":qs8-dwconv_x64_standalone",
-      ":qs8-f16-vcvt_f16c-fma-avx2_standalone",
-      ":qs8-f32-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qs8-f32-vcvt_f16c-fma-avx2_standalone",
-      ":qs8-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qs8-f32-vcvt_sse2-no-sse3_standalone",
-      ":qs8-f32-vcvt_sse4.1-no-sse4.2_standalone",
-      ":qs8-f32-vcvt_x64_standalone",
-      ":qs8-packw_avx2-avxvnni-f16c-fma_standalone",
-      ":qs8-packw_f16c-fma-avx2_standalone",
-      ":qs8-packw_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
-      ":qs8-packw_x64_standalone",
-      ":qs8-qc4w-gemm_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qs8-qc4w-gemm_f16c-fma-avx2_standalone",
-      ":qs8-qc4w-gemm_ssse3-no-sse4.1_standalone",
-      ":qs8-qc4w-gemm_x64_standalone",
-      ":qs8-qc8w-dwconv_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qs8-qc8w-dwconv_f16c-fma-avx2_standalone",
-      ":qs8-qc8w-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qs8-qc8w-dwconv_sse2-no-sse3_standalone",
-      ":qs8-qc8w-dwconv_sse4.1-no-sse4.2_standalone",
-      ":qs8-qc8w-dwconv_x64_standalone",
-      ":qs8-qc8w-gemm_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qs8-qc8w-gemm_avx2-avxvnni-f16c-fma_standalone",
-      ":qs8-qc8w-gemm_avx2-avxvnniint8-f16c-fma_standalone",
-      ":qs8-qc8w-gemm_f16c-fma-avx2_standalone",
-      ":qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone",
-      ":qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
-      ":qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qs8-qc8w-gemm_sse2-no-sse3_standalone",
-      ":qs8-qc8w-gemm_sse4.1-no-sse4.2_standalone",
-      ":qs8-qc8w-gemm_x64_standalone",
-      ":qs8-qc8w-igemm_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qs8-qc8w-igemm_avx2-avxvnni-f16c-fma_standalone",
-      ":qs8-qc8w-igemm_avx2-avxvnniint8-f16c-fma_standalone",
-      ":qs8-qc8w-igemm_f16c-fma-avx2_standalone",
-      ":qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone",
-      ":qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
-      ":qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qs8-qc8w-igemm_sse2-no-sse3_standalone",
-      ":qs8-qc8w-igemm_sse4.1-no-sse4.2_standalone",
-      ":qs8-qc8w-igemm_x64_standalone",
-      ":qs8-qu8-packw_avx2-avxvnni-f16c-fma_standalone",
-      ":qs8-qu8-packw_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
-      ":qs8-qu8-packw_x64_standalone",
-      ":qs8-rdsum_f16c-fma-avx2_standalone",
-      ":qs8-rdsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qs8-rdsum_sse4.1-no-sse4.2_standalone",
-      ":qs8-rdsum_x64_standalone",
-      ":qs8-rsum_avx2-avxvnni-f16c-fma_standalone",
-      ":qs8-rsum_f16c-fma-avx2_standalone",
-      ":qs8-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
-      ":qs8-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qs8-rsum_ssse3-no-sse4.1_standalone",
-      ":qs8-rsum_x64_standalone",
-      ":qs8-vadd_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qs8-vadd_f16c-fma-avx2_standalone",
-      ":qs8-vadd_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qs8-vadd_sse2-no-sse3_standalone",
-      ":qs8-vadd_sse4.1-no-sse4.2_standalone",
-      ":qs8-vadd_x64_standalone",
-      ":qs8-vaddc_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qs8-vaddc_f16c-fma-avx2_standalone",
-      ":qs8-vaddc_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qs8-vaddc_sse2-no-sse3_standalone",
-      ":qs8-vaddc_sse4.1-no-sse4.2_standalone",
-      ":qs8-vaddc_x64_standalone",
-      ":qs8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qs8-vcvt_f16c-fma-avx2_standalone",
-      ":qs8-vcvt_sse2-no-sse3_standalone",
-      ":qs8-vcvt_sse4.1-no-sse4.2_standalone",
-      ":qs8-vcvt_ssse3-no-sse4.1_standalone",
-      ":qs8-vcvt_x64_standalone",
-      ":qs8-vlrelu_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qs8-vlrelu_f16c-fma-avx2_standalone",
-      ":qs8-vlrelu_sse2-no-sse3_standalone",
-      ":qs8-vlrelu_sse4.1-no-sse4.2_standalone",
-      ":qs8-vlrelu_ssse3-no-sse4.1_standalone",
-      ":qs8-vlrelu_x64_standalone",
-      ":qs8-vmul_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qs8-vmul_sse2-no-sse3_standalone",
-      ":qs8-vmul_sse4.1-no-sse4.2_standalone",
-      ":qs8-vmul_x64_standalone",
-      ":qs8-vmulc_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qs8-vmulc_sse2-no-sse3_standalone",
-      ":qs8-vmulc_sse4.1-no-sse4.2_standalone",
-      ":qs8-vmulc_x64_standalone",
-      ":qs8-vprelu_f16c-fma-avx2_standalone",
-      ":qs8-vprelu_x64_standalone",
-      ":qs8-vpreluc_f16c-fma-avx2_standalone",
-      ":qs8-vpreluc_x64_standalone",
-      ":qs8-vrpreluc_f16c-fma-avx2_standalone",
-      ":qs8-vrpreluc_x64_standalone",
-      ":qu8-dwconv_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qu8-dwconv_f16c-fma-avx2_standalone",
-      ":qu8-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qu8-dwconv_sse2-no-sse3_standalone",
-      ":qu8-dwconv_sse4.1-no-sse4.2_standalone",
-      ":qu8-dwconv_x64_standalone",
-      ":qu8-f32-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qu8-f32-vcvt_f16c-fma-avx2_standalone",
-      ":qu8-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qu8-f32-vcvt_sse2-no-sse3_standalone",
-      ":qu8-f32-vcvt_sse4.1-no-sse4.2_standalone",
-      ":qu8-f32-vcvt_x64_standalone",
-      ":qu8-gemm_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qu8-gemm_f16c-fma-avx2_standalone",
-      ":qu8-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qu8-gemm_sse2-no-sse3_standalone",
-      ":qu8-gemm_sse4.1-no-sse4.2_standalone",
-      ":qu8-gemm_x64_standalone",
-      ":qu8-igemm_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qu8-igemm_f16c-fma-avx2_standalone",
-      ":qu8-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qu8-igemm_sse2-no-sse3_standalone",
-      ":qu8-igemm_sse4.1-no-sse4.2_standalone",
-      ":qu8-igemm_x64_standalone",
-      ":qu8-rdsum_ssse3-no-sse4.1_standalone",
-      ":qu8-rdsum_x64_standalone",
-      ":qu8-rsum_f16c-fma-avx2_standalone",
-      ":qu8-rsum_sse2-no-sse3_standalone",
-      ":qu8-rsum_x64_standalone",
-      ":qu8-vadd_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qu8-vadd_f16c-fma-avx2_standalone",
-      ":qu8-vadd_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qu8-vadd_sse2-no-sse3_standalone",
-      ":qu8-vadd_sse4.1-no-sse4.2_standalone",
-      ":qu8-vadd_x64_standalone",
-      ":qu8-vaddc_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qu8-vaddc_f16c-fma-avx2_standalone",
-      ":qu8-vaddc_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":qu8-vaddc_sse2-no-sse3_standalone",
-      ":qu8-vaddc_sse4.1-no-sse4.2_standalone",
-      ":qu8-vaddc_x64_standalone",
-      ":qu8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qu8-vcvt_f16c-fma-avx2_standalone",
-      ":qu8-vcvt_sse2-no-sse3_standalone",
-      ":qu8-vcvt_sse4.1-no-sse4.2_standalone",
-      ":qu8-vcvt_ssse3-no-sse4.1_standalone",
-      ":qu8-vcvt_x64_standalone",
-      ":qu8-vlrelu_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qu8-vlrelu_f16c-fma-avx2_standalone",
-      ":qu8-vlrelu_sse2-no-sse3_standalone",
-      ":qu8-vlrelu_sse4.1-no-sse4.2_standalone",
-      ":qu8-vlrelu_ssse3-no-sse4.1_standalone",
-      ":qu8-vlrelu_x64_standalone",
-      ":qu8-vmul_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qu8-vmul_sse2-no-sse3_standalone",
-      ":qu8-vmul_sse4.1-no-sse4.2_standalone",
-      ":qu8-vmul_x64_standalone",
-      ":qu8-vmulc_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":qu8-vmulc_sse2-no-sse3_standalone",
-      ":qu8-vmulc_sse4.1-no-sse4.2_standalone",
-      ":qu8-vmulc_x64_standalone",
-      ":qu8-vprelu_f16c-fma-avx2_standalone",
-      ":qu8-vprelu_x64_standalone",
-      ":qu8-vpreluc_f16c-fma-avx2_standalone",
-      ":qu8-vpreluc_x64_standalone",
-      ":qu8-vrpreluc_f16c-fma-avx2_standalone",
-      ":qu8-vrpreluc_x64_standalone",
-      ":reference_x64_standalone",
-      ":s8-ibilinear_sse2-no-sse3_standalone",
-      ":s8-ibilinear_sse4.1-no-sse4.2_standalone",
-      ":s8-ibilinear_x64_standalone",
-      ":s8-maxpool_sse4.1-no-sse4.2_standalone",
-      ":s8-maxpool_x64_standalone",
-      ":s8-rdminmax_sse4.1-no-sse4.2_standalone",
-      ":s8-rdminmax_x64_standalone",
-      ":s8-rminmax_sse4.1-no-sse4.2_standalone",
-      ":s8-rminmax_x64_standalone",
-      ":s8-vclamp_f16c-fma-avx2_standalone",
-      ":s8-vclamp_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":s8-vclamp_sse2-no-sse3_standalone",
-      ":s8-vclamp_sse4.1-no-sse4.2_standalone",
-      ":s8-vclamp_x64_standalone",
-      ":subgraph_x64_standalone",
-      ":tables_x64_standalone",
-      ":u8-ibilinear_sse2-no-sse3_standalone",
-      ":u8-ibilinear_sse4.1-no-sse4.2_standalone",
-      ":u8-ibilinear_x64_standalone",
-      ":u8-lut32norm_x64_standalone",
-      ":u8-maxpool_sse2-no-sse3_standalone",
-      ":u8-maxpool_x64_standalone",
-      ":u8-rdminmax_sse2-no-sse3_standalone",
-      ":u8-rdminmax_x64_standalone",
-      ":u8-rminmax_sse2-no-sse3_standalone",
-      ":u8-rminmax_x64_standalone",
-      ":u8-vclamp_f16c-fma-avx2_standalone",
-      ":u8-vclamp_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":u8-vclamp_sse2-no-sse3_standalone",
-      ":u8-vclamp_x64_standalone",
-      ":x16-packw_f16c-fma-avx2_standalone",
-      ":x16-transposec_f16c-fma-avx2_standalone",
-      ":x16-transposec_sse2-no-sse3_standalone",
-      ":x16-transposec_x64_standalone",
-      ":x16-x32-packw_x64_standalone",
-      ":x24-transposec_ssse3-no-sse4.1_standalone",
-      ":x24-transposec_x64_standalone",
-      ":x32-packw_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":x32-packw_avx512f_standalone",
-      ":x32-packw_sse2-no-sse3_standalone",
-      ":x32-packw_x64_standalone",
-      ":x32-transposec_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":x32-transposec_sse-no-sse2_standalone",
-      ":x32-transposec_x64_standalone",
-      ":x32-unpool_sse2-no-sse3_standalone",
-      ":x32-unpool_x64_standalone",
-      ":x64-transposec_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":x64-transposec_sse2-no-sse3_standalone",
-      ":x64-transposec_x64_standalone",
-      ":x8-lut_avx-no-avx2-no-f16c-no-fma_standalone",
-      ":x8-lut_f16c-fma-avx2_standalone",
-      ":x8-lut_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vbmi_standalone",
-      ":x8-lut_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
-      ":x8-lut_x64_standalone",
-      ":x8-packq_x64_standalone",
-      ":x8-packw_x64_standalone",
-      ":x8-transposec_f16c-fma-avx2_standalone",
-      ":x8-transposec_sse2-no-sse3_standalone",
-      ":x8-transposec_x64_standalone",
-      ":xx-copy_x64_standalone",
-      ":xx-fill_sse2-no-sse3_standalone",
-      ":xx-fill_x64_standalone",
-      ":xx-pad_sse2-no-sse3_standalone",
-      ":xx-pad_x64_standalone",
-      ":xx-transposev_x64_standalone",
+    ":configs_x64_standalone",
+    ":enums_x64_standalone",
+    ":f16-avgpool_f16c-no-avx2-no-fma_standalone",
+    ":f16-dwconv_f16c-fma-no-avx2_standalone",
+    ":f16-f32-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f16-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":f16-f32-vcvt_f16c-no-avx2-no-fma_standalone",
+    ":f16-f32-vcvt_sse2-no-sse3_standalone",
+    ":f16-f32-vcvt_sse4.1-no-sse4.2_standalone",
+    ":f16-f32-vcvt_x64_standalone",
+    ":f16-f32acc-gemm_f16c-fma-avx2_standalone",
+    ":f16-f32acc-igemm_f16c-fma-avx2_standalone",
+    ":f16-f32acc-rdsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":f16-f32acc-rdsum_f16c-no-avx2-no-fma_standalone",
+    ":f16-f32acc-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":f16-f32acc-rsum_f16c-no-avx2-no-fma_standalone",
+    ":f16-ibilinear_f16c-fma-no-avx2_standalone",
+    ":f16-maxpool_f16c-fma-avx2_standalone",
+    ":f16-maxpool_sse4.1-no-sse4.2_standalone",
+    ":f16-qs8-vcvt_x64_standalone",
+    ":f16-qu8-vcvt_x64_standalone",
+    ":f16-raddstoreexpminusmax_f16c-fma-avx2_standalone",
+    ":f16-rdminmax_x64_standalone",
+    ":f16-rminmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":f16-rminmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-avx512fp16_standalone",
+    ":f16-rminmax_f16c-no-avx2-no-fma_standalone",
+    ":f16-rminmax_x64_standalone",
+    ":f16-vapproxgelu_x64_standalone",
+    ":f16-vbinary_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-avx512fp16_standalone",
+    ":f16-vbinary_f16c-no-avx2-no-fma_standalone",
+    ":f16-vclamp_f16c-no-avx2-no-fma_standalone",
+    ":f16-vcos_x64_standalone",
+    ":f16-velu_f16c-fma-avx2_standalone",
+    ":f16-vexp_x64_standalone",
+    ":f16-vgelu_x64_standalone",
+    ":f16-vhswish_f16c-no-avx2-no-fma_standalone",
+    ":f16-vlrelu_f16c-no-avx2-no-fma_standalone",
+    ":f16-vmulcaddc_f16c-fma-no-avx2_standalone",
+    ":f16-vrnd_f16c-no-avx2-no-fma_standalone",
+    ":f16-vrsqrt_f16c-no-avx2-no-fma_standalone",
+    ":f16-vsigmoid_f16c-fma-avx2_standalone",
+    ":f16-vsin_x64_standalone",
+    ":f16-vsqrt_f16c-no-avx2-no-fma_standalone",
+    ":f16-vtanh_f16c-fma-no-avx2_standalone",
+    ":f16-vtanh_f16c-no-avx2-no-fma_standalone",
+    ":f16-vunary_f16c-no-avx2-no-fma_standalone",
+    ":f16-vunary_sse2-no-sse3_standalone",
+    ":f32-argmaxpool_sse2-no-sse3_standalone",
+    ":f32-argmaxpool_x64_standalone",
+    ":f32-avgpool_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-avgpool_avx512f_standalone",
+    ":f32-avgpool_sse2-no-sse3_standalone",
+    ":f32-avgpool_x64_standalone",
+    ":f32-conv-hwc2chw_sse-no-sse2_standalone",
+    ":f32-conv-hwc2chw_x64_standalone",
+    ":f32-dwconv2d-chw_sse-no-sse2_standalone",
+    ":f32-dwconv2d-chw_ssse3-no-sse4.1_standalone",
+    ":f32-dwconv2d-chw_x64_standalone",
+    ":f32-dwconv_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-dwconv_avx512f_standalone",
+    ":f32-dwconv_f16c-fma-no-avx2_standalone",
+    ":f32-dwconv_sse-no-sse2_standalone",
+    ":f32-dwconv_x64_standalone",
+    ":f32-f16-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-f16-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":f32-f16-vcvt_f16c-no-avx2-no-fma_standalone",
+    ":f32-f16-vcvt_sse2-no-sse3_standalone",
+    ":f32-f16-vcvt_sse4.1-no-sse4.2_standalone",
+    ":f32-f16-vcvt_x64_standalone",
+    ":f32-gemm_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-gemm_avx512f_standalone",
+    ":f32-gemm_f16c-fma-no-avx2_standalone",
+    ":f32-gemm_sse-no-sse2_standalone",
+    ":f32-gemm_x64_standalone",
+    ":f32-ibilinear-chw_sse-no-sse2_standalone",
+    ":f32-ibilinear-chw_x64_standalone",
+    ":f32-ibilinear_sse-no-sse2_standalone",
+    ":f32-ibilinear_x64_standalone",
+    ":f32-igemm_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-igemm_avx512f_standalone",
+    ":f32-igemm_f16c-fma-no-avx2_standalone",
+    ":f32-igemm_sse-no-sse2_standalone",
+    ":f32-igemm_x64_standalone",
+    ":f32-maxpool_sse2-no-sse3_standalone",
+    ":f32-maxpool_x64_standalone",
+    ":f32-qc4w-gemm_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-qc4w-gemm_f16c-fma-avx2_standalone",
+    ":f32-qc4w-gemm_f16c-fma-no-avx2_standalone",
+    ":f32-qc4w-gemm_sse4.1-no-sse4.2_standalone",
+    ":f32-qc4w-gemm_x64_standalone",
+    ":f32-qc8w-gemm_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-qc8w-gemm_f16c-fma-avx2_standalone",
+    ":f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":f32-qc8w-gemm_f16c-fma-no-avx2_standalone",
+    ":f32-qc8w-gemm_sse4.1-no-sse4.2_standalone",
+    ":f32-qc8w-gemm_x64_standalone",
+    ":f32-qs8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-qs8-vcvt_f16c-fma-avx2_standalone",
+    ":f32-qs8-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":f32-qs8-vcvt_sse2-no-sse3_standalone",
+    ":f32-qs8-vcvt_sse4.1-no-sse4.2_standalone",
+    ":f32-qs8-vcvt_x64_standalone",
+    ":f32-qu8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-qu8-vcvt_f16c-fma-avx2_standalone",
+    ":f32-qu8-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":f32-qu8-vcvt_sse2-no-sse3_standalone",
+    ":f32-qu8-vcvt_x64_standalone",
+    ":f32-raddstoreexpminusmax_avx512f_standalone",
+    ":f32-raddstoreexpminusmax_f16c-fma-avx2_standalone",
+    ":f32-raddstoreexpminusmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":f32-raddstoreexpminusmax_sse2-no-sse3_standalone",
+    ":f32-raddstoreexpminusmax_x64_standalone",
+    ":f32-rdminmax_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-rdminmax_avx512f_standalone",
+    ":f32-rdminmax_sse2-no-sse3_standalone",
+    ":f32-rdminmax_x64_standalone",
+    ":f32-rdsum_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-rdsum_avx512f_standalone",
+    ":f32-rdsum_sse2-no-sse3_standalone",
+    ":f32-rdsum_x64_standalone",
+    ":f32-rminmax_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-rminmax_avx512f_standalone",
+    ":f32-rminmax_sse-no-sse2_standalone",
+    ":f32-rminmax_x64_standalone",
+    ":f32-rsum_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-rsum_avx512f_standalone",
+    ":f32-rsum_sse2-no-sse3_standalone",
+    ":f32-rsum_x64_standalone",
+    ":f32-spmm_sse-no-sse2_standalone",
+    ":f32-spmm_x64_standalone",
+    ":f32-vapproxgelu_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vapproxgelu_avx512f_standalone",
+    ":f32-vapproxgelu_f16c-fma-no-avx2_standalone",
+    ":f32-vapproxgelu_sse2-no-sse3_standalone",
+    ":f32-vapproxgelu_x64_standalone",
+    ":f32-vbinary_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vbinary_avx512f_standalone",
+    ":f32-vbinary_sse-no-sse2_standalone",
+    ":f32-vbinary_sse2-no-sse3_standalone",
+    ":f32-vbinary_x64_standalone",
+    ":f32-vclamp_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vclamp_avx512f_standalone",
+    ":f32-vclamp_sse2-no-sse3_standalone",
+    ":f32-vclamp_x64_standalone",
+    ":f32-vcmul_avx512f_standalone",
+    ":f32-vcmul_f16c-fma-no-avx2_standalone",
+    ":f32-vcmul_sse-no-sse2_standalone",
+    ":f32-vcmul_x64_standalone",
+    ":f32-vcopysign_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vcopysign_avx512f_standalone",
+    ":f32-vcopysign_sse2-no-sse3_standalone",
+    ":f32-vcopysign_x64_standalone",
+    ":f32-vcos_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vcos_avx512f_standalone",
+    ":f32-vcos_f16c-fma-no-avx2_standalone",
+    ":f32-vcos_sse2-no-sse3_standalone",
+    ":f32-vcos_x64_standalone",
+    ":f32-velu_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-velu_avx512f_standalone",
+    ":f32-velu_f16c-fma-avx2_standalone",
+    ":f32-velu_sse2-no-sse3_standalone",
+    ":f32-velu_x64_standalone",
+    ":f32-vexp_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vexp_avx512f_standalone",
+    ":f32-vexp_f16c-fma-no-avx2_standalone",
+    ":f32-vexp_sse2-no-sse3_standalone",
+    ":f32-vexp_x64_standalone",
+    ":f32-vgelu_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vgelu_avx512f_standalone",
+    ":f32-vgelu_f16c-fma-no-avx2_standalone",
+    ":f32-vgelu_sse2-no-sse3_standalone",
+    ":f32-vgelu_x64_standalone",
+    ":f32-vhswish_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vhswish_avx512f_standalone",
+    ":f32-vhswish_f16c-fma-no-avx2_standalone",
+    ":f32-vhswish_sse2-no-sse3_standalone",
+    ":f32-vhswish_x64_standalone",
+    ":f32-vlog_avx512f_standalone",
+    ":f32-vlog_f16c-fma-avx2_standalone",
+    ":f32-vlog_f16c-fma-no-avx2_standalone",
+    ":f32-vlog_sse2-no-sse3_standalone",
+    ":f32-vlog_x64_standalone",
+    ":f32-vlrelu_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vlrelu_avx512f_standalone",
+    ":f32-vlrelu_sse-no-sse2_standalone",
+    ":f32-vlrelu_sse4.1-no-sse4.2_standalone",
+    ":f32-vlrelu_x64_standalone",
+    ":f32-vmulcaddc_sse-no-sse2_standalone",
+    ":f32-vmulcaddc_x64_standalone",
+    ":f32-vrnd_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vrnd_avx512f_standalone",
+    ":f32-vrnd_sse2-no-sse3_standalone",
+    ":f32-vrnd_sse4.1-no-sse4.2_standalone",
+    ":f32-vrnd_x64_standalone",
+    ":f32-vrsqrt_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vrsqrt_avx512f_standalone",
+    ":f32-vrsqrt_sse2-no-sse3_standalone",
+    ":f32-vrsqrt_x64_standalone",
+    ":f32-vsigmoid_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vsigmoid_avx512f_standalone",
+    ":f32-vsigmoid_f16c-fma-avx2_standalone",
+    ":f32-vsigmoid_sse2-no-sse3_standalone",
+    ":f32-vsigmoid_sse4.1-no-sse4.2_standalone",
+    ":f32-vsigmoid_x64_standalone",
+    ":f32-vsin_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vsin_avx512f_standalone",
+    ":f32-vsin_f16c-fma-no-avx2_standalone",
+    ":f32-vsin_sse2-no-sse3_standalone",
+    ":f32-vsin_x64_standalone",
+    ":f32-vsqrt_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vsqrt_avx512f_standalone",
+    ":f32-vsqrt_sse2-no-sse3_standalone",
+    ":f32-vsqrt_x64_standalone",
+    ":f32-vtanh_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vtanh_avx512f_standalone",
+    ":f32-vtanh_f16c-fma-no-avx2_standalone",
+    ":f32-vtanh_sse2-no-sse3_standalone",
+    ":f32-vtanh_x64_standalone",
+    ":f32-vunary_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":f32-vunary_avx512f_standalone",
+    ":f32-vunary_sse2-no-sse3_standalone",
+    ":f32-vunary_x64_standalone",
+    ":operators_x64_standalone",
+    ":qd8-f16-qb4w-gemm_f16c-fma-avx2_standalone",
+    ":qd8-f16-qc4w-gemm_avx2-avxvnni-f16c-fma_standalone",
+    ":qd8-f16-qc4w-gemm_f16c-fma-avx2_standalone",
+    ":qd8-f16-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qd8-f16-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
+    ":qd8-f16-qc8w-gemm_avx2-avxvnni-f16c-fma_standalone",
+    ":qd8-f16-qc8w-gemm_f16c-fma-avx2_standalone",
+    ":qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
+    ":qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone",
+    ":qd8-f16-qc8w-igemm_avx2-avxvnni-f16c-fma_standalone",
+    ":qd8-f16-qc8w-igemm_f16c-fma-avx2_standalone",
+    ":qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
+    ":qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone",
+    ":qd8-f32-qb4w-gemm_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qd8-f32-qb4w-gemm_f16c-fma-avx2_standalone",
+    ":qd8-f32-qb4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
+    ":qd8-f32-qb4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni_standalone",
+    ":qd8-f32-qb4w-gemm_sse2-no-sse3_standalone",
+    ":qd8-f32-qb4w-gemm_sse4.1-no-sse4.2_standalone",
+    ":qd8-f32-qb4w-gemm_x64_standalone",
+    ":qd8-f32-qc4w-gemm_avx2-avxvnni-f16c-fma_standalone",
+    ":qd8-f32-qc4w-gemm_f16c-fma-avx2_standalone",
+    ":qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
+    ":qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni_standalone",
+    ":qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone",
+    ":qd8-f32-qc4w-gemm_sse2-no-sse3_standalone",
+    ":qd8-f32-qc4w-gemm_ssse3-no-sse4.1_standalone",
+    ":qd8-f32-qc4w-gemm_x64_standalone",
+    ":qd8-f32-qc8w-gemm_avx2-avxvnni-f16c-fma_standalone",
+    ":qd8-f32-qc8w-gemm_f16c-fma-avx2_standalone",
+    ":qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
+    ":qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone",
+    ":qd8-f32-qc8w-gemm_sse2-no-sse3_standalone",
+    ":qd8-f32-qc8w-gemm_sse4.1-no-sse4.2_standalone",
+    ":qd8-f32-qc8w-gemm_x64_standalone",
+    ":qd8-f32-qc8w-igemm_avx2-avxvnni-f16c-fma_standalone",
+    ":qd8-f32-qc8w-igemm_f16c-fma-avx2_standalone",
+    ":qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
+    ":qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone",
+    ":qd8-f32-qc8w-igemm_sse2-no-sse3_standalone",
+    ":qd8-f32-qc8w-igemm_sse4.1-no-sse4.2_standalone",
+    ":qd8-f32-qc8w-igemm_x64_standalone",
+    ":qs8-dwconv_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qs8-dwconv_f16c-fma-avx2_standalone",
+    ":qs8-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qs8-dwconv_sse2-no-sse3_standalone",
+    ":qs8-dwconv_sse4.1-no-sse4.2_standalone",
+    ":qs8-dwconv_x64_standalone",
+    ":qs8-f16-vcvt_f16c-fma-avx2_standalone",
+    ":qs8-f32-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qs8-f32-vcvt_f16c-fma-avx2_standalone",
+    ":qs8-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qs8-f32-vcvt_sse2-no-sse3_standalone",
+    ":qs8-f32-vcvt_sse4.1-no-sse4.2_standalone",
+    ":qs8-f32-vcvt_x64_standalone",
+    ":qs8-packw_avx2-avxvnni-f16c-fma_standalone",
+    ":qs8-packw_f16c-fma-avx2_standalone",
+    ":qs8-packw_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
+    ":qs8-packw_x64_standalone",
+    ":qs8-qc4w-gemm_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qs8-qc4w-gemm_f16c-fma-avx2_standalone",
+    ":qs8-qc4w-gemm_ssse3-no-sse4.1_standalone",
+    ":qs8-qc4w-gemm_x64_standalone",
+    ":qs8-qc8w-dwconv_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qs8-qc8w-dwconv_f16c-fma-avx2_standalone",
+    ":qs8-qc8w-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qs8-qc8w-dwconv_sse2-no-sse3_standalone",
+    ":qs8-qc8w-dwconv_sse4.1-no-sse4.2_standalone",
+    ":qs8-qc8w-dwconv_x64_standalone",
+    ":qs8-qc8w-gemm_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qs8-qc8w-gemm_avx2-avxvnni-f16c-fma_standalone",
+    ":qs8-qc8w-gemm_avx2-avxvnniint8-f16c-fma_standalone",
+    ":qs8-qc8w-gemm_f16c-fma-avx2_standalone",
+    ":qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
+    ":qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone",
+    ":qs8-qc8w-gemm_sse2-no-sse3_standalone",
+    ":qs8-qc8w-gemm_sse4.1-no-sse4.2_standalone",
+    ":qs8-qc8w-gemm_x64_standalone",
+    ":qs8-qc8w-igemm_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qs8-qc8w-igemm_avx2-avxvnni-f16c-fma_standalone",
+    ":qs8-qc8w-igemm_avx2-avxvnniint8-f16c-fma_standalone",
+    ":qs8-qc8w-igemm_f16c-fma-avx2_standalone",
+    ":qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
+    ":qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone",
+    ":qs8-qc8w-igemm_sse2-no-sse3_standalone",
+    ":qs8-qc8w-igemm_sse4.1-no-sse4.2_standalone",
+    ":qs8-qc8w-igemm_x64_standalone",
+    ":qs8-qu8-packw_avx2-avxvnni-f16c-fma_standalone",
+    ":qs8-qu8-packw_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
+    ":qs8-qu8-packw_x64_standalone",
+    ":qs8-rdsum_f16c-fma-avx2_standalone",
+    ":qs8-rdsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qs8-rdsum_sse4.1-no-sse4.2_standalone",
+    ":qs8-rdsum_x64_standalone",
+    ":qs8-rsum_avx2-avxvnni-f16c-fma_standalone",
+    ":qs8-rsum_f16c-fma-avx2_standalone",
+    ":qs8-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qs8-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone",
+    ":qs8-rsum_ssse3-no-sse4.1_standalone",
+    ":qs8-rsum_x64_standalone",
+    ":qs8-vadd_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qs8-vadd_f16c-fma-avx2_standalone",
+    ":qs8-vadd_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qs8-vadd_sse2-no-sse3_standalone",
+    ":qs8-vadd_sse4.1-no-sse4.2_standalone",
+    ":qs8-vadd_x64_standalone",
+    ":qs8-vaddc_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qs8-vaddc_f16c-fma-avx2_standalone",
+    ":qs8-vaddc_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qs8-vaddc_sse2-no-sse3_standalone",
+    ":qs8-vaddc_sse4.1-no-sse4.2_standalone",
+    ":qs8-vaddc_x64_standalone",
+    ":qs8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qs8-vcvt_f16c-fma-avx2_standalone",
+    ":qs8-vcvt_sse2-no-sse3_standalone",
+    ":qs8-vcvt_sse4.1-no-sse4.2_standalone",
+    ":qs8-vcvt_ssse3-no-sse4.1_standalone",
+    ":qs8-vcvt_x64_standalone",
+    ":qs8-vlrelu_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qs8-vlrelu_f16c-fma-avx2_standalone",
+    ":qs8-vlrelu_sse2-no-sse3_standalone",
+    ":qs8-vlrelu_sse4.1-no-sse4.2_standalone",
+    ":qs8-vlrelu_ssse3-no-sse4.1_standalone",
+    ":qs8-vlrelu_x64_standalone",
+    ":qs8-vmul_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qs8-vmul_sse2-no-sse3_standalone",
+    ":qs8-vmul_sse4.1-no-sse4.2_standalone",
+    ":qs8-vmul_x64_standalone",
+    ":qs8-vmulc_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qs8-vmulc_sse2-no-sse3_standalone",
+    ":qs8-vmulc_sse4.1-no-sse4.2_standalone",
+    ":qs8-vmulc_x64_standalone",
+    ":qs8-vprelu_f16c-fma-avx2_standalone",
+    ":qs8-vprelu_x64_standalone",
+    ":qs8-vpreluc_f16c-fma-avx2_standalone",
+    ":qs8-vpreluc_x64_standalone",
+    ":qs8-vrpreluc_f16c-fma-avx2_standalone",
+    ":qs8-vrpreluc_x64_standalone",
+    ":qu8-dwconv_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qu8-dwconv_f16c-fma-avx2_standalone",
+    ":qu8-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qu8-dwconv_sse2-no-sse3_standalone",
+    ":qu8-dwconv_sse4.1-no-sse4.2_standalone",
+    ":qu8-dwconv_x64_standalone",
+    ":qu8-f32-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qu8-f32-vcvt_f16c-fma-avx2_standalone",
+    ":qu8-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qu8-f32-vcvt_sse2-no-sse3_standalone",
+    ":qu8-f32-vcvt_sse4.1-no-sse4.2_standalone",
+    ":qu8-f32-vcvt_x64_standalone",
+    ":qu8-gemm_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qu8-gemm_f16c-fma-avx2_standalone",
+    ":qu8-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qu8-gemm_sse2-no-sse3_standalone",
+    ":qu8-gemm_sse4.1-no-sse4.2_standalone",
+    ":qu8-gemm_x64_standalone",
+    ":qu8-igemm_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qu8-igemm_f16c-fma-avx2_standalone",
+    ":qu8-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qu8-igemm_sse2-no-sse3_standalone",
+    ":qu8-igemm_sse4.1-no-sse4.2_standalone",
+    ":qu8-igemm_x64_standalone",
+    ":qu8-rdsum_ssse3-no-sse4.1_standalone",
+    ":qu8-rdsum_x64_standalone",
+    ":qu8-rsum_f16c-fma-avx2_standalone",
+    ":qu8-rsum_sse2-no-sse3_standalone",
+    ":qu8-rsum_x64_standalone",
+    ":qu8-vadd_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qu8-vadd_f16c-fma-avx2_standalone",
+    ":qu8-vadd_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qu8-vadd_sse2-no-sse3_standalone",
+    ":qu8-vadd_sse4.1-no-sse4.2_standalone",
+    ":qu8-vadd_x64_standalone",
+    ":qu8-vaddc_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qu8-vaddc_f16c-fma-avx2_standalone",
+    ":qu8-vaddc_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":qu8-vaddc_sse2-no-sse3_standalone",
+    ":qu8-vaddc_sse4.1-no-sse4.2_standalone",
+    ":qu8-vaddc_x64_standalone",
+    ":qu8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qu8-vcvt_f16c-fma-avx2_standalone",
+    ":qu8-vcvt_sse2-no-sse3_standalone",
+    ":qu8-vcvt_sse4.1-no-sse4.2_standalone",
+    ":qu8-vcvt_ssse3-no-sse4.1_standalone",
+    ":qu8-vcvt_x64_standalone",
+    ":qu8-vlrelu_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qu8-vlrelu_f16c-fma-avx2_standalone",
+    ":qu8-vlrelu_sse2-no-sse3_standalone",
+    ":qu8-vlrelu_sse4.1-no-sse4.2_standalone",
+    ":qu8-vlrelu_ssse3-no-sse4.1_standalone",
+    ":qu8-vlrelu_x64_standalone",
+    ":qu8-vmul_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qu8-vmul_sse2-no-sse3_standalone",
+    ":qu8-vmul_sse4.1-no-sse4.2_standalone",
+    ":qu8-vmul_x64_standalone",
+    ":qu8-vmulc_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":qu8-vmulc_sse2-no-sse3_standalone",
+    ":qu8-vmulc_sse4.1-no-sse4.2_standalone",
+    ":qu8-vmulc_x64_standalone",
+    ":qu8-vprelu_f16c-fma-avx2_standalone",
+    ":qu8-vprelu_x64_standalone",
+    ":qu8-vpreluc_f16c-fma-avx2_standalone",
+    ":qu8-vpreluc_x64_standalone",
+    ":qu8-vrpreluc_f16c-fma-avx2_standalone",
+    ":qu8-vrpreluc_x64_standalone",
+    ":reference_x64_standalone",
+    ":s8-ibilinear_sse2-no-sse3_standalone",
+    ":s8-ibilinear_sse4.1-no-sse4.2_standalone",
+    ":s8-ibilinear_x64_standalone",
+    ":s8-maxpool_sse4.1-no-sse4.2_standalone",
+    ":s8-maxpool_x64_standalone",
+    ":s8-rdminmax_sse4.1-no-sse4.2_standalone",
+    ":s8-rdminmax_x64_standalone",
+    ":s8-rminmax_sse4.1-no-sse4.2_standalone",
+    ":s8-rminmax_x64_standalone",
+    ":s8-vclamp_f16c-fma-avx2_standalone",
+    ":s8-vclamp_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":s8-vclamp_sse2-no-sse3_standalone",
+    ":s8-vclamp_sse4.1-no-sse4.2_standalone",
+    ":s8-vclamp_x64_standalone",
+    ":subgraph_x64_standalone",
+    ":tables_x64_standalone",
+    ":u8-ibilinear_sse2-no-sse3_standalone",
+    ":u8-ibilinear_sse4.1-no-sse4.2_standalone",
+    ":u8-ibilinear_x64_standalone",
+    ":u8-lut32norm_x64_standalone",
+    ":u8-maxpool_sse2-no-sse3_standalone",
+    ":u8-maxpool_x64_standalone",
+    ":u8-rdminmax_sse2-no-sse3_standalone",
+    ":u8-rdminmax_x64_standalone",
+    ":u8-rminmax_sse2-no-sse3_standalone",
+    ":u8-rminmax_x64_standalone",
+    ":u8-vclamp_f16c-fma-avx2_standalone",
+    ":u8-vclamp_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":u8-vclamp_sse2-no-sse3_standalone",
+    ":u8-vclamp_x64_standalone",
+    ":x16-packw_f16c-fma-avx2_standalone",
+    ":x16-transposec_f16c-fma-avx2_standalone",
+    ":x16-transposec_sse2-no-sse3_standalone",
+    ":x16-transposec_x64_standalone",
+    ":x16-x32-packw_x64_standalone",
+    ":x24-transposec_ssse3-no-sse4.1_standalone",
+    ":x24-transposec_x64_standalone",
+    ":x32-packw_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":x32-packw_avx512f_standalone",
+    ":x32-packw_sse2-no-sse3_standalone",
+    ":x32-packw_x64_standalone",
+    ":x32-transposec_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":x32-transposec_sse-no-sse2_standalone",
+    ":x32-transposec_x64_standalone",
+    ":x32-unpool_sse2-no-sse3_standalone",
+    ":x32-unpool_x64_standalone",
+    ":x64-transposec_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":x64-transposec_sse2-no-sse3_standalone",
+    ":x64-transposec_x64_standalone",
+    ":x8-lut_avx-no-avx2-no-f16c-no-fma_standalone",
+    ":x8-lut_f16c-fma-avx2_standalone",
+    ":x8-lut_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone",
+    ":x8-lut_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vbmi_standalone",
+    ":x8-lut_x64_standalone",
+    ":x8-packq_x64_standalone",
+    ":x8-packw_x64_standalone",
+    ":x8-transposec_f16c-fma-avx2_standalone",
+    ":x8-transposec_sse2-no-sse3_standalone",
+    ":x8-transposec_x64_standalone",
+    ":xx-copy_x64_standalone",
+    ":xx-fill_sse2-no-sse3_standalone",
+    ":xx-fill_x64_standalone",
+    ":xx-pad_sse2-no-sse3_standalone",
+    ":xx-pad_x64_standalone",
+    ":xx-transposev_x64_standalone"
     ]
   }
-} else if (current_cpu == "arm64") {
+} else 
+if (current_cpu == "arm64") {
+
   xnnpack_deps = [
     ":configs_arm64",
     ":enums_arm64",
@@ -1269,227 +1273,229 @@ if (current_cpu == "x64" || current_cpu
     ":xx-copy_arm64",
     ":xx-fill_arm64",
     ":xx-pad_arm64",
-    ":xx-transposev_arm64",
+    ":xx-transposev_arm64"
   ]
 
   if (build_with_internal_optimization_guide) {
     xnnpack_standalone_deps = [
-      ":configs_arm64_standalone",
-      ":enums_arm64_standalone",
-      ":f16-avgpool_arch=armv8.2-a+fp16_standalone",
-      ":f16-conv-hwc2chw_arch=armv8.2-a+fp16_standalone",
-      ":f16-dwconv2d-chw_arch=armv8.2-a+fp16_standalone",
-      ":f16-dwconv_arch=armv8.2-a+fp16_standalone",
-      ":f16-f32-vcvt_arm64_standalone",
-      ":f16-f32acc-rdsum_arch=armv8.2-a+fp16_standalone",
-      ":f16-f32acc-rsum_arch=armv8.2-a+fp16_standalone",
-      ":f16-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":f16-gemm_arch=armv8.2-a+fp16_standalone",
-      ":f16-ibilinear-chw_arch=armv8.2-a+fp16_standalone",
-      ":f16-ibilinear_arch=armv8.2-a+fp16_standalone",
-      ":f16-igemm_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":f16-igemm_arch=armv8.2-a+fp16_standalone",
-      ":f16-maxpool_arch=armv8.2-a+fp16_standalone",
-      ":f16-qs8-vcvt_arch=armv8.2-a+fp16_standalone",
-      ":f16-qs8-vcvt_arm64_standalone",
-      ":f16-qu8-vcvt_arm64_standalone",
-      ":f16-raddstoreexpminusmax_arch=armv8.2-a+fp16_standalone",
-      ":f16-rdminmax_arch=armv8.2-a+fp16_standalone",
-      ":f16-rdminmax_arm64_standalone",
-      ":f16-rminmax_arch=armv8.2-a+fp16_standalone",
-      ":f16-rminmax_arm64_standalone",
-      ":f16-spmm_arch=armv8.2-a+fp16_standalone",
-      ":f16-vapproxgelu_arch=armv8.2-a+fp16_standalone",
-      ":f16-vapproxgelu_arm64_standalone",
-      ":f16-vbinary_arch=armv8.2-a+fp16_standalone",
-      ":f16-vclamp_arch=armv8.2-a+fp16_standalone",
-      ":f16-vcmul_arch=armv8.2-a+fp16_standalone",
-      ":f16-vcos_arch=armv8.2-a+fp16_standalone",
-      ":f16-vcos_arm64_standalone",
-      ":f16-velu_arch=armv8.2-a+fp16_standalone",
-      ":f16-vexp_arch=armv8.2-a+fp16_standalone",
-      ":f16-vexp_arm64_standalone",
-      ":f16-vgelu_arch=armv8.2-a+fp16_standalone",
-      ":f16-vgelu_arm64_standalone",
-      ":f16-vhswish_arch=armv8.2-a+fp16_standalone",
-      ":f16-vlrelu_arch=armv8.2-a+fp16_standalone",
-      ":f16-vmulcaddc_arch=armv8.2-a+fp16_standalone",
-      ":f16-vrnd_arch=armv8.2-a+fp16_standalone",
-      ":f16-vrsqrt_arch=armv8.2-a+fp16_standalone",
-      ":f16-vsigmoid_arch=armv8.2-a+fp16_standalone",
-      ":f16-vsin_arch=armv8.2-a+fp16_standalone",
-      ":f16-vsin_arm64_standalone",
-      ":f16-vsqrt_arch=armv8.2-a+fp16_standalone",
-      ":f16-vtanh_arch=armv8.2-a+fp16_standalone",
-      ":f16-vunary_arch=armv8.2-a+fp16_standalone",
-      ":f32-argmaxpool_arm64_standalone",
-      ":f32-avgpool_arm64_standalone",
-      ":f32-conv-hwc2chw_arm64_standalone",
-      ":f32-dwconv2d-chw_arm64_standalone",
-      ":f32-dwconv_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":f32-dwconv_arm64_standalone",
-      ":f32-f16-vcvt_arm64_standalone",
-      ":f32-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":f32-gemm_arm64_standalone",
-      ":f32-ibilinear-chw_arm64_standalone",
-      ":f32-ibilinear_arm64_standalone",
-      ":f32-igemm_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":f32-igemm_arm64_standalone",
-      ":f32-maxpool_arm64_standalone",
-      ":f32-qc4w-gemm_arm64_standalone",
-      ":f32-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":f32-qc8w-gemm_arm64_standalone",
-      ":f32-qs8-vcvt_arm64_standalone",
-      ":f32-qu8-vcvt_arm64_standalone",
-      ":f32-raddstoreexpminusmax_arm64_standalone",
-      ":f32-rdminmax_arm64_standalone",
-      ":f32-rdsum_arm64_standalone",
-      ":f32-rminmax_arm64_standalone",
-      ":f32-rsum_arm64_standalone",
-      ":f32-spmm_arm64_standalone",
-      ":f32-vapproxgelu_arm64_standalone",
-      ":f32-vbinary_arm64_standalone",
-      ":f32-vclamp_arm64_standalone",
-      ":f32-vcmul_arm64_standalone",
-      ":f32-vcopysign_arm64_standalone",
-      ":f32-vcos_arm64_standalone",
-      ":f32-velu_arm64_standalone",
-      ":f32-vexp_arm64_standalone",
-      ":f32-vgelu_arm64_standalone",
-      ":f32-vhswish_arm64_standalone",
-      ":f32-vlog_arm64_standalone",
-      ":f32-vlrelu_arm64_standalone",
-      ":f32-vmulcaddc_arm64_standalone",
-      ":f32-vrnd_arm64_standalone",
-      ":f32-vrsqrt_arm64_standalone",
-      ":f32-vsigmoid_arm64_standalone",
-      ":f32-vsin_arm64_standalone",
-      ":f32-vsqrt_arm64_standalone",
-      ":f32-vtanh_arm64_standalone",
-      ":f32-vunary_arm64_standalone",
-      ":operators_arm64_standalone",
-      ":pf16-gemm_arch=armv8.2-a+sve+sve2_standalone",
-      ":pf32-gemm_arch=armv8.2-a+sve+sve2_standalone",
-      ":pqs8-f32-qc8w-igemm_arch=armv8.2-a+sve+sve2_standalone",
-      ":pqs8-qc8w-gemm_arch=armv8.2-a+sve+sve2_standalone",
-      ":qb4-packw_arch=armv8.2-a+dotprod_standalone",
-      ":qd8-f16-qb4w-gemm_arch=armv8.2-a+dotprod+fp16_standalone",
-      ":qd8-f16-qb4w-gemm_arch=armv8.2-a+fp16_standalone",
-      ":qd8-f16-qb4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
-      ":qd8-f16-qc4w-gemm_arch=armv8.2-a+dotprod+fp16_standalone",
-      ":qd8-f16-qc4w-gemm_arch=armv8.2-a+fp16_standalone",
-      ":qd8-f16-qc4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
-      ":qd8-f16-qc8w-gemm_arch=armv8.2-a+dotprod+fp16_standalone",
-      ":qd8-f16-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":qd8-f16-qc8w-gemm_arch=armv8.2-a+fp16_standalone",
-      ":qd8-f16-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
-      ":qd8-f16-qc8w-igemm_arch=armv8.2-a+dotprod+fp16_standalone",
-      ":qd8-f16-qc8w-igemm_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":qd8-f16-qc8w-igemm_arch=armv8.2-a+fp16_standalone",
-      ":qd8-f16-qc8w-igemm_arch=armv8.2-a+i8mm+fp16_standalone",
-      ":qd8-f32-qb4w-gemm_arch=armv8.2-a+dotprod_standalone",
-      ":qd8-f32-qb4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
-      ":qd8-f32-qb4w-gemm_arm64_standalone",
-      ":qd8-f32-qc4w-gemm_arch=armv8.2-a+dotprod_standalone",
-      ":qd8-f32-qc4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
-      ":qd8-f32-qc4w-gemm_arm64_standalone",
-      ":qd8-f32-qc8w-gemm_arch=armv8.2-a+dotprod_standalone",
-      ":qd8-f32-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":qd8-f32-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
-      ":qd8-f32-qc8w-gemm_arm64_standalone",
-      ":qd8-f32-qc8w-igemm_arch=armv8.2-a+dotprod_standalone",
-      ":qd8-f32-qc8w-igemm_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":qd8-f32-qc8w-igemm_arch=armv8.2-a+i8mm+fp16_standalone",
-      ":qd8-f32-qc8w-igemm_arm64_standalone",
-      ":qp8-f32-qb4w-gemm_arch=armv8.2-a+dotprod_standalone",
-      ":qp8-f32-qb4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
-      ":qp8-f32-qc4w-gemm_arch=armv8.2-a+dotprod_standalone",
-      ":qp8-f32-qc4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
-      ":qp8-f32-qc4w-gemm_arch=armv8.2-a+sve+sve2_standalone",
-      ":qp8-f32-qc8w-gemm_arch=armv8.2-a+dotprod_standalone",
-      ":qp8-f32-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
-      ":qp8-f32-qc8w-gemm_arch=armv8.2-a+sve+sve2_standalone",
-      ":qs8-dwconv_arm64_standalone",
-      ":qs8-f16-vcvt_arch=armv8.2-a+fp16_standalone",
-      ":qs8-f32-vcvt_arm64_standalone",
-      ":qs8-packw_arm64_standalone",
-      ":qs8-qc4w-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":qs8-qc4w-gemm_arm64_standalone",
-      ":qs8-qc8w-dwconv_arm64_standalone",
-      ":qs8-qc8w-gemm_arch=armv8.2-a+dotprod_standalone",
-      ":qs8-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":qs8-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
-      ":qs8-qc8w-gemm_arm64_standalone",
-      ":qs8-qc8w-igemm_arch=armv8.2-a+dotprod_standalone",
-      ":qs8-qc8w-igemm_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":qs8-qc8w-igemm_arch=armv8.2-a+i8mm+fp16_standalone",
-      ":qs8-qc8w-igemm_arm64_standalone",
-      ":qs8-qu8-packw_arm64_standalone",
-      ":qs8-rdsum_arm64_standalone",
-      ":qs8-rsum_arch=armv8.2-a+dotprod_standalone",
-      ":qs8-rsum_arm64_standalone",
-      ":qs8-vadd_arm64_standalone",
-      ":qs8-vaddc_arm64_standalone",
-      ":qs8-vcvt_arm64_standalone",
-      ":qs8-vlrelu_arm64_standalone",
-      ":qs8-vmul_arm64_standalone",
-      ":qs8-vmulc_arm64_standalone",
-      ":qs8-vprelu_arm64_standalone",
-      ":qs8-vpreluc_arm64_standalone",
-      ":qs8-vrpreluc_arm64_standalone",
-      ":qu8-dwconv_arm64_standalone",
-      ":qu8-f32-vcvt_arm64_standalone",
-      ":qu8-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":qu8-gemm_arm64_standalone",
-      ":qu8-igemm_arch=armv8.2-a+fp16+dotprod_standalone",
-      ":qu8-igemm_arm64_standalone",
-      ":qu8-rdsum_arm64_standalone",
-      ":qu8-rsum_arm64_standalone",
-      ":qu8-vadd_arm64_standalone",
-      ":qu8-vaddc_arm64_standalone",
-      ":qu8-vcvt_arm64_standalone",
-      ":qu8-vlrelu_arm64_standalone",
-      ":qu8-vmul_arm64_standalone",
-      ":qu8-vmulc_arm64_standalone",
-      ":qu8-vprelu_arm64_standalone",
-      ":qu8-vpreluc_arm64_standalone",
-      ":qu8-vrpreluc_arm64_standalone",
-      ":reference_arm64_standalone",
-      ":s8-ibilinear_arm64_standalone",
-      ":s8-maxpool_arm64_standalone",
-      ":s8-rdminmax_arm64_standalone",
-      ":s8-rminmax_arm64_standalone",
-      ":s8-vclamp_arm64_standalone",
-      ":subgraph_arm64_standalone",
-      ":tables_arm64_standalone",
-      ":u8-ibilinear_arm64_standalone",
-      ":u8-lut32norm_arm64_standalone",
-      ":u8-maxpool_arm64_standalone",
-      ":u8-rdminmax_arm64_standalone",
-      ":u8-rminmax_arm64_standalone",
-      ":u8-vclamp_arm64_standalone",
-      ":x16-pack-lh_arch=armv8.2-a+sve+sve2_standalone",
-      ":x16-packw_arm64_standalone",
-      ":x16-transposec_arm64_standalone",
-      ":x16-x32-packw_arm64_standalone",
-      ":x24-transposec_arm64_standalone",
-      ":x32-pack-lh_arch=armv8.2-a+sve+sve2_standalone",
-      ":x32-packw_arm64_standalone",
-      ":x32-transposec_arm64_standalone",
-      ":x32-unpool_arm64_standalone",
-      ":x64-transposec_arm64_standalone",
-      ":x8-lut_arm64_standalone",
-      ":x8-pack-lh_arch=armv8.2-a+sve+sve2_standalone",
-      ":x8-packq_arm64_standalone",
-      ":x8-packw_arm64_standalone",
-      ":x8-transposec_arm64_standalone",
-      ":xx-copy_arm64_standalone",
-      ":xx-fill_arm64_standalone",
-      ":xx-pad_arm64_standalone",
-      ":xx-transposev_arm64_standalone",
+    ":configs_arm64_standalone",
+    ":enums_arm64_standalone",
+    ":f16-avgpool_arch=armv8.2-a+fp16_standalone",
+    ":f16-conv-hwc2chw_arch=armv8.2-a+fp16_standalone",
+    ":f16-dwconv2d-chw_arch=armv8.2-a+fp16_standalone",
+    ":f16-dwconv_arch=armv8.2-a+fp16_standalone",
+    ":f16-f32-vcvt_arm64_standalone",
+    ":f16-f32acc-rdsum_arch=armv8.2-a+fp16_standalone",
+    ":f16-f32acc-rsum_arch=armv8.2-a+fp16_standalone",
+    ":f16-gemm_arch=armv8.2-a+fp16_standalone",
+    ":f16-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":f16-ibilinear-chw_arch=armv8.2-a+fp16_standalone",
+    ":f16-ibilinear_arch=armv8.2-a+fp16_standalone",
+    ":f16-igemm_arch=armv8.2-a+fp16_standalone",
+    ":f16-igemm_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":f16-maxpool_arch=armv8.2-a+fp16_standalone",
+    ":f16-qs8-vcvt_arch=armv8.2-a+fp16_standalone",
+    ":f16-qs8-vcvt_arm64_standalone",
+    ":f16-qu8-vcvt_arm64_standalone",
+    ":f16-raddstoreexpminusmax_arch=armv8.2-a+fp16_standalone",
+    ":f16-rdminmax_arch=armv8.2-a+fp16_standalone",
+    ":f16-rdminmax_arm64_standalone",
+    ":f16-rminmax_arch=armv8.2-a+fp16_standalone",
+    ":f16-rminmax_arm64_standalone",
+    ":f16-spmm_arch=armv8.2-a+fp16_standalone",
+    ":f16-vapproxgelu_arch=armv8.2-a+fp16_standalone",
+    ":f16-vapproxgelu_arm64_standalone",
+    ":f16-vbinary_arch=armv8.2-a+fp16_standalone",
+    ":f16-vclamp_arch=armv8.2-a+fp16_standalone",
+    ":f16-vcmul_arch=armv8.2-a+fp16_standalone",
+    ":f16-vcos_arch=armv8.2-a+fp16_standalone",
+    ":f16-vcos_arm64_standalone",
+    ":f16-velu_arch=armv8.2-a+fp16_standalone",
+    ":f16-vexp_arch=armv8.2-a+fp16_standalone",
+    ":f16-vexp_arm64_standalone",
+    ":f16-vgelu_arch=armv8.2-a+fp16_standalone",
+    ":f16-vgelu_arm64_standalone",
+    ":f16-vhswish_arch=armv8.2-a+fp16_standalone",
+    ":f16-vlrelu_arch=armv8.2-a+fp16_standalone",
+    ":f16-vmulcaddc_arch=armv8.2-a+fp16_standalone",
+    ":f16-vrnd_arch=armv8.2-a+fp16_standalone",
+    ":f16-vrsqrt_arch=armv8.2-a+fp16_standalone",
+    ":f16-vsigmoid_arch=armv8.2-a+fp16_standalone",
+    ":f16-vsin_arch=armv8.2-a+fp16_standalone",
+    ":f16-vsin_arm64_standalone",
+    ":f16-vsqrt_arch=armv8.2-a+fp16_standalone",
+    ":f16-vtanh_arch=armv8.2-a+fp16_standalone",
+    ":f16-vunary_arch=armv8.2-a+fp16_standalone",
+    ":f32-argmaxpool_arm64_standalone",
+    ":f32-avgpool_arm64_standalone",
+    ":f32-conv-hwc2chw_arm64_standalone",
+    ":f32-dwconv2d-chw_arm64_standalone",
+    ":f32-dwconv_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":f32-dwconv_arm64_standalone",
+    ":f32-f16-vcvt_arm64_standalone",
+    ":f32-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":f32-gemm_arm64_standalone",
+    ":f32-ibilinear-chw_arm64_standalone",
+    ":f32-ibilinear_arm64_standalone",
+    ":f32-igemm_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":f32-igemm_arm64_standalone",
+    ":f32-maxpool_arm64_standalone",
+    ":f32-qc4w-gemm_arm64_standalone",
+    ":f32-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":f32-qc8w-gemm_arm64_standalone",
+    ":f32-qs8-vcvt_arm64_standalone",
+    ":f32-qu8-vcvt_arm64_standalone",
+    ":f32-raddstoreexpminusmax_arm64_standalone",
+    ":f32-rdminmax_arm64_standalone",
+    ":f32-rdsum_arm64_standalone",
+    ":f32-rminmax_arm64_standalone",
+    ":f32-rsum_arm64_standalone",
+    ":f32-spmm_arm64_standalone",
+    ":f32-vapproxgelu_arm64_standalone",
+    ":f32-vbinary_arm64_standalone",
+    ":f32-vclamp_arm64_standalone",
+    ":f32-vcmul_arm64_standalone",
+    ":f32-vcopysign_arm64_standalone",
+    ":f32-vcos_arm64_standalone",
+    ":f32-velu_arm64_standalone",
+    ":f32-vexp_arm64_standalone",
+    ":f32-vgelu_arm64_standalone",
+    ":f32-vhswish_arm64_standalone",
+    ":f32-vlog_arm64_standalone",
+    ":f32-vlrelu_arm64_standalone",
+    ":f32-vmulcaddc_arm64_standalone",
+    ":f32-vrnd_arm64_standalone",
+    ":f32-vrsqrt_arm64_standalone",
+    ":f32-vsigmoid_arm64_standalone",
+    ":f32-vsin_arm64_standalone",
+    ":f32-vsqrt_arm64_standalone",
+    ":f32-vtanh_arm64_standalone",
+    ":f32-vunary_arm64_standalone",
+    ":operators_arm64_standalone",
+    ":pf16-gemm_arch=armv8.2-a+sve+sve2_standalone",
+    ":pf32-gemm_arch=armv8.2-a+sve+sve2_standalone",
+    ":pqs8-f32-qc8w-igemm_arch=armv8.2-a+sve+sve2_standalone",
+    ":pqs8-qc8w-gemm_arch=armv8.2-a+sve+sve2_standalone",
+    ":qb4-packw_arch=armv8.2-a+dotprod_standalone",
+    ":qd8-f16-qb4w-gemm_arch=armv8.2-a+dotprod+fp16_standalone",
+    ":qd8-f16-qb4w-gemm_arch=armv8.2-a+fp16_standalone",
+    ":qd8-f16-qb4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
+    ":qd8-f16-qc4w-gemm_arch=armv8.2-a+dotprod+fp16_standalone",
+    ":qd8-f16-qc4w-gemm_arch=armv8.2-a+fp16_standalone",
+    ":qd8-f16-qc4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
+    ":qd8-f16-qc8w-gemm_arch=armv8.2-a+dotprod+fp16_standalone",
+    ":qd8-f16-qc8w-gemm_arch=armv8.2-a+fp16_standalone",
+    ":qd8-f16-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":qd8-f16-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
+    ":qd8-f16-qc8w-igemm_arch=armv8.2-a+dotprod+fp16_standalone",
+    ":qd8-f16-qc8w-igemm_arch=armv8.2-a+fp16_standalone",
+    ":qd8-f16-qc8w-igemm_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":qd8-f16-qc8w-igemm_arch=armv8.2-a+i8mm+fp16_standalone",
+    ":qd8-f32-qb4w-gemm_arch=armv8.2-a+dotprod_standalone",
+    ":qd8-f32-qb4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
+    ":qd8-f32-qb4w-gemm_arm64_standalone",
+    ":qd8-f32-qc4w-gemm_arch=armv8.2-a+dotprod_standalone",
+    ":qd8-f32-qc4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
+    ":qd8-f32-qc4w-gemm_arm64_standalone",
+    ":qd8-f32-qc8w-gemm_arch=armv8.2-a+dotprod_standalone",
+    ":qd8-f32-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":qd8-f32-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
+    ":qd8-f32-qc8w-gemm_arm64_standalone",
+    ":qd8-f32-qc8w-igemm_arch=armv8.2-a+dotprod_standalone",
+    ":qd8-f32-qc8w-igemm_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":qd8-f32-qc8w-igemm_arch=armv8.2-a+i8mm+fp16_standalone",
+    ":qd8-f32-qc8w-igemm_arm64_standalone",
+    ":qp8-f32-qb4w-gemm_arch=armv8.2-a+dotprod_standalone",
+    ":qp8-f32-qb4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
+    ":qp8-f32-qc4w-gemm_arch=armv8.2-a+dotprod_standalone",
+    ":qp8-f32-qc4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
+    ":qp8-f32-qc4w-gemm_arch=armv8.2-a+sve+sve2_standalone",
+    ":qp8-f32-qc8w-gemm_arch=armv8.2-a+dotprod_standalone",
+    ":qp8-f32-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
+    ":qp8-f32-qc8w-gemm_arch=armv8.2-a+sve+sve2_standalone",
+    ":qs8-dwconv_arm64_standalone",
+    ":qs8-f16-vcvt_arch=armv8.2-a+fp16_standalone",
+    ":qs8-f32-vcvt_arm64_standalone",
+    ":qs8-packw_arm64_standalone",
+    ":qs8-qc4w-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":qs8-qc4w-gemm_arm64_standalone",
+    ":qs8-qc8w-dwconv_arm64_standalone",
+    ":qs8-qc8w-gemm_arch=armv8.2-a+dotprod_standalone",
+    ":qs8-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":qs8-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone",
+    ":qs8-qc8w-gemm_arm64_standalone",
+    ":qs8-qc8w-igemm_arch=armv8.2-a+dotprod_standalone",
+    ":qs8-qc8w-igemm_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":qs8-qc8w-igemm_arch=armv8.2-a+i8mm+fp16_standalone",
+    ":qs8-qc8w-igemm_arm64_standalone",
+    ":qs8-qu8-packw_arm64_standalone",
+    ":qs8-rdsum_arm64_standalone",
+    ":qs8-rsum_arch=armv8.2-a+dotprod_standalone",
+    ":qs8-rsum_arm64_standalone",
+    ":qs8-vadd_arm64_standalone",
+    ":qs8-vaddc_arm64_standalone",
+    ":qs8-vcvt_arm64_standalone",
+    ":qs8-vlrelu_arm64_standalone",
+    ":qs8-vmul_arm64_standalone",
+    ":qs8-vmulc_arm64_standalone",
+    ":qs8-vprelu_arm64_standalone",
+    ":qs8-vpreluc_arm64_standalone",
+    ":qs8-vrpreluc_arm64_standalone",
+    ":qu8-dwconv_arm64_standalone",
+    ":qu8-f32-vcvt_arm64_standalone",
+    ":qu8-gemm_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":qu8-gemm_arm64_standalone",
+    ":qu8-igemm_arch=armv8.2-a+fp16+dotprod_standalone",
+    ":qu8-igemm_arm64_standalone",
+    ":qu8-rdsum_arm64_standalone",
+    ":qu8-rsum_arm64_standalone",
+    ":qu8-vadd_arm64_standalone",
+    ":qu8-vaddc_arm64_standalone",
+    ":qu8-vcvt_arm64_standalone",
+    ":qu8-vlrelu_arm64_standalone",
+    ":qu8-vmul_arm64_standalone",
+    ":qu8-vmulc_arm64_standalone",
+    ":qu8-vprelu_arm64_standalone",
+    ":qu8-vpreluc_arm64_standalone",
+    ":qu8-vrpreluc_arm64_standalone",
+    ":reference_arm64_standalone",
+    ":s8-ibilinear_arm64_standalone",
+    ":s8-maxpool_arm64_standalone",
+    ":s8-rdminmax_arm64_standalone",
+    ":s8-rminmax_arm64_standalone",
+    ":s8-vclamp_arm64_standalone",
+    ":subgraph_arm64_standalone",
+    ":tables_arm64_standalone",
+    ":u8-ibilinear_arm64_standalone",
+    ":u8-lut32norm_arm64_standalone",
+    ":u8-maxpool_arm64_standalone",
+    ":u8-rdminmax_arm64_standalone",
+    ":u8-rminmax_arm64_standalone",
+    ":u8-vclamp_arm64_standalone",
+    ":x16-pack-lh_arch=armv8.2-a+sve+sve2_standalone",
+    ":x16-packw_arm64_standalone",
+    ":x16-transposec_arm64_standalone",
+    ":x16-x32-packw_arm64_standalone",
+    ":x24-transposec_arm64_standalone",
+    ":x32-pack-lh_arch=armv8.2-a+sve+sve2_standalone",
+    ":x32-packw_arm64_standalone",
+    ":x32-transposec_arm64_standalone",
+    ":x32-unpool_arm64_standalone",
+    ":x64-transposec_arm64_standalone",
+    ":x8-lut_arm64_standalone",
+    ":x8-pack-lh_arch=armv8.2-a+sve+sve2_standalone",
+    ":x8-packq_arm64_standalone",
+    ":x8-packw_arm64_standalone",
+    ":x8-transposec_arm64_standalone",
+    ":xx-copy_arm64_standalone",
+    ":xx-fill_arm64_standalone",
+    ":xx-pad_arm64_standalone",
+    ":xx-transposev_arm64_standalone"
     ]
   }
-} else if (current_cpu == "riscv64") {
+} else 
+if (current_cpu == "riscv64") {
+
   xnnpack_deps = [
     ":configs_riscv64",
     ":enums_riscv64",
@@ -1658,179 +1664,431 @@ if (current_cpu == "x64" || current_cpu
     ":xx-copy_riscv64",
     ":xx-fill_riscv64",
     ":xx-pad_riscv64",
-    ":xx-transposev_riscv64",
+    ":xx-transposev_riscv64"
+  ]
+
+  if (build_with_internal_optimization_guide) {
+    xnnpack_standalone_deps = [
+    ":configs_riscv64_standalone",
+    ":enums_riscv64_standalone",
+    ":f16-f32-vcvt_riscv64_standalone",
+    ":f16-qs8-vcvt_riscv64_standalone",
+    ":f16-qu8-vcvt_riscv64_standalone",
+    ":f16-rdminmax_riscv64_standalone",
+    ":f16-rminmax_riscv64_standalone",
+    ":f16-vapproxgelu_riscv64_standalone",
+    ":f16-vcos_riscv64_standalone",
+    ":f16-vexp_riscv64_standalone",
+    ":f16-vgelu_riscv64_standalone",
+    ":f16-vsin_riscv64_standalone",
+    ":f32-argmaxpool_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-argmaxpool_riscv64_standalone",
+    ":f32-avgpool_riscv64_standalone",
+    ":f32-conv-hwc2chw_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-conv-hwc2chw_riscv64_standalone",
+    ":f32-dwconv2d-chw_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-dwconv2d-chw_riscv64_standalone",
+    ":f32-dwconv_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-dwconv_riscv64_standalone",
+    ":f32-f16-vcvt_riscv64_standalone",
+    ":f32-gemm_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-gemm_riscv64_standalone",
+    ":f32-ibilinear-chw_riscv64_standalone",
+    ":f32-ibilinear_riscv64_standalone",
+    ":f32-igemm_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-igemm_riscv64_standalone",
+    ":f32-maxpool_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-maxpool_riscv64_standalone",
+    ":f32-qc4w-gemm_riscv64_standalone",
+    ":f32-qc8w-gemm_riscv64_standalone",
+    ":f32-qs8-vcvt_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-qs8-vcvt_riscv64_standalone",
+    ":f32-qu8-vcvt_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-qu8-vcvt_riscv64_standalone",
+    ":f32-raddstoreexpminusmax_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-raddstoreexpminusmax_riscv64_standalone",
+    ":f32-rdminmax_riscv64_standalone",
+    ":f32-rdsum_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-rdsum_riscv64_standalone",
+    ":f32-rminmax_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-rminmax_riscv64_standalone",
+    ":f32-rsum_riscv64_standalone",
+    ":f32-spmm_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-spmm_riscv64_standalone",
+    ":f32-vapproxgelu_riscv64_standalone",
+    ":f32-vbinary_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-vbinary_riscv64_standalone",
+    ":f32-vclamp_riscv64_standalone",
+    ":f32-vcmul_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-vcmul_riscv64_standalone",
+    ":f32-vcopysign_riscv64_standalone",
+    ":f32-vcos_riscv64_standalone",
+    ":f32-velu_riscv64_standalone",
+    ":f32-vexp_riscv64_standalone",
+    ":f32-vgelu_riscv64_standalone",
+    ":f32-vhswish_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-vhswish_riscv64_standalone",
+    ":f32-vlog_riscv64_standalone",
+    ":f32-vlrelu_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-vlrelu_riscv64_standalone",
+    ":f32-vmulcaddc_riscv64_standalone",
+    ":f32-vrnd_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-vrnd_riscv64_standalone",
+    ":f32-vrsqrt_arch=rv64gcv-abi=lp64d_standalone",
+    ":f32-vrsqrt_riscv64_standalone",
+    ":f32-vsigmoid_riscv64_standalone",
+    ":f32-vsin_riscv64_standalone",
+    ":f32-vsqrt_riscv64_standalone",
+    ":f32-vtanh_riscv64_standalone",
+    ":f32-vunary_riscv64_standalone",
+    ":operators_riscv64_standalone",
+    ":qd8-f32-qb4w-gemm_riscv64_standalone",
+    ":qd8-f32-qc4w-gemm_arch=rv64gcv-abi=lp64d_standalone",
+    ":qd8-f32-qc4w-gemm_riscv64_standalone",
+    ":qd8-f32-qc8w-gemm_arch=rv64gcv-abi=lp64d_standalone",
+    ":qd8-f32-qc8w-gemm_riscv64_standalone",
+    ":qd8-f32-qc8w-igemm_arch=rv64gcv-abi=lp64d_standalone",
+    ":qd8-f32-qc8w-igemm_riscv64_standalone",
+    ":qs8-dwconv_arch=rv64gcv-abi=lp64d_standalone",
+    ":qs8-dwconv_riscv64_standalone",
+    ":qs8-f32-vcvt_arch=rv64gcv-abi=lp64d_standalone",
+    ":qs8-f32-vcvt_riscv64_standalone",
+    ":qs8-packw_riscv64_standalone",
+    ":qs8-qc4w-gemm_riscv64_standalone",
+    ":qs8-qc8w-dwconv_arch=rv64gcv-abi=lp64d_standalone",
+    ":qs8-qc8w-dwconv_riscv64_standalone",
+    ":qs8-qc8w-gemm_arch=rv64gcv-abi=lp64d_standalone",
+    ":qs8-qc8w-gemm_riscv64_standalone",
+    ":qs8-qc8w-igemm_arch=rv64gcv-abi=lp64d_standalone",
+    ":qs8-qc8w-igemm_riscv64_standalone",
+    ":qs8-qu8-packw_riscv64_standalone",
+    ":qs8-rdsum_arch=rv64gcv-abi=lp64d_standalone",
+    ":qs8-rdsum_riscv64_standalone",
+    ":qs8-rsum_arch=rv64gcv-abi=lp64d_standalone",
+    ":qs8-rsum_riscv64_standalone",
+    ":qs8-vadd_arch=rv64gcv-abi=lp64d_standalone",
+    ":qs8-vadd_riscv64_standalone",
+    ":qs8-vaddc_arch=rv64gcv-abi=lp64d_standalone",
+    ":qs8-vaddc_riscv64_standalone",
+    ":qs8-vcvt_riscv64_standalone",
+    ":qs8-vlrelu_arch=rv64gcv-abi=lp64d_standalone",
+    ":qs8-vlrelu_riscv64_standalone",
+    ":qs8-vmul_arch=rv64gcv-abi=lp64d_standalone",
+    ":qs8-vmul_riscv64_standalone",
+    ":qs8-vmulc_arch=rv64gcv-abi=lp64d_standalone",
+    ":qs8-vmulc_riscv64_standalone",
+    ":qs8-vprelu_riscv64_standalone",
+    ":qs8-vpreluc_riscv64_standalone",
+    ":qs8-vrpreluc_riscv64_standalone",
+    ":qu8-dwconv_arch=rv64gcv-abi=lp64d_standalone",
+    ":qu8-dwconv_riscv64_standalone",
+    ":qu8-f32-vcvt_arch=rv64gcv-abi=lp64d_standalone",
+    ":qu8-f32-vcvt_riscv64_standalone",
+    ":qu8-gemm_riscv64_standalone",
+    ":qu8-igemm_riscv64_standalone",
+    ":qu8-rdsum_arch=rv64gcv-abi=lp64d_standalone",
+    ":qu8-rdsum_riscv64_standalone",
+    ":qu8-rsum_arch=rv64gcv-abi=lp64d_standalone",
+    ":qu8-rsum_riscv64_standalone",
+    ":qu8-vadd_arch=rv64gcv-abi=lp64d_standalone",
+    ":qu8-vadd_riscv64_standalone",
+    ":qu8-vaddc_arch=rv64gcv-abi=lp64d_standalone",
+    ":qu8-vaddc_riscv64_standalone",
+    ":qu8-vcvt_riscv64_standalone",
+    ":qu8-vlrelu_arch=rv64gcv-abi=lp64d_standalone",
+    ":qu8-vlrelu_riscv64_standalone",
+    ":qu8-vmul_arch=rv64gcv-abi=lp64d_standalone",
+    ":qu8-vmul_riscv64_standalone",
+    ":qu8-vmulc_arch=rv64gcv-abi=lp64d_standalone",
+    ":qu8-vmulc_riscv64_standalone",
+    ":qu8-vprelu_riscv64_standalone",
+    ":qu8-vpreluc_riscv64_standalone",
+    ":qu8-vrpreluc_riscv64_standalone",
+    ":reference_riscv64_standalone",
+    ":s8-ibilinear_riscv64_standalone",
+    ":s8-maxpool_riscv64_standalone",
+    ":s8-rdminmax_riscv64_standalone",
+    ":s8-rminmax_riscv64_standalone",
+    ":s8-vclamp_arch=rv64gcv-abi=lp64d_standalone",
+    ":s8-vclamp_riscv64_standalone",
+    ":subgraph_riscv64_standalone",
+    ":tables_riscv64_standalone",
+    ":u8-ibilinear_riscv64_standalone",
+    ":u8-lut32norm_riscv64_standalone",
+    ":u8-maxpool_riscv64_standalone",
+    ":u8-rdminmax_riscv64_standalone",
+    ":u8-rminmax_riscv64_standalone",
+    ":u8-vclamp_arch=rv64gcv-abi=lp64d_standalone",
+    ":u8-vclamp_riscv64_standalone",
+    ":x16-transposec_riscv64_standalone",
+    ":x16-x32-packw_riscv64_standalone",
+    ":x24-transposec_riscv64_standalone",
+    ":x32-packw_arch=rv64gcv-abi=lp64d_standalone",
+    ":x32-packw_riscv64_standalone",
+    ":x32-transposec_arch=rv64gcv-abi=lp64d_standalone",
+    ":x32-transposec_riscv64_standalone",
+    ":x32-unpool_riscv64_standalone",
+    ":x64-transposec_riscv64_standalone",
+    ":x8-lut_riscv64_standalone",
+    ":x8-packq_riscv64_standalone",
+    ":x8-packw_riscv64_standalone",
+    ":x8-transposec_riscv64_standalone",
+    ":xx-copy_riscv64_standalone",
+    ":xx-fill_riscv64_standalone",
+    ":xx-pad_riscv64_standalone",
+    ":xx-transposev_riscv64_standalone"
+    ]
+  }
+} else 
+if (current_cpu == "ppc64") {
+
+  xnnpack_deps = [
+    ":configs_ppc64",
+    ":enums_ppc64",
+    ":f16-f32-vcvt_ppc64",
+    ":f16-qs8-vcvt_ppc64",
+    ":f16-qu8-vcvt_ppc64",
+    ":f16-rdminmax_ppc64",
+    ":f16-rminmax_ppc64",
+    ":f16-vapproxgelu_ppc64",
+    ":f16-vcos_ppc64",
+    ":f16-vexp_ppc64",
+    ":f16-vgelu_ppc64",
+    ":f16-vsin_ppc64",
+    ":f32-argmaxpool_ppc64",
+    ":f32-avgpool_ppc64",
+    ":f32-conv-hwc2chw_ppc64",
+    ":f32-dwconv2d-chw_ppc64",
+    ":f32-dwconv_ppc64",
+    ":f32-f16-vcvt_ppc64",
+    ":f32-gemm_ppc64",
+    ":f32-ibilinear-chw_ppc64",
+    ":f32-ibilinear_ppc64",
+    ":f32-igemm_ppc64",
+    ":f32-maxpool_ppc64",
+    ":f32-qc4w-gemm_ppc64",
+    ":f32-qc8w-gemm_ppc64",
+    ":f32-qs8-vcvt_ppc64",
+    ":f32-qu8-vcvt_ppc64",
+    ":f32-raddstoreexpminusmax_ppc64",
+    ":f32-rdminmax_ppc64",
+    ":f32-rdsum_ppc64",
+    ":f32-rminmax_ppc64",
+    ":f32-rsum_ppc64",
+    ":f32-spmm_ppc64",
+    ":f32-vapproxgelu_ppc64",
+    ":f32-vbinary_ppc64",
+    ":f32-vclamp_ppc64",
+    ":f32-vcmul_ppc64",
+    ":f32-vcopysign_ppc64",
+    ":f32-vcos_ppc64",
+    ":f32-velu_ppc64",
+    ":f32-vexp_ppc64",
+    ":f32-vgelu_ppc64",
+    ":f32-vhswish_ppc64",
+    ":f32-vlog_ppc64",
+    ":f32-vlrelu_ppc64",
+    ":f32-vmulcaddc_ppc64",
+    ":f32-vrnd_ppc64",
+    ":f32-vrsqrt_ppc64",
+    ":f32-vsigmoid_ppc64",
+    ":f32-vsin_ppc64",
+    ":f32-vsqrt_ppc64",
+    ":f32-vtanh_ppc64",
+    ":f32-vunary_ppc64",
+    ":operators_ppc64",
+    ":qd8-f32-qb4w-gemm_ppc64",
+    ":qd8-f32-qc4w-gemm_ppc64",
+    ":qd8-f32-qc8w-gemm_ppc64",
+    ":qd8-f32-qc8w-igemm_ppc64",
+    ":qs8-dwconv_ppc64",
+    ":qs8-f32-vcvt_ppc64",
+    ":qs8-packw_ppc64",
+    ":qs8-qc4w-gemm_ppc64",
+    ":qs8-qc8w-dwconv_ppc64",
+    ":qs8-qc8w-gemm_ppc64",
+    ":qs8-qc8w-igemm_ppc64",
+    ":qs8-qu8-packw_ppc64",
+    ":qs8-rdsum_ppc64",
+    ":qs8-rsum_ppc64",
+    ":qs8-vadd_ppc64",
+    ":qs8-vaddc_ppc64",
+    ":qs8-vcvt_ppc64",
+    ":qs8-vlrelu_ppc64",
+    ":qs8-vmul_ppc64",
+    ":qs8-vmulc_ppc64",
+    ":qs8-vprelu_ppc64",
+    ":qs8-vpreluc_ppc64",
+    ":qs8-vrpreluc_ppc64",
+    ":qu8-dwconv_ppc64",
+    ":qu8-f32-vcvt_ppc64",
+    ":qu8-gemm_ppc64",
+    ":qu8-igemm_ppc64",
+    ":qu8-rdsum_ppc64",
+    ":qu8-rsum_ppc64",
+    ":qu8-vadd_ppc64",
+    ":qu8-vaddc_ppc64",
+    ":qu8-vcvt_ppc64",
+    ":qu8-vlrelu_ppc64",
+    ":qu8-vmul_ppc64",
+    ":qu8-vmulc_ppc64",
+    ":qu8-vprelu_ppc64",
+    ":qu8-vpreluc_ppc64",
+    ":qu8-vrpreluc_ppc64",
+    ":reference_ppc64",
+    ":s8-ibilinear_ppc64",
+    ":s8-maxpool_ppc64",
+    ":s8-rdminmax_ppc64",
+    ":s8-rminmax_ppc64",
+    ":s8-vclamp_ppc64",
+    ":subgraph_ppc64",
+    ":tables_ppc64",
+    ":u8-ibilinear_ppc64",
+    ":u8-lut32norm_ppc64",
+    ":u8-maxpool_ppc64",
+    ":u8-rdminmax_ppc64",
+    ":u8-rminmax_ppc64",
+    ":u8-vclamp_ppc64",
+    ":x16-transposec_ppc64",
+    ":x16-x32-packw_ppc64",
+    ":x24-transposec_ppc64",
+    ":x32-packw_ppc64",
+    ":x32-transposec_ppc64",
+    ":x32-unpool_ppc64",
+    ":x64-transposec_ppc64",
+    ":x8-lut_ppc64",
+    ":x8-packq_ppc64",
+    ":x8-packw_ppc64",
+    ":x8-transposec_ppc64",
+    ":xx-copy_ppc64",
+    ":xx-fill_ppc64",
+    ":xx-pad_ppc64",
+    ":xx-transposev_ppc64"
   ]
 
   if (build_with_internal_optimization_guide) {
     xnnpack_standalone_deps = [
-      ":configs_riscv64_standalone",
-      ":enums_riscv64_standalone",
-      ":f16-f32-vcvt_riscv64_standalone",
-      ":f16-qs8-vcvt_riscv64_standalone",
-      ":f16-qu8-vcvt_riscv64_standalone",
-      ":f16-rdminmax_riscv64_standalone",
-      ":f16-rminmax_riscv64_standalone",
-      ":f16-vapproxgelu_riscv64_standalone",
-      ":f16-vcos_riscv64_standalone",
-      ":f16-vexp_riscv64_standalone",
-      ":f16-vgelu_riscv64_standalone",
-      ":f16-vsin_riscv64_standalone",
-      ":f32-argmaxpool_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-argmaxpool_riscv64_standalone",
-      ":f32-avgpool_riscv64_standalone",
-      ":f32-conv-hwc2chw_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-conv-hwc2chw_riscv64_standalone",
-      ":f32-dwconv2d-chw_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-dwconv2d-chw_riscv64_standalone",
-      ":f32-dwconv_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-dwconv_riscv64_standalone",
-      ":f32-f16-vcvt_riscv64_standalone",
-      ":f32-gemm_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-gemm_riscv64_standalone",
-      ":f32-ibilinear-chw_riscv64_standalone",
-      ":f32-ibilinear_riscv64_standalone",
-      ":f32-igemm_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-igemm_riscv64_standalone",
-      ":f32-maxpool_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-maxpool_riscv64_standalone",
-      ":f32-qc4w-gemm_riscv64_standalone",
-      ":f32-qc8w-gemm_riscv64_standalone",
-      ":f32-qs8-vcvt_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-qs8-vcvt_riscv64_standalone",
-      ":f32-qu8-vcvt_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-qu8-vcvt_riscv64_standalone",
-      ":f32-raddstoreexpminusmax_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-raddstoreexpminusmax_riscv64_standalone",
-      ":f32-rdminmax_riscv64_standalone",
-      ":f32-rdsum_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-rdsum_riscv64_standalone",
-      ":f32-rminmax_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-rminmax_riscv64_standalone",
-      ":f32-rsum_riscv64_standalone",
-      ":f32-spmm_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-spmm_riscv64_standalone",
-      ":f32-vapproxgelu_riscv64_standalone",
-      ":f32-vbinary_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-vbinary_riscv64_standalone",
-      ":f32-vclamp_riscv64_standalone",
-      ":f32-vcmul_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-vcmul_riscv64_standalone",
-      ":f32-vcopysign_riscv64_standalone",
-      ":f32-vcos_riscv64_standalone",
-      ":f32-velu_riscv64_standalone",
-      ":f32-vexp_riscv64_standalone",
-      ":f32-vgelu_riscv64_standalone",
-      ":f32-vhswish_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-vhswish_riscv64_standalone",
-      ":f32-vlog_riscv64_standalone",
-      ":f32-vlrelu_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-vlrelu_riscv64_standalone",
-      ":f32-vmulcaddc_riscv64_standalone",
-      ":f32-vrnd_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-vrnd_riscv64_standalone",
-      ":f32-vrsqrt_arch=rv64gcv-abi=lp64d_standalone",
-      ":f32-vrsqrt_riscv64_standalone",
-      ":f32-vsigmoid_riscv64_standalone",
-      ":f32-vsin_riscv64_standalone",
-      ":f32-vsqrt_riscv64_standalone",
-      ":f32-vtanh_riscv64_standalone",
-      ":f32-vunary_riscv64_standalone",
-      ":operators_riscv64_standalone",
-      ":qd8-f32-qb4w-gemm_riscv64_standalone",
-      ":qd8-f32-qc4w-gemm_arch=rv64gcv-abi=lp64d_standalone",
-      ":qd8-f32-qc4w-gemm_riscv64_standalone",
-      ":qd8-f32-qc8w-gemm_arch=rv64gcv-abi=lp64d_standalone",
-      ":qd8-f32-qc8w-gemm_riscv64_standalone",
-      ":qd8-f32-qc8w-igemm_arch=rv64gcv-abi=lp64d_standalone",
-      ":qd8-f32-qc8w-igemm_riscv64_standalone",
-      ":qs8-dwconv_arch=rv64gcv-abi=lp64d_standalone",
-      ":qs8-dwconv_riscv64_standalone",
-      ":qs8-f32-vcvt_arch=rv64gcv-abi=lp64d_standalone",
-      ":qs8-f32-vcvt_riscv64_standalone",
-      ":qs8-packw_riscv64_standalone",
-      ":qs8-qc4w-gemm_riscv64_standalone",
-      ":qs8-qc8w-dwconv_arch=rv64gcv-abi=lp64d_standalone",
-      ":qs8-qc8w-dwconv_riscv64_standalone",
-      ":qs8-qc8w-gemm_arch=rv64gcv-abi=lp64d_standalone",
-      ":qs8-qc8w-gemm_riscv64_standalone",
-      ":qs8-qc8w-igemm_arch=rv64gcv-abi=lp64d_standalone",
-      ":qs8-qc8w-igemm_riscv64_standalone",
-      ":qs8-qu8-packw_riscv64_standalone",
-      ":qs8-rdsum_arch=rv64gcv-abi=lp64d_standalone",
-      ":qs8-rdsum_riscv64_standalone",
-      ":qs8-rsum_arch=rv64gcv-abi=lp64d_standalone",
-      ":qs8-rsum_riscv64_standalone",
-      ":qs8-vadd_arch=rv64gcv-abi=lp64d_standalone",
-      ":qs8-vadd_riscv64_standalone",
-      ":qs8-vaddc_arch=rv64gcv-abi=lp64d_standalone",
-      ":qs8-vaddc_riscv64_standalone",
-      ":qs8-vcvt_riscv64_standalone",
-      ":qs8-vlrelu_arch=rv64gcv-abi=lp64d_standalone",
-      ":qs8-vlrelu_riscv64_standalone",
-      ":qs8-vmul_arch=rv64gcv-abi=lp64d_standalone",
-      ":qs8-vmul_riscv64_standalone",
-      ":qs8-vmulc_arch=rv64gcv-abi=lp64d_standalone",
-      ":qs8-vmulc_riscv64_standalone",
-      ":qs8-vprelu_riscv64_standalone",
-      ":qs8-vpreluc_riscv64_standalone",
-      ":qs8-vrpreluc_riscv64_standalone",
-      ":qu8-dwconv_arch=rv64gcv-abi=lp64d_standalone",
-      ":qu8-dwconv_riscv64_standalone",
-      ":qu8-f32-vcvt_arch=rv64gcv-abi=lp64d_standalone",
-      ":qu8-f32-vcvt_riscv64_standalone",
-      ":qu8-gemm_riscv64_standalone",
-      ":qu8-igemm_riscv64_standalone",
-      ":qu8-rdsum_arch=rv64gcv-abi=lp64d_standalone",
-      ":qu8-rdsum_riscv64_standalone",
-      ":qu8-rsum_arch=rv64gcv-abi=lp64d_standalone",
-      ":qu8-rsum_riscv64_standalone",
-      ":qu8-vadd_arch=rv64gcv-abi=lp64d_standalone",
-      ":qu8-vadd_riscv64_standalone",
-      ":qu8-vaddc_arch=rv64gcv-abi=lp64d_standalone",
-      ":qu8-vaddc_riscv64_standalone",
-      ":qu8-vcvt_riscv64_standalone",
-      ":qu8-vlrelu_arch=rv64gcv-abi=lp64d_standalone",
-      ":qu8-vlrelu_riscv64_standalone",
-      ":qu8-vmul_arch=rv64gcv-abi=lp64d_standalone",
-      ":qu8-vmul_riscv64_standalone",
-      ":qu8-vmulc_arch=rv64gcv-abi=lp64d_standalone",
-      ":qu8-vmulc_riscv64_standalone",
-      ":qu8-vprelu_riscv64_standalone",
-      ":qu8-vpreluc_riscv64_standalone",
-      ":qu8-vrpreluc_riscv64_standalone",
-      ":reference_riscv64_standalone",
-      ":s8-ibilinear_riscv64_standalone",
-      ":s8-maxpool_riscv64_standalone",
-      ":s8-rdminmax_riscv64_standalone",
-      ":s8-rminmax_riscv64_standalone",
-      ":s8-vclamp_arch=rv64gcv-abi=lp64d_standalone",
-      ":s8-vclamp_riscv64_standalone",
-      ":subgraph_riscv64_standalone",
-      ":tables_riscv64_standalone",
-      ":u8-ibilinear_riscv64_standalone",
-      ":u8-lut32norm_riscv64_standalone",
-      ":u8-maxpool_riscv64_standalone",
-      ":u8-rdminmax_riscv64_standalone",
-      ":u8-rminmax_riscv64_standalone",
-      ":u8-vclamp_arch=rv64gcv-abi=lp64d_standalone",
-      ":u8-vclamp_riscv64_standalone",
-      ":x16-transposec_riscv64_standalone",
-      ":x16-x32-packw_riscv64_standalone",
-      ":x24-transposec_riscv64_standalone",
-      ":x32-packw_arch=rv64gcv-abi=lp64d_standalone",
-      ":x32-packw_riscv64_standalone",
-      ":x32-transposec_arch=rv64gcv-abi=lp64d_standalone",
-      ":x32-transposec_riscv64_standalone",
-      ":x32-unpool_riscv64_standalone",
-      ":x64-transposec_riscv64_standalone",
-      ":x8-lut_riscv64_standalone",
-      ":x8-packq_riscv64_standalone",
-      ":x8-packw_riscv64_standalone",
-      ":x8-transposec_riscv64_standalone",
-      ":xx-copy_riscv64_standalone",
-      ":xx-fill_riscv64_standalone",
-      ":xx-pad_riscv64_standalone",
-      ":xx-transposev_riscv64_standalone",
+    ":configs_ppc64_standalone",
+    ":enums_ppc64_standalone",
+    ":f16-f32-vcvt_ppc64_standalone",
+    ":f16-qs8-vcvt_ppc64_standalone",
+    ":f16-qu8-vcvt_ppc64_standalone",
+    ":f16-rdminmax_ppc64_standalone",
+    ":f16-rminmax_ppc64_standalone",
+    ":f16-vapproxgelu_ppc64_standalone",
+    ":f16-vcos_ppc64_standalone",
+    ":f16-vexp_ppc64_standalone",
+    ":f16-vgelu_ppc64_standalone",
+    ":f16-vsin_ppc64_standalone",
+    ":f32-argmaxpool_ppc64_standalone",
+    ":f32-avgpool_ppc64_standalone",
+    ":f32-conv-hwc2chw_ppc64_standalone",
+    ":f32-dwconv2d-chw_ppc64_standalone",
+    ":f32-dwconv_ppc64_standalone",
+    ":f32-f16-vcvt_ppc64_standalone",
+    ":f32-gemm_ppc64_standalone",
+    ":f32-ibilinear-chw_ppc64_standalone",
+    ":f32-ibilinear_ppc64_standalone",
+    ":f32-igemm_ppc64_standalone",
+    ":f32-maxpool_ppc64_standalone",
+    ":f32-qc4w-gemm_ppc64_standalone",
+    ":f32-qc8w-gemm_ppc64_standalone",
+    ":f32-qs8-vcvt_ppc64_standalone",
+    ":f32-qu8-vcvt_ppc64_standalone",
+    ":f32-raddstoreexpminusmax_ppc64_standalone",
+    ":f32-rdminmax_ppc64_standalone",
+    ":f32-rdsum_ppc64_standalone",
+    ":f32-rminmax_ppc64_standalone",
+    ":f32-rsum_ppc64_standalone",
+    ":f32-spmm_ppc64_standalone",
+    ":f32-vapproxgelu_ppc64_standalone",
+    ":f32-vbinary_ppc64_standalone",
+    ":f32-vclamp_ppc64_standalone",
+    ":f32-vcmul_ppc64_standalone",
+    ":f32-vcopysign_ppc64_standalone",
+    ":f32-vcos_ppc64_standalone",
+    ":f32-velu_ppc64_standalone",
+    ":f32-vexp_ppc64_standalone",
+    ":f32-vgelu_ppc64_standalone",
+    ":f32-vhswish_ppc64_standalone",
+    ":f32-vlog_ppc64_standalone",
+    ":f32-vlrelu_ppc64_standalone",
+    ":f32-vmulcaddc_ppc64_standalone",
+    ":f32-vrnd_ppc64_standalone",
+    ":f32-vrsqrt_ppc64_standalone",
+    ":f32-vsigmoid_ppc64_standalone",
+    ":f32-vsin_ppc64_standalone",
+    ":f32-vsqrt_ppc64_standalone",
+    ":f32-vtanh_ppc64_standalone",
+    ":f32-vunary_ppc64_standalone",
+    ":operators_ppc64_standalone",
+    ":qd8-f32-qb4w-gemm_ppc64_standalone",
+    ":qd8-f32-qc4w-gemm_ppc64_standalone",
+    ":qd8-f32-qc8w-gemm_ppc64_standalone",
+    ":qd8-f32-qc8w-igemm_ppc64_standalone",
+    ":qs8-dwconv_ppc64_standalone",
+    ":qs8-f32-vcvt_ppc64_standalone",
+    ":qs8-packw_ppc64_standalone",
+    ":qs8-qc4w-gemm_ppc64_standalone",
+    ":qs8-qc8w-dwconv_ppc64_standalone",
+    ":qs8-qc8w-gemm_ppc64_standalone",
+    ":qs8-qc8w-igemm_ppc64_standalone",
+    ":qs8-qu8-packw_ppc64_standalone",
+    ":qs8-rdsum_ppc64_standalone",
+    ":qs8-rsum_ppc64_standalone",
+    ":qs8-vadd_ppc64_standalone",
+    ":qs8-vaddc_ppc64_standalone",
+    ":qs8-vcvt_ppc64_standalone",
+    ":qs8-vlrelu_ppc64_standalone",
+    ":qs8-vmul_ppc64_standalone",
+    ":qs8-vmulc_ppc64_standalone",
+    ":qs8-vprelu_ppc64_standalone",
+    ":qs8-vpreluc_ppc64_standalone",
+    ":qs8-vrpreluc_ppc64_standalone",
+    ":qu8-dwconv_ppc64_standalone",
+    ":qu8-f32-vcvt_ppc64_standalone",
+    ":qu8-gemm_ppc64_standalone",
+    ":qu8-igemm_ppc64_standalone",
+    ":qu8-rdsum_ppc64_standalone",
+    ":qu8-rsum_ppc64_standalone",
+    ":qu8-vadd_ppc64_standalone",
+    ":qu8-vaddc_ppc64_standalone",
+    ":qu8-vcvt_ppc64_standalone",
+    ":qu8-vlrelu_ppc64_standalone",
+    ":qu8-vmul_ppc64_standalone",
+    ":qu8-vmulc_ppc64_standalone",
+    ":qu8-vprelu_ppc64_standalone",
+    ":qu8-vpreluc_ppc64_standalone",
+    ":qu8-vrpreluc_ppc64_standalone",
+    ":reference_ppc64_standalone",
+    ":s8-ibilinear_ppc64_standalone",
+    ":s8-maxpool_ppc64_standalone",
+    ":s8-rdminmax_ppc64_standalone",
+    ":s8-rminmax_ppc64_standalone",
+    ":s8-vclamp_ppc64_standalone",
+    ":subgraph_ppc64_standalone",
+    ":tables_ppc64_standalone",
+    ":u8-ibilinear_ppc64_standalone",
+    ":u8-lut32norm_ppc64_standalone",
+    ":u8-maxpool_ppc64_standalone",
+    ":u8-rdminmax_ppc64_standalone",
+    ":u8-rminmax_ppc64_standalone",
+    ":u8-vclamp_ppc64_standalone",
+    ":x16-transposec_ppc64_standalone",
+    ":x16-x32-packw_ppc64_standalone",
+    ":x24-transposec_ppc64_standalone",
+    ":x32-packw_ppc64_standalone",
+    ":x32-transposec_ppc64_standalone",
+    ":x32-unpool_ppc64_standalone",
+    ":x64-transposec_ppc64_standalone",
+    ":x8-lut_ppc64_standalone",
+    ":x8-packq_ppc64_standalone",
+    ":x8-packw_ppc64_standalone",
+    ":x8-transposec_ppc64_standalone",
+    ":xx-copy_ppc64_standalone",
+    ":xx-fill_ppc64_standalone",
+    ":xx-pad_ppc64_standalone",
+    ":xx-transposev_ppc64_standalone"
     ]
   }
 } else {
@@ -1840,6 +2098,7 @@ if (current_cpu == "x64" || current_cpu
   }
 }
 
+
 source_set("xnnpack") {
   public = [ "src/include/xnnpack.h" ]
 
@@ -1849,8 +2108,8 @@ source_set("xnnpack") {
   configs += [ ":xnnpack_private_config" ]
 
   sources = [
-    "build_identifier.c",
-    "src/include/xnnpack.h",
+  "src/include/xnnpack.h",
+  "build_identifier.c",
     "src/src/allocator.c",
     "src/src/cache.c",
     "src/src/datatype.c",
@@ -1871,15 +2130,15 @@ source_set("xnnpack") {
     "src/src/runtime.c",
     "src/src/sanitizers.c",
     "src/src/subgraph.c",
-    "src/src/tensor.c",
+    "src/src/tensor.c"
   ]
 
   deps = xnnpack_deps + [
-           "//third_party/cpuinfo",
-           "//third_party/fp16",
-           "//third_party/fxdiv",
-           "//third_party/pthreadpool",
-         ]
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
   public_configs = [ ":xnnpack_public_config" ]
 }
@@ -1895,37 +2154,37 @@ if (build_with_internal_optimization_gui
     configs += [ ":xnnpack_private_config" ]
 
     sources = [
-      "build_identifier.c",
-      "src/include/xnnpack.h",
+    "src/include/xnnpack.h",
+    "build_identifier.c",
       "src/src/allocator.c",
-      "src/src/cache.c",
-      "src/src/datatype.c",
-      "src/src/indirection.c",
-      "src/src/init.c",
-      "src/src/log.c",
-      "src/src/memory-planner.c",
-      "src/src/memory.c",
-      "src/src/microkernel-utils.c",
-      "src/src/microparams-init.c",
-      "src/src/mutex.c",
-      "src/src/normalization.c",
-      "src/src/operator-delete.c",
-      "src/src/operator-run.c",
-      "src/src/operator-utils.c",
-      "src/src/pack-lh.cc",
-      "src/src/params.c",
-      "src/src/runtime.c",
-      "src/src/sanitizers.c",
-      "src/src/subgraph.c",
-      "src/src/tensor.c",
+    "src/src/cache.c",
+    "src/src/datatype.c",
+    "src/src/indirection.c",
+    "src/src/init.c",
+    "src/src/log.c",
+    "src/src/memory-planner.c",
+    "src/src/memory.c",
+    "src/src/microkernel-utils.c",
+    "src/src/microparams-init.c",
+    "src/src/mutex.c",
+    "src/src/normalization.c",
+    "src/src/operator-delete.c",
+    "src/src/operator-run.c",
+    "src/src/operator-utils.c",
+    "src/src/pack-lh.cc",
+    "src/src/params.c",
+    "src/src/runtime.c",
+    "src/src/sanitizers.c",
+    "src/src/subgraph.c",
+    "src/src/tensor.c"
     ]
 
     deps = xnnpack_standalone_deps + [
-             "//third_party/cpuinfo",
-             "//third_party/fp16",
-             "//third_party/fxdiv",
-             "//third_party/pthreadpool:pthreadpool_standalone",
-           ]
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
     public_configs = [ ":xnnpack_public_config" ]
 
@@ -1936,35 +2195,87 @@ if (build_with_internal_optimization_gui
 }
 
 if (current_cpu == "x64" || current_cpu == "x86") {
-  source_set("configs_x64") {
-    cflags = []
+source_set("configs_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/configs/argmaxpool-config.c",
+    "src/src/configs/avgpool-config.c",
+    "src/src/configs/binary-elementwise-config.c",
+    "src/src/configs/cmul-config.c",
+    "src/src/configs/conv-hwc2chw-config.c",
+    "src/src/configs/dwconv-config.c",
+    "src/src/configs/dwconv2d-chw-config.c",
+    "src/src/configs/gemm-config.c",
+    "src/src/configs/hardware-config.c",
+    "src/src/configs/ibilinear-chw-config.c",
+    "src/src/configs/ibilinear-config.c",
+    "src/src/configs/lut32norm-config.c",
+    "src/src/configs/maxpool-config.c",
+    "src/src/configs/pack-lh-config.c",
+    "src/src/configs/raddstoreexpminusmax-config.c",
+    "src/src/configs/reduce-config.c",
+    "src/src/configs/spmm-config.c",
+    "src/src/configs/transpose-config.c",
+    "src/src/configs/unary-elementwise-config.c",
+    "src/src/configs/unpool-config.c",
+    "src/src/configs/vmulcaddc-config.c",
+    "src/src/configs/x8-lut-config.c",
+    "src/src/configs/xx-fill-config.c",
+    "src/src/configs/xx-pad-config.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("configs_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/configs/argmaxpool-config.c",
-      "src/src/configs/avgpool-config.c",
-      "src/src/configs/binary-elementwise-config.c",
-      "src/src/configs/cmul-config.c",
-      "src/src/configs/conv-hwc2chw-config.c",
-      "src/src/configs/dwconv-config.c",
-      "src/src/configs/dwconv2d-chw-config.c",
-      "src/src/configs/gemm-config.c",
-      "src/src/configs/hardware-config.c",
-      "src/src/configs/ibilinear-chw-config.c",
-      "src/src/configs/ibilinear-config.c",
-      "src/src/configs/lut32norm-config.c",
-      "src/src/configs/maxpool-config.c",
-      "src/src/configs/pack-lh-config.c",
-      "src/src/configs/raddstoreexpminusmax-config.c",
-      "src/src/configs/reduce-config.c",
-      "src/src/configs/spmm-config.c",
-      "src/src/configs/transpose-config.c",
-      "src/src/configs/unary-elementwise-config.c",
-      "src/src/configs/unpool-config.c",
-      "src/src/configs/vmulcaddc-config.c",
-      "src/src/configs/x8-lut-config.c",
-      "src/src/configs/xx-fill-config.c",
-      "src/src/configs/xx-pad-config.c",
+    "src/src/configs/avgpool-config.c",
+    "src/src/configs/binary-elementwise-config.c",
+    "src/src/configs/cmul-config.c",
+    "src/src/configs/conv-hwc2chw-config.c",
+    "src/src/configs/dwconv-config.c",
+    "src/src/configs/dwconv2d-chw-config.c",
+    "src/src/configs/gemm-config.c",
+    "src/src/configs/hardware-config.c",
+    "src/src/configs/ibilinear-chw-config.c",
+    "src/src/configs/ibilinear-config.c",
+    "src/src/configs/lut32norm-config.c",
+    "src/src/configs/maxpool-config.c",
+    "src/src/configs/pack-lh-config.c",
+    "src/src/configs/raddstoreexpminusmax-config.c",
+    "src/src/configs/reduce-config.c",
+    "src/src/configs/spmm-config.c",
+    "src/src/configs/transpose-config.c",
+    "src/src/configs/unary-elementwise-config.c",
+    "src/src/configs/unpool-config.c",
+    "src/src/configs/vmulcaddc-config.c",
+    "src/src/configs/x8-lut-config.c",
+    "src/src/configs/xx-fill-config.c",
+    "src/src/configs/xx-pad-config.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -1976,75 +2287,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("configs_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/configs/argmaxpool-config.c",
-        "src/src/configs/avgpool-config.c",
-        "src/src/configs/binary-elementwise-config.c",
-        "src/src/configs/cmul-config.c",
-        "src/src/configs/conv-hwc2chw-config.c",
-        "src/src/configs/dwconv-config.c",
-        "src/src/configs/dwconv2d-chw-config.c",
-        "src/src/configs/gemm-config.c",
-        "src/src/configs/hardware-config.c",
-        "src/src/configs/ibilinear-chw-config.c",
-        "src/src/configs/ibilinear-config.c",
-        "src/src/configs/lut32norm-config.c",
-        "src/src/configs/maxpool-config.c",
-        "src/src/configs/pack-lh-config.c",
-        "src/src/configs/raddstoreexpminusmax-config.c",
-        "src/src/configs/reduce-config.c",
-        "src/src/configs/spmm-config.c",
-        "src/src/configs/transpose-config.c",
-        "src/src/configs/unary-elementwise-config.c",
-        "src/src/configs/unpool-config.c",
-        "src/src/configs/vmulcaddc-config.c",
-        "src/src/configs/x8-lut-config.c",
-        "src/src/configs/xx-fill-config.c",
-        "src/src/configs/xx-pad-config.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("enums_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/enums/allocation-type.c",
+    "src/src/enums/datatype-strings.c",
+    "src/src/enums/microkernel-type.c",
+    "src/src/enums/node-type.c",
+    "src/src/enums/operator-type.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("enums_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("enums_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/enums/allocation-type.c",
-      "src/src/enums/datatype-strings.c",
-      "src/src/enums/microkernel-type.c",
-      "src/src/enums/node-type.c",
-      "src/src/enums/operator-type.c",
+    "src/src/enums/datatype-strings.c",
+    "src/src/enums/microkernel-type.c",
+    "src/src/enums/node-type.c",
+    "src/src/enums/operator-type.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2056,56 +2352,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("enums_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/enums/allocation-type.c",
-        "src/src/enums/datatype-strings.c",
-        "src/src/enums/microkernel-type.c",
-        "src/src/enums/node-type.c",
-        "src/src/enums/operator-type.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-avgpool_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-avgpool/gen/f16-avgpool-9p-minmax-f16c.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-avgpool_f16c-no-avx2-no-fma") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-avgpool_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-avgpool/gen/f16-avgpool-9p-minmax-f16c.c",
+      "src/src/f16-avgpool/gen/f16-avgpool-9p-minmax-f16c.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2117,59 +2413,62 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-avgpool_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-avgpool/gen/f16-avgpool-9p-minmax-f16c.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-dwconv_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-dwconv/gen/f16-dwconv-25p8c-minmax-fma3-acc2.c",
+    "src/src/f16-dwconv/gen/f16-dwconv-3p16c-minmax-fma3.c",
+    "src/src/f16-dwconv/gen/f16-dwconv-4p16c-minmax-fma3.c",
+    "src/src/f16-dwconv/gen/f16-dwconv-9p16c-minmax-fma3.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-dwconv_f16c-fma-no-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-dwconv_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-dwconv/gen/f16-dwconv-25p8c-minmax-fma3-acc2.c",
-      "src/src/f16-dwconv/gen/f16-dwconv-3p16c-minmax-fma3.c",
-      "src/src/f16-dwconv/gen/f16-dwconv-4p16c-minmax-fma3.c",
-      "src/src/f16-dwconv/gen/f16-dwconv-9p16c-minmax-fma3.c",
+    "src/src/f16-dwconv/gen/f16-dwconv-3p16c-minmax-fma3.c",
+    "src/src/f16-dwconv/gen/f16-dwconv-4p16c-minmax-fma3.c",
+    "src/src/f16-dwconv/gen/f16-dwconv-9p16c-minmax-fma3.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2181,60 +2480,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-dwconv_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-dwconv/gen/f16-dwconv-25p8c-minmax-fma3-acc2.c",
-        "src/src/f16-dwconv/gen/f16-dwconv-3p16c-minmax-fma3.c",
-        "src/src/f16-dwconv/gen/f16-dwconv-4p16c-minmax-fma3.c",
-        "src/src/f16-dwconv/gen/f16-dwconv-9p16c-minmax-fma3.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-f32-vcvt_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-avx-int16-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f16-f32-vcvt_avx-no-avx2-no-f16c-no-fma") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-avx-int16-u16.c",
+      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-avx-int16-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2246,62 +2543,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-f32-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-avx-int16-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
 
-  source_set(
-      "f16-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-avx512skx-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-avx512skx-u16.c",
+      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-avx512skx-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2313,61 +2612,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "f16-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-avx512skx-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-f32-vcvt_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-f16c-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-f32-vcvt_f16c-no-avx2-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32-vcvt_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-f16c-u16.c",
+      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-f16c-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2379,55 +2673,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-f32-vcvt_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-f16c-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("f16-f32-vcvt_sse2-no-sse3") {
+source_set("f16-f32-vcvt_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-sse2-int16-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32-vcvt_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-sse2-int16-u32.c",
+      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-sse2-int16-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2439,54 +2732,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-f32-vcvt_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-sse2-int16-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-f32-vcvt_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-sse41-int16-u16.c"
+  ]
 
-  source_set("f16-f32-vcvt_sse4.1-no-sse4.2") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32-vcvt_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-sse41-int16-u16.c",
+      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-sse41-int16-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2498,51 +2791,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-f32-vcvt_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-sse41-int16-u16.c",
-      ]
+source_set("f16-f32-vcvt_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-f32-vcvt_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32-vcvt_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-scalar-u4.c",
+      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2554,53 +2848,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-f32-vcvt_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-scalar-u4.c",
-      ]
+source_set("f16-f32acc-gemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32acc-gemm/gen/f16-f32acc-gemm-1x16-minmax-avx2-broadcast.c",
+    "src/src/f16-f32acc-gemm/gen/f16-f32acc-gemm-4x16-minmax-avx2-broadcast.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-f32acc-gemm_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32acc-gemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-f32acc-gemm/gen/f16-f32acc-gemm-1x16-minmax-avx2-broadcast.c",
-      "src/src/f16-f32acc-gemm/gen/f16-f32acc-gemm-4x16-minmax-avx2-broadcast.c",
+    "src/src/f16-f32acc-gemm/gen/f16-f32acc-gemm-4x16-minmax-avx2-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2612,58 +2911,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-f32acc-gemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32acc-gemm/gen/f16-f32acc-gemm-1x16-minmax-avx2-broadcast.c",
-        "src/src/f16-f32acc-gemm/gen/f16-f32acc-gemm-4x16-minmax-avx2-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-f32acc-igemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32acc-igemm/gen/f16-f32acc-igemm-1x16-minmax-avx2-broadcast.c",
+    "src/src/f16-f32acc-igemm/gen/f16-f32acc-igemm-4x16-minmax-avx2-broadcast.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f16-f32acc-igemm_f16c-fma-avx2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32acc-igemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-f32acc-igemm/gen/f16-f32acc-igemm-1x16-minmax-avx2-broadcast.c",
-      "src/src/f16-f32acc-igemm/gen/f16-f32acc-igemm-4x16-minmax-avx2-broadcast.c",
+    "src/src/f16-f32acc-igemm/gen/f16-f32acc-igemm-4x16-minmax-avx2-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2675,62 +2974,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-f32acc-igemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32acc-igemm/gen/f16-f32acc-igemm-1x16-minmax-avx2-broadcast.c",
-        "src/src/f16-f32acc-igemm/gen/f16-f32acc-igemm-4x16-minmax-avx2-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-f32acc-rdsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32acc-rdsum/gen/f16-f32acc-rdsum-7p7x-avx512skx-c64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "f16-f32acc-rdsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32acc-rdsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-f32acc-rdsum/gen/f16-f32acc-rdsum-7p7x-avx512skx-c64.c",
+      "src/src/f16-f32acc-rdsum/gen/f16-f32acc-rdsum-7p7x-avx512skx-c64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2742,61 +3043,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "f16-f32acc-rdsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32acc-rdsum/gen/f16-f32acc-rdsum-7p7x-avx512skx-c64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-f32acc-rdsum_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32acc-rdsum/gen/f16-f32acc-rdsum-7p7x-f16c-c32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-f32acc-rdsum_f16c-no-avx2-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32acc-rdsum_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-f32acc-rdsum/gen/f16-f32acc-rdsum-7p7x-f16c-c32.c",
+      "src/src/f16-f32acc-rdsum/gen/f16-f32acc-rdsum-7p7x-f16c-c32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2808,61 +3104,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-f32acc-rdsum_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32acc-rdsum/gen/f16-f32acc-rdsum-7p7x-f16c-c32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-f32acc-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32acc-rsum/gen/f16-f32acc-rsum-avx512skx-u32-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "f16-f32acc-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32acc-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-f32acc-rsum/gen/f16-f32acc-rsum-avx512skx-u32-acc2.c",
+      "src/src/f16-f32acc-rsum/gen/f16-f32acc-rsum-avx512skx-u32-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2874,61 +3173,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "f16-f32acc-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32acc-rsum/gen/f16-f32acc-rsum-avx512skx-u32-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-f32acc-rsum_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32acc-rsum/gen/f16-f32acc-rsum-f16c-u32-acc4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-f32acc-rsum_f16c-no-avx2-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32acc-rsum_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-f32acc-rsum/gen/f16-f32acc-rsum-f16c-u32-acc4.c",
+      "src/src/f16-f32acc-rsum/gen/f16-f32acc-rsum-f16c-u32-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -2940,56 +3234,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-f32acc-rsum_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32acc-rsum/gen/f16-f32acc-rsum-f16c-u32-acc4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-ibilinear_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-ibilinear/gen/f16-ibilinear-fma3-c8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f16-ibilinear_f16c-fma-no-avx2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-ibilinear_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-ibilinear/gen/f16-ibilinear-fma3-c8.c",
+      "src/src/f16-ibilinear/gen/f16-ibilinear-fma3-c8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3001,56 +3295,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-ibilinear_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-ibilinear/gen/f16-ibilinear-fma3-c8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-maxpool_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-  source_set("f16-maxpool_f16c-fma-avx2") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-maxpool/gen/f16-maxpool-9p-minmax-avx2-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-maxpool_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-maxpool/gen/f16-maxpool-9p-minmax-avx2-u16.c",
+      "src/src/f16-maxpool/gen/f16-maxpool-9p-minmax-avx2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3062,55 +3356,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-maxpool_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-maxpool/gen/f16-maxpool-9p-minmax-avx2-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-maxpool_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-maxpool/gen/f16-maxpool-9p-minmax-sse41-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-maxpool_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-maxpool_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-maxpool/gen/f16-maxpool-9p-minmax-sse41-u8.c",
+      "src/src/f16-maxpool/gen/f16-maxpool-9p-minmax-sse41-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3122,51 +3415,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-maxpool_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-maxpool/gen/f16-maxpool-9p-minmax-sse41-u8.c",
-      ]
+source_set("f16-qs8-vcvt_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-scalar-imagic-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-qs8-vcvt_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-qs8-vcvt_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-scalar-imagic-u4.c",
+      "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-scalar-imagic-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3178,48 +3472,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-qs8-vcvt_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-scalar-imagic-u4.c",
-      ]
+source_set("f16-qu8-vcvt_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-qu8-vcvt/gen/f16-qu8-vcvt-scalar-imagic-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-qu8-vcvt_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-qu8-vcvt_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-qu8-vcvt/gen/f16-qu8-vcvt-scalar-imagic-u4.c",
+      "src/src/f16-qu8-vcvt/gen/f16-qu8-vcvt-scalar-imagic-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3231,52 +3529,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-qu8-vcvt_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-qu8-vcvt/gen/f16-qu8-vcvt-scalar-imagic-u4.c",
-      ]
+source_set("f16-raddstoreexpminusmax_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-raddstoreexpminusmax/gen/f16-raddstoreexpminusmax-avx2-rr1-p2-u32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-raddstoreexpminusmax_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-raddstoreexpminusmax_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-raddstoreexpminusmax/gen/f16-raddstoreexpminusmax-avx2-rr1-p2-u32.c",
+      "src/src/f16-raddstoreexpminusmax/gen/f16-raddstoreexpminusmax-avx2-rr1-p2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3288,53 +3590,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-raddstoreexpminusmax_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-raddstoreexpminusmax/gen/f16-raddstoreexpminusmax-avx2-rr1-p2-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-rdminmax_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-scalar-c2.c",
+    "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-scalar-c2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f16-rdminmax_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-rdminmax_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-scalar-c2.c",
-      "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-scalar-c2.c",
+    "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3346,60 +3649,68 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-rdminmax_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-scalar-c2.c",
-        "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-scalar-c2.c",
-      ]
+source_set("f16-rminmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-rminmax/gen/f16-rmax-avx512skx-u64-acc4.c",
+    "src/src/f16-rminmax/gen/f16-rmin-avx512skx-u64-acc4.c",
+    "src/src/f16-rminmax/gen/f16-rminmax-avx512skx-u64-acc4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "f16-rminmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-rminmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-rminmax/gen/f16-rmax-avx512skx-u64-acc4.c",
-      "src/src/f16-rminmax/gen/f16-rmin-avx512skx-u64-acc4.c",
-      "src/src/f16-rminmax/gen/f16-rminmax-avx512skx-u64-acc4.c",
+    "src/src/f16-rminmax/gen/f16-rmin-avx512skx-u64-acc4.c",
+    "src/src/f16-rminmax/gen/f16-rminmax-avx512skx-u64-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3411,73 +3722,74 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "f16-rminmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-rminmax/gen/f16-rmax-avx512skx-u64-acc4.c",
-        "src/src/f16-rminmax/gen/f16-rmin-avx512skx-u64-acc4.c",
-        "src/src/f16-rminmax/gen/f16-rminmax-avx512skx-u64-acc4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-rminmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-avx512fp16") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512fp16",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-rminmax/gen/f16-rmax-avx512fp16-u128-acc4.c",
+    "src/src/f16-rminmax/gen/f16-rmin-avx512fp16-u128-acc4.c",
+    "src/src/f16-rminmax/gen/f16-rminmax-avx512fp16-u128-acc4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "f16-rminmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-avx512fp16") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-rminmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-avx512fp16_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512fp16",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
-      "-mgfni",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512fp16",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-rminmax/gen/f16-rmax-avx512fp16-u128-acc4.c",
-      "src/src/f16-rminmax/gen/f16-rmin-avx512fp16-u128-acc4.c",
-      "src/src/f16-rminmax/gen/f16-rminmax-avx512fp16-u128-acc4.c",
+    "src/src/f16-rminmax/gen/f16-rmin-avx512fp16-u128-acc4.c",
+    "src/src/f16-rminmax/gen/f16-rminmax-avx512fp16-u128-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3489,66 +3801,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "f16-rminmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-avx512fp16_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512fp16",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-        "-mgfni",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-rminmax/gen/f16-rmax-avx512fp16-u128-acc4.c",
-        "src/src/f16-rminmax/gen/f16-rmin-avx512fp16-u128-acc4.c",
-        "src/src/f16-rminmax/gen/f16-rminmax-avx512fp16-u128-acc4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-rminmax_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-rminmax/f16-rmax-f16c-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-rminmax_f16c-no-avx2-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-rminmax_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-rminmax/f16-rmax-f16c-u32.c",
+      "src/src/f16-rminmax/f16-rmax-f16c-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3560,54 +3862,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-rminmax_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-rminmax/f16-rmax-f16c-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-rminmax_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-rminmax/gen/f16-rmax-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rmin-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rminmax-scalar-u2-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-rminmax_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-rminmax_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-rminmax/gen/f16-rmax-scalar-u2-acc2.c",
-      "src/src/f16-rminmax/gen/f16-rmin-scalar-u2-acc2.c",
-      "src/src/f16-rminmax/gen/f16-rminmax-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rmin-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rminmax-scalar-u2-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3619,50 +3923,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-rminmax_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-rminmax/gen/f16-rmax-scalar-u2-acc2.c",
-        "src/src/f16-rminmax/gen/f16-rmin-scalar-u2-acc2.c",
-        "src/src/f16-rminmax/gen/f16-rminmax-scalar-u2-acc2.c",
-      ]
+source_set("f16-vapproxgelu_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-scalar-rational-6-4-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vapproxgelu_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vapproxgelu_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-scalar-rational-6-4-div.c",
+      "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-scalar-rational-6-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3674,78 +3980,106 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vapproxgelu_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-scalar-rational-6-4-div.c",
-      ]
+source_set("f16-vbinary_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-avx512fp16") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512fp16",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vbinary/gen/f16-vadd-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vaddc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vdiv-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vdivc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vmax-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vmaxc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vmin-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vminc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vmul-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vmulc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vprelu-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vpreluc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vrdivc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vrpreluc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vrsubc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vsqrdiff-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vsqrdiffc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vsub-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vsubc-avx512fp16-u64.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "f16-vbinary_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-avx512fp16") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vbinary_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-avx512fp16_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512fp16",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
-      "-mgfni",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512fp16",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-vbinary/gen/f16-vadd-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vaddc-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vdiv-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vdivc-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vmax-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vmaxc-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vmin-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vminc-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vmul-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vmulc-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vprelu-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vpreluc-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vrdivc-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vrpreluc-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vrsubc-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vsqrdiff-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vsqrdiffc-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vsub-avx512fp16-u64.c",
-      "src/src/f16-vbinary/gen/f16-vsubc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vaddc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vdiv-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vdivc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vmax-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vmaxc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vmin-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vminc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vmul-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vmulc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vprelu-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vpreluc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vrdivc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vrpreluc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vrsubc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vsqrdiff-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vsqrdiffc-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vsub-avx512fp16-u64.c",
+    "src/src/f16-vbinary/gen/f16-vsubc-avx512fp16-u64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3757,100 +4091,92 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "f16-vbinary_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-avx512fp16_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512fp16",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-        "-mgfni",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vbinary/gen/f16-vadd-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vaddc-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vdiv-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vdivc-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vmax-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vmaxc-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vmin-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vminc-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vmul-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vmulc-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vprelu-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vpreluc-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vrdivc-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vrpreluc-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vrsubc-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vsqrdiff-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vsqrdiffc-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vsub-avx512fp16-u64.c",
-        "src/src/f16-vbinary/gen/f16-vsubc-avx512fp16-u64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-vbinary_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
 
-  source_set("f16-vbinary_f16c-no-avx2-no-fma") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vbinary/gen/f16-vadd-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vaddc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vdiv-f16c-u8.c",
+    "src/src/f16-vbinary/gen/f16-vdivc-f16c-u8.c",
+    "src/src/f16-vbinary/gen/f16-vmax-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmaxc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmin-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vminc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmul-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmulc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vprelu-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vpreluc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vrdivc-f16c-u8.c",
+    "src/src/f16-vbinary/gen/f16-vrpreluc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vrsubc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsqrdiff-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsqrdiffc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsub-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsubc-f16c-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vbinary_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-vbinary/gen/f16-vadd-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vaddc-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vdiv-f16c-u8.c",
-      "src/src/f16-vbinary/gen/f16-vdivc-f16c-u8.c",
-      "src/src/f16-vbinary/gen/f16-vmax-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vmaxc-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vmin-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vminc-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vmul-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vmulc-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vprelu-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vpreluc-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vrdivc-f16c-u8.c",
-      "src/src/f16-vbinary/gen/f16-vrpreluc-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vrsubc-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vsqrdiff-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vsqrdiffc-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vsub-f16c-u16.c",
-      "src/src/f16-vbinary/gen/f16-vsubc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vaddc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vdiv-f16c-u8.c",
+    "src/src/f16-vbinary/gen/f16-vdivc-f16c-u8.c",
+    "src/src/f16-vbinary/gen/f16-vmax-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmaxc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmin-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vminc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmul-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmulc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vprelu-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vpreluc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vrdivc-f16c-u8.c",
+    "src/src/f16-vbinary/gen/f16-vrpreluc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vrsubc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsqrdiff-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsqrdiffc-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsub-f16c-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsubc-f16c-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3862,74 +4188,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vbinary_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vbinary/gen/f16-vadd-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vaddc-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vdiv-f16c-u8.c",
-        "src/src/f16-vbinary/gen/f16-vdivc-f16c-u8.c",
-        "src/src/f16-vbinary/gen/f16-vmax-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vmaxc-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vmin-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vminc-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vmul-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vmulc-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vprelu-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vpreluc-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vrdivc-f16c-u8.c",
-        "src/src/f16-vbinary/gen/f16-vrpreluc-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vrsubc-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vsqrdiff-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vsqrdiffc-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vsub-f16c-u16.c",
-        "src/src/f16-vbinary/gen/f16-vsubc-f16c-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-vclamp_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vclamp/gen/f16-vclamp-f16c-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vclamp_f16c-no-avx2-no-fma") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vclamp_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vclamp/gen/f16-vclamp-f16c-u16.c",
+      "src/src/f16-vclamp/gen/f16-vclamp-f16c-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3941,52 +4249,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vclamp_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vclamp/gen/f16-vclamp-f16c-u16.c",
-      ]
+source_set("f16-vcos_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vcos/gen/f16-vcos-scalar-rational-3-2-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vcos_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vcos_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vcos/gen/f16-vcos-scalar-rational-3-2-div.c",
+      "src/src/f16-vcos/gen/f16-vcos-scalar-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -3998,52 +4306,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vcos_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vcos/gen/f16-vcos-scalar-rational-3-2-div.c",
-      ]
+source_set("f16-velu_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-velu/gen/f16-velu-avx2-rr1-p3-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-velu_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-velu_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-velu/gen/f16-velu-avx2-rr1-p3-u16.c",
+      "src/src/f16-velu/gen/f16-velu-avx2-rr1-p3-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4055,52 +4367,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-velu_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-velu/gen/f16-velu-avx2-rr1-p3-u16.c",
-      ]
+source_set("f16-vexp_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vexp/gen/f16-vexp-scalar-poly-3.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vexp_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vexp_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vexp/gen/f16-vexp-scalar-poly-3.c",
+      "src/src/f16-vexp/gen/f16-vexp-scalar-poly-3.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4112,48 +4424,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vexp_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vexp/gen/f16-vexp-scalar-poly-3.c",
-      ]
+source_set("f16-vgelu_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vgelu/gen/f16-vgelu-scalar-rational-6-4-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vgelu_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vgelu_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vgelu/gen/f16-vgelu-scalar-rational-6-4-div.c",
+      "src/src/f16-vgelu/gen/f16-vgelu-scalar-rational-6-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4165,52 +4481,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vgelu_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vgelu/gen/f16-vgelu-scalar-rational-6-4-div.c",
-      ]
+source_set("f16-vhswish_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vhswish/gen/f16-vhswish-f16c-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-vhswish_f16c-no-avx2-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vhswish_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vhswish/gen/f16-vhswish-f16c-u16.c",
+      "src/src/f16-vhswish/gen/f16-vhswish-f16c-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4222,56 +4542,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vhswish_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vhswish/gen/f16-vhswish-f16c-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-vlrelu_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vlrelu/gen/f16-vlrelu-f16c-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-vlrelu_f16c-no-avx2-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vlrelu_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vlrelu/gen/f16-vlrelu-f16c-u16.c",
+      "src/src/f16-vlrelu/gen/f16-vlrelu-f16c-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4283,56 +4603,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vlrelu_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vlrelu/gen/f16-vlrelu-f16c-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-vmulcaddc_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vmulcaddc/gen/f16-vmulcaddc-c8-minmax-fma3-2x.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f16-vmulcaddc_f16c-fma-no-avx2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vmulcaddc_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vmulcaddc/gen/f16-vmulcaddc-c8-minmax-fma3-2x.c",
+      "src/src/f16-vmulcaddc/gen/f16-vmulcaddc-c8-minmax-fma3-2x.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4344,59 +4664,62 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vmulcaddc_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vmulcaddc/gen/f16-vmulcaddc-c8-minmax-fma3-2x.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-vrnd_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
 
-  source_set("f16-vrnd_f16c-no-avx2-no-fma") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vrnd/gen/f16-vrndd-f16c-u16.c",
+    "src/src/f16-vrnd/gen/f16-vrndne-f16c-u16.c",
+    "src/src/f16-vrnd/gen/f16-vrndu-f16c-u16.c",
+    "src/src/f16-vrnd/gen/f16-vrndz-f16c-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vrnd_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-vrnd/gen/f16-vrndd-f16c-u16.c",
-      "src/src/f16-vrnd/gen/f16-vrndne-f16c-u16.c",
-      "src/src/f16-vrnd/gen/f16-vrndu-f16c-u16.c",
-      "src/src/f16-vrnd/gen/f16-vrndz-f16c-u16.c",
+    "src/src/f16-vrnd/gen/f16-vrndne-f16c-u16.c",
+    "src/src/f16-vrnd/gen/f16-vrndu-f16c-u16.c",
+    "src/src/f16-vrnd/gen/f16-vrndz-f16c-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4408,59 +4731,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vrnd_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vrnd/gen/f16-vrndd-f16c-u16.c",
-        "src/src/f16-vrnd/gen/f16-vrndne-f16c-u16.c",
-        "src/src/f16-vrnd/gen/f16-vrndu-f16c-u16.c",
-        "src/src/f16-vrnd/gen/f16-vrndz-f16c-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-vrsqrt_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vrsqrt/gen/f16-vrsqrt-f16c-rsqrt-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vrsqrt_f16c-no-avx2-no-fma") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vrsqrt_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vrsqrt/gen/f16-vrsqrt-f16c-rsqrt-u32.c",
+      "src/src/f16-vrsqrt/gen/f16-vrsqrt-f16c-rsqrt-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4472,56 +4792,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vrsqrt_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vrsqrt/gen/f16-vrsqrt-f16c-rsqrt-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-vsigmoid_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vsigmoid/gen/f16-vsigmoid-avx2-rr1-p2-rcp-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-vsigmoid_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vsigmoid_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vsigmoid/gen/f16-vsigmoid-avx2-rr1-p2-rcp-u32.c",
+      "src/src/f16-vsigmoid/gen/f16-vsigmoid-avx2-rr1-p2-rcp-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4533,52 +4853,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vsigmoid_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vsigmoid/gen/f16-vsigmoid-avx2-rr1-p2-rcp-u32.c",
-      ]
+source_set("f16-vsin_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vsin/gen/f16-vsin-scalar-rational-3-2-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vsin_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vsin_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vsin/gen/f16-vsin-scalar-rational-3-2-div.c",
+      "src/src/f16-vsin/gen/f16-vsin-scalar-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4590,52 +4910,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vsin_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vsin/gen/f16-vsin-scalar-rational-3-2-div.c",
-      ]
+source_set("f16-vsqrt_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vsqrt/gen/f16-vsqrt-f16c-rsqrt-u32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-vsqrt_f16c-no-avx2-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vsqrt_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vsqrt/gen/f16-vsqrt-f16c-rsqrt-u32.c",
+      "src/src/f16-vsqrt/gen/f16-vsqrt-f16c-rsqrt-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4647,56 +4971,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vsqrt_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vsqrt/gen/f16-vsqrt-f16c-rsqrt-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-vtanh_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vtanh/gen/f16-vtanh-fma3-polynomial-p19h9t2-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vtanh_f16c-fma-no-avx2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vtanh_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vtanh/gen/f16-vtanh-fma3-polynomial-p19h9t2-u32.c",
+      "src/src/f16-vtanh/gen/f16-vtanh-fma3-polynomial-p19h9t2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4708,56 +5032,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vtanh_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vtanh/gen/f16-vtanh-fma3-polynomial-p19h9t2-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-vtanh_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vtanh/gen/f16-vtanh-f16c-expm1minus-rr1-p3h2ts-rcp-u24.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-vtanh_f16c-no-avx2-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vtanh_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vtanh/gen/f16-vtanh-f16c-expm1minus-rr1-p3h2ts-rcp-u24.c",
+      "src/src/f16-vtanh/gen/f16-vtanh-f16c-expm1minus-rr1-p3h2ts-rcp-u24.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4769,56 +5093,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vtanh_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vtanh/gen/f16-vtanh-f16c-expm1minus-rr1-p3h2ts-rcp-u24.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-vunary_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vunary/gen/f16-vsqr-f16c-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f16-vunary_f16c-no-avx2-no-fma") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vunary_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vunary/gen/f16-vsqr-f16c-u16.c",
+      "src/src/f16-vunary/gen/f16-vsqr-f16c-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4830,56 +5154,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vunary_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vunary/gen/f16-vsqr-f16c-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-vunary_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vunary/gen/f16-vabs-sse2-u16.c",
+    "src/src/f16-vunary/gen/f16-vneg-sse2-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f16-vunary_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vunary_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-vunary/gen/f16-vabs-sse2-u16.c",
-      "src/src/f16-vunary/gen/f16-vneg-sse2-u16.c",
+    "src/src/f16-vunary/gen/f16-vneg-sse2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4891,55 +5215,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vunary_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vunary/gen/f16-vabs-sse2-u16.c",
-        "src/src/f16-vunary/gen/f16-vneg-sse2-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-argmaxpool_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-sse2-c4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-argmaxpool_sse2-no-sse3") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-argmaxpool_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-sse2-c4.c",
+      "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-sse2-c4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -4951,51 +5274,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-argmaxpool_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-sse2-c4.c",
-      ]
+source_set("f32-argmaxpool_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-scalar-c1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-argmaxpool_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-argmaxpool_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-scalar-c1.c",
+      "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-scalar-c1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5007,53 +5331,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-argmaxpool_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-scalar-c1.c",
-      ]
+source_set("f32-avgpool_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-avx-u8.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-avgpool_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-avgpool_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-avx-u8.c",
+      "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-avx-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5065,53 +5394,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-avgpool_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-avx-u8.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-avgpool_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-avx512f-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-avgpool_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-avgpool_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-avx512f-u16.c",
+      "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-avx512f-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5123,51 +5451,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-avgpool_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-avx512f-u16.c",
-      ]
+source_set("f32-avgpool_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-sse2-u4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-avgpool_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-avgpool_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-sse2-u4.c",
+      "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-sse2-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5179,51 +5510,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-avgpool_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-sse2-u4.c",
-      ]
+source_set("f32-avgpool_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-scalar-u1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-avgpool_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-avgpool_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-scalar-u1.c",
+      "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5235,51 +5567,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-avgpool_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-scalar-u1.c",
-      ]
+source_set("f32-conv-hwc2chw_sse-no-sse2") {
+  cflags = [
+    "-mno-sse2",
+    "-msse"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-sse-2x2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-conv-hwc2chw_sse-no-sse2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-conv-hwc2chw_sse-no-sse2_standalone") {
     cflags = [
       "-mno-sse2",
-      "-msse",
+    "-msse"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-sse-2x2.c",
+      "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-sse-2x2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5291,51 +5626,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-conv-hwc2chw_sse-no-sse2_standalone") {
-      cflags = [
-        "-mno-sse2",
-        "-msse",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-sse-2x2.c",
-      ]
+source_set("f32-conv-hwc2chw_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-scalar-1x1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-conv-hwc2chw_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-conv-hwc2chw_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-scalar-1x1.c",
+      "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-scalar-1x1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5347,54 +5683,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-conv-hwc2chw_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-scalar-1x1.c",
-      ]
+source_set("f32-dwconv2d-chw_sse-no-sse2") {
+  cflags = [
+    "-mno-sse2",
+    "-msse"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-sse-2x4-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-sse-1x4-acc3.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-sse-4x4.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-sse-2x4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-dwconv2d-chw_sse-no-sse2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv2d-chw_sse-no-sse2_standalone") {
     cflags = [
       "-mno-sse2",
-      "-msse",
+    "-msse"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-sse-2x4-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-sse-1x4-acc3.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-sse-4x4.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-sse-2x4.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-sse-1x4-acc3.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-sse-4x4.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-sse-2x4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5406,57 +5748,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv2d-chw_sse-no-sse2_standalone") {
-      cflags = [
-        "-mno-sse2",
-        "-msse",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-sse-2x4-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-sse-1x4-acc3.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-sse-4x4.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-sse-2x4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-dwconv2d-chw_ssse3-no-sse4.1") {
+  cflags = [
+    "-mno-sse4.1",
+    "-mssse3"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-ssse3-2x4-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-dwconv2d-chw_ssse3-no-sse4.1") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv2d-chw_ssse3-no-sse4.1_standalone") {
     cflags = [
       "-mno-sse4.1",
-      "-mssse3",
+    "-mssse3"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-ssse3-2x4-acc2.c",
+      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-ssse3-2x4-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5468,58 +5807,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv2d-chw_ssse3-no-sse4.1_standalone") {
-      cflags = [
-        "-mno-sse4.1",
-        "-mssse3",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-ssse3-2x4-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-dwconv2d-chw_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-4x1.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-1x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-2x1-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-dwconv2d-chw_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv2d-chw_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-2x1-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-4x1.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-1x1-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-2x1-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-1x1-acc5.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-2x1-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-1x1-acc5.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-4x1.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-1x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-2x1-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5531,63 +5878,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv2d-chw_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-2x1-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-4x1.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-1x1-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-2x1-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-1x1-acc5.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-2x1-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-1x1-acc5.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-2x1-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("f32-dwconv_avx-no-avx2-no-f16c-no-fma") {
+source_set("f32-dwconv_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p16c-minmax-avx.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p16c-minmax-avx.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p16c-minmax-avx.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p16c-minmax-avx.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-dwconv/gen/f32-dwconv-25p16c-minmax-avx.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-3p16c-minmax-avx.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-4p16c-minmax-avx.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-9p16c-minmax-avx.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p16c-minmax-avx.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p16c-minmax-avx.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p16c-minmax-avx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5599,59 +5947,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p16c-minmax-avx.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-3p16c-minmax-avx.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-4p16c-minmax-avx.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-9p16c-minmax-avx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-dwconv_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p16c-minmax-avx512f.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p16c-minmax-avx512f.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p16c-minmax-avx512f.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p16c-minmax-avx512f.c"
+  ]
 
-  source_set("f32-dwconv_avx512f") {
-    cflags = [ "-mavx512f" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-dwconv/gen/f32-dwconv-25p16c-minmax-avx512f.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-3p16c-minmax-avx512f.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-4p16c-minmax-avx512f.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-9p16c-minmax-avx512f.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p16c-minmax-avx512f.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p16c-minmax-avx512f.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p16c-minmax-avx512f.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5663,58 +6010,62 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p16c-minmax-avx512f.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-3p16c-minmax-avx512f.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-4p16c-minmax-avx512f.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-9p16c-minmax-avx512f.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-dwconv_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p16c-minmax-fma3.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p16c-minmax-fma3.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p16c-minmax-fma3.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p16c-minmax-fma3.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-dwconv_f16c-fma-no-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-dwconv/gen/f32-dwconv-25p16c-minmax-fma3.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-3p16c-minmax-fma3.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-4p16c-minmax-fma3.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-9p16c-minmax-fma3.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p16c-minmax-fma3.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p16c-minmax-fma3.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p16c-minmax-fma3.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5726,61 +6077,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p16c-minmax-fma3.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-3p16c-minmax-fma3.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-4p16c-minmax-fma3.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-9p16c-minmax-fma3.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-dwconv_sse-no-sse2") {
+  cflags = [
+    "-mno-sse2",
+    "-msse"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p8c-minmax-sse.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p8c-minmax-sse.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p8c-minmax-sse.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p8c-minmax-sse.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-dwconv_sse-no-sse2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv_sse-no-sse2_standalone") {
     cflags = [
       "-mno-sse2",
-      "-msse",
+    "-msse"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-dwconv/gen/f32-dwconv-25p8c-minmax-sse.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-3p8c-minmax-sse.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-4p8c-minmax-sse.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-9p8c-minmax-sse.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p8c-minmax-sse.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p8c-minmax-sse.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p8c-minmax-sse.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5792,63 +6142,70 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv_sse-no-sse2_standalone") {
-      cflags = [
-        "-mno-sse2",
-        "-msse",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p8c-minmax-sse.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-3p8c-minmax-sse.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-4p8c-minmax-sse.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-9p8c-minmax-sse.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-dwconv_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-scalar-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-dwconv_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-dwconv/gen/f32-dwconv-25p1c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-25p1c-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-25p2c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-25p2c-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-3p1c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-3p1c-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-4p1c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-4p1c-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-9p1c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-9p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-scalar-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5860,62 +6217,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p1c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p1c-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p2c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p2c-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-3p1c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-3p1c-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-4p1c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-4p1c-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-9p1c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-9p1c-scalar-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("f32-f16-vcvt_avx-no-avx2-no-f16c-no-fma") {
+source_set("f32-f16-vcvt_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-avx-u24.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-f16-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-avx-u24.c",
+      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-avx-u24.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5927,62 +6280,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-f16-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-avx-u24.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-f16-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-avx512skx-u16.c"
+  ]
 
-  source_set(
-      "f32-f16-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-f16-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-avx512skx-u16.c",
+      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-avx512skx-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -5994,61 +6349,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "f32-f16-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-avx512skx-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-f16-vcvt_f16c-no-avx2-no-fma") {
+  cflags = [
+    "-mf16c",
+    "-mno-avx2",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-f16c-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-f16-vcvt_f16c-no-avx2-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-f16-vcvt_f16c-no-avx2-no-fma_standalone") {
     cflags = [
       "-mf16c",
-      "-mno-avx2",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-f16c-u16.c",
+      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-f16c-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6060,55 +6410,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-f16-vcvt_f16c-no-avx2-no-fma_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mno-avx2",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-f16c-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-f16-vcvt_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-sse2-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-f16-vcvt_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-f16-vcvt_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-sse2-u16.c",
+      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-sse2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6120,54 +6469,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-f16-vcvt_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-sse2-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-f16-vcvt_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-sse41-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-f16-vcvt_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-f16-vcvt_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-sse41-u8.c",
+      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-sse41-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6179,51 +6528,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-f16-vcvt_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-sse41-u8.c",
-      ]
+source_set("f32-f16-vcvt_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-scalar-fabsf-u2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-f16-vcvt_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-f16-vcvt_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-scalar-fabsf-u2.c",
+      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-scalar-fabsf-u2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6235,56 +6585,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-f16-vcvt_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-scalar-fabsf-u2.c",
-      ]
+source_set("f32-gemm_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-gemm/gen/f32-gemm-1x16-minmax-avx-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-avx-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-5x16-minmax-avx-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-5x8-minmax-avx-broadcast.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-gemm_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-gemm_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-gemm/gen/f32-gemm-1x16-minmax-avx-broadcast.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-avx-broadcast.c",
-      "src/src/f32-gemm/gen/f32-gemm-5x16-minmax-avx-broadcast.c",
-      "src/src/f32-gemm/gen/f32-gemm-5x8-minmax-avx-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-avx-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-5x16-minmax-avx-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-5x8-minmax-avx-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6296,59 +6654,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-gemm_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-gemm/gen/f32-gemm-1x16-minmax-avx-broadcast.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-avx-broadcast.c",
-        "src/src/f32-gemm/gen/f32-gemm-5x16-minmax-avx-broadcast.c",
-        "src/src/f32-gemm/gen/f32-gemm-5x8-minmax-avx-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-gemm_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-gemm/gen/f32-gemm-1x16-minmax-avx512f-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x32-minmax-avx512f-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-7x16-minmax-avx512f-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-7x32-minmax-avx512f-broadcast.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-gemm_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-gemm_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-gemm/gen/f32-gemm-1x16-minmax-avx512f-broadcast.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x32-minmax-avx512f-broadcast.c",
-      "src/src/f32-gemm/gen/f32-gemm-7x16-minmax-avx512f-broadcast.c",
-      "src/src/f32-gemm/gen/f32-gemm-7x32-minmax-avx512f-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x32-minmax-avx512f-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-7x16-minmax-avx512f-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-7x32-minmax-avx512f-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6360,63 +6717,72 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-gemm_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-gemm/gen/f32-gemm-1x16-minmax-avx512f-broadcast.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x32-minmax-avx512f-broadcast.c",
-        "src/src/f32-gemm/gen/f32-gemm-7x16-minmax-avx512f-broadcast.c",
-        "src/src/f32-gemm/gen/f32-gemm-7x32-minmax-avx512f-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-gemm_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-gemm/gen/f32-gemm-10x8-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x16-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x16s4-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-2x16-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x16s4-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-5x16-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-5x8-minmax-fma3-broadcast.c"
+  ]
 
-  source_set("f32-gemm_f16c-fma-no-avx2") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-gemm_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-gemm/gen/f32-gemm-10x8-minmax-fma3-broadcast.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x16-minmax-fma3-broadcast.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x16s4-minmax-fma3-broadcast.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-fma3-broadcast.c",
-      "src/src/f32-gemm/gen/f32-gemm-2x16-minmax-fma3-broadcast.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x16s4-minmax-fma3-broadcast.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-fma3-broadcast.c",
-      "src/src/f32-gemm/gen/f32-gemm-5x16-minmax-fma3-broadcast.c",
-      "src/src/f32-gemm/gen/f32-gemm-5x8-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x16-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x16s4-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-2x16-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x16s4-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-5x16-minmax-fma3-broadcast.c",
+    "src/src/f32-gemm/gen/f32-gemm-5x8-minmax-fma3-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6428,65 +6794,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-gemm_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-gemm/gen/f32-gemm-10x8-minmax-fma3-broadcast.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x16-minmax-fma3-broadcast.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x16s4-minmax-fma3-broadcast.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-fma3-broadcast.c",
-        "src/src/f32-gemm/gen/f32-gemm-2x16-minmax-fma3-broadcast.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x16s4-minmax-fma3-broadcast.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-fma3-broadcast.c",
-        "src/src/f32-gemm/gen/f32-gemm-5x16-minmax-fma3-broadcast.c",
-        "src/src/f32-gemm/gen/f32-gemm-5x8-minmax-fma3-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-gemm_sse-no-sse2") {
+  cflags = [
+    "-mno-sse2",
+    "-msse"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-sse-load1.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2c4-minmax-sse.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-sse-load1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-gemm_sse-no-sse2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-gemm_sse-no-sse2_standalone") {
     cflags = [
       "-mno-sse2",
-      "-msse",
+    "-msse"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-sse-load1.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x2c4-minmax-sse.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-sse-load1.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2c4-minmax-sse.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-sse-load1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6498,60 +6857,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-gemm_sse-no-sse2_standalone") {
-      cflags = [
-        "-mno-sse2",
-        "-msse",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-sse-load1.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x2c4-minmax-sse.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-sse-load1.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-gemm_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-gemm_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-gemm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-gemm/gen/f32-gemm-1x4-minmax-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x4-relu-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x4-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x2-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x4-minmax-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x4-relu-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x4-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6563,58 +6928,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-gemm_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-gemm/gen/f32-gemm-1x4-minmax-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x4-relu-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x4-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x2-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x4-minmax-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x4-relu-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x4-scalar.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-ibilinear-chw_sse-no-sse2") {
+  cflags = [
+    "-mno-sse2",
+    "-msse"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-sse-p8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-ibilinear-chw_sse-no-sse2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-ibilinear-chw_sse-no-sse2_standalone") {
     cflags = [
       "-mno-sse2",
-      "-msse",
+    "-msse"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-sse-p8.c",
+      "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-sse-p8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6626,51 +6987,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-ibilinear-chw_sse-no-sse2_standalone") {
-      cflags = [
-        "-mno-sse2",
-        "-msse",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-sse-p8.c",
-      ]
+source_set("f32-ibilinear-chw_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-scalar-p4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-ibilinear-chw_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-ibilinear-chw_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-scalar-p4.c",
+      "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-scalar-p4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6682,51 +7044,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-ibilinear-chw_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-scalar-p4.c",
-      ]
+source_set("f32-ibilinear_sse-no-sse2") {
+  cflags = [
+    "-mno-sse2",
+    "-msse"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-ibilinear/gen/f32-ibilinear-sse-c8.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-ibilinear_sse-no-sse2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-ibilinear_sse-no-sse2_standalone") {
     cflags = [
       "-mno-sse2",
-      "-msse",
+    "-msse"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-ibilinear/gen/f32-ibilinear-sse-c8.c",
+      "src/src/f32-ibilinear/gen/f32-ibilinear-sse-c8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6738,51 +7103,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-ibilinear_sse-no-sse2_standalone") {
-      cflags = [
-        "-mno-sse2",
-        "-msse",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-ibilinear/gen/f32-ibilinear-sse-c8.c",
-      ]
+source_set("f32-ibilinear_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-ibilinear/gen/f32-ibilinear-scalar-c2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-ibilinear_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-ibilinear_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-ibilinear/gen/f32-ibilinear-scalar-c2.c",
+      "src/src/f32-ibilinear/gen/f32-ibilinear-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6794,56 +7160,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-ibilinear_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-ibilinear/gen/f32-ibilinear-scalar-c2.c",
-      ]
+source_set("f32-igemm_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-igemm/gen/f32-igemm-1x16-minmax-avx-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-avx-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-5x16-minmax-avx-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-5x8-minmax-avx-broadcast.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-igemm_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-igemm_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-igemm/gen/f32-igemm-1x16-minmax-avx-broadcast.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-avx-broadcast.c",
-      "src/src/f32-igemm/gen/f32-igemm-5x16-minmax-avx-broadcast.c",
-      "src/src/f32-igemm/gen/f32-igemm-5x8-minmax-avx-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-avx-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-5x16-minmax-avx-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-5x8-minmax-avx-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6855,59 +7229,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-igemm_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-igemm/gen/f32-igemm-1x16-minmax-avx-broadcast.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-avx-broadcast.c",
-        "src/src/f32-igemm/gen/f32-igemm-5x16-minmax-avx-broadcast.c",
-        "src/src/f32-igemm/gen/f32-igemm-5x8-minmax-avx-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-igemm_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-igemm/gen/f32-igemm-1x16-minmax-avx512f-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x32-minmax-avx512f-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-7x16-minmax-avx512f-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-7x32-minmax-avx512f-broadcast.c"
+  ]
 
-  source_set("f32-igemm_avx512f") {
-    cflags = [ "-mavx512f" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-igemm_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-igemm/gen/f32-igemm-1x16-minmax-avx512f-broadcast.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x32-minmax-avx512f-broadcast.c",
-      "src/src/f32-igemm/gen/f32-igemm-7x16-minmax-avx512f-broadcast.c",
-      "src/src/f32-igemm/gen/f32-igemm-7x32-minmax-avx512f-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x32-minmax-avx512f-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-7x16-minmax-avx512f-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-7x32-minmax-avx512f-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6919,62 +7292,70 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-igemm_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-igemm/gen/f32-igemm-1x16-minmax-avx512f-broadcast.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x32-minmax-avx512f-broadcast.c",
-        "src/src/f32-igemm/gen/f32-igemm-7x16-minmax-avx512f-broadcast.c",
-        "src/src/f32-igemm/gen/f32-igemm-7x32-minmax-avx512f-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-igemm_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-igemm/gen/f32-igemm-10x8-minmax-fma3-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x16-minmax-fma3-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x16s4-minmax-fma3-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-fma3-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x16s4-minmax-fma3-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-fma3-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-5x16-minmax-fma3-broadcast-prfm.c",
+    "src/src/f32-igemm/gen/f32-igemm-5x8-minmax-fma3-broadcast.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-igemm_f16c-fma-no-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-igemm_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-igemm/gen/f32-igemm-10x8-minmax-fma3-broadcast.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x16-minmax-fma3-broadcast.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x16s4-minmax-fma3-broadcast.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-fma3-broadcast.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x16s4-minmax-fma3-broadcast.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-fma3-broadcast.c",
-      "src/src/f32-igemm/gen/f32-igemm-5x16-minmax-fma3-broadcast-prfm.c",
-      "src/src/f32-igemm/gen/f32-igemm-5x8-minmax-fma3-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x16-minmax-fma3-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x16s4-minmax-fma3-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-fma3-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x16s4-minmax-fma3-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-fma3-broadcast.c",
+    "src/src/f32-igemm/gen/f32-igemm-5x16-minmax-fma3-broadcast-prfm.c",
+    "src/src/f32-igemm/gen/f32-igemm-5x8-minmax-fma3-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -6986,64 +7367,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-igemm_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-igemm/gen/f32-igemm-10x8-minmax-fma3-broadcast.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x16-minmax-fma3-broadcast.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x16s4-minmax-fma3-broadcast.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-fma3-broadcast.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x16s4-minmax-fma3-broadcast.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-fma3-broadcast.c",
-        "src/src/f32-igemm/gen/f32-igemm-5x16-minmax-fma3-broadcast-prfm.c",
-        "src/src/f32-igemm/gen/f32-igemm-5x8-minmax-fma3-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-igemm_sse-no-sse2") {
+  cflags = [
+    "-mno-sse2",
+    "-msse"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-sse-load1.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2c4-minmax-sse.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-sse-load1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-igemm_sse-no-sse2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-igemm_sse-no-sse2_standalone") {
     cflags = [
       "-mno-sse2",
-      "-msse",
+    "-msse"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-sse-load1.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x2c4-minmax-sse.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-sse-load1.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2c4-minmax-sse.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-sse-load1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7055,60 +7430,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-igemm_sse-no-sse2_standalone") {
-      cflags = [
-        "-mno-sse2",
-        "-msse",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-sse-load1.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x2c4-minmax-sse.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-sse-load1.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-igemm_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-igemm_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-igemm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-igemm/gen/f32-igemm-1x4-minmax-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x4-relu-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x4-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x2-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x4-minmax-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x4-relu-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x4-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7120,58 +7501,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-igemm_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-igemm/gen/f32-igemm-1x4-minmax-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x4-relu-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x4-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x2-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x4-minmax-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x4-relu-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x4-scalar.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-maxpool_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-sse2-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-maxpool_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-maxpool_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-sse2-u4.c",
+      "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-sse2-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7183,51 +7560,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-maxpool_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-sse2-u4.c",
-      ]
+source_set("f32-maxpool_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-scalar-u1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-maxpool_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-maxpool_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-scalar-u1.c",
+      "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7239,54 +7617,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-maxpool_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-scalar-u1.c",
-      ]
+source_set("f32-qc4w-gemm_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x16-minmax-avx-broadcast.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-3x16-minmax-avx-broadcast.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-qc4w-gemm_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc4w-gemm_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x16-minmax-avx-broadcast.c",
-      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-3x16-minmax-avx-broadcast.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-3x16-minmax-avx-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7298,59 +7682,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc4w-gemm_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x16-minmax-avx-broadcast.c",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-3x16-minmax-avx-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qc4w-gemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x16-minmax-avx2-broadcast.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-3x16-minmax-avx2-broadcast.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-qc4w-gemm_f16c-fma-avx2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc4w-gemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x16-minmax-avx2-broadcast.c",
-      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-3x16-minmax-avx2-broadcast.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-3x16-minmax-avx2-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7362,58 +7745,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc4w-gemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x16-minmax-avx2-broadcast.c",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-3x16-minmax-avx2-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qc4w-gemm_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x16-minmax-fma3-broadcast.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-3x16-minmax-fma3-broadcast.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-qc4w-gemm_f16c-fma-no-avx2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc4w-gemm_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x16-minmax-fma3-broadcast.c",
-      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-3x16-minmax-fma3-broadcast.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-3x16-minmax-fma3-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7425,57 +7808,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc4w-gemm_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x16-minmax-fma3-broadcast.c",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-3x16-minmax-fma3-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qc4w-gemm_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x8-minmax-sse41-dup.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x8-minmax-sse41-dup.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-qc4w-gemm_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc4w-gemm_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x8-minmax-sse41-dup.c",
-      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x8-minmax-sse41-dup.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x8-minmax-sse41-dup.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7487,53 +7869,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc4w-gemm_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x8-minmax-sse41-dup.c",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x8-minmax-sse41-dup.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qc4w-gemm_x64") {
+  cflags = [
 
-  source_set("f32-qc4w-gemm_x64") {
-    cflags = []
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x4-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc4w-gemm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x4-minmax-scalar.c",
-      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x4-minmax-scalar.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7545,55 +7928,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc4w-gemm_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x4-minmax-scalar.c",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x4-minmax-scalar.c",
-      ]
+source_set("f32-qc8w-gemm_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x16-minmax-avx-broadcast.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-5x16-minmax-avx-broadcast.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-qc8w-gemm_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc8w-gemm_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x16-minmax-avx-broadcast.c",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-5x16-minmax-avx-broadcast.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-5x16-minmax-avx-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7605,59 +7993,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc8w-gemm_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x16-minmax-avx-broadcast.c",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-5x16-minmax-avx-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("f32-qc8w-gemm_f16c-fma-avx2") {
+source_set("f32-qc8w-gemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x16-minmax-avx2-broadcast.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-5x16-minmax-avx2-broadcast.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc8w-gemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x16-minmax-avx2-broadcast.c",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-5x16-minmax-avx2-broadcast.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-5x16-minmax-avx2-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7669,65 +8056,70 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc8w-gemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x16-minmax-avx2-broadcast.c",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-5x16-minmax-avx2-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc8w-gemm/gen/f32-qc4w-gemm-1x32-minmax-avx512skx-broadcast.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc4w-gemm-7x32-minmax-avx512skx-broadcast.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x32-minmax-avx512skx-broadcast.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-7x32-minmax-avx512skx-broadcast.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qc8w-gemm/gen/f32-qc4w-gemm-1x32-minmax-avx512skx-broadcast.c",
-      "src/src/f32-qc8w-gemm/gen/f32-qc4w-gemm-7x32-minmax-avx512skx-broadcast.c",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x32-minmax-avx512skx-broadcast.c",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-7x32-minmax-avx512skx-broadcast.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc4w-gemm-7x32-minmax-avx512skx-broadcast.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x32-minmax-avx512skx-broadcast.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-7x32-minmax-avx512skx-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7739,65 +8131,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc8w-gemm/gen/f32-qc4w-gemm-1x32-minmax-avx512skx-broadcast.c",
-        "src/src/f32-qc8w-gemm/gen/f32-qc4w-gemm-7x32-minmax-avx512skx-broadcast.c",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x32-minmax-avx512skx-broadcast.c",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-7x32-minmax-avx512skx-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qc8w-gemm_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x16-minmax-fma3-broadcast.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-5x16-minmax-fma3-broadcast.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-qc8w-gemm_f16c-fma-no-avx2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc8w-gemm_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x16-minmax-fma3-broadcast.c",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-5x16-minmax-fma3-broadcast.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-5x16-minmax-fma3-broadcast.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7809,57 +8194,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc8w-gemm_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x16-minmax-fma3-broadcast.c",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-5x16-minmax-fma3-broadcast.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qc8w-gemm_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
 
-  source_set("f32-qc8w-gemm_sse4.1-no-sse4.2") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-sse41-dup.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x8-minmax-sse41-dup.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc8w-gemm_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-sse41-dup.c",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x8-minmax-sse41-dup.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x8-minmax-sse41-dup.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7871,53 +8255,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc8w-gemm_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-sse41-dup.c",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x8-minmax-sse41-dup.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qc8w-gemm_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x4-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-qc8w-gemm_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc8w-gemm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x4-minmax-scalar.c",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x4-minmax-scalar.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7929,54 +8314,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc8w-gemm_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x4-minmax-scalar.c",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x4-minmax-scalar.c",
-      ]
+source_set("f32-qs8-vcvt_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-avx-u32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-qs8-vcvt_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qs8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-avx-u32.c",
+      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-avx-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -7988,57 +8377,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qs8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-avx-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qs8-vcvt_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-avx2-u64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-qs8-vcvt_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qs8-vcvt_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-avx2-u64.c",
+      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-avx2-u64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8050,61 +8438,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qs8-vcvt_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-avx2-u64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qs8-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-avx512skx-u128.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "f32-qs8-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qs8-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-avx512skx-u128.c",
+      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-avx512skx-u128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8116,60 +8507,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "f32-qs8-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-avx512skx-u128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qs8-vcvt_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-sse2-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-qs8-vcvt_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qs8-vcvt_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-sse2-u32.c",
+      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-sse2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8181,54 +8566,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qs8-vcvt_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-sse2-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qs8-vcvt_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-sse41-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-qs8-vcvt_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qs8-vcvt_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-sse41-u32.c",
+      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-sse41-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8240,52 +8625,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qs8-vcvt_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-sse41-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qs8-vcvt_x64") {
+  cflags = [
 
-  source_set("f32-qs8-vcvt_x64") {
-    cflags = []
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-imagic-u4.c",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-lrintf-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qs8-vcvt_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-imagic-u4.c",
-      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-lrintf-u4.c",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-lrintf-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8297,54 +8684,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qs8-vcvt_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-imagic-u4.c",
-        "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-lrintf-u4.c",
-      ]
+source_set("f32-qu8-vcvt_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-avx-u32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-qu8-vcvt_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qu8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-avx-u32.c",
+      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-avx-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8356,57 +8747,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qu8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-avx-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qu8-vcvt_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-avx2-u64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-qu8-vcvt_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qu8-vcvt_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-avx2-u64.c",
+      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-avx2-u64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8418,61 +8808,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qu8-vcvt_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-avx2-u64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qu8-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-avx512skx-u128.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "f32-qu8-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qu8-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-avx512skx-u128.c",
+      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-avx512skx-u128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8484,60 +8877,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "f32-qu8-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-avx512skx-u128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qu8-vcvt_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-sse2-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-qu8-vcvt_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qu8-vcvt_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-sse2-u32.c",
+      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-sse2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8549,52 +8936,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qu8-vcvt_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-sse2-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qu8-vcvt_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-imagic-u4.c",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-lrintf-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-qu8-vcvt_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qu8-vcvt_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-imagic-u4.c",
-      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-lrintf-u4.c",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-lrintf-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8606,49 +8995,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qu8-vcvt_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-imagic-u4.c",
-        "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-lrintf-u4.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-raddstoreexpminusmax_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-avx512f-rr2-p5-u64-acc2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-raddstoreexpminusmax_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-raddstoreexpminusmax_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-avx512f-rr2-p5-u64-acc2.c",
+      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-avx512f-rr2-p5-u64-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8660,52 +9052,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-raddstoreexpminusmax_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-avx512f-rr2-p5-u64-acc2.c",
-      ]
+source_set("f32-raddstoreexpminusmax_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-avx2-rr2-p5-u32-acc2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-raddstoreexpminusmax_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-raddstoreexpminusmax_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-avx2-rr2-p5-u32-acc2.c",
+      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-avx2-rr2-p5-u32-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8717,61 +9113,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-raddstoreexpminusmax_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-avx2-rr2-p5-u32-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-raddstoreexpminusmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-avx256skx-rr2-p5-u32-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "f32-raddstoreexpminusmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-raddstoreexpminusmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-avx256skx-rr2-p5-u32-acc2.c",
+      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-avx256skx-rr2-p5-u32-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8783,60 +9182,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "f32-raddstoreexpminusmax_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-avx256skx-rr2-p5-u32-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-raddstoreexpminusmax_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-sse2-rr2-p5-u16-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-raddstoreexpminusmax_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-raddstoreexpminusmax_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-sse2-rr2-p5-u16-acc2.c",
+      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-sse2-rr2-p5-u16-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8848,51 +9241,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-raddstoreexpminusmax_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-sse2-rr2-p5-u16-acc2.c",
-      ]
+source_set("f32-raddstoreexpminusmax_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-scalar-rr2-p5-u4-acc2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-raddstoreexpminusmax_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-raddstoreexpminusmax_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-scalar-rr2-p5-u4-acc2.c",
+      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-scalar-rr2-p5-u4-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8904,54 +9298,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-raddstoreexpminusmax_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-scalar-rr2-p5-u4-acc2.c",
-      ]
+source_set("f32-rdminmax_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-avx-c32.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-avx-c32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-rdminmax_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdminmax_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-avx-c32.c",
-      "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-avx-c32.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-avx-c32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -8963,55 +9363,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rdminmax_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-avx-c32.c",
-        "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-avx-c32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-rdminmax_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-avx512f-c32.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-avx512f-c32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-rdminmax_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdminmax_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-avx512f-c32.c",
-      "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-avx512f-c32.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-avx512f-c32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9023,53 +9422,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rdminmax_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-avx512f-c32.c",
-        "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-avx512f-c32.c",
-      ]
+source_set("f32-rdminmax_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-sse2-c32.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-sse2-c32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-rdminmax_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdminmax_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-sse2-c32.c",
-      "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-sse2-c32.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-sse2-c32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9081,53 +9483,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rdminmax_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-sse2-c32.c",
-        "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-sse2-c32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-rdminmax_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-scalar-c2.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-scalar-c2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-rdminmax_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdminmax_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-scalar-c2.c",
-      "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-scalar-c2.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9139,54 +9542,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rdminmax_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-scalar-c2.c",
-        "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-scalar-c2.c",
-      ]
+source_set("f32-rdsum_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-avx-c32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-rdsum_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdsum_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-avx-c32.c",
+      "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-avx-c32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9198,53 +9605,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rdsum_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-avx-c32.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-rdsum_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-avx512f-c64.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-rdsum_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdsum_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-avx512f-c64.c",
+      "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-avx512f-c64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9256,51 +9662,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rdsum_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-avx512f-c64.c",
-      ]
+source_set("f32-rdsum_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-sse2-c16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-rdsum_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdsum_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-sse2-c16.c",
+      "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-sse2-c16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9312,51 +9721,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rdsum_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-sse2-c16.c",
-      ]
+source_set("f32-rdsum_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-rdsum_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdsum_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-scalar.c",
+      "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9368,55 +9778,62 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rdsum_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-scalar.c",
-      ]
+source_set("f32-rminmax_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rminmax/gen/f32-rmax-avx-u32-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-avx-u32-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-avx-u32-acc4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-rminmax_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rminmax_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-rminmax/gen/f32-rmax-avx-u32-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rmin-avx-u32-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rminmax-avx-u32-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-avx-u32-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-avx-u32-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9428,57 +9845,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rminmax_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rminmax/gen/f32-rmax-avx-u32-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rmin-avx-u32-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rminmax-avx-u32-acc4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-rminmax_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rminmax/gen/f32-rmax-avx512f-u64-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-avx512f-u64-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-avx512f-u64-acc4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-rminmax_avx512f") {
-    cflags = [ "-mavx512f" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rminmax_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-rminmax/gen/f32-rmax-avx512f-u64-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rmin-avx512f-u64-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rminmax-avx512f-u64-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-avx512f-u64-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-avx512f-u64-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9490,55 +9906,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rminmax_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rminmax/gen/f32-rmax-avx512f-u64-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rmin-avx512f-u64-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rminmax-avx512f-u64-acc4.c",
-      ]
+source_set("f32-rminmax_sse-no-sse2") {
+  cflags = [
+    "-mno-sse2",
+    "-msse"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rminmax/gen/f32-rmax-sse-u16-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-sse-u16-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-sse-u16-acc4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-rminmax_sse-no-sse2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rminmax_sse-no-sse2_standalone") {
     cflags = [
       "-mno-sse2",
-      "-msse",
+    "-msse"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-rminmax/gen/f32-rmax-sse-u16-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rmin-sse-u16-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rminmax-sse-u16-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-sse-u16-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-sse-u16-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9550,55 +9969,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rminmax_sse-no-sse2_standalone") {
-      cflags = [
-        "-mno-sse2",
-        "-msse",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rminmax/gen/f32-rmax-sse-u16-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rmin-sse-u16-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rminmax-sse-u16-acc4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-rminmax_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rminmax/gen/f32-rmax-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-scalar-u4-acc4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-rminmax_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rminmax_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-rminmax/gen/f32-rmax-scalar-u4-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rmin-scalar-u4-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rminmax-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-scalar-u4-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9610,55 +10030,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rminmax_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rminmax/gen/f32-rmax-scalar-u4-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rmin-scalar-u4-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rminmax-scalar-u4-acc4.c",
-      ]
+source_set("f32-rsum_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rsum/gen/f32-rsum-avx-u32-acc4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-rsum_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rsum_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-rsum/gen/f32-rsum-avx-u32-acc4.c",
+      "src/src/f32-rsum/gen/f32-rsum-avx-u32-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9670,53 +10093,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rsum_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rsum/gen/f32-rsum-avx-u32-acc4.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-rsum_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rsum/gen/f32-rsum-avx512f-u32-acc2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-rsum_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rsum_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-rsum/gen/f32-rsum-avx512f-u32-acc2.c",
+      "src/src/f32-rsum/gen/f32-rsum-avx512f-u32-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9728,51 +10150,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rsum_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rsum/gen/f32-rsum-avx512f-u32-acc2.c",
-      ]
+source_set("f32-rsum_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rsum/gen/f32-rsum-sse2-u16-acc4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-rsum_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rsum_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-rsum/gen/f32-rsum-sse2-u16-acc4.c",
+      "src/src/f32-rsum/gen/f32-rsum-sse2-u16-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9784,51 +10209,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rsum_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rsum/gen/f32-rsum-sse2-u16-acc4.c",
-      ]
+source_set("f32-rsum_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rsum/gen/f32-rsum-scalar-u4-acc4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-rsum_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rsum_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-rsum/gen/f32-rsum-scalar-u4-acc4.c",
+      "src/src/f32-rsum/gen/f32-rsum-scalar-u4-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9840,51 +10266,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rsum_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rsum/gen/f32-rsum-scalar-u4-acc4.c",
-      ]
+source_set("f32-spmm_sse-no-sse2") {
+  cflags = [
+    "-mno-sse2",
+    "-msse"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-spmm/gen/f32-spmm-32x1-minmax-sse.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-spmm_sse-no-sse2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-spmm_sse-no-sse2_standalone") {
     cflags = [
       "-mno-sse2",
-      "-msse",
+    "-msse"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-spmm/gen/f32-spmm-32x1-minmax-sse.c",
+      "src/src/f32-spmm/gen/f32-spmm-32x1-minmax-sse.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9896,53 +10325,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-spmm_sse-no-sse2_standalone") {
-      cflags = [
-        "-mno-sse2",
-        "-msse",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-spmm/gen/f32-spmm-32x1-minmax-sse.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-spmm_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-spmm/gen/f32-spmm-8x1-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x2-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x4-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-spmm_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-spmm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-spmm/gen/f32-spmm-8x1-minmax-scalar.c",
-      "src/src/f32-spmm/gen/f32-spmm-8x2-minmax-scalar.c",
-      "src/src/f32-spmm/gen/f32-spmm-8x4-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x2-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -9954,55 +10386,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-spmm_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-spmm/gen/f32-spmm-8x1-minmax-scalar.c",
-        "src/src/f32-spmm/gen/f32-spmm-8x2-minmax-scalar.c",
-        "src/src/f32-spmm/gen/f32-spmm-8x4-minmax-scalar.c",
-      ]
+source_set("f32-vapproxgelu_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-avx-rational-12-10-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vapproxgelu_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vapproxgelu_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-avx-rational-12-10-div.c",
+      "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-avx-rational-12-10-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10014,53 +10449,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vapproxgelu_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-avx-rational-12-10-div.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-vapproxgelu_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-avx512f-rational-12-10-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vapproxgelu_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vapproxgelu_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-avx512f-rational-12-10-div.c",
+      "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-avx512f-rational-12-10-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10072,52 +10506,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vapproxgelu_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-avx512f-rational-12-10-div.c",
-      ]
+source_set("f32-vapproxgelu_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-fma3-rational-12-10-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vapproxgelu_f16c-fma-no-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vapproxgelu_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-fma3-rational-12-10-div.c",
+      "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-fma3-rational-12-10-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10129,56 +10567,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vapproxgelu_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-fma3-rational-12-10-div.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vapproxgelu_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-sse2-rational-12-10-div.c",
+    "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-sse2fma-rational-12-10-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vapproxgelu_sse2-no-sse3") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vapproxgelu_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-sse2-rational-12-10-div.c",
-      "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-sse2fma-rational-12-10-div.c",
+    "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-sse2fma-rational-12-10-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10190,52 +10628,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vapproxgelu_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-sse2-rational-12-10-div.c",
-        "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-sse2fma-rational-12-10-div.c",
-      ]
+source_set("f32-vapproxgelu_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-scalar-rational-12-10-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vapproxgelu_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vapproxgelu_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-scalar-rational-12-10-div.c",
+      "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-scalar-rational-12-10-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10247,71 +10685,94 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vapproxgelu_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-scalar-rational-12-10-div.c",
-      ]
+source_set("f32-vbinary_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vbinary/gen/f32-vadd-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vmax-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vmin-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vminc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vmul-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vprelu-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vsub-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-avx-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vbinary_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vbinary_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vbinary/gen/f32-vadd-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vaddc-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vdiv-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vdivc-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vmax-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vmaxc-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vmin-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vminc-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vmul-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vmulc-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vprelu-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vpreluc-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vrdivc-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vrpreluc-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vrsubc-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiff-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiffc-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vsub-avx-u16.c",
-      "src/src/f32-vbinary/gen/f32-vsubc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vmax-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vmin-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vminc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vmul-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vprelu-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vsub-avx-u16.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-avx-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10323,89 +10784,88 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vbinary_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vbinary/gen/f32-vadd-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vaddc-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vdiv-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vdivc-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vmax-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vmaxc-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vmin-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vminc-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vmul-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vmulc-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vprelu-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vpreluc-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vrdivc-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vrpreluc-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vrsubc-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiff-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiffc-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vsub-avx-u16.c",
-        "src/src/f32-vbinary/gen/f32-vsubc-avx-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vbinary_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vbinary/gen/f32-vadd-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vmax-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vmin-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vminc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vmul-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vprelu-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vsub-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-avx512f-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-vbinary_avx512f") {
-    cflags = [ "-mavx512f" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vbinary_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vbinary/gen/f32-vadd-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vaddc-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vdiv-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vdivc-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vmax-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vmaxc-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vmin-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vminc-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vmul-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vmulc-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vprelu-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vpreluc-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vrdivc-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vrpreluc-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vrsubc-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiff-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiffc-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vsub-avx512f-u32.c",
-      "src/src/f32-vbinary/gen/f32-vsubc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vmax-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vmin-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vminc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vmul-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vprelu-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vsub-avx512f-u32.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-avx512f-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10417,84 +10877,84 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vbinary_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vbinary/gen/f32-vadd-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vaddc-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vdiv-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vdivc-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vmax-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vmaxc-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vmin-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vminc-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vmul-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vmulc-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vprelu-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vpreluc-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vrdivc-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vrpreluc-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vrsubc-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiff-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiffc-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vsub-avx512f-u32.c",
-        "src/src/f32-vbinary/gen/f32-vsubc-avx512f-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vbinary_sse-no-sse2") {
+  cflags = [
+    "-mno-sse2",
+    "-msse"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vbinary/gen/f32-vadd-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmax-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmin-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vminc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmul-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsub-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-sse-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vbinary_sse-no-sse2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vbinary_sse-no-sse2_standalone") {
     cflags = [
       "-mno-sse2",
-      "-msse",
+    "-msse"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vbinary/gen/f32-vadd-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vaddc-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vdiv-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vdivc-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmax-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmaxc-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmin-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vminc-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmul-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmulc-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vrdivc-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vrsubc-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiff-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiffc-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsub-sse-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsubc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmax-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmin-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vminc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmul-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsub-sse-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-sse-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10506,71 +10966,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vbinary_sse-no-sse2_standalone") {
-      cflags = [
-        "-mno-sse2",
-        "-msse",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vbinary/gen/f32-vadd-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vaddc-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vdiv-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vdivc-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmax-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmaxc-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmin-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vminc-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmul-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmulc-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vrdivc-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vrsubc-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiff-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiffc-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsub-sse-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsubc-sse-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vbinary_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vbinary/gen/f32-vprelu-sse2-u8.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-sse2-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-sse2-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vbinary_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vbinary_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vbinary/gen/f32-vprelu-sse2-u8.c",
-      "src/src/f32-vbinary/gen/f32-vpreluc-sse2-u8.c",
-      "src/src/f32-vbinary/gen/f32-vrpreluc-sse2-u8.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-sse2-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-sse2-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10582,71 +11029,88 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vbinary_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vbinary/gen/f32-vprelu-sse2-u8.c",
-        "src/src/f32-vbinary/gen/f32-vpreluc-sse2-u8.c",
-        "src/src/f32-vbinary/gen/f32-vrpreluc-sse2-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vbinary_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vbinary/gen/f32-vadd-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vmax-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmin-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vminc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmul-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vprelu-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsub-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-scalar-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vbinary_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vbinary_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vbinary/gen/f32-vadd-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vaddc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vdiv-scalar-u2.c",
-      "src/src/f32-vbinary/gen/f32-vdivc-scalar-u2.c",
-      "src/src/f32-vbinary/gen/f32-vmax-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmaxc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmin-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vminc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmul-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmulc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vprelu-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vpreluc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vrdivc-scalar-u2.c",
-      "src/src/f32-vbinary/gen/f32-vrpreluc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vrsubc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiff-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiffc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsub-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsubc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vmax-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmin-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vminc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmul-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vprelu-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsub-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10658,71 +11122,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vbinary_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vbinary/gen/f32-vadd-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vaddc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vdiv-scalar-u2.c",
-        "src/src/f32-vbinary/gen/f32-vdivc-scalar-u2.c",
-        "src/src/f32-vbinary/gen/f32-vmax-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmaxc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmin-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vminc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmul-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmulc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vprelu-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vpreluc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vrdivc-scalar-u2.c",
-        "src/src/f32-vbinary/gen/f32-vrpreluc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vrsubc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiff-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiffc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsub-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsubc-scalar-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vclamp_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vclamp/gen/f32-vclamp-avx.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vclamp_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vclamp_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vclamp/gen/f32-vclamp-avx.c",
+      "src/src/f32-vclamp/gen/f32-vclamp-avx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10734,53 +11185,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vclamp_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vclamp/gen/f32-vclamp-avx.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-vclamp_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vclamp/gen/f32-vclamp-avx512f.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vclamp_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vclamp_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vclamp/gen/f32-vclamp-avx512f.c",
+      "src/src/f32-vclamp/gen/f32-vclamp-avx512f.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10792,51 +11242,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vclamp_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vclamp/gen/f32-vclamp-avx512f.c",
-      ]
+source_set("f32-vclamp_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vclamp/gen/f32-vclamp-sse2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vclamp_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vclamp_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vclamp/gen/f32-vclamp-sse2.c",
+      "src/src/f32-vclamp/gen/f32-vclamp-sse2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10848,51 +11301,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vclamp_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vclamp/gen/f32-vclamp-sse2.c",
-      ]
+source_set("f32-vclamp_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vclamp/gen/f32-vclamp-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vclamp_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vclamp_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vclamp/gen/f32-vclamp-scalar.c",
+      "src/src/f32-vclamp/gen/f32-vclamp-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10904,48 +11358,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vclamp_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vclamp/gen/f32-vclamp-scalar.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-vcmul_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcmul/gen/f32-vcmul-avx512f-u32.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vcmul_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcmul_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vcmul/gen/f32-vcmul-avx512f-u32.c",
+      "src/src/f32-vcmul/gen/f32-vcmul-avx512f-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -10957,52 +11415,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcmul_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcmul/gen/f32-vcmul-avx512f-u32.c",
-      ]
+source_set("f32-vcmul_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcmul/gen/f32-vcmul-fma3-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vcmul_f16c-fma-no-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcmul_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vcmul/gen/f32-vcmul-fma3-u16.c",
+      "src/src/f32-vcmul/gen/f32-vcmul-fma3-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11014,55 +11476,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcmul_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcmul/gen/f32-vcmul-fma3-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vcmul_sse-no-sse2") {
+  cflags = [
+    "-mno-sse2",
+    "-msse"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcmul/gen/f32-vcmul-sse-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vcmul_sse-no-sse2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcmul_sse-no-sse2_standalone") {
     cflags = [
       "-mno-sse2",
-      "-msse",
+    "-msse"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vcmul/gen/f32-vcmul-sse-u8.c",
+      "src/src/f32-vcmul/gen/f32-vcmul-sse-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11074,51 +11535,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcmul_sse-no-sse2_standalone") {
-      cflags = [
-        "-mno-sse2",
-        "-msse",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcmul/gen/f32-vcmul-sse-u8.c",
-      ]
+source_set("f32-vcmul_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcmul/gen/f32-vcmul-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vcmul_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcmul_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vcmul/gen/f32-vcmul-scalar-u4.c",
+      "src/src/f32-vcmul/gen/f32-vcmul-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11130,55 +11592,62 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcmul_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcmul/gen/f32-vcmul-scalar-u4.c",
-      ]
+source_set("f32-vcopysign_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcopysign/gen/f32-vcopysign-avx.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-avx.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-avx.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vcopysign_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcopysign_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vcopysign/gen/f32-vcopysign-avx.c",
-      "src/src/f32-vcopysign/gen/f32-vcopysignc-avx.c",
-      "src/src/f32-vcopysign/gen/f32-vrcopysignc-avx.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-avx.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-avx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11190,57 +11659,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcopysign_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcopysign/gen/f32-vcopysign-avx.c",
-        "src/src/f32-vcopysign/gen/f32-vcopysignc-avx.c",
-        "src/src/f32-vcopysign/gen/f32-vrcopysignc-avx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vcopysign_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcopysign/gen/f32-vcopysign-avx512f.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-avx512f.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-avx512f.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vcopysign_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcopysign_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vcopysign/gen/f32-vcopysign-avx512f.c",
-      "src/src/f32-vcopysign/gen/f32-vcopysignc-avx512f.c",
-      "src/src/f32-vcopysign/gen/f32-vrcopysignc-avx512f.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-avx512f.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-avx512f.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11252,55 +11720,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcopysign_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcopysign/gen/f32-vcopysign-avx512f.c",
-        "src/src/f32-vcopysign/gen/f32-vcopysignc-avx512f.c",
-        "src/src/f32-vcopysign/gen/f32-vrcopysignc-avx512f.c",
-      ]
+source_set("f32-vcopysign_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcopysign/gen/f32-vcopysign-sse2.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-sse2.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-sse2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vcopysign_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcopysign_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vcopysign/gen/f32-vcopysign-sse2.c",
-      "src/src/f32-vcopysign/gen/f32-vcopysignc-sse2.c",
-      "src/src/f32-vcopysign/gen/f32-vrcopysignc-sse2.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-sse2.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-sse2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11312,55 +11783,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcopysign_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcopysign/gen/f32-vcopysign-sse2.c",
-        "src/src/f32-vcopysign/gen/f32-vcopysignc-sse2.c",
-        "src/src/f32-vcopysign/gen/f32-vrcopysignc-sse2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("f32-vcopysign_x64") {
-    cflags = []
+source_set("f32-vcopysign_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcopysign/gen/f32-vcopysign-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcopysign_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vcopysign/gen/f32-vcopysign-scalar.c",
-      "src/src/f32-vcopysign/gen/f32-vcopysignc-scalar.c",
-      "src/src/f32-vcopysign/gen/f32-vrcopysignc-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11372,55 +11844,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcopysign_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcopysign/gen/f32-vcopysign-scalar.c",
-        "src/src/f32-vcopysign/gen/f32-vcopysignc-scalar.c",
-        "src/src/f32-vcopysign/gen/f32-vrcopysignc-scalar.c",
-      ]
+source_set("f32-vcos_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcos/gen/f32-vcos-avx-rational-5-4-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vcos_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcos_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vcos/gen/f32-vcos-avx-rational-5-4-div.c",
+      "src/src/f32-vcos/gen/f32-vcos-avx-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11432,53 +11907,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcos_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcos/gen/f32-vcos-avx-rational-5-4-div.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-vcos_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcos/gen/f32-vcos-avx512f-rational-5-4-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vcos_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcos_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vcos/gen/f32-vcos-avx512f-rational-5-4-div.c",
+      "src/src/f32-vcos/gen/f32-vcos-avx512f-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11490,52 +11964,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcos_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcos/gen/f32-vcos-avx512f-rational-5-4-div.c",
-      ]
+source_set("f32-vcos_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcos/gen/f32-vcos-fma3-rational-5-4-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vcos_f16c-fma-no-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcos_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vcos/gen/f32-vcos-fma3-rational-5-4-div.c",
+      "src/src/f32-vcos/gen/f32-vcos-fma3-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11547,56 +12025,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcos_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcos/gen/f32-vcos-fma3-rational-5-4-div.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vcos_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcos/gen/f32-vcos-sse2-rational-5-4-div.c",
+    "src/src/f32-vcos/gen/f32-vcos-sse2fma-rational-5-4-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-vcos_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcos_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vcos/gen/f32-vcos-sse2-rational-5-4-div.c",
-      "src/src/f32-vcos/gen/f32-vcos-sse2fma-rational-5-4-div.c",
+    "src/src/f32-vcos/gen/f32-vcos-sse2fma-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11608,52 +12086,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcos_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcos/gen/f32-vcos-sse2-rational-5-4-div.c",
-        "src/src/f32-vcos/gen/f32-vcos-sse2fma-rational-5-4-div.c",
-      ]
+source_set("f32-vcos_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcos/gen/f32-vcos-scalar-rational-5-4-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vcos_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcos_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vcos/gen/f32-vcos-scalar-rational-5-4-div.c",
+      "src/src/f32-vcos/gen/f32-vcos-scalar-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11665,53 +12143,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcos_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcos/gen/f32-vcos-scalar-rational-5-4-div.c",
-      ]
+source_set("f32-velu_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-velu/gen/f32-velu-avx-rr2-lut4-p4-perm-u32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-velu_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-velu_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-velu/gen/f32-velu-avx-rr2-lut4-p4-perm-u32.c",
+      "src/src/f32-velu/gen/f32-velu-avx-rr2-lut4-p4-perm-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11723,53 +12206,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-velu_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-velu/gen/f32-velu-avx-rr2-lut4-p4-perm-u32.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-velu_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-velu/gen/f32-velu-avx512f-rr1-p6-u64.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-velu_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-velu_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-velu/gen/f32-velu-avx512f-rr1-p6-u64.c",
+      "src/src/f32-velu/gen/f32-velu-avx512f-rr1-p6-u64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11781,52 +12263,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-velu_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-velu/gen/f32-velu-avx512f-rr1-p6-u64.c",
-      ]
+source_set("f32-velu_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-velu/gen/f32-velu-avx2-rr1-lut4-p4-perm-u32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-velu_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-velu_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-velu/gen/f32-velu-avx2-rr1-lut4-p4-perm-u32.c",
+      "src/src/f32-velu/gen/f32-velu-avx2-rr1-lut4-p4-perm-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11838,55 +12324,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-velu_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-velu/gen/f32-velu-avx2-rr1-lut4-p4-perm-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-velu_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-velu/gen/f32-velu-sse2-rr2-lut16-p3-u12.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-velu_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-velu_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-velu/gen/f32-velu-sse2-rr2-lut16-p3-u12.c",
+      "src/src/f32-velu/gen/f32-velu-sse2-rr2-lut16-p3-u12.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11898,51 +12383,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-velu_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-velu/gen/f32-velu-sse2-rr2-lut16-p3-u12.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("f32-velu_x64") {
-    cflags = []
+source_set("f32-velu_x64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-velu/gen/f32-velu-scalar-rr2-lut16-p3-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-velu_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-velu/gen/f32-velu-scalar-rr2-lut16-p3-u4.c",
+      "src/src/f32-velu/gen/f32-velu-scalar-rr2-lut16-p3-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -11954,53 +12440,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-velu_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-velu/gen/f32-velu-scalar-rr2-lut16-p3-u4.c",
-      ]
+source_set("f32-vexp_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vexp/gen/f32-vexp-avx-rational-3-2-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vexp_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vexp_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vexp/gen/f32-vexp-avx-rational-3-2-div.c",
+      "src/src/f32-vexp/gen/f32-vexp-avx-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12012,53 +12503,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vexp_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vexp/gen/f32-vexp-avx-rational-3-2-div.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-vexp_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vexp/gen/f32-vexp-avx512f-rational-3-2-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vexp_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vexp_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vexp/gen/f32-vexp-avx512f-rational-3-2-div.c",
+      "src/src/f32-vexp/gen/f32-vexp-avx512f-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12070,52 +12560,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vexp_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vexp/gen/f32-vexp-avx512f-rational-3-2-div.c",
-      ]
+source_set("f32-vexp_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vexp/gen/f32-vexp-fma3-rational-3-2-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vexp_f16c-fma-no-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vexp_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vexp/gen/f32-vexp-fma3-rational-3-2-div.c",
+      "src/src/f32-vexp/gen/f32-vexp-fma3-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12127,56 +12621,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vexp_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vexp/gen/f32-vexp-fma3-rational-3-2-div.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vexp_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vexp/gen/f32-vexp-sse2-rational-3-2-div.c",
+    "src/src/f32-vexp/gen/f32-vexp-sse2fma-rational-3-2-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vexp_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vexp_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vexp/gen/f32-vexp-sse2-rational-3-2-div.c",
-      "src/src/f32-vexp/gen/f32-vexp-sse2fma-rational-3-2-div.c",
+    "src/src/f32-vexp/gen/f32-vexp-sse2fma-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12188,52 +12682,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vexp_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vexp/gen/f32-vexp-sse2-rational-3-2-div.c",
-        "src/src/f32-vexp/gen/f32-vexp-sse2fma-rational-3-2-div.c",
-      ]
+source_set("f32-vexp_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vexp/gen/f32-vexp-scalar-rational-3-2-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vexp_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vexp_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vexp/gen/f32-vexp-scalar-rational-3-2-div.c",
+      "src/src/f32-vexp/gen/f32-vexp-scalar-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12245,53 +12739,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vexp_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vexp/gen/f32-vexp-scalar-rational-3-2-div.c",
-      ]
+source_set("f32-vgelu_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vgelu/gen/f32-vgelu-avx-rational-12-10-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vgelu_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vgelu_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vgelu/gen/f32-vgelu-avx-rational-12-10-div.c",
+      "src/src/f32-vgelu/gen/f32-vgelu-avx-rational-12-10-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12303,53 +12802,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vgelu_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vgelu/gen/f32-vgelu-avx-rational-12-10-div.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-vgelu_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vgelu/gen/f32-vgelu-avx512f-rational-12-10-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vgelu_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vgelu_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vgelu/gen/f32-vgelu-avx512f-rational-12-10-div.c",
+      "src/src/f32-vgelu/gen/f32-vgelu-avx512f-rational-12-10-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12361,52 +12859,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vgelu_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vgelu/gen/f32-vgelu-avx512f-rational-12-10-div.c",
-      ]
+source_set("f32-vgelu_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vgelu/gen/f32-vgelu-fma3-rational-12-10-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vgelu_f16c-fma-no-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vgelu_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vgelu/gen/f32-vgelu-fma3-rational-12-10-div.c",
+      "src/src/f32-vgelu/gen/f32-vgelu-fma3-rational-12-10-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12418,56 +12920,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vgelu_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vgelu/gen/f32-vgelu-fma3-rational-12-10-div.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vgelu_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vgelu/gen/f32-vgelu-sse2-rational-12-10-div.c",
+    "src/src/f32-vgelu/gen/f32-vgelu-sse2fma-rational-12-10-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vgelu_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vgelu_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vgelu/gen/f32-vgelu-sse2-rational-12-10-div.c",
-      "src/src/f32-vgelu/gen/f32-vgelu-sse2fma-rational-12-10-div.c",
+    "src/src/f32-vgelu/gen/f32-vgelu-sse2fma-rational-12-10-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12479,52 +12981,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vgelu_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vgelu/gen/f32-vgelu-sse2-rational-12-10-div.c",
-        "src/src/f32-vgelu/gen/f32-vgelu-sse2fma-rational-12-10-div.c",
-      ]
+source_set("f32-vgelu_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vgelu/gen/f32-vgelu-scalar-rational-12-10-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vgelu_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vgelu_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vgelu/gen/f32-vgelu-scalar-rational-12-10-div.c",
+      "src/src/f32-vgelu/gen/f32-vgelu-scalar-rational-12-10-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12536,53 +13038,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vgelu_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vgelu/gen/f32-vgelu-scalar-rational-12-10-div.c",
-      ]
+source_set("f32-vhswish_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vhswish/gen/f32-vhswish-avx.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vhswish_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vhswish_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vhswish/gen/f32-vhswish-avx.c",
+      "src/src/f32-vhswish/gen/f32-vhswish-avx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12594,53 +13101,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vhswish_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vhswish/gen/f32-vhswish-avx.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-vhswish_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vhswish/gen/f32-vhswish-avx512f.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vhswish_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vhswish_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vhswish/gen/f32-vhswish-avx512f.c",
+      "src/src/f32-vhswish/gen/f32-vhswish-avx512f.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12652,52 +13158,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vhswish_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vhswish/gen/f32-vhswish-avx512f.c",
-      ]
+source_set("f32-vhswish_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vhswish/gen/f32-vhswish-fma3.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vhswish_f16c-fma-no-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vhswish_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vhswish/gen/f32-vhswish-fma3.c",
+      "src/src/f32-vhswish/gen/f32-vhswish-fma3.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12709,56 +13219,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vhswish_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vhswish/gen/f32-vhswish-fma3.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vhswish_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vhswish/gen/f32-vhswish-sse2.c",
+    "src/src/f32-vhswish/gen/f32-vhswish-sse2fma.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vhswish_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vhswish_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vhswish/gen/f32-vhswish-sse2.c",
-      "src/src/f32-vhswish/gen/f32-vhswish-sse2fma.c",
+    "src/src/f32-vhswish/gen/f32-vhswish-sse2fma.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12770,52 +13280,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vhswish_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vhswish/gen/f32-vhswish-sse2.c",
-        "src/src/f32-vhswish/gen/f32-vhswish-sse2fma.c",
-      ]
+source_set("f32-vhswish_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vhswish/gen/f32-vhswish-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vhswish_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vhswish_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vhswish/gen/f32-vhswish-scalar.c",
+      "src/src/f32-vhswish/gen/f32-vhswish-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12827,48 +13337,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vhswish_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vhswish/gen/f32-vhswish-scalar.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-vlog_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlog/gen/f32-vlog-avx512f-rational-3-3-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vlog_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlog_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vlog/gen/f32-vlog-avx512f-rational-3-3-div.c",
+      "src/src/f32-vlog/gen/f32-vlog-avx512f-rational-3-3-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12880,52 +13394,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlog_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlog/gen/f32-vlog-avx512f-rational-3-3-div.c",
-      ]
+source_set("f32-vlog_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlog/gen/f32-vlog-avx2-rational-3-3-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vlog_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlog_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vlog/gen/f32-vlog-avx2-rational-3-3-div.c",
+      "src/src/f32-vlog/gen/f32-vlog-avx2-rational-3-3-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12937,56 +13455,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlog_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlog/gen/f32-vlog-avx2-rational-3-3-div.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("f32-vlog_f16c-fma-no-avx2") {
+source_set("f32-vlog_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlog/gen/f32-vlog-fma3-rational-3-3-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlog_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vlog/gen/f32-vlog-fma3-rational-3-3-div.c",
+      "src/src/f32-vlog/gen/f32-vlog-fma3-rational-3-3-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -12998,56 +13516,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlog_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlog/gen/f32-vlog-fma3-rational-3-3-div.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vlog_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlog/gen/f32-vlog-sse2-rational-3-3-div.c",
+    "src/src/f32-vlog/gen/f32-vlog-sse2fma-rational-3-3-div.c"
+  ]
 
-  source_set("f32-vlog_sse2-no-sse3") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlog_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vlog/gen/f32-vlog-sse2-rational-3-3-div.c",
-      "src/src/f32-vlog/gen/f32-vlog-sse2fma-rational-3-3-div.c",
+    "src/src/f32-vlog/gen/f32-vlog-sse2fma-rational-3-3-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13059,52 +13577,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlog_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlog/gen/f32-vlog-sse2-rational-3-3-div.c",
-        "src/src/f32-vlog/gen/f32-vlog-sse2fma-rational-3-3-div.c",
-      ]
+source_set("f32-vlog_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlog/gen/f32-vlog-scalar-rational-3-3-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vlog_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlog_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vlog/gen/f32-vlog-scalar-rational-3-3-div.c",
+      "src/src/f32-vlog/gen/f32-vlog-scalar-rational-3-3-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13116,53 +13634,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlog_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlog/gen/f32-vlog-scalar-rational-3-3-div.c",
-      ]
+source_set("f32-vlrelu_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlrelu/gen/f32-vlrelu-avx-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vlrelu_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlrelu_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vlrelu/gen/f32-vlrelu-avx-u16.c",
+      "src/src/f32-vlrelu/gen/f32-vlrelu-avx-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13174,53 +13697,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlrelu_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlrelu/gen/f32-vlrelu-avx-u16.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-vlrelu_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlrelu/gen/f32-vlrelu-avx512f-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vlrelu_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlrelu_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vlrelu/gen/f32-vlrelu-avx512f-u16.c",
+      "src/src/f32-vlrelu/gen/f32-vlrelu-avx512f-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13232,51 +13754,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlrelu_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlrelu/gen/f32-vlrelu-avx512f-u16.c",
-      ]
+source_set("f32-vlrelu_sse-no-sse2") {
+  cflags = [
+    "-mno-sse2",
+    "-msse"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlrelu/gen/f32-vlrelu-sse-u8.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vlrelu_sse-no-sse2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlrelu_sse-no-sse2_standalone") {
     cflags = [
       "-mno-sse2",
-      "-msse",
+    "-msse"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vlrelu/gen/f32-vlrelu-sse-u8.c",
+      "src/src/f32-vlrelu/gen/f32-vlrelu-sse-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13288,54 +13813,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlrelu_sse-no-sse2_standalone") {
-      cflags = [
-        "-mno-sse2",
-        "-msse",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlrelu/gen/f32-vlrelu-sse-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vlrelu_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlrelu/gen/f32-vlrelu-sse41-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vlrelu_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlrelu_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vlrelu/gen/f32-vlrelu-sse41-u8.c",
+      "src/src/f32-vlrelu/gen/f32-vlrelu-sse41-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13347,51 +13872,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlrelu_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlrelu/gen/f32-vlrelu-sse41-u8.c",
-      ]
+source_set("f32-vlrelu_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlrelu/gen/f32-vlrelu-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vlrelu_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlrelu_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vlrelu/gen/f32-vlrelu-scalar-u4.c",
+      "src/src/f32-vlrelu/gen/f32-vlrelu-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13403,51 +13929,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlrelu_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlrelu/gen/f32-vlrelu-scalar-u4.c",
-      ]
+source_set("f32-vmulcaddc_sse-no-sse2") {
+  cflags = [
+    "-mno-sse2",
+    "-msse"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c4-minmax-sse-2x.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vmulcaddc_sse-no-sse2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vmulcaddc_sse-no-sse2_standalone") {
     cflags = [
       "-mno-sse2",
-      "-msse",
+    "-msse"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c4-minmax-sse-2x.c",
+      "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c4-minmax-sse-2x.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13459,51 +13988,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vmulcaddc_sse-no-sse2_standalone") {
-      cflags = [
-        "-mno-sse2",
-        "-msse",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c4-minmax-sse-2x.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vmulcaddc_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c1-minmax-scalar-2x.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-vmulcaddc_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vmulcaddc_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c1-minmax-scalar-2x.c",
+      "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c1-minmax-scalar-2x.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13515,56 +14045,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vmulcaddc_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c1-minmax-scalar-2x.c",
-      ]
+source_set("f32-vrnd_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrnd/gen/f32-vrndd-avx-u16.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-avx-u16.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-avx-u16.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-avx-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vrnd_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrnd_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vrnd/gen/f32-vrndd-avx-u16.c",
-      "src/src/f32-vrnd/gen/f32-vrndne-avx-u16.c",
-      "src/src/f32-vrnd/gen/f32-vrndu-avx-u16.c",
-      "src/src/f32-vrnd/gen/f32-vrndz-avx-u16.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-avx-u16.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-avx-u16.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-avx-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13576,59 +14114,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrnd_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrnd/gen/f32-vrndd-avx-u16.c",
-        "src/src/f32-vrnd/gen/f32-vrndne-avx-u16.c",
-        "src/src/f32-vrnd/gen/f32-vrndu-avx-u16.c",
-        "src/src/f32-vrnd/gen/f32-vrndz-avx-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vrnd_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrnd/gen/f32-vrndd-avx512f-u16.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-avx512f-u16.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-avx512f-u16.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-avx512f-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vrnd_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrnd_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vrnd/gen/f32-vrndd-avx512f-u16.c",
-      "src/src/f32-vrnd/gen/f32-vrndne-avx512f-u16.c",
-      "src/src/f32-vrnd/gen/f32-vrndu-avx512f-u16.c",
-      "src/src/f32-vrnd/gen/f32-vrndz-avx512f-u16.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-avx512f-u16.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-avx512f-u16.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-avx512f-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13640,57 +14177,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrnd_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrnd/gen/f32-vrndd-avx512f-u16.c",
-        "src/src/f32-vrnd/gen/f32-vrndne-avx512f-u16.c",
-        "src/src/f32-vrnd/gen/f32-vrndu-avx512f-u16.c",
-        "src/src/f32-vrnd/gen/f32-vrndz-avx512f-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vrnd_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrnd/gen/f32-vrndd-sse2-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-sse2-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-sse2-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-sse2-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-vrnd_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrnd_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vrnd/gen/f32-vrndd-sse2-u8.c",
-      "src/src/f32-vrnd/gen/f32-vrndne-sse2-u8.c",
-      "src/src/f32-vrnd/gen/f32-vrndu-sse2-u8.c",
-      "src/src/f32-vrnd/gen/f32-vrndz-sse2-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-sse2-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-sse2-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-sse2-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13702,60 +14242,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrnd_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrnd/gen/f32-vrndd-sse2-u8.c",
-        "src/src/f32-vrnd/gen/f32-vrndne-sse2-u8.c",
-        "src/src/f32-vrnd/gen/f32-vrndu-sse2-u8.c",
-        "src/src/f32-vrnd/gen/f32-vrndz-sse2-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vrnd_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrnd/gen/f32-vrndd-sse41-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-sse41-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-sse41-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-sse41-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vrnd_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrnd_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vrnd/gen/f32-vrndd-sse41-u8.c",
-      "src/src/f32-vrnd/gen/f32-vrndne-sse41-u8.c",
-      "src/src/f32-vrnd/gen/f32-vrndu-sse41-u8.c",
-      "src/src/f32-vrnd/gen/f32-vrndz-sse41-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-sse41-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-sse41-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-sse41-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13767,57 +14307,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrnd_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrnd/gen/f32-vrndd-sse41-u8.c",
-        "src/src/f32-vrnd/gen/f32-vrndne-sse41-u8.c",
-        "src/src/f32-vrnd/gen/f32-vrndu-sse41-u8.c",
-        "src/src/f32-vrnd/gen/f32-vrndz-sse41-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vrnd_x64") {
+  cflags = [
 
-  source_set("f32-vrnd_x64") {
-    cflags = []
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrnd/gen/f32-vrndd-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-scalar-libm-u1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrnd_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vrnd/gen/f32-vrndd-scalar-libm-u1.c",
-      "src/src/f32-vrnd/gen/f32-vrndne-scalar-libm-u1.c",
-      "src/src/f32-vrnd/gen/f32-vrndu-scalar-libm-u1.c",
-      "src/src/f32-vrnd/gen/f32-vrndz-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-scalar-libm-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13829,57 +14370,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrnd_x64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrnd/gen/f32-vrndd-scalar-libm-u1.c",
-        "src/src/f32-vrnd/gen/f32-vrndne-scalar-libm-u1.c",
-        "src/src/f32-vrnd/gen/f32-vrndu-scalar-libm-u1.c",
-        "src/src/f32-vrnd/gen/f32-vrndz-scalar-libm-u1.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vrsqrt_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-avx-rsqrt.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-avx-sqrt.c"
+  ]
 
-  source_set("f32-vrsqrt_avx-no-avx2-no-f16c-no-fma") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrsqrt_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vrsqrt/gen/f32-vrsqrt-avx-rsqrt.c",
-      "src/src/f32-vrsqrt/gen/f32-vrsqrt-avx-sqrt.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-avx-sqrt.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13891,55 +14435,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrsqrt_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrsqrt/gen/f32-vrsqrt-avx-rsqrt.c",
-        "src/src/f32-vrsqrt/gen/f32-vrsqrt-avx-sqrt.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vrsqrt_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-avx512f-rsqrt.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-avx512f-sqrt.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vrsqrt_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrsqrt_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vrsqrt/gen/f32-vrsqrt-avx512f-rsqrt.c",
-      "src/src/f32-vrsqrt/gen/f32-vrsqrt-avx512f-sqrt.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-avx512f-sqrt.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -13951,53 +14494,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrsqrt_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrsqrt/gen/f32-vrsqrt-avx512f-rsqrt.c",
-        "src/src/f32-vrsqrt/gen/f32-vrsqrt-avx512f-sqrt.c",
-      ]
+source_set("f32-vrsqrt_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-sse2-rsqrt.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-sse2-sqrt.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vrsqrt_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrsqrt_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vrsqrt/gen/f32-vrsqrt-sse2-rsqrt.c",
-      "src/src/f32-vrsqrt/gen/f32-vrsqrt-sse2-sqrt.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-sse2-sqrt.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14009,53 +14555,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrsqrt_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrsqrt/gen/f32-vrsqrt-sse2-rsqrt.c",
-        "src/src/f32-vrsqrt/gen/f32-vrsqrt-sse2-sqrt.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vrsqrt_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-rsqrt-u1.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-sqrt.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-vrsqrt_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrsqrt_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-rsqrt-u1.c",
-      "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-sqrt.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-sqrt.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14067,54 +14614,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrsqrt_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-rsqrt-u1.c",
-        "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-sqrt.c",
-      ]
+source_set("f32-vsigmoid_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsigmoid/gen/f32-vsigmoid-avx-rr2-p5-nr2-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vsigmoid_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsigmoid_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsigmoid/gen/f32-vsigmoid-avx-rr2-p5-nr2-u16.c",
+      "src/src/f32-vsigmoid/gen/f32-vsigmoid-avx-rr2-p5-nr2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14126,53 +14677,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsigmoid_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsigmoid/gen/f32-vsigmoid-avx-rr2-p5-nr2-u16.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-vsigmoid_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsigmoid/gen/f32-vsigmoid-avx512f-rr2-lut32-p2-perm2-scalef-div-u64.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vsigmoid_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsigmoid_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsigmoid/gen/f32-vsigmoid-avx512f-rr2-lut32-p2-perm2-scalef-div-u64.c",
+      "src/src/f32-vsigmoid/gen/f32-vsigmoid-avx512f-rr2-lut32-p2-perm2-scalef-div-u64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14184,52 +14734,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsigmoid_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsigmoid/gen/f32-vsigmoid-avx512f-rr2-lut32-p2-perm2-scalef-div-u64.c",
-      ]
+source_set("f32-vsigmoid_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsigmoid/gen/f32-vsigmoid-avx2-rr1-p5-div-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vsigmoid_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsigmoid_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsigmoid/gen/f32-vsigmoid-avx2-rr1-p5-div-u16.c",
+      "src/src/f32-vsigmoid/gen/f32-vsigmoid-avx2-rr1-p5-div-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14241,55 +14795,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsigmoid_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsigmoid/gen/f32-vsigmoid-avx2-rr1-p5-div-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vsigmoid_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsigmoid/gen/f32-vsigmoid-sse2-rr2-lut64-p2-div-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vsigmoid_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsigmoid_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsigmoid/gen/f32-vsigmoid-sse2-rr2-lut64-p2-div-u8.c",
+      "src/src/f32-vsigmoid/gen/f32-vsigmoid-sse2-rr2-lut64-p2-div-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14301,54 +14854,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsigmoid_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsigmoid/gen/f32-vsigmoid-sse2-rr2-lut64-p2-div-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vsigmoid_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsigmoid/gen/f32-vsigmoid-sse41-rr2-lut64-p2-div-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vsigmoid_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsigmoid_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsigmoid/gen/f32-vsigmoid-sse41-rr2-lut64-p2-div-u8.c",
+      "src/src/f32-vsigmoid/gen/f32-vsigmoid-sse41-rr2-lut64-p2-div-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14360,51 +14913,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsigmoid_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsigmoid/gen/f32-vsigmoid-sse41-rr2-lut64-p2-div-u8.c",
-      ]
+source_set("f32-vsigmoid_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsigmoid/gen/f32-vsigmoid-scalar-rr2-lut64-p2-div-u2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vsigmoid_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsigmoid_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsigmoid/gen/f32-vsigmoid-scalar-rr2-lut64-p2-div-u2.c",
+      "src/src/f32-vsigmoid/gen/f32-vsigmoid-scalar-rr2-lut64-p2-div-u2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14416,53 +14970,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsigmoid_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsigmoid/gen/f32-vsigmoid-scalar-rr2-lut64-p2-div-u2.c",
-      ]
+source_set("f32-vsin_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsin/gen/f32-vsin-avx-rational-5-4-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vsin_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsin_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsin/gen/f32-vsin-avx-rational-5-4-div.c",
+      "src/src/f32-vsin/gen/f32-vsin-avx-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14474,53 +15033,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsin_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsin/gen/f32-vsin-avx-rational-5-4-div.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-vsin_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsin/gen/f32-vsin-avx512f-rational-5-4-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vsin_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsin_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsin/gen/f32-vsin-avx512f-rational-5-4-div.c",
+      "src/src/f32-vsin/gen/f32-vsin-avx512f-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14532,52 +15090,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsin_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsin/gen/f32-vsin-avx512f-rational-5-4-div.c",
-      ]
+source_set("f32-vsin_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsin/gen/f32-vsin-fma3-rational-5-4-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vsin_f16c-fma-no-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsin_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsin/gen/f32-vsin-fma3-rational-5-4-div.c",
+      "src/src/f32-vsin/gen/f32-vsin-fma3-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14589,56 +15151,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsin_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsin/gen/f32-vsin-fma3-rational-5-4-div.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vsin_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-  source_set("f32-vsin_sse2-no-sse3") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsin/gen/f32-vsin-sse2-rational-5-4-div.c",
+    "src/src/f32-vsin/gen/f32-vsin-sse2fma-rational-5-4-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsin_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vsin/gen/f32-vsin-sse2-rational-5-4-div.c",
-      "src/src/f32-vsin/gen/f32-vsin-sse2fma-rational-5-4-div.c",
+    "src/src/f32-vsin/gen/f32-vsin-sse2fma-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14650,52 +15212,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsin_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsin/gen/f32-vsin-sse2-rational-5-4-div.c",
-        "src/src/f32-vsin/gen/f32-vsin-sse2fma-rational-5-4-div.c",
-      ]
+source_set("f32-vsin_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsin/gen/f32-vsin-scalar-rational-5-4-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vsin_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsin_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsin/gen/f32-vsin-scalar-rational-5-4-div.c",
+      "src/src/f32-vsin/gen/f32-vsin-scalar-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14707,54 +15269,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsin_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsin/gen/f32-vsin-scalar-rational-5-4-div.c",
-      ]
+source_set("f32-vsqrt_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsqrt/gen/f32-vsqrt-avx-rsqrt.c",
+    "src/src/f32-vsqrt/gen/f32-vsqrt-avx-sqrt.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vsqrt_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsqrt_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vsqrt/gen/f32-vsqrt-avx-rsqrt.c",
-      "src/src/f32-vsqrt/gen/f32-vsqrt-avx-sqrt.c",
+    "src/src/f32-vsqrt/gen/f32-vsqrt-avx-sqrt.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14766,54 +15334,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsqrt_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsqrt/gen/f32-vsqrt-avx-rsqrt.c",
-        "src/src/f32-vsqrt/gen/f32-vsqrt-avx-sqrt.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-vsqrt_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsqrt/gen/f32-vsqrt-avx512f-rsqrt.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vsqrt_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsqrt_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsqrt/gen/f32-vsqrt-avx512f-rsqrt.c",
+      "src/src/f32-vsqrt/gen/f32-vsqrt-avx512f-rsqrt.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14825,52 +15391,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsqrt_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsqrt/gen/f32-vsqrt-avx512f-rsqrt.c",
-      ]
+source_set("f32-vsqrt_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsqrt/gen/f32-vsqrt-sse2-rsqrt.c",
+    "src/src/f32-vsqrt/gen/f32-vsqrt-sse2-sqrt.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vsqrt_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsqrt_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vsqrt/gen/f32-vsqrt-sse2-rsqrt.c",
-      "src/src/f32-vsqrt/gen/f32-vsqrt-sse2-sqrt.c",
+    "src/src/f32-vsqrt/gen/f32-vsqrt-sse2-sqrt.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14882,52 +15452,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsqrt_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsqrt/gen/f32-vsqrt-sse2-rsqrt.c",
-        "src/src/f32-vsqrt/gen/f32-vsqrt-sse2-sqrt.c",
-      ]
+source_set("f32-vsqrt_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsqrt/gen/f32-vsqrt-scalar-sqrt.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vsqrt_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsqrt_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsqrt/gen/f32-vsqrt-scalar-sqrt.c",
+      "src/src/f32-vsqrt/gen/f32-vsqrt-scalar-sqrt.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14939,53 +15509,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsqrt_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsqrt/gen/f32-vsqrt-scalar-sqrt.c",
-      ]
+source_set("f32-vtanh_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vtanh/gen/f32-vtanh-avx-rational-9-8-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vtanh_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vtanh_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vtanh/gen/f32-vtanh-avx-rational-9-8-div.c",
+      "src/src/f32-vtanh/gen/f32-vtanh-avx-rational-9-8-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -14997,53 +15572,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vtanh_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vtanh/gen/f32-vtanh-avx-rational-9-8-div.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f32-vtanh_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vtanh/gen/f32-vtanh-avx512f-rational-9-8-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vtanh_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vtanh_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vtanh/gen/f32-vtanh-avx512f-rational-9-8-div.c",
+      "src/src/f32-vtanh/gen/f32-vtanh-avx512f-rational-9-8-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15055,52 +15629,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vtanh_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vtanh/gen/f32-vtanh-avx512f-rational-9-8-div.c",
-      ]
+source_set("f32-vtanh_f16c-fma-no-avx2") {
+  cflags = [
+    "-mf16c",
+    "-mfma",
+    "-mno-avx2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vtanh/gen/f32-vtanh-fma3-rational-9-8-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vtanh_f16c-fma-no-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vtanh_f16c-fma-no-avx2_standalone") {
     cflags = [
       "-mf16c",
-      "-mfma",
-      "-mno-avx2",
+    "-mfma",
+    "-mno-avx2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vtanh/gen/f32-vtanh-fma3-rational-9-8-div.c",
+      "src/src/f32-vtanh/gen/f32-vtanh-fma3-rational-9-8-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15112,56 +15690,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vtanh_f16c-fma-no-avx2_standalone") {
-      cflags = [
-        "-mf16c",
-        "-mfma",
-        "-mno-avx2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vtanh/gen/f32-vtanh-fma3-rational-9-8-div.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vtanh_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vtanh/gen/f32-vtanh-sse2-rational-9-8-div.c",
+    "src/src/f32-vtanh/gen/f32-vtanh-sse2fma-rational-9-8-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-vtanh_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vtanh_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vtanh/gen/f32-vtanh-sse2-rational-9-8-div.c",
-      "src/src/f32-vtanh/gen/f32-vtanh-sse2fma-rational-9-8-div.c",
+    "src/src/f32-vtanh/gen/f32-vtanh-sse2fma-rational-9-8-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15173,52 +15751,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vtanh_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vtanh/gen/f32-vtanh-sse2-rational-9-8-div.c",
-        "src/src/f32-vtanh/gen/f32-vtanh-sse2fma-rational-9-8-div.c",
-      ]
+source_set("f32-vtanh_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vtanh/gen/f32-vtanh-scalar-rational-9-8-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vtanh_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vtanh_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vtanh/gen/f32-vtanh-scalar-rational-9-8-div.c",
+      "src/src/f32-vtanh/gen/f32-vtanh-scalar-rational-9-8-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15230,55 +15808,62 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vtanh_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vtanh/gen/f32-vtanh-scalar-rational-9-8-div.c",
-      ]
+source_set("f32-vunary_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vunary/gen/f32-vabs-avx.c",
+    "src/src/f32-vunary/gen/f32-vneg-avx.c",
+    "src/src/f32-vunary/gen/f32-vsqr-avx.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vunary_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vunary_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vunary/gen/f32-vabs-avx.c",
-      "src/src/f32-vunary/gen/f32-vneg-avx.c",
-      "src/src/f32-vunary/gen/f32-vsqr-avx.c",
+    "src/src/f32-vunary/gen/f32-vneg-avx.c",
+    "src/src/f32-vunary/gen/f32-vsqr-avx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15290,57 +15875,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vunary_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vunary/gen/f32-vabs-avx.c",
-        "src/src/f32-vunary/gen/f32-vneg-avx.c",
-        "src/src/f32-vunary/gen/f32-vsqr-avx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vunary_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vunary/gen/f32-vabs-avx512f.c",
+    "src/src/f32-vunary/gen/f32-vneg-avx512f.c",
+    "src/src/f32-vunary/gen/f32-vsqr-avx512f.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vunary_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vunary_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vunary/gen/f32-vabs-avx512f.c",
-      "src/src/f32-vunary/gen/f32-vneg-avx512f.c",
-      "src/src/f32-vunary/gen/f32-vsqr-avx512f.c",
+    "src/src/f32-vunary/gen/f32-vneg-avx512f.c",
+    "src/src/f32-vunary/gen/f32-vsqr-avx512f.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15352,55 +15936,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vunary_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vunary/gen/f32-vabs-avx512f.c",
-        "src/src/f32-vunary/gen/f32-vneg-avx512f.c",
-        "src/src/f32-vunary/gen/f32-vsqr-avx512f.c",
-      ]
+source_set("f32-vunary_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vunary/gen/f32-vabs-sse2.c",
+    "src/src/f32-vunary/gen/f32-vneg-sse2.c",
+    "src/src/f32-vunary/gen/f32-vsqr-sse2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vunary_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vunary_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vunary/gen/f32-vabs-sse2.c",
-      "src/src/f32-vunary/gen/f32-vneg-sse2.c",
-      "src/src/f32-vunary/gen/f32-vsqr-sse2.c",
+    "src/src/f32-vunary/gen/f32-vneg-sse2.c",
+    "src/src/f32-vunary/gen/f32-vsqr-sse2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15412,55 +15999,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vunary_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vunary/gen/f32-vabs-sse2.c",
-        "src/src/f32-vunary/gen/f32-vneg-sse2.c",
-        "src/src/f32-vunary/gen/f32-vsqr-sse2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vunary_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vunary/gen/f32-vabs-scalar.c",
+    "src/src/f32-vunary/gen/f32-vneg-scalar.c",
+    "src/src/f32-vunary/gen/f32-vsqr-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-vunary_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vunary_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vunary/gen/f32-vabs-scalar.c",
-      "src/src/f32-vunary/gen/f32-vneg-scalar.c",
-      "src/src/f32-vunary/gen/f32-vsqr-scalar.c",
+    "src/src/f32-vunary/gen/f32-vneg-scalar.c",
+    "src/src/f32-vunary/gen/f32-vsqr-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15472,70 +16060,92 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vunary_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vunary/gen/f32-vabs-scalar.c",
-        "src/src/f32-vunary/gen/f32-vneg-scalar.c",
-        "src/src/f32-vunary/gen/f32-vsqr-scalar.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("operators_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/operators/argmax-pooling-nhwc.c",
+    "src/src/operators/average-pooling-nhwc.c",
+    "src/src/operators/batch-matrix-multiply-nc.c",
+    "src/src/operators/binary-elementwise-nd.c",
+    "src/src/operators/constant-pad-nd.c",
+    "src/src/operators/convolution-nchw.c",
+    "src/src/operators/convolution-nhwc.c",
+    "src/src/operators/deconvolution-nhwc.c",
+    "src/src/operators/dynamic-fully-connected-nc.c",
+    "src/src/operators/fully-connected-nc.c",
+    "src/src/operators/max-pooling-nhwc.c",
+    "src/src/operators/pack-lh.c",
+    "src/src/operators/reduce-nd.c",
+    "src/src/operators/resize-bilinear-nchw.c",
+    "src/src/operators/resize-bilinear-nhwc.c",
+    "src/src/operators/rope-nthc.c",
+    "src/src/operators/slice-nd.c",
+    "src/src/operators/softmax-nc.c",
+    "src/src/operators/transpose-nd.c",
+    "src/src/operators/unary-elementwise-nc.c",
+    "src/src/operators/unpooling-nhwc.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("operators_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("operators_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/operators/argmax-pooling-nhwc.c",
-      "src/src/operators/average-pooling-nhwc.c",
-      "src/src/operators/batch-matrix-multiply-nc.c",
-      "src/src/operators/binary-elementwise-nd.c",
-      "src/src/operators/constant-pad-nd.c",
-      "src/src/operators/convolution-nchw.c",
-      "src/src/operators/convolution-nhwc.c",
-      "src/src/operators/deconvolution-nhwc.c",
-      "src/src/operators/dynamic-fully-connected-nc.c",
-      "src/src/operators/fully-connected-nc.c",
-      "src/src/operators/max-pooling-nhwc.c",
-      "src/src/operators/pack-lh.c",
-      "src/src/operators/reduce-nd.c",
-      "src/src/operators/resize-bilinear-nchw.c",
-      "src/src/operators/resize-bilinear-nhwc.c",
-      "src/src/operators/rope-nthc.c",
-      "src/src/operators/slice-nd.c",
-      "src/src/operators/softmax-nc.c",
-      "src/src/operators/transpose-nd.c",
-      "src/src/operators/unary-elementwise-nc.c",
-      "src/src/operators/unpooling-nhwc.c",
+    "src/src/operators/average-pooling-nhwc.c",
+    "src/src/operators/batch-matrix-multiply-nc.c",
+    "src/src/operators/binary-elementwise-nd.c",
+    "src/src/operators/constant-pad-nd.c",
+    "src/src/operators/convolution-nchw.c",
+    "src/src/operators/convolution-nhwc.c",
+    "src/src/operators/deconvolution-nhwc.c",
+    "src/src/operators/dynamic-fully-connected-nc.c",
+    "src/src/operators/fully-connected-nc.c",
+    "src/src/operators/max-pooling-nhwc.c",
+    "src/src/operators/pack-lh.c",
+    "src/src/operators/reduce-nd.c",
+    "src/src/operators/resize-bilinear-nchw.c",
+    "src/src/operators/resize-bilinear-nhwc.c",
+    "src/src/operators/rope-nthc.c",
+    "src/src/operators/slice-nd.c",
+    "src/src/operators/softmax-nc.c",
+    "src/src/operators/transpose-nd.c",
+    "src/src/operators/unary-elementwise-nc.c",
+    "src/src/operators/unpooling-nhwc.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15547,73 +16157,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("operators_x64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/operators/argmax-pooling-nhwc.c",
-        "src/src/operators/average-pooling-nhwc.c",
-        "src/src/operators/batch-matrix-multiply-nc.c",
-        "src/src/operators/binary-elementwise-nd.c",
-        "src/src/operators/constant-pad-nd.c",
-        "src/src/operators/convolution-nchw.c",
-        "src/src/operators/convolution-nhwc.c",
-        "src/src/operators/deconvolution-nhwc.c",
-        "src/src/operators/dynamic-fully-connected-nc.c",
-        "src/src/operators/fully-connected-nc.c",
-        "src/src/operators/max-pooling-nhwc.c",
-        "src/src/operators/pack-lh.c",
-        "src/src/operators/reduce-nd.c",
-        "src/src/operators/resize-bilinear-nchw.c",
-        "src/src/operators/resize-bilinear-nhwc.c",
-        "src/src/operators/rope-nthc.c",
-        "src/src/operators/slice-nd.c",
-        "src/src/operators/softmax-nc.c",
-        "src/src/operators/transpose-nd.c",
-        "src/src/operators/unary-elementwise-nc.c",
-        "src/src/operators/unpooling-nhwc.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qb4w-gemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-  source_set("qd8-f16-qb4w-gemm_f16c-fma-avx2") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-1x8c8-minmax-avx2.c",
+    "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-3x8c8-minmax-avx2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qb4w-gemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-1x8c8-minmax-avx2.c",
-      "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-3x8c8-minmax-avx2.c",
+    "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-3x8c8-minmax-avx2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15625,59 +16220,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qb4w-gemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-1x8c8-minmax-avx2.c",
-        "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-3x8c8-minmax-avx2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc4w-gemm_avx2-avxvnni-f16c-fma") {
+  cflags = [
+    "-mavx2",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x8c8-minmax-avxvnni-prfm.c",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-5x8c8-minmax-avxvnni-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qd8-f16-qc4w-gemm_avx2-avxvnni-f16c-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc4w-gemm_avx2-avxvnni-f16c-fma_standalone") {
     cflags = [
       "-mavx2",
-      "-mavxvnni",
-      "-mf16c",
-      "-mfma",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x8c8-minmax-avxvnni-prfm.c",
-      "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-5x8c8-minmax-avxvnni-prfm.c",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-5x8c8-minmax-avxvnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15689,59 +16285,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc4w-gemm_avx2-avxvnni-f16c-fma_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mavxvnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x8c8-minmax-avxvnni-prfm.c",
-        "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-5x8c8-minmax-avxvnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc4w-gemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x8c8-minmax-avx2-madd-prfm.c",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-4x8c8-minmax-avx2-madd-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qd8-f16-qc4w-gemm_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc4w-gemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x8c8-minmax-avx2-madd-prfm.c",
-      "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-4x8c8-minmax-avx2-madd-prfm.c",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-4x8c8-minmax-avx2-madd-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15753,63 +16348,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc4w-gemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x8c8-minmax-avx2-madd-prfm.c",
-        "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-4x8c8-minmax-avx2-madd-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x8c8-minmax-avx256skx-madd-prfm.c",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-8x8c8-minmax-avx256skx-madd-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qd8-f16-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x8c8-minmax-avx256skx-madd-prfm.c",
-      "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-8x8c8-minmax-avx256skx-madd-prfm.c",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-8x8c8-minmax-avx256skx-madd-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15821,69 +16419,68 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f16-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x8c8-minmax-avx256skx-madd-prfm.c",
-        "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-8x8c8-minmax-avx256skx-madd-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x8c8-minmax-avx256vnni.c",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-8x8c8-minmax-avx256vnni.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qd8-f16-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x8c8-minmax-avx256vnni.c",
-      "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-8x8c8-minmax-avx256vnni.c",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-8x8c8-minmax-avx256vnni.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15895,65 +16492,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f16-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x8c8-minmax-avx256vnni.c",
-        "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-8x8c8-minmax-avx256vnni.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc8w-gemm_avx2-avxvnni-f16c-fma") {
+  cflags = [
+    "-mavx2",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c8-minmax-avxvnni-prfm.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-5x8c8-minmax-avxvnni-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qd8-f16-qc8w-gemm_avx2-avxvnni-f16c-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-gemm_avx2-avxvnni-f16c-fma_standalone") {
     cflags = [
       "-mavx2",
-      "-mavxvnni",
-      "-mf16c",
-      "-mfma",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c8-minmax-avxvnni-prfm.c",
-      "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-5x8c8-minmax-avxvnni-prfm.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-5x8c8-minmax-avxvnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -15965,59 +16557,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc8w-gemm_avx2-avxvnni-f16c-fma_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mavxvnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c8-minmax-avxvnni-prfm.c",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-5x8c8-minmax-avxvnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc8w-gemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c8-minmax-avx2.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-3x8c8-minmax-avx2.c"
+  ]
 
-  source_set("qd8-f16-qc8w-gemm_f16c-fma-avx2") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-gemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c8-minmax-avx2.c",
-      "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-3x8c8-minmax-avx2.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-3x8c8-minmax-avx2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -16029,63 +16620,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc8w-gemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c8-minmax-avx2.c",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-3x8c8-minmax-avx2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c8-minmax-avx256skx.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-5x8c8-minmax-avx256skx.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c8-minmax-avx256skx.c",
-      "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-5x8c8-minmax-avx256skx.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-5x8c8-minmax-avx256skx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -16097,69 +16691,68 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c8-minmax-avx256skx.c",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-5x8c8-minmax-avx256skx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
+  ]
 
-  source_set(
-      "qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c8-minmax-avx256vnni.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-8x8c8-minmax-avx256vnni.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c8-minmax-avx256vnni.c",
-      "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-8x8c8-minmax-avx256vnni.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-8x8c8-minmax-avx256vnni.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -16171,73 +16764,74 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c8-minmax-avx256vnni.c",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-8x8c8-minmax-avx256vnni.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8") {
+  cflags = [
+    "-mamx-int8",
+    "-mamx-tile",
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-16x64c4-minmax-avx512amx.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x64c4-minmax-avx512amx.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone") {
     cflags = [
       "-mamx-int8",
-      "-mamx-tile",
-      "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
-      "-mgfni",
+    "-mamx-tile",
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-16x64c4-minmax-avx512amx.c",
-      "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x64c4-minmax-avx512amx.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x64c4-minmax-avx512amx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -16249,68 +16843,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f16-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone") {
-      cflags = [
-        "-mamx-int8",
-        "-mamx-tile",
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-        "-mgfni",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-16x64c4-minmax-avx512amx.c",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x64c4-minmax-avx512amx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc8w-igemm_avx2-avxvnni-f16c-fma") {
+  cflags = [
+    "-mavx2",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c8-minmax-avxvnni-prfm.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-5x8c8-minmax-avxvnni-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f16-qc8w-igemm_avx2-avxvnni-f16c-fma") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-igemm_avx2-avxvnni-f16c-fma_standalone") {
     cflags = [
       "-mavx2",
-      "-mavxvnni",
-      "-mf16c",
-      "-mfma",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c8-minmax-avxvnni-prfm.c",
-      "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-5x8c8-minmax-avxvnni-prfm.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-5x8c8-minmax-avxvnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -16322,59 +16908,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc8w-igemm_avx2-avxvnni-f16c-fma_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mavxvnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c8-minmax-avxvnni-prfm.c",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-5x8c8-minmax-avxvnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc8w-igemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c8-minmax-avx2.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-3x8c8-minmax-avx2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qd8-f16-qc8w-igemm_f16c-fma-avx2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-igemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c8-minmax-avx2.c",
-      "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-3x8c8-minmax-avx2.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-3x8c8-minmax-avx2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -16386,63 +16971,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc8w-igemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c8-minmax-avx2.c",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-3x8c8-minmax-avx2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c8-minmax-avx256skx.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-5x8c8-minmax-avx256skx.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c8-minmax-avx256skx.c",
-      "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-5x8c8-minmax-avx256skx.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-5x8c8-minmax-avx256skx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -16454,69 +17042,68 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c8-minmax-avx256skx.c",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-5x8c8-minmax-avx256skx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set(
-      "qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+source_set("qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c8-minmax-avx256vnni.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-8x8c8-minmax-avx256vnni.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c8-minmax-avx256vnni.c",
-      "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-8x8c8-minmax-avx256vnni.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-8x8c8-minmax-avx256vnni.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -16528,73 +17115,74 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c8-minmax-avx256vnni.c",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-8x8c8-minmax-avx256vnni.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8") {
+  cflags = [
+    "-mamx-int8",
+    "-mamx-tile",
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-16x64c4-minmax-avx512amx.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x64c4-minmax-avx512amx.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone") {
     cflags = [
       "-mamx-int8",
-      "-mamx-tile",
-      "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
-      "-mgfni",
+    "-mamx-tile",
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-16x64c4-minmax-avx512amx.c",
-      "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x64c4-minmax-avx512amx.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x64c4-minmax-avx512amx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -16606,68 +17194,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f16-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone") {
-      cflags = [
-        "-mamx-int8",
-        "-mamx-tile",
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-        "-mgfni",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-16x64c4-minmax-avx512amx.c",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x64c4-minmax-avx512amx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qb4w-gemm_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4c8-minmax-avx-ld128.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4c8-minmax-avx-ld128.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qd8-f32-qb4w-gemm_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qb4w-gemm_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4c8-minmax-avx-ld128.c",
-      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4c8-minmax-avx-ld128.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4c8-minmax-avx-ld128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -16679,59 +17259,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qb4w-gemm_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4c8-minmax-avx-ld128.c",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4c8-minmax-avx-ld128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qb4w-gemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x8c8-minmax-avx2.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-3x8c8-minmax-avx2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qb4w-gemm_f16c-fma-avx2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qb4w-gemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x8c8-minmax-avx2.c",
-      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-3x8c8-minmax-avx2.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-3x8c8-minmax-avx2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -16743,64 +17322,68 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qb4w-gemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x8c8-minmax-avx2.c",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-3x8c8-minmax-avx2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qb4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16c8-minmax-avx512vnni-prfm.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-8x16c8-minmax-avx512vnni-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qd8-f32-qb4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qb4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16c8-minmax-avx512vnni-prfm.c",
-      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-8x16c8-minmax-avx512vnni-prfm.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-8x16c8-minmax-avx512vnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -16812,71 +17395,70 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f32-qb4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16c8-minmax-avx512vnni-prfm.c",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-8x16c8-minmax-avx512vnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qb4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-14x16c8-minmax-avx512vnnigfni-prfm.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16c8-minmax-avx512vnnigfni-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "qd8-f32-qb4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qb4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
-      "-mgfni",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-14x16c8-minmax-avx512vnnigfni-prfm.c",
-      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16c8-minmax-avx512vnnigfni-prfm.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16c8-minmax-avx512vnnigfni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -16888,64 +17470,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f32-qb4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-        "-mgfni",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-14x16c8-minmax-avx512vnnigfni-prfm.c",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16c8-minmax-avx512vnnigfni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qb4w-gemm_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4c8-minmax-sse2-ld128.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4c8-minmax-sse2-ld128.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qd8-f32-qb4w-gemm_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qb4w-gemm_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4c8-minmax-sse2-ld128.c",
-      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4c8-minmax-sse2-ld128.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4c8-minmax-sse2-ld128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -16957,56 +17531,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qb4w-gemm_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4c8-minmax-sse2-ld128.c",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4c8-minmax-sse2-ld128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qb4w-gemm_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4c8-minmax-sse41-ld128.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-3x4c8-minmax-sse41-ld128.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qd8-f32-qb4w-gemm_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qb4w-gemm_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4c8-minmax-sse41-ld128.c",
-      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-3x4c8-minmax-sse41-ld128.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-3x4c8-minmax-sse41-ld128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17018,53 +17592,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qb4w-gemm_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4c8-minmax-sse41-ld128.c",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-3x4c8-minmax-sse41-ld128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qb4w-gemm_x64") {
+  cflags = [
 
-  source_set("qd8-f32-qb4w-gemm_x64") {
-    cflags = []
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qb4w-gemm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4-minmax-scalar.c",
-      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4-minmax-scalar.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17076,55 +17651,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qb4w-gemm_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4-minmax-scalar.c",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4-minmax-scalar.c",
-      ]
+source_set("qd8-f32-qc4w-gemm_avx2-avxvnni-f16c-fma") {
+  cflags = [
+    "-mavx2",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x8c8-minmax-avxvnni-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-5x8c8-minmax-avxvnni-prfm.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qd8-f32-qc4w-gemm_avx2-avxvnni-f16c-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_avx2-avxvnni-f16c-fma_standalone") {
     cflags = [
       "-mavx2",
-      "-mavxvnni",
-      "-mf16c",
-      "-mfma",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x8c8-minmax-avxvnni-prfm.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-5x8c8-minmax-avxvnni-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-5x8c8-minmax-avxvnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17136,59 +17716,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc4w-gemm_avx2-avxvnni-f16c-fma_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mavxvnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x8c8-minmax-avxvnni-prfm.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-5x8c8-minmax-avxvnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc4w-gemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x8c8-minmax-avx2-madd-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x8c8-minmax-avx2-madd-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qd8-f32-qc4w-gemm_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x8c8-minmax-avx2-madd-prfm.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x8c8-minmax-avx2-madd-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x8c8-minmax-avx2-madd-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17200,65 +17779,70 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc4w-gemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x8c8-minmax-avx2-madd-prfm.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x8c8-minmax-avx2-madd-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c8-minmax-avx512skx-madd-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x8c8-minmax-avx256skx-madd-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-8x16c8-minmax-avx512skx-madd-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-8x8c8-minmax-avx256skx-madd-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c8-minmax-avx512skx-madd-prfm.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x8c8-minmax-avx256skx-madd-prfm.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-8x16c8-minmax-avx512skx-madd-prfm.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-8x8c8-minmax-avx256skx-madd-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x8c8-minmax-avx256skx-madd-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-8x16c8-minmax-avx512skx-madd-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-8x8c8-minmax-avx256skx-madd-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17270,71 +17854,68 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c8-minmax-avx512skx-madd-prfm.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x8c8-minmax-avx256skx-madd-prfm.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-8x16c8-minmax-avx512skx-madd-prfm.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-8x8c8-minmax-avx256skx-madd-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c8-minmax-avx512vnni-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-8x16c8-minmax-avx512vnni-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c8-minmax-avx512vnni-prfm.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-8x16c8-minmax-avx512vnni-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-8x16c8-minmax-avx512vnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17346,71 +17927,70 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c8-minmax-avx512vnni-prfm.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-8x16c8-minmax-avx512vnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-14x16c8-minmax-avx512vnnigfni-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c8-minmax-avx512vnnigfni-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
-      "-mgfni",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-14x16c8-minmax-avx512vnnigfni-prfm.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c8-minmax-avx512vnnigfni-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c8-minmax-avx512vnnigfni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17422,74 +18002,74 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-        "-mgfni",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-14x16c8-minmax-avx512vnnigfni-prfm.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c8-minmax-avx512vnnigfni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8") {
+  cflags = [
+    "-mamx-int8",
+    "-mamx-tile",
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-16x64c4-minmax-avx512amx.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x64c4-minmax-avx512amx.c"
+  ]
 
-  source_set(
-      "qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone") {
     cflags = [
       "-mamx-int8",
-      "-mamx-tile",
-      "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
-      "-mgfni",
+    "-mamx-tile",
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-16x64c4-minmax-avx512amx.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x64c4-minmax-avx512amx.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x64c4-minmax-avx512amx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17501,66 +18081,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f32-qc4w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone") {
-      cflags = [
-        "-mamx-int8",
-        "-mamx-tile",
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-        "-mgfni",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-16x64c4-minmax-avx512amx.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x64c4-minmax-avx512amx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc4w-gemm_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4c8-minmax-sse2-ld128.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4c8-minmax-sse2-ld128.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qd8-f32-qc4w-gemm_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4c8-minmax-sse2-ld128.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4c8-minmax-sse2-ld128.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4c8-minmax-sse2-ld128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17572,56 +18142,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc4w-gemm_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4c8-minmax-sse2-ld128.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4c8-minmax-sse2-ld128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc4w-gemm_ssse3-no-sse4.1") {
+  cflags = [
+    "-mno-sse4.1",
+    "-mssse3"
+  ]
 
-  source_set("qd8-f32-qc4w-gemm_ssse3-no-sse4.1") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4c8-minmax-ssse3-madd-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-5x4c8-minmax-ssse3-madd-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_ssse3-no-sse4.1_standalone") {
     cflags = [
       "-mno-sse4.1",
-      "-mssse3",
+    "-mssse3"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4c8-minmax-ssse3-madd-prfm.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-5x4c8-minmax-ssse3-madd-prfm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-5x4c8-minmax-ssse3-madd-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17633,53 +18203,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc4w-gemm_ssse3-no-sse4.1_standalone") {
-      cflags = [
-        "-mno-sse4.1",
-        "-mssse3",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4c8-minmax-ssse3-madd-prfm.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-5x4c8-minmax-ssse3-madd-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc4w-gemm_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc4w-gemm_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4-minmax-scalar.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17691,55 +18262,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc4w-gemm_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4-minmax-scalar.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4-minmax-scalar.c",
-      ]
+source_set("qd8-f32-qc8w-gemm_avx2-avxvnni-f16c-fma") {
+  cflags = [
+    "-mavx2",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c8-minmax-avxvnni-prfm.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-5x8c8-minmax-avxvnni-prfm.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qd8-f32-qc8w-gemm_avx2-avxvnni-f16c-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_avx2-avxvnni-f16c-fma_standalone") {
     cflags = [
       "-mavx2",
-      "-mavxvnni",
-      "-mf16c",
-      "-mfma",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c8-minmax-avxvnni-prfm.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-5x8c8-minmax-avxvnni-prfm.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-5x8c8-minmax-avxvnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17751,59 +18327,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-gemm_avx2-avxvnni-f16c-fma_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mavxvnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c8-minmax-avxvnni-prfm.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-5x8c8-minmax-avxvnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-gemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c8-minmax-avx2.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x8c8-minmax-avx2.c"
+  ]
 
-  source_set("qd8-f32-qc8w-gemm_f16c-fma-avx2") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c8-minmax-avx2.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x8c8-minmax-avx2.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x8c8-minmax-avx2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17815,65 +18390,70 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-gemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c8-minmax-avx2.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x8c8-minmax-avx2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x16c8-minmax-avx512skx-prfm.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c8-minmax-avx256skx.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-8x16c8-minmax-avx512skx-prfm.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-8x8c8-minmax-avx256skx.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x16c8-minmax-avx512skx-prfm.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c8-minmax-avx256skx.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-8x16c8-minmax-avx512skx-prfm.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-8x8c8-minmax-avx256skx.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c8-minmax-avx256skx.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-8x16c8-minmax-avx512skx-prfm.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-8x8c8-minmax-avx256skx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17885,71 +18465,68 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x16c8-minmax-avx512skx-prfm.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c8-minmax-avx256skx.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-8x16c8-minmax-avx512skx-prfm.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-8x8c8-minmax-avx256skx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
+  ]
 
-  source_set(
-      "qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-10x16c8-minmax-avx512vnni-prfm.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x16c8-minmax-avx512vnni-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-10x16c8-minmax-avx512vnni-prfm.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x16c8-minmax-avx512vnni-prfm.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x16c8-minmax-avx512vnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -17961,73 +18538,74 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-10x16c8-minmax-avx512vnni-prfm.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x16c8-minmax-avx512vnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8") {
+  cflags = [
+    "-mamx-int8",
+    "-mamx-tile",
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-16x64c4-minmax-avx512amx.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x64c4-minmax-avx512amx.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone") {
     cflags = [
       "-mamx-int8",
-      "-mamx-tile",
-      "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
-      "-mgfni",
+    "-mamx-tile",
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-16x64c4-minmax-avx512amx.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x64c4-minmax-avx512amx.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x64c4-minmax-avx512amx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18039,66 +18617,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f32-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone") {
-      cflags = [
-        "-mamx-int8",
-        "-mamx-tile",
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-        "-mgfni",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-16x64c4-minmax-avx512amx.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x64c4-minmax-avx512amx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-gemm_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4c8-minmax-sse2-ld64.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4c8-minmax-sse2-ld64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc8w-gemm_sse2-no-sse3") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4c8-minmax-sse2-ld64.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4c8-minmax-sse2-ld64.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4c8-minmax-sse2-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18110,56 +18678,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-gemm_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4c8-minmax-sse2-ld64.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4c8-minmax-sse2-ld64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-gemm_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4c8-minmax-sse41-ld64.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4c8-minmax-sse41-ld64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qd8-f32-qc8w-gemm_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4c8-minmax-sse41-ld64.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4c8-minmax-sse41-ld64.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4c8-minmax-sse41-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18171,54 +18739,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-gemm_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4c8-minmax-sse41-ld64.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4c8-minmax-sse41-ld64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-gemm_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x2-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc8w-gemm_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x2-minmax-scalar.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4-minmax-scalar.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18230,56 +18800,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-gemm_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x2-minmax-scalar.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4-minmax-scalar.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4-minmax-scalar.c",
-      ]
+source_set("qd8-f32-qc8w-igemm_avx2-avxvnni-f16c-fma") {
+  cflags = [
+    "-mavx2",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c8-minmax-avxvnni-prfm.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-5x8c8-minmax-avxvnni-prfm.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qd8-f32-qc8w-igemm_avx2-avxvnni-f16c-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_avx2-avxvnni-f16c-fma_standalone") {
     cflags = [
       "-mavx2",
-      "-mavxvnni",
-      "-mf16c",
-      "-mfma",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c8-minmax-avxvnni-prfm.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-5x8c8-minmax-avxvnni-prfm.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-5x8c8-minmax-avxvnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18291,59 +18865,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-igemm_avx2-avxvnni-f16c-fma_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mavxvnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c8-minmax-avxvnni-prfm.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-5x8c8-minmax-avxvnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-igemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c8-minmax-avx2.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x8c8-minmax-avx2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qd8-f32-qc8w-igemm_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c8-minmax-avx2.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x8c8-minmax-avx2.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x8c8-minmax-avx2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18355,65 +18928,70 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-igemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c8-minmax-avx2.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x8c8-minmax-avx2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x16c8-minmax-avx512skx-prfm.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c8-minmax-avx256skx.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-8x16c8-minmax-avx512skx-prfm.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-8x8c8-minmax-avx256skx.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x16c8-minmax-avx512skx-prfm.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c8-minmax-avx256skx.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-8x16c8-minmax-avx512skx-prfm.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-8x8c8-minmax-avx256skx.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c8-minmax-avx256skx.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-8x16c8-minmax-avx512skx-prfm.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-8x8c8-minmax-avx256skx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18425,71 +19003,68 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x16c8-minmax-avx512skx-prfm.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c8-minmax-avx256skx.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-8x16c8-minmax-avx512skx-prfm.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-8x8c8-minmax-avx256skx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-10x16c8-minmax-avx512vnni-prfm.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x16c8-minmax-avx512vnni-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-10x16c8-minmax-avx512vnni-prfm.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x16c8-minmax-avx512vnni-prfm.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x16c8-minmax-avx512vnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18501,73 +19076,74 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-10x16c8-minmax-avx512vnni-prfm.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x16c8-minmax-avx512vnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8") {
+  cflags = [
+    "-mamx-int8",
+    "-mamx-tile",
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-16x64c4-minmax-avx512amx.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x64c4-minmax-avx512amx.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone") {
     cflags = [
       "-mamx-int8",
-      "-mamx-tile",
-      "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
-      "-mgfni",
+    "-mamx-tile",
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-16x64c4-minmax-avx512amx.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x64c4-minmax-avx512amx.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x64c4-minmax-avx512amx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18579,66 +19155,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qd8-f32-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone") {
-      cflags = [
-        "-mamx-int8",
-        "-mamx-tile",
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-        "-mgfni",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-16x64c4-minmax-avx512amx.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x64c4-minmax-avx512amx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qd8-f32-qc8w-igemm_sse2-no-sse3") {
+source_set("qd8-f32-qc8w-igemm_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4c8-minmax-sse2-ld64.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4c8-minmax-sse2-ld64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4c8-minmax-sse2-ld64.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4c8-minmax-sse2-ld64.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4c8-minmax-sse2-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18650,56 +19216,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-igemm_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4c8-minmax-sse2-ld64.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4c8-minmax-sse2-ld64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-igemm_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4c8-minmax-sse41-ld64.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4c8-minmax-sse41-ld64.c"
+  ]
 
-  source_set("qd8-f32-qc8w-igemm_sse4.1-no-sse4.2") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4c8-minmax-sse41-ld64.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4c8-minmax-sse41-ld64.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4c8-minmax-sse41-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18711,54 +19277,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-igemm_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4c8-minmax-sse41-ld64.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4c8-minmax-sse41-ld64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-igemm_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x2-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc8w-igemm_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x2-minmax-scalar.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4-minmax-scalar.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18770,56 +19338,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-igemm_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x2-minmax-scalar.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4-minmax-scalar.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4-minmax-scalar.c",
-      ]
+source_set("qs8-dwconv_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p16c-minmax-fp32-avx-mul16-add16.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p16c-minmax-fp32-avx-mul16-add16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-dwconv_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-dwconv_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-dwconv/gen/qs8-dwconv-25p16c-minmax-fp32-avx-mul16-add16.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-9p16c-minmax-fp32-avx-mul16-add16.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p16c-minmax-fp32-avx-mul16-add16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18831,59 +19403,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-dwconv_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-25p16c-minmax-fp32-avx-mul16-add16.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-9p16c-minmax-fp32-avx-mul16-add16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-dwconv_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p16c-minmax-fp32-avx2-mul32.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p16c-minmax-fp32-avx2-mul32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-dwconv_f16c-fma-avx2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-dwconv_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-dwconv/gen/qs8-dwconv-25p16c-minmax-fp32-avx2-mul32.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-9p16c-minmax-fp32-avx2-mul32.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p16c-minmax-fp32-avx2-mul32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18895,63 +19466,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-dwconv_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-25p16c-minmax-fp32-avx2-mul32.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-9p16c-minmax-fp32-avx2-mul32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p32c-minmax-fp32-avx512skx-mul32.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p32c-minmax-fp32-avx512skx-mul32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "qs8-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-dwconv/gen/qs8-dwconv-25p32c-minmax-fp32-avx512skx-mul32.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-9p32c-minmax-fp32-avx512skx-mul32.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p32c-minmax-fp32-avx512skx-mul32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -18963,62 +19537,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-25p32c-minmax-fp32-avx512skx-mul32.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-9p32c-minmax-fp32-avx512skx-mul32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-dwconv_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p8c-minmax-fp32-sse2-mul16-add16.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p8c-minmax-fp32-sse2-mul16-add16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-dwconv_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-dwconv_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-dwconv/gen/qs8-dwconv-25p8c-minmax-fp32-sse2-mul16-add16.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-9p8c-minmax-fp32-sse2-mul16-add16.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p8c-minmax-fp32-sse2-mul16-add16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19030,56 +19598,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-dwconv_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-25p8c-minmax-fp32-sse2-mul16-add16.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-9p8c-minmax-fp32-sse2-mul16-add16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-dwconv_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p8c-minmax-fp32-sse41-mul16-add16.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p8c-minmax-fp32-sse41-mul16-add16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-dwconv_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-dwconv_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-dwconv/gen/qs8-dwconv-25p8c-minmax-fp32-sse41-mul16-add16.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-9p8c-minmax-fp32-sse41-mul16-add16.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p8c-minmax-fp32-sse41-mul16-add16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19091,55 +19659,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-dwconv_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-25p8c-minmax-fp32-sse41-mul16-add16.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-9p8c-minmax-fp32-sse41-mul16-add16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-dwconv_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-dwconv_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-dwconv_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-dwconv/gen/qs8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19151,55 +19722,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-dwconv_x64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-f16-vcvt_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-f16-vcvt/gen/qs8-f16-vcvt-avx2-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-f16-vcvt_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-f16-vcvt_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-f16-vcvt/gen/qs8-f16-vcvt-avx2-u16.c",
+      "src/src/qs8-f16-vcvt/gen/qs8-f16-vcvt-avx2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19211,57 +19783,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-f16-vcvt_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-f16-vcvt/gen/qs8-f16-vcvt-avx2-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-f32-vcvt_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-avx-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-f32-vcvt_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-f32-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-avx-u32.c",
+      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-avx-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19273,57 +19846,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-f32-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-avx-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-f32-vcvt_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-avx2-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-f32-vcvt_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-f32-vcvt_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-avx2-u16.c",
+      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-avx2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19335,61 +19907,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-f32-vcvt_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-avx2-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-avx512skx-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "qs8-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-avx512skx-u32.c",
+      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-avx512skx-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19401,60 +19976,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-avx512skx-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-f32-vcvt_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-sse2-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-f32-vcvt_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-f32-vcvt_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-sse2-u32.c",
+      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-sse2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19466,54 +20035,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-f32-vcvt_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-sse2-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-f32-vcvt_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-sse41-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-f32-vcvt_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-f32-vcvt_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-sse41-u16.c",
+      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-sse41-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19525,51 +20094,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-f32-vcvt_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-sse41-u16.c",
-      ]
+source_set("qs8-f32-vcvt_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-f32-vcvt_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-f32-vcvt_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-scalar-u4.c",
+      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19581,54 +20151,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-f32-vcvt_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-scalar-u4.c",
-      ]
+source_set("qs8-packw_avx2-avxvnni-f16c-fma") {
+  cflags = [
+    "-mavx2",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avxvnni-prfm.c",
+    "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avxvnni.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-packw_avx2-avxvnni-f16c-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-packw_avx2-avxvnni-f16c-fma_standalone") {
     cflags = [
       "-mavx2",
-      "-mavxvnni",
-      "-mf16c",
-      "-mfma",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avxvnni-prfm.c",
-      "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avxvnni.c",
+    "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avxvnni.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19640,58 +20216,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-packw_avx2-avxvnni-f16c-fma_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mavxvnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avxvnni-prfm.c",
-        "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avxvnni.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-packw_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avx2-madd.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-packw_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-packw_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avx2-madd.c",
+      "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avx2-madd.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19703,64 +20277,70 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-packw_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avx2-madd.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-packw_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-avx256vnni-prfm.c",
+    "src/src/qs8-packw/gen/qs8-packw-x64c4-gemm-goi-avx256vnni-prfm.c",
+    "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avx256vnni-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "qs8-packw_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-packw_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-avx256vnni-prfm.c",
-      "src/src/qs8-packw/gen/qs8-packw-x64c4-gemm-goi-avx256vnni-prfm.c",
-      "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avx256vnni-prfm.c",
+    "src/src/qs8-packw/gen/qs8-packw-x64c4-gemm-goi-avx256vnni-prfm.c",
+    "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avx256vnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19772,63 +20352,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-packw_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-avx256vnni-prfm.c",
-        "src/src/qs8-packw/gen/qs8-packw-x64c4-gemm-goi-avx256vnni-prfm.c",
-        "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-goi-avx256vnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-packw_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-gio-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-goi-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-gio-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-packw_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-packw_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-scalar.c",
-      "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-gio-scalar.c",
-      "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-goi-scalar.c",
-      "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-gio-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-gio-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-goi-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-gio-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19840,57 +20415,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-packw_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-scalar.c",
-        "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-gio-scalar.c",
-        "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-goi-scalar.c",
-        "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-gio-scalar.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc4w-gemm_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-1x4c8-minmax-avx-madd-prfm.c",
+    "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-5x4c8-minmax-avx-madd-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-qc4w-gemm_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc4w-gemm_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-1x4c8-minmax-avx-madd-prfm.c",
-      "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-5x4c8-minmax-avx-madd-prfm.c",
+    "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-5x4c8-minmax-avx-madd-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19902,59 +20480,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc4w-gemm_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-1x4c8-minmax-avx-madd-prfm.c",
-        "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-5x4c8-minmax-avx-madd-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc4w-gemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-1x8c8-minmax-avx2-madd-prfm.c",
+    "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-7x8c8-minmax-avx2-madd-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-qc4w-gemm_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc4w-gemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-1x8c8-minmax-avx2-madd-prfm.c",
-      "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-7x8c8-minmax-avx2-madd-prfm.c",
+    "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-7x8c8-minmax-avx2-madd-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -19966,57 +20543,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc4w-gemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-1x8c8-minmax-avx2-madd-prfm.c",
-        "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-7x8c8-minmax-avx2-madd-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc4w-gemm_ssse3-no-sse4.1") {
+  cflags = [
+    "-mno-sse4.1",
+    "-mssse3"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-1x4c8-minmax-ssse3-madd-prfm.c",
+    "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-5x4c8-minmax-ssse3-madd-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-qc4w-gemm_ssse3-no-sse4.1") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc4w-gemm_ssse3-no-sse4.1_standalone") {
     cflags = [
       "-mno-sse4.1",
-      "-mssse3",
+    "-mssse3"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-1x4c8-minmax-ssse3-madd-prfm.c",
-      "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-5x4c8-minmax-ssse3-madd-prfm.c",
+    "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-5x4c8-minmax-ssse3-madd-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20028,52 +20604,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc4w-gemm_ssse3-no-sse4.1_standalone") {
-      cflags = [
-        "-mno-sse4.1",
-        "-mssse3",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-1x4c8-minmax-ssse3-madd-prfm.c",
-        "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-5x4c8-minmax-ssse3-madd-prfm.c",
-      ]
+source_set("qs8-qc4w-gemm_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc4w-gemm/qs8-qc4w-gemm-1x2-minmax-fp32-scalar-lrintf.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-qc4w-gemm_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc4w-gemm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc4w-gemm/qs8-qc4w-gemm-1x2-minmax-fp32-scalar-lrintf.c",
+      "src/src/qs8-qc4w-gemm/qs8-qc4w-gemm-1x2-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20085,55 +20661,62 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc4w-gemm_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc4w-gemm/qs8-qc4w-gemm-1x2-minmax-fp32-scalar-lrintf.c",
-      ]
+source_set("qs8-qc8w-dwconv_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p16c-minmax-fp32-avx-mul16-add16.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-avx-mul16-add16.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-avx-mul16-add16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-qc8w-dwconv_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-dwconv_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p16c-minmax-fp32-avx-mul16-add16.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-avx-mul16-add16.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-avx-mul16-add16.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-avx-mul16-add16.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-avx-mul16-add16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20145,61 +20728,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-dwconv_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p16c-minmax-fp32-avx-mul16-add16.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-avx-mul16-add16.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-avx-mul16-add16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-dwconv_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p16c-minmax-fp32-avx2-mul32.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-avx2-mul32.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-avx2-mul32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-qc8w-dwconv_f16c-fma-avx2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-dwconv_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p16c-minmax-fp32-avx2-mul32.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-avx2-mul32.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-avx2-mul32.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-avx2-mul32.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-avx2-mul32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20211,65 +20793,68 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-dwconv_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p16c-minmax-fp32-avx2-mul32.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-avx2-mul32.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-avx2-mul32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p32c-minmax-fp32-avx512skx-mul32.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p32c-minmax-fp32-avx512skx-mul32.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p32c-minmax-fp32-avx512skx-mul32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "qs8-qc8w-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p32c-minmax-fp32-avx512skx-mul32.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p32c-minmax-fp32-avx512skx-mul32.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p32c-minmax-fp32-avx512skx-mul32.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p32c-minmax-fp32-avx512skx-mul32.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p32c-minmax-fp32-avx512skx-mul32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20281,64 +20866,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-qc8w-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p32c-minmax-fp32-avx512skx-mul32.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p32c-minmax-fp32-avx512skx-mul32.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p32c-minmax-fp32-avx512skx-mul32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-dwconv_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8c-minmax-fp32-sse2-mul16.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p8c-minmax-fp32-sse2-mul16.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p8c-minmax-fp32-sse2-mul16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-qc8w-dwconv_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-dwconv_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8c-minmax-fp32-sse2-mul16.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p8c-minmax-fp32-sse2-mul16.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p8c-minmax-fp32-sse2-mul16.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p8c-minmax-fp32-sse2-mul16.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p8c-minmax-fp32-sse2-mul16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20350,58 +20929,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-dwconv_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8c-minmax-fp32-sse2-mul16.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p8c-minmax-fp32-sse2-mul16.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p8c-minmax-fp32-sse2-mul16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-dwconv_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8c-minmax-fp32-sse41-mul16.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p8c-minmax-fp32-sse41-mul16.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p8c-minmax-fp32-sse41-mul16.c"
+  ]
 
-  source_set("qs8-qc8w-dwconv_sse4.1-no-sse4.2") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-dwconv_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8c-minmax-fp32-sse41-mul16.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p8c-minmax-fp32-sse41-mul16.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p8c-minmax-fp32-sse41-mul16.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p8c-minmax-fp32-sse41-mul16.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p8c-minmax-fp32-sse41-mul16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20413,58 +20992,62 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-dwconv_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8c-minmax-fp32-sse41-mul16.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p8c-minmax-fp32-sse41-mul16.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p8c-minmax-fp32-sse41-mul16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-dwconv_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-qc8w-dwconv_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-dwconv_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p2c-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20476,59 +21059,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-dwconv_x64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p2c-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-gemm_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-  source_set("qs8-qc8w-gemm_avx-no-avx2-no-f16c-no-fma") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4c8-minmax-fp32-avx-ld128.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x4c8-minmax-fp32-avx-ld128.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4c8-minmax-fp32-avx-ld128.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x4c8-minmax-fp32-avx-ld128.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x4c8-minmax-fp32-avx-ld128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20540,60 +21124,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-gemm_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4c8-minmax-fp32-avx-ld128.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x4c8-minmax-fp32-avx-ld128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-gemm_avx2-avxvnni-f16c-fma") {
+  cflags = [
+    "-mavx2",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-avxvnni-prfm.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-5x8c8-minmax-fp32-avxvnni-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-qc8w-gemm_avx2-avxvnni-f16c-fma") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_avx2-avxvnni-f16c-fma_standalone") {
     cflags = [
       "-mavx2",
-      "-mavxvnni",
-      "-mf16c",
-      "-mfma",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-avxvnni-prfm.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-5x8c8-minmax-fp32-avxvnni-prfm.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-5x8c8-minmax-fp32-avxvnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20605,60 +21189,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-gemm_avx2-avxvnni-f16c-fma_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mavxvnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-avxvnni-prfm.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-5x8c8-minmax-fp32-avxvnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-gemm_avx2-avxvnniint8-f16c-fma") {
+  cflags = [
+    "-mavx2",
+    "-mavxvnniint8",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-avxvnniint8-prfm.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-5x8c8-minmax-fp32-avxvnniint8-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-qc8w-gemm_avx2-avxvnniint8-f16c-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_avx2-avxvnniint8-f16c-fma_standalone") {
     cflags = [
       "-mavx2",
-      "-mavxvnniint8",
-      "-mf16c",
-      "-mfma",
+    "-mavxvnniint8",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-avxvnniint8-prfm.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-5x8c8-minmax-fp32-avxvnniint8-prfm.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-5x8c8-minmax-fp32-avxvnniint8-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20670,59 +21254,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-gemm_avx2-avxvnniint8-f16c-fma_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mavxvnniint8",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-avxvnniint8-prfm.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-5x8c8-minmax-fp32-avxvnniint8-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-gemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-avx2.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x8c8-minmax-fp32-avx2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-qc8w-gemm_f16c-fma-avx2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-avx2.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x8c8-minmax-fp32-avx2.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x8c8-minmax-fp32-avx2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20734,65 +21317,70 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-gemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-avx2.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x8c8-minmax-fp32-avx2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16c8-minmax-fp32-avx512skx-prfm.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-avx256skx.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x8c8-minmax-fp32-avx256skx.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-7x16c8-minmax-fp32-avx512skx-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set(
-      "qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16c8-minmax-fp32-avx512skx-prfm.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-avx256skx.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x8c8-minmax-fp32-avx256skx.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-7x16c8-minmax-fp32-avx512skx-prfm.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-avx256skx.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x8c8-minmax-fp32-avx256skx.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-7x16c8-minmax-fp32-avx512skx-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20804,71 +21392,68 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16c8-minmax-fp32-avx512skx-prfm.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-avx256skx.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x8c8-minmax-fp32-avx256skx.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-7x16c8-minmax-fp32-avx512skx-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16c8-minmax-fp32-avx512vnni-prfm.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-7x16c8-minmax-fp32-avx512vnni-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16c8-minmax-fp32-avx512vnni-prfm.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-7x16c8-minmax-fp32-avx512vnni-prfm.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-7x16c8-minmax-fp32-avx512vnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20880,73 +21465,74 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16c8-minmax-fp32-avx512vnni-prfm.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-7x16c8-minmax-fp32-avx512vnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8") {
+  cflags = [
+    "-mamx-int8",
+    "-mamx-tile",
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-16x64c4-minmax-fp32-avx512amx.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x64c4-minmax-fp32-avx512amx.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone") {
     cflags = [
       "-mamx-int8",
-      "-mamx-tile",
-      "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
-      "-mgfni",
+    "-mamx-tile",
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-16x64c4-minmax-fp32-avx512amx.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x64c4-minmax-fp32-avx512amx.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x64c4-minmax-fp32-avx512amx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -20958,66 +21544,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-qc8w-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone") {
-      cflags = [
-        "-mamx-int8",
-        "-mamx-tile",
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-        "-mgfni",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-16x64c4-minmax-fp32-avx512amx.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x64c4-minmax-fp32-avx512amx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-gemm_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4c8-minmax-fp32-sse2-ld64.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4c8-minmax-fp32-sse2-ld64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-qc8w-gemm_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4c8-minmax-fp32-sse2-ld64.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4c8-minmax-fp32-sse2-ld64.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4c8-minmax-fp32-sse2-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21029,56 +21605,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-gemm_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4c8-minmax-fp32-sse2-ld64.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4c8-minmax-fp32-sse2-ld64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-gemm_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4c8-minmax-fp32-sse41-ld64.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4c8-minmax-fp32-sse41-ld64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-qc8w-gemm_sse4.1-no-sse4.2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4c8-minmax-fp32-sse41-ld64.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4c8-minmax-fp32-sse41-ld64.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4c8-minmax-fp32-sse41-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21090,53 +21666,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-gemm_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4c8-minmax-fp32-sse41-ld64.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4c8-minmax-fp32-sse41-ld64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-gemm_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-qc8w-gemm_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21148,55 +21725,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-gemm_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4-minmax-fp32-scalar-lrintf.c",
-      ]
+source_set("qs8-qc8w-igemm_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4c8-minmax-fp32-avx-ld128.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x4c8-minmax-fp32-avx-ld128.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-qc8w-igemm_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4c8-minmax-fp32-avx-ld128.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x4c8-minmax-fp32-avx-ld128.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x4c8-minmax-fp32-avx-ld128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21208,60 +21790,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-igemm_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4c8-minmax-fp32-avx-ld128.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x4c8-minmax-fp32-avx-ld128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-igemm_avx2-avxvnni-f16c-fma") {
+  cflags = [
+    "-mavx2",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-avxvnni-prfm.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-5x8c8-minmax-fp32-avxvnni-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-qc8w-igemm_avx2-avxvnni-f16c-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_avx2-avxvnni-f16c-fma_standalone") {
     cflags = [
       "-mavx2",
-      "-mavxvnni",
-      "-mf16c",
-      "-mfma",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-avxvnni-prfm.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-5x8c8-minmax-fp32-avxvnni-prfm.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-5x8c8-minmax-fp32-avxvnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21273,60 +21855,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-igemm_avx2-avxvnni-f16c-fma_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mavxvnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-avxvnni-prfm.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-5x8c8-minmax-fp32-avxvnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-igemm_avx2-avxvnniint8-f16c-fma") {
+  cflags = [
+    "-mavx2",
+    "-mavxvnniint8",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-avxvnniint8-prfm.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-5x8c8-minmax-fp32-avxvnniint8-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-qc8w-igemm_avx2-avxvnniint8-f16c-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_avx2-avxvnniint8-f16c-fma_standalone") {
     cflags = [
       "-mavx2",
-      "-mavxvnniint8",
-      "-mf16c",
-      "-mfma",
+    "-mavxvnniint8",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-avxvnniint8-prfm.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-5x8c8-minmax-fp32-avxvnniint8-prfm.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-5x8c8-minmax-fp32-avxvnniint8-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21338,59 +21920,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-igemm_avx2-avxvnniint8-f16c-fma_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mavxvnniint8",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-avxvnniint8-prfm.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-5x8c8-minmax-fp32-avxvnniint8-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-igemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-avx2.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x8c8-minmax-fp32-avx2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-qc8w-igemm_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-avx2.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x8c8-minmax-fp32-avx2.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x8c8-minmax-fp32-avx2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21402,65 +21983,70 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-igemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-avx2.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x8c8-minmax-fp32-avx2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16c8-minmax-fp32-avx512skx-prfm.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-avx256skx.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x8c8-minmax-fp32-avx256skx.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-7x16c8-minmax-fp32-avx512skx-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16c8-minmax-fp32-avx512skx-prfm.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-avx256skx.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x8c8-minmax-fp32-avx256skx.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-7x16c8-minmax-fp32-avx512skx-prfm.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-avx256skx.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x8c8-minmax-fp32-avx256skx.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-7x16c8-minmax-fp32-avx512skx-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21472,71 +22058,68 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16c8-minmax-fp32-avx512skx-prfm.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-avx256skx.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x8c8-minmax-fp32-avx256skx.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-7x16c8-minmax-fp32-avx512skx-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16c8-minmax-avx512vnni-prfm.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-7x16c8-minmax-avx512vnni-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16c8-minmax-avx512vnni-prfm.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-7x16c8-minmax-avx512vnni-prfm.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-7x16c8-minmax-avx512vnni-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21548,73 +22131,74 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16c8-minmax-avx512vnni-prfm.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-7x16c8-minmax-avx512vnni-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8") {
+  cflags = [
+    "-mamx-int8",
+    "-mamx-tile",
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-16x64c4-minmax-fp32-avx512amx.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x64c4-minmax-fp32-avx512amx.c"
+  ]
 
-  source_set(
-      "qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone") {
     cflags = [
       "-mamx-int8",
-      "-mamx-tile",
-      "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
-      "-mgfni",
+    "-mamx-tile",
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma",
+    "-mgfni"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-16x64c4-minmax-fp32-avx512amx.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x64c4-minmax-fp32-avx512amx.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x64c4-minmax-fp32-avx512amx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21626,66 +22210,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-qc8w-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni-gfni-amx-tile-amx-int8_standalone") {
-      cflags = [
-        "-mamx-int8",
-        "-mamx-tile",
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-        "-mgfni",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-16x64c4-minmax-fp32-avx512amx.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x64c4-minmax-fp32-avx512amx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-igemm_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4c8-minmax-fp32-sse2-ld64.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4c8-minmax-fp32-sse2-ld64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-qc8w-igemm_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4c8-minmax-fp32-sse2-ld64.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4c8-minmax-fp32-sse2-ld64.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4c8-minmax-fp32-sse2-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21697,56 +22271,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-igemm_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4c8-minmax-fp32-sse2-ld64.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4c8-minmax-fp32-sse2-ld64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-igemm_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
 
-  source_set("qs8-qc8w-igemm_sse4.1-no-sse4.2") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4c8-minmax-fp32-sse41-ld64.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4c8-minmax-fp32-sse41-ld64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4c8-minmax-fp32-sse41-ld64.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4c8-minmax-fp32-sse41-ld64.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4c8-minmax-fp32-sse41-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21758,53 +22332,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-igemm_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4c8-minmax-fp32-sse41-ld64.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4c8-minmax-fp32-sse41-ld64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-igemm_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-qc8w-igemm_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21816,54 +22391,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-igemm_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4-minmax-fp32-scalar-lrintf.c",
-      ]
+source_set("qs8-qu8-packw_avx2-avxvnni-f16c-fma") {
+  cflags = [
+    "-mavx2",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x8c8-gemm-goi-avxvnni.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-qu8-packw_avx2-avxvnni-f16c-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qu8-packw_avx2-avxvnni-f16c-fma_standalone") {
     cflags = [
       "-mavx2",
-      "-mavxvnni",
-      "-mf16c",
-      "-mfma",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x8c8-gemm-goi-avxvnni.c",
+      "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x8c8-gemm-goi-avxvnni.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21875,63 +22454,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qu8-packw_avx2-avxvnni-f16c-fma_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mavxvnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x8c8-gemm-goi-avxvnni.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qu8-packw_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-avx256vnni.c"
+  ]
 
-  source_set(
-      "qs8-qu8-packw_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qu8-packw_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-avx256vnni.c",
+      "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-avx256vnni.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -21943,58 +22525,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-qu8-packw_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-avx256vnni.c",
-      ]
+source_set("qs8-qu8-packw_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-qu8-packw_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qu8-packw_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-scalar.c",
+      "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22006,52 +22582,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qu8-packw_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-scalar.c",
-      ]
+source_set("qs8-rdsum_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-avx2-c64.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-rdsum_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rdsum_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-avx2-c64.c",
+      "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-avx2-c64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22063,60 +22643,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-rdsum_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-avx2-c64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-rdsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-avx512skx-c64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-rdsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rdsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-avx512skx-c64.c",
+      "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-avx512skx-c64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22128,60 +22712,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-rdsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-avx512skx-c64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qs8-rdsum_sse4.1-no-sse4.2") {
-    cflags = [
+source_set("qs8-rdsum_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-sse41-c64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rdsum_sse4.1-no-sse4.2_standalone") {
+    cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-sse41-c64.c",
+      "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-sse41-c64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22193,51 +22771,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-rdsum_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-sse41-c64.c",
-      ]
+source_set("qs8-rdsum_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rdsum/gen/qs8-rdsum-minmax-fp32-scalar-u1-acc1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-rdsum_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rdsum_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rdsum/gen/qs8-rdsum-minmax-fp32-scalar-u1-acc1.c",
+      "src/src/qs8-rdsum/gen/qs8-rdsum-minmax-fp32-scalar-u1-acc1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22249,53 +22828,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-rdsum_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rdsum/gen/qs8-rdsum-minmax-fp32-scalar-u1-acc1.c",
-      ]
+source_set("qs8-rsum_avx2-avxvnni-f16c-fma") {
+  cflags = [
+    "-mavx2",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rsum/gen/qs8-rsum-avxvnni-u128-acc2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-rsum_avx2-avxvnni-f16c-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rsum_avx2-avxvnni-f16c-fma_standalone") {
     cflags = [
       "-mavx2",
-      "-mavxvnni",
-      "-mf16c",
-      "-mfma",
+    "-mavxvnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rsum/gen/qs8-rsum-avxvnni-u128-acc2.c",
+      "src/src/qs8-rsum/gen/qs8-rsum-avxvnni-u128-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22307,57 +22891,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-rsum_avx2-avxvnni-f16c-fma_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mavxvnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rsum/gen/qs8-rsum-avxvnni-u128-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-rsum_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rsum/gen/qs8-rsum-avx2-u64-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-rsum_f16c-fma-avx2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rsum_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rsum/gen/qs8-rsum-avx2-u64-acc2.c",
+      "src/src/qs8-rsum/gen/qs8-rsum-avx2-u64-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22369,61 +22952,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-rsum_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rsum/gen/qs8-rsum-avx2-u64-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rsum/gen/qs8-rsum-avx256skx-u64-acc2.c",
+    "src/src/qs8-rsum/gen/qs8-rsum-avx512skx-u128-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-rsum/gen/qs8-rsum-avx256skx-u64-acc2.c",
-      "src/src/qs8-rsum/gen/qs8-rsum-avx512skx-u128-acc2.c",
+    "src/src/qs8-rsum/gen/qs8-rsum-avx512skx-u128-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22435,68 +23023,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rsum/gen/qs8-rsum-avx256skx-u64-acc2.c",
-        "src/src/qs8-rsum/gen/qs8-rsum-avx512skx-u128-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set(
-      "qs8-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+source_set("qs8-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rsum/gen/qs8-rsum-avx512vnni-u128-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mavx512vnni",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mavx512vnni",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rsum/gen/qs8-rsum-avx512vnni-u128-acc2.c",
+      "src/src/qs8-rsum/gen/qs8-rsum-avx512vnni-u128-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22508,61 +23094,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-rsum_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vnni_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mavx512vnni",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rsum/gen/qs8-rsum-avx512vnni-u128-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-rsum_ssse3-no-sse4.1") {
+  cflags = [
+    "-mno-sse4.1",
+    "-mssse3"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rsum/gen/qs8-rsum-ssse3-u32-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-rsum_ssse3-no-sse4.1") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rsum_ssse3-no-sse4.1_standalone") {
     cflags = [
       "-mno-sse4.1",
-      "-mssse3",
+    "-mssse3"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rsum/gen/qs8-rsum-ssse3-u32-acc2.c",
+      "src/src/qs8-rsum/gen/qs8-rsum-ssse3-u32-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22574,51 +23153,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-rsum_ssse3-no-sse4.1_standalone") {
-      cflags = [
-        "-mno-sse4.1",
-        "-mssse3",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rsum/gen/qs8-rsum-ssse3-u32-acc2.c",
-      ]
+source_set("qs8-rsum_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rsum/gen/qs8-rsum-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-rsum_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rsum_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rsum/gen/qs8-rsum-scalar-u4.c",
+      "src/src/qs8-rsum/gen/qs8-rsum-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22630,53 +23210,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-rsum_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rsum/gen/qs8-rsum-scalar-u4.c",
-      ]
+source_set("qs8-vadd_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-avx-mul32-ld32-u8.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vadd_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vadd_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vadd/gen/qs8-vadd-minmax-avx-mul32-ld32-u8.c",
+      "src/src/qs8-vadd/gen/qs8-vadd-minmax-avx-mul32-ld32-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22688,57 +23273,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vadd_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vadd/gen/qs8-vadd-minmax-avx-mul32-ld32-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vadd_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-avx2-mul32-ld64-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-vadd_f16c-fma-avx2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vadd_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vadd/gen/qs8-vadd-minmax-avx2-mul32-ld64-u16.c",
+      "src/src/qs8-vadd/gen/qs8-vadd-minmax-avx2-mul32-ld64-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22750,60 +23334,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vadd_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vadd/gen/qs8-vadd-minmax-avx2-mul32-ld64-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vadd_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-avx512skx-mul32-ld128-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vadd_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vadd_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vadd/gen/qs8-vadd-minmax-avx512skx-mul32-ld128-u16.c",
+      "src/src/qs8-vadd/gen/qs8-vadd-minmax-avx512skx-mul32-ld128-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22815,60 +23403,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-vadd_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vadd/gen/qs8-vadd-minmax-avx512skx-mul32-ld128-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vadd_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-sse2-mul16-ld64-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vadd_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vadd_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vadd/gen/qs8-vadd-minmax-sse2-mul16-ld64-u8.c",
+      "src/src/qs8-vadd/gen/qs8-vadd-minmax-sse2-mul16-ld64-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22880,54 +23462,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vadd_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vadd/gen/qs8-vadd-minmax-sse2-mul16-ld64-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vadd_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-sse41-mul16-ld64-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vadd_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vadd_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vadd/gen/qs8-vadd-minmax-sse41-mul16-ld64-u8.c",
+      "src/src/qs8-vadd/gen/qs8-vadd-minmax-sse41-mul16-ld64-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22939,52 +23521,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vadd_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vadd/gen/qs8-vadd-minmax-sse41-mul16-ld64-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vadd_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u1.c",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vadd_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vadd_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u1.c",
-      "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u4.c",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -22996,54 +23580,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vadd_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u1.c",
-        "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u4.c",
-      ]
+source_set("qs8-vaddc_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-avx-mul32-ld32-u8.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vaddc_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vaddc_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-avx-mul32-ld32-u8.c",
+      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-avx-mul32-ld32-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23055,57 +23643,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vaddc_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-avx-mul32-ld32-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vaddc_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-avx2-mul32-ld64-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-vaddc_f16c-fma-avx2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vaddc_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-avx2-mul32-ld64-u16.c",
+      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-avx2-mul32-ld64-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23117,60 +23704,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vaddc_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-avx2-mul32-ld64-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vaddc_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-avx512skx-mul32-ld128-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vaddc_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vaddc_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-avx512skx-mul32-ld128-u16.c",
+      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-avx512skx-mul32-ld128-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23182,60 +23773,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qs8-vaddc_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-avx512skx-mul32-ld128-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vaddc_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-sse2-mul16-ld64-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vaddc_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vaddc_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-sse2-mul16-ld64-u8.c",
+      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-sse2-mul16-ld64-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23247,54 +23832,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vaddc_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-sse2-mul16-ld64-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vaddc_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-sse41-mul16-ld64-u8.c"
+  ]
 
-  source_set("qs8-vaddc_sse4.1-no-sse4.2") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vaddc_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-sse41-mul16-ld64-u8.c",
+      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-sse41-mul16-ld64-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23306,52 +23891,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vaddc_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-sse41-mul16-ld64-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vaddc_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u1.c",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vaddc_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vaddc_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u1.c",
-      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u4.c",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23363,54 +23950,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vaddc_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u1.c",
-        "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u4.c",
-      ]
+source_set("qs8-vcvt_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vcvt/gen/qs8-vcvt-avx-u32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vcvt_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vcvt/gen/qs8-vcvt-avx-u32.c",
+      "src/src/qs8-vcvt/gen/qs8-vcvt-avx-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23422,57 +24013,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vcvt/gen/qs8-vcvt-avx-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vcvt_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vcvt/gen/qs8-vcvt-avx2-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-vcvt_f16c-fma-avx2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vcvt_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vcvt/gen/qs8-vcvt-avx2-u32.c",
+      "src/src/qs8-vcvt/gen/qs8-vcvt-avx2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23484,55 +24074,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vcvt_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vcvt/gen/qs8-vcvt-avx2-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vcvt_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vcvt/gen/qs8-vcvt-sse2-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vcvt_sse2-no-sse3") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vcvt_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vcvt/gen/qs8-vcvt-sse2-u32.c",
+      "src/src/qs8-vcvt/gen/qs8-vcvt-sse2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23544,54 +24133,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vcvt_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vcvt/gen/qs8-vcvt-sse2-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vcvt_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vcvt/gen/qs8-vcvt-sse41-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vcvt_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vcvt_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vcvt/gen/qs8-vcvt-sse41-u32.c",
+      "src/src/qs8-vcvt/gen/qs8-vcvt-sse41-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23603,54 +24192,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vcvt_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vcvt/gen/qs8-vcvt-sse41-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qs8-vcvt_ssse3-no-sse4.1") {
+source_set("qs8-vcvt_ssse3-no-sse4.1") {
+  cflags = [
+    "-mno-sse4.1",
+    "-mssse3"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vcvt/gen/qs8-vcvt-ssse3-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vcvt_ssse3-no-sse4.1_standalone") {
     cflags = [
       "-mno-sse4.1",
-      "-mssse3",
+    "-mssse3"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vcvt/gen/qs8-vcvt-ssse3-u32.c",
+      "src/src/qs8-vcvt/gen/qs8-vcvt-ssse3-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23662,51 +24251,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vcvt_ssse3-no-sse4.1_standalone") {
-      cflags = [
-        "-mno-sse4.1",
-        "-mssse3",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vcvt/gen/qs8-vcvt-ssse3-u32.c",
-      ]
+source_set("qs8-vcvt_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vcvt/gen/qs8-vcvt-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vcvt_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vcvt_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vcvt/gen/qs8-vcvt-scalar-u4.c",
+      "src/src/qs8-vcvt/gen/qs8-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23718,53 +24308,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vcvt_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vcvt/gen/qs8-vcvt-scalar-u4.c",
-      ]
+source_set("qs8-vlrelu_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vlrelu/gen/qs8-vlrelu-avx-u32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vlrelu_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vlrelu_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vlrelu/gen/qs8-vlrelu-avx-u32.c",
+      "src/src/qs8-vlrelu/gen/qs8-vlrelu-avx-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23776,57 +24371,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vlrelu_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vlrelu/gen/qs8-vlrelu-avx-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vlrelu_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vlrelu/gen/qs8-vlrelu-avx2-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vlrelu_f16c-fma-avx2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vlrelu_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vlrelu/gen/qs8-vlrelu-avx2-u32.c",
+      "src/src/qs8-vlrelu/gen/qs8-vlrelu-avx2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23838,55 +24432,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vlrelu_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vlrelu/gen/qs8-vlrelu-avx2-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vlrelu_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vlrelu/gen/qs8-vlrelu-sse2-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-vlrelu_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vlrelu_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vlrelu/gen/qs8-vlrelu-sse2-u32.c",
+      "src/src/qs8-vlrelu/gen/qs8-vlrelu-sse2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23898,54 +24491,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vlrelu_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vlrelu/gen/qs8-vlrelu-sse2-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vlrelu_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
 
-  source_set("qs8-vlrelu_sse4.1-no-sse4.2") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vlrelu/gen/qs8-vlrelu-sse41-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vlrelu_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vlrelu/gen/qs8-vlrelu-sse41-u32.c",
+      "src/src/qs8-vlrelu/gen/qs8-vlrelu-sse41-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -23957,54 +24550,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vlrelu_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vlrelu/gen/qs8-vlrelu-sse41-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vlrelu_ssse3-no-sse4.1") {
+  cflags = [
+    "-mno-sse4.1",
+    "-mssse3"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vlrelu/gen/qs8-vlrelu-ssse3-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vlrelu_ssse3-no-sse4.1") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vlrelu_ssse3-no-sse4.1_standalone") {
     cflags = [
       "-mno-sse4.1",
-      "-mssse3",
+    "-mssse3"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vlrelu/gen/qs8-vlrelu-ssse3-u32.c",
+      "src/src/qs8-vlrelu/gen/qs8-vlrelu-ssse3-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24016,51 +24609,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vlrelu_ssse3-no-sse4.1_standalone") {
-      cflags = [
-        "-mno-sse4.1",
-        "-mssse3",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vlrelu/gen/qs8-vlrelu-ssse3-u32.c",
-      ]
+source_set("qs8-vlrelu_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vlrelu/gen/qs8-vlrelu-scalar-andxor-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vlrelu_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vlrelu_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vlrelu/gen/qs8-vlrelu-scalar-andxor-u4.c",
+      "src/src/qs8-vlrelu/gen/qs8-vlrelu-scalar-andxor-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24072,53 +24666,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vlrelu_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vlrelu/gen/qs8-vlrelu-scalar-andxor-u4.c",
-      ]
+source_set("qs8-vmul_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-avx-mul16-ld64-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vmul_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmul_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-avx-mul16-ld64-u16.c",
+      "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-avx-mul16-ld64-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24130,56 +24729,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vmul_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-avx-mul16-ld64-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qs8-vmul_sse2-no-sse3") {
+source_set("qs8-vmul_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-sse2-mul16-ld64-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmul_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-sse2-mul16-ld64-u8.c",
+      "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-sse2-mul16-ld64-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24191,54 +24788,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vmul_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-sse2-mul16-ld64-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vmul_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-sse41-mul16-ld64-u16.c"
+  ]
 
-  source_set("qs8-vmul_sse4.1-no-sse4.2") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmul_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-sse41-mul16-ld64-u16.c",
+      "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-sse41-mul16-ld64-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24250,51 +24847,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vmul_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-sse41-mul16-ld64-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vmul_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vmul_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmul_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-scalar-u4.c",
+      "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24306,53 +24904,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vmul_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-scalar-u4.c",
-      ]
+source_set("qs8-vmulc_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-avx-mul16-ld64-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vmulc_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmulc_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-avx-mul16-ld64-u16.c",
+      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-avx-mul16-ld64-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24364,56 +24967,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vmulc_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-avx-mul16-ld64-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vmulc_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-sse2-mul16-ld64-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vmulc_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmulc_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-sse2-mul16-ld64-u8.c",
+      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-sse2-mul16-ld64-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24425,54 +25026,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vmulc_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-sse2-mul16-ld64-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vmulc_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-sse41-mul16-ld64-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vmulc_sse4.1-no-sse4.2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmulc_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-sse41-mul16-ld64-u16.c",
+      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-sse41-mul16-ld64-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24484,51 +25085,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vmulc_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-sse41-mul16-ld64-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vmulc_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-vmulc_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmulc_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-scalar-u4.c",
+      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24540,52 +25142,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vmulc_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-scalar-u4.c",
-      ]
+source_set("qs8-vprelu_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vprelu/gen/qs8-vprelu-avx2-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vprelu_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vprelu_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vprelu/gen/qs8-vprelu-avx2-u16.c",
+      "src/src/qs8-vprelu/gen/qs8-vprelu-avx2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24597,52 +25203,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vprelu_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vprelu/gen/qs8-vprelu-avx2-u16.c",
-      ]
+source_set("qs8-vprelu_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vprelu/gen/qs8-vprelu-scalar-u8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vprelu_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vprelu_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vprelu/gen/qs8-vprelu-scalar-u8.c",
+      "src/src/qs8-vprelu/gen/qs8-vprelu-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24654,52 +25260,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vprelu_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vprelu/gen/qs8-vprelu-scalar-u8.c",
-      ]
+source_set("qs8-vpreluc_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vpreluc/gen/qs8-vpreluc-avx2-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vpreluc_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vpreluc_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vpreluc/gen/qs8-vpreluc-avx2-u16.c",
+      "src/src/qs8-vpreluc/gen/qs8-vpreluc-avx2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24711,52 +25321,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vpreluc_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vpreluc/gen/qs8-vpreluc-avx2-u16.c",
-      ]
+source_set("qs8-vpreluc_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vpreluc/gen/qs8-vpreluc-scalar-u8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vpreluc_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vpreluc_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vpreluc/gen/qs8-vpreluc-scalar-u8.c",
+      "src/src/qs8-vpreluc/gen/qs8-vpreluc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24768,52 +25378,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vpreluc_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vpreluc/gen/qs8-vpreluc-scalar-u8.c",
-      ]
+source_set("qs8-vrpreluc_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-avx2-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vrpreluc_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vrpreluc_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-avx2-u16.c",
+      "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-avx2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24825,52 +25439,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vrpreluc_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-avx2-u16.c",
-      ]
+source_set("qs8-vrpreluc_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-scalar-u8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vrpreluc_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vrpreluc_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-scalar-u8.c",
+      "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24882,54 +25496,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vrpreluc_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-scalar-u8.c",
-      ]
+source_set("qu8-dwconv_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p16c-minmax-fp32-avx-mul16.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p16c-minmax-fp32-avx-mul16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-dwconv_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-dwconv_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-dwconv/gen/qu8-dwconv-25p16c-minmax-fp32-avx-mul16.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-9p16c-minmax-fp32-avx-mul16.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p16c-minmax-fp32-avx-mul16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -24941,59 +25561,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-dwconv_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-25p16c-minmax-fp32-avx-mul16.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-9p16c-minmax-fp32-avx-mul16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qu8-dwconv_f16c-fma-avx2") {
+source_set("qu8-dwconv_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p16c-minmax-fp32-avx2-mul32.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p16c-minmax-fp32-avx2-mul32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-dwconv_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-dwconv/gen/qu8-dwconv-25p16c-minmax-fp32-avx2-mul32.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-9p16c-minmax-fp32-avx2-mul32.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p16c-minmax-fp32-avx2-mul32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25005,63 +25624,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-dwconv_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-25p16c-minmax-fp32-avx2-mul32.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-9p16c-minmax-fp32-avx2-mul32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p32c-minmax-fp32-avx512skx-mul32.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p32c-minmax-fp32-avx512skx-mul32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set(
-      "qu8-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-dwconv/gen/qu8-dwconv-25p32c-minmax-fp32-avx512skx-mul32.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-9p32c-minmax-fp32-avx512skx-mul32.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p32c-minmax-fp32-avx512skx-mul32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25073,62 +25695,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qu8-dwconv_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-25p32c-minmax-fp32-avx512skx-mul32.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-9p32c-minmax-fp32-avx512skx-mul32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-dwconv_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p8c-minmax-fp32-sse2-mul16.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p8c-minmax-fp32-sse2-mul16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qu8-dwconv_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-dwconv_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-dwconv/gen/qu8-dwconv-25p8c-minmax-fp32-sse2-mul16.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-9p8c-minmax-fp32-sse2-mul16.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p8c-minmax-fp32-sse2-mul16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25140,56 +25756,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-dwconv_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-25p8c-minmax-fp32-sse2-mul16.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-9p8c-minmax-fp32-sse2-mul16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-dwconv_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
 
-  source_set("qu8-dwconv_sse4.1-no-sse4.2") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p8c-minmax-fp32-sse41-mul16.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p8c-minmax-fp32-sse41-mul16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-dwconv_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-dwconv/gen/qu8-dwconv-25p8c-minmax-fp32-sse41-mul16.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-9p8c-minmax-fp32-sse41-mul16.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p8c-minmax-fp32-sse41-mul16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25201,55 +25817,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-dwconv_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-25p8c-minmax-fp32-sse41-mul16.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-9p8c-minmax-fp32-sse41-mul16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-dwconv_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-dwconv_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-dwconv_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-dwconv/gen/qu8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25261,56 +25880,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-dwconv_x64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-f32-vcvt_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-avx-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-f32-vcvt_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-f32-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-avx-u32.c",
+      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-avx-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25322,57 +25943,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-f32-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-avx-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-f32-vcvt_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-avx2-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-f32-vcvt_f16c-fma-avx2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-f32-vcvt_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-avx2-u16.c",
+      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-avx2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25384,61 +26004,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-f32-vcvt_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-avx2-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-avx512skx-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set(
-      "qu8-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-avx512skx-u32.c",
+      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-avx512skx-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25450,60 +26073,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qu8-f32-vcvt_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-avx512skx-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-f32-vcvt_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-sse2-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-f32-vcvt_sse2-no-sse3") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-f32-vcvt_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-sse2-u32.c",
+      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-sse2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25515,54 +26132,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-f32-vcvt_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-sse2-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-f32-vcvt_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-sse41-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-f32-vcvt_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-f32-vcvt_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-sse41-u16.c",
+      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-sse41-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25574,51 +26191,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-f32-vcvt_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-sse41-u16.c",
-      ]
+source_set("qu8-f32-vcvt_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-f32-vcvt_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-f32-vcvt_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-scalar-u4.c",
+      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25630,54 +26248,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-f32-vcvt_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-scalar-u4.c",
-      ]
+source_set("qu8-gemm_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x4c8-minmax-fp32-avx-ld128.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-2x4c8-minmax-fp32-avx-ld128.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-gemm_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-gemm_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-gemm/gen/qu8-gemm-1x4c8-minmax-fp32-avx-ld128.c",
-      "src/src/qu8-gemm/gen/qu8-gemm-2x4c8-minmax-fp32-avx-ld128.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-2x4c8-minmax-fp32-avx-ld128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25689,59 +26313,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-gemm_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-gemm/gen/qu8-gemm-1x4c8-minmax-fp32-avx-ld128.c",
-        "src/src/qu8-gemm/gen/qu8-gemm-2x4c8-minmax-fp32-avx-ld128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-gemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x8c8-minmax-fp32-avx2.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x8c8-minmax-fp32-avx2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-gemm_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-gemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-gemm/gen/qu8-gemm-1x8c8-minmax-fp32-avx2.c",
-      "src/src/qu8-gemm/gen/qu8-gemm-3x8c8-minmax-fp32-avx2.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x8c8-minmax-fp32-avx2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25753,62 +26376,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-gemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-gemm/gen/qu8-gemm-1x8c8-minmax-fp32-avx2.c",
-        "src/src/qu8-gemm/gen/qu8-gemm-3x8c8-minmax-fp32-avx2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x16c8-minmax-fp32-avx512skx-prfm.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-7x16c8-minmax-fp32-avx512skx-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-gemm/gen/qu8-gemm-1x16c8-minmax-fp32-avx512skx-prfm.c",
-      "src/src/qu8-gemm/gen/qu8-gemm-7x16c8-minmax-fp32-avx512skx-prfm.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-7x16c8-minmax-fp32-avx512skx-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25820,62 +26447,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qu8-gemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-gemm/gen/qu8-gemm-1x16c8-minmax-fp32-avx512skx-prfm.c",
-        "src/src/qu8-gemm/gen/qu8-gemm-7x16c8-minmax-fp32-avx512skx-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-gemm_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x4c8-minmax-fp32-sse2-ld64.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x4c8-minmax-fp32-sse2-ld64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-gemm_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-gemm_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-gemm/gen/qu8-gemm-1x4c8-minmax-fp32-sse2-ld64.c",
-      "src/src/qu8-gemm/gen/qu8-gemm-3x4c8-minmax-fp32-sse2-ld64.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x4c8-minmax-fp32-sse2-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25887,56 +26508,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-gemm_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-gemm/gen/qu8-gemm-1x4c8-minmax-fp32-sse2-ld64.c",
-        "src/src/qu8-gemm/gen/qu8-gemm-3x4c8-minmax-fp32-sse2-ld64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-gemm_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x4c8-minmax-fp32-sse41-ld64.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x4c8-minmax-fp32-sse41-ld64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-gemm_sse4.1-no-sse4.2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-gemm_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-gemm/gen/qu8-gemm-1x4c8-minmax-fp32-sse41-ld64.c",
-      "src/src/qu8-gemm/gen/qu8-gemm-3x4c8-minmax-fp32-sse41-ld64.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x4c8-minmax-fp32-sse41-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -25948,53 +26569,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-gemm_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-gemm/gen/qu8-gemm-1x4c8-minmax-fp32-sse41-ld64.c",
-        "src/src/qu8-gemm/gen/qu8-gemm-3x4c8-minmax-fp32-sse41-ld64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-gemm_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x4-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qu8-gemm_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-gemm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-gemm/gen/qu8-gemm-1x4-minmax-fp32-scalar-lrintf.c",
-      "src/src/qu8-gemm/gen/qu8-gemm-3x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x4-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26006,55 +26628,60 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-gemm_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-gemm/gen/qu8-gemm-1x4-minmax-fp32-scalar-lrintf.c",
-        "src/src/qu8-gemm/gen/qu8-gemm-3x4-minmax-fp32-scalar-lrintf.c",
-      ]
+source_set("qu8-igemm_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x4c8-minmax-fp32-avx-ld128.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-2x4c8-minmax-fp32-avx-ld128.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-igemm_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-igemm_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-igemm/gen/qu8-igemm-1x4c8-minmax-fp32-avx-ld128.c",
-      "src/src/qu8-igemm/gen/qu8-igemm-2x4c8-minmax-fp32-avx-ld128.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-2x4c8-minmax-fp32-avx-ld128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26066,59 +26693,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-igemm_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-igemm/gen/qu8-igemm-1x4c8-minmax-fp32-avx-ld128.c",
-        "src/src/qu8-igemm/gen/qu8-igemm-2x4c8-minmax-fp32-avx-ld128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-igemm_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x8c8-minmax-fp32-avx2.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x8c8-minmax-fp32-avx2.c"
+  ]
 
-  source_set("qu8-igemm_f16c-fma-avx2") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-igemm_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-igemm/gen/qu8-igemm-1x8c8-minmax-fp32-avx2.c",
-      "src/src/qu8-igemm/gen/qu8-igemm-3x8c8-minmax-fp32-avx2.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x8c8-minmax-fp32-avx2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26130,62 +26756,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-igemm_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-igemm/gen/qu8-igemm-1x8c8-minmax-fp32-avx2.c",
-        "src/src/qu8-igemm/gen/qu8-igemm-3x8c8-minmax-fp32-avx2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x16c8-minmax-fp32-avx512skx-prfm.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-7x16c8-minmax-fp32-avx512skx-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-igemm/gen/qu8-igemm-1x16c8-minmax-fp32-avx512skx-prfm.c",
-      "src/src/qu8-igemm/gen/qu8-igemm-7x16c8-minmax-fp32-avx512skx-prfm.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-7x16c8-minmax-fp32-avx512skx-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26197,62 +26827,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qu8-igemm_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-igemm/gen/qu8-igemm-1x16c8-minmax-fp32-avx512skx-prfm.c",
-        "src/src/qu8-igemm/gen/qu8-igemm-7x16c8-minmax-fp32-avx512skx-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-igemm_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-  source_set("qu8-igemm_sse2-no-sse3") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x4c8-minmax-fp32-sse2-ld64.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x4c8-minmax-fp32-sse2-ld64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-igemm_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-igemm/gen/qu8-igemm-1x4c8-minmax-fp32-sse2-ld64.c",
-      "src/src/qu8-igemm/gen/qu8-igemm-3x4c8-minmax-fp32-sse2-ld64.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x4c8-minmax-fp32-sse2-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26264,56 +26888,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-igemm_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-igemm/gen/qu8-igemm-1x4c8-minmax-fp32-sse2-ld64.c",
-        "src/src/qu8-igemm/gen/qu8-igemm-3x4c8-minmax-fp32-sse2-ld64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-igemm_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x4c8-minmax-fp32-sse41-ld64.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x4c8-minmax-fp32-sse41-ld64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-igemm_sse4.1-no-sse4.2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-igemm_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-igemm/gen/qu8-igemm-1x4c8-minmax-fp32-sse41-ld64.c",
-      "src/src/qu8-igemm/gen/qu8-igemm-3x4c8-minmax-fp32-sse41-ld64.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x4c8-minmax-fp32-sse41-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26325,53 +26949,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-igemm_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-igemm/gen/qu8-igemm-1x4c8-minmax-fp32-sse41-ld64.c",
-        "src/src/qu8-igemm/gen/qu8-igemm-3x4c8-minmax-fp32-sse41-ld64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-igemm_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x4-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qu8-igemm_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-igemm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-igemm/gen/qu8-igemm-1x4-minmax-fp32-scalar-lrintf.c",
-      "src/src/qu8-igemm/gen/qu8-igemm-3x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x4-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26383,52 +27008,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-igemm_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-igemm/gen/qu8-igemm-1x4-minmax-fp32-scalar-lrintf.c",
-        "src/src/qu8-igemm/gen/qu8-igemm-3x4-minmax-fp32-scalar-lrintf.c",
-      ]
+source_set("qu8-rdsum_ssse3-no-sse4.1") {
+  cflags = [
+    "-mno-sse4.1",
+    "-mssse3"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-ssse3-c64.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-rdsum_ssse3-no-sse4.1") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-rdsum_ssse3-no-sse4.1_standalone") {
     cflags = [
       "-mno-sse4.1",
-      "-mssse3",
+    "-mssse3"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-ssse3-c64.c",
+      "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-ssse3-c64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26440,51 +27067,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-rdsum_ssse3-no-sse4.1_standalone") {
-      cflags = [
-        "-mno-sse4.1",
-        "-mssse3",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-ssse3-c64.c",
-      ]
+source_set("qu8-rdsum_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-rdsum/gen/qu8-rdsum-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-rdsum_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-rdsum_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-rdsum/gen/qu8-rdsum-scalar.c",
+      "src/src/qu8-rdsum/gen/qu8-rdsum-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26496,52 +27124,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-rdsum_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-rdsum/gen/qu8-rdsum-scalar.c",
-      ]
+source_set("qu8-rsum_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-rsum/gen/qu8-rsum-avx2-u64-acc2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-rsum_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-rsum_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-rsum/gen/qu8-rsum-avx2-u64-acc2.c",
+      "src/src/qu8-rsum/gen/qu8-rsum-avx2-u64-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26553,55 +27185,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-rsum_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-rsum/gen/qu8-rsum-avx2-u64-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-rsum_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-rsum/gen/qu8-rsum-sse2-u32-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-rsum_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-rsum_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-rsum/gen/qu8-rsum-sse2-u32-acc2.c",
+      "src/src/qu8-rsum/gen/qu8-rsum-sse2-u32-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26613,51 +27244,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-rsum_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-rsum/gen/qu8-rsum-sse2-u32-acc2.c",
-      ]
+source_set("qu8-rsum_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-rsum/gen/qu8-rsum-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-rsum_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-rsum_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-rsum/gen/qu8-rsum-scalar-u4.c",
+      "src/src/qu8-rsum/gen/qu8-rsum-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26669,53 +27301,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-rsum_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-rsum/gen/qu8-rsum-scalar-u4.c",
-      ]
+source_set("qu8-vadd_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-avx-mul32-ld32-u8.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vadd_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vadd_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vadd/gen/qu8-vadd-minmax-avx-mul32-ld32-u8.c",
+      "src/src/qu8-vadd/gen/qu8-vadd-minmax-avx-mul32-ld32-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26727,57 +27364,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vadd_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vadd/gen/qu8-vadd-minmax-avx-mul32-ld32-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vadd_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-  source_set("qu8-vadd_f16c-fma-avx2") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-avx2-mul32-ld64-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vadd_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vadd/gen/qu8-vadd-minmax-avx2-mul32-ld64-u16.c",
+      "src/src/qu8-vadd/gen/qu8-vadd-minmax-avx2-mul32-ld64-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26789,60 +27425,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vadd_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vadd/gen/qu8-vadd-minmax-avx2-mul32-ld64-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vadd_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-avx512skx-mul32-ld128-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vadd_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vadd_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vadd/gen/qu8-vadd-minmax-avx512skx-mul32-ld128-u16.c",
+      "src/src/qu8-vadd/gen/qu8-vadd-minmax-avx512skx-mul32-ld128-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26854,60 +27494,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qu8-vadd_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vadd/gen/qu8-vadd-minmax-avx512skx-mul32-ld128-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vadd_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-sse2-mul16-ld64-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vadd_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vadd_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vadd/gen/qu8-vadd-minmax-sse2-mul16-ld64-u8.c",
+      "src/src/qu8-vadd/gen/qu8-vadd-minmax-sse2-mul16-ld64-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26919,54 +27553,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vadd_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vadd/gen/qu8-vadd-minmax-sse2-mul16-ld64-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vadd_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-sse41-mul16-ld64-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vadd_sse4.1-no-sse4.2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vadd_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vadd/gen/qu8-vadd-minmax-sse41-mul16-ld64-u8.c",
+      "src/src/qu8-vadd/gen/qu8-vadd-minmax-sse41-mul16-ld64-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -26978,52 +27612,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vadd_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vadd/gen/qu8-vadd-minmax-sse41-mul16-ld64-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vadd_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u1.c",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qu8-vadd_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vadd_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u1.c",
-      "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u4.c",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27035,54 +27671,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vadd_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u1.c",
-        "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u4.c",
-      ]
+source_set("qu8-vaddc_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-avx-mul32-ld32-u8.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vaddc_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vaddc_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-avx-mul32-ld32-u8.c",
+      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-avx-mul32-ld32-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27094,57 +27734,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vaddc_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-avx-mul32-ld32-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vaddc_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-avx2-mul32-ld64-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vaddc_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vaddc_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-avx2-mul32-ld64-u16.c",
+      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-avx2-mul32-ld64-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27156,60 +27795,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vaddc_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-avx2-mul32-ld64-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vaddc_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-avx512skx-mul32-ld128-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vaddc_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vaddc_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-avx512skx-mul32-ld128-u16.c",
+      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-avx512skx-mul32-ld128-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27221,60 +27864,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "qu8-vaddc_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-avx512skx-mul32-ld128-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vaddc_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-sse2-mul16-ld64-u8.c"
+  ]
 
-  source_set("qu8-vaddc_sse2-no-sse3") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vaddc_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-sse2-mul16-ld64-u8.c",
+      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-sse2-mul16-ld64-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27286,54 +27923,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vaddc_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-sse2-mul16-ld64-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vaddc_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-sse41-mul16-ld64-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vaddc_sse4.1-no-sse4.2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vaddc_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-sse41-mul16-ld64-u8.c",
+      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-sse41-mul16-ld64-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27345,52 +27982,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vaddc_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-sse41-mul16-ld64-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vaddc_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u1.c",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qu8-vaddc_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vaddc_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u1.c",
-      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u4.c",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27402,54 +28041,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vaddc_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u1.c",
-        "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u4.c",
-      ]
+source_set("qu8-vcvt_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vcvt/gen/qu8-vcvt-avx-u32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vcvt_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vcvt/gen/qu8-vcvt-avx-u32.c",
+      "src/src/qu8-vcvt/gen/qu8-vcvt-avx-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27461,57 +28104,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vcvt_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vcvt/gen/qu8-vcvt-avx-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vcvt_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-  source_set("qu8-vcvt_f16c-fma-avx2") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vcvt/gen/qu8-vcvt-avx2-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vcvt_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vcvt/gen/qu8-vcvt-avx2-u32.c",
+      "src/src/qu8-vcvt/gen/qu8-vcvt-avx2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27523,55 +28165,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vcvt_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vcvt/gen/qu8-vcvt-avx2-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vcvt_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vcvt/gen/qu8-vcvt-sse2-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vcvt_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vcvt_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vcvt/gen/qu8-vcvt-sse2-u32.c",
+      "src/src/qu8-vcvt/gen/qu8-vcvt-sse2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27583,54 +28224,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vcvt_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vcvt/gen/qu8-vcvt-sse2-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qu8-vcvt_sse4.1-no-sse4.2") {
+source_set("qu8-vcvt_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vcvt/gen/qu8-vcvt-sse41-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vcvt_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vcvt/gen/qu8-vcvt-sse41-u32.c",
+      "src/src/qu8-vcvt/gen/qu8-vcvt-sse41-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27642,54 +28283,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vcvt_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vcvt/gen/qu8-vcvt-sse41-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vcvt_ssse3-no-sse4.1") {
+  cflags = [
+    "-mno-sse4.1",
+    "-mssse3"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vcvt/gen/qu8-vcvt-ssse3-u32.c"
+  ]
 
-  source_set("qu8-vcvt_ssse3-no-sse4.1") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vcvt_ssse3-no-sse4.1_standalone") {
     cflags = [
       "-mno-sse4.1",
-      "-mssse3",
+    "-mssse3"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vcvt/gen/qu8-vcvt-ssse3-u32.c",
+      "src/src/qu8-vcvt/gen/qu8-vcvt-ssse3-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27701,51 +28342,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vcvt_ssse3-no-sse4.1_standalone") {
-      cflags = [
-        "-mno-sse4.1",
-        "-mssse3",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vcvt/gen/qu8-vcvt-ssse3-u32.c",
-      ]
+source_set("qu8-vcvt_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vcvt/gen/qu8-vcvt-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vcvt_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vcvt_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vcvt/gen/qu8-vcvt-scalar-u4.c",
+      "src/src/qu8-vcvt/gen/qu8-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27757,53 +28399,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vcvt_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vcvt/gen/qu8-vcvt-scalar-u4.c",
-      ]
+source_set("qu8-vlrelu_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vlrelu/gen/qu8-vlrelu-avx-u32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vlrelu_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vlrelu_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vlrelu/gen/qu8-vlrelu-avx-u32.c",
+      "src/src/qu8-vlrelu/gen/qu8-vlrelu-avx-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27815,57 +28462,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vlrelu_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vlrelu/gen/qu8-vlrelu-avx-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vlrelu_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vlrelu/gen/qu8-vlrelu-avx2-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vlrelu_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vlrelu_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vlrelu/gen/qu8-vlrelu-avx2-u32.c",
+      "src/src/qu8-vlrelu/gen/qu8-vlrelu-avx2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27877,55 +28523,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vlrelu_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vlrelu/gen/qu8-vlrelu-avx2-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vlrelu_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-  source_set("qu8-vlrelu_sse2-no-sse3") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vlrelu/gen/qu8-vlrelu-sse2-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vlrelu_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vlrelu/gen/qu8-vlrelu-sse2-u32.c",
+      "src/src/qu8-vlrelu/gen/qu8-vlrelu-sse2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27937,54 +28582,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vlrelu_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vlrelu/gen/qu8-vlrelu-sse2-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vlrelu_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vlrelu/gen/qu8-vlrelu-sse41-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vlrelu_sse4.1-no-sse4.2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vlrelu_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vlrelu/gen/qu8-vlrelu-sse41-u32.c",
+      "src/src/qu8-vlrelu/gen/qu8-vlrelu-sse41-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -27996,54 +28641,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vlrelu_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vlrelu/gen/qu8-vlrelu-sse41-u32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vlrelu_ssse3-no-sse4.1") {
+  cflags = [
+    "-mno-sse4.1",
+    "-mssse3"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vlrelu/gen/qu8-vlrelu-ssse3-u32.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vlrelu_ssse3-no-sse4.1") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vlrelu_ssse3-no-sse4.1_standalone") {
     cflags = [
       "-mno-sse4.1",
-      "-mssse3",
+    "-mssse3"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vlrelu/gen/qu8-vlrelu-ssse3-u32.c",
+      "src/src/qu8-vlrelu/gen/qu8-vlrelu-ssse3-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28055,51 +28700,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vlrelu_ssse3-no-sse4.1_standalone") {
-      cflags = [
-        "-mno-sse4.1",
-        "-mssse3",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vlrelu/gen/qu8-vlrelu-ssse3-u32.c",
-      ]
+source_set("qu8-vlrelu_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vlrelu/gen/qu8-vlrelu-scalar-andxor-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vlrelu_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vlrelu_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vlrelu/gen/qu8-vlrelu-scalar-andxor-u4.c",
+      "src/src/qu8-vlrelu/gen/qu8-vlrelu-scalar-andxor-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28111,53 +28757,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vlrelu_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vlrelu/gen/qu8-vlrelu-scalar-andxor-u4.c",
-      ]
+source_set("qu8-vmul_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-avx-mul16-ld64-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vmul_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmul_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-avx-mul16-ld64-u16.c",
+      "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-avx-mul16-ld64-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28169,56 +28820,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vmul_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-avx-mul16-ld64-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vmul_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-sse2-mul16-ld64-u8.c"
+  ]
 
-  source_set("qu8-vmul_sse2-no-sse3") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmul_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-sse2-mul16-ld64-u8.c",
+      "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-sse2-mul16-ld64-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28230,54 +28879,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vmul_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-sse2-mul16-ld64-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vmul_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-sse41-mul16-ld64-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vmul_sse4.1-no-sse4.2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmul_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-sse41-mul16-ld64-u16.c",
+      "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-sse41-mul16-ld64-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28289,51 +28938,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vmul_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-sse41-mul16-ld64-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vmul_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qu8-vmul_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmul_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-scalar-u4.c",
+      "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28345,53 +28995,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vmul_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-scalar-u4.c",
-      ]
+source_set("qu8-vmulc_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-avx-mul16-ld64-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vmulc_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmulc_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-avx-mul16-ld64-u16.c",
+      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-avx-mul16-ld64-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28403,56 +29058,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vmulc_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-avx-mul16-ld64-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vmulc_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-sse2-mul16-ld64-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vmulc_sse2-no-sse3") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmulc_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-sse2-mul16-ld64-u8.c",
+      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-sse2-mul16-ld64-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28464,54 +29117,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vmulc_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-sse2-mul16-ld64-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vmulc_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-sse41-mul16-ld64-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vmulc_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmulc_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-sse41-mul16-ld64-u16.c",
+      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-sse41-mul16-ld64-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28523,51 +29176,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vmulc_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-sse41-mul16-ld64-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qu8-vmulc_x64") {
-    cflags = []
+source_set("qu8-vmulc_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmulc_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-scalar-u4.c",
+      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28579,52 +29233,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vmulc_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-scalar-u4.c",
-      ]
+source_set("qu8-vprelu_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vprelu/gen/qu8-vprelu-avx2-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vprelu_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vprelu_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vprelu/gen/qu8-vprelu-avx2-u16.c",
+      "src/src/qu8-vprelu/gen/qu8-vprelu-avx2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28636,52 +29294,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vprelu_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vprelu/gen/qu8-vprelu-avx2-u16.c",
-      ]
+source_set("qu8-vprelu_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vprelu/gen/qu8-vprelu-scalar-u8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vprelu_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vprelu_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vprelu/gen/qu8-vprelu-scalar-u8.c",
+      "src/src/qu8-vprelu/gen/qu8-vprelu-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28693,52 +29351,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vprelu_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vprelu/gen/qu8-vprelu-scalar-u8.c",
-      ]
+source_set("qu8-vpreluc_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vpreluc/gen/qu8-vpreluc-avx2-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vpreluc_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vpreluc_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vpreluc/gen/qu8-vpreluc-avx2-u16.c",
+      "src/src/qu8-vpreluc/gen/qu8-vpreluc-avx2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28750,52 +29412,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vpreluc_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vpreluc/gen/qu8-vpreluc-avx2-u16.c",
-      ]
+source_set("qu8-vpreluc_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vpreluc/gen/qu8-vpreluc-scalar-u8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vpreluc_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vpreluc_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vpreluc/gen/qu8-vpreluc-scalar-u8.c",
+      "src/src/qu8-vpreluc/gen/qu8-vpreluc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28807,52 +29469,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vpreluc_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vpreluc/gen/qu8-vpreluc-scalar-u8.c",
-      ]
+source_set("qu8-vrpreluc_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-avx2-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vrpreluc_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vrpreluc_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-avx2-u16.c",
+      "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-avx2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28864,52 +29530,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vrpreluc_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-avx2-u16.c",
-      ]
+source_set("qu8-vrpreluc_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-scalar-u8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vrpreluc_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vrpreluc_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-scalar-u8.c",
+      "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28921,50 +29587,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vrpreluc_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-scalar-u8.c",
-      ]
+source_set("reference_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/reference/binary-elementwise.cc",
+    "src/src/reference/packing.cc",
+    "src/src/reference/unary-elementwise.cc"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("reference_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("reference_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/reference/binary-elementwise.cc",
-      "src/src/reference/packing.cc",
-      "src/src/reference/unary-elementwise.cc",
+    "src/src/reference/packing.cc",
+    "src/src/reference/unary-elementwise.cc"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -28976,53 +29648,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("reference_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/reference/binary-elementwise.cc",
-        "src/src/reference/packing.cc",
-        "src/src/reference/unary-elementwise.cc",
-      ]
+source_set("s8-ibilinear_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-ibilinear/gen/s8-ibilinear-sse2-c8.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("s8-ibilinear_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-ibilinear_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-ibilinear/gen/s8-ibilinear-sse2-c8.c",
+      "src/src/s8-ibilinear/gen/s8-ibilinear-sse2-c8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29034,54 +29707,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-ibilinear_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-ibilinear/gen/s8-ibilinear-sse2-c8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("s8-ibilinear_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-ibilinear/gen/s8-ibilinear-sse41-c16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("s8-ibilinear_sse4.1-no-sse4.2") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-ibilinear_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-ibilinear/gen/s8-ibilinear-sse41-c16.c",
+      "src/src/s8-ibilinear/gen/s8-ibilinear-sse41-c16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29093,51 +29766,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-ibilinear_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-ibilinear/gen/s8-ibilinear-sse41-c16.c",
-      ]
+source_set("s8-ibilinear_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-ibilinear/gen/s8-ibilinear-scalar-c1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("s8-ibilinear_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-ibilinear_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-ibilinear/gen/s8-ibilinear-scalar-c1.c",
+      "src/src/s8-ibilinear/gen/s8-ibilinear-scalar-c1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29149,51 +29823,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-ibilinear_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-ibilinear/gen/s8-ibilinear-scalar-c1.c",
-      ]
+source_set("s8-maxpool_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-sse41-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("s8-maxpool_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-maxpool_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-sse41-u16.c",
+      "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-sse41-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29205,51 +29882,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-maxpool_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-sse41-u16.c",
-      ]
+source_set("s8-maxpool_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-scalar-u1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("s8-maxpool_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-maxpool_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-scalar-u1.c",
+      "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29261,52 +29939,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-maxpool_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-scalar-u1.c",
-      ]
+source_set("s8-rdminmax_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-sse41-c32.c",
+    "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-sse41-c32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("s8-rdminmax_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-rdminmax_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-sse41-c32.c",
-      "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-sse41-c32.c",
+    "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-sse41-c32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29318,53 +30000,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-rdminmax_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-sse41-c32.c",
-        "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-sse41-c32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("s8-rdminmax_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-scalar-c2.c",
+    "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-scalar-c2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("s8-rdminmax_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-rdminmax_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-scalar-c2.c",
-      "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-scalar-c2.c",
+    "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29376,54 +30059,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-rdminmax_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-scalar-c2.c",
-        "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-scalar-c2.c",
-      ]
+source_set("s8-rminmax_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-rminmax/gen/s8-rmax-sse41-u32-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rmin-sse41-u32-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rminmax-sse41-u32-acc2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("s8-rminmax_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-rminmax_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/s8-rminmax/gen/s8-rmax-sse41-u32-acc2.c",
-      "src/src/s8-rminmax/gen/s8-rmin-sse41-u32-acc2.c",
-      "src/src/s8-rminmax/gen/s8-rminmax-sse41-u32-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rmin-sse41-u32-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rminmax-sse41-u32-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29435,55 +30122,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-rminmax_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-rminmax/gen/s8-rmax-sse41-u32-acc2.c",
-        "src/src/s8-rminmax/gen/s8-rmin-sse41-u32-acc2.c",
-        "src/src/s8-rminmax/gen/s8-rminmax-sse41-u32-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("s8-rminmax_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-rminmax/gen/s8-rmax-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rmin-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rminmax-scalar-u2-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("s8-rminmax_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-rminmax_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/s8-rminmax/gen/s8-rmax-scalar-u2-acc2.c",
-      "src/src/s8-rminmax/gen/s8-rmin-scalar-u2-acc2.c",
-      "src/src/s8-rminmax/gen/s8-rminmax-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rmin-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rminmax-scalar-u2-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29495,54 +30183,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-rminmax_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-rminmax/gen/s8-rmax-scalar-u2-acc2.c",
-        "src/src/s8-rminmax/gen/s8-rmin-scalar-u2-acc2.c",
-        "src/src/s8-rminmax/gen/s8-rminmax-scalar-u2-acc2.c",
-      ]
+source_set("s8-vclamp_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-vclamp/s8-vclamp-avx2-u128.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("s8-vclamp_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-vclamp_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-vclamp/s8-vclamp-avx2-u128.c",
+      "src/src/s8-vclamp/s8-vclamp-avx2-u128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29554,60 +30244,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-vclamp_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-vclamp/s8-vclamp-avx2-u128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("s8-vclamp_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-vclamp/s8-vclamp-avx512skx-u256.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("s8-vclamp_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-vclamp_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-vclamp/s8-vclamp-avx512skx-u256.c",
+      "src/src/s8-vclamp/s8-vclamp-avx512skx-u256.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29619,60 +30313,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "s8-vclamp_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-vclamp/s8-vclamp-avx512skx-u256.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("s8-vclamp_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-vclamp/s8-vclamp-sse2-u64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("s8-vclamp_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-vclamp_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-vclamp/s8-vclamp-sse2-u64.c",
+      "src/src/s8-vclamp/s8-vclamp-sse2-u64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29684,54 +30372,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-vclamp_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-vclamp/s8-vclamp-sse2-u64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("s8-vclamp_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-vclamp/s8-vclamp-sse41-u64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("s8-vclamp_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-vclamp_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-vclamp/s8-vclamp-sse41-u64.c",
+      "src/src/s8-vclamp/s8-vclamp-sse41-u64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29743,51 +30431,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-vclamp_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-vclamp/s8-vclamp-sse41-u64.c",
-      ]
+source_set("s8-vclamp_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-vclamp/s8-vclamp-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("s8-vclamp_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-vclamp_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-vclamp/s8-vclamp-scalar-u4.c",
+      "src/src/s8-vclamp/s8-vclamp-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29799,76 +30488,108 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-vclamp_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-vclamp/s8-vclamp-scalar-u4.c",
-      ]
+source_set("subgraph_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/subgraph/argmax-pooling-2d.c",
+    "src/src/subgraph/average-pooling-2d.c",
+    "src/src/subgraph/batch-matrix-multiply.c",
+    "src/src/subgraph/binary.c",
+    "src/src/subgraph/concatenate.c",
+    "src/src/subgraph/convolution-2d.c",
+    "src/src/subgraph/copy.c",
+    "src/src/subgraph/deconvolution-2d.c",
+    "src/src/subgraph/deprecated.c",
+    "src/src/subgraph/depth-to-space-2d.c",
+    "src/src/subgraph/depthwise-convolution-2d.c",
+    "src/src/subgraph/even-split.c",
+    "src/src/subgraph/fully-connected-sparse.c",
+    "src/src/subgraph/fully-connected.c",
+    "src/src/subgraph/max-pooling-2d.c",
+    "src/src/subgraph/pack-lh.c",
+    "src/src/subgraph/reshape-helpers.c",
+    "src/src/subgraph/rope.c",
+    "src/src/subgraph/softmax.c",
+    "src/src/subgraph/space-to-depth-2d.c",
+    "src/src/subgraph/static-constant-pad.c",
+    "src/src/subgraph/static-reduce.c",
+    "src/src/subgraph/static-resize-bilinear-2d.c",
+    "src/src/subgraph/static-slice.c",
+    "src/src/subgraph/static-transpose.c",
+    "src/src/subgraph/subgraph-utils.c",
+    "src/src/subgraph/unary.c",
+    "src/src/subgraph/unpooling-2d.c",
+    "src/src/subgraph/validation.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("subgraph_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("subgraph_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/subgraph/argmax-pooling-2d.c",
-      "src/src/subgraph/average-pooling-2d.c",
-      "src/src/subgraph/batch-matrix-multiply.c",
-      "src/src/subgraph/binary.c",
-      "src/src/subgraph/concatenate.c",
-      "src/src/subgraph/convolution-2d.c",
-      "src/src/subgraph/copy.c",
-      "src/src/subgraph/deconvolution-2d.c",
-      "src/src/subgraph/deprecated.c",
-      "src/src/subgraph/depth-to-space-2d.c",
-      "src/src/subgraph/depthwise-convolution-2d.c",
-      "src/src/subgraph/even-split.c",
-      "src/src/subgraph/fully-connected-sparse.c",
-      "src/src/subgraph/fully-connected.c",
-      "src/src/subgraph/max-pooling-2d.c",
-      "src/src/subgraph/pack-lh.c",
-      "src/src/subgraph/reshape-helpers.c",
-      "src/src/subgraph/rope.c",
-      "src/src/subgraph/softmax.c",
-      "src/src/subgraph/space-to-depth-2d.c",
-      "src/src/subgraph/static-constant-pad.c",
-      "src/src/subgraph/static-reduce.c",
-      "src/src/subgraph/static-resize-bilinear-2d.c",
-      "src/src/subgraph/static-slice.c",
-      "src/src/subgraph/static-transpose.c",
-      "src/src/subgraph/subgraph-utils.c",
-      "src/src/subgraph/unary.c",
-      "src/src/subgraph/unpooling-2d.c",
-      "src/src/subgraph/validation.c",
+    "src/src/subgraph/average-pooling-2d.c",
+    "src/src/subgraph/batch-matrix-multiply.c",
+    "src/src/subgraph/binary.c",
+    "src/src/subgraph/concatenate.c",
+    "src/src/subgraph/convolution-2d.c",
+    "src/src/subgraph/copy.c",
+    "src/src/subgraph/deconvolution-2d.c",
+    "src/src/subgraph/deprecated.c",
+    "src/src/subgraph/depth-to-space-2d.c",
+    "src/src/subgraph/depthwise-convolution-2d.c",
+    "src/src/subgraph/even-split.c",
+    "src/src/subgraph/fully-connected-sparse.c",
+    "src/src/subgraph/fully-connected.c",
+    "src/src/subgraph/max-pooling-2d.c",
+    "src/src/subgraph/pack-lh.c",
+    "src/src/subgraph/reshape-helpers.c",
+    "src/src/subgraph/rope.c",
+    "src/src/subgraph/softmax.c",
+    "src/src/subgraph/space-to-depth-2d.c",
+    "src/src/subgraph/static-constant-pad.c",
+    "src/src/subgraph/static-reduce.c",
+    "src/src/subgraph/static-resize-bilinear-2d.c",
+    "src/src/subgraph/static-slice.c",
+    "src/src/subgraph/static-transpose.c",
+    "src/src/subgraph/subgraph-utils.c",
+    "src/src/subgraph/unary.c",
+    "src/src/subgraph/unpooling-2d.c",
+    "src/src/subgraph/validation.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29880,84 +30601,68 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("subgraph_x64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/subgraph/argmax-pooling-2d.c",
-        "src/src/subgraph/average-pooling-2d.c",
-        "src/src/subgraph/batch-matrix-multiply.c",
-        "src/src/subgraph/binary.c",
-        "src/src/subgraph/concatenate.c",
-        "src/src/subgraph/convolution-2d.c",
-        "src/src/subgraph/copy.c",
-        "src/src/subgraph/deconvolution-2d.c",
-        "src/src/subgraph/deprecated.c",
-        "src/src/subgraph/depth-to-space-2d.c",
-        "src/src/subgraph/depthwise-convolution-2d.c",
-        "src/src/subgraph/even-split.c",
-        "src/src/subgraph/fully-connected-sparse.c",
-        "src/src/subgraph/fully-connected.c",
-        "src/src/subgraph/max-pooling-2d.c",
-        "src/src/subgraph/pack-lh.c",
-        "src/src/subgraph/reshape-helpers.c",
-        "src/src/subgraph/rope.c",
-        "src/src/subgraph/softmax.c",
-        "src/src/subgraph/space-to-depth-2d.c",
-        "src/src/subgraph/static-constant-pad.c",
-        "src/src/subgraph/static-reduce.c",
-        "src/src/subgraph/static-resize-bilinear-2d.c",
-        "src/src/subgraph/static-slice.c",
-        "src/src/subgraph/static-transpose.c",
-        "src/src/subgraph/subgraph-utils.c",
-        "src/src/subgraph/unary.c",
-        "src/src/subgraph/unpooling-2d.c",
-        "src/src/subgraph/validation.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("tables_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/tables/exp2-k-over-2048.c",
+    "src/src/tables/exp2-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-16.c",
+    "src/src/tables/exp2minus-k-over-2048.c",
+    "src/src/tables/exp2minus-k-over-32.c",
+    "src/src/tables/exp2minus-k-over-4.c",
+    "src/src/tables/exp2minus-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-8.c",
+    "src/src/tables/vlog.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("tables_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("tables_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/tables/exp2-k-over-2048.c",
-      "src/src/tables/exp2-k-over-64.c",
-      "src/src/tables/exp2minus-k-over-16.c",
-      "src/src/tables/exp2minus-k-over-2048.c",
-      "src/src/tables/exp2minus-k-over-32.c",
-      "src/src/tables/exp2minus-k-over-4.c",
-      "src/src/tables/exp2minus-k-over-64.c",
-      "src/src/tables/exp2minus-k-over-8.c",
-      "src/src/tables/vlog.c",
+    "src/src/tables/exp2-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-16.c",
+    "src/src/tables/exp2minus-k-over-2048.c",
+    "src/src/tables/exp2minus-k-over-32.c",
+    "src/src/tables/exp2minus-k-over-4.c",
+    "src/src/tables/exp2minus-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-8.c",
+    "src/src/tables/vlog.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -29969,59 +30674,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("tables_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/tables/exp2-k-over-2048.c",
-        "src/src/tables/exp2-k-over-64.c",
-        "src/src/tables/exp2minus-k-over-16.c",
-        "src/src/tables/exp2minus-k-over-2048.c",
-        "src/src/tables/exp2minus-k-over-32.c",
-        "src/src/tables/exp2minus-k-over-4.c",
-        "src/src/tables/exp2minus-k-over-64.c",
-        "src/src/tables/exp2minus-k-over-8.c",
-        "src/src/tables/vlog.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("u8-ibilinear_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-ibilinear/gen/u8-ibilinear-sse2-c8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("u8-ibilinear_sse2-no-sse3") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-ibilinear_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-ibilinear/gen/u8-ibilinear-sse2-c8.c",
+      "src/src/u8-ibilinear/gen/u8-ibilinear-sse2-c8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30033,54 +30733,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-ibilinear_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-ibilinear/gen/u8-ibilinear-sse2-c8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("u8-ibilinear_sse4.1-no-sse4.2") {
+  cflags = [
+    "-mno-sse4.2",
+    "-msse4.1"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-ibilinear/gen/u8-ibilinear-sse41-c16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("u8-ibilinear_sse4.1-no-sse4.2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-ibilinear_sse4.1-no-sse4.2_standalone") {
     cflags = [
       "-mno-sse4.2",
-      "-msse4.1",
+    "-msse4.1"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-ibilinear/gen/u8-ibilinear-sse41-c16.c",
+      "src/src/u8-ibilinear/gen/u8-ibilinear-sse41-c16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30092,51 +30792,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-ibilinear_sse4.1-no-sse4.2_standalone") {
-      cflags = [
-        "-mno-sse4.2",
-        "-msse4.1",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-ibilinear/gen/u8-ibilinear-sse41-c16.c",
-      ]
+source_set("u8-ibilinear_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-ibilinear/gen/u8-ibilinear-scalar-c1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("u8-ibilinear_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-ibilinear_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-ibilinear/gen/u8-ibilinear-scalar-c1.c",
+      "src/src/u8-ibilinear/gen/u8-ibilinear-scalar-c1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30148,48 +30849,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-ibilinear_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-ibilinear/gen/u8-ibilinear-scalar-c1.c",
-      ]
+source_set("u8-lut32norm_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-lut32norm/u8-lut32norm-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("u8-lut32norm_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-lut32norm_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-lut32norm/u8-lut32norm-scalar.c",
+      "src/src/u8-lut32norm/u8-lut32norm-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30201,51 +30906,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-lut32norm_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-lut32norm/u8-lut32norm-scalar.c",
-      ]
+source_set("u8-maxpool_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-sse2-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("u8-maxpool_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-maxpool_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-sse2-u16.c",
+      "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-sse2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30257,51 +30965,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-maxpool_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-sse2-u16.c",
-      ]
+source_set("u8-maxpool_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-scalar-u1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("u8-maxpool_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-maxpool_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-scalar-u1.c",
+      "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30313,52 +31022,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-maxpool_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-scalar-u1.c",
-      ]
+source_set("u8-rdminmax_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-sse2-c32.c",
+    "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-sse2-c32.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("u8-rdminmax_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-rdminmax_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-sse2-c32.c",
-      "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-sse2-c32.c",
+    "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-sse2-c32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30370,53 +31083,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-rdminmax_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-sse2-c32.c",
-        "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-sse2-c32.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("u8-rdminmax_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-scalar-c2.c",
+    "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-scalar-c2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("u8-rdminmax_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-rdminmax_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-scalar-c2.c",
-      "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-scalar-c2.c",
+    "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30428,54 +31142,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-rdminmax_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-scalar-c2.c",
-        "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-scalar-c2.c",
-      ]
+source_set("u8-rminmax_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-rminmax/gen/u8-rmax-sse2-u32-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rmin-sse2-u32-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rminmax-sse2-u32-acc2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("u8-rminmax_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-rminmax_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/u8-rminmax/gen/u8-rmax-sse2-u32-acc2.c",
-      "src/src/u8-rminmax/gen/u8-rmin-sse2-u32-acc2.c",
-      "src/src/u8-rminmax/gen/u8-rminmax-sse2-u32-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rmin-sse2-u32-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rminmax-sse2-u32-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30487,55 +31205,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-rminmax_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-rminmax/gen/u8-rmax-sse2-u32-acc2.c",
-        "src/src/u8-rminmax/gen/u8-rmin-sse2-u32-acc2.c",
-        "src/src/u8-rminmax/gen/u8-rminmax-sse2-u32-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("u8-rminmax_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-rminmax/gen/u8-rmax-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rmin-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rminmax-scalar-u2-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("u8-rminmax_x64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-rminmax_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/u8-rminmax/gen/u8-rmax-scalar-u2-acc2.c",
-      "src/src/u8-rminmax/gen/u8-rmin-scalar-u2-acc2.c",
-      "src/src/u8-rminmax/gen/u8-rminmax-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rmin-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rminmax-scalar-u2-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30547,54 +31266,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-rminmax_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-rminmax/gen/u8-rmax-scalar-u2-acc2.c",
-        "src/src/u8-rminmax/gen/u8-rmin-scalar-u2-acc2.c",
-        "src/src/u8-rminmax/gen/u8-rminmax-scalar-u2-acc2.c",
-      ]
+source_set("u8-vclamp_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-vclamp/u8-vclamp-avx2-u128.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("u8-vclamp_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-vclamp_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-vclamp/u8-vclamp-avx2-u128.c",
+      "src/src/u8-vclamp/u8-vclamp-avx2-u128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30606,60 +31327,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-vclamp_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-vclamp/u8-vclamp-avx2-u128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("u8-vclamp_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-vclamp/u8-vclamp-avx512skx-u256.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("u8-vclamp_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-vclamp_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-vclamp/u8-vclamp-avx512skx-u256.c",
+      "src/src/u8-vclamp/u8-vclamp-avx512skx-u256.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30671,60 +31396,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "u8-vclamp_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-vclamp/u8-vclamp-avx512skx-u256.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("u8-vclamp_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-vclamp/u8-vclamp-sse2-u64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("u8-vclamp_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-vclamp_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-vclamp/u8-vclamp-sse2-u64.c",
+      "src/src/u8-vclamp/u8-vclamp-sse2-u64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30736,51 +31455,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-vclamp_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-vclamp/u8-vclamp-sse2-u64.c",
-      ]
+source_set("u8-vclamp_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-vclamp/u8-vclamp-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("u8-vclamp_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-vclamp_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-vclamp/u8-vclamp-scalar-u4.c",
+      "src/src/u8-vclamp/u8-vclamp-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30792,52 +31512,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-vclamp_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-vclamp/u8-vclamp-scalar-u4.c",
-      ]
+source_set("x16-packw_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x16-packw/gen/x16-packw-x16-gemm-goi-avx2-u16-prfm.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("x16-packw_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x16-packw_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x16-packw/gen/x16-packw-x16-gemm-goi-avx2-u16-prfm.c",
+      "src/src/x16-packw/gen/x16-packw-x16-gemm-goi-avx2-u16-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30849,56 +31573,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x16-packw_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x16-packw/gen/x16-packw-x16-gemm-goi-avx2-u16-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x16-transposec_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x16-transposec/gen/x16-transposec-16x16-reuse-switch-avx2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("x16-transposec_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x16-transposec_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x16-transposec/gen/x16-transposec-16x16-reuse-switch-avx2.c",
+      "src/src/x16-transposec/gen/x16-transposec-16x16-reuse-switch-avx2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30910,55 +31634,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x16-transposec_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x16-transposec/gen/x16-transposec-16x16-reuse-switch-avx2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x16-transposec_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-  source_set("x16-transposec_sse2-no-sse3") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x16-transposec/gen/x16-transposec-8x8-reuse-multi-sse2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x16-transposec_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x16-transposec/gen/x16-transposec-8x8-reuse-multi-sse2.c",
+      "src/src/x16-transposec/gen/x16-transposec-8x8-reuse-multi-sse2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -30970,51 +31693,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x16-transposec_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x16-transposec/gen/x16-transposec-8x8-reuse-multi-sse2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x16-transposec_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x16-transposec/gen/x16-transposec-2x4-scalar-int.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x16-transposec_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x16-transposec_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x16-transposec/gen/x16-transposec-2x4-scalar-int.c",
+      "src/src/x16-transposec/gen/x16-transposec-2x4-scalar-int.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31026,49 +31750,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x16-transposec_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x16-transposec/gen/x16-transposec-2x4-scalar-int.c",
-      ]
+source_set("x16-x32-packw_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-gio-scalar.c",
+    "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-goi-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x16-x32-packw_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x16-x32-packw_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-gio-scalar.c",
-      "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-goi-scalar.c",
+    "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-goi-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31080,52 +31809,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x16-x32-packw_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-gio-scalar.c",
-        "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-goi-scalar.c",
-      ]
+source_set("x24-transposec_ssse3-no-sse4.1") {
+  cflags = [
+    "-mno-sse4.1",
+    "-mssse3"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x24-transposec/x24-transposec-4x4-ssse3.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("x24-transposec_ssse3-no-sse4.1") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x24-transposec_ssse3-no-sse4.1_standalone") {
     cflags = [
       "-mno-sse4.1",
-      "-mssse3",
+    "-mssse3"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x24-transposec/x24-transposec-4x4-ssse3.c",
+      "src/src/x24-transposec/x24-transposec-4x4-ssse3.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31137,51 +31868,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x24-transposec_ssse3-no-sse4.1_standalone") {
-      cflags = [
-        "-mno-sse4.1",
-        "-mssse3",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x24-transposec/x24-transposec-4x4-ssse3.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x24-transposec_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x24-transposec/gen/x24-transposec-1x2-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x24-transposec_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x24-transposec_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x24-transposec/gen/x24-transposec-1x2-scalar.c",
+      "src/src/x24-transposec/gen/x24-transposec-1x2-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31193,57 +31925,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x24-transposec_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x24-transposec/gen/x24-transposec-1x2-scalar.c",
-      ]
+source_set("x32-packw_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-packw/gen/x32-packw-x16-gemm-gio-avx-u8.c",
+    "src/src/x32-packw/gen/x32-packw-x16-gemm-goi-avx-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x16s4-gemm-goi-avx-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x8-gemm-gio-avx-u8.c",
+    "src/src/x32-packw/gen/x32-packw-x8-gemm-goi-avx-u4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("x32-packw_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-packw_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/x32-packw/gen/x32-packw-x16-gemm-gio-avx-u8.c",
-      "src/src/x32-packw/gen/x32-packw-x16-gemm-goi-avx-u4.c",
-      "src/src/x32-packw/gen/x32-packw-x16s4-gemm-goi-avx-u4.c",
-      "src/src/x32-packw/gen/x32-packw-x8-gemm-gio-avx-u8.c",
-      "src/src/x32-packw/gen/x32-packw-x8-gemm-goi-avx-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x16-gemm-goi-avx-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x16s4-gemm-goi-avx-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x8-gemm-gio-avx-u8.c",
+    "src/src/x32-packw/gen/x32-packw-x8-gemm-goi-avx-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31255,60 +31996,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-packw_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-packw/gen/x32-packw-x16-gemm-gio-avx-u8.c",
-        "src/src/x32-packw/gen/x32-packw-x16-gemm-goi-avx-u4.c",
-        "src/src/x32-packw/gen/x32-packw-x16s4-gemm-goi-avx-u4.c",
-        "src/src/x32-packw/gen/x32-packw-x8-gemm-gio-avx-u8.c",
-        "src/src/x32-packw/gen/x32-packw-x8-gemm-goi-avx-u4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x32-packw_avx512f") {
+  cflags = [
+    "-mavx512f"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-packw/gen/x32-packw-x16-gemm-gio-avx512f-u8.c",
+    "src/src/x32-packw/gen/x32-packw-x16-gemm-goi-avx512f-u4-prfm.c",
+    "src/src/x32-packw/gen/x32-packw-x32-gemm-gio-avx512f-u8.c",
+    "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-avx512f-u4-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x32-packw_avx512f") {
-    cflags = [ "-mavx512f" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-packw_avx512f_standalone") {
+    cflags = [
+      "-mavx512f"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/x32-packw/gen/x32-packw-x16-gemm-gio-avx512f-u8.c",
-      "src/src/x32-packw/gen/x32-packw-x16-gemm-goi-avx512f-u4-prfm.c",
-      "src/src/x32-packw/gen/x32-packw-x32-gemm-gio-avx512f-u8.c",
-      "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-avx512f-u4-prfm.c",
+    "src/src/x32-packw/gen/x32-packw-x16-gemm-goi-avx512f-u4-prfm.c",
+    "src/src/x32-packw/gen/x32-packw-x32-gemm-gio-avx512f-u8.c",
+    "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-avx512f-u4-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31320,55 +32059,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-packw_avx512f_standalone") {
-      cflags = [ "-mavx512f" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-packw/gen/x32-packw-x16-gemm-gio-avx512f-u8.c",
-        "src/src/x32-packw/gen/x32-packw-x16-gemm-goi-avx512f-u4-prfm.c",
-        "src/src/x32-packw/gen/x32-packw-x32-gemm-gio-avx512f-u8.c",
-        "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-avx512f-u4-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x32-packw_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-packw/gen/x32-packw-x2c4-gemm-goi-sse2-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x8-gemm-goi-sse2-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("x32-packw_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-packw_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/x32-packw/gen/x32-packw-x2c4-gemm-goi-sse2-u4.c",
-      "src/src/x32-packw/gen/x32-packw-x8-gemm-goi-sse2-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x8-gemm-goi-sse2-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31380,57 +32120,62 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-packw_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-packw/gen/x32-packw-x2c4-gemm-goi-sse2-u4.c",
-        "src/src/x32-packw/gen/x32-packw-x8-gemm-goi-sse2-u4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x32-packw_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-scalar-int-u2.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x64-gemm-goi-scalar-int-u2.c"
+  ]
 
-  source_set("x32-packw_x64") {
-    cflags = []
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-packw_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/x32-packw/gen/x32-packw-x2-gemm-gio-scalar.c",
-      "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-scalar-float-u4.c",
-      "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-scalar-int-u2.c",
-      "src/src/x32-packw/gen/x32-packw-x4-gemm-gio-scalar.c",
-      "src/src/x32-packw/gen/x32-packw-x4-gemm-goi-scalar-float-u4.c",
-      "src/src/x32-packw/gen/x32-packw-x64-gemm-goi-scalar-int-u2.c",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-scalar-int-u2.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x64-gemm-goi-scalar-int-u2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31442,58 +32187,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-packw_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-packw/gen/x32-packw-x2-gemm-gio-scalar.c",
-        "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-scalar-float-u4.c",
-        "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-scalar-int-u2.c",
-        "src/src/x32-packw/gen/x32-packw-x4-gemm-gio-scalar.c",
-        "src/src/x32-packw/gen/x32-packw-x4-gemm-goi-scalar-float-u4.c",
-        "src/src/x32-packw/gen/x32-packw-x64-gemm-goi-scalar-int-u2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x32-transposec_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-transposec/gen/x32-transposec-8x8-reuse-multi-avx.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("x32-transposec_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-transposec_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x32-transposec/gen/x32-transposec-8x8-reuse-multi-avx.c",
+      "src/src/x32-transposec/gen/x32-transposec-8x8-reuse-multi-avx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31505,56 +32250,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-transposec_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-transposec/gen/x32-transposec-8x8-reuse-multi-avx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x32-transposec_sse-no-sse2") {
+  cflags = [
+    "-mno-sse2",
+    "-msse"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-transposec/x32-transposec-4x4-sse.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("x32-transposec_sse-no-sse2") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-transposec_sse-no-sse2_standalone") {
     cflags = [
       "-mno-sse2",
-      "-msse",
+    "-msse"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x32-transposec/x32-transposec-4x4-sse.c",
+      "src/src/x32-transposec/x32-transposec-4x4-sse.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31566,51 +32309,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-transposec_sse-no-sse2_standalone") {
-      cflags = [
-        "-mno-sse2",
-        "-msse",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-transposec/x32-transposec-4x4-sse.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x32-transposec_x64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-transposec/gen/x32-transposec-2x4-scalar-int.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x32-transposec_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-transposec_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x32-transposec/gen/x32-transposec-2x4-scalar-int.c",
+      "src/src/x32-transposec/gen/x32-transposec-2x4-scalar-int.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31622,51 +32366,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-transposec_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-transposec/gen/x32-transposec-2x4-scalar-int.c",
-      ]
+source_set("x32-unpool_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-unpool/x32-unpool-sse2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("x32-unpool_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-unpool_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x32-unpool/x32-unpool-sse2.c",
+      "src/src/x32-unpool/x32-unpool-sse2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31678,51 +32425,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-unpool_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-unpool/x32-unpool-sse2.c",
-      ]
+source_set("x32-unpool_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-unpool/x32-unpool-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x32-unpool_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-unpool_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x32-unpool/x32-unpool-scalar.c",
+      "src/src/x32-unpool/x32-unpool-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31734,53 +32482,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-unpool_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-unpool/x32-unpool-scalar.c",
-      ]
+source_set("x64-transposec_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x64-transposec/gen/x64-transposec-4x4-reuse-multi-avx.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("x64-transposec_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x64-transposec_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x64-transposec/gen/x64-transposec-4x4-reuse-multi-avx.c",
+      "src/src/x64-transposec/gen/x64-transposec-4x4-reuse-multi-avx.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31792,56 +32545,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x64-transposec_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x64-transposec/gen/x64-transposec-4x4-reuse-multi-avx.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x64-transposec_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x64-transposec/gen/x64-transposec-2x2-multi-mov-sse2.c"
+  ]
 
-  source_set("x64-transposec_sse2-no-sse3") {
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x64-transposec_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x64-transposec/gen/x64-transposec-2x2-multi-mov-sse2.c",
+      "src/src/x64-transposec/gen/x64-transposec-2x2-multi-mov-sse2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31853,51 +32604,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x64-transposec_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x64-transposec/gen/x64-transposec-2x2-multi-mov-sse2.c",
-      ]
+source_set("x64-transposec_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x64-transposec/gen/x64-transposec-4x2-scalar-int.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x64-transposec_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x64-transposec_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x64-transposec/gen/x64-transposec-4x2-scalar-int.c",
+      "src/src/x64-transposec/gen/x64-transposec-4x2-scalar-int.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31909,53 +32661,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x64-transposec_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x64-transposec/gen/x64-transposec-4x2-scalar-int.c",
-      ]
+source_set("x8-lut_avx-no-avx2-no-f16c-no-fma") {
+  cflags = [
+    "-mavx",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-lut/gen/x8-lut-avx-u64.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("x8-lut_avx-no-avx2-no-f16c-no-fma") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-lut_avx-no-avx2-no-f16c-no-fma_standalone") {
     cflags = [
       "-mavx",
-      "-mno-avx2",
-      "-mno-f16c",
-      "-mno-fma",
+    "-mno-avx2",
+    "-mno-f16c",
+    "-mno-fma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-lut/gen/x8-lut-avx-u64.c",
+      "src/src/x8-lut/gen/x8-lut-avx-u64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -31967,57 +32724,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-lut_avx-no-avx2-no-f16c-no-fma_standalone") {
-      cflags = [
-        "-mavx",
-        "-mno-avx2",
-        "-mno-f16c",
-        "-mno-fma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-lut/gen/x8-lut-avx-u64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x8-lut_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-lut/gen/x8-lut-avx2-u128.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("x8-lut_f16c-fma-avx2") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-lut_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-lut/gen/x8-lut-avx2-u128.c",
+      "src/src/x8-lut/gen/x8-lut-avx2-u128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32029,60 +32785,64 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-lut_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-lut/gen/x8-lut-avx2-u128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x8-lut_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
 
-  source_set("x8-lut_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-lut/gen/x8-lut-avx512skx-vpshufb-u64.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-lut_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-lut/gen/x8-lut-avx512skx-vpshufb-u64.c",
+      "src/src/x8-lut/gen/x8-lut-avx512skx-vpshufb-u64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32094,67 +32854,66 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "x8-lut_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-lut/gen/x8-lut-avx512skx-vpshufb-u64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x8-lut_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vbmi") {
+  cflags = [
+    "-mavx512bw",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vbmi",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-lut/gen/x8-lut-avx512vbmi-vpermx2b-u128.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set(
-      "x8-lut_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vbmi") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-lut_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vbmi_standalone") {
     cflags = [
       "-mavx512bw",
-      "-mavx512cd",
-      "-mavx512dq",
-      "-mavx512f",
-      "-mavx512vbmi",
-      "-mavx512vl",
-      "-mf16c",
-      "-mfma",
+    "-mavx512cd",
+    "-mavx512dq",
+    "-mavx512f",
+    "-mavx512vbmi",
+    "-mavx512vl",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-lut/gen/x8-lut-avx512vbmi-vpermx2b-u128.c",
+      "src/src/x8-lut/gen/x8-lut-avx512vbmi-vpermx2b-u128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32166,58 +32925,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set(
-        "x8-lut_f16c-fma-avx512f-avx512cd-avx512bw-avx512dq-avx512vl-avx512vbmi_standalone") {
-      cflags = [
-        "-mavx512bw",
-        "-mavx512cd",
-        "-mavx512dq",
-        "-mavx512f",
-        "-mavx512vbmi",
-        "-mavx512vl",
-        "-mf16c",
-        "-mfma",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-lut/gen/x8-lut-avx512vbmi-vpermx2b-u128.c",
-      ]
+source_set("x8-lut_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-lut/gen/x8-lut-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x8-lut_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-lut_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-lut/gen/x8-lut-scalar-u4.c",
+      "src/src/x8-lut/gen/x8-lut-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32229,48 +32982,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-lut_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-lut/gen/x8-lut-scalar-u4.c",
-      ]
+source_set("x8-packq_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-packq/x8-packq-scalar-f32qp8-u1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x8-packq_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-packq_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-packq/x8-packq-scalar-f32qp8-u1.c",
+      "src/src/x8-packq/x8-packq-scalar-f32qp8-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32282,51 +33039,58 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-packq_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-packq/x8-packq-scalar-f32qp8-u1.c",
-      ]
+source_set("x8-packw_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-packw/gen/x8-packw-x16-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x32-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x4-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x8-gemm-goi-scalar-u2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x8-packw_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-packw_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/x8-packw/gen/x8-packw-x16-gemm-goi-scalar-u2.c",
-      "src/src/x8-packw/gen/x8-packw-x32-gemm-goi-scalar-u2.c",
-      "src/src/x8-packw/gen/x8-packw-x4-gemm-goi-scalar-u2.c",
-      "src/src/x8-packw/gen/x8-packw-x8-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x32-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x4-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x8-gemm-goi-scalar-u2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32338,55 +33102,56 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-packw_x64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-packw/gen/x8-packw-x16-gemm-goi-scalar-u2.c",
-        "src/src/x8-packw/gen/x8-packw-x32-gemm-goi-scalar-u2.c",
-        "src/src/x8-packw/gen/x8-packw-x4-gemm-goi-scalar-u2.c",
-        "src/src/x8-packw/gen/x8-packw-x8-gemm-goi-scalar-u2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x8-transposec_f16c-fma-avx2") {
+  cflags = [
+    "-mavx2",
+    "-mf16c",
+    "-mfma"
+  ]
 
-  source_set("x8-transposec_f16c-fma-avx2") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-transposec/gen/x8-transposec-32x32-reuse-switch-avx2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-transposec_f16c-fma-avx2_standalone") {
     cflags = [
       "-mavx2",
-      "-mf16c",
-      "-mfma",
+    "-mf16c",
+    "-mfma"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-transposec/gen/x8-transposec-32x32-reuse-switch-avx2.c",
+      "src/src/x8-transposec/gen/x8-transposec-32x32-reuse-switch-avx2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32398,55 +33163,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-transposec_f16c-fma-avx2_standalone") {
-      cflags = [
-        "-mavx2",
-        "-mf16c",
-        "-mfma",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-transposec/gen/x8-transposec-32x32-reuse-switch-avx2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x8-transposec_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-transposec/gen/x8-transposec-16x16-reuse-mov-sse2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("x8-transposec_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-transposec_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-transposec/gen/x8-transposec-16x16-reuse-mov-sse2.c",
+      "src/src/x8-transposec/gen/x8-transposec-16x16-reuse-mov-sse2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32458,51 +33222,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-transposec_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-transposec/gen/x8-transposec-16x16-reuse-mov-sse2.c",
-      ]
+source_set("x8-transposec_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-transposec/gen/x8-transposec-2x4-scalar-int.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x8-transposec_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-transposec_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-transposec/gen/x8-transposec-2x4-scalar-int.c",
+      "src/src/x8-transposec/gen/x8-transposec-2x4-scalar-int.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32514,48 +33279,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-transposec_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-transposec/gen/x8-transposec-2x4-scalar-int.c",
-      ]
+source_set("xx-copy_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-copy/xx-copy-scalar-memcpy.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("xx-copy_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-copy_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/xx-copy/xx-copy-scalar-memcpy.c",
+      "src/src/xx-copy/xx-copy-scalar-memcpy.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32567,51 +33336,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("xx-copy_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/xx-copy/xx-copy-scalar-memcpy.c",
-      ]
+source_set("xx-fill_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-fill/xx-fill-sse2-u64.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("xx-fill_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-fill_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/xx-fill/xx-fill-sse2-u64.c",
+      "src/src/xx-fill/xx-fill-sse2-u64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32623,51 +33395,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("xx-fill_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/xx-fill/xx-fill-sse2-u64.c",
-      ]
+source_set("xx-fill_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-fill/xx-fill-scalar-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("xx-fill_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-fill_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/xx-fill/xx-fill-scalar-u16.c",
+      "src/src/xx-fill/xx-fill-scalar-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32679,51 +33452,54 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("xx-fill_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/xx-fill/xx-fill-scalar-u16.c",
-      ]
+source_set("xx-pad_sse2-no-sse3") {
+  cflags = [
+    "-mno-sse3",
+    "-msse2"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-pad/xx-pad-p16-sse2-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("xx-pad_sse2-no-sse3") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-pad_sse2-no-sse3_standalone") {
     cflags = [
       "-mno-sse3",
-      "-msse2",
+    "-msse2"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/xx-pad/xx-pad-p16-sse2-u16.c",
+      "src/src/xx-pad/xx-pad-p16-sse2-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32735,51 +33511,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("xx-pad_sse2-no-sse3_standalone") {
-      cflags = [
-        "-mno-sse3",
-        "-msse2",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/xx-pad/xx-pad-p16-sse2-u16.c",
-      ]
+source_set("xx-pad_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-pad/xx-pad-p4-scalar-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("xx-pad_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-pad_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/xx-pad/xx-pad-p4-scalar-u16.c",
+      "src/src/xx-pad/xx-pad-p4-scalar-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32791,48 +33568,52 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("xx-pad_x64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/xx-pad/xx-pad-p4-scalar-u16.c",
-      ]
+source_set("xx-transposev_x64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-transposev/xx-transposev-1x1-scalar-memcpy.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("xx-transposev_x64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-transposev_x64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/xx-transposev/xx-transposev-1x1-scalar-memcpy.c",
+      "src/src/xx-transposev/xx-transposev-1x1-scalar-memcpy.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32844,73 +33625,101 @@ if (current_cpu == "x64" || current_cpu
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("xx-transposev_x64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/xx-transposev/xx-transposev-1x1-scalar-memcpy.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
 }
 
+}
+
 if (current_cpu == "arm64") {
-  source_set("configs_arm64") {
-    cflags = []
+source_set("configs_arm64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/configs/argmaxpool-config.c",
+    "src/src/configs/avgpool-config.c",
+    "src/src/configs/binary-elementwise-config.c",
+    "src/src/configs/cmul-config.c",
+    "src/src/configs/conv-hwc2chw-config.c",
+    "src/src/configs/dwconv-config.c",
+    "src/src/configs/dwconv2d-chw-config.c",
+    "src/src/configs/gemm-config.c",
+    "src/src/configs/hardware-config.c",
+    "src/src/configs/ibilinear-chw-config.c",
+    "src/src/configs/ibilinear-config.c",
+    "src/src/configs/lut32norm-config.c",
+    "src/src/configs/maxpool-config.c",
+    "src/src/configs/pack-lh-config.c",
+    "src/src/configs/raddstoreexpminusmax-config.c",
+    "src/src/configs/reduce-config.c",
+    "src/src/configs/spmm-config.c",
+    "src/src/configs/transpose-config.c",
+    "src/src/configs/unary-elementwise-config.c",
+    "src/src/configs/unpool-config.c",
+    "src/src/configs/vmulcaddc-config.c",
+    "src/src/configs/x8-lut-config.c",
+    "src/src/configs/xx-fill-config.c",
+    "src/src/configs/xx-pad-config.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("configs_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/configs/argmaxpool-config.c",
-      "src/src/configs/avgpool-config.c",
-      "src/src/configs/binary-elementwise-config.c",
-      "src/src/configs/cmul-config.c",
-      "src/src/configs/conv-hwc2chw-config.c",
-      "src/src/configs/dwconv-config.c",
-      "src/src/configs/dwconv2d-chw-config.c",
-      "src/src/configs/gemm-config.c",
-      "src/src/configs/hardware-config.c",
-      "src/src/configs/ibilinear-chw-config.c",
-      "src/src/configs/ibilinear-config.c",
-      "src/src/configs/lut32norm-config.c",
-      "src/src/configs/maxpool-config.c",
-      "src/src/configs/pack-lh-config.c",
-      "src/src/configs/raddstoreexpminusmax-config.c",
-      "src/src/configs/reduce-config.c",
-      "src/src/configs/spmm-config.c",
-      "src/src/configs/transpose-config.c",
-      "src/src/configs/unary-elementwise-config.c",
-      "src/src/configs/unpool-config.c",
-      "src/src/configs/vmulcaddc-config.c",
-      "src/src/configs/x8-lut-config.c",
-      "src/src/configs/xx-fill-config.c",
-      "src/src/configs/xx-pad-config.c",
+    "src/src/configs/avgpool-config.c",
+    "src/src/configs/binary-elementwise-config.c",
+    "src/src/configs/cmul-config.c",
+    "src/src/configs/conv-hwc2chw-config.c",
+    "src/src/configs/dwconv-config.c",
+    "src/src/configs/dwconv2d-chw-config.c",
+    "src/src/configs/gemm-config.c",
+    "src/src/configs/hardware-config.c",
+    "src/src/configs/ibilinear-chw-config.c",
+    "src/src/configs/ibilinear-config.c",
+    "src/src/configs/lut32norm-config.c",
+    "src/src/configs/maxpool-config.c",
+    "src/src/configs/pack-lh-config.c",
+    "src/src/configs/raddstoreexpminusmax-config.c",
+    "src/src/configs/reduce-config.c",
+    "src/src/configs/spmm-config.c",
+    "src/src/configs/transpose-config.c",
+    "src/src/configs/unary-elementwise-config.c",
+    "src/src/configs/unpool-config.c",
+    "src/src/configs/vmulcaddc-config.c",
+    "src/src/configs/x8-lut-config.c",
+    "src/src/configs/xx-fill-config.c",
+    "src/src/configs/xx-pad-config.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -32922,75 +33731,60 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("configs_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/configs/argmaxpool-config.c",
-        "src/src/configs/avgpool-config.c",
-        "src/src/configs/binary-elementwise-config.c",
-        "src/src/configs/cmul-config.c",
-        "src/src/configs/conv-hwc2chw-config.c",
-        "src/src/configs/dwconv-config.c",
-        "src/src/configs/dwconv2d-chw-config.c",
-        "src/src/configs/gemm-config.c",
-        "src/src/configs/hardware-config.c",
-        "src/src/configs/ibilinear-chw-config.c",
-        "src/src/configs/ibilinear-config.c",
-        "src/src/configs/lut32norm-config.c",
-        "src/src/configs/maxpool-config.c",
-        "src/src/configs/pack-lh-config.c",
-        "src/src/configs/raddstoreexpminusmax-config.c",
-        "src/src/configs/reduce-config.c",
-        "src/src/configs/spmm-config.c",
-        "src/src/configs/transpose-config.c",
-        "src/src/configs/unary-elementwise-config.c",
-        "src/src/configs/unpool-config.c",
-        "src/src/configs/vmulcaddc-config.c",
-        "src/src/configs/x8-lut-config.c",
-        "src/src/configs/xx-fill-config.c",
-        "src/src/configs/xx-pad-config.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("enums_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/enums/allocation-type.c",
+    "src/src/enums/datatype-strings.c",
+    "src/src/enums/microkernel-type.c",
+    "src/src/enums/node-type.c",
+    "src/src/enums/operator-type.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("enums_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("enums_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/enums/allocation-type.c",
-      "src/src/enums/datatype-strings.c",
-      "src/src/enums/microkernel-type.c",
-      "src/src/enums/node-type.c",
-      "src/src/enums/operator-type.c",
+    "src/src/enums/datatype-strings.c",
+    "src/src/enums/microkernel-type.c",
+    "src/src/enums/node-type.c",
+    "src/src/enums/operator-type.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33002,52 +33796,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("enums_arm64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/enums/allocation-type.c",
-        "src/src/enums/datatype-strings.c",
-        "src/src/enums/microkernel-type.c",
-        "src/src/enums/node-type.c",
-        "src/src/enums/operator-type.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-avgpool_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-avgpool/gen/f16-avgpool-9p-minmax-neonfp16arith.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-avgpool_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-avgpool_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-avgpool/gen/f16-avgpool-9p-minmax-neonfp16arith.c",
+      "src/src/f16-avgpool/gen/f16-avgpool-9p-minmax-neonfp16arith.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33059,48 +33853,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-avgpool_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-avgpool/gen/f16-avgpool-9p-minmax-neonfp16arith.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-conv-hwc2chw_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-conv-hwc2chw/f16-conv-hwc2chw-3x3s2p1c3x4-neonfp16arith-2x2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-conv-hwc2chw_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-conv-hwc2chw_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-conv-hwc2chw/f16-conv-hwc2chw-3x3s2p1c3x4-neonfp16arith-2x2.c",
+      "src/src/f16-conv-hwc2chw/f16-conv-hwc2chw-3x3s2p1c3x4-neonfp16arith-2x2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33112,51 +33910,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-conv-hwc2chw_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-conv-hwc2chw/f16-conv-hwc2chw-3x3s2p1c3x4-neonfp16arith-2x2.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-dwconv2d-chw_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-3x3p1-minmax-neonfp16arith-2x8.c",
+    "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-3x3s2p1-minmax-neonfp16arith-1x8.c",
+    "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-5x5p2-minmax-neonfp16arith-1x8.c",
+    "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-5x5s2p2-minmax-neonfp16arith-1x8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-dwconv2d-chw_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-dwconv2d-chw_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-3x3p1-minmax-neonfp16arith-2x8.c",
-      "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-3x3s2p1-minmax-neonfp16arith-1x8.c",
-      "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-5x5p2-minmax-neonfp16arith-1x8.c",
-      "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-5x5s2p2-minmax-neonfp16arith-1x8.c",
+    "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-3x3s2p1-minmax-neonfp16arith-1x8.c",
+    "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-5x5p2-minmax-neonfp16arith-1x8.c",
+    "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-5x5s2p2-minmax-neonfp16arith-1x8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33168,55 +33973,60 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-dwconv2d-chw_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-3x3p1-minmax-neonfp16arith-2x8.c",
-        "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-3x3s2p1-minmax-neonfp16arith-1x8.c",
-        "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-5x5p2-minmax-neonfp16arith-1x8.c",
-        "src/src/f16-dwconv2d-chw/gen/f16-dwconv2d-chw-5x5s2p2-minmax-neonfp16arith-1x8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-dwconv_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-dwconv/gen/f16-dwconv-25p8c-minmax-neonfp16arith-acc2.c",
+    "src/src/f16-dwconv/gen/f16-dwconv-3p16c-minmax-neonfp16arith.c",
+    "src/src/f16-dwconv/gen/f16-dwconv-4p16c-minmax-neonfp16arith.c",
+    "src/src/f16-dwconv/gen/f16-dwconv-9p16c-minmax-neonfp16arith.c",
+    "src/src/f16-dwconv/gen/f16-dwconv-9p8c-minmax-neonfp16arith.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-dwconv_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-dwconv_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-dwconv/gen/f16-dwconv-25p8c-minmax-neonfp16arith-acc2.c",
-      "src/src/f16-dwconv/gen/f16-dwconv-3p16c-minmax-neonfp16arith.c",
-      "src/src/f16-dwconv/gen/f16-dwconv-4p16c-minmax-neonfp16arith.c",
-      "src/src/f16-dwconv/gen/f16-dwconv-9p16c-minmax-neonfp16arith.c",
-      "src/src/f16-dwconv/gen/f16-dwconv-9p8c-minmax-neonfp16arith.c",
+    "src/src/f16-dwconv/gen/f16-dwconv-3p16c-minmax-neonfp16arith.c",
+    "src/src/f16-dwconv/gen/f16-dwconv-4p16c-minmax-neonfp16arith.c",
+    "src/src/f16-dwconv/gen/f16-dwconv-9p16c-minmax-neonfp16arith.c",
+    "src/src/f16-dwconv/gen/f16-dwconv-9p8c-minmax-neonfp16arith.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33228,54 +34038,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-dwconv_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-dwconv/gen/f16-dwconv-25p8c-minmax-neonfp16arith-acc2.c",
-        "src/src/f16-dwconv/gen/f16-dwconv-3p16c-minmax-neonfp16arith.c",
-        "src/src/f16-dwconv/gen/f16-dwconv-4p16c-minmax-neonfp16arith.c",
-        "src/src/f16-dwconv/gen/f16-dwconv-9p16c-minmax-neonfp16arith.c",
-        "src/src/f16-dwconv/gen/f16-dwconv-9p8c-minmax-neonfp16arith.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-f32-vcvt_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-neon-int16-u16.c",
+    "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-neonfp16-u16.c",
+    "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-f32-vcvt_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32-vcvt_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-neon-int16-u16.c",
-      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-neonfp16-u16.c",
-      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-scalar-u4.c",
+    "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-neonfp16-u16.c",
+    "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33287,50 +34099,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-f32-vcvt_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-neon-int16-u16.c",
-        "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-neonfp16-u16.c",
-        "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-scalar-u4.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-f32acc-rdsum_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32acc-rdsum/gen/f16-f32acc-rdsum-7p7x-minmax-neonfp16arith-c16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-f32acc-rdsum_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32acc-rdsum_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-f32acc-rdsum/gen/f16-f32acc-rdsum-7p7x-minmax-neonfp16arith-c16.c",
+      "src/src/f16-f32acc-rdsum/gen/f16-f32acc-rdsum-7p7x-minmax-neonfp16arith-c16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33342,48 +34156,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-f32acc-rdsum_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32acc-rdsum/gen/f16-f32acc-rdsum-7p7x-minmax-neonfp16arith-c16.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-f32acc-rsum_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32acc-rsum/gen/f16-f32acc-rsum-neonfp16arith-u32-acc4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-f32acc-rsum_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32acc-rsum_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-f32acc-rsum/gen/f16-f32acc-rsum-neonfp16arith-u32-acc4.c",
+      "src/src/f16-f32acc-rsum/gen/f16-f32acc-rsum-neonfp16arith-u32-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33395,51 +34213,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-f32acc-rsum_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32acc-rsum/gen/f16-f32acc-rsum-neonfp16arith-u32-acc4.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-gemm_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-gemm/gen/f16-gemm-1x16-minmax-neonfp16arith-ld64.c",
+    "src/src/f16-gemm/gen/f16-gemm-1x8-minmax-neonfp16arith-ld64.c",
+    "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-neonfp16arith-ld64.c",
+    "src/src/f16-gemm/gen/f16-gemm-6x8-minmax-neonfp16arith-ld64.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-gemm_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-gemm_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-gemm/gen/f16-gemm-1x16-minmax-neonfp16arith-ld64.c",
-      "src/src/f16-gemm/gen/f16-gemm-1x8-minmax-neonfp16arith-ld64.c",
-      "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-neonfp16arith-ld64.c",
-      "src/src/f16-gemm/gen/f16-gemm-6x8-minmax-neonfp16arith-ld64.c",
+    "src/src/f16-gemm/gen/f16-gemm-1x8-minmax-neonfp16arith-ld64.c",
+    "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-neonfp16arith-ld64.c",
+    "src/src/f16-gemm/gen/f16-gemm-6x8-minmax-neonfp16arith-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33451,58 +34276,66 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-gemm_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-gemm/gen/f16-gemm-1x16-minmax-neonfp16arith-ld64.c",
-        "src/src/f16-gemm/gen/f16-gemm-1x8-minmax-neonfp16arith-ld64.c",
-        "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-neonfp16arith-ld64.c",
-        "src/src/f16-gemm/gen/f16-gemm-6x8-minmax-neonfp16arith-ld64.c",
-      ]
+source_set("f16-gemm_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  asmflags = cflags
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-gemm/gen/f16-gemm-1x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
+    "src/src/f16-gemm/gen/f16-gemm-4x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
+    "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55.S",
+    "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55r0.S",
+    "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a75.S",
+    "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-ld64.S"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-gemm_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-    asmflags = cflags
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
 
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-gemm/gen/f16-gemm-1x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
-      "src/src/f16-gemm/gen/f16-gemm-4x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
-      "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55.S",
-      "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55r0.S",
-      "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a75.S",
-      "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
+    "src/src/f16-gemm/gen/f16-gemm-4x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
+    "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55.S",
+    "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55r0.S",
+    "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a75.S",
+    "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-ld64.S"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33514,55 +34347,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
 
-      asmflags = cflags
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-gemm/gen/f16-gemm-1x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
-        "src/src/f16-gemm/gen/f16-gemm-4x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
-        "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55.S",
-        "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55r0.S",
-        "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a75.S",
-        "src/src/f16-gemm/gen/f16-gemm-6x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-ibilinear-chw_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-ibilinear-chw/gen/f16-ibilinear-chw-neonfp16arith-p8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-ibilinear-chw_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-ibilinear-chw_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-ibilinear-chw/gen/f16-ibilinear-chw-neonfp16arith-p8.c",
+      "src/src/f16-ibilinear-chw/gen/f16-ibilinear-chw-neonfp16arith-p8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33574,48 +34404,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-ibilinear-chw_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-ibilinear-chw/gen/f16-ibilinear-chw-neonfp16arith-p8.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-ibilinear_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-ibilinear/gen/f16-ibilinear-neonfp16arith-c8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-ibilinear_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-ibilinear_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-ibilinear/gen/f16-ibilinear-neonfp16arith-c8.c",
+      "src/src/f16-ibilinear/gen/f16-ibilinear-neonfp16arith-c8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33627,51 +34461,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-ibilinear_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-ibilinear/gen/f16-ibilinear-neonfp16arith-c8.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-igemm_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-igemm/gen/f16-igemm-1x16-minmax-neonfp16arith-ld64.c",
+    "src/src/f16-igemm/gen/f16-igemm-1x8-minmax-neonfp16arith-ld64.c",
+    "src/src/f16-igemm/gen/f16-igemm-6x16-minmax-neonfp16arith-ld64.c",
+    "src/src/f16-igemm/gen/f16-igemm-6x8-minmax-neonfp16arith-ld64.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-igemm_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-igemm_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-igemm/gen/f16-igemm-1x16-minmax-neonfp16arith-ld64.c",
-      "src/src/f16-igemm/gen/f16-igemm-1x8-minmax-neonfp16arith-ld64.c",
-      "src/src/f16-igemm/gen/f16-igemm-6x16-minmax-neonfp16arith-ld64.c",
-      "src/src/f16-igemm/gen/f16-igemm-6x8-minmax-neonfp16arith-ld64.c",
+    "src/src/f16-igemm/gen/f16-igemm-1x8-minmax-neonfp16arith-ld64.c",
+    "src/src/f16-igemm/gen/f16-igemm-6x16-minmax-neonfp16arith-ld64.c",
+    "src/src/f16-igemm/gen/f16-igemm-6x8-minmax-neonfp16arith-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33683,58 +34524,66 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-igemm_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-igemm/gen/f16-igemm-1x16-minmax-neonfp16arith-ld64.c",
-        "src/src/f16-igemm/gen/f16-igemm-1x8-minmax-neonfp16arith-ld64.c",
-        "src/src/f16-igemm/gen/f16-igemm-6x16-minmax-neonfp16arith-ld64.c",
-        "src/src/f16-igemm/gen/f16-igemm-6x8-minmax-neonfp16arith-ld64.c",
-      ]
+source_set("f16-igemm_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  asmflags = cflags
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-igemm/f16-igemm-1x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
+    "src/src/f16-igemm/f16-igemm-4x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
+    "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55.S",
+    "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55r0.S",
+    "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a75.S",
+    "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-ld64.S"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-igemm_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-    asmflags = cflags
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-igemm_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
 
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-igemm/f16-igemm-1x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
-      "src/src/f16-igemm/f16-igemm-4x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
-      "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55.S",
-      "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55r0.S",
-      "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a75.S",
-      "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
+    "src/src/f16-igemm/f16-igemm-4x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
+    "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55.S",
+    "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55r0.S",
+    "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a75.S",
+    "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-ld64.S"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33746,55 +34595,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-igemm_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
 
-      asmflags = cflags
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-igemm/f16-igemm-1x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
-        "src/src/f16-igemm/f16-igemm-4x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
-        "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55.S",
-        "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a55r0.S",
-        "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-cortex-a75.S",
-        "src/src/f16-igemm/f16-igemm-6x16-minmax-asm-aarch64-neonfp16arith-ld64.S",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-maxpool_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-maxpool/gen/f16-maxpool-9p-minmax-neonfp16arith-u8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-maxpool_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-maxpool_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-maxpool/gen/f16-maxpool-9p-minmax-neonfp16arith-u8.c",
+      "src/src/f16-maxpool/gen/f16-maxpool-9p-minmax-neonfp16arith-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33806,48 +34652,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-maxpool_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-maxpool/gen/f16-maxpool-9p-minmax-neonfp16arith-u8.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-qs8-vcvt_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-neonfp16arith-u32.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-qs8-vcvt_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-qs8-vcvt_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-neonfp16arith-u32.c",
+      "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-neonfp16arith-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33859,48 +34709,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-qs8-vcvt_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-neonfp16arith-u32.c",
-      ]
+source_set("f16-qs8-vcvt_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-scalar-imagic-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-qs8-vcvt_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-qs8-vcvt_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-scalar-imagic-u4.c",
+      "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-scalar-imagic-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33912,48 +34766,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-qs8-vcvt_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-scalar-imagic-u4.c",
-      ]
+source_set("f16-qu8-vcvt_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-qu8-vcvt/gen/f16-qu8-vcvt-scalar-imagic-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-qu8-vcvt_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-qu8-vcvt_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-qu8-vcvt/gen/f16-qu8-vcvt-scalar-imagic-u4.c",
+      "src/src/f16-qu8-vcvt/gen/f16-qu8-vcvt-scalar-imagic-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -33965,48 +34823,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-qu8-vcvt_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-qu8-vcvt/gen/f16-qu8-vcvt-scalar-imagic-u4.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-raddstoreexpminusmax_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-raddstoreexpminusmax/gen/f16-raddstoreexpminusmax-neonfp16arith-rr2-p2-u32.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-raddstoreexpminusmax_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-raddstoreexpminusmax_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-raddstoreexpminusmax/gen/f16-raddstoreexpminusmax-neonfp16arith-rr2-p2-u32.c",
+      "src/src/f16-raddstoreexpminusmax/gen/f16-raddstoreexpminusmax-neonfp16arith-rr2-p2-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34018,49 +34880,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-raddstoreexpminusmax_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-raddstoreexpminusmax/gen/f16-raddstoreexpminusmax-neonfp16arith-rr2-p2-u32.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-rdminmax_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-neonfp16arith-c32.c",
+    "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-neonfp16arith-c32.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-rdminmax_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-rdminmax_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-neonfp16arith-c32.c",
-      "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-neonfp16arith-c32.c",
+    "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-neonfp16arith-c32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34072,50 +34939,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-rdminmax_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-neonfp16arith-c32.c",
-        "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-neonfp16arith-c32.c",
-      ]
+source_set("f16-rdminmax_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-scalar-c2.c",
+    "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-scalar-c2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-rdminmax_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-rdminmax_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-scalar-c2.c",
-      "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-scalar-c2.c",
+    "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34127,51 +34998,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-rdminmax_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-scalar-c2.c",
-        "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-scalar-c2.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-rminmax_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-rminmax/gen/f16-rmax-neonfp16arith-u32-acc4.c",
+    "src/src/f16-rminmax/gen/f16-rmin-neonfp16arith-u32-acc4.c",
+    "src/src/f16-rminmax/gen/f16-rminmax-neonfp16arith-u32-acc4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-rminmax_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-rminmax_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-rminmax/gen/f16-rmax-neonfp16arith-u32-acc4.c",
-      "src/src/f16-rminmax/gen/f16-rmin-neonfp16arith-u32-acc4.c",
-      "src/src/f16-rminmax/gen/f16-rminmax-neonfp16arith-u32-acc4.c",
+    "src/src/f16-rminmax/gen/f16-rmin-neonfp16arith-u32-acc4.c",
+    "src/src/f16-rminmax/gen/f16-rminmax-neonfp16arith-u32-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34183,52 +35059,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-rminmax_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-rminmax/gen/f16-rmax-neonfp16arith-u32-acc4.c",
-        "src/src/f16-rminmax/gen/f16-rmin-neonfp16arith-u32-acc4.c",
-        "src/src/f16-rminmax/gen/f16-rminmax-neonfp16arith-u32-acc4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-rminmax_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-rminmax/gen/f16-rmax-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rmin-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rminmax-scalar-u2-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-rminmax_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-rminmax_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-rminmax/gen/f16-rmax-scalar-u2-acc2.c",
-      "src/src/f16-rminmax/gen/f16-rmin-scalar-u2-acc2.c",
-      "src/src/f16-rminmax/gen/f16-rminmax-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rmin-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rminmax-scalar-u2-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34240,50 +35120,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-rminmax_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-rminmax/gen/f16-rmax-scalar-u2-acc2.c",
-        "src/src/f16-rminmax/gen/f16-rmin-scalar-u2-acc2.c",
-        "src/src/f16-rminmax/gen/f16-rminmax-scalar-u2-acc2.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-spmm_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-spmm/gen/f16-spmm-32x1-minmax-neonfp16arith-pipelined.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-spmm_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-spmm_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-spmm/gen/f16-spmm-32x1-minmax-neonfp16arith-pipelined.c",
+      "src/src/f16-spmm/gen/f16-spmm-32x1-minmax-neonfp16arith-pipelined.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34295,48 +35177,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-spmm_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-spmm/gen/f16-spmm-32x1-minmax-neonfp16arith-pipelined.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vapproxgelu_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-neonfp16arith-rational-6-4-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vapproxgelu_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vapproxgelu_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-neonfp16arith-rational-6-4-div.c",
+      "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-neonfp16arith-rational-6-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34348,48 +35234,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vapproxgelu_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-neonfp16arith-rational-6-4-div.c",
-      ]
+source_set("f16-vapproxgelu_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-scalar-rational-6-4-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vapproxgelu_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vapproxgelu_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-scalar-rational-6-4-div.c",
+      "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-scalar-rational-6-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34401,69 +35291,94 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vapproxgelu_arm64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-scalar-rational-6-4-div.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vbinary_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vbinary/gen/f16-vadd-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vaddc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vdiv-aarch64-neonfp16arith-u8.c",
+    "src/src/f16-vbinary/gen/f16-vdiv-fp16arith-u2.c",
+    "src/src/f16-vbinary/gen/f16-vdivc-aarch64-neonfp16arith-u8.c",
+    "src/src/f16-vbinary/gen/f16-vdivc-fp16arith-u2.c",
+    "src/src/f16-vbinary/gen/f16-vmax-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmaxc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmin-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vminc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmul-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmulc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vprelu-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vpreluc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vrdivc-aarch64-neonfp16arith-u8.c",
+    "src/src/f16-vbinary/gen/f16-vrdivc-fp16arith-u2.c",
+    "src/src/f16-vbinary/gen/f16-vrpreluc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vrsubc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsqrdiff-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsqrdiffc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsub-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsubc-neonfp16arith-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vbinary_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vbinary_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-vbinary/gen/f16-vadd-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vaddc-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vdiv-aarch64-neonfp16arith-u8.c",
-      "src/src/f16-vbinary/gen/f16-vdiv-fp16arith-u2.c",
-      "src/src/f16-vbinary/gen/f16-vdivc-aarch64-neonfp16arith-u8.c",
-      "src/src/f16-vbinary/gen/f16-vdivc-fp16arith-u2.c",
-      "src/src/f16-vbinary/gen/f16-vmax-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vmaxc-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vmin-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vminc-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vmul-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vmulc-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vprelu-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vpreluc-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vrdivc-aarch64-neonfp16arith-u8.c",
-      "src/src/f16-vbinary/gen/f16-vrdivc-fp16arith-u2.c",
-      "src/src/f16-vbinary/gen/f16-vrpreluc-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vrsubc-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vsqrdiff-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vsqrdiffc-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vsub-neonfp16arith-u16.c",
-      "src/src/f16-vbinary/gen/f16-vsubc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vaddc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vdiv-aarch64-neonfp16arith-u8.c",
+    "src/src/f16-vbinary/gen/f16-vdiv-fp16arith-u2.c",
+    "src/src/f16-vbinary/gen/f16-vdivc-aarch64-neonfp16arith-u8.c",
+    "src/src/f16-vbinary/gen/f16-vdivc-fp16arith-u2.c",
+    "src/src/f16-vbinary/gen/f16-vmax-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmaxc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmin-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vminc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmul-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vmulc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vprelu-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vpreluc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vrdivc-aarch64-neonfp16arith-u8.c",
+    "src/src/f16-vbinary/gen/f16-vrdivc-fp16arith-u2.c",
+    "src/src/f16-vbinary/gen/f16-vrpreluc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vrsubc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsqrdiff-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsqrdiffc-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsub-neonfp16arith-u16.c",
+    "src/src/f16-vbinary/gen/f16-vsubc-neonfp16arith-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34475,69 +35390,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vbinary_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vbinary/gen/f16-vadd-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vaddc-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vdiv-aarch64-neonfp16arith-u8.c",
-        "src/src/f16-vbinary/gen/f16-vdiv-fp16arith-u2.c",
-        "src/src/f16-vbinary/gen/f16-vdivc-aarch64-neonfp16arith-u8.c",
-        "src/src/f16-vbinary/gen/f16-vdivc-fp16arith-u2.c",
-        "src/src/f16-vbinary/gen/f16-vmax-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vmaxc-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vmin-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vminc-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vmul-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vmulc-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vprelu-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vpreluc-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vrdivc-aarch64-neonfp16arith-u8.c",
-        "src/src/f16-vbinary/gen/f16-vrdivc-fp16arith-u2.c",
-        "src/src/f16-vbinary/gen/f16-vrpreluc-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vrsubc-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vsqrdiff-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vsqrdiffc-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vsub-neonfp16arith-u16.c",
-        "src/src/f16-vbinary/gen/f16-vsubc-neonfp16arith-u16.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vclamp_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vclamp/gen/f16-vclamp-neonfp16arith-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vclamp_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vclamp_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vclamp/gen/f16-vclamp-neonfp16arith-u16.c",
+      "src/src/f16-vclamp/gen/f16-vclamp-neonfp16arith-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34549,48 +35447,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vclamp_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vclamp/gen/f16-vclamp-neonfp16arith-u16.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vcmul_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vcmul/gen/f16-vcmul-neonfp16arith-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vcmul_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vcmul_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vcmul/gen/f16-vcmul-neonfp16arith-u16.c",
+      "src/src/f16-vcmul/gen/f16-vcmul-neonfp16arith-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34602,48 +35504,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vcmul_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vcmul/gen/f16-vcmul-neonfp16arith-u16.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vcos_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vcos/gen/f16-vcos-neonfp16arith-rational-3-2-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vcos_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vcos_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vcos/gen/f16-vcos-neonfp16arith-rational-3-2-div.c",
+      "src/src/f16-vcos/gen/f16-vcos-neonfp16arith-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34655,48 +35561,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vcos_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vcos/gen/f16-vcos-neonfp16arith-rational-3-2-div.c",
-      ]
+source_set("f16-vcos_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vcos/gen/f16-vcos-scalar-rational-3-2-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vcos_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vcos_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vcos/gen/f16-vcos-scalar-rational-3-2-div.c",
+      "src/src/f16-vcos/gen/f16-vcos-scalar-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34708,48 +35618,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vcos_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vcos/gen/f16-vcos-scalar-rational-3-2-div.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-velu_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-velu/gen/f16-velu-neonfp16arith-rr1-p3-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-velu_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-velu_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-velu/gen/f16-velu-neonfp16arith-rr1-p3-u16.c",
+      "src/src/f16-velu/gen/f16-velu-neonfp16arith-rr1-p3-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34761,48 +35675,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-velu_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-velu/gen/f16-velu-neonfp16arith-rr1-p3-u16.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vexp_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vexp/gen/f16-vexp-neonfp16arith-poly-3.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vexp_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vexp_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vexp/gen/f16-vexp-neonfp16arith-poly-3.c",
+      "src/src/f16-vexp/gen/f16-vexp-neonfp16arith-poly-3.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34814,48 +35732,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vexp_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vexp/gen/f16-vexp-neonfp16arith-poly-3.c",
-      ]
+source_set("f16-vexp_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vexp/gen/f16-vexp-scalar-poly-3.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vexp_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vexp_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vexp/gen/f16-vexp-scalar-poly-3.c",
+      "src/src/f16-vexp/gen/f16-vexp-scalar-poly-3.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34867,48 +35789,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vexp_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vexp/gen/f16-vexp-scalar-poly-3.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vgelu_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vgelu/gen/f16-vgelu-neonfp16arith-rational-6-4-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vgelu_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vgelu_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vgelu/gen/f16-vgelu-neonfp16arith-rational-6-4-div.c",
+      "src/src/f16-vgelu/gen/f16-vgelu-neonfp16arith-rational-6-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34920,48 +35846,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vgelu_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vgelu/gen/f16-vgelu-neonfp16arith-rational-6-4-div.c",
-      ]
+source_set("f16-vgelu_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vgelu/gen/f16-vgelu-scalar-rational-6-4-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vgelu_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vgelu_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vgelu/gen/f16-vgelu-scalar-rational-6-4-div.c",
+      "src/src/f16-vgelu/gen/f16-vgelu-scalar-rational-6-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -34973,48 +35903,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vgelu_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vgelu/gen/f16-vgelu-scalar-rational-6-4-div.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vhswish_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vhswish/gen/f16-vhswish-neonfp16arith-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vhswish_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vhswish_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vhswish/gen/f16-vhswish-neonfp16arith-u16.c",
+      "src/src/f16-vhswish/gen/f16-vhswish-neonfp16arith-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35026,48 +35960,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vhswish_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vhswish/gen/f16-vhswish-neonfp16arith-u16.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vlrelu_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vlrelu/gen/f16-vlrelu-neonfp16arith-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vlrelu_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vlrelu_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vlrelu/gen/f16-vlrelu-neonfp16arith-u16.c",
+      "src/src/f16-vlrelu/gen/f16-vlrelu-neonfp16arith-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35079,48 +36017,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vlrelu_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vlrelu/gen/f16-vlrelu-neonfp16arith-u16.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vmulcaddc_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vmulcaddc/gen/f16-vmulcaddc-c8-minmax-neonfp16arith-2x.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vmulcaddc_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vmulcaddc_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vmulcaddc/gen/f16-vmulcaddc-c8-minmax-neonfp16arith-2x.c",
+      "src/src/f16-vmulcaddc/gen/f16-vmulcaddc-c8-minmax-neonfp16arith-2x.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35132,51 +36074,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vmulcaddc_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vmulcaddc/gen/f16-vmulcaddc-c8-minmax-neonfp16arith-2x.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vrnd_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vrnd/gen/f16-vrndd-neonfp16arith-u16.c",
+    "src/src/f16-vrnd/gen/f16-vrndne-neonfp16arith-u16.c",
+    "src/src/f16-vrnd/gen/f16-vrndu-neonfp16arith-u16.c",
+    "src/src/f16-vrnd/gen/f16-vrndz-neonfp16arith-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vrnd_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vrnd_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-vrnd/gen/f16-vrndd-neonfp16arith-u16.c",
-      "src/src/f16-vrnd/gen/f16-vrndne-neonfp16arith-u16.c",
-      "src/src/f16-vrnd/gen/f16-vrndu-neonfp16arith-u16.c",
-      "src/src/f16-vrnd/gen/f16-vrndz-neonfp16arith-u16.c",
+    "src/src/f16-vrnd/gen/f16-vrndne-neonfp16arith-u16.c",
+    "src/src/f16-vrnd/gen/f16-vrndu-neonfp16arith-u16.c",
+    "src/src/f16-vrnd/gen/f16-vrndz-neonfp16arith-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35188,51 +36137,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vrnd_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vrnd/gen/f16-vrndd-neonfp16arith-u16.c",
-        "src/src/f16-vrnd/gen/f16-vrndne-neonfp16arith-u16.c",
-        "src/src/f16-vrnd/gen/f16-vrndu-neonfp16arith-u16.c",
-        "src/src/f16-vrnd/gen/f16-vrndz-neonfp16arith-u16.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vrsqrt_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vrsqrt/gen/f16-vrsqrt-neonfp16arith-rsqrt-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vrsqrt_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vrsqrt_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vrsqrt/gen/f16-vrsqrt-neonfp16arith-rsqrt-u16.c",
+      "src/src/f16-vrsqrt/gen/f16-vrsqrt-neonfp16arith-rsqrt-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35244,49 +36194,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vrsqrt_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vrsqrt/gen/f16-vrsqrt-neonfp16arith-rsqrt-u16.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vsigmoid_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vsigmoid/gen/f16-vsigmoid-neonfp16arith-rr2-p2-nr1fma-u32.c",
+    "src/src/f16-vsigmoid/gen/f16-vsigmoid-neonfp16arith-rr2-p2-nr1recps-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vsigmoid_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vsigmoid_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-vsigmoid/gen/f16-vsigmoid-neonfp16arith-rr2-p2-nr1fma-u32.c",
-      "src/src/f16-vsigmoid/gen/f16-vsigmoid-neonfp16arith-rr2-p2-nr1recps-u16.c",
+    "src/src/f16-vsigmoid/gen/f16-vsigmoid-neonfp16arith-rr2-p2-nr1recps-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35298,49 +36253,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vsigmoid_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vsigmoid/gen/f16-vsigmoid-neonfp16arith-rr2-p2-nr1fma-u32.c",
-        "src/src/f16-vsigmoid/gen/f16-vsigmoid-neonfp16arith-rr2-p2-nr1recps-u16.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vsin_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vsin/gen/f16-vsin-neonfp16arith-rational-3-2-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vsin_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vsin_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vsin/gen/f16-vsin-neonfp16arith-rational-3-2-div.c",
+      "src/src/f16-vsin/gen/f16-vsin-neonfp16arith-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35352,48 +36310,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vsin_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vsin/gen/f16-vsin-neonfp16arith-rational-3-2-div.c",
-      ]
+source_set("f16-vsin_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vsin/gen/f16-vsin-scalar-rational-3-2-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vsin_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vsin_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vsin/gen/f16-vsin-scalar-rational-3-2-div.c",
+      "src/src/f16-vsin/gen/f16-vsin-scalar-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35405,49 +36367,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vsin_arm64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vsin/gen/f16-vsin-scalar-rational-3-2-div.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vsqrt_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vsqrt/gen/f16-vsqrt-aarch64-neonfp16arith-sqrt-u8.c",
+    "src/src/f16-vsqrt/gen/f16-vsqrt-neonfp16arith-nr1fma1adj-u8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vsqrt_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vsqrt_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-vsqrt/gen/f16-vsqrt-aarch64-neonfp16arith-sqrt-u8.c",
-      "src/src/f16-vsqrt/gen/f16-vsqrt-neonfp16arith-nr1fma1adj-u8.c",
+    "src/src/f16-vsqrt/gen/f16-vsqrt-neonfp16arith-nr1fma1adj-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35459,50 +36426,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vsqrt_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vsqrt/gen/f16-vsqrt-aarch64-neonfp16arith-sqrt-u8.c",
-        "src/src/f16-vsqrt/gen/f16-vsqrt-neonfp16arith-nr1fma1adj-u8.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vtanh_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vtanh/gen/f16-vtanh-aarch64-neonfp16arith-expm1minus-rr1-p3h2ts-div-u32.c",
+    "src/src/f16-vtanh/gen/f16-vtanh-neonfp16arith-expm1minus-rr1-p3h2ts-nr1fma-u32.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vtanh_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vtanh_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-vtanh/gen/f16-vtanh-aarch64-neonfp16arith-expm1minus-rr1-p3h2ts-div-u32.c",
-      "src/src/f16-vtanh/gen/f16-vtanh-neonfp16arith-expm1minus-rr1-p3h2ts-nr1fma-u32.c",
+    "src/src/f16-vtanh/gen/f16-vtanh-neonfp16arith-expm1minus-rr1-p3h2ts-nr1fma-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35514,51 +36485,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vtanh_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vtanh/gen/f16-vtanh-aarch64-neonfp16arith-expm1minus-rr1-p3h2ts-div-u32.c",
-        "src/src/f16-vtanh/gen/f16-vtanh-neonfp16arith-expm1minus-rr1-p3h2ts-nr1fma-u32.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("f16-vunary_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vunary/gen/f16-vabs-neonfp16arith-u16.c",
+    "src/src/f16-vunary/gen/f16-vneg-neonfp16arith-u16.c",
+    "src/src/f16-vunary/gen/f16-vsqr-neonfp16arith-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vunary_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vunary_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f16-vunary/gen/f16-vabs-neonfp16arith-u16.c",
-      "src/src/f16-vunary/gen/f16-vneg-neonfp16arith-u16.c",
-      "src/src/f16-vunary/gen/f16-vsqr-neonfp16arith-u16.c",
+    "src/src/f16-vunary/gen/f16-vneg-neonfp16arith-u16.c",
+    "src/src/f16-vunary/gen/f16-vsqr-neonfp16arith-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35570,51 +36546,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vunary_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vunary/gen/f16-vabs-neonfp16arith-u16.c",
-        "src/src/f16-vunary/gen/f16-vneg-neonfp16arith-u16.c",
-        "src/src/f16-vunary/gen/f16-vsqr-neonfp16arith-u16.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-argmaxpool_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-neon-c4.c",
+    "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-scalar-c1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-argmaxpool_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-argmaxpool_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-neon-c4.c",
-      "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-scalar-c1.c",
+    "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-scalar-c1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35626,50 +36605,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-argmaxpool_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-neon-c4.c",
-        "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-scalar-c1.c",
-      ]
+source_set("f32-avgpool_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-neon-u4.c",
+    "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-scalar-u1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-avgpool_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-avgpool_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-neon-u4.c",
-      "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-scalar-u1.c",
+    "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35681,51 +36664,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-avgpool_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-neon-u4.c",
-        "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-scalar-u1.c",
-      ]
+source_set("f32-conv-hwc2chw_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-aarch64-neonfma-2x2.c",
+    "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-neon-2x2.c",
+    "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-scalar-1x1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-conv-hwc2chw_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-conv-hwc2chw_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-aarch64-neonfma-2x2.c",
-      "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-neon-2x2.c",
-      "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-scalar-1x1.c",
+    "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-neon-2x2.c",
+    "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-scalar-1x1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35737,65 +36725,82 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-conv-hwc2chw_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-aarch64-neonfma-2x2.c",
-        "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-neon-2x2.c",
-        "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-scalar-1x1.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-dwconv2d-chw_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-aarch64-neonfma-3x4.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-neon-2x4.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-4x1.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-aarch64-neonfma-2x4-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-neon-1x4.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-1x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-aarch64-neonfma-4x4.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-neon-1x4.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-aarch64-neonfma-1x4-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-neon-1x4.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-2x1-acc2.c"
+  ]
 
-  source_set("f32-dwconv2d-chw_arm64") {
-    cflags = []
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv2d-chw_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-aarch64-neonfma-3x4.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-neon-2x4.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-2x1-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-4x1.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-aarch64-neonfma-2x4-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-neon-1x4.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-1x1-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-2x1-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-aarch64-neonfma-4x4.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-neon-1x4.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-1x1-acc5.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-2x1-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-aarch64-neonfma-1x4-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-neon-1x4.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-1x1-acc5.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-neon-2x4.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-4x1.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-aarch64-neonfma-2x4-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-neon-1x4.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-1x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-aarch64-neonfma-4x4.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-neon-1x4.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-aarch64-neonfma-1x4-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-neon-1x4.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-2x1-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35807,65 +36812,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv2d-chw_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-aarch64-neonfma-3x4.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-neon-2x4.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-2x1-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-4x1.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-aarch64-neonfma-2x4-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-neon-1x4.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-1x1-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-2x1-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-aarch64-neonfma-4x4.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-neon-1x4.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-1x1-acc5.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-2x1-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-aarch64-neonfma-1x4-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-neon-1x4.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-1x1-acc5.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-2x1-acc2.c",
-      ]
+source_set("f32-dwconv_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  asmflags = cflags
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv/f32-dwconv-9p4c-minmax-asm-aarch64-neonfma-cortex-a55.S"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-dwconv_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-    asmflags = cflags
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
 
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-dwconv/f32-dwconv-9p4c-minmax-asm-aarch64-neonfma-cortex-a55.S",
+      "src/src/f32-dwconv/f32-dwconv-9p4c-minmax-asm-aarch64-neonfma-cortex-a55.S"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35877,67 +36873,86 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
-
-      asmflags = cflags
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv/f32-dwconv-9p4c-minmax-asm-aarch64-neonfma-cortex-a55.S",
-      ]
+source_set("f32-dwconv_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p8c-minmax-neon.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p8c-minmax-neonfma-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p8c-minmax-neon.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p8c-minmax-neonfma.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p8c-minmax-neon.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p8c-minmax-neonfma.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p8c-minmax-neon.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p8c-minmax-neonfma.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-dwconv_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-dwconv/gen/f32-dwconv-25p1c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-25p1c-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-25p2c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-25p2c-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-25p8c-minmax-neon.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-25p8c-minmax-neonfma-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-3p1c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-3p1c-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-3p8c-minmax-neon.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-3p8c-minmax-neonfma.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-4p1c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-4p1c-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-4p8c-minmax-neon.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-4p8c-minmax-neonfma.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-9p1c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-9p1c-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-9p8c-minmax-neon.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-9p8c-minmax-neonfma.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p8c-minmax-neon.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p8c-minmax-neonfma-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p8c-minmax-neon.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p8c-minmax-neonfma.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p8c-minmax-neon.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p8c-minmax-neonfma.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p8c-minmax-neon.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p8c-minmax-neonfma.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -35949,67 +36964,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p1c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p1c-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p2c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p2c-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p8c-minmax-neon.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p8c-minmax-neonfma-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-3p1c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-3p1c-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-3p8c-minmax-neon.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-3p8c-minmax-neonfma.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-4p1c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-4p1c-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-4p8c-minmax-neon.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-4p8c-minmax-neonfma.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-9p1c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-9p1c-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-9p8c-minmax-neon.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-9p8c-minmax-neonfma.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-f16-vcvt_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-neon-u8.c",
+    "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-neonfp16-u16.c",
+    "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-scalar-fabsf-u2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-f16-vcvt_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-f16-vcvt_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-neon-u8.c",
-      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-neonfp16-u16.c",
-      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-scalar-fabsf-u2.c",
+    "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-neonfp16-u16.c",
+    "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-scalar-fabsf-u2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36021,70 +37025,92 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-f16-vcvt_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-neon-u8.c",
-        "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-neonfp16-u16.c",
-        "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-scalar-fabsf-u2.c",
-      ]
+source_set("f32-gemm_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  asmflags = cflags
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-ld128-acc2.S",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-ld128-acc4.S",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-asm-aarch64-neonfma-ld128.S",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-ld128.S",
+    "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
+    "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
+    "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
+    "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a73.S",
+    "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
+    "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-ld128.S"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-gemm_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-    asmflags = cflags
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
 
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
-      "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
-      "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
-      "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
-      "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-ld128-acc2.S",
-      "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-ld128-acc4.S",
-      "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-asm-aarch64-neonfma-ld128.S",
-      "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
-      "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
-      "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
-      "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
-      "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
-      "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-ld128.S",
-      "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
-      "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
-      "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
-      "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a73.S",
-      "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
-      "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-ld128.S",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-ld128-acc2.S",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-ld128-acc4.S",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-asm-aarch64-neonfma-ld128.S",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-ld128.S",
+    "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
+    "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
+    "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
+    "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a73.S",
+    "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
+    "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-ld128.S"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36096,86 +37122,88 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+source_set("f32-gemm_arm64") {
+  cflags = [
 
-      asmflags = cflags
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
-        "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
-        "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
-        "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
-        "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-ld128-acc2.S",
-        "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-asm-aarch64-neonfma-ld128-acc4.S",
-        "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-asm-aarch64-neonfma-ld128.S",
-        "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
-        "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
-        "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
-        "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
-        "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
-        "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-asm-aarch64-neonfma-ld128.S",
-        "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
-        "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
-        "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
-        "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a73.S",
-        "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
-        "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-asm-aarch64-neonfma-ld128.S",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-gemm/gen/f32-gemm-1x16-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-neon-lane-ld64.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x8s4-minmax-neonfma.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x16-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-aarch64-neonfma-lane-ld64.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-neon-lane-ld64.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-neon-lane-ld128.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x8s4-minmax-neonfma.c",
+    "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-gemm/gen/f32-gemm-6x8s4-minmax-neonfma.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-gemm_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-gemm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-gemm/gen/f32-gemm-1x16-minmax-aarch64-neonfma-lane-ld128.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x4-minmax-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x4-relu-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x4-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-aarch64-neonfma-lane-ld128.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-neon-lane-ld64.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x8s4-minmax-neonfma.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x16-minmax-aarch64-neonfma-lane-ld128.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-aarch64-neonfma-lane-ld64.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-neon-lane-ld64.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x2-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x4-minmax-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x4-relu-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x4-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-neon-lane-ld128.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x8s4-minmax-neonfma.c",
-      "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-aarch64-neonfma-lane-ld128.c",
-      "src/src/f32-gemm/gen/f32-gemm-6x8s4-minmax-neonfma.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-neon-lane-ld64.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x8s4-minmax-neonfma.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x16-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-aarch64-neonfma-lane-ld64.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-neon-lane-ld64.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-neon-lane-ld128.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x8s4-minmax-neonfma.c",
+    "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-gemm/gen/f32-gemm-6x8s4-minmax-neonfma.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36187,68 +37215,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-gemm_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-gemm/gen/f32-gemm-1x16-minmax-aarch64-neonfma-lane-ld128.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x4-minmax-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x4-relu-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x4-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-aarch64-neonfma-lane-ld128.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x8-minmax-neon-lane-ld64.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x8s4-minmax-neonfma.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x16-minmax-aarch64-neonfma-lane-ld128.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-aarch64-neonfma-lane-ld64.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-neon-lane-ld64.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x2-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x4-minmax-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x4-relu-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x4-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x8-minmax-neon-lane-ld128.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x8s4-minmax-neonfma.c",
-        "src/src/f32-gemm/gen/f32-gemm-6x8-minmax-aarch64-neonfma-lane-ld128.c",
-        "src/src/f32-gemm/gen/f32-gemm-6x8s4-minmax-neonfma.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-ibilinear-chw_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-neon-p8.c",
+    "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-neonfma-p8.c",
+    "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-scalar-p4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-ibilinear-chw_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-ibilinear-chw_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-neon-p8.c",
-      "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-neonfma-p8.c",
-      "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-scalar-p4.c",
+    "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-neonfma-p8.c",
+    "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-scalar-p4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36260,52 +37276,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-ibilinear-chw_arm64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-neon-p8.c",
-        "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-neonfma-p8.c",
-        "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-scalar-p4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-ibilinear_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-ibilinear/gen/f32-ibilinear-neon-c8.c",
+    "src/src/f32-ibilinear/gen/f32-ibilinear-neonfma-c8.c",
+    "src/src/f32-ibilinear/gen/f32-ibilinear-scalar-c2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-ibilinear_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-ibilinear_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-ibilinear/gen/f32-ibilinear-neon-c8.c",
-      "src/src/f32-ibilinear/gen/f32-ibilinear-neonfma-c8.c",
-      "src/src/f32-ibilinear/gen/f32-ibilinear-scalar-c2.c",
+    "src/src/f32-ibilinear/gen/f32-ibilinear-neonfma-c8.c",
+    "src/src/f32-ibilinear/gen/f32-ibilinear-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36317,69 +37337,90 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-ibilinear_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-ibilinear/gen/f32-ibilinear-neon-c8.c",
-        "src/src/f32-ibilinear/gen/f32-ibilinear-neonfma-c8.c",
-        "src/src/f32-ibilinear/gen/f32-ibilinear-scalar-c2.c",
-      ]
+source_set("f32-igemm_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  asmflags = cflags
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-igemm/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
+    "src/src/f32-igemm/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
+    "src/src/f32-igemm/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a73.S",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-ld64.S",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-ld128.S",
+    "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
+    "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
+    "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
+    "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-ld128.S"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-igemm_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-    asmflags = cflags
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-igemm_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
 
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-igemm/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
-      "src/src/f32-igemm/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
-      "src/src/f32-igemm/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a73.S",
-      "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
-      "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
-      "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
-      "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
-      "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-ld64.S",
-      "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
-      "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
-      "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
-      "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
-      "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
-      "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-ld128.S",
-      "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
-      "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
-      "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
-      "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-ld128.S",
+    "src/src/f32-igemm/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
+    "src/src/f32-igemm/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a73.S",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-ld64.S",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-ld128.S",
+    "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
+    "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
+    "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
+    "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-ld128.S"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36391,85 +37432,88 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-igemm_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+source_set("f32-igemm_arm64") {
+  cflags = [
 
-      asmflags = cflags
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-igemm/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
-        "src/src/f32-igemm/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a55.S",
-        "src/src/f32-igemm/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a73.S",
-        "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
-        "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
-        "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
-        "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
-        "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-asm-aarch64-neonfma-ld64.S",
-        "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
-        "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
-        "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
-        "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
-        "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-cortex-a75.S",
-        "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-asm-aarch64-neonfma-ld128.S",
-        "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53-prfm.S",
-        "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a53.S",
-        "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-cortex-a75-prfm.S",
-        "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-asm-aarch64-neonfma-ld128.S",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-igemm/gen/f32-igemm-1x16-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-neon-lane-ld64.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x8s4-minmax-neonfma.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x16-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-aarch64-neonfma-lane-ld64.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-neon-lane-ld64.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-neon-lane-ld128.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x8s4-minmax-neonfma.c",
+    "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-igemm/gen/f32-igemm-6x8s4-minmax-neonfma.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-igemm_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-igemm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-igemm/gen/f32-igemm-1x16-minmax-aarch64-neonfma-lane-ld128.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x4-minmax-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x4-relu-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x4-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-aarch64-neonfma-lane-ld128.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-neon-lane-ld64.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x8s4-minmax-neonfma.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x16-minmax-aarch64-neonfma-lane-ld128.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-aarch64-neonfma-lane-ld64.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-neon-lane-ld64.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x2-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x4-minmax-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x4-relu-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x4-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-neon-lane-ld128.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x8s4-minmax-neonfma.c",
-      "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-aarch64-neonfma-lane-ld128.c",
-      "src/src/f32-igemm/gen/f32-igemm-6x8s4-minmax-neonfma.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-neon-lane-ld64.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x8s4-minmax-neonfma.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x16-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-aarch64-neonfma-lane-ld64.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-neon-lane-ld64.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-neon-lane-ld128.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x8s4-minmax-neonfma.c",
+    "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-igemm/gen/f32-igemm-6x8s4-minmax-neonfma.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36481,67 +37525,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-igemm_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-igemm/gen/f32-igemm-1x16-minmax-aarch64-neonfma-lane-ld128.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x4-minmax-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x4-relu-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x4-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-aarch64-neonfma-lane-ld128.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x8-minmax-neon-lane-ld64.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x8s4-minmax-neonfma.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x16-minmax-aarch64-neonfma-lane-ld128.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-aarch64-neonfma-lane-ld64.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-neon-lane-ld64.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x2-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x4-minmax-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x4-relu-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x4-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x8-minmax-neon-lane-ld128.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x8s4-minmax-neonfma.c",
-        "src/src/f32-igemm/gen/f32-igemm-6x8-minmax-aarch64-neonfma-lane-ld128.c",
-        "src/src/f32-igemm/gen/f32-igemm-6x8s4-minmax-neonfma.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("f32-maxpool_arm64") {
-    cflags = []
+source_set("f32-maxpool_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-neon-u4.c",
+    "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-scalar-u1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-maxpool_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-neon-u4.c",
-      "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-scalar-u1.c",
+    "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36553,55 +37584,64 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-maxpool_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-neon-u4.c",
-        "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-scalar-u1.c",
-      ]
+source_set("f32-qc4w-gemm_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x8-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x8-minmax-neon-lane-ld64.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x4-minmax-scalar.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x8-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x8-minmax-neon-lane-ld64.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-6x8-minmax-aarch64-neonfma-lane-ld128.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-qc4w-gemm_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc4w-gemm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x4-minmax-scalar.c",
-      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x8-minmax-aarch64-neonfma-lane-ld128.c",
-      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x8-minmax-neon-lane-ld64.c",
-      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x4-minmax-scalar.c",
-      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x8-minmax-aarch64-neonfma-lane-ld128.c",
-      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x8-minmax-neon-lane-ld64.c",
-      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-6x8-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x8-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x8-minmax-neon-lane-ld64.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x4-minmax-scalar.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x8-minmax-aarch64-neonfma-lane-ld128.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x8-minmax-neon-lane-ld64.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-6x8-minmax-aarch64-neonfma-lane-ld128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36613,58 +37653,60 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc4w-gemm_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x4-minmax-scalar.c",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x8-minmax-aarch64-neonfma-lane-ld128.c",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x8-minmax-neon-lane-ld64.c",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x4-minmax-scalar.c",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x8-minmax-aarch64-neonfma-lane-ld128.c",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x8-minmax-neon-lane-ld64.c",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-6x8-minmax-aarch64-neonfma-lane-ld128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qc8w-gemm_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
+
+  asmflags = cflags
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-asm-aarch64-neonfma-ld128-acc4.S",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-asm-aarch64-neonfma-ld128.S",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-6x8-minmax-asm-aarch64-neonfma-ld128.S"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-qc8w-gemm_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-    asmflags = cflags
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
 
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-asm-aarch64-neonfma-ld128-acc4.S",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-asm-aarch64-neonfma-ld128.S",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-6x8-minmax-asm-aarch64-neonfma-ld128.S",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-asm-aarch64-neonfma-ld128.S",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-6x8-minmax-asm-aarch64-neonfma-ld128.S"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36676,57 +37718,62 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
 
-      asmflags = cflags
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-asm-aarch64-neonfma-ld128-acc4.S",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-asm-aarch64-neonfma-ld128.S",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-6x8-minmax-asm-aarch64-neonfma-ld128.S",
-      ]
+source_set("f32-qc8w-gemm_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-aarch64-neonfma-lane-ld64.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-neon-lane-ld64.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x4-minmax-scalar.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x8-minmax-neon-lane-ld64.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-6x8-minmax-aarch64-neonfma-lane-ld64.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-qc8w-gemm_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc8w-gemm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x4-minmax-scalar.c",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-aarch64-neonfma-lane-ld64.c",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-neon-lane-ld64.c",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x4-minmax-scalar.c",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x8-minmax-neon-lane-ld64.c",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-6x8-minmax-aarch64-neonfma-lane-ld64.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-aarch64-neonfma-lane-ld64.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-neon-lane-ld64.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x4-minmax-scalar.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x8-minmax-neon-lane-ld64.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-6x8-minmax-aarch64-neonfma-lane-ld64.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36738,56 +37785,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc8w-gemm_arm64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x4-minmax-scalar.c",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-aarch64-neonfma-lane-ld64.c",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x8-minmax-neon-lane-ld64.c",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x4-minmax-scalar.c",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x8-minmax-neon-lane-ld64.c",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-6x8-minmax-aarch64-neonfma-lane-ld64.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qs8-vcvt_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-neon-u32.c",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-neonv8-u32.c",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-imagic-u4.c",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-lrintf-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-qs8-vcvt_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qs8-vcvt_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-neon-u32.c",
-      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-neonv8-u32.c",
-      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-imagic-u4.c",
-      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-lrintf-u4.c",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-neonv8-u32.c",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-imagic-u4.c",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-lrintf-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36799,54 +37848,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qs8-vcvt_arm64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-neon-u32.c",
-        "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-neonv8-u32.c",
-        "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-imagic-u4.c",
-        "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-lrintf-u4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qu8-vcvt_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-neon-u32.c",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-neonv8-u32.c",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-imagic-u4.c",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-lrintf-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-qu8-vcvt_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qu8-vcvt_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-neon-u32.c",
-      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-neonv8-u32.c",
-      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-imagic-u4.c",
-      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-lrintf-u4.c",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-neonv8-u32.c",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-imagic-u4.c",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-lrintf-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36858,52 +37911,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qu8-vcvt_arm64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-neon-u32.c",
-        "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-neonv8-u32.c",
-        "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-imagic-u4.c",
-        "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-lrintf-u4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-raddstoreexpminusmax_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-neonfma-rr1-lut64-p2-u16-acc2.c",
+    "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-scalar-rr2-p5-u4-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-raddstoreexpminusmax_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-raddstoreexpminusmax_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-neonfma-rr1-lut64-p2-u16-acc2.c",
-      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-scalar-rr2-p5-u4-acc2.c",
+    "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-scalar-rr2-p5-u4-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36915,52 +37970,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-raddstoreexpminusmax_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-neonfma-rr1-lut64-p2-u16-acc2.c",
-        "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-scalar-rr2-p5-u4-acc2.c",
-      ]
+source_set("f32-rdminmax_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-neon-c32.c",
+    "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-scalar-c2.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-neon-c32.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-scalar-c2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-rdminmax_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdminmax_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-neon-c32.c",
-      "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-scalar-c2.c",
-      "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-neon-c32.c",
-      "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-scalar-c2.c",
+    "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-scalar-c2.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-neon-c32.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -36972,52 +38033,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rdminmax_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-neon-c32.c",
-        "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-scalar-c2.c",
-        "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-neon-c32.c",
-        "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-scalar-c2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-rdsum_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-neon-c16.c",
+    "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-rdsum_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdsum_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-neon-c16.c",
-      "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-scalar.c",
+    "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37029,54 +38092,62 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rdsum_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-neon-c16.c",
-        "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-scalar.c",
-      ]
+source_set("f32-rminmax_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rminmax/gen/f32-rmax-neon-u16-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmax-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-neon-u16-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-neon-u16-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-scalar-u4-acc4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-rminmax_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rminmax_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-rminmax/gen/f32-rmax-neon-u16-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rmax-scalar-u4-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rmin-neon-u16-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rmin-scalar-u4-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rminmax-neon-u16-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rminmax-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmax-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-neon-u16-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-neon-u16-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-scalar-u4-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37088,54 +38159,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rminmax_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rminmax/gen/f32-rmax-neon-u16-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rmax-scalar-u4-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rmin-neon-u16-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rmin-scalar-u4-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rminmax-neon-u16-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rminmax-scalar-u4-acc4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-rsum_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rsum/gen/f32-rsum-neon-u16-acc4.c",
+    "src/src/f32-rsum/gen/f32-rsum-scalar-u4-acc4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-rsum_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rsum_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-rsum/gen/f32-rsum-neon-u16-acc4.c",
-      "src/src/f32-rsum/gen/f32-rsum-scalar-u4-acc4.c",
+    "src/src/f32-rsum/gen/f32-rsum-scalar-u4-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37147,55 +38218,64 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rsum_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rsum/gen/f32-rsum-neon-u16-acc4.c",
-        "src/src/f32-rsum/gen/f32-rsum-scalar-u4-acc4.c",
-      ]
+source_set("f32-spmm_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-spmm/gen/f32-spmm-32x1-minmax-neon.c",
+    "src/src/f32-spmm/gen/f32-spmm-32x1-minmax-neonfma-pipelined.c",
+    "src/src/f32-spmm/gen/f32-spmm-32x2-minmax-aarch64-neonfma.c",
+    "src/src/f32-spmm/gen/f32-spmm-32x4-minmax-aarch64-neonfma.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x1-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x2-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x4-minmax-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-spmm_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-spmm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-spmm/gen/f32-spmm-32x1-minmax-neon.c",
-      "src/src/f32-spmm/gen/f32-spmm-32x1-minmax-neonfma-pipelined.c",
-      "src/src/f32-spmm/gen/f32-spmm-32x2-minmax-aarch64-neonfma.c",
-      "src/src/f32-spmm/gen/f32-spmm-32x4-minmax-aarch64-neonfma.c",
-      "src/src/f32-spmm/gen/f32-spmm-8x1-minmax-scalar.c",
-      "src/src/f32-spmm/gen/f32-spmm-8x2-minmax-scalar.c",
-      "src/src/f32-spmm/gen/f32-spmm-8x4-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-32x1-minmax-neonfma-pipelined.c",
+    "src/src/f32-spmm/gen/f32-spmm-32x2-minmax-aarch64-neonfma.c",
+    "src/src/f32-spmm/gen/f32-spmm-32x4-minmax-aarch64-neonfma.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x1-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x2-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37207,55 +38287,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-spmm_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-spmm/gen/f32-spmm-32x1-minmax-neon.c",
-        "src/src/f32-spmm/gen/f32-spmm-32x1-minmax-neonfma-pipelined.c",
-        "src/src/f32-spmm/gen/f32-spmm-32x2-minmax-aarch64-neonfma.c",
-        "src/src/f32-spmm/gen/f32-spmm-32x4-minmax-aarch64-neonfma.c",
-        "src/src/f32-spmm/gen/f32-spmm-8x1-minmax-scalar.c",
-        "src/src/f32-spmm/gen/f32-spmm-8x2-minmax-scalar.c",
-        "src/src/f32-spmm/gen/f32-spmm-8x4-minmax-scalar.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("f32-vapproxgelu_arm64") {
-    cflags = []
+source_set("f32-vapproxgelu_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-neon-rational-12-10-div.c",
+    "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-scalar-rational-12-10-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vapproxgelu_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-neon-rational-12-10-div.c",
-      "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-scalar-rational-12-10-div.c",
+    "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-scalar-rational-12-10-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37267,86 +38346,126 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vapproxgelu_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-neon-rational-12-10-div.c",
-        "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-scalar-rational-12-10-div.c",
-      ]
+source_set("f32-vbinary_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vbinary/gen/f32-vadd-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vadd-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-aarch64-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-aarch64-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vmax-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmax-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmin-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmin-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vminc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vminc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmul-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmul-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vprelu-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vprelu-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-aarch64-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsub-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsub-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-scalar-u8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vbinary_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vbinary_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vbinary/gen/f32-vadd-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vadd-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vaddc-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vaddc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vdiv-aarch64-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vdiv-scalar-u2.c",
-      "src/src/f32-vbinary/gen/f32-vdivc-aarch64-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vdivc-scalar-u2.c",
-      "src/src/f32-vbinary/gen/f32-vmax-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmax-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmaxc-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmaxc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmin-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmin-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vminc-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vminc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmul-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmul-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmulc-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmulc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vprelu-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vprelu-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vpreluc-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vpreluc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vrdivc-aarch64-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vrdivc-scalar-u2.c",
-      "src/src/f32-vbinary/gen/f32-vrpreluc-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vrpreluc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vrsubc-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vrsubc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiff-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiff-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiffc-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiffc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsub-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsub-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsubc-neon-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsubc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vadd-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-aarch64-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-aarch64-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vmax-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmax-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmin-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmin-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vminc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vminc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmul-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmul-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vprelu-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vprelu-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-aarch64-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsub-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsub-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-neon-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37358,86 +38477,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vbinary_arm64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vbinary/gen/f32-vadd-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vadd-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vaddc-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vaddc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vdiv-aarch64-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vdiv-scalar-u2.c",
-        "src/src/f32-vbinary/gen/f32-vdivc-aarch64-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vdivc-scalar-u2.c",
-        "src/src/f32-vbinary/gen/f32-vmax-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmax-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmaxc-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmaxc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmin-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmin-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vminc-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vminc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmul-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmul-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmulc-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmulc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vprelu-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vprelu-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vpreluc-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vpreluc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vrdivc-aarch64-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vrdivc-scalar-u2.c",
-        "src/src/f32-vbinary/gen/f32-vrpreluc-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vrpreluc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vrsubc-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vrsubc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiff-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiff-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiffc-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiffc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsub-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsub-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsubc-neon-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsubc-scalar-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vclamp_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vclamp/gen/f32-vclamp-neon.c",
+    "src/src/f32-vclamp/gen/f32-vclamp-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vclamp_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vclamp_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vclamp/gen/f32-vclamp-neon.c",
-      "src/src/f32-vclamp/gen/f32-vclamp-scalar.c",
+    "src/src/f32-vclamp/gen/f32-vclamp-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37449,50 +38536,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vclamp_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vclamp/gen/f32-vclamp-neon.c",
-        "src/src/f32-vclamp/gen/f32-vclamp-scalar.c",
-      ]
+source_set("f32-vcmul_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcmul/gen/f32-vcmul-neon-u8.c",
+    "src/src/f32-vcmul/gen/f32-vcmul-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vcmul_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcmul_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vcmul/gen/f32-vcmul-neon-u8.c",
-      "src/src/f32-vcmul/gen/f32-vcmul-scalar-u4.c",
+    "src/src/f32-vcmul/gen/f32-vcmul-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37504,54 +38595,62 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcmul_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcmul/gen/f32-vcmul-neon-u8.c",
-        "src/src/f32-vcmul/gen/f32-vcmul-scalar-u4.c",
-      ]
+source_set("f32-vcopysign_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcopysign/gen/f32-vcopysign-neon.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysign-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-neon.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-neon.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vcopysign_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcopysign_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vcopysign/gen/f32-vcopysign-neon.c",
-      "src/src/f32-vcopysign/gen/f32-vcopysign-scalar.c",
-      "src/src/f32-vcopysign/gen/f32-vcopysignc-neon.c",
-      "src/src/f32-vcopysign/gen/f32-vcopysignc-scalar.c",
-      "src/src/f32-vcopysign/gen/f32-vrcopysignc-neon.c",
-      "src/src/f32-vcopysign/gen/f32-vrcopysignc-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysign-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-neon.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-neon.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37563,54 +38662,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcopysign_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcopysign/gen/f32-vcopysign-neon.c",
-        "src/src/f32-vcopysign/gen/f32-vcopysign-scalar.c",
-        "src/src/f32-vcopysign/gen/f32-vcopysignc-neon.c",
-        "src/src/f32-vcopysign/gen/f32-vcopysignc-scalar.c",
-        "src/src/f32-vcopysign/gen/f32-vrcopysignc-neon.c",
-        "src/src/f32-vcopysign/gen/f32-vrcopysignc-scalar.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vcos_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcos/gen/f32-vcos-neon-rational-5-4-div.c",
+    "src/src/f32-vcos/gen/f32-vcos-scalar-rational-5-4-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-vcos_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcos_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vcos/gen/f32-vcos-neon-rational-5-4-div.c",
-      "src/src/f32-vcos/gen/f32-vcos-scalar-rational-5-4-div.c",
+    "src/src/f32-vcos/gen/f32-vcos-scalar-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37622,52 +38721,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcos_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcos/gen/f32-vcos-neon-rational-5-4-div.c",
-        "src/src/f32-vcos/gen/f32-vcos-scalar-rational-5-4-div.c",
-      ]
+source_set("f32-velu_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-velu/gen/f32-velu-neon-rr2-lut16-p3-u8.c",
+    "src/src/f32-velu/gen/f32-velu-neonfma-rr1-lut16-p3-u16.c",
+    "src/src/f32-velu/gen/f32-velu-neonfma-rr1-p6-u8.c",
+    "src/src/f32-velu/gen/f32-velu-scalar-rr2-lut16-p3-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-velu_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-velu_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-velu/gen/f32-velu-neon-rr2-lut16-p3-u8.c",
-      "src/src/f32-velu/gen/f32-velu-neonfma-rr1-lut16-p3-u16.c",
-      "src/src/f32-velu/gen/f32-velu-neonfma-rr1-p6-u8.c",
-      "src/src/f32-velu/gen/f32-velu-scalar-rr2-lut16-p3-u4.c",
+    "src/src/f32-velu/gen/f32-velu-neonfma-rr1-lut16-p3-u16.c",
+    "src/src/f32-velu/gen/f32-velu-neonfma-rr1-p6-u8.c",
+    "src/src/f32-velu/gen/f32-velu-scalar-rr2-lut16-p3-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37679,52 +38784,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-velu_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-velu/gen/f32-velu-neon-rr2-lut16-p3-u8.c",
-        "src/src/f32-velu/gen/f32-velu-neonfma-rr1-lut16-p3-u16.c",
-        "src/src/f32-velu/gen/f32-velu-neonfma-rr1-p6-u8.c",
-        "src/src/f32-velu/gen/f32-velu-scalar-rr2-lut16-p3-u4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vexp_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vexp/gen/f32-vexp-neon-rational-3-2-div.c",
+    "src/src/f32-vexp/gen/f32-vexp-scalar-rational-3-2-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-vexp_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vexp_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vexp/gen/f32-vexp-neon-rational-3-2-div.c",
-      "src/src/f32-vexp/gen/f32-vexp-scalar-rational-3-2-div.c",
+    "src/src/f32-vexp/gen/f32-vexp-scalar-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37736,50 +38843,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vexp_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vexp/gen/f32-vexp-neon-rational-3-2-div.c",
-        "src/src/f32-vexp/gen/f32-vexp-scalar-rational-3-2-div.c",
-      ]
+source_set("f32-vgelu_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vgelu/gen/f32-vgelu-neon-rational-12-10-div.c",
+    "src/src/f32-vgelu/gen/f32-vgelu-scalar-rational-12-10-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vgelu_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vgelu_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vgelu/gen/f32-vgelu-neon-rational-12-10-div.c",
-      "src/src/f32-vgelu/gen/f32-vgelu-scalar-rational-12-10-div.c",
+    "src/src/f32-vgelu/gen/f32-vgelu-scalar-rational-12-10-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37791,50 +38902,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vgelu_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vgelu/gen/f32-vgelu-neon-rational-12-10-div.c",
-        "src/src/f32-vgelu/gen/f32-vgelu-scalar-rational-12-10-div.c",
-      ]
+source_set("f32-vhswish_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vhswish/gen/f32-vhswish-neon.c",
+    "src/src/f32-vhswish/gen/f32-vhswish-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vhswish_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vhswish_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vhswish/gen/f32-vhswish-neon.c",
-      "src/src/f32-vhswish/gen/f32-vhswish-scalar.c",
+    "src/src/f32-vhswish/gen/f32-vhswish-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37846,50 +38961,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vhswish_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vhswish/gen/f32-vhswish-neon.c",
-        "src/src/f32-vhswish/gen/f32-vhswish-scalar.c",
-      ]
+source_set("f32-vlog_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlog/gen/f32-vlog-neon-rational-3-3-div.c",
+    "src/src/f32-vlog/gen/f32-vlog-scalar-rational-3-3-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vlog_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlog_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vlog/gen/f32-vlog-neon-rational-3-3-div.c",
-      "src/src/f32-vlog/gen/f32-vlog-scalar-rational-3-3-div.c",
+    "src/src/f32-vlog/gen/f32-vlog-scalar-rational-3-3-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37901,50 +39020,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlog_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlog/gen/f32-vlog-neon-rational-3-3-div.c",
-        "src/src/f32-vlog/gen/f32-vlog-scalar-rational-3-3-div.c",
-      ]
+source_set("f32-vlrelu_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlrelu/gen/f32-vlrelu-neon-u8.c",
+    "src/src/f32-vlrelu/gen/f32-vlrelu-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vlrelu_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlrelu_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vlrelu/gen/f32-vlrelu-neon-u8.c",
-      "src/src/f32-vlrelu/gen/f32-vlrelu-scalar-u4.c",
+    "src/src/f32-vlrelu/gen/f32-vlrelu-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -37956,51 +39079,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlrelu_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlrelu/gen/f32-vlrelu-neon-u8.c",
-        "src/src/f32-vlrelu/gen/f32-vlrelu-scalar-u4.c",
-      ]
+source_set("f32-vmulcaddc_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c1-minmax-scalar-2x.c",
+    "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c4-minmax-neon-2x.c",
+    "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c4-minmax-neonfma-2x.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vmulcaddc_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vmulcaddc_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c1-minmax-scalar-2x.c",
-      "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c4-minmax-neon-2x.c",
-      "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c4-minmax-neonfma-2x.c",
+    "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c4-minmax-neon-2x.c",
+    "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c4-minmax-neonfma-2x.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38012,61 +39140,74 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vmulcaddc_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c1-minmax-scalar-2x.c",
-        "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c4-minmax-neon-2x.c",
-        "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c4-minmax-neonfma-2x.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vrnd_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrnd/gen/f32-vrndd-neon-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndd-neonv8-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndd-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-neon-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-neonv8-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-neon-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-neonv8-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-neon-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-neonv8-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-scalar-libm-u1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-vrnd_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrnd_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vrnd/gen/f32-vrndd-neon-u8.c",
-      "src/src/f32-vrnd/gen/f32-vrndd-neonv8-u8.c",
-      "src/src/f32-vrnd/gen/f32-vrndd-scalar-libm-u1.c",
-      "src/src/f32-vrnd/gen/f32-vrndne-neon-u8.c",
-      "src/src/f32-vrnd/gen/f32-vrndne-neonv8-u8.c",
-      "src/src/f32-vrnd/gen/f32-vrndne-scalar-libm-u1.c",
-      "src/src/f32-vrnd/gen/f32-vrndu-neon-u8.c",
-      "src/src/f32-vrnd/gen/f32-vrndu-neonv8-u8.c",
-      "src/src/f32-vrnd/gen/f32-vrndu-scalar-libm-u1.c",
-      "src/src/f32-vrnd/gen/f32-vrndz-neon-u8.c",
-      "src/src/f32-vrnd/gen/f32-vrndz-neonv8-u8.c",
-      "src/src/f32-vrnd/gen/f32-vrndz-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndd-neonv8-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndd-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-neon-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-neonv8-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-neon-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-neonv8-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-neon-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-neonv8-u8.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-scalar-libm-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38078,61 +39219,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrnd_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrnd/gen/f32-vrndd-neon-u8.c",
-        "src/src/f32-vrnd/gen/f32-vrndd-neonv8-u8.c",
-        "src/src/f32-vrnd/gen/f32-vrndd-scalar-libm-u1.c",
-        "src/src/f32-vrnd/gen/f32-vrndne-neon-u8.c",
-        "src/src/f32-vrnd/gen/f32-vrndne-neonv8-u8.c",
-        "src/src/f32-vrnd/gen/f32-vrndne-scalar-libm-u1.c",
-        "src/src/f32-vrnd/gen/f32-vrndu-neon-u8.c",
-        "src/src/f32-vrnd/gen/f32-vrndu-neonv8-u8.c",
-        "src/src/f32-vrnd/gen/f32-vrndu-scalar-libm-u1.c",
-        "src/src/f32-vrnd/gen/f32-vrndz-neon-u8.c",
-        "src/src/f32-vrnd/gen/f32-vrndz-neonv8-u8.c",
-        "src/src/f32-vrnd/gen/f32-vrndz-scalar-libm-u1.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vrsqrt_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-neon-rsqrt.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-rsqrt-u1.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-sqrt.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-vrsqrt_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrsqrt_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vrsqrt/gen/f32-vrsqrt-neon-rsqrt.c",
-      "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-rsqrt-u1.c",
-      "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-sqrt.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-rsqrt-u1.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-sqrt.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38144,52 +39280,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrsqrt_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrsqrt/gen/f32-vrsqrt-neon-rsqrt.c",
-        "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-rsqrt-u1.c",
-        "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-sqrt.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vsigmoid_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsigmoid/gen/f32-vsigmoid-neon-rr2-lut64-p2-nr2recps-u8.c",
+    "src/src/f32-vsigmoid/gen/f32-vsigmoid-neonfma-rr1-lut64-p2-nr2recps-u16.c",
+    "src/src/f32-vsigmoid/gen/f32-vsigmoid-scalar-rr2-lut64-p2-div-u2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-vsigmoid_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsigmoid_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vsigmoid/gen/f32-vsigmoid-neon-rr2-lut64-p2-nr2recps-u8.c",
-      "src/src/f32-vsigmoid/gen/f32-vsigmoid-neonfma-rr1-lut64-p2-nr2recps-u16.c",
-      "src/src/f32-vsigmoid/gen/f32-vsigmoid-scalar-rr2-lut64-p2-div-u2.c",
+    "src/src/f32-vsigmoid/gen/f32-vsigmoid-neonfma-rr1-lut64-p2-nr2recps-u16.c",
+    "src/src/f32-vsigmoid/gen/f32-vsigmoid-scalar-rr2-lut64-p2-div-u2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38201,51 +39341,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsigmoid_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsigmoid/gen/f32-vsigmoid-neon-rr2-lut64-p2-nr2recps-u8.c",
-        "src/src/f32-vsigmoid/gen/f32-vsigmoid-neonfma-rr1-lut64-p2-nr2recps-u16.c",
-        "src/src/f32-vsigmoid/gen/f32-vsigmoid-scalar-rr2-lut64-p2-div-u2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vsin_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsin/gen/f32-vsin-neon-rational-5-4-div.c",
+    "src/src/f32-vsin/gen/f32-vsin-scalar-rational-5-4-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vsin_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsin_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vsin/gen/f32-vsin-neon-rational-5-4-div.c",
-      "src/src/f32-vsin/gen/f32-vsin-scalar-rational-5-4-div.c",
+    "src/src/f32-vsin/gen/f32-vsin-scalar-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38257,50 +39400,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsin_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsin/gen/f32-vsin-neon-rational-5-4-div.c",
-        "src/src/f32-vsin/gen/f32-vsin-scalar-rational-5-4-div.c",
-      ]
+source_set("f32-vsqrt_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsqrt/gen/f32-vsqrt-aarch64-neon-sqrt.c",
+    "src/src/f32-vsqrt/gen/f32-vsqrt-scalar-sqrt.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vsqrt_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsqrt_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vsqrt/gen/f32-vsqrt-aarch64-neon-sqrt.c",
-      "src/src/f32-vsqrt/gen/f32-vsqrt-scalar-sqrt.c",
+    "src/src/f32-vsqrt/gen/f32-vsqrt-scalar-sqrt.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38312,50 +39459,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsqrt_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsqrt/gen/f32-vsqrt-aarch64-neon-sqrt.c",
-        "src/src/f32-vsqrt/gen/f32-vsqrt-scalar-sqrt.c",
-      ]
+source_set("f32-vtanh_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vtanh/gen/f32-vtanh-neon-rational-9-8-div.c",
+    "src/src/f32-vtanh/gen/f32-vtanh-scalar-rational-9-8-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vtanh_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vtanh_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vtanh/gen/f32-vtanh-neon-rational-9-8-div.c",
-      "src/src/f32-vtanh/gen/f32-vtanh-scalar-rational-9-8-div.c",
+    "src/src/f32-vtanh/gen/f32-vtanh-scalar-rational-9-8-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38367,54 +39518,62 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vtanh_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vtanh/gen/f32-vtanh-neon-rational-9-8-div.c",
-        "src/src/f32-vtanh/gen/f32-vtanh-scalar-rational-9-8-div.c",
-      ]
+source_set("f32-vunary_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vunary/gen/f32-vabs-neon.c",
+    "src/src/f32-vunary/gen/f32-vabs-scalar.c",
+    "src/src/f32-vunary/gen/f32-vneg-neon.c",
+    "src/src/f32-vunary/gen/f32-vneg-scalar.c",
+    "src/src/f32-vunary/gen/f32-vsqr-neon.c",
+    "src/src/f32-vunary/gen/f32-vsqr-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vunary_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vunary_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/f32-vunary/gen/f32-vabs-neon.c",
-      "src/src/f32-vunary/gen/f32-vabs-scalar.c",
-      "src/src/f32-vunary/gen/f32-vneg-neon.c",
-      "src/src/f32-vunary/gen/f32-vneg-scalar.c",
-      "src/src/f32-vunary/gen/f32-vsqr-neon.c",
-      "src/src/f32-vunary/gen/f32-vsqr-scalar.c",
+    "src/src/f32-vunary/gen/f32-vabs-scalar.c",
+    "src/src/f32-vunary/gen/f32-vneg-neon.c",
+    "src/src/f32-vunary/gen/f32-vneg-scalar.c",
+    "src/src/f32-vunary/gen/f32-vsqr-neon.c",
+    "src/src/f32-vunary/gen/f32-vsqr-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38426,73 +39585,92 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vunary_arm64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vunary/gen/f32-vabs-neon.c",
-        "src/src/f32-vunary/gen/f32-vabs-scalar.c",
-        "src/src/f32-vunary/gen/f32-vneg-neon.c",
-        "src/src/f32-vunary/gen/f32-vneg-scalar.c",
-        "src/src/f32-vunary/gen/f32-vsqr-neon.c",
-        "src/src/f32-vunary/gen/f32-vsqr-scalar.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("operators_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/operators/argmax-pooling-nhwc.c",
+    "src/src/operators/average-pooling-nhwc.c",
+    "src/src/operators/batch-matrix-multiply-nc.c",
+    "src/src/operators/binary-elementwise-nd.c",
+    "src/src/operators/constant-pad-nd.c",
+    "src/src/operators/convolution-nchw.c",
+    "src/src/operators/convolution-nhwc.c",
+    "src/src/operators/deconvolution-nhwc.c",
+    "src/src/operators/dynamic-fully-connected-nc.c",
+    "src/src/operators/fully-connected-nc.c",
+    "src/src/operators/max-pooling-nhwc.c",
+    "src/src/operators/pack-lh.c",
+    "src/src/operators/reduce-nd.c",
+    "src/src/operators/resize-bilinear-nchw.c",
+    "src/src/operators/resize-bilinear-nhwc.c",
+    "src/src/operators/rope-nthc.c",
+    "src/src/operators/slice-nd.c",
+    "src/src/operators/softmax-nc.c",
+    "src/src/operators/transpose-nd.c",
+    "src/src/operators/unary-elementwise-nc.c",
+    "src/src/operators/unpooling-nhwc.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("operators_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("operators_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/operators/argmax-pooling-nhwc.c",
-      "src/src/operators/average-pooling-nhwc.c",
-      "src/src/operators/batch-matrix-multiply-nc.c",
-      "src/src/operators/binary-elementwise-nd.c",
-      "src/src/operators/constant-pad-nd.c",
-      "src/src/operators/convolution-nchw.c",
-      "src/src/operators/convolution-nhwc.c",
-      "src/src/operators/deconvolution-nhwc.c",
-      "src/src/operators/dynamic-fully-connected-nc.c",
-      "src/src/operators/fully-connected-nc.c",
-      "src/src/operators/max-pooling-nhwc.c",
-      "src/src/operators/pack-lh.c",
-      "src/src/operators/reduce-nd.c",
-      "src/src/operators/resize-bilinear-nchw.c",
-      "src/src/operators/resize-bilinear-nhwc.c",
-      "src/src/operators/rope-nthc.c",
-      "src/src/operators/slice-nd.c",
-      "src/src/operators/softmax-nc.c",
-      "src/src/operators/transpose-nd.c",
-      "src/src/operators/unary-elementwise-nc.c",
-      "src/src/operators/unpooling-nhwc.c",
+    "src/src/operators/average-pooling-nhwc.c",
+    "src/src/operators/batch-matrix-multiply-nc.c",
+    "src/src/operators/binary-elementwise-nd.c",
+    "src/src/operators/constant-pad-nd.c",
+    "src/src/operators/convolution-nchw.c",
+    "src/src/operators/convolution-nhwc.c",
+    "src/src/operators/deconvolution-nhwc.c",
+    "src/src/operators/dynamic-fully-connected-nc.c",
+    "src/src/operators/fully-connected-nc.c",
+    "src/src/operators/max-pooling-nhwc.c",
+    "src/src/operators/pack-lh.c",
+    "src/src/operators/reduce-nd.c",
+    "src/src/operators/resize-bilinear-nchw.c",
+    "src/src/operators/resize-bilinear-nhwc.c",
+    "src/src/operators/rope-nthc.c",
+    "src/src/operators/slice-nd.c",
+    "src/src/operators/softmax-nc.c",
+    "src/src/operators/transpose-nd.c",
+    "src/src/operators/unary-elementwise-nc.c",
+    "src/src/operators/unpooling-nhwc.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38504,69 +39682,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("operators_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/operators/argmax-pooling-nhwc.c",
-        "src/src/operators/average-pooling-nhwc.c",
-        "src/src/operators/batch-matrix-multiply-nc.c",
-        "src/src/operators/binary-elementwise-nd.c",
-        "src/src/operators/constant-pad-nd.c",
-        "src/src/operators/convolution-nchw.c",
-        "src/src/operators/convolution-nhwc.c",
-        "src/src/operators/deconvolution-nhwc.c",
-        "src/src/operators/dynamic-fully-connected-nc.c",
-        "src/src/operators/fully-connected-nc.c",
-        "src/src/operators/max-pooling-nhwc.c",
-        "src/src/operators/pack-lh.c",
-        "src/src/operators/reduce-nd.c",
-        "src/src/operators/resize-bilinear-nchw.c",
-        "src/src/operators/resize-bilinear-nhwc.c",
-        "src/src/operators/rope-nthc.c",
-        "src/src/operators/slice-nd.c",
-        "src/src/operators/softmax-nc.c",
-        "src/src/operators/transpose-nd.c",
-        "src/src/operators/unary-elementwise-nc.c",
-        "src/src/operators/unpooling-nhwc.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("pf16-gemm_arch=armv8.2-a+sve+sve2") {
+  cflags = [
+    "-march=armv8.2-a+sve+sve2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/pf16-gemm/pf16-gemm-1x32c2-minmax-neonsme2.c",
+    "src/src/pf16-gemm/pf16-gemm-32x32c2-minmax-neonsme2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("pf16-gemm_arch=armv8.2-a+sve+sve2") {
-    cflags = [ "-march=armv8.2-a+sve+sve2" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("pf16-gemm_arch=armv8.2-a+sve+sve2_standalone") {
+    cflags = [
+      "-march=armv8.2-a+sve+sve2"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/pf16-gemm/pf16-gemm-1x32c2-minmax-neonsme2.c",
-      "src/src/pf16-gemm/pf16-gemm-32x32c2-minmax-neonsme2.c",
+    "src/src/pf16-gemm/pf16-gemm-32x32c2-minmax-neonsme2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38578,50 +39741,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("pf16-gemm_arch=armv8.2-a+sve+sve2_standalone") {
-      cflags = [ "-march=armv8.2-a+sve+sve2" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/pf16-gemm/pf16-gemm-1x32c2-minmax-neonsme2.c",
-        "src/src/pf16-gemm/pf16-gemm-32x32c2-minmax-neonsme2.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("pf32-gemm_arch=armv8.2-a+sve+sve2") {
+  cflags = [
+    "-march=armv8.2-a+sve+sve2"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/pf32-gemm/pf32-gemm-1x32-minmax-neonsme2.c",
+    "src/src/pf32-gemm/pf32-gemm-32x32-minmax-neonsme2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("pf32-gemm_arch=armv8.2-a+sve+sve2") {
-    cflags = [ "-march=armv8.2-a+sve+sve2" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("pf32-gemm_arch=armv8.2-a+sve+sve2_standalone") {
+    cflags = [
+      "-march=armv8.2-a+sve+sve2"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/pf32-gemm/pf32-gemm-1x32-minmax-neonsme2.c",
-      "src/src/pf32-gemm/pf32-gemm-32x32-minmax-neonsme2.c",
+    "src/src/pf32-gemm/pf32-gemm-32x32-minmax-neonsme2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38633,49 +39800,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("pf32-gemm_arch=armv8.2-a+sve+sve2_standalone") {
-      cflags = [ "-march=armv8.2-a+sve+sve2" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/pf32-gemm/pf32-gemm-1x32-minmax-neonsme2.c",
-        "src/src/pf32-gemm/pf32-gemm-32x32-minmax-neonsme2.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("pqs8-f32-qc8w-igemm_arch=armv8.2-a+sve+sve2") {
+  cflags = [
+    "-march=armv8.2-a+sve+sve2"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/pqs8-f32-qc8w-igemm/pqs8-f32-qc8w-igemm-32x32c4-minmax-neonsme2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("pqs8-f32-qc8w-igemm_arch=armv8.2-a+sve+sve2") {
-    cflags = [ "-march=armv8.2-a+sve+sve2" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("pqs8-f32-qc8w-igemm_arch=armv8.2-a+sve+sve2_standalone") {
+    cflags = [
+      "-march=armv8.2-a+sve+sve2"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/pqs8-f32-qc8w-igemm/pqs8-f32-qc8w-igemm-32x32c4-minmax-neonsme2.c",
+      "src/src/pqs8-f32-qc8w-igemm/pqs8-f32-qc8w-igemm-32x32c4-minmax-neonsme2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38687,49 +39857,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("pqs8-f32-qc8w-igemm_arch=armv8.2-a+sve+sve2_standalone") {
-      cflags = [ "-march=armv8.2-a+sve+sve2" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/pqs8-f32-qc8w-igemm/pqs8-f32-qc8w-igemm-32x32c4-minmax-neonsme2.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("pqs8-qc8w-gemm_arch=armv8.2-a+sve+sve2") {
+  cflags = [
+    "-march=armv8.2-a+sve+sve2"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/pqs8-qc8w-gemm/pqs8-qc8w-gemm-1x32c4-minmax-neonsme2.c",
+    "src/src/pqs8-qc8w-gemm/pqs8-qc8w-gemm-32x32c4-minmax-neonsme2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("pqs8-qc8w-gemm_arch=armv8.2-a+sve+sve2") {
-    cflags = [ "-march=armv8.2-a+sve+sve2" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("pqs8-qc8w-gemm_arch=armv8.2-a+sve+sve2_standalone") {
+    cflags = [
+      "-march=armv8.2-a+sve+sve2"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/pqs8-qc8w-gemm/pqs8-qc8w-gemm-1x32c4-minmax-neonsme2.c",
-      "src/src/pqs8-qc8w-gemm/pqs8-qc8w-gemm-32x32c4-minmax-neonsme2.c",
+    "src/src/pqs8-qc8w-gemm/pqs8-qc8w-gemm-32x32c4-minmax-neonsme2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38741,50 +39916,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("pqs8-qc8w-gemm_arch=armv8.2-a+sve+sve2_standalone") {
-      cflags = [ "-march=armv8.2-a+sve+sve2" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/pqs8-qc8w-gemm/pqs8-qc8w-gemm-1x32c4-minmax-neonsme2.c",
-        "src/src/pqs8-qc8w-gemm/pqs8-qc8w-gemm-32x32c4-minmax-neonsme2.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qb4-packw_arch=armv8.2-a+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+dotprod"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qb4-packw/gen/qb4-packw-x16c4-gemm-goi-aarch64-neondot.c",
+    "src/src/qb4-packw/gen/qb4-packw-x16c8-gemm-goi-aarch64-neondot.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qb4-packw_arch=armv8.2-a+dotprod") {
-    cflags = [ "-march=armv8.2-a+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qb4-packw_arch=armv8.2-a+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qb4-packw/gen/qb4-packw-x16c4-gemm-goi-aarch64-neondot.c",
-      "src/src/qb4-packw/gen/qb4-packw-x16c8-gemm-goi-aarch64-neondot.c",
+    "src/src/qb4-packw/gen/qb4-packw-x16c8-gemm-goi-aarch64-neondot.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38796,50 +39975,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qb4-packw_arch=armv8.2-a+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qb4-packw/gen/qb4-packw-x16c4-gemm-goi-aarch64-neondot.c",
-        "src/src/qb4-packw/gen/qb4-packw-x16c8-gemm-goi-aarch64-neondot.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f16-qb4w-gemm_arch=armv8.2-a+dotprod+fp16") {
+  cflags = [
+    "-march=armv8.2-a+dotprod+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-1x16c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-4x16c4-minmax-neondotfp16arith.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f16-qb4w-gemm_arch=armv8.2-a+dotprod+fp16") {
-    cflags = [ "-march=armv8.2-a+dotprod+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qb4w-gemm_arch=armv8.2-a+dotprod+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-1x16c4-minmax-neondotfp16arith.c",
-      "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-4x16c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-4x16c4-minmax-neondotfp16arith.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38851,50 +40034,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qb4w-gemm_arch=armv8.2-a+dotprod+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-1x16c4-minmax-neondotfp16arith.c",
-        "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-4x16c4-minmax-neondotfp16arith.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f16-qb4w-gemm_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-1x16-minmax-neonfp16arith-mlal-lane.c",
+    "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-6x16-minmax-neonfp16arith-mlal-lane.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f16-qb4w-gemm_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qb4w-gemm_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-1x16-minmax-neonfp16arith-mlal-lane.c",
-      "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-6x16-minmax-neonfp16arith-mlal-lane.c",
+    "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-6x16-minmax-neonfp16arith-mlal-lane.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38906,50 +40093,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qb4w-gemm_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-1x16-minmax-neonfp16arith-mlal-lane.c",
-        "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-6x16-minmax-neonfp16arith-mlal-lane.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f16-qb4w-gemm_arch=armv8.2-a+i8mm+fp16") {
+  cflags = [
+    "-march=armv8.2-a+i8mm+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-1x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-4x16c8-minmax-neoni8mm.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f16-qb4w-gemm_arch=armv8.2-a+i8mm+fp16") {
-    cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qb4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+i8mm+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-1x16c8-minmax-neoni8mm.c",
-      "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-4x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-4x16c8-minmax-neoni8mm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -38961,50 +40152,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qb4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-1x16c8-minmax-neoni8mm.c",
-        "src/src/qd8-f16-qb4w-gemm/gen/qd8-f16-qb4w-gemm-4x16c8-minmax-neoni8mm.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f16-qc4w-gemm_arch=armv8.2-a+dotprod+fp16") {
+  cflags = [
+    "-march=armv8.2-a+dotprod+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x16c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-4x16c4-minmax-neondotfp16arith.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f16-qc4w-gemm_arch=armv8.2-a+dotprod+fp16") {
-    cflags = [ "-march=armv8.2-a+dotprod+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc4w-gemm_arch=armv8.2-a+dotprod+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x16c4-minmax-neondotfp16arith.c",
-      "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-4x16c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-4x16c4-minmax-neondotfp16arith.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39016,50 +40211,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc4w-gemm_arch=armv8.2-a+dotprod+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x16c4-minmax-neondotfp16arith.c",
-        "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-4x16c4-minmax-neondotfp16arith.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f16-qc4w-gemm_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x16-minmax-neonfp16arith-mlal-lane.c",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-6x16-minmax-neonfp16arith-mlal-lane.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f16-qc4w-gemm_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc4w-gemm_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x16-minmax-neonfp16arith-mlal-lane.c",
-      "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-6x16-minmax-neonfp16arith-mlal-lane.c",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-6x16-minmax-neonfp16arith-mlal-lane.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39071,50 +40270,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc4w-gemm_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x16-minmax-neonfp16arith-mlal-lane.c",
-        "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-6x16-minmax-neonfp16arith-mlal-lane.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f16-qc4w-gemm_arch=armv8.2-a+i8mm+fp16") {
+  cflags = [
+    "-march=armv8.2-a+i8mm+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-4x16c8-minmax-neoni8mm.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f16-qc4w-gemm_arch=armv8.2-a+i8mm+fp16") {
-    cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+i8mm+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x16c8-minmax-neoni8mm.c",
-      "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-4x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-4x16c8-minmax-neoni8mm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39126,52 +40329,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-1x16c8-minmax-neoni8mm.c",
-        "src/src/qd8-f16-qc4w-gemm/gen/qd8-f16-qc4w-gemm-4x16c8-minmax-neoni8mm.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+dotprod+fp16") {
+  cflags = [
+    "-march=armv8.2-a+dotprod+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x16c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x8c4-minmax-neondotfp16arith.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+dotprod+fp16") {
-    cflags = [ "-march=armv8.2-a+dotprod+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+dotprod+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x16c4-minmax-neondotfp16arith.c",
-      "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c4-minmax-neondotfp16arith.c",
-      "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c4-minmax-neondotfp16arith.c",
-      "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x8c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x8c4-minmax-neondotfp16arith.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39183,52 +40392,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+dotprod+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x16c4-minmax-neondotfp16arith.c",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c4-minmax-neondotfp16arith.c",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c4-minmax-neondotfp16arith.c",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x8c4-minmax-neondotfp16arith.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c2s4-minmax-neonfp16arith.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-2x8c2s4-minmax-neonfp16arith.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c2s4-minmax-neonfp16arith.c",
-      "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-2x8c2s4-minmax-neonfp16arith.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-2x8c2s4-minmax-neonfp16arith.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39240,52 +40451,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x8c2s4-minmax-neonfp16arith.c",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-2x8c2s4-minmax-neonfp16arith.c",
-      ]
+source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  asmflags = cflags
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c4-minmax-asm-aarch64-neondotfp16arith-cortex-a55.S"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-    asmflags = cflags
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
 
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S",
-      "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c4-minmax-asm-aarch64-neondotfp16arith-cortex-a55.S",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c4-minmax-asm-aarch64-neondotfp16arith-cortex-a55.S"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39297,52 +40514,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
 
-      asmflags = cflags
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c4-minmax-asm-aarch64-neondotfp16arith-cortex-a55.S",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+i8mm+fp16") {
+  cflags = [
+    "-march=armv8.2-a+i8mm+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c8-minmax-neoni8mm.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+i8mm+fp16") {
-    cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+i8mm+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x16c8-minmax-neoni8mm.c",
-      "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c8-minmax-neoni8mm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39354,52 +40573,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-1x16c8-minmax-neoni8mm.c",
-        "src/src/qd8-f16-qc8w-gemm/gen/qd8-f16-qc8w-gemm-4x16c8-minmax-neoni8mm.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+dotprod+fp16") {
+  cflags = [
+    "-march=armv8.2-a+dotprod+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x16c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x8c4-minmax-neondotfp16arith.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+dotprod+fp16") {
-    cflags = [ "-march=armv8.2-a+dotprod+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+dotprod+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x16c4-minmax-neondotfp16arith.c",
-      "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c4-minmax-neondotfp16arith.c",
-      "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c4-minmax-neondotfp16arith.c",
-      "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x8c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c4-minmax-neondotfp16arith.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x8c4-minmax-neondotfp16arith.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39411,52 +40636,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+dotprod+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x16c4-minmax-neondotfp16arith.c",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c4-minmax-neondotfp16arith.c",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c4-minmax-neondotfp16arith.c",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x8c4-minmax-neondotfp16arith.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c2s4-minmax-neonfp16arith-mlal.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-2x8c2s4-minmax-neonfp16arith-mlal.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c2s4-minmax-neonfp16arith-mlal.c",
-      "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-2x8c2s4-minmax-neonfp16arith-mlal.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-2x8c2s4-minmax-neonfp16arith-mlal.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39468,52 +40695,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x8c2s4-minmax-neonfp16arith-mlal.c",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-2x8c2s4-minmax-neonfp16arith-mlal.c",
-      ]
+source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  asmflags = cflags
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c4-minmax-asm-aarch64-neondot-cortex-a55.S",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-    asmflags = cflags
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
 
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c4-minmax-asm-aarch64-neondot-cortex-a55.S",
-      "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39525,52 +40758,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
 
-      asmflags = cflags
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c4-minmax-asm-aarch64-neondot-cortex-a55.S",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+i8mm+fp16") {
+  cflags = [
+    "-march=armv8.2-a+i8mm+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c8-minmax-neoni8mm.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+i8mm+fp16") {
-    cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+i8mm+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+i8mm+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x16c8-minmax-neoni8mm.c",
-      "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c8-minmax-neoni8mm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39582,50 +40817,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f16-qc8w-igemm_arch=armv8.2-a+i8mm+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-1x16c8-minmax-neoni8mm.c",
-        "src/src/qd8-f16-qc8w-igemm/gen/qd8-f16-qc8w-igemm-4x16c8-minmax-neoni8mm.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f32-qb4w-gemm_arch=armv8.2-a+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+dotprod"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16c4-minmax-neondot.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x16c4-minmax-neondot.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qb4w-gemm_arch=armv8.2-a+dotprod") {
-    cflags = [ "-march=armv8.2-a+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qb4w-gemm_arch=armv8.2-a+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16c4-minmax-neondot.c",
-      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x16c4-minmax-neondot.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x16c4-minmax-neondot.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39637,50 +40876,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qb4w-gemm_arch=armv8.2-a+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16c4-minmax-neondot.c",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x16c4-minmax-neondot.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f32-qb4w-gemm_arch=armv8.2-a+i8mm+fp16") {
+  cflags = [
+    "-march=armv8.2-a+i8mm+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x16c8-minmax-neoni8mm.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qb4w-gemm_arch=armv8.2-a+i8mm+fp16") {
-    cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qb4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+i8mm+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16c8-minmax-neoni8mm.c",
-      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x16c8-minmax-neoni8mm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39692,52 +40935,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qb4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16c8-minmax-neoni8mm.c",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x16c8-minmax-neoni8mm.c",
-      ]
+source_set("qd8-f32-qb4w-gemm_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16-minmax-neon-mlal-lane.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4-minmax-scalar.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-6x16-minmax-neon-mlal-lane.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qb4w-gemm_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qb4w-gemm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16-minmax-neon-mlal-lane.c",
-      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4-minmax-scalar.c",
-      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4-minmax-scalar.c",
-      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-6x16-minmax-neon-mlal-lane.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4-minmax-scalar.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-6x16-minmax-neon-mlal-lane.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39749,52 +40998,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qb4w-gemm_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x16-minmax-neon-mlal-lane.c",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4-minmax-scalar.c",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4-minmax-scalar.c",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-6x16-minmax-neon-mlal-lane.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qd8-f32-qc4w-gemm_arch=armv8.2-a+dotprod") {
-    cflags = [ "-march=armv8.2-a+dotprod" ]
+source_set("qd8-f32-qc4w-gemm_arch=armv8.2-a+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+dotprod"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c4-minmax-neondot.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x16c4-minmax-neondot.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_arch=armv8.2-a+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c4-minmax-neondot.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x16c4-minmax-neondot.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x16c4-minmax-neondot.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39806,50 +41057,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc4w-gemm_arch=armv8.2-a+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c4-minmax-neondot.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x16c4-minmax-neondot.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f32-qc4w-gemm_arch=armv8.2-a+i8mm+fp16") {
+  cflags = [
+    "-march=armv8.2-a+i8mm+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x16c8-minmax-neoni8mm.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc4w-gemm_arch=armv8.2-a+i8mm+fp16") {
-    cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+i8mm+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c8-minmax-neoni8mm.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x16c8-minmax-neoni8mm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39861,52 +41116,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16c8-minmax-neoni8mm.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x16c8-minmax-neoni8mm.c",
-      ]
+source_set("qd8-f32-qc4w-gemm_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16-minmax-neon-mlal-lane.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-6x16-minmax-neon-mlal-lane.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc4w-gemm_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16-minmax-neon-mlal-lane.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4-minmax-scalar.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4-minmax-scalar.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-6x16-minmax-neon-mlal-lane.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-6x16-minmax-neon-mlal-lane.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39918,54 +41179,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc4w-gemm_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x16-minmax-neon-mlal-lane.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4-minmax-scalar.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4-minmax-scalar.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-6x16-minmax-neon-mlal-lane.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-gemm_arch=armv8.2-a+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+dotprod"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x16c4-minmax-neondot.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c4-minmax-neondot.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c4-minmax-neondot.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x8c4-minmax-neondot.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc8w-gemm_arch=armv8.2-a+dotprod") {
-    cflags = [ "-march=armv8.2-a+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_arch=armv8.2-a+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x16c4-minmax-neondot.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c4-minmax-neondot.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c4-minmax-neondot.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x8c4-minmax-neondot.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c4-minmax-neondot.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c4-minmax-neondot.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x8c4-minmax-neondot.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -39977,54 +41242,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-gemm_arch=armv8.2-a+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x16c4-minmax-neondot.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c4-minmax-neondot.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c4-minmax-neondot.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x8c4-minmax-neondot.c",
-      ]
+source_set("qd8-f32-qc8w-gemm_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  asmflags = cflags
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c4-minmax-asm-aarch64-neondot-cortex-a55.S",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc8w-gemm_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-    asmflags = cflags
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
 
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c4-minmax-asm-aarch64-neondot-cortex-a55.S",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40036,52 +41305,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
-
-      asmflags = cflags
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c4-minmax-asm-aarch64-neondot-cortex-a55.S",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f32-qc8w-gemm_arch=armv8.2-a+i8mm+fp16") {
+  cflags = [
+    "-march=armv8.2-a+i8mm+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c8-minmax-neoni8mm.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc8w-gemm_arch=armv8.2-a+i8mm+fp16") {
-    cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+i8mm+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x16c8-minmax-neoni8mm.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c8-minmax-neoni8mm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40093,53 +41364,60 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x16c8-minmax-neoni8mm.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x16c8-minmax-neoni8mm.c",
-      ]
+source_set("qd8-f32-qc8w-gemm_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x2-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c2s4-minmax-neon-mlal.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-2x8c2s4-minmax-neon-mlal.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4-minmax-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc8w-gemm_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x2-minmax-scalar.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4-minmax-scalar.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c2s4-minmax-neon-mlal.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-2x8c2s4-minmax-neon-mlal.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c2s4-minmax-neon-mlal.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-2x8c2s4-minmax-neon-mlal.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40151,55 +41429,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-gemm_arm64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x2-minmax-scalar.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4-minmax-scalar.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x8c2s4-minmax-neon-mlal.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-2x8c2s4-minmax-neon-mlal.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4-minmax-scalar.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-igemm_arch=armv8.2-a+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+dotprod"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x16c4-minmax-neondot.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c4-minmax-neondot.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c4-minmax-neondot.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x8c4-minmax-neondot.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc8w-igemm_arch=armv8.2-a+dotprod") {
-    cflags = [ "-march=armv8.2-a+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_arch=armv8.2-a+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x16c4-minmax-neondot.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c4-minmax-neondot.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c4-minmax-neondot.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x8c4-minmax-neondot.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c4-minmax-neondot.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c4-minmax-neondot.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x8c4-minmax-neondot.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40211,54 +41492,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-igemm_arch=armv8.2-a+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x16c4-minmax-neondot.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c4-minmax-neondot.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c4-minmax-neondot.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x8c4-minmax-neondot.c",
-      ]
+source_set("qd8-f32-qc8w-igemm_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  asmflags = cflags
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c4-minmax-asm-aarch64-neondot-cortex-a55.S",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc8w-igemm_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-    asmflags = cflags
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
 
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c4-minmax-asm-aarch64-neondot-cortex-a55.S",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40270,52 +41555,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-igemm_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
-
-      asmflags = cflags
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c4-minmax-asm-aarch64-neondot-cortex-a55.S",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c4-minmax-asm-aarch64-neondot-ld128.S",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qd8-f32-qc8w-igemm_arch=armv8.2-a+i8mm+fp16") {
+  cflags = [
+    "-march=armv8.2-a+i8mm+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c8-minmax-neoni8mm.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc8w-igemm_arch=armv8.2-a+i8mm+fp16") {
-    cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_arch=armv8.2-a+i8mm+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+i8mm+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x16c8-minmax-neoni8mm.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c8-minmax-neoni8mm.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c8-minmax-neoni8mm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40327,55 +41614,64 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-igemm_arch=armv8.2-a+i8mm+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x16c8-minmax-neoni8mm.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x16c8-minmax-neoni8mm.c",
-      ]
+source_set("qd8-f32-qc8w-igemm_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x2-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8-minmax-neon-mlal-lane.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c2s4-minmax-neon-mlal.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-2x8c2s4-minmax-neon-mlal.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x8-minmax-neon-mlal-lane.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc8w-igemm_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x2-minmax-scalar.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4-minmax-scalar.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8-minmax-neon-mlal-lane.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c2s4-minmax-neon-mlal.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-2x8c2s4-minmax-neon-mlal.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4-minmax-scalar.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x8-minmax-neon-mlal-lane.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8-minmax-neon-mlal-lane.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c2s4-minmax-neon-mlal.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-2x8c2s4-minmax-neon-mlal.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x8-minmax-neon-mlal-lane.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40387,56 +41683,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-igemm_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x2-minmax-scalar.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4-minmax-scalar.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8-minmax-neon-mlal-lane.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x8c2s4-minmax-neon-mlal.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-2x8c2s4-minmax-neon-mlal.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4-minmax-scalar.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x8-minmax-neon-mlal-lane.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qp8-f32-qb4w-gemm_arch=armv8.2-a+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+dotprod"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-1x4c16s2-aarch64-neondot.c",
+    "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-1x4c8s2-aarch64-neondot.c",
+    "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-4x4c8s2-aarch64-neondot.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qp8-f32-qb4w-gemm_arch=armv8.2-a+dotprod") {
-    cflags = [ "-march=armv8.2-a+dotprod" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qp8-f32-qb4w-gemm_arch=armv8.2-a+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-1x4c16s2-aarch64-neondot.c",
-      "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-1x4c8s2-aarch64-neondot.c",
-      "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-4x4c8s2-aarch64-neondot.c",
+    "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-1x4c8s2-aarch64-neondot.c",
+    "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-4x4c8s2-aarch64-neondot.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40448,50 +41744,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qp8-f32-qb4w-gemm_arch=armv8.2-a+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-1x4c16s2-aarch64-neondot.c",
-        "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-1x4c8s2-aarch64-neondot.c",
-        "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-4x4c8s2-aarch64-neondot.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qp8-f32-qb4w-gemm_arch=armv8.2-a+i8mm+fp16") {
+  cflags = [
+    "-march=armv8.2-a+i8mm+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-16x4c16s2-mstep4-neoni8mm.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qp8-f32-qb4w-gemm_arch=armv8.2-a+i8mm+fp16") {
-    cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qp8-f32-qb4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+i8mm+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-16x4c16s2-mstep4-neoni8mm.c",
+      "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-16x4c16s2-mstep4-neoni8mm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40503,50 +41801,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qp8-f32-qb4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qp8-f32-qb4w-gemm/qp8-f32-qb4w-gemm-minmax-16x4c16s2-mstep4-neoni8mm.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qp8-f32-qc4w-gemm_arch=armv8.2-a+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+dotprod"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-16x4c8s2-mstep4-aarch64-neondot.c",
+    "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-1x4c8s2-aarch64-neondot.c",
+    "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-1x8c16s2-aarch64-neondot.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qp8-f32-qc4w-gemm_arch=armv8.2-a+dotprod") {
-    cflags = [ "-march=armv8.2-a+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qp8-f32-qc4w-gemm_arch=armv8.2-a+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-16x4c8s2-mstep4-aarch64-neondot.c",
-      "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-1x4c8s2-aarch64-neondot.c",
-      "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-1x8c16s2-aarch64-neondot.c",
+    "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-1x4c8s2-aarch64-neondot.c",
+    "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-1x8c16s2-aarch64-neondot.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40558,50 +41862,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qp8-f32-qc4w-gemm_arch=armv8.2-a+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-16x4c8s2-mstep4-aarch64-neondot.c",
-        "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-1x4c8s2-aarch64-neondot.c",
-        "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-1x8c16s2-aarch64-neondot.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qp8-f32-qc4w-gemm_arch=armv8.2-a+i8mm+fp16") {
+  cflags = [
+    "-march=armv8.2-a+i8mm+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-8x8c16s2-mstep2-neoni8mm.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qp8-f32-qc4w-gemm_arch=armv8.2-a+i8mm+fp16") {
-    cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qp8-f32-qc4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+i8mm+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-8x8c16s2-mstep2-neoni8mm.c",
+      "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-8x8c16s2-mstep2-neoni8mm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40613,49 +41919,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qp8-f32-qc4w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-8x8c16s2-mstep2-neoni8mm.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qp8-f32-qc4w-gemm_arch=armv8.2-a+sve+sve2") {
+  cflags = [
+    "-march=armv8.2-a+sve+sve2"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-16x64c4-neonsme2.c",
+    "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-1x64c4-neonsme2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qp8-f32-qc4w-gemm_arch=armv8.2-a+sve+sve2") {
-    cflags = [ "-march=armv8.2-a+sve+sve2" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qp8-f32-qc4w-gemm_arch=armv8.2-a+sve+sve2_standalone") {
+    cflags = [
+      "-march=armv8.2-a+sve+sve2"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-16x64c4-neonsme2.c",
-      "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-1x64c4-neonsme2.c",
+    "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-1x64c4-neonsme2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40667,51 +41978,56 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qp8-f32-qc4w-gemm_arch=armv8.2-a+sve+sve2_standalone") {
-      cflags = [ "-march=armv8.2-a+sve+sve2" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-16x64c4-neonsme2.c",
-        "src/src/qp8-f32-qc4w-gemm/qp8-f32-qc4w-gemm-minmax-1x64c4-neonsme2.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qp8-f32-qc8w-gemm_arch=armv8.2-a+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+dotprod"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-16x4c4-mstep4-aarch64-neondot.c",
+    "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-1x4c4-aarch64-neondot.c",
+    "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-1x4c8-aarch64-neondot.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qp8-f32-qc8w-gemm_arch=armv8.2-a+dotprod") {
-    cflags = [ "-march=armv8.2-a+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qp8-f32-qc8w-gemm_arch=armv8.2-a+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-16x4c4-mstep4-aarch64-neondot.c",
-      "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-1x4c4-aarch64-neondot.c",
-      "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-1x4c8-aarch64-neondot.c",
+    "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-1x4c4-aarch64-neondot.c",
+    "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-1x4c8-aarch64-neondot.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40723,50 +42039,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qp8-f32-qc8w-gemm_arch=armv8.2-a+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-16x4c4-mstep4-aarch64-neondot.c",
-        "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-1x4c4-aarch64-neondot.c",
-        "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-1x4c8-aarch64-neondot.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qp8-f32-qc8w-gemm_arch=armv8.2-a+i8mm+fp16") {
+  cflags = [
+    "-march=armv8.2-a+i8mm+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-16x4c8-mstep4-neoni8mm.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qp8-f32-qc8w-gemm_arch=armv8.2-a+i8mm+fp16") {
-    cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qp8-f32-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+i8mm+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-16x4c8-mstep4-neoni8mm.c",
+      "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-16x4c8-mstep4-neoni8mm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40778,49 +42096,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qp8-f32-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-16x4c8-mstep4-neoni8mm.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qp8-f32-qc8w-gemm_arch=armv8.2-a+sve+sve2") {
+  cflags = [
+    "-march=armv8.2-a+sve+sve2"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-16x64c4-neonsme2.c",
+    "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-1x64c4-neonsme2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qp8-f32-qc8w-gemm_arch=armv8.2-a+sve+sve2") {
-    cflags = [ "-march=armv8.2-a+sve+sve2" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qp8-f32-qc8w-gemm_arch=armv8.2-a+sve+sve2_standalone") {
+    cflags = [
+      "-march=armv8.2-a+sve+sve2"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-16x64c4-neonsme2.c",
-      "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-1x64c4-neonsme2.c",
+    "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-1x64c4-neonsme2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40832,55 +42155,64 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qp8-f32-qc8w-gemm_arch=armv8.2-a+sve+sve2_standalone") {
-      cflags = [ "-march=armv8.2-a+sve+sve2" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-16x64c4-neonsme2.c",
-        "src/src/qp8-f32-qc8w-gemm/qp8-f32-qc8w-gemm-minmax-1x64c4-neonsme2.c",
-      ]
+source_set("qs8-dwconv_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p16c-minmax-rndnu-neon-mla8-ld64.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p8c-minmax-rndnu-neon-mla8-ld64.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p16c-minmax-rndnu-neon-mla8-ld64.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-dwconv_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-dwconv_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-dwconv/gen/qs8-dwconv-25p16c-minmax-rndnu-neon-mla8-ld64.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-25p8c-minmax-rndnu-neon-mla8-ld64.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-9p16c-minmax-rndnu-neon-mla8-ld64.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p8c-minmax-rndnu-neon-mla8-ld64.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p16c-minmax-rndnu-neon-mla8-ld64.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40892,54 +42224,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-dwconv_arm64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-25p16c-minmax-rndnu-neon-mla8-ld64.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-25p8c-minmax-rndnu-neon-mla8-ld64.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-9p16c-minmax-rndnu-neon-mla8-ld64.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+source_set("qs8-f16-vcvt_arch=armv8.2-a+fp16") {
+  cflags = [
+    "-march=armv8.2-a+fp16"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-f16-vcvt/gen/qs8-f16-vcvt-neonfp16arith-u32.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-f16-vcvt_arch=armv8.2-a+fp16") {
-    cflags = [ "-march=armv8.2-a+fp16" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-f16-vcvt_arch=armv8.2-a+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-f16-vcvt/gen/qs8-f16-vcvt-neonfp16arith-u32.c",
+      "src/src/qs8-f16-vcvt/gen/qs8-f16-vcvt-neonfp16arith-u32.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -40951,49 +42281,54 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-f16-vcvt_arch=armv8.2-a+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16" ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-f16-vcvt/gen/qs8-f16-vcvt-neonfp16arith-u32.c",
-      ]
+source_set("qs8-f32-vcvt_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-neon-u32.c",
+    "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-f32-vcvt_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-f32-vcvt_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-neon-u32.c",
-      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-scalar-u4.c",
+    "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41005,52 +42340,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-f32-vcvt_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-neon-u32.c",
-        "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-scalar-u4.c",
-      ]
+source_set("qs8-packw_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-gio-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-goi-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-gio-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-packw_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-packw_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-scalar.c",
-      "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-gio-scalar.c",
-      "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-goi-scalar.c",
-      "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-gio-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-gio-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-goi-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-gio-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41062,54 +42403,58 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-packw_arm64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-scalar.c",
-        "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-gio-scalar.c",
-        "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-goi-scalar.c",
-        "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-gio-scalar.c",
-      ]
+source_set("qs8-qc4w-gemm_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  asmflags = cflags
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-1x16-minmax-fp32-asm-aarch64-neondot-ld128.S",
+    "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-5x16-minmax-fp32-asm-aarch64-neondot-ld128.S"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-qc4w-gemm_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-    asmflags = cflags
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc4w-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
 
     sources = [
       "src/include/xnnpack.h",
       "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-1x16-minmax-fp32-asm-aarch64-neondot-ld128.S",
-      "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-5x16-minmax-fp32-asm-aarch64-neondot-ld128.S",
+    "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-5x16-minmax-fp32-asm-aarch64-neondot-ld128.S"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41121,51 +42466,52 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc4w-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
 
-      asmflags = cflags
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-1x16-minmax-fp32-asm-aarch64-neondot-ld128.S",
-        "src/src/qs8-qc4w-gemm/gen/qs8-qc4w-gemm-5x16-minmax-fp32-asm-aarch64-neondot-ld128.S",
-      ]
+source_set("qs8-qc4w-gemm_arm64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc4w-gemm/qs8-qc4w-gemm-1x2-minmax-fp32-scalar-lrintf.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-qc4w-gemm_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc4w-gemm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc4w-gemm/qs8-qc4w-gemm-1x2-minmax-fp32-scalar-lrintf.c",
+      "src/src/qs8-qc4w-gemm/qs8-qc4w-gemm-1x2-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41177,61 +42523,141 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc4w-gemm_arm64_standalone") {
-      cflags = []
+source_set("qs8-qc8w-dwconv_arm64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc4w-gemm/qs8-qc4w-gemm-1x2-minmax-fp32-scalar-lrintf.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p16c-minmax-fp32-neonv8-mla8-ld64.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8c-minmax-fp32-neon-mla8-ld64.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8c-minmax-fp32-neonv8-mla8-ld64.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-neon-mla8-ld128.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-neonv8-mla8-ld128.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-neonv8-mla8-ld64.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-neon-mla8-ld64.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-neonv8-mla8-ld64.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-dwconv_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p16c-minmax-fp32-neonv8-mla8-ld64.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8c-minmax-fp32-neon-mla8-ld64.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8c-minmax-fp32-neonv8-mla8-ld64.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-neon-mla8-ld128.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-neonv8-mla8-ld128.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-neonv8-mla8-ld64.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-neon-mla8-ld64.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-neonv8-mla8-ld64.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  source_set("qs8-qc8w-dwconv_arm64") {
-    cflags = []
+source_set("qs8-qc8w-gemm_arch=armv8.2-a+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+dotprod"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16c4-minmax-fp32-neondot.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c4-minmax-fp32-neondot.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c4-minmax-fp32-neondot.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x8c4-minmax-fp32-neondot.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_arch=armv8.2-a+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p16c-minmax-fp32-neonv8-mla8-ld64.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8c-minmax-fp32-neon-mla8-ld64.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8c-minmax-fp32-neonv8-mla8-ld64.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-neon-mla8-ld128.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-neonv8-mla8-ld128.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-neonv8-mla8-ld64.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p2c-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-neon-mla8-ld64.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-neonv8-mla8-ld64.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
+      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16c4-minmax-fp32-neondot.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c4-minmax-fp32-neondot.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c4-minmax-fp32-neondot.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x8c4-minmax-fp32-neondot.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41243,64 +42669,133 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-dwconv_arm64_standalone") {
-      cflags = []
+source_set("qs8-qc8w-gemm_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
+
+  asmflags = cflags
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-ld64.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c4-minmax-fp32-asm-aarch64-neondot-cortex-a55.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c4-minmax-fp32-asm-aarch64-neondot-ld128.S"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p16c-minmax-fp32-neonv8-mla8-ld64.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8c-minmax-fp32-neon-mla8-ld64.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8c-minmax-fp32-neonv8-mla8-ld64.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-neon-mla8-ld128.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-neonv8-mla8-ld128.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p16c-minmax-fp32-neonv8-mla8-ld64.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p2c-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-neon-mla8-ld64.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p16c-minmax-fp32-neonv8-mla8-ld64.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
+
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-ld64.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c4-minmax-fp32-asm-aarch64-neondot-cortex-a55.S",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c4-minmax-fp32-asm-aarch64-neondot-ld128.S"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-gemm_arch=armv8.2-a+i8mm+fp16") {
+  cflags = [
+    "-march=armv8.2-a+i8mm+fp16"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16c8-minmax-fp32-neoni8mm.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c8-minmax-fp32-neoni8mm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-qc8w-gemm_arch=armv8.2-a+dotprod") {
-    cflags = [ "-march=armv8.2-a+dotprod" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+i8mm+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16c4-minmax-fp32-neondot.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c4-minmax-fp32-neondot.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c4-minmax-fp32-neondot.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x8c4-minmax-fp32-neondot.c",
+      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16c8-minmax-fp32-neoni8mm.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c8-minmax-fp32-neoni8mm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41312,62 +42807,127 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-gemm_arch=armv8.2-a+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod" ]
+source_set("qs8-qc8w-gemm_arm64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16c4-minmax-fp32-neondot.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c4-minmax-fp32-neondot.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c4-minmax-fp32-neondot.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x8c4-minmax-fp32-neondot.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16-minmax-fp32-neonv8-mlal-lane.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c2s4-minmax-fp32-neon-mlal.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c2s4-minmax-fp32-neonv8-mlal.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c2s4-minmax-fp32-neon-mlal.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c2s4-minmax-fp32-neonv8-mlal.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16-minmax-fp32-neonv8-mlal-lane.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c2s4-minmax-fp32-neon-mlal.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c2s4-minmax-fp32-neonv8-mlal.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c2s4-minmax-fp32-neon-mlal.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c2s4-minmax-fp32-neonv8-mlal.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4-minmax-fp32-scalar-lrintf.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-igemm_arch=armv8.2-a+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+dotprod"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16c4-minmax-fp32-neondot.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c4-minmax-fp32-neondot.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c4-minmax-fp32-neondot.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x8c4-minmax-fp32-neondot.c"
+  ]
 
-  source_set("qs8-qc8w-gemm_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-    asmflags = cflags
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_arch=armv8.2-a+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-ld64.S",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c4-minmax-fp32-asm-aarch64-neondot-cortex-a55.S",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c4-minmax-fp32-asm-aarch64-neondot-ld128.S",
+      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16c4-minmax-fp32-neondot.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c4-minmax-fp32-neondot.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c4-minmax-fp32-neondot.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x8c4-minmax-fp32-neondot.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41379,60 +42939,133 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+source_set("qs8-qc8w-igemm_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
+
+  asmflags = cflags
 
-      asmflags = cflags
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-ld64.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c4-minmax-fp32-asm-aarch64-neondot-cortex-a55.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c4-minmax-fp32-asm-aarch64-neondot-ld128.S"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-ld64.S",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c4-minmax-fp32-asm-aarch64-neondot-cortex-a55.S",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c4-minmax-fp32-asm-aarch64-neondot-ld128.S",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
+
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-ld64.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c4-minmax-fp32-asm-aarch64-neondot-cortex-a55.S",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c4-minmax-fp32-asm-aarch64-neondot-ld128.S"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qs8-qc8w-gemm_arch=armv8.2-a+i8mm+fp16") {
-    cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+source_set("qs8-qc8w-igemm_arch=armv8.2-a+i8mm+fp16") {
+  cflags = [
+    "-march=armv8.2-a+i8mm+fp16"
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16c8-minmax-fp32-neoni8mm.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c8-minmax-fp32-neoni8mm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_arch=armv8.2-a+i8mm+fp16_standalone") {
+    cflags = [
+      "-march=armv8.2-a+i8mm+fp16"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16c8-minmax-fp32-neoni8mm.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c8-minmax-fp32-neoni8mm.c",
+      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16c8-minmax-fp32-neoni8mm.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c8-minmax-fp32-neoni8mm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41444,55 +43077,121 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-gemm_arch=armv8.2-a+i8mm+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+source_set("qs8-qc8w-igemm_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16-minmax-fp32-neonv8-mlal-lane.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c2s4-minmax-fp32-neon-mlal.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c2s4-minmax-fp32-neonv8-mlal.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c2s4-minmax-fp32-neon-mlal.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c2s4-minmax-fp32-neonv8-mlal.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4-minmax-fp32-scalar-lrintf.c"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16c8-minmax-fp32-neoni8mm.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x16c8-minmax-fp32-neoni8mm.c",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16-minmax-fp32-neonv8-mlal-lane.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c2s4-minmax-fp32-neon-mlal.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c2s4-minmax-fp32-neonv8-mlal.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c2s4-minmax-fp32-neon-mlal.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c2s4-minmax-fp32-neonv8-mlal.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4-minmax-fp32-scalar-lrintf.c"
+    ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qu8-packw_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-scalar.c"
+  ]
 
-  source_set("qs8-qc8w-gemm_arm64") {
-    cflags = []
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qu8-packw_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16-minmax-fp32-neonv8-mlal-lane.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c2s4-minmax-fp32-neon-mlal.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c2s4-minmax-fp32-neonv8-mlal.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c2s4-minmax-fp32-neon-mlal.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c2s4-minmax-fp32-neonv8-mlal.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4-minmax-fp32-scalar-lrintf.c",
+      "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41504,57 +43203,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-gemm_arm64_standalone") {
-      cflags = []
+source_set("qs8-rdsum_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-neon-c32.c",
+    "src/src/qs8-rdsum/gen/qs8-rdsum-minmax-fp32-scalar-u1-acc1.c"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x16-minmax-fp32-neonv8-mlal-lane.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c2s4-minmax-fp32-neon-mlal.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x8c2s4-minmax-fp32-neonv8-mlal.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c2s4-minmax-fp32-neon-mlal.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-2x8c2s4-minmax-fp32-neonv8-mlal.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4-minmax-fp32-scalar-lrintf.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rdsum_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-neon-c32.c",
+    "src/src/qs8-rdsum/gen/qs8-rdsum-minmax-fp32-scalar-u1-acc1.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-rsum_arch=armv8.2-a+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+dotprod"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rsum/gen/qs8-rsum-neondot-u32-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-qc8w-igemm_arch=armv8.2-a+dotprod") {
-    cflags = [ "-march=armv8.2-a+dotprod" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rsum_arch=armv8.2-a+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+dotprod"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16c4-minmax-fp32-neondot.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c4-minmax-fp32-neondot.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c4-minmax-fp32-neondot.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x8c4-minmax-fp32-neondot.c",
+      "src/src/qs8-rsum/gen/qs8-rsum-neondot-u32-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41566,62 +43319,117 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-igemm_arch=armv8.2-a+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod" ]
+source_set("qs8-rsum_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rsum/gen/qs8-rsum-neon-u32-acc2.c",
+    "src/src/qs8-rsum/gen/qs8-rsum-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16c4-minmax-fp32-neondot.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c4-minmax-fp32-neondot.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c4-minmax-fp32-neondot.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x8c4-minmax-fp32-neondot.c",
-      ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rsum_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-rsum/gen/qs8-rsum-neon-u32-acc2.c",
+    "src/src/qs8-rsum/gen/qs8-rsum-scalar-u4.c"
+    ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vadd_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-neon-ld64-u16.c",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-neon-ld64-u32.c",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u1.c",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-qc8w-igemm_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-    asmflags = cflags
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vadd_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-ld64.S",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c4-minmax-fp32-asm-aarch64-neondot-cortex-a55.S",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c4-minmax-fp32-asm-aarch64-neondot-ld128.S",
+      "src/src/qs8-vadd/gen/qs8-vadd-minmax-neon-ld64-u16.c",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-neon-ld64-u32.c",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u1.c",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41633,60 +43441,117 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-igemm_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+source_set("qs8-vaddc_arm64") {
+  cflags = [
 
-      asmflags = cflags
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-cortex-a53-prfm.S",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal-prfm.S",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c8-minmax-fp32-asm-aarch64-neon-mlal.S",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16-minmax-fp32-asm-aarch64-neon-mlal-lane-ld64.S",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c4-minmax-fp32-asm-aarch64-neondot-cortex-a55.S",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c4-minmax-fp32-asm-aarch64-neondot-ld128.S",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-neon-ld64-u16.c",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-neon-ld64-u32.c",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u1.c",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vaddc_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-neon-ld64-u16.c",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-neon-ld64-u32.c",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u1.c",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vcvt_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vcvt/gen/qs8-vcvt-neon-u32.c",
+    "src/src/qs8-vcvt/gen/qs8-vcvt-scalar-u4.c"
+  ]
 
-  source_set("qs8-qc8w-igemm_arch=armv8.2-a+i8mm+fp16") {
-    cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vcvt_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16c8-minmax-fp32-neoni8mm.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c8-minmax-fp32-neoni8mm.c",
+      "src/src/qs8-vcvt/gen/qs8-vcvt-neon-u32.c",
+    "src/src/qs8-vcvt/gen/qs8-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41698,55 +43563,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-igemm_arch=armv8.2-a+i8mm+fp16_standalone") {
-      cflags = [ "-march=armv8.2-a+i8mm+fp16" ]
+source_set("qs8-vlrelu_arm64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16c8-minmax-fp32-neoni8mm.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x16c8-minmax-fp32-neoni8mm.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vlrelu/gen/qs8-vlrelu-neon-u32.c",
+    "src/src/qs8-vlrelu/gen/qs8-vlrelu-scalar-andxor-u4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vlrelu_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vlrelu/gen/qs8-vlrelu-neon-u32.c",
+    "src/src/qs8-vlrelu/gen/qs8-vlrelu-scalar-andxor-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vmul_arm64") {
+  cflags = [
 
-  source_set("qs8-qc8w-igemm_arm64") {
-    cflags = []
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-scalar-u4.c",
+    "src/src/qs8-vmul/gen/qs8-vmul-minmax-rndnu-neon-ld64-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmul_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16-minmax-fp32-neonv8-mlal-lane.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c2s4-minmax-fp32-neon-mlal.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c2s4-minmax-fp32-neonv8-mlal.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c2s4-minmax-fp32-neon-mlal.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c2s4-minmax-fp32-neonv8-mlal.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4-minmax-fp32-scalar-lrintf.c",
+      "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-scalar-u4.c",
+    "src/src/qs8-vmul/gen/qs8-vmul-minmax-rndnu-neon-ld64-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41758,54 +43681,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-igemm_arm64_standalone") {
-      cflags = []
+source_set("qs8-vmulc_arm64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x16-minmax-fp32-neonv8-mlal-lane.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c2s4-minmax-fp32-neon-mlal.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x8c2s4-minmax-fp32-neonv8-mlal.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c2s4-minmax-fp32-neon-mlal.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-2x8c2s4-minmax-fp32-neonv8-mlal.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4-minmax-fp32-scalar-lrintf.c",
-      ]
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-scalar-u4.c",
+    "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-rndnu-neon-ld64-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      public_configs = [ ":xnnpack_public_config" ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmulc_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-scalar-u4.c",
+    "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-rndnu-neon-ld64-u16.c"
+    ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vprelu_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vprelu/gen/qs8-vprelu-scalar-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-qu8-packw_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vprelu_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-scalar.c",
+      "src/src/qs8-vprelu/gen/qs8-vprelu-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41817,49 +43797,109 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qu8-packw_arm64_standalone") {
-      cflags = []
+source_set("qs8-vpreluc_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vpreluc/gen/qs8-vpreluc-scalar-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-scalar.c",
-      ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vpreluc_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vpreluc/gen/qs8-vpreluc-scalar-u8.c"
+    ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qs8-rdsum_arm64") {
-    cflags = []
+source_set("qs8-vrpreluc_arm64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-scalar-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vrpreluc_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-neon-c32.c",
-      "src/src/qs8-rdsum/gen/qs8-rdsum-minmax-fp32-scalar-u1-acc1.c",
+      "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41871,49 +43911,121 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-rdsum_arm64_standalone") {
-      cflags = []
+source_set("qu8-dwconv_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p8c-minmax-rndnu-neon-mul8.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p16c-minmax-rndnu-neon-mul8.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-minmax-fp32-neon-c32.c",
-        "src/src/qs8-rdsum/gen/qs8-rdsum-minmax-fp32-scalar-u1-acc1.c",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      public_configs = [ ":xnnpack_public_config" ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-dwconv_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-dwconv/gen/qu8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p8c-minmax-rndnu-neon-mul8.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p16c-minmax-rndnu-neon-mul8.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-f32-vcvt_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-neon-u32.c",
+    "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-rsum_arch=armv8.2-a+dotprod") {
-    cflags = [ "-march=armv8.2-a+dotprod" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-f32-vcvt_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rsum/gen/qs8-rsum-neondot-u32-acc2.c",
+      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-neon-u32.c",
+    "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41925,49 +44037,131 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-rsum_arch=armv8.2-a+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+dotprod" ]
+source_set("qu8-gemm_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rsum/gen/qs8-rsum-neondot-u32-acc2.c",
-      ]
+  asmflags = cflags
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
+    "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75-prfm.S",
+    "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75.S",
+    "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu16-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
+
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
+    "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75-prfm.S",
+    "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75.S",
+    "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu16-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qs8-rsum_arm64") {
-    cflags = []
+source_set("qu8-gemm_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x16-minmax-rndnu-neon-mlal-lane.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x16-minmax-rndnu16-neon-mlal-lane.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x8-minmax-rndnu-neon-mlal-lane.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x8-minmax-rndnu-neon-mlal-lane.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-neon-mlal-lane.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-gemm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rsum/gen/qs8-rsum-neon-u32-acc2.c",
-      "src/src/qs8-rsum/gen/qs8-rsum-scalar-u4.c",
+      "src/src/qu8-gemm/gen/qu8-gemm-1x16-minmax-rndnu-neon-mlal-lane.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x16-minmax-rndnu16-neon-mlal-lane.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x8-minmax-rndnu-neon-mlal-lane.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x8-minmax-rndnu-neon-mlal-lane.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-neon-mlal-lane.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -41979,52 +44173,131 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-rsum_arm64_standalone") {
-      cflags = []
+source_set("qu8-igemm_arch=armv8.2-a+fp16+dotprod") {
+  cflags = [
+    "-march=armv8.2-a+fp16+dotprod"
+  ]
+
+  asmflags = cflags
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
+    "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75-prfm.S",
+    "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75.S",
+    "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu16-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-igemm_arch=armv8.2-a+fp16+dotprod_standalone") {
+    cflags = [
+      "-march=armv8.2-a+fp16+dotprod"
+    ]
+  
+  asmflags = cflags
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rsum/gen/qs8-rsum-neon-u32-acc2.c",
-        "src/src/qs8-rsum/gen/qs8-rsum-scalar-u4.c",
-      ]
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
+    "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75-prfm.S",
+    "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75.S",
+    "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu16-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S"
+    ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-igemm_arm64") {
+  cflags = [
 
-  source_set("qs8-vadd_arm64") {
-    cflags = []
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x16-minmax-rndnu-neon-mlal-lane.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x16-minmax-rndnu16-neon-mlal-lane.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x8-minmax-rndnu-neon-mlal-lane.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x8-minmax-rndnu-neon-mlal-lane.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-neon-mlal-lane.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-igemm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vadd/gen/qs8-vadd-minmax-neon-ld64-u16.c",
-      "src/src/qs8-vadd/gen/qs8-vadd-minmax-neon-ld64-u32.c",
-      "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u1.c",
-      "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u4.c",
+      "src/src/qu8-igemm/gen/qu8-igemm-1x16-minmax-rndnu-neon-mlal-lane.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x16-minmax-rndnu16-neon-mlal-lane.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x8-minmax-rndnu-neon-mlal-lane.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x8-minmax-rndnu-neon-mlal-lane.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-neon-mlal-lane.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42036,54 +44309,115 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vadd_arm64_standalone") {
-      cflags = []
+source_set("qu8-rdsum_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-neon-u16.c",
+    "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-neon-u32.c",
+    "src/src/qu8-rdsum/gen/qu8-rdsum-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-rdsum_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-neon-u16.c",
+    "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-neon-u32.c",
+    "src/src/qu8-rdsum/gen/qu8-rdsum-scalar.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vadd/gen/qs8-vadd-minmax-neon-ld64-u16.c",
-        "src/src/qs8-vadd/gen/qs8-vadd-minmax-neon-ld64-u32.c",
-        "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u1.c",
-        "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qs8-vaddc_arm64") {
-    cflags = []
+source_set("qu8-rsum_arm64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-rsum/gen/qu8-rsum-neon-u32-acc2.c",
+    "src/src/qu8-rsum/gen/qu8-rsum-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-rsum_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-neon-ld64-u16.c",
-      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-neon-ld64-u32.c",
-      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u1.c",
-      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u4.c",
+      "src/src/qu8-rsum/gen/qu8-rsum-neon-u32-acc2.c",
+    "src/src/qu8-rsum/gen/qu8-rsum-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42095,52 +44429,121 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vaddc_arm64_standalone") {
-      cflags = []
+source_set("qu8-vadd_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-neon-ld64-u16.c",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-neon-ld64-u32.c",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u1.c",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-neon-ld64-u16.c",
-        "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-neon-ld64-u32.c",
-        "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u1.c",
-        "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vadd_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-vadd/gen/qu8-vadd-minmax-neon-ld64-u16.c",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-neon-ld64-u32.c",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u1.c",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qs8-vcvt_arm64") {
-    cflags = []
+source_set("qu8-vaddc_arm64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-neon-ld64-u16.c",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-neon-ld64-u32.c",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u1.c",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vaddc_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vcvt/gen/qs8-vcvt-neon-u32.c",
-      "src/src/qs8-vcvt/gen/qs8-vcvt-scalar-u4.c",
+      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-neon-ld64-u16.c",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-neon-ld64-u32.c",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u1.c",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42152,50 +44555,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vcvt_arm64_standalone") {
-      cflags = []
+source_set("qu8-vcvt_arm64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vcvt/gen/qs8-vcvt-neon-u32.c",
-        "src/src/qs8-vcvt/gen/qs8-vcvt-scalar-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vcvt/gen/qu8-vcvt-neon-u32.c",
+    "src/src/qu8-vcvt/gen/qu8-vcvt-scalar-u4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vcvt_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-vcvt/gen/qu8-vcvt-neon-u32.c",
+    "src/src/qu8-vcvt/gen/qu8-vcvt-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vlrelu_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vlrelu/gen/qu8-vlrelu-neon-u32.c",
+    "src/src/qu8-vlrelu/gen/qu8-vlrelu-scalar-andxor-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-vlrelu_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vlrelu_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vlrelu/gen/qs8-vlrelu-neon-u32.c",
-      "src/src/qs8-vlrelu/gen/qs8-vlrelu-scalar-andxor-u4.c",
+      "src/src/qu8-vlrelu/gen/qu8-vlrelu-neon-u32.c",
+    "src/src/qu8-vlrelu/gen/qu8-vlrelu-scalar-andxor-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42207,50 +44673,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vlrelu_arm64_standalone") {
-      cflags = []
+source_set("qu8-vmul_arm64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vlrelu/gen/qs8-vlrelu-neon-u32.c",
-        "src/src/qs8-vlrelu/gen/qs8-vlrelu-scalar-andxor-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-scalar-u4.c",
+    "src/src/qu8-vmul/gen/qu8-vmul-minmax-rndnu-neon-ld64-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmul_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-scalar-u4.c",
+    "src/src/qu8-vmul/gen/qu8-vmul-minmax-rndnu-neon-ld64-u16.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vmulc_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-scalar-u4.c",
+    "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-rndnu-neon-ld64-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-vmul_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmulc_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-scalar-u4.c",
-      "src/src/qs8-vmul/gen/qs8-vmul-minmax-rndnu-neon-ld64-u16.c",
+      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-scalar-u4.c",
+    "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-rndnu-neon-ld64-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42262,50 +44791,109 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vmul_arm64_standalone") {
-      cflags = []
+source_set("qu8-vprelu_arm64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-scalar-u4.c",
-        "src/src/qs8-vmul/gen/qs8-vmul-minmax-rndnu-neon-ld64-u16.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vprelu/gen/qu8-vprelu-scalar-u8.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vprelu_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-vprelu/gen/qu8-vprelu-scalar-u8.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qs8-vmulc_arm64") {
-    cflags = []
+source_set("qu8-vpreluc_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vpreluc/gen/qu8-vpreluc-scalar-u8.c"
+  ]
 
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vpreluc_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-scalar-u4.c",
-      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-rndnu-neon-ld64-u16.c",
+      "src/src/qu8-vpreluc/gen/qu8-vpreluc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42317,49 +44905,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vmulc_arm64_standalone") {
-      cflags = []
+source_set("qu8-vrpreluc_arm64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-scalar-u4.c",
-        "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-rndnu-neon-ld64-u16.c",
-      ]
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-scalar-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vrpreluc_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-scalar-u8.c"
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("reference_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/reference/binary-elementwise.cc",
+    "src/src/reference/packing.cc",
+    "src/src/reference/unary-elementwise.cc"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-vprelu_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("reference_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vprelu/gen/qs8-vprelu-scalar-u8.c",
+      "src/src/reference/binary-elementwise.cc",
+    "src/src/reference/packing.cc",
+    "src/src/reference/unary-elementwise.cc"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42371,48 +45023,115 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vprelu_arm64_standalone") {
-      cflags = []
+source_set("s8-ibilinear_arm64") {
+  cflags = [
+
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vprelu/gen/qs8-vprelu-scalar-u8.c",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-ibilinear/gen/s8-ibilinear-neon-c16.c",
+    "src/src/s8-ibilinear/gen/s8-ibilinear-neon-c8.c",
+    "src/src/s8-ibilinear/gen/s8-ibilinear-scalar-c1.c"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-ibilinear_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/s8-ibilinear/gen/s8-ibilinear-neon-c16.c",
+    "src/src/s8-ibilinear/gen/s8-ibilinear-neon-c8.c",
+    "src/src/s8-ibilinear/gen/s8-ibilinear-scalar-c1.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("s8-maxpool_arm64") {
+  cflags = [
+
+  ]
 
-  source_set("qs8-vpreluc_arm64") {
-    cflags = []
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-neon-u16.c",
+    "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-scalar-u1.c"
+  ]
 
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-maxpool_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vpreluc/gen/qs8-vpreluc-scalar-u8.c",
+      "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-neon-u16.c",
+    "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42424,48 +45143,125 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vpreluc_arm64_standalone") {
-      cflags = []
+source_set("s8-rdminmax_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-neon-c32.c",
+    "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-scalar-c2.c",
+    "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-neon-c32.c",
+    "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-scalar-c2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vpreluc/gen/qs8-vpreluc-scalar-u8.c",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-rdminmax_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-neon-c32.c",
+    "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-scalar-c2.c",
+    "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-neon-c32.c",
+    "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-scalar-c2.c"
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qs8-vrpreluc_arm64") {
-    cflags = []
+source_set("s8-rminmax_arm64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-rminmax/gen/s8-rmax-neon-u32-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rmax-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rmin-neon-u32-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rmin-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rminmax-neon-u32-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rminmax-scalar-u2-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-rminmax_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-scalar-u8.c",
+      "src/src/s8-rminmax/gen/s8-rmax-neon-u32-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rmax-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rmin-neon-u32-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rmin-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rminmax-neon-u32-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rminmax-scalar-u2-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42477,53 +45273,167 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vrpreluc_arm64_standalone") {
-      cflags = []
+source_set("s8-vclamp_arm64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-scalar-u8.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-vclamp/s8-vclamp-neon-u64.c",
+    "src/src/s8-vclamp/s8-vclamp-scalar-u4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-vclamp_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/s8-vclamp/s8-vclamp-neon-u64.c",
+    "src/src/s8-vclamp/s8-vclamp-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("subgraph_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/subgraph/argmax-pooling-2d.c",
+    "src/src/subgraph/average-pooling-2d.c",
+    "src/src/subgraph/batch-matrix-multiply.c",
+    "src/src/subgraph/binary.c",
+    "src/src/subgraph/concatenate.c",
+    "src/src/subgraph/convolution-2d.c",
+    "src/src/subgraph/copy.c",
+    "src/src/subgraph/deconvolution-2d.c",
+    "src/src/subgraph/deprecated.c",
+    "src/src/subgraph/depth-to-space-2d.c",
+    "src/src/subgraph/depthwise-convolution-2d.c",
+    "src/src/subgraph/even-split.c",
+    "src/src/subgraph/fully-connected-sparse.c",
+    "src/src/subgraph/fully-connected.c",
+    "src/src/subgraph/max-pooling-2d.c",
+    "src/src/subgraph/pack-lh.c",
+    "src/src/subgraph/reshape-helpers.c",
+    "src/src/subgraph/rope.c",
+    "src/src/subgraph/softmax.c",
+    "src/src/subgraph/space-to-depth-2d.c",
+    "src/src/subgraph/static-constant-pad.c",
+    "src/src/subgraph/static-reduce.c",
+    "src/src/subgraph/static-resize-bilinear-2d.c",
+    "src/src/subgraph/static-slice.c",
+    "src/src/subgraph/static-transpose.c",
+    "src/src/subgraph/subgraph-utils.c",
+    "src/src/subgraph/unary.c",
+    "src/src/subgraph/unpooling-2d.c",
+    "src/src/subgraph/validation.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-dwconv_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("subgraph_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-25p8c-minmax-rndnu-neon-mul8.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-9p16c-minmax-rndnu-neon-mul8.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
+      "src/src/subgraph/argmax-pooling-2d.c",
+    "src/src/subgraph/average-pooling-2d.c",
+    "src/src/subgraph/batch-matrix-multiply.c",
+    "src/src/subgraph/binary.c",
+    "src/src/subgraph/concatenate.c",
+    "src/src/subgraph/convolution-2d.c",
+    "src/src/subgraph/copy.c",
+    "src/src/subgraph/deconvolution-2d.c",
+    "src/src/subgraph/deprecated.c",
+    "src/src/subgraph/depth-to-space-2d.c",
+    "src/src/subgraph/depthwise-convolution-2d.c",
+    "src/src/subgraph/even-split.c",
+    "src/src/subgraph/fully-connected-sparse.c",
+    "src/src/subgraph/fully-connected.c",
+    "src/src/subgraph/max-pooling-2d.c",
+    "src/src/subgraph/pack-lh.c",
+    "src/src/subgraph/reshape-helpers.c",
+    "src/src/subgraph/rope.c",
+    "src/src/subgraph/softmax.c",
+    "src/src/subgraph/space-to-depth-2d.c",
+    "src/src/subgraph/static-constant-pad.c",
+    "src/src/subgraph/static-reduce.c",
+    "src/src/subgraph/static-resize-bilinear-2d.c",
+    "src/src/subgraph/static-slice.c",
+    "src/src/subgraph/static-transpose.c",
+    "src/src/subgraph/subgraph-utils.c",
+    "src/src/subgraph/unary.c",
+    "src/src/subgraph/unpooling-2d.c",
+    "src/src/subgraph/validation.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42535,54 +45445,129 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-dwconv_arm64_standalone") {
-      cflags = []
+source_set("tables_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/tables/exp2-k-over-2048.c",
+    "src/src/tables/exp2-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-16.c",
+    "src/src/tables/exp2minus-k-over-2048.c",
+    "src/src/tables/exp2minus-k-over-32.c",
+    "src/src/tables/exp2minus-k-over-4.c",
+    "src/src/tables/exp2minus-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-8.c",
+    "src/src/tables/vlog.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("tables_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/tables/exp2-k-over-2048.c",
+    "src/src/tables/exp2-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-16.c",
+    "src/src/tables/exp2minus-k-over-2048.c",
+    "src/src/tables/exp2minus-k-over-32.c",
+    "src/src/tables/exp2minus-k-over-4.c",
+    "src/src/tables/exp2minus-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-8.c",
+    "src/src/tables/vlog.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-25p8c-minmax-rndnu-neon-mul8.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-9p16c-minmax-rndnu-neon-mul8.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("u8-ibilinear_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-ibilinear/gen/u8-ibilinear-neon-c16.c",
+    "src/src/u8-ibilinear/gen/u8-ibilinear-neon-c8.c",
+    "src/src/u8-ibilinear/gen/u8-ibilinear-scalar-c1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qu8-f32-vcvt_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-ibilinear_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-neon-u32.c",
-      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-scalar-u4.c",
+      "src/src/u8-ibilinear/gen/u8-ibilinear-neon-c16.c",
+    "src/src/u8-ibilinear/gen/u8-ibilinear-neon-c8.c",
+    "src/src/u8-ibilinear/gen/u8-ibilinear-scalar-c1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42594,54 +45579,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-f32-vcvt_arm64_standalone") {
-      cflags = []
+source_set("u8-lut32norm_arm64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-neon-u32.c",
-        "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-scalar-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-lut32norm/u8-lut32norm-scalar.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-lut32norm_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/u8-lut32norm/u8-lut32norm-scalar.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qu8-gemm_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+source_set("u8-maxpool_arm64") {
+  cflags = [
 
-    asmflags = cflags
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-neon-u16.c",
+    "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-scalar-u1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-maxpool_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
-      "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75-prfm.S",
-      "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75.S",
-      "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu16-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
+      "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-neon-u16.c",
+    "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42653,59 +45695,125 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-gemm_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+source_set("u8-rdminmax_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-neon-c32.c",
+    "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-scalar-c2.c",
+    "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-neon-c32.c",
+    "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-scalar-c2.c"
+  ]
 
-      asmflags = cflags
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
-        "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75-prfm.S",
-        "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75.S",
-        "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu16-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-rdminmax_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-neon-c32.c",
+    "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-scalar-c2.c",
+    "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-neon-c32.c",
+    "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-scalar-c2.c"
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qu8-gemm_arm64") {
-    cflags = []
+source_set("u8-rminmax_arm64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-rminmax/gen/u8-rmax-neon-u32-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rmax-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rmin-neon-u32-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rmin-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rminmax-neon-u32-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rminmax-scalar-u2-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-rminmax_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-gemm/gen/qu8-gemm-1x16-minmax-rndnu-neon-mlal-lane.c",
-      "src/src/qu8-gemm/gen/qu8-gemm-1x16-minmax-rndnu16-neon-mlal-lane.c",
-      "src/src/qu8-gemm/gen/qu8-gemm-1x4-minmax-fp32-scalar-lrintf.c",
-      "src/src/qu8-gemm/gen/qu8-gemm-1x8-minmax-rndnu-neon-mlal-lane.c",
-      "src/src/qu8-gemm/gen/qu8-gemm-3x4-minmax-fp32-scalar-lrintf.c",
-      "src/src/qu8-gemm/gen/qu8-gemm-3x8-minmax-rndnu-neon-mlal-lane.c",
-      "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-neon-mlal-lane.c",
+      "src/src/u8-rminmax/gen/u8-rmax-neon-u32-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rmax-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rmin-neon-u32-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rmin-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rminmax-neon-u32-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rminmax-scalar-u2-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42717,59 +45825,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-gemm_arm64_standalone") {
-      cflags = []
+source_set("u8-vclamp_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-vclamp/u8-vclamp-neon-u64.c",
+    "src/src/u8-vclamp/u8-vclamp-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-gemm/gen/qu8-gemm-1x16-minmax-rndnu-neon-mlal-lane.c",
-        "src/src/qu8-gemm/gen/qu8-gemm-1x16-minmax-rndnu16-neon-mlal-lane.c",
-        "src/src/qu8-gemm/gen/qu8-gemm-1x4-minmax-fp32-scalar-lrintf.c",
-        "src/src/qu8-gemm/gen/qu8-gemm-1x8-minmax-rndnu-neon-mlal-lane.c",
-        "src/src/qu8-gemm/gen/qu8-gemm-3x4-minmax-fp32-scalar-lrintf.c",
-        "src/src/qu8-gemm/gen/qu8-gemm-3x8-minmax-rndnu-neon-mlal-lane.c",
-        "src/src/qu8-gemm/gen/qu8-gemm-4x16-minmax-rndnu-neon-mlal-lane.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-vclamp_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/u8-vclamp/u8-vclamp-neon-u64.c",
+    "src/src/u8-vclamp/u8-vclamp-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x16-pack-lh_arch=armv8.2-a+sve+sve2") {
+  cflags = [
+    "-march=armv8.2-a+sve+sve2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x16-pack-lh/x16-packlh-neonsme2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qu8-igemm_arch=armv8.2-a+fp16+dotprod") {
-    cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-    asmflags = cflags
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x16-pack-lh_arch=armv8.2-a+sve+sve2_standalone") {
+    cflags = [
+      "-march=armv8.2-a+sve+sve2"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
-      "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75-prfm.S",
-      "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75.S",
-      "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu16-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
+      "src/src/x16-pack-lh/x16-packlh-neonsme2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42781,59 +45941,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-igemm_arch=armv8.2-a+fp16+dotprod_standalone") {
-      cflags = [ "-march=armv8.2-a+fp16+dotprod" ]
+source_set("x16-packw_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x16-packw/gen/x16-packw-x16-gemm-goi-neon-ld4lane-u8-prfm.c",
+    "src/src/x16-packw/gen/x16-packw-x8-gemm-goi-neon-ld4lane-u8-prfm.c"
+  ]
 
-      asmflags = cflags
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
-        "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75-prfm.S",
-        "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-asm-aarch64-neon-mlal-lane-cortex-a75.S",
-        "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu16-asm-aarch64-neon-mlal-lane-cortex-a53-prfm.S",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x16-packw_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/x16-packw/gen/x16-packw-x16-gemm-goi-neon-ld4lane-u8-prfm.c",
+    "src/src/x16-packw/gen/x16-packw-x8-gemm-goi-neon-ld4lane-u8-prfm.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x16-transposec_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x16-transposec/gen/x16-transposec-2x4-scalar-int.c",
+    "src/src/x16-transposec/gen/x16-transposec-8x8-reuse-dec-zip-neon.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qu8-igemm_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x16-transposec_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-igemm/gen/qu8-igemm-1x16-minmax-rndnu-neon-mlal-lane.c",
-      "src/src/qu8-igemm/gen/qu8-igemm-1x16-minmax-rndnu16-neon-mlal-lane.c",
-      "src/src/qu8-igemm/gen/qu8-igemm-1x4-minmax-fp32-scalar-lrintf.c",
-      "src/src/qu8-igemm/gen/qu8-igemm-1x8-minmax-rndnu-neon-mlal-lane.c",
-      "src/src/qu8-igemm/gen/qu8-igemm-3x4-minmax-fp32-scalar-lrintf.c",
-      "src/src/qu8-igemm/gen/qu8-igemm-3x8-minmax-rndnu-neon-mlal-lane.c",
-      "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-neon-mlal-lane.c",
+      "src/src/x16-transposec/gen/x16-transposec-2x4-scalar-int.c",
+    "src/src/x16-transposec/gen/x16-transposec-8x8-reuse-dec-zip-neon.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42845,56 +46059,115 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-igemm_arm64_standalone") {
-      cflags = []
+source_set("x16-x32-packw_arm64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-igemm/gen/qu8-igemm-1x16-minmax-rndnu-neon-mlal-lane.c",
-        "src/src/qu8-igemm/gen/qu8-igemm-1x16-minmax-rndnu16-neon-mlal-lane.c",
-        "src/src/qu8-igemm/gen/qu8-igemm-1x4-minmax-fp32-scalar-lrintf.c",
-        "src/src/qu8-igemm/gen/qu8-igemm-1x8-minmax-rndnu-neon-mlal-lane.c",
-        "src/src/qu8-igemm/gen/qu8-igemm-3x4-minmax-fp32-scalar-lrintf.c",
-        "src/src/qu8-igemm/gen/qu8-igemm-3x8-minmax-rndnu-neon-mlal-lane.c",
-        "src/src/qu8-igemm/gen/qu8-igemm-4x16-minmax-rndnu-neon-mlal-lane.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-gio-scalar.c",
+    "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-goi-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x16-x32-packw_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-gio-scalar.c",
+    "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-goi-scalar.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x24-transposec_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x24-transposec/gen/x24-transposec-1x2-scalar.c",
+    "src/src/x24-transposec/x24-transposec-2x2-neon-tbl64.c",
+    "src/src/x24-transposec/x24-transposec-4x4-aarch64-neon-tbl128.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qu8-rdsum_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x24-transposec_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-neon-u16.c",
-      "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-neon-u32.c",
-      "src/src/qu8-rdsum/gen/qu8-rdsum-scalar.c",
+      "src/src/x24-transposec/gen/x24-transposec-1x2-scalar.c",
+    "src/src/x24-transposec/x24-transposec-2x2-neon-tbl64.c",
+    "src/src/x24-transposec/x24-transposec-4x4-aarch64-neon-tbl128.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42906,51 +46179,129 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-rdsum_arm64_standalone") {
-      cflags = []
+source_set("x32-pack-lh_arch=armv8.2-a+sve+sve2") {
+  cflags = [
+    "-march=armv8.2-a+sve+sve2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-pack-lh/x32-packlh-neonsme2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-pack-lh_arch=armv8.2-a+sve+sve2_standalone") {
+    cflags = [
+      "-march=armv8.2-a+sve+sve2"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/x32-pack-lh/x32-packlh-neonsme2.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-neon-u16.c",
-        "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-neon-u32.c",
-        "src/src/qu8-rdsum/gen/qu8-rdsum-scalar.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x32-packw_arm64") {
+  cflags = [
+
+  ]
 
-  source_set("qu8-rsum_arm64") {
-    cflags = []
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-packw/gen/x32-packw-gio-neon-u2.c",
+    "src/src/x32-packw/gen/x32-packw-x16-gemm-goi-neon-ld4lane-u4-prfm.c",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-neon-ld2lane-u2-prfm.c",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-scalar-int-u2.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x64-gemm-goi-scalar-int-u2.c",
+    "src/src/x32-packw/gen/x32-packw-x8-gemm-goi-neon-ld4lane-u4-prfm.c",
+    "src/src/x32-packw/gen/x32-packw-x8s4-gemm-goi-neon-ld4lane-u4-prfm.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-packw_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-rsum/gen/qu8-rsum-neon-u32-acc2.c",
-      "src/src/qu8-rsum/gen/qu8-rsum-scalar-u4.c",
+      "src/src/x32-packw/gen/x32-packw-gio-neon-u2.c",
+    "src/src/x32-packw/gen/x32-packw-x16-gemm-goi-neon-ld4lane-u4-prfm.c",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-neon-ld2lane-u2-prfm.c",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-scalar-int-u2.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x64-gemm-goi-scalar-int-u2.c",
+    "src/src/x32-packw/gen/x32-packw-x8-gemm-goi-neon-ld4lane-u4-prfm.c",
+    "src/src/x32-packw/gen/x32-packw-x8s4-gemm-goi-neon-ld4lane-u4-prfm.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -42962,52 +46313,115 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-rsum_arm64_standalone") {
-      cflags = []
+source_set("x32-transposec_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-transposec/gen/x32-transposec-2x4-scalar-int.c",
+    "src/src/x32-transposec/gen/x32-transposec-4x4-reuse-dec-zip-neon.c",
+    "src/src/x32-transposec/x32-transposec-4x4-aarch64-neon-tbl128.c"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-rsum/gen/qu8-rsum-neon-u32-acc2.c",
-        "src/src/qu8-rsum/gen/qu8-rsum-scalar-u4.c",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      public_configs = [ ":xnnpack_public_config" ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-transposec_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/x32-transposec/gen/x32-transposec-2x4-scalar-int.c",
+    "src/src/x32-transposec/gen/x32-transposec-4x4-reuse-dec-zip-neon.c",
+    "src/src/x32-transposec/x32-transposec-4x4-aarch64-neon-tbl128.c"
+    ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qu8-vadd_arm64") {
-    cflags = []
+source_set("x32-unpool_arm64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-unpool/x32-unpool-neon.c",
+    "src/src/x32-unpool/x32-unpool-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-unpool_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vadd/gen/qu8-vadd-minmax-neon-ld64-u16.c",
-      "src/src/qu8-vadd/gen/qu8-vadd-minmax-neon-ld64-u32.c",
-      "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u1.c",
-      "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u4.c",
+      "src/src/x32-unpool/x32-unpool-neon.c",
+    "src/src/x32-unpool/x32-unpool-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43019,54 +46433,115 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vadd_arm64_standalone") {
-      cflags = []
+source_set("x64-transposec_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x64-transposec/gen/x64-transposec-2x2-multi-dec-zip-neon.c",
+    "src/src/x64-transposec/gen/x64-transposec-2x2-reuse-dec-zip-neon.c",
+    "src/src/x64-transposec/gen/x64-transposec-4x2-scalar-int.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vadd/gen/qu8-vadd-minmax-neon-ld64-u16.c",
-        "src/src/qu8-vadd/gen/qu8-vadd-minmax-neon-ld64-u32.c",
-        "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u1.c",
-        "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x64-transposec_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/x64-transposec/gen/x64-transposec-2x2-multi-dec-zip-neon.c",
+    "src/src/x64-transposec/gen/x64-transposec-2x2-reuse-dec-zip-neon.c",
+    "src/src/x64-transposec/gen/x64-transposec-4x2-scalar-int.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qu8-vaddc_arm64") {
-    cflags = []
+source_set("x8-lut_arm64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-lut/gen/x8-lut-aarch64-neon-tbx128x4-u64.c",
+    "src/src/x8-lut/gen/x8-lut-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-lut_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-neon-ld64-u16.c",
-      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-neon-ld64-u32.c",
-      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u1.c",
-      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u4.c",
+      "src/src/x8-lut/gen/x8-lut-aarch64-neon-tbx128x4-u64.c",
+    "src/src/x8-lut/gen/x8-lut-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43078,52 +46553,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vaddc_arm64_standalone") {
-      cflags = []
+source_set("x8-pack-lh_arch=armv8.2-a+sve+sve2") {
+  cflags = [
+    "-march=armv8.2-a+sve+sve2"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-pack-lh/x8-packlh-igemm-neonsme2.c",
+    "src/src/x8-pack-lh/x8-packlh-neonsme2.c"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-neon-ld64-u16.c",
-        "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-neon-ld64-u32.c",
-        "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u1.c",
-        "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u4.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-pack-lh_arch=armv8.2-a+sve+sve2_standalone") {
+    cflags = [
+      "-march=armv8.2-a+sve+sve2"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/x8-pack-lh/x8-packlh-igemm-neonsme2.c",
+    "src/src/x8-pack-lh/x8-packlh-neonsme2.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x8-packq_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-packq/x8-packq-aarch64-neon-f32qp8-u2.c",
+    "src/src/x8-packq/x8-packq-scalar-f32qp8-u1.c"
+  ]
 
-  source_set("qu8-vcvt_arm64") {
-    cflags = []
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-packq_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vcvt/gen/qu8-vcvt-neon-u32.c",
-      "src/src/qu8-vcvt/gen/qu8-vcvt-scalar-u4.c",
+      "src/src/x8-packq/x8-packq-aarch64-neon-f32qp8-u2.c",
+    "src/src/x8-packq/x8-packq-scalar-f32qp8-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43135,50 +46671,117 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vcvt_arm64_standalone") {
-      cflags = []
+source_set("x8-packw_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-packw/gen/x8-packw-x16-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x32-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x4-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x8-gemm-goi-scalar-u2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vcvt/gen/qu8-vcvt-neon-u32.c",
-        "src/src/qu8-vcvt/gen/qu8-vcvt-scalar-u4.c",
-      ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-packw_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/x8-packw/gen/x8-packw-x16-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x32-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x4-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x8-gemm-goi-scalar-u2.c"
+    ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qu8-vlrelu_arm64") {
-    cflags = []
+source_set("x8-transposec_arm64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-transposec/gen/x8-transposec-16x16-reuse-dec-zip-neon.c",
+    "src/src/x8-transposec/gen/x8-transposec-2x4-scalar-int.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-transposec_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vlrelu/gen/qu8-vlrelu-neon-u32.c",
-      "src/src/qu8-vlrelu/gen/qu8-vlrelu-scalar-andxor-u4.c",
+      "src/src/x8-transposec/gen/x8-transposec-16x16-reuse-dec-zip-neon.c",
+    "src/src/x8-transposec/gen/x8-transposec-2x4-scalar-int.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43190,50 +46793,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vlrelu_arm64_standalone") {
-      cflags = []
+source_set("xx-copy_arm64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vlrelu/gen/qu8-vlrelu-neon-u32.c",
-        "src/src/qu8-vlrelu/gen/qu8-vlrelu-scalar-andxor-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-copy/xx-copy-scalar-memcpy.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-copy_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/xx-copy/xx-copy-scalar-memcpy.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("xx-fill_arm64") {
+  cflags = [
 
-  source_set("qu8-vmul_arm64") {
-    cflags = []
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-fill/xx-fill-neon-u64.c",
+    "src/src/xx-fill/xx-fill-scalar-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-fill_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-scalar-u4.c",
-      "src/src/qu8-vmul/gen/qu8-vmul-minmax-rndnu-neon-ld64-u16.c",
+      "src/src/xx-fill/xx-fill-neon-u64.c",
+    "src/src/xx-fill/xx-fill-scalar-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43245,50 +46909,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vmul_arm64_standalone") {
-      cflags = []
+source_set("xx-pad_arm64") {
+  cflags = [
+
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-scalar-u4.c",
-        "src/src/qu8-vmul/gen/qu8-vmul-minmax-rndnu-neon-ld64-u16.c",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-pad/xx-pad-p16-neon-u16.c",
+    "src/src/xx-pad/xx-pad-p4-scalar-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      public_configs = [ ":xnnpack_public_config" ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-pad_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/xx-pad/xx-pad-p16-neon-u16.c",
+    "src/src/xx-pad/xx-pad-p4-scalar-u16.c"
+    ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qu8-vmulc_arm64") {
-    cflags = []
+source_set("xx-transposev_arm64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-transposev/xx-transposev-1x1-scalar-memcpy.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-transposev_arm64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-scalar-u4.c",
-      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-rndnu-neon-ld64-u16.c",
+      "src/src/xx-transposev/xx-transposev-1x1-scalar-memcpy.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43300,49 +47025,166 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vmulc_arm64_standalone") {
-      cflags = []
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-scalar-u4.c",
-        "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-rndnu-neon-ld64-u16.c",
-      ]
+if (current_cpu == "riscv64") {
+source_set("configs_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/configs/argmaxpool-config.c",
+    "src/src/configs/avgpool-config.c",
+    "src/src/configs/binary-elementwise-config.c",
+    "src/src/configs/cmul-config.c",
+    "src/src/configs/conv-hwc2chw-config.c",
+    "src/src/configs/dwconv-config.c",
+    "src/src/configs/dwconv2d-chw-config.c",
+    "src/src/configs/gemm-config.c",
+    "src/src/configs/hardware-config.c",
+    "src/src/configs/ibilinear-chw-config.c",
+    "src/src/configs/ibilinear-config.c",
+    "src/src/configs/lut32norm-config.c",
+    "src/src/configs/maxpool-config.c",
+    "src/src/configs/pack-lh-config.c",
+    "src/src/configs/raddstoreexpminusmax-config.c",
+    "src/src/configs/reduce-config.c",
+    "src/src/configs/spmm-config.c",
+    "src/src/configs/transpose-config.c",
+    "src/src/configs/unary-elementwise-config.c",
+    "src/src/configs/unpool-config.c",
+    "src/src/configs/vmulcaddc-config.c",
+    "src/src/configs/x8-lut-config.c",
+    "src/src/configs/xx-fill-config.c",
+    "src/src/configs/xx-pad-config.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("configs_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/configs/argmaxpool-config.c",
+    "src/src/configs/avgpool-config.c",
+    "src/src/configs/binary-elementwise-config.c",
+    "src/src/configs/cmul-config.c",
+    "src/src/configs/conv-hwc2chw-config.c",
+    "src/src/configs/dwconv-config.c",
+    "src/src/configs/dwconv2d-chw-config.c",
+    "src/src/configs/gemm-config.c",
+    "src/src/configs/hardware-config.c",
+    "src/src/configs/ibilinear-chw-config.c",
+    "src/src/configs/ibilinear-config.c",
+    "src/src/configs/lut32norm-config.c",
+    "src/src/configs/maxpool-config.c",
+    "src/src/configs/pack-lh-config.c",
+    "src/src/configs/raddstoreexpminusmax-config.c",
+    "src/src/configs/reduce-config.c",
+    "src/src/configs/spmm-config.c",
+    "src/src/configs/transpose-config.c",
+    "src/src/configs/unary-elementwise-config.c",
+    "src/src/configs/unpool-config.c",
+    "src/src/configs/vmulcaddc-config.c",
+    "src/src/configs/x8-lut-config.c",
+    "src/src/configs/xx-fill-config.c",
+    "src/src/configs/xx-pad-config.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("enums_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/enums/allocation-type.c",
+    "src/src/enums/datatype-strings.c",
+    "src/src/enums/microkernel-type.c",
+    "src/src/enums/node-type.c",
+    "src/src/enums/operator-type.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vprelu_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("enums_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vprelu/gen/qu8-vprelu-scalar-u8.c",
+      "src/src/enums/allocation-type.c",
+    "src/src/enums/datatype-strings.c",
+    "src/src/enums/microkernel-type.c",
+    "src/src/enums/node-type.c",
+    "src/src/enums/operator-type.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43354,48 +47196,109 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vprelu_arm64_standalone") {
-      cflags = []
+source_set("f16-f32-vcvt_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vprelu/gen/qu8-vprelu-scalar-u8.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-scalar-u4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32-vcvt_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-qs8-vcvt_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-scalar-imagic-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vpreluc_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-qs8-vcvt_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vpreluc/gen/qu8-vpreluc-scalar-u8.c",
+      "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-scalar-imagic-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43407,48 +47310,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vpreluc_arm64_standalone") {
-      cflags = []
+source_set("f16-qu8-vcvt_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vpreluc/gen/qu8-vpreluc-scalar-u8.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-qu8-vcvt/gen/f16-qu8-vcvt-scalar-imagic-u4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-qu8-vcvt_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f16-qu8-vcvt/gen/f16-qu8-vcvt-scalar-imagic-u4.c"
+    ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qu8-vrpreluc_arm64") {
-    cflags = []
+source_set("f16-rdminmax_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-scalar-c2.c",
+    "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-scalar-c2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-rdminmax_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-scalar-u8.c",
+      "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-scalar-c2.c",
+    "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43460,50 +47426,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vrpreluc_arm64_standalone") {
-      cflags = []
+source_set("f16-rminmax_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-scalar-u8.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-rminmax/gen/f16-rmax-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rmin-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rminmax-scalar-u2-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-rminmax_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f16-rminmax/gen/f16-rmax-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rmin-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rminmax-scalar-u2-acc2.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("reference_arm64") {
-    cflags = []
+source_set("f16-vapproxgelu_riscv64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-scalar-rational-6-4-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vapproxgelu_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/reference/binary-elementwise.cc",
-      "src/src/reference/packing.cc",
-      "src/src/reference/unary-elementwise.cc",
+      "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-scalar-rational-6-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43515,52 +47544,109 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("reference_arm64_standalone") {
-      cflags = []
+source_set("f16-vcos_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vcos/gen/f16-vcos-scalar-rational-3-2-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vcos_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f16-vcos/gen/f16-vcos-scalar-rational-3-2-div.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/reference/binary-elementwise.cc",
-        "src/src/reference/packing.cc",
-        "src/src/reference/unary-elementwise.cc",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("s8-ibilinear_arm64") {
-    cflags = []
+source_set("f16-vexp_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vexp/gen/f16-vexp-scalar-poly-3.c"
+  ]
 
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vexp_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-ibilinear/gen/s8-ibilinear-neon-c16.c",
-      "src/src/s8-ibilinear/gen/s8-ibilinear-neon-c8.c",
-      "src/src/s8-ibilinear/gen/s8-ibilinear-scalar-c1.c",
+      "src/src/f16-vexp/gen/f16-vexp-scalar-poly-3.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43572,51 +47658,109 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-ibilinear_arm64_standalone") {
-      cflags = []
+source_set("f16-vgelu_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vgelu/gen/f16-vgelu-scalar-rational-6-4-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vgelu_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f16-vgelu/gen/f16-vgelu-scalar-rational-6-4-div.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-ibilinear/gen/s8-ibilinear-neon-c16.c",
-        "src/src/s8-ibilinear/gen/s8-ibilinear-neon-c8.c",
-        "src/src/s8-ibilinear/gen/s8-ibilinear-scalar-c1.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f16-vsin_riscv64") {
+  cflags = [
 
-  source_set("s8-maxpool_arm64") {
-    cflags = []
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vsin/gen/f16-vsin-scalar-rational-3-2-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vsin_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-neon-u16.c",
-      "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-scalar-u1.c",
+      "src/src/f16-vsin/gen/f16-vsin-scalar-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43628,52 +47772,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-maxpool_arm64_standalone") {
-      cflags = []
+source_set("f32-argmaxpool_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-rvv-u1v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-neon-u16.c",
-        "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-scalar-u1.c",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-argmaxpool_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-rvv-u1v.c"
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("s8-rdminmax_arm64") {
-    cflags = []
+source_set("f32-argmaxpool_riscv64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-scalar-c1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-argmaxpool_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-neon-c32.c",
-      "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-scalar-c2.c",
-      "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-neon-c32.c",
-      "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-scalar-c2.c",
+      "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-scalar-c1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43685,56 +47888,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-rdminmax_arm64_standalone") {
-      cflags = []
+source_set("f32-avgpool_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-scalar-u1.c"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-neon-c32.c",
-        "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-scalar-c2.c",
-        "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-neon-c32.c",
-        "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-scalar-c2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-avgpool_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-scalar-u1.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-conv-hwc2chw_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x2v-rvv-2x2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("s8-rminmax_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-conv-hwc2chw_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-rminmax/gen/s8-rmax-neon-u32-acc2.c",
-      "src/src/s8-rminmax/gen/s8-rmax-scalar-u2-acc2.c",
-      "src/src/s8-rminmax/gen/s8-rmin-neon-u32-acc2.c",
-      "src/src/s8-rminmax/gen/s8-rmin-scalar-u2-acc2.c",
-      "src/src/s8-rminmax/gen/s8-rminmax-neon-u32-acc2.c",
-      "src/src/s8-rminmax/gen/s8-rminmax-scalar-u2-acc2.c",
+      "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x2v-rvv-2x2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43746,54 +48004,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-rminmax_arm64_standalone") {
-      cflags = []
+source_set("f32-conv-hwc2chw_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-rminmax/gen/s8-rmax-neon-u32-acc2.c",
-        "src/src/s8-rminmax/gen/s8-rmax-scalar-u2-acc2.c",
-        "src/src/s8-rminmax/gen/s8-rmin-neon-u32-acc2.c",
-        "src/src/s8-rminmax/gen/s8-rmin-scalar-u2-acc2.c",
-        "src/src/s8-rminmax/gen/s8-rminmax-neon-u32-acc2.c",
-        "src/src/s8-rminmax/gen/s8-rminmax-scalar-u2-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-scalar-1x1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-conv-hwc2chw_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-scalar-1x1.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-dwconv2d-chw_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
-  source_set("s8-vclamp_arm64") {
-    cflags = []
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-rvv-7x1v.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-rvv-2x2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv2d-chw_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-vclamp/s8-vclamp-neon-u64.c",
-      "src/src/s8-vclamp/s8-vclamp-scalar-u4.c",
+      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-rvv-7x1v.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-rvv-2x2v.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43805,77 +48122,139 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-vclamp_arm64_standalone") {
-      cflags = []
+source_set("f32-dwconv2d-chw_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-vclamp/s8-vclamp-neon-u64.c",
-        "src/src/s8-vclamp/s8-vclamp-scalar-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-4x1.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-1x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-2x1-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv2d-chw_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-4x1.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-1x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-2x1-acc2.c"
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("subgraph_arm64") {
-    cflags = []
+source_set("f32-dwconv_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p8vc-minmax-rvv.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p8vc-rvv.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p8vc-minmax-rvv.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p8vc-rvv.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p8vc-minmax-rvv.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p8vc-rvv.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p8vc-minmax-rvv.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p8vc-rvv.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/subgraph/argmax-pooling-2d.c",
-      "src/src/subgraph/average-pooling-2d.c",
-      "src/src/subgraph/batch-matrix-multiply.c",
-      "src/src/subgraph/binary.c",
-      "src/src/subgraph/concatenate.c",
-      "src/src/subgraph/convolution-2d.c",
-      "src/src/subgraph/copy.c",
-      "src/src/subgraph/deconvolution-2d.c",
-      "src/src/subgraph/deprecated.c",
-      "src/src/subgraph/depth-to-space-2d.c",
-      "src/src/subgraph/depthwise-convolution-2d.c",
-      "src/src/subgraph/even-split.c",
-      "src/src/subgraph/fully-connected-sparse.c",
-      "src/src/subgraph/fully-connected.c",
-      "src/src/subgraph/max-pooling-2d.c",
-      "src/src/subgraph/pack-lh.c",
-      "src/src/subgraph/reshape-helpers.c",
-      "src/src/subgraph/rope.c",
-      "src/src/subgraph/softmax.c",
-      "src/src/subgraph/space-to-depth-2d.c",
-      "src/src/subgraph/static-constant-pad.c",
-      "src/src/subgraph/static-reduce.c",
-      "src/src/subgraph/static-resize-bilinear-2d.c",
-      "src/src/subgraph/static-slice.c",
-      "src/src/subgraph/static-transpose.c",
-      "src/src/subgraph/subgraph-utils.c",
-      "src/src/subgraph/unary.c",
-      "src/src/subgraph/unpooling-2d.c",
-      "src/src/subgraph/validation.c",
+      "src/src/f32-dwconv/gen/f32-dwconv-25p8vc-minmax-rvv.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p8vc-rvv.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p8vc-minmax-rvv.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p8vc-rvv.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p8vc-minmax-rvv.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p8vc-rvv.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p8vc-minmax-rvv.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p8vc-rvv.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43887,84 +48266,127 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("subgraph_arm64_standalone") {
-      cflags = []
+source_set("f32-dwconv_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-scalar-acc2.c"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/subgraph/argmax-pooling-2d.c",
-        "src/src/subgraph/average-pooling-2d.c",
-        "src/src/subgraph/batch-matrix-multiply.c",
-        "src/src/subgraph/binary.c",
-        "src/src/subgraph/concatenate.c",
-        "src/src/subgraph/convolution-2d.c",
-        "src/src/subgraph/copy.c",
-        "src/src/subgraph/deconvolution-2d.c",
-        "src/src/subgraph/deprecated.c",
-        "src/src/subgraph/depth-to-space-2d.c",
-        "src/src/subgraph/depthwise-convolution-2d.c",
-        "src/src/subgraph/even-split.c",
-        "src/src/subgraph/fully-connected-sparse.c",
-        "src/src/subgraph/fully-connected.c",
-        "src/src/subgraph/max-pooling-2d.c",
-        "src/src/subgraph/pack-lh.c",
-        "src/src/subgraph/reshape-helpers.c",
-        "src/src/subgraph/rope.c",
-        "src/src/subgraph/softmax.c",
-        "src/src/subgraph/space-to-depth-2d.c",
-        "src/src/subgraph/static-constant-pad.c",
-        "src/src/subgraph/static-reduce.c",
-        "src/src/subgraph/static-resize-bilinear-2d.c",
-        "src/src/subgraph/static-slice.c",
-        "src/src/subgraph/static-transpose.c",
-        "src/src/subgraph/subgraph-utils.c",
-        "src/src/subgraph/unary.c",
-        "src/src/subgraph/unpooling-2d.c",
-        "src/src/subgraph/validation.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-dwconv/gen/f32-dwconv-25p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-scalar-acc2.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-f16-vcvt_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-scalar-fabsf-u2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("tables_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-f16-vcvt_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/tables/exp2-k-over-2048.c",
-      "src/src/tables/exp2-k-over-64.c",
-      "src/src/tables/exp2minus-k-over-16.c",
-      "src/src/tables/exp2minus-k-over-2048.c",
-      "src/src/tables/exp2minus-k-over-32.c",
-      "src/src/tables/exp2minus-k-over-4.c",
-      "src/src/tables/exp2minus-k-over-64.c",
-      "src/src/tables/exp2minus-k-over-8.c",
-      "src/src/tables/vlog.c",
+      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-scalar-fabsf-u2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -43976,58 +48398,127 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("tables_arm64_standalone") {
-      cflags = []
+source_set("f32-gemm_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/tables/exp2-k-over-2048.c",
-        "src/src/tables/exp2-k-over-64.c",
-        "src/src/tables/exp2minus-k-over-16.c",
-        "src/src/tables/exp2minus-k-over-2048.c",
-        "src/src/tables/exp2minus-k-over-32.c",
-        "src/src/tables/exp2minus-k-over-4.c",
-        "src/src/tables/exp2minus-k-over-64.c",
-        "src/src/tables/exp2minus-k-over-8.c",
-        "src/src/tables/vlog.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-gemm/gen/f32-gemm-1x4v-minmax-rvv.c",
+    "src/src/f32-gemm/gen/f32-gemm-7x4v-minmax-rvv.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-gemm_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-gemm/gen/f32-gemm-1x4v-minmax-rvv.c",
+    "src/src/f32-gemm/gen/f32-gemm-7x4v-minmax-rvv.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-gemm_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-scalar.c"
+  ]
 
-  source_set("u8-ibilinear_arm64") {
-    cflags = []
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-gemm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-ibilinear/gen/u8-ibilinear-neon-c16.c",
-      "src/src/u8-ibilinear/gen/u8-ibilinear-neon-c8.c",
-      "src/src/u8-ibilinear/gen/u8-ibilinear-scalar-c1.c",
+      "src/src/f32-gemm/gen/f32-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44039,50 +48530,109 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-ibilinear_arm64_standalone") {
-      cflags = []
+source_set("f32-ibilinear-chw_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-ibilinear/gen/u8-ibilinear-neon-c16.c",
-        "src/src/u8-ibilinear/gen/u8-ibilinear-neon-c8.c",
-        "src/src/u8-ibilinear/gen/u8-ibilinear-scalar-c1.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-scalar-p4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-ibilinear-chw_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-scalar-p4.c"
+    ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-ibilinear_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-ibilinear/gen/f32-ibilinear-scalar-c2.c"
+  ]
 
-  source_set("u8-lut32norm_arm64") {
-    cflags = []
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-ibilinear_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-lut32norm/u8-lut32norm-scalar.c",
+      "src/src/f32-ibilinear/gen/f32-ibilinear-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44094,49 +48644,127 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-lut32norm_arm64_standalone") {
-      cflags = []
+source_set("f32-igemm_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-lut32norm/u8-lut32norm-scalar.c",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-igemm/gen/f32-igemm-1x4v-minmax-rvv.c",
+    "src/src/f32-igemm/gen/f32-igemm-7x4v-minmax-rvv.c"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-igemm_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-igemm/gen/f32-igemm-1x4v-minmax-rvv.c",
+    "src/src/f32-igemm/gen/f32-igemm-7x4v-minmax-rvv.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("u8-maxpool_arm64") {
-    cflags = []
+source_set("f32-igemm_riscv64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-igemm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-neon-u16.c",
-      "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-scalar-u1.c",
+      "src/src/f32-igemm/gen/f32-igemm-1x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44148,52 +48776,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-maxpool_arm64_standalone") {
-      cflags = []
+source_set("f32-maxpool_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-neon-u16.c",
-        "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-scalar-u1.c",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-maxpool_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-rvv-u2v.c"
+    ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-maxpool_riscv64") {
+  cflags = [
 
-  source_set("u8-rdminmax_arm64") {
-    cflags = []
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-scalar-u1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-maxpool_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-neon-c32.c",
-      "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-scalar-c2.c",
-      "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-neon-c32.c",
-      "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-scalar-c2.c",
+      "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44205,56 +48892,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-rdminmax_arm64_standalone") {
-      cflags = []
+source_set("f32-qc4w-gemm_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x4-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc4w-gemm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x4-minmax-scalar.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-neon-c32.c",
-        "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-scalar-c2.c",
-        "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-neon-c32.c",
-        "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-scalar-c2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qc8w-gemm_riscv64") {
+  cflags = [
+
+  ]
 
-  source_set("u8-rminmax_arm64") {
-    cflags = []
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x4-minmax-scalar.c"
+  ]
 
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc8w-gemm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-rminmax/gen/u8-rmax-neon-u32-acc2.c",
-      "src/src/u8-rminmax/gen/u8-rmax-scalar-u2-acc2.c",
-      "src/src/u8-rminmax/gen/u8-rmin-neon-u32-acc2.c",
-      "src/src/u8-rminmax/gen/u8-rmin-scalar-u2-acc2.c",
-      "src/src/u8-rminmax/gen/u8-rminmax-neon-u32-acc2.c",
-      "src/src/u8-rminmax/gen/u8-rminmax-scalar-u2-acc2.c",
+      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44266,54 +49010,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-rminmax_arm64_standalone") {
-      cflags = []
+source_set("f32-qs8-vcvt_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-rminmax/gen/u8-rmax-neon-u32-acc2.c",
-        "src/src/u8-rminmax/gen/u8-rmax-scalar-u2-acc2.c",
-        "src/src/u8-rminmax/gen/u8-rmin-neon-u32-acc2.c",
-        "src/src/u8-rminmax/gen/u8-rmin-scalar-u2-acc2.c",
-        "src/src/u8-rminmax/gen/u8-rminmax-neon-u32-acc2.c",
-        "src/src/u8-rminmax/gen/u8-rminmax-scalar-u2-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qs8-vcvt_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qs8-vcvt_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-imagic-u4.c",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-lrintf-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("u8-vclamp_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qs8-vcvt_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-vclamp/u8-vclamp-neon-u64.c",
-      "src/src/u8-vclamp/u8-vclamp-scalar-u4.c",
+      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-imagic-u4.c",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-lrintf-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44325,49 +49128,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-vclamp_arm64_standalone") {
-      cflags = []
+source_set("f32-qu8-vcvt_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-vclamp/u8-vclamp-neon-u64.c",
-        "src/src/u8-vclamp/u8-vclamp-scalar-u4.c",
-      ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qu8-vcvt_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-rvv-u2v.c"
+    ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("x16-pack-lh_arch=armv8.2-a+sve+sve2") {
-    cflags = [ "-march=armv8.2-a+sve+sve2" ]
+source_set("f32-qu8-vcvt_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-imagic-u4.c",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-lrintf-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qu8-vcvt_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x16-pack-lh/x16-packlh-neonsme2.c",
+      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-imagic-u4.c",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-lrintf-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44379,49 +49246,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x16-pack-lh_arch=armv8.2-a+sve+sve2_standalone") {
-      cflags = [ "-march=armv8.2-a+sve+sve2" ]
+source_set("f32-raddstoreexpminusmax_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x16-pack-lh/x16-packlh-neonsme2.c",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-rvv-rr2-p6-u4v.c"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-raddstoreexpminusmax_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-rvv-rr2-p6-u4v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-raddstoreexpminusmax_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-scalar-rr2-p5-u4-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("x16-packw_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-raddstoreexpminusmax_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x16-packw/gen/x16-packw-x16-gemm-goi-neon-ld4lane-u8-prfm.c",
-      "src/src/x16-packw/gen/x16-packw-x8-gemm-goi-neon-ld4lane-u8-prfm.c",
+      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-scalar-rr2-p5-u4-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44433,50 +49362,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x16-packw_arm64_standalone") {
-      cflags = []
+source_set("f32-rdminmax_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x16-packw/gen/x16-packw-x16-gemm-goi-neon-ld4lane-u8-prfm.c",
-        "src/src/x16-packw/gen/x16-packw-x8-gemm-goi-neon-ld4lane-u8-prfm.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-scalar-c2.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-scalar-c2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdminmax_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-scalar-c2.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-scalar-c2.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("x16-transposec_arm64") {
-    cflags = []
+source_set("f32-rdsum_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-rvv-u4v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdsum_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x16-transposec/gen/x16-transposec-2x4-scalar-int.c",
-      "src/src/x16-transposec/gen/x16-transposec-8x8-reuse-dec-zip-neon.c",
+      "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-rvv-u4v.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44488,50 +49480,115 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x16-transposec_arm64_standalone") {
-      cflags = []
+source_set("f32-rdsum_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x16-transposec/gen/x16-transposec-2x4-scalar-int.c",
-        "src/src/x16-transposec/gen/x16-transposec-8x8-reuse-dec-zip-neon.c",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdsum_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-scalar.c"
+    ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("x16-x32-packw_arm64") {
-    cflags = []
+source_set("f32-rminmax_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rminmax/gen/f32-rmax-rvv-u8v.c",
+    "src/src/f32-rminmax/gen/f32-rmin-rvv-u8v.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-rvv-u8v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rminmax_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-gio-scalar.c",
-      "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-goi-scalar.c",
+      "src/src/f32-rminmax/gen/f32-rmax-rvv-u8v.c",
+    "src/src/f32-rminmax/gen/f32-rmin-rvv-u8v.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-rvv-u8v.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44543,51 +49600,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x16-x32-packw_arm64_standalone") {
-      cflags = []
+source_set("f32-rminmax_riscv64") {
+  cflags = [
+
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-gio-scalar.c",
-        "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-goi-scalar.c",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rminmax/gen/f32-rmax-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-scalar-u4-acc4.c"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rminmax_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-rminmax/gen/f32-rmax-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-scalar-u4-acc4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-rsum_riscv64") {
+  cflags = [
 
-  source_set("x24-transposec_arm64") {
-    cflags = []
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rsum/gen/f32-rsum-scalar-u4-acc4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rsum_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x24-transposec/gen/x24-transposec-1x2-scalar.c",
-      "src/src/x24-transposec/x24-transposec-2x2-neon-tbl64.c",
-      "src/src/x24-transposec/x24-transposec-4x4-aarch64-neon-tbl128.c",
+      "src/src/f32-rsum/gen/f32-rsum-scalar-u4-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44599,50 +49718,119 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x24-transposec_arm64_standalone") {
-      cflags = []
+source_set("f32-spmm_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-spmm/gen/f32-spmm-4vx4-minmax-rvv.c",
+    "src/src/f32-spmm/gen/f32-spmm-8vx1-minmax-rvv.c",
+    "src/src/f32-spmm/gen/f32-spmm-8vx2-minmax-rvv.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x24-transposec/gen/x24-transposec-1x2-scalar.c",
-        "src/src/x24-transposec/x24-transposec-2x2-neon-tbl64.c",
-        "src/src/x24-transposec/x24-transposec-4x4-aarch64-neon-tbl128.c",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-spmm_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-spmm/gen/f32-spmm-4vx4-minmax-rvv.c",
+    "src/src/f32-spmm/gen/f32-spmm-8vx1-minmax-rvv.c",
+    "src/src/f32-spmm/gen/f32-spmm-8vx2-minmax-rvv.c"
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-spmm_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-spmm/gen/f32-spmm-8x1-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x2-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x4-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("x32-pack-lh_arch=armv8.2-a+sve+sve2") {
-    cflags = [ "-march=armv8.2-a+sve+sve2" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-spmm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x32-pack-lh/x32-packlh-neonsme2.c",
+      "src/src/f32-spmm/gen/f32-spmm-8x1-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x2-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44654,58 +49842,141 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-pack-lh_arch=armv8.2-a+sve+sve2_standalone") {
-      cflags = [ "-march=armv8.2-a+sve+sve2" ]
+source_set("f32-vapproxgelu_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-pack-lh/x32-packlh-neonsme2.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-scalar-rational-12-10-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vapproxgelu_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-scalar-rational-12-10-div.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vbinary_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vbinary/gen/f32-vadd-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vmax-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vmin-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vminc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vmul-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vsub-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-rvv-u8v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("x32-packw_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vbinary_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x32-packw/gen/x32-packw-gio-neon-u2.c",
-      "src/src/x32-packw/gen/x32-packw-x16-gemm-goi-neon-ld4lane-u4-prfm.c",
-      "src/src/x32-packw/gen/x32-packw-x2-gemm-gio-scalar.c",
-      "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-neon-ld2lane-u2-prfm.c",
-      "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-scalar-float-u4.c",
-      "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-scalar-int-u2.c",
-      "src/src/x32-packw/gen/x32-packw-x4-gemm-gio-scalar.c",
-      "src/src/x32-packw/gen/x32-packw-x4-gemm-goi-scalar-float-u4.c",
-      "src/src/x32-packw/gen/x32-packw-x64-gemm-goi-scalar-int-u2.c",
-      "src/src/x32-packw/gen/x32-packw-x8-gemm-goi-neon-ld4lane-u4-prfm.c",
-      "src/src/x32-packw/gen/x32-packw-x8s4-gemm-goi-neon-ld4lane-u4-prfm.c",
+      "src/src/f32-vbinary/gen/f32-vadd-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vmax-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vmin-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vminc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vmul-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vsub-rvv-u8v.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-rvv-u8v.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44717,60 +49988,145 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-packw_arm64_standalone") {
-      cflags = []
+source_set("f32-vbinary_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vbinary/gen/f32-vadd-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vmax-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmin-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vminc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmul-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vprelu-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsub-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-scalar-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-packw/gen/x32-packw-gio-neon-u2.c",
-        "src/src/x32-packw/gen/x32-packw-x16-gemm-goi-neon-ld4lane-u4-prfm.c",
-        "src/src/x32-packw/gen/x32-packw-x2-gemm-gio-scalar.c",
-        "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-neon-ld2lane-u2-prfm.c",
-        "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-scalar-float-u4.c",
-        "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-scalar-int-u2.c",
-        "src/src/x32-packw/gen/x32-packw-x4-gemm-gio-scalar.c",
-        "src/src/x32-packw/gen/x32-packw-x4-gemm-goi-scalar-float-u4.c",
-        "src/src/x32-packw/gen/x32-packw-x64-gemm-goi-scalar-int-u2.c",
-        "src/src/x32-packw/gen/x32-packw-x8-gemm-goi-neon-ld4lane-u4-prfm.c",
-        "src/src/x32-packw/gen/x32-packw-x8s4-gemm-goi-neon-ld4lane-u4-prfm.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vbinary_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-vbinary/gen/f32-vadd-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vmax-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmin-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vminc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmul-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vprelu-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsub-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-scalar-u8.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("x32-transposec_arm64") {
-    cflags = []
+source_set("f32-vclamp_riscv64") {
+  cflags = [
+
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vclamp/gen/f32-vclamp-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vclamp_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x32-transposec/gen/x32-transposec-2x4-scalar-int.c",
-      "src/src/x32-transposec/gen/x32-transposec-4x4-reuse-dec-zip-neon.c",
-      "src/src/x32-transposec/x32-transposec-4x4-aarch64-neon-tbl128.c",
+      "src/src/f32-vclamp/gen/f32-vclamp-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44782,51 +50138,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-transposec_arm64_standalone") {
-      cflags = []
+source_set("f32-vcmul_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcmul/gen/f32-vcmul-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcmul_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-vcmul/gen/f32-vcmul-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-transposec/gen/x32-transposec-2x4-scalar-int.c",
-        "src/src/x32-transposec/gen/x32-transposec-4x4-reuse-dec-zip-neon.c",
-        "src/src/x32-transposec/x32-transposec-4x4-aarch64-neon-tbl128.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vcmul_riscv64") {
+  cflags = [
 
-  source_set("x32-unpool_arm64") {
-    cflags = []
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcmul/gen/f32-vcmul-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcmul_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x32-unpool/x32-unpool-neon.c",
-      "src/src/x32-unpool/x32-unpool-scalar.c",
+      "src/src/f32-vcmul/gen/f32-vcmul-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44838,51 +50254,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-unpool_arm64_standalone") {
-      cflags = []
+source_set("f32-vcopysign_riscv64") {
+  cflags = [
+
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-unpool/x32-unpool-neon.c",
-        "src/src/x32-unpool/x32-unpool-scalar.c",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcopysign/gen/f32-vcopysign-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-scalar.c"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcopysign_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-vcopysign/gen/f32-vcopysign-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-scalar.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vcos_riscv64") {
+  cflags = [
+
+  ]
 
-  source_set("x64-transposec_arm64") {
-    cflags = []
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcos/gen/f32-vcos-scalar-rational-5-4-div.c"
+  ]
 
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcos_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x64-transposec/gen/x64-transposec-2x2-multi-dec-zip-neon.c",
-      "src/src/x64-transposec/gen/x64-transposec-2x2-reuse-dec-zip-neon.c",
-      "src/src/x64-transposec/gen/x64-transposec-4x2-scalar-int.c",
+      "src/src/f32-vcos/gen/f32-vcos-scalar-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44894,51 +50372,109 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x64-transposec_arm64_standalone") {
-      cflags = []
+source_set("f32-velu_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-velu/gen/f32-velu-scalar-rr2-lut16-p3-u4.c"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x64-transposec/gen/x64-transposec-2x2-multi-dec-zip-neon.c",
-        "src/src/x64-transposec/gen/x64-transposec-2x2-reuse-dec-zip-neon.c",
-        "src/src/x64-transposec/gen/x64-transposec-4x2-scalar-int.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-velu_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-velu/gen/f32-velu-scalar-rr2-lut16-p3-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vexp_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vexp/gen/f32-vexp-scalar-rational-3-2-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("x8-lut_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vexp_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-lut/gen/x8-lut-aarch64-neon-tbx128x4-u64.c",
-      "src/src/x8-lut/gen/x8-lut-scalar-u4.c",
+      "src/src/f32-vexp/gen/f32-vexp-scalar-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -44950,50 +50486,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-lut_arm64_standalone") {
-      cflags = []
+source_set("f32-vgelu_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-lut/gen/x8-lut-aarch64-neon-tbx128x4-u64.c",
-        "src/src/x8-lut/gen/x8-lut-scalar-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vgelu/gen/f32-vgelu-scalar-rational-12-10-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vgelu_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-vgelu/gen/f32-vgelu-scalar-rational-12-10-div.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vhswish_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vhswish/gen/f32-vhswish-rvv-u4v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("x8-pack-lh_arch=armv8.2-a+sve+sve2") {
-    cflags = [ "-march=armv8.2-a+sve+sve2" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vhswish_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-pack-lh/x8-packlh-igemm-neonsme2.c",
-      "src/src/x8-pack-lh/x8-packlh-neonsme2.c",
+      "src/src/f32-vhswish/gen/f32-vhswish-rvv-u4v.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45005,50 +50602,109 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-pack-lh_arch=armv8.2-a+sve+sve2_standalone") {
-      cflags = [ "-march=armv8.2-a+sve+sve2" ]
+source_set("f32-vhswish_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-pack-lh/x8-packlh-igemm-neonsme2.c",
-        "src/src/x8-pack-lh/x8-packlh-neonsme2.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vhswish/gen/f32-vhswish-scalar.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vhswish_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-vhswish/gen/f32-vhswish-scalar.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vlog_riscv64") {
+  cflags = [
+
+  ]
 
-  source_set("x8-packq_arm64") {
-    cflags = []
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlog/gen/f32-vlog-scalar-rational-3-3-div.c"
+  ]
 
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlog_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-packq/x8-packq-aarch64-neon-f32qp8-u2.c",
-      "src/src/x8-packq/x8-packq-scalar-f32qp8-u1.c",
+      "src/src/f32-vlog/gen/f32-vlog-scalar-rational-3-3-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45060,52 +50716,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-packq_arm64_standalone") {
-      cflags = []
+source_set("f32-vlrelu_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-packq/x8-packq-aarch64-neon-f32qp8-u2.c",
-        "src/src/x8-packq/x8-packq-scalar-f32qp8-u1.c",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlrelu/gen/f32-vlrelu-rvv-u4v.c"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlrelu_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-vlrelu/gen/f32-vlrelu-rvv-u4v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("x8-packw_arm64") {
-    cflags = []
+source_set("f32-vlrelu_riscv64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlrelu/gen/f32-vlrelu-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlrelu_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-packw/gen/x8-packw-x16-gemm-goi-scalar-u2.c",
-      "src/src/x8-packw/gen/x8-packw-x32-gemm-goi-scalar-u2.c",
-      "src/src/x8-packw/gen/x8-packw-x4-gemm-goi-scalar-u2.c",
-      "src/src/x8-packw/gen/x8-packw-x8-gemm-goi-scalar-u2.c",
+      "src/src/f32-vlrelu/gen/f32-vlrelu-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45117,52 +50832,117 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-packw_arm64_standalone") {
-      cflags = []
+source_set("f32-vmulcaddc_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c1-minmax-scalar-2x.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vmulcaddc_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c1-minmax-scalar-2x.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-packw/gen/x8-packw-x16-gemm-goi-scalar-u2.c",
-        "src/src/x8-packw/gen/x8-packw-x32-gemm-goi-scalar-u2.c",
-        "src/src/x8-packw/gen/x8-packw-x4-gemm-goi-scalar-u2.c",
-        "src/src/x8-packw/gen/x8-packw-x8-gemm-goi-scalar-u2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("x8-transposec_arm64") {
-    cflags = []
+source_set("f32-vrnd_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrnd/gen/f32-vrndd-rvv-u4v.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-rvv-u4v.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-rvv-u4v.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-rvv-u4v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrnd_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-transposec/gen/x8-transposec-16x16-reuse-dec-zip-neon.c",
-      "src/src/x8-transposec/gen/x8-transposec-2x4-scalar-int.c",
+      "src/src/f32-vrnd/gen/f32-vrndd-rvv-u4v.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-rvv-u4v.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-rvv-u4v.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-rvv-u4v.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45174,49 +50954,117 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-transposec_arm64_standalone") {
-      cflags = []
+source_set("f32-vrnd_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrnd/gen/f32-vrndd-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-scalar-libm-u1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-transposec/gen/x8-transposec-16x16-reuse-dec-zip-neon.c",
-        "src/src/x8-transposec/gen/x8-transposec-2x4-scalar-int.c",
-      ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrnd_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-vrnd/gen/f32-vrndd-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-scalar-libm-u1.c"
+    ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vrsqrt_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
-  source_set("xx-copy_arm64") {
-    cflags = []
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-rvv-rsqrt-u4v.c"
+  ]
 
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrsqrt_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/xx-copy/xx-copy-scalar-memcpy.c",
+      "src/src/f32-vrsqrt/gen/f32-vrsqrt-rvv-rsqrt-u4v.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45228,49 +51076,111 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("xx-copy_arm64_standalone") {
-      cflags = []
+source_set("f32-vrsqrt_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-rsqrt-u1.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-sqrt.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/xx-copy/xx-copy-scalar-memcpy.c",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrsqrt_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-rsqrt-u1.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-sqrt.c"
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("xx-fill_arm64") {
-    cflags = []
+source_set("f32-vsigmoid_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsigmoid/gen/f32-vsigmoid-scalar-rr2-lut64-p2-div-u2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsigmoid_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/xx-fill/xx-fill-neon-u64.c",
-      "src/src/xx-fill/xx-fill-scalar-u16.c",
+      "src/src/f32-vsigmoid/gen/f32-vsigmoid-scalar-rr2-lut64-p2-div-u2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45282,50 +51192,109 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("xx-fill_arm64_standalone") {
-      cflags = []
+source_set("f32-vsin_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/xx-fill/xx-fill-neon-u64.c",
-        "src/src/xx-fill/xx-fill-scalar-u16.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsin/gen/f32-vsin-scalar-rational-5-4-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsin_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-vsin/gen/f32-vsin-scalar-rational-5-4-div.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vsqrt_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsqrt/gen/f32-vsqrt-scalar-sqrt.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("xx-pad_arm64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsqrt_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/xx-pad/xx-pad-p16-neon-u16.c",
-      "src/src/xx-pad/xx-pad-p4-scalar-u16.c",
+      "src/src/f32-vsqrt/gen/f32-vsqrt-scalar-sqrt.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45337,49 +51306,113 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("xx-pad_arm64_standalone") {
-      cflags = []
+source_set("f32-vtanh_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/xx-pad/xx-pad-p16-neon-u16.c",
-        "src/src/xx-pad/xx-pad-p4-scalar-u16.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vtanh/gen/f32-vtanh-scalar-rational-9-8-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      public_configs = [ ":xnnpack_public_config" ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vtanh_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/f32-vtanh/gen/f32-vtanh-scalar-rational-9-8-div.c"
+    ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vunary_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vunary/gen/f32-vabs-scalar.c",
+    "src/src/f32-vunary/gen/f32-vneg-scalar.c",
+    "src/src/f32-vunary/gen/f32-vsqr-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("xx-transposev_arm64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vunary_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/xx-transposev/xx-transposev-1x1-scalar-memcpy.c",
+      "src/src/f32-vunary/gen/f32-vabs-scalar.c",
+    "src/src/f32-vunary/gen/f32-vneg-scalar.c",
+    "src/src/f32-vunary/gen/f32-vsqr-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45391,73 +51424,151 @@ if (current_cpu == "arm64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("xx-transposev_arm64_standalone") {
-      cflags = []
+source_set("operators_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/operators/argmax-pooling-nhwc.c",
+    "src/src/operators/average-pooling-nhwc.c",
+    "src/src/operators/batch-matrix-multiply-nc.c",
+    "src/src/operators/binary-elementwise-nd.c",
+    "src/src/operators/constant-pad-nd.c",
+    "src/src/operators/convolution-nchw.c",
+    "src/src/operators/convolution-nhwc.c",
+    "src/src/operators/deconvolution-nhwc.c",
+    "src/src/operators/dynamic-fully-connected-nc.c",
+    "src/src/operators/fully-connected-nc.c",
+    "src/src/operators/max-pooling-nhwc.c",
+    "src/src/operators/pack-lh.c",
+    "src/src/operators/reduce-nd.c",
+    "src/src/operators/resize-bilinear-nchw.c",
+    "src/src/operators/resize-bilinear-nhwc.c",
+    "src/src/operators/rope-nthc.c",
+    "src/src/operators/slice-nd.c",
+    "src/src/operators/softmax-nc.c",
+    "src/src/operators/transpose-nd.c",
+    "src/src/operators/unary-elementwise-nc.c",
+    "src/src/operators/unpooling-nhwc.c"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/xx-transposev/xx-transposev-1x1-scalar-memcpy.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("operators_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/operators/argmax-pooling-nhwc.c",
+    "src/src/operators/average-pooling-nhwc.c",
+    "src/src/operators/batch-matrix-multiply-nc.c",
+    "src/src/operators/binary-elementwise-nd.c",
+    "src/src/operators/constant-pad-nd.c",
+    "src/src/operators/convolution-nchw.c",
+    "src/src/operators/convolution-nhwc.c",
+    "src/src/operators/deconvolution-nhwc.c",
+    "src/src/operators/dynamic-fully-connected-nc.c",
+    "src/src/operators/fully-connected-nc.c",
+    "src/src/operators/max-pooling-nhwc.c",
+    "src/src/operators/pack-lh.c",
+    "src/src/operators/reduce-nd.c",
+    "src/src/operators/resize-bilinear-nchw.c",
+    "src/src/operators/resize-bilinear-nhwc.c",
+    "src/src/operators/rope-nthc.c",
+    "src/src/operators/slice-nd.c",
+    "src/src/operators/softmax-nc.c",
+    "src/src/operators/transpose-nd.c",
+    "src/src/operators/unary-elementwise-nc.c",
+    "src/src/operators/unpooling-nhwc.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
 }
 
-if (current_cpu == "riscv64") {
-  source_set("configs_riscv64") {
-    cflags = []
+source_set("qd8-f32-qb4w-gemm_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qb4w-gemm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/configs/argmaxpool-config.c",
-      "src/src/configs/avgpool-config.c",
-      "src/src/configs/binary-elementwise-config.c",
-      "src/src/configs/cmul-config.c",
-      "src/src/configs/conv-hwc2chw-config.c",
-      "src/src/configs/dwconv-config.c",
-      "src/src/configs/dwconv2d-chw-config.c",
-      "src/src/configs/gemm-config.c",
-      "src/src/configs/hardware-config.c",
-      "src/src/configs/ibilinear-chw-config.c",
-      "src/src/configs/ibilinear-config.c",
-      "src/src/configs/lut32norm-config.c",
-      "src/src/configs/maxpool-config.c",
-      "src/src/configs/pack-lh-config.c",
-      "src/src/configs/raddstoreexpminusmax-config.c",
-      "src/src/configs/reduce-config.c",
-      "src/src/configs/spmm-config.c",
-      "src/src/configs/transpose-config.c",
-      "src/src/configs/unary-elementwise-config.c",
-      "src/src/configs/unpool-config.c",
-      "src/src/configs/vmulcaddc-config.c",
-      "src/src/configs/x8-lut-config.c",
-      "src/src/configs/xx-fill-config.c",
-      "src/src/configs/xx-pad-config.c",
+      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45469,75 +51580,115 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("configs_riscv64_standalone") {
-      cflags = []
+source_set("qd8-f32-qc4w-gemm_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4v-minmax-rvv.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4v-minmax-rvv.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/configs/argmaxpool-config.c",
-        "src/src/configs/avgpool-config.c",
-        "src/src/configs/binary-elementwise-config.c",
-        "src/src/configs/cmul-config.c",
-        "src/src/configs/conv-hwc2chw-config.c",
-        "src/src/configs/dwconv-config.c",
-        "src/src/configs/dwconv2d-chw-config.c",
-        "src/src/configs/gemm-config.c",
-        "src/src/configs/hardware-config.c",
-        "src/src/configs/ibilinear-chw-config.c",
-        "src/src/configs/ibilinear-config.c",
-        "src/src/configs/lut32norm-config.c",
-        "src/src/configs/maxpool-config.c",
-        "src/src/configs/pack-lh-config.c",
-        "src/src/configs/raddstoreexpminusmax-config.c",
-        "src/src/configs/reduce-config.c",
-        "src/src/configs/spmm-config.c",
-        "src/src/configs/transpose-config.c",
-        "src/src/configs/unary-elementwise-config.c",
-        "src/src/configs/unpool-config.c",
-        "src/src/configs/vmulcaddc-config.c",
-        "src/src/configs/x8-lut-config.c",
-        "src/src/configs/xx-fill-config.c",
-        "src/src/configs/xx-pad-config.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4v-minmax-rvv.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4v-minmax-rvv.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc4w-gemm_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("enums_riscv64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/enums/allocation-type.c",
-      "src/src/enums/datatype-strings.c",
-      "src/src/enums/microkernel-type.c",
-      "src/src/enums/node-type.c",
-      "src/src/enums/operator-type.c",
+      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45549,52 +51700,117 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("enums_riscv64_standalone") {
-      cflags = []
+source_set("qd8-f32-qc8w-gemm_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/enums/allocation-type.c",
-        "src/src/enums/datatype-strings.c",
-        "src/src/enums/microkernel-type.c",
-        "src/src/enums/node-type.c",
-        "src/src/enums/operator-type.c",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4v-minmax-rvv.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4v-minmax-rvv.c"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4v-minmax-rvv.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4v-minmax-rvv.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("f16-f32-vcvt_riscv64") {
-    cflags = []
+source_set("qd8-f32-qc8w-gemm_riscv64") {
+  cflags = [
+
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x2-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-scalar-u4.c",
+      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x2-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45606,48 +51822,117 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-f32-vcvt_riscv64_standalone") {
-      cflags = []
+source_set("qd8-f32-qc8w-igemm_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4v-minmax-rvv.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4v-minmax-rvv.c"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-scalar-u4.c",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      public_configs = [ ":xnnpack_public_config" ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4v-minmax-rvv.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4v-minmax-rvv.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qd8-f32-qc8w-igemm_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x2-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4-minmax-scalar.c"
+  ]
 
-  source_set("f16-qs8-vcvt_riscv64") {
-    cflags = []
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-scalar-imagic-u4.c",
+      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x2-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45659,48 +51944,119 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-qs8-vcvt_riscv64_standalone") {
-      cflags = []
+source_set("qs8-dwconv_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-scalar-imagic-u4.c",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p8vc-minmax-fp32-rvv.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p8vc-minmax-fp32-rvv.c"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      public_configs = [ ":xnnpack_public_config" ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-dwconv_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-dwconv/gen/qs8-dwconv-25p8vc-minmax-fp32-rvv.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p8vc-minmax-fp32-rvv.c"
+    ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-dwconv_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+  ]
 
-  source_set("f16-qu8-vcvt_riscv64") {
-    cflags = []
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-dwconv_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-qu8-vcvt/gen/f16-qu8-vcvt-scalar-imagic-u4.c",
+      "src/src/qs8-dwconv/gen/qs8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45712,49 +52068,111 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-qu8-vcvt_riscv64_standalone") {
-      cflags = []
+source_set("qs8-f32-vcvt_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-qu8-vcvt/gen/f16-qu8-vcvt-scalar-imagic-u4.c",
-      ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-f32-vcvt_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-rvv-u2v.c"
+    ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-f32-vcvt_riscv64") {
+  cflags = [
+
+  ]
 
-  source_set("f16-rdminmax_riscv64") {
-    cflags = []
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-f32-vcvt_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-scalar-c2.c",
-      "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-scalar-c2.c",
+      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45766,51 +52184,115 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-rdminmax_riscv64_standalone") {
-      cflags = []
+source_set("qs8-packw_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-scalar-c2.c",
-        "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-scalar-c2.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-gio-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-goi-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-gio-scalar.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-packw_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-gio-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-goi-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-gio-scalar.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+    public_configs = [ ":xnnpack_public_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc4w-gemm_riscv64") {
+  cflags = [
 
-  source_set("f16-rminmax_riscv64") {
-    cflags = []
+  ]
 
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc4w-gemm/qs8-qc4w-gemm-1x2-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc4w-gemm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-rminmax/gen/f16-rmax-scalar-u2-acc2.c",
-      "src/src/f16-rminmax/gen/f16-rmin-scalar-u2-acc2.c",
-      "src/src/f16-rminmax/gen/f16-rminmax-scalar-u2-acc2.c",
+      "src/src/qs8-qc4w-gemm/qs8-qc4w-gemm-1x2-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45822,50 +52304,125 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-rminmax_riscv64_standalone") {
-      cflags = []
+source_set("qs8-qc8w-dwconv_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8vc-minmax-fp32-rvv.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p8vc-minmax-fp32-rvv.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p8vc-minmax-fp32-rvv.c"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-rminmax/gen/f16-rmax-scalar-u2-acc2.c",
-        "src/src/f16-rminmax/gen/f16-rmin-scalar-u2-acc2.c",
-        "src/src/f16-rminmax/gen/f16-rminmax-scalar-u2-acc2.c",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      public_configs = [ ":xnnpack_public_config" ]
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-dwconv_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8vc-minmax-fp32-rvv.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p8vc-minmax-fp32-rvv.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p8vc-minmax-fp32-rvv.c"
+    ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("f16-vapproxgelu_riscv64") {
-    cflags = []
+source_set("qs8-qc8w-dwconv_riscv64") {
+  cflags = [
 
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-dwconv_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-scalar-rational-6-4-div.c",
+      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45877,48 +52434,115 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vapproxgelu_riscv64_standalone") {
-      cflags = []
+source_set("qs8-qc8w-gemm_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-scalar-rational-6-4-div.c",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4v-minmax-fp32-rvv.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x4v-minmax-fp32-rvv.c"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4v-minmax-fp32-rvv.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x4v-minmax-fp32-rvv.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qc8w-gemm_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f16-vcos_riscv64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vcos/gen/f16-vcos-scalar-rational-3-2-div.c",
+      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45930,48 +52554,2390 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vcos_riscv64_standalone") {
-      cflags = []
+source_set("qs8-qc8w-igemm_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vcos/gen/f16-vcos-scalar-rational-3-2-div.c",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4v-minmax-fp32-rvv.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x4v-minmax-fp32-rvv.c"
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4v-minmax-fp32-rvv.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x4v-minmax-fp32-rvv.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-qc8w-igemm_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4-minmax-fp32-scalar-lrintf.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-qu8-packw_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qu8-packw_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-scalar.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-rdsum_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rdsum_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+source_set("qs8-rdsum_riscv64") {
+  cflags = [
 
-      public_configs = [ ":xnnpack_public_config" ]
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rdsum/gen/qs8-rdsum-minmax-fp32-scalar-u1-acc1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rdsum_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-rdsum/gen/qs8-rdsum-minmax-fp32-scalar-u1-acc1.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("f16-vexp_riscv64") {
-    cflags = []
+source_set("qs8-rsum_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rsum/gen/qs8-rsum-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rsum_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-rsum/gen/qs8-rsum-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-rsum_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rsum/gen/qs8-rsum-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rsum_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-rsum/gen/qs8-rsum-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-vadd_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vadd_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vadd/gen/qs8-vadd-minmax-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-vadd_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u1.c",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vadd_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u1.c",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-vaddc_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vaddc_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-vaddc_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u1.c",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vaddc_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u1.c",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-vcvt_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vcvt/gen/qs8-vcvt-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vcvt_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vcvt/gen/qs8-vcvt-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-vlrelu_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vlrelu/gen/qs8-vlrelu-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vlrelu_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vlrelu/gen/qs8-vlrelu-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-vlrelu_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vlrelu/gen/qs8-vlrelu-scalar-andxor-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vlrelu_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vlrelu/gen/qs8-vlrelu-scalar-andxor-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-vmul_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmul/gen/qs8-vmul-minmax-f32-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmul_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vmul/gen/qs8-vmul-minmax-f32-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-vmul_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmul_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-vmulc_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-f32-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmulc_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-f32-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-vmulc_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmulc_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-vprelu_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vprelu/gen/qs8-vprelu-scalar-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vprelu_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vprelu/gen/qs8-vprelu-scalar-u8.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-vpreluc_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vpreluc/gen/qs8-vpreluc-scalar-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vpreluc_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vpreluc/gen/qs8-vpreluc-scalar-u8.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qs8-vrpreluc_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-scalar-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vrpreluc_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-scalar-u8.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-dwconv_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p8vc-minmax-fp32-rvv.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p8vc-minmax-fp32-rvv.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-dwconv_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-dwconv/gen/qu8-dwconv-25p8vc-minmax-fp32-rvv.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p8vc-minmax-fp32-rvv.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-dwconv_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-dwconv_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-dwconv/gen/qu8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-f32-vcvt_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-f32-vcvt_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-f32-vcvt_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-f32-vcvt_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-gemm_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x4-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-gemm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-gemm/gen/qu8-gemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x4-minmax-fp32-scalar-lrintf.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-igemm_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x4-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-igemm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-igemm/gen/qu8-igemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x4-minmax-fp32-scalar-lrintf.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-rdsum_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-rdsum_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-rdsum_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-rdsum/gen/qu8-rdsum-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-rdsum_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-rdsum/gen/qu8-rdsum-scalar.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-rsum_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-rsum/gen/qu8-rsum-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-rsum_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-rsum/gen/qu8-rsum-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-rsum_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-rsum/gen/qu8-rsum-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-rsum_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-rsum/gen/qu8-rsum-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-vadd_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vadd_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-vadd/gen/qu8-vadd-minmax-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-vadd_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u1.c",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vadd_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u1.c",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-vaddc_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vaddc_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-vaddc_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u1.c",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vaddc_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u1.c",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-vcvt_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vcvt/gen/qu8-vcvt-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vcvt_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-vcvt/gen/qu8-vcvt-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-vlrelu_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vlrelu/gen/qu8-vlrelu-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vlrelu_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-vlrelu/gen/qu8-vlrelu-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-vlrelu_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vlrelu/gen/qu8-vlrelu-scalar-andxor-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vlrelu_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-vlrelu/gen/qu8-vlrelu-scalar-andxor-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-vmul_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmul/gen/qu8-vmul-minmax-f32-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmul_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-vmul/gen/qu8-vmul-minmax-f32-rvv-u2v.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-vmul_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmul_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-scalar-u4.c"
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+    configs += [ ":xnnpack_private_config" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+source_set("qu8-vmulc_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-f32-rvv-u2v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmulc_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vexp/gen/f16-vexp-scalar-poly-3.c",
+      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-f32-rvv-u2v.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -45983,48 +54949,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vexp_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vexp/gen/f16-vexp-scalar-poly-3.c",
-      ]
+source_set("qu8-vmulc_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vgelu_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmulc_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vgelu/gen/f16-vgelu-scalar-rational-6-4-div.c",
+      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46036,48 +55006,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vgelu_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vgelu/gen/f16-vgelu-scalar-rational-6-4-div.c",
-      ]
+source_set("qu8-vprelu_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vprelu/gen/qu8-vprelu-scalar-u8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f16-vsin_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vprelu_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f16-vsin/gen/f16-vsin-scalar-rational-3-2-div.c",
+      "src/src/qu8-vprelu/gen/qu8-vprelu-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46089,51 +55063,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f16-vsin_riscv64_standalone") {
-      cflags = []
+source_set("qu8-vpreluc_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f16-vsin/gen/f16-vsin-scalar-rational-3-2-div.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vpreluc/gen/qu8-vpreluc-scalar-u8.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-argmaxpool_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vpreluc_riscv64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-rvv-u1v.c",
+      "src/src/qu8-vpreluc/gen/qu8-vpreluc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46145,51 +55120,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-argmaxpool_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-rvv-u1v.c",
-      ]
+source_set("qu8-vrpreluc_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-scalar-u8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-argmaxpool_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vrpreluc_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-scalar-c1.c",
+      "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46201,48 +55177,56 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-argmaxpool_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-scalar-c1.c",
-      ]
+source_set("reference_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/reference/binary-elementwise.cc",
+    "src/src/reference/packing.cc",
+    "src/src/reference/unary-elementwise.cc"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-avgpool_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("reference_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-scalar-u1.c",
+      "src/src/reference/binary-elementwise.cc",
+    "src/src/reference/packing.cc",
+    "src/src/reference/unary-elementwise.cc"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46254,51 +55238,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-avgpool_riscv64_standalone") {
-      cflags = []
+source_set("s8-ibilinear_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-scalar-u1.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-ibilinear/gen/s8-ibilinear-scalar-c1.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-conv-hwc2chw_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-ibilinear_riscv64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x2v-rvv-2x2.c",
+      "src/src/s8-ibilinear/gen/s8-ibilinear-scalar-c1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46310,51 +55295,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-conv-hwc2chw_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x2v-rvv-2x2.c",
-      ]
+source_set("s8-maxpool_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-scalar-u1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-conv-hwc2chw_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-maxpool_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-scalar-1x1.c",
+      "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46366,52 +55352,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-conv-hwc2chw_riscv64_standalone") {
-      cflags = []
+source_set("s8-rdminmax_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-scalar-1x1.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-scalar-c2.c",
+    "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-scalar-c2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-dwconv2d-chw_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-rdminmax_riscv64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-rvv-7x1v.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-rvv-2x2v.c",
+      "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-scalar-c2.c",
+    "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46423,59 +55411,56 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv2d-chw_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-rvv-7x1v.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-rvv-2x2v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("s8-rminmax_riscv64") {
+  cflags = [
 
-  source_set("f32-dwconv2d-chw_riscv64") {
-    cflags = []
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-rminmax/gen/s8-rmax-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rmin-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rminmax-scalar-u2-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-rminmax_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-2x1-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-4x1.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-1x1-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-2x1-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-1x1-acc5.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-2x1-acc2.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-1x1-acc5.c",
-      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-2x1-acc2.c",
+      "src/src/s8-rminmax/gen/s8-rmax-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rmin-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rminmax-scalar-u2-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46487,65 +55472,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv2d-chw_riscv64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-2x1-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-4x1.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-1x1-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-2x1-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-1x1-acc5.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-2x1-acc2.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-1x1-acc5.c",
-        "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-2x1-acc2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("s8-vclamp_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-vclamp/gen/s8-vclamp-rvv-u4v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-dwconv_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-vclamp_arch=rv64gcv-abi=lp64d_standalone") {
     cflags = [
       "-mabi=lp64d",
-      "-march=rv64gcv",
+    "-march=rv64gcv"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-dwconv/gen/f32-dwconv-25p8vc-minmax-rvv.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-25p8vc-rvv.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-3p8vc-minmax-rvv.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-3p8vc-rvv.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-4p8vc-minmax-rvv.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-4p8vc-rvv.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-9p8vc-minmax-rvv.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-9p8vc-rvv.c",
+      "src/src/s8-vclamp/gen/s8-vclamp-rvv-u4v.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46557,67 +55531,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p8vc-minmax-rvv.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p8vc-rvv.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-3p8vc-minmax-rvv.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-3p8vc-rvv.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-4p8vc-minmax-rvv.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-4p8vc-rvv.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-9p8vc-minmax-rvv.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-9p8vc-rvv.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("s8-vclamp_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-vclamp/s8-vclamp-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-dwconv_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-vclamp_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-dwconv/gen/f32-dwconv-25p1c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-25p1c-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-25p2c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-25p2c-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-3p1c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-3p1c-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-4p1c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-4p1c-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-9p1c-minmax-scalar-acc2.c",
-      "src/src/f32-dwconv/gen/f32-dwconv-9p1c-scalar-acc2.c",
+      "src/src/s8-vclamp/s8-vclamp-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46629,57 +55588,108 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-dwconv_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p1c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p1c-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p2c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-25p2c-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-3p1c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-3p1c-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-4p1c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-4p1c-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-9p1c-minmax-scalar-acc2.c",
-        "src/src/f32-dwconv/gen/f32-dwconv-9p1c-scalar-acc2.c",
-      ]
+source_set("subgraph_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/subgraph/argmax-pooling-2d.c",
+    "src/src/subgraph/average-pooling-2d.c",
+    "src/src/subgraph/batch-matrix-multiply.c",
+    "src/src/subgraph/binary.c",
+    "src/src/subgraph/concatenate.c",
+    "src/src/subgraph/convolution-2d.c",
+    "src/src/subgraph/copy.c",
+    "src/src/subgraph/deconvolution-2d.c",
+    "src/src/subgraph/deprecated.c",
+    "src/src/subgraph/depth-to-space-2d.c",
+    "src/src/subgraph/depthwise-convolution-2d.c",
+    "src/src/subgraph/even-split.c",
+    "src/src/subgraph/fully-connected-sparse.c",
+    "src/src/subgraph/fully-connected.c",
+    "src/src/subgraph/max-pooling-2d.c",
+    "src/src/subgraph/pack-lh.c",
+    "src/src/subgraph/reshape-helpers.c",
+    "src/src/subgraph/rope.c",
+    "src/src/subgraph/softmax.c",
+    "src/src/subgraph/space-to-depth-2d.c",
+    "src/src/subgraph/static-constant-pad.c",
+    "src/src/subgraph/static-reduce.c",
+    "src/src/subgraph/static-resize-bilinear-2d.c",
+    "src/src/subgraph/static-slice.c",
+    "src/src/subgraph/static-transpose.c",
+    "src/src/subgraph/subgraph-utils.c",
+    "src/src/subgraph/unary.c",
+    "src/src/subgraph/unpooling-2d.c",
+    "src/src/subgraph/validation.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-f16-vcvt_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("subgraph_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-scalar-fabsf-u2.c",
+      "src/src/subgraph/argmax-pooling-2d.c",
+    "src/src/subgraph/average-pooling-2d.c",
+    "src/src/subgraph/batch-matrix-multiply.c",
+    "src/src/subgraph/binary.c",
+    "src/src/subgraph/concatenate.c",
+    "src/src/subgraph/convolution-2d.c",
+    "src/src/subgraph/copy.c",
+    "src/src/subgraph/deconvolution-2d.c",
+    "src/src/subgraph/deprecated.c",
+    "src/src/subgraph/depth-to-space-2d.c",
+    "src/src/subgraph/depthwise-convolution-2d.c",
+    "src/src/subgraph/even-split.c",
+    "src/src/subgraph/fully-connected-sparse.c",
+    "src/src/subgraph/fully-connected.c",
+    "src/src/subgraph/max-pooling-2d.c",
+    "src/src/subgraph/pack-lh.c",
+    "src/src/subgraph/reshape-helpers.c",
+    "src/src/subgraph/rope.c",
+    "src/src/subgraph/softmax.c",
+    "src/src/subgraph/space-to-depth-2d.c",
+    "src/src/subgraph/static-constant-pad.c",
+    "src/src/subgraph/static-reduce.c",
+    "src/src/subgraph/static-resize-bilinear-2d.c",
+    "src/src/subgraph/static-slice.c",
+    "src/src/subgraph/static-transpose.c",
+    "src/src/subgraph/subgraph-utils.c",
+    "src/src/subgraph/unary.c",
+    "src/src/subgraph/unpooling-2d.c",
+    "src/src/subgraph/validation.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46691,52 +55701,68 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-f16-vcvt_riscv64_standalone") {
-      cflags = []
+source_set("tables_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-scalar-fabsf-u2.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/tables/exp2-k-over-2048.c",
+    "src/src/tables/exp2-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-16.c",
+    "src/src/tables/exp2minus-k-over-2048.c",
+    "src/src/tables/exp2minus-k-over-32.c",
+    "src/src/tables/exp2minus-k-over-4.c",
+    "src/src/tables/exp2minus-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-8.c",
+    "src/src/tables/vlog.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-gemm_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("tables_riscv64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-gemm/gen/f32-gemm-1x4v-minmax-rvv.c",
-      "src/src/f32-gemm/gen/f32-gemm-7x4v-minmax-rvv.c",
+      "src/src/tables/exp2-k-over-2048.c",
+    "src/src/tables/exp2-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-16.c",
+    "src/src/tables/exp2minus-k-over-2048.c",
+    "src/src/tables/exp2minus-k-over-32.c",
+    "src/src/tables/exp2minus-k-over-4.c",
+    "src/src/tables/exp2minus-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-8.c",
+    "src/src/tables/vlog.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46748,59 +55774,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-gemm_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-gemm/gen/f32-gemm-1x4v-minmax-rvv.c",
-        "src/src/f32-gemm/gen/f32-gemm-7x4v-minmax-rvv.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("u8-ibilinear_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-ibilinear/gen/u8-ibilinear-scalar-c1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-gemm_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-ibilinear_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-gemm/gen/f32-gemm-1x4-minmax-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x4-relu-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-1x4-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x2-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x4-minmax-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x4-relu-scalar.c",
-      "src/src/f32-gemm/gen/f32-gemm-4x4-scalar.c",
+      "src/src/u8-ibilinear/gen/u8-ibilinear-scalar-c1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46812,55 +55831,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-gemm_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-gemm/gen/f32-gemm-1x4-minmax-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x4-relu-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-1x4-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x2-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x4-minmax-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x4-relu-scalar.c",
-        "src/src/f32-gemm/gen/f32-gemm-4x4-scalar.c",
-      ]
+source_set("u8-lut32norm_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-lut32norm/u8-lut32norm-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-ibilinear-chw_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-lut32norm_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-scalar-p4.c",
+      "src/src/u8-lut32norm/u8-lut32norm-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46872,48 +55888,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-ibilinear-chw_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-scalar-p4.c",
-      ]
+source_set("u8-maxpool_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-scalar-u1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-ibilinear_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-maxpool_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-ibilinear/gen/f32-ibilinear-scalar-c2.c",
+      "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46925,52 +55945,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-ibilinear_riscv64_standalone") {
-      cflags = []
+source_set("u8-rdminmax_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-ibilinear/gen/f32-ibilinear-scalar-c2.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-scalar-c2.c",
+    "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-scalar-c2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-igemm_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-rdminmax_riscv64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-igemm/gen/f32-igemm-1x4v-minmax-rvv.c",
-      "src/src/f32-igemm/gen/f32-igemm-7x4v-minmax-rvv.c",
+      "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-scalar-c2.c",
+    "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -46982,59 +56004,56 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-igemm_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-igemm/gen/f32-igemm-1x4v-minmax-rvv.c",
-        "src/src/f32-igemm/gen/f32-igemm-7x4v-minmax-rvv.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("u8-rminmax_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-rminmax/gen/u8-rmax-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rmin-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rminmax-scalar-u2-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("f32-igemm_riscv64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-rminmax_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-igemm/gen/f32-igemm-1x4-minmax-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x4-relu-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-1x4-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x2-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x4-minmax-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x4-relu-scalar.c",
-      "src/src/f32-igemm/gen/f32-igemm-4x4-scalar.c",
+      "src/src/u8-rminmax/gen/u8-rmax-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rmin-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rminmax-scalar-u2-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47046,58 +56065,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-igemm_riscv64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-igemm/gen/f32-igemm-1x4-minmax-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x4-relu-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-1x4-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x2-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x4-minmax-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x4-relu-scalar.c",
-        "src/src/f32-igemm/gen/f32-igemm-4x4-scalar.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("u8-vclamp_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-vclamp/gen/u8-vclamp-rvv-u4v.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-maxpool_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-vclamp_arch=rv64gcv-abi=lp64d_standalone") {
     cflags = [
       "-mabi=lp64d",
-      "-march=rv64gcv",
+    "-march=rv64gcv"
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-rvv-u2v.c",
+      "src/src/u8-vclamp/gen/u8-vclamp-rvv-u4v.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47109,51 +56124,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-maxpool_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-rvv-u2v.c",
-      ]
+source_set("u8-vclamp_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-vclamp/u8-vclamp-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-maxpool_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-vclamp_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-scalar-u1.c",
+      "src/src/u8-vclamp/u8-vclamp-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47165,49 +56181,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-maxpool_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-scalar-u1.c",
-      ]
+source_set("x16-transposec_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x16-transposec/gen/x16-transposec-2x4-scalar-int.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-qc4w-gemm_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x16-transposec_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x4-minmax-scalar.c",
-      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x4-minmax-scalar.c",
+      "src/src/x16-transposec/gen/x16-transposec-2x4-scalar-int.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47219,50 +56238,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc4w-gemm_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x4-minmax-scalar.c",
-        "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x4-minmax-scalar.c",
-      ]
+source_set("x16-x32-packw_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-gio-scalar.c",
+    "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-goi-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-qc8w-gemm_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x16-x32-packw_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x4-minmax-scalar.c",
-      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x4-minmax-scalar.c",
+      "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-gio-scalar.c",
+    "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-goi-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47274,52 +56297,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qc8w-gemm_riscv64_standalone") {
-      cflags = []
+source_set("x24-transposec_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x4-minmax-scalar.c",
-        "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x4-minmax-scalar.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x24-transposec/gen/x24-transposec-1x2-scalar.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-qs8-vcvt_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x24-transposec_riscv64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-rvv-u2v.c",
+      "src/src/x24-transposec/gen/x24-transposec-1x2-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47331,52 +56354,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qs8-vcvt_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-rvv-u2v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x32-packw_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-packw/gen/x32-packw-x4v-gemm-goi-rvv-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-qs8-vcvt_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-packw_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-imagic-u4.c",
-      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-lrintf-u4.c",
+      "src/src/x32-packw/gen/x32-packw-x4v-gemm-goi-rvv-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47388,52 +56413,62 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qs8-vcvt_riscv64_standalone") {
-      cflags = []
+source_set("x32-packw_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-imagic-u4.c",
-        "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-lrintf-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-scalar-int-u2.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x64-gemm-goi-scalar-int-u2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-qu8-vcvt_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-packw_riscv64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-rvv-u2v.c",
+      "src/src/x32-packw/gen/x32-packw-x2-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-scalar-int-u2.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x64-gemm-goi-scalar-int-u2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47445,52 +56480,60 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qu8-vcvt_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-rvv-u2v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x32-transposec_arch=rv64gcv-abi=lp64d") {
+  cflags = [
+    "-mabi=lp64d",
+    "-march=rv64gcv"
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-transposec/gen/x32-transposec-16x8-rvv.c",
+    "src/src/x32-transposec/gen/x32-transposec-32x8-rvv.c",
+    "src/src/x32-transposec/gen/x32-transposec-4x4-rvv.c",
+    "src/src/x32-transposec/gen/x32-transposec-8x8-rvv.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-qu8-vcvt_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-transposec_arch=rv64gcv-abi=lp64d_standalone") {
+    cflags = [
+      "-mabi=lp64d",
+    "-march=rv64gcv"
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-imagic-u4.c",
-      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-lrintf-u4.c",
+      "src/src/x32-transposec/gen/x32-transposec-16x8-rvv.c",
+    "src/src/x32-transposec/gen/x32-transposec-32x8-rvv.c",
+    "src/src/x32-transposec/gen/x32-transposec-4x4-rvv.c",
+    "src/src/x32-transposec/gen/x32-transposec-8x8-rvv.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47502,52 +56545,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-qu8-vcvt_riscv64_standalone") {
-      cflags = []
+source_set("x32-transposec_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-imagic-u4.c",
-        "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-lrintf-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-transposec/gen/x32-transposec-2x4-scalar-int.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-raddstoreexpminusmax_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-transposec_riscv64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-rvv-rr2-p6-u4v.c",
+      "src/src/x32-transposec/gen/x32-transposec-2x4-scalar-int.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47559,51 +56602,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-raddstoreexpminusmax_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-rvv-rr2-p6-u4v.c",
-      ]
+source_set("x32-unpool_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-unpool/x32-unpool-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-raddstoreexpminusmax_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-unpool_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-scalar-rr2-p5-u4-acc2.c",
+      "src/src/x32-unpool/x32-unpool-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47615,49 +56659,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-raddstoreexpminusmax_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-scalar-rr2-p5-u4-acc2.c",
-      ]
+source_set("x64-transposec_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x64-transposec/gen/x64-transposec-4x2-scalar-int.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-rdminmax_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x64-transposec_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-scalar-c2.c",
-      "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-scalar-c2.c",
+      "src/src/x64-transposec/gen/x64-transposec-4x2-scalar-int.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47669,52 +56716,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rdminmax_riscv64_standalone") {
-      cflags = []
+source_set("x8-lut_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-scalar-c2.c",
-        "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-scalar-c2.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-lut/gen/x8-lut-scalar-u4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-rdsum_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-lut_riscv64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-rvv-u4v.c",
+      "src/src/x8-lut/gen/x8-lut-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47726,51 +56773,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rdsum_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-rvv-u4v.c",
-      ]
+source_set("x8-packq_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-packq/x8-packq-scalar-f32qp8-u1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-rdsum_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-packq_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-scalar.c",
+      "src/src/x8-packq/x8-packq-scalar-f32qp8-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47782,53 +56830,58 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rdsum_riscv64_standalone") {
-      cflags = []
+source_set("x8-packw_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-scalar.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-packw/gen/x8-packw-x16-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x32-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x4-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x8-gemm-goi-scalar-u2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-rminmax_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-packw_riscv64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-rminmax/gen/f32-rmax-rvv-u8v.c",
-      "src/src/f32-rminmax/gen/f32-rmin-rvv-u8v.c",
-      "src/src/f32-rminmax/gen/f32-rminmax-rvv-u8v.c",
+      "src/src/x8-packw/gen/x8-packw-x16-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x32-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x4-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x8-gemm-goi-scalar-u2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47840,55 +56893,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rminmax_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rminmax/gen/f32-rmax-rvv-u8v.c",
-        "src/src/f32-rminmax/gen/f32-rmin-rvv-u8v.c",
-        "src/src/f32-rminmax/gen/f32-rminmax-rvv-u8v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x8-transposec_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-transposec/gen/x8-transposec-2x4-scalar-int.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-rminmax_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-transposec_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-rminmax/gen/f32-rmax-scalar-u4-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rmin-scalar-u4-acc4.c",
-      "src/src/f32-rminmax/gen/f32-rminmax-scalar-u4-acc4.c",
+      "src/src/x8-transposec/gen/x8-transposec-2x4-scalar-int.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47900,50 +56950,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rminmax_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rminmax/gen/f32-rmax-scalar-u4-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rmin-scalar-u4-acc4.c",
-        "src/src/f32-rminmax/gen/f32-rminmax-scalar-u4-acc4.c",
-      ]
+source_set("xx-copy_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-copy/xx-copy-scalar-memcpy.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-rsum_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-copy_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-rsum/gen/f32-rsum-scalar-u4-acc4.c",
+      "src/src/xx-copy/xx-copy-scalar-memcpy.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -47955,53 +57007,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-rsum_riscv64_standalone") {
-      cflags = []
+source_set("xx-fill_riscv64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-rsum/gen/f32-rsum-scalar-u4-acc4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-fill/xx-fill-scalar-u16.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-spmm_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-fill_riscv64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-spmm/gen/f32-spmm-4vx4-minmax-rvv.c",
-      "src/src/f32-spmm/gen/f32-spmm-8vx1-minmax-rvv.c",
-      "src/src/f32-spmm/gen/f32-spmm-8vx2-minmax-rvv.c",
+      "src/src/xx-fill/xx-fill-scalar-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48013,55 +57064,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-spmm_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-spmm/gen/f32-spmm-4vx4-minmax-rvv.c",
-        "src/src/f32-spmm/gen/f32-spmm-8vx1-minmax-rvv.c",
-        "src/src/f32-spmm/gen/f32-spmm-8vx2-minmax-rvv.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("xx-pad_riscv64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-pad/xx-pad-p4-scalar-u16.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-spmm_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-pad_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-spmm/gen/f32-spmm-8x1-minmax-scalar.c",
-      "src/src/f32-spmm/gen/f32-spmm-8x2-minmax-scalar.c",
-      "src/src/f32-spmm/gen/f32-spmm-8x4-minmax-scalar.c",
+      "src/src/xx-pad/xx-pad-p4-scalar-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48073,50 +57121,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-spmm_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-spmm/gen/f32-spmm-8x1-minmax-scalar.c",
-        "src/src/f32-spmm/gen/f32-spmm-8x2-minmax-scalar.c",
-        "src/src/f32-spmm/gen/f32-spmm-8x4-minmax-scalar.c",
-      ]
+source_set("xx-transposev_riscv64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-transposev/xx-transposev-1x1-scalar-memcpy.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vapproxgelu_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-transposev_riscv64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-scalar-rational-12-10-div.c",
+      "src/src/xx-transposev/xx-transposev-1x1-scalar-memcpy.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48128,66 +57178,101 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vapproxgelu_riscv64_standalone") {
-      cflags = []
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-scalar-rational-12-10-div.c",
-      ]
+if (current_cpu == "ppc64") {
+source_set("configs_ppc64") {
+  cflags = [
+
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/configs/argmaxpool-config.c",
+    "src/src/configs/avgpool-config.c",
+    "src/src/configs/binary-elementwise-config.c",
+    "src/src/configs/cmul-config.c",
+    "src/src/configs/conv-hwc2chw-config.c",
+    "src/src/configs/dwconv-config.c",
+    "src/src/configs/dwconv2d-chw-config.c",
+    "src/src/configs/gemm-config.c",
+    "src/src/configs/hardware-config.c",
+    "src/src/configs/ibilinear-chw-config.c",
+    "src/src/configs/ibilinear-config.c",
+    "src/src/configs/lut32norm-config.c",
+    "src/src/configs/maxpool-config.c",
+    "src/src/configs/pack-lh-config.c",
+    "src/src/configs/raddstoreexpminusmax-config.c",
+    "src/src/configs/reduce-config.c",
+    "src/src/configs/spmm-config.c",
+    "src/src/configs/transpose-config.c",
+    "src/src/configs/unary-elementwise-config.c",
+    "src/src/configs/unpool-config.c",
+    "src/src/configs/vmulcaddc-config.c",
+    "src/src/configs/x8-lut-config.c",
+    "src/src/configs/xx-fill-config.c",
+    "src/src/configs/xx-pad-config.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vbinary_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("configs_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vbinary/gen/f32-vadd-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vaddc-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vdiv-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vdivc-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vmax-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vmaxc-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vmin-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vminc-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vmul-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vmulc-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vrdivc-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vrsubc-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiff-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiffc-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vsub-rvv-u8v.c",
-      "src/src/f32-vbinary/gen/f32-vsubc-rvv-u8v.c",
+      "src/src/configs/argmaxpool-config.c",
+    "src/src/configs/avgpool-config.c",
+    "src/src/configs/binary-elementwise-config.c",
+    "src/src/configs/cmul-config.c",
+    "src/src/configs/conv-hwc2chw-config.c",
+    "src/src/configs/dwconv-config.c",
+    "src/src/configs/dwconv2d-chw-config.c",
+    "src/src/configs/gemm-config.c",
+    "src/src/configs/hardware-config.c",
+    "src/src/configs/ibilinear-chw-config.c",
+    "src/src/configs/ibilinear-config.c",
+    "src/src/configs/lut32norm-config.c",
+    "src/src/configs/maxpool-config.c",
+    "src/src/configs/pack-lh-config.c",
+    "src/src/configs/raddstoreexpminusmax-config.c",
+    "src/src/configs/reduce-config.c",
+    "src/src/configs/spmm-config.c",
+    "src/src/configs/transpose-config.c",
+    "src/src/configs/unary-elementwise-config.c",
+    "src/src/configs/unpool-config.c",
+    "src/src/configs/vmulcaddc-config.c",
+    "src/src/configs/x8-lut-config.c",
+    "src/src/configs/xx-fill-config.c",
+    "src/src/configs/xx-pad-config.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48199,84 +57284,60 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vbinary_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vbinary/gen/f32-vadd-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vaddc-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vdiv-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vdivc-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vmax-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vmaxc-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vmin-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vminc-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vmul-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vmulc-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vrdivc-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vrsubc-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiff-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiffc-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vsub-rvv-u8v.c",
-        "src/src/f32-vbinary/gen/f32-vsubc-rvv-u8v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("enums_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/enums/allocation-type.c",
+    "src/src/enums/datatype-strings.c",
+    "src/src/enums/microkernel-type.c",
+    "src/src/enums/node-type.c",
+    "src/src/enums/operator-type.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vbinary_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("enums_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vbinary/gen/f32-vadd-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vaddc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vdiv-scalar-u2.c",
-      "src/src/f32-vbinary/gen/f32-vdivc-scalar-u2.c",
-      "src/src/f32-vbinary/gen/f32-vmax-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmaxc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmin-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vminc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmul-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vmulc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vprelu-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vpreluc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vrdivc-scalar-u2.c",
-      "src/src/f32-vbinary/gen/f32-vrpreluc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vrsubc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiff-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsqrdiffc-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsub-scalar-u8.c",
-      "src/src/f32-vbinary/gen/f32-vsubc-scalar-u8.c",
+      "src/src/enums/allocation-type.c",
+    "src/src/enums/datatype-strings.c",
+    "src/src/enums/microkernel-type.c",
+    "src/src/enums/node-type.c",
+    "src/src/enums/operator-type.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48288,66 +57349,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vbinary_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vbinary/gen/f32-vadd-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vaddc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vdiv-scalar-u2.c",
-        "src/src/f32-vbinary/gen/f32-vdivc-scalar-u2.c",
-        "src/src/f32-vbinary/gen/f32-vmax-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmaxc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmin-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vminc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmul-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vmulc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vprelu-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vpreluc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vrdivc-scalar-u2.c",
-        "src/src/f32-vbinary/gen/f32-vrpreluc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vrsubc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiff-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsqrdiffc-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsub-scalar-u8.c",
-        "src/src/f32-vbinary/gen/f32-vsubc-scalar-u8.c",
-      ]
+source_set("f16-f32-vcvt_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vclamp_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-f32-vcvt_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vclamp/gen/f32-vclamp-scalar.c",
+      "src/src/f16-f32-vcvt/gen/f16-f32-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48359,51 +57406,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vclamp_riscv64_standalone") {
-      cflags = []
+source_set("f16-qs8-vcvt_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vclamp/gen/f32-vclamp-scalar.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-scalar-imagic-u4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vcmul_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-qs8-vcvt_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vcmul/gen/f32-vcmul-rvv-u2v.c",
+      "src/src/f16-qs8-vcvt/gen/f16-qs8-vcvt-scalar-imagic-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48415,51 +57463,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcmul_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcmul/gen/f32-vcmul-rvv-u2v.c",
-      ]
+source_set("f16-qu8-vcvt_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-qu8-vcvt/gen/f16-qu8-vcvt-scalar-imagic-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vcmul_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-qu8-vcvt_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vcmul/gen/f32-vcmul-scalar-u4.c",
+      "src/src/f16-qu8-vcvt/gen/f16-qu8-vcvt-scalar-imagic-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48471,50 +57520,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcmul_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcmul/gen/f32-vcmul-scalar-u4.c",
-      ]
+source_set("f16-rdminmax_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-scalar-c2.c",
+    "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-scalar-c2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vcopysign_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-rdminmax_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vcopysign/gen/f32-vcopysign-scalar.c",
-      "src/src/f32-vcopysign/gen/f32-vcopysignc-scalar.c",
-      "src/src/f32-vcopysign/gen/f32-vrcopysignc-scalar.c",
+      "src/src/f16-rdminmax/gen/f16-rdmax-2p2x-scalar-c2.c",
+    "src/src/f16-rdminmax/gen/f16-rdmin-2p2x-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48526,50 +57579,56 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcopysign_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcopysign/gen/f32-vcopysign-scalar.c",
-        "src/src/f32-vcopysign/gen/f32-vcopysignc-scalar.c",
-        "src/src/f32-vcopysign/gen/f32-vrcopysignc-scalar.c",
-      ]
+source_set("f16-rminmax_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-rminmax/gen/f16-rmax-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rmin-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rminmax-scalar-u2-acc2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vcos_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-rminmax_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vcos/gen/f32-vcos-scalar-rational-5-4-div.c",
+      "src/src/f16-rminmax/gen/f16-rmax-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rmin-scalar-u2-acc2.c",
+    "src/src/f16-rminmax/gen/f16-rminmax-scalar-u2-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48581,48 +57640,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vcos_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vcos/gen/f32-vcos-scalar-rational-5-4-div.c",
-      ]
+source_set("f16-vapproxgelu_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-scalar-rational-6-4-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-velu_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vapproxgelu_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-velu/gen/f32-velu-scalar-rr2-lut16-p3-u4.c",
+      "src/src/f16-vapproxgelu/gen/f16-vapproxgelu-scalar-rational-6-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48634,48 +57697,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-velu_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-velu/gen/f32-velu-scalar-rr2-lut16-p3-u4.c",
-      ]
+source_set("f16-vcos_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vcos/gen/f16-vcos-scalar-rational-3-2-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vexp_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vcos_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vexp/gen/f32-vexp-scalar-rational-3-2-div.c",
+      "src/src/f16-vcos/gen/f16-vcos-scalar-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48687,48 +57754,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vexp_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vexp/gen/f32-vexp-scalar-rational-3-2-div.c",
-      ]
+source_set("f16-vexp_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vexp/gen/f16-vexp-scalar-poly-3.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vgelu_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vexp_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vgelu/gen/f32-vgelu-scalar-rational-12-10-div.c",
+      "src/src/f16-vexp/gen/f16-vexp-scalar-poly-3.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48740,51 +57811,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vgelu_riscv64_standalone") {
-      cflags = []
+source_set("f16-vgelu_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vgelu/gen/f32-vgelu-scalar-rational-12-10-div.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vgelu/gen/f16-vgelu-scalar-rational-6-4-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vhswish_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vgelu_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vhswish/gen/f32-vhswish-rvv-u4v.c",
+      "src/src/f16-vgelu/gen/f16-vgelu-scalar-rational-6-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48796,51 +57868,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vhswish_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vhswish/gen/f32-vhswish-rvv-u4v.c",
-      ]
+source_set("f16-vsin_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f16-vsin/gen/f16-vsin-scalar-rational-3-2-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vhswish_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f16-vsin_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vhswish/gen/f32-vhswish-scalar.c",
+      "src/src/f16-vsin/gen/f16-vsin-scalar-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48852,48 +57925,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vhswish_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vhswish/gen/f32-vhswish-scalar.c",
-      ]
+source_set("f32-argmaxpool_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-scalar-c1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vlog_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-argmaxpool_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vlog/gen/f32-vlog-scalar-rational-3-3-div.c",
+      "src/src/f32-argmaxpool/f32-argmaxpool-9p8x-scalar-c1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48905,51 +57982,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlog_riscv64_standalone") {
-      cflags = []
+source_set("f32-avgpool_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlog/gen/f32-vlog-scalar-rational-3-3-div.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-scalar-u1.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vlrelu_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-avgpool_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vlrelu/gen/f32-vlrelu-rvv-u4v.c",
+      "src/src/f32-avgpool/gen/f32-avgpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -48961,51 +58039,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlrelu_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlrelu/gen/f32-vlrelu-rvv-u4v.c",
-      ]
+source_set("f32-conv-hwc2chw_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-scalar-1x1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vlrelu_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-conv-hwc2chw_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vlrelu/gen/f32-vlrelu-scalar-u4.c",
+      "src/src/f32-conv-hwc2chw/f32-conv-hwc2chw-3x3s2p1c3x4-scalar-1x1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49017,48 +58096,66 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vlrelu_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vlrelu/gen/f32-vlrelu-scalar-u4.c",
-      ]
+source_set("f32-dwconv2d-chw_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-4x1.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-1x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-2x1-acc2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vmulcaddc_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv2d-chw_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c1-minmax-scalar-2x.c",
+      "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3p1-minmax-scalar-4x1.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-1x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-3x3s2p1-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5p2-minmax-scalar-2x1-acc2.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-1x1-acc5.c",
+    "src/src/f32-dwconv2d-chw/gen/f32-dwconv2d-chw-5x5s2p2-minmax-scalar-2x1-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49070,54 +58167,70 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vmulcaddc_riscv64_standalone") {
-      cflags = []
+source_set("f32-dwconv_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c1-minmax-scalar-2x.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-scalar-acc2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("f32-vrnd_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-dwconv_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vrnd/gen/f32-vrndd-rvv-u4v.c",
-      "src/src/f32-vrnd/gen/f32-vrndne-rvv-u4v.c",
-      "src/src/f32-vrnd/gen/f32-vrndu-rvv-u4v.c",
-      "src/src/f32-vrnd/gen/f32-vrndz-rvv-u4v.c",
+      "src/src/f32-dwconv/gen/f32-dwconv-25p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-25p2c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-3p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-4p1c-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-minmax-scalar-acc2.c",
+    "src/src/f32-dwconv/gen/f32-dwconv-9p1c-scalar-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49129,57 +58242,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrnd_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrnd/gen/f32-vrndd-rvv-u4v.c",
-        "src/src/f32-vrnd/gen/f32-vrndne-rvv-u4v.c",
-        "src/src/f32-vrnd/gen/f32-vrndu-rvv-u4v.c",
-        "src/src/f32-vrnd/gen/f32-vrndz-rvv-u4v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("f32-vrnd_riscv64") {
-    cflags = []
+source_set("f32-f16-vcvt_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-scalar-fabsf-u2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-f16-vcvt_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vrnd/gen/f32-vrndd-scalar-libm-u1.c",
-      "src/src/f32-vrnd/gen/f32-vrndne-scalar-libm-u1.c",
-      "src/src/f32-vrnd/gen/f32-vrndu-scalar-libm-u1.c",
-      "src/src/f32-vrnd/gen/f32-vrndz-scalar-libm-u1.c",
+      "src/src/f32-f16-vcvt/gen/f32-f16-vcvt-scalar-fabsf-u2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49191,54 +58299,66 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrnd_riscv64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrnd/gen/f32-vrndd-scalar-libm-u1.c",
-        "src/src/f32-vrnd/gen/f32-vrndne-scalar-libm-u1.c",
-        "src/src/f32-vrnd/gen/f32-vrndu-scalar-libm-u1.c",
-        "src/src/f32-vrnd/gen/f32-vrndz-scalar-libm-u1.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-gemm_ppc64") {
+  cflags = [
+
+  ]
 
-  source_set("f32-vrsqrt_arch=rv64gcv-abi=lp64d") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-gemm_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vrsqrt/gen/f32-vrsqrt-rvv-rsqrt-u4v.c",
+      "src/src/f32-gemm/gen/f32-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-1x4-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x2-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-minmax-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-relu-scalar.c",
+    "src/src/f32-gemm/gen/f32-gemm-4x4-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49250,52 +58370,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrsqrt_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrsqrt/gen/f32-vrsqrt-rvv-rsqrt-u4v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-ibilinear-chw_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-scalar-p4.c"
+  ]
 
-  source_set("f32-vrsqrt_riscv64") {
-    cflags = []
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-ibilinear-chw_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-rsqrt-u1.c",
-      "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-sqrt.c",
+      "src/src/f32-ibilinear-chw/gen/f32-ibilinear-chw-scalar-p4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49307,49 +58427,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vrsqrt_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-rsqrt-u1.c",
-        "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-sqrt.c",
-      ]
+source_set("f32-ibilinear_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-ibilinear/gen/f32-ibilinear-scalar-c2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vsigmoid_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-ibilinear_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsigmoid/gen/f32-vsigmoid-scalar-rr2-lut64-p2-div-u2.c",
+      "src/src/f32-ibilinear/gen/f32-ibilinear-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49361,48 +58484,66 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsigmoid_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsigmoid/gen/f32-vsigmoid-scalar-rr2-lut64-p2-div-u2.c",
-      ]
+source_set("f32-igemm_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vsin_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-igemm_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsin/gen/f32-vsin-scalar-rational-5-4-div.c",
+      "src/src/f32-igemm/gen/f32-igemm-1x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-1x4-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x2-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-minmax-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-relu-scalar.c",
+    "src/src/f32-igemm/gen/f32-igemm-4x4-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49414,48 +58555,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsin_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsin/gen/f32-vsin-scalar-rational-5-4-div.c",
-      ]
+source_set("f32-maxpool_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-scalar-u1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vsqrt_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-maxpool_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vsqrt/gen/f32-vsqrt-scalar-sqrt.c",
+      "src/src/f32-maxpool/gen/f32-maxpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49467,48 +58612,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vsqrt_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vsqrt/gen/f32-vsqrt-scalar-sqrt.c",
-      ]
+source_set("f32-qc4w-gemm_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x4-minmax-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vtanh_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc4w-gemm_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vtanh/gen/f32-vtanh-scalar-rational-9-8-div.c",
+      "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-qc4w-gemm/gen/f32-qc4w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49520,50 +58671,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vtanh_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vtanh/gen/f32-vtanh-scalar-rational-9-8-div.c",
-      ]
+source_set("f32-qc8w-gemm_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x4-minmax-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("f32-vunary_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qc8w-gemm_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/f32-vunary/gen/f32-vabs-scalar.c",
-      "src/src/f32-vunary/gen/f32-vneg-scalar.c",
-      "src/src/f32-vunary/gen/f32-vsqr-scalar.c",
+      "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-1x4-minmax-scalar.c",
+    "src/src/f32-qc8w-gemm/gen/f32-qc8w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49575,70 +58730,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("f32-vunary_riscv64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/f32-vunary/gen/f32-vabs-scalar.c",
-        "src/src/f32-vunary/gen/f32-vneg-scalar.c",
-        "src/src/f32-vunary/gen/f32-vsqr-scalar.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qs8-vcvt_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-imagic-u4.c",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-lrintf-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("operators_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qs8-vcvt_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/operators/argmax-pooling-nhwc.c",
-      "src/src/operators/average-pooling-nhwc.c",
-      "src/src/operators/batch-matrix-multiply-nc.c",
-      "src/src/operators/binary-elementwise-nd.c",
-      "src/src/operators/constant-pad-nd.c",
-      "src/src/operators/convolution-nchw.c",
-      "src/src/operators/convolution-nhwc.c",
-      "src/src/operators/deconvolution-nhwc.c",
-      "src/src/operators/dynamic-fully-connected-nc.c",
-      "src/src/operators/fully-connected-nc.c",
-      "src/src/operators/max-pooling-nhwc.c",
-      "src/src/operators/pack-lh.c",
-      "src/src/operators/reduce-nd.c",
-      "src/src/operators/resize-bilinear-nchw.c",
-      "src/src/operators/resize-bilinear-nhwc.c",
-      "src/src/operators/rope-nthc.c",
-      "src/src/operators/slice-nd.c",
-      "src/src/operators/softmax-nc.c",
-      "src/src/operators/transpose-nd.c",
-      "src/src/operators/unary-elementwise-nc.c",
-      "src/src/operators/unpooling-nhwc.c",
+      "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-imagic-u4.c",
+    "src/src/f32-qs8-vcvt/gen/f32-qs8-vcvt-scalar-lrintf-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49650,69 +58789,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("operators_riscv64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/operators/argmax-pooling-nhwc.c",
-        "src/src/operators/average-pooling-nhwc.c",
-        "src/src/operators/batch-matrix-multiply-nc.c",
-        "src/src/operators/binary-elementwise-nd.c",
-        "src/src/operators/constant-pad-nd.c",
-        "src/src/operators/convolution-nchw.c",
-        "src/src/operators/convolution-nhwc.c",
-        "src/src/operators/deconvolution-nhwc.c",
-        "src/src/operators/dynamic-fully-connected-nc.c",
-        "src/src/operators/fully-connected-nc.c",
-        "src/src/operators/max-pooling-nhwc.c",
-        "src/src/operators/pack-lh.c",
-        "src/src/operators/reduce-nd.c",
-        "src/src/operators/resize-bilinear-nchw.c",
-        "src/src/operators/resize-bilinear-nhwc.c",
-        "src/src/operators/rope-nthc.c",
-        "src/src/operators/slice-nd.c",
-        "src/src/operators/softmax-nc.c",
-        "src/src/operators/transpose-nd.c",
-        "src/src/operators/unary-elementwise-nc.c",
-        "src/src/operators/unpooling-nhwc.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-qu8-vcvt_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-imagic-u4.c",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-lrintf-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qb4w-gemm_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-qu8-vcvt_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4-minmax-scalar.c",
-      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4-minmax-scalar.c",
+      "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-imagic-u4.c",
+    "src/src/f32-qu8-vcvt/gen/f32-qu8-vcvt-scalar-lrintf-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49724,53 +58848,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qb4w-gemm_riscv64_standalone") {
-      cflags = []
+source_set("f32-raddstoreexpminusmax_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4-minmax-scalar.c",
-        "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4-minmax-scalar.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-scalar-rr2-p5-u4-acc2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qd8-f32-qc4w-gemm_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-raddstoreexpminusmax_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4v-minmax-rvv.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4v-minmax-rvv.c",
+      "src/src/f32-raddstoreexpminusmax/gen/f32-raddstoreexpminusmax-scalar-rr2-p5-u4-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49782,53 +58905,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc4w-gemm_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4v-minmax-rvv.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4v-minmax-rvv.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-rdminmax_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-scalar-c2.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-scalar-c2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qd8-f32-qc4w-gemm_riscv64") {
-    cflags = []
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdminmax_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4-minmax-scalar.c",
-      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4-minmax-scalar.c",
+      "src/src/f32-rdminmax/gen/f32-rdmax-2p2x-scalar-c2.c",
+    "src/src/f32-rdminmax/gen/f32-rdmin-2p2x-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49840,53 +58964,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc4w-gemm_riscv64_standalone") {
-      cflags = []
+source_set("f32-rdsum_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4-minmax-scalar.c",
-        "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4-minmax-scalar.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-scalar.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qd8-f32-qc8w-gemm_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rdsum_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4v-minmax-rvv.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4v-minmax-rvv.c",
+      "src/src/f32-rdsum/gen/f32-rdsum-7p7x-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49898,54 +59021,56 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-gemm_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4v-minmax-rvv.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4v-minmax-rvv.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-rminmax_ppc64") {
+  cflags = [
+
+  ]
 
-  source_set("qd8-f32-qc8w-gemm_riscv64") {
-    cflags = []
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rminmax/gen/f32-rmax-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-scalar-u4-acc4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rminmax_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x2-minmax-scalar.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4-minmax-scalar.c",
-      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4-minmax-scalar.c",
+      "src/src/f32-rminmax/gen/f32-rmax-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rmin-scalar-u4-acc4.c",
+    "src/src/f32-rminmax/gen/f32-rminmax-scalar-u4-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -49957,54 +59082,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-gemm_riscv64_standalone") {
-      cflags = []
+source_set("f32-rsum_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x2-minmax-scalar.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4-minmax-scalar.c",
-        "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4-minmax-scalar.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-rsum/gen/f32-rsum-scalar-u4-acc4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qd8-f32-qc8w-igemm_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-rsum_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4v-minmax-rvv.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4v-minmax-rvv.c",
+      "src/src/f32-rsum/gen/f32-rsum-scalar-u4-acc4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50016,54 +59139,56 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-igemm_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4v-minmax-rvv.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4v-minmax-rvv.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-spmm_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-spmm/gen/f32-spmm-8x1-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x2-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x4-minmax-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qd8-f32-qc8w-igemm_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-spmm_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x2-minmax-scalar.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4-minmax-scalar.c",
-      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4-minmax-scalar.c",
+      "src/src/f32-spmm/gen/f32-spmm-8x1-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x2-minmax-scalar.c",
+    "src/src/f32-spmm/gen/f32-spmm-8x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50075,54 +59200,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qd8-f32-qc8w-igemm_riscv64_standalone") {
-      cflags = []
+source_set("f32-vapproxgelu_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x2-minmax-scalar.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4-minmax-scalar.c",
-        "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4-minmax-scalar.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-scalar-rational-12-10-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-dwconv_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vapproxgelu_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-25p8vc-minmax-fp32-rvv.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-9p8vc-minmax-fp32-rvv.c",
+      "src/src/f32-vapproxgelu/gen/f32-vapproxgelu-scalar-rational-12-10-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50134,55 +59257,88 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-dwconv_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-25p8vc-minmax-fp32-rvv.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-9p8vc-minmax-fp32-rvv.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vbinary_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vbinary/gen/f32-vadd-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vmax-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmin-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vminc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmul-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vprelu-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsub-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-scalar-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-dwconv_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vbinary_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-dwconv/gen/qs8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
+      "src/src/f32-vbinary/gen/f32-vadd-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vaddc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vdiv-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vmax-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmaxc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmin-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vminc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmul-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vmulc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vprelu-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrdivc-scalar-u2.c",
+    "src/src/f32-vbinary/gen/f32-vrpreluc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vrsubc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiff-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsqrdiffc-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsub-scalar-u8.c",
+    "src/src/f32-vbinary/gen/f32-vsubc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50194,54 +59350,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-dwconv_riscv64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-dwconv/gen/qs8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vclamp_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vclamp/gen/f32-vclamp-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-  source_set("qs8-f32-vcvt_arch=rv64gcv-abi=lp64d") {
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vclamp_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-rvv-u2v.c",
+      "src/src/f32-vclamp/gen/f32-vclamp-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50253,51 +59407,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-f32-vcvt_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-rvv-u2v.c",
-      ]
+source_set("f32-vcmul_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcmul/gen/f32-vcmul-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-f32-vcvt_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcmul_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-scalar-u4.c",
+      "src/src/f32-vcmul/gen/f32-vcmul-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50309,51 +59464,56 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-f32-vcvt_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-scalar-u4.c",
-      ]
+source_set("f32-vcopysign_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcopysign/gen/f32-vcopysign-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-packw_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcopysign_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-scalar.c",
-      "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-gio-scalar.c",
-      "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-goi-scalar.c",
-      "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-gio-scalar.c",
+      "src/src/f32-vcopysign/gen/f32-vcopysign-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vcopysignc-scalar.c",
+    "src/src/f32-vcopysign/gen/f32-vrcopysignc-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50365,51 +59525,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-packw_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-scalar.c",
-        "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-gio-scalar.c",
-        "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-goi-scalar.c",
-        "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-gio-scalar.c",
-      ]
+source_set("f32-vcos_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vcos/gen/f32-vcos-scalar-rational-5-4-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-qc4w-gemm_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vcos_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc4w-gemm/qs8-qc4w-gemm-1x2-minmax-fp32-scalar-lrintf.c",
+      "src/src/f32-vcos/gen/f32-vcos-scalar-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50421,53 +59582,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc4w-gemm_riscv64_standalone") {
-      cflags = []
+source_set("f32-velu_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc4w-gemm/qs8-qc4w-gemm-1x2-minmax-fp32-scalar-lrintf.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-velu/gen/f32-velu-scalar-rr2-lut16-p3-u4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-qc8w-dwconv_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-velu_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8vc-minmax-fp32-rvv.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p8vc-minmax-fp32-rvv.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p8vc-minmax-fp32-rvv.c",
+      "src/src/f32-velu/gen/f32-velu-scalar-rr2-lut16-p3-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50479,58 +59639,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-dwconv_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p8vc-minmax-fp32-rvv.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p8vc-minmax-fp32-rvv.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p8vc-minmax-fp32-rvv.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vexp_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vexp/gen/f32-vexp-scalar-rational-3-2-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-qc8w-dwconv_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vexp_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p2c-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
+      "src/src/f32-vexp/gen/f32-vexp-scalar-rational-3-2-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50542,57 +59696,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-dwconv_riscv64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p2c-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vgelu_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vgelu/gen/f32-vgelu-scalar-rational-12-10-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-qc8w-gemm_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vgelu_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4v-minmax-fp32-rvv.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x4v-minmax-fp32-rvv.c",
+      "src/src/f32-vgelu/gen/f32-vgelu-scalar-rational-12-10-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50604,53 +59753,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-gemm_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4v-minmax-fp32-rvv.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-4x4v-minmax-fp32-rvv.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("f32-vhswish_ppc64") {
+  cflags = [
+
+  ]
 
-  source_set("qs8-qc8w-gemm_riscv64") {
-    cflags = []
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vhswish/gen/f32-vhswish-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vhswish_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4-minmax-fp32-scalar-lrintf.c",
+      "src/src/f32-vhswish/gen/f32-vhswish-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50662,53 +59810,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-gemm_riscv64_standalone") {
-      cflags = []
+source_set("f32-vlog_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4-minmax-fp32-scalar-lrintf.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlog/gen/f32-vlog-scalar-rational-3-3-div.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-qc8w-igemm_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlog_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4v-minmax-fp32-rvv.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x4v-minmax-fp32-rvv.c",
+      "src/src/f32-vlog/gen/f32-vlog-scalar-rational-3-3-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50720,53 +59867,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-igemm_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4v-minmax-fp32-rvv.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-4x4v-minmax-fp32-rvv.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qs8-qc8w-igemm_riscv64") {
-    cflags = []
+source_set("f32-vlrelu_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vlrelu/gen/f32-vlrelu-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vlrelu_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4-minmax-fp32-scalar-lrintf.c",
-      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4-minmax-fp32-scalar-lrintf.c",
+      "src/src/f32-vlrelu/gen/f32-vlrelu-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50778,49 +59924,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qc8w-igemm_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4-minmax-fp32-scalar-lrintf.c",
-        "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4-minmax-fp32-scalar-lrintf.c",
-      ]
+source_set("f32-vmulcaddc_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c1-minmax-scalar-2x.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-qu8-packw_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vmulcaddc_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-scalar.c",
+      "src/src/f32-vmulcaddc/gen/f32-vmulcaddc-c1-minmax-scalar-2x.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50832,51 +59981,58 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-qu8-packw_riscv64_standalone") {
-      cflags = []
+source_set("f32-vrnd_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-scalar.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrnd/gen/f32-vrndd-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-scalar-libm-u1.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-rdsum_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrnd_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-rvv-u2v.c",
+      "src/src/f32-vrnd/gen/f32-vrndd-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndne-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndu-scalar-libm-u1.c",
+    "src/src/f32-vrnd/gen/f32-vrndz-scalar-libm-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50888,51 +60044,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-rdsum_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rdsum/gen/qs8-rdsum-7p7x-rvv-u2v.c",
-      ]
+source_set("f32-vrsqrt_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-rsqrt-u1.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-sqrt.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-rdsum_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vrsqrt_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rdsum/gen/qs8-rdsum-minmax-fp32-scalar-u1-acc1.c",
+      "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-rsqrt-u1.c",
+    "src/src/f32-vrsqrt/gen/f32-vrsqrt-scalar-sqrt.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -50944,51 +60103,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-rdsum_riscv64_standalone") {
-      cflags = []
+source_set("f32-vsigmoid_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rdsum/gen/qs8-rdsum-minmax-fp32-scalar-u1-acc1.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsigmoid/gen/f32-vsigmoid-scalar-rr2-lut64-p2-div-u2.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-rsum_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsigmoid_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rsum/gen/qs8-rsum-rvv-u2v.c",
+      "src/src/f32-vsigmoid/gen/f32-vsigmoid-scalar-rr2-lut64-p2-div-u2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51000,51 +60160,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-rsum_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rsum/gen/qs8-rsum-rvv-u2v.c",
-      ]
+source_set("f32-vsin_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsin/gen/f32-vsin-scalar-rational-5-4-div.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-rsum_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsin_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-rsum/gen/qs8-rsum-scalar-u4.c",
+      "src/src/f32-vsin/gen/f32-vsin-scalar-rational-5-4-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51056,51 +60217,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-rsum_riscv64_standalone") {
-      cflags = []
+source_set("f32-vsqrt_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-rsum/gen/qs8-rsum-scalar-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vsqrt/gen/f32-vsqrt-scalar-sqrt.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vadd_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vsqrt_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vadd/gen/qs8-vadd-minmax-rvv-u2v.c",
+      "src/src/f32-vsqrt/gen/f32-vsqrt-scalar-sqrt.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51112,52 +60274,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vadd_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vadd/gen/qs8-vadd-minmax-rvv-u2v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qs8-vadd_riscv64") {
-    cflags = []
+source_set("f32-vtanh_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vtanh/gen/f32-vtanh-scalar-rational-9-8-div.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vtanh_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u1.c",
-      "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u4.c",
+      "src/src/f32-vtanh/gen/f32-vtanh-scalar-rational-9-8-div.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51169,52 +60331,56 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vadd_riscv64_standalone") {
-      cflags = []
+source_set("f32-vunary_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u1.c",
-        "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/f32-vunary/gen/f32-vabs-scalar.c",
+    "src/src/f32-vunary/gen/f32-vneg-scalar.c",
+    "src/src/f32-vunary/gen/f32-vsqr-scalar.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vaddc_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("f32-vunary_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-rvv-u2v.c",
+      "src/src/f32-vunary/gen/f32-vabs-scalar.c",
+    "src/src/f32-vunary/gen/f32-vneg-scalar.c",
+    "src/src/f32-vunary/gen/f32-vsqr-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51226,52 +60392,92 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vaddc_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-rvv-u2v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("operators_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/operators/argmax-pooling-nhwc.c",
+    "src/src/operators/average-pooling-nhwc.c",
+    "src/src/operators/batch-matrix-multiply-nc.c",
+    "src/src/operators/binary-elementwise-nd.c",
+    "src/src/operators/constant-pad-nd.c",
+    "src/src/operators/convolution-nchw.c",
+    "src/src/operators/convolution-nhwc.c",
+    "src/src/operators/deconvolution-nhwc.c",
+    "src/src/operators/dynamic-fully-connected-nc.c",
+    "src/src/operators/fully-connected-nc.c",
+    "src/src/operators/max-pooling-nhwc.c",
+    "src/src/operators/pack-lh.c",
+    "src/src/operators/reduce-nd.c",
+    "src/src/operators/resize-bilinear-nchw.c",
+    "src/src/operators/resize-bilinear-nhwc.c",
+    "src/src/operators/rope-nthc.c",
+    "src/src/operators/slice-nd.c",
+    "src/src/operators/softmax-nc.c",
+    "src/src/operators/transpose-nd.c",
+    "src/src/operators/unary-elementwise-nc.c",
+    "src/src/operators/unpooling-nhwc.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vaddc_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("operators_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u1.c",
-      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u4.c",
+      "src/src/operators/argmax-pooling-nhwc.c",
+    "src/src/operators/average-pooling-nhwc.c",
+    "src/src/operators/batch-matrix-multiply-nc.c",
+    "src/src/operators/binary-elementwise-nd.c",
+    "src/src/operators/constant-pad-nd.c",
+    "src/src/operators/convolution-nchw.c",
+    "src/src/operators/convolution-nhwc.c",
+    "src/src/operators/deconvolution-nhwc.c",
+    "src/src/operators/dynamic-fully-connected-nc.c",
+    "src/src/operators/fully-connected-nc.c",
+    "src/src/operators/max-pooling-nhwc.c",
+    "src/src/operators/pack-lh.c",
+    "src/src/operators/reduce-nd.c",
+    "src/src/operators/resize-bilinear-nchw.c",
+    "src/src/operators/resize-bilinear-nhwc.c",
+    "src/src/operators/rope-nthc.c",
+    "src/src/operators/slice-nd.c",
+    "src/src/operators/softmax-nc.c",
+    "src/src/operators/transpose-nd.c",
+    "src/src/operators/unary-elementwise-nc.c",
+    "src/src/operators/unpooling-nhwc.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51283,49 +60489,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vaddc_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u1.c",
-        "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u4.c",
-      ]
+source_set("qd8-f32-qb4w-gemm_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4-minmax-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vcvt_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qb4w-gemm_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vcvt/gen/qs8-vcvt-scalar-u4.c",
+      "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qb4w-gemm/gen/qd8-f32-qb4w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51337,51 +60548,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vcvt_riscv64_standalone") {
-      cflags = []
+source_set("qd8-f32-qc4w-gemm_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vcvt/gen/qs8-vcvt-scalar-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4-minmax-scalar.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vlrelu_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc4w-gemm_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vlrelu/gen/qs8-vlrelu-rvv-u2v.c",
+      "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc4w-gemm/gen/qd8-f32-qc4w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51393,51 +60607,56 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vlrelu_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vlrelu/gen/qs8-vlrelu-rvv-u2v.c",
-      ]
+source_set("qd8-f32-qc8w-gemm_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x2-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4-minmax-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vlrelu_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-gemm_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vlrelu/gen/qs8-vlrelu-scalar-andxor-u4.c",
+      "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x2-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-gemm/gen/qd8-f32-qc8w-gemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51449,51 +60668,56 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vlrelu_riscv64_standalone") {
-      cflags = []
+source_set("qd8-f32-qc8w-igemm_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vlrelu/gen/qs8-vlrelu-scalar-andxor-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x2-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4-minmax-scalar.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vmul_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qd8-f32-qc8w-igemm_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vmul/gen/qs8-vmul-minmax-f32-rvv-u2v.c",
+      "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x2-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-1x4-minmax-scalar.c",
+    "src/src/qd8-f32-qc8w-igemm/gen/qd8-f32-qc8w-igemm-4x4-minmax-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51505,51 +60729,58 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vmul_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vmul/gen/qs8-vmul-minmax-f32-rvv-u2v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-dwconv_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vmul_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-dwconv_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-scalar-u4.c",
+      "src/src/qs8-dwconv/gen/qs8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-dwconv/gen/qs8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51561,51 +60792,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vmul_riscv64_standalone") {
-      cflags = []
+source_set("qs8-f32-vcvt_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-scalar-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-scalar-u4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qs8-vmulc_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-f32-vcvt_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-f32-rvv-u2v.c",
+      "src/src/qs8-f32-vcvt/gen/qs8-f32-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51617,51 +60849,58 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vmulc_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-f32-rvv-u2v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-packw_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-gio-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-goi-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-gio-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vmulc_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-packw_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-scalar-u4.c",
+      "src/src/qs8-packw/gen/qs8-packw-x16c8-gemm-goi-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-gio-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x4c8-gemm-goi-scalar.c",
+    "src/src/qs8-packw/gen/qs8-packw-x8c8-gemm-gio-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51673,48 +60912,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vmulc_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-scalar-u4.c",
-      ]
+source_set("qs8-qc4w-gemm_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc4w-gemm/qs8-qc4w-gemm-1x2-minmax-fp32-scalar-lrintf.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vprelu_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc4w-gemm_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vprelu/gen/qs8-vprelu-scalar-u8.c",
+      "src/src/qs8-qc4w-gemm/qs8-qc4w-gemm-1x2-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51726,48 +60969,62 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vprelu_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vprelu/gen/qs8-vprelu-scalar-u8.c",
-      ]
+source_set("qs8-qc8w-dwconv_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vpreluc_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-dwconv_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vpreluc/gen/qs8-vpreluc-scalar-u8.c",
+      "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-3p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qs8-qc8w-dwconv/gen/qs8-qc8w-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51779,48 +61036,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vpreluc_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vpreluc/gen/qs8-vpreluc-scalar-u8.c",
-      ]
+source_set("qs8-qc8w-gemm_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4-minmax-fp32-scalar-lrintf.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qs8-vrpreluc_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-gemm_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-scalar-u8.c",
+      "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-gemm/gen/qs8-qc8w-gemm-3x4-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51832,52 +61095,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qs8-vrpreluc_riscv64_standalone") {
-      cflags = []
+source_set("qs8-qc8w-igemm_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-scalar-u8.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4-minmax-fp32-scalar-lrintf.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-dwconv_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qc8w-igemm_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-25p8vc-minmax-fp32-rvv.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-9p8vc-minmax-fp32-rvv.c",
+      "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qs8-qc8w-igemm/gen/qs8-qc8w-igemm-3x4-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51889,55 +61154,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-dwconv_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-25p8vc-minmax-fp32-rvv.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-9p8vc-minmax-fp32-rvv.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-qu8-packw_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-dwconv_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-qu8-packw_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-      "src/src/qu8-dwconv/gen/qu8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
+      "src/src/qs8-qu8-packw/gen/qs8-qu8-packw-x16c8-gemm-goi-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -51949,54 +61211,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-dwconv_riscv64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
-        "src/src/qu8-dwconv/gen/qu8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-rdsum_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rdsum/gen/qs8-rdsum-minmax-fp32-scalar-u1-acc1.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-f32-vcvt_arch=rv64gcv-abi=lp64d") {
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rdsum_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-rvv-u2v.c",
+      "src/src/qs8-rdsum/gen/qs8-rdsum-minmax-fp32-scalar-u1-acc1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52008,51 +61268,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-f32-vcvt_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-rvv-u2v.c",
-      ]
+source_set("qs8-rsum_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-rsum/gen/qs8-rsum-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-f32-vcvt_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-rsum_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-scalar-u4.c",
+      "src/src/qs8-rsum/gen/qs8-rsum-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52064,49 +61325,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-f32-vcvt_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-scalar-u4.c",
-      ]
+source_set("qs8-vadd_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u1.c",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-gemm_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vadd_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-gemm/gen/qu8-gemm-1x4-minmax-fp32-scalar-lrintf.c",
-      "src/src/qu8-gemm/gen/qu8-gemm-3x4-minmax-fp32-scalar-lrintf.c",
+      "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u1.c",
+    "src/src/qs8-vadd/gen/qs8-vadd-minmax-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52118,50 +61384,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-gemm_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-gemm/gen/qu8-gemm-1x4-minmax-fp32-scalar-lrintf.c",
-        "src/src/qu8-gemm/gen/qu8-gemm-3x4-minmax-fp32-scalar-lrintf.c",
-      ]
+source_set("qs8-vaddc_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u1.c",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-igemm_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vaddc_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-igemm/gen/qu8-igemm-1x4-minmax-fp32-scalar-lrintf.c",
-      "src/src/qu8-igemm/gen/qu8-igemm-3x4-minmax-fp32-scalar-lrintf.c",
+      "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u1.c",
+    "src/src/qs8-vaddc/gen/qs8-vaddc-minmax-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52173,52 +61443,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-igemm_riscv64_standalone") {
-      cflags = []
+source_set("qs8-vcvt_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-igemm/gen/qu8-igemm-1x4-minmax-fp32-scalar-lrintf.c",
-        "src/src/qu8-igemm/gen/qu8-igemm-3x4-minmax-fp32-scalar-lrintf.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vcvt/gen/qs8-vcvt-scalar-u4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-rdsum_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vcvt_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-rvv-u2v.c",
+      "src/src/qs8-vcvt/gen/qs8-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52230,51 +61500,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-rdsum_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-rdsum/gen/qu8-rdsum-7p7x-rvv-u2v.c",
-      ]
+source_set("qs8-vlrelu_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vlrelu/gen/qs8-vlrelu-scalar-andxor-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-rdsum_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vlrelu_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-rdsum/gen/qu8-rdsum-scalar.c",
+      "src/src/qs8-vlrelu/gen/qs8-vlrelu-scalar-andxor-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52286,51 +61557,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-rdsum_riscv64_standalone") {
-      cflags = []
+source_set("qs8-vmul_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-rdsum/gen/qu8-rdsum-scalar.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-scalar-u4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-rsum_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmul_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-rsum/gen/qu8-rsum-rvv-u2v.c",
+      "src/src/qs8-vmul/gen/qs8-vmul-minmax-fp32-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52342,51 +61614,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-rsum_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-rsum/gen/qu8-rsum-rvv-u2v.c",
-      ]
+source_set("qs8-vmulc_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-rsum_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vmulc_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-rsum/gen/qu8-rsum-scalar-u4.c",
+      "src/src/qs8-vmulc/gen/qs8-vmulc-minmax-fp32-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52398,51 +61671,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-rsum_riscv64_standalone") {
-      cflags = []
+source_set("qs8-vprelu_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-rsum/gen/qu8-rsum-scalar-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vprelu/gen/qs8-vprelu-scalar-u8.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vadd_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vprelu_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vadd/gen/qu8-vadd-minmax-rvv-u2v.c",
+      "src/src/qs8-vprelu/gen/qs8-vprelu-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52454,52 +61728,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vadd_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vadd/gen/qu8-vadd-minmax-rvv-u2v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qs8-vpreluc_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vpreluc/gen/qs8-vpreluc-scalar-u8.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vadd_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vpreluc_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u1.c",
-      "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u4.c",
+      "src/src/qs8-vpreluc/gen/qs8-vpreluc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52511,52 +61785,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vadd_riscv64_standalone") {
-      cflags = []
+source_set("qs8-vrpreluc_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u1.c",
-        "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-scalar-u8.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vaddc_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qs8-vrpreluc_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-rvv-u2v.c",
+      "src/src/qs8-vrpreluc/gen/qs8-vrpreluc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52568,52 +61842,58 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vaddc_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-rvv-u2v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qu8-vaddc_riscv64") {
-    cflags = []
+source_set("qu8-dwconv_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-dwconv_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u1.c",
-      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u4.c",
+      "src/src/qu8-dwconv/gen/qu8-dwconv-25p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-25p2c-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p1c-minmax-fp32-scalar-fmagic.c",
+    "src/src/qu8-dwconv/gen/qu8-dwconv-9p2c-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52625,49 +61905,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vaddc_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u1.c",
-        "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u4.c",
-      ]
+source_set("qu8-f32-vcvt_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vcvt_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-f32-vcvt_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vcvt/gen/qu8-vcvt-scalar-u4.c",
+      "src/src/qu8-f32-vcvt/gen/qu8-f32-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52679,51 +61962,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vcvt_riscv64_standalone") {
-      cflags = []
+source_set("qu8-gemm_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vcvt/gen/qu8-vcvt-scalar-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-gemm/gen/qu8-gemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x4-minmax-fp32-scalar-lrintf.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vlrelu_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-gemm_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vlrelu/gen/qu8-vlrelu-rvv-u2v.c",
+      "src/src/qu8-gemm/gen/qu8-gemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-gemm/gen/qu8-gemm-3x4-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52735,51 +62021,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vlrelu_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vlrelu/gen/qu8-vlrelu-rvv-u2v.c",
-      ]
+source_set("qu8-igemm_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-igemm/gen/qu8-igemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x4-minmax-fp32-scalar-lrintf.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vlrelu_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-igemm_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vlrelu/gen/qu8-vlrelu-scalar-andxor-u4.c",
+      "src/src/qu8-igemm/gen/qu8-igemm-1x4-minmax-fp32-scalar-lrintf.c",
+    "src/src/qu8-igemm/gen/qu8-igemm-3x4-minmax-fp32-scalar-lrintf.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52791,51 +62080,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vlrelu_riscv64_standalone") {
-      cflags = []
+source_set("qu8-rdsum_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vlrelu/gen/qu8-vlrelu-scalar-andxor-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-rdsum/gen/qu8-rdsum-scalar.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vmul_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-rdsum_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vmul/gen/qu8-vmul-minmax-f32-rvv-u2v.c",
+      "src/src/qu8-rdsum/gen/qu8-rdsum-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52847,51 +62137,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vmul_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vmul/gen/qu8-vmul-minmax-f32-rvv-u2v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("qu8-vmul_riscv64") {
-    cflags = []
+source_set("qu8-rsum_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-rsum/gen/qu8-rsum-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-rsum_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-scalar-u4.c",
+      "src/src/qu8-rsum/gen/qu8-rsum-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52903,51 +62194,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vmul_riscv64_standalone") {
-      cflags = []
+source_set("qu8-vadd_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-scalar-u4.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u1.c",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u4.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("qu8-vmulc_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vadd_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-f32-rvv-u2v.c",
+      "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u1.c",
+    "src/src/qu8-vadd/gen/qu8-vadd-minmax-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -52959,51 +62253,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vmulc_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-f32-rvv-u2v.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("qu8-vaddc_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u1.c",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u4.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vmulc_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vaddc_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-scalar-u4.c",
+      "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u1.c",
+    "src/src/qu8-vaddc/gen/qu8-vaddc-minmax-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53015,48 +62312,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vmulc_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-scalar-u4.c",
-      ]
+source_set("qu8-vcvt_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vcvt/gen/qu8-vcvt-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vprelu_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vcvt_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vprelu/gen/qu8-vprelu-scalar-u8.c",
+      "src/src/qu8-vcvt/gen/qu8-vcvt-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53068,48 +62369,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vprelu_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vprelu/gen/qu8-vprelu-scalar-u8.c",
-      ]
+source_set("qu8-vlrelu_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vlrelu/gen/qu8-vlrelu-scalar-andxor-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vpreluc_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vlrelu_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vpreluc/gen/qu8-vpreluc-scalar-u8.c",
+      "src/src/qu8-vlrelu/gen/qu8-vlrelu-scalar-andxor-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53121,48 +62426,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vpreluc_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vpreluc/gen/qu8-vpreluc-scalar-u8.c",
-      ]
+source_set("qu8-vmul_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("qu8-vrpreluc_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmul_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-scalar-u8.c",
+      "src/src/qu8-vmul/gen/qu8-vmul-minmax-fp32-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53174,50 +62483,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("qu8-vrpreluc_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-scalar-u8.c",
-      ]
+source_set("qu8-vmulc_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("reference_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vmulc_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/reference/binary-elementwise.cc",
-      "src/src/reference/packing.cc",
-      "src/src/reference/unary-elementwise.cc",
+      "src/src/qu8-vmulc/gen/qu8-vmulc-minmax-fp32-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53229,50 +62540,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("reference_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/reference/binary-elementwise.cc",
-        "src/src/reference/packing.cc",
-        "src/src/reference/unary-elementwise.cc",
-      ]
+source_set("qu8-vprelu_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vprelu/gen/qu8-vprelu-scalar-u8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("s8-ibilinear_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vprelu_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-ibilinear/gen/s8-ibilinear-scalar-c1.c",
+      "src/src/qu8-vprelu/gen/qu8-vprelu-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53284,48 +62597,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-ibilinear_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-ibilinear/gen/s8-ibilinear-scalar-c1.c",
-      ]
+source_set("qu8-vpreluc_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vpreluc/gen/qu8-vpreluc-scalar-u8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("s8-maxpool_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vpreluc_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-scalar-u1.c",
+      "src/src/qu8-vpreluc/gen/qu8-vpreluc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53337,49 +62654,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-maxpool_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-scalar-u1.c",
-      ]
+source_set("qu8-vrpreluc_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-scalar-u8.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("s8-rdminmax_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("qu8-vrpreluc_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-scalar-c2.c",
-      "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-scalar-c2.c",
+      "src/src/qu8-vrpreluc/gen/qu8-vrpreluc-scalar-u8.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53391,51 +62711,56 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-rdminmax_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-scalar-c2.c",
-        "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-scalar-c2.c",
-      ]
+source_set("reference_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/reference/binary-elementwise.cc",
+    "src/src/reference/packing.cc",
+    "src/src/reference/unary-elementwise.cc"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("s8-rminmax_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("reference_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-rminmax/gen/s8-rmax-scalar-u2-acc2.c",
-      "src/src/s8-rminmax/gen/s8-rmin-scalar-u2-acc2.c",
-      "src/src/s8-rminmax/gen/s8-rminmax-scalar-u2-acc2.c",
+      "src/src/reference/binary-elementwise.cc",
+    "src/src/reference/packing.cc",
+    "src/src/reference/unary-elementwise.cc"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53447,53 +62772,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-rminmax_riscv64_standalone") {
-      cflags = []
+source_set("s8-ibilinear_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-rminmax/gen/s8-rmax-scalar-u2-acc2.c",
-        "src/src/s8-rminmax/gen/s8-rmin-scalar-u2-acc2.c",
-        "src/src/s8-rminmax/gen/s8-rminmax-scalar-u2-acc2.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-ibilinear/gen/s8-ibilinear-scalar-c1.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("s8-vclamp_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-ibilinear_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-vclamp/gen/s8-vclamp-rvv-u4v.c",
+      "src/src/s8-ibilinear/gen/s8-ibilinear-scalar-c1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53505,51 +62829,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-vclamp_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-vclamp/gen/s8-vclamp-rvv-u4v.c",
-      ]
+source_set("s8-maxpool_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-scalar-u1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("s8-vclamp_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-maxpool_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/s8-vclamp/s8-vclamp-scalar-u4.c",
+      "src/src/s8-maxpool/gen/s8-maxpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53561,76 +62886,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("s8-vclamp_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/s8-vclamp/s8-vclamp-scalar-u4.c",
-      ]
+source_set("s8-rdminmax_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-scalar-c2.c",
+    "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-scalar-c2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("subgraph_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-rdminmax_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/subgraph/argmax-pooling-2d.c",
-      "src/src/subgraph/average-pooling-2d.c",
-      "src/src/subgraph/batch-matrix-multiply.c",
-      "src/src/subgraph/binary.c",
-      "src/src/subgraph/concatenate.c",
-      "src/src/subgraph/convolution-2d.c",
-      "src/src/subgraph/copy.c",
-      "src/src/subgraph/deconvolution-2d.c",
-      "src/src/subgraph/deprecated.c",
-      "src/src/subgraph/depth-to-space-2d.c",
-      "src/src/subgraph/depthwise-convolution-2d.c",
-      "src/src/subgraph/even-split.c",
-      "src/src/subgraph/fully-connected-sparse.c",
-      "src/src/subgraph/fully-connected.c",
-      "src/src/subgraph/max-pooling-2d.c",
-      "src/src/subgraph/pack-lh.c",
-      "src/src/subgraph/reshape-helpers.c",
-      "src/src/subgraph/rope.c",
-      "src/src/subgraph/softmax.c",
-      "src/src/subgraph/space-to-depth-2d.c",
-      "src/src/subgraph/static-constant-pad.c",
-      "src/src/subgraph/static-reduce.c",
-      "src/src/subgraph/static-resize-bilinear-2d.c",
-      "src/src/subgraph/static-slice.c",
-      "src/src/subgraph/static-transpose.c",
-      "src/src/subgraph/subgraph-utils.c",
-      "src/src/subgraph/unary.c",
-      "src/src/subgraph/unpooling-2d.c",
-      "src/src/subgraph/validation.c",
+      "src/src/s8-rdminmax/gen/s8-rdmax-2p2x-scalar-c2.c",
+    "src/src/s8-rdminmax/gen/s8-rdmin-2p2x-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53642,84 +62945,56 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("subgraph_riscv64_standalone") {
-      cflags = []
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/subgraph/argmax-pooling-2d.c",
-        "src/src/subgraph/average-pooling-2d.c",
-        "src/src/subgraph/batch-matrix-multiply.c",
-        "src/src/subgraph/binary.c",
-        "src/src/subgraph/concatenate.c",
-        "src/src/subgraph/convolution-2d.c",
-        "src/src/subgraph/copy.c",
-        "src/src/subgraph/deconvolution-2d.c",
-        "src/src/subgraph/deprecated.c",
-        "src/src/subgraph/depth-to-space-2d.c",
-        "src/src/subgraph/depthwise-convolution-2d.c",
-        "src/src/subgraph/even-split.c",
-        "src/src/subgraph/fully-connected-sparse.c",
-        "src/src/subgraph/fully-connected.c",
-        "src/src/subgraph/max-pooling-2d.c",
-        "src/src/subgraph/pack-lh.c",
-        "src/src/subgraph/reshape-helpers.c",
-        "src/src/subgraph/rope.c",
-        "src/src/subgraph/softmax.c",
-        "src/src/subgraph/space-to-depth-2d.c",
-        "src/src/subgraph/static-constant-pad.c",
-        "src/src/subgraph/static-reduce.c",
-        "src/src/subgraph/static-resize-bilinear-2d.c",
-        "src/src/subgraph/static-slice.c",
-        "src/src/subgraph/static-transpose.c",
-        "src/src/subgraph/subgraph-utils.c",
-        "src/src/subgraph/unary.c",
-        "src/src/subgraph/unpooling-2d.c",
-        "src/src/subgraph/validation.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("s8-rminmax_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-rminmax/gen/s8-rmax-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rmin-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rminmax-scalar-u2-acc2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("tables_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-rminmax_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/tables/exp2-k-over-2048.c",
-      "src/src/tables/exp2-k-over-64.c",
-      "src/src/tables/exp2minus-k-over-16.c",
-      "src/src/tables/exp2minus-k-over-2048.c",
-      "src/src/tables/exp2minus-k-over-32.c",
-      "src/src/tables/exp2minus-k-over-4.c",
-      "src/src/tables/exp2minus-k-over-64.c",
-      "src/src/tables/exp2minus-k-over-8.c",
-      "src/src/tables/vlog.c",
+      "src/src/s8-rminmax/gen/s8-rmax-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rmin-scalar-u2-acc2.c",
+    "src/src/s8-rminmax/gen/s8-rminmax-scalar-u2-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53731,56 +63006,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("tables_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/tables/exp2-k-over-2048.c",
-        "src/src/tables/exp2-k-over-64.c",
-        "src/src/tables/exp2minus-k-over-16.c",
-        "src/src/tables/exp2minus-k-over-2048.c",
-        "src/src/tables/exp2minus-k-over-32.c",
-        "src/src/tables/exp2minus-k-over-4.c",
-        "src/src/tables/exp2minus-k-over-64.c",
-        "src/src/tables/exp2minus-k-over-8.c",
-        "src/src/tables/vlog.c",
-      ]
+source_set("s8-vclamp_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/s8-vclamp/s8-vclamp-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("u8-ibilinear_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("s8-vclamp_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-ibilinear/gen/u8-ibilinear-scalar-c1.c",
+      "src/src/s8-vclamp/s8-vclamp-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53792,48 +63063,108 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-ibilinear_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-ibilinear/gen/u8-ibilinear-scalar-c1.c",
-      ]
+source_set("subgraph_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/subgraph/argmax-pooling-2d.c",
+    "src/src/subgraph/average-pooling-2d.c",
+    "src/src/subgraph/batch-matrix-multiply.c",
+    "src/src/subgraph/binary.c",
+    "src/src/subgraph/concatenate.c",
+    "src/src/subgraph/convolution-2d.c",
+    "src/src/subgraph/copy.c",
+    "src/src/subgraph/deconvolution-2d.c",
+    "src/src/subgraph/deprecated.c",
+    "src/src/subgraph/depth-to-space-2d.c",
+    "src/src/subgraph/depthwise-convolution-2d.c",
+    "src/src/subgraph/even-split.c",
+    "src/src/subgraph/fully-connected-sparse.c",
+    "src/src/subgraph/fully-connected.c",
+    "src/src/subgraph/max-pooling-2d.c",
+    "src/src/subgraph/pack-lh.c",
+    "src/src/subgraph/reshape-helpers.c",
+    "src/src/subgraph/rope.c",
+    "src/src/subgraph/softmax.c",
+    "src/src/subgraph/space-to-depth-2d.c",
+    "src/src/subgraph/static-constant-pad.c",
+    "src/src/subgraph/static-reduce.c",
+    "src/src/subgraph/static-resize-bilinear-2d.c",
+    "src/src/subgraph/static-slice.c",
+    "src/src/subgraph/static-transpose.c",
+    "src/src/subgraph/subgraph-utils.c",
+    "src/src/subgraph/unary.c",
+    "src/src/subgraph/unpooling-2d.c",
+    "src/src/subgraph/validation.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("u8-lut32norm_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("subgraph_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-lut32norm/u8-lut32norm-scalar.c",
+      "src/src/subgraph/argmax-pooling-2d.c",
+    "src/src/subgraph/average-pooling-2d.c",
+    "src/src/subgraph/batch-matrix-multiply.c",
+    "src/src/subgraph/binary.c",
+    "src/src/subgraph/concatenate.c",
+    "src/src/subgraph/convolution-2d.c",
+    "src/src/subgraph/copy.c",
+    "src/src/subgraph/deconvolution-2d.c",
+    "src/src/subgraph/deprecated.c",
+    "src/src/subgraph/depth-to-space-2d.c",
+    "src/src/subgraph/depthwise-convolution-2d.c",
+    "src/src/subgraph/even-split.c",
+    "src/src/subgraph/fully-connected-sparse.c",
+    "src/src/subgraph/fully-connected.c",
+    "src/src/subgraph/max-pooling-2d.c",
+    "src/src/subgraph/pack-lh.c",
+    "src/src/subgraph/reshape-helpers.c",
+    "src/src/subgraph/rope.c",
+    "src/src/subgraph/softmax.c",
+    "src/src/subgraph/space-to-depth-2d.c",
+    "src/src/subgraph/static-constant-pad.c",
+    "src/src/subgraph/static-reduce.c",
+    "src/src/subgraph/static-resize-bilinear-2d.c",
+    "src/src/subgraph/static-slice.c",
+    "src/src/subgraph/static-transpose.c",
+    "src/src/subgraph/subgraph-utils.c",
+    "src/src/subgraph/unary.c",
+    "src/src/subgraph/unpooling-2d.c",
+    "src/src/subgraph/validation.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53845,48 +63176,68 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-lut32norm_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-lut32norm/u8-lut32norm-scalar.c",
-      ]
+source_set("tables_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/tables/exp2-k-over-2048.c",
+    "src/src/tables/exp2-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-16.c",
+    "src/src/tables/exp2minus-k-over-2048.c",
+    "src/src/tables/exp2minus-k-over-32.c",
+    "src/src/tables/exp2minus-k-over-4.c",
+    "src/src/tables/exp2minus-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-8.c",
+    "src/src/tables/vlog.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("u8-maxpool_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("tables_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-scalar-u1.c",
+      "src/src/tables/exp2-k-over-2048.c",
+    "src/src/tables/exp2-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-16.c",
+    "src/src/tables/exp2minus-k-over-2048.c",
+    "src/src/tables/exp2minus-k-over-32.c",
+    "src/src/tables/exp2minus-k-over-4.c",
+    "src/src/tables/exp2minus-k-over-64.c",
+    "src/src/tables/exp2minus-k-over-8.c",
+    "src/src/tables/vlog.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53898,49 +63249,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-maxpool_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-scalar-u1.c",
-      ]
+source_set("u8-ibilinear_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-ibilinear/gen/u8-ibilinear-scalar-c1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("u8-rdminmax_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-ibilinear_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-scalar-c2.c",
-      "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-scalar-c2.c",
+      "src/src/u8-ibilinear/gen/u8-ibilinear-scalar-c1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -53952,51 +63306,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-rdminmax_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-scalar-c2.c",
-        "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-scalar-c2.c",
-      ]
+source_set("u8-lut32norm_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-lut32norm/u8-lut32norm-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("u8-rminmax_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-lut32norm_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-rminmax/gen/u8-rmax-scalar-u2-acc2.c",
-      "src/src/u8-rminmax/gen/u8-rmin-scalar-u2-acc2.c",
-      "src/src/u8-rminmax/gen/u8-rminmax-scalar-u2-acc2.c",
+      "src/src/u8-lut32norm/u8-lut32norm-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54008,53 +63363,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-rminmax_riscv64_standalone") {
-      cflags = []
+source_set("u8-maxpool_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-rminmax/gen/u8-rmax-scalar-u2-acc2.c",
-        "src/src/u8-rminmax/gen/u8-rmin-scalar-u2-acc2.c",
-        "src/src/u8-rminmax/gen/u8-rminmax-scalar-u2-acc2.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-scalar-u1.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("u8-vclamp_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-maxpool_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-vclamp/gen/u8-vclamp-rvv-u4v.c",
+      "src/src/u8-maxpool/gen/u8-maxpool-9p-minmax-scalar-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54066,51 +63420,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-vclamp_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-vclamp/gen/u8-vclamp-rvv-u4v.c",
-      ]
+source_set("u8-rdminmax_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-scalar-c2.c",
+    "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-scalar-c2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("u8-vclamp_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-rdminmax_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/u8-vclamp/u8-vclamp-scalar-u4.c",
+      "src/src/u8-rdminmax/gen/u8-rdmax-2p2x-scalar-c2.c",
+    "src/src/u8-rdminmax/gen/u8-rdmin-2p2x-scalar-c2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54122,48 +63479,56 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("u8-vclamp_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/u8-vclamp/u8-vclamp-scalar-u4.c",
-      ]
+source_set("u8-rminmax_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-rminmax/gen/u8-rmax-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rmin-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rminmax-scalar-u2-acc2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x16-transposec_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-rminmax_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x16-transposec/gen/x16-transposec-2x4-scalar-int.c",
+      "src/src/u8-rminmax/gen/u8-rmax-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rmin-scalar-u2-acc2.c",
+    "src/src/u8-rminmax/gen/u8-rminmax-scalar-u2-acc2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54175,49 +63540,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x16-transposec_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x16-transposec/gen/x16-transposec-2x4-scalar-int.c",
-      ]
+source_set("u8-vclamp_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/u8-vclamp/u8-vclamp-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x16-x32-packw_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("u8-vclamp_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-gio-scalar.c",
-      "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-goi-scalar.c",
+      "src/src/u8-vclamp/u8-vclamp-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54229,49 +63597,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x16-x32-packw_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-gio-scalar.c",
-        "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-goi-scalar.c",
-      ]
+source_set("x16-transposec_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x16-transposec/gen/x16-transposec-2x4-scalar-int.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x24-transposec_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x16-transposec_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x24-transposec/gen/x24-transposec-1x2-scalar.c",
+      "src/src/x16-transposec/gen/x16-transposec-2x4-scalar-int.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54283,51 +63654,54 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
   }
+}
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x24-transposec_riscv64_standalone") {
-      cflags = []
+source_set("x16-x32-packw_ppc64") {
+  cflags = [
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x24-transposec/gen/x24-transposec-1x2-scalar.c",
-      ]
+  ]
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-gio-scalar.c",
+    "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-goi-scalar.c"
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
-  source_set("x32-packw_arch=rv64gcv-abi=lp64d") {
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x16-x32-packw_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x32-packw/gen/x32-packw-x4v-gemm-goi-rvv-u8.c",
+      "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-gio-scalar.c",
+    "src/src/x16-x32-packw/gen/x16-x32-packw-x32c2-gemm-goi-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54339,56 +63713,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-packw_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-packw/gen/x32-packw-x4v-gemm-goi-rvv-u8.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
 
-  source_set("x32-packw_riscv64") {
-    cflags = []
+source_set("x24-transposec_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x24-transposec/gen/x24-transposec-1x2-scalar.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x24-transposec_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x32-packw/gen/x32-packw-x2-gemm-gio-scalar.c",
-      "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-scalar-float-u4.c",
-      "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-scalar-int-u2.c",
-      "src/src/x32-packw/gen/x32-packw-x4-gemm-gio-scalar.c",
-      "src/src/x32-packw/gen/x32-packw-x4-gemm-goi-scalar-float-u4.c",
-      "src/src/x32-packw/gen/x32-packw-x64-gemm-goi-scalar-int-u2.c",
+      "src/src/x24-transposec/gen/x24-transposec-1x2-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54400,59 +63770,62 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-packw_riscv64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-packw/gen/x32-packw-x2-gemm-gio-scalar.c",
-        "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-scalar-float-u4.c",
-        "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-scalar-int-u2.c",
-        "src/src/x32-packw/gen/x32-packw-x4-gemm-gio-scalar.c",
-        "src/src/x32-packw/gen/x32-packw-x4-gemm-goi-scalar-float-u4.c",
-        "src/src/x32-packw/gen/x32-packw-x64-gemm-goi-scalar-int-u2.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x32-packw_ppc64") {
+  cflags = [
+
+  ]
 
-  source_set("x32-transposec_arch=rv64gcv-abi=lp64d") {
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-scalar-int-u2.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x64-gemm-goi-scalar-int-u2.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
+
+  public_configs = [ ":xnnpack_public_config" ]
+}
+
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-packw_ppc64_standalone") {
     cflags = [
-      "-mabi=lp64d",
-      "-march=rv64gcv",
+  
     ]
-
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x32-transposec/gen/x32-transposec-16x8-rvv.c",
-      "src/src/x32-transposec/gen/x32-transposec-32x8-rvv.c",
-      "src/src/x32-transposec/gen/x32-transposec-4x4-rvv.c",
-      "src/src/x32-transposec/gen/x32-transposec-8x8-rvv.c",
+      "src/src/x32-packw/gen/x32-packw-x2-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x2-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x32-gemm-goi-scalar-int-u2.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-gio-scalar.c",
+    "src/src/x32-packw/gen/x32-packw-x4-gemm-goi-scalar-float-u4.c",
+    "src/src/x32-packw/gen/x32-packw-x64-gemm-goi-scalar-int-u2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54464,54 +63837,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-transposec_arch=rv64gcv-abi=lp64d_standalone") {
-      cflags = [
-        "-mabi=lp64d",
-        "-march=rv64gcv",
-      ]
-
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-transposec/gen/x32-transposec-16x8-rvv.c",
-        "src/src/x32-transposec/gen/x32-transposec-32x8-rvv.c",
-        "src/src/x32-transposec/gen/x32-transposec-4x4-rvv.c",
-        "src/src/x32-transposec/gen/x32-transposec-8x8-rvv.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
+}
+
+source_set("x32-transposec_ppc64") {
+  cflags = [
+
+  ]
+
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-transposec/gen/x32-transposec-2x4-scalar-int.c"
+  ]
+
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
+
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x32-transposec_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-transposec_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x32-transposec/gen/x32-transposec-2x4-scalar-int.c",
+      "src/src/x32-transposec/gen/x32-transposec-2x4-scalar-int.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54523,48 +63894,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-transposec_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-transposec/gen/x32-transposec-2x4-scalar-int.c",
-      ]
+source_set("x32-unpool_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x32-unpool/x32-unpool-scalar.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x32-unpool_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x32-unpool_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x32-unpool/x32-unpool-scalar.c",
+      "src/src/x32-unpool/x32-unpool-scalar.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54576,48 +63951,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x32-unpool_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x32-unpool/x32-unpool-scalar.c",
-      ]
+source_set("x64-transposec_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x64-transposec/gen/x64-transposec-4x2-scalar-int.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x64-transposec_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x64-transposec_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x64-transposec/gen/x64-transposec-4x2-scalar-int.c",
+      "src/src/x64-transposec/gen/x64-transposec-4x2-scalar-int.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54629,48 +64008,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x64-transposec_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x64-transposec/gen/x64-transposec-4x2-scalar-int.c",
-      ]
+source_set("x8-lut_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-lut/gen/x8-lut-scalar-u4.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x8-lut_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-lut_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-lut/gen/x8-lut-scalar-u4.c",
+      "src/src/x8-lut/gen/x8-lut-scalar-u4.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54682,48 +64065,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-lut_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-lut/gen/x8-lut-scalar-u4.c",
-      ]
+source_set("x8-packq_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-packq/x8-packq-scalar-f32qp8-u1.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x8-packq_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-packq_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-packq/x8-packq-scalar-f32qp8-u1.c",
+      "src/src/x8-packq/x8-packq-scalar-f32qp8-u1.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54735,51 +64122,58 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-packq_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-packq/x8-packq-scalar-f32qp8-u1.c",
-      ]
+source_set("x8-packw_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-packw/gen/x8-packw-x16-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x32-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x4-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x8-gemm-goi-scalar-u2.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x8-packw_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-packw_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
       "src/src/x8-packw/gen/x8-packw-x16-gemm-goi-scalar-u2.c",
-      "src/src/x8-packw/gen/x8-packw-x32-gemm-goi-scalar-u2.c",
-      "src/src/x8-packw/gen/x8-packw-x4-gemm-goi-scalar-u2.c",
-      "src/src/x8-packw/gen/x8-packw-x8-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x32-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x4-gemm-goi-scalar-u2.c",
+    "src/src/x8-packw/gen/x8-packw-x8-gemm-goi-scalar-u2.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54791,51 +64185,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-packw_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-packw/gen/x8-packw-x16-gemm-goi-scalar-u2.c",
-        "src/src/x8-packw/gen/x8-packw-x32-gemm-goi-scalar-u2.c",
-        "src/src/x8-packw/gen/x8-packw-x4-gemm-goi-scalar-u2.c",
-        "src/src/x8-packw/gen/x8-packw-x8-gemm-goi-scalar-u2.c",
-      ]
+source_set("x8-transposec_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/x8-transposec/gen/x8-transposec-2x4-scalar-int.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("x8-transposec_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("x8-transposec_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/x8-transposec/gen/x8-transposec-2x4-scalar-int.c",
+      "src/src/x8-transposec/gen/x8-transposec-2x4-scalar-int.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54847,48 +64242,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("x8-transposec_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/x8-transposec/gen/x8-transposec-2x4-scalar-int.c",
-      ]
+source_set("xx-copy_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-copy/xx-copy-scalar-memcpy.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("xx-copy_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-copy_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/xx-copy/xx-copy-scalar-memcpy.c",
+      "src/src/xx-copy/xx-copy-scalar-memcpy.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54900,48 +64299,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("xx-copy_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/xx-copy/xx-copy-scalar-memcpy.c",
-      ]
+source_set("xx-fill_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-fill/xx-fill-scalar-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("xx-fill_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-fill_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/xx-fill/xx-fill-scalar-u16.c",
+      "src/src/xx-fill/xx-fill-scalar-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -54953,48 +64356,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("xx-fill_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/xx-fill/xx-fill-scalar-u16.c",
-      ]
+source_set("xx-pad_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-pad/xx-pad-p4-scalar-u16.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("xx-pad_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-pad_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/xx-pad/xx-pad-p4-scalar-u16.c",
+      "src/src/xx-pad/xx-pad-p4-scalar-u16.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -55006,48 +64413,52 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
 
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("xx-pad_riscv64_standalone") {
-      cflags = []
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/xx-pad/xx-pad-p4-scalar-u16.c",
-      ]
+source_set("xx-transposev_ppc64") {
+  cflags = [
 
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
+  ]
 
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
+  sources = [
+    "src/include/xnnpack.h",
+    "src/src/xx-transposev/xx-transposev-1x1-scalar-memcpy.c"
+  ]
 
-      public_configs = [ ":xnnpack_public_config" ]
+  configs -= [ "//build/config/compiler:chromium_code" ]
+  configs += [ "//build/config/compiler:no_chromium_code" ]
+  configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+  configs += [ ":xnnpack_private_config" ]
 
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
-    }
-  }
+  deps = [
+    "//third_party/cpuinfo",
+    "//third_party/fp16",
+    "//third_party/fxdiv",
+    "//third_party/pthreadpool",
+  ]
 
-  source_set("xx-transposev_riscv64") {
-    cflags = []
+  public_configs = [ ":xnnpack_public_config" ]
+}
 
+# This is a target that cannot depend on //base.
+if (build_with_internal_optimization_guide) {
+  source_set("xx-transposev_ppc64_standalone") {
+    cflags = [
+  
+    ]
+  
     sources = [
       "src/include/xnnpack.h",
-      "src/src/xx-transposev/xx-transposev-1x1-scalar-memcpy.c",
+      "src/src/xx-transposev/xx-transposev-1x1-scalar-memcpy.c"
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
@@ -55059,39 +64470,15 @@ if (current_cpu == "riscv64") {
       "//third_party/cpuinfo",
       "//third_party/fp16",
       "//third_party/fxdiv",
-      "//third_party/pthreadpool",
+      "//third_party/pthreadpool:pthreadpool_standalone",
     ]
 
     public_configs = [ ":xnnpack_public_config" ]
-  }
-
-  # This is a target that cannot depend on //base.
-  if (build_with_internal_optimization_guide) {
-    source_set("xx-transposev_riscv64_standalone") {
-      cflags = []
 
-      sources = [
-        "src/include/xnnpack.h",
-        "src/src/xx-transposev/xx-transposev-1x1-scalar-memcpy.c",
-      ]
-
-      configs -= [ "//build/config/compiler:chromium_code" ]
-      configs += [ "//build/config/compiler:no_chromium_code" ]
-      configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
-      configs += [ ":xnnpack_private_config" ]
-
-      deps = [
-        "//third_party/cpuinfo",
-        "//third_party/fp16",
-        "//third_party/fxdiv",
-        "//third_party/pthreadpool:pthreadpool_standalone",
-      ]
-
-      public_configs = [ ":xnnpack_public_config" ]
-
-      if (!(is_android && use_order_profiling)) {
-        assert_no_deps = [ "//base" ]
-      }
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
     }
   }
 }
+
+}
