Index: chromium-79.0.3941.4/chrome/common/media_router/media_sink.cc
===================================================================
--- chromium-79.0.3941.4.orig/chrome/common/media_router/media_sink.cc
+++ chromium-79.0.3941.4/chrome/common/media_router/media_sink.cc
@@ -19,12 +19,12 @@ MediaSink::MediaSink(const MediaSink::Id
       provider_id_(provider_id) {}
 
 MediaSink::MediaSink(const MediaSink& other) = default;
-MediaSink::MediaSink(MediaSink&& other) noexcept = default;
+MediaSink::MediaSink(MediaSink&& other) = default;
 MediaSink::MediaSink() = default;
 MediaSink::~MediaSink() = default;
 
 MediaSink& MediaSink::operator=(const MediaSink& other) = default;
-MediaSink& MediaSink::operator=(MediaSink&& other) noexcept = default;
+MediaSink& MediaSink::operator=(MediaSink&& other) = default;
 
 bool MediaSink::IsMaybeCloudSink() const {
   switch (icon_type_) {
Index: chromium-79.0.3941.4/components/history/core/browser/history_types.cc
===================================================================
--- chromium-79.0.3941.4.orig/components/history/core/browser/history_types.cc
+++ chromium-79.0.3941.4/components/history/core/browser/history_types.cc
@@ -42,7 +42,7 @@ QueryResults::QueryResults(QueryResults&
   Swap(&other);
 }
 
-QueryResults& QueryResults::operator=(QueryResults&& other) noexcept {
+QueryResults& QueryResults::operator=(QueryResults&& other) {
   Swap(&other);
   return *this;
 }
@@ -186,7 +186,7 @@ QueryURLResult::QueryURLResult(QueryURLR
 
 QueryURLResult& QueryURLResult::operator=(const QueryURLResult&) = default;
 
-QueryURLResult& QueryURLResult::operator=(QueryURLResult&&) noexcept = default;
+QueryURLResult& QueryURLResult::operator=(QueryURLResult&&) = default;
 
 // MostVisitedURL --------------------------------------------------------------
 
Index: chromium-79.0.3941.4/components/history/core/browser/history_types.h
===================================================================
--- chromium-79.0.3941.4.orig/components/history/core/browser/history_types.h
+++ chromium-79.0.3941.4/components/history/core/browser/history_types.h
@@ -141,7 +141,7 @@ class QueryResults {
   ~QueryResults();
 
   QueryResults(QueryResults&& other) noexcept;
-  QueryResults& operator=(QueryResults&& other) noexcept;
+  QueryResults& operator=(QueryResults&& other);
 
   void set_reached_beginning(bool reached) { reached_beginning_ = reached; }
   bool reached_beginning() { return reached_beginning_; }
@@ -276,7 +276,7 @@ struct QueryURLResult {
   QueryURLResult(const QueryURLResult&);
   QueryURLResult(QueryURLResult&&) noexcept;
   QueryURLResult& operator=(const QueryURLResult&);
-  QueryURLResult& operator=(QueryURLResult&&) noexcept;
+  QueryURLResult& operator=(QueryURLResult&&);
   ~QueryURLResult();
 
   // Indicates whether the call to HistoryBackend::QueryURL was successfull
Index: chromium-79.0.3941.4/components/history/core/browser/url_row.cc
===================================================================
--- chromium-79.0.3941.4.orig/components/history/core/browser/url_row.cc
+++ chromium-79.0.3941.4/components/history/core/browser/url_row.cc
@@ -26,7 +26,7 @@ URLRow::~URLRow() {
 }
 
 URLRow& URLRow::operator=(const URLRow& other) = default;
-URLRow& URLRow::operator=(URLRow&& other) noexcept = default;
+URLRow& URLRow::operator=(URLRow&& other) = default;
 
 void URLRow::Swap(URLRow* other) {
   std::swap(id_, other->id_);
Index: chromium-79.0.3941.4/components/omnibox/browser/suggestion_answer.cc
===================================================================
--- chromium-79.0.3941.4.orig/components/omnibox/browser/suggestion_answer.cc
+++ chromium-79.0.3941.4/components/omnibox/browser/suggestion_answer.cc
@@ -60,7 +60,7 @@ SuggestionAnswer::TextField::TextField(T
 SuggestionAnswer::TextField& SuggestionAnswer::TextField::operator=(
     const TextField&) = default;
 SuggestionAnswer::TextField& SuggestionAnswer::TextField::operator=(
-    TextField&&) noexcept = default;
+    TextField&&) = default;
 
 // static
 bool SuggestionAnswer::TextField::ParseTextField(const base::Value& field_json,
Index: chromium-79.0.3941.4/components/policy/core/common/policy_map.cc
===================================================================
--- chromium-79.0.3941.4.orig/components/policy/core/common/policy_map.cc
+++ chromium-79.0.3941.4/components/policy/core/common/policy_map.cc
@@ -52,7 +52,7 @@ PolicyMap::Entry::Entry(
 PolicyMap::Entry::~Entry() = default;
 
 PolicyMap::Entry::Entry(Entry&&) noexcept = default;
-PolicyMap::Entry& PolicyMap::Entry::operator=(Entry&&) noexcept = default;
+PolicyMap::Entry& PolicyMap::Entry::operator=(Entry&&) = default;
 
 PolicyMap::Entry PolicyMap::Entry::DeepCopy() const {
   Entry copy(level, scope, source, value ? value->CreateDeepCopy() : nullptr,
Index: chromium-79.0.3941.4/components/search_provider_logos/logo_common.cc
===================================================================
--- chromium-79.0.3941.4.orig/components/search_provider_logos/logo_common.cc
+++ chromium-79.0.3941.4/components/search_provider_logos/logo_common.cc
@@ -14,14 +14,14 @@ LogoMetadata::LogoMetadata() = default;
 LogoMetadata::LogoMetadata(const LogoMetadata&) = default;
 LogoMetadata::LogoMetadata(LogoMetadata&&) noexcept = default;
 LogoMetadata& LogoMetadata::operator=(const LogoMetadata&) = default;
-LogoMetadata& LogoMetadata::operator=(LogoMetadata&&) noexcept = default;
+LogoMetadata& LogoMetadata::operator=(LogoMetadata&&) = default;
 LogoMetadata::~LogoMetadata() = default;
 
 EncodedLogo::EncodedLogo() = default;
 EncodedLogo::EncodedLogo(const EncodedLogo&) = default;
 EncodedLogo::EncodedLogo(EncodedLogo&&) noexcept = default;
 EncodedLogo& EncodedLogo::operator=(const EncodedLogo&) = default;
-EncodedLogo& EncodedLogo::operator=(EncodedLogo&&) noexcept = default;
+EncodedLogo& EncodedLogo::operator=(EncodedLogo&&) = default;
 EncodedLogo::~EncodedLogo() = default;
 
 Logo::Logo() = default;
@@ -29,7 +29,7 @@ Logo::~Logo() = default;
 
 LogoCallbacks::LogoCallbacks() = default;
 LogoCallbacks::LogoCallbacks(LogoCallbacks&&) noexcept = default;
-LogoCallbacks& LogoCallbacks::operator=(LogoCallbacks&&) noexcept = default;
+LogoCallbacks& LogoCallbacks::operator=(LogoCallbacks&&) = default;
 LogoCallbacks::~LogoCallbacks() = default;
 
 }  // namespace search_provider_logos
Index: chromium-79.0.3941.4/components/signin/public/identity_manager/account_info.cc
===================================================================
--- chromium-79.0.3941.4.orig/components/signin/public/identity_manager/account_info.cc
+++ chromium-79.0.3941.4/components/signin/public/identity_manager/account_info.cc
@@ -58,7 +58,7 @@ CoreAccountInfo::CoreAccountInfo(CoreAcc
 CoreAccountInfo& CoreAccountInfo::operator=(const CoreAccountInfo& other) =
     default;
 
-CoreAccountInfo& CoreAccountInfo::operator=(CoreAccountInfo&& other) noexcept =
+CoreAccountInfo& CoreAccountInfo::operator=(CoreAccountInfo&& other) =
     default;
 
 bool CoreAccountInfo::IsEmpty() const {
@@ -75,7 +75,7 @@ AccountInfo::AccountInfo(AccountInfo&& o
 
 AccountInfo& AccountInfo::operator=(const AccountInfo& other) = default;
 
-AccountInfo& AccountInfo::operator=(AccountInfo&& other) noexcept = default;
+AccountInfo& AccountInfo::operator=(AccountInfo&& other) = default;
 
 bool AccountInfo::IsEmpty() const {
   return CoreAccountInfo::IsEmpty() && hosted_domain.empty() &&
Index: chromium-79.0.3941.4/google_apis/gaia/core_account_id.cc
===================================================================
--- chromium-79.0.3941.4.orig/google_apis/gaia/core_account_id.cc
+++ chromium-79.0.3941.4/google_apis/gaia/core_account_id.cc
@@ -14,7 +14,7 @@ CoreAccountId::~CoreAccountId() = defaul
 
 CoreAccountId& CoreAccountId::operator=(const CoreAccountId&) = default;
 
-CoreAccountId& CoreAccountId::operator=(CoreAccountId&&) noexcept = default;
+CoreAccountId& CoreAccountId::operator=(CoreAccountId&&) = default;
 
 CoreAccountId::CoreAccountId(const char* id) : id(id) {}
 
Index: chromium-79.0.3941.4/google_apis/gaia/core_account_id.h
===================================================================
--- chromium-79.0.3941.4.orig/google_apis/gaia/core_account_id.h
+++ chromium-79.0.3941.4/google_apis/gaia/core_account_id.h
@@ -20,7 +20,7 @@ struct CoreAccountId {
   ~CoreAccountId();
 
   CoreAccountId& operator=(const CoreAccountId&);
-  CoreAccountId& operator=(CoreAccountId&&) noexcept;
+  CoreAccountId& operator=(CoreAccountId&&);
 
   // Those implicit constructor and conversion operator allow to
   // progressively migrate the code to use this struct. Removing
Index: chromium-79.0.3941.4/gpu/config/gpu_info.cc
===================================================================
--- chromium-79.0.3941.4.orig/gpu/config/gpu_info.cc
+++ chromium-79.0.3941.4/gpu/config/gpu_info.cc
@@ -173,7 +173,7 @@ GPUInfo::GPUDevice& GPUInfo::GPUDevice::
     const GPUInfo::GPUDevice& other) = default;
 
 GPUInfo::GPUDevice& GPUInfo::GPUDevice::operator=(
-    GPUInfo::GPUDevice&& other) noexcept = default;
+    GPUInfo::GPUDevice&& other) = default;
 
 GPUInfo::GPUInfo()
     : optimus(false),
Index: chromium-79.0.3941.4/third_party/openscreen/src/osp/public/service_info.h
===================================================================
--- chromium-79.0.3941.4.orig/third_party/openscreen/src/osp/public/service_info.h
+++ chromium-79.0.3941.4/third_party/openscreen/src/osp/public/service_info.h
@@ -21,7 +21,7 @@ struct ServiceInfo {
   ServiceInfo(ServiceInfo&&) MAYBE_NOEXCEPT = default;
   ServiceInfo(const ServiceInfo&) MAYBE_NOEXCEPT = default;
 
-  ServiceInfo& operator=(ServiceInfo&&) MAYBE_NOEXCEPT = default;
+  ServiceInfo& operator=(ServiceInfo&&) = default;
   ServiceInfo& operator=(const ServiceInfo&) MAYBE_NOEXCEPT = default;
 
   bool operator==(const ServiceInfo& other) const;
