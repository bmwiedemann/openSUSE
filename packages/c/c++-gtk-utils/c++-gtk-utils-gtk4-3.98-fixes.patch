commit 3589475a9da1d2bdd7e450617c5ecb0673ed9e8b
Author: Chris Vine <cvine@users.sourceforge.net>
Date:   Fri Feb 14 22:59:52 2020 +0000

    Add fixes for gtk-3.98.0

Index: c++-gtk-utils-2.2.19/ChangeLog
===================================================================
--- c++-gtk-utils-2.2.19.orig/ChangeLog
+++ c++-gtk-utils-2.2.19/ChangeLog
@@ -1,3 +1,11 @@
+In sourceforge git
+------------------
+
+	Add fixes for gtk-3.98.0 and gtk-3.98.1 (file_print_manager.cpp,
+	text_print_manager.cpp, window.h, window.cpp;
+	tests/extra/test_file_print_manager.cpp,
+	tests/extra/test_text_print_manager.cpp).
+
 Version 2.2.19 (27 January 2020)
 --------------
 
Index: c++-gtk-utils-2.2.19/c++-gtk-utils/file_print_manager.cpp
===================================================================
--- c++-gtk-utils-2.2.19.orig/c++-gtk-utils/file_print_manager.cpp
+++ c++-gtk-utils-2.2.19/c++-gtk-utils/file_print_manager.cpp
@@ -86,16 +86,14 @@ FilePrintDialog::FilePrintDialog(GtkWind
 					    true, parent_p,
 					    (GtkWindow*)gtk_print_unix_dialog_new(0, 0)) {
 
-#if GTK_CHECK_VERSION(3,94,0)
-  gtk_window_set_type_hint(get_win(), GDK_SURFACE_TYPE_HINT_DIALOG);
-#else
+#if !(GTK_CHECK_VERSION(3,94,0))
   gtk_window_set_type_hint(get_win(), GDK_WINDOW_TYPE_HINT_DIALOG);
+  gtk_window_set_position(get_win(), GTK_WIN_POS_CENTER_ON_PARENT);
 #endif
 
   g_signal_connect((GObject*)get_win(), "response",
 		   G_CALLBACK(cgu_fpd_selected), this);
 
-  gtk_window_set_position(get_win(), GTK_WIN_POS_CENTER_ON_PARENT);
   gtk_window_set_resizable(get_win(), false);
 
   if (print_settings_p) {
Index: c++-gtk-utils-2.2.19/c++-gtk-utils/window.cpp
===================================================================
--- c++-gtk-utils-2.2.19.orig/c++-gtk-utils/window.cpp
+++ c++-gtk-utils-2.2.19/c++-gtk-utils/window.cpp
@@ -24,14 +24,17 @@ License as follows:
 
 #include <c++-gtk-utils/lib_defs.h>
 
-#include <glib.h>
-
 #include <c++-gtk-utils/window.h>
 #include <c++-gtk-utils/application.h>
 #include <c++-gtk-utils/thread.h>
 
 #ifdef CGU_USE_GTK
 
+// with GTK >= 3.98.0 we include glib.h in window.h
+#if !(GTK_CHECK_VERSION(3,98,0))
+#include <glib.h>
+#endif
+
 namespace Cgu {
 class WinBase::CB {
 public:
@@ -101,7 +104,11 @@ WinBase::WinBase(const char* caption, Gd
 #endif
 		 GtkWindow* parent_p_, GtkWindow* window_p):
 			     in_exec_loop(false), is_modal(modal),
-			     close_guard(false), parent_p(parent_p_) {
+			     close_guard(false), parent_p(parent_p_)
+#if GTK_CHECK_VERSION(3,98,0)
+		             , loop(0)
+#endif
+{
 
 #if GTK_CHECK_VERSION(2,99,0)
   app_p = 0;
@@ -109,7 +116,11 @@ WinBase::WinBase(const char* caption, Gd
 
   if (window_p) g_window_p = window_p;
   else {
+#if GTK_CHECK_VERSION(3,98,1)
+    g_window_p = (GtkWindow*)gtk_window_new();
+#else
     g_window_p = (GtkWindow*)gtk_window_new(GTK_WINDOW_TOPLEVEL);
+#endif
   }
   
   if (caption) gtk_window_set_title(g_window_p, caption);
@@ -151,8 +162,11 @@ WinBase::~WinBase() {
   // one of its callbacks so hoping to destroy itself by going out of scope but
   // has caused this WinBase object to unblock instead - this further call to
   // gtk_main_quit() will balance up the recursive calls to gtk_main() to ensure
-  // that both the parent and this object are unblocked and so destroyed)
+  // that both the parent and this object are unblocked and so destroyed).  This
+  // shouldn't happen with GTK4.
+#if !(GTK_CHECK_VERSION(3,98,0))
   if (in_exec_loop) gtk_main_quit();
+#endif
 }
 
 int WinBase::get_exec_val() const {
@@ -176,7 +190,11 @@ void WinBase::close() {
   gtk_widget_hide(GTK_WIDGET(g_window_p));
   if (in_exec_loop) {
     in_exec_loop = false;
+#if GTK_CHECK_VERSION(3,98,0)
+    g_main_loop_quit(loop);
+#else
     gtk_main_quit();
+#endif
   }
   // if we have not called exec(), then the dialog is self-owning
   // and it is safe and necessary to call 'delete this'
@@ -203,7 +221,14 @@ int WinBase::exec() {
 #endif
 
   in_exec_loop = true;
+#if GTK_CHECK_VERSION(3,98,0)
+  loop = g_main_loop_new(0, false);
+  g_main_loop_run(loop);
+  g_main_loop_unref(loop);
+  loop = 0;
+#else
   gtk_main();
+#endif
   return get_exec_val();
 }
 
Index: c++-gtk-utils-2.2.19/c++-gtk-utils/window.h
===================================================================
--- c++-gtk-utils-2.2.19.orig/c++-gtk-utils/window.h
+++ c++-gtk-utils-2.2.19/c++-gtk-utils/window.h
@@ -29,6 +29,9 @@ License as follows:
 
 #ifdef CGU_USE_GTK
 #include <gtk/gtk.h>
+#if GTK_CHECK_VERSION(3,98,0)
+#include <glib.h> // for GMainLoop
+#endif
 #endif
 
 /** 
@@ -241,6 +244,10 @@ class WinBase {
   void unset_application() {app_p = 0;}
 #endif
 
+#if GTK_CHECK_VERSION(3,98,0)
+  GMainLoop* loop;
+#endif
+
 protected:
   /**
    * A function for the use of derived classes which will cause the
Index: c++-gtk-utils-2.2.19/c++-gtk-utils/text_print_manager.cpp
===================================================================
--- c++-gtk-utils-2.2.19.orig/c++-gtk-utils/text_print_manager.cpp
+++ c++-gtk-utils-2.2.19/c++-gtk-utils/text_print_manager.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2007, 2011, 2013 and 2017 to 2019 Chris Vine
+/* Copyright (C) 2007, 2011, 2013 and 2017 to 2020 Chris Vine
 
 The library comprised in this file or of which this file is part is
 distributed by Chris Vine under the GNU Lesser General Public
@@ -611,7 +611,10 @@ GObject* TextPrintManager::create_custom
   GtkGrid* grid_p = (GtkGrid*)gtk_grid_new();
   g_object_set(grid_p,
 	       "valign", GTK_ALIGN_CENTER,
-	       "margin", 12,
+	       "margin-top", 15,
+	       "margin-bottom", 15,
+	       "margin-start", 15,
+	       "margin-end", 15,
 	       static_cast<void*>(0));
   gtk_grid_attach(grid_p, font_label_p, 0, 0, 1, 1);
   gtk_grid_attach(grid_p, font_entry_h, 1, 0, 1, 1);
Index: c++-gtk-utils-2.2.19/tests/extra/test_file_print_manager.cpp
===================================================================
--- c++-gtk-utils-2.2.19.orig/tests/extra/test_file_print_manager.cpp
+++ c++-gtk-utils-2.2.19/tests/extra/test_file_print_manager.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2012, 2017 and 2018 Chris Vine
+/* Copyright (C) 2012, 2017, 2018 and 2020 Chris Vine
 
 The library comprised in this file or of which this file is part is
 distributed by Chris Vine under the GNU Lesser General Public
@@ -57,7 +57,12 @@ void message_button_clicked(GtkWidget* w
 ProgWin::ProgWin(): WinBase{"Print test", 0, false} {
 #if GTK_CHECK_VERSION(3,96,0)
   GtkWidget* box = gtk_box_new(GTK_ORIENTATION_VERTICAL, 2);
-  g_object_set(box, "margin", 5, static_cast<void*>(0));
+  g_object_set(box,
+	       "margin-bottom", 5,
+	       "margin-top", 5,
+	       "margin-start", 5,
+	       "margin-end", 5,
+	       static_cast<void*>(0));
   gtk_container_add(GTK_CONTAINER(get_win()), box);
   GtkWidget* label = gtk_label_new("Print test page?");
   gtk_widget_set_vexpand(label, true);
Index: c++-gtk-utils-2.2.19/tests/extra/test_text_print_manager.cpp
===================================================================
--- c++-gtk-utils-2.2.19.orig/tests/extra/test_text_print_manager.cpp
+++ c++-gtk-utils-2.2.19/tests/extra/test_text_print_manager.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2012, 2013, 2017 and 2018 Chris Vine
+/* Copyright (C) 2012, 2013, 2017, 2018 and 2020 Chris Vine
 
 The library comprised in this file or of which this file is part is
 distributed by Chris Vine under the GNU Lesser General Public
@@ -62,7 +62,12 @@ void message_button_clicked(GtkWidget* w
 ProgWin::ProgWin(): WinBase{"Print test", 0, false} {
 #if GTK_CHECK_VERSION(3,96,0)
   GtkWidget* box = gtk_box_new(GTK_ORIENTATION_VERTICAL, 2);
-  g_object_set(box, "margin", 5, static_cast<void*>(0));
+  g_object_set(box,
+	       "margin-bottom", 5,
+	       "margin-top", 5,
+	       "margin-start", 5,
+	       "margin-end", 5,
+	       static_cast<void*>(0));
   gtk_container_add(GTK_CONTAINER(get_win()), box);
 
   GtkWidget* label = gtk_label_new("Print test page?");
