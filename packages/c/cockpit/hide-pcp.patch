Index: cockpit/pkg/metrics/metrics.jsx
===================================================================
--- cockpit.orig/pkg/metrics/metrics.jsx
+++ cockpit/pkg/metrics/metrics.jsx
@@ -1565,6 +1565,7 @@ const PCPConfig = ({ buttonVariant, firewalldRequest, needsLogout, setNeedsLogou
 
     return (
         <Button variant={buttonVariant} icon={<CogIcon />}
+                className="pf-u-display-none"
                 isDisabled={ invalidService(s_pmlogger) || invalidService(s_pmproxy) ||
                              invalidService(s_redis) || invalidService(s_redis_server) || invalidService(s_valkey) }
                 onClick={show_dialog}>
Index: cockpit-309/pkg/metrics/metrics.jsx
===================================================================
--- cockpit-309.orig/pkg/metrics/metrics.jsx
+++ cockpit-309/pkg/metrics/metrics.jsx
@@ -1824,7 +1825,8 @@ class MetricsHistory extends React.Component {
         // on a single machine, cockpit-pcp depends on pcp; but this may not be the case in the beiboot scenario,
         // so additionally check if pcp is available on the logged in target machine
         if ((cockpit.manifests && !cockpit.manifests.pcp) || this.pmlogger_service.exists === false)
-            return <EmptyStatePanel
+            return <EmptyStatePanel />
+/*            return <EmptyStatePanel
                         icon={ExclamationCircleIcon}
                         title={_("Package cockpit-pcp is missing for metrics history")}
                         action={this.state.isBeibootBridge === true
@@ -1834,6 +1834,7 @@ class MetricsHistory extends React.Component {
                             ? <Text>{ _("Installation not supported without installed cockpit package") }</Text>
                             : this.state.packagekitExists && <Button onClick={this.handleInstall}>{_("Install cockpit-pcp")}</Button>}
             />;
+*/
 
         if (!this.state.metricsAvailable) {
             let action;
