-------------------------------------------------------------------
Tue Apr 22 08:55:11 UTC 2025 - Atri Bhattacharya <badshah400@gmail.com>

- Update to version 4.6.2:
  * Updated autotools configure script to use AM_MAINTAINER_MODE;
    disables automatic regeneration of the build system unless
    configure is invoked with '--enable-maintainer-mode'
- Changes from version 4.6.1:
  * Updated CMake configuration to use GNUInstallDirs module and
    to use CMAKE_INSTALL_LIBDIR and CMAKE_INSTALL_INCLUDEDIR;
    fixes bug in 4.6.0 that led to an empty 'includedir' in
    cfitsio.pc.
- Changes from version 4.6.0:
  * Improved the empty primary data test performed in
    fits_open_file.
  * Correction to eval_defs.h typedefs to allow for compilation on
    old gcc compilers.
  * The fitsverify utility tool now distinguishes between
    alternate coordinate systems when testing positions of WCSAXES
    keywords.
  * Updates made for greater C23 compatibility as required for
    gcc-15.
  * Possible memory vulnerabilities patched.
  * Fix to a possible heap buffer overflow in a utility tool.
  * Negative size parameter vulnerability patched in utility tool.
- Drop cfitsio-nullptr.patch: incorporated upstream.
- Drop cfitsio-cmake-devel-scripts-destination.patch: fixed
  upstream (also fixes boo#1236985).

-------------------------------------------------------------------
Mon Apr  7 13:18:25 UTC 2025 - Friedrich Haubensak <hsk17@mail.de>

- add cfitsio-nullptr.patch to fix gcc15 compile time error

-------------------------------------------------------------------
Fri Mar 21 01:44:59 UTC 2025 - Shawn Dunn <sfalken@opensuse.org>

- Add -DCMAKE_POLICY_VERSION_MINIMUM=3.5 to fix FTBFS on cmake4

-------------------------------------------------------------------
Fri Dec 20 06:07:43 UTC 2024 - Atri Bhattacharya <badshah400@gmail.com>

- Update to version 4.5.0:
  * Conversion of CFITSIO configure/build files to better conform
    with automake and libtool.
  * Bug fix for case of bit column output in string format on
    clang compilers with high optimization.
  * Added compiler macro support to improve builds on loongarch64
    and on Gnu/Hurd kernels.
  * Bug fix to fitsverify utility.
- Drop upstreamed patches:
  * cfitsio-cmake-allow-user-specified-incdir.patch
  * cfitsio-cmake-lowercase-util-names.patch
  * cfitsio-cmake-match-autotools-soversion.patch

-------------------------------------------------------------------
Thu Jun 13 09:33:38 UTC 2024 - Atri Bhattacharya <badshah400@gmail.com>

- Update to version 4.4.0:
  * Reorganization of helper utility code; added fitsverify
  * CMakeLists.txt: Changed install location of
    cfitsio-targets.cmake to conform with the one listed in
    cfitsio-config.cmake.in (i.e.  including the extra "cfitsio"
    subdir of lib/cmake).
  * calculator functions that read GTIs do more correct validity
    checking of GTI input files
  * fits_insert_rows now works if input table starts with both no
    rows and no columns
  * Can now write internal memory files of size > 2^32 directly to
    a gzip-compressed output file.
  * Added support for unsigned long long types to fits_update_key.
  * Added ability for Windows builds to handle UTF-8 needed for
    reading filenames with non-ASCII characters.
  * Added 2-byte int test to speed.c utility.
  * Made fix to http file handler to expand the allowed URL
    length.
- Change License tag to NASA-1.3 in keeping with upstream.
- Switch to cmake+ninja for build.
- Switch BuildRequires to pkgconfig based packages where possible.
- Add a bunch of cmake build related patches to make the output
  close to that generated by autotools:
  * cfitsio-cmake-devel-scripts-destination.patch: Fix destination of
    pkgconfig and cmake scripts from /usr/lib to %{_libdir}.
  * cfitsio-cmake-allow-user-specified-incdir.patch: Allow specifying
    user-defined include dir into which to install header files.
  * cfitsio-cmake-lowercase-util-names.patch: Use lowercase
    names for utility binaries when building using cmake (same as
    autotools)
  * cfitsio-cmake-match-autotools-soversion.patch: Same so
    number as used in configure.in.

-------------------------------------------------------------------
Sat Jan  6 08:43:42 UTC 2024 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to version 4.3.1:
  * Improve longstring keyword functions

-------------------------------------------------------------------
Wed Jul 26 16:00:20 UTC 2023 - Atri Bhattacharya <badshah400@gmail.com>

- Update to version 4.3.0:
  * Bug fix to fits_make_hist[d] that was introduced in 4.2.0.
  * Added overflow checking for case of reading images with 8-byte
    float values into 4-byte float arrays.
  * fits_write_key_longstr now handles case of writing a long
    keyword in combination with a long keyword value string.
  * Add conversion of French locale comma-to-period in corner
    cases appearing in ffr2e and ffd2e functions.
  * Increased the precision when writing version number to
    User-Agent strings for http connections.  This is needed to
    fully conform to 3-field version string format.
  * Bug fix to GTIOVERLAP() calculator function, which was being
    treated as a boolean value in expressions, and is now
    correctly treated as a floating point result.
  * Bug fix to ARRAY() calculator function, which caused a memory
    overflow error
  * Enhancement to the ARRAY function, such that ARRAY(V,d) can
    apply new dimensions to V, as long as the total number of
    array/vector elements does not change.
  * Enhancement of long string keyword read/write functions to
    fully conform with FITS standard specifications for multi-line
    value and comment strings. Two new functions have been added
    to implement this: fits_get_key_com_strlen and
    fits_read_string_key_com.
- Make doc package noarch.

-------------------------------------------------------------------
Sun Dec 11 21:51:12 UTC 2022 - Stefan Brüns <stefan.bruens@rwth-aachen.de>

- Update to version 4.2.0:
  - This release includes patches to security vulnerabilities.
    We strongly encourage this upgrade, particularly for those
    running CFITSIO in web accessible applications.
  - Fix to fits_read_key function, which was failing to properly
    read keywords declared type TUINT on compilers where
    sizeof(int) = sizeof(long).
  - Added new functions fits_read_cols and fits_write_cols to
    efficiently read or write multiple columns in a single
    function call
  - Added new function fits_copy_selrows to copy only selected
    rows, such as the selected rows returned by fits_find_rows
  - Added new calculator functions ERF(X), ERFC(X) and GAMMA(X),
    which are mathematical special functions of the same name
  - Added new calculator function GTIFIND() which reports which
    GTI row brackets a given time sample
  - Added new calculator functions which operate upon vector table
    values NAXIS(V), NAXES(V,n), ELEMENTNUM(V) and AXISELEM(V,n),
    and ARRAY(X,d) which promotes scalar X to a vector or array
    with given dimensions.
  - The CFITSIO histogramming code now handles binning by any
    arbitrary calculator expression rather than just a column name.
    Both the binned columns as well as the optional weights may be
    calculator expressions, enclosed in parentheses. 
  - Binning of vector columns or expressions is now supported, as
    long as all binned inputs (as well as the optional weighting)
    have the same vector dimensions. Binning of variable-length
    columns remains unsupported.
  - A bug that caused histogram weights from columns that are null
    values to be tallied along with non-null values has been fixed.
  - The CFITSIO calculator and histogramming functionality is now
    fully reentrant and does not require multithreading interlocks.
  - A long-standing segmentation fault bug in the histogramming
    code related to binning any value using the "reciprocal" /XXXX
    notation has been fixed.
  - Added mutex locks for thread safety in ftgiou and ftfiou.
  - Added several Fortran wrappers to support image read/write when
    'fpixel' and 'nelements' are 8-byte integers.
  - Fixed bug which was adding spaces to some cases of long string
    key value output.
- Enable SSE2 on x86_64
- Package fitscopy util
- Enable bzip2 support

-------------------------------------------------------------------
Tue Mar 29 20:54:35 UTC 2022 - Asterios Dramis <asterios.dramis@gmail.com>

- Update to version 4.1.0:
  * Calls to the zlib inflate() function in zcompress.c now handle
    the Z_BUF_ERROR return value rather than exiting.
  * The SUBTRACTIVE_DITHER_2 option has been removed when using the
    HCOMPRESS algorithm.
  * Updated fits_get_version function to return a float calculated
    from 3 version fields.
  * Added handling of SBYTE_IMG and ULONGLONG_IMG types to the
    fits_resize_img function.
  * Updates made to C/Fortran interfacing in cfortran.h and
    f77_wrap.h specifically driven by new Mac/ARM architecture.
  * Fix to the fits_insert_col functions to handle columns with
    TULONGLONG data.

-------------------------------------------------------------------
Sun Aug  1 19:48:35 UTC 2021 - Asterios Dramis <asterios.dramis@gmail.com>

- Update to version 4.0.0:
  - Removed separate directory for zlib/gzip code, and updated
    configuration to check for zlib on the user's system
    (required). When use of cURL is enabled, it may also pull in
    zlib such that user applications may not need to link with it
    separately.
  - Changed version numbering to 3-field format.
  - Added new calculator functions SETNULL(x,y) to allow
    substitution of NULL values into tables, and GTIOVERLAP() for
    calculating the amount of GTI overlap exposure for a time bin.
  - Fix added for proper handling of string columns with zero
    repeat count.
  - Fix to column filtering expressions which write #NULL values to
    columns of type (J) format.
  - Fix to memory clearing when using polygon shapes in region
    files.
  - Fix to fits_str2time function so that it now flags a particular
    case of bad syntax which was previously getting through.
  - In ffgclb and ffpclb (read/write byte columns), the
    "undocumented" feature of being able to transfer columns 'A'
    string columnss as byte arrays is now handled correctly, with
    improved error checking via updates to ffgcprll.  More
    documentation on string handling is in cfitsio.tex.
  - Fix bug in 'colfilter' functionality.  When performing a
    column deletion of the form -COLNAM*, and multiple matches
    existed, then none of the matches got deleted.  Now the
    first is deleted as expected.
  - Improved handling of corner case in ffpkn functions.
  - In ffgky, modified TULONG case to allow it to read unsigned
    values greater than the 8-byte signed limit.
  - Fix to parsing of corner case of extended file syntax.
  - Major updates to CMake configuration.
- Removed cfitsio-zlib.patch (not needed anynore).

-------------------------------------------------------------------
Sun Aug 16 17:37:19 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- update to 3.490:
  - Fix to imcompress.c.  It now turns off quantization if ZSCALE
    and ZZERO columns are missing.  Treatment will be the same as
    if ZQUANTIZ were set to 'NONE', even if ZQUANTIZ is present
    and set to something else.
  - Added mutex to fits_execute_template() function so that the
    creation of files using ASCII templates will be thread safe.
  - In fpack when using -table flag, replaced warning message with a
    more detailed description mentioning FITS format update.
  - Added flag to CMake builds to disable curl dependency.  Also
    only add CURL_LIBRARIES to CMake link target if curl is found.
  - Minor adjustment to download progress output.

-------------------------------------------------------------------
Mon Jul  6 13:36:45 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update to version 3.480:
  * Now can handle parentheses in path names rather than
    automatically interpreting them as output file specifiers.  
  * Fixed bug in imcompress.c that wasn't properly handling
    conversion between float and double types when reading from a
    gzip compressed float or double image.  
  * Fixed bug that was preventing use of bracket and parentheses
    symbols in pathnames when opening multiple READWRITE files,
    even when requesting no-extended-syntax usage. *This fix
    necessitates a library interface version number change.    
  * Fixed bug in ffmnhd / fits_movnam_hdu to properly handle
    wildcard syntax.
  * Fixed bug in fits_open_extlist to handle filename[EXT] syntax
    properly.  The hdutype parameter may now be null.  More
    documentaion for this function is in cfitsio.tex.
  * Added new function fits_copy_hdutab to create a new table with
    the same structure as an existing table.
  * fits_copy_col / ffcpcl handles long long integer data types
    more natively to prevent precision loss.
  * histo.c routines now recognize integer columns that have been
    scaled by TSCALn keywords and may be closer to floating point
    type.                
  * Added backward compatibility for very old Rice compressed files
    which were not using the ZVAL2 keyword in the way that later
    became standard.
  * Change made to cfitsio.pc.in to prevent forcing downstream
    libraries to link against cfitsio's dependencies when using
    pkgconfig. 

-------------------------------------------------------------------
Sat Oct  5 19:54:42 UTC 2019 - Asterios Dramis <asterios.dramis@gmail.com>

- Update to version 3.470:
  * Added set of drivers for performing ftps file transfers.
  * Tile sizes for compression may now be specified for any pair of
    axes, where previously 2D tiles where limited to just X and y.
  * Fix to ffgsky and ffgkls functions for case of keyword with
    long string values where the final CONTINUE statement ended
    with '&'. If the final CONTINUE also contained a comment, it
    was being repeated twice when passed back through the 'comm'
    argument.
  * Fix made to ffedit_columns() for case of multiple col filters
    containing wildcards.  Only the first filter was being
    searched.
  * fits_copy_rows (ffcprw) can now handle 'P'-type variable-length
    columns.
  * Fix made to an obscure case in fits_modify_vector_len, where a
    wrongly issued EOF error may occur.
  * Added internal fffvcl() function.
  From version 3.460 (Ftools release):
  * Improved the algorithm for ensuring no tile dimensions are
    smaller than 4 pixels for HCOMPRESS compression.
  * Added new functions intended to assist in diagnosing (primarily
    https) download issues: fits_show_download_progress,
    fits_get_timeout, fits_set_timeout.
  * Added the '-O <file>' option to fpack, which previously existed
    only for funpack.  Also added fpack/funpack auto-removal of
    .bz2 suffix equivalent to what existed for .gz.
  * For the fpack '-table' cases, warning message is now sent to
    stderr instead of stdout.  This is to allow users to pipe the
    results from stdout in valid FITS format.  (The warning message
    is otherwise placed at the start of the FITS file and therefore
    corrupts it.)
  * Fix made to the '-P' file prefix option in funpack.
  * Added wildcard deletion syntax for columns, i.e. -COLNAM* will
    delete the first matching column as always; -COLNAM*+ will
    delete all matching columns (or none); exact symmetry with the
    keyword deletion syntax.
- Rebased cfitsio-zlib.patch to apply cleanly.

-------------------------------------------------------------------
Sat Dec  1 20:50:19 UTC 2018 - Asterios Dramis <asterios.dramis@gmail.com>

- Update to version 3.450:
  * New support for reading and writing unsigned long long
    datatypes. This includes 'implicit datatype conversion' between
    the unsigned long long datatype and all the other datatypes.
  * Increased the hardcoded NMAXFILES setting for maximum number of
    open files from 1000 to 10000.
  * Bug fix to fits_calc_binning wrapper function, which wasn't
    filling in the returned float variables.
  * Fixed a parsing bug for image subsection and column binning
    range specifiers that was introduced in v3.44.

-------------------------------------------------------------------
Mon Apr 16 19:19:15 UTC 2018 - asterios.dramis@gmail.com

- Update to version 3.440:
  * This release primarily patches security vulnerabilities.  We
    strongly encourage this upgrade, particularly for those running
    CFITSIO in web accessible applications.
  * Enhancement to 'template' and 'colfilter' functionality.  It is
    now possible to delete multiple keywords using wildcard syntax.
    See "Column and Keyword Filtering Specification" section of
    manual for details.
  * histo.c uses double precision internally for all floating point
    binning; new double-precision subroutines fits_calc_binningd(),
    fits_rebin_wcsd(), and fits_make_histd(); existing
    single-precision histogram functions still work but convert
    values to double-precision internally.
  * new subroutine fits_copy_cols() / ffccls() to copy multiple
    columns
  * Fix in imcompress.c for HCOMPRESS and PLIO compression of
    unsigned short integers.
  * Fix to fits_insert_card(ffikey).  It had wrongly been
    capitalizing letters that appeared before an '=' sign on a
    CONTINUE line.
- Rebased cfitsio-zlib.patch to apply cleanly.

-------------------------------------------------------------------
Wed Apr 11 20:43:09 UTC 2018 - asterios.dramis@gmail.com

- Update to version 3.430:
  * Fixed security vulnerabilities (bsc#1088590, CVE-2018-1000166).
  * Calls to https driver functions in cfileio.c need to be macro-
    protected by the HAVE_NET_SERVICES variable (as are the http
    and ftp driver function calls).  Otherwise CMake builds on
    native Windows will fail since drvrnet.o is left empty.
  * Bug fix to ffmvec function.  Should be resetting a local colptr
    variable after making a call to ffiblk (which can reallocate
    Ftpr->tableptr).
  * Ignore any attempted request to not quantize an image before
    compressing it if the image has integer datatype pixels.
  * Improved error message construction throughout CFITSIO.
- Package licence file as license, not doc (boo#1082318).

-------------------------------------------------------------------
Thu Feb  8 19:38:09 UTC 2018 - asterios.dramis@gmail.com

- Update to version 3.420:
  * added https support to the collection of drivers handled in
    cfileio.c and drvrnet.c.  This also handles the case where http
    transfers are rerouted to https.  Note that this enhancement
    introduces a dependency on the libcurl development package.  If
    this package is absent, CFITSIO will still build but will not
    have https capability.
  * made fix to imcomp_init_table function in imcompress.c.  It now
    writes ZSIMPLE keyword only to a compressed image that will be
    placed in the primary header.
  * fix made to fits_get_col_display_width for case of a vector
    column of strings.
  * in ftp_open_network and in ftp_file_exist, added code to
    repeatedly attempt to make a ftp connection if the ftp server
    does not respond to the first request. (some ftp servers don't
    appear to be 100% reliable).
  * in drvrnet.c added many calls to 'fclose' to close unneeded
    files, to avoid exceeding the maximum allowed number of files
    that can be open at once.
  * made substantial changes to the ftp_checkfile and
    http_checkfile routines to streamline the process of checking
    for the existence of a .gz or .Z compressed version of the file
    before opening the uncompressed file (when using http or ftp to
    open the file).
  * modified the code in ftp_open_network to send "\r\n" as
    end-of-line characters instead of just "\n".  Some ftp servers
    (in particular, at heasarc.gsfc.nasa.gov) now require both
    characters, otherwise the network connection simply hangs.
  * modified the http_open_network routine to handle HTTP 301 or
    302 redirects to a FTP url.  This is needed to support the new
    configuration on the heasarc HTTP server which sometimes
    redirects http URLS to a ftp URL.
- Added new build requirement libcurl-devel.

-------------------------------------------------------------------
Tue Feb 28 20:56:46 UTC 2017 - asterios.dramis@gmail.com

- Update to version 3.410:
  * The change made in version 3.40 to include strings.h caused
    problems on Windows (and other) platforms, so this change was
    backed out. The reason for including it was to define the
    strcasecmp and strcasencmp functions, so as an alternative, new
    equivalent functions called fits_strcasecmp and
    fits_strncasecmp have been added to CFITSIO.as a substitute.
    All the previous calls to the str[n]casecmp functions have been
    changed to now call fits_str[n]casecmp. In addition, the
    previously defined ngp_strcasecmp function (in grparser.c) has
    been removed and the calls to it have been changed to
    fits_strcasecmp.
  * The speed.c utility program was changed to correctly call
    the gettimeofday function with a NULL second arguement.
  From version 3.400:
  * fixed a bug when writing long string keywords with the CONTINUE
    convention which caused the CONTINUE'd strings to only be 16
    characters long, instead of using up all the available space in
    the 80-character header record.
  * fixed a missing 'defined' keyword in fitsio.h.
  * replaced all calls to strtok (which is not threadsafe) with a
    new ffstrtok function which internally calls the threadsafe
    strtok_r function.  One byproduct of this change is that
    <strings.h> must also be included in several of the C source
    code files.
  * modified the ffphbn function in putkey.c to support TFORM
    specifiers that use lowercase 'p' (instead of uppercase) when
    referring to a variable-length array column.
  * modified the lexical parser in eval.y and eval_y.c to support
    bit array columns (with TFORMn = 'X') with greater than 256
    elements. Fix to bitcmp function:  The internal 'stream' array
    is now allocated dynamically rather than statically fixed at
    size 256. This was failing when users attempted a row filtering
    of a bitcol that was wider than 256X. In bitlgte, bitand, and
    bitor functions, replaced static stream[256] array allocation
    with dynamic allocation.
  * modified the ffiter function in putcol.c to fix a problem which
    could cause the iterator function to incorrectly deal with null
    values.  This only affected TLONG type columns in cases where
    sizeof(long) = 8, as well as for TLONGLONG type columns.
  * Fix made to uncompress2mem function in zcomprss.c for case
    where output uncompressed file expands to over the 2^32 (4Gb)
    limit.  It now checks for this case at the start, and
    implements a 4Gb paging system through the output buffer.  The
    problem was specifically caused by the d_stream.avail_out
    member being of 4-byte type uInt, and thus unable to handle any
    memory position values above 4Gb.
  * fixed a bug in fpackutil.c when using the -i2f (integer to
    float) option in fpack to compress an integer image that is
    scaled with non-default values for BSCALE and BZERO. This
    required an additional call to ffrhdu to reset the internal
    structures that describe the input FITS file.
  * modified fits_uncompress_table in imcompress.c to silently
    ignore the ZTILELEN keyword value if it larger than the number
    of rows in the table
  * Tweak strcasecmp/strncasecmp ifdefs to exclude 64-bit MINGW
    environment, as it does not lack those functions. (eval_l.c,
    fitsio2.h)
  * CMakeLists.txt: Set M_LIB to "" for MINGW build environment (in
    addition to MSVC).
  * Makefile.in: Add *.dSYM (non-XCode gcc leftovers on Macs) to
    clean list.  Install libs by name rather than using a wildcard.
  * configure: Fix rpath token usage for XCode vs. non-XCode gcc on
    Macs.
- Rebased cfitsio-zlib.patch to apply cleanly.

-------------------------------------------------------------------
Sun Jun 26 22:18:52 UTC 2016 - asterios.dramis@gmail.com

- Update to version 3.390:
  * Lots of changes - see changes.txt for details.
- Rebased cfitsio-zlib.patch to apply cleanly.

-------------------------------------------------------------------
Thu Dec 25 17:09:27 UTC 2014 - p.drouand@gmail.com

- Update to version 3.370
  + Added configure options to support reading bzip2 compressed FITS files.
    This depends on having the bzlib library installed on the local machine.
  + Replaced the random Gaussian and Poissonian distribution functions with
    new code written by Craig Markwardt derived from public domain C++ functions 
  + Patched fitsio2.h to support CFITSIO on AArch64 (64-bit ARM)
     architecture (both big and little endian).
  + Fixed bug in fpackutil.c that caused fpack to exit prematurely if
    the FZALGOR directive keyword was present in the HDU header.
- Remove obsolete patches; fixed on upstream release
  + aarch64-support.patch
  + ppc64le-support.patch

-------------------------------------------------------------------
Sun Feb 16 21:46:00 UTC 2014 - asterios.dramis@gmail.com

- Update to version 3.360:
  * added 9 Dec: small change to the fileseek function in drvrfile.c to
    support large files > 2 GB when building CFITSIO with MinGW on Windows
  * reorganized the CFITSIO code directory structure; added a 'docs'
    subdirectory for all the documentation, and a 'zlib' directory
    for the zlib/gzip file compression code.
  * made major changes to the compression code for FITS binary table
    to support all types of columns, including variable-length arrays.
    This code is mainly used via the fpack and funpack programs.
  * increased the number of FITS files that can be opened as one
    time to 1000, as defined by NMAXFILES in fitsio2.h.
  * made small configuration changes to configure.in, configure,
    fitsio.h, and drvrfile.c to support large files (64-bit file
    offsets} when using the mingw-w64 compiler (provided by
    Benjamin Gilbert).
  * made small change to fits_delete_file to more completely ignore
    any non-zero input status value.
  * fixed a logic error in a 'if' test when parsing a keyword name
    in the ngp_keyword_is_write function in grparser.c (provided
    by David Binderman).
  * when specifying the image compression parameters as part of the
    compressed image file name (using the "[compress]" qualifier
    after the name of the file), the quantization level value, if
    specified, was not being recognized by the CFITSIO compression
    routines. The image would always be compressed with the default
    quantization level of 4.0, regardless of what was specified.  This
    affected the imcopy program, and potentially other user-generated
    application programs that used this method to specify the
    compression parameters.  This bug did not affect fpack or
    funpack.   This was fixed in the imcomp_get_compressed_image_par
    routine in the imcompress.c file. (reported by Sean Peters)
  * defined a new CFITS_API macro in fitsio.h which is used to export the
    public symbols when building CFITSIO on Windows systems with CMake. This
    works in conjunction with the new Windows CMake build procedure that
    is described in the README.win32 file. This complete revamping of the
    way CFITSIO is built under Windows now supports building 64-bit
    versions of the library.  Thanks to Daniel Kaneider (Luminance HDR
    Team) for providing these new  CMake build procedures.
  * modified the way that the low-level file_create routine works when
    running in the Hera environment to ensure that the FITS file that is
    created is within the allow user data disk area.
  * modified fits_get_compression_type so that it does not return an error
    if the HDU is a normal FITS IMAGE extension, and is not a tile-compressed
    image.
  * modified the low-level ffgcl* and ffpcl* routines to ensure that they
    never try ro read or write more than 2**31 bytes from disk at one time,
    as might happen with very large images, to avoid integer overflow errors.
    Fix kindly provided by Fred Gutsche at NanoFocus AG (www.nanofocus.de).
  * modified Makefile.in so that doing 'make distclean' does not delete
    new config.sub and config.guess files that were recently added.
  * adopted a patch from Debian in zcompress.c to "define" the values of
    GZBUFSIZE and BUFFINCR, instead of exporting the symbols as 'int's.
- Renamed libcfitsio-devel to cfitsio-devel and libcfitsio-devel-doc to
  cfitsio-devel-doc. Added appropriate Provides/Obsoletes entries.
- Removed the following patches (fixed upstream):
  * implicit-pointer-decl.patch
  * no-return-in-nonvoid-function.patch
- Rebased cfitsio-zlib.patch to apply cleanly.

-------------------------------------------------------------------
Sun Dec 15 23:41:27 UTC 2013 - uweigand@de.ibm.com

- ppc64le-support.patch: Add support for ppc64le.

-------------------------------------------------------------------
Sun Jul  7 11:36:05 UTC 2013 - asterios.dramis@gmail.com

- Update to version 3.350:
  * fixed problem with the default tile size when compressing images with
    fpack using the Hcompress algorithm.
  * fixed returned value ("status" instead of "*status")
  * in imcompress.c, declared some arrays that are used to store the dimensions
    of the image from 'int' to 'long', to support very large images (at least
    on systems where sizeof(long) = 8),
  * modified the routines that convert a string value to a float or double
    to prevent them from returning a NaN or Inf value if the
    string is "NaN" or "Inf" (as can happen with gcc implementation of the
    strtod function).
  * removed/replaced the use of the assert() functions when locking or
    unlocking threads because they did not work correctly if NDEBUG is
    defined.
  * made modifications to the way the command-line file filters are parsed to
    1) remove the 1024-character limit when specifying a column filter,
    2) fixed a potential character buffer-overflow risk in fits_get_token, and
    3) improved the parsing logic to remove any possible of confusing
    2 slash characters ("//") in the string as the beginning of a
    comment string.
  * modified configure and Makefile.in so that when building CFITSIO
    as a shared library on linux or Mac platforms, it will use the SONAME
    convention to indicate whether each new release of the CFITSIO
    library is binary-compatible with the previous version.  Application
    programs that link with the shared library will not need to be
    recompiled as long as the versions are compatible.  In practice,
    this means that the shared library binary file that is created (on
    Linux systems) will have a name like 'libcfitsio.so.I.J.K', where I is the
    SONAME version number, J is the major CFITSIO version number (e.g. 3),
    and K is the minor CFITSIO version number (e.g., 34).  Two link
    files will also be created such that
      libcfitsio.so -> libcfitsio.so.I, and
      libcfitsio.so.I -> libcfitsio.I.J.K
    Application programs will still run correctly with the new version of
    CFITSIO as long as the 'I' version number remains the same, but the
    applications will fail to run if the 'I' number changes, thus alerting
    the user that the application must be rebuilt.
  * fixed bug in fits_insert_col when computing the new table row width
    when inserting a '1Q' variable length array column.
  * modified the image compression routines so that the output compressed
    image (stored in a FITS binary table) uses the '1Q' variable length
    array format (instead of '1P') when the input file is larger than 4 GB.
  * added support for "compression directive" keywords which indicate how
    that HDU should be compressed (e.g., which compression algorithm to use,
    what tiling pattern to use, etc.).  The values of these keywords will
    override the compression parameters that were specified on the command
    line when running the fpack FITS file compression program.
  * globally changed the variable and/or subroutine name "dither_offset"
    to "dither_seed" and "quantize_dither" to "quantize_method" so
    that the names more accurately reflects their purpose.
  * added support for a new SUBTRACTIVE_DITHER_2 method when compressing
    floating point images.  The only difference with the previous method
    is that pixels with a value exactly equal to 0.0 will not be dithered,
    and instead will be exactly preserved when the image is compressed.
  * added support for an alias of "RICE_ONE" for "RICE_1" as the value
    of the ZCMPTYPE keyword, which gives the name of the image compression
    algorithm.  This alias is used if the new SUBTRACTIVE_DITHER_2 option
    is used, to prevent old versions of funpack from creating a corrupted
    uncompressed image file.  Only newer versions of funpack will recognize
    this alias and be able to uncompress the image.
  * made performance improvement to fits_read_compressed_img so that
    when reading a section of an compressed image that includes only
    every nth pixel in some dimension, it will only uncompressed a tile
    if there are actually any pixels of interest in that tile.
  * fixed several issues with the beta FITS binary table compression code
    that is used by fpack:  added support for zero-length vector columns,
    made improvements to the output report when using the -T option in fpack,
    changed the default table compression method to 'Rice' instead of
    'Best', and now writes the 'ZTILELEN' keyword to document the number
    of table rows in each tile.
  * fixed error in ffbinit in calculating the total length of the binary
    table extension if the THEAP keyword was used to override the
    default starting location of the heap.
- Removed cfitsio.patch (fixed upstream).
- Rebased cfitsio-zlib.patch to apply cleanly.
- Added a patch (no-return-in-nonvoid-function.patch) to fix "Program returns
  random data in a function" rpm post build check error.

-------------------------------------------------------------------
Sun Jun 16 08:33:04 UTC 2013 - schwab@suse.de

- aarch64-support.patch: Add support for aarch64

-------------------------------------------------------------------
Wed Apr  3 18:35:45 UTC 2013 - asterios.dramis@gmail.com

- Update to version 3.340:
  * modified configure and configure.in to support cross-compiled cfitsio
    as a static library for Windows on a Linux platform using MXE
    (http://mxe.cc) - a build environment for mingw32. (contributed by
    Niels Kristian Bech Jensen)
  * added conditional compilation statementsfor the mingw32 environment in
    drvrfile.c because mingw32 does not include the ftello and fseeko 
    functions. (contributed by Niels Kristian Bech Jensen)
  * fixed a potential bug in ffcpcl (routine to copy a column from one table
    to another table) when dealing with the rare case of a '0X' column (zero
    length bit column).
  * fixed an issue in the routines that update or modify string-valued
    keyword values, as a result of the change to ffc2s in the previous
    release.  These routines would exit with a 204 error status if the
    current value of the keyword to be updated or modified is null.
  * fixed typo in the previous modification that was intended to ignore
    numerical overflows in Hcompress when decompressing an image.
  * moved the 'startcol' static variable out of the ffgcnn routine and
    instead added it as a member of the 'FITSfile' structure that is defined
    in fitsio.h.  This removes a possible race condition in ffgcnn in
    multi-threaded environments.
  From version 3.330:
  * modified the imcomp_decompress_tile routine to ignore any numerical
    overflows that might occur when using Hcompress to decompress the
    image.  If Hcompress is used in its 'lossy' mode, the uncompressed
    image pixel values may slightly exceed the range of an integer*2
    variable. This is generally of no consequence, so we can safely ignore
    any overflows in this case and just clip the values to the legal range.
  * the default tiling pattern when writing a tile-compressed image
    has been changed.  The old behaviour was to compress the whole image
    as one single large tile.  This is often not optimal when dealing
    with large images, so the new default behavior is to treat each
    row of the image as one tile.  This is the same default behavior
    as in the standalone fpack program.  The default tile size can
    be overridden by calling fits_set_tile_dim.
  * fixed bug bug that resulted in a corrupted output FITS image when
    attempting to write a float or double array of values to a
    tile-compressed integer data type image.  CFITSIO does not support
    implicit data type conversion in this case and now correctly
    returns an appropriate error status.
  * modified ricecomp.c to define the nonzero_count lookup table as an
    external variable, rather then dynamically allocating it within the
    3 routines that use it.  This simplifies the code and eliminates the
    need for special thread locking and unlocking statements. (Thanks to
    Lars Kr. Lundin for this suggestion).
  * modifed how the uncompressed size of a gzipped file is computed in the
    mem_compress_open routine in drvrmem.c.  Since gzip only uses 4 bytes
    in the compressed file header to store the original file size, one may
    need to apply a modulo 2^32 byte correction in some cases.  The logic
    here was modified to allow for corner cases (e.g., very small files, and
    when running on 32-bit platforms that do not support files larger than
    2^31 bytes in size).
  * added new public routine to construct a 80 keyword record from the 3 input
    component strings, i.e, the keyword name string, the value string, and
    the comment string: fits_make_key/ffmkky.  (This was already an undocumented
    internal routine in previous versions of CFITSIO).
  * modified ffc2s so that if the input keyword value string is a null string,
    then it will return a VALUE_UNDEFINED (204) status value.  This makes it
    consistent with the behavior when attempting to read a null keyword
    (which has no value) as a logical or as a number (which also returns
    the 204 error).  This should only affect cases where the header keyword
    does not have an equal sign followed by a space character in columns 9
    and 10 of the header record.
  * Changed the "char *" parameter declarations to "const char *" in many
    of the routines (mainly the routines that modify or update keywords) to
    avoid compiler warnings or errors from C++ programs that tend to be more
    rigorous about using "const char *" when appropriate.
  * added support for caching uncompressed image tiles, so that the tile does
    not need to be uncompressed again if the application program wants
    to read more data from the same tile. This required changes to the
    main FITS file structure that is defined in fitsio.h, as well as
    changes to imcompress.c.
  * enhanced the previous modification to drvrfile.c to handle additional user
    cases when running in the HEASARC's Hera environment.
  From version 3.320:
  * fixed flaw in the way logical columns (TFORM = 'L') in binary tables
    were read which caused an illegal value of 1 in the column to be
    interpreted as a 'T' (TRUE) value.
  * extended the column filtering syntax in the CFITSIO file name parser to
    enable users and scripts to append new COMMENT or HISTORY keyword into the
    header of the filtered file (provided by Craig Markwardt).  For example,
    fcopy "infile.fits[col #HISTORY='Processed on 2012-10-05']" outfile.fits
    will append this header keyword: "HISTORY Processed on 2012-10-05"
  * small change to the code that opens and reads an ASCII region file to
    return an error if the file is empty.
  * fixed obscure sign propagation error when attempting to read the
    uncompressed size of a gzipped FITS file.  This resulted in a memory
    allocation error if the gzipped file had an uncompressed file
    size between 2^31 and 2^32 bytes.  Fix supplied by Gudlaugur Johannesson
    (Stanford).
- Rebased cfitsio.patch to apply cleanly.

-------------------------------------------------------------------
Tue Jul 31 16:10:47 UTC 2012 - asterios.dramis@gmail.com

- Update to version 3.310:
  * Enhanced the CFITSIO column filtering syntax to allow the comma, in
    addition to the semi-colon, to be used to separate clauses, for example:
    [col X,Y;Z = max(X,Y)].  This was done because users are not allowed to
    enter the semi-colon character in the on-line Hera data processing
    system due to computer security concerns.
  * Enhanced the CFITSIO extended filename syntax to allow specifying image
    compression parameters (e.g. '[compress Rice]') when opening an existing
    FITS file with write access.  The specified compression parameters will
    be used by default if more images are appended to the existing file.
  * Modified drvrfile.c to do additional file secrity checks when CFITSIO
    is running within the HEASARC's Hera software system.  In this case
    CFITSIO will not allow FITS files to be created outside of the user's
    individual Hera data directory area.
  * Fixed an issue in fpack and funpack on Windows machines, caused by
    the fact that the 'rename' function behaves differently on Windows
    in that it does not clobber an existing file, as it does on Unix
    platforms.
  * Fixed bug in the way byte-swapping was being performed when writing
    integer*8 null values to an image or binary table column.
  * Added the missing macro definition for fffree to fitsio.h.
  * Modified the low level table read and write functions in getcol*.c and
    putcol*.c to remove the 32-bit limitation on the number of elements.
    These routines now support reading and writing more than 2**31 elements
    at one time. Thanks to Keh-Cheng Chu (Stanford U.) for the patch.
  * Modified Makefile.in so that the shared libcfitsio.so is linked against
    pthreads and libm.
- Removed the fix to link the library to libpthread and libm from cfitsio.patch
  (fixed upstream).
- Rebased cfitsio-zlib.patch to apply cleanly. Removed the linking of the
  programs (fpack and funpack) to libz from the patch (not needed).
- Remove some more bundled zlib files from the package.

-------------------------------------------------------------------
Wed May  9 19:30:17 UTC 2012 - asterios.dramis@gmail.com

- Renamed package from libcfitsio0 to cfitsio.
- Renamed subpackage libcfitsio-doc to libcfitsio-devel-doc (added obsoletes
  entry for libcfitsio-doc of previous openSUSE versions).
- Suggest the libcfitsio-devel-doc package in libcfitsio-devel.
- Removed the requirement for libcfitsio0 from libcfitsio-(devel)-doc (not
  needed).

-------------------------------------------------------------------
Tue May  8 18:33:41 UTC 2012 - asterios.dramis@gmail.com

- Update to version 3.300:
  Enhancements
  * Added new routine called fits_is_reentrant which returns 1 or 0 depending
    on whether or not CFITSIO was compiled with the -D_REENTRANT directive.
    This can be used to determine if it is safe to use CFITSIO in
    multi-threaded programs.
  * Implimented much faster byte-swapping algorithms in swapproc.c based on
    code provided by Julian Taylor at ESO, Garching.  These routines
    significantly improve the FITS image read and write speed (by more than a
    factor of 2 in some cases) on little-endian machines (e.g., Linux and
    Microsoft Windows running on x86 PCs) where byte-swapping is required.
    This has no effect on big-endian machines (e.g., Macs).  Even faster
    performance can be achieved in some cases by invoking the new
    "--enable-sse2" or "--enable-ssse3" configure options when building CFITSIO
    on machines that have CPUs and compilers that support the SSE2 and SSSE3
    machine instructions.
  * added additional support for implicit data type conversion in cases where
    the floating point image has been losslessly compressed with gzip.  The
    pixels in these compressed images can now be read back as arrays of short,
    int, and long integers as well as single and double precision
    floating-point.
  * modified fitsio2.h and f77_wrap.h to recognize IBM System z mainframes by
    testing if __s390x__ or __s390__ is defined.
  * small change to ffgcrd in getkey.c so that it supports reading a blank
    keyword (e.g., a keyword whose name simply contains 8 space chracters).
  Bug Fixes
  * fixed a bug in imcomp_decompress_tile that caused the tile-compressed image
    to be uncompressed incorrectly (even though the tile-compressed image
    itself was written correctly) under the following specific conditions:
     - the original FITS image has a "float" datatype (R*4)
     - one or more of the image tiles cannot be compressed using the standard
       quantization method  and instead are losslessly compressed with gzip
     - the pixels in these tiles are not all equal to zero (this bug does
       affect tiles where all the pixels are equal to zero)
     - the program that is reading the compressed image uses CFITSIO's
       "implicit datatype conversion" feature to read the "float" image
       back into an array of "double" pixel values.
     If all these conditions are met, then the returned pixel values in the
     affected image tiles will be garbage, with values often ranging
     up to 10**34.  Note that this bug does not affect the fpack/funpack
     programs, because funpack does not use CFITSIO's implicit datatype
     conversion feature when uncompressing the image.
- Replaced cfitsio-makefile.patch with cfitsio.patch (taken from Fedora). It's
  the same patch with the addition of linking libcfitsio with libpthread and
  libm (fixes possible errors with packages requiring libcfitsio0 and compiled
  with the "--as-needed" flag).
- Added a patch (cfitsio-zlib.patch) to use system zlib (based on patches from
  Fedora and Debian). Added zlib-devel in build depencdencies.
- Added a patch (implicit-pointer-decl.patch) to fix "implicit-pointer-decl"
  rpm post build check warning.
- Moved "-lpthread" and added "-lz" in Libs.private: of cfitsio pkg-config
  file.
- Removed "-fno-strict-aliasing" from CFLAGS.
- Don't install static libraries.

-------------------------------------------------------------------
Mon Dec  5 15:19:10 UTC 2011 - idoenmez@suse.de

- Set license to ISC, bnc#734865

-------------------------------------------------------------------
Sun Dec  4 21:06:24 UTC 2011 - idoenmez@suse.de

- Fix SLE_11 build 

-------------------------------------------------------------------
Sun Dec  4 16:44:07 UTC 2011 - asterios.dramis@gmail.com

- Update to version 3.290:
  Enhancements
  * modified Makefile.in to allow configure to override the lib and include
    destination directories.
  * added (or restored actually) support for tile compression of 1-byte integer
    images in imcomp_compress_tile.  Support for that data type was overlooked
    during recent updates to this routine.
  * modified the fits_get_token command-line parsing routine to perform more
    rigorous checks to determine if the token can be interpreted as a number
    or not.
  * made small modification to fpack.c to not allow the -i2f option (convert
    image from integer to floating point) with the "-g -q 0" option (do lossless
    gzip compression).  It is more efficient to simply use the -g option alone.
  * made modifications to fitsio.h and drvrfile.c to support reading and
    writing large FITS files (> 2.1 GB) when building CFITSIO using
    Microsoft Visual C++ on Windows platforms.
  * added new WCS routine (ffgicsa) which returns the WCS keyword values
    for a particular WCS version ('A' - 'Z').
  Bug Fixes
  * fixed a problem with multi-threaded apps that open/close FITS files
    simultaneously by putting mutex locks around the call to
    fits_already_open and in fits_clear_Fptr.
  * fixed a bug when using the 'regfilter' function to select a subset of the
    rows in a FITS table that have coordinates that lie within a specified
    spatial region on the sky.  This bug only affects the rarely used panda
    (and epanda and bpanda) region shapes in which the region is defined by
    the intersection of an annulus  and a pie-shaped wedge.  The previous code
    (starting with version 3.181 of CFITSIO where support for the panda region
    was first introduced) only worked correctly if the 2 angles that define
    the wedge have values between -180 and +180.  If not, then fewer rows than
    expected may have been selected from the table.
  * fixed the extended filename parser so that when creating a histogram by
    binning 2 table columns, if a keyword or column name is given as the
    weighting factor,  then the output histrogram image will have a floating
    point datatype, not the default integer datatype as is the case when no
    weigth is specified (e.g. with a filename like
    "myfile.fits[bin x,y; weight_column]"
  * added fix to the code in imcompress.c to work around a problem with
    dereferencing the value of a pointer, in cases where the address of
    that pointer has not been defined (e.g., the nulval variable).
  * modified the byte shuffling algorithm in fits_shuffle_8bytes to work
    around a strange bug in the proprietary SunStudioExpress C compiler
    under OpenSolaris.
  * removed spurious messages on the CFITSIO error stack when opening a
    FITS file with FTP (in drvrnet.c);
- Removed the Makefile.in changes from cfitsio-makefile.patch (fixed upstream).
- Spec file updates:
  * Changed License entry to SPDX style.
  * Enable multithreading support.

-------------------------------------------------------------------
Tue Oct  4 17:02:14 UTC 2011 - asterios.dramis@gmail.com

- Added correct fix for cfitsio.pc include dirs (Cflags: was wrongly replaced
  with $Cflags:). Fixes reopened bnc#546004.

-------------------------------------------------------------------
Fri Sep 16 20:49:46 UTC 2011 - asterios.dramis@gmail.com

- update to version 3.280
  * Lots of changes (see changes.txt file).  
- Spec file updates
  * Changes based on spec-cleaner run.
  * Updates in summaries and descriptions.
  * Updates in Group: entries of the packages.
  * Added description for the patch based on openSUSE Patches Guidelines.
  * Added pkg-config in BuildRequires: (fix for "no-pkg-config-provides"
    rpmlint warning).
  * Added cfitsio package (containing some utilities).
  * Fixes for cfitsio.pc.
  * Minor other updates.

-------------------------------------------------------------------
Thu May 20 19:58:39 UTC 2010 - tittiatcoke@gmail.com

- update to version 3.23.0,
  * reduced the default value for the floating point image 
    quantization parameter (q) from 16 to 4.
  * enhanced the template keyword parsing routine to reject a 
    header template string that only contains a sequence of dashes.
  * enhanced the ASCII region file reading routine to allow tabs 
    as well as spaces between fields in the file.
  * got rid of bogus error message when calling 
    fits_update_key_longstr
  * Made the error message more explicit when CFITSIO tries to 
    write to a GZIP compressed file.
  * several bugfixes

-------------------------------------------------------------------
Wed May 19 15:43:17 UTC 2010 - mseben@novell.com

- fix libdir,include dir and version string in pkgconfig (bnc#546004)

-------------------------------------------------------------------
Thu Jan  8 15:42:04 CET 2009 - mseben@suse.cz

- update to version 3.18.1, see full changelog :
  http://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/changes.txt

-------------------------------------------------------------------
Tue Aug 12 17:38:13 CEST 2008 - lmichnovic@suse.cz

- update to version 3.09
 * added a clarification to the cfortran.doc file that cfortran.h
   may be used and distributed under the terms of the GNU Library
   General Public License.
 * many many bugfixes
- obsoletes strncat_overflow.patch

-------------------------------------------------------------------
Thu Apr 10 12:54:45 CEST 2008 - ro@suse.de

- added baselibs.conf file to build xxbit packages
  for multilib support

-------------------------------------------------------------------
Thu Nov 15 15:22:06 CET 2007 - lmichnovic@suse.cz

- switched to gcc-fortran in BuildRequires 

-------------------------------------------------------------------
Mon Oct 15 15:57:07 CEST 2007 - lmichnovic@suse.cz

- fixed buffer overflow using strncat 
  (cfitsio-strncat_overflow.patch)

-------------------------------------------------------------------
Mon Oct 15 10:21:31 CEST 2007 - lmichnovic@suse.cz

- update to version 3.06
  * modified the imcopy.c utility program (to tile-compress images)
    so that it writes the default EXTNAME = 'COMPRESSED_IMAGE'
    keyword in the compressed images, to preserve the behavior of
    earlier versions of imcopy.
  * modified the angsep function in the FITS calculator (in eval.y)
    to use haversines, instead of the 'law of cosines', to provide
    more precision at small angles (< 0.1 arcsec).
  * extensive changes to imcompress.c to fully support implicit
    data type conversion when reading and writing arrays of data
    to FITS images, where the data type of the array is not the 
    same as the data type of the FITS image.  This includes 
    support for null pixels, and data scaling via the BSCALE and
    BZERO keywords.
  * rewrote the fits_read_tbl_coord routine in wcssub.c, that gets
    the standard set of WCS keywords appropriate to a pair of 
    columns in a table, to better support the full set of 
    officially approved WCS keywords.  
  * made significant changes to histo.c, which creates an image by 
    binning columns of a table, to better translate the WCS
    keywords in the table header into the WCS keywords that are 
    appropriate for an image HDU.
  * modified imcompress.c so that when pixels are written to a 
    tile-compressed image, the appropriate BSCALE and BZERO values
    of that image are applied.  This fixes a bug in which writing
    to an unsigned integer datatype image (with BZERO = 32768) was 
    not done correctly.

-------------------------------------------------------------------
Thu Jul 19 11:25:14 CEST 2007 - lmichnovic@suse.cz

- split off doc subpackage

-------------------------------------------------------------------
Tue Jul 17 19:16:49 CEST 2007 - lmichnovic@suse.cz

- initial version 3.04
  library package named libcfitsio0
