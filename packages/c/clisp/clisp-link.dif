---
 src/clisp-link.in |    2 +-
 src/lispbibl.d    |    4 +++-
 2 files changed, 4 insertions(+), 2 deletions(-)

--- src/clisp-link.in
+++ src/clisp-link.in	2018-02-19 09:30:11.548748097 +0000
@@ -579,7 +579,7 @@ case "$1" in
       # when running "CLISP=./clisp ./clisp-link install <modname>"
       # in the build directory, avoid "cp: `...' and `...' are the same file"
       if [ "${absolute_moduledir}" != "${absdestdir}/$moduledir" ]; then
-        make clisp-module-distrib LN=${INSTALL_DATA-cp} distribdir="${absdestdir}/$moduledir"
+        make clisp-module-distrib LN="${INSTALL_DATA-cp}" distribdir="${absdestdir}/$moduledir"
         mkdir -p ${absdestdir}/${DYNMOD};
         for f in ${DYNDIR_FILES}; do
           cp ${f} ${absdestdir}/${DYNMOD}/
--- src/lispbibl.d
+++ src/lispbibl.d	2018-02-19 09:30:11.552748021 +0000
@@ -14272,7 +14272,7 @@ re-enters the corresponding top-level lo
 #define pushSTACK(obj)  (STACK_(-1) = (obj), STACK skipSTACKop -1)
   /* Almost equivalent with *--STACK = obj  resp.  *STACK++ = obj  , but
    Careful: first enter the object into STACK_(-1), THEN modify the STACK! */
-#define popSTACK()  (STACK skipSTACKop 1, STACK_(-1))
+#define popSTACK()  ({STACK skipSTACKop 1; STACK_(-1);})
 #define skipSTACK(n)  (STACK skipSTACKop (sintP)(n))
 
 #if defined(GNU) && defined(M68K) && !defined(NO_ASM) && !defined(WIDE) && defined(STACK_register)
