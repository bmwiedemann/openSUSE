# Example configuration for a cacti repository
#
# ::As default server::
# Put the string CACTI in /etc/sysconfig/apache2 APACHE_SERVER_FLAGS
# to enable the URL http://localhost/cacti
#
# ::As Virtual Host::
# If you want to use cacti in one Virtual Host, add
#     Include /etc/apache2/vhosts.d/conf.d/cacti.conf
# to the vhost in the vhost.conf file
# Put the string CACTIVHOST in /etc/sysconfig/apache2 
# APACHE_SERVER_FLAGS to enable the URL http://vhost/cacti
#

<IfDefine CACTI>
    <IfModule mod_alias.c>
        Alias /cacti __CACTIDIR__
    </IfModule>

    <Directory __CACTIDIR__>
        DirectoryIndex index.php
        Options +FollowSymLinks
        AllowOverride none

        # Access Control
        # Default to only allow connections from localhost
        Require all denied
        Require local

        # Authentication Settings
        # Uncomment and apply to add Basic Authentication
#        AuthType Basic
#        AuthName "cacti"
#        AuthBasicProvider file
#        AuthUserFile  /site/cfg/passwd
#        AuthGroupFile /site/cfg/group
#        Require group cacti
#        Satisfy any

        # SSL Configuration
        # Uncomment to always require SSL when SSL is enabled
        <IfDefine SSL>
            <IfDefine !NOSSL>
                <IfModule mod_ssl.c>
#                    SSLRequireSSL
                </IfModule>
            </IfDefine>
        </IfDefine>

        <IfModule mod_php7.c>
            php_flag magic_quotes_gpc Off
            php_flag short_open_tag On
            php_flag register_globals Off
            php_flag register_argc_argv On
            php_flag track_vars On
            # this setting is necessary for some locales
            php_value mbstring.func_overload 0
            php_value include_path .
        </IfModule>
    </Directory>

    <DirectoryMatch ^__CACTIDIR__/(docs|images|include|install)>
        Require all granted
        <Files config.php>
            Require all denied
        </Files>
    </Directory>

    <Directory __CACTIDIR__/*/>
        Require all denied
    </Directory>
</IfDefine>
