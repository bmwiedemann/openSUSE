-------------------------------------------------------------------
Sun Aug 29 15:18:53 UTC 2021 - pousaduarte@gmail.com

- Update to version nightly1721:
  * fix(bps): Fixes BPS patch changing target size (#5829)
  * build system: remove references to travis (#5811)
  * Update README.md (#5812)
  * Add Get(Inv)WindowResolution shader functions (#5818)
  * Replace `&vec[0]` with `vec.data()`
  * Update dynarmic (#5814)
  * Update translations (2021-07-01)
  * Corrected the path to the headbar icon (#5782)
  * Linux: Flatpak-related changes (#5772)
  * nwm_uds: Change ASSERT to LOG_ERROR
  * nwm_uds: Make sure client node information match host's
  * service/nwm_uds: Ensure consistency regarding node IDs

-------------------------------------------------------------------
Sun May 16 17:55:36 UTC 2021 - pousaduarte@gmail.com

- Update to version nightly1711:
  * Fix Disk shader cache when accurate multiplication is off (#5711)
  * Update translations (2021-03-01) (#5730)
  * NWM_UDS: implement disconnect_reason and EjectClient (#5331)
  * Update dynarmic
  * gcc 11 compatibility fix (suggestion) (#5778)
  * sdl2_sink: remove SDL_AUDIO_ALLOW_FREQUENCY_CHANGE flag
  * Re-update catch and dynarmic
  * input_common: Fix libusb include on Arch
  * libusb: Add /utf-8 compile option for MSVC.
  * gcadapter: Implement auto map feature
  * cmake: unbreak system libusb support
  * configure_input: Add frontend text for GC adapter
  * gc_adapter: Port code cleanup and feature updates from yuzu
  * input_common: Add support for GameCube Adapter
  * externals: Track upstream libusb
  * Update src/citra_qt/configuration/configure_storage.cpp
  * Update src/citra_qt/configuration/configure_storage.h
  * citra-qt: Added configure storage to handle NAND and SDMC dir location
  * config: better variable naming
  * config: Added nand_directory and sdmc_directory to Settings
  * file_util: Add a function to update the user path
  * settings: Save and load NAND/SD dirs from config
  * update catch
  * Update dynarmic
  * gl_rasterizer: check for GL_ARB_copy_image
  * shader_disk_cache: warn the user when ARB_get_program_binary is not supported.
  * fix(net): prevent gibberish padding on linux
  * common/telemetry: Migrate namespace into the Common namespace
  * main/common: Log/append AVX/FMA to the Host CPU string if available and add AVX512 detection
  * common/telemetry: Migrate core-independent info gathering to common
  * Rename profiler parameter names
  * Mark variables only used on trace logs as maybe_unused
  * Use maybe_unused instead of Q_UNUSED
  * fix clang format
  * fix some conversion warnings
  * unreachable code
  * Fix nihstro include style to conform to the style used in other instances.
  * Solve some unreferenced parameter warnings
  * Resolve some variable hiding warnings
  * Resolve unused variable warnings
  * Resolve some type conversion warnings
  * remove unnecessary headers
  * resolve warnings of deprecated Qt members

-------------------------------------------------------------------
Sun Mar 07 00:11:54 UTC 2021 - pousaduarte@gmail.com

- Update to version nightly1696:
  * bootmanager: fix memory leaks when loading save states

-------------------------------------------------------------------
Fri Feb 26 10:08:58 UTC 2021 - pousaduarte@gmail.com

- Update to version nightly1695:
  * Fix destructor order in rasterizer cache (#5725)

-------------------------------------------------------------------
Fri Feb 12 15:07:41 UTC 2021 - pousaduarte@gmail.com

- Update to version nightly1692:
  * fix recycling custom textures
  * remove semicolon
  * gl_rasterizer_cache: don't place null textures in the recycler
  * gl_rasterizer_cache: Recycle host textures Allocating new textures has fairly high driver overhead. We can avoid some of this by reusing the textures from destroyed surfaces since the game will probably create more textures with the same dimensions and format.
  * gl_rasterizer_cache: Remove all fully invalid surfaces from the cache Some games (e.g. Pilotwings Resort) create many surfaces that are invalidated quickly but were never removed. This occasionally lead to large lag spikes due to high lookup times and other data structure management overhead.

-------------------------------------------------------------------
Thu Feb 11 22:04:14 UTC 2021 - pousaduarte@gmail.com

- Update to version nightly1691:
  * string_util: Remove MSVC workaround for converting between UTF8/UTF16
  * Avoid leaking fences during re-presentation (#5713)
  * configure_input: set modifier_scale undonditionally when restoring default
  * configure_input: fix modifier scale saving
  * externals: Update Xbyak to 5.96
  * xbyak_abi: Prefer returning a struct to using out parameters in ABI_CalculateFrameSize
  * xbyak_abi: Register indexes should be unsigned

-------------------------------------------------------------------
Mon Feb 08 00:57:04 UTC 2021 - pousaduarte@gmail.com

- Update to version nightly1687:
  * Fix macos build (#5703)

-------------------------------------------------------------------
Sun Feb 07 00:34:11 UTC 2021 - pousaduarte@gmail.com

- Update to version nightly1686:
  * core: Make use of [[nodiscard]] with the System class
  * citra_qt: Migrate off of setMargin() to setContentsMargins()
  * citra_qt/main: Save settings when starting guest
  * Update translations (2021-01-01)
  * core: Remove unnecessary enum casts in log calls
  * video_core: Remove unnecessary enum class casting in logging messages

-------------------------------------------------------------------
Sun Jan 31 00:09:17 UTC 2021 - pousaduarte@gmail.com

- Update to version nightly1680:
  * Implement APT command 0x0103 (#5478)

-------------------------------------------------------------------
Sun Jan 10 00:30:30 UTC 2021 - pousaduarte@gmail.com

- Update to version nightly1679:
  * Add 3D slider value to the HID shared page (#5676)
  * CMakeFiles: Update json to 3.9.0
  * Delete the old log file before rotating (#5675)
  * Look at direction of analog axis travel instead of instantaneous sample (#5509)
  * general: Fix various spelling errors

-------------------------------------------------------------------
Sun Jan 03 00:28:00 UTC 2021 - pousaduarte@gmail.com

- Update to version nightly1674:
  * Fix the old log file to work with the log parser.
  * zstd: define include_directories for build interface only
  * Automatic Controller Binding (#5100)
  * zstd: set include directory directly
  * Rotate previous log file to '.old' if it exists
  * Update zstd to v1.4.8
  * citra_qt/cheats: Make window resizable and remove help hint

-------------------------------------------------------------------
Thu Dec 31 20:20:52 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1669:
  * Merge generic part of Android microphone changes (#5624)
  * Update deps.sh (#5665)
  * Revert #5530 "Port yuzu-emu/yuzu#4539"
  * Update Gradle
  * Update Bitrise build stages
  * Merge ARM64 Dynarmic (#5620)
  * Use alternate-form formatting for floats after `fmt` 7.1.2 update (#5654)
  * game_list_p: Resolve deprecated usage of QVariant operator<
  *  udp/client: Take std::function by const reference with TestCommunication()
  * Revert ENABLE_FDK to dependent option
  * Remove pessimistic sanity check
  * Enable fdk decoder in flatpak version
  * change ENABLE_FDK to option
  * common: Silence two discarded result warnings

-------------------------------------------------------------------
Tue Dec 08 13:15:44 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1659:
  * cubeb_sink: Use static_cast instead of reinterpret_cast in DataCallback() (#5573)
  * codec: Make lookup table static constexpr (#5572)
  * Port yuzu-emu/yuzu#4700: "game_list: Eliminate redundant argument copies" (#5571)
  * microprofile: Don't memset through std::atomic types (#5528)
  * Make UNIMPLEMENTED_MSG consistent with UNIMPLEMENTED (#5631)

-------------------------------------------------------------------
Sun Dec 06 00:32:10 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1654:
  * UDS: implement GetApplicationData (#5533)
  * tests: Fix warning about comparison between signed and unsigned (#5632)
  * Update dynarmic to last compatible version (#5618)
  * Fixes to "hide mouse on inactivity" (#5476)
  * service/apt: Fix deliver arg hmac size

-------------------------------------------------------------------
Wed Nov 25 11:19:34 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1649:
  * Update inih (#5615)

-------------------------------------------------------------------
Tue Nov 24 19:33:30 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1648:
  * service/apt: Implement Deliver Args (#5611)

-------------------------------------------------------------------
Mon Nov 23 23:07:05 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1647:
  * APT: implement Set and GetWirelessRebootInfo (#5328)

-------------------------------------------------------------------
Mon Nov 23 11:27:53 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1646:
  * Fix fmt crash from deprecated percent specifier (#5616)

-------------------------------------------------------------------
Sun Nov 22 20:53:26 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1645:
  * Fix telemetry-related exit crash from use-after-free (#5617)

-------------------------------------------------------------------
Sun Nov 22 00:39:01 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1644:
  * CI: fix the tag fetching command

-------------------------------------------------------------------
Wed Nov 18 11:43:16 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1643:
  * Fix Transifex Synchronization (#5605)
  * Initial implementation of partial_embedded_buffer_dirty handling (#5548)
  * microprofile: Silence warning in headers
  * externals: Update fmt to 7.1.2
  * layered_fs: Make LoadFile and LoadDirectory less recursive

-------------------------------------------------------------------
Tue Nov 17 11:04:50 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1638:
  * Add reverse_interlaced uniform flag
  * Update cubeb and request a persistent stream session
  * Implement Reverse Interlaced 3D

-------------------------------------------------------------------
Mon Nov 16 19:01:20 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1636:
  * change result back to std::optional
  * Update src/video_core/renderer_opengl/gl_shader_manager.cpp
  * make result not optional

-------------------------------------------------------------------
Sun Nov 15 15:25:36 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1635:
  * kernel/thread: Change owner_process to std::weak_ptr (#5325)
  * Keep keyboard state independent of acquired buttons (#5255)

-------------------------------------------------------------------
Fri Nov 13 14:04:38 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1633:
  * ci: fix mingw folder name (#5607)
  * Use GitHub Actions as CI service (#5602)
  * Update translations (2020-11-01)

-------------------------------------------------------------------
Sat Nov 07 18:14:48 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1630:
  * Band-aid solution for 'Disk Shader Cache' (#5188)

-------------------------------------------------------------------
Tue Oct 27 08:07:24 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Add constraints to make sure we have enough memory to compile
  with LTO (result of the gcc switch)

-------------------------------------------------------------------
Mon Oct 26 08:06:31 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Add back copyright
- Fix installation of binaries to not be unresolvable

-------------------------------------------------------------------
Mon Oct 19 12:32:23 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1629:
  * qt/game_list: Give GameListSearchField::KeyReleaseEater a parent
  * General: Make use of std::nullopt where applicable
  * Bump kernel version for 3DSX (#5446)
  * Make sure some things are logged (#5515)
  * Use unique_ptr on all ui objects from .ui files (#5511)
  * Fix compilation with boost 1.74.0
  * Port yuzu-emu/yuzu#4587 and yuzu-emu/yuzu#4588: Fix data races (#5545)
  * game_list_p: Mark some constants as constexpr
- remove boost.patch, merged upstream

-------------------------------------------------------------------
Tue Sep 29 12:36:45 UTC 2020 - Adam Majer <adam.majer@suse.de>

- boost.patch: Fix building with Boost 1.74

-------------------------------------------------------------------
Wed Sep 23 11:48:53 UTC 2020 - tchvatal@suse.com

- Update to version nightly1623:
  * Port yuzu-emu/yuzu#4587 and yuzu-emu/yuzu#4588: Fix data races (#5545)

-------------------------------------------------------------------
Wed Sep 16 14:51:01 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1621:
  * Silence some noisy switch case warning
  * Port yuzu-emu/yuzu#4605: "bootmanager: Prevent unnecessary copies in TouchUpdateEvent()" (#5539)
  * Fix thread naming on Linux, which limits names to 15 bytes.
  * Minor frontend fixes to savestates (#5430)
  * Port yuzu-emu/yuzu#4577: "common/assert: Make use of C++ attribute syntax" (#5529)
  * Update translations (2020-09-01)
  * citra_qt: Backport review comments from the yuzu translation PR (#5465)
  * Port yuzu-emu/yuzu#4528: "common: Make use of [[nodiscard]] where applicable" (#5535)
  * CMakeLists: Download Clang-Format from the Citra repo instead of yuzus (#5534)
  * Port yuzu-emu/yuzu#4472: "perf_stats: Mark GetMeanFrametime() as const" (#5498)
  * General: Tidy up clang-format warnings
  * yuzu: Make use of qOverload where applicable
  * yuzu: Resolve -Wextra-semi warnings
  * CMakeLists: Update fmt to 7.0.3
  * externals: Update Xbyak to 5.95
  * Hotkeys were carelessly added out of alphabetical order, and notably broke in the 'Restore Hotkeys' PR
  * Fix order
  * cubeb_sink.cpp: Change one log from INFO to DEBUG level.
  * interface.h: forward declare resolution
  * camera_util.cpp: remove unnecessary includes
  * clang format
  * Separate the enums from cam/cam.h
  * Avoid incorrect casts to QDropEvent
  * configure_camera: forward declare CameraInterface
  * profiler: remove unnecessary includes
  * main: forward declare QLabel
  * Don't translate hotkey text
  * CMakeLists: Update CLANG_FORMAT_POSTFIX to 10.0
  * ci: Make use of clang-format 10.0
  * Use gtimeout on Mac OS job to incrementally build up ccache
  * Add LGTM static analyzer config file (#5495)

-------------------------------------------------------------------
Wed Sep 16 11:02:09 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Do not use strict aliasing as the code is unsafe

-------------------------------------------------------------------
Tue Sep 15 10:36:01 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Add patch adding fixes to build under gcc:
  * gcc-enablement.patch

-------------------------------------------------------------------
Tue Sep 15 09:36:10 UTC 2020 - tchvatal@suse.com

- Update to version nightly1621:
  * Silence some noisy switch case warning
  * Port yuzu-emu/yuzu#4605: "bootmanager: Prevent unnecessary copies in TouchUpdateEvent()" (#5539)
  * Fix thread naming on Linux, which limits names to 15 bytes.
  * Minor frontend fixes to savestates (#5430)
  * Port yuzu-emu/yuzu#4577: "common/assert: Make use of C++ attribute syntax" (#5529)
  * Update translations (2020-09-01)
  * Fix order
  * Avoid incorrect casts to QDropEvent
  * Don't translate hotkey text

-------------------------------------------------------------------
Tue Sep  1 12:09:38 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Disable some features that use too many bundled libs

-------------------------------------------------------------------
Tue Sep  1 11:29:11 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Enable ffmpeg content as we distribute that

-------------------------------------------------------------------
Tue Sep 01 10:42:27 UTC 2020 - tchvatal@suse.com

- Update to version nightly1613:
  * citra_qt: Backport review comments from the yuzu translation PR (#5465)
  * Port yuzu-emu/yuzu#4528: "common: Make use of [[nodiscard]] where applicable" (#5535)
  * CMakeLists: Download Clang-Format from the Citra repo instead of yuzus (#5534)
  * Port yuzu-emu/yuzu#4472: "perf_stats: Mark GetMeanFrametime() as const" (#5498)
  * General: Tidy up clang-format warnings
  * yuzu: Make use of qOverload where applicable
  * yuzu: Resolve -Wextra-semi warnings
  * CMakeLists: Update fmt to 7.0.3
  * externals: Update Xbyak to 5.95
  * Hotkeys were carelessly added out of alphabetical order, and notably broke in the 'Restore Hotkeys' PR
  * cubeb_sink.cpp: Change one log from INFO to DEBUG level.
  * interface.h: forward declare resolution
  * camera_util.cpp: remove unnecessary includes
  * clang format
  * Separate the enums from cam/cam.h
  * configure_camera: forward declare CameraInterface
  * profiler: remove unnecessary includes
  * main: forward declare QLabel
  * CMakeLists: Update CLANG_FORMAT_POSTFIX to 10.0
  * ci: Make use of clang-format 10.0
  * Use gtimeout on Mac OS job to incrementally build up ccache
  * Add LGTM static analyzer config file (#5495)
  * Actually return true if InitMFDLL succeeded (#5470)
  * Update scan_dll.py
  * settings: Make use of std::string_view over std::string for logging
  * frontend: Improve wait tree readability for dark themes
  * [WIP] NCCHContainer: support for partitions if container is NCSD (#5345)
  * cmake: stop linking against QGL
  * CMakeLists: Update fmt to 7.0.1
  * discord_impl: Update the client ID (#5449)
  * fix clang format
  * Common: remove a mod from AlignUp (#5441)
  * Update translations (2020-07-01)
  * Fix framebuffer size on fractional scaling display.
  * fix
  * generic texture allocator
  * Clean up
  * handle all cases more robustly
  * video_core/GLES: fix issues cause by missing glTextureBarrier create a duplicate for sampling instead
  * Try to fix executable path generated in CI
  * Correct output paths for executable binaries
  * travis: Compile on macOS 10.13 with more up to date compiler

-------------------------------------------------------------------
Tue Sep  1 10:41:14 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Switch service to disabled default state to be able to
  send this pkg to openSUSE proper repos

-------------------------------------------------------------------
Tue Sep  1 10:38:54 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Format with spec-cleaner
- Use macros
- Remove obsolete sections

-------------------------------------------------------------------
Mon Aug 03 13:34:58 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1599:
  * Actually return true if InitMFDLL succeeded (#5470)
  * Update scan_dll.py
  * settings: Make use of std::string_view over std::string for logging
  * frontend: Improve wait tree readability for dark themes
  * [WIP] NCCHContainer: support for partitions if container is NCSD (#5345)
  * cmake: stop linking against QGL
  * CMakeLists: Update fmt to 7.0.1
  * discord_impl: Update the client ID (#5449)
  * fix clang format
  * Common: remove a mod from AlignUp (#5441)
  * Update translations (2020-07-01)
  * Fix framebuffer size on fractional scaling display.
  * fix
  * generic texture allocator
  * Clean up
  * handle all cases more robustly
  * video_core/GLES: fix issues cause by missing glTextureBarrier create a duplicate for sampling instead
  * Try to fix executable path generated in CI
  * Correct output paths for executable binaries
  * travis: Compile on macOS 10.13 with more up to date compiler

-------------------------------------------------------------------
Sat Jun 27 17:40:07 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1580:
  * Fix using system boost (#5424)
  * gl_resource_manager: Make use of noexcept on move constructors and move assignment operators (#5340)
  * Fix clang-format
  * citra-qt: Add an "Alternative Speed Limit" with its hotkey (#5281)
  * Update manifest file to include new elements that are introduced with Windows 10 later versions (#5324)
  * Fix: fatal error CVT1100 when compiling manifest file (#5322)
  * Improve performance of applying cheats; Set correct interval for applying cheats (#5305)
  * am: Resolve truncation and sign conversion warnings in WriteContentData() (#5397)
  * .github: add a new issue template
  * General: Remove usages of ARRAY_SIZE where applicable. (#5392)
  *  archive: Make use of std::pair for OpenFileFromArchive  (#5399)
  * Avoid deadlock when stopping video dumping (#5407)
  * Interpolation v2, w/vector and roundf (#5350)
  * Fix cheat frame interval
  * Update codec information
  * Update comments after hardware testing
  * Recomment the ffmpeg backend
  * Fix ffmpeg time base
  * Use samples_per_frame instead of hardcoded 160
  * Fix WMF AAC decoder bug
  * gl_shader_gen: std::move strings where applicable
  * gl_shader_gen: Collapse several format calls into one
  * gl_shader_gen: Mark local functions as static where applicable
  * gl_shader_gen: Eliminate unnecessary std::string construction in AppendProcTexCombineAndMap()
  * Update teakra, adjust TeakraSlice for new audio frame period
  * Fix ReadPipeIfPossible
  * fs/file: Make use of std::move where applicable
  * am: Remove redundant c_str() calls
  * cro_helper: Silence -Wuninitialized warning
  * nwm: Eliminate signed conversion warnings
  * Use attribute instead of comment
  * applets/swkbd: Properly handle button_text
  * Actually save the input when clearing/resetting to default
  * Fix "core.cpp" clang-format (#5375)
  * Use fixed indices for button order
  * Remove empty strings from button_text before adding buttons
  * address review comments
  * game_list: cleanup and clang format in AddPermDirPopup
  * game_list: fix folder reordering
  * change gameListDir to hold an index instead of a raw pointer
  * citra_qt: remove incorrect style in the Dark theme
  * citra_qt: improve touchscreen mapping UI
  * fs_user: std::move vectors where applicable
  * input_common: add TouchFromButtonDevice
  * Add measured frame cycles
  * Update FPS to roughly match the actual 3DS rate
  * Update cycles and explanation
  * Change audio_frame_ticks with length explanation

-------------------------------------------------------------------
Fri May 22 20:11:06 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1549:
  * clang-format, and avoid another potential leak
  * Avoid leaking the cubeb input stream
  * gl_rasterizer_cache: Trivial minor cleanups (#5295)
  * Port yuzu-emu/yuzu#3268: "GUI: Deadzone controls for sdl engine at configuration input" (#5174)
  * Improve core timing accuracy (#5257)
  * file_util: Early-exit in WriteArray and ReadArray if specified lengths are zero
  * gl_shader_gen: Make use of fmt where applicable
  * gl_rasterizer_cache: Make use of if constexpr in MortonCopyTile()
  * gl_shader_manager: Make use of std::nullopt where applicable
  * gl_shader_decompiler: Make use of fmt with the decompiler
  * Small fixes to "Option to hide mouse on inactivity" (#5280)
  * service: Mark variables as [[maybe_unused]] where applicable (#5318)
  * fs/archive: Make use of std::make_shared where applicable (#5319)
  * service/cfg: Convert file-scope std::vector to std::array (#5320)
  * service/cfg: Make GenerateConsoleUniqueId() return a pair (#5321)
  * common/logging/log: Add LLE in Audio_DSP comment (#5327)
  * cfg-savegame: add DebugMode block (#5330)
  * clang-format fix
  * Update translations (2020-05-01) (#5289)
  * swkbd: Fix a bug where clicking Cancel hangs the game (#5294)
  * core: Resolve -Wreorder warnings
  * soc_u: Prevent undefined behavior with CTRPollFD
  * externals: Update cubeb to 616d773
  * applets/swkbd: Make destructor virtual
  * applets/mii_selector: Make destructor virtual
  * core/hw/rsa: Make GetSignature() a const member function
  * core/hw/rsa: Make operator bool explicit
  * core/hw/rsa: Take std::vector instances by value
  * file_sys/seed_db: Add missing include guard
  * title_metadata: Take std::vector by const reference in Load()
  * file-sys: Make use of std::string_view where applicable
  * layered_fs: Mark functions as static where applicable
  * service/ir: Remove erroneous forward declaration
  * CMakeLists: Specify EXCLUDE_FROM_ALL for teakra
  * common: Remove chunk_file.h
  * gl_rasterizer: Make const on references consistent
  * gl_rasterizer: Amend missing return value in branch in SetupGeometryShader()
  * gl_rasterizer: Resolve truncation warnings
  * gl_rasterizer: Make use of std::string_view in IsVendorAmd()
  * gl_rasterizer: Default destructor in the cpp file
  * gl_rasterizer: Remove unused emu_window variable in RasterizerOpenGL
  * gl_rasterizer_cache: Remove unnecessary reference parameter in LoadCustomTexture()
  * gl_rasterizer_cache: Flatten LoadCustomTexture()
  * gl_shader_disk: Make use of std::nullopt where applicable (#5293)
  * gl_shader_gen: Mark hash implementations as noexcept
  * gl_shader_manager: Remove unused variable within LoadDiskCache()
  * gl_shader_manager: Eliminate variable shadowing
  * gl_shader_manager: Avoid unnecessary std::vector copy in LoadDiskCache()
  * renderer_opengl: Resolve compiler truncation warnings
  * gl_shader_gen: Mark PicaVSConfig reference parameter as const
  * Update teakra
  * savedata_archive: Make GetFreeBytes return a more accurate value
  * memory: Make getter functions const qualified where applicable (#5251)
  * core/memory: Make use of std::move in Entry::operator= (#5233)
  * texture_filters: update ScaleForce (#5270)
  * command_processor: Resolve undefined behavior type punning
  * pica_state: Make use of std::array
  * add program counter in unmapped memory access log messages (#5149)
  * test: use gold instead of ld
  * gl_shader_disk_cache: std::move entries in LoadTransferable() (#5249)
  * MSVC: set SDL_VER to 2.0.12
  * ArmInterface: return ref instead of copy for GetTimer (#5227)
  * Add sample rate field to AAC decoder (#5195)
  * gl_shader_gen: Convert file-scope std::string into a std::string_view (#5263)
  * video_core: reduce string allocations in shader decompiler (#5261)
  * custom_tex_cache: Remove reliance on the global system instance (#5252)
  * CR actions
  * Clean up the Callback (don't store a shared_ptr to parent)
  * Fix savestates compatibility (#5256)
  * service: Resolve trivially avoidable copies (#5237)
  * nwm/nwm_uds: Avoid copying all elements in channel_data map where applicable (#5236)
  * core/memory: Fix #5246
  * post_processing_opengl: Make use of std::string_view with GetPostProcessingShaderCode()
  * swrasterizer/proctex: Take regs and state by const reference
  * swrasterizer/proctex: Make CombineAndMap() internally linked
  * video_core: Add missing header guards
  * gl_shader_manager: std::move std::string where applicable
  * geometry_pipeline: std::move vertex handler in SetVertexHandler()
  * gl_resource_manager: Make use of noexcept on move assignment and move constructors
  * primitive_assembly: Mark constructor explicit
  * primitive_assembly: Take triangle_handler by reference
  * primitive_assembly: Make use of std::array where applicable
  * video_core: Amend misplaced forward declarations
  * kernel/shared_page: Silence missing return warning in GetInitTime()
  * apt/applet_manager: std::move parameter in GlanceParameter()
  * ipc_helpers: Make PushStaticBuffer take std::vector by value
  * core/memory: Resolve sign conversion in serialize()
  * Fix MIC_U serialization and timing (#5223)
  * Services/APT: Implemented the GetCaptureInfo function. (#5194)
  * CMakeLists: Only compile A32 frontend for dynarmic (#5229)
  * Fix clang format
  * Fix Address Arbiter serialization
  * fix typo; updated comment about apples bad driver
  * Add flag to disable seperable shaders for osx Intel GPUs. Default is false
  * Update dynarmic (#5214)
  * Services/APT: Implemented the IsTitleAllowed function.
  * common/file_util: Allow access to files on network shares
  * Correctly register AddressArbiter as a type of WakeupCallback
  * input_common/udp: Port various changes from yuzu (#5133)
  * Fixed NWM not responding
  * video_core: add ScaleForce to texture filters (#5210)
  * Remove the build type from the bin path
  * Services/APT: Implemented the Store/LoadSysMenuArg functions.
  * Services/FS: Stubbed GetSdmcArchiveResource and GetNandArchiveResource.
  * Kernel/Process: Fixed scheduling multiple processes in the SysCore using Dynarmic (#5193)
  * Fix Luigi's Mansion can't remove amiibo bug (#5200)
  * Fix clang format
  * Fix the merge
  * Show save/load errors to the user
  * Debuggers/Qt: Show the threads process names and ids in the Wai… (#5201)
  * Attempt to improve save/load during frame advance
  * Fix button state not persisting between loads
  * Attempt to fix network bug
  * Allow GDB debugging through loads
  * Add a couple of useful SVC logs
  * Fix mic sharedmemory not being deallocated
  * Warnings/Thread: Added missing case for the Dormant thread status in ResumeFromWait.
  * Warnings/Qt: Removed unused variable from lambda capture list.
  * Warnings/QtMotionControls: There is no need to use std::move after std::make_unique.
  * Warnings/GLWindow: Initialize the members of OpenGLWindow in the order they are defined.
  * Warnings/Network: Initialize the members of Room::RoomImpl in the order they are defined.
  * Warnings/Network: Handle ENET_EVENT_TYPE_NONE and ENET_EVENT_TYPE_CONNECT in the network packet loop.
  * Add disk archive serialization (fix crash in driver renegade etc.)
  * Sync GPU state after loading (fix FE terrain bug)
  * Fix clang format
  * Attempt to fix mac and linux builds
  * Fix VFP registers serialization (0 fps when loading etc.)
  * Fix memory region serialization (OSK crash)
  * Fix crashes when loading with cameras active
  * travis: Update xcode
  * arm_dynarmic: Remove dependence on interpreter
  * Revert one change from #4844
  * update appveyor sdl
  * Added save + load hotkeys
  * gdbstub: Fix some gdbstub jankiness
  * Fixed TAS movie serialization
  * Reconnect cheat_engine during load
  * externals: Update dynarmic to b58048a
  * Reenable hidapi for SDL2.0.12 and up
  * Use placeholders for serialized paths
  * Attempt to fix crashes with LLE applets
  * Add some member initializers in thread
  * Don't crash when getting perf stats
  * Clear out state before deserialization - fixes many crashes.
  * Added user IP to log events for join/left/kicked/banned
  * clang format fixes etc.
  * Code review actions (plus hopefully fix the linux CI)
  * More cleaning up
  * Serialize ArchiveManager and other code review actions
  * Code review - general gardening
  * Apply suggestions from code review
  * addressed review comments
  * Attempt to fix the linux builds
  * Only serialize wchar paths on windows
  * Update src/CMakeLists.txt
  * Change boost submodule
  * Review changes
  * Code review changes - clarified HTTP serialization
  * Apply suggestions from code review
  * Apply suggestions from code review
  * Refactored out the horrible static var in CoreTiming
  * Added copyright notices on new files
  * Attempt to fix flatpak CI
  * Remove the TODO (since it's all done now!)
  * Minor cleanup
  * DSP now works... committing this!!
  * More merge fixes
  * fix path usage in InstallCia
  * Microprofile: Allow accessing token.
  * Adressed review comments
  * Log if common key during Ticket::Load is missing
  * fix more review comments
  * fix review comments
  * fix clang-format
  * warn if cia contend is encrypted
  * Added a search path in FindSDL2 for Ubuntu Budgie
  * NetworkMessage: create ErrorManager class to provide a context to tr
  * game_list_p.h: Specify the context for tr
  * Load RSA slot_0 data from bootrom; load and decrypt data from native firm for NCCHSecure2 keyslot
  * core, citra_qt: Implement a save states file format and slot UI
  * Add simple zstd compression
  * service/cecd: Add missing SessionData serialization
  * kernel/timer: Add missing base object
  * Fix externals/boost spec
  * Pretty sure ARM/Thread serialization works now
  * Reworked DSP serialization
  * Add ClearAll to rasterizer cache for fully wiping the cache on save/load
  * Hack: Workaround crash when loading state and gyro is used
  * Fix geometry pipeline; attempt to fix motion controls
  * Fixed a bug (??) in arm_dynarmic where PageTableChanged could reset the CPU context
  * Fixed setting the right DSP service on deserialization
  * Fixed file services serialization
  * Serialize core timing
  * Added Signals; more runtime fixes
  * Fixed serialization runtime exceptions
  * Serialize file/directory services
  * More base-derived fixes
  * Correct exports; add some file serialization; fix service base object serialization
  * Fix crash bugs
  * Refactor out the wakeup_callback function pointer
  * Bind NWM_UDS service in the constructor
  * Use shared_ptr for PageTable
  * Make the tests pass
  * Changed u8* to MemoryRef
  * Minor tidying up
  * Added basic UI; misc memory fixes
  * Finished archives; remove pod.h
  * Basic archive backend serialization
  * Serialize CECD, CFG services
  * Serialize QTM, Y2R services
  * Serialize PTM service
  * Serialize NWM service
  * Serialize NIM, PS, PXI, SOC, SSL services
  * Serialize IR, MVD, NDM, NEWS, NFC
  * More clang format fixes. Really need to standardise the version of this
  * Serialize MIC service
  * Fix clang format
  * Serialize IR service
  * Serialize HTTP service
  * Serialize HID service
  * Serialize GSP service
  * Don't require cmake 3.15
  * Change how the boost target works; disable external warnings in  MSVC
  * Definitely disable using system boost if version doesn't match
  * Some more CI fixes
  * Fix a bug on mingw
  * Some CI fixes
  * clang-format fixes
  * Attempting to fix mingw on windows
  * Use load_construct_data for kernel objects
  * Serialize FS service; some compiler fixes
  * Added FRD service serialization
  * Added ERR service serialization
  * Added DSP service serialization
  * Added DLP service serialization
  * Added CSND serialization
  * CAM service serialization
  * BOSS service serialization
  * APT service serialization
  * Replace g_kernel with Core::Global etc.
  * Serialize AM services
  * Finished AC and ACT service serialization
  * Service serialization framework; done AC
  * Started IPC services serialization
  * Serialize service manager, server prt
  * Serialize some more kernel objects
  * Serialize kernel/hle/memory
  * Serialize primitive_assembly
  * Serialize geometry_pipeline
  * Fixed an include
  * Added a TODO
  * Added CPU, mutex, process, thread, timer
  * Added client/server objects
  * Added derived kernel objects
  * Added shader state; WIP kernel objects
  * Added shader state serialization
  * video_core serialization
  * Added core serialization
  * Added POD serialization
  * Added boost serialization

-------------------------------------------------------------------
Thu Apr 09 17:23:42 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1465:
  * Option to hide mouse on inactivity (#5094)
  * video_core/renderer_opengl/gl_rasterizer_cache: Create Format Reinterpretation Framework (#5170)

-------------------------------------------------------------------
Sat Apr 04 11:34:08 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1463:
  * Texture Filtering v2 (#5166)
  * citra_qt/system: Add N3DS mode checkbox and enable it by default
  * citra_qt: Only resume the game if it wasn't paused
  * ffmpeg: Misc fixes
  * sdl_joystick: disable the use of the hidapi drivers due to many problems caused by them. The main problem is the loss of compatibility with some controllers, but there are also unwanted changes to the behaviour of PS4 controllers (hardcoded lightbar color).
  * Bump bundled sdl2 and appveyor to sdl2.0.10
  * citra_qt: Split options into 'Specific' and 'Generic'
  * ffmpeg: Avoid listing child classes for AVFormatContext and AVCodecContext
  * ffmpeg: Properly handle non-planar formats
  * dumping_dialog: Prompt when path is empty
  * citra_qt: Fixed a bug when dumping dialog is cancelled or closed
  * dumping_dialog: Add a line edit for the options
  * citra_qt: Add simple video dumping error reporting
  * citra_qt: Use the new dumping dialog
  * citra_qt/dumping: Add dumping dialog
  * citra_qt/dumping: Add options dialog
  * citra_qt/dumping: Add option set dialog
  * ffmpeg: Add ListFormats and ListEncoders
  * ffmpeg: Correctly handle sample rates
  * ffmpeg: Correctly handle sample format
  * ffmpeg: Correctly set pixel format
  * citra, citra_qt: Add video dumping config read/write
  * core/dumping: Allow format/encoder selection+configuration
  * core: Properly std::move things around
  * video_core, core: Move pixel download to its own thread

-------------------------------------------------------------------
Thu Apr 02 10:30:29 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1459:
  * Don't dump textures that aren't a power of 2 (#5152)
  * HLE Audio: Increase frame position by input buffer sample rate (#5049)
  * Use the correct directory for Qt Plugins (#5148)
  * flatpak: Update runtime version
  * service/ldr_ro: Fix CRO loading when the buffer contained multiple VM areas (#5125)
  * Minor Readme Changes
  * Revert "Use immutable storage when available (#5053)" (#5151)
  * Replace non-commercial icons with free icons from icons8 (#5093)
  * Set render window to also accept focus via tabbing (Qt::StrongFocus) (#5089)
  * Use immutable storage when available (#5053)
  * common: include algorithm thread_queue_list.h (#5147)
  * common: Port some changes from dolphin (#5127)
  * video_core: don't use NULL for non-pointer after a7d3489dc987
  * fix formatting for media-ndk
  * mediandk for android (#4921)
  * CFG: Let GetSystemModel report model based on  Settings:is_new_3ds (#5104)
  * video_core: add texture filtering (#5017)
  * service/fs: Update file size on write
  * Add CPU Clock Frequency slider

-------------------------------------------------------------------
Thu Mar 12 13:54:49 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1438:
  * second translation update
  * Fix incorrect port_id use
  * service/cam: Implement Vsync interrupt callbacks
  * Update translations (2020-03-01)

-------------------------------------------------------------------
Fri Mar 06 22:13:51 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1436:
  * travis/transifex: use HEREDOC for initializing config (#5109)
  * core: Add support for N3DS memory mappings (#5103)
  * Update README.md (#5097)
  * Make the arrays const
  * video_core: use explicit interval type in texture cache
  * core/file_sys: Add alternative override pathes for ExeFS files
  * gdbstub: small logic bug fix with defer_start
  * gdbstub: Ensure gdbstub doesn't drop packets crucial to initialization

-------------------------------------------------------------------
Tue Feb 25 16:34:36 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1429:
  * Implements fdk_aac decoder (#4764)
  * layered_fs: Fix missing file size update
  * ipc_debugger: Fixing NULL ptr call on multiple clear
  * videocore/renderer_opengl/gl_rasterizer_cache: Move bits per pixel table out of function (#5101)
  * android: use cmake 3.10
  * Remove C++ standard flag
  * Core timing 2.0 (#4913)
  * HTTP_C::Implement Context::MakeRequest (#4754)
  * core: Remove outdated MSVC workarounds (#5099)
  * Remove duplicate code from the migration of frame limit to gene… (#5091)
  * core/file_sys: Do not apply the same mods to DLCs
  * Fix compilation
  * fix clang format
  * input_common/udp: Add missing override specifiers
  * input_common/udp: std::move SocketCallback instances where applicable
  * input_common/udp: std::move shared_ptr within Client constructor
  * udp/client: Replace deprecated from_string() call with make_address_v4()
  * input_common/udp: Silence -Wreorder warning for Socket
  * input_common/udp: Remove unnecessary inclusions
  * input_common/udp: Add missing header guard
  * layered_fs: Do not open all replacement files on load
  * citra_qt: Add 'Dump RomFS' menu action
  * core: Add dump RomFS support
  * Address review
  * core: Reset archive_manager on shutdown.
  * Fix build
  * core/file_sys: Allow exheader replacement to be read from mods path
  * core/file_sys: Read mods for the original title for updates
  * citra_qt: Add 'Open Mods Location'
  * core/file_sys: Allow exefs mods to be read from mods path
  * core: Use LayeredFS while reading RomFS
  * core/file_sys: LayeredFS implementation
  * core/file_sys: Make RomFSReader an abstract interface

-------------------------------------------------------------------
Fri Feb 14 14:00:06 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1419:
  * Port yuzu commit: "yuzu/CMakeLists: Disable implicit QString co… (#5074)
  * common: SPSCQueue: Notify after incrementing queue size.

-------------------------------------------------------------------
Mon Feb 10 19:32:12 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1418:
  * dark themes refinements and cleanup
  * fix qss stylesheet whitespaces
  * GUI: fix minor issues with dark themes GUI: rename and reorder themes
  * Address review comments
  * Make a separate function for getting minimum size based on layout
  * clang format
  * Correctly treat cases when current size is smaller than the minimum defined by the layout
  * correct ProcessConfigurationChanges
  * use the defined constants instead of magic numbers for screen dimensions
  * Change min_client_area_size based on layout

-------------------------------------------------------------------
Fri Feb 07 22:15:02 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1416:
  * swkbd: Fix digit filter
  * citra_qt: config: Move audio to its own tab. (#5079)
  * logging/backend: Change type of filename from string to const char*

-------------------------------------------------------------------
Fri Jan 31 08:52:41 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1413:
  * yuzu/main: Specify string conversions explicitly

-------------------------------------------------------------------
Thu Jan 23 13:41:46 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1412:
  * log disk shader cache setting
  * Loading Screen: Vertically Center everything
  * QT Frontend: Add disk shader loading progress bar
  * Frontend: Prevent DiskShader option from being selected if HW Shaders are disabled
  * Frontend: Only load disk resources if hw shader is enabled
  * OSX Build: Remove ninja
  * log the upright screen setting
  * Set hotkey for screen rotation
  * implement upright orientation for side and large frame layouts
  * Implementation of screen rotation without use of additional layouts. This is based on what was done using additional layouts, but modified to have a variable to control rotation and making it so Single Screen Layout behaves like Upright Single would, and Default Layout behaves like Upright Double would, when the new variable is used.
  * Add headbar icon on Linux
  * Prevent out of memory errors when the game passes in an improper length value

-------------------------------------------------------------------
Sat Jan 18 14:49:50 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1405:
  * renderer_opengl: Allow usage of interlaced 3D
  * citra, citra_qt, settings.h, default_ini.h: Add option for interlaced 3D
  * Only check for sanitize_mul if theres a shader in the cache
  * Fix title bar
  * Only load precompiled shaders if their sanitize_mul setting matches
  * Address review and update zstd
  * Log the number of entries in each cache
  * Add a error log for unsupported configurations for disk cache
  * Rename InvalidateTransferable to InvalidateAll to match what it does
  * Only add shaders to precompiled cache if they are new
  * Properly bind the shader sampler and uniform bindings
  * Change VFS vector to regular vector
  * citra-sdl: Add Load Disk Resources
  * citra-qt: Load Disk Resources
  * Add GetRenderer to core
  * Add missing changes from yuzu file_util
  * Add shader disk caching
  * Add frontend settings
  * Add shader cache version generation
  * Add settings for disk shader cache
  * Add ZSTD compression for precompiled cache
  * common/cpu_detect: Remove Common::CPUVendor
  * common/cpu_detect: Remove unused functionality

-------------------------------------------------------------------
Fri Jan 17 19:38:04 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1402:
  * Attempt to fix macOS build
  * file_sys: Add support for BPS patches
  * file_sys: Handle patch applying failures
  * file_sys: Move IPS patching code into separate source file
  * qt: do not use an invalid update smdh

-------------------------------------------------------------------
Fri Jan 03 09:04:15 UTC 2020 - pousaduarte@gmail.com

- Update to version nightly1399:
  * common/logging: don't use regex for path trimming
  * CMake: Create thin archives on Linux

-------------------------------------------------------------------
Fri Dec 20 22:13:00 UTC 2019 - Markus S <kamikazow@opensuse.org>

- Switched from Make+GCC to Ninja+Clang. Apparently it decreases build time.
- (Hopefully) Fix TW build.

-------------------------------------------------------------------
Thu Dec 19 19:29:20 UTC 2019 - pousaduarte@gmail.com

- Update to version 20191218:
  * Remove wait for free buffer

-------------------------------------------------------------------
Tue Dec 17 18:57:20 UTC 2019 - pousaduarte@gmail.com

- Update to version 20191217:
  * Remove accidentally pushed debugging logs (#5029)
  * Add missing vsync telemetry field
  * Reenable AAC FFMPEG decoding
  * Destroy GLWindow on exit to prevent issues closing the app while in fullscreen
  * Reintroduce a vsync option for people with really bad drivers
  * Add microprofile scopes for presentation
  * Remove high dpi scaling flag as it needs more work first
  * clang-format
  * Use the proper parent window
  * Fix window resizing bug
  * Fix drag and drop
  * Add missing key events and also try to glFinish after swapping
  * Workaround Qt bug that causes events to forward to the parent incorrectly
  * Change from QOpenGLWidget to QWindow
  * Delete core_context before shutting down SDL
  * Add minimum window size back to citra-qt
  * Prevent softlock on shutdown and various cleanup
  * Change from render to texture to render to renderbuffer
  * recreate mailbox to use a queue instead
  * Change Present to finish only after swap
  * Remove screen change detection since it breaks make changing screen. (Still need to test windows)
  * Fix macOS pixel ratio detection
  * rename GGLContext to just GLContext
  * Change to a constructor that exists in qt 5.9
  * QOffscreensurface
  * Remove vsync setting
  * Add a separate thread for rendering and add texture mailbox and shared context to SDL
  * Change Qt to use QOpenGLWidget and support shared context and texture mailbox
  * Add texture mailbox support to opengl renderer.
  * Split graphics out of EmuWindow in preparation of shared contexts
  * Add scope acquire context to simplify MakeCurrent and DoneCurrent calls

-------------------------------------------------------------------
Sun Dec 15 12:52:48 UTC 2019 - pousaduarte@gmail.com

- Update to version 20191214:
  * Use the correct register length for index_array
  * Improve aac decoder selection
  * Dynamically load Media Foundation

-------------------------------------------------------------------
Tue Dec 03 19:25:56 UTC 2019 - pousaduarte@gmail.com

- Update to version 20191201:
  * applets/swkbd: Remove text memory clearing

-------------------------------------------------------------------
Sat Nov 30 12:22:01 UTC 2019 - pousaduarte@gmail.com

- Update to version 20191128:
  * testing ninja on macos travis
  * service/mic: actually use the specified device

-------------------------------------------------------------------
Wed Nov 20 19:03:24 UTC 2019 - pousaduarte@gmail.com

- Update to version 20191120:
  * common/logging: Silence no return value warnings
  * Fix moderation by room host in dedicated rooms
  * citra_qt/game_list: Specify string conversions explicitly
  * citra_qt/updater: Specify string conversions explicitly
  * citra_qt/multiplayer: Specify string conversions explicitly
  * fix uppercase sorting
  * fix clang-format and lambda capture
  * unfold UNREACHABLE implementation for dumb compilers
  * Sort game items after the list is populated
  * Use the displayed text for sorting GameListItemPath. By default, DisplayRole is used as the SortRole. This behaviour is what's expected by the user. Made it so that an access to SortRole is equivalent to one to DisplayRole. Also fixes a bug with directory sorting.

-------------------------------------------------------------------
Mon Nov 18 19:48:26 UTC 2019 - pousaduarte@gmail.com

- Update to version 20191118:
  * video_core: get rid of MSVC hack comment

-------------------------------------------------------------------
Wed Nov 13 19:10:11 UTC 2019 - pousaduarte@gmail.com

- Update to version 20191111:
  * citra_qt/configuration: add missing Read/SaveUtilityValues
  * dedicated_room: fix crash (count != 0) when closing the room
  * settings, configure_input: fix rename input profile
  * network/room: add message/join/leave/kick/ban/unban/game name logging
  * citra_qt/main.ui: remove unused actions "Load Symbol Map..." and "Select Game Directory..."

-------------------------------------------------------------------
Sun Nov 10 13:46:21 UTC 2019 - pousaduarte@gmail.com

- Update to version 20191109:
  * specify size of buffer and use openglstate in getteximageoes
  * texture dump hotkey (ctrl+d)
  * crash hotfix (no clang-format because on phone)
  * nested folder support + refuse to load incompatibly sized textures + general cleanups
  * address more comments, fix dumping textures that already got dumped
  * address more comments
  * reorder graphics tab, move speed to general
  * add enhancements tab files
  * generate mipmaps (for now)
  * fix texture dumping on opengl es, create load folder if none exists if custom textures is enabled
  * fix inverted texture dump error message path
  * fix preload textures being enabled when it shouldn't
  * qimageinterface fixes, remove old lodepng, address more comments
  * lodepng as submodule
  * add image interface, remove lodepng from video_core/core, address more comments, fix comments
  * new-line that clang-format didn't fix
  * implement custom texture preload
  * handle upscaling and offsets (fixes oot3d)
  * fix crashes, add custom texture cache, load textures from load directory
  * texture replacement (also messy)
  * initial sloppy texture dumping implementation (opengl only)
  * add dump dir to user paths
  * add texture dumping as a config entry
  * add lodepng as an external, have video_core depend on it
  * dedicated_room: Support single Base64 token.
  * citra_qt: configure_web: Use Base64 encoded token for simplifying user experience.

-------------------------------------------------------------------
Sat Nov 09 17:05:38 UTC 2019 - pousaduarte@gmail.com

- Update to version 20191108:
  * yuzu/game_list: Silence -Wswitch
  * yuzu/game_list_worker: Silence warnings

-------------------------------------------------------------------
Thu Nov 07 19:28:46 UTC 2019 - pousaduarte@gmail.com

- Update to version 20191107:
  *  configuration/config: Move config loading and saving to functions based off groups (#4855)

-------------------------------------------------------------------
Wed Oct 09 20:56:23 UTC 2019 - pousaduarte@gmail.com

- Update to version 20191005:
  * citra_qt: add amiibo drag and drop support

-------------------------------------------------------------------
Sat Oct 05 10:53:38 UTC 2019 - pousaduarte@gmail.com

- Update to version 20191004:
  * CMakeLists: Fix `find_package` call
  * Update translations (2019-09-21)

-------------------------------------------------------------------
Sun Sep 29 17:32:03 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190927:
  * externals: Update fmt to master (#4955)
  * Address review comments
  * Backport changes from yuzu-emu/yuzu#2057
  * Backport changes from yuzu-emu/yuzu#2806
  * Backport changes from yuzu-emu/yuzu#2444

-------------------------------------------------------------------
Mon Sep 23 20:48:45 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190922:
  * citra_qt/RecordDialog: close when OK is clicked
  * Add FPS to SDL title bar
  * Added Host CPU and OS to log
  * small changes to ApplicationState handling, just in case
  * remove ugly msvc hack
  * Remove boost headers not currently used
  * Remove unused boost header
  * Pause in background guard clause and unused flag
  * Naming changes and clang format
  * Add option to enable pause when on background
  * Only auto unpause when auto paused
  * Pause on unfocused first draft This is a MVP, still needs one or more configuration option(s) and review of the code style.
  * Remove newlines from the long title in row2
  * UISettings::GameListText Append a value to the enum to function as length counter. Also remove magic numbers where possible, by using the enum instead.
  * Fix clang format for long-title
  * Change GameListText order to improve configuration compatibility
  * Allow displaying of the full title in the interface, as well as use the full title in the search filter
  * Filter non-executable files out of the game list.
  * citra_qt/record_dialog: Switch to QFormLayout
  * citra_qt/debugger: Add recorder widget
  * citra_qt: Add record dialog
  * service/sm: Add service name retrival based on client port ID
  * kernel, service: Add HLE request/reply recording
  * kernel: Add LLE request/reply recording
  * kernel/svc: Add request registering
  * kernel: Add IPC Recorder to KernelSystem
  * kernel: Add IPC Recorder class
  * service: Add service function name lookup based on header code

-------------------------------------------------------------------
Sat Sep 14 16:13:49 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190914:
  * ncch_container: Fix NCCH decryption heuristic when replacing exheader

-------------------------------------------------------------------
Sat Sep 14 11:57:24 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190913:
  * Prevent repetition on config.cpp
  * Change the coding style of GameListIconSize bounds check to use the enum instead of magic numbers
  * NFC: extract frontend-facing tag state

-------------------------------------------------------------------
Tue Sep 10 13:16:59 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190909:
  * Remove old region free logic
  * citra_qt: Add single line mode for game list
  * citra_qt/game_list: Disable uniform row heights
  * citra_qt/game_list: Add an All Regions check

-------------------------------------------------------------------
Mon Sep 09 19:46:47 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190908:
  * remove unused call to nodiscard function
  * externals: update fmt to 6.0.0
  * Struct vs class declaration and unused variable

-------------------------------------------------------------------
Wed Sep 04 11:55:01 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190903:
  * Move the SetThreadExecutionState calls to their own separate functions
  * Fix to windows sleep issues, now with clang format!
  * core_timing: Silence sign comparison warnings
  * opengl: remove hw geometry shader related stuff

-------------------------------------------------------------------
Sun Sep 01 20:05:56 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190901:
  * Add cancel option to analog stick configuration
  * applet_manager: remove the "we are going to disable loading LLE applets before further fixes are done" comments
  * ﻿citra_qt: fix the stuck in fullscreen mode and hotkey bugs

-------------------------------------------------------------------
Wed Aug 28 19:44:54 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190821:
  * network/room_member: Silence -Wswitch warning
  * Fix dependent options
  * fixup! CMake: separate options for FFmpeg decoder/dumper
  * CMake: separate options for FFmpeg decoder/dumper
  * Updated README with new help page.
  * Fixup! Prevent issue deleting PerfStats
  * Remove qt5_wrap_ui macro usage
  * Update telemetry_session.cpp
  * Change over to std::shared_ptr
  * NS: Lowercase NS:S to ns:s like it should be
  * HLE: Remove BaseInterface and add ns.cpp back
  * Service: Add BaseInterface and NSInterface
  * HLE: Move NS:S into APT and remove NS
  * Add current date/time to file path
  * Address review comments
  * Add telemetry field for mean frametime
  * Add perf stat logging through ini setting
  * Add MinGW CMake option to disable DWARF debugging information
  * Added a HACK to ignore errors
  * Unfreeze CMake version
  * travis: Update the frozen build to be a flagless Debug build
  * citra_qt: Add video dumping UI
  * citra: Add --dump-video argument
  * core/dumping: Add FFmpeg implementation
  * CMake, CI: Add FFmpeg library dependency
  * Guard unistd.h with MacOS only macro
  * video_core: Implement frame dumping
  * renderer_base: Add prepare/cleanup function interface
  * audio_core: Dump audio frames and samples
  * core: Add VideoDumper to System
  * core: Add video dumper interface
  * Remove 'Accurate Geometry Shader' setting, default behavior is as it was turned on.
  * proper translation part2
  * proper translation
  * clang-format
  * Dispaly all valid game regions
  * citrq_qt:main.cpp  include unistd.h
  * citra_qt: on osx chdir to bundle dir to allow detection of user folder
  * citra_qt/configure: move speed limiter to general (#4864)
  * Use a clear texture instead of texture 0 (solid black) in the GL rasterizer (#4844)
  * Port yuzu-emu/yuzu#2457: "yuzu/{about_dialog, main}: Specify string conversions explicitly for SCM-related info" (#4774)
  * gl_rasterizer: decrease vertex buffer size (#4703)
  * configure_dialog: reverse tab map to avoid logic based on user-facing/translatable text (#4866)
  * renderer_opengl: Add support for custom shaders (#4578)
  * ncch_container: Assume override exheaders are decrypted
  * It's supposed to be OR, not AND!
  * Fix build issue
  * Fix whitespace
  * Remove magic number
  * Update smdh.cpp

-------------------------------------------------------------------
Thu Aug 08 20:16:20 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190808:
  * minor fix for opengles

-------------------------------------------------------------------
Sat Aug 03 17:28:26 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190729:
  * [Hotfix] Revert change in configure_dialog (#4865)
  * yuzu/debugger: Specify string conversions explicitly
  * yuzu/configuration: Specify string conversions explicitly
  * yuzu/configuration/config: Specify string conversions explicitly
  * Added default case for GetErrorStr, removed useless const declaration in header
  * Fixing some compiler warnings
  * Qt: Fixed behaviour of buttons by connecting functors to correct signals
  * ncch_container: Apply IPS patch after allocating .bss

-------------------------------------------------------------------
Fri Jul 19 12:59:31 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190718:
  * Remove unused stuff

-------------------------------------------------------------------
Tue Jul 16 07:23:18 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190715:
  * citra_qt/configure_motion_touch: fix slot name
  * ipc_helpers: silent signed comparison warning
  * kernel: silence -Wreorder
  * interpreter: silent sign warnings
  * audio_core/cubeb: silent signed/unsigned comparison warning
  * citra_qt: silent sign comparison warning
  * citra_qt/profiler: add parenthesis to silent warning
  * network/room_member: in-header function should be inline
  * citra_qt/configure_system: fix string comparison (#4830)
  * citra_qt/camera: silent signed array index warning (#4829)
  * citra_qt/multiplayer: silent Wreorder warnings

-------------------------------------------------------------------
Sun Jul 14 14:50:57 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190713:
  * Port yuzu-emu/yuzu#2529: "yuzu/bootmanager: Minor interface tid… (#4794)
  * android: common: file_util: Add user_path, ConfigDir, and CacheDir.
  * android: common: logging: Add log output support.
  * android: common: Add paths for Android SDCARD_DIR and EMU_DATA_DIR.
  * input_common: main: Remove unnecessary HAVE_SDL2 check.
  * CMakeLists: Ensure we specify Unicode as the codepage on Windows
  * kernel: Rename memory page table set function
  * kernel: Nullability check for current_cpu when changing memory page table This attempts to fix segfault in some tests where page table is set before initializing cpu core (intended behaviour? might be worth a check...) see: src/tests/core/arm/arm_test_common.cpp see: src/tests/core/arm/dyncom/arm_dyncom_vfp_tests.cpp
  * kernel: Let the kernel handle all page table changes when switching processes It will both change the page table in memory and notify the CPU about the change by itself. This way there is no need to call memory.SetCurrentPageTable() when kernel.setCurrentProcess() and the management is kept internally in the kernel
  * cpu_core: Separate cpu_core and memory This makes cpu_core and memory being completely independent components inside the system, having a simpler and more understandable initialization process The thread which casues page table changes in memory will be responsible to notify the cpu_core too

-------------------------------------------------------------------
Wed Jul 10 20:42:01 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190708:
  * ncch_container: Add support for exheader replacement
  * yuzu/configuration: Make function naming consistent
  * gl_rasterizer: correct supress_mipmap_for_cube logic
  * Fix compilation problems
  * yuzu/CMakeLists: Disable implicit QString->QUrl conversions
  * yuzu/CMakeLists: Disable unsafe overloads of QProcess' start() function
  * yuzu/CMakeLists: Disable implicit type narrowing in connect() calls

-------------------------------------------------------------------
Wed Jul 03 12:26:09 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190630:
  * ncch_container: Fix code.bin replacement
  * kernel/vm_manager: Remove redundant Reset call in destructor
  * CSND: handle command processing

-------------------------------------------------------------------
Thu Jun 27 20:44:42 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190625:
  * CMakeLists: Explicitly specify -Wall for the non-MSVC case
  * CMakeLists: Specify /volatile:iso for MSVC
  * src/CMakeLists: Add /Zc:externConstexpr to the MSVC build flags
  * src/CMakeLists: Vertically order compilation flags
  * gsp: remove unused GetFramebufferInfo
  * GSP_GPU: move used_thread_ids into the class

-------------------------------------------------------------------
Sat Jun 22 10:49:51 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190620:
  * pica: move global shader buffer state into Pica::State (#4796)
  * Port yuzu-emu/yuzu#2253: "Migrate off directly modifying CMAKE_* compilation-related flags directly" (#4714)

-------------------------------------------------------------------
Tue Jun 11 12:25:01 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190610:
  * core/telemetry_session: Remove unnecessary web service nulling out in destructor
  * core/telemetry_session: Remove usages of the global system accessor
  * core/telemetry_session: Explicitly delete copy and move constructors
  * yuzu/configuration/configure_graphics: Eliminate type narrowing in a connect call

-------------------------------------------------------------------
Mon Jun 10 11:01:12 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190609:
  * Port yuzu-emu/yuzu#2249: "ipc_helpers: Allow pushing and popping floating-point values" (#4702)
  * .github: Create FUNDING.yml
  * Port yuzu-emu/yuzu#2511: "common/file_util: Minor cleanup" (#4782)
  * video_core: change "left + width" to "right" in CanSubRect
  * configure_hotkeys: Remove unnecessary Settings::Apply() call
  * configure_hotkeys: Tidy up key sequence conflict error string
  * configure_hotkeys: Change critical error dialog into a warning dialog
  * input_common/sdl/sdl_impl: Silence sign conversion warnings
  * common/math_util: Provide a template deduction guide for Common::Rectangle
  * sequence_dialog: Reorganize the constructor
  * sequence_dialog: Remove unnecessary horizontal specifier

-------------------------------------------------------------------
Mon May 27 12:52:07 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190524:
  * Check input profile name for duplicates in New/Rename (#4779)

-------------------------------------------------------------------
Fri May 24 14:05:10 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190520:
  * CMakeLists: Handle VS 2019 in a less annoying manner
  * video_core: Fix fragment_shader compilation failure due to different type variable multiplication

-------------------------------------------------------------------
Sat May 18 15:09:54 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190518:
  * configure_hotkeys: Pass the dialog as a parent to SequenceDialog()
  * configure_hotkeys: Avoid dialog memory leak within Configure()
  * configure_hotkeys: Mark member variables as const where applicable in Configure()
  * configure_hotkeys: Make comparison check a little more self-documenting
  * configure_dialog: Amend constructor initializer list order
  * configure_hotkey: Remove unnecessary include
  * configure_hotkey: Make IsUsedKey() a const member function

-------------------------------------------------------------------
Mon May 13 13:01:12 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190511:
  * configure_dialog: Remove the Whats This? button from the dialog
  * yuzu/hotkeys: Remove unnecessary constructor
  * yuzu/compatdb: Remove unnecessary qualifiers
  * CMakeLists: Define QT_USE_QSTRINGBUILDER for the Qt target
  * memory: Reorder parameters of CopyBlock to a more sensible order

-------------------------------------------------------------------
Fri May 03 21:38:50 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190503:
  * Updated Contributing link in README.md
  * audio_core: dsp_hle: use better f32 to s16...
  * Port various minor changes from yuzu PRs (#4725)
  * Update translations (2019-04-30)
  * FileSys: Load the ticket when the CIAContainer is loaded
  * citra_qt: Update the multiplayer dialogs when game list is repopulated
  * core, citra_qt: Allow credentials update in multiplayer announce session
  * citra_qt/multiplayer: Disallow hosting rooms when preferred game is not selected
  * core, web_service: Check for error when registering rooms
  * core/telemetry_session: Only create the backend when we really need it
  * service/ps: Address review
  * service/ps: Implement PS:EncryptDecryptAES

-------------------------------------------------------------------
Sun Apr 28 12:43:29 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190427:
  * kernel/server_session: Return a std::pair from CreateSessionPair()
  * kernel/server_port: Return a std::pair from CreatePortPair()

-------------------------------------------------------------------
Fri Apr 26 17:43:20 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190426:
  * core: Namespace EmuWindow

-------------------------------------------------------------------
Wed Apr 24 12:34:17 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190423:
  * linux-flatpak: revert use precompiled cache
  * Set accepted EULA version to max value (#4728)
  * Enable ffmpeg support on Linux FlatPak (#4731)
  * HTTP_C: Implement SetClientCertContext, GetSSLError, BeginRequest, BeginRequestAsync (#4753)
  * kernel/wait_object: Make GetHighestPriorityReadyThread() a const member function

-------------------------------------------------------------------
Sat Apr 20 18:35:48 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190420:
  * Launch directly in Mac without terminal
  * kernel: Make handle type declarations constexpr
  * common/swap: Improve codegen of the default swap fallbacks
  * common/swap: Mark byte swapping free functions with [[nodiscard]] and noexcept
  * common/swap: Simplify swap function ifdefs
  * common/swap: Remove 32-bit ARM path
  * common/scope_exit: Replace std::move with std::forward in ScopeExit()
  * gl_rasterizer_cache: validate surface in mipmap/cubemap if the children is not validated yet
  * common/string_util: Move TextFromBuffer to string_util
  * applets/swkbd: Address comments
  * applets/swkbd: Add callback support
  * GetTextureSurface: return on invalid physical address early
  * gl_rasterizer_cache: unlink watchers if surface is moved to remove_surfaces but is not immediately removed
  * gl_rasterizer: ignore mipmap setting for cubemap before we implements it
  * gl_rasterizer_cache: invalidate watchers on (partial) surface invalidation
  * gl_shader_gen: use accurate LOD formula for texture 2D
  * gl_rasterizer: implement mipmap

-------------------------------------------------------------------
Mon Apr 15 16:43:51 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190415:
  * HLE/IPC: HLEContext can memorize the client thread and use it for SleepClientThread

-------------------------------------------------------------------
Mon Apr 15 11:46:25 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190413:
  * general: Use deducation guides for std::lock_guard and std::unique_lock

-------------------------------------------------------------------
Sat Apr 13 11:24:45 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190409:
  * yuzu_cmd/config: Silent implicit cast warning
  * service/service: Remove unncessary calls to c_str()
  * web_service: Remove unnecessary inclusions
  * Address remaining review comments
  * Address more reviews
  * Address first batch of review comments
  * applets: implement HLE mii selector applet
  * ptm: move ptm_shared_extdata_id to header
  * ConfigureInput::GetUsedKeyboardKeys(): Change index of home button to use NativeButton instead of magic number.
  * Destroy the callback after the stream is destroyed
  * fix compilation problems
  * core/core: Remove the global telemetry accessor function
  * yuzu: Remove usage of the global telemetry accessor
  * yuzu-cmd/yuzu: Replace direct usage of the global system telemetry accessor in main()
  * core/core: Replace direct usage of the global system telemetry accessor from Shutdown()
  * logging/backend: Make time_origin a class variable instead of a local static
  * logging/backend: Move CreateEntry into the Impl class

-------------------------------------------------------------------
Wed Apr 03 19:02:54 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190402:
  * fix clang-format target when using a path with spaces on windows
  * cleanup includes
  * Kernel: replace boost::intrusive_ptr with std::shared_ptr

-------------------------------------------------------------------
Sun Mar 31 12:46:21 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190330:
  * CAM: initialize states

-------------------------------------------------------------------
Mon Mar 25 13:45:35 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190324:
  * common/thread_queue_list: Remove unnecessary dependency on boost
  * common/bit_field: Make BitField trivially copyable
  * Y2R: pass in MemorySystem from service
  * IR: pass in Core::Timing for ExtraHID
  * DSP_DSP: use member system instead of global instance
  * ServiceFrameworkBase: remove ownership to ServerPort
  * core: reset kernel after service manager in Shutdown
  * APT: use member system instead of global instance
  * archive_extsavedata: add correct FileOpen delays
  * Address review comments
  * fs_user: Add a delay for each file open
  * travis: Use Ninja for Travis builds

-------------------------------------------------------------------
Fri Mar 22 13:28:09 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190321:
  * UDS: I was drunk
  * UDS: Change reply command ID for two versions of ConnectToNetwork
  * UDS: duplicate DecryptBeaconData implementation for deprecated version
  * UDS: implement ConnectToNetworkDeprecated and forward params to ConnectToNetwork
  * UDS: devide IPC and impl for ConnectToNetwork
  * UDS: implement BeginHostingNetworkDeprecated and forward params to BeginHostingNetwork
  * UDS: divide IPC and impl for BeginHostingNetwork
  * UDS: implement InitializeDeprecated and forward params to Initialize
  * UDS: divide IPC and impl for InitializeWithVersion

-------------------------------------------------------------------
Wed Mar 20 21:43:00 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190320:
  * Change resampling s16 -> u8 to respect aliasing rules
  * input_common/sdl_impl: Make lambda capture more specific in SDLState constructor
  * input_common/sdl_impl: Remove unnecessary std::chrono::duration construction
  * input_common/sdl_impl: Remove unused variable in SDLState constructor
  * Support signed 8bit pcm in cubeb input. Address review
  * Fix getopt on systems where char is unsigned by default
  * video_core: renderer_opengl: addressed comments...
  * video_core: renderer_opengl: addressed comments...
  * video_core: renderer_opengl: addressed comments...
  * video_core: renderer_opengl: gles color fix
  * archive_ncch: add open source mii archive
  * Clang-format
  * Remove global state and add mic hot swapping
  * Add ifdef around cubeb for android. Address a few review comments
  * Fix compiler error
  * Increase mic stream volume to max in case the users mic is set low for some reason
  * Address review comments
  * Rest of the owl
  * Fix
  * Initial Mic setup

-------------------------------------------------------------------
Sun Mar 17 19:03:14 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190315:
  * Fix GLES version header on picky drivers
  * travis/macos: Use macpack to bundle dependencies

-------------------------------------------------------------------
Thu Mar 14 21:38:44 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190314:
  * frontend: qt: fix a freeze where...
  * nfc: Improve implementation of GetAmiiboConfig
  * remove Common::TrimSourcePath
  * appease clang format
  * android: add logging
  * android: init user path
  * add java to .clang-format

-------------------------------------------------------------------
Sat Mar 09 17:33:46 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190308:
  * gdbstub: Fix some bugs in IsMemoryBreak() and ServeBreak. Add workaround to let watchpoints break into GDB. (#4651)
  * ISSUE_TEMPLATE: also ask for a log file
  * rpc: send ending packet in Server instead of UDPServer
  * applet/swkbd: use UTF-16 string to test string size
  * common/math_util: Move contents into the Common namespace
  * common/vector_math: Move Vec[x] types into the Common namespace
  * common/quaternion: Move Quaternion into the Common namespace
  * audio_core/codec: Resolve truncation warnings within DecodeADPCM
  * core/frontend/emu_window: Make ClipToTouchScreen a const member function
  * yuzu/compatdb: Remove unused lambda capture
  * citra_qt: when opnening a cia file directly, make Citra ask to install it
  * FS: pass down program ID for archive operation
  * citra_qt: Implement UI for adding/editing/deleting cheats
  * core/cheats: Add and change a few functions

-------------------------------------------------------------------
Wed Feb 27 15:22:21 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190225:
  * bit_field: Remove is_pod check, add is_trivially_copyable_v.
  * bit_field: Make all methods constexpr.
  * threadsafe_queue: Use std::size_t for representing size
  * threadsafe_queue: Remove NeedSize template parameter
  * Service: clear IPC header for unimplemented function stub
  * HLE/IPC: pass in kernel & memory reference from parent to avoid global state reference
  * ServerSession: replace GetPointer with block copy for HLE translation
  * HLE/IPC: move command buffer translation into kernel as TODO says
  * tests/audio_core: remove hack for system objects
  * ARM: pass MemorySystem separately in the constructor and make System optional
  * Memory: replace Core::CPU
  * Kernel/IPC: use MemorySystem from parameter
  * Kernel: replace usage of Core::System::GetInstance().PrepareReschedule() with callback
  * Kernel: replace usage of Core::System::GetInstance()::Timing()
  * kernel/thread: replace usage of Core::CPU()
  * ldr_ro: replace usage of Core::CPU()
  * service/soc_u: address review comments
  * service/soc_u: Implement getaddrinfo and getnameinfo
  * Memory: don't lock hle mutex in memory read/write
  * Kernel/SharedMemory: make owner_process a raw pointer

-------------------------------------------------------------------
Sat Feb 23 19:22:45 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190222:
  * citra_qt/main: make SPEED_LIMIT_STEP static constexpr
  * Remove GCC version checks
  * common: decouple getting and setting user paths
  * Fix mouse touchscreen in SBS 3D mode.

-------------------------------------------------------------------
Thu Feb 21 21:00:37 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190219:
  * travis/macos/upload: Don't hardcode ffmpeg/libvorbis versions

-------------------------------------------------------------------
Tue Feb 19 20:52:24 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190219:
  * video_core: use nested namespaces
  * core: use nested namespaces
  * audio_core: use nested namespaces

-------------------------------------------------------------------
Mon Feb 18 16:08:56 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190217:
  * citra_qt/config: actually save name of input profile
  * video_core: add workarounds to enable GLES support
  * sdl: add GLES support
  * externals/glad: add GLES loader

-------------------------------------------------------------------
Fri Feb 15 13:41:44 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190214:
  * audio_core: hle: mf: lint
  * audio_core: hle: mf: move transform initializer to ctor
  * audio_core: hle: mf: conform to RAII as possible
  * video_core: Sort predicate order to have semantically positive value first
  * citra_qt/config: backport minor changes from yuzu
  * configure_dialog: backport minor changes from yuzu
  * update ffmpeg path to new version
  * audio_core: hle: mf: correctly handle stream change
  * video_core: improve efficiency of CachedSurface::IsSurfaceFullyInvalid
  * audio_core: hle: mf: fix a memory accessing issue
  * audio_core: hle: mf: address yet another batch of reviews
  * audio_core: hle: mf: make DetectMediaType return a struct
  * audio_core: mf: make initialize function return smart pointer
  * audio_core: hle: mf: fix a regression...
  * audio_core: hle: mf: return values as std::optional
  * audio_core: hle: mf: use object proxy
  * audio_core: hle: mf: wrap enum in class
  * audio_core: hle: mf: avoid name conflicts
  * audio_core: hle: mf: use more enum
  * audio_core: hle: mf: multiple fixes...
  * audio_core: hle: mf: re-arrange comments
  * audio_core: hle: mf: cleanup headers
  * audio_core: hle: mf: rename functions
  * Media Foundation Memory Fix
  * Change travis MinGW build from FFmpeg to WMF
  * audio_core: hle: mf: transition to use smart pointers
  * audio_core: hle: mf: fix a regression...
  * audio_core: hle: mf: minor fix
  * audio_core: hle: mf: address another batch of reviews from @B3N30
  * audio_core: hle: mf: address reviews from @B3N30
  * audio_core: hle: fix compile
  * audio_core: dsp_hle: add Media Foundation decoder...
  * more reviews addressed
  * audio_core: fix msvc include issue
  * Addressed reviews
  * FFmpegDL: Added external_dlls folder to user folder AACDecoder: addressed reviews
  * Fixup: Merge conflict with dsp lle
  * CoreAudio::HLE: Add FFmpeg aac decoder
  * renderer_base: backport minor changes from yuzu
  * NWM_UDS: move states into the class

-------------------------------------------------------------------
Sat Feb 09 14:04:36 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190209:
  * citra_qt: show demos on game list
  * gl_rasterizer: change shadow_texture_bias from shader config var to shader uniform
  * Remove scripting switch in cmake
  * Remove libzmq submodule
  * Scripting: reimplement protocol over plan UDP using boost::asio

-------------------------------------------------------------------
Mon Feb 04 19:33:09 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190203:
  * remove all occurance of specifying endianness inside BitField
  * common/bitfield: make it endianness-aware
  * common/swap: remove default value for swap type internal storage
  * common/swap: use template and tag for LE/BE specification
  * gdbstub: only let Execute breakpoints write/restore BKPT opcodes into target memory
  * citra-qt: Add /default parsing for hotkeys. Also minor code cleanups.
  * citra-qt: Use structured bindings where applicable in `ConfigureHotkeys::applyConfiguration`. Fix a few minor issues.
  * citra-qt/configuration: Fix a weird issue where the tab UI disappears when language is changed.
  * citra-qt: Add back missing hotkeys & conflict fixes.
  * citra-qt: Commented & documented code related to hotkeys as & when required.
  * citra-qt: Fixed reloading hotkeys on-the fly.
  * citra-qt: Add base support for hotkey reconfiguration + UI (whole of PR citra-emu/citra#3786)
  * Fix crash when no files are selected
  * Add file extension to screenshot filename if not provided

-------------------------------------------------------------------
Sun Jan 27 22:49:01 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190126:
  * dsp_interface: fix sound being played while volume is 0
  * travis: update flatpak sdk to 5.12
  * travis/macos/upload: Manually invoke install_name_tool for a few stragglers
  * travis: Simplify macos/upload.sh

-------------------------------------------------------------------
Thu Jan 24 21:16:43 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190123:
  * vfp_helper: Remove accidental use of the comma operator in vfp_single_unpack()
  * yuzu/configuration/configure_web: Remove an unused lambda capture
  * yuzu/configuration/configure_web: Use an ellipsis with 'Verifying' text
  * Use QPixmap/QIcon for background color selection button
  * Actually fix the race condition
  * Fix types
  * Do 3D slider updating in the HID module
  * Revert "Change 3D slider in-game"
  * Change 3D slider in-game

-------------------------------------------------------------------
Tue Jan 22 13:24:18 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190121:
  * game_list: Remove a reference of a reference
  * audio_core: remove unnecessary spaces on comments
  * frontend: Remove V-Sync option from UI

-------------------------------------------------------------------
Fri Jan 18 13:55:25 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190117:
  * Frontend: Only reload icons in chat when the chat room is open
  * citra_qt/multiplayer: Update themed icon on theme change
  * android: fix native library inclusion
  * android: use better icons
  * android: move cmakelist
  * multiplayer: minor UI fixes
  * minor ui changes
  * fix regression
  * move comment
  * fix clang-format
  * add a comment, rename old index
  * fix clang-format
  * if to clamp
  * address some comments
  * Update src/citra_qt/configuration/config.cpp
  * Update src/core/settings.h
  * clang-format; address one comment
  * more fixes
  * another fix
  * more fixes
  * another fix
  * more fixes
  * fixes
  * Apply suggestions from code review
  * Add multiple input profile support

-------------------------------------------------------------------
Sat Jan 12 19:28:10 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190111:
  * update teakra
  * DSP/LLE: add multithread mode
  * Common/Barrier: add method to get current generation
  * Update teakra and address more comments
  * Update teakra to fix macos issue; address comment feedbacks
  * update teakra: implement idle skipping
  * audio_core/lle: link ahbm and audio callback
  * Configuration: add option to use DSP LLE
  * audio_core/lle: only process pipe signal after loading
  * Service/DSP:  implement semaphore event
  * audio_core/hle,lle: implement UnloadComponent
  * audio_core/lle: implement LoadComponent
  * audio_core/hle: move implementation of LoadComponent
  * audio_core/lle: implement GetDspMemory and SetServiceToInterrupt
  * DSP_DSP: avoid global in ReadPipe
  * audio_core/lle: implement PipeRead/GetPipeReadableSize
  * DSP_DSP: avoid global in WriteProcessPipe
  * audio_core/lle: implement PipeWrite
  * audio_core/hle,lle: implement SetSemaphore
  * audio_core/lle: implement RecvDataIsReady
  * audio_core/hle: move implementation of RecvDataIsReady
  * audio_core/lle: implement RecvData
  * DSP/HLE: move implementation of RecvData to audio_core, behind common interface
  * audio_core: add teakra and lle interface

-------------------------------------------------------------------
Tue Jan 08 20:13:39 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190107:
  * Added new buttons to movie system
  * Added GPIO14 button and UI config buttons
  * Fixed coding style
  * Removed unnecessary debug key abbreviations
  * Added Debug Button

-------------------------------------------------------------------
Wed Jan 02 16:22:40 UTC 2019 - pousaduarte@gmail.com

- Update to version 20190102:
  * externals: Update fmt to 5.3.0
  * network: remove cpp-jwt library dependency

-------------------------------------------------------------------
Sun Dec 30 19:54:12 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181228:
  * audio_core: Make g_sink_details internally linked

-------------------------------------------------------------------
Fri Dec 28 13:19:59 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181227:
  * core/memory: Remove unnecessary memory zeroing in MemorySystem::Impl
  * renderer_opengl: Correct forward declaration of FramebufferLayout
  * update CONTRIBUTING link

-------------------------------------------------------------------
Sun Dec 23 14:01:26 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181221:
  * citra_qt/multiplayer: Add `View Profile` option
  * citra_qt/multiplayer: Change style for pinged messages a bit
  * web_service: Change endpoint to `/lobby`.
  * network: Make citra mods optional and disabled by default
  * network, citra_qt: Give moderation permission to community mods
  * network/packet: Fix reading vectors/arrays of strings
  * citra_qt/multiplayer: Add user ping support
  * citra: add errors callback and add status message types
  * dedicated_room: load and save ban list
  * citra_qt: Save ban list for room hosting
  * citra_qt/multiplayer/chat_room: Add moderation to context menu
  * citra_qt: Add a moderation dialog
  * network/room_member: Add moderation functions
  * network/room: Moderation implementation
  * multiplayer: fix "Connected" message not appearing on first connection
  * citra: add status messages and fix missing errors
  * multiplayer: Add status message for user joining/leaving
  * citra_qt: Use the new verify backend; UI changes
  * citra-room: Add verify backend and use new announce api
  * web_backend: added GetExternalJWT function
  * core, web_service: Changes to announce service
  * network, web_service: Add Verification backend and use new lobby API
  * Add Support for Room Descriptions
  * network: check Console ID conflicts
  * multiplayer: check nickname regex server side
  * Multiplayer: Send an error message when connecting to a full room
  * network: bump multiplayer version
  *  yuzu/game_list_worker: Move std::string construction after the termintion check in callbacks
  * yuzu/configuration: Make slots private where applicable
  *  yuzu/configuration: Add missing override specifiers to configuration-related classes
  * yuzu/configuration/configure_input: Default destructor in the cpp file
  * remove border from GameList

-------------------------------------------------------------------
Thu Dec 20 12:09:11 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181219:
  * Core, test: perform kernel and memory destruction in the correct order
  * APT: enable LLE applet
  * Memory: apply rasterizer cache mark to all page tables and the global marker
  * Memory: register page tables into a list for rasterizer cache marking
  * Memory: mark pages on mapping if it is already rasterizer-cached
  * Memory: move memory setup into MemorySystem
  * Memory: create rasterizer cache marker
  * gl_rasterizer_cache/MortonCopy: avoid read/write to invalid address

-------------------------------------------------------------------
Mon Dec 17 14:30:46 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181217:
  * (QLabel)_is_already_in_use-Correct_Auto_Default
  *  yuzu/wait_tree: Pass QString by value and std::move in the initializer list for WaitTreeText

-------------------------------------------------------------------
Sat Dec 15 13:53:23 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181215:
  * host_room: change minimum members to 2

-------------------------------------------------------------------
Thu Dec 13 17:17:51 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181212:
  * dedicated_room: allow maximum members = 254

-------------------------------------------------------------------
Tue Dec 11 13:32:12 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181208:
  * hle/service: Remove unnecessary using declarations
  * hle/service, hle/sm: Use structured bindings where applicable
  * hle/service, hle/sm: Use structured bindings where applicable

-------------------------------------------------------------------
Fri Dec 07 12:57:22 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181206:
  * fix clang-format
  * Memory: move memory chunk into pImpl and make them dynamically allocated
  * Address code style comments
  * Pass system into arm interpreter; fix tests
  * Memory: IsValidVirtualAddress can be global
  * Memory: move states into class
  * Memory: move MarkRegionCached into class
  * Memory: move block operations into class
  * Memory: move Read/Write8/16/32/64 and ReadCString into class
  * LDR_RO: pass memory in CROHelper
  * Memory: move GetPointer into class
  * Memory: move IsValidVirtualAddress into class
  * Memory: move GetPhysicalPointer and IsValidPhysicalAddress into class
  * hw/gpu: pass in memory reference
  * audio_core: pass in memory reference
  * VideoCore: pass in memory system
  * Memory: move PageTable functions into class
  * Memory: move GetFCRAMOffset into MemorySystem
  * Kernel: pass in MemorySystem
  * Memory: create MemorySystem class
  * web_service: move telemetry condition from TelemetrySession constructor to destructor
  * Put AddPostDataAscii in the function list
  * Add HTTP_C::AddPostDataAscii

-------------------------------------------------------------------
Thu Dec 06 09:23:28 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181205:
  * renderer_opengl: Fix string comparison

-------------------------------------------------------------------
Tue Dec 04 17:52:57 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181204:
  * logging: Add DebuggerBackend for logging to Visual Studio

-------------------------------------------------------------------
Tue Dec 04 13:36:14 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181203:
  * DSP: Add a comment about physical address masking
  * DSP: Add address mask for physical pointers to audio data buffers

-------------------------------------------------------------------
Sun Dec 02 09:51:29 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181202:
  * travis: MinGW: scan_dll: merge two scans into one
  * travis: linux-mingw: do not install pefile...
  * Revert "travis: Add missing flags for flatpak build"
  * citra_qt: rename the menu to Tools
  * citra_qt, video_core: Screenshot functionality
  * travis: Use Docker for clang-format target
  * mii_selector: Use BitField where possible
  * mii_selector: map raw data to the MiiResult struct
  * applets: stub mii selector to always return a standard mii

-------------------------------------------------------------------
Fri Nov 30 13:26:29 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181130:
  * travis: Add missing flags for flatpak build

-------------------------------------------------------------------
Wed Nov 28 21:54:37 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181128:
  * ir:/movie: Replace for-loops with fmt::join
  * README: add bitrise badge
  * common/thread: Drop Hungarian notation on SetCurrentThreadName's parameter
  * common/thread: Make Barrier's 'count' member non-const
  * common/thread: Initialize class member variables where applicable
  * common/thread: Group non-member functions together
  * common/thread: Remove SleepCurrentThread()
  * common/thread: Remove unused CurrentThreadId()
  * RPC: add missing include
  * Memory: remove CopyBlock with current process
  * Memory: remove ZeroBlock with current process
  * Memory: remove WriteBlock with current process
  * Memory: remove ReadBlock with current process
  * ldr_ro: pass process reference to memory operation
  * Memory: remove GetMMIOHandler with current process
  * Memory: remove IsValidVirtualAddress with current process
  * Memory: replace GetPointerFromVMA with GetPointerForRasterizerCache

-------------------------------------------------------------------
Sun Nov 25 22:04:26 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181124:
  * kernel/shared_memory: std::move the string parameter in SetName()

-------------------------------------------------------------------
Sat Nov 24 15:27:25 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181124:
  *  kernel/shared_memory: Make Map() and Unmap() take the target process by reference rather than as a pointer
  * kernel/shared_memory: Add a const qualified member function overload for GetPointer()
  * kernel/shared_memory: Make data members private
  * kernel/handle_table: Move private static functions into the cpp file
  * kernel/handle_table: Default destructor in the cpp file
  * Handle missing git info when building
  * common/math_util: Simplify std::make_signed usages to std::make_signed_t
  * common/math_util: Make Rectangle's constructors constexpr
  * common/math_util: Remove unnecessary static from PI
  * common/math_util: Remove unused IntervalsIntersect() function
  * Fix functions which used Common::ArrayToString
  * string_util: Remove ArrayToString()
  * string_util: Remove TryParse()
  * string_util: Remove ThousandSeparate()

-------------------------------------------------------------------
Tue Nov 20 20:44:14 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181120:
  * core: undef PAGE_SIZE and PAGE_MASK
  * android: set up cmake
  * Externals: Find and build cpu-features for cryptopp on android

-------------------------------------------------------------------
Tue Nov 20 13:55:57 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181119:
  * service: Mark MakeFunctionString with the [[maybe_unused]] attribute.
  * Include imageformat dependencies with releases (appveyor)
  * Include imageformat dependencies with releases
  * gl_rasterizer_cache: Add profiles for Copy and Blit
  * gl_resource_manager: Profile creation and deletion
  * gl_stream_buffer: Profile orphaning of stream buffer.
  * gl_resource_manager: Split implementations in .cpp file
  * Kernel/IPC: fix mapped buffer target address
  * Memory: GetPhysicalPointer should accept right open bound address
  * VMManager: remove all backing block related functions
  * VMManager: change MapMemoryBlockToBase to use raw backing memory
  * IPC: store mapped buffer info in session context
  * tests: use VMManager::MapBackingMemory
  * SVC: QueryMemory merges similar VMA

-------------------------------------------------------------------
Mon Nov 19 13:31:08 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181118:
  * Service: release shared memory object when finalize
  * Kernel/SharedMemory: set and reset source memory state
  * Remove ApplyIPS from the class and header
  * Make ApplyIPS static and private
  * Stay in bounds
  * Add rle record support
  * Log invalid IPS attempt
  * Check for EOF
  * Updated based on review
  * Be more intentional with check
  * Minor style changes and use memcpy
  * Added IPS patching

-------------------------------------------------------------------
Sun Nov 18 15:55:35 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181118:
  * Fix 16bit comparison operations

-------------------------------------------------------------------
Sat Nov 17 22:20:07 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181116:
  * Port yuzu-emu/yuzu#1137: "renderer_opengl: Namespace OpenGL code" (#4423)
  * add initial bitrise CI support for android
  * Add CheatEngine and support for Gateway cheats (#4406)
  * qt: Move Open yuzu Folder action from Help to File
  * add test dependencies
  * android: create bare application
  * android: add build files
  * android: add basic resources
  * Memory: remove unused VirtualToPhysical
  * GSP: uses a dedicate VirtualToPhysical converter
  * Memory: Use the fixed PAddr directly in RasterizerFlushVirtualRegion
  * Skyeye: unstub cp15 virtual to physical address
  * SVC: hide details in pimpl
  * SVC: use context and generic templates
  * ResultCode: use default copy assignment
  * SVC: move function_wrappers.h into kernel
  * Process: check source/target overlap for Map/Unmap
  * ldr_ro: properly map CRS/CRO buffer
  * Kernel/Process: implement prvileged Map/Unmap
  * Common/Bitfield: store value as unsigned type
  * qt: Add help option to open yuzu folder
  * citra_qt/configuration: fix language configuration issues

-------------------------------------------------------------------
Tue Nov 13 21:33:25 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181113:
  * citra_qt: Add Amiibo hotkeys, notify user of loading errors (#4387)
  * Memory: IO area is at most 4MB
  * Memory: convert PAddr for N3DS FCRAM extension
  * Memory: replace PhysicalToVirtualAddress with a more dedicated function
  * Kernel, APT: SharedFont/SharedMemoryOnSharedDevice should always use old linear heap VAddr

-------------------------------------------------------------------
Mon Nov 12 13:58:13 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181111:
  * filesys/ncch: prevent buffer overflow on calculating SHA256
  * Kernel: correct MemoryState for TLS

-------------------------------------------------------------------
Sat Nov 10 16:44:55 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181108:
  * CONTRIBUTING.md: migrate to the wiki
  * Flatpak support (#4383)
  * ldr_ro: change std::tie to structured binding
  * Kernel: reimplement memory management on physical FCRAM (#4392)
  * CoreTiming: wrap into class

-------------------------------------------------------------------
Tue Nov 06 19:37:02 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181106:
  * Updated translations (18/11/02)

-------------------------------------------------------------------
Sun Nov 04 20:19:06 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181104:
  * Kernel: thread manager still has to be destructed first
  * Kernel: destruct thread/timer managers after processes (#4399)

-------------------------------------------------------------------
Thu Nov 01 23:14:13 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181101:
  * Service, Kernel: move named port list to kernel
  * Kernel: move memory_regions into Kernel instance
  * HLE: move SharedPage into Kernel
  * Kernel: make config_mem and MapSharedPages members of KernelSystem
  * HLE: move config_mem to kernel

-------------------------------------------------------------------
Wed Oct 31 14:13:38 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181030:
  * LLE Mapped Buffer: Addressed comments.
  * LLE Mapped Buffer: Corrected behavior
  * LLE Mapped Buffer: addressed comments
  * LLE Mapped Buffer: Add unmapping, zero-size, and multiple page handling

-------------------------------------------------------------------
Tue Oct 30 14:18:02 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181030:
  * core: use internal kernel pointer directly
  * Kernel/CodeSet: change struct to class
  * configure_general: Add an option to reset defaults
  * Move "Report compatibility" button to Emulation tab
  * compatdb: Use a seperate endpoint for testcase submission
  * FileSys/DelayGenerator: add missing #include and virtual dtor (#4363)
  * Put WebResult into a seperate file
  * graphic_breakpoints: Correct translation of strings in BreakpointModel's data() function
  * CMakeLists: Use PROJECT_SOURCE_DIR instead of CMAKE_SOURCE_DIR
  * common: Actually remove memory_util.cpp
  * configure_system: Default initialize member variables
  * configure_system: Amend function casing
  * configure_system: Add missing override specifier on the destructor
  * configure_system: Make public slots private
  * bootmanager: Use QStringLiteral instead of std::string to represent the window title
  * yuzu/configuration/config: Use a std::unique_ptr for qt_config instead of a raw pointer
  * yuzu/configuration/config: Reorganize member variable and function layout
  * game_list: Make game list column headers translatable
  * CMakeLists: Remove EMU_ARCH_BITS definition
  * common: Remove memory_util.cpp/.h
  * kernel/timer: add TimerManager for timer system states
  * kernel/Thread: move thread list into the manager
  * kernel/Thread: move thread wake up table and callback handle into the manager
  * Kernel/Thread: move thread queue, current thread, and scheduling related function into the manager
  * kernel/thread: move next_thread_id into manager
  * kernel/thread: add ThreadManager
  * Removed unused import binascii
  * kernel/thread: change owner_process parameter to reference
  * cubeb_sink: ignore null-name device when selecting
  * SeedDB: replace seek(tell, set) with seek(cur) (#4344)
  * Kernel: change owner_process in Thread/SharedMemory to raw pointer
  * citra_qt: fix translation for opengl version error
  * citra_qt: add seconds section to clock settings (#4347)
  * nfc: Add Amiibo support (REOPENED) (#4337)
  * CMakeLists: Use target_compile_definitions instead of add_definitions to define YUZU_ENABLE_COMPATIBILITY_REPORTING
  * thread/kernel: remove unused callback_id
  * core/CMakeLists: Make all web_service-related libraries private
  * web_backend: Make Client use the PImpl idiom
  * telemetry_json: Use the PImpl idiom to avoid unnecessary dependency exposure
  * telemetry_json: Add missing override specifier to the destructor of TelemetryJson
  * telemetry_json: Take std::string parameters by value
  * telemetry_json: Remove unnecessary includes
  * telemetry_session: Remove doxygen comment for a non-existent parameter
  * telemetry_session: Add missing includes
  * telemetry_session: Remove unimplemented FinalizeAsyncJob prototype
  * kernel: make handle table per-process
  * kernel/thread: use std::unordered_map for callback record
  * Kernel/Timer: use unordered_map for callback recording
  * kernel/process: move current process to kernel instance
  * kennel/process: move process list to kernel instance
  * kernel/process: move next_process_id to kernel instance
  * svc: Correct vma_map boundary check within QueryProcessMemory
  * web_service: hide dependencies to private
  * Address review comments
  * Review comments - part 5
  * Review comments -part 4
  * Review comments - part 3
  * Address more review comments
  * Address a bunch of review comments
  * Stop splitting includes
  * game_list_p: Take map iterator contents by const reference
  * game_list_p: Amend typo in GameListItemCompat's constructor parameter
  * yuzu: Move compatibility list specifics to their own source files
  * yuzu: Move GameListWorker to its own source files
  * Kernel: pass ref down to Object and wrap ID counter into kernel state
  * kernel: pass ref to shared memory
  * Kernel: wrap resource limit state into kernel state; pass ref to resource limit
  * Kernel: pass ref to session pair
  * Kernel: pass ref to port
  * Kernel: pass ref to timer
  * Kernel: pass ref to sempahore
  * ServiceManager: pass down core reference
  * Kernel: pass ref to thread
  * kernel: pass ref in Process
  * kernel: pass ref in CodeSet
  * Kernel: pass ref in Mutex
  * Kernel: pass Kernel ref in Event
  * Kernel: pass Kernel reference into AddressArbiter
  * Kernel: add KernelSystem class
  * apply fixes
  * Load keys from new3DS native firm
  * Load keys from the o3DS save mode native firm
  * HW::AES: add generator_constant
  * Load AES keys stored in boot9.bin (#4335)
  * cmake: mingw also needs _FILE_OFFSET_BITS=64
  * citra_qt/main: Apply the [[maybe_unused]] attribute to the parameter of SetDiscordEnabled()
  * CMake: disable scripting on default
  * FileSys::Ticket::Load: Return error if signature type does not match (#4339)
  * citra_qt/main: Simplify OnMenuLoadFile()
  * citra_qt: use enum classes for the settings
  * only redefine 64 bit file operation for MSVC
  * citra: fix cemuhook module crash
  * Add GetModule() helper functions, for HID, CAM, and CFG
  * Fixup: Remove unneeded GetUsername
  * remove GetCurrentModule() functions in HLE Services
  * remove std::tie in sdl_impl
  * fix deadzone max value
  * citra_qt: Add Game List configuration
  * More fixes
  * Adressed review comments
  * Use SPSCQueue::PopWait in Scripting
  * threadsafe_queue: Add WaitIfEmpty and use it in logging
  * core, citra_qt: add frame advancing to framelimiter
  * fixup! Joystick: Allow for background events; Add deadzone to SDLAnalog

-------------------------------------------------------------------
Fri Oct 12 17:49:06 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181011:
  * travis: Ignore binary files when checking for trailing whitespace
  * citra_qt/multiplayer: retranslate multiplayer dialogs
  * fs/archive: wrap states into archive manager
  * fs/archive: move file and directory classes to their own files
  * Handle cases when std::optional does not contain a value
  * Replace boost::optional with std::optional where possible

-------------------------------------------------------------------
Wed Oct 10 12:43:28 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181009:
  * implemented touch in Qt and SDL
  * NWM_UDS: Signal bind_node_event in Unbind (#4321)
  * citra-qt: disable directory watcher during CIA installation (#4284)
  * Services/APT: Better implementation of PrepareToDoApplicationJump and DoApplicationJump.
  * fix reply header
  * Move if
  * Address comment
  * Implement SeedDB & Seed Crypto
  * Force camera pixel format to RGB565 on Linux

-------------------------------------------------------------------
Sun Oct 07 19:46:59 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181007:
  * Adressed feedback
  * Cleanup NWM_UDS::SendTo
  * Add filter to PacketHandling; Fix some issues with Disconnect

-------------------------------------------------------------------
Sun Oct 07 14:07:44 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181007:
  * Logging: Change the TimeStretch::Process log from debug to trace level.
  * text_formatter: Avoid unnecessary string temporary creation in PrintMessage()
  * ui_settings: Place definition of the theme array within the cpp file

-------------------------------------------------------------------
Sat Oct 06 23:22:02 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181006:
  * CONTRIBUTING.md - remove note about casting numeric types
  * Update fmt to 5.2.1 It seems to fix msvc warnings
  * Remove "#" in the version number (#4311)
  * movie: fix some checks Fixes invalid movie error

-------------------------------------------------------------------
Fri Oct 05 18:51:55 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181005:
  * Core: pass down Core::System reference to all services (#4272)
  * appveyor: fix mingw build (#4303)
  * input/sdl: lock map mutex after SDL call
  * movie: fix default value in StartPlayback
  * movie: Add clock init time to CTM header

-------------------------------------------------------------------
Fri Oct 05 11:41:19 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181005:
  * Revert "Port yuzu/#1367 from yuzu: "game_list: Handle plurals within setFilterResult() better""
  * configure_audio: Move combo box index setting to their own functions
  * configure_audio: Use QString::fromStdString() for converting audio device names
  * configure_audio: Add disambiguation comment for the volume percentage string
  * configure_input: Make analog mapping strings translatable
  * Services/AM: Implemented BeginImportProgramTemporarily, EndImportProgramWithoutCommit and CommitImportPrograms.
  * ncch_container: choose the first id as extdata id when extended save data access is used
  * citra_qt, core: game list "Open XXX Location" improvements
  * nwm/uds_data: specify endianness for enum
  * nwm/uds_connection: specify endiannes for enum
  * service/cro: specify endianness for enum
  * hle/swkbd: specify endianness for enum and other members
  * filesys/archive_selfncch: specify endiannes for enum
  * filesys/archive_ncch: specify endianness for enum
  * common/swap: add swap template for enum

-------------------------------------------------------------------
Wed Oct 03 20:19:25 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181003:
  * fixup! Give frontend access to the hle service interfaces
  * Give frontend access to the hle service interfaces
  * Services/AM: Support using FS subfiles with the CIA-related service functions.
  * Slightly changed wording of LOG_ERROR statements.
  * Services/AM: Implement the GetSystemUpdaterMutex function.

-------------------------------------------------------------------
Tue Oct 02 13:05:07 UTC 2018 - pousaduarte@gmail.com

- Update to version 20181002:
  * travis: disable scripting for transifex push job
  * arm_dynarmic: Pass breakpoints to gdbstub
  * kernel/object: Remove unnecessary std::move from DynamicObjectCast()
  * qt/configure_system: FS decoupled
  * cfg: access FS via backend directly
  * ptm: access FS via backend directly
  * fs: remove ArchiveFactory_ExtSaveData::Initialize
  * cecd: access FS via backend directly
  * http_c: access FS via backend directly
  * APT: access FS via backend directly
  * OSX: Set MACOSX_DEPLOYMENT_TARGET to 10.13
  * Service/AM: handle encrypted CIA
  * FileSys/cia: add ticket parsing
  * HW/AES: add common key loading and selecting
  * string_util: unify UTF8<->UTF16 conversion to codecvt
  * Input: Remove global variables from SDL Input
  * Input: Copy current SDL.h/cpp files to impl
  * string_util: remove TString conversion for windows
  * string_util: remove ShiftJIS/CP1252 conversion function
  * loader, cfg: choose region based on language if multiple regions available
  * web_backend: protect jwt cache with a mutex
  * web_service: stop using std::future + callback style async
  * citra_qt/configuration: misc input tab improvements
  * fixup! fix num_client_certs in CloseClientCertContext
  * fix num_client_certs in CloseClientCertContext
  * fix error code comment
  * service::HTTP_C: Implement OpenClientCertContext, OpenDefaultClientCertContext, CloseClientCertContext

-------------------------------------------------------------------
Sat Sep 29 18:13:35 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180927:
  * update git hash for eshop lock bit fix
  * archive_ncch: add open source country list archive
  * citra_qt/configuration: Add Play Coins setting
  * service/ptm: Add Get/SetPlayCoins functions
  * service/cecd: Corrected cecd:s function table
  * service/cecd: Add hmac handling
  * service/cecd: Update handling of /outbox/boxinfo and /outbox/obindex
  * service/cecd: Utilize CryptoPP::Base64Encoder for message id
  * service/cecd: Fixed enum item naming style
  * service/cecd: Addressed comments, code cleanup
  * service/cecd: Corrected eventlog.dat creation
  * service/cecd: Clang format fixup
  * service/cecd: Migrate Common::StringFromFormat(...) to fmt::format(...)
  * service/cecd: Updated function names
  * service/cecd: Implement mboxlist handling
  * service/cecd: Update header checks and increased debug logging
  * service/cecd: Corrected behaviour, started checking and updating file headers
  * service/cecd: Output icon to MBoxData.001 and title to MBoxData.010
  * service/cecd: Update default values for in/out box info header
  * service/cecd: Add MBox directory check to OpenAndRead and OpenAndWrite and added a CreateAndPopulateMBoxDirectory function
  * service/cecd: Add initial files to archive after it is formatted
  * service/cecd: Addressed comment about PopEnum
  * service/cecd: Implement basic file handling functions.
  * service/cecd: Implement functions
  * service/cecd: Stub some functions

-------------------------------------------------------------------
Wed Sep 26 18:17:51 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180925:
  * Adding description to CMake option
  * travis: Make macOS' CI use Xcode 10
  * cmake: Output binaries to bin on every platform
  * Review changes for enable/disable scripting
  * Added CMake option to enable/disable scripting support
  * game_list: Handle plurals within setFilterResult() better
  * Address review comments
  * kernel/thread: Include thread-related enums within the kernel namespace
  * thread: Convert ThreadStatus into an enum class

-------------------------------------------------------------------
Mon Sep 24 18:12:08 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180924:
  * citra_qt/multiplayer: three minor fixes

-------------------------------------------------------------------
Sun Sep 23 20:52:26 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180923:
  * Meta: Add gitattributes file
  * Fix icon licenses (#4250)
  * svc_wrap: Convert the PARAM macro into a function
  * file_util: Use an enum class for GetUserPath()
  * service: Use nested namespace specifiers where applicable
  * cubeb_sink: Get rid of variable shadowing within CubebSink's constructor
  * audio_core/time_stretch: Silence truncation warnings in Process()
  * common/thread: remove YieldCPU()
  * common/thread: remove unnecessary macro for thread_local
  * gl_stream_buffer: Fix use of bitwise OR instead of logical OR in Map()
  * common/logging: Amend documentation comments
  * Addressed feedback
  * Addressed feedback
  * Set citra-qt project as default StartUp Project in Visual Studio
  * citra.py: use IntEnum for request types
  * common/logging/filter: Replace C-style case with C++ static_cast
  * common/logging/filter: Make constructor explicit
  * Set citra-qt project as default StartUp Project in Visual Studio
  * change buffer index from 1 to 0.
  * fix clang-format
  * only get src_adr if input_adr available
  * only get src_adr if input_adr available
  * do not init and copy to ctr_dest_addr unless have data
  * fix clang-format
  * add RecvFromOther cmd
  * add header RecvFromOther
  * fix soc service - RecvFrom crash on Citra but not on 3DS

-------------------------------------------------------------------
Fri Sep 21 12:56:53 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180921:
  * ring_buffer: Fix Push
  * cubeb_sink: Improve logging
  * dsp_interface: Move volume control to audio thread
  * time_stretch: Simplify audio stretcher
  * audio_core: Simplify sink interface
  * common: Implement a ring buffer

-------------------------------------------------------------------
Thu Sep 20 12:30:46 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180919:
  * Xbyak 5.71 ---
  * service/apt: Implement soft reset & CloseApplication

-------------------------------------------------------------------
Tue Sep 18 23:26:54 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180917:
  * kernel/svc: Do nothing if svcOutputDebugString's length is <= 0
  * Antialias game list compatibility pixmaps
  * game_list: Resolve variable shadowing within LoadCompatibilityList()
  * game_list: Use QJsonValueRef() within LoadCompatibilityList()
  * audio_core/sink_details: Change std::string parameter into std::string_view

-------------------------------------------------------------------
Sat Sep 15 12:02:18 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180915:
  * citra_qt: add Camera tab to "System" category
  * Update translations (2018-9-15)
  * Qt/Configure: Use sidebar to divide tabs into smaller groups

-------------------------------------------------------------------
Thu Sep 13 23:40:23 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180913:
  * ipc: fix typo
  * Change variable name to web_api_url
  * Rename announce-url, use variable for JWT retrieval url
  * Fix compilation
  * web_service: Unify links for web service endpoints

-------------------------------------------------------------------
Wed Sep 12 13:12:56 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180911:
  * Fix #4203
  * Initial support for scripting (#4016)
  * SDLJoystick: Addressed review comments
  * svc: change unknown to thread in CreateThread

-------------------------------------------------------------------
Sun Sep 09 10:13:37 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180908:
  * Joystick hotplug support (#4141)

-------------------------------------------------------------------
Sat Sep 08 11:41:06 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180908:
  * citra: fix SDL logging
  * room_member: RakNet -> ENet
  * room_member: fix 3 typos
  * Prefix all size_t with std::
  * Address review comments
  * Fixup! string_util: Remove StringFromFormat() and related functions
  * string_util: Remove StringFromFormat() and related functions
  * core, citra_qt: unify status of system archives and shared fonts

-------------------------------------------------------------------
Thu Sep 06 07:32:26 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180905:
  * Make bitfield assignment operator public
  * Fix compilation errors
  * common: Convert type traits templates over to variable template versions where applicable
  * file_util: Remove compiler version checks around is_trivially_copyable()

-------------------------------------------------------------------
Tue Sep 04 13:20:25 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180904:
  * fixup! fixup! Service::SM: Wait till client is registered
  * fixup! fixup! Service::SM: Wait till client is registered
  * Backport some review fixes of Lioncash
  * gl_rasiterzer/proctex: revert back to round() for Nearest sampling
  * Service/HID: update function table
  * fixup! Service::SM: Wait till client is registered
  * Service::SM: Wait till client is registered

-------------------------------------------------------------------
Sun Sep 02 18:40:29 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180902:
  * Replace ToBool() with static_cast()
  * bit_field: Convert ToBool() into explicit operator bool
  * Tests: Remove glad test OS X work-around
  * cubeb_sink: Protect queue against multithreaded access
  * NCCH_COntainer: Add file_path log to Load()
  * kernel/object: Tighten object against data races
  * logging/backend: Use const reference to refer to log filter
  * arm_dynarmic: Print current instruction when ExceptionRaised
  * externals: Update dynarmic to 7a2a4c8

-------------------------------------------------------------------
Sat Sep 01 10:50:56 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180901:
  * Port #1030 from yuzu: "externals: Update to SDL2-2.0.8"
  * common: Remove unused old breakpoint source files
  * renderer_opengl: Treat OpenGL errors as critical.
  * telemetry_session: Don't allocate std::string instances for program lifetime in GetTelemetryId() and RegenerateTelemetryId()
  * gl_stream_buffer: Add missing header guard
  * emu_window: Ensure WindowConfig members are always initialized
  * memory: Make prototype parameter names match their definitions
  * memory: Remove unnecessary const qualifiers in prototypes
  * common/xbyak_abi: Mark defined functions in header as inline
  * common/xbyak: Use nested namespace specifiers where applicable
  * CMakeLists: Add architecture detection for AArch64
  * vector_math: Use variable template version of is_signed in Vec classes

-------------------------------------------------------------------
Mon Aug 27 13:05:46 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180826:
  * Add system time configuration (#4043)
  * gdbstub: Use type alias for breakpoint maps
  * Remove newline
  * gdbstub: Move all file-static variables into the GDBStub namespace
  * gdbstub: Replace PAddr alias with VAddr
  * video_core: Make global EmuWindow instance part of the base renderer …
  * Clean up aboutdialog.h
  * Port #942 from yuzu: "qt: Minor cleanup-related changes"
  * citra_qt: add motion/touch config
  * input_common, common: Add a few functions

-------------------------------------------------------------------
Sun Aug 26 17:40:56 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180826:
  * citra_qt: record movie record/playback path
  * citra_qt, movie: allow recording/playback before emulation starts
  * citra_qt: Add movie frontend
  * core/movie: Movie refactor, add a completion callback

-------------------------------------------------------------------
Sun Aug 26 16:55:47 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180826:
  * web_service: Change authentication system to use JWT (#4041)
  * Fix clang-format
  * kernel: Move object class to its own source files

-------------------------------------------------------------------
Sat Aug 25 16:54:27 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180825:
  * qt/hotkey: Get rid of global hotkey map instance
  * Port "externals: Update catch to 2.3.0" from yuzu (#4060)
  * Port "kernel/event: Make data members private" from yuzu (#4077)
  * Port "client_port: Make all data members private" from yuzu (#4064)
  * vector_math: Remove unimplemented function prototypes
  * vector_math: Make functions constexpr where applicable
  * vector_math: Convert typedefs to type aliases
  * Port #943 from yuzu: "game_list: Join declarations and assignments in onTextChanged()"
  * citra-qt: Use Qt 5 signal/slots where applicable
  * Fix compile errors
  * kernel/process: Use std::array where applicable
  * kernel/process: Use accessors instead of class members for referencing segment array
  * kernel/vm_manager: Convert loop into std::any_of()
  * kernel/vm_manager: Use const where applicable
  * kernel/vm_manager: Use the VAddr type alias in CarveVMA()
  * sink_details: Deduplicate long std::function repetition
  * sink_details: std::move std::function instances
  * video_core: Remove unimplemented Start() function prototype
  * Small fixup
  * Address zhaowenlans feedback
  * Add more verbose popups for video_core errors
  * More fixes as per PR feedback.
  * Fixed as per PR feedback.
  * GDB Modernization: - Can be used in either DynCom or Dynarmic mode - Added support for threads - Proper support for FPU registers - Fix for NibbleToHex conversion that used to produce false error codes - Fix for clang-format failing under Windows
  * CMakeLists: lowercase find_library usage
  * CMakeLists: Change MSVC14 variable to MSVC_VERSION

-------------------------------------------------------------------
Tue Aug 21 12:10:03 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180821:
  * fix soc service - Fcntl failed on validate header

-------------------------------------------------------------------
Tue Aug 21 07:42:32 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180820:
  * Revert "Set DiscordRPC OFF by default (#4109)"
  * Set DiscordRPC OFF by default (#4109)
  * Added missing flag for discord rpc

-------------------------------------------------------------------
Mon Aug 20 13:00:05 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180820:
  * Add Discord Rich Presence Support (#3883)

-------------------------------------------------------------------
Thu Aug 16 13:21:36 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180816:
  * qt_themes: replace game_list icons (#4002)
  * qt_themes: add two colorful themes (#4004)
  * citra_qt: set object name for LLEServiceModulesWidget
  * citra_qt: UI text improvements

-------------------------------------------------------------------
Mon Aug 13 19:03:44 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180812:
  * Change level of invalid UDP packet log message from Error to Debug.
  * network: fix 3 typos

-------------------------------------------------------------------
Sun Aug 12 21:44:18 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180812:
  * NWM_UDS: use sizeof(<var being used>) instead of hard-coded type (#4093)

-------------------------------------------------------------------
Sat Aug 11 13:28:20 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180811:
  * input_common/udp: allow changing pad index
  * kernel/thread: Remove unimplemented function prototype
  * kernel/thread: Make GetFreeThreadLocalSlot()'s loop indices size_t
  * kernel/thread: Make GetFreeThreadLocalSlot() reference parameter a const reference
  * kernel/thread: Make GetFreeThreadLocalSlot() internally linked
  * input_common: Use std::move where applicable
  * input_common: Add missing override specifiers
  * math_util: Always initialize members of Rectangle
  * core_timing: Convert typedef into a type alias
  * core_timing: Use transparent functors where applicable
  * core_timing: Make GetGlobalTimeUs() return std::chrono::microseconds
  * qt/main: Better file-existence checking within OnMenuRecentFile() and UpdateUITheme()
  * common/color: Remove unnecessary const qualifiers on return types
  * common/color: Get rid of undefined behavior

-------------------------------------------------------------------
Fri Aug 10 16:44:26 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180809:
  * Service::HTTP_C: Add decryption of the ClCertA (#4045)
  * citra-qt: service: add convenient LLE service module configuration (#3967)

-------------------------------------------------------------------
Thu Aug 09 16:59:10 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180809:
  * Port "qt/main: Collapse if statement in UpdateRecentFiles()" from yuzu
  * game_list: Use QString::fromStdString() where applicable instead of c_str()
  * externals: Update glad to 0.1.26
  * file_util: Avoid sign-conversions in WriteArray() and ReadArray()
  * ncch_container: support encrypted games
  * am: Correct ListDLCContentInfos index bounds.
  * am: Return empty path string for non-existent content indices.

-------------------------------------------------------------------
Wed Aug 08 16:21:49 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180808:
  * Service/HTTP: Added logs to some of the error conditions.
  * Service/HTTP: Log the PIDs in the Initialize functions.
  * Services/HTTP: Added error handling to AddRequestHeader
  * Services/HTTP: Implemented the InitializeConnectionSession function.
  * Services/HTTP: Corrected some error codes and added a few new ones.

-------------------------------------------------------------------
Wed Aug 08 11:25:08 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180807:
  * Correct direction vectors for cemuhook motion input
  * Input: UDP Client to provide motion and touch controls
  * Add license for icons (#4019)
  * travis: use prebuilt image (#3839)
  * citra_qt: add Clear Recent Files menu action

-------------------------------------------------------------------
Sat Aug 04 20:45:26 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180804:
  * video_core: Allow changing background color while emulation is running
  * citra: default_ini bg color default value fix
  * citra_qt: Settings (configuration) rework
  * citra_qt/configuration: Add background color config
  * update fmt to latest stable release
  * core: clean up warnings
  * citra_qt/configuration: retranslate camera tab
  * kernel/timer: Make data members private where applicable
  * param_package: Take std::string by value in string-based Set() function
  * gl_rasterizer: only apply AMD hack when the vendor is AMD
  * swrasterizer/lighting: remove newline in logging macro
  * no need to cast to u32 according to @wwylele comment
  * gdbstub: Get rid of a few signed/unsigned comparisons
  * citra_qt/CMakeLists: get rid of a warning
  * Fix travis MinGW build
  * Address feedback by wwylele
  * param_package: Use std::unordered_map's insert_or_assign instead of map indexing
  * param_package: Get rid of file-static std::string construction
  * service/dsp: Addressed comments about function name and pointer type
  * Port #709 from yuzu: "common/misc: Deduplicate code in GetLastErrorMsg()"
  * Fix compile errors
  * Updated translations (2018-07-25)
  * service/dsp: Clean up global state
  * Replace MathUtil::Clamp with its std counterpart
  * citra_qt/configuration: retranslate hotkey widget on language change
  * citra_qt: add Restart to UI
  * citra_qt: add Restart hotkey & menu action code

-------------------------------------------------------------------
Mon Jul 30 19:21:12 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180730:
  * common/swap: Remove unnecessary const on return value of swap()
  * common/swap: Use static_cast where applicable
  * common/swap: Use using aliases where applicable
  * common/common_funcs: Remove unused rotation functions
  * string_util: Get rid of separate resize() in CPToUTF16(), UTF16ToUTF8(), CodeToUTF8() and UTF8ToUTF16()
  * string_util: Use emplace_back() in SplitString() instead of push_back()
  * string_util: Remove unnecessary std::string instance in TabsToSpaces()
  * logging/filter: Use std::string_view in ParseFilterString()
  * logging/backend: Add missing standard includes
  * logging/backend: Use std::string_view in RemoveBackend() and GetBackend()
  * qt_themes: add themed connected/disconnected icons for dark and fix status bar theme updating
  * service: remove deprecated service interface

-------------------------------------------------------------------
Mon Jul 30 12:56:38 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180730:
  * wait_tree: Silence warning about all code paths not returning a value
  * file_util: Use a u64 to represent number of entries
  * file_util: std::move FST entries in ScanDirectoryTree()
  * common: Remove synchronized_wrapper.h
  * citra_qt/multiplayer: allow blocking other players in chat room

-------------------------------------------------------------------
Mon Jul 30 11:32:27 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180730:
  * file_util: return string by const reference for GetExeDirectory()
  * string_util: Remove AsciiToHex()
  * file_util: Remove goto usages from Copy()
  * core: Make converting constructors explicit where applicable
  * Use std::begin and std::end for system archives c array
  * Add const modifier to bad_word_list.app.romfs.h
  * Add virtual bad word list; Load if dump is missing
  * service/cfg, citra_qt: add country code configuration

-------------------------------------------------------------------
Sun Jul 29 11:44:06 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180729:
  * citra-qt: Init logging sooner so we dont miss some logs on startup
  * service/boss: Migrate to ServiceFramework (#3998)
  * service/csnd: Moved into csnd folder and stubbed a few functions (#4006)
  * RomFSFile: Default constructor
  * Remove RomFS::GetFilePointer
  * RomFS: add RomFSFile and GetRomFSFile
  * Services/HLE: Implement PrepareToCloseLibraryApplet and CloseLibraryApplet.
  * citra_qt: minor retranslation fix
  * citra_qt/configuration: fix input configuration disappearing after changing languages
  * settings: move log code to settings
  * citra_qt/configuration: log on config dialog close
  * citra_qt: Log settings on launch
  * am: Run clang-format and attribute TODOs.
  * am: Revert changes to content index handling.
  * am: Address review comments.
  * am: Correct reported DLC content indices.
  * am: Correct content index bounds in ListDLCContentInfos.
  * am: Add contentIndex to documentation for GetTitleContentPath.
  * am: Properly handle operations involving content indices.
  * am: Correct definition of ContentInfo.

-------------------------------------------------------------------
Fri Jul 27 07:58:28 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180726:
  * service/ps: Boilerplate to register service, no functions implemented
  * Fixed include in http_c,h; added ERROR_CONTEXT_ERROR to CreateContext
  * applet_manager: disable loading LLE applets
  * citra_qt: retranslate status bar
  * Service/HTTP_C: Add some comments; Fixed header in CloseContext
  * Service/HTTP_C: Fix error in CreateContext
  * game_list: fix untranslated texts
  * game_list: move SearchField to game_list_p.h and fix untranslated text
  * Make Service::HTTP::Context non-copyable
  * Revert stubbed InitializeConnectionSession
  * Service/HTTP: stubbed InitializeConnectionSession
  * Service/HTTP: Moved declarations to the header file
  * Services/HTTP: Implemented the AddRequestHeader service function.
  * common/timer: use std::chrono, avoid platform-dependent code
  * Services/HTTP: Stubbed the CloseContext service function.
  * Services/HTTP: Corrected the error code for an invalid request method.
  * Services/HTTP: Implemented the CreateContext function handler.
  * Services/HTTP: Added structures to represent an HTTP context.
  * Services/HTTP: Added structures to store both client and server certificates.
  * Services/HTTP: Stubbed the Initialize function.
  * Services/HLE: Convert the http:C service to the new service framework.
  * citra_qt: Move CPU JIT toggle to Debug tab.

-------------------------------------------------------------------
Wed Jul 25 12:23:11 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180725:
  * common/string_utils: replace boost::transform with std counterpart

-------------------------------------------------------------------
Tue Jul 24 12:30:17 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180723:
  * core/loader: avoid "different type" warning for .app

-------------------------------------------------------------------
Mon Jul 23 07:52:15 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180723:
  * common: CodeBlock is unused

-------------------------------------------------------------------
Sun Jul 22 19:55:53 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180722:
  * Truncating UTF16 text before converting them toUTF8
  * remove polymorphism issue
  * Fix missing return value
  * Service/SOC: convert to ServiceFramework

-------------------------------------------------------------------
Fri Jul 20 12:15:36 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180719:
  * game_list: Make containsAllWords() a non-member function
  * game_list: Remove unnecessary QString initialization in KeyReleaseEater
  * telemetry: Remove unnecessary Field constructor
  * telemetry: Make operator== and operator!= const member functions of Field
  * telemetry: Default copy/move constructors and assignment operators
  * Use open source Shared Font if no dumped file is available (#3881)
  * configure_system: fix an untranslated text
  * citra_qt: use Citra Web Service username as default multiplayer nickname
  * citra_qt: disable hw shader by default for macos
  * gl_rasterizer: call glTextureBarrier when an image is bound to both texture and framebuffer
  * gl_rasterizer: implement mipmap for proctex
  * Address last review comment
  * citra_qt: Add a volume slider

-------------------------------------------------------------------
Tue Jul 17 18:50:25 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180717:
  * service/fs: implement obsoleted Create/DeleteExtSaveData (#3948)
  * frontend/applets/swkbd: use system username
  * citra_qt: Add length validation
  * citra_qt/applets/swkbd: QtKeyboard and misc fixes
  * applets/swkbd: Implement DefaultCitraKeyboard
  * frontend/applets: misc fixes
  * frontend/applets: frontend swkbd base

-------------------------------------------------------------------
Fri Jul 13 19:08:45 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180713:
  * Revert "CMake: Avoid non-compliant standard library extensions in MSVC"
  * sink: Make auto device name a constant
  * service/dsp: Migrate to ServiceFramework (#3915)
  * sink_details: Listing available devices should be separate from sink construction
  * sink_details: Remove unnecessary lambdas
  * sink: Remove unnecessary SetDevice method

-------------------------------------------------------------------
Thu Jul 12 13:13:24 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180711:
  * travis: add imageformats plugins (per #3891)
  * travis: remove debug dlls from the final package
  * travis: share env vars with Docker
  * travis: only warn about missing dll (MinGW)
  * travis: force increase ccache size (MinGW only)
  * travis: copy mediaservice plugin to support camera
  * travis: add essential flags to cmake cmdline
  * Build: Change the linux-mingw upload folder to canary-mingw to match the old naming scheme
  * travis: correct path to the platform plugin
  * travis: use cmake in official repository (MinGW)
  * travis: change MinGW job name in build matrix
  * appveyor: disable deploy to GitHub
  * travis: MinGW build on Travis CI

-------------------------------------------------------------------
Wed Jul 11 13:00:42 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180711:
  * Fix error log
  * telemetry: Add a few fields of UserConfig (#3927)
  * Set max parameter_size to 0x1000
  * Fix parameter_size in GetStartupArgument
  * CI: add imageformats plugins

-------------------------------------------------------------------
Sun Jul 08 12:38:37 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180708:
  * Try to fix clang-format CI
  * remove trailing space
  * log/console: no need to test first call
  * citra_qt: only toggle console if the setting has been changed
  * swrasterizer, gl_shader_gen: return 0.0 for Disabled texture unit 0
  * Service/NWM: convert to ServiceFramwework

-------------------------------------------------------------------
Wed Jul 04 12:47:44 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180703:
  * service/csnd: Addressed comments and removed outdated information
  * service/csnd: Fix clang format
  * service/csnd: Stubbed DataCache functions
  * service/csnd: Migrate to ServiceFramework
  * fix conversion warnings
  * citra_qt: Remove obsolete application attribute
  * optimize settings application
  * service/cecd: Addressed comment about using PushEnum instead of Push<u32>
  * service/cecd: Fixed clang format
  * service/cecd: Migrate to ServiceFramework
  * citra_qt: Remove return

-------------------------------------------------------------------
Sun Jul 01 21:11:40 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180630:
  * gl_shader_gen: remove newline in logging macro
  * gl_shader_manager: fix macro
  * Service/DLP: IsChild: Skip parameter
  * Service/DLP: Fix IsChild
  * service/pm: Migrate to ServiceFramework
  * reformat all files with clang-format
  * log: replace all NGLOG with LOG
  * log: remove deprecated log macros

-------------------------------------------------------------------
Fri Jun 29 18:41:57 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180629:
  * service/dlp: Addressed comment about what value to push
  * service/dlp: Migrate to ServiceFramework
  * service/mvd: Migrate to ServiceFramework (#3890)
  * service/qtm: Migrate to ServiceFramework (#3892)
  * video-core: Migrate logging macros (#3878)
  * service/dsp: Migrate logging macros (#3863)
  * citra_qt: Fix image file selection dialog
  * service/gsp: Addressed comment about global state
  * service/gsp: Migrate gsp_lcd to ServiceFramework
  * FS: fix log with incorrect type
  * Updated translations (2018-06-26)
  * service/SSL: convert to ServiceFramework
  * gl_shader_gen: lower log level of using disabled proctex
  * Updated translations (2018-06-10)

-------------------------------------------------------------------
Wed Jun 27 18:13:36 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180627:
  * service/gsp: Add Stub for InvalidateDataCache
  * service/gsp: Fixed typo in FlushDataCache IPC::RequestParser creation
  * service/gsp: Move service/gsp_lcd.* into service/gsp/ folder
  * citra_qt: only update title from game after ensuring loaded successfully
  * renderer_opengl: Renumber all texture units.
  * gl_shader_gen: Inline now constant texture buffer.
  * gl_stream_buffer: Only flush the host buffer if anything was written.
  * gl_rasterizer: Use the shared texture buffer for the proctex lut.
  * gl_rasterizer: Use the shared texture buffer for the noise, color and alpha map.
  * gl_rasterizer: Use the shared texture buffer for the fog lut.
  * gl_rasterizer: Use the shared texture buffer for the lighting lut.
  * gl_rasterizer: Add a new dirty flag for any lighting lut.
  * renderer_opengl: Create shared texture buffer.
  * gl_rasterizer: Inline texture buffer uploads.
  * gl_rasterizer: Move TBO syncing helper to one function.
  * gl_rasterizer: Provide texture buffer offsets.
  * Update cpp-httplib's README
  * Update cpp-httplib for gzip + chunked encoding fixes

-------------------------------------------------------------------
Sun Jun 24 11:29:14 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180624:
  * hle/kernel: Addressed comment about obscure formating
  * hle/kernel: Fix clang format
  * hle/kernel: Migrate logging macros
  * logging: Added NGLOG_GENERIC (needed for vm_manager)

-------------------------------------------------------------------
Sat Jun 23 20:29:31 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180623:
  * service/ldr: Migrate logging macros (#3867)
  * Service/SOC: migrate logging macro
  * service/fs: Migrate logging macros (#3866)
  * service/ns: Migrate logging macros (#3857)
  * service/cfg: Migrate logging macros (#3853)
  * applets: Migrate logging macros
  * service/nwm: Migrate logging macros
  * service/dlp: Migrate logging macro
  * service/news: Migrate logging macro
  * service/ptm: Migrate logging macros
  * service/apt/applet_manager: Migrate logging macros
  * service/am: Migrate logging macros
  * service/nim: Migrate logging macros (#3856)
  * service/nfc: Migrate logging macros (#3855)
  * service/mic: Migrate logging macros (#3854)
  * service/gsp: Migrate logging macros (#3852)
  * service/err_f: Migrate logging macros (#3849)
  * service/y2r: Fix clang format
  * service/y2r: Migrate logging macros
  * service/service: Migrate logging macros
  * service/sm: Migrate logging macros
  * service/cam: Migrate logging macros (#3848)
  * service/ir: Migrate logging macros
  * service/ac: fix clang format
  * citra-qt: Improve Title Bar display
  * common: Parse Nightly/Canary build version
  * service/hid: Migrate logging macros
  * service/frd: Migrate logging macros
  * service/csnd_snd: Migrate logging macros
  * service/cecd: Migrate logging macros
  * AC Migrate Logging Macros (#3838)
  * citra-qt: Add build date in about dialog
  * emu_window: Adapt Touchscreen to 3D Settings
  * travis: fix tx push (again)
  * Fix wrongly replaced arguments
  * appveyor: fix mingw issue (again)
  * boss: Return buff_size in parameter 2 of ReceiveProperty.
  * externals: update cryptopp to CRYPTOPP_7_0_0-23-gf320e7d9
  * externals: update soundtouch to pick up x86 fix
  * travis: share env variables with Docker
  * core/telemetry_session: Replace logging macros
  * core/memory: Replace logging macros
  * core/frontend: Replace logging macros
  * core/file_sys: Replace logging macros
  * core/core_timing: Replace logging macros
  * core/core: Replace logging macros
  * game_list: fix system title display
  * StillImageCamera: fix multiple prompt
  * QtMultimediaCamera: fix invalid settings
  * StillImageCamera: move GetFilePath to UI thread
  * camera: Single/Double (QtMultimediaCamera)
  * camera: migrate logging macros
  * camera: refactor (add qt_camera_base)
  * camera: Add camera flip config
  * arm_dyncom_interpreter: Clear exclusive memory state after SVC call
  * dynarmic: Update to 4b350a354a21339052c7fff88832c3f81f5624be
  * externals: don't try install cubeb files
  * renderer_opengl: Add Universal 3D Layout Adaption
  * 3dtv botenable improved (#1)
  * shared_page: Remove Get3DSliderstate
  * shared_page: Set 3D Slider
  * shared_page: Allow Setting the 3D Slider
  * renderer_opengl: Allow usage of Stereoscopic 3D
  * citra, citra_qt, settings.h: Add Options for Stereoscopic 3D
  * gl_rasterize: implement shadow mapping using image load/store
  * shader/jit: implement breakc
  * shader/jit: preserve integer & condition register across invocation
  * fix jrowes lazy sorting
  * fix preffered game
  * citra_qt: support multiple game directories
  * Add search filter support for multiple game directories

-------------------------------------------------------------------
Mon Jun 04 03:57:27 UTC 2018 - avindra@opensuse.org

- Update to version 20180603:
  * externals: Update Catch to v2.2.2
  * UDS: fix RecvBeaconBroadcastData response header
  * gl_rasterizer: reset texture state context after every draw
  * audio_core: Implement a cubeb audio sink (only included if
    available, not built with tests).
  * cubeb_sink: Skip devices without a name
  * citra: correct regex for matching nickname
  * cryptopp: add missing bits used by SIMD on aarch64
  * citra_qt: Add Continue/Pause & Toggle Speed Limit hotkeys
  * gl_rasterizer: Don't flip the texture bindings.
  * Service/NDM: convert to ServiceFramework
  * game_list: rewrite format
  * game_list: append filename after program ID
  * citra-qt: link colors more readable one when using dark theme
  * Update qdarkstyle theme to latest version
  * Xbyak 5.64
  * Upgrade JSON for Modern C++
  * citra_qt: Improve Game List Item display
  * Camera translation
  * gl_rasterizer_cache: add missing watcher invalidation
  * gl_rasterizer_cache: Use clean state for glBlitFramebuffer.
  * gl_rasterizer: Remove redundant scissor state change.
  * citra-qt: add tooltips for renderer options
  * gl_stream_buffer: update the information about the AMD hack
  * gl_rasterizer: fallback to software shader path if buffer
    overflow happens on hardware shader path
  * [HACK] AMD workaround
  * video_core/command_processor: attempt accelerate draw in
    draw trigger
  * gl_rasterizer: implement AccelerateDrawBatch to emulate PICA
    shader on hardware
  * primitive_assembly: Add getters for internal state
  * video_core: receive hardware shader settings
  * citra,citra_qt: load/save hardware shader settings
  * citra-qt: add gpu shader emulation related configurations
  * settings: add hardware shader related settings
  * settings: add hardware shader related settings
  * citra_qt: camera integration
  * citra_qt: Refactor game list compatibilty
  * Updated the translations one more time
  * regs_pipeline: use proper unsigned type where applicable
  * Service/AM: Implement GetProductCode
  * gl_rasterizer: Use buffer_storage for uniform data.
  * gl_rasterizer: Use GLvec* instead of C arrays
  * video_core/command_processor: correctly handles 0xFFFF
    index as a normal index
  * gl_rasterizer_cache: cache texture cube
  * citra_qt: Add a game region column
  * citra_qt: fix clang-format
  * citra_qt: multiplayer password dialog fix
  * Frontend: Add missing translation for network error messages
  * Added current translations from Transifex
  * gl_shader_gen: generate programmable vs/gs and fixed gs
  * Logging: Add customizable logging backends and fmtlib based macros
  * pica_to_gl: Add GLuvec{2,3,4} aliases
  * gl_shader_decompiler: fallback to CPU shader on GS b15 access
  * Replace "Hide Full Games" with "Hide Full Rooms"
  * renderer_opengl: Rewrite stream buffer.
  * Frontend: Prevent a crash from closing a hosted room using the
    Disconnect button and then trying to host another room
  * Frontend: Prevent connecting to another room when already joining
  * Fix Lobby filtering with player list
  * Move almost all state change tracking to MultiplayerState
  * Remove duplicated logic in HostRoom
  * Fix player list not showing in lobby. Fix host and direct
    connect crashing citra
  * Fix compilation issue where unique_ptr needs full class declaration
  * Fix multiplayer dropdowns and proxy model
  * Moved the password icon to the room name.
  * Fixed issue where multiplayer state was covering the File and
    Emulation menu items when it shouldn't even be visible
  * Remove the current players blurb
  * Add a member list expandable to the lobby. Fix issue with
    hosting more than once.
  * Split multiplayer code into its own class
  * Add network status text to the status bar
  * Citra-qt: Add multiplayer ui
  * SDL2: Implement fullscreen
  * Use the QT_TRANSLATE_NOOP macro
  * shader: avoid recomputing hash for the same program
  * shader_jit: change passing ShaderSetup to passing uniforms
    struct into the program
  * citra-qt: Don't translate function keys in InitializeHotkeys()
  * Show game compatibility within Citra
  * sm: Relocate the service manager to the System class
  * cam: Correct forward declaration type for Core::EventType
  * gsp_gpu, shared_page: Change 3D LED State on SetLedForceOff
  * gl_rasterizer: isolate shader management into its own class
  * gl_shader_gen: accept an option to generate separable shaders
  * gl_resource_manager: add OGLPipeline
  * gl_state: add pipeline state
  * gl_resource_manager: separate OGLShader and OGLProgram
  * gl_shader_util: separate shader object creation and program
    object creation
  * gl_rasterizer_cache: exit FillTextureCube when address is invalid
  * Make byteround less expensive
  * Round TEV outputs and the final fragment output in GLSL
  * Fix stuck in fullscreen bug
  * citra-room: Use the default OpenGL loader instead of
    SDL_GL_GetProcAddress
- switch to cmake macros
- partial cleanup with spec-cleaner

-------------------------------------------------------------------
Thu Apr 12 12:57:32 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180411:
  * travis: suggestions from @jroweboy
  * travis: fix Transifex upload

-------------------------------------------------------------------
Tue Apr 10 22:44:15 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180410:
  * gl_rasterizer/lighting: implement shadow attenuation
  * pica/lighting: split FresnelSelector into bitfields

-------------------------------------------------------------------
Tue Apr 10 13:08:32 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180409:
  * default_ini: remove space in custom_layout

-------------------------------------------------------------------
Fri Apr 06 11:15:31 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180406:
  * [quick-fix]file-util: fmtlib errors on FILE* type parameter. Explicitly cast it to void*
  * Update fmtlib to fix msvc warnings
  * video_core/shader/shader: Remove include cinttypes
  * Fix formatting mistakes
  * Fix wrongly converted specifiers
  * file_util: Remove long long casting on buf.st_size in NGLOG statement
  * Replace format specifiers for all usages of ASSERT_MSG
  * assert: Undo removal of newline for string with __VA_ARGS__
  * common: Migrate logging macros
  * gl_rasterizer/cache: only reallocate cubemap when size/format mismatch
  * gl_rasterizer: implement texture cube

-------------------------------------------------------------------
Thu Apr 05 21:47:19 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180405:
  * fix Subvs suggestions
  * fix Subvs suggestions
  * Let connected clients handle the eapol packet

-------------------------------------------------------------------
Thu Apr 05 12:42:38 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180405:
  * gl_rasterizer: move state syncing from ctor to its own function
  * gl_rasterizer: move shader uniform sync from SetShader() to ctor
  * gl_shader_decompiler: add missing headers/rename GetXXX to MoveXXX to reflect that they move the data
  * gl_shader_decompiler: return error on decompilation failure
  * gl_shader_decompiler: some small fixes
  * renderer_opengl: add PICA->GLSL shader decompiler
  * verify_login: Make VerifyLogin exceptionless
  * Common/Hash: static_assert on the type passed to HashableStruct
  * Common/Hash: abstract HashableStruct from GLShader::PicaShaderConfig

-------------------------------------------------------------------
Tue Apr 03 20:28:44 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180403:
  * default_ini.h: Update Comment

-------------------------------------------------------------------
Mon Apr 02 18:58:01 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180402:
  * pica_to_gl: Migrate logging macros (#3608)
  * arm/dyncom: Migrate logging macros

-------------------------------------------------------------------
Sun Apr 01 10:39:19 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180331:
  * appveyor: set jobs to 4 for mingw
  * swrasterizer: implement shadow map rendering
  * swrasterizer: implement shadow map sampling
  * swrasterizer/lighting: implement shadow attenuation

-------------------------------------------------------------------
Sat Mar 31 11:04:37 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180331:
  * pica_to_gl: Use std::array where applicable
  * disk_archive: Make DiskDirectory's constructor explicit
  * disk_archive: Remove unnecessary const in DiskDirectory's Read() declaration
  * disk_archive: Remove unused total_entries_in_directory member from DiskDirectory
  * update-icons-signal
  * externals: update libressl (gitignore artefacts)
  * video_core: Remove Unreachable for invalid BlendEquation modes (#3595)
  * common: Use ARCHITECTURE_x86_64 instead of ARCHITECTURE_X64
  * common: Use ARCHITECTURE_ARM instead of _M_ARM

-------------------------------------------------------------------
Thu Mar 29 14:10:08 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180329:
  * core/loader: Migrate logging macros

-------------------------------------------------------------------
Thu Mar 29 10:06:48 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180329:
  * sdl2_config: Add a parameter description for tilt clamp variable (#3590)
  * CiTrace: Migrate logging macros
  * Service/AM: Use Pop<u64>() in DeleteUserProgram and DeleteProgram
  * archive_systemsavedata: Remove pointer cast from GetSystemSaveDataPath()
  * citra-room: Fix always false case in main() related to port range
  * gl_rasterizer: Fix incorrect comparison against src_surface in AccelerateTextureCopy()
  * err_f: Add missing break in ThrowFatalError()
  * boss: Correct ReceiveProperty()'s response data payload
  * ncch_container: Get rid of pointer casts in LZSS_GetDecompressedSize() and LZSS_Decompress()

-------------------------------------------------------------------
Wed Mar 28 11:00:45 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180327:
  * NWM_UDS:: Check flags in SendTo (#3481)
  * QT: Implement themed icons (#3554)
  *  hw: Migrate logging macros (#3584)
  * network: Migrate logging macros (#3575)
  * appveyor: Generate PDBs for mingw build

-------------------------------------------------------------------
Tue Mar 27 11:02:18 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180327:
  * Undo unrelated true false ternary statement removal
  * Change to print program id as hex
  * Drop # for formatting program id
  * citra_qt: Migrate logging macros
  * Undo changes to unrelated files and fix formatting
  * Address review comments
  * audio_core: Migrate logging macros

-------------------------------------------------------------------
Mon Mar 26 12:56:50 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180326:
  * game_list: Add missing override specifier for KeyReleaseEater's eventFilter function

-------------------------------------------------------------------
Sun Mar 25 12:56:55 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180325:
  * input_common: Migrate logging macros
  * web_service: Migrate logging macros
  * Move WebServices to use LibreSSL + cpp-httplib (#3501)
  * Service/AM: Fix crash when scanning titles with installed titles with invalid title IDs (#3542)

-------------------------------------------------------------------
Sat Mar 24 10:36:27 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180324:
  * Upgrade Boost dependency to 1.66
  * Remove dependency chrono
  * Fix clang-format
  * Replace ##__VA_ARGS__ with __VA_ARGS__
  * Place FmtLogMessage's definition in backend.cpp
  * Add nullptr check to LogEntry
  * Add check if filter is not a nullptr
  * Logging: Fix clang-format
  * citra_qt: Remove reference to debugger/console
  * Remove all edits not in the scope of this PR
  * Logging: Remove customizable logging backends
  * Logging: Fix fmt errors after rebasing with master
  * fixup! Prevent crashes on closing by waiting for the impl thread
  * Logging: Various logging improvements
  * SPSCQueue: Add PopWait
  * fixup! move message
  * Address review comments
  * Use the correct linker flag for mingw
  * Logging: Add customizable logging backends and fmtlib based macros

-------------------------------------------------------------------
Wed Mar 21 20:12:13 UTC 2018 - opensuse-packaging@opensuse.org

- Update to version 20180321:
  * CMake: Set EMU_ARCH_BITS in CMakeLists.txt

-------------------------------------------------------------------
Mon Mar 19 15:02:57 UTC 2018 - opensuse-packaging@opensuse.org

- Update to version 20180318:
  * OGL: Use stream buffer for vertex data.
  * stream buffer
  * gl_resource_manager: Use std::exchange instead of std::swap in move assignment operators and constructors
  * comment
  * Convert ACT to the new service framework (#3521)
  * use nvidia graphics automatically on laptops with optimus
  * ipc_helper: remove interface for operating on command buffer directly
  * Service/CFG: convert to ServiceFramework
  * pica/gl_shader: optimize ternary operator
  * lighting: compute highlight clamp after one-/two-sided diffuse pass

-------------------------------------------------------------------
Thu Mar 15 15:28:56 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180315:
  * glad: Update glad
  * citra_qt: Sync menu UI settings after changing the layout with F10
  * .gitignore: Add CMakeLists.txt.user to Project/editor files

-------------------------------------------------------------------
Tue Mar 13 19:08:58 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180313:
  * remove MacAddressToString
  * Fix formatting of mac address in error log

-------------------------------------------------------------------
Sun Mar 11 18:14:39 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180311:
  * Correctly cleanup ENet packets if not used
  * Fix QGLWidget viewport resize on macOS
  * fixe typos
  * Fix path for travis upload
  * fixup! Network: Added an executable to host an dedicated room for local wifi
  * Network: Added an executable to host an dedicated room for local wifi

-------------------------------------------------------------------
Sat Mar 10 19:23:16 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180309:
  * Memory: remove RasterizerCachedSpecial page type
  * Update the entire application to use the new clang format style
  * Travis: Update clang-format to 6.0
  * CMake: Conditionally turn on bundled libs for MSVC
  * CMake: Update contributing guide with the new clang format info
  * CMake: Add a custom clang format target
  * Service/NFC: convert to ServiceFramework
  * Service/NEWS: convert to ServiceFramework
  * Service/NEWS: fix command id for news:u:AddNotification
  * Add link to Discord

-------------------------------------------------------------------
Thu Mar 08 18:17:13 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180307:
  * Discard Gas mode renders (#3486)
  * Remove unused DUMP_TEXTURES definition
  * Remove PICA image dumping/libpng
  * IPC helpers: remove deprecated static buffer interface
  * Service/FRD: convert to ServiceFramework

-------------------------------------------------------------------
Tue Mar 06 17:51:33 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180306:
  * assert: do not crash on unimplemented code in debug build

-------------------------------------------------------------------
Tue Mar 06 14:46:15 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180306:
  * Service/CFG: add system model value for New 2DS XL
  * externals: Update cryptopp to 6.1.0 to fix #3435

-------------------------------------------------------------------
Mon Mar 05 15:50:32 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180305:
  * clang-format fix
  * Disable accelerated texture copy for Texture surfaces
  * Fix clang format
  * Fix clang format
  * Remove useless static cast
  * Fix include
  * Rebased usage of SleepClientThread
  * Add DelayGenerator for all file backends
  * File_Sys: Add a size dependend delay for each file read
  * Change to use CryptoPP random and address review comments
  * Move writing to shared page to the nwm init
  * UDS: Add non zero mac address to the shared page
  * Address Lioncash's comments
  * ConvertD24S8toABGR: fix fb attachment
  * D24S8 to RGBA8 conversion
  * GetFramebufferSurfaces: Remove an assert that is no longer correct
  * AccelerateTextureCopy: Better support for contiguous copy
  * Support for textures smaller than 8*8
  * Fix viewport to surface rect clamping
  * CachedSurface: Add microprofile scopes for UploadGLTexture and DownloadGLTexture
  * Remove read_framebuffer_handle and draw_framebuffer_handle from CachedSurface
  * Move trasnfer_framebuffer to a member of RasterCache. Address review comments
  * Fix clang format
  * When downloading from a surface into gl_buffer, ingore any x/y offsets in rect and use 0,0 as the origin
  * Remove the correct intervals from the surface when validating
  * Workaround for ICE on gcc5
  * Fix broken surface validation logic since removal of the reinterpret hack
  * Perform the same checks on TexCopy params that SW does
  * Fix compilation on mac and linux
  * Revert "OpenGL Cache: Ignore format reinterpretation hack"
  * Minor style changes
  * OpenGL Cache: Ignore format reinterpretation hack
  * OpenGL Cache: Reorder methods
  * OpenGL Rasterizer: Update to use the new cache
  * OpenGL Cache: Add the rest of the Cache methods
  * OpenGL Cache: Refactor Surface Cache interface
  * OpenGL Cache: Split CachedSurface
  * OpenGL Cache: Add surface utility functions
  * OpenGL Cache: Optimize Morton Copy to copy in tiles
  * OpenGL State: Change setters so they don't directly write to curstate
  * Memory: Remove count of cached pages and add InvalidateRegion
  * Settings: Change resolution scaling to an integer instead of a float

-------------------------------------------------------------------
Sun Mar 04 15:25:13 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180304:
  * fix clang-format
  * APT: Implement SendCaptureBufferInfo and ReceiveCaptureBufferInfo (#3467)
  * Service/NIM: convert to ServiceFramework

-------------------------------------------------------------------
Sat Mar 03 21:38:52 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180303:
  * Service/AM: fix some headers
  * ipc_helpers: remove some deprecated functions
  * Service/AM: convert to ServiceFramework
  * remove dead code

-------------------------------------------------------------------
Sat Mar 03 12:18:24 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180302:
  * Fix build on platforms without std::string_view
  * externals: Update fmt to 4d35f94
  * core: EMULTIHOP isn't defined on all Unixes
  * Common: fix swap functions on Bitrig and OpenBSD

-------------------------------------------------------------------
Fri Mar 02 13:40:42 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180301:
  * GSP_GPU: Release the GPU right if the active session closes the gsp_gpu session

-------------------------------------------------------------------
Thu Mar 01 14:00:34 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180301:
  * FS: fix wrong response header of Initialize
  * FS: correct maximum session
  * FS: fix documentation of service functions
  * FS: convert to service framework
  * ipc_helpers: add PopPID; remove PushCurrentPIDHandle
  * fs/archive: convert Directory to ServiceFramework
  * fs/archive: remove dead code

-------------------------------------------------------------------
Thu Mar 01 11:13:00 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180228:
  *  Service/AM: Implement DeleteProgram and DeleteUserProgram (#3446)

-------------------------------------------------------------------
Wed Feb 28 13:57:58 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180228:
  * tidy loop
  * move callback definition outside loop
  * install multiple CIAs sequentially

-------------------------------------------------------------------
Tue Feb 27 12:53:21 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180226:
  * decode: Fix PCM8 decoding

-------------------------------------------------------------------
Fri Feb 23 22:06:40 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180222:
  * keep the namespace comment
  * Revert "Kernel/Threads: Add a new thread status that will allow using a Kernel::Event to put a guest thread to sleep inside an HLE handler until said event is signaled"

-------------------------------------------------------------------
Thu Feb 22 18:23:51 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180222:
  * NWM_UDS: change SleepClientThread to use std::chrono::nanoseconds
  * HLE: specify that the command buffer is an array of u32_le
  * HLE: Use std::chrono::nanoseconds instead of a plain u64 in SleepClientThread.
  * clang-format fix
  * HW checked signals Disconnect, Destroy and Shutdown
  * NWM_UDS: More of wwyleles comments
  * NWM_UDS: Addressed wwyleles comments
  * fix clang
  * fixup! NWM_UDS: Convert to service framework
  * Fixups from Subvs comments
  * NWM_UDS: Convert to service framework
  * fixup! UDS: Add coonnect and disconnect
  * UDS: Add coonnect and disconnect
  * Fix Clang Format Error
  * Kernel/Threads: Implement an SleepClientThread function for HLERequestContext-based services to make performing async tasks on the host while in an HLE service function easier.

-------------------------------------------------------------------
Tue Feb 20 12:22:02 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180219:
  * APT: don't skip translation parameters
  * fixup! audio_core: Remove global state
  * tests: Remove HandleSpecialMapping test for DSP region
  * audio_core: Remove global state

-------------------------------------------------------------------
Wed Feb 14 16:23:02 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180214:
  * HLE/IPC: remove assertion on empty buffer.
  * apt: fix doc format
  * externals: Update cryptopp to 6.0.0
  * Service/FS_User: Stub Secure Value Functions
  * CI: Update to C++17 and use Ubuntu 18.04 as baseline
  * APT: convert to ServiceFramework

-------------------------------------------------------------------
Sun Feb 11 17:54:18 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180208:
  * correct escape sequence warning
  * More accessible screen layout settings. (#3340)
  * Add Context Menu Options to Open Application and Update Location (#3411)
  * APT/Applet: move applet managing into its own class
  * Service/Y2R: convert to ServiceFramework
  * Use Common::Event
  * fixup! Announce-Service: Add conditional variable for the wait in the announce thread
  * Announce-Service: Add conditional variable for the wait in the announce thread
  * fixup! fixup! Add a service to announce multiplayer rooms to web service; Add the abiltiy to receive a list of all announced rooms from web service
  * fixup! Add a service to announce multiplayer rooms to web service; Add the abiltiy to receive a list of all announced rooms from web service
  * Add a service to announce multiplayer rooms to web service; Add the abiltiy to receive a list of all announced rooms from web service
  * core/arm: Backend-specific context implementations
  * dynarmic: Update to d1d4705

-------------------------------------------------------------------
Fri Feb 02 16:40:39 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180128:
  * externals: Update catch to v2.1.1
  * fix comparison operator
  * citra-qt: Add customizable speed limit target (#3353)
  * Fix comparison operators
  * remove spaces
  * revert move
  * only pass one smdh
  * only search to two recursions, add update dir to watch list
  * Kernel/IPC: Partially implement MappedBuffer translation.
  * Kernel/VMManager: Added a function to map a block of memory into the first available address after a given base.
  * Tests: Added some tests for the VMManager class.
  * Memory: Added a function to change the memory state of an address range.
  * reduce the scope of the variables
  * Minor spelling fix
  * allow installed apps to display in the game list
  * enum class
  * citra-qt: fix broken About box
  * use enum and add default case
  * Remove tr from image formats
  * Update configure_web.cpp
  * get rid of useless if statement
  * only enable menu visibility
  * Update nihstro
  * Travis Quick Fix + Minor Submodule Updates
  * 1 -> d
  * get rid of cmake GUI option
  * require web services
  * address wwylele's feedback
  * Service/PTM: convert to ServiceFramework
  * move menu action
  * README: add info about translation
  * add compatibility reporting to qt frontend
  * fixup!citra_qt: load translation from resource
  * Convert Movie to a class with a static instance, and other fixes based on B3n30 feedback.
  * Movie (recorded inputs) playback and recording. SDL has command lines to control it.
  * Travis, Appveyor: build with languages
  * Travis: push translation source change to transifex
  * cmake: generate translation file and add to resource for citra_qt
  * citra_qt: load translation from resource

-------------------------------------------------------------------
Thu Jan 18 14:11:58 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180118:
  * externals: Update catch to 2.1.0
  * Variable tilt clamp (#3366)
  * Common: Use common swap.h macros in CityHash
  * Common: Fix 2 implicit conversion warnings in CityHash
  * Common: Remove CityHash32 and CityHashCrc128 variants
  * Common: Adapt CityHash code to match our codebase better
  * Common: Add convenience function for hashing a struct
  * Common: Replace MurmurHash3 with CityHash64
  * Citra: Print the actual error preventing SDL from working

-------------------------------------------------------------------
Fri Jan 12 16:36:17 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180111:
  * Telemetry: Disable CPU detection on ¬x86_64
  * Core: Disable the JIT when dynarmic is not available
  * CMakeLists: Disable dynarmic on ¬x86_64
  * CMakeLists: Disable architecture checks with -DENABLE_GENERIC=1
  * GSP: Allow the signaling of the PDC0/1 interrupts even if the GPU right hasn't been acquired.
  * Services: Make SessionDataBase's destructor virtual.
  * Services/GSP: Mark the thread ids as unused when a GSP session is destroyed.
  * Services/GSP: Assign a thread id to each connected session when the session is created.
  * Fixed clang whitespace
  * Moved when to pause because it wasnt fast enough
  * Pause emulation OnCoreError
  * GSP: Return the correct result code if AcquireRight is called multiple times from the same thread.
  * HLE/GSP: Only trigger GSP interrupts for the current active GSP thread.
  * HLE/GSP: Keep track of the thread that currently has the GPU right.
  * HLE/GSP: Make RegisterInterruptRelayQueue work in a per-session basis.

-------------------------------------------------------------------
Thu Jan 04 13:18:32 UTC 2018 - pousaduarte@gmail.com

- Update to version 20180104:
  * Optimize AttributeBuffer to OutputVertex conversion (#3283)
  * y2r: convert some functions to use IPC helper
  * Kernel/SVC: fix typo in GetResourceLimitLimitValues
  * Revert index change
  * Resized main config window
  * citra(SDL) small fixes: fix fall-through, remove u16 'always true' compare
  * cmake: add missing ${...} for variables inside generator expressions
  * HID: convert to ServiceFramework
  * Kernel/SVC: Partially implemented svcExitProcess.
  * appveyor: Determine dlls to include in package programmatically

-------------------------------------------------------------------
Thu Dec 21 20:59:16 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171221:
  * HLE: Convert GSP_GPU to ServiceFramework.
  * gdbstub: Correct typo
  * citra_qt: Migrate to Qt 5 signal/slot connection syntax where applicable
  * ldr_ro: use ServiceFramework's session slot for client slot
  * GSP/GPU: Make FrameBufferInfo::active_fb use the entire u32 instead of just one bit.
  * citra_qt: Drop Qt 5 version checks in code
  * game_list: Use forward declarations where applicable
  * mic_u: Migrate to the new service framework
  * citra_qt: CMakeLists: Drop leftover handling code for Qt 4 UI files
  * HLE/APT: Implement GetAppletInfo for LLE applets.
  * HLE/APT: Stubbed FinishPreloadingLibraryApplet.
  * input_common: Remove redundant target_sources in CMakeLists
  * HLE/FS: Use the SessionData parameter of ServiceFramework in the File class.
  * HLE/Services: Allow specifying a SessionData template parameter to ServiceFramework.
  * video_core: fix infinity and NaN conversions
  * HLE/FS: Use PopEnum in OpenFile.
  * HLE/FS: Use IPCHelper in CreateFile.
  * Use static functions instead of lambdas
  * HLE/FS: Use IPCHelper in DeleteDirectoryRecursively.
  * HLE/FS: Use IPCHelper in DeleteDirectory.
  * HLE/FS: Use IPCHelper in RenameFile.
  * HLE/FS: Use IPCHelper in DeleteFile.
  * HLE/FS: Use IPCHelper in OpenFileDirectly.
  * FS: Make LowPathType a strongly typed enum.
  * HLE/FS: Implemented FSFile::OpenSubFile.
  * fixup! shader_jit_x64_compiler: Use haddps for horizontal summation
  * CMakeLists: Derive the source directory grouping from targets themselves
  * core: Don't Shutdown before we've even Init-ed
  * ncch: Add missing return statement in ReadUpdateRomFs
  * ipc_helpers: Add member functions for pushing and popping strongly typed enums
  * bootmanager: Make EmuThread's IsRunning() member function const
  * bootmanager: In-class initialize EmuThread's boolean member variables
  * input_common/sdl: Silence a -Wpessimizing-move warning
  * common/core: Silence initialization order warnings
  * shader_jit_x64_compiler: Use haddps for horizontal summation
  * HLE/FS: Stubbed GetNumSeeds to always return 0 seeds.
  * Kernel/IPC: Use 39 microseconds for the SendSyncRequest delay approximation.
  * cryptopp: Move some source files to beginning of list
  * cryptopp: Add two extra files to source list
  * ac: Correct constructor initialization order
  * Shader: Store AttributeBuffers in GS output buffer
  * HLE: Move SVC handlers to the Kernel namespace
  * Shader: Refactor output_mask copy loop to function
  * Common: Simplify and optimize BitSet iterator
  * HLE: Move svc.{cpp,h} to kernel/
  * cryptopp: Build only required files
  * HLE/FS: Implemented FS::GetProgramLaunchInfo.
  * Add new AppID (eShop)
  * Fill up the rest of Applet IDs
  * HLE: Add pxi:dev stub.
  * file_sys: std::move the vector in NCCHFile's constructor
  * file_sys: std::move std::shared_ptr instances in constructors where applicable
  * NCCH: Load the "logo" file from the specified offset if it's present instead of the ExeFS.
  * HLE/News: Stubbed GetTotalNotifications to always return 0 notifications.
  * ir_user: convert to ServiceFramework
  * ir_rst: convert to ServiceFramework
  * Add translation support for button labels
  * Fix crash when loading an unsupported file. The telemetry stuff isn't properly initialized when loading fails, resulting in a crash.
  * ir_u: convert to ServiceFramework
  * FS/ExtData: Use the ExtSaveDataArchivePath structure instead of reinterpret_cast.
  * HLE/FS: Always use 0x48000 as the high dword when opening the SharedExtData archive
  * svc: correct GetProcessInfo(20)
  * Add button labels for sdl joystick mappings
  * cam: convert to ServiceFramework
  * cfg: refer to ConsoleModelBlockID by name
  * Kernel/IPC: Add a small delay after each SyncRequest to prevent thread starvation.
  * svc: Provide names for svc 0x59 and 0x5A
  * cro_helper: add todo about process handle
  * ldr_ro: create per-client storage; pass process where needed
  * memory: add overload with process parameter for ZeroBlock and CopyBlock
  * ldr_ro: convert to ServiceFramework
  * Fix a bug in the fullscreen implementation
  * Maintain the PICA's 8 bits of color precision when using the interpolated primary color
  * Fix logic ops not being enabled in the OpenGL renderer
  * Round primary color inputs in software rasterizer

-------------------------------------------------------------------
Thu Dec 07 13:47:55 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171207:
  * dyncom: Remove unnecessary includes
  * arm_dyncom_dec: Hide the decoding table from external view
  * arm_dynarmic_cp15: Add missing header guard
  * arm: Make CPU backend constructors explicit
  * ldr_ro: Use ranged instruction cache invalidation
  * ARM_Interface: Allow for partial invalidation of instruction cache
  * externals: Update dynarmic to 4110494
  * HLE/AddressArbiter: Remove threads that were awoken by timeout from the arbiter's waitlist when using WaitIfLessThanWithTimeout and DecrementAndWaitIfLessThanWithTimeout.
  * fixup! Applet: Print unknown AppletId on ASSERT
  * Applet: Print unknown AppletId on ASSERT
  * Allow input configuration with SDL joysticks (#3116)
  * dyncom: Convert the SPSR checking define to a function
  * video_core: optimize NaN check
  * fs: correct header code; remove dead code
  * HLE/Services: Convert err:f to the new ServiceFramework.
  * ipc_helper: split PushMoveObjects and PushCopyObjects
  * Switch inih to It's Official Repository @ benhoyt/inih
  * vector_math: Return by const reference for const operator[]
  * core/arm: Improve timing accuracy before service calls in CPU interpreter
  * core/arm: Improve timing accuracy before service calls in JIT
  * service/ptm: add missing % in logging
  * SDL: add multiplayer options (#3072)
  * HLE/Tests: add tests for MappedBuffer IPC HLE translation
  * FS: transform File to ServiceFramework
  * IPC Helpers: Implement MappedBuffer translation helper for new interface
  * Kernel/IPC: Implement MappedBuffer translation for HLE services that use the HLERequestContext architecture.
  * add CIA installation to QT frontend
  * dyncom: Remove VFP_REG_ZERO
  * Services/NFC: Stub StartTagScanning as it should be for o3DS
  * shader_jit_x64_compiler: Remove ABI overhead of LG2 and EX2
  * tests: Add tests for x64 shader jit
  * NS/Applets: Added the MiiSelector applet to the list of native applet ids.
  * HLE/APT: Try to launch a native applet in PrepareToStartLibraryApplet and PreloadLibraryApplet before falling back to HLE applets.
  * HLE/APT: Added a function to retrieve the titleid of an applet based on the current system region.
  * HLE/NS: Added a function to launch titles installed to the virtual NAND/SD card.
  * Logging: Add a Service_NS log class for the NS service.

-------------------------------------------------------------------
Fri Dec 01 09:43:57 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171130:
  * externals: Update catch to v2.0.1
  * services: Silence warnings related to logging

-------------------------------------------------------------------
Thu Nov 30 10:38:48 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171129:
  * room/room_member: Silence -Wswitch warnings
  * packet: Simplify operator bool overload
  * HLE/IPC: Don't assert in HLERequestContext::AddStaticBuffer when there's already a static buffer with the desired id.
  * Audio/HLE/Source: Fix looped state not updating
  * file_sys/ncch_container: Expose ncch_offset during instantiation and in OpenFile
  * HLE: Implemented SleepClientThread and ContinueClientThread functions to make performing async tasks on the host while in an HLE service function easier.
  * Kernel/Threads: Add a new thread status that will allow using a Kernel::Event to put a guest thread to sleep inside an HLE handler until said event is signaled.

-------------------------------------------------------------------
Sun Nov 26 17:43:11 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171125:
  * CoreTiming: Reworked CoreTiming (#3119)
  * Services/AM: Detect encrypted CIAs
  * file_sys/title_metadata: Fix encrypted bitmask
  * Appveyor: on mingw set cmake version to 3.9.6 (#3141)
  * Services/AM: Return InstallStatus for InstallCIA
  * dynarmic: Update to dfbd3912a4b8e0d28e1a4045893a750f0107fbaa
  * Libnetwork: add password protected rooms, guid, and error fixes (#3068)
  * arm_dynarmic: ClearInstructionCache should clear all instruction caches
  * Revert "Extracted the attribute setup and draw commands into their own functions"
  * SDL: Add command-line CIA installs
  * Services/AM: Add InstallCIA function for frontends
  * Services/AM: Move CIA finalization into Close(), Close() on destruction of class
  * Services/AM: Expose CIAFile class in AM header
  * Services/AM: Add GetTitleMediaType
  * HLE/Tests: Added tests for the StaticBuffer IPC HLE translation.
  * Kernel/IPC: Implement StaticBuffer translation for HLE services that use the HLERequestContext architecture.
  * Kernel/IPC: Handle the StaticBuffer descriptor in LLE command requests.

-------------------------------------------------------------------
Fri Nov 17 19:37:04 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171116:
  * Added Webhook notifications for Appveyor.
  * README: Fix typos from #3008 and slight rewording (#3118)
  * Updated readme file to describe current condition more accurately. (#3008)
  * HLE/SRV: Don't return the port handle if it isn't available when calling GetServiceHandle.
  * Services/AM: Fix content writing on Windows (#3114)
  * fix framelimit in default ini
  * Kernel/Arbiters: When doing ArbitrateAddress(Signal), always pick the highest priority thread, using the first one that was put to sleep if more than one thread with the same highest priority exists.
  * Kernel/Sessions: Wake up any threads waiting on a ServerSession when its client is closed
  * Install Linux icon in hicolor instead of pixmaps
  * Service/PTM: Stub GetStepHistory function

-------------------------------------------------------------------
Sun Nov 12 18:21:53 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171109:
  * Updating API endpoint for webhook notifications. (#3103)
  * Added notifications:webhooks:url to TravisCI build (#3099)
  * Build: Added missing <array> includes to title_metadata.h and cia_container.h
  * Filesys: Added some missing headers to the CMakeLists.txt after the recent stream of PRs.
  * Get Rid of Redundant !
  * Services/AM: Rename and readjust GetNumContentInfos for accuracy
  * Services/AM: Rename and adjust ListContentInfos for accuracy
  * Services/AM: Rename and adjust FindContentInfos for accuracy
  * file_sys/cia_container: Fix warnings
  * Services/AM: Fix warnings
  * Kernel/Thread: Use the process' ideal CPU when specifying the Default CPU on CreateThread.
  * Kernel/Thread: Run the main thread in the CPU specified by the process' exheader.
  * citra-qt: fix broken About box
  * Debugging: Implement GetName for Kernel::ServerSession.
  * Kernel/SVC: Implement LLE command buffer translation in ReplyAndReceive.
  * Kernel/IPC: Put a thread to sleep when performing an LLE IPC request.
  * Kernel/Threads: Added a new thread status to identify threads waiting for an IPC reply from svcSendSyncRequest.
  * Kernel/IPC: Remove dead buffer translation code.
  * Kernel/IPC: Added a function to translate the IPC command buffer from one process to another.
  * remove trailing spaces
  * Kernel/Mutex: Add a missing return in Mutex::Release
  * Services/AM: Add CIA title installation support.
  * Services/AM: Fix log commands
  * Service/FS: Mark FileBackend's Write as non-const
  * file_sys/errors: Add ERROR_INSUFFICIENT_SPACE
  * file_sys/title_metadata: Allow loading from both files, FileBackends, and data
  * file_sys: Add CIA Container
  * Services/AC: Corrected the number of concurrent connections for AC_I and AC_U
  * Fixed up method docs for updater
  * Fix edge case for checking for updates when already deferred
  * Defer update prompt if emulating, and show no update found on explicit click
  * Qt updater integration, based on QtAutoUpdater
  * Implement About Button Functionality (#3005)
  * Clang pls (again)
  * Clang pls
  * Kernel/SVC: Don't let svcReleaseMutex release a mutex owned by another thread.
  * Service/UDS: Updated BeginHostingNetwork
  * Service/UDS: Implement Unbind and GetNodeInformation
  * Service/UDS: Implement SendTo, PullPacket, HandleSecureData, and Bind
  * Update soc_u.cpp
  * Removed all instances of WSACleanup();.
  * dynarmic: Update to 8f15e3f70cb96e56705e5de6ba97b5d09423a56b
  * xbyak: Update to v5.53
  * core: clear format warnings
  * video_core: clean format warnings
  * Services/AC: Converted the ac:i and ac:u services to the new service framework.

-------------------------------------------------------------------
Wed Nov 01 14:38:08 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171031:
  * travis: Add build with frozen versions for dependencies

-------------------------------------------------------------------
Sun Oct 29 19:15:59 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171028:
  * Capitalize the first word in a comment (#3059)
  * Correcting word order of a comment in memory.cpp
  * Add missing header for PRIU64
  * Correct spelling of searchfield in comment (#3052)
  * Services/AM: Implement GetPatchTitleInfos, correct error codes/returns, misc fixes
  * swrasterizer folder minor edit
  * Utilize vector function instead
  * Get rid of narrowing conversion warning

-------------------------------------------------------------------
Wed Oct 25 15:17:38 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171024:
  * Updated the AppVeyor script with a stable SDL2 link.

-------------------------------------------------------------------
Tue Oct 24 22:32:37 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171024:
  * sdl2_sink: Disallow audio device from changing any parameter other than the frequency
  * fix dll error
  * Change build order to chack clang-format first
  * travis: An error in docker.sh should not result in success
  * citra_qt: Remove use of QKeySequence::Cancel

-------------------------------------------------------------------
Mon Oct 23 15:42:46 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171023:
  * Remove some errno constants as it was already defined

-------------------------------------------------------------------
Sun Oct 22 19:54:32 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171022:
  * Fix typo for -Wunused-local-typedefs
  * Remove Crypto++ weak algorithm warning
  * citra-qt: Rename derivative class name
  * hle/lock: Remove #pragma once in cpp file

-------------------------------------------------------------------
Sat Oct 21 14:27:25 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171020:
  * file_sys/archive_ncch: Use AM to get title content path, add ExeFS support and support for additional content indexes
  * loader/ncch: Use AM to get update title path
  * Services/AM: Add title scanning, move to ipc_helper.h, implement most stubbed service calls
  * citra-qt : Adding fullscreen mode
  * file_sys/title_metadata: extend accessible content chunk data

-------------------------------------------------------------------
Sun Oct 15 11:10:12 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171014:
  * Add a subdirectory of icons for Linux builds (#3006)

-------------------------------------------------------------------
Thu Oct 12 14:49:27 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171011:
  * Add QtIFW configuration & build files
  * Fix tabs -> spaces
  * Installer: Converted the build scripts to cmake and added an "installer" target
  * Installer: Address review comments
  * Installer: Capitalize T in Team and update install location for linux

-------------------------------------------------------------------
Tue Oct 10 13:21:14 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171009:
  * travis: Split build scripts for different platforms

-------------------------------------------------------------------
Mon Oct 09 13:23:12 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171008:
  * file_sys/archive_ncch: use NCCHContainer instead of loading .romfs files
  * file_sys/ncch_container: add RomFS, ExeFS override to allow for backward compatibility with existing .romfs system archive dumps
  * file_sys: add class for Title Metadata (TMD)
  * file_sys, loader: add support for reading TMDs to determine app paths
  * Memory: Remove all GetPointer usages from the GDB stub.
  * SVC: Replace GetPointer usage with Read32 in WaitSynchronizationN.
  * SVC: Replace GetPointer usage with Read32 in ReplyAndReceive.
  * SVC: Replace GetPointer usage with ReadBlock in OutputDebugString.
  * SVC: Replace GetPointer usage with ReadCString in ConnectToPort.
  * SVC: Remove GetPointer usage in CreatePort.
  * SVC: Removed GetPointer usage in the GetResourceLimit functions.
  * Change command header in nwm::UDS Initialize function

-------------------------------------------------------------------
Fri Oct 06 13:12:27 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171004:
  * HLE/APT: Always set up the APT parameter when starting a library applet.
  * macOS: Build x86_64h slice
  * Kernel/SharedMemory: Don't take over and unmap the source memory block when creating a shared memory, just reference it.
  * Extracted the attribute setup and draw commands into their own functions

-------------------------------------------------------------------
Mon Oct 02 13:49:02 UTC 2017 - pousaduarte@gmail.com

- Update to version 20171001:
  * HLE/APT: Prepare the APT Wakeup parameter when the game calls Initialize
  * HLE/APT: Always return an error from PrepareToStartNewestHomeMenu so that the Home Menu doesn't try to reboot the system.
  * Memory: Allow IsValidVirtualAddress to be called with a specific process parameter.
  * Tests: Fixed ARM VFP tests
  * Tests: Added Memory::IsValidVirtualAddress tests.
  * Kernel/Thread: Allow specifying which process a thread belongs to when creating it.
  * Loaders: Don't automatically set the current process every time we load an application.
  * Kernel/Threads: When putting a thread to wait, specify a function to execute when it is awoken.
  * Fixed type conversion ambiguity
  * Add the .vs folder and the CMakeSettings.json file from Visual Studio to gitignore.
  * Services/UDS: Handle the rest of the connection sequence. (#2963)
  * Moved down_count to CoreTiming
  * Services/NIM: Implement CheckForSysUpdateEvent.
  * Kernel/Thread: Added a helper function to get a thread's command buffer VAddr.
  * Memory: Make ReadBlock take a Process parameter on which to operate
  * Memory: Make WriteBlock take a Process parameter on which to operate

-------------------------------------------------------------------
Thu Sep 28 11:39:56 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170927:
  * Memory/RasterizerCache: Ignore unmapped memory regions when caching physical regions.
  * Disable unary operator- on Math::Vec2/Vec3/Vec4 for unsigned types.

-------------------------------------------------------------------
Tue Sep 26 20:40:27 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170926:
  * HLE/Archives: Allow multiple loaded applications to access their SelfNCCH archive independently.
  * Audio: Use std::deque instead of std::vector for the audio buffer type (StereoBuffer16).

-------------------------------------------------------------------
Mon Sep 25 13:33:40 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170925:
  * GPU: Add draw for immediate and batch modes
  * Remove pipeline.gpu_mode and fix minor issues
  * HLE/SRV: Implemented RegisterService.
  * citra-qt: fix some untranslated strings
  * Optimized Morton
  * memory: Add GetCurrentPageTable/SetCurrentPageTable
  * memory: Remove GetCurrentPageTablePointers
  * ARM_Interface: Implement PageTableChanged
  * Optimized Float<M,E> multiplication
  * Services/UDS: Added a function to send EAPoL-Start packets (#2920)
  * Loader/NCCH: Add support for loading application updates (#2927)

-------------------------------------------------------------------
Fri Sep 22 12:26:21 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170922:
  * Fixed framebuffer warning
  * Improved performance of FromAttributeBuffer
  * WebService: Verify username and token (#2930)
  * WebService: Set USE_SYSTEM_CURL for travis linux builds

-------------------------------------------------------------------
Sun Sep 17 11:35:20 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170916:
  * SwRasterizer: implement custom clip plane
  * gl_rasterizer: implement custom clip plane
  * SwRasterizer/Clipper: flip the sign convention to match PICA and OpenGL
  * Kernel/Memory: Give each Process its own page table.
  * Kernel/Memory: Switch the current page table when a new process is scheduled.
  * Kernel/Memory: Changed GetPhysicalPointer so that it doesn't go through the current process' page table to obtain a pointer.
  * Kernel/Threads: Don't clear the CPU instruction cache when performing a context switch from an idle thread into a thread in the same process.
  * Kernel/Memory: Make IsValidPhysicalAddress not go through the current process' virtual memory mapping.
  * Tests/VFP: Use a standalone pagetable for the TestEnvironment memory operations.
  * CPU/Dynarmic: Disable the fast page-table access in dynarmic until it supports switching page tables at runtime.
  * Services/NS: Port ns:s to the new service framework.

-------------------------------------------------------------------
Fri Sep 15 16:33:05 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170911:
  * SwRasterizer: Implement primary fragment color.
  * SwRasterizer: Calculate specular_0 for fragment lighting.
  * SwRasterizer: Calculate specular_1 for fragment lighting.
  * SwRasterizer: Calculate fresnel for fragment lighting.
  * SwRasterizer: Fixed the lighting lut lookup function.
  * SwRasterizer: Corrected the light LUT lookups.
  * SwRasterizer: Corrected the light LUT lookups.
  * SwRasterizer: Flip the vertex quaternions before clipping (if necessary).
  * SwRasterizer: Run clang-format
  * SwRasterizer: Fixed a few conversion warnings and moved per-light values into the per-light loop.
  * SwRasterizer/Lighting: Fixed a bug where the distance attenuation bias was being set to the dist atten scale.
  * SwRasterizer/Lighting: Do not use global state in LookupLightingLut.
  * SwRasterizer/Lighting: Do not use global registers state in ComputeFragmentsColors.
  * SwRasterizer/Lighting: Move the lighting enable check outside the ComputeFragmentsColors function.
  * SwRasterizer/Lighting: Move the clamp highlight calculation to the end of the per-light loop body.
  * vector_math: remove broken SFINAE stuff
  * SwRasterizer/Lighting: pass lighting state as parameter
  * vector_math: remove dead template parameter
  * SwRasterizer: only interpolate quat and view when lighting is enabled
  * SwRasterizer/Lighting: refactor GetLutValue into a function.
  * SwRasterizer/Lighting: get rid of nested return
  * SwRasterizer/Lighting: unify float suffix
  * SwRasterizer/Lighting: dist atten lut input need to be clamp
  * Services/APT: Use boost::optional for the APT parameter structure.
  * Services/APT: Use the right error codes in ReceiveParameter and GlanceParameter when the parameter doesn't exist.
  * Services/APT: Properly clear the apt parameter after a successful ReceiveParameter call.
  * Services/APT: Reset the APT parameter inside CancelParameter if the conditions are met.
  * Services/APT: Return the proper error code when calling SendParameter with an outstanding parameter already in memory.
  * Service/APT: Log Send/Cancel/Receive/GlanceParameter calls even if they return an error.
  * tests: Arm testing framework
  * tests: Add tests for vadd
  * pica/shader_interpreter: fix off-by-one in LOOP
  * Produce 7zip artifacts on Travis and Appveyor
  * Handle invalid filenames when renaming files/directories
  * SwRasterizer/Lighting: move quaternion normalization to the caller
  * SwRasterizer/Lighting: reduce confusion
  * SwRasterizer/Lighting: move to its own file
  * SwRasterizer/Lighting: shorten file name
  * loader: Expose program title.
  * core: Expose AppLoader as a public interface.
  * common: Add build timestamp to scm_rev.
  * telemetry_session: Log BuildDate and ProgramName fields.
  * telemetry: Add field for RequiresSharedFont.
  * telemetry: Add field for BuildName.
  * telemetry: Add field for OsPlatform.
  * Quickfix typo in OpenGL 3.3 error message
  * Travis/AppVeyor: Deploy based upon tags
  * pica: upload shared shader code to both unit
  * Services/APT: Use an array to hold data about the 4 possible concurrent applet types (Application, Library, HomeMenu, System).
  * Services/APT: Use the AppletAttributes union directly when dealing with applet attrs.
  * Update cryptopp
  * Service/dlp: Update function tables according 3dbrew
  * pica/regs: layout geometry shader configuration regs
  * Implement correct folder structure for CI builds
  * SwRasterizer/Lighting: use make_tuple instead of constructor
  * Travis: Use Docker to build for Linux
  * HID: zero unused PadState bits
  * SwRasterizer/Lighting: implement geometric factor
  * SwRasterizer/Lighting: implement spot light
  * Fix some spelling mistakes
  * HID: use MotionDevice for Accelerometer and Gyroscope
  * move MotionEmu from core/frontend to input_common as a InputDevice
  * gl_shader_gen: don't call SampleTexture when bump map is not used
  * Fix Spelling/English mistakes
  * dsp_dsp: Remove size assertion in LoadComponent
  * motion_emu: no need to include thread in header
  * pica/shader: extend UnitState for GS
  * pica/shader/interpreter: implement SETEMIT and EMIT
  * correct constness
  * pica/primitive_assembly: Handle winding for GS primitive
  * pica/shader/jit: implement SETEMIT and EMIT
  * pica/command_processor: build geometry pipeline and run geometry shader
  * Added missing parts in libnetwork (#2838)
  * Updated master logo to new logo svg
  * HID: fix a comment and a warning
  * externals: Update soundtouch
  * gl_rasterizer: add clipping plane z<=0 defined in PICA
  * gl_shader_gen: simplify and clarify the depth transformation between vertex shader and fragment shader
  * swrasterizer/clipper: remove tested TODO
  * swrasterizer: remove invalid TODO
  * Dyncom: Fixed a conversion warning when decoding thumb instructions.
  * Dyncom: Use size_t instead of int to store the instruction offsets in the instruction cache.
  * CPU/Dynarmic: Fixed a warning when incrementing the number of ticks in ExecuteInstructions.
  * HLE/Applets: Fixed some conversion warnings when creating the framebuffer shared memory objects.
  * Warnings: Add UNREACHABLE macros to switches that contemplate all possible values.
  * GPU/Warnings: Explicitly cast the screen refresh ticks to u64.
  * Kernel/Threads: Don't immediately switch to the new main thread when loading a new process.
  * SwRasterizer/Lighting: implement bump mapping
  * SwRasterizer/Lighting: implement LUT input CP
  * gl_rasterizer/lighting: more accurate CP formula
  * motion_emu: fix initialization order
  * Kernel/HLE: Use a mutex  to synchronize access to the HLE kernel state between the cpu thread and any other possible threads that might touch the kernel (network thread, etc).
  * Kernel/Memory: Acquire the global HLE lock when a memory read/write operation falls outside of the fast path, for it might perform an MMIO operation.
  * HID: use TouchDevice for touch pad
  * EmuWindow: refactor touch input into a TouchDevice
  * SidebySide Layout (#2859)
  * citra_qt: Show one-time callout messages to user.
  * telemetry_session: Log telemetry ID.
  * settings: Add enable_telemetry, citra_username, and citra_token.
  * telemetry: Log frontend type.
  * web_backend: User config for username and token, support anonymous post.
  * qt: Add web configuration tab.
  * # This is a combination of 2 commits.
  * default_ini: Use correct telemetry endpoint URL.
  * qt: Add an option to view/regenerate telemetry ID.
  * web_services: Refactor to remove dependency on Core.
  * web_backend: Fix asynchronous JSON post by spawning new thread.
  * Fix info about TODO list
  * Warnings: Fixed a few missing-return warnings in video_core.
  * web_backend: Fix CPR bug where Winsock is not properly initializing.
  * Services/UDS: Add functions to generate 802.11 auth and assoc response frames.
  * Services/UDS: Store the received beacon frames until RecvBeaconBroadcastData is called, up to 15 beacons at the same time, removing any older beacon frames when the limit is exceeded.
  * Services/UDS: Handle the connection sequence packets.
  * Services/UDS: Remove an old duplicated declaration of WifiPacket.
  * interpolate: Interpolate on a frame-by-frame basis
  * Use recursive_mutex instead of mutex to fix #2902
  * video_core: report telemetry for gas mode
  * Build: Add mingw64 compile support to appveyor
  * Add manifest
  * pica/lighting: only apply Fresnel factor for the last light
  * APT: load different shared font depending on the region
  * Fix icon for citra qt
  * Mii Selector Applet: update Mii structures
  * Remove _flag in var names
  * Remove excess debug dlls for mingw build
  * trvis_OSX: build with system curl
  * Build: Enable SSL in mingw by linking against WinSSL

-------------------------------------------------------------------
Sat Sep 09 21:08:14 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170907:
  * pica/regs: layout geometry shader configuration regs
  * pica/shader: extend UnitState for GS
  * pica/shader/interpreter: implement SETEMIT and EMIT
  * correct constness
  * pica/primitive_assembly: Handle winding for GS primitive
  * pica/shader/jit: implement SETEMIT and EMIT
  * pica/command_processor: build geometry pipeline and run geometry shader

-------------------------------------------------------------------
Wed Sep 06 14:33:23 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170906:
  * Services/UDS: Add functions to generate 802.11 auth and assoc response frames.
  * Services/UDS: Store the received beacon frames until RecvBeaconBroadcastData is called, up to 15 beacons at the same time, removing any older beacon frames when the limit is exceeded.
  * Services/UDS: Handle the connection sequence packets.
  * Services/UDS: Remove an old duplicated declaration of WifiPacket.
  * Build: Add mingw64 compile support to appveyor
  * Add manifest
  * pica/lighting: only apply Fresnel factor for the last light
  * Fix icon for citra qt
  * Mii Selector Applet: update Mii structures
  * Remove _flag in var names
  * Remove excess debug dlls for mingw build

-------------------------------------------------------------------
Fri Sep 01 15:40:20 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170831:
  * SwRasterizer/Lighting: implement bump mapping
  * SwRasterizer/Lighting: implement LUT input CP
  * gl_rasterizer/lighting: more accurate CP formula
  * interpolate: Interpolate on a frame-by-frame basis
  * video_core: report telemetry for gas mode

-------------------------------------------------------------------
Wed Aug 30 14:34:14 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170829:
  * HID: use TouchDevice for touch pad
  * EmuWindow: refactor touch input into a TouchDevice
  * Fix info about TODO list
  * Warnings: Fixed a few missing-return warnings in video_core.
  * Use recursive_mutex instead of mutex to fix #2902

-------------------------------------------------------------------
Sun Aug 27 09:53:38 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170826:
  * SidebySide Layout (#2859)
  * citra_qt: Show one-time callout messages to user.
  * telemetry_session: Log telemetry ID.
  * settings: Add enable_telemetry, citra_username, and citra_token.
  * telemetry: Log frontend type.
  * web_backend: User config for username and token, support anonymous post.
  * qt: Add web configuration tab.
  * # This is a combination of 2 commits.
  * default_ini: Use correct telemetry endpoint URL.
  * qt: Add an option to view/regenerate telemetry ID.
  * web_services: Refactor to remove dependency on Core.
  * web_backend: Fix asynchronous JSON post by spawning new thread.
  * web_backend: Fix CPR bug where Winsock is not properly initializing.

-------------------------------------------------------------------
Fri Aug 25 09:53:11 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170823:
  * Dyncom: Fixed a conversion warning when decoding thumb instructions.
  * Dyncom: Use size_t instead of int to store the instruction offsets in the instruction cache.
  * CPU/Dynarmic: Fixed a warning when incrementing the number of ticks in ExecuteInstructions.
  * HLE/Applets: Fixed some conversion warnings when creating the framebuffer shared memory objects.
  * Warnings: Add UNREACHABLE macros to switches that contemplate all possible values.
  * GPU/Warnings: Explicitly cast the screen refresh ticks to u64.
  * Kernel/Threads: Don't immediately switch to the new main thread when loading a new process.
  * motion_emu: fix initialization order
  * Kernel/HLE: Use a mutex  to synchronize access to the HLE kernel state between the cpu thread and any other possible threads that might touch the kernel (network thread, etc).
  * Kernel/Memory: Acquire the global HLE lock when a memory read/write operation falls outside of the fast path, for it might perform an MMIO operation.

-------------------------------------------------------------------
Tue Aug 22 12:40:55 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170821:
  * SwRasterizer/Lighting: implement geometric factor
  * SwRasterizer/Lighting: implement spot light
  * HID: use MotionDevice for Accelerometer and Gyroscope
  * move MotionEmu from core/frontend to input_common as a InputDevice
  * motion_emu: no need to include thread in header
  * Added missing parts in libnetwork (#2838)
  * Updated master logo to new logo svg
  * HID: fix a comment and a warning
  * externals: Update soundtouch
  * gl_rasterizer: add clipping plane z<=0 defined in PICA
  * gl_shader_gen: simplify and clarify the depth transformation between vertex shader and fragment shader
  * swrasterizer/clipper: remove tested TODO
  * swrasterizer: remove invalid TODO

-------------------------------------------------------------------
Wed Aug 16 21:30:14 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170815:
  * dsp_dsp: Remove size assertion in LoadComponent

-------------------------------------------------------------------
Tue Aug 15 09:49:15 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170813:
  * Services/APT: Use an array to hold data about the 4 possible concurrent applet types (Application, Library, HomeMenu, System).
  * Services/APT: Use the AppletAttributes union directly when dealing with applet attrs.
  * Implement correct folder structure for CI builds
  * Travis: Use Docker to build for Linux
  * gl_shader_gen: don't call SampleTexture when bump map is not used
  * Fix Spelling/English mistakes

-------------------------------------------------------------------
Fri Aug 11 13:20:16 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170811:
  * HID: zero unused PadState bits
  * Fix some spelling mistakes

-------------------------------------------------------------------
Thu Aug 10 13:00:36 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170810:
  * SwRasterizer: Implement primary fragment color.
  * SwRasterizer: Calculate specular_0 for fragment lighting.
  * SwRasterizer: Calculate specular_1 for fragment lighting.
  * SwRasterizer: Calculate fresnel for fragment lighting.
  * SwRasterizer: Fixed the lighting lut lookup function.
  * SwRasterizer: Corrected the light LUT lookups.
  * SwRasterizer: Corrected the light LUT lookups.
  * SwRasterizer: Flip the vertex quaternions before clipping (if necessary).
  * SwRasterizer: Run clang-format
  * SwRasterizer: Fixed a few conversion warnings and moved per-light values into the per-light loop.
  * SwRasterizer/Lighting: Fixed a bug where the distance attenuation bias was being set to the dist atten scale.
  * SwRasterizer/Lighting: Do not use global state in LookupLightingLut.
  * SwRasterizer/Lighting: Do not use global registers state in ComputeFragmentsColors.
  * SwRasterizer/Lighting: Move the lighting enable check outside the ComputeFragmentsColors function.
  * SwRasterizer/Lighting: Move the clamp highlight calculation to the end of the per-light loop body.
  * vector_math: remove broken SFINAE stuff
  * SwRasterizer/Lighting: pass lighting state as parameter
  * vector_math: remove dead template parameter
  * SwRasterizer: only interpolate quat and view when lighting is enabled
  * SwRasterizer/Lighting: refactor GetLutValue into a function.
  * SwRasterizer/Lighting: get rid of nested return
  * SwRasterizer/Lighting: unify float suffix
  * SwRasterizer/Lighting: dist atten lut input need to be clamp
  * Handle invalid filenames when renaming files/directories
  * SwRasterizer/Lighting: move quaternion normalization to the caller
  * SwRasterizer/Lighting: reduce confusion
  * SwRasterizer/Lighting: move to its own file
  * SwRasterizer/Lighting: shorten file name
  * loader: Expose program title.
  * core: Expose AppLoader as a public interface.
  * common: Add build timestamp to scm_rev.
  * telemetry_session: Log BuildDate and ProgramName fields.
  * telemetry: Add field for RequiresSharedFont.
  * telemetry: Add field for BuildName.
  * telemetry: Add field for OsPlatform.
  * Quickfix typo in OpenGL 3.3 error message
  * Travis/AppVeyor: Deploy based upon tags
  * pica: upload shared shader code to both unit
  * Update cryptopp
  * Service/dlp: Update function tables according 3dbrew
  * SwRasterizer/Lighting: use make_tuple instead of constructor

-------------------------------------------------------------------
Mon Jul 31 20:20:38 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170729:
  * Services/APT: Use boost::optional for the APT parameter structure.
  * Services/APT: Use the right error codes in ReceiveParameter and GlanceParameter when the parameter doesn't exist.
  * Services/APT: Properly clear the apt parameter after a successful ReceiveParameter call.
  * Services/APT: Reset the APT parameter inside CancelParameter if the conditions are met.
  * Services/APT: Return the proper error code when calling SendParameter with an outstanding parameter already in memory.
  * Service/APT: Log Send/Cancel/Receive/GlanceParameter calls even if they return an error.
  * tests: Arm testing framework
  * tests: Add tests for vadd
  * pica/shader_interpreter: fix off-by-one in LOOP
  * Produce 7zip artifacts on Travis and Appveyor

-------------------------------------------------------------------
Wed Jul 26 22:57:01 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170726:
  * refactor APT service to use the new IPC helpers
  * move push out of class body and add u8 u16 bool specializations
  * fix #2560 and other comments
  * IPCHelper Skip method + address comments for apt
  * Cast size_t to u32 for PushStaticBuffer usages
  * address more comments
  * hopefully fix clang-format issues with old version
  * shared_page: stub battery state
  * Services/UDS: Initial support for hosting local-wlan networks.
  * Services/UDS: Store the entire NetworkInfo structure that was used to create the network.
  * Service/UDS: Schedule an event to broadcast the beacon frames every 102.4ms.
  * Services/UDS: Do not allow trying to start up a network that only the host can connect to.
  * Services/UDS: Signal the connection event when closing down the network.
  * Services/UDS: Use consistent spelling for WiFi and simplify the GetChannel function.
  * Services/UDS: Fixed a style mistake in GetChannel.
  * Fix OutputDebugString syscall
  * error conversion fixes for soc_u
  * citra-qt: Move config dialog code to its own directory
  * Pica/Regs: Correct bit width for blend-equations
  * qt: enable config for circle pad pro
  * dsp_dsp: Messages are modified by service before being sent to DSP
  * Better looking status bar under Linux Ubuntu (#2662)
  * OpenGL: Move Attributes enum to a more appropriate file
  * OpenGL: Move PicaShaderConfig to gl_shader_gen.h
  * ldr_ro: use IPC helper
  * input_common/sdl: add support for binding button to axis
  * OpenGL: Pass Pica regs via parameter
  * rasterizer: implement combiner operation 7 (Dot3_RGBA)
  * gl_shader_gen: remove TODO about Lerp behaviour verification. The implementation is verified against hardware
  * citra-qt: game list search function (#2673)
  * citra-qt: game list search function fixed minor mistakes
  * Fixed some more typos
  * ir: implement circle pad pro
  * pica: use correct coordinates for texture 2
  * ir: implement new 3ds HID via ir:rst
  * pica: shader_dirty if texture2 coord changed
  * Create a random console_unique_id (#2668)
  * Don’t focus the search field if the game is empty
  * fixup!ir: implement new 3ds HID via ir:rst
  * citra-qt: Remove disassembler widget
  * citra-qt: Remove callstack widget
  * Remove ability to load symbol maps
  * Remove unused symbols code
  * Dyncom: Tweak types and log formatting
  * Dyncom: Remove disassembler code
  * Dyncom/VFP: Convert denormal outputs into 0 when the FTZ flag is enabled.
  * Revert "Remove `exceptions` parameter from `normaliseround` VFP functions"
  * Dyncom/VFP: Strip the VFP_NAN_FLAG sentinel value when setting vfp exceptions.
  * Memory: Add constants for the n3DS additional RAM
  * DSP: Create backing memory for entire DSP RAM
  * Kernel: Map special regions according to ExHeader
  * Frontend: Prevent FileSystemWatcher from blocking UI thread
  * Pica: Set program code / swizzle data limit to 4096
  * Pica: Write shader registers in functions
  * Pica: Write GS registers
  * Dyncom/VFP: Perform flush-to-zero on the second operand of vsub before sending it to vadd.
  * Kernel: Use a Session object to keep track of the status of a Client/Server session pair.
  * Kernel: Remove a now unused enum and variable regarding a session's status.
  * Services/UDS: Generate the UDS beacons when the beacon callback fires.
  * Services/UDS: Implement RecvBeaconBroadcastData.
  * Services/UDS: Use the new IPC helper functions.
  * pica: correct bit field length for some registers
  * pica: use correct register value for shader bool_uniforms
  * use IPCHelper for PTM services
  * pica/swrasterizer: implement procedural texture
  * gl_rasterizer: implement procedural texture
  * swrasterizer: add missing tc0_w and fragment lighting attribute processing
  * Upgrade AppVeyor to Visual Studio 2017
  * Remove "Xamarin logspam" workaround
  * externals: Update catch to 1.9.4
  * Kernel/Sessions: Remove the ClientSession::Create function.
  * fixup! Dyncom/VFP: Convert denormal outputs into 0 when the FTZ flag is enabled.
  * cam: use IPCHelper
  * cam: move u32->u8 trancation to IPCHelper
  * common: Add a generic interface for logging telemetry fields.
  * core: Keep track of telemetry for the current emulation session.
  * telemetry: Log a few simple data fields throughout core.
  * Make BitField and ResultCode constexpr-initializable
  * result: Make error description a generic integer
  * FileSys: Move all result description to errors.h
  * GSP_GPU: Move error codes from result.h to local file
  * Kernel: Centralize error definitions in errors.h
  * Common: Clean up meta-template logic in BitField
  * FS: Remove unused result definition
  * gl_shader: refactor texture sampler into its own function
  * OpenGL: Improve accuracy of quaternion interpolation
  * fixup!cam: use IPCHelper
  * Update dynarmic
  * Add the fmt string formatting library
  * Move framebuffer_layout from Common to Core
  * Common: Fix some out-of-style includes
  * Core: Fix some out-of-style includes
  * OpenGL: Remove unused RendererOpenGL fields
  * Move screen size constants from video_core to core
  * Remove some unnecessary inclusions of video_core.h
  * Citra: Convert include into forward declaration
  * CMake: Correct inter-module dependencies and library visibility
  * Travis: Upgrade to CMake 3.6.3
  * CMake: Use IMPORTED target for libpng
  * CMake: Use IMPORTED target for Boost
  * CMake: Use append instead of set to modify list
  * CMake: Stop using FindOpenGL, which seems to not be required anymore
  * CMake: Remove CITRA_QT_LIBS var
  * CMake: Define an interface target for SDL2 definitions
  * CMake: Use target properties to add inih include paths
  * CMake: Add SoundTouch include path to target property
  * CMake: Add cryptopp include path to target property
  * CMake: Remove unnecessary include_directories for dynarmic
  * CMake: Create INTERFACE targets for microprofile and nihstro
  * CMake: Create an INTERFACE target for Catch
  * CMake: Move definitions of externals to the CMakeLists in that directory
  * CMake: Re-organize root CMakeLists.txt file
  * pica: add registers for texture cube
  * swrasterizer: implement TextureCube
  * Kernel: Extract dynamic Object pointer cast into its own function
  * Kernel: Removed HandleTable::GetWaitObject
  * Kernel: Move WaitObject to a separate file
  * Kernel: Move HandleTable to a separate file
  * pica: prepare registers for spotlight
  * gl_rasterizer: sync spot light status
  * gl_rasterizer: implement spot light
  * Fixed encrypted ROM error messages.
  * Added system for handling core errors in citra-qt.
  * Made some changes from review comments: - Made LoadKernelSystemMode return a pair consisting of a system mode and a result code (Could use review). - Deleted ErrorOpenGL error code in favor of just having ErrorVideoCore. - Made dialog messages more clear. - Compared archive ID in fs_user.cpp to ArchiveIdCode::NCCH as opposed to hex magic. - Cleaned up some other stuff.
  * Added message to status bar to show core errors ignored by the user.
  * Optimized messages that were repetitive and added ability for core errors to specify more details optionally.
  * Created a whitelist of system archives to prevent false positives creating dialogs.
  * Moved whitelist checks from FS_User to the Archive_NCCH handler.
  * Switched to the ERROR_NOT_FOUND constant from errors.h.
  * Fixed wiki URLs.
  * Addressed Bunnei's review comments, and made some other tweaks:  - Deleted GetStatus() because it wasn't used anywhere outside of Core::System.  - Fixed design flaw where the message bar status could be set despite the game being stopped.
  * Remove unused imports in game_list_p.h
  * Edit Citra URLs (#2728)
  * Fix FAQ Link in Readme
  * pica/rasterizer: implement/stub texture wrap mode 4-7
  * HLE: Move SessionRequestHandler from Service:: to Kernel::
  * ResultVal: Add more convenience utils for creating and cascading results
  * Kernel: Add a dedicated SetHleHandler method to ServerPort/ServerSession
  * Service: Move SRV interface to a new sm/ subdirectory
  * Service/sm: Use an actual semaphore for the notification semaphore
  * Service: Make service registration part of the sm implementation
  * Service: Remove unnecessary includes from service.h
  * Services/UDS: Implement DecryptBeaconData.
  * Kernel: Remove some unnecessary namespace qualifications
  * Service: Add new ServiceFramework framework for writing HLE services
  * Service: Remove a few redundant namespace qualifiers
  * Kernel: Ensure objects are kept alive during ClientSession disconnection
  * Session: Remove/add some forward declarations
  * Service/sm: Convert 'srv:' to ServiceFramework
  * Remove unused import in break_points.cpp (#2763)
  * OpenGL: Update comment on AreQuaternionsOpposite with new information
  * gl_rasterizer_cache: depth write is disabled if allow_depth_stencil_write is false
  * gl_rasterizer/lighting: implement lut input 5 (CP)
  * gl_rasterizer/lighting: Implement tangent mapping
  * ServiceFramework: Use separate copy of command buffer
  * Kernel: Add methods in HLERequestContext abstracting handle creation
  * IPC: Add basic HLERequestContext support to RequestParser/Builder
  * IPC: Add Pop/PushObjects methods to RequestParser/Builder
  * Service/sm: Convert srv: to use IPC helpers
  * Kernel: Basic support for IPC translation for HLE services
  * Kernel: Allow clearing request_objects to re-use buffer space
  * Externals: Upgrade bundled Boost to 1.64
  * Kernel/IPC: Use boost::small_vector for HLE context objects
  * Services/UDS: Set the proper bit in the ConnectionStatus structure when creating a network. (#2738)
  * gl_rasterizer/lighting: implement geometric factor
  * UDS: Added a hook for updating the connection status when a client connects to the network.
  * UDS: Stub SendTo to generate the unencrypted data frame with the right headers.
  * UDS: Return the correct error messages in SendTo when not connected to a network or trying to send to itself.
  * UDS: Clarify comment about the first 4 bytes of the SecureData header.
  * Stop using reserved operator names (and/or/xor) with Xbyak
  * CMake: Set MSVC flags for improved C++ standards conformance
  * gl_rasterizer/lighting: use the formula from the paper for germetic factor
  * Kernel/IPC: Make HLERequestContext usable from outside kernel
  * Kernel/IPC: Add tests for HLERequestContext buffer translation
  * Kernel: Add comment about the extended linear heap area
  * ResultVal: Add an rvalue overload of Unwrap()
  * ResultVal: Remove MoveFrom()
  * Memory: Add enum definitions for the n3DS FCRAM size
  * Changing default values for bg_red, bg_green, and bg_blue from 1.0 to 0.0.
  * gl_rasterizer/lighting: fix LUT interpolation
  * gl_rasterizer: manage texture ids in one place
  * gl_rasterizer: fix glGetUniformLocation type
  * gl_state: reset 1d textures
  * Kernel/IPC: Support translation of null handles
  * Memory: Make PhysicalToVirtualAddress return a boost::optional
  * Memory: Add TryVirtualToPhysicalAddress, returning a boost::optional
  * Memory: Fix crash when unmapping a VMA covering cached surfaces
  * Memory: Add function to flush a virtual range from the rasterizer cache
  * Kernel: Implement CreateSession SVC
  * Kernel: Fix typo in test name
  * gl_rasterizer: create the texture before applying the state
  * gl_rasterizer: use texture buffer for fog LUT
  * Kernel: Implement CreateSessionToPort SVC
  * Kernel: Fix SVC wrapper for CreatePort
  * Kernel: Implement AcceptSession SVC
  * citra-qt: add new uisetting->theme
  * citra-qt: Add Dark theme from https://github.com/ColinDuquesnoy/QDarkStyleSheet
  * citra-qt: load ui theme at startup and config change.
  * citra-qt: Add option to configure the UI theme
  * Set global definition WIN32_LEAN_AND_MEAN (#2807)
  * externals: silence warning C4390 on MSVC for cryptopp (#2805)
  * Kernel/ServerSession: Keep track of which threads have issued sync requests.
  * apt/shared_font: don't relocate zero offset
  * apt: load shared font from system archive
  * Kernel/SVC: Partially implemented svcReplyAndReceive.
  * Kernel/Sessions: Clean up the list of pending request threads of a session when the client endpoint is closed.
  * UDS: Added functions to encrypt and decrypt the data frames.
  * UDS: Run clang-format.
  * UDS: Move the UDS keyslot used to generate the CCMP key to the AES::KeySlotID enum.
  * UDS: Use the ToDS and FromDS fields to properly calculate the AAD used during encryption.
  * gpu: fix edge cases for TextureCopy
  * configure_debug: Add label warning that CPU JIT needs to be disabled for gdbstub to work
  * fixing a couple of typos
  * gpu: add comments for TextureCopy
  * Kernel/SVC: Pass the current thread as a parameter to ClientSession::SendSyncRequest.
  * Remove unnecessary WIN32_LEAN_AND_MEAN macro definition
  * gl_rasterizer: use texture buffer for proctex LUT
  * Service/boss:P: Add some functions to FunctionTable
  * Implement basic virtual Room support based on enet (#2803)
  * externals: Add CPR as a submodule.
  * externals: Add JSON as a submodule.
  * logging: Add WebService as a log cateogry.
  * settings: Add telemetry endpoint URL.
  * web_service: Add skeleton project.
  * web_backend: Add initial interface to POST data to Citra Web Services.
  * web_service: Implement JSON serialization of telemetry data.
  * telemetry_session: Use TelemetryJson to submit real telemetry.
  * web_service: Add CMake flag to enable.
  * web_backend: Specify api-version on JSON post.
  * Update enet submodule
  * CMakeLists: Check that all submodules are present
  * Network: Threads for Room and RoomMember
  * Network: Added Packet class for serialization
  * Network: Handle join request in Room
  * Network: Send JoinRequest and handle the answer in RoomMember
  * Network: Init Network in SDL and QT
  * Network: Enable to send WifiPackets
  * Network: Handle the disconnect of a client
  * Network: Enable sending and receiving chat messages
  * Network: Send the game title
  * Network: Made send async in RoomMember
  * Network: Propagate Room closing to connected members
  * Network: Changed timeout for receiving packets to 100ms
  * .gitmodules: Make enet use the same convention as other submodules.
  * stubbed frd::UnscrambleLocalFriendCode (#2827)
  * telemetry: Log performance, configuration, and system data.
  * Don't pull in entire JSON repo for single header file
  * Add description of upstream repo
  * debugger/shader: fix inverted uniform flow control
  * debugger/shader: fix address register for reverted arithmetic op
  * debugger/shader: print the invert flag for JMPU
  * debugger/shader: display LOOP
  * Use WinSSPI instead of OpenSSL
  * Network: Moved NintendoOUI initalization to RoomMember constructor

-------------------------------------------------------------------
Wed Jul 26 21:20:44 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170726:
  * gl_rasterizer_cache: depth write is disabled if allow_depth_stencil_write is false
  * Memory: Make PhysicalToVirtualAddress return a boost::optional
  * Memory: Add TryVirtualToPhysicalAddress, returning a boost::optional
  * Memory: Add function to flush a virtual range from the rasterizer cache
  * citra-qt: add new uisetting->theme
  * citra-qt: Add Dark theme from https://github.com/ColinDuquesnoy/QDarkStyleSheet
  * citra-qt: load ui theme at startup and config change.
  * citra-qt: Add option to configure the UI theme
  * gl_rasterizer: use texture buffer for proctex LUT
  * telemetry: Log performance, configuration, and system data.
  * Don't pull in entire JSON repo for single header file
  * Add description of upstream repo
  * debugger/shader: fix inverted uniform flow control
  * debugger/shader: fix address register for reverted arithmetic op
  * debugger/shader: print the invert flag for JMPU
  * debugger/shader: display LOOP
  * Use WinSSPI instead of OpenSSL
  * Network: Moved NintendoOUI initalization to RoomMember constructor

-------------------------------------------------------------------
Mon Jul 17 15:05:51 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170717:
  * apt/shared_font: don't relocate zero offset
  * apt: load shared font from system archive
  * CMakeLists: Check that all submodules are present
  * Network: Threads for Room and RoomMember
  * Network: Added Packet class for serialization
  * Network: Handle join request in Room
  * Network: Send JoinRequest and handle the answer in RoomMember
  * Network: Init Network in SDL and QT
  * Network: Enable to send WifiPackets
  * Network: Handle the disconnect of a client
  * Network: Enable sending and receiving chat messages
  * Network: Send the game title
  * Network: Made send async in RoomMember
  * Network: Propagate Room closing to connected members
  * Network: Changed timeout for receiving packets to 100ms
  * .gitmodules: Make enet use the same convention as other submodules.
  * stubbed frd::UnscrambleLocalFriendCode (#2827)

-------------------------------------------------------------------
Thu Jul 13 15:31:34 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170713:
  * externals: Add CPR as a submodule.
  * externals: Add JSON as a submodule.
  * logging: Add WebService as a log cateogry.
  * settings: Add telemetry endpoint URL.
  * web_service: Add skeleton project.
  * web_backend: Add initial interface to POST data to Citra Web Services.
  * web_service: Implement JSON serialization of telemetry data.
  * telemetry_session: Use TelemetryJson to submit real telemetry.
  * web_service: Add CMake flag to enable.
  * web_backend: Specify api-version on JSON post.
  * Update enet submodule

-------------------------------------------------------------------
Mon Jul 10 15:46:34 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170708:
  * Memory: Fix crash when unmapping a VMA covering cached surfaces
  * Service/boss:P: Add some functions to FunctionTable
  * Implement basic virtual Room support based on enet (#2803)

-------------------------------------------------------------------
Tue Jul 04 16:36:09 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170701:
  * Remove unnecessary WIN32_LEAN_AND_MEAN macro definition

-------------------------------------------------------------------
Fri Jun 30 10:57:21 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170629:
  * gl_rasterizer: create the texture before applying the state
  * gl_rasterizer: use texture buffer for fog LUT
  * Kernel/ServerSession: Keep track of which threads have issued sync requests.
  * Kernel/SVC: Partially implemented svcReplyAndReceive.
  * Kernel/Sessions: Clean up the list of pending request threads of a session when the client endpoint is closed.
  * gpu: fix edge cases for TextureCopy
  * configure_debug: Add label warning that CPU JIT needs to be disabled for gdbstub to work
  * fixing a couple of typos
  * gpu: add comments for TextureCopy
  * Kernel/SVC: Pass the current thread as a parameter to ClientSession::SendSyncRequest.

-------------------------------------------------------------------
Tue Jun 27 16:56:20 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170626:
  * UDS: Stub SendTo to generate the unencrypted data frame with the right headers.
  * UDS: Return the correct error messages in SendTo when not connected to a network or trying to send to itself.
  * UDS: Clarify comment about the first 4 bytes of the SecureData header.
  * UDS: Added functions to encrypt and decrypt the data frames.
  * UDS: Run clang-format.
  * UDS: Move the UDS keyslot used to generate the CCMP key to the AES::KeySlotID enum.
  * UDS: Use the ToDS and FromDS fields to properly calculate the AAD used during encryption.

-------------------------------------------------------------------
Mon Jun 26 08:04:22 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170624:
  * Set global definition WIN32_LEAN_AND_MEAN (#2807)
  * externals: silence warning C4390 on MSVC for cryptopp (#2805)

-------------------------------------------------------------------
Sat Jun 24 11:16:43 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170623:
  * Kernel: Implement CreateSession SVC
  * Kernel: Implement CreateSessionToPort SVC
  * Kernel: Fix SVC wrapper for CreatePort
  * Kernel: Implement AcceptSession SVC

-------------------------------------------------------------------
Fri Jun 23 07:40:21 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170622:
  * Kernel: Add comment about the extended linear heap area
  * Memory: Add enum definitions for the n3DS FCRAM size
  * Changing default values for bg_red, bg_green, and bg_blue from 1.0 to 0.0.
  * gl_rasterizer/lighting: fix LUT interpolation
  * gl_rasterizer: manage texture ids in one place
  * gl_rasterizer: fix glGetUniformLocation type
  * gl_state: reset 1d textures
  * Kernel/IPC: Support translation of null handles
  * Kernel: Fix typo in test name

-------------------------------------------------------------------
Wed Jun 21 09:04:19 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170620:
  * UDS: Added a hook for updating the connection status when a client connects to the network.
  * ResultVal: Add an rvalue overload of Unwrap()
  * ResultVal: Remove MoveFrom()

-------------------------------------------------------------------
Tue Jun 20 09:14:09 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170619:
  * Kernel/IPC: Make HLERequestContext usable from outside kernel
  * Kernel/IPC: Add tests for HLERequestContext buffer translation

-------------------------------------------------------------------
Mon Jun 19 07:39:31 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170618:
  * gl_rasterizer/lighting: implement geometric factor
  * Stop using reserved operator names (and/or/xor) with Xbyak
  * CMake: Set MSVC flags for improved C++ standards conformance
  * gl_rasterizer/lighting: use the formula from the paper for germetic factor

-------------------------------------------------------------------
Thu Jun 15 10:19:44 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170614:
  * gl_rasterizer/lighting: implement lut input 5 (CP)
  * gl_rasterizer/lighting: Implement tangent mapping

-------------------------------------------------------------------
Wed Jun 14 10:35:35 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170613:
  * pica/rasterizer: implement/stub texture wrap mode 4-7
  * Services/UDS: Set the proper bit in the ConnectionStatus structure when creating a network. (#2738)

-------------------------------------------------------------------
Tue Jun 13 13:23:06 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170612:
  * OpenGL: Update comment on AreQuaternionsOpposite with new information

-------------------------------------------------------------------
Mon Jun 12 09:39:47 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170611:
  * pica: prepare registers for spotlight
  * gl_rasterizer: sync spot light status
  * gl_rasterizer: implement spot light
  * ServiceFramework: Use separate copy of command buffer
  * Kernel: Add methods in HLERequestContext abstracting handle creation
  * IPC: Add basic HLERequestContext support to RequestParser/Builder
  * IPC: Add Pop/PushObjects methods to RequestParser/Builder
  * Service/sm: Convert srv: to use IPC helpers
  * Kernel: Basic support for IPC translation for HLE services
  * Kernel: Allow clearing request_objects to re-use buffer space
  * Externals: Upgrade bundled Boost to 1.64
  * Kernel/IPC: Use boost::small_vector for HLE context objects

-------------------------------------------------------------------
Fri Jun 09 08:52:56 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170608:
  * HLE: Move SessionRequestHandler from Service:: to Kernel::
  * ResultVal: Add more convenience utils for creating and cascading results
  * Kernel: Add a dedicated SetHleHandler method to ServerPort/ServerSession
  * Service: Move SRV interface to a new sm/ subdirectory
  * Service/sm: Use an actual semaphore for the notification semaphore
  * Service: Make service registration part of the sm implementation
  * Service: Remove unnecessary includes from service.h
  * Services/UDS: Implement DecryptBeaconData.
  * Kernel: Remove some unnecessary namespace qualifications
  * Service: Add new ServiceFramework framework for writing HLE services
  * Service: Remove a few redundant namespace qualifiers
  * Kernel: Ensure objects are kept alive during ClientSession disconnection
  * Session: Remove/add some forward declarations
  * Service/sm: Convert 'srv:' to ServiceFramework
  * Remove unused import in break_points.cpp (#2763)

-------------------------------------------------------------------
Mon Jun 05 07:52:45 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170603:
  * Fixed encrypted ROM error messages.
  * Added system for handling core errors in citra-qt.
  * Made some changes from review comments: - Made LoadKernelSystemMode return a pair consisting of a system mode and a result code (Could use review). - Deleted ErrorOpenGL error code in favor of just having ErrorVideoCore. - Made dialog messages more clear. - Compared archive ID in fs_user.cpp to ArchiveIdCode::NCCH as opposed to hex magic. - Cleaned up some other stuff.
  * Added message to status bar to show core errors ignored by the user.
  * Optimized messages that were repetitive and added ability for core errors to specify more details optionally.
  * Created a whitelist of system archives to prevent false positives creating dialogs.
  * Moved whitelist checks from FS_User to the Archive_NCCH handler.
  * Switched to the ERROR_NOT_FOUND constant from errors.h.
  * Fixed wiki URLs.
  * Addressed Bunnei's review comments, and made some other tweaks:  - Deleted GetStatus() because it wasn't used anywhere outside of Core::System.  - Fixed design flaw where the message bar status could be set despite the game being stopped.
  * Remove unused imports in game_list_p.h
  * Edit Citra URLs (#2728)
  * Fix FAQ Link in Readme

-------------------------------------------------------------------
Thu Jun 01 09:42:55 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170531:
  * cam: use IPCHelper
  * cam: move u32->u8 trancation to IPCHelper
  * fixup!cam: use IPCHelper
  * Kernel: Extract dynamic Object pointer cast into its own function
  * Kernel: Removed HandleTable::GetWaitObject
  * Kernel: Move WaitObject to a separate file
  * Kernel: Move HandleTable to a separate file

-------------------------------------------------------------------
Wed May 31 08:24:35 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170530:
  * pica: add registers for texture cube
  * swrasterizer: implement TextureCube

-------------------------------------------------------------------
Tue May 30 08:45:58 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170529:
  * Travis: Upgrade to CMake 3.6.3
  * CMake: Use IMPORTED target for libpng
  * CMake: Use IMPORTED target for Boost
  * CMake: Use append instead of set to modify list
  * CMake: Stop using FindOpenGL, which seems to not be required anymore
  * CMake: Remove CITRA_QT_LIBS var
  * CMake: Define an interface target for SDL2 definitions
  * CMake: Use target properties to add inih include paths
  * CMake: Add SoundTouch include path to target property
  * CMake: Add cryptopp include path to target property
  * CMake: Remove unnecessary include_directories for dynarmic
  * CMake: Create INTERFACE targets for microprofile and nihstro
  * CMake: Create an INTERFACE target for Catch
  * CMake: Move definitions of externals to the CMakeLists in that directory
  * CMake: Re-organize root CMakeLists.txt file

-------------------------------------------------------------------
Sun May 28 16:02:10 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170528:
  * OpenGL: Improve accuracy of quaternion interpolation
  * Update dynarmic
  * Add the fmt string formatting library
  * Move framebuffer_layout from Common to Core
  * Common: Fix some out-of-style includes
  * Core: Fix some out-of-style includes
  * OpenGL: Remove unused RendererOpenGL fields
  * Move screen size constants from video_core to core
  * Remove some unnecessary inclusions of video_core.h
  * Citra: Convert include into forward declaration
  * CMake: Correct inter-module dependencies and library visibility

-------------------------------------------------------------------
Sat May 27 12:47:25 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170527:
  * Make BitField and ResultCode constexpr-initializable
  * result: Make error description a generic integer
  * FileSys: Move all result description to errors.h
  * GSP_GPU: Move error codes from result.h to local file
  * Kernel: Centralize error definitions in errors.h
  * Common: Clean up meta-template logic in BitField
  * FS: Remove unused result definition
  * gl_shader: refactor texture sampler into its own function

-------------------------------------------------------------------
Thu May 25 08:14:09 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170524:
  * pica/swrasterizer: implement procedural texture
  * gl_rasterizer: implement procedural texture
  * common: Add a generic interface for logging telemetry fields.
  * core: Keep track of telemetry for the current emulation session.
  * telemetry: Log a few simple data fields throughout core.

-------------------------------------------------------------------
Tue May 23 08:01:45 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170522:
  * Dyncom/VFP: Convert denormal outputs into 0 when the FTZ flag is enabled.
  * fixup! Dyncom/VFP: Convert denormal outputs into 0 when the FTZ flag is enabled.

-------------------------------------------------------------------
Mon May 22 07:44:19 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170521:
  * Dyncom/VFP: Perform flush-to-zero on the second operand of vsub before sending it to vadd.
  * Kernel: Use a Session object to keep track of the status of a Client/Server session pair.
  * Kernel: Remove a now unused enum and variable regarding a session's status.
  * Upgrade AppVeyor to Visual Studio 2017
  * Remove "Xamarin logspam" workaround
  * externals: Update catch to 1.9.4
  * Kernel/Sessions: Remove the ClientSession::Create function.

-------------------------------------------------------------------
Sun May 21 14:02:26 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170521:
  * swrasterizer: add missing tc0_w and fragment lighting attribute processing

-------------------------------------------------------------------
Sat May 20 12:09:33 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170519:
  * Services/UDS: Generate the UDS beacons when the beacon callback fires.
  * Services/UDS: Implement RecvBeaconBroadcastData.
  * Services/UDS: Use the new IPC helper functions.
  * use IPCHelper for PTM services

-------------------------------------------------------------------
Thu May 18 08:59:09 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170517:
  * pica: use correct register value for shader bool_uniforms

-------------------------------------------------------------------
Wed May 17 07:36:51 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170516:
  * pica: correct bit field length for some registers

-------------------------------------------------------------------
Mon May 15 10:50:45 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170514:
  * Memory: Add constants for the n3DS additional RAM
  * DSP: Create backing memory for entire DSP RAM
  * Kernel: Map special regions according to ExHeader
  * Pica: Set program code / swizzle data limit to 4096
  * Pica: Write shader registers in functions
  * Pica: Write GS registers

-------------------------------------------------------------------
Thu May 11 09:46:15 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170510:
  * Frontend: Prevent FileSystemWatcher from blocking UI thread

-------------------------------------------------------------------
Wed May 10 17:53:50 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170510:
  * ir: implement new 3ds HID via ir:rst
  * fixup!ir: implement new 3ds HID via ir:rst

-------------------------------------------------------------------
Tue May 09 07:57:20 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170508:
  * citra-qt: Remove disassembler widget
  * citra-qt: Remove callstack widget
  * Remove ability to load symbol maps
  * Remove unused symbols code
  * Dyncom: Tweak types and log formatting
  * Dyncom: Remove disassembler code
  * Revert "Remove `exceptions` parameter from `normaliseround` VFP functions"
  * Dyncom/VFP: Strip the VFP_NAN_FLAG sentinel value when setting vfp exceptions.

-------------------------------------------------------------------
Mon May 08 08:08:02 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170507:
  * citra-qt: game list search function fixed minor mistakes
  * Fixed some more typos
  * Don’t focus the search field if the game is empty

-------------------------------------------------------------------
Sat May 06 13:26:46 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170505:
  * pica: use correct coordinates for texture 2
  * pica: shader_dirty if texture2 coord changed
  * Create a random console_unique_id (#2668)

-------------------------------------------------------------------
Thu May 04 07:31:12 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170503:
  * qt: enable config for circle pad pro
  * ir: implement circle pad pro

-------------------------------------------------------------------
Mon May 01 14:28:44 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170429:
  * citra-qt: game list search function (#2673)

-------------------------------------------------------------------
Sat Apr 22 08:52:14 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170421:
  * rasterizer: implement combiner operation 7 (Dot3_RGBA)
  * gl_shader_gen: remove TODO about Lerp behaviour verification. The implementation is verified against hardware

-------------------------------------------------------------------
Thu Apr 20 15:11:35 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170419:
  * OpenGL: Move Attributes enum to a more appropriate file
  * OpenGL: Move PicaShaderConfig to gl_shader_gen.h
  * OpenGL: Pass Pica regs via parameter

-------------------------------------------------------------------
Tue Apr 18 08:29:28 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170418:
  * ldr_ro: use IPC helper
  * input_common/sdl: add support for binding button to axis

-------------------------------------------------------------------
Thu Apr 13 16:57:59 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170413:
  * dsp_dsp: Messages are modified by service before being sent to DSP

-------------------------------------------------------------------
Thu Apr 13 08:53:07 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170412:
  * Better looking status bar under Linux Ubuntu (#2662)

-------------------------------------------------------------------
Wed Apr 12 21:55:48 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170412:
  * Services/UDS: Initial support for hosting local-wlan networks.
  * Services/UDS: Store the entire NetworkInfo structure that was used to create the network.
  * Service/UDS: Schedule an event to broadcast the beacon frames every 102.4ms.
  * Services/UDS: Do not allow trying to start up a network that only the host can connect to.
  * Services/UDS: Signal the connection event when closing down the network.
  * Services/UDS: Use consistent spelling for WiFi and simplify the GetChannel function.
  * Services/UDS: Fixed a style mistake in GetChannel.

-------------------------------------------------------------------
Mon Apr 10 09:47:42 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170409:
  * Pica/Regs: Correct bit width for blend-equations

-------------------------------------------------------------------
Thu Apr 06 19:22:37 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170406:
  * refactor APT service to use the new IPC helpers
  * move push out of class body and add u8 u16 bool specializations
  * fix #2560 and other comments
  * IPCHelper Skip method + address comments for apt
  * Cast size_t to u32 for PushStaticBuffer usages
  * address more comments
  * hopefully fix clang-format issues with old version
  * shared_page: stub battery state

-------------------------------------------------------------------
Tue Apr 04 20:03:18 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170404:
  * citra-qt: Move config dialog code to its own directory

-------------------------------------------------------------------
Tue Apr 04 08:17:51 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170403:
  * error conversion fixes for soc_u

-------------------------------------------------------------------
Mon Apr 03 08:21:07 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170402:
  * Fix OutputDebugString syscall

-------------------------------------------------------------------
Thu Mar 30 18:02:46 UTC 2017 - pousaduarte@gmail.com

- Update to version 20170325:
  * Add custom layout settings.
  * Common: add ParamPackage
  * Input: add device and factory template
  * HID: use ButtonDevice
  * HID: use AnalogDevice
  * InputCommon: add Keyboard
  * InputCommon: add AnalogFromButton
  * InputCommon: add SDL joystick support
  * Qt: rework input configuration for new input system
  * Input: remove unused stuff & clean up
  * citra: update default ini with new input system
  * qt/config_input: don't connect for null button
  * loader: lower file name logging level
  * loader/ncch: less verbose log for loading game list. only log program ID when booting
  * file_util: lower logging level for harmless cases
  * file_sys: lower log level for setting host path
  * file_util: Log when using local user directory
  * citra-qt: release all buttons when render window focus is lost
  * citra-qt: remove dead code
  * apt: fix RequestBuilder parameters for Unwrap
  * Adding a linebreak to the README file.
  * Removed a linebreak from the README.
  * ptm: create SharedExtSave file before openning it
