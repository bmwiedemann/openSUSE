Index: casarest-1.7.0/synthesis/MeasurementComponents/WOnlyConvFunc.h
===================================================================
--- casarest-1.7.0.orig/synthesis/MeasurementComponents/WOnlyConvFunc.h
+++ casarest-1.7.0/synthesis/MeasurementComponents/WOnlyConvFunc.h
@@ -75,11 +75,11 @@ namespace casacore { //# NAMESPACE CASAC
     Bool makeAverageResponse(const VisBuffer& vb, 
 			     const ImageInterface<Complex>& image,
 			     ImageInterface<Float>& theavgPB,
-			     Bool reset=True) {};
+			     Bool reset=True) { return true; };
     Bool makeAverageResponse(const VisBuffer& vb, 
 			     const ImageInterface<Complex>& image,
 			     ImageInterface<Complex>& theavgPB,
-			     Bool reset=True) {};
+			     Bool reset=True) { return true; };
   protected:
     void setSupport(Array<Complex>& convFunc, CFStore& cfs);
 
Index: casarest-1.7.0/synthesis/MeasurementEquations/MultiTermMatrixCleaner.cc
===================================================================
--- casarest-1.7.0.orig/synthesis/MeasurementEquations/MultiTermMatrixCleaner.cc
+++ casarest-1.7.0/synthesis/MeasurementEquations/MultiTermMatrixCleaner.cc
@@ -421,6 +421,7 @@ Int MultiTermMatrixCleaner::verifyScaleS
 
     }
   os << "Scale sizes to be used for deconvolution : " << scaleSizes_p << LogIO::POST;
+  return 0;
 }
 
 /*************************************
@@ -1029,6 +1030,7 @@ Int MultiTermMatrixCleaner::updateRHS(In
 	     //	     residSub = residSub - smoothSub * loopgain * (matCoeffs_p[IND2(taylor2,maxscaleindex_p)])(globalmaxpos_p);
 	   }
     }
+    return 0;
 }/* end of updateRHS */
 
 
@@ -1239,6 +1241,7 @@ Int MultiTermMatrixCleaner::writeMatrixT
       csys.addCoordinate(tab2);
       PagedImage<Float> limage(themat.shape(), csys, imagename);
       limage.put(themat);
+  return 0;
 }
 
 
