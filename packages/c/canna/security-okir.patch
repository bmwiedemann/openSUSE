Index: Canna37p3/Imakefile
===================================================================
--- Canna37p3.orig/Imakefile
+++ Canna37p3/Imakefile
@@ -49,7 +49,9 @@ cannaconf.h: Canna.conf
 	@echo "#endif" >> junkjunk
 	@echo "/* for cannaserver */" >> junkjunk
 	@echo "#define DICHOME '$(DicDir)'" >> junkjunk
+	@echo "#define CHROOT_DICHOME '$(chrootDicDir)'" >> junkjunk
 	@echo "#define ERRDIR '$(ErrDir)'" >> junkjunk
+	@echo "#define CHROOT_ERRDIR '$(chrootErrDir)'" >> junkjunk
 	@echo "#define USE_INET_SOCKET" >> junkjunk
 	@echo "#define ACCESS_FILE '$(AccessFile)'" >> junkjunk
 	@echo "/* for lib/RKC */" >> junkjunk
@@ -77,7 +79,9 @@ cannaconf.h: Canna.conf
 	 echo "#endif"; \
 	 echo "/* for cannaserver */";  \
 	 echo "#define DICHOME \"$(DicDir)\"";  \
+	 echo "#define CHROOT_DICHOME \"$(chrootDicDir)\"";  \
 	 echo "#define ERRDIR \"$(ErrDir)\"";   \
+	 echo "#define CHROOT_ERRDIR \"$(chrootErrDir)\"";   \
 	 echo "#define USE_UNIX_SOCKET"; \
 	 echo "#define USE_INET_SOCKET"; \
 	 echo "#define IR_UNIX_DIR \"$(UnixSockDir)\""; \
Index: Canna37p3/lib/RK/dd.c
===================================================================
--- Canna37p3.orig/lib/RK/dd.c
+++ Canna37p3/lib/RK/dd.c
@@ -522,6 +522,12 @@ _RkReadDD(name)
   }
 #endif
    
+  /* prevent buffer overflow, and make sure attackers don't
+   * mess with .. in path names. 		--okir */
+  if (strlen(sx->ddhome) + strlen(name) + 2 >= RK_PATH_BMAX
+   || strchr(name, '.'))
+    goto return_dd;
+
   /* create dd even if there is no directory or dics.dir file */
   (void)strcpy(path, sx->ddhome);
   (void)strcat(path, "/");
Index: Canna37p3/misc/Imakefile
===================================================================
--- Canna37p3.orig/misc/Imakefile
+++ Canna37p3/misc/Imakefile
@@ -41,6 +41,7 @@ rc.canna: rc.canna-dist $(CANNAROOT)/Can
 	-e 's%@(UnixSockDir)%$(UnixSockDir)%g'		\@@\
 	-e 's%@(UnixSockName)%$(UnixSockName)%g'	\@@\
 	-e 's%@(cannaOwner)%$(cannaOwner)%g'		\@@\
+	-e 's%@(chrootErrDir)%$(chrootErrDir)%g'	\@@\
 	-e 's%@(ErrDir)%$(ErrDir)%g' rc.canna-dist > $@
 
 MakeSubdirs($(SUBDIRS))
Index: Canna37p3/server/IR.h
===================================================================
--- Canna37p3.orig/server/IR.h
+++ Canna37p3/server/IR.h
@@ -25,11 +25,11 @@
 
 /* 自動判別支援コメント: これはEUC-JPだぞ。幅という字があれば大丈夫。 */
 
+#include <netinet/in.h>
 #include "cannaconf.h"
 #include "ccompat.h"
 #include <sys/types.h>
 
-
 #ifdef HAVE_TIME_H
 # include <time.h>
 #endif
Index: Canna37p3/server/comm.c
===================================================================
--- Canna37p3.orig/server/comm.c
+++ Canna37p3/server/comm.c
@@ -555,7 +555,7 @@ struct sockaddr_un *unaddr;
   unaddr->sun_family = AF_UNIX;
   oldUmask = umask (0);
   
-  if ( mkdir( IR_UNIX_DIR, 0777 ) == -1 &&
+  if ( mkdir( IR_UNIX_DIR, 0755 ) == -1 &&
       errno != EEXIST ) {
     ir_debug( Dmsg(5, "Can't open %s error No. %d\n",IR_UNIX_DIR, errno));
   }
Index: Canna37p3/server/main.c
===================================================================
--- Canna37p3.orig/server/main.c
+++ Canna37p3/server/main.c
@@ -43,7 +43,6 @@ char *argv[] ;
   SockHolder *sock_holder = NULL;
   int status;
 
-  EarlyInit(argc, argv);
   if (!(global_user_table = UserTable_new())
       || !(global_event_mgr = EventMgr_new()))
     goto genfail;
@@ -52,6 +51,12 @@ char *argv[] ;
     goto fail;
   if (SockHolder_tie(sock_holder, global_event_mgr))
     goto genfail;
+  
+    /* XXX: Create sockets first because we want to create the
+     * unix socket in the real /tmp directory, not somewhere in
+     * the canna chroot jail --okir */
+	
+  EarlyInit(argc, argv);
 
   /* サーバを子プロセス(デーモン)として起動する */
   parentid = BecomeDaemon();
Index: Canna37p3/server/misc.c
===================================================================
--- Canna37p3.orig/server/misc.c
+++ Canna37p3/server/misc.c
@@ -31,26 +31,14 @@ static char rcs_id[]="@(#) $Id: misc.c,v
 # include <syslog.h>
 #endif
 
-#ifdef USE_VARARGS
-#ifdef __STDC__
 #include <stdarg.h>
-#else
-#include <varargs.h>
-#endif
-#endif
 
 #include <fcntl.h>
 #include <signal.h>
 #include <pwd.h>
+#include <unistd.h>
 #include <sys/ioctl.h>
-
-#ifndef DICHOME
-#define DICHOME     "/usr/lib/canna/dic"
-#endif
-
-#ifndef ERRDIR
-#define ERRDIR      "/usr/spool/canna"
-#endif
+#include <net/if.h>
 
 #define ERRFILE     "CANNA"
 #define ERRFILE2    "msgs"
@@ -72,10 +60,11 @@ static int DebugMode = 0;
 static int LogLevel = 0;
 #endif
 static int Syslog = 0; /* syslog を通すかどうかのフラグ */
+static int HaveTTY = 1;
 
 int PortNumberPlus = 0;
 int MMountFlag = 0; /* メモリに辞書をロードするかしないかのフラグ */
-static char Name[64];
+static char *ProgramName;
 
 static char *userID=NULL; /* canna server's user id */
 
@@ -124,73 +113,96 @@ EarlyInit ( argc, argv )
 int argc;
 char *argv[];	
 {
-    char *ddname = (char *)NULL;
+    char *sp, *ddname = (char *)NULL;
+    char *jailuser = NULL, *jailroot = NULL;
     char buf[ MAXDATA ];
     int     i;
     int     context;
     struct  passwd *pwent;
 
-    strcpy( Name, argv[ 0 ] );
-
-    for( i = 1; i < argc; i++ ) {
-	if( argv[i][0] == '/' ) {
-	    ddname = malloc(strlen(argv[i]) + 1);
-	    if( ddname )
-		strcpy( (char *)ddname, argv[ i ] );
-	}
+    /* Sorry, usually my patches are a lot less intrusive, but this
+     * code was such a mess I had to take the axe to it. --okir */
+    ProgramName = argv[0];
+    if ((sp = strrchr(ProgramName, '/')) != 0)
+    	ProgramName = sp + 1;
 
-	if( !strcmp( argv[i], "-p") ) {
-	  if (++i < argc) {
-	    PortNumberPlus = atoi( argv[i] ) ;
-	    if (PortNumberPlus < 0 || PortNumberPlus >= 100) {
-		fprintf(stderr, "valid port number range is 0 <= num < 100\n");
-		exit(2);
-	    }
-	  }
-	  else {
-	    fprintf(stderr, "%s\n", USAGE);
-	    exit(2);
-	    /* NOTREACHED */
-	  }
-	}
-	else if( !strcmp( argv[i], "-u")) {
-	  if (++i < argc) {
-	    userID = argv[i];
-	  }
-	  else {
-	    fprintf(stderr, "%s\n", USAGE);
-	    exit(2);
-	    /* NOTREACHED */
-	  }
-	}
+#ifdef DEBUG
+    DebugMode = 0;
+    ServerLogFp = NULL;
+#endif
+    /* Changed the option syntax a little
+     * 	-m		unchanged
+     * 	-p num		unchanged (listen on alternative port)
+     * 	-s		was: -syslog (enable syslog logging)
+     *  -i              was: -inet (enable use of inet socket)
+     *  -6              was: -inet6 
+     *  -d		unchanged (enable debugging)
+     *  -l level	unchanged (set log level)
+     *  -u user		changed: jail user instead of userID.
+     *  -r dir		new (jail directory)
+     */
+    while ((i = getopt(argc, argv, "dl:mp:r:su:i6")) != -1) {
+    	switch (i) {
+#ifdef DEBUG
+	case 'd':
+	    DebugMode = 1;
+	    LogLevel = 5;
+	    break;
+
+	case 'l':
+	    /* ログファイル作成 */
+	    LogLevel = atoi(optarg);
+	    if (LogLevel <= 0)
+	    	LogLevel = 1 ;
+	    if ((ServerLogFp = fopen( LOGFILE, "w" ) ) == NULL)
+		perror(LOGFILE);
+	    break;
+#endif
+	case 'p':
+	    PortNumberPlus = atoi(optarg);
+	    break;
+	case 'r':
+	    jailroot = optarg;
+	    break;
+	case 's':
+            Syslog = 1;
+	    break;
+	case 'u':
+            jailuser = optarg;
+	    break;
 #ifdef USE_INET_SOCKET
-	else if( !strcmp( argv[i], "-inet")) {
-	  UseInet = 1;
-	}
+	case 'i':
+	    UseInet = 1;
+	    break;
 #ifdef INET6
-	else if( !strcmp( argv[i], "-inet6") ) {
+	case '6':
 	  UseInet6 = 1;
-	}
+	  break;
 #endif /* INET6 */
 #endif
 #ifdef RK_MMOUNT
-	else if( !strcmp( argv[i], "-m") ) {
-	  MMountFlag = RK_MMOUNT;
-	}
-#endif
-#ifdef HAVE_SYSLOG
- 	else if (!strcmp( argv[i], "-syslog")) {
-	  Syslog = 1;
-	}
-    }
-
-    if (Syslog) {
-      openlog("cannaserver", LOG_PID, LOG_DAEMON);
-      openlog_done = 1;
-    } /* -syslog だったら、ログファイルを初期化する */
-#else
+	case 'm':
+	    MMountFlag = RK_MMOUNT;
+	    break;
+#endif
+	default:
+            fprintf(stderr, "%s\n", USAGE);
+	    exit(1);
+	}
+    }
+			
+    if (optind == argc - 1) {
+    	/* use dictionary home supplied on command line */
+	ddname = argv[optind];
+    } else if (optind == argc) {
+    	/* use default dictionary home */
+	ddname = CHROOT_DICHOME;
+    } else {
+    	fprintf(stderr, "%s\n", USAGE);
+	exit(2);
     }
 
+#ifdef __EMX__
 /* TCP/IP スタックが利用可能でない時は終了する */
     if (gethostname( buf, MAXDATA ) != 0) {
 	fprintf(stderr,"TCP/IP stack is not working\n") ;
@@ -198,75 +210,21 @@ char *argv[];
     }
 #endif
 
-    if( !ddname ) {
-	ddname = malloc(strlen(DICHOME) + 1);
-	if( !ddname )
-	    FatalError("cannaserver:Initialize failed\n");
-	strcpy( (char *)ddname, DICHOME );
-    }
-
-    if (userID != NULL) {
-        pwent = getpwnam(userID);
-	if (pwent) {
-	    if(setgid(pwent->pw_gid)) {
-	        FatalError("cannaserver:couldn't set groupid to canna user's group\n");	  
-	    }
-	    if (initgroups(userID, pwent->pw_gid)) {
-	        FatalError("cannserver: couldn't init supplementary groups\n");
-	    }
-	    if (setuid(pwent->pw_uid)) {
-	        FatalError("cannaserver: couldn't set userid\n");
-	    }
-	} else if (userID != NULL) {
-	    FatalError("cannaserver: -u flag specified, but canna not run as root\n");
-	}
-    }
-
 #ifdef DEBUG
-    DebugMode = 0 ;
-    ServerLogFp = stderr ;
-		
-    for( i = 1; i < argc; i++ ) {
-	if( !strcmp( argv[ i ], "-d" )) {
-	    DebugMode = 1 ;
-	    LogLevel = 5 ;
-	}
-	
-	if( !strcmp( argv[ i ], "-l" ) ) {
-	  if (++i < argc) {
-	    LogLevel = atoi(argv[ i ]);
-	    if( LogLevel <= 0 )
-		LogLevel = 1 ;
-	  }
-	  else {
-	    Usage();
-	    /* NOTREACHED */
-	  }
-	}
-    }
-    
-    if (LogLevel && !DebugMode) {
-	/* ログファイル作成 */
-	if( (Fp = fopen( LOGFILE, "w" ) ) != NULL ){
-	    ServerLogFp = Fp ;
-	} else {
-	    LogLevel = 0;
-	    perror("Can't Create Log File!!\n");
-	}
-    }
-
+    /* Default debug output to stderr */
+    if (ServerLogFp == NULL)
+    	ServerLogFp = stderr;
 #endif /* DEBUG */
-
+#ifndef __EMX__
+    /* -syslog だったら、ログファイルを初期化する */
+    if (Syslog)
+	openlog("cannaserver", LOG_PID | LOG_NDELAY, LOG_DAEMON);
+#endif
+	
     getserver_version() ;
 
    ir_debug( Dmsg(5, "辞書ホームディレクトリィ = %s\n", ddname ); )
 
-    if ((context = RkwInitialize( (char *)ddname )) < 0)
-	FatalError("cannaserver:Initialize failed\n") ;
-    rkw_initialize_done = 1;
-    free( (char *)ddname ) ;
-    RkwCloseContext( context ) ;
-
     if (gethostname( buf, MAXDATA ) == 0) {
       MyName = malloc(strlen(buf) + 1);
       if (MyName) {
@@ -276,9 +234,48 @@ char *argv[];
 
    ir_debug( Dmsg(5, "My name is %s\n", MyName ); )
 
+    if (CreateAccessControlList() < 0) {
+    	PrintMsg(" ** SECURITY PROBLEM **\n");
+	PrintMsg(" No Access control list for Canna, terminating.\n");
+	exit(2);
+    }
+   
     bzero(PreMountTabl, MAX_PREMOUNTS * sizeof(unsigned char *));
+    
+    if (jailuser) {
+    	struct passwd	*pw;
+
+	if ((pw = getpwnam(jailuser)) == NULL) {
+	    PrintMsg("%s: %m", jailuser);
+	    exit(2);
+	}
+	if (pw->pw_uid == 0) {
+		PrintMsg("You cannot use %s as the jail user", jailuser);
+		exit(2);
+	}
+	if (jailroot && (chroot(jailroot) < 0 || chdir("/") < 0)) {
+		PrintMsg("%s: chroot failed: %m", jailroot);
+		exit(2);
+	}
+	if (setgid(pw->pw_gid) < 0
+	    || setgroups(NULL, 0) < 0
+	    || setuid(pw->pw_uid) < 0) {
+		PrintMsg("failed to drop privileges: %m");
+		exit(2);
+	}
+	/* Make sure we close any file descriptors to e.g. the shadow file */
+	endpwent();
+    } else {
+	    if (jailroot) {
+		    PrintMsg("You cannot specify a jail directory without a jail user");
+		    exit(2);
+	    }
+    }
+
+    if ((context = RkwInitialize( (char *)ddname )) < 0)
+	FatalError("cannaserver:Initialize failed\n") ;
+    RkwCloseContext( context ) ;
 
-    CreateAccessControlList() ;
 }
 
 static void
@@ -341,10 +338,9 @@ CloseServer()
 }
 /* 初期化に失敗した場合に呼ぶ。EventMgr_run()まで来たら呼ばないこと。 */
 static void
-FatalError(f)
-    const char *f;
+FatalError(const char *f)
 {
-    fprintf(stderr,"%s\n", f);
+    PrintMsg("%s\n", f);
     CloseServer();
     exit(2);
     /*NOTREACHED*/
@@ -805,6 +801,16 @@ CreateAccessControlList()
 
     fclose( fp ) ;
     return 0;
+
+bail:
+    if (current) {
+        if (current->hostname)
+	    free(current->hostname);
+        free(current);
+    }
+    fclose( fp ) ;
+    FreeAccessControlList() ;
+    return( -1 ) ;
 }
 
 static void
@@ -986,15 +992,19 @@ DetachTTY()
 #endif 
     /* 標準エラー出力をエラーファイルに切り替えて、標準入出力をクローズする */
 
+    HaveTTY = 0;
     if(!Syslog) {    
-      sprintf(errfile,"%s/%s%d%s", ERRDIR, ERRFILE, PortNumberPlus, ERRFILE2);
+      sprintf(errfile,"%s/%s%d%s",
+      		CHROOT_ERRDIR, ERRFILE, PortNumberPlus, ERRFILE2);
     
       if((errfd = open(errfile, O_CREAT | O_RDWR | O_TRUNC, 0644)) < 0) {
-	(void)fprintf(stderr, "Warning: %s: %s open faild\n", Name, errfile);
+	(void)fprintf(stderr, "Warning: %s: %s open faild\n",
+			ProgramName, errfile);
 	(void)perror("");
       } else {
 	if(dup2( errfd, fileno(stderr)) < 0) {
-	  (void)fprintf(stderr, "Warning: %s: %s dup2 faild\n", Name, errfile);
+	  (void)fprintf(stderr, "Warning: %s: %s dup2 faild\n",
+	  		ProgramName, errfile);
 	  (void)perror("");
 	  close(fileno(stderr));
 	}
