--- Canna37p3/canuum/canna.c
+++ Canna37p3/canuum/canna.c
@@ -55,6 +55,11 @@
 #include "sdefine.h"
 #include "sheader.h"
 #include "wnn_config.h"
+#include <string.h>
+#include <stdio.h>
+#include <unistd.h>
+#include <sys/socket.h>
+
 #if defined(__STDC__) || defined(__cplusplus)
 # define pro(x) x
 #else
--- Canna37p3/canuum/printf.c
+++ Canna37p3/canuum/printf.c
@@ -34,6 +34,9 @@
 #include "commonhd.h"
 #include "sdefine.h"
 #include "sheader.h"
+#include <string.h>
+#include <unistd.h>
+#include <sys/socket.h>
 
 extern int cursor_colum;
 
--- Canna37p3/canuum/termio.c
+++ Canna37p3/canuum/termio.c
@@ -42,6 +42,9 @@
 #include "sdefine.h"
 #include "sheader.h"
 #include "wnn_os.h"
+#include <string.h>
+#include <unistd.h>
+#include <sys/socket.h>
 
 #ifdef TERMINFO
 #include <stdio.h>
--- Canna37p3/lib/RK/dic.c
+++ Canna37p3/lib/RK/dic.c
@@ -777,7 +777,7 @@
 int mode;
 {
   struct RkContext	*cx = RkGetContext(cx_num);
-  struct DD		*dd, *userDDP[2];
+  struct DD		*dd=NULL, *userDDP[2];
   struct DM		*dm;
   int res;
   unsigned dirmode;
--- Canna37p3/lib/RK/permdic.c
+++ Canna37p3/lib/RK/permdic.c
@@ -710,7 +710,7 @@
 	  offset = thisRead->offset;
 	  if (fnum >= 0 && fnum < nk && 0 < thisRead->nk && 
 	      thisRead->nk <= ylen && thisRead->nk <= RK_KEY_WMAX)  {
-	    int	   ecount, cval, i, dn = -1, ndel = 0;
+	    int	   ecount=0, cval=0, i, dn = -1, ndel = 0;
 	  
 	    bitSize = _RkCalcLog2(nk + 1) + 1;
 	    _RkUnpackBits(permutation, qm->dm_qbits, offset, bitSize, nk);
--- Canna37p3/lib/canna/RKroma.c
+++ Canna37p3/lib/canna/RKroma.c
@@ -26,6 +26,10 @@
 
 /* LINTLIBRARY */
 #include "canna.h"
+#include <string.h>
+#include <stdio.h>
+#include <unistd.h>
+#include <sys/socket.h>
 
 #include <fcntl.h>
 
--- Canna37p3/lib/canna/parse.c
+++ Canna37p3/lib/canna/parse.c
@@ -28,6 +28,9 @@
 
 #include <stdio.h>
 #include <fcntl.h>
+#include <string.h>
+#include <unistd.h>
+#include <sys/socket.h>
 
 /*********************************************************************
  *                      wchar_t replace begin                        *
