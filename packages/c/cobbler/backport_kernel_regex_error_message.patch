Index: cobbler/items/distro.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cobbler/items/distro.py b/cobbler/items/distro.py
--- a/cobbler/items/distro.py	(revision a211328ef9d13e37b89665aefad97071ada682fb)
+++ b/cobbler/items/distro.py	(revision de8bf224cef0040c3d26dd4be009fe2d87434223)
@@ -164,7 +164,10 @@
         if not isinstance(kernel, str):
             raise TypeError("kernel was not of type str")
         if not utils.find_kernel(kernel):
-            raise ValueError("kernel not found: %s" % kernel)
+            raise ValueError(
+                "kernel not found or it does not match with allowed kernel filename pattern [%s]: %s."
+                % (utils._re_kernel.pattern, kernel)
+            )
         self._kernel = kernel
 
     @property
Index: cobbler/utils.py
===================================================================
diff --git a/cobbler/utils.py b/cobbler/utils.py
--- a/cobbler/utils.py	(revision a211328ef9d13e37b89665aefad97071ada682fb)
+++ b/cobbler/utils.py	(revision de8bf224cef0040c3d26dd4be009fe2d87434223)
@@ -69,8 +69,8 @@
 MODULE_CACHE = {}
 SIGNATURE_CACHE = {}
 
-_re_kernel = re.compile(r'(vmlinu[xz]|(kernel|linux(\.img)?)|pxeboot\.n12|wimboot)')
-_re_initrd = re.compile(r'(initrd(.*)\.img|ramdisk\.image\.gz|boot\.sdi)')
+_re_kernel = re.compile(r'(vmlinu[xz]|(kernel|linux(\.img)?)|pxeboot\.n12|wimboot|mboot\.c32|.+\.kernel)')
+_re_initrd = re.compile(r'(initrd(.*)\.img|ramdisk\.image\.gz|boot\.sdi|imgpayld\.tgz)')
 
 
 class DHCP(enum.Enum):

