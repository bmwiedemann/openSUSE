<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>e7526201614b94aad719fc9aa42a8468</srcmd5>
    <version>8.9.1</version>
    <time>1575106613</time>
    <user>dimstar_suse</user>
    <comment>- Initial release based on version 8.9.1.</comment>
    <requestid>747961</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>4970b89ecdc25ff16ef7bdcf0b38046f</srcmd5>
    <version>8.11.0</version>
    <time>1581801976</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 8.11.0.
  * Ltac2, a new tactic language for writing more robust larger
    scale tactics, with built-in support for datatypes and the
    multi-goal tactic monad.
  * Primitive floats are integrated in terms and follow the binary64
    format of the IEEE 754 standard, as specified in the
    Coq.Float.Floats library.
  * Many other cleanups and improvements have been performed and
    are further described in the changelog.
  * Special note on compatibility: Fixed bugs of Export and Import
    that can have a significant impact on user developments.
- Drop unneeded empty *.vos files.
- Update to version 8.10.2.
  * Fixed a critical bug of template polymorphism and nonlinear
    universes;
  * Fixed a few anomalies;
  * Fixed an 8.10 regression related to the printing of coercions
    associated to notations;
  * Fixed uneven dimensions of CoqIDE panels when window has been
    resized;
  * Fixed queries in CoqIDE.
- Update to version 8.10.0.
  * some quality-of-life bug fixes;
  * a critical bug fix related to template polymorphism;
  * native 63-bit machine integers;
  * a new sort of definitionally proof-irrelevant propositions: SProp;
  * private universes for opaque polymorphic constants;
  * string notations and numeral notations;
  * a new simplex-based proof engine for the tactics lia, nia, lra
    and nra;
  * new introduction patterns for SSReflect;
  * a tactic to rewrite under binders: under;
  * easy input of non-ASCII symbols in CoqIDE, which now uses GTK3.
- Update to version 8.10.1.
  * Fix proof of False when using SProp
  * Fix an anomaly when unsolved evar in Add Ring
  * Fix Ltac regression in binding free names in uconstr
  * Fix handling of unicode input before space
  * Fix custom extraction of inductives to JSON
- Update version requirements.</comment>
    <requestid>774603</requestid>
  </revision>
  <revision rev="3" vrev="2">
    <srcmd5>d011401c006dfcf8d277daedb0535ef2</srcmd5>
    <version>8.11.0</version>
    <time>1585602168</time>
    <user>dimstar_suse</user>
    <comment>- The num library is required for OCaml 4.06 or later.
- Add ocaml-410-build.patch: fix build with OCaml 4.10.</comment>
    <requestid>789593</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>3c0abd8b1c6162732c364a49f92b776b</srcmd5>
    <version>8.11.1</version>
    <time>1586467036</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 8.11.1, with upstream support for OCaml 4.10.
  * Allow more inductive types in Unset Positivity Checking mode.
  * Fixed bugs in dealing with precedence of notations in custom
    entries.
  * In primitive floats, print a warning when parsing a decimal
    value that is not exactly a binary64 floating-point number.
    For instance, parsing 0.1 will print a warning whereas parsing
    0.5 won't.
  * Fixed an issue in CoqIDE about compiling file paths containing
    spaces.
  * Fixed an issue where Extraction Implicit on the constructor of
    a record was leading to an anomaly.
- Remove now obsolete ocaml-410-build.patch.</comment>
    <requestid>792575</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>851a4d1c448d7a9a604e1cfa326c9d0e</srcmd5>
    <version>8.11.2</version>
    <time>1591558669</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 8.11.2.
  * Fixed a kernel issue where using Require inside a section
    caused an anomaly when closing the section.
  * Fixed normalization in conclusion of custom induction scheme.
  * Fixed a loss of location of some tactic errors.
  * Ignore -native-compiler option when built without native
    compute support.
  * Fixed a segfault issue with CoqIDE completion.
  * Highlighting style is now consistently applied to all three
    buffers of CoqIDE.</comment>
    <requestid>812064</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>d05bfbd1f9365394d139810cb222ddcf</srcmd5>
    <version>8.12.0</version>
    <time>1596703364</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 8.12.0.
  * New binder notation for non-maximal implicit arguments using []
    allowing to set and see the implicit status of arguments
    immediately.
  * New notation Inductive &quot;I A | x : s := ...&quot; to distinguish the
    uniform from the non-uniform parameters in inductive
    definitions.
  * More robust and expressive treatment of implicit inductive
    parameters in inductive declarations.
  * Improvements in the treatment of implicit arguments and
    partially applied constants in notations, parsing of
    hexadecimal number notation and better handling of scopes and
    coercions for printing.
  * A correct and efficient coercion coherence checking algorithm,
    avoiding spurious or duplicate warnings.
  * An improved Search command which accepts complex queries. This
    takes precedence over the now deprecated ssreflect search.
  * Many additions and improvements of the standard library.
  * Improvements to the reference manual include a more logical
    organization of chapters along with updated syntax descriptions
    that match Coq's grammar in most but not all chapters.</comment>
    <requestid>824553</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>a78dc069cb6d07fa897cfe4a5154c2c1</srcmd5>
    <version>8.12.1</version>
    <time>1607113673</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 8.12.1. This contains mostly bug fixes:
  * Polymorphic side-effects inside monomorphic definitions were
    incorrectly handled as not inlined. This allowed deriving an
    inconsistency.
  * Regression in error reporting after SSReflect's case tactic.
    A generic error message &quot;Could not fill dependent hole in
    apply&quot; was reported for any error following case or elim.
  * Several bugs with Search.
  * The details environment introduced in coqdoc in Coq 8.12 can
    now be used as advertised in the reference manual.
  * View menu &quot;Display parentheses&quot; introduced in CoqIDE in
    Coq 8.12 now works correctly.
- Use memoryperjob constraint instead of %limit_build macro.</comment>
    <requestid>849178</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>bdce8e9d3980eb85181f0e3f4563615a</srcmd5>
    <version>8.12.2</version>
    <time>1607965773</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 8.12.2.</comment>
    <requestid>855595</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>7b63639f8fc1d894b993a24a97d36dc3</srcmd5>
    <version>8.13.0</version>
    <time>1612781261</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>870152</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>91d5036134b0f050c301b5b3b7599e58</srcmd5>
    <version>8.13.1</version>
    <time>1614373194</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 8.13.1.
  * Fix arities of VM opcodes for some floating-point operations
    that could cause memory corruption.</comment>
    <requestid>875244</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>79ab1d552acc926cc90fbfd4790e8b94</srcmd5>
    <version>8.13.2</version>
    <time>1619973368</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 8.13.2.
  * Fix crash when using vm_compute on an irreducible PArray.set.
  * Fix crash when loading .vo files containing a vm_compute
    normalized primitive array.
  * Fix Ltac2.Array.init computational complexity.</comment>
    <requestid>889764</requestid>
  </revision>
  <revision rev="12" vrev="2">
    <srcmd5>547c6ade113a4a7d659ba8ab63341521</srcmd5>
    <version>8.13.2</version>
    <time>1630787726</time>
    <user>dimstar_suse</user>
    <comment>- Add documentation package based on github.com/coq/doc until we
  can build the documentation directly in OBS.</comment>
    <requestid>916845</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>f1d85d08c795b0ce16cb1083b9fa8484</srcmd5>
    <version>8.14.0</version>
    <time>1634853325</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 8.14.0.
  * The internal representation of match has changed to a more
    space-efficient and cleaner structure, allowing the fix of a
    completeness issue with cumulative inductive types in the type-
    checker. The internal representation is now closer to the user-
    level view of match, where the argument context of branches and
    the inductive binders in and as do not carry type annotations.
  * A new coqnative binary performs separate native compilation of
    libraries, starting from a .vo file. It is supported by
    coq_makefile.
  * Improvements to typeclasses and canonical structure resolution,
    allowing more terms to be considered as classes or keys.
  * More control over notations declarations and support for
    primitive types in string and number notations.
  * Removal of deprecated tactics, notably omega, which has been
    replaced by a greatly improved lia, along with many bug fixes.
  * New Ltac2 APIs for interaction with Ltac1, manipulation of
    inductive types and printing.
  * Many changes and additions to the standard library in the
    numbers, vectors and lists libraries. A new signed primitive
    integers library Sint63 is available in addition to the
    unsigned Uint63 library.
  * For more details, see refman/changes.html in coq-doc.</comment>
    <requestid>926632</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>ad21e9ccabba21f5475b6f9a9e074c2b</srcmd5>
    <version>8.14.1</version>
    <time>1639424669</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 8.14.1.
  * Fixed the implementation of persistent arrays used by the VM
    and native compute so that it uses a uniform representation.
    Previously, storing primitive floats inside primitive arrays
    could cause memory corruption.
  * Fixed missing registration of universe constraints in Module
    Type elaboration.
  * Made `abstract` more robust with respect to Ltac `constr`
    bindings containing existential variables.
  * Correct support of trailing `let` by tactic `specialize`.
  * Fixed an anomaly with `Extraction Conservative Types` when
    extracting pattern-matching on singleton types.
  * Regular error instead of an anomaly when calling `Separate
    Extraction` in a module.</comment>
    <requestid>940115</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>65ca3bad456f22a8df5e4c76c6e60c8e</srcmd5>
    <version>8.15.0</version>
    <time>1642371485</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 8.15.0.
  * The `apply with` tactic no longer renames arguments unless
    the compatibility flag `Apply With Renaming` is set.
  * Improvements to the `auto` tactic family, fixing `Hint Unfold`
    behavior, and generalizing the use of discrimination nets.
  * The `typeclasses eauto` tactic has a new `best_effort` option
    allowing it to return partial solutions to a proof search
    problem, depending on the mode declarations associated to each
    constraint. This mode is used by typeclass resolution during
    type inference to provide more precise error messages.
  * Many commands and options were deprecated or removed after
    deprecation and more consistently support locality attributes.
  * The `Import` command is extended with `import_categories` to
    select the components of a module to import or not, including
    features such as hints, coercions, and notations.
  * A visual Ltac debugger is now available in CoqIDE.
  * For more details, see refman/changes.html in coq-doc.</comment>
    <requestid>946708</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>2f9535ff1e45179aec99d572bc789a02</srcmd5>
    <version>8.15.1</version>
    <time>1648241674</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 8.15.1.
  * Fixes an inconsistency when using module subtyping with
    inductive types.
  * Speeds up CoqIDE on large files.
  * Fixes a bug where `coqc -vok` was not creating a .vok file.
  * Fixes a regression in `cbn`.
  * Improves usability of schemes with `elim foo using scheme with
    (P0 := ...)` (the `P0` name was not accessible in 8.15.0).
</comment>
    <requestid>964734</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>381730229c99f5db698869904bdc74d5</srcmd5>
    <version>8.15.2</version>
    <time>1654199659</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 8.15.2.
  * Tactics `intuition` and `dintuition` use
    `Tauto.intuition_solver` (defined as `auto with *`) instead of
    hardcoding `auto with *`. This makes it possible to change the
    default solver with `Ltac Tauto.intuition_solver ::= ...`.
  * Fixed an uncaught exception `UnableToUnify` with
    bidirectionality hints.
  * Fixed multiple CoqIDE bugs.
  * Fixed an incorrect implementation of `SFClassify`, allowing for
    a proof of `False` since 8.11.0, due to Axioms present in
    `Float.Axioms`.
- Rename coq.desktop to fr.inria.coq.coqide.desktop as the
  documentation suggests, add an accompanying metainfo file.
- Declare documentation as noarch.
</comment>
    <requestid>980409</requestid>
  </revision>
</revisionlist>
