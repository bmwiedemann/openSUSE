<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>f5175c03f90f9e958939d0dd32f7de51</srcmd5>
    <version>1.2.0</version>
    <time>1566242827</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>720967</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>e348f479d52d2df5eed46a2be77306ab</srcmd5>
    <version>1.2.1</version>
    <time>1566291604</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.2.1:
  * Detect kitty and mlterm virtual terminals and apply optimal
    defaults accordingly
  * Make Automake build more strict and fix a few compatibility nits
  * Fix #30 - Failed to build on hurd-i386
  * Fix crash on certain broken GIFs</comment>
    <requestid>724705</requestid>
  </revision>
  <revision rev="3" vrev="2">
    <srcmd5>7d414cef90f0a7eb27d184ba08abd30b</srcmd5>
    <version>1.2.1</version>
    <time>1566665391</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>725785</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>b58856688ef7a8cb80a12af82c13b91e</srcmd5>
    <version>1.2.2</version>
    <time>1583311717</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.2.2:
 * Fix #34 Cannot compile example</comment>
    <requestid>781387</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>30131f06b16f3b2cc281f8987ba725ce</srcmd5>
    <version>1.4.0</version>
    <time>1585842249</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.4.0:
  * Added sixel graphics support. Chafa will automatically produce sixels
    if the connected terminal supports it. It can also be forced using the
    new -f or --format flag. This is a new implementation written from the
    ground up to maximize throughput.
  * Added the --glyph-file option, which loads glyph-symbol mappings from
    any file format supported by FreeType (TTF, PCF, etc). This allows for
    custom font support and improved symbol selection.
  * Added the --speed option specifying animation speed. It accepts a
    unitless multiplier, a specific number of frames per second, or max
    for maximum throughput.
  * There are now two ways to assign colors to symbol cells. Formerly,
    this was done based on the average color of the covered area. The new
    default is to use the median color, which produces sharper edges,
    but is slightly more prone to high-frequency noise. The new option
    --color-extractor selects the method to employ.
  * When displaying multiple files, the default delay between files has
    been changed from three seconds to zero. Animations will still play
    through once. This can be overridden on the chafa command line with -d
    or --duration.
  * Minor tweaks to built-in symbols.
  Performance improvements:
  * Halved pixel storage requirements from 64 bits to 32 bits,
    resulting in significant memory savings.
  * Now builds with -ffast-math, yielding a big speedup for DIN99d.</comment>
    <requestid>790804</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>32c4e504815f180afb1d7f8601fcfbe2</srcmd5>
    <version>1.4.1</version>
    <time>1586775285</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.4.1:
  * Added configure option --disable-rpath. This allows packagers to
    prevent the hard-coded library search path from being embedded in
    the chafa command-line tool (Mo Zhou, #39).
  * Added defaults for the yaft terminal.
  Bug fixes:
  * #40 - Fails to build on hurd-i386 + other i386 (reported by Mo
    Zhou).
  * [unfiled] - Rare failed assert with mostly transparent sixel image
      (reported by Reddit user spryfigure).
  * [unfiled] - Minor typo in function docstring.</comment>
    <requestid>793444</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>e9c0e2fce3935db39b7190fec56c76c9</srcmd5>
    <version>1.6.0</version>
    <time>1610736404</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.6.0:
  * Added support for fullwidth symbols that take up two character
    cells. These are common in East Asian scripts. Single-cell and
    double-cell symbols can be mixed, and -f symbols mode will use
    both if possible.
  * New symbol tags: alpha, digit, alnum, narrow, wide, ambiguous,
    ugly, bad. &quot;Ambiguous&quot; symbols have uncertain widths and may
    render poorly in some terminals. &quot;Ugly&quot; denotes symbols that
    are unsuitable for Chafa's cell-based graphics (multicolor
    emoji, ideographic descriptors, etc). &quot;Bad&quot; is a superset of
    these two categories. Bad symbols are always excluded unless
    explicitly enabled with e.g. CHAFA_SYMBOL_TAG_BAD (--symbols
    +bad in the frontend).
  * The font loader (--glyph-file option) now does a better job
    with proportional fonts.
  * Added options for controlling lossless optimization of output.
    Currently, attribute reuse and character repetition (REP
    sequence) are implemented.
  * Added -O option to the frontend. This controls the optimization
    level.
  * Added a simple abstraction layer for terminal control sequences
    (ChafaTermInfo and ChafaTermDb). This allows for improved
    terminal support.
  * FbTerm is now supported with TERM=fbterm in the environment.
  * Bug fixes:
    - #43 Fix signal handler.
    - [unfiled] Crash when invalid font paths were passed on command line.
    - [unfiled] Small typo in fontgen's READM).
    - [unfiled] Bad contrast adjustment in images with transparency.</comment>
    <requestid>863252</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>b7d48372ae2e1f1e9aedb6d5cde97a6d</srcmd5>
    <version>1.6.1</version>
    <time>1623098701</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.6.1:
  * Add NOCONFIGURE variable to autogen.sh to skip configure
  Bug fixes:
  * #50 SIGBUS while loading huge GIFs
  * #52 Produces small glitches in output with some images
  * #54 Haiku port fails on 32bit
  * [unfiled] Exclude RTL code points that could break the output.
  * [unfiled] Apple Terminal lacks truecolor support, so make it
    default to 256 colors
  * [unfiled] Fix typo affecting middle dot symbol.</comment>
    <requestid>898181</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>ccb3927d5470072d1a265e3055911187</srcmd5>
    <version>1.8.0</version>
    <time>1630525032</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.8.0:
  * Added basic support for the Kitty and iTerm2 graphics protocols.
    These are enabled automatically when corresponding terminal support
    is detected, or manually with -f kitty or -f iterm.
  * Implemented an 8-color mode, selectable with -c 8
  * Implemented a foreground-only switch, --fg-only. This produces
    character art using foreground colors only, and will avoid
    modifying or resetting the background color. Looks best with
    non-contiguous symbols (e.g. ascii).
  * Added builtins for Japanese kana fullwidth symbols. These can
    now be used without loading any external fonts (try -c none --symbols wide).
  * Added builtins for legacy computer symbols (mainly wedges and
    sextant blocks). These were widely used in PETSCII and Teletext,
    and can be enabled using --symbols or --fill with their respective
    tags: legacy, wedge and sextant (@hodefoting).
  * Since there is a growing number of builtin symbols that may not
    be available everywhere, the default selection has been restricted
    to the widely supported block and border sets.
  * If possible, we now select a visually blank character from the
    specified symbol/fill sets instead of hardcoding ASCII space for
    featureless cells. One practical upshot of this is that the constant-width
    braille range can be used to produce consistent images even in contexts
    with variable-width fonts. U+2800 (BRAILLE PATTERN BLANK) will then be used in blank cells.
  * Improved terminal size detection when used with pipelines and redirection.
    This should now produce an image properly sized for your terminal:
    curl https://i.imgur.com/WFDEFVg.jpeg | chafa - | tee out
  * ChafaCanvas gained API functions for programmatically getting and
    setting character cell contents. These are used in a new example
    in tests/ncurses.c demonstrating ncurses integration.
  * Made --disable-rpath the default in order to simplify packaging.</comment>
    <requestid>915447</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>37e31893ac006f101ff6da3c19d67fb9</srcmd5>
    <version>1.10.0</version>
    <time>1647889956</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.10.0:
  * New option: --animate &lt;bool&gt;. On by default. Can be turned off
    to replace animations with a still frame #79.
  * New option: --center &lt;bool&gt; or -C &lt;bool&gt;. Off by default. Can
    be turned on to center images #83.
  * New options: --margin-bottom &lt;n&gt; and --margin-right &lt;n&gt;. These
    permit using all available space (with --margin-bottom 0) or some
    smaller amount #61.
  * New option: --polite &lt;bool&gt;. On by default. Can be turned off to
    correct issues caused by previous terminal state (e.g. no sixel scrolling)
    and improve presentation (e.g. by temporarily hiding the cursor). This can
    leave the terminal in an altered state, which is somewhat rude.
  * New option: --threads &lt;n&gt;. Allows manually specifying the number of threads to
    use. Defaults to one per detected logical CPU core.
  * When invoked with redirected input and no arguments, act like a
    filter as if invoked with -.
  * If input or output is being redirected, default to playing animations only once
    instead of looping forever. This can be overridden with -d inf.
  * Replaced obsolete Autoconf macros.
  * Improved image loaders:
    + GIF: Load GIF87a images as well as GIF89a.
    + PNG: Add an internal copy of LodePNG, bypassing ImageMagick.
      This improves performance and helps with eventually phasing out the latter.
    + XWD: Support images generated by convert.
  * Improved terminal support:
    + Contour: Enable sixel support.
    + foot: Open-ended TERM string matching.
    + Konsole: Enable sixel support.
    + WezTerm: Enable sixel support.
  * Bug fixes:</comment>
    <requestid>963661</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>3f116817602d2feb140af83af4b29280</srcmd5>
    <version>1.10.1</version>
    <time>1649093206</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.10.1:
  * #87 Garbled last row of pixels on some images
  * [unfiled] Correctly label new functions since 1.10</comment>
    <requestid>966791</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>6cda0167effd0d606b939b04ba075398</srcmd5>
    <version>1.10.2</version>
    <time>1650922526</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.10.2:
  * Added disclosure guidelines in SECURITY.md
  * Fix huntr.dev: Null pointer dereference in libnsgif with crafted GIF file
  * [unfiled] File magic would not effectively rule out internal loaders.
  * [unfiled] Very big images could cause absurd allocation requests
    triggering an abort in the loader.</comment>
    <requestid>972507</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>0e9f1d6f1b2673e4d3ab4609935804da</srcmd5>
    <version>1.10.3</version>
    <time>1651784821</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.10.3:
  * Improved input validation in the XWD loader.
  * huntr.dev: Buffer over-read when compiled with -O0 or non-x86 target</comment>
    <requestid>975093</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>b336c711d8199d10b2a9ae01da009db2</srcmd5>
    <version>1.12.0</version>
    <time>1654511928</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.12.0:
  * The ImageMagick dependency is now optional and deprecated.
    Packagers are encouraged to drop the ImageMagick dependency (--without-imagemagick)
    and add direct dependencies on relevant image codecs.
    ImageMagick support will be removed in a future release.
  * Added image loaders for the following formats: JPEG, SVG, TIFF, WebP.
    Like the existing GIF, PNG and XWD loaders, these are much faster and
    generally safer than their ImageMagick counterparts. If ImageMagick is
    enabled, it will be used as a fallback. Supported image loaders will
    be listed in the --version output.
  * Implemented a 16/8 mode producing 8 colors and an additional 8 bright
    foreground-only colors for a total of 16 foreground and 8 background colors.
    When using ANSI escape sequences in symbol mode, the sequence for bold
    text is used to enable bright colors. This scheme corresponds to that of
    the IBM PC's VGA hardware text modes and was popular with terminal
    emulators in the late 1980s to early 2000s.
    With a few tweaks, output from this mode can be turned into ANSI art scene
    .ANS files compatible with utilities like the wonderful Ansilove[2], e.g:
    $ chafa -f symbols -c 16/8 -s 80 --symbols space+solid+half --fill stipple \
        in.jpg | tr -d '\n' | iconv -c -f utf8 -t cp437 &gt; out.ans
    $ ansilove out.ans -o out.png
  * New builtin Latin symbols (available with --symbols latin). This class
    comprises most of the symbols from the Latin-1 Supplement, Latin Extended-A
    and -B, IPA Extensions and Spacing Modifier Letters plus a few Latin-like
    symbols from other ranges, using Terminus as the reference font.
    The ASCII class is also a subset of this class.
  * Reworked ASCII symbols to be more representative of modern terminal fonts.
    As with the other Latin ranges, the reference font is now Terminus.
  * New option: --scale &lt;n&gt;. This takes a real number specifying the on-screen
    scaling factor relative to the input's pixel size, respecting the terminal</comment>
    <requestid>980989</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>d3d9af544735f1939d6631982abff44a</srcmd5>
    <version>1.12.1</version>
    <time>1655732310</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.12.1:
  * Increased GLib minimum version to 2.20.
  * Added 12 new test inputs, including bad inputs to handle gracefully.
  * Added a few symbols to API documentation that were accidentally left out.
  * Bug fixes:
    + huntr.dev CVE-2022-2061: Out-of-bounds read in libnsgif's lzw_decode()
    + [unfiled] Undefined behavior in libnsgif due to uninitialized frame fields.
    + [unfiled] Signed integer overflow in chafa_pack_color().
    + [unfiled] Integer overflow in normalization pass on some images.
    + [unfiled] Potential unaligned access with corrupt XWD images.
    + [unfiled] Integer overflow in quantization on some images.
    + [unfiled] Calculating offset from NULL pointer in LodePNG.</comment>
    <requestid>983868</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>765cf33b55ac5091be2e4200a8a8d20f</srcmd5>
    <version>1.12.3</version>
    <time>1657015753</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.12.3:
  * Increased GLib minimum version to 2.26.
  * Enabled a few compiler warnings not included in -Wall -Wextra
    in order to catch more potential issues early. Also started
    using -Werror selectively.
  * Silenced deprecation warnings for older GLib APIs that we
    would like to keep using a bit longer.
  * Fix #96 Regression: Fails to build on Linux/Debian

- Update to 1.12.2:
  * Made everything compile for the x86_64-w64-mingw32 target using gcc.
  * Added support for the Windows 10 Command Prompt.
  * Improved error reporting.</comment>
    <requestid>986632</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>e1db5ef46ba5d9bc9bde5309df6801e2</srcmd5>
    <version>1.12.4</version>
    <time>1668432536</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.12.4:
  * MS Windows: Added support for Unicode command-line arguments.
  * MS Windows: Enabled support for building a DLL.
  * Improved quality of accelerated symbol picking (the default
    with -w 6 and lower), especially along sharp edges.
  * The XWD loader now supports unaligned image data, which can
    occur when the header is of an uneven length. Such images
    will no longer be rejected.
  * Bug fixes:
    - #100[1] Reading image data from stdin fails on Windows
    - #104[3] Artifacts with transparent animations on Kitty
    - #108[5] Bad interaction with lolcat
    - #112[7] Bad documentation for -c default
    - #113[9] Autogen/build fails on CentOS 7 (partial solution)
    - huntr.dev: Uncontrolled memory allocation in lodepng
    - [unfiled] -lm should not be in pkg-config Libs: list
    - [unfiled] The --watch switch was broken with the
      introduction of --animate.</comment>
    <requestid>1035537</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>d110088c260f09d00498774e7592e2a5</srcmd5>
    <version>1.12.5</version>
    <time>1684754070</time>
    <user>dimstar_suse</user>
    <comment>
- Update to 1.12.5:
  * Fix #123 crash on canvas created with chafa_canvas_new_similar()
  * Fix #141 distortion when rowstride is not a multiple of 4
  * Fix missing comma in --help output</comment>
    <requestid>1088257</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>00dd0e58af3d687830fa1f49b3b63e1a</srcmd5>
    <version>1.14.0</version>
    <time>1704829837</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1137674</requestid>
  </revision>
  <revision rev="20" vrev="2">
    <srcmd5>58dfee2685d0e67dfbbbcc49e94a04f1</srcmd5>
    <version>1.14.0</version>
    <time>1716309374</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1175427</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>52af1de8f637f4ab6c39ce56b36cd3de</srcmd5>
    <version>1.14.1</version>
    <time>1718743892</time>
    <user>anag+factory</user>
    <comment>- Update to 1.14.1:
  * A JPEG XL (.jxl) loader was added using libjxl (#188).
  * Added detection of the Eat &quot;Emulate a Terminal&quot; Emacs terminal.
  * Symbols mode was sped up significantly on AVX2-capable platforms.
  * Tests: A new test driver was added. It will log the specifics
    of any failures, which aids debugging of CI builds.
  * Bug fixes:
    #189 Fix installation of zsh completions.
    #190 Fix a small memory leak in ChafaCanvas.
    #192 Wrong sixel padding in some circumstances.
    #195 tmux passthrough enabled when already set.
    #196 iTerm mode not enabled automatically.</comment>
    <requestid>1181390</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>e19a5cc213f9b246fef9c23707e34919</srcmd5>
    <version>1.14.2</version>
    <time>1722003360</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.14.2:
  * #203 Chafa 1.14.1 fails to build on i686
  * #205 Symbols mode not working since 1.14.1
  * #206 Crash when importing more than 32767 glyphs
  * Fix erroneous base64 encoding of final byte in some circumstances</comment>
    <requestid>1189703</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>6a683edb4976885fc918eb399b5d68a6</srcmd5>
    <version>1.14.3</version>
    <time>1725885901</time>
    <user>anag+factory</user>
    <comment>- Update to 1.14.3:
  * Sixel transparency has been reenabled for still frames. Animations
    will be pre-composited on an opaque background to prevent flicker/glitchiness (#211)
  * Now supports the Ghostty terminal, defaulting to the Kitty graphics protocol there.
  * Bug fixes:
    #185 Chafa version 1.14 breaks image preview on lf.
    #210 Crash with -f sixels.
    #211 Sixels are too small in Windows Terminal.
    #212 Aspect-preserving calculations are off in some cases.
    [unfiled] Inconsistent fraction parsing in CLI arguments.
    [unfiled] A few small memory leaks in the JPEG XL loader.</comment>
    <requestid>1199545</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>41b64e1e123e310731cbd979bf896017</srcmd5>
    <version>1.14.4</version>
    <time>1725995627</time>
    <user>anag+factory</user>
    <comment>- Update to 1.14.4:
  * Bug fixes:
    #216 Dither intensity does not work properly</comment>
    <requestid>1199786</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>430e0cf6feb7a64a9ffc1d4c82d66546</srcmd5>
    <version>1.14.5</version>
    <time>1731063577</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1222511</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>d5992e6a73314ef055c8db405fe7c6ea</srcmd5>
    <version>1.16.1</version>
    <time>1748965919</time>
    <user>anag_factory</user>
    <comment>- Update to 1.16.1:
  * Bug fixes:
    #282 Fish completion not included in release tarball
    #283 Piping and redirection are broken in Windows

- Update to 1.16.0:
 * Added terminal probing. Currently we can determine geometry, colors
   and sixel capabilities this way. This supplements the existing heuristics.
 * The internal terminal database and heuristics were refactored for
   clarity, with new API added to simplify the configuration process.
 * I/O is now threaded, resulting in improved responsiveness and pipelining.
 * New option: --grid=WxH, --grid=[auto|on|off] or -g. This lays out
   multiple images in a grid for easy browsing.
 * New option: --label=[on|off] or -l. Labels each image with its filename.
   Works in both continuous and grid layouts.
 * New option: --probe=[auto|on|off]. Controls whether to actively probe the
   terminal. Can take a real number denoting how long to wait for a response.
 * Sixel quality improved significantly. The quantizer was reimplemented with modern algorithms
   (#174), and blue noise dithering was introduced (#238).
 * The new blue noise dithering is also available in symbols mode, and can be turned on with
    --dither noise. It can be turned off with --dither none.
 * Numerous small improvements were made to sixel handling:
   + Terminal cursor placement quirks are now represented and handled.
   + Images can now cover their cell extents completely.
   + Workaround for animations &quot;walking up the screen&quot; on quirky terminals.
 * The JPEG XL loader was improved with optional memory mapping and better container support
 * Enabled wildcard expansion in Windows builds (#266).
 * Added completions for the fish shell and updated those for zsh.
 * Bug fixes:
   + #111 Provide auto detection of background for perception of transparency</comment>
    <requestid>1282042</requestid>
  </revision>
</revisionlist>
