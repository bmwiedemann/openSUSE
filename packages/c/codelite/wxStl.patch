--- orig/CodeLite/JSON.cpp	2022-04-08 17:21:35.321282802 +0200
+++ new/CodeLite/JSON.cpp	2022-04-08 17:21:58.161543452 +0200
@@ -804,12 +804,3 @@
     }
     return *this;
 }
-
-JSONItem& JSONItem::addProperty(const wxString& name, const wxVector<int>& arr_int)
-{
-    std::vector<int> V;
-    V.reserve(arr_int.size());
-
-    V.insert(V.end(), arr_int.begin(), arr_int.end());
-    return addProperty(name, V);
-}
--- orig/CodeLite/JSON.h	2022-04-08 17:21:37.721310192 +0200
+++ new/CodeLite/JSON.h	2022-04-08 17:21:47.961427049 +0200
@@ -41,6 +41,7 @@
 #endif
 #include "macros.h"
 #include <vector>
+#include <type_traits>
 // clang-format on
 
 //////////////////////////////////////////////////////////////////////////
@@ -164,7 +165,11 @@
     JSONItem& addProperty(const wxString& name, cJSON* pjson);
     JSONItem& addProperty(const wxString& name, const wxFileName& filename);
     JSONItem& addProperty(const wxString& name, const std::vector<int>& arr_int);
-    JSONItem& addProperty(const wxString& name, const wxVector<int>& arr_int);
+    template<class T = int>
+    typename std::enable_if<!std::is_same<wxVector<T>, std::vector<T>>::value,
+                            JSONItem&>::type addProperty(const wxString& name, const wxVector<T>& arr_int) {
+	return addProperty(name, std::vector<T>(arr_int.begin(), arr_int.end()));
+    }
 
 #if wxUSE_GUI
     JSONItem& addProperty(const wxString& name, const wxSize& sz);
--- orig/LiteEditor/quickfindbar.cpp	2022-04-08 17:32:47.496953563 +0200
+++ new/LiteEditor/quickfindbar.cpp	2022-04-08 17:33:50.077667723 +0200
@@ -778,7 +778,7 @@
     bool isUTF8 = false;
 
     wxString input_buffer = m_sci->GetText();
-    unsigned int utfLen = ::clUTF8Length(input_buffer, input_buffer.length());
+    unsigned int utfLen = ::clUTF8Length(input_buffer.ToStdWstring().c_str(), input_buffer.length());
     isUTF8 = (utfLen != input_buffer.length());
 
     if(!IsReplacementRegex() && !isUTF8) {
--- orig/LiteEditor/replaceinfilespanel.cpp	2022-04-08 17:33:04.889152040 +0200
+++ new/LiteEditor/replaceinfilespanel.cpp	2022-04-08 17:33:58.921768651 +0200
@@ -311,7 +311,7 @@
 
         wxString replaceText = DoGetReplaceWith(res);
         int replaceLenInChars = (int)replaceText.Len();
-        int replaceLen = (int)::clUTF8Length(replaceText, replaceLenInChars);
+        int replaceLen = (int)::clUTF8Length(replaceText.ToStdWstring().c_str(), replaceLenInChars);
 
         // extract originally matched text for safety check later
         wxString text = res.GetPattern().Mid(res.GetColumnInChars() - deltaInChars, res.GetLenInChars());
--- codelite-15.0.11/ctagsd/tests/tester.hpp.orig	2022-04-08 18:27:21.991227538 +0200
+++ codelite-15.0.11/ctagsd/tests/tester.hpp	2022-04-08 18:26:40.890746349 +0200
@@ -131,6 +131,13 @@
         }                                                                                                \
     }
 
+static int strcmp(const wxString& str, const char* expc) {
+    return strcmp(str.ToStdString().c_str(), expc);
+}
+static int strcmp(const wxString& str, const wxString& expc) {
+    return strcmp(str.ToStdString().c_str(), expc.ToStdString().c_str());
+}
+
 #define CHECK_STRING(str, expcStr)                                                                             \
     {                                                                                                          \
         ++m_testCount;                                                                                         \
