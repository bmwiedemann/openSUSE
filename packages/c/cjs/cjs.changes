-------------------------------------------------------------------
Tue Aug 29 13:36:01 UTC 2023 - Marguerite Su <i@marguerite.su>

- update to version 5.8.0
  * GObject: Handle versions of GLib without GBindingGroup 
  * switch to mozjs102

-------------------------------------------------------------------
Thu May 27 19:52:13 UTC 2021 - andy great <andythe_great@pm.me>

- Update to version 5.0.0.
  * fix readline build on certain systems
  * overrides/Gtk: Set BuilderScope in class init
  * gi/wrapperutils: Move gjs_get_string_id() into resolve()
    implementations
  * Revert "arg-cache: Save space by not caching GType"
  * Fixed error in _init() that prevented GType objects from being
    created. Improved the regression test, implementing Marco T's
    feedback.

-------------------------------------------------------------------
Thu Jan 14 10:53:44 UTC 2021 - andy great <andythe_great@pm.me>

- Update to version 4.8.2.
  * Rebase on gjs 1.66.1.

-------------------------------------------------------------------
Thu Dec 31 12:17:24 UTC 2020 - Dominique Leuenberger <dimstar@opensuse.org>

- Do not add RPM dependencies for installed-tests: some tests there
  are intentionally crafted to 'fail' with missing deps. The dep
  scanner would not know though.

-------------------------------------------------------------------
Sat Dec 26 16:34:03 UTC 2020 - andy great <andythe_great@pm.me>

- Update to version 4.8.1.
  * No important changes.

-------------------------------------------------------------------
Sat Dec  5 15:01:03 UTC 2020 - andy great <andythe_great@pm.me>

- Update to version 4.8.0.
  * Rebase on GJS 1.66 and Mozjs78.
  * deprecation.cpp: Add additional info to ByteArray deprecation
    warning, and link to the xlet versioning tutorial page.
- Add cjs-tests package.
- Switch to meson.

-------------------------------------------------------------------
Mon Sep 28 19:13:50 UTC 2020 - andy great <andythe_great@pm.me>

- Build with mozjs68.

-------------------------------------------------------------------
Sun Sep 27 13:55:38 UTC 2020 - andy great <andythe_great@pm.me>

- Update to version 4.6.0.
  * Fix two broken test cases.

-------------------------------------------------------------------
Mon Mar 16 14:37:42 UTC 2020 - Marguerite Su <i@marguerite.su>

- update version 4.4.0
  * version bump with no change

-------------------------------------------------------------------
Mon Jul  1 03:47:07 UTC 2019 - Dead Mozay <dead_mozay@opensuse.org>

- Update to version 4.2.0:
  * update deprecated glib function (#72)
  * Fix new autoconf-archive compile issue (#73)

-------------------------------------------------------------------
Fri Mar 15 01:36:24 UTC 2019 - Dead Mozay <dead-mozay@opensuse.org>

- Update to version 4.0.0:
  * Add marshalling for native JS errors
  * object: Associate callbacks with the object on which they're installed
  * Use the GIVFuncInfo to hook up vfuncs instead of the GICallbackInfo
  * Capture JS exceptions from invoked virtual functions
  * global: Add a bootstrap system
  * coverage: Use global bootstrap to add JS coverage code
  * coverage: Don't error out on various files
  * coverage: Scan ES6 classes for functions
  * coverage: Correct AST walking for labelled statements
  * coverage: Walk AST in more cases
  * coverage: Refactor bootstrap code to use ES6 classes
  * error: Use JSProtoKey to get Error constructor
  * object: Remove hash-x32 implementation
  * object: Merge weak_pointer_list and dissociate_list
  * object: Remove vfunc list
  * jsapi-util: Remove jsapi-private
  * tests: Use assertions in coverage tests
  * js: Convert scripts to UTF-16 before evaluating
  * coverage: Use LCOV data from SpiderMonkey
  * coverage: Propagate gjs_coverage_write_statistics() errors
  * tests: Add regression test for vfunc crash avoidance
  * jsapi-util-string: Use mozjs UTF8-to-JSString conversion
  * jsapi-util-string: Missing error check
  * importer: Missing error check
  * jsapi-util: Improve check for SyntaxError
  * js: Use JS_EncodeStringToUTF8() directly where advantageous
  * param, importer: Spurious error when resolving non-string
  * js: Don't convert to UTF-8 to compare ASCII names
  * suppressions: Eliminate machine-dependent expressions
  * object: check in gjs_typecheck_object if the object has been finalized
  * object: don't resolve or set,get properties on finalized elements
  * object: add better logging when invalid access happens
  * object: reset the keep alive flag on wrapper when object is disposed
  * installed-tests/js: add testGObjectDestructionAccess to verify access to destryed objects
  * object: Leave out param untouched on error
  * maint: highlight the license
  * release: Add NEWS for 1.51.3]
  * Amend gtk-application.js
  * mv gtk-window.js to amend gtk.js, including suggestions
  * arg: String as GdkAtom, and GdkAtom as string
  * Test case improved in `installed-tests/js/testCairo.js` [fixes #27]
  * object: Only show critical errors on access to finalized objects
    (Closes: #21)
  * coverage: Remove unused JSCompartmentOptions
  * js: Remove unnecessary property getters and setters
  * object: Show error when using proto functions (connect*, emit) on destroyed object
  * object: make clear in toString() proto method when the object is finalized
  * proxyutils: remove trailing spaces
  * release: Prepare for 1.51.4
  * arg: Marshal GType of 0 to null
  * release: Include NEWS from 1.50.3
  * profiler: add SPSProfiler implementation
  * profiler: Implement --profile flag behaviour
  * profiler: Allow enabling with GJS_ENABLE_PROFILER=1
  * profiler: Disable profiler in interactive mode
  * profiler: Disable SIGUSR2 start/stop
  * profiler: Suppress cppcheck warning
  * profiler: Allow configuring with --disable-profiler
  * profiler: Always activate profiler if GJS_ENABLE_PROFILER=1
  * foreign: Use gjs_eval_with_scope() instead of public API
  * profiler: Reduce API surface
  * object: Restore resolve return value
  * tests: Don't compare Rooted<T> against NULL
  * tests: Add pending test for composite template subclass
  * maint: Fix obsolete comments on resolve hooks
  * js: Remove context from GjsAutoJSChar
  * Fix overwriting of libcjs_la_SOURCES
  * jsapi-util-string: Fix return of gjs_get_string_id()
  * Revert "object: reset the keep alive flag on wrapper when object is disposed"
  * release: Include NEWS from 1.50.4
  * maint: Update DOAP file
  * Allow using GObject.signal_* functions in place of Object methods
  * gjs_callback_closure: Log uncatchable exceptions, don't just exit
  * gjs_callback_closure: Use g_error, not exit, on uncatchable exceptions
  * _gjs_context_run_jobs: Log uncatchable exceptions, except System.exit()
  * gjs_context_eval: Use different GError message for uncatchable exceptions
  * gjs_context_eval: Log a critical on uncatchable exceptions]
  * build: Install suppressions files
  * Rename gjs-1.0
  * CI: use a more robuts test for profiling dumping
  * release: Prepare for 1.51.90
  * build: Ignore -Wcast-function-type in G_DEFINE_TYPE
  * jsapi-dynamic-class: Use interned strings to link prototype
  * function: move completed trampolines out of gjs_invoke_c_function
  * function: Fix outdated comment
  * tests: Add tests for GObject-valued properties
  * profiler: Remove unused function in !ENABLE_PROFILER case
  * profiler: Don't include alloca.h when disabled
  * toggle: Add debug logging
  * context: Add more debug logging to dispose
  * log: Allow logging thread ID of each message
  * context: Shut down toggle queue before dispose notify
  * context: Fix usage of g_idle_add for resolving promises
  * release: Prepare for 1.51.91
  * function: Refactor "callback blocked" message into helper function
  * function: Don't call into JS if on the wrong thread
  * Profiler: fix build on Debian/Ubuntu
  * Revert "build: Install suppressions files"
  * Remove test/travis-ci.sh
  * Tests: Fix failures from gjs renaming
  * console: Free profiler output path at different points
  * sysprof: Initialize buffer in SpCaptureWriter
  * tests: Reduce length of profiler start/stop test
  * overrides/Gio: Add D-Bus convenience to more proxy methods
  * context: Job queue should not swallow pending exceptions
  * overrides: Add override for Cairo that merges in imports.cairo
  * profiler: Don't assume layout of struct sigaction
  * context: Always import byteArray
  * Remove dead code
  * Gio: Remove obsolete code
  * tests: Add missing async test parameter
  * Remove unnecessary semicolons
  * context: dump heaps on signal
  * installed-tests/js: skip a test GTK dependent, if no GTK
  * Update tweener.js -- 48 eslint errors fixed
  * log: Remove unused debug topics
  * object: Improve lifecycle logging
  * engine: Free Cairo static data on shutdown
  * object: Ensure weak ref callback is removed on finalize
  * initial commit of heapgraph scripts
  * rename README.md to heapgraph.md
  * tweak heapgraph.md
  * heapdot.py: remove shape compression
  * omit 'self-hosting-global' unless explicitly targetted
  * release: Prepare for 1.52.1
  * Merge branch 'jaszhix/gjs-tweener-fix'
  * Revert "engine: Free Cairo static data on shutdown"
  * heapgraph.py: adjust terminal output style * don't use colors in terminal output * remove unused label function
  * Fix UTF8 encoding for some GJS string arrays. - The function that constructs string arrays for imports and argv utilized a JS_NewStringCopyZ call instead of the proper JS_NewStringCopyUTF8Z (the input is UTF8).
  * Add testing for ARGV encoding changes.
  * Automate testing for unicode encoding.
  * Test new environment flag against pipeline.
  * object: don't use toggle references unless necessary
  * object: properly disassociate wrappers
  * context: Add API to force GC schedule
  * object: Queue a forced GC when toggling down
  * object: Only weak unref if GObject is still alive
  * overrides: support Gtk template callbacks
  * context: Ensure force_gc flag is not lost if the idle is scheduled
    (Closes: #150)
  * object: Embed wrapped object list into ObjectInstance (Closes: #142)
  * jsapi-util-root: Add operator!=(nullptr_t)
  * Support interface signal handlers
  * importer: Refactor awkward 'goto out' situation
  * log: Add gjs_debug_id()
  * js: Don't convert to UTF-8 just for debug logging
  * console: --jsversion shell option
  * object: Adjust arguments of method
  * object: Upgrade severity of toggle warning to error
  * jsapi-util: Remove gjs_get_type_name()
  * mem: Remove unused counters
  * importer: Retrieve names while iterating search path (Closes: #154)
  * function: Check for invalid closure
  * Remove unnecessary inline
  * jsapi-util-string: Fix object logging
  * util-root: Allow null notification functions when rooting (Closes: #144)
  * object: Set up a single weak ref on the context (Closes: #144)
  * object: Move context dispose notify to GjsContext
  * object: Fix unused variable
  * object: Change linked list size() to return size_t
  * object: Fix logging statement
  * js: Schedule a compacting GC on gjs_gc_if_needed() (Closes: #151)
  * boxed: Update outdated comment
  * boxed: Remove limitation of 256 fields
  * tests: Debug-log coverage output
  * tests: Remove unused length argument in coverage tests
  * tests: Correct typo in test name
  * jsapi-util-string: Avoid unnecessary root
  * boxed: Remove unnecessary roots

-------------------------------------------------------------------
Sat Feb 23 03:53:04 UTC 2019 - Marguerite Su <i@marguerite.su>

- fix tumbleweed build
- build with optflags

-------------------------------------------------------------------
Thu Apr 19 20:07:54 UTC 2018 - sor.alexei@meowr.ru

- Update to version 3.8.0:
  * Build with mozjs45.
  * arg: don't crash when asked to convert a null strv to an array.
  * arg: Include headers for std::abs().
  * maintenance: Modernise shell scripts.
  * modules/console: Update fancy error reporter to mozjs38.
  * jsapi-util-args: Mark functions as always-inline.
  * package: Support running Meson projects from source.
  * package: Fix initSubmodule() with Meson.
  * package: Don't rely upon directory configuration for
    initSubmodule().
  * package: Set GSETTINGS_SCHEMA_DIR when ran from source.
  * build: Autodetect SpiderMonkey's debug mode.
  * context: Use GThread to determine owner thread.
  * jsapi-constructor-proxy: Inherit from js::Wrapper.
  * system: Switch from JS::CallReceiver to JS::CallArgs.
  * coverage: Root using context, not runtime.
  * package: Add checkSymbol() to check for symbol availability.
  * package: Add requireSymbol() method.
  * overrides: Implement Gio.ListStore[Symbol.iterator].
  * modules/system.cpp: Add a dumpHeapComplete() method.
  * Use std::unique_ptr instead of g_autofree/g_autoptr().
  * modules/cairo-*-surface.cpp: Silence compiler warnings.
  * js: Stop using flags argument to String.replace().
  * tests: Root using context, not runtime.
  * autofree: Avoid using local typedefs in classes.
  * GjsAutoChar: Do not take ownership of const char*.
  * maint: Fix a wrong sscanf argument.
  * js: Use autoptr in gjs_object_require_property().
  * jsapi-util-string: Remove useless length calculation.
  * maint: Add a static code analysis "make target".
  * Fix the build with debug logs enabled.
  * js: Module exports use ES6 scope rules.
  * console: Refactor read-eval-print loop.
  * js: Use a special object for modules.
  * js: Refactor global object creation.
  * js: New JS_Enumerate API.
  * js: Switch from JS::NullPtr() to nullptr.
  * js: Global object is implicit in many functions.
  * js: JSCLASS_IMPLEMENTS_BARRIERS is now implicit.
  * js: Weak pointer callback API change.
  * js: setProperty operations with triple result state.
  * js: New JS_IsArrayObject() API.
  * js: Rename JS_InternString to JS_AtomizeAndPinString.
  * importer: API change in enumerate operation.
  * js: Set JSPROP_RESOLVING when defining properties.
  * modules/console: Update to js::PrintError from upstream.
  * js: Various API changes for SpiderMonkey 45.
  * coverage: Misc Javascript-side API changes.
  * importer: Seal import with JSPropertyDescriptor directly.
  * js: Update obsolete comments.
  * js: Adapt to new JS::TraceEdge<T> API.
  * js: New JSClass struct layout.
  * js: Add JSCLASS_FOREGROUND_FINALIZE flag.
  * js: Adapt to options changes.
  * js: Report warnings and errors with encoding.
  * tests: Refactor to avoid error reporter.
  * js: Replace error reporter callbacks.
  * js: Replace JSRuntime APIs that now take JSContext.
  * js: Remove JSRuntime.
  * js: Adapt to misc API changes in SpiderMonkey 52.
  * js: Unbarriered read while in weak ptr callback.
  * docs: Overview of SpiderMonkey 52 features in NEWS.
  * GjsAutoChar: Add a proper operator= (const char*).
  * js: Allow access to modules' lexical scope.
  * tests: Re-enable JIT.
  * build: Use 'always inline' macro in more places.
  * js: Use correct autoptr in gjs_string_to_filename().
  * function: Better message about call during GC.
  * promise: Move to native promises.
  * promise: Report unhandled rejections.
  * context: Properly create const strings array.
  * importer: Give module objects a [Symbol.toStringTag].
  * object: Don't let a method shadow a property.
  * Backport of patch required for JSObject compare to nullptr.
  * Backport of patch required for vectors MOZ_MUST_USE returns.
  * Revert "js: Workaround for function with custom prototype".
  * Revert "build: Allow compiling without RTTI".
  * lang: Move all legacy Lang.Class code.
  * class: Move to ES6 classes in internal code.
  * GObject: Move all legacy GObject class code.
  * GObject: Adapt GObject class framework to ES6.
  * class: Move to ES6 GObject classes in internal code.
  * tests: Add ES6 class inheriting from legacy class.
  * Gtk: Use GObject.registerClass() for Gtk.Widgets.
  * legacy class: Add name property to class object.
  * legacy class: Reinstate Lang.getMetaClass().
  * gerror: Use JS::CaptureCurrentStack for stack info.
  * stack: Remove gjs_context_get_frame_info().
  * gerror: Define a columnNumber on GError-backed errors.
  * console: Print exception even when not from SpiderMonkey.
  * tests: Re-enable accidentally disabled tests.
  * jsapi-util: Also rate limit checking the process size.
  * object: Remove unused argument.
  * maint: Add ASAN Address Sanitizer.
  * docs: Correct leftover mozjs38.
  * arg: Avoid assigning out-of-range values.
  * build: Add LSan suppression file.
  * build: Don't use the vptr sanitiser.
  * arg: Avoid taking abs() of -2^63.
  * tests: Suppress message about too-big integer.
  * main: Use g_option_context_parse_strv().
  * build: Put dbus-run-session in AM_TESTS_ENVIRONMENT.
  * build: Don't use LOG_COMPILER for shell scripts.
  * object: Avoid taking address of empty vector.
  * context: Avoid null pointer dereference.
  * build: Update Valgrind suppressions rules.
  * build: Valgrind with AX_VALGRIND_CHECK.
  * maint: Add SpiderMonkey helgrind suppression rules.
  * tests: Split legacy Gtk.Widget tests out.
  * Revert freeing closures in idle handler.
  * closure: Debug message on invalidate signal.
  * object: Refactor out ConnectData.
  * closure: Prevent collection of invalidated closure.
  * coverage: Correct a licensing mistake.
  * stack: Use js::DumpBacktrace() for gjs_dumpstack().
  * coverage: Don't error out on various files.
  * coverage: Scan ES6 classes for functions.
  * coverage: Correct AST walking for labelled statements.
  * coverage: Walk AST in more cases.
  * tests: Create test ASTs by parsing JS.
  * coverage: Don't count literals as executable.
  * coverage: Don't mark empty var declarations executable.
  * coverage: Misc refactors.
  * coverage: Fix coverage prefixes.
  * jsapi-util-args: Update out-of-date comments.
  * build: Tweak code coverage options.
  * tweener: Fix a couple of warnings.
  * legacy: Allow ES6 classes to inherit from abstract Lang.Class
    class.
  * importer.cpp: Update search path for Cinnamon.
  * Remove valgrind configuration.
  * Fix DEBUG compiler error in Spidermonkey 52.
  * Get most tests passing.
  * Fix usage of g_idle_add for resolving promises.
  * Fix scope warning for restrictedWords in the tweener module.
- Drop baselibs.conf.

-------------------------------------------------------------------
Thu Nov  9 18:24:42 UTC 2017 - sor.alexei@meowr.ru

- Update to version 3.6.1:
  * cairo: Free popped pattern.
  * value: Fix a memory leak while marshalling GValue.
  * arg: Fix memory leaks.

-------------------------------------------------------------------
Sat Oct 28 19:57:36 UTC 2017 - sor.alexei@meowr.ru

- Update to version 3.6.0:
  * object: Keep proper track of pending closure invalidations.
  * Revert "handler ID's must be managed from start to finish -
    they should be initialised to 0, and re-set to 0 whenever
    they're finished being used".
  * object: Zero out new ConnectData.
  * Revert freeing closures in idle handler.
  * closure: Prevent collection of invalidated closure

-------------------------------------------------------------------
Sun Aug 20 16:09:40 UTC 2017 - sor.alexei@meowr.ru

- Update to version 3.4.4:
  * object.cpp: Follow-up to 503fa20 - handler ID's must be managed
    from start to finish - they should be initialised to 0, and
    re-set to 0 whenever they're finished being used.
  * arg: Don't crash when asked to convert a null strv to an array.
  * object: Don't invalidate closure if already invalid.
  * closure: Remove a pointer to runtime.
  * closure: Prevent use-after-free in closures.

-------------------------------------------------------------------
Sun Jul  9 12:20:12 UTC 2017 - sor.alexei@meowr.ru

- Update to version 3.4.3:
  * object.cpp: Follow-up to 503fa20 - handler ID's must be managed
    from start to finish - they should be initialised to 0, and
    re-set to 0 whenever they're finished being used.
  * arg: Don't crash when asked to convert a null strv to an array.
  * object: Don't invalidate closure if already invalid.
  * closure: Remove pointer to runtime.
  * closure: Prevent use-after-free in closures.

-------------------------------------------------------------------
Wed Jun 28 19:20:44 UTC 2017 - sor.alexei@meowr.ru

- Update to version 3.4.2:
  * tweener: Add undefined property check.
  * tweener.js: Silence some additional warnings due to
    missing/unused properties.
  * object: Prevent use-after-free in signal connections.
  * util-root: Require GjsMaybeOwned callback to reset.

-------------------------------------------------------------------
Wed May 24 14:40:01 UTC 2017 - sor.alexei@meowr.ru

- Update to version 3.4.1:
  * Better GLib and autotools compatibility.
- Remove cjs-autotools-compat.patch, cjs-glib-compat.patch: merged
  upstream.

-------------------------------------------------------------------
Wed May  4 17:44:11 UTC 2017 - sor.alexei@meowr.ru

- Update to version 3.4.0:
  * Rebase to upstream gjs 1.48.0 (a7bcfb9).
  * Always reload extension js modules.
  * min / max properties to specify a minimal / maximal value.
  * Throw error when attempting to instantiate abstract class.
  * signals.js: Add signalHandlerIsConnected method.
  * Use python2 instead of python.
  * importer.cpp: Add a method to the global imports object
    addSubImporter(name, path)
  * modules/GObject.js: Add access to handler_block and
    handler_unblock.
  * Fix file location problem from rebasing
- Add cjs-autotools-compat.patch and cjs-glib-compat.patch: Add
  compatibility with older autotools and GLib.

-------------------------------------------------------------------
Tue Nov  8 13:01:41 UTC 2016 - sor.alexei@meowr.ru

- Update to version 3.2.0:
  * Migrate away from gnome-common deprecated vars and macros.
  * modules/GObject.js: Add access to handler_block and
    handler_unblock.
  * build: Require C++11.
  * Fix build when extra debugging is enabled (util/log.h).
- Add the optional Gtk3 dependency.

-------------------------------------------------------------------
Thu May 12 09:54:43 UTC 2016 - sor.alexei@meowr.ru

- Update to version 3.0.1:
  * repo.cpp: Add Gvc->Cvc mapping for backward compatibility of
    sound xlets.

-------------------------------------------------------------------
Sat Apr 23 14:17:17 UTC 2016 - sor.alexei@meowr.ru

- Update to version 3.0.0.

-------------------------------------------------------------------
Sun Oct 18 08:46:06 UTC 2015 - sor.alexei@meowr.ru

- Update to 2.8.0:
  * importer.cpp: Add a method to the global imports object
    addSubImporter(name, path).
- Remove cjs from baselibs.conf.

-------------------------------------------------------------------
Mon Aug 10 02:16:46 UTC 2015 - i@marguerite.su

- update version 2.6.2
  * signals.js: add signalHandlerIsConnected method
- add baselibs.conf

-------------------------------------------------------------------
Tue Jun  2 23:15:27 UTC 2015 - stefan@fam-elser.de

- update to version 2.6.0

-------------------------------------------------------------------
Thu Apr 23 18:12:30 UTC 2015 - stefan@fam-elser.de

- update to version 2.4.2

-------------------------------------------------------------------
Wed Nov  5 08:18:34 UTC 2014 - i@marguerite.su

- update version 2.4.0
  * js version update to mozjs24
- add patch: cjf-2.4.0-lower_versions.patch
  * lower version requirements for gobject-introspection
    and gobject-2.0

-------------------------------------------------------------------
Mon Jul 14 16:31:37 UTC 2014 - i@marguerite.su

- update version 2.3.0
  * prevent start-on-demand dbus service from working 

-------------------------------------------------------------------
Thu Apr 17 05:08:32 UTC 2014 - i@marguerite.su

- update version 2.2.0

-------------------------------------------------------------------
Mon Oct 21 15:56:27 UTC 2013 - i@marguerite.su

- copypac from home:cyberorg:cinnamon
- clean work
- spli libcjs0 and typelib-1_0-CjsPrivate-1_0 sub-packages

-------------------------------------------------------------------
Fri Oct  4 18:53:00 UTC 2013 - stefan@fam-elser.de

- Updated to version 2.0.0

-------------------------------------------------------------------
Mon Sep 30 12:24:02 UTC 2013 - stefan@fam-elser.de

- Initial Release with git version from 2013/09/30

