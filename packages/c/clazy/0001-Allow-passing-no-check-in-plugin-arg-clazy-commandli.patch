From d3d2108ed77cc1def6d2d2c8e0cd36c99585356f Mon Sep 17 00:00:00 2001
From: Albert Astals Cid <aacid@kde.org>
Date: Fri, 5 Aug 2022 21:59:09 +0200
Subject: [PATCH] Allow passing no-check in -plugin-arg-clazy commandline

This way one can define the global checks in an environment variable but
fine tune them on a file per file basis with compile flags
---
 src/checkmanager.cpp | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/src/checkmanager.cpp b/src/checkmanager.cpp
index e3d7018f..24aec9f1 100644
--- a/src/checkmanager.cpp
+++ b/src/checkmanager.cpp
@@ -189,16 +189,15 @@ RegisteredCheck::List CheckManager::requestedChecks(std::vector<std::string> &ar
     if (args.size() > 1) // we only expect a level and a comma separated list of arguments
         return {};
 
+    vector<string> userDisabledChecks;
     if (args.size() == 1) {
         // #2 Process list of comma separated checks that were passed to compiler
-        result = checksForCommaSeparatedString(args[0]);
-        if (result.empty()) // User passed inexisting checks.
+        result = checksForCommaSeparatedString(args[0], /*by-ref*/ userDisabledChecks);
+        if (result.empty() && userDisabledChecks.empty()) // User passed inexisting checks.
             return {};
     }
 
     // #3 Append checks specified from env variable
-
-    vector<string> userDisabledChecks;
     RegisteredCheck::List checksFromEnv = requestedChecksThroughEnv(/*by-ref*/ userDisabledChecks);
     copy(checksFromEnv.cbegin(), checksFromEnv.cend(), back_inserter(result));
 
-- 
2.37.3

