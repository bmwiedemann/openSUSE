<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>60e599271299bdb04fdba9d82863e415</srcmd5>
    <version>0.8.5</version>
    <time>1519307959</time>
    <user>dimstar_suse</user>
    <comment>Use %license instead of %doc for the license copy</comment>
    <requestid>578668</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>c97093bd26f2ba37b972b265f977f002</srcmd5>
    <version>0.8.5</version>
    <time>1519902382</time>
    <user>dimstar_suse</user>
    <comment>- Fix License - the source code contains LGPL licensed test suite.
  The library itself is licensed under BSD license. Use SPDX v3
- Test suite requires cpptest, which we don't have at the moment.
- spec-cleaner cleanup.</comment>
    <requestid>580496</requestid>
  </revision>
  <revision rev="3" vrev="3">
    <srcmd5>5e3e75a11d16ebcde40b0971b1e54019</srcmd5>
    <version>0.8.5</version>
    <time>1520415057</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>582544</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>781f5f0a5f209700a6c21d464946dfa5</srcmd5>
    <version>0.9.0</version>
    <time>1542749155</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.9.0
  * Fixed: Out-of-bounds write in uriComposeQuery* and
    uriComposeQueryEx* (bsc#1115722, CVE-2018-19198)
  * Fixed: Detect integer overflow in uriComposeQuery* and
    uriComposeQueryEx* (bsc#1115723, CVE-2018-19199)
  * Fixed: Protect uriResetUri* against acting on NULL input
    (bsc#1115724, CVE-2018-19200)
  * Changed: Marked as deprecated:
      Deprecated functions:
        uriNormalizeSyntaxMaskRequired[AW]
        uriParseUri[AW]
        uriParseUriEx[AW]
    Added: Add convenience functions to ease user code to parse a single URI
      New functions:
        uriParseSingleUri[AW]
        uriParseSingleUriEx[AW]
        uriParseSingleUriExMm[AW]
    Added: Support for custom memory managers (GitHub #26, #35), see Doxygen
      New functions (as extension of existing ones):
        uriAddBaseUriExMm[AW]
        uriComposeQueryMallocExMm[AW]
        uriDissectQueryMallocExMm[AW]
        uriFreeQueryListMm[AW]
        uriFreeUriMembersMm[AW]
        uriNormalizeSyntaxExMm[AW]
        uriParseSingleUriExMm[AW]
        uriRemoveBaseUriMm[AW]
      New functions (for convenience):
        uriCompleteMemoryManager
        uriEmulateCalloc</comment>
    <requestid>649645</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>b6a6720114e88a719c1038b3da2b8884</srcmd5>
    <version>0.9.1</version>
    <time>1548452496</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.9.1
  * Fixed Out-of-bounds read in uriParse*Ex* for incomplete URIs
    with IPv6 addresses with embedded IPv4 address, e.g. &quot;//[::44.1&quot;
    mitigated if passed parameter &lt;afterLast&gt; points to readable
    memory containing a '\0' byte. (bsc#1122193, CVE-2018-20721)
  * Fixed: When parsing a malformed URI with an IPvFuture address
    (e.g. &quot;http://[vA.123456&quot; missing &quot;]&quot;), errorPos would point
    to the first character after &quot;v&quot; than the actual position of the
    error (here: the end of the string)
  * Fixed: uriToStringCharsRequired* reported 1 more byte than
    needed for IPv4 address URIs (GitHub #41);
  * Improved: For parse errors, waterproof errorPos &lt;= afterLast
  * Soname: 1:24:0</comment>
    <requestid>666491</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>358f16f12fa5fb09a95f074a9cd95816</srcmd5>
    <version>0.9.3</version>
    <time>1564302014</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>718134</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>498ec5c7d6efa324c15f139d640dfd26</srcmd5>
    <version>0.9.4</version>
    <time>1597222595</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>825273</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>4011d6e4622314001f4454dc80502dc4</srcmd5>
    <version>0.9.5</version>
    <time>1622928654</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>896650</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>0624e1076987e2995939aa135e36ca3b</srcmd5>
    <version>0.9.6</version>
    <time>1641855215</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>945308</requestid>
  </revision>
  <revision rev="10" vrev="2">
    <srcmd5>5d2f55ab68d26d4a31b34dd41c1bbf3b</srcmd5>
    <version>0.9.6</version>
    <time>1652993376</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>978053</requestid>
  </revision>
</revisionlist>
