--- BUILD/man-pages-1.69/man2/getcwd.2
+++ BUILD/man-pages-1.69/man2/getcwd.2
@@ -0,0 +1,85 @@
+.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
+.\" (c) 2003 by International Business Machines Corportion
+.\" This file is distributed according to the GNU General Public License.
+.TH GETCWD 2 2003-03-28 "Linux 2.4" "Linux Programmer's Manual"
+.SH NAME
+getcwd \- get current working directory
+.SH SYNOPSIS
+.nf
+/*
+ * This page documents the getcwd(2) system call, which
+ * is not defined in any user-space header files; you should
+ * use getcwd(3) defined in <unistd.h> instead in applications.
+ */
+
+.BI "long getcwd(char *" buf ", unsigned long " size );
+.fi
+.SH DESCRIPTION
+The 
+.BR getcwd ()
+function copies an absolute pathname of the
+current working directory to the array pointed to by 
+.IR buf ,
+which is of length 
+.IR size .
+.PP 
+If the current absolute path name would require a buffer
+longer than 
+.I size 
+elements, 
+.B -1 
+is returned, and 
+.I errno 
+is
+set to 
+.BR ERANGE ; 
+an application should check for this error,
+and allocate a larger buffer if necessary.
+.PP
+If 
+.I buf 
+is NULL, the behaviour of 
+.BR getcwd () 
+is undefined.
+
+.SH "RETURN VALUE"
+.B -1 
+on failure (for example, if the current directory is not readable), with 
+.I errno 
+set accordingly, and the number of characters stored in 
+.I buf 
+on success. The contents of the array pointed to by 
+.IR buf 
+is undefined on error.
+.PP
+Note that this return value differs from the 
+.BR getcwd (3) 
+library function, which returns 
+.B NULL 
+on failure and the address of 
+.I buf
+on success.
+
+.SH ERRORS
+.TP
+.B ENOMEM 
+if user memory cannot be mapped
+.TP
+.B ENOENT 
+if directory does not exist (i.e. it has been deleted)
+.TP
+.B ERANGE 
+if not enough space available for storing the path
+.TP
+.B EFAULT 
+if memory access violation occurs while copying
+
+.SH "CONFORMING TO"
+The 
+.BR getcwd 
+system call is Linux specific, use the 
+.BR getcwd
+C library function for portability.
+
+.SH "SEE ALSO"
+.BR getcwd (3)
--- BUILD/man-pages-1.69/man2/rt_sigqueueinfo.2
+++ BUILD/man-pages-1.69/man2/rt_sigqueueinfo.2
@@ -0,0 +1,96 @@
+.\" Copyright (c) 2002 Michael Kerrisk <mtk16@ext.canterbury.ac.nz>
+.\"
+.\" Permission is granted to make and distribute verbatim copies of this
+.\" manual provided the copyright notice and this permission notice are
+.\" preserved on all copies.
+.\"
+.\" Permission is granted to copy and distribute modified versions of this
+.\" manual under the conditions for verbatim copying, provided that the
+.\" entire resulting derived work is distributed under the terms of a
+.\" permission notice identical to this one
+.\" 
+.\" Since the Linux kernel and libraries are constantly changing, this
+.\" manual page may be incorrect or out-of-date.  The author(s) assume no
+.\" responsibility for errors or omissions, or for damages resulting from
+.\" the use of the information contained herein.  
+.\" 
+.\" Formatted or processed versions of this manual, if unaccompanied by
+.\" the source, must acknowledge the copyright and authors of this work.
+.\"
+.\" added note on self-signalling, aeb, 2002-06-07
+.\"
+.TH RT_SIGQUEUEINFO 2 2003-04-07 "Linux 2.4.19" "Linux Programmer's Manual"
+.SH NAME
+rt_sigqueueinfo \- queue a signal and data to a process
+.SH SYNOPSIS
+.BI "long sys_rt_sigqueueinfo(int " pid ", int " sig ", siginfo_t * " uinfo ");
+.SH DESCRIPTION
+.BR sys_rt_sigqueueinfo ()
+sends the signal specified in
+.I sig
+to the process whose PID is given in
+.IR pid .
+The null signal (0) can be used to check if a process with a given
+PID exists.
+.PP
+The
+.I uinfo
+argument is used to specify an accompanying item of data (either an integer
+or a pointer value) in the sigval part of the 
+siginfo_t structure to be sent with the signal.
+
+If the receiving process has installed a handler for this signal using the
+.B SA_SIGINFO
+flag to
+.BR sigaction (2),
+then it can obtain this data via the
+.I si_value
+field of the 
+.I siginfo_t
+structure passed as the second argument to the handler.
+Furthermore, the
+.I si_code
+field of that structure will be set to
+.BR SI_QUEUE .
+.SH "RETURN VALUE"
+On success, 
+.BR sys_rt_sigqueueinfo ()
+returns 0, indicating that the signal was successfully
+queued to the receiving proces.
+Otherwise, one of the following errors is returned.
+.SH ERRORS
+.TP
+.B -EAGAIN
+The limit of signals which may be queued has been reached.
+.TP
+.B -EINVAL
+.I sig
+was invalid.
+.TP
+.B -ESRCH
+No process has a PID matching
+.IR pid .
+.TP
+.B -EPERM
+The process does not have permission to send the signal
+to the receiving process.
+.TP
+.B -EFAULT
+memory error.
+.SH NOTES
+If this function results in the sending of a signal to the process
+that invoked it, and that signal was not blocked by the calling thread,
+and no other threads were willing to handle this signal (either by
+having it unblocked, or by waiting for it using
+.BR sigwait (3)),
+then at least some signal must be delivered to this thread before this
+function returns.
+.SH "CONFORMING TO"
+POSIX 1003.1-2001
+.SH "SEE ALSO"
+.BR kill (2),
+.BR sigaction (2),
+.BR signal (2),
+.BR sigwait (3),
+.BR signal (7),
+.BR sigqueue (2)
--- BUILD/man-pages-1.69/man2/rt_sigreturn.2
+++ BUILD/man-pages-1.69/man2/rt_sigreturn.2
@@ -0,0 +1 @@
+.so man2/sigreturn.2
--- BUILD/man-pages-1.69/man2/rt_sigsuspend.2
+++ BUILD/man-pages-1.69/man2/rt_sigsuspend.2
@@ -0,0 +1 @@
+.so man2/sigaction.2
--- BUILD/man-pages-1.69/man2/rt_sigtimedwait.2
+++ BUILD/man-pages-1.69/man2/rt_sigtimedwait.2
@@ -0,0 +1,113 @@
+.\" Copyright (c) 2002 Michael kerrisk <mtk16@ext.canterbury.ac.nz>
+.\"
+.\" Permission is granted to make and distribute verbatim copies of this
+.\" manual provided the copyright notice and this permission notice are
+.\" preserved on all copies.
+.\"
+.\" Permission is granted to copy and distribute modified versions of this
+.\" manual under the conditions for verbatim copying, provided that the
+.\" entire resulting derived work is distributed under the terms of a
+.\" permission notice identical to this one
+.\"
+.\" Since the Linux kernel and libraries are constantly changing, this
+.\" manual page may be incorrect or out-of-date.  The author(s) assume no
+.\" responsibility for errors or omissions, or for damages resulting from
+.\" the use of the information contained herein.
+.\"
+.\" Formatted or processed versions of this manual, if unaccompanied by
+.\" the source, must acknowledge the copyright and authors of this work.
+.\"
+.TH RT_SIGTIMEDWAIT 2 2003-04-07 "Linux 2.4.19" "Linux Programmer's Manual"
+.SH NAME
+rt_sigtimedwait \- synchronously wait for queued signals
+.SH SYNOPSIS
+.BI "long rt_sigtimedwait(const sigset_t *" uthese ", siginfo_t *" uinfo ", "
+.BI "const struct timespec " uts ", size_t " sigsetsize ");"
+.SH DESCRIPTION
+.BR rt_sigtimedwait ()
+suspends execution of the calling process until one of the signals in
+.I uthese
+is delivered.
+(If one of the signals in
+.I uthese
+is already pending for the calling process,
+.BR rt_sigtimedwait()
+will return immediately with information about that signal.)
+
+.BR rt_sigtimedwait()
+removes the delivered signal from the calling process's list of pending
+signals and returns the signal number as its function result.
+If the
+.I uinfo
+argument is not
+.BR NULL ,
+then it returns a structure of type
+.I siginfo_t
+
+The argument
+.IR uts ,
+enables an upper bound to be placed on the time for which
+the process is suspended.
+This argument is of the following type:
+.sp
+.in +2n
+.nf
+struct timespec {
+    long    tv_sec;         /* seconds */
+    long    tv_nsec;        /* nanoseconds */
+}
+.fi
+.in -2n
+.sp
+If both fields of this structure are specified as 0, a poll is performed:
+.BR rt_sigtimedwait ()
+returns immediately, either with information about a signal that
+was pending for the caller, or with an error
+if none of the signals in
+.I uthese
+was pending.
+.SH "RETURN VALUE"
+On success, 
+.BR rt_sigtimedwait ()
+returns a signal number (i.e., a value greater than zero).
+On failure, returns one of the values from the ERRORS section below.
+.SH ERRORS
+.TP
+.B -EAGAIN
+No signal in
+.I uthese
+was delivered within the
+.I uts
+period specified to
+.BR sigtimedwait ().
+.TP
+.B -EINVAL
+.I uts
+or
+.I uthese
+was invalid.
+.TP
+.B -EFAULT
+memory error.
+.TP
+.B -EAGAIN
+The wait was interrupted by a signal handler and the 
+.I timeout
+period has expired.
+.TP
+.B -EINTR
+The wait was interrupted by a signal handler.
+(This handler was for a signal other than one of those in
+.IR set .)
+.SH "CONFORMING TO"
+POSIX 1003.1-2001
+.SH "SEE ALSO"
+.BR kill (2),
+.BR sigaction (2),
+.BR signal (2),
+.BR sigpending (2),
+.BR sigprocmask (2),
+.BR sigqueue (2),
+.BR signal (7),
+.BR sigsetops (3),
+.BR sigtimedwait (2)
