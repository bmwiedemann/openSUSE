-------------------------------------------------------------------
Thu Mar 19 07:44:57 UTC 2020 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Add aprofutil.exe.mdb and remove aprofutil.pdb, mdoc.exe and 
  monolinker.* from file list for aarch64 and ppc64/ppc64le

-------------------------------------------------------------------
Tue Feb  4 09:36:01 UTC 2020 - Mathias Homann <Mathias.Homann@opensuse.org>

- Update to the most current mono release, 6.8.0.96.
  for changes, please refer to the commits log on github: https://github.com/mono/mono/commits/master 

-------------------------------------------------------------------
Fri Jan 17 12:16:41 UTC 2020 - Berthold Gunreben <azouhr@opensuse.org>

- enable btls for s390x
- remove stale symlinks to prevent from brp-25-symlink errors

-------------------------------------------------------------------
Tue Dec  3 00:12:48 UTC 2019 - Philipp Seiler <p.seiler@linuxmail.org>

- removed a few internal dependencies because rpms internal dependency
  search accidently added those to the package

-------------------------------------------------------------------
Wed Nov 20 21:11:38 UTC 2019 - Philipp Seiler <p.seiler@linuxmail.org>

- update to new version 6.4.0
- removed libtest.patch because it was fixed upstream
- New features and changes:
 * Highlights
    C# compiler support for C# 8 language version
    .NET Standard 2.1 support
    Updated libgdiplus to 6.0.2
    Notarized macOS installer package

* Hardened Runtime and Notarization support on macOS
    The Mono binary installed by the .pkg for macOS is now using the Hardened Runtime capabilities and the package was notarized to comply with Apple’s new restrictions: https://developer.apple.com/documentation/security/notarizing_your_app_before_distribution.
    This allows the package to work on the upcoming macOS 10.15 Catalina without showing warning dialogs.

* Interpreter improvements
    The Mono interpreter was updated to support the Windows operating system.
    We also completed a lot of groundwork for upcoming future optimizations in the interpreter, like constant folding.

* Bitness independent AOT cross compiler
    The Ahead-Of-Time (AOT) cross compiler was updated to no longer require being executed with the same bitness that it should generate code for. This means a 64bit Mono can now emit AOT code for 32bit targets.
    
    This work was mainly done to support executing the AOT cross compiler on macOS 10.15 Catalina (which is 64bit only) as we still need to generate code for 32bit targets like older iPhone and Apple Watch devices.

* WebAssembly
    We continue to work on making our WebAssembly support better. Various sets of issues with the debugger have been resolved in this release and general performance and feature work is happening as well.

* LLVM improvements
    We now leave it up to the LLVM framework to insert safepoints. Later optimizations can understand safepoints then which leads to better generated code. See https://github.com/mono/mono/pull/11789
    The LLVM backend is also supported on the Windows operating system now.

* PPC JIT optimizations
    The PowerPC JIT received a bunch of optimization from community contributor Calvin Buckley (@NattyNarwhal).

* Experimental build support for Fuchsia
    A very minimal and experimental support for building Mono targeting the Fuchsia OS landed in the build system.

* .NET Standard 2.1 support
    We updated our class libraries to support the latest additions to .NET Standard. You can now run a library compiled against the .NET Standard 2.1 specification on Mono.

* CoreFX integration
    We continued to replace some of our classes with the implementation from CoreFX to improve performance and compatibility with .NET.

* libgdiplus update to 6.0.2
    The libgdiplus native library is used for implementing System.Drawing on Unix platforms. This release contains many important improvements from our community members.

* System.Windows.Forms
    More fixes and layout improvements for different controls made by external contributors have landed in this release .

* C# 8 language version support in csc and msbuild
    The C# compiler and msbuild tooling were updated to versions that support the final C# 8 language specification.
    The Default Interface Methods (DIM) feature also received a few runtime enhancements.

* NuGet
    Bundled NuGet version has been upgraded to 5.2 RTM.

- Resolved Issues
   * gh#mono/mono#7377 - [Mono.Debugger.Soft] Connections are not properly closed
   * gh#mono/mono#7452 - Download link for macOS is osbsolete (5.8 instead of 5.10)
   * gh#mono/mono#7845 - Don’t install monograph
   * gh#mono/mono#8360 - [System.Net.Sockets] flakey failures of SocketTest.TestSelect1 on Darwin systems
   * gh#mono/mono#8486 - struct with 3 bytes not marshaled correctly with LLVM on watchOS
   * gh#mono/mono#8747 - FileSystemWatcher calls event after it is Disposed
   * gh#mono/mono#9267 - Release tarballs should be compressed with xz
   * gh#mono/mono#9621 - 64 bit cross compilers targeting 32 bit platforms
   * gh#mono/mono#9664 - DateTime.Now or Timezone information do not transition out of DST for all time zones
   * gh#mono/mono#10101 - ref local of jagged array leads to InvalidProgramException
   * gh#mono/mono#10277 - [Reflection] Event accessors don’t inherit ReflectedType
   * gh#mono/mono#10645 - WebException is thrown when reading from WebException.Response.GetResponse() stream
   * gh#mono/mono#11431 - Add Brotli compression to existing System.IO.Compression assembly
   * gh#mono/mono#11489 - IronPython 2.7.9 strange issue on mono 5.16
   * gh#mono/mono#11643 - mkbudle problem - Illegal byte sequence
   * gh#mono/mono#12157 - new DriveInfo(Path.GetTempPath()) crashes on macOS
   * gh#mono/mono#12182 - LLVM AOT caches require SSE4.1-capable CPU
   * gh#mono/mono#12747 - System.Reflection.Emit.ParameterBuilder.SetCustomAttribute() throws undocumented ArgumentOutOfRangeException
   * gh#mono/mono#12831 - [iOS] Generic sharing with long float arguments list
   * gh#mono/mono#12839 - [Windows] block_guard_restore_aligment_on_exit.exe frequently times out on CI
   * gh#mono/mono#12843 - Mono Android debugger crashes using HttpClient wrapped in Async Method
   * gh#mono/mono#12871 - wasm var co = new System.Net.CookieContainer(); error System.DllNotFoundException: libc
   * gh#mono/mono#12881 - MonoDevelop SDB regressions
   * gh#mono/mono#12945 - corlib-xunit tests taking 10x longer in the coop configuration
   * gh#mono/mono#12964 - [debugger][wasm] Assertion at mono/metadata/loader.c:2500, condition ‘' not met
   * gh#mono/mono#12981 - [WASM] Transform.c:2856, condition `' not met
   * gh#mono/mono#12988 - [WASM] LLVM failed for ‘ObservableCollectionExtensions.InternalUpdate’: incoming phi sreg1
   * gh#mono/mono#12998 - [WASM] llvmonly-runtime.c:804, condition `' not met
   * gh#mono/mono#13028 - FSharpType.IsUnion broken inside of F# Interactive due to missing System.Reflection.Emit.AssemblyBuilder.ReflectionOnly implementation
   * gh#mono/mono#13030 - Directory.GetLogicalDrives () missing SystemNative_GetAllMountPoints pal function
   * gh#mono/mono#13056 - AV inside mono_local_cprop+0x23f
   * gh#mono/mono#13150 - [WinForms] Related Forms closing
   * gh#mono/mono#13163 - Task: Use async DNS resolution in Socket and web stack code.
   * gh#mono/mono#13195 - [wasm][ci] Intermittent failures with ChakraCore Tests
   * gh#mono/mono#13224 - iOS SDKs test app build doesn’t work when not in sdks/ios directory
   * gh#mono/mono#13231 - CGPattern causes “Attempting to JIT compile method” exception since VS 7.5
   * gh#mono/mono#13250 - Setting CustomErrorsMode for RemotingConfiguration throws NotImplementedException
   * gh#mono/mono#13261 - [sdb] StackOverflow when invoking many methods from client debugger
   * gh#mono/mono#13282 - [SWF] Method OnClosed should pass FormClosedEventArgs type, instead of EventArgs
   * gh#mono/mono#13284 - Checked ulong relational operation throws wrong OverflowException on armeabi-v7a
   * gh#mono/mono#13297 - [WASM] decompose.c:1471, condition `cfg->cbb == first_bb’ not met
   * gh#mono/mono#13311 - [sdb] Failure to suspend
   * gh#mono/mono#13319 - Crash executing static methods on interfaces
   * gh#mono/mono#13350 - MemberInfo.ReflectedType returns wrong reflected type for an event method
   * gh#mono/mono#13374 - Crash executing default implemented property in interface
   * gh#mono/mono#13412 - Bump netstandard.dll assembly version to 2.1
   * gh#mono/mono#13445 - Fork regression in Mojave due to MAP_JIT
   * gh#mono/mono#13452 - [Linux] Mono (5.18.0.268) crashes in String:IndexOf(char value, int startIndex)
   * gh#mono/mono#13454 - watchOS apps crash on launch if built with LLVM
   * gh#mono/mono#13455 - AOT crashes with “MVAR 0 (Ts) cannot be expanded with type 0x1e” when compiling monotouch_System.Core_xunit-test.dll
   * gh#mono/mono#13460 - AOT crashes with “Instruction does not dominate all uses” when compiling monotouch_System.Core_xunit-test.dll
   * gh#mono/mono#13463 - [WASM] Mixed Mode: function signature mismatch
   * gh#mono/mono#13466 - Crash at runtime likely related to protected accessibility of a method declared in an interface.
   * gh#mono/mono#13467 - Unexpected System.MethodAccessException is thrown for a protected method declared in an interface
   * gh#mono/mono#13478 - Undefined symbol ___sync_lock_test_and_set_4 on armv7 in xamarin-macios 2019-02
   * gh#mono/mono#13479 - System.Runtime.CompilerServices.UnsafeTests attempting to JIT compile on iOS devices
   * gh#mono/mono#13508 - ILAsm: adds ‘virtual’ attribute to sealed default interface methods
   * gh#mono/mono#13522 - AOT issue on WatchOS: “* Assertion at mini-llvm.c:9381, condition `fields [2 + i]’ not met “
   * gh#mono/mono#13526 - The repl (monotouch_tv_runtime) assemblies don’t work for tvOS
   * gh#mono/mono#13597 - Runtime Error when using span on LeetCode
   * gh#mono/mono#13607 - Assertion in xamarin-macios link sdk test: “mini-generic-sharing.c:568, condition `is_ok (error)’ not met, function:inflate_info, Could not inflate generic type, due to MVAR 0 (T_ULONG) cannot be expanded with type 0x1e”
   * gh#mono/mono#13610 - Returning tuple broken when enabling fullAOT+LLVM
   * gh#mono/mono#13639 - mono-cil-strip crashes when called against the monotouch_Microsoft.CSharp_xunit-test.dll
   * gh#mono/mono#13654 - Interpreter Crash When Doing Fancy Reflection
   * gh#mono/mono#13672 - [2019-02] Xamarin.Android runtime tests crash on free
   * gh#mono/mono#13714 - Exception during static constructor loading is not cleaned up
   * gh#mono/mono#13775 - New Mono drop crashing in C# symbol tests
   * gh#mono/mono#13787 - [wasm] Uint8ClampedArray.From(byte[]) invalid cast
   * gh#mono/mono#13804 - [MacSDK] pkg-config is 32-bit only
   * gh#mono/mono#13834 - Mac crash reports do not give the right SizeOfImage
   * gh#mono/mono#13878 - System.Reflection.Emit.DynamicMethod:CreateDelegate (?) crashes XM apps when under hardened runtime
   * gh#mono/mono#13888 - (FullAOT) Ran out of trampolines of type 3
   * gh#mono/mono#13889 - [llvm] Bounds checks are not eliminated
   * gh#mono/mono#13923 - [DIM] [CoreCLR Test] boring not working
   * gh#mono/mono#13925 - [DIM] [CoreCLR Test] abstractcalls not working
   * gh#mono/mono#13941 - Crash During AOT of ASP.NET Core Assemblies
   * gh#mono/mono#13974 - mono: symbol lookup error: /usr/lib/libmono-llvm.so: undefined symbol: mono_class_get_generic_class
   * gh#mono/mono#14005 - Method mono_type_is_generic_parameter is not exposed in shared libraries
   * gh#mono/mono#14079 - Interpreter Crash on Reference Source System.Web.Extensions
   * gh#mono/mono#14143 - Techempower Platform Plaintext Hangs on Every Request using LLVM JIT
   * gh#mono/mono#14170 - “Fatal signal 11 (SIGSEGV), code 1 (SEGV_MAPERR)” after debugger pauses and then continues on nested exception
   * gh#mono/mono#14181 - Pango modules.cache contains jenkins builder path
   * gh#mono/mono#14195 - 5.20.1.19 configure fails if enable-cxx but no C++ compiler found
   * gh#mono/mono#14214 - HttpClient.SendAsync() with > 2 GB response body.
   * gh#mono/mono#14215 - Suggestion: switch to 7z native format instead of ZIP for Mono archives
   * gh#mono/mono#14234 - SqliteMembershipProvider initialization bug (Failed to map path ‘/’).
   * gh#mono/mono#14243 - [Wasm] Assertion at mini-llvm.c:2106, condition 'clause->flags == MONO_EXCEPTION_CLAUSE_NONE || clause->flags == MONO_EXCEPTION_CLAUSE_FINALLY || clause->flags == MONO_EXCEPTION_CLAUSE_FAULT' not met
   * gh#mono/mono#14246 - Interpreter crashes when encountering build-in types
   * gh#mono/mono#14247 - Assertion on 32-bit iOS device with thumb code
   * gh#mono/mono#14255 - Copying from Mono port of Windows Forms doesn’t work in some programs on Linux
   * gh#mono/mono#14261 - LLVM Generates Wrong IndexOf Span code
   * gh#mono/mono#14290 - [ios] Non-public API usage when submitting app
   * gh#mono/mono#14543 - Decoded custom attribute values leak the encoded value receiver
   * gh#mono/mono#14551 - Result for EnumCompareTo differs from Core implementation
   * gh#mono/mono#14585 - [tests] Don’t send HTTP requests to Google
   * gh#mono/mono#14669 - mempool allocate bug?
   * gh#mono/mono#14729 - interpreter tests fail on iOS and tvOS for mscorlib tests
   * gh#mono/mono#14792 - [sdks][ios] Perform the appropriate cast of objc_msgSend and friends
   * gh#mono/mono#14793 - Mono-Native not working on MacOS Catalina
   * gh#mono/mono#14809 - Cannot box IsByRefLike type 'System.ReadOnlySpan'1' in Forms designer tests with 6.0
   * gh#mono/mono#14839 - [xamarin] TimeZoneInfo.Local always returns “Local” name
   * gh#mono/mono#14841 - opt: Unknown command line argument ‘-place-safepoints’ in XI 2019-06 integration
   * gh#mono/mono#14871 - [wasm] System.Text.Json struct serialization fails (but works on CoreCLR)
   * gh#mono/mono#14872 - System.Runtime.CompilerServices.UnsafeTests.ReadWriteDoublePointer test failure on devices in Xamarin.iOS
   * gh#mono/mono#14972 - Xamarin.iOS: System.ExecutionEngineException: Attempting to JIT compile method ‘(wrapper delegate-begin-invoke) System.IAsyncResult System.Func`2<ExecutionEngineExceptionTest.AppDelegate, bool>:begin_invoke_IAsyncResult__this___T_AsyncCallback_object (ExecutionEngineExceptionTest.AppDelegate,System.AsyncCallback,object)’
   * gh#mono/mono#14975 - Mono profiler crashes when running IDE leak tests for VSMac
   * gh#mono/mono#15048 - [aot] Duplicate .fnstart Directive Compiler Error
   * gh#mono/mono#15058 - [2019-06][iOS] Several tests on iOS fail on a 32b device
   * gh#mono/mono#15261 - [iOS][Tests] There are a number of System.Numeric tests that fail on iOS 32b devices
   * gh#mono/mono#15262 - [iOS][Tests] A number of linq tests fail on iOS 32b devices
   * gh#mono/mono#15263 - [iOS][Tests] A number of tests from Microsoft.CSharp fail on iOS 32b devices.
   * gh#mono/mono#15265 - [watchOS][Tests] The System_xunit-test.dll for watchOS includes tests that should be ignored
   * gh#mono/mono#15307 - [iOS][Tests] Several corelib tests crash on iOS32b devices.
   * gh#mono/mono#15328 - [MacOS][Tests] Several tests fail due to a System.IO exception
   * gh#mono/mono#15329 - [MacOS Modern][Tests] System.IO.AnonymousPipe tests are included when they are not supported.
   * gh#mono/mono#15330 - Runtime deadlock
   * gh#mono/mono#15366 - StringBuilder marshalling bug
   * gh#mono/mono#15441 - “pos undeclared” compilation error
   * gh#mono/mono#15692 - Catching IndexOutOfRange doesn’t provide message
   * gh#mono/mono#15751 - Memory leak in mono 6.0.0.313 for delegates with target that are passed to native code
   * gh#mono/mono#15825 - DeflateStream leaks native memory if not explicitly disposed
   * gh#mono/mono#15878 - Crash in mono_coop_mutex_lock while running VS for Mac
   * gh#mono/mono#15887 - [regression] File.GetLastWriteTime fails with specific (GMT+8) timezone
   * gh#mono/mono#15999 - [mini] run regression tests with fullaot+llvm
   * gh#mono/mono#16010 - typeof(object).GetMember(“”) does not return an empty array
   * gh#mono/mono#16024 - Native crash in ves_icall_System_Net_Sockets_Socket_Connect_internal
   * gh#mono/mono#16032 - IOException: Sharing violation on path …
   * gh#mono/mono#16122 - VS 16.2.0 regression: CopyToAsync from DeflateStream to GzipStream throws NotImplementedException
   * gh#mono/mono#16486 - FileSystemEventArgs.FullPath throws ArgumentNullException
   * gh#mono/mono#16712 - SIGSEGV in mono_class_setup_vtable_general

-------------------------------------------------------------------
Wed Apr 24 17:25:10 UTC 2019 - Martin Liška <mliska@suse.cz>

- Disable LTO (boo#1133266).

-------------------------------------------------------------------
Fri Apr 12 00:00:00 UTC 2019 - fwdsbs.to.11df@xoxy.net
- Update to version 5.20.1 Stable (5.20.1.19)
- Patch fix-dbg-headers.patch was updated
- Patch ucontext.patch was removed
- Added libtest.patch from upstream: fix build failure
- New features and changes:
  * System.Data: the support for SSPI (Security Support Provider Interface) in System.Data assembly has been added. Additional package (krb5) needs to be installed in order to use this feature.
- Bugfixes:
  * gh#mono/mono#10000 - Type.IsSubclassOf Performance Regression
  * gh#mono/mono#10031 - unhandled-exception-2.exe crashes crash reporting
  * gh#mono/mono#10035 - BinaryReaderTest.ReadBytesException and BinaryReaderTest.ReadCharsException fail on FullAOT+LLVM after hybrid suspend change
  * gh#mono/mono#10070 - recent string loading changes break big endian with mojibake
  * gh#mono/mono#10143 - Process.GetProcessesByName Memory Leak, Not Disposing Filtered Process Objects
  * gh#mono/mono#10144 - Generic with “unmanaged” constraint crashes runtime
  * gh#mono/mono#10227 - ProductHeaderValue parser throws exception for empty values
  * gh#mono/mono#10243 - opt and llc missing from mono 2018-08 pkg
  * gh#mono/mono#10244 - [wasm] Make test.js use generated driver and bindings.
  * gh#mono/mono#10303 - Latest mono on macOS broke Xamarin Studio 5 compatibility: Marshal.SizeOf reports type 0x01 not handled
  * gh#mono/mono#10309 - Mono issuing SIGSEGV running C# Semantic Tests
  * gh#mono/mono#10412 - Native crash when debugging with exception watchpoint
  * gh#mono/mono#10441 - FullAOT LLVM Linux x64 one flaky failure.
  * gh#mono/mono#10446 - [ WASM ]Build fail host error
  * gh#mono/mono#10448 - [iOS] CalendarTest.Hijri and CalendarTest.UmAlQura fail
  * gh#mono/mono#10467 - mono_thread_info_exit ignores exit_code and just passes 0 on.
  * gh#mono/mono#10483 - iOS cannot save Entity models with Nullable Guid (Guid?) property types (among others) using EF Core 2.1.2.
  * gh#mono/mono#10488 - HttpWebRequest throws an uncatchable task exception when processing requests simultaneously with timeout specified
  * gh#mono/mono#10506 - Update CI build scripts to not hardcode -j4
  * gh#mono/mono#10549 - Wrong characters in decimal number representation on s390x
  * gh#mono/mono#10598 - Many scary “Your mono runtime and class libraries are out of sync” mono warnings when building for device
  * gh#mono/mono#10603 - [wasm] Stop using mmap for loading assemblies
  * gh#mono/mono#10620 - [wasm] Rename sdks WebAssembly framework libraries
  * gh#mono/mono#10682 - [wasm] Build fails - ninja can not be found.
  * gh#mono/mono#10735 - mono64[80780:1186894] error: * Assertion: should not be reached at debugger-agent.c:6619
  * gh#mono/mono#10802 - mono_jit_init on macOS 10.14 has graphics corruption due to mprotect invocation
  * gh#mono/mono#10834 - Error loading generic override of in parameter
  * gh#mono/mono#10863 - Possible GC hang while building msbuild with mono/2018-08 and mono/master
  * gh#mono/mono#11123 - Type.IsSubclassOf throws TypeLoadException
  * gh#mono/mono#11138 - Hybrid suspend: mono_add_internal_call is broken
  * gh#mono/mono#11146 - Unhandled exception at the end of MonoDevelop.UnitTesting.Tests test run
  * gh#mono/mono#11202 - Mac installer does not always clear out old files
  * gh#mono/mono#11214 - SDK ‘Microsoft.NET.Sdk.Razor’ not found
  * gh#mono/mono#11303 - ParameterInfo.[Raw]DefaultValue returns Missing.Value for non-null default values of DateTime? and decimal? parameters
  * gh#mono/mono#11317 - Unexpected behaviour of DateTime.ToString with Korean language on iOS/Android
  * gh#mono/mono#11378 - [WASM AOT] Method returning a ValueType is not returning its value as a value
  * gh#mono/mono#11441 - HttpClient requests not cancelled in Dispose()
  * gh#mono/mono#11478 - [XA] [2018-10] Failure in PropertyInfoTests.GetValue_Invalid
  * gh#mono/mono#11479 - Loading assembly generated using tlbimp.exe give error in mono runtime
  * gh#mono/mono#11489 - IronPython 2.7.9 strange issue on mono 5.16
  * gh#mono/mono#11613 - AOT crash: error: * Assertion: should not be reached at ../../../../../mono/mini/mini-arm64-gsharedvt.c:119
  * gh#mono/mono#11874 - watchOS: mini test failure in release mode: JitTests.Aot : System.Reflection.TargetInvocationException
  * gh#mono/mono#11956 - os-event-unix.c:82 assert(event) failure
  * gh#mono/mono#11965 - [iOS/32bit/device] mscorlib test failures: DoubleFormatterTest.TestFormatStringsN# and DoubleTest.LongLongValueRoundtrip
  * gh#mono/mono#12069 - MethodInfo.ReturnParameter.IsDefined(type) throws IndexOutOfRangeException
  * gh#mono/mono#12130 - [watchOS] MT3001: Could not AOT the assembly mscorlib.dll
  * gh#mono/mono#12235 - Crash while profiling roslyn compiler server
  * gh#mono/mono#12344 - FastCopy may silently fail to do anything
  * gh#mono/mono#12362 - Problem with DefaultValueAttribute and Color values
  * gh#mono/mono#12421 - Task calls SynchronizationContext.Post on cancelling
  * gh#mono/mono#12461 - ReflectionModelServices.IsExportFactoryImportDefinition should not throw
  * gh#mono/mono#12724 - xtro-sharpie.exe crashes with “Cannot transition thread 0x10c3ef5c0 from STATE_BLOCKING with DO_BLOCKING”
  * gh#mono/mono#12747 - System.Reflection.Emit.ParameterBuilder.SetCustomAttribute() throws undocumented ArgumentOutOfRangeException
  * gh#mono/mono#12831 - [iOS] Generic sharing with long float arguments list
  * gh#mono/mono#12881 - MonoDevelop SDB regressions
  * gh#mono/mono#6352 - Bug in TextRenderer.DrawText on Linux
  * gh#mono/mono#7087 - Calling TcpListener.Create(int port) on multiple threads can fail
  * gh#mono/mono#8225 - Mono mkbundle output executable throws: “Error mapping file: No error”
  * gh#mono/mono#8486 - struct with 3 bytes not marshaled correctly with LLVM on watchOS
  * gh#mono/mono#8575 - GetCustomAttributes on a type from an assembly in the LoadFile context fails
  * gh#mono/mono#8689 - Memory leak in HttpWebRequest / HttpWebResponse when using a WebProxy
  * gh#mono/mono#8766 - Starting process with empty ProcessStartInfo.Environment incorrectly inherits all variables
  * gh#mono/mono#8848 - Error when debugging
  * gh#mono/mono#9028 - Mono to SQL Server using integrated security no longer works on iOS
  * gh#mono/mono#9089 - WaitHandle.WaitAny returns invalid result
  * gh#mono/mono#9418 - SslStream.AuthenticateAsClient throws wrong exception types
  * gh#mono/mono#9532 - Mono.Unix.Native.Syscall.sys_strerror_r SEGFAULT on musl libc
  * gh#mono/mono#9566 - flaky runtime.finalizer-exception.exe (Assertion at unwind.c:640, condition `cfa_reg != -1’ not met)
  * gh#mono/mono#9581 - Update macOS minimal version
  * gh#mono/mono#9839 - Behaviour difference between Mono and CoreCLR
  * gh#mono/mono#9870 - iOS: 32-bit device unit test failure: [FAIL] FSharpTest.SprintfTest : Expected: True
  * gh#mono/mono#9935 - tests/src/baseservices/threading/readerwriterlockslim/upgrader.cs CoreCLR acceptance-test fails
  * gh#mono/mono#9941 - WASM: Use BrowserHttpMessageHandler when available
  * gh#mono/mono#9943 - System.Reflection.Assembly.LoadFile should throw ArgumentException for relative path name
  * gh#mono/mono#9947 - AOT images compiled with safepoints should be usable with MONO_THREADS_SUSPEND=preemptive
  * gh#mono/mono#9951 - cross build regressed wrt System.Native and “shm_open that works well enough with mmap”
  * gh#mono/mono#9973 - Update framework facades list used by loader
  * bxc#43447 - SynchronizedCollection.Add throws an ArgumentOutOfRangeException

-------------------------------------------------------------------
Thu Feb 14 00:00:00 UTC 2019 - fwdsbs.to.11df@xoxy.net

- Update to version 5.18.0.240, release skipped
- New features and changes:
  * AOT: Few hard to track race conditions in trampolines unboxing for AOT backend targetting amd64 were fixed
  * Interpreter: Added low-level optimizations, support Xamarin native types (nint/nuint)
  * Custom Marshalers: The logic handling custom marshalers, types implementing IICustomMarshaler has been mostly rewritten
  * Optimizations: The intrinsics built on top of SSE41 for Math.Round/Math.Floor/Math.Ceiling were added
  * Windows: Mono Windows cross-compiler is using the same LLVM release branch as Linux resolving issues in scenarios where llvm-config.exe can’t be run (none WSL/CygWin build target)
  * CoreFX convergence: more CoreFX code was imported in particular in System.Reflection namespace, Many common types in mscorlib System namespace are now fully CoreFX based including System.Math
  * Mono.Options: A new CommandSet.GetCompletions() method was introduced
  * System.Runtime.InteropServices: It’s now possible to use RuntimeInformation API to detect ARM and ARM64 platforms
  * MSBuild: Reference assemblies for .NET 4.7.2 are included to allow targeting .NET Framework 4.7.2 using MSBuild on Mono
- Bugfixes:
  * gh#mono/mono#6352 - Bug in TextRenderer.DrawText on Linux
  * gh#mono/mono#7087 - Calling TcpListener.Create(int port) on multiple threads can fail
  * gh#mono/mono#8575 - GetCustomAttributes on a type from an assembly in the LoadFile context fails
  * gh#mono/mono#8689 - Memory leak in HttpWebRequest / HttpWebResponse when using a WebProxy
  * gh#mono/mono#8766 - Starting process with empty ProcessStartInfo.Environment incorrectly inherits all variables
  * gh#mono/mono#8848 - Error when debugging
  * gh#mono/mono#9028 - Mono to SQL Server using integrated security no longer works on iOS
  * gh#mono/mono#9089 - WaitHandle.WaitAny returns invalid result
  * gh#mono/mono#9532 - Mono.Unix.Native.Syscall.sys_strerror_r SEGFAULT on musl libc
  * gh#mono/mono#9566 - flaky runtime.finalizer-exception.exe (Assertion at unwind.c:640, condition `cfa_reg != -1’ not met)
  * gh#mono/mono#9581 - Update macOS minimal version
  * gh#mono/mono#9839 - Behaviour difference between Mono and CoreCLR
  * gh#mono/mono#9870 - iOS: 32-bit device unit test failure: [FAIL] FSharpTest.SprintfTest : Expected: True
  * gh#mono/mono#9935 - tests/src/baseservices/threading/readerwriterlockslim/upgrader.cs CoreCLR acceptance-test fails
  * gh#mono/mono#9941 - WASM: Use BrowserHttpMessageHandler when available
  * gh#mono/mono#9943 - System.Reflection.Assembly.LoadFile should throw ArgumentException for relative path name
  * gh#mono/mono#9947 - AOT images compiled with safepoints should be usable with MONO_THREADS_SUSPEND=preemptive
  * gh#mono/mono#9973 - Update framework facades list used by loader
  * gh#mono/mono#10000 - Type.IsSubclassOf Performance Regression
  * gh#mono/mono#10031 - unhandled-exception-2.exe crashes crash reporting
  * gh#mono/mono#10035 - BinaryReaderTest.ReadBytesException and BinaryReaderTest.ReadCharsException fail on FullAOT+LLVM after hybrid suspend change
  * gh#mono/mono#10070 - recent string loading changes break big endian with mojibake
  * gh#mono/mono#10143 - Process.GetProcessesByName Memory Leak, Not Disposing Filtered Process Objects
  * gh#mono/mono#10144 - Generic with “unmanaged” constraint crashes runtime
  * gh#mono/mono#10227 - ProductHeaderValue parser throws exception for empty values
  * gh#mono/mono#10243 - opt and llc missing from mono 2018-08 pkg
  * gh#mono/mono#10244 - [wasm] Make test.js use generated driver and bindings.
  * gh#mono/mono#10303 - Latest mono on macOS broke Xamarin Studio 5 compatibility: Marshal.SizeOf reports type 0x01 not handled
  * gh#mono/mono#10309 - Mono issuing SIGSEGV running C# Semantic Tests
  * gh#mono/mono#10412 - Native crash when debugging with exception watchpoint
  * gh#mono/mono#10441 - FullAOT LLVM Linux x64 one flaky failure.
  * gh#mono/mono#10446 - [ WASM ]Build fail host error
  * gh#mono/mono#10448 - [iOS] CalendarTest.Hijri and CalendarTest.UmAlQura fail
  * gh#mono/mono#10467 - mono_thread_info_exit ignores exit_code and just passes 0 on.
  * gh#mono/mono#10483 - iOS cannot save Entity models with Nullable Guid (Guid?) property types (among others) using EF Core 2.1.2.
  * gh#mono/mono#10488 - HttpWebRequest throws an uncatchable task exception when processing requests simultaneously with timeout specified
  * gh#mono/mono#10506 - Update CI build scripts to not hardcode -j4
  * gh#mono/mono#10549 - Wrong characters in decimal number representation on s390x
  * gh#mono/mono#10598 - Many scary “Your mono runtime and class libraries are out of sync” mono warnings when building for device
  * gh#mono/mono#10603 - [wasm] Stop using mmap for loading assemblies
  * gh#mono/mono#10620 - [wasm] Rename sdks WebAssembly framework libraries
  * gh#mono/mono#10682 - [wasm] Build fails - ninja can not be found.
  * gh#mono/mono#10802 - mono_jit_init on macOS 10.14 has graphics corruption due to mprotect invocation
  * gh#mono/mono#10863 - Possible GC hang while building msbuild with mono/2018-08 and mono/master
  * gh#mono/mono#11123 - Type.IsSubclassOf throws TypeLoadException
  * gh#mono/mono#11138 - Hybrid suspend: mono_add_internal_call is broken
  * gh#mono/mono#11146 - Unhandled exception at the end of MonoDevelop.UnitTesting.Tests test run
  * gh#mono/mono#11202 - Mac installer does not always clear out old files
  * gh#mono/mono#11214 - SDK ‘Microsoft.NET.Sdk.Razor’ not found
  * gh#mono/mono#11303 - ParameterInfo.[Raw]DefaultValue returns Missing.Value for non-null default values of DateTime? and decimal? parameters
  * gh#mono/mono#11378 - [WASM AOT] Method returning a ValueType is not returning its value as a value
  * gh#mono/mono#11441 - HttpClient requests not cancelled in Dispose()
  * gh#mono/mono#11478 - [XA] [2018-10] Failure in PropertyInfoTests.GetValue_Invalid
  * gh#mono/mono#11479 - Loading assembly generated using tlbimp.exe give error in mono runtime
  * gh#mono/mono#11613 - AOT crash: error: * Assertion: should not be reached at ../../../../../mono/mini/mini-arm64-gsharedvt.c:119
  * gh#mono/mono#11874 - watchOS: mini test failure in release mode: JitTests.Aot : System.Reflection.TargetInvocationException
  * bxc#43447 - SynchronizedCollection.Add throws an ArgumentOutOfRangeException

-------------------------------------------------------------------
Thu Nov 08 00:00:00 UTC 2018 - fwdsbs.to.11df@xoxy.net

- Update to version 5.16.0.179 (5.16.0 Stable)
- Remove patch: fix-64bit-portability-issue.patch
- New features and changes:
  * LLVM: a new option llvmopts has been added to allow override the built-in set of flags passed to the LLVM optimizer
  * Response files support: a response file is a plain-text file that contains strings to be treated as arguments for mono runtime, activated with "--response=FILE" option
  * Assembly loader: the loading of mixed strong named and non-strong names assemblies has been improved to further match .NET desktop behaviour
  * Hybrid suspend: hybrid suspend is a new mechanism that Mono’s garbage collector may use to pause threads when during garbage collection
  * 32-bit floating operations: performing 32-bit floating operations using 32-bit math is now the default settings for the runtime
  * The debugger library: the runtime can be configured using --enable-minimal=soft_debug option and the debugger code will be compiled into a separate libmono-dbg.a library. The library needs to be linked into the app if needed
  * Custom modifiers enhancements: fixed a few issues in handling custom modifiers, especially around type equality with custom modifiers
  * Optimizations: various optimizations for Span<T>, ReadOnlySpan<T>, EqualityComparer<T>.Equals, Enum.HasFlags
  * CoreFX convergence: fully replaced System.Xml.Linq, System.Json, System.Threading.Tasks.Dataflow, System.ServiceModel.Syndication assemblies and System.Net.Mail, System.ComponentModel, System.Text.Encoding namespaces
  * Client certificate support: added support for client certificates for authentication as well as making requests to web servers that use TLS renegotiation
  * System.MathF type: the single-precision math operations are now available in a new System.MathF class
  * Prettier exception stack-traces: prettier exception printer, especially for generated code stack traces, improvements for async exceptions
  * Mono.Options: the arbitrary command nesting is now supported
  * C# compiler: the Roslyn compiler (csc) has been updated to version 2.8.2 which includes C# 7.3 support
  * sn: the sn tool, the utility for signing assemblies, has been updated to support signing PE32+ assemblies
  * mkbundle: mkbundle has been extended to allow further customization of Mono runtime initialization sequence
- Bugfixes:
  * gh#mono/mono#10000 - Type.IsSubclassOf Performance Regression
  * gh#mono/mono#10143 - Process.GetProcessesByName Memory Leak, Not Disposing Filtered Process Objects
  * gh#mono/mono#10309 - Mono issuing SIGSEGV running C# Semantic Tests
  * gh#mono/mono#10483 - iOS cannot save Entity models with Nullable Guid (Guid?) property types (among others) using EF Core 2.1.2.
  * gh#mono/mono#6173 - Periodic heapshot mode calculates time difference incorrectly
  * gh#mono/mono#6466 - System.Diagnostics.ProcessTest.Start1_FileName_NotFound failing on newer Ubuntu
  * gh#mono/mono#6647 - Jagged arrays cannot be cast to IList<>
  * gh#mono/mono#6834 - Frequent timing out of the ‘monitor-abort’ tests on CI
  * gh#mono/mono#6936 - Mono runtime doesn’t check modreqs for overriding methods
  * gh#mono/mono#7058 - [interp] pinvoke.exe is flaky
  * gh#mono/mono#7137 - Step in crashes debugger
  * gh#mono/mono#7247 - CoreFX System.Text namespace
  * gh#mono/mono#7260 - StackTrace.GetFrames() does not return frames from captured traces
  * gh#mono/mono#7305 - Stack overflow when hosting a WCF service when contract interface inherits other interfaces
  * gh#mono/mono#7356 - Memory leak in HttpWebRequest / HttpWebResponse
  * gh#mono/mono#7402 - [interp] fix System.Threading.ThreadTest.Test_Interrupt
  * gh#mono/mono#7525 - Profiler exception clause reporting is broken
  * gh#mono/mono#7610 - Add System.Memory facade
  * gh#mono/mono#7649 - Exception stacktrace is null when task delegate is created from local function
  * gh#mono/mono#7655 - Memory leak in file operations in mono 5.10
  * gh#mono/mono#7683 - Assertion at /Users/builder/data/lanes/5808/1c6f300e/source/xamarin-macios/external/mono/mono/profiler/log.c:546, condition `mono_lls_insert (&log_profiler.profiler_thread_list, hp, &thread->node) && “Why can’t we insert the thread in the LLS?”’ not met
  * gh#mono/mono#7685 - Assert ainfo->cinfo->stack_usage % MONO_ARCH_FRAME_ALIGNMENT == 0
  * gh#mono/mono#7716 - mono’s mscorlib.xml descriptor file seems incomplete for Xamarin.Mac
  * gh#mono/mono#7731 - MKBundle fails on Windows due to a folder check/missing folder
  * gh#mono/mono#7785 - Dead link (404) in a runtime execution engine exception
  * gh#mono/mono#7828 - Invalid instruction generated by regex runtime when using dapper
  * gh#mono/mono#7944 - CreateDelegate produces delegate wrapping incorrect method
  * gh#mono/mono#7947 - Missing forwarders from System.Runtime.Extensions
  * gh#mono/mono#8036 - Update API diff to ignore more attributes
  * gh#mono/mono#8074 - signing problems in preset fullaot build
  * gh#mono/mono#8089 - Add System.Drawing.Common facade for Xamarin profiles
  * gh#mono/mono#8112 - Wrong maximal instruction length of instruction tailcall_membase on ARM64
  * gh#mono/mono#8122 - CoreFX System.Xml.Linq
  * gh#mono/mono#8143 - CEE_STELEM for single token fails in wasm interp mode
  * gh#mono/mono#8149 - Assembly.LoadFile and Assembly.LoadFrom have same behavior
  * gh#mono/mono#8175 - Changing eglib doesn’t rebuild mono
  * gh#mono/mono#8177 - [wasm] master broken due to WASM-ERR: missing function: mono_debugger_agent_init
  * gh#mono/mono#8218 - SN fails when signing x64 assemblies
  * gh#mono/mono#8250 - assertion failure fullaot llvm System.Drawing.dll
  * gh#mono/mono#8267 - TimeZoneInfo.Local Id and DisplayName are always: Local
  * gh#mono/mono#8282 - [android] respect maximum length of a message when using __android_log_write ()
  * gh#mono/mono#8310 - FSharp build is broken due to new Path.GetFileName() overload
  * gh#mono/mono#8311 - bug-82022.exe fails in LLVM JIT
  * gh#mono/mono#8321 - Build break/test failures on FullAOT+LLVM configuration
  * gh#mono/mono#8329 - mono –interpreter got * Assertion at ..\mono\mini\interp\interp.c:3557, condition `csig->call_convention == MONO_CALL_DEFAULT’ not met
  * gh#mono/mono#8340 - Issue with black text on console, possibly ncurses
  * gh#mono/mono#8356 - Hybrid suspend: backtrace in GC Unsafe mode considered harmful (on Linux)
  * gh#mono/mono#8372 - unload-appdomain-on-shutdown.exe flaky test
  * gh#mono/mono#8407 - TypeDescriptorTest.TestCreateDesigner and TestGetAttributes broken on FullAOT
  * gh#mono/mono#8409 - FullAOT test failures/crashes on arm64,armel or armhf
  * gh#mono/mono#8417 - Redirecting process output when Console.SetOut set gives strange output
  * gh#mono/mono#8422 - Ambiguous call Encoding.GetByteCount(char[], int, int) and Encoding.GetByteCount(string, int, int)
  * gh#mono/mono#8430 - Fails to compile without AOT (enable-minimal=profiler,debug,aot)
  * gh#mono/mono#8447 - ilasm can’t assemble vbbyrefstr parameters
  * gh#mono/mono#8469 - API/Project Files diff renderer stops at XML end comment –>
  * gh#mono/mono#8473 - ThreadPoolTests.PerformanceCounter_WorkItems fails occasionally
  * gh#mono/mono#8488 - Doesn’t compile with Clang on ARM64
  * gh#mono/mono#8572 - Build fails on Redhat 6.8 with GCC 4.4.7
  * gh#mono/mono#8575 - GetCustomAttributes on a type from an assembly in the LoadFile context fails
  * gh#mono/mono#8587 - configure.ac G_HAVE_ISO_VARARGS problems
  * gh#mono/mono#8597 - System.Reflection.Emit: ParameterBuilder.SetConstant(value) throws ArgumentException for nullable value typed parameters
  * gh#mono/mono#8623 - Complete the System.Memory types import
  * gh#mono/mono#8698 - csharp REPL can’t load pkg-config references interactively
  * gh#mono/mono#8701 - AOT failure if ref readonly with generics is used
  * gh#mono/mono#8712 - FileSystemWatcher only works for one instance
  * gh#mono/mono#8721 - System.Threading.Tasks.TaskFactoryTests.FromAsync_BeginCallback failing under XM with 2018-04
  * gh#mono/mono#8726 - Loading denied assemblies via Assembly.LoadFrom can cause issues, eg. for VSMac
  * gh#mono/mono#8759 - Build of Master fails with GCC 4.4.7
  * gh#mono/mono#8787 - ThreadPrincipalTests.PrincipalFlowsToAsyncTask failure on device
  * gh#mono/mono#8820 - [loader] Mono is too strict when checking for already loaded assemblies.
  * gh#mono/mono#8848 - Error when debugging
  * gh#mono/mono#8866 - jit profiler option crashes iOS apps
  * gh#mono/mono#8897 - “Microsoft.Managed.Core.targets” is missing from roslyn-binaries
  * gh#mono/mono#8915 - Using BinaryFormatter to deserialize an array in a struct in a parent class fails with unfriendly exception [reproducible test case i promise]
  * gh#mono/mono#8979 - configure script incorrectly assumes functions are available with some conditions
  * gh#mono/mono#9002 - ServiceControllerTest.cs is designed to fail.
  * gh#mono/mono#9023 - Two ValueType properties initialization inline fails in mono-wasm
  * gh#mono/mono#9031 - HttpWebRequest.EndGetRequestStream throws wrong exception on abort
  * gh#mono/mono#9033 - DynamicMethod creation fails with “method arguments are incompatible”
  * gh#mono/mono#9179 - CI build breakage for 2018-04, msbuild
  * gh#mono/mono#9234 - [System]: Renegotiation in AppleTls requires OS X 10.12+
  * gh#mono/mono#9277 - Cannot get the exit code from a non-child process on Unix (on Windows)
  * gh#mono/mono#9318 - watchOS: “fastcc” not supported with Xcode 10’s clang
  * gh#mono/mono#9753 - [loader] LoadFile from application base should load in default context
  * gh#mono/mono#9839 - Behaviour difference between Mono and CoreCLR
  * gh#mono/mono#9869 - iOS: mini test failure in release/llvm mode (JitTests.Math: Expected: 0 But was: 1)
  * gh#mono/mono#9870 - iOS: 32-bit device unit test failure: [FAIL] FSharpTest.SprintfTest : Expected: True
  * gh#mono/mono#9943 - System.Reflection.Assembly.LoadFile should throw ArgumentException for relative path name
  * gh#mono/mono#9996 - The type initializer for ‘System.Data.Entity.Core.Objects.ELinq.ExpressionConverter’ threw an exception. (regression in Mono 5.14)
  * bxc#19436 - [eglib] GMarkup XML parser can’t handle hyphens underscores and periods in element names.
  * bxc#23668 - System.Net.Http.Formatting should not contain Newtonsoft.Json
  * bxc#26983 - Console properties might deadlock for background properties
  * bxc#46917 - Incorrect validation checks in message formater
  * bxc#60065 - Make exception marshaling work with system mono

-------------------------------------------------------------------
Mon Aug 13 00:00:00 UTC 2018 - fwdsbs.to.11df@xoxy.net

- Update to version 5.14.0.177 (5.14.0 Stable)
- Remove patch: profiler-aot-parse_args-fix.patch
- Patch fix-dbg-headers.patch was updated
- Added patch: fix-ppc-64bit-portability-issue.patch:
  * Fix 64bit-portability-issue OBS error when compiling for PPC arch
- New features and changes:
  * Better generic sharing: generic sharing has been improved
  * Memory optimization for handles: reduce the amount of preallocated memory when process requires only a minimal number of handles
  * GC Handling of very large objects: fix handling of objects which are over 4GBs of memory
  * Class Libraries: significant improvements to System.Windows.Forms
  * MCS: C# 7.x support was extended
  * NuGet: the bundled version of NuGet has been updated to 4.7.0
  * mkbundle: a new --mono-api-struct-path option was introduced to allow customization of runtime functions used for the embedding
- Bugfixes:
  * gh#mono/mono#6178 - Log profiler should provide startup time in stream header from same source as event timestamps
  * gh#mono/mono#6186 - Code coverage instrumentation logic should deal with inlining the same way as enter/leave instrumentation
  * gh#mono/mono#6187 - mkbundle Linux - program doesn’t run on system unless mono-core is installed
  * gh#mono/mono#6211 - Rare shutdown crash in profiler stress tests
  * gh#mono/mono#6266 - ArrayTypeMismatchException when using array of generic ICollection or IList
  * gh#mono/mono#6357 - Keepass crashes when editing an entry notes field in a specific way
  * gh#mono/mono#6579 - Type.GetInterface fails to find implemented interface when ignoreCase: true is used
  * gh#mono/mono#6666 - Invalid cast is not checked for nullable types
  * gh#mono/mono#6752 - System.TermInfoReader cannot handle new NCurses 6 TermInfo files
  * gh#mono/mono#6767 - Add missing APIs to System.Data
  * gh#mono/mono#6788 - nuget restore fails to parse valid json from nuget.org with mono/master
  * gh#mono/mono#6801 - Self-hosted HttpListener gets empty file collection and input stream for multipart PUT or POST requests
  * gh#mono/mono#6812 - MonoProfilerCoverageData::column is equal 0
  * gh#mono/mono#6848 - netstandard facade dlls have different public key tokens
  * gh#mono/mono#6940 - DNS lookup of IPv6-only hosts fails
  * gh#mono/mono#6948 - [XI]WatchOS apps fail to build with error “Undefined symbols for architecture armv7k” using XI with mono-2017-12 support
  * gh#mono/mono#6998 - Runtime assert in System.Runtime.Remoting
  * gh#mono/mono#6999 - test_0_time_drift - mono/tests failure
  * gh#mono/mono#7016 - Hybrid AOT is not working for some generic methods
  * gh#mono/mono#7085 - Hybrid AOT breaks setting thread UI culture
  * gh#mono/mono#7086 - Hybrid AOT throws invalid cast exception on dictionaries indexed with enum
  * gh#mono/mono#7093 - Regression in Array interface conversions
  * gh#mono/mono#7095 - Assertion at class-accessors.c:31, condition `mono_class_is_ginst (klass)’ not met
  * gh#mono/mono#7134 - NullReferenceException while processing concurrent requests with a WCF app
  * gh#mono/mono#7137 - Step in crashes debugger
  * gh#mono/mono#7145 - [XI] RuntimeFeatureTest.NoNewFeaturesAdded failure in mscorlib tests
  * gh#mono/mono#7184 - MSBuild always recompiles project if it has a resx with a windows path.
  * gh#mono/mono#7199 - finalizer-abort.exe
  * gh#mono/mono#7200 - Problem building on Arch linux
  * gh#mono/mono#7240 - dim-sharedgenerics.exe fails with LLVM
  * gh#mono/mono#7262 - .config with dllmap not working with app domains with shadow copying enabled
  * gh#mono/mono#7289 - Creating EnumMirror fails in a multi-domain context.
  * gh#mono/mono#7328 - suggest recursive self-calls do not create trampoline
  * gh#mono/mono#7338 - Finalizer crashes because of FileSystemWatcher Dispose exception in FileSystemWatcher_mobile.cs
  * gh#mono/mono#7356 - Memory leak in HttpWebRequest / HttpWebResponse
  * gh#mono/mono#7364 - watchOS/LLVM crashes at launch on device
  * gh#mono/mono#7378 - WeakAttribute causes all fields within a class to become weak
  * gh#mono/mono#7389 - System.CodeDom.Compiler.CodeDomConfigurationHandler throws on initialization
  * gh#mono/mono#7408 - No longer builds with CentOS 6 (GCC 4.4.7)
  * gh#mono/mono#7432 - gcsuppressfinalize.exe CoreCLR test started failing after upgrade to Debian 9
  * gh#mono/mono#7449 - PInvoke to function that takes a struct with an array of double gets incorrect results on Android
  * gh#mono/mono#7460 - w32handles require much memory when the minimum required is much lower
  * gh#mono/mono#7535 - [llvm/bitcode] Crash in mono_class_has_failure (class.c:10037)
  * gh#mono/mono#7536 - Missing Facades from net_4_x that are in 4.7.1.
  * gh#mono/mono#7537 - new object [int.MaxValue] crashes runtime instead of OOM
  * gh#mono/mono#7565 - Generic symbol names exported from libmono
  * gh#mono/mono#7568 - Intermittent failures on bug-80307.exe and other tests using FileSystemWatcher
  * gh#mono/mono#7610 - Add System.Memory facade
  * gh#mono/mono#7613 - mprof-report can’t read v13 file that Mono.Profiler.Log can
  * gh#mono/mono#7620 - DrawToBitmap in Control.cs does not work
  * gh#mono/mono#7624 - Strict loader still loads incorrect assembly
  * gh#mono/mono#7637 - iOS release build: “Could not AOT the assembly” -> “p - buf < buf_size not met”
  * gh#mono/mono#7655 - Memory leak in file operations in mono 5.10
  * gh#mono/mono#7657 - Method is inaccessible from method in nested classes with inheritance.
  * gh#mono/mono#7661 - Suppress the degraded allocation warning for the WebAssembly target
  * gh#mono/mono#7685 - Assert ainfo->cinfo->stack_usage % MONO_ARCH_FRAME_ALIGNMENT == 0
  * gh#mono/mono#7696 - LINQ bug (ConcatNIterator.ToArray()?)
  * gh#mono/mono#7729 - [mcs] fails to compile code with Tuple
  * gh#mono/mono#7786 - “mono/metadata/threads.c:3016, condition `internal’ not met” under certain conditions with the soft debugger attached
  * gh#mono/mono#7792 - Failure to AOT compile due to condition `load_opcode != OP_LOADV_MEMBASE’ not met
  * gh#mono/mono#7805 - F# build is broken due to new String.StartsWith overload
  * gh#mono/mono#7822 - Failing to serialize ConcurrentDictionary with BinaryFormatter
  * gh#mono/mono#7828 - Invalid instruction generated by regex runtime when using dapper
  * gh#mono/mono#7860 - illinkanalyzer isn’t whitelisted in the macOS package
  * gh#mono/mono#7864 - [wasm] Don’t fail when TaskCreationOptions.LongRunning is used
  * gh#mono/mono#7903 - Mono VS solution has wrong all projects in all profiles used
  * gh#mono/mono#7920 - build broken with –enable-minimal=soft_debug
  * gh#mono/mono#8089 - Add System.Drawing.Common facade for Xamarin profiles
  * gh#mono/mono#8143 - CEE_STELEM for single token fails in wasm interp mode
  * gh#mono/mono#8267 - TimeZoneInfo.Local Id and DisplayName are always: Local
  * gh#mono/mono#8310 - FSharp build is broken due to new Path.GetFileName() overload
  * gh#mono/mono#8311 - bug-82022.exe fails in LLVM JIT
  * gh#mono/mono#8409 - FullAOT test failures/crashes on arm64,armel or armhf
  * gh#mono/mono#8417 - Redirecting process output when Console.SetOut set gives strange output
  * gh#mono/mono#8698 - csharp REPL can’t load pkg-config references interactively
  * bxc#10087 - Process exit can be blocked if the AppDomain.ProcessExit event hangs
  * bxc#11771 - IsolatedStorageFile.GetFileNames() throws exception w/ nested dirs
  * bxc#12850 - FtpWebRequest does not handle remote paths properly
  * bxc#18941 - Calling Marshal.SizeOf() with an Empty struct using Sequential or Explicit returns 0
  * bxc#19038 - Quitting XS caused MainStoryboard.Storyboard to convert to IB file
  * bxc#19436 - [eglib] GMarkup XML parser can’t handle hyphens underscores and periods in element names.
  * bxc#25224 - stack overflow after printfn something
  * bxc#25444 - WCF method with UriTemplate annotation fails with InvalidOperationException
  * bxc#33208 - System.Reflection.Module.ResolveMember() returning inconsistent results when querying dynamic assemblies
  * bxc#46473 - Error: The object with ID N implements the IObjectReference interface for which all dependencies cannot be resolved. The likely cause is two instances of IObjectReference that have a mutual dependency on each other
  * bxc#53272 - Unhandled Exception System.Collections.Generic.KeyNotFoundException in ikdasm
  * bxc#58413 - Environment.Tickcount is changed when the date is changed in android
  * bxc#59184 - MethodInfo.Invoke fails for generic methods with too many/too large arguments
  * bxc#59400 - Wrong interface method is called (two interfaces, covariance)
  * bxc#59779 - HttpClient, when using GZIP, hangs while sending multiple requests in parallel.
  * bxc#60065 - Make exception marshaling work with system mono
  * bxc#60088 - Assertion at ../../../../external/mono/mono/mini/debugger-agent.c:4765, condition `array->len == 1’ not met
  * bxc#60843 - Type 0x15 not handled in custom attr value decoding

-------------------------------------------------------------------
Sun Aug 12 00:00:00 UTC 2018 - fwdsbs.to.11df@xoxy.net

- Release 5.12.0.226 (skipped):
- New features and changes:
  * Interpreter: a lot of work has been put in stabilising and passing test suite. Interpreter is able to build the full Base Class Library with Mono C# compiler (mcs)
  * IBM AIX, IBM i, Haiku ports
  * WebAssembly: several issues were fixed around GC and Base Class Libraries
  * Jemalloc: added option to support jemalloc as the malloc(3) library, need --with-jemalloc build options
  * Profiler: improved GC roots reporting
  * PAL: added support for nanosecond resolution in file information on platforms where the information is available
  * Diagnostic enhancements: the diagnostic support to inspect generated native code via MONO_VERBOSE_METHOD environement variable was extended to support multiple entries
  * Class Libraries: HttpWebRequest async handling has been rewritten
  * Class Libraries: a few internal types were decorated with StackTraceHiddenAttribute
  * Class Libraries: System.Security.Cryptography.Xml namespace in the System.Security assembly has been replaced with the CoreFX implementation
  * Class Libraries: ICSharpCode.SharpZipLib assembly was marked as obsolete and will be removed in a future release
  * illinkanalyzer tool: a new tool called the Linker Analyzer was introduced, available via the illinkanalyzer command
  * VB.NET compiler: Roslyn based VB.NET compiler (vbc) now shipped with package. Old vbnc compiled will be deprecated.
- Bugfixes:
  * bxc#41294 - Some Mono threadpool performance counters return 0
  * bxc#45901 - Missing .NET code pages ibm775 & ibm737
  * bxc#56071 - Mono.Security.AuthenticodeBase Doesn’t Support PE32+ image format
  * bxc#58413 - Environment.Tickcount is changed when the date is changed in android
  * bxc#59184 - MethodInfo.Invoke fails for generic methods with too many/too large arguments
  * bxc#60088 - Assertion at ../../../../external/mono/mono/mini/debugger-agent.c:4765, condition `array->len == 1’ not met
  * bxc#60225 - Coverage output is missing some types and methods
  * bxc#60298 - LayoutKind.Explicit, Size = 12 ignored with 64bit alignment
  * bxc#60359 - AssemblyName.set_CultureName is not implemented
  * bxc#60568 - WaitHandle.WaitOne(int) doesn’t trigger SynchronizationContext.Wait
  * bxc#60756 - A crash with CEE_RET: value type stack: 0 vs. 8
  * bxc#60848 - Incorrect unicode custom attribute decoding
  * bxc#60862 - Stack overflow throws null (null is caught)
  * bxc#60900 - Error using implicit operator with Nullable
  * bxc#60986 - Memory leak when marshalling Delegate to native code
  * bxc#61202 - Fatal error when adding aspect ratio constraint
  * gh#mono/mono#6169 - Thread objects are being leaked
  * gh#mono/mono#6187 - mkbundle Linux - program doesn’t run on system unless mono-core is installed
  * gh#mono/mono#6192 - System.Reflection.Emit: PropertyBuilder with generic type doesn’t add generic parameter
  * gh#mono/mono#6264 - Creating a new instance of X.509 certificate out of another, empty instance of X.509 certificate must not throw
  * gh#mono/mono#6283 - Mono is not able to notice a file change in a FileInfo object
  * gh#mono/mono#6320 - [arm] unaligned access in ves_icall_System_ValueType_Equals
  * gh#mono/mono#6339 - System.TypeLoadException is thrown when run .net standard library with Mono
  * gh#mono/mono#6343 - mono/utils/jemalloc does not exist
  * gh#mono/mono#6349 - messages during make dist: “file name is too long”
  * gh#mono/mono#6379 - Reenable System.Runtime.CompilerServices.Unsafe-xunit test on 32bit
  * gh#mono/mono#6383 - System.Diagnostics.ProcessTest.Start1_FileName_NotFound failing
  * gh#mono/mono#6401 - Invalid array cast is supported
  * gh#mono/mono#6411 - System.Numerics structs are incorrect sizes
  * gh#mono/mono#6464 - Socket.Send misses data on Windows
  * gh#mono/mono#6490 - Reenable weak-fields.exe test
  * gh#mono/mono#6777 - Memory corruption in Mono 5.8.0.108
  * gh#mono/mono#6848 - netstandard facade dlls have different public key tokens
  * gh#mono/mono#6940 - DNS lookup of IPv6-only hosts fails
  * gh#mono/mono#6948 - [XI]WatchOS apps fail to build with error “Undefined symbols for architecture armv7k” using XI with mono-2017-12 support
  * gh#mono/mono#6998 - Runtime assert in System.Runtime.Remoting
  * gh#mono/mono#7016 - Hybrid AOT is not working for some generic methods
  * gh#mono/mono#7085 - Hybrid AOT breaks setting thread UI culture
  * gh#mono/mono#7086 - Hybrid AOT throws invalid cast exception on dictionaries indexed with enum
  * gh#mono/mono#7095 - Assertion at class-accessors.c:31, condition `mono_class_is_ginst (klass)’ not met
  * gh#mono/mono#7184 - MSBuild always recompiles project if it has a resx with a windows path
  * gh#mono/mono#7240 - dim-sharedgenerics.exe fails with LLVM
  * gh#mono/mono#7262 - .config with dllmap not working with app domains with shadow copying enabled
  * gh#mono/mono#7289 - Creating EnumMirror fails in a multi-domain context.
  * gh#mono/mono#7338 - Finalizer crashes because of FileSystemWatcher Dispose exception in FileSystemWatcher_mobile.cs
  * gh#mono/mono#7364 - watchOS/LLVM crashes at launch on device
  * gh#mono/mono#7389 - System.CodeDom.Compiler.CodeDomConfigurationHandler throws on initialization
  * gh#mono/mono#7536 - Missing Facades from net_4_x that are in 4.7.1.
  * gh#mono/mono#7637 - iOS release build: “Could not AOT the assembly” -> “p - buf < buf_size not met”
  * gh#xamarin/maccore#628 - mscorlib/Mac/Full: LocalId (MonoTests.System.TimeZoneInfoTest+PropertiesTests.LocalId) fails
  * gh#xamarin/maccore#629 - iOS 32-bit sim: TimeZoneTest.TestCtors (D02) fails

-------------------------------------------------------------------
Wed Apr 18 00:00:00 UTC 2018 - fwdsbs.to.11df@xoxy.net

- Update to version 5.10.1.47 (5.10.1 Stable)
- Patch updated: ucontext.patch

-------------------------------------------------------------------
Fri Mar 30 01:00:00 UTC 2018 - fwdsbs.to.11df@xoxy.net

- Add xbuild-use-roslyn-vbc.patch:
  * Make xbuild to use roslyn-vbc on roslyn-enabled builds instead of deprecated vbnc (it is also broken on roslyn-enabled builds)

-------------------------------------------------------------------
Fri Mar 30 00:00:00 UTC 2018 - fwdsbs.to.11df@xoxy.net

- Update to version 5.10.0.140 (5.10.0 Stable)
- Remove patch: provides-facades.patch
- Add profiler-aot-parse_args-fix.patch:
  * Fix OBS build failure with "free(): invalid pointer" libc error.
- New features and changes:
  * Interpreter: the interpreter is now compiled in by default into Mono, and you can use it by running mono --interpreter
  * Default Interface Methods: the runtime now supports Default Interface Methods, we now only miss the C# compiler support
  * Mono SDKs: this is a new way of building Mono for some of the platforms that we support: Android, iOS and WebAssembly.
  * WebAssembly port: this is the first release where the interpreter can reliably run most of the class libraries test suite.
  * Dedicated Coverage profiler: the coverage profiler has been extracted from the log profiler, making it much more lightweight
  * ARM Memory Barriers: explicitly encode memory barrier type on ARM64, instead of relying on undefined behaviour according to the ARMv8 ABI
  * AOT Size Reduction via Code Deduplication: we now support deduplicating generics code across assemblies
  * Class Libraries: the recently announced .NET 4.7.1 is now supported and available as a specific target via MSBuild configuration; the System.Data assembly was fully replaced with CoreFX implementation resolving many limitations and corner cases issue we had as well as implementing missing features and APIs; significant parts of System.Security assembly implementation were replaced with CoreFX implementation
  * Roslyn compiler: roslyn compiler has been updated to version 2.6.0 which includes all C# 7.2 features
  * The Mono C# compiler: MCS gained support for some more C# 7.x features
- Bugfixes:
  * bxc#19503 - Process.Start on OS X fails silently for missing file
  * bxc#20562 - Seeming valid IL produces invalid result
  * bxc#40699 - Console.ReadXXX does not echo input after TermInfoDriver is initialized
  * bxc#45893 - I18N: EncoderFallbackBuffer.Fallback gets next character instead of the current one
  * bxc#50189 - SGEN XMM scanning: Linux/Intel (32 + 64)
  * bxc#50190 - SGEN FPU scanning: Darwin/ARM64
  * bxc#52675 - HttpListener doesn’t work with SSL
  * bxc#53296 - Latin1Encoding throws exception on Mono when it doesn’t on MS.NET
  * bxc#56003 - URI returns wrong absolute path on OSX when File name is UTF-8
  * bxc#56194 - SIGSEGV on System.Runtime.CompilerServices.RuntimeHelpers.InitializeArray()
  * bxc#56727 - Runtime crashes when disposing DeflateStream
  * bxc#57892 - Static lib in the msi distrib doesn’t resolve all symbols
  * bxc#57893 - mkbundle is not working on Windows
  * bxc#57938 - Differences in behavior Type.Fullname in Mono and .NET Framework when Type is a generic type that is not a generic type definition but contains unresolved type parameters
  * bxc#58400 - System.Uri broken with files
  * bxc#58411 - System.Security.Cryptography.CryptographicException: Store root doesn’t exist
  * bxc#59080 - Type information of underlying type for enums compiled by Mono.CSharp.dll seems to be incorrect
  * bxc#59182 - Crash/SIGSEGV with interop callback with struct parameter from native to managed on Xamarin.Android on armv7
  * bxc#59184 - MethodInfo.Invoke fails for generic methods with too many/too large arguments
  * bxc#59393 - NullReferenceException when MonthCalendar clicked out of min/max date
  * bxc#59608 - Attribute MethodImplOptions.AggressiveInlining causes method to always return NULL
  * bxc#59664 - Type.GetType(“”, true) throws ArgumentException on Mono but TypeLoadException on .NET
  * bxc#59832 - [iOS]MT3001 error: Could not AOT the assembly error while building iOS/mobile samples
  * bxc#59881 - DllImport calls a wrong function if its function number greater than 65535
  * bxc#59909 - WebInvokeAttributeTest.RejectTwoParametersWhenNotWrapped() fails on Android
  * bxc#59916 - get_current_locale_name fails under the load with String conversion error: Illegal byte sequence encounted in the input
  * bxc#59956 - [llvm][bitcode] [FAIL] UniqueIdTest.Ctor_Id (System.Runtime.Serialization tests)
  * bxc#60028 - Timer doesn’t throw ODE after Dispose()
  * bxc#60029 - AsyncLocal inconsistency with .NET
  * bxc#60175 - AOT mis-compiles when coverage is used
  * bxc#60224 - Coverage profiler uses type names which don’t exist
  * bxc#60233 - Assertion in dynamic-image.c after 792b5367cd3a6ffa1a192c4d2d7ace3509cbb646
  * bxc#60238 - Mono assertion hit when using csharp repl
  * bxc#60255 - Wrong exception in emulated opcodes
  * bxc#60267 - Inconsistent symlink traversal results
  * bxc#60288 - Large Array Initializer Causes TypeLoadException
  * bxc#60298 - LayoutKind.Explicit, Size = 12 ignored with 64bit alignment
  * bxc#60317 - Stuck WebRequest
  * bxc#60422 - Native crash due to unhandled errno values when accessing files on networked filesystems
  * bxc#60435 - The DataGridViewRow.CreateCellsInstance method is never invoked
  * bxc#60539 - mini-codegen.c:1265, condition `reginfo [sreg].born_in > 0’ not met
  * bxc#60545 - Multiple argument generic with contravariant interface as an argument causes MissingMethodException
  * bxc#60621 - XmlDocument.Load() throws WebException when DTD url is not reachable
  * bxc#60634 - Assertion failure ‘align > 0’ happening as of d15-5
  * bxc#60680 - C# 7 ref returns fail to compile
  * bxc#60771 - Attempting to JIT compile method ‘System.Runtime.CompilerServices.Unsafe:Add (byte&,int)’ while running in aot-only mode
  * bxc#60865 - * Assertion at mini-codegen.c:2264, condition `sp > 0’ not met
  * bxc#61202 - Fatal error when adding aspect ratio constraint
  * gh#mono/mono#6169 - Thread objects are being leaked
  * gh#mono/mono#6187 - mkbundle Linux - program doesn’t run on system unless mono-core is installed
  * gh#mono/mono#6192 - System.Reflection.Emit: PropertyBuilder with generic type doesn’t add generic parameter
  * gh#mono/mono#6320 - [arm] unaligned access in ves_icall_System_ValueType_Equals
  * gh#mono/mono#6339 - System.TypeLoadException is thrown when run .net standard library with Mono
  * gh#mono/mono#6383 - System.Diagnostics.ProcessTest.Start1_FileName_NotFound failing
  * gh#mono/mono#6401 - Invalid array cast is supported
  * gh#mono/mono#6414 - sbyte comparison broken by optimization
  * gh#mono/mono#6490 - Reenable weak-fields.exe test
  * gh#mono/mono#6721 - Negate operation on uint.MaxValue gives wrong result on arm64
  * gh#mono/mono#6777 - Memory corruption in Mono 5.8.0.108.
  * gh#mono/mono#6848 - netstandard facade dlls have different public key tokens
  * gh#mono/mono#6848 - [XI]WatchOS apps fail to build with error “Undefined symbols for architecture armv7k” using XI with mono-2017-12 support
  * gh#mono/mono#7086 - Hybrid AOT throws invalid cast exception on dictionaries indexed with enum

-------------------------------------------------------------------
Thu Mar 29 00:00:00 UTC 2018 - fwdsbs.to.11df@xoxy.net

- Update to version 5.8.1.0 (Service Release)
- Switch aarch64 build to use older mcs instead of roslyn-csc to fix build failure
- Packaging updated to add .NET 4.7.1 api support
- Bugfixes:
  * gh#mono/mono#6658 - NullReferenceException at op_Increment when using assemblies compiled by csc rather than mcs that use native types such as nuint and that have specially-handled assembly names like Xamarin.Mac.dll.
  * gh#mono/mono#7472 - Incorrect NullReferenceException when using extension methods on null instances as Action or Func arguments or variables.

-------------------------------------------------------------------
Sat Mar  3 16:48:22 UTC 2018 - kasimir_@outlook.de

- Fix armv6 build

-------------------------------------------------------------------
Sat Feb 03 00:00:00 UTC 2018 - fwdsbs.to.11df@xoxy.net

- Update to version 5.8.0.108 (5.8.0 Stable)
- Minor packaging updates
- Remove patch: bug-57918.patch
- Remove patch: bug-59608.patch
- Remove patch: mcs-compatibility-fix.patch
- Add fix-64bit-portability-issue.patch:
  * Fix build error: E: mono-core 64bit-portability-issue threads.c:1866
- New features and changes:
  * WebAssembly:  it should be possible to build both the runtime and class libraries targeting WebAssembly
  * Profiler: added a new "quiet" mode; added Mono.Profiler.Log.dll, which provides an API to the profiler
  * Verifier: the runtime verifier now supports C# 7.0 byref returns
  * Modes for the SGen GC: sgen garbage collector now has support for so called "modes", check out the mode parameter documentation for the MONO_GC_PARAMS environment variable in the man page
  * Other changes: improved compatibily with alternative languages that depend on implicit widening of locals
  * Class Libraries: more classes was replaced by CoreFX codebase
  * MCS changes: mcs now has better support for C# 7 syntax
  * csi: You are now able to use Roslyn’s csi (C# interactive) REPL tool from the command line
  * Roslyn: roslyn was updated to the 2.3.2 release
  * ilasm: ilasm gained support for the AggressiveInlining keyword
- Bugfixes:
  * bxc#4786 - After failed call to SqlConnection.Open (due to invalid password), subsequent invalid password attempts result in wrong exception
  * bxc#5798 - Thread abort can lead to locks not being released
  * bxc#5804 - Thread.ResetAbort can prevent appdomain unloading
  * bxc#6339 - Headers not being populated in SoapExtension
  * bxc#10074 - Error while updating status of command: MonoDevelop.Ide.Commands.ViewCommands.LayoutList
  * bxc#11696 - Missing MethodImpl has a duplicate
  * bxc#12157 - Missing: Init state for this differs depending on path
  * bxc#17325 - RealProxy returns MarshalByRefObject for an Interface instead of the real interface type
  * bxc#25755 - HttpClient.Timeout does not throw ArgumentOutOfRangeException when setting Timeout property to 0
  * bxc#31507 - ObjectDisposedException when canceling postAsync
  * bxc#36053 - Broken enum values conversion
  * bxc#36634 - IpcChannelTest.Bug609381 hangs on Linux
  * bxc#40556 - Output pad no longer displays unicode characters
  * bxc#41279 - Wrong syntax used for nested types in MethodAccessException (and similar)
  * bxc#43172 - Failure when alerting threads waiting on a socket that closes
  * bxc#43563 - Crash when struct Foo contains static field of type Foo[][]
  * bxc#44255 - Inconsistent results in the serialization of TimeZoneInfo.
  * bxc#44266 - Unable to change variable values whilst debugging
  * bxc#46683 - Recurring hang in System.Xaml on CI
  * bxc#52157 - SocketTest.ConnectedProperty test fails in FullAOT Linux runs
  * bxc#52621 - Typo in exception message in PKCS12.cs
  * bxc#55603 - Follow-up to bug 52845: Satellite assemblies not loaded by app when using “Bundle assemblies into native code” even though they are now successfully mkbundled
  * bxc#55697 - .NET 2.0 style web services fail to build under msbuild in Release but work with xbuild
  * bxc#56111 - Hitting assertion after enabling AOT+LLVM on x86 devices in tramp-x86.c:124
  * bxc#56242 - TypeTest.GetGenericMethodDefinitionOverInflatedMethodOnGTD throws NRE on Android in Release mode
  * bxc#56452 - Problem Stack too big
  * bxc#56653 - Zygote crashes
  * bxc#56684 - (mono-2.0-sgen.dll) in mono.exe: 0xC0000005: Access violation reading location 0x04FA3D9A.
  * bxc#56727 - Runtime crashes when disposing DeflateStream
  * bxc#56814 - Xamarin.Mac.dll Memory Leak starting with 3.2.0.175 Release
  * bxc#57002 - New bockbuild package is missing .dSYM directories
  * bxc#57069 - WaitHandle.SignalAndWait is broke
  * bxc#57222 - System.Reflection.AmbiguousMatchException for two fields with same name but different types
  * bxc#57232 - Compiler error when using ternary operator and no whitespace
  * bxc#57476 - AOT fails with large StructLayout size on Debug+ARMv7
  * bxc#57488 - Debugger crashes when inspecting variable in a unit test
  * bxc#57496 - [Slovenian CultureInfo + others] .Parse throws exception when parsing negative values
  * bxc#57505 - Missing error CS0165 in presence of commented line
  * bxc#57528 - [THIS WEEK] Nested streams using SslStream cause ObjectDisposedException when disposed
  * bxc#57629 - [io-layer] File.Delete () throws System.UnauthorizedAccessException on non-existing files on a read-only path
  * bxc#57691 - InternalsVisibleTo doesn’t work with 2048-bit SNK files
  * bxc#57744 - ReflectionTypeLoadException.LoaderExceptions has null exceptions
  * bxc#57771 - F#.NET Core 2.0 projects do not compile
  * bxc#57796 - Compiler Crash instead of CS1621
  * bxc#57850 - Mono assertion when ResolveEventHandler returns a reflection-only assembly
  * bxc#57851 - Assertion if using ResolveEventHandler to find custom attributes
  * bxc#57887 - Console.Error.WriteLine in System.Net.NetworkInformation
  * bxc#57918 - System.Net.Sockets.EndSend returns incorrect value
  * bxc#57930 - Building netstandard 2.0 project throws DllNotFoundException: hostfxr during msbuild
  * bxc#57936 - Race conditions of mempool.c
  * bxc#57959 - SIGSEGV in roslyn with corrupted stack
  * bxc#58100 - mono_w32socket_convert_error: no translation into winsock error for (6) “Device not configured”
  * bxc#58114 - [llvm] csc (Rolsyn) produce fault clauses that the llvm backend does not support
  * bxc#58168 - pedump incorrectly reports mscorlib as invalid
  * bxc#58291 - Mono.CSharp Evaluator does not compile enums and throws an exception
  * bxc#58317 - Leaking threads: SGen worker and Finalizer
  * bxc#58344 - SIMD crash using System.Numerics.Vector
  * bxc#58361 - EnumBuilder can no longer be used to generate IL code
  * bxc#58379 - Mono jit gives different results that .net for simple il
  * bxc#58411 - System.Security.Cryptography.CryptographicException: Store root doesn’t exist
  * bxc#58421 - sre-save.c asserts in fixup_method () if TypeBuilder token is used across assemblies
  * bxc#58423 - Race condition of metadata.c (mono_metadata_get_canonical_generic_inst)
  * bxc#58454 - Cannot resolve method Subscription`1 Subscribe[TSelection](System.Func`2[TState,TSelection], System.Action`2[TSelection,TState]) because the declaring type of the method handle FSI_0002+Store`1[TState] is generic. Explicitly provide the declaring type to
  * bxc#58612 - When 2 breakpoints are hit at “same time” 2nd thread frames count==0
  * bxc#58621 - CS1703: An assembly `gactestlib’ with the same identity has already been imported. Consider removing one of the references
  * bxc#58637 - Heap overflow when using GetAssemblyName
  * bxc#58738 - System.IO.MonoIO.Read - Native Crash when device file is gone
  * bxc#58770 - * Assertion at ..\mono\utils\mono-threads.c:707, condition `info’ not met
  * bxc#58782 - Exception stack traces are deleted when reaching the native-to-managed wrapper in a reverse invoke
  * bxc#58793 - Fix pedump to use normal runtime init sequence
  * bxc#58809 - Return result of Type.IsAssignableFrom with the generic parameters differs from MS.NET one
  * bxc#58829 - Application Output Window being flooded with “[Mono] worker parking, [Mono] worker unparking” messages when debugging agasint Android Emulator.
  * bxc#58877 - MonoTests.System.Threading.Tasks.TaskTests.Delay_Simple fails randomly after upgrade to Xcode 8.3
  * bxc#58901 - Breaking ABI change on 32 bits with xcode 8.3 or newer
  * bxc#58911 - performance degradation with linq expressions
  * bxc#58965 - csi fails with “type Object is defined in an assembly that is not referenced”
  * bxc#59039 - bug-18026.exe test times out on armel/armhf
  * bxc#59154 - runtime can’t load secondary-dependent library from newly unpacked temp directory
  * bxc#59180 - verifier does not handle TYPEDBYREF properties
  * bxc#59235 - [mono-2017-06] android.runtime.JavaProxyThrowable: System.ObjectDisposedException: Cannot access a disposed object.
  * bxc#59239 - [mono2017-06]FileTest.SymLinkLoop failed on tvOS device
  * bxc#59281 - System.Threading.AbandonedMutexException: The wait completed due to an abandoned mutex.
  * bxc#59334 - Expression: Can’t catch non-exception objects (mono wraps them with RuntimeWrappedException)
  * bxc#59364 - Assertion at dynamic-image.c:209, condition `prev == MONO_HANDLE_RAW (obj)’ not met
  * bxc#59430 - api-diff not outputing out params correctly
  * bxc#59436 - MT3001 error
  * bxc#59664 - Type.GetType(“”, true) throws ArgumentException on Mono but TypeLoadException on .NET
  * bxc#59824 - Casting an array of enums is inconsistent with .NET Framework behavior
  * bxc#59832 - [iOS]MT3001 error: Could not AOT the assembly error while building iOS/mobile samples
  * bxc#59909 - WebInvokeAttributeTest.RejectTwoParametersWhenNotWrapped() fails on Android
  * bxc#59916 - get_current_locale_name fails under the load with String conversion error: Illegal byte sequence encounted in the input
  * bxc#59953 - [llvm][bitcode] test_0_float_return_spill failed: got 1, expected 0
  * bxc#60233 - Assertion in dynamic-image.c after 792b5367cd3a6ffa1a192c4d2d7ace3509cbb646
  * bxc#60238 - Mono assertion hit when using csharp repl
  * bxc#60245 - FieldInfo.GetValue fails on ContextBoundObject
  * bxc#60317 - Stuck WebRequest
  * bxc#60340 - Csc msbuild task fails to find csc.exe
  * bxc#60480 - [mono-2017-10] ZipArchiveTests in System.iO Compression tests fail on device
  * bxc#60539 - mini-codegen.c:1265, condition `reginfo [sreg].born_in > 0’ not met
  * bxc#60545 - Multiple argument generic with contravariant interface as an argument causes MissingMethodException.
  * bxc#60634 - Assertion failure ‘align > 0’ happening as of d15-5
  * bxc#60771 - Attempting to JIT compile method ‘System.Runtime.CompilerServices.Unsafe:Add (byte&,int)’ while running in aot-only mode
  * bxc#61002 - Runtime exception: Cannot access a disposed object. Object name: ‘MobileAuthenticatedStream’.
  * gh#mono/mono#6169 - Thread objects are being leaked
  * gh#mono/mono#6339 - System.TypeLoadException is thrown when run .net standard library with Mono
  * gh#mono/mono#6383 - System.Diagnostics.ProcessTest.Start1_FileName_NotFound failing

-------------------------------------------------------------------
Fri Jan 26 00:00:00 UTC 2018 - fwdsbs.to.11df@xoxy.net

- Update to version 5.4.1.7 (Service Release)
- Bugfixes:
  * bxc#59956 - [llvm][bitcode] [FAIL] UniqueIdTest.Ctor_Id (System.Runtime.Serialization tests)

-------------------------------------------------------------------
Sun Nov 12 00:00:00 UTC 2017 - fwdsbs.to.11df@xoxy.net

- Update to version 5.4.1.6 (Service Release)
- Patch bug-59608.patch was updated
- Bugfixes:
  * bxc#59281 - System.Threading.AbandonedMutexException: The wait completed due to an abandoned mutex
  * bxc#59302 - Task in Mono 5.4.0.167 is throwing exception "Length cannot be less than zero"
  * bxc#59364 - Assertion at dynamic-image.c:209, condition "prev == MONO_HANDLE_RAW (obj)" not met
  * bxc#59832 - [iOS]MT3001 error: Could not AOT the assembly error while building iOS/mobile samples
  * bxc#60233 - Assertion in dynamic-image.c after 792b5367cd3a6ffa1a192c4d2d7ace3509cbb646

-------------------------------------------------------------------
Tue Oct 24 00:00:00 UTC 2017 - fwdsbs.to.11df@xoxy.net

- Add bug-59608.patch:
  * Fix bxc#59608 - Attribute MethodImplOptions.AggressiveInlining causes method to always return NULL

-------------------------------------------------------------------
Fri Oct 20 00:00:00 UTC 2017 - fwdsbs.to.11df@xoxy.net

- Add bug-57918.patch:
  * Fix bxc#57918 - System.Net.Sockets.EndSend returns incorrect value

-------------------------------------------------------------------
Tue Oct 17 00:00:00 UTC 2017 - fwdsbs.to.11df@xoxy.net

- Update to version 5.4.0.201 (5.4.0 Stable)
- Minor packaging updates
- Remove patch: 0001-btls-Disable-BUILD_SHARED_LIBS-while-building-boring.patch
- Remove patch: fix-project-builds-linux.patch
- Add patch mcs-compatibility-fix.patch:
  * When using deprecated MCS compiler to build Mono, convert incompatible C#6\C#7 code to C#5 analog in order to fix build errors.
- New features and changes:
  * JIT Job Control: improve Roslyn performance
  * Array element store optimization
  * Load scalability improvements
  * ValueType write barrier optimization
  * Make jit method table resizing more scalable
  * Reflection queries scalability improvements
  * Intrisificy Marshal.PtrToStruct for blitable types
  * Revamped unaligned memory access support
  * Interpreter works in JIT restricted environments
  * Interpreter supports ARM and ARM64
  * Class Libraries: integrated AppContextSwitch code from reference sources which allows all of its compat switches to be used, added reference assemblies for .NET Framework 4.7 to support builds targetting .NET 4.7.
  * Tools: bundled nuget binary was updated to version 4.3.0, added packaging for roslyn-parts of msbuild.
- Bugfixes:
  * bxc#580 - Type.Load loads strong type despite version mismatch
  * bxc#17325 - RealProxy returns MarshalByRefObject for an Interface instead of the real interface type
  * bxc#44907 - Applications crash on Nexus 9 devices only since Xamarin.Android 7.0.0.18
  * bxc#46482 - SIGSEGV at random code lines after application start on Nexus 9 with Xamarin Android 7
  * bxc#51791 - [XA] HTC Nexus 9 - app closes on launch
  * bxc#52508 - TLS SignalR Self-host Hang
  * bxc#53038 - SRE should fail more gracefully when SymbolWriter is missing
  * bxc#53202 - Number minus Enum gives wrong value
  * bxc#53244 - mcs generates ParamArrayAttribute when specifying “params” in overridden method where base doesn’t have it
  * bxc#53792 - CFNetworkHandler reports correct download when internet connection is lost during request
  * bxc#54159 - Compiler crashes when calling method named Finalize
  * bxc#54322 - await in catch-block inside a loop causes the same exception to be caught multiple times
  * bxc#54388 - InternalsVisibleTo is case sensitive
  * bxc#54448 - Unable to revert to thread-local storage for CurrentThread.CultureInfo
  * bxc#54485 - Creating an open generic type with recurrent constraint fails
  * bxc#54658 - [iOS]BCL test failed with Assertion failures error: * Assertion at /Users/builder/data/lanes/4691/6bea7a5b/source/xamarin-macios/external/mono/mono/mini/aot-runtime.c:2924, condition `!async’ not met and condition `unwind_options == MONO_UNWIND_NONE’ not
  * bxc#54976 - [iOS]fsharp test failing on iOS device with Assertion at /Users/builder/data/lanes/4691/9245c1c0/source/xamarin-macios/external/mono/mono/mini/mini-arm-gsharedvt.c:220, condition `src_slot < 16’ not met
  * bxc#54991 - Cannot compile get => _text
  * bxc#55041 - Stripping mscorlib in simple example changes IntPtr (5) behavior?
  * bxc#55083 - coreclr test b353858.il fails after 6f33b62f39a273fccb78f71513cb5e0dfb987c70
  * bxc#55095 - Breakpoints not hit for ASP.NET MVC Project
  * bxc#55348 - “using static” results in invalid compiler errors
  * bxc#55400 - MCS produces incorrect code for generic instantiated with a gtd
  * bxc#55436 - System.Runtime refuses to load with strict naming
  * bxc#55577 - SIMD instructions with System.Numerics.Vectors do not work
  * bxc#55603 - Follow-up to bug 52845: Satellite assemblies not loaded by app when using “Bundle assemblies into native code” even though they are now successfully mkbundled
  * bxc#55604 - Incorrect struct size when using property setter
  * bxc#55697 - .NET 2.0 style web services fail to build under msbuild in Release but work with xbuild
  * bxc#56081 - Returning a valuetype from an async method with an awaited parameter yields a Mono.CSharp.InternalErrorException: Await yields with non-empty stack
  * bxc#56111 - Hitting assertion after enabling AOT+LLVM on x86 devices in tramp-x86.c:124
  * bxc#56202 - [mono-2017-04]Apps fail to launch on 32 bit device with error EXC_ARM_DA_ALIGN at 0x0142ccec
  * bxc#56240 - Performance Degradation When Using Expressions
  * bxc#56242 - TypeTest.GetGenericMethodDefinitionOverInflatedMethodOnGTD throws NRE on Android in Release mode
  * bxc#56247 - Enumerable.OrderByDescending behaves differently on LLVM FullAOT
  * bxc#56452 - Problem Stack too big
  * bxc#56462 - Custom operator causes internal compiler error
  * bxc#56493 - Windows MMAP doesn’t release file
  * bxc#56499 - DateTime.Now throws exception if /etc/localtime symlink destination missing
  * bxc#56567 - Passing large struct into exception filter method crashes runtime with SIGSEGV
  * bxc#56611 - Regression: ArrayTypeMismatchException when running F# script
  * bxc#56616 - Missing CS1629 for unsafe code in iterators
  * bxc#56627 - mcs inherits interface implementation, while csc doesn’t
  * bxc#56684 - (mono-2.0-sgen.dll) in mono.exe: 0xC0000005: Access violation reading location 0x04FA3D9A.
  * bxc#56694 - Assertion: should not be reached at d:\j\workspace\v\repos\mono\mono\sgen\sgen-scan-object.h:91
  * bxc#56814 - Xamarin.Mac.dll Memory Leak starting with 3.2.0.175 Release
  * bxc#56821 - Static ctor of MarshalByRefObject runs in primary AppDomain
  * bxc#56824 - Runtime crash with VSMEF
  * bxc#57002 - New bockbuild package is missing .dSYM directories
  * bxc#57222 - System.Reflection.AmbiguousMatchException for two fields with same name but different types
  * bxc#57232 - Compiler error when using ternary operator and no whitespace
  * bxc#57242 - [StructLayout (LayoutKind.Sequential, Pack = 1)] doesn’t work as expected
  * bxc#57301 - Running IronPython’s executable under Mono 5.0.x causes a SIGSEGV on exit, this did not happen on 4.8
  * bxc#57496 - [Slovenian CultureInfo + others] .Parse throws exception when parsing negative values
  * bxc#57505 - Missing error CS0165 in presence of commented line
  * bxc#57629 - [io-layer] File.Delete () throws System.UnauthorizedAccessException on non-existing files on a read-only path
  * bxc#57691 - InternalsVisibleTo doesn’t work with 2048-bit SNK files
  * bxc#57744 - ReflectionTypeLoadException.LoaderExceptions has null exceptions
  * bxc#57771 - F#.NET Core 2.0 projects do not compile
  * bxc#57796 - Compiler Crash instead of CS1621
  * bxc#57850 - Mono assertion when ResolveEventHandler returns a reflection-only assembly
  * bxc#57851 - Assertion if using ResolveEventHandler to find custom attributes
  * bxc#57930 - Building netstandard 2.0 project throws DllNotFoundException: hostfxr during msbuild
  * bxc#57959 - SIGSEGV in roslyn with corrupted stack
  * bxc#58114 - [llvm] csc (Rolsyn) produce fault clauses that the llvm backend does not support
  * bxc#58210 - “* Assertion at metadata.c:1048, condition `index < meta->heap_strings.size’ not met” is output on startup - works fine on Windows
  * bxc#58344 - SIMD crash using System.Numerics.Vector
  * bxc#58361 - EnumBuilder can no longer be used to generate IL code
  * bxc#58399 - Delegates as collection key are ~500x slower than previously
  * bxc#58421 - sre-save.c asserts in fixup_method () if TypeBuilder token is used across assemblies
  * bxc#58446 - [iOS]EnumerableMoreTest.ConcatArgumentNullTest crash on tvOS device
  * bxc#58454 - Cannot resolve method Subscription`1 Subscribe[TSelection](System.Func`2[TState,TSelection], System.Action`2[TSelection,TState]) because the declaring type of the method handle FSI_0002+Store`1[TState] is generic. Explicitly provide the declaring type to
  * bxc#58738 - System.IO.MonoIO.Read - Native Crash when device file is gone
  * bxc#58782 - Exception stack traces are deleted when reaching the native-to-managed wrapper in a reverse invoke
  * bxc#58829 - Application Output Window being flooded with “[Mono] worker parking, [Mono] worker unparking” messages when debugging agasint Android Emulator
  * bxc#59235 - [mono-2017-06] android.runtime.JavaProxyThrowable: System.ObjectDisposedException: Cannot access a disposed object.
  * bxc#59274 - [Mac]A crash report is generated on closing mac apps

-------------------------------------------------------------------
Fri Sep 29 21:00:00 UTC 2017 - fwdsbs.to.11df@xoxy.net

- Update to version 5.2.0.224 (5.2.0 SR4)
- Changes:
  * Mono cecil source updated (more info at https://github.com/jbevain/cecil/commit/44e4d344d674195b4d2950c48fd1cb55fe42a1ef)
- Bugfixes:
  * bxc#44027 - Chunked HTTP PUT times out
  * bxc#57919 - dynamic object is not supported
  * bxc#58829 - Application Output Window being flooded with "[Mono] worker parking, [Mono] worker unparking" messages when debugging agasint Android Emulator.

-------------------------------------------------------------------
Fri Aug 18 12:00:00 UTC 2017 - fwdsbs.to.11df@xoxy.net

- Update to version 5.2.0.215 (5.2.0 Stable)
- New features and changes:
  * Strong assembly names: mono will now optionally respect public keys and version numbers when loading strongly signed assemblies
  * Added experimental default interface methods support
  * System.Numerics.Vectors: the library is now considered ready for general usage
  * .NET Standard 2.0 support: loading and running a library compiled against the 2.0 standard should work fine now
  * The reference assemblies were updated to provide the .NET 4.7 API set
  * The mono command now runs as a 64bit application by default. You can use the --arch=32 option to run Mono as 32bit again
  * Optimized Array Stores
  * Class Initialization Improvements
  * GC: reduced minor collection pause times
  * Interpreter now passes the majority of the JIT test suite, it can now run non-trivial programs
- Added upstream patch provides-facades.patch:
  * Search provides (for RPM-packaging) not only for GAC dir, but also for "Facades" and "4.5" mono-libdirs
- Added upstream patch 0001-btls-Disable-BUILD_SHARED_LIBS-while-building-boring.patch:
  * Disable BUILD_SHARED_LIBS while building boringssl, so its symbols are not exported from the btls shared lib
- Added upstream patch fix-project-builds-linux.patch:
  * Fix finding nuget packages in lower-case dirs on case-sensitive filesystems
- Added patch fix-dbg-headers.patch:
  * Add missing internal headers to distribution in order to fix build for mono-debugger package
- Bugfixes:
  * bxc#580 - Type.Load loads strong type despite version mismatch
  * bxc#39444 - Action ReflectedType differs from Delegate ReflectedType for virutal methods
  * bxc#43805 - Output of DateTime.Now() differs on Mono for ambiguous time period
  * bxc#43988 - Stack overflow in System.Text.Encoding.Default
  * bxc#46661 - Runtime exception filters truncate exception stack traces on NSLog
  * bxc#46929 - Datetime error on Mono.data.Sqlite
  * bxc#47221 - Thread.Name can only be set once inside async callback
  * bxc#47599 - HttpClient Transfer-Encoding:chunked is not added to the header - not able to transfer large files
  * bxc#49721 - Assembly binder uses wrong strongly named assembly when same assembly with different version exists in local folder
  * bxc#50529 - crash in thread-native-exit.exe
  * bxc#51522 - Overload resolution fails for referenced assembly
  * bxc#51561 - Getting process name of process running under higher privilege user throws exception
  * bxc#51653 - mono_thread_info_wait_one_handle ignored alertable argument
  * bxc#52086 - Nullable structs with implicit operators generate invalid IL code when compiling with Mono
  * bxc#52294 - C# compiler reports an incorrect error in a lambda with generic constraints
  * bxc#52340 - Compiler crashes with FATAL UNHANDLED EXCEPTION (nullref)
  * bxc#52345 - Process has exited, so the requested information is not available
  * bxc#52429 - Shutdown hang then crash in Finalizer thread
  * bxc#52437 - Random NullReferenceExceptions in StringBuilder.ThreadSafeCopy
  * bxc#52448 - StreamContent apparently needs to rewind stream before sending it
  * bxc#52475 - MTOUCH: error MT3001: Could not AOT the assembly
  * bxc#52511 - configure script doen’t detect bad configuration
  * bxc#52549 - error: mono_w32socket_convert_error: no translation into winsock error for (41) "Protocol wrong type for socket"
  * bxc#52590 - Cannot compile for iOS, TypeBuilder exists in two places.
  * bxc#52599 - await in finally clause prevents disposal of enclosing using statement
  * bxc#52600 - Full AOT: Strange combination of structs, generics, and enums causes runtime failure
  * bxc#52743 - denied loading problems
  * bxc#52845 - [Cycle 9] Satellite assemblies not bundled when using "Bundle assemblies into native code" due to "unknown escape sequence" error from gcc during mkbundle step
  * bxc#52866 - F# sprintf AOT bug still exists
  * bxc#52899 - mprof-report missing filenames in coverage xml output when using portable pdbs
  * bxc#53066 - Can’t Build Project in Debug with "Could not AOT the assembly"
  * bxc#53131 - Calling MakeArray() on a type with a rank that is too big does not throw an exception.
  * bxc#53153 - Implement RuntimeHelpers::IsReferenceOrContainsReferences
  * bxc#53166 - Application crashes when setting a get-only property in constructor
  * bxc#53196 - List<>.Sort() using insertion sort does not sort all values when equality isn’t checked.
  * bxc#53202 - Number minus Enum gives wrong value
  * bxc#53231 - csc doesn’t unify same file passed multiple times when one path is relative
  * bxc#53278 - Two coreclr SIMD test failures (one regression from 4.8)
  * bxc#53334 - es-US Culture wrong number formatting
  * bxc#53684 - Crash when enumerating directory and selecting the first file
  * bxc#53689 - [Test] Certificate7 disabled due to SecCertificateCreateWithData does different things on 10.11 vs 10.12 with invalid certificates
  * bxc#53792 - CFNetworkHandler reports correct download when internet connection is lost during request
  * bxc#53843 - Mono deadlocks on shutdown while waiting for a process which has died
  * bxc#53890 - Regression: Native crash while running tests with xunit with mono 2017-02 branch, works with 4.8.0.520
  * bxc#54212 - Mono allows casts of non-zero bound array to zero bound array
  * bxc#54322 - await in catch-block inside a loop causes the same exception to be caught multiple times
  * bxc#54448 - Unable to revert to thread-local storage for CurrentThread.CultureInfo
  * bxc#54485 - Creating an open generic type with recurrent constraint fails
  * bxc#54991 - Cannot compile get => _text
  * bxc#55041 - Stripping mscorlib in simple example changes IntPtr (5) behavior?
  * bxc#55083 - coreclr test b353858.il fails after 6f33b62f39a273fccb78f71513cb5e0dfb987c70
  * bxc#55436 - System.Runtime refuses to load with strict naming
  * bxc#55577 - SIMD instructions with System.Numerics.Vectors do not work
  * bxc#55603 - Follow-up to bug 52845: Satellite assemblies not loaded by app when using "Bundle assemblies into native code" even though they are now successfully mkbundled
  * bxc#55681 - System.Reflection.Emit.ModuleBuilder.build_metadata bug when running FAKE’s test suite
  * bxc#56081 - Returning a valuetype from an async method with an awaited parameter yields a Mono.CSharp.InternalErrorException: Await yields with non-empty stack
  * bxc#56240 - Performance Degradation When Using Expressions
  * bxc#56247 - Enumerable.OrderByDescending behaves differently on LLVM FullAOT
  * bxc#56275 - Unable to copy appname.dll from obj to bin because it is being used by another process
  * bxc#56493 - Windows MMAP doesn’t release file
  * bxc#56567 - Passing large struct into exception filter method crashes runtime with SIGSEGV
  * bxc#56611 - Regression: ArrayTypeMismatchException when running F# script
  * bxc#56694 - Assertion: should not be reached at d:\j\workspace\v\repos\mono\mono\sgen\sgen-scan-object.h:91
  * bxc#56821 - Static ctor of MarshalByRefObject runs in primary AppDomain
  * bxc#56824 - Runtime crash with VSMEF
  * bxc#57222 - System.Reflection.AmbiguousMatchException for two fields with same name but different types
  * bxc#57744 - ReflectionTypeLoadException.LoaderExceptions has null exceptions

-------------------------------------------------------------------
Mon Aug  7 10:21:45 UTC 2017 - schwab@suse.de

- ucontext.patch: use ucontext_t instead of struct ucontext

-------------------------------------------------------------------
Fri May 26 21:00:00 UTC 2017 - fwdsbs.to.11df@xoxy.net

- Update to version 5.0.1.1 (5.0.1 Stable)
- Bugfixes:
  * bxc#56275 - Unable to copy appname.dll from obj to bin because it is being used by another process
  * bxc#56240 - Performance Degradation When Using Expressions
  * bxc#56177 - peverify fails on FSharp.Core.dll with mono_os_mutex_lock
  * bxc#55858 - Microsoft.WebApplication.targets Missing from mono5
  * bxc#56322 - Running nunit tests with domain isolation crashes Mono
  * bxc#55988 - Apps using Roslyn crash when trying to load Roslyn
  * bxc#56260 - "This stream does not support writing at System.IO.Compression.DeflateStream.BeginWrite" message
  * bxc#55087 - "System.NotSupportedException: Stack walks are not supported on this platform - System.Reflection.MethodBase.GetCurrentMethod" message on Android

-------------------------------------------------------------------
Tue May 16 13:27:46 UTC 2017 - idonmez@suse.com

- Disable rosyln on ppc64le

-------------------------------------------------------------------
Thu May 11 23:00:00 UTC 2017 - fwdsbs.to.11df@xoxy.net

- Update to version 5.0.0.100 (5.0 Stable)
- New features and changes:
  * Shipping Roslyn C# compiler to enable C#7 support
  * Support for msbuild and deprecating xbuild
    (msbuild currently not included, xbuild deprecated but still maintained)
  * Enabling concurrent SGen garbage collector to reduce time spent in GC
  * Continued Progress on .NET Class Library convergence
- Packaging changes:
  * Do not package roslyn csc compiler on platforms that do not support it
  * Add xbuild-revert-to-mcs.patch: revert xbuild to use old mcs compiler on platforms that do not support roslyn

-------------------------------------------------------------------
Tue May 4 12:00:00 UTC 2017 - fwdsbs.to.11df@xoxy.net

- Enable external BTLS library build only on supported platforms (x86 and x86_64 right now):
  * Fix build for arm, arm64, ppc64, ppc64le.
- Enable pedump binary packaging for arm64 builds.

-------------------------------------------------------------------
Fri Apr 28 15:00:00 UTC 2017 - fwdsbs.to.11df@xoxy.net

- Update to version 4.8.1.0 (4.8 Service Release 1)
- Remove patch mono-config-fix-monoposixhelper-libdir.patch:
  * Instead, use fix from official spec file
- New features (see http://www.mono-project.com/docs/about-mono/releases/4.8.0 for more info):
  * Some API additions for .NET Standard 2.0
  * Mono now ships with TLS 1.2, powered by Google’s BoringSSL project
  * The MKBundle tool has been updated to easily support cross-compilation
  * Runtime Logging: the new MONO_LOG_DEST environment variable can set to instruct the runtime where to write the tracing messages to
  * Concurrent SGen mode improved
  * More code have been adopted from Reference Source
- Bugfixes:
  * bxc#3323: Assertion when deleting global namespace inside method
  * bxc#3399: [PATCH] pending_exception support is incomplete
  * bxc#3434: Mono Compiler crashes when using a DelegateType as a method call
  * bxc#3706: generics aot jit problem
  * bxc#3735: Attempting to JIT compile method: using Linq’s “Any” fails on the device
  * bxc#3767: Unit test UI table cell extends beyond cell bounds for failed test
  * bxc#3811: DataContractJsonSerializer deserialization fails with subclass of List as known type
  * bxc#3850: ScrollEventArgs in Form_Scroll method has invalid values
  * bxc#3960: DismissModalViewControllerAnimated() crashes on 5.2.9
  * bxc#4006: MonoDevelop fails to start with no warning if Gtk# is not installed on windows
  * bxc#5644: Mono allows to access not accessible method
  * bxc#7467: DefaultNonPersistentConnectionLimit is to low
  * bxc#12571: Usage of XElement with XmlAnyElementAttribute is not supported by XmlSerializer
  * bxc#19594: WebException.Response is null when https request needs proxy authentication
  * bxc#29189: Compiling class referencing corefx facade/contract assemblies raises error “Reference to type System.SByte claims it is defined assembly mscorlib,.. but couldn’t be found”
  * bxc#30686: ZipArchive ctor throws InvalidDataException for WebConnectionStream
  * bxc#30821: Compilation generates CS1701 warning
  * bxc#32374: WebRequest::BeginGetRequestStream incorrectly sets IAsyncResult::CompletedSynchronously to always true
  * bxc#33571: Mono crashes when marshalling fixed arrays
  * bxc#34802: Debugger crash on break-all, step into sequence.
  * bxc#35536: Dns.GetHostEntry no longer supports IPv6
  * bxc#35662: Type System.ServiceModel.Security.Tokens.BinarySecretSecurityToken is missing in assembly System.IdentityModel
  * bxc#39282: [System.IO.Compression] issues with ZipArchiveEntry streams
  * bxc#39859: Xamarin.Android apps on the Samsung Galaxy S7 fails to start with the error System.ExecutionEngineException SIGILL
  * bxc#40603: Mono can’t parse Date in DB wich is in format: “2016-02-04 10:39:11Z”
  * bxc#40916: [System.IO.Compression] ZipArchive can create an ZipArchiveEntry that has a modified time of DateTime.MinValue
  * bxc#41035: DataViewTest2.DataView_ListChangedEventTest occasionally fails with llvm+sgen
  * bxc#41349: System.TimeZoneInfo.IsDaylightSavingTime (DateTimeOffset dateTimeOffset) Not Implemented Exception
  * bxc#41393: [WatchOS 2] Incorrect calling convention for P/Invokes taking structures
  * bxc#41431: [aot] Build fails due to ‘Sgen STW requires a working mono-context’ error
  * bxc#41466: mono_class_is_subclass_of return incorrect value by assuming mono_class_init has been called on parameters
  * bxc#41477: SafeSocketHandle ObjectDisposedException ‘handle’ exception with linked CancellationTokenSource
  * bxc#41492: DateTimeOffset.ToLocalTime() throwing erroneous error
  * bxc#41509: DLR crashes when trying to convert a object to null.
  * bxc#41530: [iOS]TimerTest failing randomly on devices,
  * bxc#41552: HttpResponseMessage does not support multiple Links header entries
  * bxc#41575: A Method That Accepts a FormattableString Object Is Not Called
  * bxc#3323: Assertion when deleting global namespace inside method
  * bxc#3399: [PATCH] pending_exception support is incomplete
  * bxc#3434: Mono Compiler crashes when using a DelegateType as a method call
  * bxc#3706: generics aot jit problem
  * bxc#3735: Attempting to JIT compile method: using Linq’s “Any” fails on the device
  * bxc#3767: Unit test UI table cell extends beyond cell bounds for failed test
  * bxc#3811: DataContractJsonSerializer deserialization fails with subclass of List as known type
  * bxc#3850: ScrollEventArgs in Form_Scroll method has invalid values
  * bxc#3960: DismissModalViewControllerAnimated() crashes on 5.2.9
  * bxc#4006: MonoDevelop fails to start with no warning if Gtk# is not installed on windows
  * bxc#5644: Mono allows to access not accessible method
  * bxc#7467: DefaultNonPersistentConnectionLimit is to low
  * bxc#12571: Usage of XElement with XmlAnyElementAttribute is not supported by XmlSerializer
  * bxc#19594: WebException.Response is null when https request needs proxy authentication
  * bxc#29189: Compiling class referencing corefx facade/contract assemblies raises error “Reference to type ‘System.SByte’ claims it is defined assembly ‘mscorlib,..’ but couldn’t be found”
  * bxc#30686: ZipArchive ctor throws InvalidDataException for WebConnectionStream
  * bxc#30821: Compilation generates CS1701 warning
  * bxc#32374: WebRequest::BeginGetRequestStream incorrectly sets IAsyncResult::CompletedSynchronously to always true
  * bxc#33571: Mono crashes when marshalling fixed arrays
  * bxc#34802: Debugger crash on break-all, step into sequence.
  * bxc#35536: Dns.GetHostEntry no longer supports IPv6
  * bxc#35662: Type System.ServiceModel.Security.Tokens.BinarySecretSecurityToken is missing in assembly System.IdentityModel
  * bxc#39282: [System.IO.Compression] issues with ZipArchiveEntry streams
  * bxc#39859: Xamarin.Android apps on the Samsung Galaxy S7 fails to start with the error System.ExecutionEngineException SIGILL
  * bxc#40603: Mono can’t parse Date in DB wich is in format: “2016-02-04 10:39:11Z”
  * bxc#40916: [System.IO.Compression] ZipArchive can create an ZipArchiveEntry that has a modified time of DateTime.MinValue
  * bxc#41035: DataViewTest2.DataView_ListChangedEventTest occasionally fails with llvm+sgen
  * bxc#41349: System.TimeZoneInfo.IsDaylightSavingTime (DateTimeOffset dateTimeOffset) Not Implemented Exception
  * bxc#41393: [WatchOS 2] Incorrect calling convention for P/Invokes taking structures
  * bxc#41431: [aot] Build fails due to ‘Sgen STW requires a working mono-context’ error
  * bxc#41466: mono_class_is_subclass_of return incorrect value by assuming mono_class_init has been called on parameters
  * bxc#41477: SafeSocketHandle ObjectDisposedException ‘handle’ exception with linked CancellationTokenSource
  * bxc#41492: DateTimeOffset.ToLocalTime() throwing erroneous error
  * bxc#41509: DLR crashes when trying to convert a object to null.
  * bxc#41530: [iOS]TimerTest failing randomly on devices,
  * bxc#41552: HttpResponseMessage does not support multiple Links header entries
  * bxc#41575: A Method That Accepts a FormattableString Object Is Not Called
  * bxc#41602: Compiler fails to recognize Indexer
  * bxc#41616: Mono 4.4.0 crashes when using Socket.ConnectAsync to a unix domain socket if the path doesn’t exist
  * bxc#41667: new DateTime().ToLocalTime() results in an exception
  * bxc#41705: MonoTests.System.Threading.MonitorTest.Enter_Null crashes test runtime with assertion
  * bxc#41775: Zip version needed to extract not correct in System.IO.Compression
  * bxc#41782: [Cycle 7] “System.Net.WebException: Error: NameResolutionFailure” when attempting web requests with certain raw IP addresses
  * bxc#41874: Reflection throws AmbiguousMatchException when calling GetProperty on a class that inherits from a generic base class.
  * bxc#41897: NotSupportedException thrown from IPInterfaceProperties.UnicastAddresses
  * bxc#41937: invoke.exe test asserts on bitcode
  * bxc#41955: Bitcode “missing image did not probe corlib” exception thrown
  * bxc#41979: CodeDom cannot call mcs because of invalid encoding configuration
  * bxc#42057: error CS0121: The call is ambiguous
  * bxc#42169: (managed_alloc) Fatal: Managed allocator missing for (mkbundle) in Mono 4.4.X
  * bxc#42191: sdb deadlocks all the time while XS debugs XS
  * bxc#42198: error CS0529: Inherited interface causes a cycle in the interface hierarchy.
  * bxc#42219: [System.IO.Compression] Cannot create ZipArchive with duplicate entries with same name
  * bxc#42224: Compiler crashed with code: 1, “Await yields with non-empty stack” from AssertEmptyStack ()
  * bxc#42226: WCF client Expecting FaultException raising NotImplemented Exception instead When element is provided.
  * bxc#42271: COOP: gc unsafe mode when printing native backtrace causes crash if GC is triggered
  * bxc#42274: System.IO.Compression.ZipArchive vs System.Xml.XmlReader
  * bxc#42395: Build runs indefinitely and never finishes
  * bxc#42408: WebClient.DownloadString returns 401 Unauthorized when using Basic authentication
  * bxc#42410: String Interpolation available even when langversion < 6
  * bxc#42413: Volatile fields don’t enforce acquire - release semantics like Volatile.Read() and Volatile.Write()
  * bxc#42584: InternalError / Crash when using System.Net.Http and PCL library
  * bxc#42585: Switch fall-through not rejected
  * bxc#42611: wrong compiler error when using IEnumerable.Sum
  * bxc#42625: coop: crash with watchos system tests
  * bxc#42688: Can’t wait for more than 429496 ms (429s)
  * bxc#42702: Unnecessary dependency checks
  * bxc#42750: Deploying an iOS app to iPhone 6S crashes when a breakpoint is set
  * bxc#42843: XmlSerializer does not deserialize UTC Time values on Xamarin.Android but works well on windows.
  * bxc#42864: [Cycle 7] “System.Net.WebException: Error: NameResolutionFailure” on second web request to certain raw IP addresses with HttpClient
  * bxc#42887: Encoding iso-8859-1 throws IndexOutOfRangeException for Unicode surrogate pairs
  * bxc#43022: ZipArchive.Entries is not updated when ZipArchiveEntry is deleted
  * bxc#43032: System.Uri cannot parse url with underscore at start
  * bxc#43099: [watchOS] Cannot enter GC safe region if the thread is not attached
  * bxc#43193: Keep CurrentCulture in async/await
  * bxc#43265: Inconsistency in Compilation of Async Code Compared to MSFT Compilers
  * bxc#43291: Runtime crash at reflection.c:mono_custom_attrs_construct_by_type while calling GetCustomAttributes for a proxy class
  * bxc#43320: Thread aborts in the middle of .cctor and hell break loose
  * bxc#43357: WCSessionReplyHandler crashes WatchKit app
  * bxc#43400: “using static” dependent on compile order
  * bxc#43471: pragma warning disable still shows warnings in “Errors” pad
  * bxc#43512: TimeZoneInfo.ConvertTimeBySystemTimeZoneId ArgumentException
  * bxc#43636: [Cycle 8] “Index was out of range. Must be non-negative and less than the size of the collection” in System.Collections.Generic.List1[T].set_Item() when attempting to compile certain C# code involving tasks, async/await, and try/catch/finally
  * bxc#43695: Nuget resolves .netstandard <= 1.3 when Xamarin.IOS does not support it
  * bxc#43696: Delegate caching can invoke unrelated implementation leading to strange results
  * bxc#43718: mcs crashes when unable to resolve type inside lambda using the ‘as’ operator
  * bxc#43786: peverify is broken again
  * bxc#43921: System.Threading.ThreadHelper.ThreadStart_Context tries to allocate, crashes
  * bxc#44025: FTP download issue with IPv6
  * bxc#44109: NetworkCredential does not convert SecureString
  * bxc#44164: gosharp-regexp benchmark triggers unwinding crash when profiling
  * bxc#44168: Can use non-accessible member with nameof
  * bxc#44381: Debugger crash with domain unloading and VSTU
  * bxc#44402: Array doesn’t implement non-generic IEnumerable
  * bxc#44406: Xamarin.Mac.Socket exception:An address incompatible with the requested protocol was used
  * bxc#44413: HttpHeaders.TryAddWithoutValidation behaves differently from .NET
  * bxc#44440: Attempting to JIT error in function with pointer arithmetic
  * bxc#44549: Ide Shuts down: System.ArgumentException: Item has already been added. Key in dictionary: ‘XamlG’ Key being added: ‘XamlG’
  * bxc#44624: Connecting to SQL Server using IPv4 exception.
  * bxc#44707: RemotingConfiguration.Configure() Throws RemotingException Because it Cannot Load ‘machine.config’
  * bxc#44729: Type.GetType(“blah”,true,false) throws TypeLoadException without message
  * bxc#44751: Incorrect code flow analysis with goto and out parameter causes CS0177
  * bxc#44843: SqlCommand.ExecuteReaderAsync throws NotImplementedException
  * bxc#44937: System.Diagnostics.StartProcess does not detect dotnetcore compiled assemblies as managed
  * bxc#44978: HttpClientHandler.SendAsync should throw HttpRequestException for proxy auth failure
  * bxc#44994: DeflateStream decompression is incomplete if reading byte-by-byte
  * bxc#45129: Uri.IsWellFormedUriString returns incorrect result for relative uris beginning with slash
  * bxc#45137: Seeing new AAPT0000 errors when building certain projects against master
  * bxc#45270: Cannot add System.Reactive to watchOS Extension project
  * bxc#45286: C# string interpolation line does not compile on OSX but does on MSBuild
  * bxc#45774: Wrong scopes in .mdb in case of foreach loop
  * bxc#45788: Marshaling a native NULL pointer to a managed array creates a new zero sized array
  * bxc#46175: If the RSA will be used by multiple threads, it has a variety of exceptions.
  * bxc#46190: Overload resolution fails in a case where methods use a named parameter in different positions
  * bxc#46250: Type.GetType with throwOnError true doesn’t throw for a generic instance type with too few generic arguments
  * bxc#47205: Uri.TryCreate throws exception
  * bxc#42414: Run path_helper in OSX postinstall script to make Mono commands available in same shell session
  * bxc#42365: Mono 4.4.1 OSX package doesn’t clean up old symlinks from /usr/local/bin

-------------------------------------------------------------------
Thu Nov 17 06:33:02 UTC 2016 - mailaender@opensuse.org

- Update to version 4.6.2 (service release)
  * bxc#44708 - TrustFailure when attempting to access HTTPS servers on ports other than 443
  * bxc#39832 - SIGSEGV when running roslyn

-------------------------------------------------------------------
Sat Nov 12 14:36:43 CET 2016 - ro@suse.de

- add boehm define in specfile to exclude boehm parts on aarch64
- enable buildrequires for valgrind on aarch64

-------------------------------------------------------------------
Sun Oct 16 08:46:34 UTC 2016 - mailaender@opensuse.org

- Update to 4.6.1.5 re-release from 4.6.1.3 (no public changelog)

-------------------------------------------------------------------
Sun Oct  2 08:26:07 UTC 2016 - mailaender@opensuse.org

- Update to version 4.6.1 (Bugfix release)
  * bxc#44402 - Array doesn’t implement non-generic IEnumerable
- Drop upstream applied bxc-44402.patch

-------------------------------------------------------------------
Tue Sep 27 18:00:00 UTC 2016 - fwdsbs.to.11df@xoxy.net

- Update source tarball from 4.6.0.243 to v4.6.0.245
 * fixes in mcs/class/Microsoft.NuGet.Build.Tasks/Makefile
- added bxc-44402.patch: bxc#44402 - Array doesn’t implement non-generic IEnumerable. See https://bugzilla.xamarin.com/show_bug.cgi?id=44402 for more details

-------------------------------------------------------------------
Sat Sep 24 17:36:20 UTC 2016 - mailaender@opensuse.org

- Update to version 4.6.0
 * bxc#4242 - JavaScriptSerializer should use invariant culture
 * bxc#5644 - Mono allows to access not accessible method
 * bxc#6057 - UdpClient IPv6 Receive throws ArgumentException
 * bxc#8554 - System.Net.NetworkInformation.Ping - SendPingAsync operation fails
 * bxc#10108 - mono_jit_cleanup asserts/aborts on shutdown if soft debugging
 * bxc#11699 - FileStream writing incorrectly (some internal position is wrong)
 * bxc#12205 - MethodInfo.ReflectedType returns declaring type for generic base classes
 * bxc#13538 - Extraneous lines in Application Output for Debug.WriteLine
 * bxc#13957 - Xamarin.Android Apps are crashing on dual core x86 Devices
 * bxc#18361 - FileInfo.MoveTo does not work with absolute paths
 * bxc#20186 - Another AOT bug
 * bxc#23206 - MS allows threadpool threads to be renamed multiple times
 * bxc#24974 - Exception occurs in __ComObject finalizer when shutting down process
 * bxc#27303 - NullReferenceException with ARMv7
 * bxc#29585 - Type.GetMethods returns generic method that cannot be specialized
 * bxc#29916 - System.Reflection.ParameterInfo.GetCustomAttributes always throws NullReference exception.
 * bxc#30686 - ZipArchive ctor throws InvalidDataException for WebConnectionStream
 * bxc#30821 - Compilation generates CS1701 warning
 * bxc#32020 - Don’t default to –with-tls=pthread on Solaris/x86
 * bxc#32315 - Inspecting a variable gives information from the incorrect symbol
 * bxc#32374 - WebRequest::BeginGetRequestStream incorrectly sets IAsyncResult::CompletedSynchronously to always true
 * bxc#32561 - Could not load file or assembly Microsoft.Build.Utilities
 * bxc#32768 - New bcl-tests crashing due to System.ObjectDisposedException: Cannot access a disposed object
 * bxc#33551 - System.Net.SmtpClient uses an invalid HELO name
 * bxc#33553 - System.IO.Compression.ZipArchive produces bad archive files
 * bxc#33809 - Exception with SignalR 2.2 and Mono 4.2.0
 * bxc#34133 - [iOS]System test failures on iOS devices with cycle6 build
 * bxc#34314 - libgdiplus.so without API suffix is referenced by System.Imaging
 * bxc#34413 - SOAP header within the SOAP envelope is not being serialized correctly
 * bxc#34498 - AOT task fails if project path has a space in it
 * bxc#34883 - bcl-test failure in PingTest.PingSuccess on Samsung Galaxy S3
 * bxc#34916 - GZipStream fails on iOS
 * bxc#35004 - Filename returned by LocalEndpoint of UnixListener has null characters appended to the end which causes the socket file to not be deleted when the UnixListener is disposed
 * bxc#35872 - Cultureinfo -> numinfo internal field is NonSerialized on Mono, but not on Windows
 * bxc#35876 - Incorrect return of DateTime.ToUniversalTime method for DateTime.MaxValue.
 * bxc#36080 - [Mono 4.2] “‘System.ServiceModel.EndpointAddress10’ does not have a static method ‘GetSchema’ that takes a parameter of type ‘System.Xml.Schema.XmlSchemaSet’” when using the Xamarin Mobile profile with some WCF client apps
 * bxc#36116 - Mono 4.2 generates incorrect “Reference.map”, causing “Could not find file ‘/TempConvert.wsdl’” when adding or updating a Web Reference in Xamarin Studio
 * bxc#36183 - Since upgrading to Xamarin Android 6 get error error MSB3733: Input file “obj\Android\Debug\android\AndroidManifest.xml” cannot be opened
 * bxc#36192 - Error binding Socket to Loopback
 * bxc#36388 - Application settings produce extra XML headers during saving
 * bxc#36401 - [XM 2.4] “System.Configuration.ConfigurationErrorsException: Failed to load configuration section for dataContractSerializer” when using ChannelFactory with the “Xamarin.Mac .NET 4.5 Framework”
 * bxc#36723 - [iOS][llvm/thumb] Linksdk “Linker_RuntimeWrappedException” test crash on iOS device with master build * Assertion at ../../../../../mono/mono/mini/aot-runtime.c:4733, condition `plt_entry’ not met
 * bxc#36786 - Dictionary constructed with StringComparer.OrdinalIgnoreCase malfunctions if culture is changed after adding values
 * bxc#36829 - XmlSerializer does not support subclasses when serializing sequences of items
 * bxc#36852 - Update to latest Xamarin.Android (6.0.0.34) causes random application crashes with no information
 * bxc#36988 - stderr is not redirected correctly
 * bxc#37116 - [iOS] Application.Current.Properties does not persist on iOS with Forms
 * bxc#37246 - [tvOS]System test failure on device
 * bxc#37414 - Environment.Is64BitOperatingSystem returns false on OS X
 * bxc#37582 - Latest master crashes when trying to set breakpoint on async anonymous method
 * bxc#37583 - MAJOR performance decrease between 4.0.5.1 and 4.2.1
 * bxc#37681 - Fails to parse negative integers with Hebrew region set
 * bxc#37695 - Delegate references an overridden method in derived class misbehaves when marshalled as a parameter to native C function.
 * bxc#37732 - [iOS] HttpWebRequestTest.NtlmAuthentication failed on iOS device with mono 4.3.2
 * bxc#37801 - C * bxc# 6: Compiler crashed with code: 1 - FATAL UNHANDLED EXCEPTION
 * bxc#37834 - GetFileAttributes does not return FileAttributes.ReadOnly for locked file on OSX
 * bxc#37848 - CultureInfo.GetCultureInfo(0) should throw ArgumentOutOfRangeException instead of CultureNotFoundException
 * bxc#37886 - mcs 4.2.2 generates bad IL when string-interpolating a dynamic object
 * bxc#37891 - System.Net.Configuration/SmtpSection.cs missing ‘deliveryFormat’
 * bxc#38012 - Using Task’s under memory pressure leads to unexpected crashes inside the TPL on iOS
 * bxc#38025 - The debugger now steps and breaks correctly when stepping into, over or out of a function which recursively calls itself.
 * bxc#38145 - [XI]watchOS unit test fails to build with MT5210: Native linking failed
 * bxc#38161 - instability/crash when using DateTime under cpu load
 * bxc#38222 - Mono crashes if accessing attribute from missing reference .dll
 * bxc#38223 - missing package in arm64 build
 * bxc#38250 - Stack Corruption in mono involving tailcalls (where code is fine on Windows)
 * bxc#38322 - HttpListenerRequest.IsLocal isn’t good enough
 * bxc#38331 - No longer able to run unit test project from command line via ‘mono nunit-console.exe’
 * bxc#38379 - Byte enums fail to compare correctly on 64 bit iOS devices when using the LLVM compiler
 * bxc#38382 - New bcltest failure in AsyncTaskMethodBuilderTest.CallContextFlow
 * bxc#38392 - Seeing new consistent test-bcl crash on new Marshmallow devices after switching to mono 4.3.2
 * bxc#38408 - Error disposing of Filestream when leaving using statement
 * bxc#38525 - kill -QUIT produces a very broken stacktrace
 * bxc#38553 - FileVersionInfo.ProductVersion is not populated from AssemblyVersion
 * bxc#38599 - Regression: SynchronizationContext.Current returns wrong value in delegate run by SynchronizationContext.Send.
 * bxc#38600 - mkbundle Doesn’t support assemblies with spaces in their names
 * bxc#38614 - Form creation fails when System.Windows.Forms.XplatUIWin32 was initialized from thread which is already finished
 * bxc#38638 - Getting build error “Error initializing task XmlPeek: Not registered task XmlPeek”
 * bxc#38666 - Review (and fix) uses of mono_msec_ticks
 * bxc#38703 - Linq.Expression when assigned from a lambda exression aren’t constructed correctly
 * bxc#38712 - Mono 4.3 Cryptography.ProtectedData fails to decrypt data from Mono 4.2
 * bxc#38796 - FileInfo.ToString misbehaving after MoveTo
 * bxc#38818 - linked apps with Java.Interop.dll crash on device
 * bxc#38825 - mono_image_open() does not check header anymore
 * bxc#38933 - CryptographicException from ProtectedData in multi-threaded execution
 * bxc#38992 - error CS1009: Unrecognized escape sequence ‘_’ in $@ String
 * bxc#39042 - appdomain-unload.exe sometimes hangs in CI
 * bxc#39077 - AppDomain.CurrentDomain.UnhandledException prevents exceptions in ThreadPool from crashing the application
 * bxc#39153 - return wrong value if async/await used in finally block
 * bxc#39200 - Console app crashes with 4.4.0, assertion
 * bxc#39266 - C * bxc#6 null conditional operator does not appear to work with async when using mono/xbuild
 * bxc#39279 - Thread pool sizes are incorrect on linux when processor affinity is set, which complicates running mono applications in docker containers
 * bxc#39282 - [System.IO.Compression] issues with ZipArchiveEntry streams
 * bxc#39305 - [iOS]Signal Current failure in mscorlib tests
 * bxc#39347 - Assertion when passing delegate of icall method to p/invoke
 * bxc#39420 - [iOS]mini test failures when Armv7s+LLVM is enabled in release config
 * bxc#39455 - Nameof operator doesn’t handle sub-expressions
 * bxc#39459 - Corrupted async result when returning new struct directly
 * bxc#39528 - [iOS] [Private] Assertion: should not be reached at tramp-arm64-gsharedvt.c:78
 * bxc#39568 - Unmanaged crash: icall.c:5484: Could not resolve type with token 01000008 assembly:System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 type:System.IdentityModel.Tokens.IssuerTokenResolver member:
 * bxc#39569 - Validation of ETag by HttpHeaders.Add is too strict
 * bxc#39574 - Compilattion Error CS0842 thrown on Expression Body getter property with explicit StructLayout
 * bxc#39631 - PPDB support fails to load any pdb when verifier is involved
 * bxc#39644 - * Assertion at image.c:512, condition `image->heap_guid.size >= 16’ not met
 * bxc#39669 - When using XML configuration files, a broader set of configuration section types is now available, including System.Configuration.DictionarySectionHandler.
 * bxc#39715 - ppdb support causes crash at shutdown
 * bxc#39746 - Assertion at method-to-ir.c:11652 when using mono master/ca7b692f4 and nuget
 * bxc#39824 - Exceptions can now be serialized using SerializeObjectState.
 * bxc#39866 - Await + finally produces exe that causes InvalidProgramException on Windows
 * bxc#39911 - System.Reflection.Emit.DerivedType isn’t an IReflectableType so GetTypeInfo throws
 * bxc#40040 - * Assertion: should not be reached at mini.c:4403
 * bxc#40060 - System.TypeSpec.Parse cannot parse generics + anonymous type name
 * bxc#40088 - Call in lamda of static method with dynamic parameter fails in constructor argument
 * bxc#40108 - ConditionalWeakTable collects values when the key is kept alive as toggle-ref
 * bxc#40144 - checking for __sync_bool_compare_and_swap… no
 * bxc#40175 - Runtime crashes on ‘-v –version’
 * bxc#40187 - System.IO.Directory.CreateDirectory on Linux does not handle /.. in the path
 * bxc#40239 - SIGSEGV 27408 repro
 * bxc#40368 - Setting FileInfo.LastWriteTime has different results with mono32 and mono64
 * bxc#40462 - [ios] FileStreamTest.OpenCharDeviceRepeatedly(mscorlib) failure in ios device
 * bxc#40493 - Invalid IL when using ?. operator on a Func parameter in a generic function when T is unconstrained
 * bxc#40536 - Compiler crash when attaching an event of a templated delegate with wrong template type
 * bxc#40568 - Runtime crashing on System.Enum.GetValues on char enums with F * bxc#
 * bxc#40570 - [tvos]Crypto test failures (linksdk) due to secure channel fialure on AppleTV
 * bxc#40574 - [iOS	tvOS]SystemRuntimeSerialization test failure with master build
 * bxc#40603 - Mono can’t parse Date in DB wich is in format: “2016-02-04 10:39:11Z”
 * bxc#40624 - mscorlib tests fails on master
 * bxc#40643 - Process leaking handles leads to “too many open files”
 * bxc#40646 - Oid and FriendlyName for sha384
 * bxc#40697 - Some NumberFormat have wrong GroupSeparator
 * bxc#40758 - [Regression] Remoting instance is not proxied
 * bxc#40860 - MT2001 Could not link assemblies Value does not fall within the expected range
 * bxc#40886 - pdb is always prefered over mdb
 * bxc#40899 - InvalidCastException using AppleTLS
 * bxc#40916 - [System.IO.Compression] ZipArchive can create an ZipArchiveEntry that has a modified time of DateTime.MinValue
 * bxc#40945 - NREX when modifying project/solution properties
 * bxc#40953 - Bad performance using TypeBuilder
 * bxc#41035 - DataViewTest2.DataView_ListChangedEventTest occasionally fails with llvm+sgen
 * bxc#41052 - fsharp build from source fails
 * bxc#41128 - System.Text.Encoding.Default behaviour change
 * bxc#41171 - System.Drawing.Imaging.PngCodecTest.Bitmap2bit* tests fail on Linux ARM64
 * bxc#41224 - HttpClientHandler.UseProxy = false setting is ignored.
 * bxc#41264 - [iOS]System “Socket” tests fails on devices with System.ObjectDisposedException
 * bxc#41280 - System.MethodAccessException is thrown from wrong frame
 * bxc#41290 - Behavior change of ServicePointManager.ServerCertificateValidationCallback’s SslPolicyErrors result for untrusted CA certificates
 * bxc#41393 - [WatchOS 2] Incorrect calling convention for P/Invokes taking structures
 * bxc#41431 - [aot] Build fails due to ‘Sgen STW requires a working mono-context’ error
 * bxc#41492 - DateTimeOffset.ToLocalTime() throwing erroneous error
 * bxc#41509 - DLR crashes when trying to convert a object to null.
 * bxc#41530 - [iOS]TimerTest failing randomly on devices
 * bxc#41552 - HttpResponseMessage does not support multiple Links header entries
 * bxc#41564 - XmlSerializer duplicate key bug
 * bxc#41575 - A Method That Accepts a FormattableString Object Is Not Called
 * bxc#41602 - Compiler fails to recognize Indexer
 * bxc#41616 - Mono 4.4.0 crashes when using Socket.ConnectAsync to a unix domain socket if the path doesn’t exist
 * bxc#41644 - Shutdown deadlock for mono 4.5.1/master with Xamarin Studio
 * bxc#41667 - new DateTime().ToLocalTime() results in an exception
 * bxc#41671 - [iOS]HttpListenerRequestTest.HttpRequestIsLocal fails on deivce
 * bxc#41724 - [iOS]monotouch-test unified fails to build with error ambiguous call error
 * bxc#41747 - [iOS] System.Core test-watchOS crash on device
 * bxc#41775 - Zip version needed to extract not correct in System.IO.Compression
 * bxc#41782 - [Cycle 7] “System.Net.WebException: Error: NameResolutionFailure” when attempting web requests with certain raw IP addresses
 * bxc#41786 - Mono is broken when building with the macOS 10.12 SDK
 * bxc#41833 - [SGEN?] XS crashed. error: * Assertion at gc.c:867, condition `finalizer_thread_exited’ not met
 * bxc#41874 - Reflection throws AmbiguousMatchException when calling GetProperty on a class that inherits from a generic base class.
 * bxc#41897 - NotSupportedException thrown from IPInterfaceProperties.UnicastAddresses
 * bxc#41947 - [iOS]Could not AOT assembly error on building System.Numerics with Release config
 * bxc#41956 - [watchOS] [LLVM] Incorrect codegen/optimizations
 * bxc#41961 - [watchOS] [LLVM] Exceptions in Delegate.BeginInvoke callbacks are not handled on the threadpool thread, causing process to exit due to unhandled exception
 * bxc#41979 - CodeDom cannot call mcs because of invalid encoding configuration
 * bxc#42057 - error CS0121: The call is ambiguous
 * bxc#42169 - (managed_alloc) Fatal: Managed allocator missing for (mkbundle) in Mono 4.4.X
 * bxc#42191 - sdb deadlocks all the time while XS debugs XS
 * bxc#42198 - error CS0529: Inherited interface causes a cycle in the interface hierarchy.
 * bxc#42219 - [System.IO.Compression] Cannot create ZipArchive with duplicate entries with same name
 * bxc#42224 - Compiler crashed with code: 1, “Await yields with non-empty stack” from AssertEmptyStack ()
 * bxc#42274 - System.IO.Compression.ZipArchive vs System.Xml.XmlReader
 * bxc#42408 - WebClient.DownloadString returns 401 Unauthorized when using Basic authentication
 * bxc#42410 - String Interpolation available even when langversion < 6
 * bxc#42413 - Volatile fields don’t enforce acquire - release semantics like Volatile.Read() and Volatile.Write()
 * bxc#42584 - InternalError / Crash when using System.Net.Http and PCL library
 * bxc#42585 - Switch fall-through not rejected
 * bxc#42606 - [Regression] Compact seq point enabled by default causes 100% CPU usage
 * bxc#42611 - wrong compiler error when using IEnumerable.Sum
 * bxc#42625 - coop: crash with watchos system tests
 * bxc#42688 - Can’t wait for more than 429496 ms (429s)
 * bxc#42702 - Unnecessary dependency checks
 * bxc#42750 - Deploying an iOS app to iPhone 6S crashes when a breakpoint is set
 * bxc#42864 - [Cycle 7] “System.Net.WebException: Error: NameResolutionFailure” on second web request to certain raw IP addresses with HttpClient
 * bxc#42887 - Encoding iso-8859-1 throws IndexOutOfRangeException for Unicode surrogate pairs
 * bxc#42938 - Can’t build netstandard PCL library with xbuild
 * bxc#43032 - System.Uri cannot parse url with underscore at start
 * bxc#43099 - [watchOS] Cannot enter GC safe region if the thread is not attached
 * bxc#43265 - Inconsistency in Compilation of Async Code Compared to MSFT Compilers
 * bxc#43291 - Runtime crash at reflection.c:mono_custom_attrs_construct_by_type while calling GetCustomAttributes for a proxy class
 * bxc#43357 - WCSessionReplyHandler crashes WatchKit app
 * bxc#43400 - “using static” dependent on compile order
 * bxc#43471 - pragma warning disable still shows warnings in “Errors” pad
 * bxc#43512 - TimeZoneInfo.ConvertTimeBySystemTimeZoneId ArgumentException
 * bxc#43636 - [Cycle 8] “Index was out of range. Must be non-negative and less than the size of the collection” in System.Collections.Generic.List1[T].set_Item()` when attempting to compile certain C * bxc# code involving tasks, async/await, and try/catch/finally
 * bxc#43645 - Items and properties not emitted for up to date targets
 * bxc#43718 - mcs crashes when unable to resolve type inside lambda using the ‘as’ operator
- drop libgdiplus0-un-devel.patch (included upstream)

-------------------------------------------------------------------
Fri Aug 5 00:00:00 UTC 2016 - fwdsbs.to.11df@xoxy.net

- Update to mono 4.4.2.11, service release 4.4 SR1. Bugfixes since v4.4.1.0:
 * bxc#30686 - ZipArchive ctor throws InvalidDataException for WebConnectionStream
 * bxc#34498 - AOT task fails if project path has a space in it
 * bxc#39100 - ‘library not loaded’ error when using embedded mono
 * bxc#39282 - [System.IO.Compression] issues with ZipArchiveEntry streams
 * bxc#40916 - [System.IO.Compression] ZipArchive can create an ZipArchiveEntry that has a modified time of DateTime.MinValue
 * bxc#41264 - System “Socket” tests fails on devices with System.ObjectDisposedException
 * bxc#41290 - Behavior change of ServicePointManager.ServerCertificateValidationCallback’s SslPolicyErrors result for untrusted CA certificates
 * bxc#41530 - [iOS]TimerTest failing randomly on devices
 * bxc#41979 - CodeDom cannot call mcs because of invalid encoding configuration
 * bxc#42219 - [System.IO.Compression] Cannot create ZipArchive with duplicate entries with same name
 * bxc#42274 - System.IO.Compression.ZipArchive vs System.Xml.XmlReader
 * bxc#42688 - Can’t wait for more than 429496 ms (429s)

-------------------------------------------------------------------
Tue Jun 28 00:00:00 UTC 2016 - fwdsbs.to.11df@xoxy.net

- Update to mono 4.4.1.0, service release 4.4 SR0. Bugfixes since v4.4.0.182:
 * bxc#41775 - Zip version needed to extract not correct in System.IO.Compression
 * bxc#41782 - [Cycle 7] "System.Net.WebException: Error: NameResolutionFailure" when attempting web requests with certain raw IP addresses
 * bxc#41874 - Reflection throws AmbiguousMatchException when calling GetProperty on a class that inherits from a generic base class.

-------------------------------------------------------------------
Sun Jun 12 00:00:00 UTC 2016 - fwdsbs.to.11df@xoxy.net

- Added mono-config-fix-monoposixhelper-libdir.patch to fix incorrect substitution of $mono_libdir (only for libMonoPosixHelper.so) in mono config file:
 * Fix incorrect replacement of $mono_libdir in config file for libMonoPosixHelper native library, when system libdir (/usr/lib64 on x86_64 builds) differs from mono install dir (/usr/lib)

-------------------------------------------------------------------
Sat Jun 11 00:00:00 UTC 2016 - fwdsbs.to.11df@xoxy.net

- Update to mono 4.4.0.182, new major release v4.4. Short changelog since v4.2:
 * Class Libraries now tracking .NET 4.6.1 APIs, folder structure is updated. Support for older APIs via reference assemblies
 * WCF: WebHttpBinding must use http scheme in case when SecurityMode == WebHttpSecurityMode.TransportCredentialOnly
 * Embedding API: mini_parse_debug_option allows embedders to set debug options programatically, without going through the MONO_DEBUG environment variable.
 * Unmanaged Thin Locks: improved performance for locks and thin locks in some cases, decrease in performance for the case of repetitive nesting of a lock
 * libmono now defaults to SGen
 * FullAOT: Generic Value Type Sharing improvements
 * Cooperative Mode for SGen GC by using MONO_ENABLE_COOP environment variable
 * Thread Priority Setting: Implement a SetPriority/GetPriority facility for real-time threads
 * Other improvements to garbage collector: concurrent capabilities, lock-free GC handles, performance and memory optimizations
 * Profiler: annotate GC roots, so the profiler can get better visibility into the nature of objects that keep objects alive
 * Threadpool: no longer using the sparse array for the threadpool, as for many thread it would slow down some operations
 * Debugger: the soft debugger now allows nested invocations to take place
 * PowerPC: the PowerPC backend has been updated to support big endian systems
 * C# Compiler: null operator (?.) has been implemented for dynamic expressions
 * Named events and semaphores: the support for sharing named events/semaphores etc. between processes (MONO_ENABLE_SHM) has been removed. Use Mono.Posix instead
 * Reflection: major upgrade to Reflection APIs for Roslyn support
 * Tools updated: csharp, mdoc, mkbundle, xbuild
 More information at: http://www.mono-project.com/docs/about-mono/releases/4.4.0

- Packaging changes:
 * spec file updated according to upstream srcrpm
 * removed upstreamed patches: mono-nunit-default-runtime-4.5.patch, strncat-process-c.patch, mono-un-revoke-fix-in-BNC-144655.patch
 * removed PPC patches: ppc_instruction_length_of_atomic_add_i4_is_28.patch, fix_atomic_add_i4_support_for_32bit_ppc.patch, basic_changes_powerpc_be.patch, ppc_add_monocontext_and_async_callback.patch, fix_passing_struct_parms_per_elf_abiv2.patch, update_elf_abiv2_testcases.patch, partial_sharing_false_4_powerpc.patch, fix_exception_when_reading_from_timezone_file.patch
 * fix incorrect requires for libmono-2_0-devel package: it should require libmonosgen-2_0-devel when building with %{sgen} flag enabled, fix broken symlinks to libmonosgen lib

-------------------------------------------------------------------
Thu Jun 2 00:00:00 UTC 2016 - fwdsbs.to.11df@xoxy.net

- added find-deps-fix.patch: remove libmono library check from mono-find-requires and mono-find-provides scrits to fix custom dependencies generator in other mono packages (that invoke this scripts directly)
- added missing provide-dependencies from /usr/lib/mono/4.5/Facades dir (that was removed at Nov 17 2015 changes)
- added System.Transactions and System.Configuration.Install provide-dependencies to mono-devel

-------------------------------------------------------------------
Sun Apr 17 12:43:59 UTC 2016 - mailaender@opensuse.org

- update to 4.2.3.4 (service release), bugfixes:
  * bxc#36116 - [System.Web.Services] Unix paths fix
  * bxc#37079 - [jit] Fix the support for gshared types in mini_emit_initobj ()
  * bxc#37273 - [llvm] Disable support for nested clauses.
  * bxc#38012 - [sgen] Fix register scanning on ARM
  * bxc#37846 - [jit] Fix the reference type detection for Volatile:Read/Write ()
- remove outdated authors.patch as it was removed on purpose
  https://github.com/mono/mono/commit/b39e7e9d78938362417b2c966d204da60952c7b4

-------------------------------------------------------------------
Sun Jan 31 16:30:56 UTC 2016 - mailaender@opensuse.org

- update to 4.2.2.30 (maintenance release) bug fixes:
 C# Compiler
  * bxc#33341 - Set null operator barrier between invocation instance and its arguments
 Class Libraries
  * bxc#35857 - [System.Data] Implement CommandBehavior.SequentialAccess support for GetValues method
  * bxc#28693 - [System] Remove arbitrary debugging limit from FileSystemWatcher on OSX
  * bxc#36003 - [corlib] Invalid DateTime format for Finnish and DateTime parser not supporting same separator for date and time (edit)
  * bxc#37171 - [System.Runtime.Serialization] XmlObjectSerializer: fix ISerializable
  * [System.Runtime.Serialization] Static serializer calls directly into internal APIs to fix 4.2.1
  * [corlib] Fix multicast delegate remove behavior
  * [corlib] Fix multicast Method property
  * [System.XML] Fix endless recursion in XmlCompiledTransform on mobile
 Runtime
  * bxc#35828 - [runtime] Fix Thread.CurrentThread in non-root appdomains by setting the tls slot in start_wrapper, otherwise Thread.CurrentThread would create a new Thread object so there would be two
  * bxc#20186 - [runtime] Make sure ptr-to-structure and structure-and-ptr wrappers are unique, this is needed by full aot
  * bxc#36292 - [jit] Avoid a verification error in gsharedvt code with ldarga + gshared types
  * bxc#36256 - [aot] Cache inflated methods loaded from aot images to avoid repeating an expensive search
  * bxc#35545 - [runtime] Implement native-to-managed marshalling of byref delegate arguments
  * bxc#36383 - [gsharedvt] Fix support for constrained calls on interfaces.
  * bxc#36566 - [jit] Increase the buffer size used by the dyncall data structures to 512.
  * threadpool] Fix get min and available threads icalls.
  * [verifier] Fix the verifiers to handle Roslyn style fixed blocks.
 Garbage Collector
  * Multiple fixes for rare crashes in sgen:
  * Fix marking of cards on 64bit
  * Don’t hardcode the nursery size in aot write barriers
  * Fix race between block allocation and concurrent sweep
  *  Make sure we scan aligned memory regions
 Profiler
  * Avoid a crash at shutdown by installing the assembly unload hook for the ‘start_unload’ event instead of the ‘end_un

-------------------------------------------------------------------
Sat Jan 30 08:46:51 UTC 2016 - dmueller@suse.com

- update to 4.2.1.124:
  * Bugfixes

-------------------------------------------------------------------
Sun Jan  3 21:37:33 UTC 2016 - mailaender@opensuse.org

- add libgdiplus0-un-devel.patch to fix boo#944754

-------------------------------------------------------------------
Fri Dec 11 08:32:06 UTC 2015 - normand@linux.vnet.ibm.com

- retrieve from upstream all ppc patches not yet in 4.2.1 tarball
  ppc_instruction_length_of_atomic_add_i4_is_28.patch
  fix_atomic_add_i4_support_for_32bit_ppc.patch
  basic_changes_powerpc_be.patch (already done yesterday)
  ppc_add_monocontext_and_async_callback.patch
  fix_passing_struct_parms_per_elf_abiv2.patch
  update_elf_abiv2_testcases.patch
  partial_sharing_false_4_powerpc.patch
  fix_exception_when_reading_from_timezone_file.patch

-------------------------------------------------------------------
Thu Dec 10 15:08:07 UTC 2015 - normand@linux.vnet.ibm.com

- new basic_changes_powerpc_be.patch to build ppc64 archi
  and disable ppc build that still segfault.

-------------------------------------------------------------------
Tue Nov 17 00:00:00 UTC 2015 - fwdsbs.to.11df@xoxy.net, martin.liska@suse.com

- Update to version 4.2.1.102:
  * More adoption of Microsoft's open source code
  * Support for PPDB debugging format
  * New threadpool implementation
  * Runtime optimizations
  * Extensive bug fixing (see http://www.mono-project.com/docs/about-mono/releases/4.2.0 for complete list)
- Temporary fixes for old incorrect dependencies. See this link for more details: https://github.com/mono/mono/commit/1f4133a06f252ec1b78637dd91e49f50836cf570
- Added authors.patch to fix missing authors file
- Added strncat-process-c.patch - fix insecure use of strncat at process.c:383 to fix OBS build
- Added mono-un-revoke-fix-in-BNC-144655.patch - fix BNC#144655
- Various packaging fixes

-------------------------------------------------------------------
Sun Nov 15 12:00:00 UTC 2015 - fwdsbs.to.11df@xoxy.net

- Update to version 4.0.5.1, Bugfixes: #34345, #33585, #34470

-------------------------------------------------------------------
Fri Aug 28 18:00:00 UTC 2015 - fwdsbs.to.11df@xoxy.net

- Update to version 4.0.4.1, Bugfixes: #31582, #30868, #28777, #30043, #31060, #30276, #30869
- Dropped mono-bug-28777.patch

-------------------------------------------------------------------
Sat Aug 22 06:16:37 UTC 2015 - mailaender@opensuse.org

- Update to version 4.0.3.20, Bugfixes:
  * bxc#28600: Some LLVM artifacts are being written to the base project dir rather than obj/$Config/
  * bxc#26205: System.IO.Package.LoadRelationships throws null reference for some NuGet packages with PCLs generated on Windows
  * bxc#30868: ObjectDisposedException in mono 4.0.1.28, but not mono 3.12.1
  * bxc#31582: iOS -O=float32 fails for some operations on ARM7
  * bxc#30043: Disposing a FileSystemWatcher object causes ArgumentOutOfRangeException
  * bxc#31060: F# sprintf AOT bug happens still now
- Dropped unnecessary mono-3.x-keyboards.resources-cp_r.patch

-------------------------------------------------------------------
Thu Jun 25 00:00:00 UTC 2015 - fwdsbs.to.11df@xoxy.net

- Update to version 4.0.2.5:

-------------------------------------------------------------------
Thu Jun 11 00:00:00 UTC 2015 - fwdsbs.to.11df@xoxy.net

- Update to version 4.0.2.4:

-------------------------------------------------------------------
Thu May 28 18:00:00 UTC 2015 - fwdsbs.to.11df@xoxy.net

- Update to version 4.0.1.44:
  * fixed bug: 30171
- Removed mono-bug-30171.patch (fix included in 4.0.1.44 release)

-------------------------------------------------------------------
Wed May 20 11:00:00 UTC 2015 - fwdsbs.to.11df@xoxy.net

- Update to version 4.0.1.43:
  * fixed bugs: 29459, 29898, 29667, 28557, 29177, 28847, 28209, 26998, 29039 and more
  * fixes in mono profiler
- Add mono-bug-30171.patch to fix BinaryReader bug with Unicode encoding
- Removed amd64-tramp-size.patch (fix included in 4.0.1.43 release)

-------------------------------------------------------------------
Wed May 20 09:50:17 UTC 2015 - idonmez@suse.com

- Add mono-bug-28777.patch to fix a DeflateStream bug, should fix
  KeePass problems

-------------------------------------------------------------------
Sat May  2 05:40:26 UTC 2015 - mailaender@opensuse.org

- Update to version 4.0.1
  * Adoption of Microsoft’s open source code
  * C# 6.0
  * Floating point optimizations
  * Dropped support for the 2.0, 3.5 and 4.0 assemblies
  * Updated IKVM
  * Lighter Debugger overhead
  * Basic PowerPC64 LE support
- Drop patches included by upstream:
  * X509Certificate-workaround.patch
  * gc-64bit-portability-warning.patch
  * 0001-ppc64le-fixes.patch
- Drop mono-data-postgresql now maintained at www.npgsql.org
- Add amd64-tramp-size.patch
- Add gmcs redirect to still build legacy packages

-------------------------------------------------------------------
Tue Mar 24 13:14:18 UTC 2015 - dvaleev@suse.com

- Don't run parallel build. It is too fragile

-------------------------------------------------------------------
Mon Mar 23 22:04:47 UTC 2015 - dvaleev@suse.com

- Cleanup patch numbers
- Rebase ppc64 patches based on upstream (commits are 173eaf1dfaf,
  7e056cd346c, PR#1479) - 0001-ppc64le-fixes.patch bsc#923558
- drop mono-core-ppc64le-callreg.diff
- drop mono-core-ppc64le-swr11r12.diff
- mono-core-ppc64le.diff

-------------------------------------------------------------------
Tue Mar 17 17:37:18 UTC 2015 - astieger@suse.com

- add CVE IDs for 3.12.1 bsc#921312 release

-------------------------------------------------------------------
Mon Mar 16 11:13:24 UTC 2015 - dimstar@opensuse.org

- Add timezone requires: Ensure that DateTime functionality is
  given when installing mono-core (e.g. System.DateTime.get_Now()
  needs access to this information).

-------------------------------------------------------------------
Tue Mar 10 17:10:58 UTC 2015 - mailaender@opensuse.org

- update to 3.12.1 - security hotfix bsc#921312
  * http://www.mono-project.com/news/2015/03/07/mono-tls-vulnerability/
    CVE-2015-2318 CVE-2015-2319 CVE-2015-2320

-------------------------------------------------------------------
Sat Feb 28 10:35:11 UTC 2015 - mailaender@opensuse.org

- add X509Certificate-workaround.patch which fixes bxc#21298

-------------------------------------------------------------------
Sat Jan 24 09:41:00 UTC 2015 - mailaender@opensuse.org

- update 3.12.0
  * Major performance and memory consumption improvements on SGen.
  * Improve the heuristic of the ThreadPool to maximize efficiency and minimize the number of Threads.
  * New cert-sync tool automatically syncs Mono’s certificate store  against the OS certificate store on Linux
  * X86 code now generate pushless code. This is faster on modern CPUs.
  * Multiple fixes in the profiler to make statistical sampling reliable and functional without kernel assisted sampling.
  * Mono users no longer need to run mozroots to get SSL working.
  * Switched to adaptative hill climbing for sizing the pool.
  * The supervisor thread now goes into deep sleep when no new jobs are submitted for a while. This should save power on targets running on batteries.
  * Reorganized how major heap blocks are manipulated for increased efficiency of the major collection.
  * Reduced memory consumption by better sizing of allocation buckets.
  * Switched to a simpler heuristics for major heap sizing that is more stable and avoid unexpected spikes.
  * Removed the parallel collector, it was an experimental feature that did not provide an effective speedup. It will be brought back in the future with a functioning design.
  * Removed the fixed heap configuration, it was an experimental feature that did not deliver enough of a performance improvement.
  * Avoid asserts on shutdown when the appdomain unload callbacks are called on the debugger thread during shutdown. Fixes bxc#24342.
  * Fix the calculation of the epilog size for EH info. Fixes bxc#24577.
  * Fix a class initialization race which happens if a class initializer initializes a got slot before it finishes running. Fixes bxc#23242.
  * Fix OP_LOCALLOC on arm so it correctly adjusts sp with the param area size even if the size is large. Fixes bxc#24221.
  * Disable the extension of i8/i16 arguments to i32 on arm64, since the ios calling convention passes them differently than i32. Fixes bxc#22800.
  * Use NULLIFY_INS () to nullify instructions and use MONO_INST_NEW to create phi node instructions to avoid asserts in the spill pass. Fixes bxc#24006.
  * Rewrite the way direct calls are made between llvm methods. Previously all calls were made to plt entries and the plt entry symbols were aliased to point to the corresponding method if the method was directly callable using the .set assembler directive. This doesn’t seem to work with newer LLVM/CLANG versions, so do this completely on the LLVM side using Value::replaceAllUsesWith (). Fixes bxc#23976.
  * Make process handles non-shared. Fixes bxc#23423.
  * Fix the return of vtypes containing a single fp member from pinvoke methods on OS X/x86. Fixes bxc#23813.
  * Fix an SRE assert. Fixes bxc#19039.
  * Implement 5dbf97e66057f8626c53fcea30f1988d6627e5a2 for calls made from NEWOBJ too. Fixes bxc#23557.
  * Make each CASTCLASS_CACHE patch unique by generating a unique identifier from the method index and an per-method counter. Fixes bxc#23478.
  * Disallow generic classes with explicit layout. Fixes bxc#23438.
  * Add an option to make debugger invokes virtual. Part of the fix for #23385.
  * Allow renaming of threadpool threads. Fixes bxc#23206.
  * Fix the unregistration of our exception handler on Windows. Fixes bxc#23221.
  * Make calls from gshared to gsharedvt sharable methods indirect since otherwise at runtime we might find an instantiation and we cannot patch the call, leading to performance problems. Fixes bxc#23021.
  * Allow the SIZEOF opcode in gsharedvt code if it doesn’t reference a gsharedvt type. Fixes bxc#22711.
  * Fix mono_marshal_free_ccw (). Fixes bxc#22414.
  * Fixes DbEnumerator current property to clone read data. Fixes bxc#24452
  * Allow sending of text data longer than 4000 characters by using a different column type. Fixes bxc#21172.
  * Implement MonoGenericClass:GetCustomAttributes () for created types. Fixes bxc#23769.
  * Improved BlockingCollection.AddAny. Fixes bxc#22775.
  * Implement KnownTypes for DataContractJsonSerializer. Fixes bxc#23058
  * HttpQSCollection.ToString now url encodes values. Fixes bxc#22557.
  * Call SetupRequestAsync only after ContentType changes. Fixes bxc19529.
  * Notify parent task when child task uses NotOnFaulted. Fixes bxc#23594
  * Use TZ transitions when AdjustementRules are ignored. Fixes bxc#23170.
  * Timespan ticks formatting rewrite. Fixes bxc#23376
  * Improved Json deserialization of floating-point numbers. When DataContractJsonSerializer was created from type object, deserialization of floating.point numbers was not possible. Fixes 21583.
  * Test Json deserialization of a floating-point number as object. Covers bxc#21583.
  * Rss20ItemFormatter.ReadFrom now sets Id when guid is PermaLink. Fixes bxc#23262.
  * fix bxc#23318 - XComment.ToString() accepts “invalid” values.
  * Uri made from UNIX path and RelativeOrAbsolute is now relative. Fixes bxc#22954.
  * UriParseComponents no longer decodes ‘@’ in UserInfo. Fixes bxc#23246.
  * Update en-NZ designators. Fixes bxc#22212
  * Update to my last fix for bxc#22129.
  * Copy out/ref parameters on async call; bxc#22129.
  * If not specified assume that array items are nullable. Fixes bxc#19012.
  * Added optional serialization based on ShouldSerialize{V}. SerializationCodeGenerator and XmlSerializationWriterInterpreter will no longer serialize an attribute named {V} if its object has a method named ShouldSerialize{V}() that returns false. {V}Specified now is also checked to be true before serializating the attribute even if it is a property that is not settable. Fixes bxc#1852.
  * GMT DateTimeOffset is now properly parsed. Fixes bxc#22851. GMT date formats set useutc to true, so now useutc is checked to init DateTimeOffset with a zero offset.
  * Improved CalendricalCalculations fixed_from_dmy methods. Fixes bxc#21930. In some cases fixed_from_dmy is used with the month parameter greater than the number of months of that year. Year is now incremented until month parameter is valid.
  * Enumerate all subdirectories including the first one. Fixes bxc#22857
  * Encode ContentDisposition name. Fixes bxc#18422
  * When needed serialized objects are now implicitly converted. Fixes bxc#20403.
  * Fix ClientWebSocket.ReceiveAsync() with small buffer;  bxc#22704.
  * Tokenize dash only in range values. Fixes bxc#22764
  * Added time format with only offset. Fixes bxc#22558.
  * fix bxc#6512 (by Mikkel Kruse Johnsen) - don’t deserialize GET parameters.
  * Added support for UriComponents.SerializationInfoString. Fixes bxc#21571.
  * Unify handling of default ctor and zero. Fixes bxc#22591
  * Make SendAsync state free to handle recursive calls. Fixes bxc#22724
  * Actually fix #22179 to allow concurrent requests.
  * DateTime.Parse now handles unlimited number of fractional digits. This change was made because .NET can parse ISO8601 format with an unlimited number of fractional digits. Fixes bxc#22417.
  * Added test ISO8601FractionalDigits. Covers #22417.
  * Delay reflection hit to actual execution point. Workarounds #22522
  * Update RequestMessage.RequestUri.AbsoluteUri after redirect. Fixes bxc#22383
  * Catch exceptions thrown by SerialPortStream.Dispose () when called from the finalizer. Fixes bxc#15514
  * KeyPairPersistence now tries to fix folder permissions. An exception is no longer thrown if the folder permissions can be fixed. Fixes bug bxc#19274.
  * A pointer-type may be used as the type of a volatile field. Fixes bxc#23770
  * Correctly identify constant switch section when value match is not section start. Fixes bxc#23475
  * Check for true/false user operators on unwrapped nullable type. Fixes bxc#23199
  * More tweaks to conditional tokenizer. Fixes bxc#23319
  * Populate inherited constraints member cache from types not only base types. Fixes bxc#23017
  * Fix removing incomplete generic types from eval cache. Fixes bxc#22393
  * Parsing of ternary expressions whose then condition is a lambda. Fixes bxc#22523
- add gc-64bit-portability-warning.patch

-------------------------------------------------------------------
Fri Nov  7 19:59:41 UTC 2014 - meissner@suse.com

- libmono-2_0-1 has a hard dependency on libmonoboehm-2_0-1,
  require it bnc#904460

-------------------------------------------------------------------
Mon Oct 27 00:02:10 UTC 2014 - i@marguerite.su

- fix build for factory x86_64
  * add mono-3.x-keyboards.resources-cp_r.patch
  * resources/keyboards.resources exists on x86_64, so cp won't work
    should add -r argument
- drop mono-core-target-4.0.patch
  * runtime 4.0 is no more, now mono-nunit should use 4.5
- add patch mono-nunit-default-runtime-4.5.patch
  * use runtime 4.5 for mono-nunit by default

-------------------------------------------------------------------
Sat Oct  4 18:46:11 UTC 2014 - mailaender@opensuse.org

- Removed upstreamed mono-core-parallel-build.diff patch
- Updated to 3.10.0
  + Implemented System.IO.Compression.FileSystem.
  + Uri now implements the .NET 4.5 behavior, it can be reverted to the old behavior in the same way by setting the System.Uri::s_IriParsing static field to false.
  + Remove unnecessary locking from core metadata parsing functions.
  + Avoid cache thrashing of locals array when looping over enumerator.
  + Fix support for unaligned offsets in the store_membase_imm opcodes. bxc#23267.
  + Fix the lookup of nested types which have a namespace. bxc#21653.
  + Increase some opcode sizes. bxc#23026.
  + Always pass the imt arg to interface calls in gsharedvt methods. bxc#22624.
  + Store the epilog length in MonoArchEHJitInfo instead of encoding it in jinfo->unwind_desc, since the latter can overflow for methods with large epilogs. bxc#22685.
  + Add a mono_thread_detach_if_exiting () public api function which can be called by embedding code to detach the runtime if the code is running from a pthread dtor. bxc#21164.
  + Fix yet another native types problem. bxc#22053.
  + Fix the leaking of mach ports introduced by 98bbf8512aec0fa01b4426583280f6d231d22187. bxc#22068.
  + Add support for constrained calls with vtype return types in gsharedvt code. bxc#22109.
  + Fix the PLATFORM_GNU check so it works with gnueabi etc. as well. bxc#21520.
  + Don’t make runtime invoke signatures generic. bxc#21973.
  + Allow v8..v15 in unwind info on arm64. Fixes part of #21615.
  + Fix Process.PrivateMemorySize64 etc. on ios. bxc#21882.
  + Fix enum->int casts in gsharedvt code. bxc#21893.
  + Don’t assert when loading a generic methodspec with 0 arity. bxc#19097.
  + Avoid asserting when a cattr cannot be loaded. bxc#21653.
  + Avoid making generic calls from gsharedvt methods normally, go through the rgctx infrastructure instead. bxc#21677.
  + Fix Uri UserInfo parsing. Fixes 23246.
  + Update RequestMessage.RequestUri.AbsoluteUri after redirect. bxc#22383.
  + Fixes XContainer attempt to create a XNode from a null value. bxc#20151.
  + Changed XObject OnChanged and OnChanging to use Owner. When XObject.Owner is not a XElement XObject.Parent returns null and the owner would not be notified of changing and changed events. bxc#18772.
  + Process XslLiteralElements with only child attributes as empty ones. bxc#14751.
  + ‘finally’ protect ClientRuntimeChannel.Begin/EndProcess(). bxc#22179.
  + WebClient.OpenWrite() must get the response on close. bxc#10163.
  + Fix WebClient.UploadValuesTaskAsync(); bxc#20359.
  + Improve System.Security.Claims. bxc#22282.
  + Fixed serialization of XmlNode field with attribute XmlAnyElement. bxc#3211.
  + Handle String::Format with escaped closing }. bxc#22114
  + Add a missing check to TypeBuilder.CreateType (). bxc#22059.
  + Xml Serialization of Base class w/o a parameterless constructor. Removed validation code that did not allowed serialization of base classes without a parameterless constructor. bxc#6913.
  + Fixed XmlSerializer to handle attribute XmlSchemePrivider.IsAny. XmlSerializer no longer outputs a root element with class name when the class has the attribute   + XmlSchemeProvider and IsAny is true. bxc#11916
  + Test that DeflateStream.Read does read an empty stream. Covers #19313.
  + Reseting all private key values to null is required because a new import may not overwrite existing values. bxc#18482.
  + Handle quoted filename value. bxc#21960.
  + Dispose XmlReader using correct value. bxc#21771.
  + Don’t use `1 naming for compiler generated second level and deeper nested types. bxc#22893.
  + Extend missing type check to type lookups. bxc#20933.
  + Fix copy and paste error in constraints checker. bxc#22131.
  + Speed up nullable tokenizer. bxc#20195.
  + Coalescing operator if the lhs of a null is a integer type that is larger than the integer type on the rhs. bxc#22054.
  + Check for duplicate destructors. bxc#21983.
  + Switch statement with constant block at first label. bxc#21805.
  + Decimal constants modulo folding. bxc#21743.
  + Update codegen for boolean loads. bxc#21685.
  + Workaround for issues with CreateItem task where metadata are not generated due to up-to-data inputs. bxc#23022.
  + Add KeepDuplicates etc. to 4.0 as internal. bxc#20961.

-------------------------------------------------------------------
Sat Sep  6 15:12:18 UTC 2014 - mailaender@opensuse.org

- Removed upstreamed ppc.patch
- Updated to 3.8.0
  + The JIT now better handle long remainers by powers of two, generating significantly better code.
  + Over 10x faster code is generated for delegates that only invoked once. C# features such as async and LINQ produces a lot of those delegates, so this improvement will impact everyone.
  + Improved alias analysis can now handle second order aliases and eliminate null checks.
  + The runtime now has a concurrently readable hashtable that can makes reflection heavy workloads significantly faster and more scalable.
  + Optimized one of the core data structures of the garbage collector should result in 5 to 10% reduction in collection times.
  + Fix the leaking of mach ports introduced by 98bbf8512aec0fa01b4426583280f6d231d22187. bxc#22068
  + Fix Process.PrivateMemorySize64 etc. on ios. bxc#21882
  + Fix enum->int casts in gsharedvt code. bxc#21893
  + Avoid making generic calls from gsharedvt methods normally, go through the rgctx infrastructure instead. bxc#21677
  + Fix another native-types problem. Hopefully fixes #21670 and #21636
  + Use alias information to eliminate explicit null checks. bxc#21645
  + Initialize fields in MonoField:GetFieldOffset () if needed. Fixes part of #21604
  + Properly handle rethrow outside of catch blocks. bxc#20412
  + Disable runtime unit tests on linux, because it cannot be linked due to circular dependencies between libraries. bxc#21520
  + When parsing a method header, ensure we pass any available generic context. bxc#21388
  + Added new mono_domain_set_config function; used to fix ConfigurationErrorsException in bxc#10468
  + Only apply the maverick stack size hack to the main thread. bxc#10096
  + Don’t hardcode the temp dir to /tmp, use g_get_tmp_dir instead. bxc#20894
  + Explicit thread GC data around instead of relying on TLS storage. bxc#20360
  + Make WaitForPendingFinalizers () really wait for the finalizers added by a previous GC. bxc#20503
  + Fix the marshal7.cs test, longs can be aligned to 4 bytes on 32 bit linux, and the runtime no longer aligns structure sizes to 8 bytes. bxc#20788
  + Fix the popping of LMF frames during unwinding. bxc#20616
  + Fix the marshalling of ByValTStr types which have a size specified. bxc#20674
  + Fix the decoding of MonoJitInfo. bxc#16439
  + Make it possible to create views to magic zero size files such as /dev/zero. bxc#19460
  + Free static bound delegate wrappers of dynamic methods. bxc#19058
  + Don’t perform double accounting of offset for named memory segments. bxc#20591
  + Avoid joining attached threads. bxc#19343
  + Fix support for custom marshallers defined in other assemblies. bxc#20020
  + Fix a jit assertion on a class which contains an empty struct as a static field. bxc#20349
  + Applied patch from Kyle Edwards kyleedwardsny@gmail.com. Fix isinf () check with clang. bxc#20244
  + Fix constrained type unwrap for enum types. bxc#18371
  + Handle quoted filename value. bxc#21960
  + Correctly handle partial chunk sizes. bxc#20583
  + Tweak Dictionary initial capacity to be more conservative. bxc#21375
  + Handle closed-over-null delegates created with IL when using InvokeDynamic. bxc#21196
  + Fix a race in a Task test. bxc#20921
  + Contract the values array when decoding an array with a negative number and a trailer that evals to zero. bxc#20456
  + Fixes issue with expression columns and IsNull. bxc#20925
  + Array qsort without head allocation. bxc#20922
  + Enum::TryParse ignores leading whitespaces. bxc#20870
  + Fix disposing of DelegatingHandler. bxc#20818
  + Fix digest authentication (bug #18799)
  + Only recycle ServicePoints from the idle timer (fixes #19823)
  + Changed ConcurrentDictionary.Contains(KeyValuePair<TKey, TValue>) to also compare value. bxc#16990
  + Add System.ServiceModel.Security assembly. bxc#20108
  + Removed NET_2_1 conditional blocks from FileInfo. bxc#19862
  + Update codegen for boolean loads. bxc#21685
  + Effective base class can include inherited types. bxc#21390
  + Handle duplicate resume point registration. bxc#21387
  + Arguments can be empty when reporting missing params argument. bxc#21215
  + Flow analysis of moved arguments. bxc#20983
  + Run new initializer await checks only in async context. bxc#20614[system.data] Parse numeric expressions using invariant culture. bxc#20582
  + Reachability analysis should ignore local variables declarations. bxc#20603
  + Check for missing dependencies of container types. bxc#20382
  + Resolve event expression when testing left side expression. bxc#20493
  + Flow analysis of binary expressions not using logical operators. bxc#20515
  + Add 4.5.1 framework to MSBuild. bxc#20827
  + Parsing conditions with property references. bxc#20634
  + Implements property functions using constructor syntax. bxc#12999
  + Avoid clearning event requests if they reference an assembly which is unloaded. Instead, remove the assembly reference from the event request so it stays active. bxc#9924.

-------------------------------------------------------------------
Sat Aug 16 08:02:29 UTC 2014 - mailaender@opensuse.org

- Rebased patches and submitted to upstream
- Removed ARM compatibility hacks https://github.com/mono/mono/pull/1211
  + mono-arm-cpuinfo-v5.patch
  + mono-arm-cpuinfo-v7.patch
  + mono-arm-vfp.patch
- Update to 3.6.0
  + Runtime performance counters have been integrated into the profiler allowing the performance counter information to be surfaced to profiling tools and in particular Xamarin’s upcoming profiler.
  + The profiler now produces backtraces for statistical mode. The profiler’s tracing mode now works on ARM.
  + The debugger now support line and column ranges. pdb2mdb supports it. Note: the rest of our toolchain still needs to be updated.
  + The debugger now supports changing the current line in the top frame.
  + Lots of bugfixes and performance improvements on the profiler.
  + The debugger now support reading simple properties without calling their getter, this is done by having a lightweight IL interpreter for small pieces of code. This allows more properties to be inspected while the process is completely stopped and without having to temporarily resume execution of the target to execute the property code.
  + Added buffered response mode to improve network efficiency on high latency links such as USB.
  + The GC bridge got a lot of performance work. There are now two new modes that can significantly improve some workloads.
  + Multiple http stack improvements: some leaks in the stack have been fixed, as well as solving some long-standing bugs involving asynchronous operations and proxies. We have introduced a more comprehensive test harness to ensure that those bugs do not surface again.
  + System.IO.Compression is now implemented
  + System.Security.Claims is now implemented. It resides in the System assembly (existed before in the Identity stack, but now we track the new home from the .NET 4.5 API).
  + Reworked locking to drop a hot lock in method lookup.
  + Use fine grained locking instead of a big hot lock.
  + Better hashing of some runtime internal items to avoid some corner-case slowdowns with generics.
  + The profiler is now able to produces backtraces in statistical mode.
  + Added periodical flushing that should help interactive users. This means that the profiling will send data over the profiling even if the application is not currently sending data (this is there to support the upcoming new profiler UI).
  + It now collects and reports performance counter information. See mprof-report’s man page.
  + Fixed the handling of the volatile. CIL prefix.
  + We now distribute IKVM’s ikdasm tool. This is a reliable disassembler that does not have the limitation of monodis of requiring a complete set of assemblies that are compatible to disassemble. This will disassemble even files that do not have their dependencies available.
  + Optimized EqualityComparer for more types.
  + Our msbuild implementation can now build Project K and Roslyn
  + Optimized EqualityComparer for more types.
  + [mcs] Flow analysis of nested binary expressions inside anonymous methods was missing on left/right reset.
  + [mcs] Fix betterness logic for default vs params parameters.
  + [mcs] Flow analysis of binary expressions not using logical operators.
  + [mcs] Emit unmanaged version info from AssemblyFileVersion.
  + [mcs] Fix expression tree conversion type for lifted enum equality comparisons.
  + [mcs] Report error when named argument for param parameter is given but not all formal parameters are provided.
  + [mcs] Unify reachable label lookup.
  + [mcs] Don’t release field address copy before it’s used.
  + [mcs] Fix error reporting propagation for loop statements.
  + [mcs] Emit better code for null coalescing operator with nullable return type.
  + [mcs] Add explicit array conversion involving type parameters.
  + Add System.ServiceModel.Security assembly.
  + [sdb] Avoid clearing event requests if they reference an assembly which is unloaded. Instead, remove the assembly reference from the event request so it stays active.
  + Rename configure.in -> configure.ac.
  + [System] Fix parsing of IPv6 addresses.
  + [Http] Cleanup chained async operations.
  + [corlib] Add Guid hex format parsing with whitespaces.
  + [System.Net.Http] Parsing productinfo like headers with missing version.
  + [System] Throw IOE in more cases when dealing with an invalid Process object.
  + [bcl] Fix Process.PrivateMemorySize64 on osx, we now return task_baic_info.resident_size.
  + Clean up the usage of FILETIME structures, avoid accessing them as gint64 since that would lead to alignment problems.
  + [sdb] Avoid stack overflows when a boxed vtype recursively references itself using fields.
  + [profiler] Filter more event types in mprof-report based on time.
  + [profiler] In mprof-report fix handling of the time filter when starting from 0.
  + [http] Convert string output data using BOM header when available.
  + [system.net.http] Fix encoding of Content-MD5. Based on patch by nberardi.
  + [sdb] Avoid placing implicit sequence points at offsets where the IL stack is empty when using symbol file based sequence points.
  + [eglib] Remove test-glib code, we don’t have to maintain compatibility with glib any more.
  + [corlib] Rethrow user not initialization exception when lazy initialization throws.
  + [mcs] Don’t report interface implementation errors for optional implementations.
  + [mcs] Include more unicode categories in parsing identifier part character.
  + [mcs] Emit null constant value for default parameters of generic types to indicate not missing value.
  + [mcs] Do type parameter conversion involving type parameters using dependency rules.
  + [mcs] Emit all method like members in same order as they appear in source code.
  + [mcs] Convert extended underlying enum constants to their underlying type.
  + [mcs] Don’t apply reference type is optimization for dynamic expressions.
  + [mcs] Inflate anonymymous method with correct type arguments when async this requires hoisting in parent type.
  + [mcs] Fix using type relationship check for type parameters.
  + [mcs] Caching of type argument types should not happen under error conditions.
  + [linq] Use hashtable lookup instead of linear scan for groupby keys.
  + [mcs] Private member can still have base members when in nested types.
  + [mcs] Make unused event warning reporting consistent to csc.
  + [mcs] Add parent storey reference only when this is not captured directly.
  + [mcs] Fix recursive resolving of crefs.
  + [mcs] Adding unit test for #18511
  + [mcs] Emit field initializer with expression tree in all user constructors.
  + [dlr] Emit correct code for convert of nullable types.
  + [runtime] Fix decoding of jagged arrays in custom attributes.
  + [runtime] Avoid calling mono_thread_current () in sgen_thread_detach (), since it can construct objects.
  + [runtime] Avoid passing commands to lldb using the python api, it doesn’t seem to work well in script files.
  + [runtime] Fix Process.TotalProcessorTime becoming negative.
  + [runtime] Clean up an #ifdef block
  + [jit] Make generic ctor calls made out of gsharedvt methods indirect, since they cannot be patched.
  + [jit] Fix rethrowing of exceptions in thumb mode.
  + [jit] Fix the lookup of the AOT version of Interlocked.Exchange in full-aot mode.
  + [jit] Fix an unreachable code part in mini_emit_memset ().
  + [llvm] Fix a few problems with longs on 32 bit platforms.
  + [runtime] Improve the hashing of MONO_TYPE_VAR/MONO_TYPE_MVAR.
  + [interpreter] Disable fast call invocation using methodinfo delegates due to aot limitation.
  + [runtime] Improve the hashing of MONO_TYPE_VAR/MONO_TYPE_MVAR.
  + [sgen] Restore hazard pointers in suspend signal handler.
  + [corlib] Fix extra await context switch when custom SynchronizationContext does not change.
  + [corlib] Add SortVersion.
  + [corlib] Make invariant NumberFormatter thread static too as it has internal static state.
  + [corlib] Filter out any right-to-left sign characters.
  + [corlib] Fix localized resource loading bug.
  + [corlib] Optimize EqualityComparer for common value types.
  + [system] Don’t terminate response reading on bad cookie value.
  + DataRowView indexer should not break on “completed” added rows (any rows other than the IsNew one). (BNC#595899)
  + [corlib] Defer TypeInfo instantiation logic in DefinedTypes.
  + [Mono.Security] Send all the certificates (except the root) from an SSL/TLS ‘Server certificate’ message (7.4.2 in RFC2246).
  + [System.Core] Don’t auto increment when trimming hashset.
  + [system.net.http] Close service-point slot on explicit dispose.
  + [Fix] System.Runtime.Caching.MemoryCache doesn’t honor SlidingExpiration.
  + [System.Xml.Linq] Fix XNamespace.GetName locking to not be racy.
  + [System.Net.Http] Incomplete byte ranges parsing.
  + [System.ServiceModel.Web] Fix JsonQueryStringConverter.ConvertValueToString to work when running on any culture.
  + System.Runtime.Caching.MemoryCache doesn’t order expirable items correctly.
  + ConcurrentQueue.TryPeek() is not thread safe.
  + System/PCL: Implement HttpWebRequest.SupportsCookieContainer, WebRequest.CreateHttp.
  + [interpreter] Implement simple quote expression.
  + mdbrebase: use File.Move instead of FileInfo.MoveTo.
  + Add unit test for BNC#497562
  + System.Runtime.MemoryCache.GetValues() throws LockRecursionException with expired items - GetValues() calls MemoryCacheContainer.GetEntry() which now gets an EnterUpgradeableReadLock needed by ExpireIfNeeded() - Added a test case.
  + [Sys.Data] Fix BNC#519648
  + [Sys.Data] Add unit tests for BNC#519648
  + [System.XML] Fix handling of space in XSL value-of elements.
  + [System.XML] Fix XSL node-set bug. bxc#18114
  + [System.XML] Fix handling of global variables in XSLs.
  + [System.XML] Do not reset document schema when reading an element.
  + Fix setter of TableLayoutPanel.LayoutSettings throws unwanted exception. Fixes BNC#497562
  + [MWF] Fix opacity of form.
  + [MWF] Fix ComboBox list to not display offscreen.
  + [MWF] Fix Screen.FromRectangle.
  + [MWF] Implement multi-display support on Linux.
  + [MWF] Clear currentCell before disposing.
  + [MWF] Unit test for DataGridView bug.
  + [MWF] Don’t try to remove non-child control.
  + [MWF] Add unit test for #19818
  + [MWF] Fix AutoSize behavior of FlowLayoutPanel.
  + [MWF] Fix crash from null control in ContainerControl.
  + [MWF] Fix TableLayoutPanel layout bug.
  + [MWF] Fix clipping of last line of dropdown.
  + [MWF] Release capture when clicking LinkLabel.
  + [MWF] Fix text position on buttons.
  + [MWF] Fix crash when setting Row.Height.
  + [MWF] Unit test for Row.Height/MinimumHeight bug.
  + [MWF] Fix size of text area on message box.
  + [MWF] Fix hang if clipboard source application closes down.
  + [Printing] Improve reported printer settings.
  + [Printing] Add unit test for BNC#602934

-------------------------------------------------------------------
Thu May 29 05:49:24 UTC 2014 - sshaw@decriptor.com

- Refresh patches
- Update to 3.4.0
  * Revamped HttpWebRequest/ServicePoint stack
    - Should properly reuse connections.
    - Uses the specified idle times
    - NTLM support has been improved.
    - SSL/TLS operations on via async APIs are now
      implemented using async patterns internally
      to greatly alleviate Thread Pool abuse.
  * Network stack
    - Now allows developers to control which cipher
      suites to use with TLS/SSL.
  * ARM
    - Emit shorter floating point operations when possible
    - Hard float support: Mono now should work on Linux
      distributions which uses a hard float (armhf) ABI,
      like the Raspberry PI.
      Notes: Homogeneous floating point aggregates are not
      yet supported on armhf.
  * Documentation
    - Updated documentation stubs to the 4.5 .NET API.
  * mono-api-html
    - Now supports regular expressions when specifying
      members to ignore (e.g. mono-api-html -i 'INSCopying$')

-------------------------------------------------------------------
Mon Mar 10 17:20:57 CET 2014 - ro@suse.de

- rediff and reactivate ppc.patch
- port forward ppc64le fixes from matz:
- Add support for ppc64le, fix build warnings, the blocksize
  changes in mono-core-ppc64le.diff should also help ppc64 proper.
  Added patches:
  * mono-core-parallel-build.diff
  * mono-core-ppc64le-callreg.diff
  * mono-core-ppc64le-swr11r12.diff
  * mono-core-ppc64le.diff
- no valgrind on aarch64 and s390 (but on s390x)

-------------------------------------------------------------------
Sat Feb 22 08:51:00 UTC 2014 - mailaender@opensuse.org

- Update to 3.2.8
  + On armhf, VFP scratch registers are now properly preserved across method calls.
  + A potential codegen bug on armhf for methods with lots of arguments has been fixed.
  + We now emit shorter floating point load/store sequences on armhf when possible.
  + Bugs surrounding alignment and mono_gc_bzero () / mono_gc_memmove () have been fixed.
  + A typo in the BigInteger.Cosh () implementation has been fixed.
  + Tuple<...> classes now implement ITuple and have a correct ITuple.ToString () implementation.
  + Bug #17589 has been fixed.
  + Bug #17558 has been fixed.
  + A stack alignment change that broke debugging on Android/x86 has been reverted (#17410).
  + Bug #17201 has been fixed.
  + The AOT compiler now adds types for method headers for gshared methods.
  + Bug #17632 has been fixed.
  + The DISABLE_JIT build has been fixed.
  + Bug #4510 has been fixed.
  + A potential crash in mono_method_desc_full_match () has been fixed.
  + Various build system fixes so that make dist works again.

- Changes from 3.2.7
  + [jit] Fix the handling of OP_ISUB_IMM in abcrem.
  + [jit] Improve ABCREM on 64-bits architectures
  + [jit] Implement the delegate ctor optimization in AOT mode too.
  + [jit] Some work towards a win64 port.
  + [jit] Use vectorized exception handling on windows.
  + [jit] Initial support for the hardfp ABI on ARM.
  + [jit] Add beginnings of a mach image writer for use with xdebug.
  + [jit] Implement proper TLS offset translation on mach based kernels.
  + [jit] Add a simple loop invariant loop motion pass for use with LLVM, which moves loop invariant instructions out of loop headers into the preceeding bblock.
  + [jit] Avoid linking the try block with the EH block as this produces spurious BBs during inlining.
  + [jit] The AggressiveInlining hint now triggers class initialization so more stuff gets force-inlined.
  + [jit] Add an alias analysis pass to the JIT.
  + [jit] ARM can dynamically switch between modes.
  + [jit] Atomics and hardware fences revamped and improved.
  + [jit] Add 64bits atomics on 32bits systems , this makes PLINQ significantly faster on multicore systems.
  + [llvm] Implement support for OP_TLS_GET_REG on osx/amd64.
  + [llvm] Update list of optimizations passed to 'opt'.
  + [runtime] Scalability work: reduce usage of the loader lock
  + [runtime] Removed the old debugger from the runtime.
  + [runtime] socket-io: make it possible to specify an interface index as a MulticastInterface SocketOption on linux.
  + [runtime] Don't expand variant generic interfaces on arrays.
  + [runtime] Implemented g_win32_getlocale function to return correct locale.
  + [runtime] Revamped hardware caps detection.
  + [runtime] Add LLDB support to mono_gdb_render_native_backtraces () on POSIX.
  + [runtime] Promote the reference queue API to the public.
  + [runtime] Provide more public API to inspect MonoTypes, MonoClasses and MonoMethodSignatures.
  + [runtime] Improving the retrieval of the user's locale on Apple systems.
  + [runtime] Async stack walking with AOT
  + [sdb] Allow users to specify a suspension policy when enabling an event
  + [sdb] Add async variants to the InvokeMethod methods.
  + [sdb] Support a setpgid=y/n option to --debugger-agent.
  + [sdb] Emit better debugger attribute for stepping over state machine initialization
  + [sgen] Reverse the free-list after sweeping to be in address-order.
  + [sgen] Only enqueue LOS objects if they contain references.
  + [sgen] Use gcc bitcount intrinsics where appropriate.
  + [corlib] Implementation of System.Reflection.ParameterInfo.HasDefaultValue
  + [corlib] Implemented System.Threading.Monitor.IsEntered
  + [corlib] LogicalSet/GetData implementation in CallContext
  + [corlib] Implement CultureInfo.DefaultThreadCurrentUICulture.
  + [corlib] Implement CultureInfo.DefaultThreadCurrentCulture.
  + [corlib] Add 'System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken' stub.
  + [Mono.Options] Improve error message for badly bundled args.
  + [pcl] Add new 'System.Runtime.InteropServices.WindowsRuntime' Facade Assembly.
  + [rx] Updated Rx to 2.2 release.
  + [System] Add IsIPv6Teredo to System.Net.IpAddress
  + [System] Add more of System.ComponentModel to MOBILE profile.
  + [System.Core] Update MonoTouch System.Linq.Expression to be 4.5 compatible
  + [System.Core] Add dynamic interpreter
  + [System.Core] Support IReadOnlyList in System.Linq.Enumerable.ElementAt and ElementAtOrDefault
  + [classlib] Introduce the mobile_static build.
  + [classlib] Add OrderedDictionary to the mobile profile.
  + [mcs] Suport recursive references of non-FX assemblies
  + [mcs] Implements definite assignment of expressions
  + [linker] Allow overriding MarkCustomAttribute and expose the MarkDefaultConstructor feature to subclasses
  + [xbuild] Initial MSBuild 12.0 support.
  + [xbuild] Improved xbuild diagnostics.
  + [xbuild] implement "skip target due to previous success" feature.
  + [xbuild] Add xbuild support for BuildManager
  + [Microsoft.Build.Engine] Fix the escaping/unescaping of FullPath metadata
  + Properly compare assembly versions when performing binding. bxc#17368.
  + [sdb] Fix setting of byref variables in registers. bxc#17185.
  + [System.Net.Http] Add parsing of multi-value strings. bxc#17132
  + [io-layer] Properly check write permission of a file. bxc#3501.
  +  Don't raise an exception if we can't find the src assembly on a shadow copy appdomain
  + [corlib] Update en-GB first day of week. bxc#17151
  + [mcs] Check type of index used in pointer array aritmetic. bxc#17145
  + [runtime] Fix large file support on android, it doesn't support -D_FILE_OFFSET_BITS=64, so call lseek64 directly. bxc#17128.
  + Fix bug #11335.
  + Fix bug #11336.
  + [io-layer] Correctly implement permission checking for File.Move. bxc#17009.
  + The old check was simply for open sharing status, which is incorrect. The right thing to do is to check for FileShare.Delete and not FileAccess.
  + [jit] Fix some checks in the arm dyn call code. bxc#17101.
  + BXC14584 - Console windows pop up during build with mono runtime
  + [PCL]: Add ReadOnlyDictionary type-forwarder for XI. bxc#16951.
  + [corlib] Mark all promise-style task exceptions observed. bxc#17015
  + [mcs] Emit Debuggable attribute. bxc#16924
  + [mcs] Method group caching needs to consider type arguments as well. bxc#17059
  + [jit] Save/restore all-callee saved registers in methods using some atomic opcodes on x86, since the opcode implementations use these registers, and the push/pop code used by these opcodes is not async safe, since the unwind code doesn't know about it. Fixes part of #16808.
  + [runtime] Fix yet another metadata problem with dynamically created types. bxc#14977.
  + [jit] Emit calls to class init trampolines for fields accesses inside inline methods in AOT mode. bxc#16461.
  + [runtime] Avoid RuntimeHelpers.EnsureSufficientExecutionStack () failing on windows. Works around #16776.
  + [runtime] Call mono_class_setup_methods () before accessing klass->method.count. bxc#16883.
  + [corlib] Update datetime patters. bxc#17044
  + [mcs] Better check for value type base call. bxc#16806
  + [mcs] Await flow analysis uses resolved expression. bxc#16840
  + [gsharedvt] Avoid using the variable size code paths for non-variable size types with some array opcodes. bxc#17023.
  + [jit] Avoid nullifying class init trampolines for recursive calls to class initializers. bxc#16489
  + [WindowsBase] Implement GroupDescription based on moonlight implementation
  + Remove usage of mini_replace_type () from mono_jit_runtime_invoke (), runtime invokes care about the precise types of parameters. bxc#16830.
  + [aot] Sanitize utf8 characters in symbol names. bxc#16851.
  + Fix for PkgConfig cache orphaned entries bug (xam bug #11133)
  + [mcs] Don't wrap reference type values in explicit nullable conversion. bxc#16900
  + [mcs] Restore async modifiers context after nested enums declaration. bxc#16997
  + [corlib] Promise style tasks cannot be started manually. bxc#16857
  + [corlib] Thread.GetNamedDataSlot allocates slot on failure. bxc#16788
  + Use LIFO policy for CancellationTokenSource bxc#16992
  + Fix CancellationTokenSourceTest.ReEntrantRegistrationTest
  + Make tuple hash function consistent with the F# implementation
  + Don't call CFNetworkCopyProxiesForAutoConfigurationScript from more than one thread. bxc#7923, comment 21.
  + Check for null item in BindingList<T>.InsertItem. bxc#16902
  + Do not assume the first certificate of a PKCS12 file is the one matching the key (even if it's the most common way).
  + [System] Change S.N.S.NetworkStream's param name on ctor #16832
  + [System] When starting a process with UseShellExecute=true, don't return a process. bxc#16119
  + [io-layer] On OSX don't pass -W to open as we don't care for it waiting.
  + [runtime] A thread without a domain set cannot be running managed code. bxc#16794.
  + [aot] Give the compilation unit entries in the DWARF debug info different names, the osx tools seem to need this (#15202).
  + [aot] Add runtime wrappers for methods of generic classes and generic methods. bxc#16747.
  + [gsharedvt] Add a wrapper to the mono_gsharedvt_constrained_call () icall, since it calls mono_runtime_invoke () which can throw exceptions. bxc#16439.
  + [jit] Fix TLS+AOT support in the monitor enter/exit trampolines.
  + [jit] Fix memory leaks in get_gsharedvt_type (). bxc#16787.
  + [corlib] Mark ConcurrentDictionary serializable. bxc#16730
  + [bcl] When finalizing a Process object, don't touch the streams as they are finalized on their own. bxc#10883.
  + [mcs] Clone labeled statements cache in probing mode. bxc#16376
  + [jit]Emit explicit float rounding on amd64. bxc#15987
  + [mcs] Update populated member cache of dynamic containers manually for additional entries. bxc#16659
  + [mcs] Show correct #line location for files in other than current location referenced as relative files. bxc#16576
  + [system] Redirect of put requests was converted to get. bxc#16670
  + [corlib] Multiple fixes to TPL.
  + [Bug 14664] LogicalSet/GetData implementation in CallContext
  + [sgen]Fix a deadlock when the GC try to free a JI during world restart. bxc#15759
  + [bcl] Invoke assembly resolve hooks even if the assembly name has a parse error. bxc#16487.
  + [corlib] Optimize one string Join<T> overload. bxc#16647
  + [bcl] Handle BigInt -> long conversions that should overflow but dont. bxc#16526
  + [System.Net.Http] Don't throw on invalid input in TryGetValues. bxc#16634
  + [mcs] Don't stop type inference when a unique construction of the generic interface cannot be found. bxc#16567
  + [mcs] Add better type conversion to unary mutators. bxc#16578
  + [corlib] Implement task awaiters running on custom task scheduler. bxc#16587
  + [corlib] Better conversion betwen system locale and CultureInfo. bxc#15875
  + [xbuild]: Check a <Target>'s "Returns" first, then fall-back to "Outputs".
  + [xbuild]: Allow expressions inside a dynamic <ItemGroup>'s metadata. bxc#14661.
  + [sgen] Never invoke libc’s memmove() or bzero(). bxc#16449
  + [mcs] Report nice error instead of crash for cyclic type forwarders. bxc#16385
  + [mcs] Report all failure errors in lambda conversions. bxc#16513
  + [xbuild]: Implement task batching for properties; fixes #16403.
  + [linq] Enumerable.Join and GroupJoin needs to ignore null keys. bxc#16530
  + [corlib] DebuggerTypeProxyAttribute.ProxyName needs to return an assembly qualified type name. bxc#16527
  + [jit] Implement double->uintptr conversions on 64 bit platforms. bxc#16529.
  + [sdb] Fix step-over with recursive functions. bxc#5700.
  + [corlib] Consider all unicode separators in ToTitleCase. bxc#16365
  + [corlib] Set initialized List<T> capacity to match input enumeration. bxc#16318
  + [mcs] Report ambiguity in attribute types in expanded mode. bxc#16342
  + [mcs] Emit this initializer for structs. bxc#16430
  + [sgen] Implement our own qsort() so as not do deadlock. #16432
  + [mcs] Dynamically calculate size of flow-analysis bitset. bxc#4210
  + [Bug 16334] Fix ConcurrentBag.TryTake and TryPeek
  + [Bug 16267] SemaphoreSlim.Wait fix when no timeout
  + [runtime] Avoid caching member_ref tokens of dynamic images. bxc#16096
  + Fix the `nop` opcode on some MIPS-based Loongson CPUs. https://sourceware.org/ml/binutils/2009-11/msg00387.html
  + [Bug 16186] SqlCommand.BeginExecuteInternal fix
  + [sdb] Add an ExitCode property to VMDeathEvent. bxc#16113.
  + [aot] Increase a buffer size to avoid an assert. bxc#16239.
  + [runtime]Type parsing of generics should not rely on the presence of a backtick. bxc#15124.
  + [mcs] Assignment to value type readonly generated variables needs to check all member access expressions. bxc#15832
  + [mcs] Missing type forwarded types should not cause type collision. bxc#16196
  + [linker] Do not import something that is not marked when sweeping type references (otherwise we might re-intoduce dependencies we're not including or need)   + [#16213]
  + Always show error message when type resolver produces ambiguous type. bxc#16115
  + Setting ReceiveBufferSize & SendBufferSize on Socket (Bug 16021 & Bug 12754)
  + [sle] Enable char equality comparison. bxc#15582
  + Update currency separators. bxc#15425
  + Extract CurrencyDecimalDigits using currency and not territory info. bxc#15895
  + [jit] Use unsigned comparisons with the IMT thunks as they can live in high memory addresses.
  + Task.WhenAllCore<T> now handles empty argument list correctly. bxc#15956
  + TimeZone.GetUtcOffset should use Standard UTC offsets for the period when daylight savings ends.
  + [runtime] Preserve the call chain in mono_arch_setup_async_callback () on amd64 to prevent crashes in the libgcc unwinder (#15969).
  + Return empty result array when calling Task.WhenAllCore<T> with empty argument list. bxc#15956
  + [runtime] Fix stack size detection on osx mavericks. bxc#15890.
  + [runtime]Split thread unregistration in two steps, one with no locks, one with locks taken. bxc#15916.
  + [runtime] Handle unaligned access in all interlocked icalls. bxc#15925.
  + [sdb] Implement support for DebuggerStepThrough attribute. bxc#15139.
  + [System] Avoid an NRE when Close() and Write() are concurrent. #15857
  + [sdb] Fix an assertion if a single step breakpoint is hit in a thread other than the thread the single stepping is done on. bxc#14950.
  + [Mono.Debugger.Soft] Implemented inheritance for TypeMirror.GetCustomAttributes() Fixes bug #15320
  + [runtime] Fix an assertion in mono_arch_context_get_int_reg () on amd64. bxc#15786.
  + When parsing documentation cref text turn on error probing for tokenizer as well. bxc#15511
  + Better error message when member does not implement interface. bxc#15369
  + Variables from diffent parameter block still need to be captures even if async block has no await. bxc#15719
  + The stripper does not care if some variables can't be referenced (they'll be removed) and new cecil has a similar fix bxc#15727]
  + Update lower/upper type inference fixing to match the latest C# standard. bxc#15505
  + Enum subtraction quirk needs to work with numeric constants only. bxc#15520
  + When looking for base implementation of generic MVAR methods use non-inflated parameter types. bxc#15523
  + [sdb] Add an IncludeSubclasses property to ExceptionEventRequest, to control whenever to include subclasses of the exception type. bxc#15541
  + Fix condition (for MOBILE) that excluded System.Xml.Schema/Extensions.cs. Removed the condition since every profile we now support includes this   + [#15552]
  + Fill out AssemblyName.ProcessorArchitecture for assemblies. bxc#15347.
  + Better check for open generic types in probing expression. bxc#15422
  + Fixes too early optimization of binary &&/& bool constants. Fixes part of #15392
  + [sgen] Don't crash on nurseries of 512M or larger.
  + [aot] Only use an AOT shortcut in the trampoline code if its safe to do so. bxc#15345.
  + [xdebug] Avoid using a MonoDebugMethodJitInfo structure after it has been freed. bxc#15090.
  + bxc#13642: MacNetworkChange: implement using managed code
  + Compound assignment of optimized binary constant needs to decompose it first. bxc#15315
  + Ensure that CodeDom generated temporary directory is always created. bxc#12202
  + Process/compare/output method's generic parameters   + [#15311]
  + Enum IConvertible can convert to same enum or System.Enum. bxc#15289
  + Release continuation ancestor before running. bxc#15036
  + Adds async type inference of void return type. bxc#15238
  + Make Task.Delay more reliable. bxc#14585
  + Fallback to $LANG if $LC_ALL isn't set. 15214
  + Cache only resolved types not expression to report correct error location. bxc#15035
  + Better check for instance equality of generic types. bxc#15100
  + Support deserializing relative Uris. bxc#15169.
  + Relax name check when deserializing a WindowsIdentity instance as the name can be empty (e.g. iOS7 simulator will hide the user name)   + [#12789]
  + Anonymous method with this access inside an iterator needs to initialize captured this field from iterator's copy. bxc#14926
  + [sdb] Fix decoding of nested structs. bxc#14942.
  + There was another escape sequence 1B 24 40 to indicate "old" JIS. Fix bug #14951
  + Don't crash when reporting invalid named argument name. bxc#14962
  + [MSBuild] Fix the ${level} and ${number} capture. Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=14767
  + Better checks for inaccessible member used via dynamic proxy. bxc#14762
  + Initialize cookie container for default requests. bxc#14783
  + Check modifying members of readonly value-type field. bxc#14802
  + Make sure we properly account for transitive liveness when processing bridge objects. bxc#13858
  + Implements content loading cancellation. bxc#13200
  + Fixed TaskFactory::ContinueWhenAny with func result. bxc#14839
  + [sgen] Use __builtin_ctzl () in OBJ_BITMAP_FOREACH_PTR () on 64 bit platforms. bxc#14834.
  + AggregateException::GetBaseException uses only 1-based inner exceptions. bxc#14824
  + [FIX] Bug 267: wsdl fails with "Argument is out of range."
  + [System.Web] Do not crash on duplicate keys in browser capabilities #14720 #13014
  + [System.Net] Fix CFNetworkCopyProxiesForAutoConfigurationScript signature. bxc#7923.
  + [runtime] Fix a bug in the local register allocator when an fp vreg wasn't clobbered by a call if its href happened to be equal to the hreg of the call instruction. bxc#12510.
  + Fix: bug https://bugzilla.xamarin.com/show_bug.cgi?id=14811 (to be reviewed)
  + [sdb] Add an implicit seq point after every nonvoid call and make step over skip them. bxc#10782.
  + [runtime] Make mono_install_handler_block_guard () async-safe. bxc#14073.
  + Don't crash when unreachable code contains unreachable constant switch. bxc#14587
  + Unify Array/List FindIndex/FindLastIndex handling and argument checking. bxc#14632
  + [bcl] Fix BlockingCollection.TakeFromAny to handle when no items are available on the first collection. bxc#6095.
  + Fix Bug 4811, xbuild should find xml documentation
  + [jit] Make ABCREM really remove bounds checks, not just when running with -v -v -v -v.
  + [llvm] Use i64*/i32* as the LLVM type of objrefs instead of i64/i32, the basicaa LLVM pass cannot see through the inttoptr casts we were emitting before loads.
  + [llvm] Make some types more precise to decrease the number of int<->ptr conversions generated.

-------------------------------------------------------------------
Sun Jan 26 13:43:20 UTC 2014 - mailaender@opensuse.org

- Update to 3.2.6 - Hotfixes:
  + Add System.Runtime.InteropServices.WindowsRuntime APIs and PCL Facade
  + Fix problem in MSBuild handling of "Returns" in <Target>. This affects multiple Microsoft.Bcl.Build NuGet packages
  + Implement task batching in MSBuild. Fixes BXC #16403
  + Add /Libraries to llvm search path on OSX, this makes --llvm work in more cases

-------------------------------------------------------------------
Tue Nov 26 19:33:01 UTC 2013 - mailaender@opensuse.org

- Update to 3.2.5 - Hotfixes:
  + Miscompilation of PCL projects referencing System.Net.Http
  + Improper stack size detection on Mavericks lead F# and C# compilers to crash.
  + Includes the latest F# release, 3.0.31.
- Added temporary patch mono-3.2.5-disttarget.diff

-------------------------------------------------------------------
Sat Nov 16 09:00:47 UTC 2013 - mailaender@opensuse.org

- Update to 3.2.4
  + Fix some packaging issues.
  + Fix System.IO.Compression.CompressionLevel enum.
  + Include namespace-level summary and remarks elements [#14672]
  + Multiple fixes to the PCL Facade assemblies.

-------------------------------------------------------------------
Sun Oct  6 10:39:08 UTC 2013 - hrvoje.senjan@gmail.com

- Make libmono-2_0-devel Require libmonoboehm-2_0-devel, as the it's
  .so is a symlink to the libmonoboehm one

-------------------------------------------------------------------
Sun Sep 29 14:22:01 UTC 2013 - mailaender@opensuse.org

- Update to 3.2.3
   + Check generic constraints for duplicates.
   + XmlSchemaImporter needs to consider attributeGroupRef in some case.
   + xsl:stylesheet always ignored xsl template contents.
   + C# compiler doesn't like decimal in custom attribute values, so use string.
   + Correctly install xbuild
   + Don't allow execution of dynamic assemblies without run access.
   + omit xml declaration for ToString().
   + Implements parsing of multi value User-Agent string.
   + Add more implicit generic array interfaces.
   + Do not use chunked encoding with CGI/FastCGI.
   + SetElementValue(nonExistentElementName, null) caused NRE.
   + Add more system assemblies remapping.
   + Fix Syscall.readlink() for non-ascii targets.
   + Implement character validation methods in XmlConvert.
   + xsi:nil='true' was ignored in some scenario.
   + Add more conversion methods to XmlAtomicValue.
   + Avoid an assert in mono_save_seq_point_info () if no seq points are generated for a method.
   + Properly null terminate strings in mono_dwarf_escape_path ().
   + Continue single stepping if the same line reached in all cases. Factor out some code code.
   + Avoid passing partially shared instances to the JIT.
   + Fix an overflow if MONO_ZERO_LEN_ARRAY is not 0.
   + Nested partial type inside generic class can have base type defined later than current type inflation happens.
   + Add nested partial types inside nested partial types to AST.
   + Schedule internal delay task on default scheduler only.
   + Lazy initialization of type parameters expanded interfaces.
   + Handle property with default values.
   + Another attempt at fixing mono_atomic_load_acquire() on MSVC.
   + Support FTP download where PWD starts with '\'.
   + Adds async handling to binary:emitbranchable.
   + Add some error checking to custom attr parsing and plug a memory leak.
   + Add clone for error expression.
   + Lift result of enum substraction when operation is lifted due to non-nullable enum type.
   + Add *CachePolicy to mobile profile.
   + Ignore space separators in nowarn arguments.
   + Add AssemblyAction.Save to the linker.
   + Check promoted value type binary equality operations against null too.
   + Correctly parse pragma headers.
   + Remove CultureInfo.CurrentCulture dependency from ordinal based string::EndsWith.
   + Write only import section from global namespaces before global attribute sections.
   + Fix overflow checking in newarray with 64 bit array lengths.
   + Correctly import nested non-generic types inside generic containers used within same generic container.
   + Grow underlying buffer only when necessary.
   + Quote path arguments to opt/llc.
   + STW handshake/thread shutdown race condition.
   + Rewrites RuntimeReflectionExtensions to actually do something.
   + Don't show internal error when default paramater expression cannot be converted to paramter type.
   + ASP.NET routing constraints should be treated as 'convertible to string'
   + use XmlSchemaSettings.XmlResolver to resolve schemas.
   + Fix cross compilation to windows. "Windows.h" should be "windows.h".
   + Handle partial class case when nested type of partial container depends on parent base type from another partial container.
   + Disable LLVM for async methods.
   + Create correct flow branching for single non-default switch section.
   + Always release DeflateStream unmanaged resources.
   + Handle custom attributes with nested array of enums.
   + Update named params parameter converted result expression.
   + Inflate default parameter expression without type checks
   + Thread teardown race condition.
   + Basic optional parameters support in binder.
   + Verifier support for IReadOnlyList<T> and IReadOnlyCollection<T>.
   + Relax the restriction on global methods visibility.
   + Add argument modifiers to generated base proxy when needed.
   + Avoid lookups in the AOT images during STW.
   + Don't crash when reporting invalid case label value.
   + Support OID names in RSACryptoServiceProvider.SignData().
   + Fix recursive check for non dependent return types during type inference.
   + Correct parsing of invalid 00000000-0000-0000-0000-000000000000 guid format.
   + Use the invariant culture calendar if the requested one is not available.
   + Type parameter inflated interfaces needs to be marked too.
   + Fixes GZipStream dispose order.
   + Report error for name collision between property and generic method.
   + Avoid the managed->copy for ref vtypes with an [In] attribute in n2m wrappers.
   + HashSet no longer grows in capacity on deserialize
   + Bad compiler interaction between anonymous method and async
   + xsl:import in included stylesheet caused compilation error.
   + Use IReflectType interface instead of TypeDelegator.
   + Fixes negative symbol definition for few locales to be simple -.
   + Fix yet another DISABLE_JIT bug in wrapper generation.
   + Fix an LLVM assertion on structs with unaligned size.
   + Invalid syntax during attribute target parsing can crash parser.
   + Probing of generic parameter needs to check both operands.
   + Clear out the ref fields from MonoDomain before calling mono_gc_clear_domain.
   + More thorough check for managed type parameters.
   + Bad compiler interaction between captured this, lambdas and async.
   + Don't resolve extension method expression when in probing mode.
   + Perform alignment checks for CAS on 32bits systems.
   + Add support for invoking interface methods.
   + Set empty string to TraceListeners for empty assert message.
   + Fixes parallel enumerable index counter.
   + Add System.ServiceModel.Activation assembly.
   + Make suspend work during thread cleanup.
- Changes from 3.2.2
   + TPL- Fix scheduling of non-inlined synchronous continuations.
   + Weaken a race condition in object initialization
   + Fix race conditions in finalizer/weak link staging
   + Fixed System.Text.Decoder.GetChars(byte*,int,char*,int,bool) to copy output into the char* buffer
   + Fixed configure.in to fail the __thread check with clang
   + Fixed g_utf8_to_utf16_general() to handle invalid utf8
   + Add more implicit generic array interfaces.
   + Properly null terminate strings in mono_dwarf_escape_path ().
   + Avoid passing partially shared instances to the JIT.
   + Adds async handling to binary:emitbranchable.
   + Add clone for error expression.
   + Lift result of enum substraction when operation is lifted due to non-nullable enum type.
   + Add *CachePolicy to mobile profile.
   + Ignore space separators in nowarn arguments.
   + Check promoted value type binary equality operations against null too.
   + Remove CultureInfo.CurrentCulture dependency from ordinal based string::EndsWith.
   + Quote path arguments to opt/llc.
   + STW handshake/thread shutdown race condition.
   + Disable LLVM for async methods to work around.
   + Register the jit info for GC critical methods as soon as they are loaded
   + Don't crash when reporting invalid case label value.

-------------------------------------------------------------------
Mon Sep  9 17:58:34 UTC 2013 - mailaender@opensuse.org

- Removed more .a files from the packaging.

-------------------------------------------------------------------
Sat Aug 17 11:25:21 UTC 2013 - mailaender@opensuse.org

- Fixed error: File not found: /usr/lib/mono/4.0/Microsoft.Portable.CSharp.targets

-------------------------------------------------------------------
Wed Aug  7 08:21:35 UTC 2013 - mailaender@opensuse.org

- Uppdate to version 3.2.1
  + Fixes bug 13509, which causes a crash when the current culture is set to zh_TW.

-------------------------------------------------------------------
Sat Jul 27 04:26:44 UTC 2013 - mailaender@opensuse.org

- Update to version 3.2.0
  + LLVM updated to version 3.2, this brings better optimizations for mono.
  + problematic workloads for the SGen Garbage Collector addressed:
    - popular objects are made immortal until the next major collection.
    - hash filtering on pin queues and that dramatically reduce their average size
    - switched to lazy sweeping by default
  + Three new experimental modes for the garbage collection are now available:
    - Low pause mode
    - Low promotion nursery
    - Mostly precise stack scanning
   + Size Reduction: Multiple features can now be disabled for the classlibs
   + The FullAOT compiler can now generate much faster code for icalls and has support for generic valuetype sharing.
   + Performance of primitive parsing was greatly enhanced.
   + LINQ is now much faster with arrays.
   + Large object cloning and boxing is up to two times faster.
   + Optimize Marshal.Read/Write methods to avoid a trip to unmanaged when possible.
   + Google contributed ports of NaCl for ARM and Amd64.

-------------------------------------------------------------------
Sun Jul 21 05:40:55 UTC 2013 - mailaender@opensuse.org

- Update to version 3.1.2
  + Emit additional sequence points for call entry when needed.
  + Loading of nested type of missing type needs to create another missing type.
  + Equality structural comparer needs to do recursive comparisons.
  + Allow async for explicitly implemented interface methods.
  + Implement webrequest cancellation.
  + Prefer user operators over predefined operators for binary enum operations too.
- Changes from version 3.1.1
  * Mono now defaults to sgen
  * Update Mono.Cairo to include APIs from cairo 1.10
  * Update the LLVM used from Nov-2012 to Jul-2013
  * Several optimizations to improve string performance
    + Enable managed allocation using gsharing
    + Implemented the string allocator for SGen
    + Fixed String.Contains, as it is not supposed to be culture aware
  * Added a dummy implementation of System.Net.Http.WebRequestHandler
  * Bug fixes
    + Make WebClient report an error when the download aborted prematurely.
    + Add [Serializable] to X509Certificate2 (added in .NET 4.0)
    + Fix order of capturing of this inside switch statement.
    + Rewrite lifted binary operators to match C# spec more closely.
    + Fix MethodImplOptions argument checks.
    + Make ServicePointManager hash on the proxy as well as uri and use_connect
    + Fix register allocation for hw remainder opcodes on armv7s.
    + Block task awaiter until task completes.
    + Use directly captured this instead of parent reference for nested state machine inside another state machine without anonymous storey.
    + When unloading domains, free dynamic assemblies first.
    + Mutate generic catch block type when needed.
    + Fix MethodInfo::ToString () to properly format generic structs.
    + Recover more from invalid throw statement.
    + Verify if the catch type is valid under the method context.
    + Call correct ApplyToExtraTarget base override.
    + Do system.object type scan after all references are loaded.

-------------------------------------------------------------------
Fri Jun 28 17:47:59 UTC 2013 - mailaender@opensuse.org

- Update to version 3.0.12
  + Added PCL support to xbuild, mono's MSBuild implementation.
  + Fixed multiple hangs that happen during shutdown or appdomain unload
  + Merged most of the ARM support for NaCl
  + mkbundle now uses IKVM.Reflection
- Added rpmlint ignore rules

-------------------------------------------------------------------
Sat May 25 18:38:42 UTC 2013 - mailaender@opensuse.org

- Update to version 3.0.10
  + Reverted parallel mkbundle.
  + Fixed duplicated debug symbol problem in the compiler.
- Changes from version 3.0.9
  + Fix gtk+ copy & paste.
  + Fix debugger support for custom attributes.
  + Proper stack bounds calculation on windows.
  + Add partial generic methods to our C# compiler.
  + NaCL support for ARM.
  + Fix LLVM loading on OSX.
- Changes from version 3.0.8
  + Multiple improvements to the BCL to reduce usage of non generic collections and use faster string comparisons.
  + Optimize large object cloning and boxing.
  + Multiple changes to bring mono closer to full PCL compatibility.
  + Add System.WeakReference<T>
  + Sgen can now return memory to the system for
  + Many compiler fixes for async.
  + Improved FullAOT support for async.
  + NaCl build fixes and improvements.
  + WCF now has cookie support in .net 4.0.
  + Optimize Marshal.Read/Write methods to avoid a trip to unmanaged when needed.
  + Optimize LINQ with arrays.
  + Multiple fixes to the sgen's concurrent collector.

-------------------------------------------------------------------
Tue Apr 16 14:28:23 UTC 2013 - mailaender@opensuse.org

- Update to version 3.0.7
  + Multiple fixes to the sgen's concurrent collector.
  + Performance improvements in primitive types parsing.
  + Add a configuration time option to disable remoting.
  + Optimize tls lookups on full-aot + arm.
  + Add a configuration option to disable remoting.
  + Multiple improvements and bug fixes in culture related code.
  + Runtime assembly mapping for PCL.
  + Fix Binder primitive conversion to make .net.
  + Optimize Activator.CreateInstance ().
  + Optimize icalls in FullAOT code.
  + Implement Volatile.Read/Write<T> and Interlocked.MemoryBarrier ().
  + Optimized unmanaged to managed string conversion.

-------------------------------------------------------------------
Tue Apr 16 10:30:14 UTC 2013 - idonmez@suse.com

- Add Source URL, see https://en.opensuse.org/SourceUrls

-------------------------------------------------------------------
Tue Mar 19 11:06:18 UTC 2013 - idonmez@suse.com

- Refresh and apply mono-core-target-4.0.patch
- Apply ppc.patch again

-------------------------------------------------------------------
Sat Mar  9 14:18:45 UTC 2013 - mailaender@opensuse.org

- libgdiplus now has a devel package, use it

-------------------------------------------------------------------
Sat Mar  9 07:52:23 UTC 2013 - mailaender@opensuse.org

- Update to http://www.mono-project.com/Release_Notes_Mono_3.0.6
  * Hotfix to the 3.0.x series

-------------------------------------------------------------------
Wed Mar  6 14:10:35 UTC 2013 - idonmez@suse.com

- Remove hardcoded lib directory from the config, this unbreaks
 running GDI+ programs on 64bit.

-------------------------------------------------------------------
Sun Feb 24 21:12:42 UTC 2013 - mailaender@opensuse.org

- Add missing Provides: for monodevelop 4.0

-------------------------------------------------------------------
Sat Feb 23 14:16:57 UTC 2013 - mailaender@opensuse.org

- Update to http://www.mono-project.com/Release_Notes_Mono_3.0.4
  * Bug fixes to the 3.0.x series

-------------------------------------------------------------------
Tue Jan 29 08:15:12 UTC 2013 - dimstar@opensuse.org

- Add mono-core-target-4.0.patch: Use .Net runtime 4.0 as default
  for Nunit and Cairo.

-------------------------------------------------------------------
Fri Jan 11 11:41:47 UTC 2013 - mailaender@opensuse.org

- Update to http://www.mono-project.com/Release_Notes_Mono_3.0.3
  * Bug fixes to the 3.0.x series
- new sub-package mono-reactive including http://rx.codeplex.com/

-------------------------------------------------------------------
Thu Dec 27 17:52:57 UTC 2012 - dvaleev@suse.com

- Fix ppc build failures (ppc.patch)

-------------------------------------------------------------------
Mon Dec 17 12:34:59 UTC 2012 - adrian@suse.de

- fix patches for arm*
- do not detect hard fp support in gcc (mono is not supporting it yet for real)

-------------------------------------------------------------------
Sat Dec 15 20:13:00 UTC 2012 - sshaw@decriptor.com

- Updated to mono 3.0.2
  * Bug fixes to the 3.0.x series

-------------------------------------------------------------------
Sun Nov 11 21:40:30 UTC 2012 - sshaw@decriptor.com

- Updated to mono 3.0.1
  * Bug fixes to the 3.0.0 release

-------------------------------------------------------------------
Fri Oct 19 17:49:06 UTC 2012 - sshaw@decriptor.com

- Update to mono 3.0.0
  * C# 5.0 - async!
  * IKVM
  * 4.5 profile
  * New assemblies - System.Net.Http, System.Threading.Task.Dataflow
  * Microsoft's open source ASP.NET WebStack
  * Entity Framework
  * sgen
  * Runtime Optimizations
  * Code Contracts
  * Partial suppor for Portable Class Libraries
  * Improved GDB support for SGenGC internals
  * Lots of bug fixes

-------------------------------------------------------------------
Fri Oct  5 12:02:10 UTC 2012 - dvaleev@suse.com

- workaround for ppc build with mcs-docs enabled
  use --with-sigaltstack=no (bxc#6440)

-------------------------------------------------------------------
Sat Jul 21 23:08:36 UTC 2012 - dvaleev@suse.com

- fix ppc build

-------------------------------------------------------------------
Fri Dec  2 13:31:57 UTC 2011 - agraf@suse.de

- use hammer approach for vfp instead

-------------------------------------------------------------------
Sun Nov 27 21:17:24 UTC 2011 - agraf@suse.de

- add arch linux vfp patch

-------------------------------------------------------------------
Sun Nov 27 16:36:08 UTC 2011 - agraf@suse.de

- use vfp on armv7

-------------------------------------------------------------------
Sun Nov 27 03:01:37 UTC 2011 - agraf@suse.de

- fix arm build to not depend on the build host's /proc/cpuinfo

-------------------------------------------------------------------
Fri Oct  7 14:47:35 CEST 2011 - dmueller@suse.de

- update to 2.10.6
  * http://www.go-mono.com/archive/2.10.6

-------------------------------------------------------------------
Wed Apr 27 20:10:24 UTC 2011 - ajorgensen@novell.com

- Update to 2.10.2
  * http://www.go-mono.com/archive/2.10.2

-------------------------------------------------------------------
Mon Apr  4 20:08:54 UTC 2011 - ajorgensen@novell.com

- libmono devel package must require libmono

-------------------------------------------------------------------
Tue Feb 22 17:13:37 UTC 2011 - ajorgensen@novell.com

- Update to 2.10
  * http://www.go-mono.com/archive/2.10

-------------------------------------------------------------------
Fri Jan  7 16:29:12 UTC 2011 - ajorgensen@novell.com

- Update to 2.8.2
  * Fix for CVE-2010-4225, bnc#660070
  * http://www.go-mono.com/archive/2.8.2

-------------------------------------------------------------------
Tue Nov 19 10:18:08 UTC 2010 - dimstar@opensuse.org

- Require libmono-2_0-1 by libmono-2_0-devel.

-------------------------------------------------------------------
Thu Nov 18 22:34:12 UTC 2010 - ajorgensen@novell.com

- Update to 2.8.1
  * http://www.go-mono.com/archive/2.8.1

-------------------------------------------------------------------
Tue Oct 12 17:42:53 UTC 2010 - ajorgensen@novell.com

- Update to 2.8
  * http://www.go-mono.com/archive/2.8

-------------------------------------------------------------------
Mon May 17 17:50:55 UTC 2010 - ajorgensen@novell.com

- Revert r155259 for bnc#604251

-------------------------------------------------------------------
Wed Apr 28 07:59:02 UTC 2010 - aj@suse.de

- Remove libmono-profiler-*.la files.

-------------------------------------------------------------------
Tue Apr 27 22:58:13 UTC 2010 - ajorgensen@novell.com

- Update to 2.6.4
  * http://www.mono-project.com/Release_Notes_Mono_2.6.4

-------------------------------------------------------------------
Fri Apr  2 16:40:19 UTC 2010 - aj@suse.de

- Add dependency on unzip for monodoc-core to allow build-compare to work.

-------------------------------------------------------------------
Tue Mar  2 20:12:24 UTC 2010 - ajorgensen@novell.com

- Update to 2.6.3
  * http://www.mono-project.com/Release_Notes_Mono_2.6.3
- Obsoleted patches

-------------------------------------------------------------------
Mon Mar  1 17:12:06 CET 2010 - ro@suse.de

- try to prevent crash on exit in gmcs
  call mono_alloc_special_static_data_free before closing
  assemblies

-------------------------------------------------------------------
Tue Jan 26 22:30:50 UTC 2010 - ajorgensen@novell.com

- Patch to fix AOT on Xen

-------------------------------------------------------------------
Tue Jan 26 20:51:03 UTC 2010 - ajorgensen@novell.com

- Update to 2.6.1
  * http://www.mono-project.com/Release_Notes_Mono_2.6.1

-------------------------------------------------------------------
Mon Aug 10 23:16:42 UTC 2009 - ajorgensen@novell.com

- Update to 2.4.2.3
  * http://www.mono-project.com/Release_Notes_Mono_2.4.2.3

-------------------------------------------------------------------
Tue Mar 31 13:10:59 MDT 2009 - ajorgensen@novell.com

- Update to 2.4
  * http://www.mono-project.com/Release_Notes_Mono_2.4

-------------------------------------------------------------------
Fri Nov  7 16:01:56 MST 2008 - ajorgensen@novell.com

- Spec file fixes

-------------------------------------------------------------------
Mon Oct 20 11:42:54 MDT 2008 - ajorgensen@novell.com

- Update to 2.0.1
  * Fixes for bnc#426309, bnc#431304, bnc#433908, bnc#431811,
    bnc#434620, bnc#428406, bnc#434544, bnc#432673, bnc#426264,
    bnc#430963, bnc#430040, bnc#435549, bnc#432466, bnc#433741,
    bnc#416462, bnc#437691, and bnc#437289

-------------------------------------------------------------------
Wed Oct  1 15:16:09 MDT 2008 - ajorgensen@novell.com

- Update to 2.0 RC4
  * Fixes for bnc#430508, bnc#413636, bnc#378713, and bnc#428054

-------------------------------------------------------------------
Thu Sep 25 15:35:52 MDT 2008 - ajorgensen@novell.com

- Update to 2.0 RC3 refresh
  * Fixes for bnc#424851 and bnc#419888

-------------------------------------------------------------------
Thu Sep 25 15:35:52 MDT 2008 - ajorgensen@novell.com

- Update to 2.0 RC3 refresh
  * Fixes for bnc#424851 and bnc#419888

-------------------------------------------------------------------
Mon Sep 22 12:49:59 MDT 2008 - ajorgensen@novell.com

- Update to 2.0 RC3
  * Bugfixes including bnc#424851, bnc#427974, bnc#414146,
    bnc#428309

-------------------------------------------------------------------
Wed Sep 10 11:28:24 MDT 2008 - ajorgensen@novell.com

- Update to 2.0 RC2
  * Bugfixes including bnc#422507, bnc#422853, bnc#397627,
    bnc#359181, bnc#409028, bnc#417955, bnc#410743

-------------------------------------------------------------------
Tue Sep  9 15:20:08 MDT 2008 - ajorgensen@novell.com

- Require libgdiplus for mono-devel (because resgen requires it)

-------------------------------------------------------------------
Mon Sep  8 08:40:53 MDT 2008 - ajorgensen@novell.com

- Recommend a specific version of libgdiplus

-------------------------------------------------------------------
Tue Sep  2 10:26:11 MDT 2008 - ajorgensen@novell.com

- Update to 2.0 RC1
  * Bugfixes
  * Adds a 2.0 gacutil

-------------------------------------------------------------------
Tue Aug 26 09:33:09 MDT 2008 - ajorgensen@novell.com

- Update to 2.0 (preview 2)
  * Runtime: Performance
    * The performance of operations on decimals has significally improved.
    * The performance of locking (Monitor.Enter/Monitor.Exit) is significally improved.
    * The memory usage of the runtime is reduced, especially when using generics.
    * Many race conditions and threading problems were fixed, improving reliability.
    * Math.Min/Math.Max and some forms of Interlocked.CompareExhange (CAS) are now implemented using fast inline code on x86/amd64.
    * There is now a MONO_DEBUG=dont-free-domains option that improves the performance of ASP.NET-based applications.
  * Runtime: Features
    * Some progress has been made on the Winx64 port [Bill Holmes, Jonathan Chambers]
    * The runtime is now built using the dolt libtool replacement (http://dolt.freedesktop.org/) this speeds up runtime compilations by about 30%.
    * The runtime build process is now less verbose on some platforms, similar to the way the linux kernel is built. To turn it off, use the --enable-quiet-build=no argument to configure, or pass the V=1 argument to make.
    * There is now a --debug=casts command line option to the runtime which turns on the reporting of better InvalidCastException message details.
    * The mono_method_get_unmanaged_thunk () function has been implemented for developers embedding Mono which simplifies calling managed methods from unmanaged code.
  * C# Compiler
    * The compiler now support expression trees (turning expressions into an AST at compile time when the type of a parameter is a System.Query.Expression). This completes the C# 3.0 support.
    * Over 60 reported bugs in the compiler were fixed and many of the internals have been cleaned up. Extensive refactoring and hardening of the C# 2.0 and 3.0 support are now better integrated.
    * A major rewrite of the anonymous method/lambda support in the internals of the compiler now optimizes the resulting code, and fixes several bugs in this area.
    * The compiler is now dual licensed under the MIT X11 and the GNU GPL version 2 (only).
    * The compiler now supports #pragma checksum for use with ASP.NET debugging and #line hidden, as well as flagging more compiler-generated code properly (to avoid the debugger single-stepping into those bits).
  * LINQ
    * LINQ and LINQ to XML are now complete, support for expression trees is now available as well as the backend to support expression tree compilation.
    * LINQ to Dataset has also been implemented.
  * Performance Counters Implementation
    * Mono now has a performance counters implementation that can be used to monitor various statistics of Mono processes. To access this API you use the System.Diagnostics.PerformanceCounter classes.
  * Big Arrays
    * Mono now supports 64-bit indexed arrays on 64-bit systems. Although this is permitted by the ECMA standard, this today is a unique feature of Mono as .NET on Windows does not support 64-bit array indexes. This code was developed by Luis Ortiz at Interactive Supercomputing and integrated by Rodrigo Kumpera.
    * This feature is useful for developers that needs to manipulate very large data sets with C# arrays.
    * To use this feature, you must configure Mono with --enable-big-arrays.

-------------------------------------------------------------------
Mon May 26 22:12:33 CEST 2008 - crrodriguez@suse.de

- add missing zlib-devel BuildRequires this made mono to
  use a bundled copy a zlib.

-------------------------------------------------------------------
Mon May 12 10:13:19 CEST 2008 - aj@suse.de

- Do not return random data in function.

-------------------------------------------------------------------
Tue May  6 13:34:26 CEST 2008 - schwab@suse.de

- Don't use libtool before it is created.

-------------------------------------------------------------------
Fri Apr 25 10:23:23 MST 2008 - wberrier@suse.de

- Make sure x11 headers/libs are installed so that
  /etc/mono/config has correct link to libX11.so.6.
  Fixes (bnc#339712)

-------------------------------------------------------------------
Tue Apr 22 10:23:23 MST 2008 - wberrier@suse.de

- Update to 1.9.1 (bugfix release)
 -G_DECL fixes
 -Microsoft.CSharp: Emit bodyless getters and setters for abstract
  properties
 -ASP.NET: Don't output a date header from System.Web
 -Fix an issue with Groupwise WSDL
 -Mono.Mozilla: Support more than one browser widget per
  application Windows.Forms
 -Winforms:
  -Finish implementation for EventsTab and PropertiesTab
  -Fix keyboard layout issue
  -MenuAPI fixes
 -System.Design: Cache editor widget instead of creating it each
  time
 -System.Text: Fix possible integer overflow
 -System.Net.Mail: Fix filename handling

-------------------------------------------------------------------
Fri Apr 11 15:45:33 CEST 2008 - schwab@suse.de

- Work around broken configure script.

-------------------------------------------------------------------
Fri Apr 11 10:00:20 CEST 2008 - aj@suse.de

- glibc does not define ARG_MAX anymore, use sysconf (_SC_ARG_MAX)
  instead.

-------------------------------------------------------------------
Thu Apr 10 12:54:45 CEST 2008 - ro@suse.de

- added baselibs.conf file to build xxbit packages
  for multilib support

-------------------------------------------------------------------
Tue Mar 25 17:23:23 MST 2008 - wberrier@suse.de

- Filelist changes for System.Xml.Linq and Mono.Web
- Call ldconfig directly instead of invoking a shell
- Update to 1.9
 -More than 80 bugs closed/fixed in the runtime
 -Reflection bug fix
 -C# compiler defaults to 3.0
 -Silverlight support enabled by default
 -Generics code sharing
 -AOT support for ARM
 -Verifier improvements
 -Updated Core Linq api
 -Now includes System.Xml.Linq
 -mcs/gmcs parser code base has been unified
 -ASP.Net:
  -Batch Compilation
  -Mapping configuration
 -Winforms:
  -more support for browser events
  -Several fixes to RichTextBox
  -Major improvements to PropertyGridControl
  -Over 100 fixed bugs
 -System.Design implementation
 -DLR support
 -Mono.Posix:
  -Stdlib.signal() has been deprecated.  Replaced with:
   -Mono.Unix.Native.Stdlib.SetSignalAction
   -Mono.Unix.UnixSignal

-------------------------------------------------------------------
Fri Feb 15 03:13:55 CET 2008 - dmueller@suse.de

- only require valgrind for archs that provide it

-------------------------------------------------------------------
Wed Jan 23 17:52:56 CET 2008 - wberrier@suse.de

- mono-93665_find_requires_ignore_missing.patch: warn on missing
  files found in .config files instead of generating invalid deps.

-------------------------------------------------------------------
Wed Jan 16 17:23:23 MST 2008 - wberrier@suse.de

- libgdiplus -> libgdiplus0 rename
- add libgluezilla0 to recommends

-------------------------------------------------------------------
Mon Jan 14 13:23:23 MST 2008 - wberrier@suse.de

- Update to 1.2.6
 -Support for the ASP.NET AJAX APIs and controls
 -Support for FastCGI deployments
 -Windows.Forms WebControl for Windows and Linux using Mozilla
 -Reduced memory usage in the runtime for 2.0 apps
 -Updated verifier
 -Implementation of CoreCLR security
 -More C# compiler 3.0 completion
 -Mono 1.2.6 can now be used as an SDK for creating Silverlight
  1.1 applications on all platforms.
 -Support for the PE32+ assembly file format
 -Managed allocations support
 -SslStream support
 -System.Net.Mail improvements
 -Fixed SSL/TLS thread-synchronization
  (for LDAPS over multiple threads)
 -Novell.Directory.Ldap synchronized with the Novell's CSHARP
  LDAP SDK (version 2.1.8)

-------------------------------------------------------------------
Tue Oct 23 21:37:23 CEST 2007 - wberrier@suse.de

- mono-boo_ia64_fix.patch: fix boo build on ia64.

-------------------------------------------------------------------
Thu Sep 20 05:41:09 CEST 2007 - wberrier@suse.de

- BigInteger Security fix: bnc #310044
 -MaintenanceTracker-13335

-------------------------------------------------------------------
Fri Aug 31 05:55:26 CEST 2007 - wberrier@suse.de

- Regressions found in 1.2.5:
 -Bug #82428: crypto buffer length fix
 -Bug #82481: StatusStrip focus regression fix
 -Bug #82499: GlobalReAlloc fix
- System.Web regression fixes:
 -Bug #82193: System.Web regression fixes
 -Bug #82392: SessionState fix for asp.net regression

-------------------------------------------------------------------
Fri Aug 17 17:00:27 CEST 2007 - wberrier@suse.de

- Fix some COM and Winforms regressions in 1.2.5 p3
 -fixes bxc: 82433, 82344, 82405, 82406, #82187, 82348
- Threading fix for bxc #82145 when using LDAP and TLS

-------------------------------------------------------------------
Fri Aug  3 17:40:00 CEST 2007 - wberrier@suse.de

- Update to 1.2.5
 -Fixes for IronPython and Dynamic Language Runtime
 -More C# 3.0 compiler features
 -2.0 support for AOT assemblies
 -Several performance improvements when running IronPython
 -Reduced virtual table sizes
 -Optimized double to int conversions using SSE2 on x86
 -Proper caching of generic methods
 -IL verifier implemented
 -HttpWebRequest can now be used with X.509 client certificates
 -Added support X.509 Client Certificate Chains for SSL/TLS
 -Fixed SSL/TLS not to require exportable private keys for
  client certificates
 -Implemented import and export of DSA keys CryptoAPI-compatible
  BLOB (2.0)
 -Added SafeBag handling to Mono.Security's PKCS#12
 -Regioninfo support
 -Optimized dictionary type
 -New TimeZone implementation
 -new 2.0 Winform controls: MaskedTextBox, ToolStripPainter,
  ToolStripSystemRenderer
 -Mono Cairo API has been updated, it will now expose Cairo
  1.2 API entry points.

- Don't use 64bit libs on ppc64 in find-requires (runtime is 32bit,
  must use 32bit libraries)

-------------------------------------------------------------------
Mon Jul 30 12:16:15 CEST 2007 - ro@suse.de

- try to use 64bit libs on ppc64 as well in find-requires

-------------------------------------------------------------------
Tue Jul 10 14:03:53 MST 2007 - wberrier@novell.com

- Build against valgrind for 10.3 and above

-------------------------------------------------------------------
Tue Jul 05 20:03:53 MST 2007 - wberrier@novell.com

- mono-find-requires fixes for ia64 (bnc #282877)

-------------------------------------------------------------------
Wed Jun 20 13:08:33 CEST 2007 - ro@suse.de

- removed requires on specific release in mono-complete for
  mono-basic (not a subpackage of mono-core anymore)

-------------------------------------------------------------------
Tue Jun 15 18:18:53 MST 2007 - wberrier@novell.com

- mono-config_rpm_requires.patch: revert back to using package
  requirements for the .config dep scanning.  This is because
  noarch packages can be built on either 32 or 64 bit machines,
  and then otherwise will depend on a 32 or 64 bit library, which
  is wrong.

-------------------------------------------------------------------
Tue Jun  5 15:18:53 MST 2007 - wberrier@novell.com

- Fix relevant rpmlint errors/warnings:
 -also 'provides' for each 'obsoletes'
 -run ldconfig in post/un for mono-core and mono-devel
- Update filelists
- Update to 1.2.4
 -680 new methods implemented.
 -290 stubs that used to throw NotImplemented exceptions have been
  implemented.
 -43 methods flagged with "to-do" have been implemented.
 -Fixed HandleRef support
 -Ability to disable shared mem support
 -Mostly complete ASP 2.0 support (webparts is missing)
  -asp.net 2.0 performance tripled
 -C# 3.0 compiler support
 -Mono.DataConvert: fixed implementation of the broken
  System.BitConverter
 -System.Windows.Forms
  -150 bugfixes
  -performance fixes
  -2.0 profile additions: ToolStrip, Baloon tips, and hundreds of
   new methods in various controls
 -System.Drawing
  -Initial support for metafiles (wmf & emf)
  -performance improvements and fixes
  -Many printing fixes
 -2.0 ADO.Net updates
 -Support for amd64 on Solaris
 -Security and Crypto:
  -Path.GetTempFileName now returns a file with 600 perms
  -Fixed HMACSHA384 and HMACSHA512 to use a 128 bits block size
  -Signcode tool now support password-protected PVK files
  -CryptoStream.Write is now closer to MS behaviour and requires
   less memory
  -Fixed endian issue in RIPEMD160
 -installvst: new tool to install VisualStudio source packages
 -New additional sqlite binding: Mono.Data.Sqlite
  -better maintained (http://sqlite-dotnet2.sourceforge.net/)
  -sqlite3 only (no sqlite2, would need to dump/reload db)
 -COM Interop now supports COM Callable Wrappers
 -Many of the new 2.0 socket methods are now available

-------------------------------------------------------------------
Fri Apr 13 19:18:53 CET 2007 - wberrier@novell.com

- add %debug_package so debug packages get created

-------------------------------------------------------------------
Wed Apr  4 23:38:57 CET 2007 - wberrier@novell.com

- Adapt for build service

-------------------------------------------------------------------
Tue Mar  6 02:38:57 CET 2007 - wberrier@suse.de

- atomic fixes from Michael Matz for for s390 and s390x
  ( bnc #237611 and bxc #80892 )

-------------------------------------------------------------------
Wed Feb 28 18:55:52 CET 2007 - wberrier@suse.de

- Turn off sigaltstack, as it's not safe (Requested by Paolo)
- Remove obsolete patches

- Update to 1.2.3.1 (Various runtime and winforms crashers
  as well as a zmd crasher)

- 1.2.3 Changes:
 - 1,933 missing methods were implemented.
 - 164 methods with pending implementations were fixed.
 - Improved Winforms 2.0 Support, with additional controls, and
   reduced memory usage
 - API complete ASP.NET 2.0 implementation (except for WebParts).
 - System.Media implementation
 - Supports SOAP 1.2 as well as the WS-BasicProfile 1.1 checker
 - Many fixes to the XmlSerializer as well to support the new features
 - The mkbundle tool now allows the machine.config file to be embedded
   as well
 - HttpListener now also support HTTPS, to configure the certificates
   use the httpcfg tool
 - Completed the support for the 2.0 updates to the API in
   System.Net.Sockets
 - System.Drawing.SystemIcons are now implemented
 - Authenticode: Signcode now generates valid signature on PE
   files with extra data (e.g. debug information, installers)
   and for file length that aren't multiple of eight
 - SSL/TLS: Fix negotiation cache and added configurable cache
   timeout using the MONO_TLS_SESSION_CACHE_TIMEOUT environment variable
 - XML Signature and XML Encryption: several bug fixes, it now it
   support exclusive canonicalization (needed for ongoing Olive work)
 - Support for inherited key parameters in DSA certificates
 - Support for DSA certificates in PKCS#12 files
 - Better support for X.509 CRL (including stores & certmgr support)
 - xbuild improvements
 - Sqlite 2.0 API support
 - Array and multi-array access optimizations
 - Versioned header files

-------------------------------------------------------------------
Sat Jan 20 07:08:52 CET 2007 - wberrier@suse.de

- Move libgdiplus requirement from mono-winforms to mono-core
  since System.Drawing (in mono-core) is useless without it
  (Won't affect mono-winforms, since it depends on mono-core)

-------------------------------------------------------------------
Tue Jan  9 21:32:48 CET 2007 - wberrier@suse.de

- Move mono-find-provides/requires to mono-devel since they depend
  on monodis, which is in mono-devel
- Patch mono-rpm_deps_error_handling_r70445.patch to error out
  when running the find scripts
- Fixes bnc #227362

-------------------------------------------------------------------
Sat Dec  2 05:00:07 CET 2006 - wberrier@suse.de

- Update to 1.2.2 (Fate #301111)
 -Serious bug fix in compiler (anonymous methods)
 -Additional 2.0 APIs implemented for Windows.Forms
 -Removal of many incorrect MonoTODOs and implemented many methods
  that were throwing not implemented exceptions

- Changes in 1.2.1
 -Thread.Interrupt is implemented
 -Generics support in Web Services
 -Web Services update for 2.0 api
 -ASP.Net 2.0 updates
 -Several Winforms blockers fixed
 -ADO.Net 2.0 updates
 -Support for more type converters
 -Process launching supports supports open special files in addition
  to launch programs (ie: xdg-open, gnome-open, or kfmclient)
 -System.Drawing UTF8 to UCS2 conversion fixed
 -2.0 api updates to X.509 related classes

- Changes in 1.2
 -Serialization Callbacks
 -Machine-level settings now available in registry
 -Winforms completion

-------------------------------------------------------------------
Fri Dec  1 04:50:20 CET 2006 - wberrier@suse.de

- Thread safety fixes for rug/zmd (bnc #221277)
- System.Web Source fix (bnc #225179)

-------------------------------------------------------------------
Tue Nov 14 16:58:40 CET 2006 - meissner@suse.de

- Disable executable stack option. #65536

-------------------------------------------------------------------
Sat Oct 21 01:54:52 CEST 2006 - wberrier@suse.de

- Remove glib2-devel from mono-nunit, not sure why it was ever there
  (bnc #210224)
- Updated to 1.1.18.1
 -removed upstream patches
 -C# Generics fixes
 -IO Layer changes to ease windows porting migration
 -Security updates: major speed improvements
 -Lots of Winforms fixes and updates
 -Merged source for mcs and gmcs
 -Performance tuning

-------------------------------------------------------------------
Thu Sep 28 06:10:34 CEST 2006 - wberrier@suse.de

- Security fix for bnc #205084 VUL-0
- TempFileCollection.cs: Create files in a temporary subdirectory,
  for security reasons.
- CodeCompiler.cs: Let TempFileCollection choose the temp dir.

-------------------------------------------------------------------
Fri Sep  1 20:12:52 CEST 2006 - wberrier@suse.de

- Update to 1.1.17.1 - Minor bugfix update
- Fix HttpListener, it was failing with a few post operations
- mono-service is now installed into the GAC, the recent changes
  broke applications that created new AppDomains
- Fix a race condition on array new

-------------------------------------------------------------------
Tue Aug 29 21:02:47 CEST 2006 - wberrier@suse.de

- add s390 backchain patch
- s390 warnings patch
- remove mono-basic package
- update filelist for CustomMarshalers

- Update to 1.1.17
 - Windows.Forms: Printing is now supported.
 - Basic COM support has been integrated.
 - FileSystem will now use inotify directly on systems that
   support it without having to go through an external library like
   FAM or Gamin [Gonzalo Paniagua]
 - 2.0 support for asynchronous reads and writes from the
   Process class is now supported [Gonzalo]
 - Fxied Loading as a Shared Library
 - Mono.Cairo bindings now supports a DirectFB surface now [Alp Toker]
 - Process now support the async io handling [Gonzalo Paniagua]
 - String.Normalize is included [Atsushi Enomoto]
 - ADO.NET 2.0 updates, included an implementation for
   SqlConnection.GetSchema (Nagappan, Nagappan).
 - Registry Updated to the 2.0 API. [Miguel de Icaza]
 - Support for splitting the registry across user and system level
   settings. [Gert Driesen]
 - Support for X.509 client certificates
   [Hubert Fongarnand, Sebastien Pouliot]
 - SN accepts password-protected PKCS#12/PFX files to strongname
   assemblies. This feature is enabled in both 1.x and 2.0 profiles
   [Sebastien Pouliot]
 - CodeDOM JScriptCodeProvider code JavaScript code is now
   included [Akiramei]
 - An EventLog implementation is available on both Unix and
   Windows by setting MONO_EVENTLOG_TYPE
 - COM Interop: Basic support for Runtime Callable Wrappers
   (RCWs) [Jon Chambers]
 - Sqlite now exposes a Version property to detect which underlying
   database is available (2.x or 3.x) [Joshua Tauberer]
 - Mono.Posix now features an abstract Unix end point in addition
   to Unix End Points [Alp Toker].
 - Fixed XmlSchemaSet and XmlSchemaCollection problem across
   multiple namespaces [Atsushi Enomoto]

 - Important Bug fixs:
  - Dynamic linking of Mono is now possible in applications
    that were using the TLS (open office) [Zoltan Varga]
  - Newly created AppDomains no longer inherit the list of
    loaded assemblies from the main domain [Lluis Sánchez]
  - A number of missing pieces of System.IO.Ports have been
    implemented (ReadChar, ReadLine, BytesToRead, BytesToWrite,
    ReadTo, return USB tty devices) [Miguel de Icaza]
  - ASP.NET Cache will now check dependencies (79002)
    [Gonzalo Paniagua]
  - Updated the Posgress data bindings to RC3
    [Francisco Figueiredo].

- --------

- Satisfy some compiler warnings with more warnings patches
- Update filelists
- Add sigaltstack configure option for performance

- Update to 1.1.16.1
- Sending the QUIT signal to a running Mono process will produce
  a stack trace of each thread
- Updated Boehm garbage collector
- Large file uploads are now supported
- Updated Master Pages, nested pages and System.Configuration
- Improved performance for XML
- Added support for abbreviated handshakes
- Fixed some possible deadlocks while negotiating
- basic implementation of System.Transactions
- implemented assembly unloading when an appdomain is released
- C# Compiler bug fixes:
 - #78020, #77916, #77961, #78048, #77966
 - Improved the generated output for array initialization
 - #77958, #77929, #77954
 - #77002
- XMLSerialization implemented for XmlSchemas
- improved performance of Int32.ToString()
- major updates to System.Windows.Forms and System.Drawing
- inline optimization enabled by default
- Long standing debugging line numbers bug fixed

-------------------------------------------------------------------
Fri Jun 16 03:00:57 CEST 2006 - wberrier@suse.de

Changes from Neale Ferguson <neale@sinenomine.net> from trunk in order
to fix bnc #179080 (zmd issue on s390x)

- * atomic.h: Fix atomic operations for s390x (not really broken
  but changed to use full 64-bit opcodes).
- * atomic.h: Fix atomic exchange pointer operations for s390x - these
  were broken as they used 32-bit instructions rather than their 64-bit
  versions.
- * s390x-codegen.h: Fix immediate checks.

-------------------------------------------------------------------
Mon May 15 22:41:12 CEST 2006 - wberrier@suse.de

- Revert change to mono-find-provides (59882) so that Mono apps will
  not have to depend on being able to find dependent assemblies in
  the gac.

-------------------------------------------------------------------
Thu May 11 01:07:58 CEST 2006 - wberrier@suse.de
-Add provides for mono-core for assemblies not in the gac, which
 other packages depend on.
-Update to 1.1.13.8 from stable branch
-Assembler:
 -Fix assembler bug that tried to sign netmodules.
 -Assembler will now report a bug if two identical labels are declared
  on the same methods
 -On 2.0, support the "property" directive.

-ASP.NET:
 -Make sure application start event is run before the request is
  processed.
 -Dont reset query string in Execute (78177).
 -Make sure that we can read a file before trasmitting it (fixes
  crash).
 -Added two tests (Bug 78101, DataSourceID).
 -Do not fail on events that do not derive from EventHandler,
  patch from Matthew Metnetsky.
 -Render some attributes inside span, not div tags (71251).
 -Fix searching of control by DataSourceID.

-System.NET:
 -Allow posts of size zero (#78316)
 -Fix for proxy authentication over HTTPS, for Zen team (78150).

-Core:
 -Do not capture compressed stack, this feature is not yet
  supported, fixes a crasher bug in ExecutionContext.
 -Add FileOptions, necessary for IronPython.
 -Fix incorrect buffer reading from console (78218).

-Mono.Security:
 -Enable abbreviated handshake for SSL3 (Zen)
 -Deal with emtpy master secrets (78085)

-Tools:
 -Fix mono-find-provides, to not list private copies of
  assemblies (fixes conflict of MonoDevelop and third party
  rpms).

-Runtime:
 -Fix for 78035.
 -Avoids a null dereferences in metadata, IPHostEntry
 -x86-64: Fix handling of MONO_INST_GENERICINST
 -Memory leak fix, when shutting down threads, clean the TLS:
  77470.
 -Handle multiple leave statements in a try/catch, 78024.

-Compilers:
 -Flag VB as unsupported.

-------------------------------------------------------------------
Mon Apr 24 21:17:28 CEST 2006 - wberrier@suse.de

- Bug fixes for Zenworks (78089, 78150, amd64 signal crash, and proxy fix in System.Net)

-------------------------------------------------------------------
Tue Apr 11 01:26:04 CEST 2006 - wberrier@suse.de

- Branch update for iFolder issues.  Also includes some semaphore
 updates, as well as SWF updates. (77931,01234,77931,01234,77991,
  77556,77811,77350,75609,78028,77971,78033,77242,76191,41943,77890,
  78067,78067,78067,77514,77839,77393)

-------------------------------------------------------------------
Mon Apr 10 14:35:39 CEST 2006 - cthiel@suse.de

- remove redundant Conflicts lines (#159340)

-------------------------------------------------------------------
Mon Mar 27 12:15:33 CEST 2006 - aj@suse.de

- Apply patch from Dick Porter to Break out of a loop if the
  shared file is smaller than expected - this fixes some build
  issues.

-------------------------------------------------------------------
Sat Mar 25 19:14:40 CET 2006 - wberrier@suse.de

-Update to 1.1.13.5 (No crypto changes)
 -C# compiler bug fixes for Bugzilla.ximian.com bugs: 77767,
77642, 77583, 77674, 77642 as well as fixing a number of
nullable bugs (gtest-254, gtest-251, gtest-250) fixed
compilation bugs for C5 library.
 -Sqlite bindings now has a way of specifying the default
encoding and defaults to UTF-8 instead of using ANSI.
Versions between Jan 20 and this release stored data always in
ANSI format which could not be read back.
 -System.Web: invoke validation callbacks in HttpCachePolicy
(77825); fixes OutputCache's VaryByParam="*" (77757); fix
Cache-Control header handling (77825); Fix POST filename
encodings (77714);  Allows setting custom Cache-Control
headers (77775).
 -System.Web/HtmlControls fixes from Mainsoft: fixed
Anchor.RenderAttributes, Form.Method fixed to include "post"
if needed; InputImage fixed to cope with SetAtt.
 -System.Web's SessionState: session state will retry
reconnecting to the database if the connection is lost
(77785).   Dispose the data reader to avoid leaks (77698);
 -System.Web Javascript, hide validators view (77261).
 -System.Web's/WebControls: Use naming container instead of
pages to locate controls (77793);   Fixes rendering of
ListBoxes (77740);
 -System.XML.Schema: fix return value on the XML Schema
(77685).
 -XmlSerialization: consider subtypes (77447), ignore element
namespaces when using Unqualified mode (75019).
 -IO-Layer: close redirected pipes on errors (77514), Shell
Execute, avoid crash (77393);  Delete semaphores on last exit
(City of Largo request, problem happens in clusters, direct
communication, no bug#).
 -WebConnectionStream: avoid async calls when writing zero
bytes (iFolder CPU consumption issue).
 -HttpWebRequest: fix close semantics (77753)
 -UpdClient: fix IPV6 family check (77689).
 -System.Data fixes: Fixed 77557, 77776 and enabled tests
that were previously disables, add new tests.
 -System.Data: Fixed endianess bugs reported on PPC and
SPARC.
 -Runtime: Updates for LocalDataStoreSlot to prevent the
Beagle leak from happening; Fixed crasher bug in class
libraries (77772).  Fixes 77504 in generic libraries; Fix
Stream bug 77863; Reflection fix for 74937; Stat-usage fixes
(77759, 76966); public-key-token casing (77898); Codebase
return fix (77877); fix two ia64 crashes (77774, 77787);
Handle null in Equals (77700); backport memory corruption fix
(no bug number);
 -Tracing: Fix crash in StringBuilders when tracing (77848);
disable output always 77706.
 -S390x: Use long-displacement if the CPU supports it.
 -Patch from Tambet at ZenWorks team to reduce memory
consumption in remoting, shaves a few megabytes on RPC calls.
 -System.Drawing/Windows.Forms: Bring code from trunk (these
are unsupported libraries).
 -Mono.Security: several fixes to the async stream handling
in SSL: implement a ClientSessionCache, redo the async
processing of requests as they were previously hanging iFolder
(77663, 67711).  There were no changes to the crypto code.
 -Upgraded C5 test suite to 1.0 release from upstream.
 -Updated debugger API.
 -Added tests for bugs fixed.
 -Fix: s390 and s390x will enable the JIT without special
flags (before we needed --enable-jit).
 -Prj2Info escapes now characters in filenames that contain
special shell characters.

-------------------------------------------------------------------
Wed Mar  1 09:47:52 CET 2006 - aj@suse.de

- Remove echo in %post.

-------------------------------------------------------------------
Wed Mar  1 03:13:10 CET 2006 - wberrier@suse.de

- Update to 1.1.13.4
 -Fixes the following bugs: 77524 77581 75479 77637 77613 77446 77433 77398 77397 77315 75436 75479 77521 77536 77572 77468 77371 77273 77309 74932 77442.... too many to list here.

-------------------------------------------------------------------
Sat Feb 18 14:41:07 CET 2006 - ro@suse.de

- use wildcards in filelist (.mdb files moved to debuginfo package)

-------------------------------------------------------------------
Thu Feb 16 22:53:40 CET 2006 - wberrier@suse.de

- have winforms rpm depend on libgdiplus (Novell Bug #150858)

-------------------------------------------------------------------
Thu Jan 26 17:54:16 CET 2006 - ro@suse.de

- warn if installing on s390/G5

-------------------------------------------------------------------
Wed Jan 25 21:38:23 CET 2006 - mls@suse.de

- converted neededforbuild to BuildRequires

-------------------------------------------------------------------
Fri Jan 20 06:03:01 CET 2006 - wberrier@suse.de

- Update to 1.1.13.2 (no crypto updates)

-------------------------------------------------------------------
Thu Jan 12 21:32:14 CET 2006 - wberrier@suse.de

- Update to 1.1.13.1 (no crypto updates)
  Fix for CASA

-------------------------------------------------------------------
Fri Jan  6 21:31:21 CET 2006 - wberrier@suse.de

- Update to 1.1.13 (No crypto updates)
  FireBird 2.0 gac file was disabled
  Added nunit-console to filelist

-------------------------------------------------------------------
Fri Dec 23 20:58:47 CET 2005 - wberrier@suse.de

- Add some of Zoltan's ia64 fixes to fix the runtime (no crypto updates)

-------------------------------------------------------------------
Fri Dec 23 03:28:31 CET 2005 - wberrier@suse.de

- Update to 1.1.12.1 (ziplib fix, no crypto updates)

-------------------------------------------------------------------
Thu Dec 22 00:24:07 CET 2005 - wberrier@suse.de

- Add patches fro Neale's s390 checkins (No crypto updates)

-------------------------------------------------------------------
Wed Dec 21 08:42:54 CET 2005 - wberrier@suse.de

- Fix mono-cairo.pc for gtk-sharp2 build on x86_64

-------------------------------------------------------------------
Tue Dec 20 02:48:31 CET 2005 - wberrier@suse.de

- Update to 1.1.12, monoburg warning patch

-------------------------------------------------------------------
Fri Dec 16 15:32:16 CET 2005 - ro@suse.de

- add an explicit cast on ppc for InterlockedCompareExchangePointer

-------------------------------------------------------------------
Thu Dec 15 21:36:32 CET 2005 - wberrier@suse.de

- Update to 1.1.11, add files for 1.1.11, and enable some files (libmono.l?a)

-------------------------------------------------------------------
Mon Dec 12 12:34:07 CET 2005 - sbrabec@suse.cz

- Added "Obsoletes: mono" to mono-core.

-------------------------------------------------------------------
Fri Nov 11 17:55:27 CET 2005 - wberrier@suse.de

- Fix build (supportw.c)

-------------------------------------------------------------------
Fri Nov 11 01:40:21 CET 2005 - wberrier@suse.de

- Update to 1.1.10.  Add profiler-aot, mozroots

-------------------------------------------------------------------
Thu Oct 20 17:58:16 CEST 2005 - ro@suse.de

- try to fix req/prov scripts
- remove AC_DISABLE_FAST_INSTALL to fix installed binaries
- do not build as root

-------------------------------------------------------------------
Thu Oct 13 01:53:59 CEST 2005 - ro@suse.de

- take fix for gacutil problem from SVN
- remove workaround hack from specfile

-------------------------------------------------------------------
Wed Oct 12 18:24:25 CEST 2005 - ro@suse.de

- fix some lib64 issues

-------------------------------------------------------------------
Wed Oct 12 02:41:24 CEST 2005 - wberrier@suse.de

- Update to 1.1.9.2, restructure packages to match upstream

-------------------------------------------------------------------
Mon Sep 26 15:22:27 CEST 2005 - ro@suse.de

- fix build on x86_64
- move mono-nunit.pc to mono-nunit package

-------------------------------------------------------------------
Fri Sep 23 04:53:09 CEST 2005 - wberrier@suse.de

- Reenable 2.0 preview (bug #118530)

-------------------------------------------------------------------
Fri Sep 16 20:46:58 CEST 2005 - wberrier@suse.de

- Nasty work around hack for libtool in order to not include wrappers (#116245)

-------------------------------------------------------------------
Fri Sep  9 01:12:59 CEST 2005 - ro@suse.de

- fix build on 9.1+

-------------------------------------------------------------------
Tue Aug 23 23:10:13 CEST 2005 - wberrier@suse.de

- Add the mono-nunit subpackage (needed for mono-tools)

-------------------------------------------------------------------
Tue Aug  2 00:50:30 CEST 2005 - ro@suse.de

- update to 1.1.8.3

-------------------------------------------------------------------
Mon Jul 15 01:20:31 CEST 2005 - wberrier@novell.com

- Update %file directives for SymbolWriter

-------------------------------------------------------------------
Mon Jun 27 01:20:31 CEST 2005 - ro@suse.de

- use ldscript only for "libmono" but not for "mono"

-------------------------------------------------------------------
Wed Jun 22 14:06:10 CEST 2005 - ro@suse.de

- fix more warnings on ppc

-------------------------------------------------------------------
Wed Jun 22 00:29:24 CEST 2005 - ro@suse.de

- update to 1.1.8.1

-------------------------------------------------------------------
Tue Jun 21 17:19:36 CEST 2005 - ro@suse.de

- revisit execstack : pass with "-Wl" as linker flag

-------------------------------------------------------------------
Tue Jun  7 12:56:00 CEST 2005 - uli@suse.de

- s390: moved __attribute__((packed)) where it is not ignored by
  the compiler (fixes SIGILLs/SIGSEGVs in several packages)

-------------------------------------------------------------------
Sat May 14 18:26:39 CEST 2005 - aj@suse.de

- mono-data-* needs mono-data.  Require it explicitely.

-------------------------------------------------------------------
Fri May 13 12:08:32 CEST 2005 - ro@suse.de

- fix assembliesdir in libexecdir patch again

-------------------------------------------------------------------
Thu May 12 14:10:20 CEST 2005 - uli@suse.de

- update -> 1.1.7
- disabled s390x (port is broken and unmaintained)

-------------------------------------------------------------------
Tue Mar 22 00:49:39 CET 2005 - mmj@suse.de

- Add dependency for mono-devel on glib2-devel [#74161]

-------------------------------------------------------------------
Wed Mar 16 05:04:19 CET 2005 - gekker@suse.de

- Add mono-sys-web.patch and mono-leak-fix.patch for mono team

-------------------------------------------------------------------
Fri Mar 11 18:26:44 CET 2005 - gekker@suse.de

- Add mono-libgc-finalizer-fix.diff for the mono team

-------------------------------------------------------------------
Fri Mar 11 13:54:03 CET 2005 - uli@suse.de

- s390* workaround (build with -O1)
- fixed a bunch of (harmless) warnings to appease autobuild

-------------------------------------------------------------------
Thu Mar 10 19:58:08 CET 2005 - gekker@suse.de

- add mono-sqlite2-config.patch (71844).

-------------------------------------------------------------------
Tue Mar  8 03:04:19 CET 2005 - gekker@suse.de

- add mono-mini-threadfix.diff, to fix random crashes in mcs

-------------------------------------------------------------------
Tue Mar  1 21:23:43 CET 2005 - gekker@suse.de

- remove sqlite2-devel crack from requires for mono-data-sqlite

-------------------------------------------------------------------
Mon Feb 21 08:24:58 CET 2005 - clahey@suse.de

- Update to 1.1.4.

-------------------------------------------------------------------
Sun Feb 20 18:43:52 CET 2005 - ro@suse.de

- expand configure macro (not always correct for old distributions)
- more hacks to java path

-------------------------------------------------------------------
Sun Feb 20 11:41:32 CET 2005 - ro@suse.de

- changed java path

-------------------------------------------------------------------
Sat Feb 19 11:23:59 CET 2005 - ro@suse.de

- fix build for older distributions (without jni)

-------------------------------------------------------------------
Thu Feb 17 19:25:18 CET 2005 - gekker@suse.de

- Add requires to mono-data-sqlite for sqlite2 and sqlite2-devel

-------------------------------------------------------------------
Tue Feb 15 17:07:39 CET 2005 - gekker@suse.de

- add -z execstack to LDFLAGS (50536)

-------------------------------------------------------------------
Mon Feb  7 00:03:54 CET 2005 - ro@suse.de

- fix mono with exec stack protection

-------------------------------------------------------------------
Wed Feb  2 02:19:17 CET 2005 - ro@suse.de

- fix mono-provides

-------------------------------------------------------------------
Mon Jan 31 17:31:39 CET 2005 - gekker@suse.de

- fix a directory ownership problem

-------------------------------------------------------------------
Mon Jan 31 14:38:50 CET 2005 - ro@suse.de

- fix build on lib64 (again ...)

-------------------------------------------------------------------
Mon Jan 31 14:25:17 CET 2005 - ro@suse.de

- fix setup line in spec file

-------------------------------------------------------------------
Mon Jan 31 10:10:20 CET 2005 - clahey@suse.de

- Split into separate packages.

-------------------------------------------------------------------
Thu Jan 13 01:48:00 CET 2005 - ro@suse.de

- update to 1.1.3

-------------------------------------------------------------------
Mon Nov 29 01:28:07 CET 2004 - ro@suse.de

- THREAD_LOCAL_ALLOC is not possible on ppc, don't force it
- extended 64bit-warning patch some more
- configure "with-jit=yes" as in sles9

-------------------------------------------------------------------
Fri Nov 12 16:08:09 CET 2004 - ro@suse.de

- update to 1.1.2 devel branch
- added hacks to use libexecdir (always /usr/lib/mono)
  (but mcs still doesn't use it)

-------------------------------------------------------------------
Thu Sep 16 02:09:30 CEST 2004 - ro@suse.de

- updated to 1.0.1 bugfix release

-------------------------------------------------------------------
Fri Jul  2 16:12:39 CEST 2004 - ro@suse.de

- updated 64bit-warning patch (from clahey)

-------------------------------------------------------------------
Fri Jul  2 14:13:59 CEST 2004 - ro@suse.de

- update to 1.0 version

-------------------------------------------------------------------
Tue Jun 29 01:03:41 CEST 2004 - mls@suse.de

- use find-requires and find-provides from rpm

-------------------------------------------------------------------
Mon Jun 21 23:43:56 CEST 2004 - clahey@suse.de

- Updated to 0.96.
- Added find-requires.mono and find-provides.mono.

-------------------------------------------------------------------
Thu Jun 10 03:04:22 CEST 2004 - clahey@suse.de

- Don't include wine stuff.

-------------------------------------------------------------------
Wed May 26 21:15:14 CEST 2004 - clahey@suse.de

- Require icu and libiuc26.

-------------------------------------------------------------------
Tue May 25 21:39:55 CEST 2004 - clahey@suse.de

- make clean before make to remove incorrectly disted file.
- As long as we're conflicting with pnet-compiler, we shouldn't
  move ilasm to milasm as that messes things up for mono and isn't
  necessary.

-------------------------------------------------------------------
Tue May 25 08:25:45 CEST 2004 - adrian@suse.de

- fix permissions of -devel package
  (Requires base mono package and conflicts with pnet-compiler)

-------------------------------------------------------------------
Mon May 24 20:39:42 CEST 2004 - clahey@suse.de

- Don't try to include wine files on non x86 platforms.

-------------------------------------------------------------------
Fri May 21 21:19:53 CEST 2004 - clahey@suse.de

- Updated to 0.91.

-------------------------------------------------------------------
Tue Apr 20 14:03:00 CEST 2004 - uli@suse.de

- ditch JIT runtime on PPC as it does not work properly yet
- add winelib on x86 to allow use of Win32 APIs as provided by WINE
- require libgdiplus

-------------------------------------------------------------------
Mon Apr 19 15:28:18 CEST 2004 - uli@suse.de

- update -> 0.31 as reqd by gp

-------------------------------------------------------------------
Wed Feb 18 11:53:28 CET 2004 - uli@suse.de

- update -> 0.30.1 as reqd by gp

-------------------------------------------------------------------
Mon Feb  9 16:16:35 CET 2004 - uli@suse.de

- fixed to build on s390

-------------------------------------------------------------------
Thu Feb  5 18:15:17 CET 2004 - uli@suse.de

- update -> 0.30 (proper fix for Write/WriteLine problem,
  obsoletes several patches)
- build libgc/finalize.c with -fno-strict-aliasing

-------------------------------------------------------------------
Wed Feb  4 17:38:38 CET 2004 - uli@suse.de

- renamed ilasm to milasm to avoid conflict with Portable.NET

-------------------------------------------------------------------
Fri Jan 30 15:58:15 CET 2004 - uli@suse.de

- removed incompatible System.Console.Write/WriteLine methods to
  make mcs-compiled binaries work with Portable.NET and MS.NET

-------------------------------------------------------------------
Wed Jan 28 11:30:36 CET 2004 - uli@suse.de

- disable exception tables, do not work with glibc 2.3 yet
- build class libs and tools from source (not on PPC, fails with
  null pointer exception)
- compat link for archs without JIT

-------------------------------------------------------------------
Mon Jan 26 14:48:22 CET 2004 - uli@suse.de

- initial package
