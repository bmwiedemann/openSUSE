Index: firefox-78.15.0/python/mozbuild/mozbuild/util.py
===================================================================
--- firefox-78.15.0.orig/python/mozbuild/mozbuild/util.py
+++ firefox-78.15.0/python/mozbuild/mozbuild/util.py
@@ -220,7 +220,7 @@ class FileAvoidWrite(BytesIO):
     still occur, as well as diff capture if requested.
     """
 
-    def __init__(self, filename, capture_diff=False, dry_run=False, readmode='rU'):
+    def __init__(self, filename, capture_diff=False, dry_run=False, readmode='r'):
         BytesIO.__init__(self)
         self.name = filename
         assert type(capture_diff) == bool
Index: firefox-78.15.0/python/mozbuild/mozbuild/preprocessor.py
===================================================================
--- firefox-78.15.0.orig/python/mozbuild/mozbuild/preprocessor.py
+++ firefox-78.15.0/python/mozbuild/mozbuild/preprocessor.py
@@ -517,7 +517,7 @@ class Preprocessor:
 
         if args:
             for f in args:
-                with io.open(f, 'rU', encoding='utf-8') as input:
+                with io.open(f, 'r', encoding='utf-8') as input:
                     self.processFile(input=input, output=out)
             if depfile:
                 mk = Makefile()
@@ -807,7 +807,7 @@ class Preprocessor:
                     args = self.applyFilters(args)
                 if not os.path.isabs(args):
                     args = os.path.join(self.curdir, args)
-                args = io.open(args, 'rU', encoding='utf-8')
+                args = io.open(args, 'r', encoding='utf-8')
             except Preprocessor.Error:
                 raise
             except Exception:
@@ -862,7 +862,7 @@ def preprocess(includes=[sys.stdin], def
     pp = Preprocessor(defines=defines,
                       marker=marker)
     for f in includes:
-        with io.open(f, 'rU', encoding='utf-8') as input:
+        with io.open(f, 'r', encoding='utf-8') as input:
             pp.processFile(input=input, output=output)
     return pp.includes
 
Index: firefox-78.15.0/python/mozbuild/mozbuild/action/process_define_files.py
===================================================================
--- firefox-78.15.0.orig/python/mozbuild/mozbuild/action/process_define_files.py
+++ firefox-78.15.0/python/mozbuild/mozbuild/action/process_define_files.py
@@ -36,7 +36,7 @@ def process_define_file(output, input):
             not config.substs.get('JS_STANDALONE'):
         config = PartialConfigEnvironment(mozpath.join(topobjdir, 'js', 'src'))
 
-    with open(path, 'rU') as input:
+    with open(path, 'r') as input:
         r = re.compile('^\s*#\s*(?P<cmd>[a-z]+)(?:\s+(?P<name>\S+)(?:\s+(?P<value>\S+))?)?', re.U)
         for l in input:
             m = r.match(l)
Index: firefox-78.15.0/python/mozbuild/mozbuild/backend/base.py
===================================================================
--- firefox-78.15.0.orig/python/mozbuild/mozbuild/backend/base.py
+++ firefox-78.15.0/python/mozbuild/mozbuild/backend/base.py
@@ -265,7 +265,7 @@ class BuildBackend(LoggingMixin):
         return status
 
     @contextmanager
-    def _write_file(self, path=None, fh=None, readmode='rU'):
+    def _write_file(self, path=None, fh=None, readmode='r'):
         """Context manager to write a file.
 
         This is a glorified wrapper around FileAvoidWrite with integration to
Index: firefox-78.15.0/python/mozbuild/mozpack/files.py
===================================================================
--- firefox-78.15.0.orig/python/mozbuild/mozpack/files.py
+++ firefox-78.15.0/python/mozbuild/mozpack/files.py
@@ -558,7 +558,7 @@ class PreprocessedFile(BaseFile):
         pp = Preprocessor(defines=self.defines, marker=self.marker)
         pp.setSilenceDirectiveWarnings(self.silence_missing_directive_warnings)
 
-        with _open(self.path, 'rU') as input:
+        with _open(self.path, 'r') as input:
             with _open(os.devnull, 'w') as output:
                 pp.processFile(input=input, output=output)
 
@@ -615,7 +615,7 @@ class PreprocessedFile(BaseFile):
         pp = Preprocessor(defines=self.defines, marker=self.marker)
         pp.setSilenceDirectiveWarnings(self.silence_missing_directive_warnings)
 
-        with _open(self.path, 'rU') as input:
+        with _open(self.path, 'r') as input:
             pp.processFile(input=input, output=dest, depfile=deps_out)
 
         dest.close()
Index: firefox-78.15.0/build/pymake/mkformat.py
===================================================================
--- firefox-78.15.0.orig/build/pymake/mkformat.py
+++ firefox-78.15.0/build/pymake/mkformat.py
@@ -6,7 +6,7 @@ import pymake.parser
 filename = sys.argv[1]
 source = None
 
-with open(filename, 'rU') as fh:
+with open(filename, 'r') as fh:
     source = fh.read()
 
 statements = pymake.parser.parsestring(source, filename)
Index: firefox-78.15.0/build/pymake/mkparse.py
===================================================================
--- firefox-78.15.0.orig/build/pymake/mkparse.py
+++ firefox-78.15.0/build/pymake/mkparse.py
@@ -5,7 +5,7 @@ import pymake.parser
 
 for f in sys.argv[1:]:
     print "Parsing %s" % f
-    fd = open(f, 'rU')
+    fd = open(f, 'r')
     s = fd.read()
     fd.close()
     stmts = pymake.parser.parsestring(s, f)
Index: firefox-78.15.0/build/pymake/tests/formattingtests.py
===================================================================
--- firefox-78.15.0.orig/build/pymake/tests/formattingtests.py
+++ firefox-78.15.0/build/pymake/tests/formattingtests.py
@@ -253,7 +253,7 @@ class MakefileCorupusTest(TestBase):
                 continue
 
             source = None
-            with open(makefile, 'rU') as fh:
+            with open(makefile, 'r') as fh:
                 source = fh.read()
 
             try:
Index: firefox-78.15.0/dom/base/usecounters.py
===================================================================
--- firefox-78.15.0.orig/dom/base/usecounters.py
+++ firefox-78.15.0/dom/base/usecounters.py
@@ -10,7 +10,7 @@ import sys
 
 def read_conf(conf_filename):
     # Can't read/write from a single StringIO, so make a new one for reading.
-    stream = open(conf_filename, 'rU')
+    stream = open(conf_filename, 'r')
 
     def parse_counters(stream):
         for line_num, line in enumerate(stream):
Index: firefox-78.15.0/media/webrtc/trunk/webrtc/build/gyp_helper.py
===================================================================
--- firefox-78.15.0.orig/media/webrtc/trunk/webrtc/build/gyp_helper.py
+++ firefox-78.15.0/media/webrtc/trunk/webrtc/build/gyp_helper.py
@@ -15,7 +15,7 @@ def apply_gyp_environment_from_file(file
   """Reads in a *.gyp_env file and applies the valid keys to os.environ."""
   if not os.path.exists(file_path):
     return
-  with open(file_path, 'rU') as f:
+  with open(file_path, 'r') as f:
     file_contents = f.read()
   try:
     file_data = eval(file_contents, {'__builtins__': None}, None)
Index: firefox-78.15.0/build/pymake/pymake/parser.py
===================================================================
--- firefox-78.15.0.orig/build/pymake/pymake/parser.py
+++ firefox-78.15.0/build/pymake/pymake/parser.py
@@ -347,7 +347,7 @@ _directivesre = re.compile(r'(%s)(?:$|\s
 _varsettokens = (':=', '+=', '?=', '=')
 
 def _parsefile(pathname):
-    fd = open(pathname, "rU")
+    fd = open(pathname, "r")
     stmts = parsestring(fd.read(), pathname)
     stmts.mtime = os.fstat(fd.fileno()).st_mtime
     fd.close()
Index: firefox-78.15.0/testing/web-platform/tests/conformance-checkers/tools/build-svg-tests.py
===================================================================
--- firefox-78.15.0.orig/testing/web-platform/tests/conformance-checkers/tools/build-svg-tests.py
+++ firefox-78.15.0/testing/web-platform/tests/conformance-checkers/tools/build-svg-tests.py
@@ -139,7 +139,7 @@ def build_html_test_file(filename, svgdi
     logging.debug(htmlpathname)
 
     # read SVG data
-    svgfile = open(svgpathname, "rU")
+    svgfile = open(svgpathname, "r")
     svg = svgfile.read()
     svgfile.close()
 
