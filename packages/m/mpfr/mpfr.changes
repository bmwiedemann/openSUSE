-------------------------------------------------------------------
Thu Mar 20 14:18:31 UTC 2025 - Richard Biener <rguenther@suse.com>

- Update to mpfr 4.2.2
  * In order to resolve a portability issue with the _Float128 fallback to
    __float128 for binary128 support (e.g. with Clang and glibc 2.41), the
    prototypes of the corresponding conversion functions had to be changed,
    with _Float128 replaced by mpfr_float128, where mpfr_float128 is a
    macro defined as _Float128 by default. This changes neither the ABI nor
    the API (except that the end user of MPFR would need to define
    mpfr_float128 as the actual type for the binary128 format if this is not
    the standard _Float128 type).
  * Other bug fixes (see the fixed bugs on the MPFR 4.2.1 page and/or the
    ChangeLog file). In particular, the formatted output functions behaved
    incorrectly with %c on the value 0; such a use is uncommon, but this bug
    may have security implications.
  * Improved MPFR manual.
  * Detect the use of GMP's buggy vsnprintf replacement at configure time.
    With it, the tests of "%a" will be disabled to avoid an assertion failure
    in the MPFR testsuite. A warning will be displayed in the configure output
    in such a case.

-------------------------------------------------------------------
Tue Aug 22 11:38:24 UTC 2023 - Richard Biener <rguenther@suse.com>

- Update to mpfr 4.2.1
  * Includes all fixes from mpfr-4.2.0-cummulative.patch which is
    subsequently removed.
  * Improved MPFR manual.
  * Configure tests: replaced the test of the link with GMP, in order
    to avoid the use of a function without a prototype (Autoconf issue), as
    this is obsolescent in ISO C. The new test should be more robust.

-------------------------------------------------------------------
Wed Jun  7 07:13:26 UTC 2023 - Richard Biener <rguenther@suse.com>

- Update mpfr-4.2.0-cummulative.patch, adds patches fixing the following bugs
  * the mpfr_reldiff function, which computes |b-c|/b, is buggy on special
    values, e.g. on the following (b,c) values: (+Inf,+Inf) gives ±0
    instead of NaN (like NaN/Inf); (+0,+0) gives 1 instead of NaN (like 0/0);
    (+0,1) gives 1 instead of Inf (like 1/0). Moreover, the sign of 0 for
    (+Inf,+Inf) or (-Inf,-Inf) is not set, i.e. it is just the sign of the
    destination before the call; as a consequence, results are not even
    consistent.
  * the reuse tests are incomplete: the sign of a result zero is not checked,
    so that it can miss bugs (one of the mpfr_reldiff bugs mentioned above,
    in particular).
  * the general code for the power function (mpfr_pow_general internal
    function) has two bugs in particular cases: the first one is an incorrect
    computation of the error bound when there has been an intermediate
    underflow or overflow (in such a case, the computation is performed
    again with a rescaling, thus with an additional error term, but there is
    a bug in the computation of this term), so that the result may be
    rounded incorrectly (in particular, a spurious overflow is possible);
    the second one occurs in a corner case (destination precision 1,
    rounding to nearest, and where the rounded result assuming an unbounded
    exponent range would be 2emin-2 and the exact result is larger than this
    value), with the only consequence being a missing underflow exception
    (the underflow flag is not set).
  * the mpfr_compound_si function can take a huge amount of memory and time
    in some cases (when the argument x is a large even integer and xn is
    represented exactly in the target precision) and does not correctly
    detect overflows and underflows
  * MPFR can crash when a formatted output function is called with
    %.2147483648Rg in the format string.

-------------------------------------------------------------------
Tue Apr 18 08:13:21 UTC 2023 - Richard Biener <rguenther@suse.com>

- Add mpfr-4.2.0-cummulative.patch, cummulative patches for
  mpfr 4.2.0:
  * A test of the thousands separator in tsprintf.c is based on the
    output from the GNU C Library up to 2.36, which is incorrect.
  * The mpfr_ui_pow_ui function has infinite loop in case of overflow.
  * The tfprintf and tprintf tests may fail in locales where decimal_point
    has several bytes, such as ps_AF.
  * In particular cases that are very hard to round, mpfr_rec_sqrt may yield
    a stack overflow due to many small allocations in the stack, based on
    alloca().
- Remove tests-tsprintf.patch that's included in the above set.

-------------------------------------------------------------------
Tue Jan 31 15:58:22 UTC 2023 - Andreas Schwab <schwab@suse.de>

- tests-tsprintf.patch: Avoid testsuite failure with glibc >= 2.37

-------------------------------------------------------------------
Mon Jan  9 08:22:17 UTC 2023 - Richard Biener <rguenther@suse.com>

- Update to mpfr 4.2.0
  * New functions mpfr_cosu, mpfr_sinu, mpfr_tanu, mpfr_acosu, mpfr_asinu,
    mpfr_atanu and mpfr_atan2u.
  * New functions mpfr_cospi, mpfr_sinpi, mpfr_tanpi, mpfr_acospi, mpfr_asinpi,
    mpfr_atanpi and mpfr_atan2pi.
  * New functions mpfr_log2p1, mpfr_log10p1, mpfr_exp2m1, mpfr_exp10m1 and
    mpfr_compound_si.
  * New functions mpfr_fmod_ui, mpfr_powr, mpfr_pown, mpfr_pow_uj, mpfr_pow_sj
    and mpfr_rootn_si (mpfr_pown is actually a macro defined as an alias for
    mpfr_pow_sj).
  * Bug fixes.
    In particular, for the formatted output functions (mpfr_printf, etc.),
    the case where the precision consists only of a period has been fixed
    to be like ".0" as specified in the ISO C standard, and the manual has
    been corrected and clarified.
    The macros of the custom interface have also been fixed: they now behave
    like functions (except a minor limitation for mpfr_custom_init_set).
- Remove mpfr-4.1.1-patch01.patch which is included in the new release.

-------------------------------------------------------------------
Thu Nov 24 09:08:38 UTC 2022 - Richard Biener <rguenther@suse.com>

- Add mpfr-4.1.1-patch01.patch to fix bug with code using
  the mpfr_custom_get_kind macro.

-------------------------------------------------------------------
Sat Nov 19 12:57:57 UTC 2022 - Andreas Stieger <andreas.stieger@gmx.de>

- package license files correctly

-------------------------------------------------------------------
Fri Nov 18 07:52:35 UTC 2022 - Richard Biener <rguenther@suse.com>

- Update to mpfr 4.1.1
  * Bug fixes (see <https://www.mpfr.org/mpfr-4.1.0/#fixed> and/or the
    ChangeLog file), in particular for macros implementing functions.
  * Improved manual formatting.
  * Accumulated bugfixes
- Remove mpfr-4.1.0-p7.diff, all patches are contained in the
  new version.
- Update mpfr.keyring

-------------------------------------------------------------------
Fri Feb 12 08:05:33 UTC 2021 - Richard Biener <rguenther@suse.com>

- Add cummulative patch mpfr-4.1.0-p7.diff fixing various bugs.

-------------------------------------------------------------------
Mon Jul 13 07:05:45 UTC 2020 - Richard Biener <rguenther@suse.com>

- Update to mpfr 4.1.0
  * New function mpfr_get_str_ndigits about conversion to a string of digits.
  * New function mpfr_dot for the dot product (incomplete, experimental).
  * New functions mpfr_get_decimal128 and mpfr_set_decimal128 (available only
    when MPFR has been built with decimal float support).
  * New function mpfr_cmpabs_ui.
  * New function mpfr_total_order_p for the IEEE 754 totalOrder predicate.
  * The mpfr_out_str function now accepts bases from -2 to -36, in order to
    follow mpfr_get_str and GMP's mpf_out_str functions (these cases gave an
    assertion failure, as with other invalid bases).
  * Shared caches: cleanup; really detect lock failures (abort in this case).
  * The behavior of the formatted output functions (mpfr_printf, etc.) with
    an empty precision field has improved: trailing zeros are kept in a way
    similar to the formatted output functions from C.
  * Improved mpfr_add and mpfr_sub when all operands have a precision equal to
    twice the number of bits per word, e.g., 128 bits on a 64-bit platform.
  * Optimized the tuning parameters for various architectures.
  * Improved test coverage to 98.6% of code for x86_64.
  * Bug fixes.
  * MPFR manual: corrected/completed the mpfr_get_str description in order to
    follow the historical behavior and GMP's mpf_get_str function.
- Remove mpfr-4.0.2-p6.patch and floating-point-format-no-lto.patch

-------------------------------------------------------------------
Wed Apr  1 07:27:49 UTC 2020 - Richard Biener <rguenther@suse.com>

- Add cummulative patch mpfr-4.0.2-p6.patch fixing various bugs.

-------------------------------------------------------------------
Mon Jul 15 11:26:24 UTC 2019 - Martin Liška <mliska@suse.cz>

- Add floating-point-format-no-lto.patch in order to fix assembler scanning
  (boo#1141190).

-------------------------------------------------------------------
Fri Feb  1 08:32:04 UTC 2019 - rguenther@suse.com

- Update to mpfr 4.0.2
  * Cummulative bugfix release, includes mpfr-4.0.1-cummulative-patch.patch.

-------------------------------------------------------------------
Thu May 17 06:37:28 UTC 2018 - antoine.belvire@opensuse.org

- Fix %install_info_delete usage:
  * It has to be performed in %preun not in %postun.
  * See https://en.opensuse.org/openSUSE:Packaging_Conventions_RPM_Macros#.25install_info_delete.

-------------------------------------------------------------------
Wed May  2 08:48:20 UTC 2018 - rguenther@suse.com

- Add mpfr-4.0.1-cummulative-patch.patch.  Fixes
  * A subtraction of two numbers of the same sign or addition of two
    numbers of different signs can be rounded incorrectly (and the
    ternary value can be incorrect) when one of the two inputs is
    reused as the output (destination) and all these MPFR numbers
    have exactly GMP_NUMB_BITS bits of precision (typically, 32 bits
    on 32-bit machines, 64 bits on 64-bit machines).
  * The mpfr_fma and mpfr_fms functions can behave incorrectly in case
    of internal overflow or underflow.
  * The result of the mpfr_sqr function can be rounded incorrectly
    in a rare case near underflow when the destination has exactly
    GMP_NUMB_BITS bits of precision (typically, 32 bits on 32-bit
    machines, 64 bits on 64-bit machines) and the input has at most
    GMP_NUMB_BITS bits of precision.
  * The behavior and documentation of the mpfr_get_str function are
    inconsistent concerning the minimum precision (this is related to
    the change of the minimum precision from 2 to 1 in MPFR 4.0.0). The
    get_str patch fixes this issue in the following way: the value 1
    can now be provided for n (4th argument of mpfr_get_str); if n = 0,
    then the number of significant digits in the output string can now
    be 1, as already implied by the documentation (but the code was
    increasing it to 2).
  * The mpfr_cmp_q function can behave incorrectly when the rational
    (mpq_t) number has a null denominator.
  * The mpfr_inp_str and mpfr_out_str functions might behave
    incorrectly when the stream is a null pointer: the stream is
    replaced by stdin and stdout, respectively. This behavior is
    useless, not documented (thus incorrect in case a null pointer
    would have a special meaning), and not consistent with other
    input/output functions.

-------------------------------------------------------------------
Wed Feb  7 18:50:06 UTC 2018 - astieger@suse.com

- update to 4.0.1:
  * Improved MPFR manual
  * bug fixes, including mpfr_div_ui, mpfr_div rounding issue

-------------------------------------------------------------------
Tue Jan  2 12:28:32 UTC 2018 - rguenther@suse.com

- Update to mpfr 4.0.0
  * The "dinde aux marrons" release.
  * MPFR now depends on GMP 5.0+ instead of 4.1+.
  * API change:
    Applications that call GMP's mp_set_memory_functions function to change
    the allocators must first call the new function mpfr_mp_memory_cleanup
    in all threads where MPFR is potentially used; this new function is
    currently equivalent to mpfr_free_cache.
    The reason is that the way memory allocation is done by MPFR has changed
    (again), so that the current GMP allocators are used (since for some
    applications, the old allocators may become invalid).
    Note: Freeing the caches like this might have a performance impact on some
    particular applications; if this is an issue, this could be handled for a
    future MPFR version.
  * Mini-gmp support via the --enable-mini-gmp configure option (experimental).
  * The minimum precision MPFR_PREC_MIN is now 1, with rounding defined as
    in the errata of IEEE 754-2008 and in the following IEEE 754 revision
    (ties rounded away from zero).
  * Shared caches for multithreaded applications.
    New function mpfr_free_cache2.
  * Partial support of MPFR_RNDF (faithful rounding).
  * New functions: mpfr_fpif_export and mpfr_fpif_import to export and import
    numbers in a floating-point interchange format, independent both on the
    number of bits per word and on the endianness.
  * New function mpfr_fmodquo to return the low bits of the quotient
    corresponding to mpfr_fmod.
  * New functions mpfr_flags_clear, mpfr_flags_set, mpfr_flags_test,
    mpfr_flags_save and mpfr_flags_restore to operate on groups of flags.
  * New functions mpfr_set_float128 and mpfr_get_float128 to convert from/to
    the __float128 type (requires --enable-float128 and compiler support).
  * New functions mpfr_buildopt_float128_p and mpfr_buildopt_sharedcache_p.
  * New functions mpfr_rint_roundeven and mpfr_roundeven, completing the
    other similar round-to-integer functions for rounding to nearest with
    the even-rounding rule.
  * New macro mpfr_round_nearest_away to add partial emulation of the
    rounding to nearest-away (as defined in IEEE 754-2008).
  * New functions mpfr_nrandom and mpfr_erandom to generate random numbers
    following normal and exponential distributions respectively.
  * New functions mpfr_fmma and mpfr_fmms to compute a*b+c*d and a*b-c*d.
  * New function mpfr_rootn_ui, similar to mpfr_root, but agreeing with the
    rootn function of the IEEE 754-2008 standard.
  * New functions mpfr_log_ui to compute the logarithm of an integer,
    mpfr_gamma_inc for the incomplete Gamma function.
  * New function mpfr_beta for the Beta function (incomplete, experimental).
  * New function mpfr_get_q to convert a floating-point number into rational.
  * The mpfr_dump function is now described in the manual; its output format
    has slightly changed.
  * The mpfr_eint function now returns the value of the E1/eint1 function
    for negative argument.
  * The behavior of the mpfr_set_exp function changed, as it could easily
    yield undefined behavior in some cases (this modifies both the API and
    the ABI).
  * In function mpfr_urandom, the next random state no longer depends on the
    current exponent range and the rounding mode. The exceptions due to the
    rounding of the random number are now correctly generated, following the
    uniform distribution.
  * Functions mpfr_grandom and mpfr_root are deprecated and will be removed
    in a future release.
  * Complete rewrite of function mpfr_sum, which now works in all cases (the
    old one could take all the memory and/or crash with inputs of different
    magnitudes in case of huge cancellation or table maker's dilemma). The
    sign of an exact zero result is now specified, and the return value is
    now the usual ternary value. Note that the position of "const" in the
    mpfr_sum prototype has been fixed (the manual was correct); user code
    should not be affected.
  * Old, deprecated macros mpfr_add_one_ulp and mpfr_sub_one_ulp removed.
    The mpfr_next* functions should be used instead.
  * Internally, improved caching: a minimum of 10% increase of the precision
    is guaranteed to avoid too many recomputations.
  * Added internal small-precision mpz_t pool, which aims to avoid the
    overhead of memory allocation, in particular.
    New function mpfr_free_pool.
  * Added configure option --enable-assert=none to avoid checking any assertion.
  * The --enable-decimal-float configure option no longer requires
    --with-gmp-build, and support for decimal floats is now automatically
    detected by default (similarly for support for __float128).
  * Updated tuning parameters.
  * Better support for Automake 1.13+ (now used to generate the tarball).
  * Dropped K&R C compatibility.
  * Improved MPFR manual.
  * New MPFRbench program (see the tools/bench directory).
  * Major speedup in mpfr_add, mpfr_sub, mpfr_mul, mpfr_div and mpfr_sqrt when
    all operands have the same precision and this precision is less than twice
    the number of bits per word, e.g., less than 128 on a 64-bit computer.
  * Speedup by a factor of almost 2 in the double <--> mpfr conversions
    (mpfr_set_d and mpfr_get_d).
  * Speedup in mpfr_log1p and mpfr_atanh for small arguments.
  * Speedup in the mpfr_const_euler function (contributed by Fredrik Johansson),
    in the computation of Bernoulli numbers (used in mpfr_gamma, mpfr_li2,
    mpfr_digamma, mpfr_lngamma and mpfr_lgamma), in mpfr_div, in mpfr_fma
    and mpfr_fms.
  * Test coverage: 96.3% lines of code.
  * Bug fixes. In particular: a speed improvement when the --enable-assert
    or --enable-assert=full configure option is used with GCC; mpfr_get_str
    now sets the NaN flag on NaN input and the inexact flag when the conversion
    is inexact. For a full list, see http://www.mpfr.org/mpfr-3.1.6/#fixed
    and the same section for any previous 3.1.x version (follow the links
    in the "Changes..." sections).
  * Microsoft Windows: Added support for thread-safe DLL (shared library).
    Tested with MinGW, ICC and MSVC.
  * Limited pkg-config support.
  * Autotools: Under Linux, make sure that the old dtags (when supported)
    are used if LD_LIBRARY_PATH is defined; otherwise "make check" would
    check an installed, compatible MPFR library found in LD_LIBRARY_PATH
    instead of the one that has been built with "make".
  * New: optional "make check-gmp-symbols", mainly for binary distributions,
    to check that MPFR does not use GMP internal symbols (experimental).
  
-------------------------------------------------------------------
Tue Sep 12 08:03:00 UTC 2017 - rguenther@suse.com

- Update to mpfr 3.1.6 release
  * Includes mpfr-3.1.5-p9.patch

-------------------------------------------------------------------
Tue Jul 25 10:40:05 UTC 2017 - rguenther@suse.com

- Add mpfr-3.1.5-p9.patch with cummulative patches to patchlevel p9,
  obsoletes mpfr-3.1.5-p8.patch.

-------------------------------------------------------------------
Wed Jun  7 08:18:31 UTC 2017 - rguenther@suse.com

- Add mpfr-3.1.5-p8.patch with cummulative patches to patchlevel p8. 

-------------------------------------------------------------------
Fri Nov 11 16:30:49 UTC 2016 - dimstar@opensuse.org

- Follow openSUSE Packaging Guidelines: do not packae static
  libraries:
  + Pass --disable-static to configure.

-------------------------------------------------------------------
Tue Sep 27 12:50:27 UTC 2016 - rguenther@suse.com

- Update to mpfr 3.1.5:
  * C++11 compatibility.
  * Bug fixes (see <http://www.mpfr.org/mpfr-3.1.4/#fixed>
    and ChangeLog file).
  * More tests.

-------------------------------------------------------------------
Sun Mar  6 19:43:32 UTC 2016 - astieger@suse.com

- mpfr 3.1.4, incorporating the cumulative patch, plus a number of
  upstream fixes
- removing mpfr-3.1.3-patch1to12.patch

-------------------------------------------------------------------
Wed Feb 17 09:39:33 UTC 2016 - rguenther@suse.com

- Add cummulative patch mpfr-3.1.3-patch1to12.patch
  * Bug fixes (see <http://www.mpfr.org/mpfr-3.1.3/#fixed>

-------------------------------------------------------------------
Sun Jun 21 15:09:38 UTC 2015 - astieger@suse.com

- update to 3.1.3:
  * Better support for Automake 1.13+ (now used to generate the
    tarball).
  * Improved MPFR manual.
  * Bug fixes (see <http://www.mpfr.org/mpfr-3.1.2/#fixed> and
    ChangeLog file)
- drop upstreamed mpfr-3.1.2-patch11.diff

-------------------------------------------------------------------
Sun Mar  1 10:57:39 UTC 2015 - mpluskal@suse.com

- Cleanup spec file with spec-claner
- Add gpg signature

-------------------------------------------------------------------
Thu Jan  8 09:55:31 UTC 2015 - rguenther@suse.com

- Add mpfr-3.1.2-patch11.diff to fix possible buffer overflow in
  mpfr_strtofr (CVE-2014-9474).  [bnc#911812]

-------------------------------------------------------------------
Tue Apr 16 10:24:10 UTC 2013 - idonmez@suse.com

- Add Source URL, see https://en.opensuse.org/SourceUrls

-------------------------------------------------------------------
Thu Mar 14 09:05:18 UTC 2013 - rguenther@suse.com

- Update to version 3.1.2.
  * Bug fixes
  * Updated examples to the MPFR 3.x API

-------------------------------------------------------------------
Wed Jul  4 08:29:16 UTC 2012 - rguenther@suse.com

- Update to version 3.1.1.
  * Bug fixes

-------------------------------------------------------------------
Mon Feb 13 10:50:39 UTC 2012 - coolo@suse.com

- patch license to follow spdx.org standard

-------------------------------------------------------------------
Sun Jan 29 20:34:08 UTC 2012 - jengelh@medozas.de

- Remove redundant tags/sections per specfile guideline suggestions

-------------------------------------------------------------------
Tue Oct 11 12:28:31 UTC 2011 - rguenther@suse.com

- Update to version 3.1.0.
  * The mpfr_urandom and mpfr_urandomb functions now return identical
    values on processors with different word size.
  * Speed improvement for the mpfr_sqr and mpfr_div functions using
    Mulders' algorithm.
  * Much faster formatted output (mpfr_printf, etc.) with %Rg and similar.
  * New divide-by-zero exception (flag) and associated functions.
- Remove bogus provides/obsoletes for old shared library version.
- Fix license, it is LGPL v3 or later.

-------------------------------------------------------------------
Fri Apr  8 13:53:10 UTC 2011 - rguenther@novell.com

- Update to version 3.0.1.
  * Minor bugfixes.

-------------------------------------------------------------------
Mon Sep  6 13:34:55 UTC 2010 - rguenther@novell.com

- Update to version 3.0.0.
  * Bump SO version to 4.

-------------------------------------------------------------------
Mon Jun 28 06:38:35 UTC 2010 - jengelh@medozas.de

- use %_smp_mflags

-------------------------------------------------------------------
Mon May 17 06:16:32 UTC 2010 - adrian@suse.de

- PA-Risc is not threadsafe just as sparc

-------------------------------------------------------------------
Fri Dec 11 17:13:00 CET 2009 - jengelh@medozas.de

- add baselibs.conf to specfile as source

-------------------------------------------------------------------
Mon Dec  7 22:38:13 CET 2009 - jengelh@medozas.de

- Do not use --enable-thread-safe on SPARC (Fedora does the same) -
  the tests segfault if TS is enabled

-------------------------------------------------------------------
Mon Nov 30 13:47:17 CET 2009 - rguenther@suse.de

- Update to version 2.4.2.
  * Bug and documentation fixes.

-------------------------------------------------------------------
Wed Jul 22 15:11:39 CEST 2009 - rguenther@suse.de

- Add x86 baselibs entry.

-------------------------------------------------------------------
Mon Mar 16 10:55:06 CET 2009 - rguenther@suse.de

- Update to version 2.4.1 (no changes).
- Apply current cummulative bugfixing patch.
  * mpfr_fmod, mpfr_remainder and mpfr_remquo rounding issues.
  * incorrect type in vasprintf.c.
  * wrong type in mpfr_zeta_ui.

-------------------------------------------------------------------
Wed Feb 25 15:57:54 CET 2009 - rguenther@suse.de

- Apply current cummulative bugfixing patch.
  * Fixes mpfr_snprintf and mpfr_vsnprintf buffer overflows.

-------------------------------------------------------------------
Tue Jan 27 10:43:32 CET 2009 - rguenther@suse.de

- Update to version 2.4.0.
  * Function mpfr_init_gmp_rand is no longer defined.
  * New functions:
    - between a MPFR number and a double: mpfr_add_d, mpfr_sub_d, mpfr_d_sub,
      mpfr_mul_d, mpfr_div_d, mpfr_d_div;
    - formatted input/output: mpfr_printf, mpfr_fprintf, mpfr_vprintf,
      mpfr_vfprintf, mpfr_sprintf, mpfr_snprintf, mpfr_vsprintf,
      mpfr_vsnprintf, mpfr_asprintf, mpfr_vasprintf;
    - mpfr_sinh_cosh, mpfr_li2, mpfr_modf, mpfr_fmod, mpfr_rec_sqrt.
  * Documented the fact that mpfr_random and mpfr_random2 will be suppressed
    in the next release, and that the specification of mpfr_eq may change in
    the next release (for compatibility with the mpf layer of GMP).
  * Bug fixes.

-------------------------------------------------------------------
Thu Nov 27 14:14:56 CET 2008 - ro@suse.de

- update baselibs.conf

-------------------------------------------------------------------
Wed Oct 22 16:17:34 CEST 2008 - mrueckert@suse.de

- fix debug_packages_requires define

-------------------------------------------------------------------
Sat Sep 13 12:38:22 CEST 2008 - rguenther@suse.de

- Update to version 2.3.2.  Includes fixes for
  * Functions mpfr_pow_ui, mpfr_pow_si and mpfr_pow_z (but not mpfr_pow)
    on NaN^0 return NaN instead of 1.
  * Underflow bug in function mpfr_div.
  * Underflow bug due to double-rounding in functions mpfr_mul_2si,
    mpfr_div_2si and mpfr_div_2ui.
  * mpfr_exp problems.
  * The overflow flag can be lost in many functions called with the
    maximum exponent equal to MPFR_EMAX_MAX.
  * assertion/overflow/underflow issues with MPFR's power functions
    (mpfr_pow, mpfr_pow_ui, mpfr_pow_si, mpfr_pow_z). 
  * Inifinite looping in mpfr_hypot.
  * Hide internal symbol mpfr_init_gmp_rand.

-------------------------------------------------------------------
Sat Aug  2 17:21:09 CEST 2008 - rguenther@suse.de

- make mpfr-debuginfo depend on libmpfr1 instead of mpfr

-------------------------------------------------------------------
Tue Jul 15 17:17:07 CEST 2008 - rguenther@suse.de

- allow build on SLES9 by disabling TLS usage there

-------------------------------------------------------------------
Tue Apr 29 16:56:50 CEST 2008 - cthiel@suse.de

- obsolete mpfr-<arch> via baselibs.conf

-------------------------------------------------------------------
Thu Apr 10 12:54:45 CEST 2008 - ro@suse.de

- added baselibs.conf file to build xxbit packages
  for multilib support

-------------------------------------------------------------------
Tue Jan 29 15:18:35 CET 2008 - rguenther@suse.de

- Update to final version 2.3.1.
   * Changes in the behavior of mpfr_strtofr and in its documentation
     concerning particular cases where the code and the documentation
     did not match.
   * Bug fixes; see <http://www.mpfr.org/mpfr-2.3.0/#bugs>.
   * Configure test for TLS support.
   * Improved MPFR manual.

-------------------------------------------------------------------
Sun Jan 13 13:28:54 CET 2008 - rguenther@suse.de

- Update to 2.3.1 release candidate 1.
   * Fixes various bugs.

-------------------------------------------------------------------
Wed Dec 12 14:11:58 CET 2007 - rguenther@suse.de

- Apply bugfixes from upstream, up to patch 4.  [#343720]

-------------------------------------------------------------------
Tue Oct  2 10:10:32 CEST 2007 - ro@suse.de

- added provides mpfr to libmpfr1 package 

-------------------------------------------------------------------
Wed Aug 29 15:44:37 CEST 2007 - rguenther@suse.de

- New upstream version 2.3.0.
   * New functions mpfr_j0, mpfr_j1, mpfr_jn, mpfr_y0, mpfr_y1, mpfr_yn,
     mpfr_lgamma, mpfr_remainder, mpfr_remquo, mpfr_fms, mpfr_signbit,
     mpfr_setsign, mpfr_copysign, mpfr_get_patches.
   * Improved testsuite.
   * Bug fixes.
- Rename shared library package to libmfpr1 according to policy.
- Move AUTHORS and NEWS to mpfr-devel package.
- Package COPYING.LIB.
- Do not package CVS ChangeLog and README files.

-------------------------------------------------------------------
Wed Nov 29 12:06:59 CET 2006 - rguenther@suse.de

- New upstream version 2.2.1.

-------------------------------------------------------------------
Mon Oct  9 12:37:15 CEST 2006 - rguenther@suse.de

- Apply bugfixes from upstream, up to patch 16.

-------------------------------------------------------------------
Wed Jun  7 10:50:15 CEST 2006 - rguenther@suse.de

- Apply bugfixes from upstream, up to patch 12.

-------------------------------------------------------------------
Fri May 26 15:20:09 CEST 2006 - rguenther@suse.de

- Fix the real bug, re-enable testsuite on s390.

-------------------------------------------------------------------
Fri May 26 12:38:05 CEST 2006 - rguenther@suse.de

- Skip testsuite for s390.

-------------------------------------------------------------------
Mon May 15 14:27:36 CEST 2006 - rguenther@suse.de

- Add provides to mpfr-devel to fix updating from gmp-devel.

-------------------------------------------------------------------
Sat May 13 18:40:51 CEST 2006 - rguenther@suse.de

- New packages mpfr and mpfr-devel split from the gmp package as
  gmp no longer comes with the mpfr library included.  Version 2.2.0.

