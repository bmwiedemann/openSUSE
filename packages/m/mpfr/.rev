<revisionlist>
  <revision rev="1" vrev="2">
    <srcmd5>9329b410a4b0e41c8936d8ef427368fa</srcmd5>
    <version>2.2.1</version>
    <time>1168903546</time>
    <user>unknown</user>
  </revision>
  <revision rev="2" vrev="3">
    <srcmd5>68c1907a8dccc38572a035efb78885bb</srcmd5>
    <version>2.3.0</version>
    <time>1191366443</time>
    <user>unknown</user>
  </revision>
  <revision rev="3" vrev="4">
    <srcmd5>11882241865e5420bdc552df003ccc56</srcmd5>
    <version>2.3.0</version>
    <time>1197479753</time>
    <user>unknown</user>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>f4953f753e787c6b560feaeeb020ee95</srcmd5>
    <version>2.3.1</version>
    <time>1200610410</time>
    <user>unknown</user>
  </revision>
  <revision rev="5" vrev="2">
    <srcmd5>bdefbaae806405a03980de1cfe4d24f2</srcmd5>
    <version>2.3.1</version>
    <time>1201891682</time>
    <user>unknown</user>
  </revision>
  <revision rev="6" vrev="3">
    <srcmd5>c9c7a8378ff31b7791afbabd979683df</srcmd5>
    <version>2.3.1</version>
    <time>1207826284</time>
    <user>unknown</user>
  </revision>
  <revision rev="7" vrev="4">
    <srcmd5>6c333b553414ace7d901e1768b327b7b</srcmd5>
    <version>2.3.1</version>
    <time>1209647717</time>
    <user>unknown</user>
  </revision>
  <revision rev="8" vrev="6">
    <srcmd5>7037e7c26ed99e9566309b83e2d1861f</srcmd5>
    <version>2.3.1</version>
    <time>1216410151</time>
    <user>unknown</user>
  </revision>
  <revision rev="9" vrev="7">
    <srcmd5>fe88ac2b2920836546d1d0b807e06ef7</srcmd5>
    <version>2.3.1</version>
    <time>1218208964</time>
    <user>unknown</user>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>e2cf69d6e7009a3257d754a3ce7bae5a</srcmd5>
    <version>2.3.2</version>
    <time>1221305031</time>
    <user>unknown</user>
  </revision>
  <revision rev="11" vrev="2">
    <srcmd5>0a1e65ef60cbaf7d3b6bbd51ff7e172a</srcmd5>
    <version>2.3.2</version>
    <time>1224718076</time>
    <user>unknown</user>
  </revision>
  <revision rev="12" vrev="3">
    <srcmd5>1e14b6416779375eb1522ac833666f0d</srcmd5>
    <version>2.3.2</version>
    <time>1227883200</time>
    <user>unknown</user>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>80097dc3d78aab90101c8fe025eb38ee</srcmd5>
    <version>2.4.0</version>
    <time>1233264548</time>
    <user>unknown</user>
  </revision>
  <revision rev="14" vrev="2">
    <srcmd5>a564bce25db3527aa5ec578a45c5a0be</srcmd5>
    <version>2.4.0</version>
    <time>1236101685</time>
    <user>unknown</user>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>58c59c4086ec1b8c57109cf123457492</srcmd5>
    <version>2.4.1</version>
    <time>1237303972</time>
    <user>unknown</user>
  </revision>
  <revision rev="16" vrev="2">
    <srcmd5>e669f7875a459930ba75d000d2f91238</srcmd5>
    <version>2.4.1</version>
    <time>1248355860</time>
    <user>unknown</user>
  </revision>
  <revision rev="17" vrev="4">
    <srcmd5>e669f7875a459930ba75d000d2f91238</srcmd5>
    <version>2.4.1</version>
    <time>1248355860</time>
    <user>unknown</user>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>26a6b9eec8ab5be82817063093346d0a</srcmd5>
    <version>2.4.2</version>
    <time>1259916705</time>
    <user>autobuild</user>
    <comment>Copy from devel:libraries:c_c++/mpfr based on submit request 25269 from user rguenther
</comment>
  </revision>
  <revision rev="19" vrev="2">
    <srcmd5>daa22d2a7650ea31ef8c070f757b31fc</srcmd5>
    <version>2.4.2</version>
    <time>1263478537</time>
    <user>autobuild</user>
    <comment>Copy from devel:libraries:c_c++/mpfr based on submit request 29105 from user msmeissn
</comment>
  </revision>
  <revision rev="20" vrev="3">
    <srcmd5>b108c2db67242c048309771bce0e0940</srcmd5>
    <version>2.4.2</version>
    <time>1268924994</time>
    <user>autobuild</user>
  </revision>
  <revision rev="21" vrev="5">
    <srcmd5>b108c2db67242c048309771bce0e0940</srcmd5>
    <version>2.4.2</version>
    <time>1278667369</time>
    <user>autobuild</user>
    <comment>release number sync</comment>
  </revision>
  <revision rev="22" vrev="6">
    <srcmd5>b108c2db67242c048309771bce0e0940</srcmd5>
    <version>2.4.2</version>
    <time>1278678598</time>
    <user>autobuild</user>
    <comment>release number sync</comment>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>74448d48fc2c4e21cb2a61e7f8ddc2b1</srcmd5>
    <version>3.0.0</version>
    <time>1284993200</time>
    <user>autobuild</user>
    <comment>Copy from devel:libraries:c_c++/mpfr based on submit request 48543 from user rguenther
</comment>
    <requestid>48543</requestid>
  </revision>
  <revision rev="24" vrev="4">
    <srcmd5>74448d48fc2c4e21cb2a61e7f8ddc2b1</srcmd5>
    <version>3.0.0</version>
    <time>1297941525</time>
    <user>autobuild</user>
    <comment>11.4 source split</comment>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>adc3920c08f2d1246683afc1bbe8a82f</srcmd5>
    <version>3.0.1</version>
    <time>1302505142</time>
    <user>saschpe</user>
    <comment>Accepted submit request 66524 from user coolo
</comment>
    <requestid>66524</requestid>
  </revision>
  <revision rev="26" vrev="2">
    <srcmd5>41ec6abe5014eca2f92d8a4f94de4d10</srcmd5>
    <version>3.0.1</version>
    <time>1302505152</time>
    <user>saschpe</user>
    <comment>Autobuild autoformatter for 66524
</comment>
  </revision>
  <revision rev="27" vrev="4">
    <srcmd5>41ec6abe5014eca2f92d8a4f94de4d10</srcmd5>
    <version>3.0.1</version>
    <time>1319182186</time>
    <user>adrianSuSE</user>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>b64f568b7919c2e4e43b5ee50eec5da1</srcmd5>
    <version>3.1.0</version>
    <time>1329409307</time>
    <user>coolo</user>
    <comment>- patch license to follow spdx.org standard

- Remove redundant tags/sections per specfile guideline suggestions

- Update to version 3.1.0.
  * The mpfr_urandom and mpfr_urandomb functions now return identical
    values on processors with different word size.
  * Speed improvement for the mpfr_sqr and mpfr_div functions using
    Mulders' algorithm.
  * Much faster formatted output (mpfr_printf, etc.) with %Rg and similar.
  * New divide-by-zero exception (flag) and associated functions.
- Remove bogus provides/obsoletes for old shared library version.
- Fix license, it is LGPL v3 or later.</comment>
    <requestid>104603</requestid>
  </revision>
  <revision rev="29" vrev="3">
    <srcmd5>b64f568b7919c2e4e43b5ee50eec5da1</srcmd5>
    <version>3.1.0</version>
    <time>1340183711</time>
    <user>adrianSuSE</user>
    <comment>branched from openSUSE:Factory</comment>
  </revision>
  <revision rev="30" vrev="1">
    <srcmd5>c651039c589ef81db7c0f7e59ab7a1dd</srcmd5>
    <version>3.1.1</version>
    <time>1341402896</time>
    <user>coolo</user>
    <comment>- Update to version 3.1.1.
  * Bug fixes</comment>
    <requestid>127071</requestid>
  </revision>
  <revision rev="31" vrev="3">
    <srcmd5>c651039c589ef81db7c0f7e59ab7a1dd</srcmd5>
    <version>3.1.1</version>
    <time>1359109465</time>
    <user>adrianSuSE</user>
    <comment>Split 12.3 from Factory</comment>
  </revision>
  <revision rev="32" vrev="1">
    <srcmd5>8854036fcd267cb38f781281de2eb1f8</srcmd5>
    <version>3.1.2</version>
    <time>1363340567</time>
    <user>coolo</user>
    <comment>- Update to version 3.1.2.
  * Bug fixes
  * Updated examples to the MPFR 3.x API</comment>
    <requestid>159290</requestid>
  </revision>
  <revision rev="33" vrev="2">
    <srcmd5>473c3413199f153e11f06f1876c61e84</srcmd5>
    <version>3.1.2</version>
    <time>1375202434</time>
    <user>coolo</user>
    <comment>Add source url to factory too.</comment>
    <requestid>184601</requestid>
  </revision>
  <revision rev="34" vrev="4">
    <srcmd5>473c3413199f153e11f06f1876c61e84</srcmd5>
    <version>3.1.2</version>
    <time>1379663315</time>
    <user>adrianSuSE</user>
    <comment>Split 13.1 from Factory</comment>
  </revision>
  <revision rev="35" vrev="6">
    <srcmd5>473c3413199f153e11f06f1876c61e84</srcmd5>
    <version>3.1.2</version>
    <time>1409301932</time>
    <user>adrianSuSE</user>
    <comment>Split 13.2 from Factory</comment>
  </revision>
  <revision rev="36" vrev="7">
    <srcmd5>88856a8afb711f99d12eff3ba9eb57d8</srcmd5>
    <version>3.1.2</version>
    <time>1420927492</time>
    <user>dimstar_suse</user>
    <comment>- Add mpfr-3.1.2-patch11.diff to fix possible buffer overflow in
  mpfr_strtofr (CVE-2014-9474).  [bnc#911812]</comment>
    <requestid>280281</requestid>
  </revision>
  <revision rev="37" vrev="8">
    <srcmd5>559102a8876b93619b5854056d215118</srcmd5>
    <version>3.1.2</version>
    <time>1425565885</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>288302</requestid>
  </revision>
  <revision rev="38" vrev="1">
    <srcmd5>27368bc7936a1ae83c4556d93fd57c38</srcmd5>
    <version>3.1.3</version>
    <time>1436111425</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>312940</requestid>
  </revision>
  <revision rev="39" vrev="2">
    <srcmd5>9f296daf72a9f4af91f18111ce02f5cc</srcmd5>
    <version>3.1.3</version>
    <time>1456132181</time>
    <user>dimstar_suse</user>
    <comment>- Add cummulative patch mpfr-3.1.3-patch1to12.patch
  * Bug fixes (see &lt;http://www.mpfr.org/mpfr-3.1.3/#fixed&gt;</comment>
    <requestid>359955</requestid>
  </revision>
  <revision rev="40" vrev="1">
    <srcmd5>238de8e950b1b51a291075ca2e9f24de</srcmd5>
    <version>3.1.4</version>
    <time>1458560601</time>
    <user>dimstar_suse</user>
    <comment>mpfr 3.1.4 (forwarded request 367179 from AndreasStieger)</comment>
    <requestid>367311</requestid>
  </revision>
  <revision rev="41" vrev="1">
    <srcmd5>99b4fc7f4536a43a1106f4d0eef96fdb</srcmd5>
    <version>3.1.5</version>
    <time>1475241121</time>
    <user>dimstar_suse</user>
    <comment>- Update to mpfr 3.1.5:
  * C++11 compatibility.
  * Bug fixes (see &lt;http://www.mpfr.org/mpfr-3.1.4/#fixed&gt;
    and ChangeLog file).
  * More tests.</comment>
    <requestid>430694</requestid>
  </revision>
  <revision rev="42" vrev="2">
    <srcmd5>57d21ad08e8ea2ffaa9a50c0ef3fa8f7</srcmd5>
    <version>3.1.5</version>
    <time>1479299299</time>
    <user>dimstar_suse</user>
    <comment>- Follow openSUSE Packaging Guidelines: do not packae static
  libraries:
  + Pass --disable-static to configure. (forwarded request 439927 from dimstar)</comment>
    <requestid>440205</requestid>
  </revision>
  <revision rev="43" vrev="3">
    <srcmd5>c179cc8eb21f314ed7f0cbae077eac8f</srcmd5>
    <version>3.1.5</version>
    <time>1497273084</time>
    <user>dimstar_suse</user>
    <comment>- Add mpfr-3.1.5-p8.patch with cummulative patches to patchlevel p8.</comment>
    <requestid>501592</requestid>
  </revision>
  <revision rev="44" vrev="4">
    <srcmd5>0087bac16d67ab2a568d2319492bbe75</srcmd5>
    <version>3.1.5</version>
    <time>1502186182</time>
    <user>maxlin_factory</user>
    <comment>- Add mpfr-3.1.5-p9.patch with cummulative patches to patchlevel p9,
  obsoletes mpfr-3.1.5-p8.patch.</comment>
    <requestid>512478</requestid>
  </revision>
  <revision rev="45" vrev="1">
    <srcmd5>237bcfc47acac6b8c0ac40bca6742ddf</srcmd5>
    <version>3.1.6</version>
    <time>1505919892</time>
    <user>dimstar_suse</user>
    <comment>- Update to mpfr 3.1.6 release
  * Includes mpfr-3.1.5-p9.patch</comment>
    <requestid>523593</requestid>
  </revision>
  <revision rev="46" vrev="1">
    <srcmd5>3123c51ea48afadb335e3825e442fc53</srcmd5>
    <version>4.0.0</version>
    <time>1515623325</time>
    <user>dimstar_suse</user>
    <comment>Please stage together with mpc

- Update to mpfr 4.0.0
  * The &quot;dinde aux marrons&quot; release.
  * MPFR now depends on GMP 5.0+ instead of 4.1+.
  * API change:
    Applications that call GMP's mp_set_memory_functions function to change
    the allocators must first call the new function mpfr_mp_memory_cleanup
    in all threads where MPFR is potentially used; this new function is
    currently equivalent to mpfr_free_cache.
    The reason is that the way memory allocation is done by MPFR has changed
    (again), so that the current GMP allocators are used (since for some
    applications, the old allocators may become invalid).
    Note: Freeing the caches like this might have a performance impact on some
    particular applications; if this is an issue, this could be handled for a
    future MPFR version.
  * Mini-gmp support via the --enable-mini-gmp configure option (experimental).
  * The minimum precision MPFR_PREC_MIN is now 1, with rounding defined as
    in the errata of IEEE 754-2008 and in the following IEEE 754 revision
    (ties rounded away from zero).
  * Shared caches for multithreaded applications.
    New function mpfr_free_cache2.
  * Partial support of MPFR_RNDF (faithful rounding).
  * New functions: mpfr_fpif_export and mpfr_fpif_import to export and import
    numbers in a floating-point interchange format, independent both on the
    number of bits per word and on the endianness.
  * New function mpfr_fmodquo to return the low bits of the quotient
    corresponding to mpfr_fmod.
  * New functions mpfr_flags_clear, mpfr_flags_set, mpfr_flags_test,
    mpfr_flags_save and mpfr_flags_restore to operate on groups of flags.
  * New functions mpfr_set_float128 and mpfr_get_float128 to convert from/to
    the __float128 type (requires --enable-float128 and compiler support).</comment>
    <requestid>561121</requestid>
  </revision>
  <revision rev="47" vrev="1">
    <srcmd5>c2576dbfe271edda80df39b08a1dcb39</srcmd5>
    <version>4.0.1</version>
    <time>1518281534</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>574113</requestid>
  </revision>
  <revision rev="48" vrev="2">
    <srcmd5>e1d41270882cabf446a9f4c21be46b06</srcmd5>
    <version>4.0.1</version>
    <time>1525697522</time>
    <user>dimstar_suse</user>
    <comment>- Add mpfr-4.0.1-cummulative-patch.patch.  Fixes
  * A subtraction of two numbers of the same sign or addition of two
    numbers of different signs can be rounded incorrectly (and the
    ternary value can be incorrect) when one of the two inputs is
    reused as the output (destination) and all these MPFR numbers
    have exactly GMP_NUMB_BITS bits of precision (typically, 32 bits
    on 32-bit machines, 64 bits on 64-bit machines).
  * The mpfr_fma and mpfr_fms functions can behave incorrectly in case
    of internal overflow or underflow.
  * The result of the mpfr_sqr function can be rounded incorrectly
    in a rare case near underflow when the destination has exactly
    GMP_NUMB_BITS bits of precision (typically, 32 bits on 32-bit
    machines, 64 bits on 64-bit machines) and the input has at most
    GMP_NUMB_BITS bits of precision.
  * The behavior and documentation of the mpfr_get_str function are
    inconsistent concerning the minimum precision (this is related to
    the change of the minimum precision from 2 to 1 in MPFR 4.0.0). The
    get_str patch fixes this issue in the following way: the value 1
    can now be provided for n (4th argument of mpfr_get_str); if n = 0,
    then the number of significant digits in the output string can now
    be 1, as already implied by the documentation (but the code was
    increasing it to 2).
  * The mpfr_cmp_q function can behave incorrectly when the rational
    (mpq_t) number has a null denominator.
  * The mpfr_inp_str and mpfr_out_str functions might behave
    incorrectly when the stream is a null pointer: the stream is
    replaced by stdin and stdout, respectively. This behavior is
    useless, not documented (thus incorrect in case a null pointer
    would have a special meaning), and not consistent with other
    input/output functions.</comment>
    <requestid>603129</requestid>
  </revision>
  <revision rev="49" vrev="3">
    <srcmd5>f87873b9c4e8a5f1399ec4e76712ed49</srcmd5>
    <version>4.0.1</version>
    <time>1527001077</time>
    <user>dimstar_suse</user>
    <comment>- Fix %install_info_delete usage:
  * It has to be performed in %preun not in %postun.
  * See https://en.opensuse.org/openSUSE:Packaging_Conventions_RPM_Macros#.25install_info_delete. (forwarded request 610001 from 1Antoine1)</comment>
    <requestid>610003</requestid>
  </revision>
  <revision rev="50" vrev="1">
    <srcmd5>e0e48c637d4c0ef7d81e75797468cef2</srcmd5>
    <version>4.0.2</version>
    <time>1549624075</time>
    <user>coolo</user>
    <comment>- Update to mpfr 4.0.2
  * Cummulative bugfix release, includes mpfr-4.0.1-cummulative-patch.patch.</comment>
    <requestid>670549</requestid>
  </revision>
  <revision rev="51" vrev="2">
    <srcmd5>5951c75f55a53cb8bfa9366a4f0c9627</srcmd5>
    <version>4.0.2</version>
    <time>1563701322</time>
    <user>dimstar_suse</user>
    <comment>- Add floating-point-format-no-lto.patch in order to fix assembler scanning
  (boo#1141190). (forwarded request 715464 from marxin)</comment>
    <requestid>715477</requestid>
  </revision>
  <revision rev="52" vrev="3">
    <srcmd5>616ef64cce961b0d4148de4655a8c13c</srcmd5>
    <version>4.0.2</version>
    <time>1586112540</time>
    <user>dimstar_suse</user>
    <comment>- Add cummulative patch mpfr-4.0.2-p6.patch fixing various bugs.</comment>
    <requestid>790496</requestid>
  </revision>
  <revision rev="53" vrev="1">
    <srcmd5>3d463388f3c7a5a676da9551f8c349fb</srcmd5>
    <version>4.1.0</version>
    <time>1596364040</time>
    <user>dimstar_suse</user>
    <comment>- Update to mpfr 4.1.0
  * New function mpfr_get_str_ndigits about conversion to a string of digits.
  * New function mpfr_dot for the dot product (incomplete, experimental).
  * New functions mpfr_get_decimal128 and mpfr_set_decimal128 (available only
    when MPFR has been built with decimal float support).
  * New function mpfr_cmpabs_ui.
  * New function mpfr_total_order_p for the IEEE 754 totalOrder predicate.
  * The mpfr_out_str function now accepts bases from -2 to -36, in order to
    follow mpfr_get_str and GMP's mpf_out_str functions (these cases gave an
    assertion failure, as with other invalid bases).
  * Shared caches: cleanup; really detect lock failures (abort in this case).
  * The behavior of the formatted output functions (mpfr_printf, etc.) with
    an empty precision field has improved: trailing zeros are kept in a way
    similar to the formatted output functions from C.
  * Improved mpfr_add and mpfr_sub when all operands have a precision equal to
    twice the number of bits per word, e.g., 128 bits on a 64-bit platform.
  * Optimized the tuning parameters for various architectures.
  * Improved test coverage to 98.6% of code for x86_64.
  * Bug fixes.
  * MPFR manual: corrected/completed the mpfr_get_str description in order to
    follow the historical behavior and GMP's mpf_get_str function.
- Remove mpfr-4.0.2-p6.patch and floating-point-format-no-lto.patch</comment>
    <requestid>820814</requestid>
  </revision>
  <revision rev="54" vrev="2">
    <srcmd5>375dba15fc617520dfcf622e7a39d39f</srcmd5>
    <version>4.1.0</version>
    <time>1613581785</time>
    <user>dimstar_suse</user>
    <comment>- Add cummulative patch mpfr-4.1.0-p7.diff fixing various bugs.</comment>
    <requestid>871455</requestid>
  </revision>
  <revision rev="55" vrev="1">
    <srcmd5>f3eed8fcef9afe8c7a1b9ff654aa6a75</srcmd5>
    <version>4.1.1</version>
    <time>1668970006</time>
    <user>dimstar_suse</user>
    <comment>- Update to mpfr 4.1.1
  * Bug fixes (see &lt;https://www.mpfr.org/mpfr-4.1.0/#fixed&gt; and/or the
    ChangeLog file), in particular for macros implementing functions.
  * Improved manual formatting.
  * Accumulated bugfixes
- Remove mpfr-4.1.0-p7.diff, all patches are contained in the
  new version.
- Update mpfr.keyring</comment>
    <requestid>1036672</requestid>
  </revision>
  <revision rev="56" vrev="2">
    <srcmd5>0b1918b1f1b99d9befde6147759ecdc2</srcmd5>
    <version>4.1.1</version>
    <time>1669129749</time>
    <user>dimstar_suse</user>
    <comment>- package license files correctly (forwarded request 1036805 from AndreasStieger)</comment>
    <requestid>1037024</requestid>
  </revision>
  <revision rev="57" vrev="3">
    <srcmd5>be55bf9654fa0958355680de24393c6c</srcmd5>
    <version>4.1.1</version>
    <time>1669549963</time>
    <user>dimstar_suse</user>
    <comment>- Add mpfr-4.1.1-patch01.patch to fix bug with code using
  the mpfr_custom_get_kind macro.</comment>
    <requestid>1037844</requestid>
  </revision>
</revisionlist>
