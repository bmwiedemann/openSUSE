From 3f3c8876e0494cf7af92ce9b216da70fd4c0c275 Mon Sep 17 00:00:00 2001
From: Xiaoguang Wang <sun.wxg@gmail.com>
Date: Tue, 23 Apr 2024 12:28:45 +0800
Subject: [PATCH] Revert "clutter/stage: Avoid queueing stage updates when
 they're already queued"

This reverts commit 261f516af4e635d4bb263bbbbb2f843f0cbe09de.
---
 clutter/clutter/clutter-stage-private.h |  2 +-
 clutter/clutter/clutter-stage-view.c    |  2 +-
 clutter/clutter/clutter-stage.c         | 30 +++++++++----------------
 3 files changed, 12 insertions(+), 22 deletions(-)

Index: mutter-46.0/clutter/clutter/clutter-stage-private.h
===================================================================
--- mutter-46.0.orig/clutter/clutter/clutter-stage-private.h
+++ mutter-46.0/clutter/clutter/clutter-stage-private.h
@@ -59,7 +59,7 @@ void                clutter_stage_emit_b
 void                clutter_stage_emit_after_paint       (ClutterStage          *stage,
                                                           ClutterStageView      *view,
                                                           ClutterFrame          *frame);
-void                clutter_stage_after_update           (ClutterStage          *stage,
+void                clutter_stage_emit_after_update      (ClutterStage          *stage,
                                                           ClutterStageView      *view,
                                                           ClutterFrame          *frame);
 
Index: mutter-46.0/clutter/clutter/clutter-stage-view.c
===================================================================
--- mutter-46.0.orig/clutter/clutter/clutter-stage-view.c
+++ mutter-46.0/clutter/clutter/clutter-stage-view.c
@@ -917,7 +917,7 @@ handle_frame_clock_frame (ClutterFrameCl
   priv->needs_update_devices = FALSE;
 
   _clutter_run_repaint_functions (CLUTTER_REPAINT_FLAGS_POST_PAINT);
-  clutter_stage_after_update (stage, view, frame);
+  clutter_stage_emit_after_update (stage, view, frame);
 
   return clutter_frame_get_result (frame);
 }
Index: mutter-46.0/clutter/clutter/clutter-stage.c
===================================================================
--- mutter-46.0.orig/clutter/clutter/clutter-stage.c
+++ mutter-46.0/clutter/clutter/clutter-stage.c
@@ -130,8 +130,6 @@ typedef struct _ClutterStagePrivate
 
   int update_freeze_count;
 
-  gboolean update_scheduled;
-
   GHashTable *pointer_devices;
   GHashTable *touch_sequences;
 
@@ -512,15 +510,11 @@ clutter_stage_emit_after_paint (ClutterS
 }
 
 void
-clutter_stage_after_update (ClutterStage     *stage,
-                            ClutterStageView *view,
-                            ClutterFrame     *frame)
+clutter_stage_emit_after_update (ClutterStage     *stage,
+                                 ClutterStageView *view,
+                                 ClutterFrame     *frame)
 {
-  ClutterStagePrivate *priv = clutter_stage_get_instance_private (stage);
-
   g_signal_emit (stage, stage_signals[AFTER_UPDATE], 0, view, frame);
-
-  priv->update_scheduled = FALSE;
 }
 
 static gboolean
@@ -635,15 +629,19 @@ _clutter_stage_queue_event (ClutterStage
                             gboolean      copy_event)
 {
   ClutterStagePrivate *priv;
+  gboolean first_event;
 
   g_return_if_fail (CLUTTER_IS_STAGE (stage));
 
   priv = clutter_stage_get_instance_private (stage);
 
+  first_event = priv->event_queue->length == 0;
+
   g_queue_push_tail (priv->event_queue,
                      copy_event ? clutter_event_copy (event) : event);
 
-  clutter_stage_schedule_update (stage);
+  if (first_event)
+    clutter_stage_schedule_update (stage);
 }
 
 static ClutterEvent *
@@ -800,7 +798,8 @@ clutter_stage_queue_actor_relayout (Clut
 {
   ClutterStagePrivate *priv = clutter_stage_get_instance_private (stage);
 
-  clutter_stage_schedule_update (stage);
+  if (priv->pending_relayouts == NULL)
+    clutter_stage_schedule_update (stage);
 
   priv->pending_relayouts = g_slist_prepend (priv->pending_relayouts,
                                              g_object_ref (actor));
@@ -2520,19 +2519,12 @@ _clutter_stage_get_window (ClutterStage
 void
 clutter_stage_schedule_update (ClutterStage *stage)
 {
-  ClutterStagePrivate *priv = clutter_stage_get_instance_private (stage);
   ClutterStageWindow *stage_window;
-  gboolean first_event;
   GList *l;
 
   if (CLUTTER_ACTOR_IN_DESTRUCTION (stage))
     return;
 
-  first_event = priv->event_queue->length == 0;
-
-  if (priv->update_scheduled && !first_event)
-    return;
-
   stage_window = _clutter_stage_get_window (stage);
   if (stage_window == NULL)
     return;
@@ -2543,8 +2535,6 @@ clutter_stage_schedule_update (ClutterSt
 
       clutter_stage_view_schedule_update (view);
     }
-
-  priv->update_scheduled = TRUE;
 }
 
 void
