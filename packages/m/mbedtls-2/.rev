<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>e4ec32d2098a767531092a3500344674</srcmd5>
    <version>2.28.3</version>
    <time>1683111411</time>
    <user>dimstar_suse</user>
    <comment>Provide a package for version 2 of the library, since some packages aren't compatible with version 3. For example: godot, haxe or neko.</comment>
    <requestid>1084073</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>d34c049aa883cd1801ce95d1f151de1d</srcmd5>
    <version>2.28.3</version>
    <time>1683559508</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1085509</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>56a27a0c4c68c4e6eb5a46f3faccd8f4</srcmd5>
    <version>2.28.4</version>
    <time>1692379690</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1104419</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>7afe342f8a0ecf3dfc4fe7f9ba744380</srcmd5>
    <version>2.28.5</version>
    <time>1696760348</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1116220</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>100c1d39fa9b190ba85e10b2c258775a</srcmd5>
    <version>2.28.6</version>
    <time>1699994511</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1125092</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>fe75a6af7ab8fe1a5afc656a40c27b4f</srcmd5>
    <version>2.28.7</version>
    <time>1706741689</time>
    <user>anag+factory</user>
    <comment>- Update to version 2.28.7:
  - Resolves CVE-2024-23170 boo#1219336</comment>
    <requestid>1142922</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>5fb0a1fa17d86fdd4119e02add77a05e</srcmd5>
    <version>2.28.8</version>
    <time>1712068983</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1163795</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>a595df330f459411630c696861ddd51b</srcmd5>
    <version>2.28.9</version>
    <time>1725363538</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1198387</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>890fb333cbaf673eb3699dd388bb7063</srcmd5>
    <version>2.28.10</version>
    <time>1742937075</time>
    <user>anag+factory</user>
    <comment>- Update to version 2.28.10:
  Default behavior changes
  * In TLS clients, if mbedtls_ssl_set_hostname() has not been called,
    mbedtls_ssl_handshake() now fails with
    MBEDTLS_ERR_SSL_CERTIFICATE_VERIFICATION_WITHOUT_HOSTNAME
    if certificate-based authentication of the server is attempted.
    This is because authenticating a server without knowing what name
    to expect is usually insecure. To restore the old behavior, either
    call mbedtls_ssl_set_hostname() with NULL as the hostname, or
    enable the new compile-time option
    MBEDTLS_SSL_CLI_ALLOW_WEAK_CERTIFICATE_VERIFICATION_WITHOUT_HOSTNAME.
    The content of ssl-&gt;hostname after mbedtls_ssl_set_hostname(ssl, NULL)
    has changed, see the documentation of the hostname field in the
    mbedtls_ssl_context struct type for details.
  Security
  * Note that TLS clients should generally call mbedtls_ssl_set_hostname()
    if they use certificate authentication (i.e. not pre-shared keys).
    Otherwise, in many scenarios, the server could be impersonated.
    The library will now prevent the handshake and return
    MBEDTLS_ERR_SSL_CERTIFICATE_VERIFICATION_WITHOUT_HOSTNAME
    if mbedtls_ssl_set_hostname() has not been called.
    CVE-2025-27809
  * Zeroize temporary heap buffers used in PSA operations.
  * Fix a vulnerability in the TLS 1.2 handshake. If memory allocation failed
    or there was a cryptographic hardware failure when calculating the
    Finished message, it could be calculated incorrectly. This would break
    the security guarantees of the TLS handshake.
    CVE-2025-27810
  Bugfix
  * Use 'mbedtls_net_close' instead of 'close' in 'mbedtls_net_bind'
    and 'mbedtls_net_connect' to prevent possible double close fd
    problems. Fixes gh#Mbed-TLS/mbedtls#9711.
  * Fix compilation on MS-DOS DJGPP. Fixes gh#Mbed-TLS/mbedtls#9813.
  * Fix missing constraints on the AES-NI inline assembly which is used on
    GCC-like compilers when building AES for generic x86_64 targets. This
    may have resulted in incorrect code with some compilers, depending on
    optimizations. Fixes gh#Mbed-TLS/mbedtls#9819.
  * Fix issue where psa_key_derivation_input_integer() is not detecting
    bad state after an operation has been aborted.
  * Fix definition of MBEDTLS_PRINTF_SIZET to prevent runtime crashes that
    occurred whenever SSL debugging was enabled on a copy of Mbed TLS built
    with Visual Studio 2013 or MinGW.
    Fixes gh#Mbed-TLS/mbedtls#10017.
  * Remove Everest Visual Studio 2010 compatibility headers, which could
    shadow standard CRT headers inttypes.h and stdbool.h with incomplete
    implementatios if placed on the include path, eg. when building Mbed TLS
    with the .sln file shipped with the project.
- Drop fix_calloc-transposed-args.patch
</comment>
    <requestid>1255752</requestid>
  </revision>
</revisionlist>
