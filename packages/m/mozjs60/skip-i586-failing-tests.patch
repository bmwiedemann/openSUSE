Index: firefox-60.9.0/js/src/tests/jstests.list
===================================================================
--- firefox-60.9.0.orig/js/src/tests/jstests.list	2019-12-30 14:42:52.280553804 +0100
+++ firefox-60.9.0/js/src/tests/jstests.list	2019-12-30 16:08:20.952684820 +0100
@@ -454,6 +454,16 @@
 # Assumes little-endian IEEE representation of floating point numbers
 fails-if(xulRuntime.XPCOMABI.match(/s390x|ppc64-|ppc-/)) script test262/built-ins/TypedArray/prototype/set/typedarray-arg-set-values-same-buffer-other-type.js
 
+# Doesn't pass on i586, requires SSE2 (i686)
+# Upstream assumes everything uses SSE mathematics, but SSE isn't in i586, so we are stuck with i387 and its weird 80-bit floating point registers
+# (and the rounding +# is not what these tests expect)
+# We can't even work around this with -fexcess-precision=standard, because mozjs is C++.
+# Debian has the same issue
+fails-if(xulRuntime.XPCOMABI.match(/x86-/)) script test262/language/types/number/S8.5_A2.1.js
+fails-if(xulRuntime.XPCOMABI.match(/x86-/)) script test262/language/types/number/S8.5_A2.2.js
+fails-if(xulRuntime.XPCOMABI.match(/x86-/)) script test262/built-ins/Number/prototype/toPrecision/return-values.js
+fails-if(xulRuntime.XPCOMABI.match(/x86-/)) script non262/Date/timeclip.js
+
 # Fails with system ICU due to different data?
 skip script non262/Intl/DateTimeFormat/tz-environment-variable.js
 skip script non262/Intl/NumberFormat/formatToParts.js
