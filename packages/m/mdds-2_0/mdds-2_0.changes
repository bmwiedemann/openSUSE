-------------------------------------------------------------------
Thu Nov 18 17:48:19 UTC 2021 - Danilo Spinella <danilo.spinella@suse.com>

- Update to version 2.0.0:
  * set the baseline C++ version to C++17.
  * implemented structure-of-arrays (SoA) storage as its default storage
    layout for better CPU cache efficiency.
  * added multiple block position adjustment implementations with various
    loop-unrolling factors combined with SSE2 and AVX2 features.
  * added a tool called runtime-env to benchmark different block position
    adjustment implementations to determine the optimal loop-unrolling factor.
  * permanently remove rectangle_set.
  * fixed a rtree bug where the memory positions of invalidated child nodes were not
    properly updated after tree mutation.  The problem manifested itself when
    using libc++ as stdlib with clang.
  * added copy and move constructors in trie_map.
  * added a variant of find() method in trie_map that returns a mutable iterator object.
    The user can now update the value associated with a key directly via the
    iterator object.
  * added copy and move constructors in packed_trie_map.
  * added load_state() and save_state() methods in packed_trie_map to allow loading
    state from and saving state to binary files.

-------------------------------------------------------------------
Wed May 19 15:05:40 UTC 2021 - Fridrich Strba <fstrba@suse.com>

- Disable temporarily the tests, in order to be able to build on
  older systems

-------------------------------------------------------------------
Thu Jun 18 12:11:51 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 1.6.0:
  * switched to using binary search on block position lookup, which
    significantly improves element access performance in general, at the
    expense of slight performance degradation on block shifting.

-------------------------------------------------------------------
Thu Aug 15 21:10:14 UTC 2019 - Jonathan Brielmaier <jbrielmaier@suse.de>

- Version update to 1.5.0:
  * API change to 1.5
  * multi_type_vector
  ** using no (u)intX_t integer types 
  ** numeric_element_block renamed to double_element_block
  ** new element block: float_element_block
  ** more fixes and performance improvements
  * documentation
  ** moved the API incompatibility notes from README to the rst doc.
  ** added the overview section for flat_segment_tree.

-------------------------------------------------------------------
Thu Nov 15 13:44:58 UTC 2018 - Tomáš Chvátal <tchvatal@suse.com>

- Version update to 1.4.3:
  * Api change to 1.4
  * More multivector opreations and tweaks

-------------------------------------------------------------------
Wed Nov 29 13:05:52 UTC 2017 - tchvatal@suse.com

- Version update to 1.3.1:
  * No api change bump this time
  * Various multi vector fixes

-------------------------------------------------------------------
Mon Sep  4 06:27:38 UTC 2017 - fstrba@suse.com

- Version update to 1.2.3:
  * flat_segment_tree: add segment iterator and functions

-------------------------------------------------------------------
Wed Feb  1 16:09:29 UTC 2017 - adam.majer@suse.de

- use individual libboost-*-devel packages instead of boost-devel

-------------------------------------------------------------------
Sun Sep 11 07:34:05 UTC 2016 - tchvatal@suse.com

- Version update to 1.2.2:
  * fix to handle out-of-range insertions on flat_segment_tree

-------------------------------------------------------------------
Fri Aug 19 19:01:17 UTC 2016 - tchvatal@suse.com

- Version update to 1.2.1:
  * Few small bugfixes

-------------------------------------------------------------------
Tue May 17 11:37:37 UTC 2016 - tchvatal@suse.com

- Version update to 1.2.0:
  * Another api version -> rename to mdds-1_2

-------------------------------------------------------------------
Thu Mar 24 14:15:52 UTC 2016 - tchvatal@suse.com

- Add requires to the devel subpkg as would be correct

-------------------------------------------------------------------
Thu Feb 11 11:33:13 UTC 2016 - tchvatal@suse.com

- Version update to 1.1.0:
  * Fixes in various functions to provide correct return types
  * Rewrite to automake

-------------------------------------------------------------------
Thu Dec 17 09:51:31 UTC 2015 - tchvatal@suse.com

- Rename to mdds-%api as coinstallation will be required from now on
- Version update to 1.0.0:
  * Change of api compared to 0.x series
  * Various bugfixes

-------------------------------------------------------------------
Wed Jun 24 12:04:51 UTC 2015 - tchvatal@suse.com

- Version bump to 0.12.1:
  * Various small fixes on 0.12 series

-------------------------------------------------------------------
Tue Mar 24 09:47:15 UTC 2015 - tchvatal@suse.com

- Just move define up and comment why we redefine docdir

-------------------------------------------------------------------
Mon Mar 16 11:18:07 UTC 2015 - fstrba@suse.com

- Version bump to 0.12.0
  * more types are possible in segment_tree data structures
    (previously only pointers were possible)

-------------------------------------------------------------------
Fri Dec 19 10:31:14 UTC 2014 - tchvatal@suse.com

- Version bump to 0.11.2:
  * Small fixes

-------------------------------------------------------------------
Thu Nov 13 12:13:18 UTC 2014 - tchvatal@suse.com

- Version bump to 0.11.1:
  * Small bugfixes along 0.11 series

-------------------------------------------------------------------
Mon Sep 29 13:45:42 UTC 2014 - tchvatal@suse.com

- Version bump to 0.11.0:
  * added sorted_string_map
  * multi_type_vector bugfixes

-------------------------------------------------------------------
Fri Apr 25 10:01:09 UTC 2014 - tchvatal@suse.com

- Version bump to 0.10.3:
  * Various bugfixes among 0.10 series found during lo 4.2.3 phase.

-------------------------------------------------------------------
Tue Feb 25 19:50:47 UTC 2014 - tchvatal@suse.com

- Version bump to 0.10.2:
  * Various bugfixes among 0.10 series found during lo 4.2.1 phase.

-------------------------------------------------------------------
Wed Jan  8 20:05:50 UTC 2014 - fridrich.strba@suse.com

- Upgrade to 0.10.1
  * multi_type_matrix
    - added a variant of set_empty() that takes an additional
      length parameter.
  * flat_segment_tree
    - significant performance improvement on build_tree() and
      search_tree(), by optimizing the non-leaf node object
      generation and storage to achieve better locality of
      reference.
  * segment_tree
    - slight performance improvement on build_tree(), as a result
      of the optimization done for flat_segment_tree since these
      two structures share the same tree generation code.
  * multi_type_vector
    - improved debug message on mis-matched block types (only when
      MDDS_MULTI_TYPE_VECTOR_DEBUG is defined).

-------------------------------------------------------------------
Mon Dec 30 11:38:41 UTC 2013 - tchvatal@suse.com

- Version bump to 0.9.1 needed in LO-4.2
- Drop unused patch old-gcc-bug.patch.

-------------------------------------------------------------------
Thu Nov 14 11:19:25 UTC 2013 - tchvatal@suse.com

- Depend on pkg-config to have proper provides later on.

-------------------------------------------------------------------
Fri Nov  1 09:15:54 UTC 2013 - tchvatal@suse.com

- Use verbose build.

-------------------------------------------------------------------
Fri May 31 16:21:43 UTC 2013 - tchvatal@suse.com

- Apply patch to build on SLE gcc, provided by kohei.
 * Adds old-gcc-bug.patch

-------------------------------------------------------------------
Mon May 27 10:59:44 UTC 2013 - tchvatal@suse.com

- Version bump to 0.8.1

* multi_type_vector

  * fixed a bug in the erase() method where adjacent blocks of the
    same type would fail to merge after the erase() call.

  * add a variant of the position() method that takes an iterator as
    positional hint.  Note that there is no variant of position() that
    takes const_iterator.

* all

  * added .pc file for pkg-config.

* flat_segment_tree

  * changed the return type of search_tree from bool to
    std::pair<const_iterator,bool>, to make it consistent with the
    search() method.  Note that this is an API-incompatible change.

* multi_type_vector

  * added char and unsigned char types to the standard types supported
    by default.

  * added position() member method that takes a logical element
    position and returns a pair of block iterator where the element
    resides and its offset within that block.

  * added at() static member method to the data block, which calls the
    at() method of the underlying std::vector container.

  * added release() member method to allow caller to release an object
    stored inside a managed block.

  * added two templates to ease creation of custom element block
    functions when using one or two custom element types.

  * added transfer() member method to allow elements in a specified
    range to be transferred from one container to another.  When
    transferring elements stored in a managed element block, the
    ownership of those elements is also transferred.

-------------------------------------------------------------------
Sat Apr 20 11:48:26 UTC 2013 - tchvatal@suse.com

- Add URL path for download.

-------------------------------------------------------------------
Thu Mar 14 20:12:31 UTC 2013 - tchvatal@suse.com

- Add version 0.7.1

  * add variants of set() methods (both single- and multi-value)
    insert(), set_empty() and insert_empty() methods that take an
    iterator as an additional position hint parameter for block lookup
    speed optimization.

  * add support for non-const iterators which allow the client code to
    modify values directly from the iterators.

  * set() methods (both single- and multi-parameter variants),
    set_empty(), insert() and insert_empty() methods now return
    iterator that references the block to which the values are set or
    inserted.

  * fixed bugs in set() method (single-parameter variant) which would
    insert a new block at incorrect position.

  * fixed bugs in set() method (multi-parameter variant) which would
    fail to merge neighboring blocks of identical type under certain
    conditions.

-------------------------------------------------------------------
Mon Nov 12 18:07:19 UTC 2012 - cfarrell@suse.com

- license update: MIT
  Use SPDX syntax (short name) to define spec file licenses

-------------------------------------------------------------------
Mon Nov 12 12:48:00 UTC 2012 - tchvatal@suse.com

- Add header.

-------------------------------------------------------------------
Mon Sep 17 14:28:35 UTC 2012 - kyoshida@suse.com

- Updated to version 0.6.1 pre-release package.  This version 
  contains the following changes since 0.6.0.

* all

  * use property files in the Visual Studio project files, to share
    some of the common custom build variables across all projects.

  * various build fixes and compiler warning eliminations.

  * fixed link error with boost 1.50.

  * fixed make installer script which previously would not install
    mdds/compat headers.

* flat_segment_tree

  * fixed a bug in its iterator implementation, which previously would
    always treat the last valid position before the end position as
    the end position.  This fix affects both in const_iterator and
    const_reverse_iterator.

-------------------------------------------------------------------
Tue Jul 31 18:48:32 UTC 2012 - kyoshida@suse.com
 
- Updated to version 0.6.0.  This version contains the following
  changes

* all

  * added MSVS Solution file, to make it easier to build unit test
    programs on Windows.

* mixed_type_matrix

  * improved performance of size() method by caching it.

* multi_type_vector (new)

  * new data structure to support efficient storage of data of 
    different types.

* multi_type_matrix (new)

  * new data structure to eventually replace mixed_type_matrix.  It
    uses multi_type_vector as its backend storage.

-------------------------------------------------------------------
Sun Jan 29 20:39:22 UTC 2012 - jengelh@medozas.de

- Remove redundant tags/sections per specfile guideline suggestions
- Parallel building using %_smp_mflags
- Add missing call to make in %build

-------------------------------------------------------------------
Tue Oct 25 01:23:20 UTC 2011 - kyoshida@suse.com

- Updated to version 0.5.4.  This version contains the following
  changes:

- segment_tree

  - fixed build breakage, to allow it to be buildable when UNIT_TEST
    is not defined.

  - fixed a crasher with MSVC when comparing iterators of empty
    search_result instances.

- point_quad_tree

  - fixed a bug where de-referencing copied search_result iterators
    would return an uninitialized node data.

-------------------------------------------------------------------
Wed Jul 13 18:15:08 UTC 2011 - kyoshida@novell.com

- Updated to version 0.5.3.  This version contains the following
  changes:

- mixed_type_matrix

  - re-implemented the filled storage for better performance, with
    two separate implementations for zero and emtpy matrix types.
    The newer implementation should improve object creation time 
    considerably.

-------------------------------------------------------------------
Tue Mar 29 15:00:47 UTC 2011 - kyoshida@novell.com

- Updated to version 0.5.2.  This version fixes a bunch of bugs and
  adds several new methods to flat_segment_tree.

- flat_segment_tree

  - fixed a crash on assignment by properly implementing assignment
    operator().

  - fixed several bugs in shift_right():

    - shifting of all existing nodes was not handled properly.  
    - leaf nodes were not properly linked under certain conditions.
    - shifting with skip node option was not properly skipping the 
      node at insertion position when the insertion position was at 
      the leftmost node.  

  - implemented min_key(), max_key(), default_value(), clear() and 
    swap().

  - fixed a bug in operator==() where two different containers were 
    incorrectly evaluated to be equal.  

  - added quickcheck test code.

-------------------------------------------------------------------
Wed Jan 12 20:46:05 CET 2011 - pmladek@suse.cz

- made the package noarch; it did not produce any binary
- added COPYING file
- used %%configure, %%name macros
- used DESTDIR in make install
- simplified the file list

-------------------------------------------------------------------
Fri Jan 8 2011 kohei.yoshida@gmail.com

- Updated to version 0.5.1.

-------------------------------------------------------------------
Fri Jan 7 2011 kohei.yoshida@gmail.com

- Updated to version 0.5.0.

-------------------------------------------------------------------
Mon Dec 20 2010 kohei.yoshida@gmail.com

- Updated to version 0.4.0.

-------------------------------------------------------------------
Thu Oct 14 2010 kyoshida@novell.com

- Updated to version 0.3.1.

-------------------------------------------------------------------
Mon May 31 11:08:58 UTC 2010 - pth@suse.de

- Add install target to makefile.
- Add check target to makefile.
- Don't install code for tests.
- Remove -I../inc from Makefile for examles.
- Move changelog to mdds.changes.

-------------------------------------------------------------------
Fri May 5 2010 kyoshida@novell.com

- Updated to version 0.3.0.

-------------------------------------------------------------------
Fri Apr 9 2010 kyoshida@novell.com

- Updated to version 0.2.1.

-------------------------------------------------------------------
Fri Apr 9 2010 kyoshida@novell.com

- Initial package version 0.2.0.


