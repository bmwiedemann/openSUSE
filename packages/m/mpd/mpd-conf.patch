diff -Pdpru mpd-0.24.5.orig/doc/mpdconf.example mpd-0.24.5/doc/mpdconf.example
--- mpd-0.24.5.orig/doc/mpdconf.example	2025-07-31 22:58:34.000000000 +0300
+++ mpd-0.24.5/doc/mpdconf.example	2025-08-14 14:24:35.546964116 +0300
@@ -19,7 +19,7 @@
 # format. This setting defaults to playlist saving being disabled.
 #
 #playlist_directory		"$XDG_CONFIG_HOME/mpd/playlists"
-#playlist_directory		"~/.mpd/playlists"
+#playlist_directory		"/var/lib/mpd/playlists"
 #
 # This setting sets the location of the MPD database. This file is used to
 # load the database at server start up and store the database while the
@@ -28,7 +28,7 @@
 # files over an accepted protocol.
 #
 #db_file			"$XDG_CACHE_HOME/mpd/database"
-#db_file			"~/.mpd/database"
+#db_file			"/var/lib/mpd/mpd.db"
 
 # These settings are the locations for the daemon log files for the daemon.
 #
@@ -39,7 +39,7 @@
 # defaults to the systemd journal, which is fine.
 #
 #log_file			"$XDG_CACHE_HOME/mpd/log"
-#log_file			"~/.mpd/log"
+#log_file			"/var/log/mpd.log"
 
 # This setting sets the location of the file which stores the process ID
 # for use of mpd --kill and some init scripts. This setting is disabled by
@@ -48,7 +48,7 @@
 # If you use systemd, do not configure a pid_file.
 #
 #pid_file			"$XDG_RUNTIME_DIR/mpd/mpd.pid"
-#pid_file			"~/.mpd/pid"
+#pid_file			"/run/mpd/mpd.pid"
 
 # This setting sets the location of the file which contains information about
 # most variables to get MPD back into the same general shape it was in before
@@ -56,13 +56,13 @@
 # state will be reset on server start up.
 #
 #state_file			"$XDG_RUNTIME_DIR/mpd/state"
-#state_file			"~/.mpd/state"
+#state_file			"/var/lib/mpd/mpdstate"
 #
 # The location of the sticker database.  This is a database which
 # manages dynamic information attached to songs.
 #
 #sticker_file			"$XDG_CACHE_HOME/sticker.sql"
-#sticker_file			"~/.mpd/sticker.sql"
+#sticker_file			"/var/lib/mpd/sticker.sql"
 #
 ###############################################################################
 
@@ -74,14 +74,14 @@
 # initialization. This setting is disabled by default and MPD is run as the
 # current user.
 #
-#user				"nobody"
+#user				"mpd"
 #
 # This setting specifies the group that MPD will run as. If not specified
 # primary group of user specified with "user" setting will be used (if set).
 # This is useful if MPD needs to be a member of group such as "audio" to
 # have permission to use sound card.
 #
-#group				"nogroup"
+#group				"audio"
 #
 # This setting sets the address for the daemon to listen on. Careful attention
 # should be paid if this is assigned to anything other than the default, any.
@@ -93,7 +93,7 @@
 #
 # And for Unix Socket
 #bind_to_address		"$XDG_RUNTIME_DIR/mpd/socket"
-#bind_to_address		"~/.mpd/socket"
+#bind_to_address		"/run/mpd/socket"
 #
 # This setting is the TCP port that is desired for the daemon to get assigned
 # to.
@@ -104,7 +104,7 @@
 # troubleshooting. Available setting arguments are "notice", "info", "verbose",
 # "warning" and "error".
 #
-#log_level			"notice"
+log_level			"warning"
 #
 # Setting "restore_paused" to "yes" puts MPD into pause mode instead
 # of starting playback after startup.
@@ -128,7 +128,7 @@
 # This setting enables automatic update of MPD's database when files in
 # music_directory are changed.  (Linux only)
 #
-#auto_update	"yes"
+auto_update	"no"
 #
 # Limit the depth of the directories being watched, 0 means only watch
 # the music directory itself.  There is no limit by default.
@@ -158,7 +158,7 @@
 # If this setting is set to "yes", service information will be published with
 # Zeroconf / Avahi.
 #
-#zeroconf_enabled		"yes"
+zeroconf_enabled		"no"
 #
 # The argument to this setting will be the Zeroconf / Avahi unique name for
 # this MPD server on the network. %h will be replaced with the hostname.
@@ -225,11 +225,11 @@ input {
 #
 #audio_output {
 #	type		"alsa"
-#	name		"My ALSA Device"
-##	device		"hw:0,0"	# optional
-##	mixer_type      "hardware"	# optional
+#	name		"ALSA Device"
+##	device		"plug:plugequal"	# optional
+##	mixer_type	"hardware"	# optional
 ##	mixer_device	"default"	# optional
-##	mixer_control	"PCM"		# optional
+##	mixer_control	"Master"		# optional
 ##	mixer_index	"0"		# optional
 #}
 #
@@ -249,14 +249,14 @@ input {
 #audio_output {
 #	type		"shout"
 #	encoder		"vorbis"		# optional
-#	name		"My Shout Stream"
+#	name		"Shout Stream"
 #	host		"localhost"
 #	port		"8000"
 #	mount		"/mpd.ogg"
 #	password	"hackme"
-#	quality		"5.0"
-#	bitrate		"128"
-#	format		"44100:16:1"
+#	quality		"6.0"
+#	bitrate		"192"
+#	format		"48000:16:2"
 ##	protocol	"icecast2"		# optional
 ##	user		"source"		# optional
 ##	description	"My Stream Description"	# optional
@@ -271,37 +271,37 @@ input {
 #
 #audio_output {
 #	type		"recorder"
-#	name		"My recorder"
+#	name		"Recorder"
 #	encoder		"vorbis"		# optional, vorbis or lame
 #	path		"/var/lib/mpd/recorder/mpd.ogg"
-##	quality		"5.0"			# do not define if bitrate is defined
-#	bitrate		"128"			# do not define if quality is defined
-#	format		"44100:16:1"
+##	quality		"6.0"			# do not define if bitrate is defined
+#	bitrate		"192"			# do not define if quality is defined
+#	format		"48000:16:2"
 #}
 #
 # An example of a httpd output (built-in HTTP streaming server):
 #
 #audio_output {
 #	type		"httpd"
-#	name		"My HTTP Stream"
+#	name		"HTTP Stream"
 #	encoder		"vorbis"		# optional, vorbis or lame
 #	port		"8000"
 #	bind_to_address	"0.0.0.0"		# optional, IPv4 or IPv6
-##	quality		"5.0"			# do not define if bitrate is defined
-#	bitrate		"128"			# do not define if quality is defined
-#	format		"44100:16:1"
+##	quality		"6.0"			# do not define if bitrate is defined
+#	bitrate		"192"			# do not define if quality is defined
+#	format		"48000:16:2"
 #	max_clients	"0"			# optional 0=no limit
 #}
 #
 # An example of a pulseaudio output (streaming to a remote pulseaudio server)
 #
-#audio_output {
-#	type		"pulse"
-#	name		"My Pulse Output"
+audio_output {
+	type		"pulse"
+	name		"Pulse Output"
 ##	server		"remote_server"		# optional
 ##	sink		"remote_server_sink"	# optional
 ##	media_role	"media_role"		#optional
-#}
+}
 #
 # An example of a winmm output (Windows multimedia API).
 #
@@ -364,7 +364,7 @@ input {
 #	command		"AudioCompress -m | aplay -f cd 2>/dev/null"
 ## Or to send raw PCM stream through PCM:
 #	command		"nc example.org 8765"
-#	format		"44100:16:2"
+#	format		"48000:16:2"
 #}
 #
 ## An example of a null output (for no audio output):
