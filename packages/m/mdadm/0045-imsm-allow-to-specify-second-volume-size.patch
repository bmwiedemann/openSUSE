From 1a1ced1e2e64a6b4b349a3fb559f6b39e4cf7103 Mon Sep 17 00:00:00 2001
From: Krzysztof Smolinski <krzysztof.smolinski@intel.com>
Date: Fri, 8 Nov 2019 11:59:11 +0100
Subject: [PATCH] imsm: allow to specify second volume size
Git-commit: 1a1ced1e2e64a6b4b349a3fb559f6b39e4cf7103
Patch-mainline: mdadm-4.1+
References: jsc#SLE-10078, jsc#SLE-9348

Removed checks which limited second volume size only to max value (the
largest size that fits on all current drives). It is now permitted
to create second volume with size lower then maximum possible.

Signed-off-by: Krzysztof Smolinski <krzysztof.smolinski@intel.com>
Signed-off-by: Jes Sorensen <jsorensen@fb.com>
Signed-off-by: Coly Li <colyli@suse.de>

---
 super-intel.c | 14 ++++----------
 1 file changed, 4 insertions(+), 10 deletions(-)

diff --git a/super-intel.c b/super-intel.c
index e02bbd7..713058c 100644
--- a/super-intel.c
+++ b/super-intel.c
@@ -7298,11 +7298,8 @@ static int validate_geometry_imsm_volume(struct supertype *st, int level,
 
 	maxsize = merge_extents(super, i);
 
-	if (!check_env("IMSM_NO_PLATFORM") &&
-	    mpb->num_raid_devs > 0 && size && size != maxsize) {
-		pr_err("attempting to create a second volume with size less then remaining space. Aborting...\n");
-		return 0;
-	}
+	if (mpb->num_raid_devs > 0 && size && size != maxsize)
+		pr_err("attempting to create a second volume with size less then remaining space.\n");
 
 	if (maxsize < size || maxsize == 0) {
 		if (verbose) {
@@ -7393,11 +7390,8 @@ static int imsm_get_free_size(struct supertype *st, int raiddisks,
 		}
 		maxsize = size;
 	}
-	if (!check_env("IMSM_NO_PLATFORM") &&
-	    mpb->num_raid_devs > 0 && size && size != maxsize) {
-		pr_err("attempting to create a second volume with size less then remaining space. Aborting...\n");
-		return 0;
-	}
+	if (mpb->num_raid_devs > 0 && size && size != maxsize)
+		pr_err("attempting to create a second volume with size less then remaining space.\n");
 	cnt = 0;
 	for (dl = super->disks; dl; dl = dl->next)
 		if (dl->e)
-- 
2.25.0

