-------------------------------------------------------------------
Sat Feb 20 11:05:11 UTC 2021 - Sebastian Wagner <sebix+novell.com@sebix.at>

- Update to version 0.812
 - Improved Source File Finding
  - Mypy 0.800 changed how mypy finds modules if you run mypy as mypy directory/ or mypy -p package. Mypy started looking for source files in directories without a __init__.py file. This is often the expected behavior, and it avoids excluding some files that should be type checked.
    However, this caused issues for some users, such as when using mypy . to type check all files under the current directory. Mypy could now try to type check files inside nested virtual environments and node_modules directories, which is usually not desirable. This could result in mypy needlessly complaining about duplicate module names, in particular.
    Now mypy will skip directories named site-packages or node_modules, and any directory beginning with a dot (such as .git) when recursively looking for files to check.
    This doesn’t affect how mypy resolves imports — it only affects when mypy is given a directory or a package to type check. You can override the exclusions by explicitly passing the files on the command line.
 - Excluding Paths
  - Mypy now supports the --exclude regex command line option to exclude paths matching a regular expression when searching for files to type check. For example, mypy --exclude '/setup\.py$' skips all setup.py files. This lets you exclude additional paths that mypy started finding after mypy 0.800 changed module finding behavior, as discussed above.
  - You can also specify this in the config file (exclude=regex). The option expects forward slashes as directory separators on all platforms, including Windows, for consistency.

-------------------------------------------------------------------
Mon Jan 25 22:16:46 UTC 2021 - Benjamin Greiner <code@bnavigator.de>

- Provide the toolname only for the primary python3 flavor in order
  to avoid choice conflicts.
- python3-mypy and python3Y-mypy are provided automatically.

-------------------------------------------------------------------
Sat Jan 23 19:22:44 UTC 2021 - Sebastian Wagner <sebix+novell.com@sebix.at>

- Update to version 0.800:
 - Python 3.9 Support
 - Typing Usability Improvements (PEP 585 and PEP 604)
   The necessity to repeatedly import various types and special forms from typing has been a long-term nuisance for users of static type checking and Python.
   Two new Python features improve this situation and are now supported by mypy:
       PEP 585 lets you use list[int] instead of List[int] (no need to import List and other generic collections from typing).
       PEP 604 lets you write X | Y instead of Union[X, Y], and X | None instead of Optional[X] (no need to import Union or Optional from typing). 
   Note: Using list[int] requires Python 3.9 and X | Y requires Python 3.10 (alpha) in order to work at runtime. To use them on older versions of Python, use from __future__ import annotations. This allows them to be used in type annotations, but the older variants (or string literal escaping) may be required in non-annotation contexts, such as in type aliases. See the docs for more details.
   Here is an example that uses the new features:
       from __future__ import annotations
       def fields(s: str | None) -> list[str]:
           if not s:
               return []
           else:
               return s.split(',')
   These were implemented by Allan Daemon in PR 9564 and by Marc Mueller in PR 9647.
 - Improvements to Finding Modules
   This release adds several improvements to how mypy finds Python source files to type check.
   You can now pass paths to files within namespace packages on the command line, and mypy can better infer their module names. As before, use --namespace-packages to enable namespace packages.
   When you use --explicit-package-bases together with --namespace-packages, mypy assumes that only the current directory and directories explicitly specified in MYPYPATH (or mypy_path in the config file) are valid package roots. This can help with situations where the module name of a file is ambiguous. For example, it may not be clear whether src/pkg/mod.py should be treated as src.pkg.mod or pkg.mod, and you can use this option to disambiguate between the two (more information in the docs).
   The above improvements were implemented in PR 9742 by Shantanu.
   Other related improvements (also implemented by Shantanu):
  - When you run mypy as mypy <directory>, look for source files recursively also inside directories without a __init__.py (PR 9614)
  - Support namespace packages with -p (PR 9683)
  - Log encountered source files when running mypy with -v (PR 9672)
  - Document the new module finding behavior (PR 9923) 
 - Other Notable Improvements and Bug Fixes
  - Only treat import X as X as a re-export in stubs (Shantanu, PR 9515)
  - Fix package imports with aliases in stubgen (Chad Dombrova, PR 9534)
  - Require first argument of namedtuple() to match the variable name (Momoko Hattori, PR 9577)
  - Add error code for name mismatches in named tuples and TypedDicts to make it easy to disable these error messages (Jukka Lehtosalo, PR 9811)
  - Document local_partial_types config option (Momoko Hattori, PR 9551)
  - Improve ambiguous kwargs checking (Erik Soma, PR 9573)
  - Disable unreachable warnings in boolean operators for type variables with value restrictions (Vincent Barbaresi, PR 9572)
  - Allow assignment to an empty tuple (Tobin Yehle, PR 5617)
  - Use absolute path when checking source duplication error (Yuki Igarashi, PR 9059)
  - Add get_function_signature_hook() to the plugin API (Nikita Sobolev, PR 9102)
  - Speed up type checking of dictionary, set, and list expressions (Hugues, PR 9477)
  - Allow non-types as arguments in Annotated (Patrick Arminio, PR 9625)
  - Add support for next generation attrs API (David Euresti, PR 9396)
  - Fix case folding of missing keys error message for TypedDicts (Marti Raudsepp, PR 9757)
  - Fix generic inheritance of __init__() methods in dataclasses and attrs classes (Nate McMaster, PR 9383, PR 9380)
  - Add more information to error message on too few arguments (Abhinay Pandey, PR 9796)
  - Document PEP 585, 563, 604, and related functionality (Shantanu, PR 9763) 
 - Mypyc Improvements
   We use mypyc to compile mypy into fast C extension modules. This release includes many mypyc improvements.
   Xuanda Yang finished the migration to use a new, lower-level compiler intermediate representation in his Google Summer of Code project.
 - New supported Python features:
  - Support the walrus operator (:=) (Michael J. Sullivan, PR 9624) 
 - Performance improvements:
  - Add primitives for list sort and list reverse (Jukka Lehtosalo, PR 9897)
  - Recognize six.moves.xrange again as an alias of range (Jukka Lehtosalo, PR 9896)
  - Speed up some integer primitives (Jukka Lehtosalo, PR 9801)
  - Speed up if x for int values (Jukka Lehtosalo, PR 9854)
  - Implement dict clear primitive (Vasileios Sakkas, PR 9724)
  - Implement list insert primitive (Vasileios Sakkas, PR 9741)
  - Implement float abs primitive (Xuanda Yang, PR 9695)
  - Implement str-to-float primitive (Xuanda Yang, PR 9685)
  - Specialize some calls to frozenset (Michael J. Sullivan, PR 9623)
  - Speed up multiple assignment from tuple (Xuanda Yang, PR 9575)
  - Speed up multiple assignment from sequence (Jukka Lehtosalo, PR 9800)
  - Optimize startswith and endswith (Tomer Chachamu, PR 9557)
  - Add primitives for bitwise ops (Jukka Lehtosalo, PR 9529)
  - Speed up in operations for list/tuple (Johan Dahlin, PR 9004)
  - Add primitives for list, str and tuple slicing (Jukka Lehtosalo, PR 9283)
  - Speed up tuple equality checks (Xuanda Yang, PR 9343) 
 - Bug fixes:
  - Always add implicit None return type to __init__ method (Thomas Johnson, PR 9866)
  - Fix deallocation of deeply nested data structures (Michael J. Sullivan, PR 9839)
  - Fix using package imported inside a function (Jukka Lehtosalo, PR 9782)
  - Fix type of for loop index register in for over range (Jukka Lehtosalo, PR 9634) 

-------------------------------------------------------------------
Fri Jan 22 15:48:13 UTC 2021 - Markéta Machová <mmachova@suse.com>

- Convert to single-spec
- Use update-alternatives to handle binaries
- Do not expect python3.5 during tests

-------------------------------------------------------------------
Sun Oct 11 06:53:29 UTC 2020 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.790:
 - Enabling and Disabling Error Codes
  - You can now globally disable and enable the generation of error messages with specific error codes by using --enable-error-code and --disable-error-code command line options (and config file options). This lets you disallow certain checks that don’t provide value or are too noisy, and in the future these can be used to enable optional, stricter checks. For more information, read the documentation.
 - Bug Fixes
  - Fix disable_error_code config file option (Aristotelis Mikropoulos, PR 9538)
  - Fix partial type crash during protocol checking (Shantanu, PR 9495)
  - Store the type for assignment expression (walrus) targets (Lawrence Chan, PR 9479)
  - Always type check arguments when using --disallow-untyped-calls (PR 9510)
  - Make None compatible with Hashable (PR 9371)
  - Don't infinite loop on self dependencies in --follow-imports=normal (Michael J. Sullivan, PR 9302)
  - Don't simplify away Any when joining union types (PR 9301)
  - Check for deleted vars in raise from (Alexandre Viau, PR 9272)
  - Fix corner case for comparing nested overloads (Nikita Sobolev, PR 9259)
  - Fix issues with async for and with statements (Guido van Rossum, PR 9268)
  - Fix internal error on list/dict comprehension with walrus operator in global scope (dhood, PR 9062)
  - Fix propagation of module-specific options to the parser (Guido van Rossum, PR 9247)
  - Fix crash when super is called outside a method (Weiss, PR 9173)
  - Fix untyped decorator overload error on class decorator with __call__ overloads (Ran Benita, PR 9232)
  - Clean up terminal width handling (Florian Bruhin, PR 9143)
  - Add keyword arguments for functional Enum API (LiuYuhui, PR 9123)
  - Validate follow_imports values in mypy.ini (Michael J. Sullivan, PR 9165)
  - Fix *expr in an assigned expression (LiuYuhui, PR 8827)
  - Don't consider comparing True and False as a dangerous comparison (PR 9021)
  - Make reveal_type work with call expressions returning None (Jakub Stasiak, PR 8924)
 - Error Reporting Improvements
  - Improve missing module error for subdirectories (Ethan Leba, PR 8927)
  - Clarify bytes formatting error messages (Shantanu, PR 9243)
  - Fix misleading follow_imports error message in dmypy (Michael J. Sullivan, PR 9167)
  - Use [arg-type] error code for additional argument type error messages (PR 9090)
  - Report some additional serious errors in junit.xml (PR 8950)
  - Report note about binary operation on the same location as error message (PR 8936)
 - Documentation Updates
  - Document disable_error_code config file option (Aristotelis Mikropoulos, PR 9539)
  - Add cross references to config file values (Oleg Höfling, PR 7859)
  - Add cross references to additional config values, and missing plugins config value, and document --help option for stubgen (Oleg Höfling, PR 9241)
  - Remove note that Final is experimental and suggest importing it from typing (Ran Benita, PR 9138)
  - Discuss unreachable code as a common issue (Chetan Khanna, PR 8899)
 - Stubgen Improvements
  - Improve property type detection in extension modules (Antoine Prouvost, PR 8999)
  - Fix type stubgen crash caused by invalid type annotation (Henry Schreiner, PR 8888)
  - Import Iterable and Iterator from typing in generated stubs (Ashley Whetter, PR 9088)
 - Other Improvements
  - Speed up type checking of unions containing many literal string types (Akuli, PR 9192)
  - Add scripts to misc/ (in the mypy GitHub repository) for computing and applying diffs of mypy caches to enable incremental cache downloads (Michael J. Sullivan, PR 8906)
 - Internal Changes
  - This release includes several improvements to mypyc, the compiler we use to speed up mypy. Most notably, Xuanda Yang has been migrating mypyc to use a new, lower-level intermediate representation in his Google Summer of Code project. This provides a solid foundation for a variety of future mypyc improvements.
 - Additional mypyc improvements:
  - Dynamically disallow instantiating traits/interpreted subclasses (Michael J. Sullivan, PR 9248)
  - Basic support for protocols (PR 8914) Michael J. Sullivan)
  - Various optimizations (PR 8903, PR 8870) (Michael J. Sullivan and Xuanda Yang, PR 9245)
  - Make it easier to write mypyc test cases (PR 9094)
 - Typeshed Updates
  - Many improvements were made to typeshed — too many to list. 

-------------------------------------------------------------------
Sat Jul  4 12:28:39 UTC 2020 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.780:
 - Following Imports in Mypy Daemon
  - You can now leave out the --follow-imports option when running dmypy, and mypy daemon will follow imports, similar to a non-daemon mypy run.
    Previously mypy daemon did not support this, and it was necessary to use --follow-imports and explicitly mention all files to check on the command line. (Following imports in mypy daemon is an experimental feature.)
    See the docs about following import in mypy.
 - Miscellaneous New Features:
  - Support environment variable interpolation for junit_xml configuration key (Mattwmaster58, PR 8479)
  - Add no_site_packages config file setting (davidzwa, PR 8524)
  - Allow .mypy.ini (with a dot prefix) as an alternative name to mypy.ini (dosisod, PR 8515)
  - Disallow unpacking of strings in multiple assignment, as this is usually a bug (Abtin, PR 8589)
  - Allow type aliases in a runtime (non-type) context (PR 8779)
  - Add narrowing unions with bool literals via identity check (Steve Dignam, PR 8821)
  - Always allow to cast to Any without warnings (oda, PR 8544)
  - Suggest solutions for a typo in a key of a TypedDict (Felicián Németh, PR 8483)
  - Provide more context about why incompatible with supertype is an error (Chetan Khanna, PR 8866) 
 - Other Notable Improvements and Bug Fixes:
  - Fix handling dependencies to __call__ in mypy daemon (PR 8494)
  - Various improvements to stubtest (PR 8502, PR 8886) (Shantanu)
  - Fix invalid type causing named tuple errors reported in wrong files (PR 8549)
  - Clarify documentation of Liskov substitution principle (PR 8563)
  - Fix type inference with lambda that returns None (PR 8562)
  - Fix incremental crash bug caused by NewType in functions (PR 8607)
  - Fix indexed assignment check when TypedDict is used as upper bound (Xuanda Yang, PR 8621)
  - Improve error message for bad indexed assignment (pando, PR 8641)
  - Fix crash when the same file is processed under multiple names (PR 8644)
  - Fix parser when using Python 3.9 (PR 8716)
  - Accept dict() as an empty dictionary in a TypedDict context (PR 8749)
  - Fix incorrect coroutine return type for nested function (Jens Widell, PR 8741)
  - Reject bytes literal as a TypedDict key (PR 8782)
  - Allow attrs keyword-only arguments at any position (Markus Schmaus, PR 8803)
  - Detect duplicate keys in call-based TypedDict definitions (PR 8849)
  - Look at arguments when generating constraints for an overload (PR 8845)
  - Fix potential wrong-file error message for unsupported types (PR 8854) 
 - Typeshed Updates
  - Many small improvements were made to typeshed — too many to list. Browse the typeshed commit log here.
- update to version 0.770:
 - Tagged Unions
  - Previously, the only way to distinguish between two types in a union was to use an isinstance check. Now, mypy supports distinguishing between two or more types based on the value of some common shared "tag" field.
    This feature is most useful when you want to narrow down a union of TypedDicts: since TypedDicts are really just regular dicts at runtime, using isinstance checks won't work. Instead, you can now label or tag each TypedDict with a distinct Literal type and discriminate by checking that tag.
    Note that you can import Literal from typing_extensions on Python 3.7 and earlier.
    You can also use this technique to discriminate between unions of objects, tuples, or named tuples, so long as: 1. Every item in your union is tagged with a unique value 2. Mypy understands how to narrow the union of the tag values.
    For more details and examples, see the documentation on tagged unions.
 - Type Inference Improvements
   Type inference is now more powerful. Mypy can infer types in some cases where you previously needed an explicit type annotation.
   Mypy can infer a built-in collection type from augmented assignment statements.
   Some dictionary construction idioms are better supported.
   Mypy is better at inferring defaultdict types.
 - Multiple Inheritance and isinstance() Checks
   Previously, mypy assumed a variable cannot have two unrelated types when analyzing isinstance checks. For example, in the following example B is not a subclass of A, so mypy would incorrectly conclude the isinstance check is always false, and that the if-branch is unreachable — even though var could actually be a subtype of both types.
   This meant that mypy skipped type checking anything inside the if statement, since it (by design) skips analyzing unreachable branches.
   Now, mypy will instead decide that the narrowed type of x is test.<subclass of "A" and "B">, instead of marking the branch as unreachable.
   If it’s impossible for two types to be a subtype of one another, mypy will continue to not attempt to infer this "ad-hoc intersection".
 - Other Notable Improvements and Bug Fixes:
  - Fix some crash bugs involving import * and import cycles (PR 8450)
  - Fix interaction of descriptor methods with plugins (Jan Verbeek, PR 8365)
  - Allow strict in config file (Ville Skyttä, PR 8192)
  - Don’t crash when a module shadows builtin libraries (such as typing or types, PR 8405)
  - Fix type join between subclasses of unicode and str (PR 8402)
  - Fix type join of fixed-length tuples with mismatching lengths (Marti Raudsepp, PR 8333)
  - Fix type join of Sequence (e.g. variadic tuple) and fixed-length tuple (Marti Raudsepp, PR 8335)
  - Make mypy.api.run_dmypy actually capture the output (PR 8375)
  - Support determining whether a literal is truthy (Jan Verbeek, PR 8368)
  - Fix covariant overriding of decorated methods (Xuanda Yang, PR 8350)
  - Support typing.Annotated in addition to typing_extensions.Annotated (Jakub Stasiak, PR 8371)
  - Add add_method_to_class function to plugins.common (useful when writing mypy plugins) (Maksim Kurnikov, PR 8245)
  - Fix module alias as instance attribute (Uwe L. Korn, PR 8259)
  - Automatically write a file .gitignore file to cache directory, ignoring everything (Ville Skyttä , PR 8193)
  - Don't make dunder attributes enum members (Xuanda Yang, PR 8302)
  - Allow redefining TypedDict keys (while still generating an error) (Cohen Karnell, PR 8109)
  - Fix some crashes in dataclasses (PR 8271)
  - Use TypedDict union as type context when unambiguous (PattenR, PR 8212)
  - Fix false positive for subclasses of bytes overriding __str__ (Shantanu, PR 8222)
  - Fix deeply nested InitVar definitions in dataclasses with init=False (Jacob Beck, PR 8208)
  - Narrow types for walrus assignment in if statements in some cases (Shantanu, PR 8258)
  - Narrow types for walrus assignment in if statements in most of the rest of cases (PR 8458)
  - Fix incorrect error code indexing (Xuanda Yang, PR 8248)
  - Fix regression in container check logic (Michael Lee, PR 8232)
  - Make reachability code understand chained comparisons (Michael Lee, PR 8148)
  - Fix incorrect name lookup for decorated methods (Xuanda Yang, PR 8175)
  - Fix simplifying unions with type aliases (Xuanda Yang, PR 8146)
  - Fix crash when overriding __init__ in a dataclass subclass (Jacob Beck, PR 8159)
  - Fix some daemon crashes involving classes becoming generic (PR 8157) 
 - Documentation and Error Reporting Improvements
  - Use fully qualified names in error messages for class names resembling builtins(Mukuntha N S, PR 8425)
  - Improve diagnostics involving missing stubs for a library that is installed in site-packages (Michael Lee, PR 8238)
  - Add a section to the documentation about incompatible overrides (RAHUL RAJA, PR 8377)
  - Add variable-sized tuples to the cheat sheet (Marcio Mazza, PR 8364)
  - Improve documentation of decorators (add decorator factories) (Marti Raudsepp, PR 8336)
  - Update documentation of variables and aliases (Xuanda Yang, PR 8200)
  - Report an error if a final class has abstract attributes (Denys Halenok, PR 8332)
  - Update common issues to include __init__ without arguments (Tan Yuanhong, PR 8303)
  - Add a new error code for errors about unreachability (Denys Halenok, PR 8312)
  - Fix error indicator position in code with tabs (dosisod, PR 8307)
  - Document --local-partial-types (Xuanda Yang, PR 8201)
  - Update documentation for Literal types (Michael Lee, PR 8152) 
 - Stubtest rewrite
   stubtest is a tool that compares stub definitions to what it finds at runtime with introspection and reports back inconsistencies. It got a complete rewrite. Some features of the new stubtest are:
  - Find missing, extraneous or mistyped classes, methods, functions and attributes in the stubs
  - Check presence, names and kinds of function arguments, accounting for overloads, decorators, *args and kwargs. Checks argument types against their default values, accounting for type vars.
  - Checks @property, @classmethod, @staticmethod declarations
  - Check types of module level and class level attributes and enums 
 - Some results of this:
  - We now run stubtest in typeshed CI (for stdlib)
  - We’ve fixed about 1900 issues in typeshed definitions
  - We’ve greatly improved Python 3.8 support in typeshed and it’ll be easier to make the changes needed for future Python versions
  - We’ve uncovered a handful of issues in Python itself 
 - Typeshed Updates:
  - Many small improvements were made to typeshed — too many to list. Browse the typeshed commit log here.

-------------------------------------------------------------------
Wed Mar 11 11:18:05 UTC 2020 - Matej Cepl <mcepl@suse.com>

- Update to 0.770: too many changes to
  list here, but all information is on
  https://mypy-lang.blogspot.com/2019/12/mypy-0760-released.html
- Remove 0003-Pass-executable-path-into-main-when-running-installe.patch
  it got already broken by upstream in e491b5d4aa anyway.

-------------------------------------------------------------------
Wed Jan  1 11:15:20 UTC 2020 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.761
- update to version 0.760:
 - Type Signature Suggestions for Tools
 - Type Inference Improvements
 - Fixes to Regressions
  - Fix regression introduced in 0.750: union (non-)simplification should not affect type inference (PR 8095) 
 - Breaking Changes
  - Make the error code of a binary operation involving overload operator, for consistency (PR 8124) 
 - Other Notable Improvements and Bug Fixes
  - Generate error when assigning an Enum or TypedDict type to an attribute (Xuanda Yang, PR 8107)
  - Fix relative path calculation if path is on a different drive on Windows (Netzeband, PR 8094)
  - Don’t infer an abstract type object type from concrete type object values (Xuanda Yang, PR 8096)
  - Fix an inconsistency with type checking lambda expressions (PR 8080)
  - Fix crash involving generic callable types (PR 8075)
  - Improve error message with long tuple initializer (Xuanda Yang, PR 7995)
  - Improve mypy daemon documentation (PR 8041)
  - Recommend typing_extensions instead of mypy_extensions for TypedDict (PR 8023)
  - Fix an inconsistency with self types (PR 8030, PR 8021)
  - Support type alias within Literal[...] (Xuanda Yang, PR 8014)
  - Fix --warn-return-any false positive when returning Any from a function declared to return object (Xuanda Yang, PR 8011)
  - Stubgen: Split @abstractproperty into @abstractmethod and @property (Xuanda Yang, PR 8066)
  - Stubgen: Give a better error message when using a .pyd file as target (Xuanda Yang, PR 8063)
  - Update stubgen documentation (PR 8031) 
 - Typeshed Updates
  - Many small improvements were made to typeshed — too many to list. Browse the typeshed commit log here. 
-------------------------------------------------------------------
Thu Dec 12 12:09:10 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.750
 * More Precise Error Locations
 * Colors in Output
 * Pretty Output Mode
 * Old Semantic Analyzer Removed
 * Type Checking for str.format Calls
 * Improved check_untyped_defs
 * Stricter Treatment of Context Manager Objects
 * More Powerful Self-types
 * Mypy Daemon is No Longer Experimental

-------------------------------------------------------------------
Fri Nov 15 11:07:41 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Pull in full interpreter as we can't have this package working
  with just base interpreter

-------------------------------------------------------------------
Mon Jul 15 19:52:39 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- Update to version 0.720:
 - New Semantic Analyzer Used by Default
 - New Feature: Warn about Unreachable Code
 - Plugin API Changes
 - Notable Improvements and Bug Fixes
  - Have --package usage respect mypy_path (Aaron Batilo, PR 6926)
  - Support flexible option specification in config files. Now all the flags support invertible forms so that one can specify either strict_optional = False or no_strict_optional = True. This matches how flags work on the command line (PR 7054)
  - Fix reachability inference with isinstance(Any, Any) (Michael Lee, PR 7048)
  - Fix mypyc crash with plugins using get_customize_class_mro_hook() (PR 7075)
  - Fix slicing tuples with non-literal expressions (Ethan Smith, PR 7066)
  - Fixes to column numbers in error messages (PR 7078, PR 7081)
  - Make Need type annotation for variable error more consistent (PR 7079, PR 7113)
  - Fix error reporting context for missing generic type arguments (PR 7100)
  - Use only directories containing no __init__.py as namespace packages (Arne Welzel, PR 7108)
  - Support method plugin hooks on union types (PR 6560)
  - Fix some corner cases in --strict-equality (PR 7156, PR 7164)
  - Fix binding of self-types on unions (PR 7152)
  - Add more details for Invalid type errors (PR 7166)
  - Fix custom __init__() in dataclasses (Ryan Gonzalez, PR 7168)
  - Better support for indexing with unions of literal types (Michael Lee, PR 6558) 

-------------------------------------------------------------------
Sun Jun 30 11:35:29 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.711:
 - Revert typeshed PR 2878 (“Define functools.partial as overloaded function instead of its own class”). This caused too many false positive errors in real-world code. (PR 3077)
 - Fix MYPYC_BLACKLIST on Windows. This broke running dmypy on Windows. (PR 7032)

-------------------------------------------------------------------
Thu Jun 20 15:21:45 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- Update to 0.710: too many changes to list here (and there is no
  perfect changelog), but all information is on
  http://www.mypy-lang.org/
- update 0003-Pass-executable-path-into-main-when-running-installe.patch

-------------------------------------------------------------------
Sun Apr  7 19:31:15 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- Update to 0.700: too many changes to list here (and there is no
  perfect changelog), but all information is on
  http://www.mypy-lang.org/

-------------------------------------------------------------------
Thu Feb 14 17:46:05 CET 2019 - Matej Cepl <mcepl@suse.com>

- Update to 0.670: too many changes to list here (and there is no
  perfect changelog), but all information is on
  http://www.mypy-lang.org/
- Remove already included patches
  0001-Look-for-typeshed-in-usr-share.patch and
  0002-Canonicalize-bin_dir-when-looking-for-data_dir.patch

-------------------------------------------------------------------
Tue Aug 28 07:41:53 UTC 2018 - mimi.vx@gmail.com

- desinglespec - is app and only for python3
- add RH patchset:
  0001-Look-for-typeshed-in-usr-share.patch
  0002-Canonicalize-bin_dir-when-looking-for-data_dir.patch
  0003-Pass-executable-path-into-main-when-running-installe.patch

-------------------------------------------------------------------
Mon Aug 27 10:38:25 UTC 2018 - mimi.vx@gmail.com

- update to 0.620
- fix install deps
  * support for dataclasses
  * better support for PEP 561
  * adds support for dmypy run and a host of other small 
  * many other imporvents

-------------------------------------------------------------------
Mon Jul  2 11:15:53 UTC 2018 - tchvatal@suse.com

- Drop dependency over devel python package, not needed
- Do not skip build on < 3.4 python, we do not ship that anywhere
  (last seen on 13.1)

-------------------------------------------------------------------
Sat Apr 14 11:48:34 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.590:
 * New Features
  * experimental support for PEP 561
  * Incremental mode is on by default
  * Flags for always true/false
  * Add a per-module follow_imports_for_stubs options
 * Notable Bugs Fixed
  * Fix error message when assigning to read-only property (PR 4863 by Michael Lee, fixes issue 4756)
  * Respect --follow-imports=silent in --warn-unused-ignores (PR 4857, fixes issue 3949)
  * Don't produce spurious “unused type ignore” messages in incremental mode (PR 4841, fixes issue 2960)
  * Fix operator access on Type[...] (PR 4823, fixes issue 4789)
  * Remove incorrect override check on overloaded methods (PR 4810 by Michael Lee, fixes issue 4565)
  * Handle NotImplemented returned from __ne__ (PR 4770 by Peter Ludemann, fixes issue 4767)
  * Options in mypy.ini should be spelled with underscores, not hyphens (PR 4754 by Emil Hessman, fixes issue 4753) 
 * Documentation Improvements
  * Add coroutines to cheat sheet (PR 4677 by Rob Day)
  * Add None return/strict-optional to common issues (PR 4594 by Viet Hung Nguyen)
  * Mention that SupportsInt and friends don't support arithmetic (PR 4781, fixes issue 4758) 
 * Stubgen Improvements
  * Emit Any type annotations for unannotated arguments (PR 4774 by Matt Gilson, fixes issue 4766)
  * Fix stubgen --recursive to only generate stubs for requested submodules. (PR 4845 by Matt Gilson, fixes issue 4844)
  * Properly format Callables (PR 4650 by Evan Hubinger, fixes issue 4640) 

-------------------------------------------------------------------
Fri Mar 23 19:57:09 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.580:
 * Type check class decorators
 * Plugin for typechecking classes generated by attrs (Documentation)
 * Hooks into the semantic analyzer for plugins (PR 4328, PR 4397)
 * bugfixes and improved error messages

-------------------------------------------------------------------
Fri Mar  2 20:29:36 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.570:
 * Add support for attrs_package

-------------------------------------------------------------------
Sat Dec 16 08:54:28 UTC 2017 - sebix+novell.com@sebix.at

- update to version 0.560:
 * Iterable and Friends Are Now Protocols
 * Improved Error Messages
- include compiled docs in package

-------------------------------------------------------------------
Sat Nov 11 10:20:44 UTC 2017 - sebix+novell.com@sebix.at

- fix build for distributions with python 3.4

-------------------------------------------------------------------
Fri Nov 10 21:01:21 UTC 2017 - sebix+novell.com@sebix.at

- update to 0.550:
 * Running mypy now requires Python 3.4 or higher.
   However Python 3.3 is still valid for the target
   of the analysis (i.e. the `--python-version` flag).
 * Split `--disallow-any` flag into `separate boolean flags <disallow-any>`.
 * The `--old-html-report` flag was removed.

-------------------------------------------------------------------
Sat Oct 21 20:44:08 UTC 2017 - sebix+novell.com@sebix.at

- update to 0.540
 * Switch to More Rapid Releases
   new mypy version roughly every 2-4 weeks
 * New Features
  * Allow assignments to multiple targets from union types (Ivan Levkivskyi, PR 4067)
  * Allow definitions of subscripted type aliases such as Item = Tuple[int, str] within functions (Ivan Levkivskyi, PR 4000)
  * Narrow type of optional left operand of in operator if the collection items aren’t optional (Ivan Levkivskyi, PR 4072)
  * Generate an error if <unknown> type would be inferred for a variable (PR 4112) 
 * Notable Bugs Fixed
  * Fix errors not being reported for some modules with incremental mode by deleting cache file for a module if errors are found (Ivan Levkivskyi, PR 4045)
  * Fix incremental mode crash related to Type[...] types (Ivan Levkivskyi, PR 4038)
  * Fix crash related to tuple types (Ivan Levkivskyi, PR 4051)
  * Fix incorrect errors about __getattr__ methods (Ivan Levkivskyi, PR 4073)
  * Fixes to non-method attributes with callable types (Elazar Gershuni, PR 4016)
  * Fix function overloading based on Type[...] types (Ivan Levkivskyi, PR 4037)
  * Fix processing invalid overloaded function definitions (Elazar Gershuni, PR 4064)
  * Fix handling of disallow_any/disallow_untyped_defs combination in mypy config file (Jelle Zijlstra, PR 4076) 

-------------------------------------------------------------------
Wed Aug  9 15:57:18 UTC 2017 - sebix+novell.com@sebix.at

- fix shebang removal

-------------------------------------------------------------------
Thu Jul 27 08:32:18 UTC 2017 - sebix+novell.com@sebix.at

- update to 0.521
 * Mypy Bugs Fixed
  * Fix crash on name collision for self attributes (Ivan Levkivskyi, PRs 3700 and 3719)
  * Fix bug in cache updates and improve cache logging (PR 3708)
  * Fix per-file strict Optional interaction with default-None args (PR 3686)
  * Fix crash in --quick mode when aliases are re-exported (Ivan Levkivskyi, PR 3740)
  * Fix crash on incompatible redefinition in named tuple (Ivan Levkivskyi, PR 3760) 
 * Typeshed Bugs Fixed
  * Fix regressions in csv.DictReader (Thomas Grainger, PRs 1475 and 1478) 

-------------------------------------------------------------------
Sat Jul 15 20:02:55 UTC 2017 - sebix+novell.com@sebix.at

- upgrade to 0.520
 * Add :ref:`fine-grained control of Any types <disallow-any>`.
 * Add :ref:`typeddict`.
 * Other updates to :ref:`command-line`:
  * Add --no-implicit-optional.
  * Add --shadow-file.
  * Add --no-incremental.

-------------------------------------------------------------------
Thu Jul  6 12:52:52 UTC 2017 - sebix+novell.com@sebix.at

- correct shebangs of typeshed libs
- fix build for older versions

-------------------------------------------------------------------
Thu Jul  6 00:57:25 UTC 2017 - jengelh@inai.de

- Enhance description by some more text from the webpage.

-------------------------------------------------------------------
Tue Jun 27 20:25:36 UTC 2017 - sebix+novell.com@sebix.at

- use python singlespec approach marking as uncompatible with python2

-------------------------------------------------------------------
Mon May  8 11:16:50 UTC 2017 - sebix+novell.com@sebix.at

- first package

