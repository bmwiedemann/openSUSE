<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>3228dc44625353f9a41684e623ebacf4</srcmd5>
    <version>1.3.2</version>
    <time>1485511151</time>
    <user>dimstar_suse</user>
    <comment>send in reviewed version</comment>
    <requestid>437910</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>7085ea0eee736d8776b29ce4dadc84b3</srcmd5>
    <version>1.4.0</version>
    <time>1485682874</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.4.0:
  * Allow setting the intermediate format for chains, instead of
    hardcoding it at 16-bit RGBA; advanced users can use this to
    e.g. ask for 8-bit sRGB intermediates, reducing the amount of
    memory bandwidth needed at the cost of reduced precision.
    Whether this is a good tradeoff or not depends on the exact
    chain and your requirements.
  * Fix an issue where a (cached) shader program could be used
    from multiple threads at a time, causing the uniforms to
    contain unpredictable values.
  * Make the error printed on check_error() slightly friendlier:
    Include the enum if possible, and print it to stderr instead
    of stdout.</comment>
    <requestid>453048</requestid>
  </revision>
  <revision rev="3" vrev="2">
    <srcmd5>714b300a5371b0119db4af50ed0e3682</srcmd5>
    <version>1.4.0</version>
    <time>1489345224</time>
    <user>dimstar_suse</user>
    <comment>- Remove googletest dependency because tests can not be run without an X display
- Drop movit-1.2.0-use-gtest-shared-library.patch</comment>
    <requestid>476825</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>d49f7850144ea9bff141b5f2bfb8c1dc</srcmd5>
    <version>1.5.0</version>
    <time>1490707371</time>
    <user>maxlin_factory</user>
    <comment>- Update to 1.5.0:
  * Support interleaved Y'CbCr input (4:4:4 in a single texture).
  * Support 10-bit and 12-bit Y'CbCr, both for input and output.
  * Limited support for having multiple Y'CbCr outputs from a
    chain.
  * Allow changing the Y'CbCr output coefficients runtime, i.e.
    after finalize.
  * Fix an issue where the last pass would have been rendered with
    the sRGB flag set, which confused Qt applications running in
    certain NVIDIA configurations.</comment>
    <requestid>482774</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>575e2373d1e5e0cb7a43eb7597cbc186</srcmd5>
    <version>1.5.1</version>
    <time>1496681431</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.5.1:
  * Allow YCbCrInput to change input format after finalize.
  * Some minor YCbCrInput bugfixes.</comment>
    <requestid>501032</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>fede4babad095c2503b49bc906ae3185</srcmd5>
    <version>1.5.2</version>
    <time>1499754491</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.5.2:
  * The texture generation for ResampleEffect (when the size is
    changed) now uses less CPU.
  * Work around an NVIDIA driver threading bug by aggressively
    caching VAOs.
  * Update soname to libmovit.so.7.
- Remove call to autogen.sh as we don't patch Makefile.in anymore.</comment>
    <requestid>509300</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>f6758e77554597201edbb98feba65954</srcmd5>
    <version>1.5.2</version>
    <time>1499880967</time>
    <user>dimstar_suse</user>
    <comment>- Use gcc6-c++ for Leap42 and SLE12 (C++14 needed).</comment>
    <requestid>509549</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>b1c6374b4c78c253ca7357174a39e720</srcmd5>
    <version>1.5.3</version>
    <time>1502562483</time>
    <user>maxlin_factory</user>
    <comment>- Update to 1.5.3:
  * Various bugfixes.
- Don't use gcc6-c++ for Leap anymore: It builds fine with default
  compiler again.</comment>
    <requestid>516107</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>05256366aaa294a99e79b00468ec9c42</srcmd5>
    <version>1.6.0</version>
    <time>1517234304</time>
    <user>dimstar_suse</user>
    <comment>- Fix build for Leap 42.3: Force use of GCC7.

- Update to version 1.6.0: 
  * Support for effects that work as compute shaders. Compute
    shaders are generally slower than fragment shaders for the same
    algorithm, but allow some forms of communication between shader
    invocations and have more flexible output, which can enable
    more efficient algorithms. See effect.h for more details. Note
    that the fastest rendering API on EffectChain is now to a
    texture if possible, not to an FBO. This will only matter if
    the last effect is a compute shader.
  * Movit now includes a compute shader implementation of
    DeinterlaceEffect, which is automatically used instead of the
    fragment shader implementation if your GPU and OpenGL driver
    supports it (in practice, this means on all platforms except on
    macOS). The compute shader version is typically 20â€“80% faster
    than the fragment shader version, depending on your GPU and
    other factors.
    A compute shader implementation of ResampleEffect was written but
    ultimately failed to be faster, and so is not included.
  * Support for microbenchmarks of effects through the Google
    microbenchmarking framework (optional). Currently,
    DeinterlaceEffect and ResampleEffect has benchmarks; enable
    them by running the unit test with --benchmark (also try
    --benchmark --help).
  * Effects can now explicitly request _not_ to have mipmaps, which
    means they can do so without needing to request bounce and
    fiddling with the sampler state. Note that this is an API
    change for effects.
  * Movit now requires C++11, both to build and to #include the</comment>
    <requestid>570363</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>9f4a88bc46369621f848a94b45960234</srcmd5>
    <version>1.6.1</version>
    <time>1517824369</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>572405</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>8fbd03537baab34ee6f248fcc475c6d5</srcmd5>
    <version>1.6.2</version>
    <time>1521499216</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>588706</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>0cefefee178cb1de8d76aae5efda88d5</srcmd5>
    <version>1.6.3</version>
    <time>1563018631</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.6.3:
  * Various bugfixes.
- Add _service file to retrieve sources as published tarball lacks
  some files (e.g. COPYING).</comment>
    <requestid>714921</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>f3ccc3425458d2c6ec54ea5745cdbc4b</srcmd5>
    <version>1.7.0</version>
    <time>1689614610</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1098845</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>488b98a25032a355c9d450f297bf157b</srcmd5>
    <version>1.7.1</version>
    <time>1690370604</time>
    <user>anag+factory</user>
    <comment>- Update to version 1.7.1: Fix a bug when compiling in shaders,
  that could cause errors with certain shader compilers.</comment>
    <requestid>1100170</requestid>
  </revision>
</revisionlist>
