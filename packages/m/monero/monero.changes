-------------------------------------------------------------------
Tue Apr  6 08:42:10 UTC 2021 - Martin Pluskal <mpluskal@suse.com>

- Cleanup spec file with spec-cleaner
- Drop static libraries and html documentation 
- Adjust _constraints

-------------------------------------------------------------------
Thu Jan 21 01:53:51 UTC 2021 - nopeinomicon@posteo.net

- Update to version 0.17.1.9:
  * storages: overridable limits for loading portable_storage from binary
  * epee: also limit number of strings in portable_storage
  * add a max levin packet size by command type
  * blockchain: lock access to m_blocks_hash_of_hashes
  * protocol: handle receiving a block hash we've not added yet
  * build: prepare v0.17.1.9
  * portable_storage: better sanity checking
  * portable_storage: forbid unnamed sections
  * protocol: more sanity checks in new chain block hashes
  * portable_storage: check object limit where appropriate
  * p2p: fix deadlock banning while updating peer lists
  * protocol: don't reset last request time on an idle timer
  * Add aggressive restrictions to pre-handshake p2p buffer limit
  * Command max_bytes moved from dynamic map to static switch
  * Restrict duplicate keys in epee binary format

-------------------------------------------------------------------
Sat Jan 02 11:38:17 UTC 2021 - nopeinomicon@posteo.net

- Add "-DARCH=default" to cmake build args to fix boo#1180472 (https://bugzilla.opensuse.org/show_bug.cgi?id=1180472)
- Update to version 0.17.1.8:
  * rpc: limit the number of txes for get_blocks.bin
  * ssl: buffered handshake detection
  * portable_storage: remove array element limit
  * protocol: fix false positives dropping peers
  * portable_storage: remove overly aggressive cutoff
  * Revert "Reject existing claimed blocks in sync mode"
  * cryptonote_basic: guess what got lost porting patches to branches again
  * epee: fix some issues using connections after shutdown
  * portable_storage: add some sanity checks on data size
  * protocol: drop nodes if they claim new data but only give stale data
  * rpc: get_info - add 'synchronized' field
  * build: prepare v0.17.1.8
  * restrict public node checks a little
  * ban lists may now include subnets
  * Optional DNS based blocklist
  * rpc: add a busy_syncing field to get_info
  * protocol: reject claimed block hashes that already are in the chain
  * protocol: drop peers we can't download anything from in sync mode
  * Fix byte_stream::put_n
  * daemon: the ban command can now load IPs from a file (ban @filename)
  * p2p: remove peers from grey and anchors lists when blocked
  * p2p: ignore incoming peer list entries when we have them blocked
  * Depends: Bump qt to 5.15.1

-------------------------------------------------------------------
Thu Dec 17 23:16:22 UTC 2020 - Emily Roberts <nopeinomicon@posteo.net>

- Simplify version checking statements in .spec file

-------------------------------------------------------------------
Tue Dec 15 08:29:07 UTC 2020 - nopeinomicon@posteo.net

- Update to version 0.17.1.7:
  * protocol: include first new block in chain entry response
  * protocol: stricter checks on received chain hash list
  * protocol: revert incoming chain height check against local chain
  * protocol: one more sanity check on usable data from a peer
  * protocol: fix asking for pruned blocks for v10
  * protocol: drop origin IP if a block fails to verify in sync mode
  * protocol: add a sanity check to the number of block hashes sent
  * cmake: fix "release" version string on tagged releases
  * build: prepare v0.17.1.7
  * protocol: more restrictive checks on chain entry response
  * protocol: fix switchting to adding blocks if noone's adding the next span
  * depends: Update OpenSSL to 1.1.1i

-------------------------------------------------------------------
Tue Dec 08 23:00:59 UTC 2020 - nopeinomicon@posteo.net

- Update to version 0.17.1.6:
  * protocol: drop peers that don't reply to queries
  * p2p: fix race condition accessing a deleted context
  * p2p: drop peers that spam peer lists
  * keep only the last seen node on a given host in the white list
  * protocol: drop peers that decrease claimed height
  * protocol: add scoring system to drop peers that don't behave
  * crypto: fix non zero scalar being 0 after reducing
  * build: prepare v0.17.1.6
  * wallet2: set propagation timeout to current max timeout
  * Add rpc-restricted-bind-ip option
  * Do not use peer_id tracking method over i2p/tor

-------------------------------------------------------------------
Wed Dec 02 06:27:08 UTC 2020 - nopeinomicon@posteo.net

- Transition from tar_scm to obs_scm service
- Update to version 0.17.1.5:
  * cryptonote_core: dandelion - use local height or median height if syncing
  * wallet2: check imported multisig curve points are in main subgroup
  * build: prepare v0.17.1.5
  * rpc: skip non-synced bootstrap daemons in --no-sync mode too
  * rpc: on_send_raw_tx - add missing CHECK_CORE_READY
  * Better log message for unusable anon networks
  * Change Dandelion++ fluff probability to 20%, and embargo timeout to 39s
  * Fix timeout checks for forwarded and Dandelion++ stem txes

-------------------------------------------------------------------
Sat Nov 21 06:08:14 UTC 2020 - nopeinomicon@posteo.net

- Update to version 0.17.1.3:
  * build: prepare v0.17.1.3
  * epee: readline_buffer - fix thread safety, fix sync() after stop()
  * Fix i2p/tor seed nodes
  * p2p: fix accessing non existent element of map
  * p2p: add a tor seed
  * build: prepare v0.17.1.2
  * net_node: add tor / i2p seed nodes
  * p2p: fix endianness when checking IPv6 addresses mapping to IPv4
  * p2p: make this work with boost <= 1.65 (pffff)
  * p2p: rewrite boost's make_address_v4 to cater for < 1.66
  * p2p: use /16 filtering on IPv4-within-IPv6 addresses
  * protocol: reject empty incoming block messages
  * rpc: on_send_raw_tx (bootstrap) - send to bootstrap daemon and P2P
  * p2p: remove banned peers from the white list
  * p2p: give all hosts the same chance of being picked for connecting
  * net_node: add --ban-list option
  * Fix CLI and unrestricted RPC relay_tx with stempool
  * Fix tx flush callback queueing
  * Add support for i2p and tor seed nodes
  * Switch to Dandelion++ fluff mode if no out connections for stem mode

-------------------------------------------------------------------
Thu Nov 05 06:45:02 UTC 2020 - Emily Roberts <nopeinomicon@posteo.net>

- Removed all patches as package builds correctly without them
- Removed architecture restrictions in .spec file
- Update to version 0.17.1.1:
  * build: prepare v0.17.1.1
  * wallet2: wait for propagation timeout before marking tx as failed
  * bump default number of connections from 8 to 12
  * Allow setting start block on export
  * wallet2_api: implement stop() to interrupt refresh() loop once
  * blockchain: fix sync at v14 boundary
  * Force CMAKE_SKIP_RPATH=ON
  * core_rpc_server: on_get_blocks - forward bootstrap daemon error
  * build: prepare v0.17.1.0
  * Dandelion++: skip desynced peers in stem phase
  * wallet2: fix missing m_state field in wallet serialization
  * tx_pool: silence spammy harmless warning till we fix the bug
  * fix next_seed_height regression in getblocktemplate rpc
  * Fix lgamma/signgam dependency
  * cmake: Version - use CMAKE_CURRENT_LIST_DIR
  * cmake: CheckTrezor - use ${CMAKE_CURRENT_LIST_DIR} to locate tests
  * link libzmq against libgssapi_krb5 if found
  * build: prepare v0.17.0.1
  * fix a couple bugs found by OSS-fuzz
  * daemon: Windows - fix FAT32 warning, trailing backslash is required
  * wallet2: adapt to deterministic unlock time
  * blockchain: deterministic UNIX time unlock checks
  * simplewallet fix wrong persistent-rpc-client-id name in help
  * build: prepare v0.17
  * Remove unused macros from cryptonote_config.h
  * wallet2: fix tx sanity check triggering on pre-rct outputs
  * Fix typo in command line argument description
  * blockchain: fix pow skipping for old blocks without precalc hash
  * rpc: assume randomx from v13 onwards
  * Revert "unbound: update to get build fixes"
  * unbound: update to get build fixes
  * Let stagenet hardfork happen before mainnet.
  * enable CLSAG support for Trezor client
  * hardforks: add v13/v14 for testnet
  * update error message "No unlocked balance in the specified account"
  * threadpool: guard against exceptions in jobs, and armour plating
  * net: fix get_tcp_endpoint, boost address_v4 ip in host byte order
  * Bind signature to full address and signing mode
  * wallet: allow signing a message with spend or view key
  * Made spelling, grammar, and punctuation changes. Squashed commits into one as requested.
  * ringct: fix CLSAG serialization after boost/epee changes
  * Fix send scalar z in plaintext
  * Update minimal Ledger Monero app version
  * Update protocol version with Ledger's HW
  * core_tests: fix failures after v13
  * core_tests: remove hardcoded hf version
  * functional_tests: add a large (many randomx epochs) p2p reorg test
  * functional_tests: add randomx tests
  * core: fix mining from a block that's not the current top
  * draft support of clsag
  * CLSAG device support
  * Added balance check to MLSAG/CLSAG performance tests
  * Updated MLSAG and CLSAG tests for consistency
  * CLSAG verification performance test
  * CLSAG optimizations
  * Integrate CLSAGs into monero
  * unit_tests: add ge_triple_scalarmult_base_vartime test
  * CLSAG signatures
  * repo: update "sponsor" link
  * supercop: update submodule
  * functional_tests: add p2p functional tests
  * enforce claiming maximum coinbase amount
  * depends: fix broken links for ds_store / mac_alias
  * Fix ZMQ pruned bulletproof transactions
  * Add clear method to byte_stream
  * Revert "Use domain-separated ChaCha20 for in-memory key encryption"
  * replace most boost serialization with existing monero serialization
  * Avoid some temporary strings when reading off the database
  * README: update list of third party monero packages
  * rpc: always send raw txes through P2P (don't use bootstrap daemon)
  * Fix build with Boost 1.74
  * qrcodegen: fix compilation with old gcc, use modern cmake
  * travis: j3 -> j2 on i686-w64-mingw32
  * Change ZMQ-JSON txextra to hex and remove unnecessary base fields
  * Optimize ZMQ-JSON vector reading; GetBlocksFast reads 24%+ faster
  * Switch to insitu parsing for ZMQ-JSON; GetBlocksFast reads 13%+ faster
  * Fix pruned tx for ZMQ's GetBlocksFast
  * simplewallet: allow setting tx keys when sending to a subaddress
  * cryptonote_protocol: don't synced pruned blocks before v11
  * Use domain-separated ChaCha20 for in-memory key encryption
  * Updates InProofV1, OutProofV1, and ReserveProofV1 to new V2 variants that include all public proof parameters in Schnorr challenges, along with hash function domain separators. Includes new randomized unit tests.
  * wallet2: fix setting tx keys when another is already set
  * Fix broken multisig pubkey sorting
  * Tweak format, add option for difficulty
  * epee: further defending against exceptions in command handlers
  * Add options to print daily coin emission and fees
  * Don't forget size of prunable txn part
  * wallet2: fix wrong name when checking RPC cost
  * rpc: reject wrong sized txid
  * easylogging++: fix crash with reentrant logging
  * epee: guard against exceptions in RPC handlers
  * blockchain: guard against exceptions in add_new_block/children
  * rpc: return empty txid get_outs rather than 00..00 when not requested
  * daemon: don't print "(pruned)" for coinbase txes
  * Wallet, daemon: From 'help_advanced' back to 'help', and new 'apropos' command
  * Fix overflow issue in epee:misc_utils::rolling_median_t and median(), with unit test
  * epee: Remove unused functions in local_ip.h
  * wallet2_api: implement runtime proxy configuration
  * wallet2: throw a error on wallet initialization failure
  * For NetBSD, add instructions to README.md and define to ea_config.h
  * tx_pool: mine stem txes in fake chain mode
  * blockchain: fix timestamp/difficulty cache getting out of sync
  * version: update name
  * Update RandomX to v1.1.8
  * cmake: allow custom openssl path on macOS
  * daemon: print sampling time in print_net_stats
  * util: fix kilo prefix typo (K instead of k)
  * updates: mac gui .tar.bz2 -> .dmg
  * add trezor support to sweep_single
  * epee: fix array underflow in unicode parsing
  * simplewallet: add show_qr_code command
  * python-rpc: fix bad in_peers parameter
  * avoid a couple needless copies
  * fuzz_tests: fix init check in oss-fuzz mode
  * Do not use PIE with OSS-Fuzz
  * fix leaks in fuzz tests
  * fuzz_tests: add a tx extra fuzz test
  * Fix D++ block template check
  * repo: update donation fund address
  * daemon: guard against rare 'difficulty drift' bug with checkpoints and recalculation
  * workflows: update msys2 setup action v0 -> v1
  * fix warning by removing std::move() on temporary http_client object
  * blockchain: fix total_height in getblocks.bin response
  * rpc: fix loading rpc payment data from file
  * Mention correct libusb and libudev dependencies
  * README: mention pruning
  * Fix boost <1.60 compilation and fix boost 1.73+ warnings
  * rpc: fix comparison of seconds vs microseconds
  * miner: increase min/max intervals to full extents
  * functional_tests: add simple relay_tx test
  * rpc: fix relay_tx error return mixup
  * Fix incorrect lenght of command INS_PREFIX_HASH
  * tests: fix missing error on missing python entry point
  * python-rpc: add missing sync_txpool python entry point
  * daemon: remove time based "update needed" status string
  * cmake: insert CMAKE_CURRENT_SOURCE_DIR in CMAKE_MODULE_PATH
  * [master] MMS: New 'config_checksum' subcommand
  * easylogging++: sanitize log payload
  * rpc: don't display invalid json errors on default log level
  * workflows: fix windows build
  * daemon: complain if data dir resides on FAT32 volume (Windows)
  * rpc: add a sanity limit to a few RPC in restricted mode
  * ByteSlice: Fix persisting ptr to std::moved SSO buffer
  * net_node: remove dead seed nodes
  * rpc: lock access to the rpc payment object
  * cryptonote_core: remove "We are most likely forked" message
  * protocol: move the "peer claims higher version" warning to debug
  * fix a few typos in error messages
  * wallet2: fix multisig data clearing stomping on a vector
  * cryptonote_protocol: stricter limit to number of objects requested
  * cryptonote_protocol: reject requests/notifications before handshake
  * testdb: add override in a couple places where it's missing
  * serialization: fix bad rapidjson api usage
  * blockchain: detect and log bad difficulty calculations
  * wallet_rpc_server: use unlock_time in suggested confirmations calc
  * protocol: don't drop a connection if we can't get a compatible chain
  * epee: use memwipe rather than memset for md5 secrets
  * keccak: remove aligned check
  * Support for supercop ASM in wallet, and benchmark for supercop
  * simplewallet: add missing calls to on_command
  * db_lmdb: test for mmap support at init time
  * cmake: ASAN and PIE don't mix
  * fuzz_tests: refactor and add OSS-Fuzz compatibility
  * Add randomized delay when forwarding txes from i2p/tor -> ipv4/6
  * simplewallet: don't complain about incoming payment ids on change
  * libzmq should be libzmq4.
  * [master]: Update gitian yml files
  * build: prepare v0.16.0.0 release
  * blockchain: fix theoretical race getting bulk timestamps
  * Fixed bugs for take_slice and byte_stream->byte_slice
  * remove double includes
  * Update copyright year to 2020
  * systemd: Make sure required folders exist
  * Made ccache optional (opt out) and tidied up the FindCcache.cmake
  * Adding ZMQ/Pub support for txpool_add and chain_main events
  * Update expat.mk
  * performance_tests: some windows fixes
  * Keys: Add key for rbrunner7
  * contrib: remove codefresh pipeline
  * snap: remove from repo

-------------------------------------------------------------------
Mon Sep 14 15:29:12 UTC 2020 - Michał Rostecki <mrostecki@suse.com>

- Add patches which fix the build with Boost 1.73 and 1.74, needed
  for successful build on Leap 15.2 and Tumbleweed:
  * 0001-Fix-boost-1.60-compilation-and-fix-boost-1.73-warnin.patch
  * 0002-Fix-build-with-Boost-1.74.patch

-------------------------------------------------------------------
Wed Aug 05 09:25:47 UTC 2020 - marec@detebe.org

- Update to version 0.16.0.3:
  * Tweak format, add option for difficulty
  * epee: further defending against exceptions in command handlers
  * Add options to print daily coin emission and fees
  * Don't forget size of prunable txn part
  * rpc: reject wrong sized txid
  * easylogging++: fix crash with reentrant logging
  * epee: guard against exceptions in RPC handlers
  * blockchain: guard against exceptions in add_new_block/children
  * build: prepare v0.16.0.3 release

-------------------------------------------------------------------
Wed Jun 24 11:14:33 UTC 2020 - marec@detebe.org

- Update to version 0.16.0.1:
  * add trezor support to sweep_single
  * updates: mac gui .tar.bz2 -> .dmg
  * epee: fix array underflow in unicode parsing
  * build: prepare v0.16.0.1 release
  * tx_pool: mine stem txes in fake chain mode
  * blockchain: fix timestamp/difficulty cache getting out of sync
  * Fix D++ block template check
  * blockchain: fix total_height in getblocks.bin response
  * rpc: fix loading rpc payment data from file
  * rpc: fix comparison of seconds vs microseconds
  * functional_tests: add simple relay_tx test
  * rpc: fix relay_tx error return mixup
  * daemon: remove time based "update needed" status string
  * rpc: don't display invalid json errors on default log level
  * Fix incorrect lenght of command INS_PREFIX_HASH
  * fix typo in pick_preferred_rct_inputs

-------------------------------------------------------------------
Fri May 22 09:42:24 UTC 2020 - marec@detebe.org

- Update to version 0.16.0.0:
  * version: update name
  * rpc: add a sanity limit to a few RPC in restricted mode
  * rpc: lock access to the rpc payment object
  * [release-v0.16] MMS: New 'config_checksum' subcommand
  * ByteSlice: Fix persisting ptr to std::moved SSO buffer
  * cryptonote_core: remove "We are most likely forked" message
  * protocol: move the "peer claims higher version" warning to debug
  * wallet2: fix multisig data clearing stomping on a vector
  * serialization: fix bad rapidjson api usage
  * cryptonote_protocol: stricter limit to number of objects requested
  * cryptonote_protocol: reject requests/notifications before handshake
  * easylogging++: sanitize log payload
  * blockchain: detect and log bad difficulty calculations
  * protocol: don't drop a connection if we can't get a compatible chain
  * simplewallet: help_advanced -> help
  * Revert "simplewallet: noob-friendly help menu"
  * epee: use memwipe rather than memset for md5 secrets
  * build: fix boost 1.73 compatibility
  * simplewallet: don't complain about incoming payment ids on change
  * Fixed bugs for take_slice and byte_stream->byte_slice
  * trezor: add new firmware version support
  * [release-v0.16]: Update gitian yml files
  * build: prepare v0.16.0.0 release
  * cryptonote_core: take out the time based upgrade warning
  * cryptonote_protocol: do not request pruned borromean sig txes
  * wallet2: fix keys file deserialization exception handling
  * txpool.cpp: rename var to fix for old g++ version (xenial default)
  * Fixes for ZMQ JSON-RPC endpoint names for raw tx
  * wallet2: fix subaddress expansion when receiving monero
  * trezor: adapt to new passphrase mechanism
  * message_store: don't print an error when there is no mms file
  * rpc: fix 'use_bootstrap_daemon_if_necessary' return value
  * openssl update
  * wallet2: check_connection return false on get_version status != OK
  * Used legacy category to match insert_key_images behavior
  * Revert functional test changes in babf25d2e and 571546067
  * cryptonote: fix reuse of non default tx data when relaying
  * FindCcache automatically
  * add another seed node
  * simplewallet: report timestamp based expected unlock time on balance
  * Add erciccione's seed node
  * p2p: startup speedup, init seed nodes on first 'connect_to_seed()'
  * p2p: add seed node.
  * cryptonote_core: skip dns checkpoints on startup if not enforced
  * unit_tests: fix gcc+ warning
  * workflows: add trezor support ubuntu
  * bootstrap_daemon: fix missing virtual destructor and lambda capture (clang warning)
  * Allow wallet2.h to run in WebAssembly
  * use memwipe on secret k/alpha values
  * Bulletproofs: verification speedup
  * simplewallet: add sweep_account command
  * Add byte_stream for zero-copy serialization, and add support in ZMQ-JSON.
  * simplewallet : missing function block separator
  * simplewallet: fix strings (show_transfers & export_transfers)
  * Add timelock verification on device
  * simplewallet: new "address one-off <major> <minor>" command
  * functional_tests: ensure signatures never reuse a timestamp
  * functional_tests: ensure signed timestamps are fresh
  * Use byte_slice for sending zmq messages - removes data copy within zmq
  * wallet_api: checkUpdate - optional version and buildtag params
  * update openssl 1.0.2r link
  * Hash domain separation
  * workflows: retry on apt failure
  * cryptonote_basic: drop unused verification_context::m_not_rct field
  * p2p: fix frequent weak_ptr exception on connection
  * Always reject duplicate key-images from second txid
  * Allow unrestricted rpc calls to get full txpool info
  * Fixed string_ref usage bug in epee::from_hex::vector
  * daemon: fix print_net_stats RPC calls
  * Fix network unit tests after epee changes
  * simplewallet: warn about correlations if print-ring-members is not set
  * p2p: add another seed node
  * Adding Dandelion++ support to public networks:
  * functional_tests: speed up signature generation
  * functional_tests: update cookie at 10 seconds interval
  * protocol: request txpool contents when synced
  * Daemon: Print estimates for time until fully synced
  * p2p: remove old debug commands
  * depends: update qt 5.7.1 download link
  * depends: libsodium disable getrandom()/getentropy() (glibc < 2.25)
  * p2p: do not add recently failed addresses to the peerlist
  * Fixing static_asserts in ZMQ JSON
  * Correct key image check in tx_pool
  * workaround for GetObject windows.h macro and rapidjson conflict
  * epee: avoid spamming 'Generating SSL certificate' in the logs
  * README: clean up TOC
  * core: move the LockedTXN class out of txpool so it may be reused
  * rpc: add --rpc-payment-allow-free-loopback
  * db_lmdb: fix race crash using a stale cursor
  * easylogging++: fix 'ELPP_OS_EMSCRIPTEN is not defined' warning
  * Use boost::asio::ssl::context::sslv23 for backwards compatibility
  * Bump downloaded boost version to 1.72
  * Fix receive order leakage with tx fluffing
  * Reduce template bloat in hex->bin for ZMQ json
  * Move hex->bin conversion to monero copyright files and with less includes
  * Remove temporary std::string creation in some hex->bin calls
  * p2p: plug tor to clearnet association vector
  * wallet2: remember daemon address overrides when loading a new wallet
  * Added logging for dropped local txes with no i2p/tor connections
  * cppzmq: remove leftovers
  * Various improvements to the ZMQ JSON-RPC handling:
  * device: Ledger - fix wide char hidapi error string conversion
  * daemon: auto public nodes - cache and prioritize most stable nodes
  * blockchain_db: faster fetching of consecutive txes
  * Provides safer semaphore privilege to jail; notes port/pkg availability
  * workflows: fix macOS build
  * daemon: if no banned IPs print something
  * workflows: log test output on failure
  * cryptonote_core: skip block notify on blockchain switching rollback
  * unit_tests: fix missing test names
  * remove empty statements
  * rpc: Add check for too old timestamps in payment signatures.
  * simplewallet: fix smart mining not starting after first setup
  * wipeable_string: split - treat CR, LF and Tabs as separators
  * tx_pool: catch theoretical error in get_block_reward
  * threadpool: lock mutex in create
  * console_handler: do not let exception past the dor
  * wallet2_api: wallet recovery - seed offset passphrase support
  * core: mention time being off in hash rate changes message
  * rpc: fix print_pool_sh not finding local txes
  * device_ledger: include status code name in error message
  * wallet2: mention --daemon-ssl-allow-any-cert in --proxy error msg
  * workflows: windows j3 -> j2
  * gpg_keys: add selsta key
  * miner: use verification mode for low diff one block nonce searches
  * workflows: add libwallet compile check
  * p2p: fix spurious warning when we're connected to at last one seed
  * p2p: remove obsolete local time in handshake
  * p2p: avoid sending the same peer list over and over
  * Translations from Weblate + updated language files
  * Explicitly define copy assignment operator
  * epee: remove backward compatible endian specific address serialization
  * p2p: remove backward compatible peer list
  * p2p: simplify last_seen serialization now we have optional stores
  * cryptonote_protocol: omit top 64 bits of difficulty when 0
  * serialization: do not write optional fields with default value
  * p2p: remove obsolete local time from TIMED_SYNC
  * network: log traffic and add a simple traffic analysis script
  * wallet: do not split integrated addresses in address book api
  * wallet2_api: implement estimateTransactionFee
  * wallet2: fix store-tx-info loading
  * fix tests bug added in #6110
  * net: fix incorrect less operator for top/i2p addresses
  * [randomx] Add missing randomx_vm_set_cache()
  * workflows: add build and test workflow
  * wallet2: reject zero keys in json input
  * wallet: reroll fake outs selection on local tx_sanity_check failure
  * build: autodetect MSYS2 install path, support non-standard location
  * Wallet: Distingush amounts for a single subaddress
  * gitian-build.py: Fixing check for docker command.
  * Daemon: Guard against reporting "synchronized" too early
  * ringdb: use a different iv for key and data in rings table
  * simplewallet: reword mixin in user message in terms of ring size
  * wallet2: do not remove known rings when a tx fails
  * README: remove unmaintained build status
  * Fix check_fee() discrepancy.
  * p2p: fix off by one adding fallback peers
  * Gitian: Change lxc ip link
  * 10 block time is for incoming outputs, not transactions
  * p2p: fix adding wrong indices to the filtered peer list
  * wallet: allow message sign/verify for subaddresses
  * wallet: fix exceptions getting the hash of a pruned tx
  * rpc: fill miner_tx_hash again
  * depends: empty spaces in PATH variable cause build failure
  * GPGKey: Add Snipa
  * depends: set several missing build tags
  * p2p: drop the peerlist dump to TRACE
  * README: fix translation link
  * wallet2: guard against race with multiple decrypt_keys users
  * abstract_tcp_server2: guard against negative timeouts
  * rpc: drop the obsolete and wrong "unpruned size" log
  * wallet-cli/rpc: allow sweep_all to use outputs in all subaddresses within an account
  * Corrected message typo
  * wallet2: fix hang in wallet refresh
  * blockchain: fix flushing txes from the txpool
  * add binaryFate's PGP key
  * depends: update libsodium to 1.0.18
  * print_coinbase_tx_sum now supports 128 bits sums
  * Silence miner debugmsg spam
  * simplewallet: warn on refresh if refresh-from-block-height seems off
  * simplewallet: set manual refresh mode in rescan_bc
  * Fix time comparison math
  * --disable-ban-rpc option to prevent RPC users from banning
  * ssl: server-side: allow multiple version of TLS
  * simplewallet: fix output age display with duplicate heights
  * simplewallet: fix "outputs in same tx" detector
  * rpc: add bad-blocks to flush_cache RPC
  * easylogging++: add emscripten support
  * Add travis freebsd
  * remove unused variable 'ptx' from on_describe_transfer()
  * unit_tests: remove invalid bulletproofs unit test
  * daemon: run with -rpc-payment-address and --rpc-restricted-bind-port
  * simplewallet: fix encrypted payment id note triggering on dummy ones
  * wallet2: better error when restoring a wallet with the wrong keys
  * rpc: error out from get_info if the proxied call errors out
  * make_test_signature: exit nicely on top level exception
  * node_rpc_proxy: init some new rpc payment fields in invalidate
  * rpc: init a few missing client_info members
  * rpc: do not propagate exceptions out of a dtor
  * rpc: always set the update field in update on sucess
  * net_ssl: load default certificates in CA mode on Windows
  * download: catch exceptions checking for size
  * update readme to encourage joining #monero-dev
  * rpc: fix bootstrap RPC payment RPC being made in raw JSON, not JSON RPC
  * epee: reorder a couple init list fields to match declaration
  * simplewallet: point to "set help" in the lock screen message
  * util: allow newlines in string to be split
  * updates: fix source code URL on _WIN32
  * ANONYMITY_NETWORKS.md : fix unintentional wrapping
  * rpc: don't auto fail RPC needing payment in bootstrap mode
  * rpc: add received_timestamp for pool txes in gettransactions
  * wallet_rpc_server: add count parameter to create_address
  * Add TheCharlatan pgp key
  * Gitian: Fix sigs generation
  * add xiphon's GPG key
  * db_lmdb: guard against non NUL terminated keys
  * make d2h et al. constant-time
  * wallet: don't issue node rpc proxy requests in '--offline' mode
  * p2p: don't request flags after closing connection
  * Fixed bug in ZMQ JSON-RPC method field
  * "Fix" non-determinism in native_cctools build
  * Fix #6147 DB corruption from child process overwrite
  * Fixup compiled python in OSX
  * Fix unwind library ordering
  * Fixup sodium darwin
  * Use standard time for depends caches
  * Add ARFLAGS
  * Add __pycache__ directory to .gitignore
  * epee: set application/json MIME type on json errors
  * threadpool: use std::move when taking an element off the queue
  * blockchain: speedup fetching pruned contiguous tx blobs
  * translations: fix "monero_" prefix when taking languages from file
  * translations: find lrelease disguised as lrelease-qt5
  * wallet: set non-empty error string on connection failure
  * epee: fix peer ids being truncated on display
  * Actually concatenate error strings.
  * gitian: add FreeBSD
  * depends: Add FreeBSD support
  * gitian: Parametrize target platforms
  * simplewallet: fix restore height warning
  * Replace memset with memwipe.
  * perf_timer: fix pause/resume macros dereferencing too much
  * tests: fix HF12 chaingen - construct bc object from events
  * simplewallet: noob-friendly help menu
  * rpc: Only show version string if it matches expected pattern
  * daemon: Use rpc for "version" command
  * epee: fix console_handlers_binder race, wait for thread to finish
  * blockchain: error out if the builtin hashes data size is wrong
  * epee: close connection when the peer has done so
  * p2p: zero last seen timestamp when inserting a new peer
  * gitian: Update to latest gitian-builder
  * Gitian Readme: adding android signing & fix v0.15 checksum.
  * core_tests: reset thread pool between tests
  * build: fix IOS, build blockchain_db and rpc, skip wallet_rpc_server
  * wallet_rpc_server: new estimate_tx_size_and_weight RPC
  * wallet2: don't try to lock an empty filename
  * wallet_rpc_server: add tx weight in transfer commands responses
  * Fixes a minor formatting error
  * wallet2: fix pool txes not being flushed when mined
  * daemon: allow printing N blocks from the end of the chain
  * daemon: add +meta print_tx parameter
  * blockchain_stats: make it work on pruned blockchains
  * lmdb: Remove meaningless const qualifier on function type
  * gitian: fix out dir location
  * Change to Tx diffusion (Dandelion++ fluff) instead of flooding
  * Copy LICENSE to all archives
  * Improved performance for epee serialization:
  * depends: fix typo in packages
  * gitian: add --rebuild option
  * Add Android support
  * Adding support for hidden (anonymity) txpool
  * 0.15.0.0 release engineering
  * simplewallet: plug a timing leak
  * Add a --keep-fakechain option to keep fakechain databases
  * epee: allow a random component in once_a_time timeouts
  * wallet: reuse cached height when set after refresh
  * wallet2: fix is_synced checking target height, not height
  * wallet: fix another facet of "did I get some monero" information leak
  * wallet2: do not send an unnecessary last getblocks.bin call on refresh
  * simplewallet: add missing inactivity-lock-timeout to set help blurb
  * simplewallet: do not mention inactivity if a lock was manual
  * wallet2: do not repeatedly ask for pool txes sent to us
  * README update upgrade table with details
  * Updating gitian yml files for v0.15
  * cryptonote: untangle dependency from miner to blockchain
  * README: add Void Linux package dependencies
  * RandomX: Update to v1.1.6
  * core_tests: remove some useless verbose logs
  * unit_tests: fix use after free
  * wallet2: make keys unlocker reentrant
  * python-rpc: add missing strict_balances parameter for get_accounts
  * blockchain: fix comment wrongly refering to SHA-3 rather than Keccak
  * daemon: handle printing higher hash rates
  * always print peer IDs in the same format
  * tx_pool: fix error message assuming incorrectly
  * daemon: always use bootstrap daemon (if set) in '--no-sync' mode
  * Updated paper references
  * core: point out when we hit the block rate visibility limit
  * Minor prover simplification
  * blockchain: fix unwanted error when probing the pool for a tx
  * functional_tests: ensure mining stops on error in mining test
  * rpc: base flush_cache request/response on the new base structs
  * wallet: do not warn if the rpc cost was free
  * easylogging++: add screen.xterm-256color to the "allow colour" TERM list
  * simplewallet: remove remaining payment id dead code

-------------------------------------------------------------------
Tue Mar 10 18:22:23 UTC 2020 - marec@detebe.org

- Update to version 0.15.0.5:
  * depends: set several missing build tags
  * p2p: plug tor to clearnet association vector
  * Added logging for dropped local txes with no i2p/tor connections
  * build: prepare v0.15.0.5 update
  * depends: update libsodium to 1.0.18
  * wallet: fix exceptions getting the hash of a pruned tx
  * Fixed string_ref usage bug in epee::from_hex::vector
  * Fixed bug in ZMQ JSON-RPC method field

-------------------------------------------------------------------
Tue Nov 19 17:33:20 UTC 2019 - marec@detebe.org

- Update to version 0.15.0.1:
  * make d2h et al. constant-time
  * v0.15.0.1 version bump
  * "Fix" non-determinism in native_cctools build
  * Fix #6147 DB corruption from child process overwrite
  * Fixup compiled python in OSX
  * Fix unwind library ordering
  * Fixup sodium darwin
  * Use standard time for depends caches
  * Add ARFLAGS
  * gitian: add FreeBSD
  * depends: Add FreeBSD support
  * gitian: Parametrize target platforms
  * gitian: Update to latest gitian-builder
  * wallet: set non-empty error string on connection failure
  * epee: close connection when the peer has done so
  * wallet2: fix pool txes not being flushed when mined

-------------------------------------------------------------------
Mon Nov 04 18:22:30 UTC 2019 - marec@detebe.org

- Update to version 0.15.0.0:
  * [v0.15] gitian: fix out dir location
  * Copy LICENSE to all archives
  * depends: fix typo in packages
  * gitian: add --rebuild option
  * Add Android support
  * Fix readline build
  * Merge pull request #6079
  * simplewallet: plug a timing leak
  * epee: allow a random component in once_a_time timeouts
  * wallet: reuse cached height when set after refresh
  * wallet2: fix is_synced checking target height, not height
  * wallet: fix another facet of "did I get some monero" information leak
  * wallet2: do not send an unnecessary last getblocks.bin call on refresh
  * Merge pull request #6059
  * wallet2: do not repeatedly ask for pool txes sent to us
  * README update upgrade table
  * unit_tests: fix use after free
  * cryptonote: untangle dependency from miner to blockchain
  * daemon: always use bootstrap daemon (if set) in '--no-sync' mode
  * RandomX: Update to v1.1.6
  * blockchain: fix unwanted error when probing the pool for a tx
  * wallet: do not warn if the rpc cost was free
  * CMake build out of source
  * rpc: fix PRIx64 build error on some systems
  * functional_tests: fix rpc_payment tests with python 3
  * python-rpc: add missing daemon RPC
  * revert changes to translations
  * rpc: add a flush_cache RPC
  * tx_pool: fix divide by 0 in log
  * Translations from weblate + resync
  * device: bounds checking in Ledger send_secret/receive_secret
  * net: link with libzmq
  * simplewallet: add public_nodes command
  * daemon, wallet: new pay for RPC use system
  * depends: bump zeromq version to 4.1.7
  * Change monerod --proxy to --tx-proxy
  * depends: bump cppzmq version to 4.4.1
  * changed 'batttery' to 'battery'
  * Windows: enable high-entropy ASLR where available
  * build: fix building on Windows due to _FORTIFY_SOURCE changes in MSYS2
  * rpc: Include tag in get_info version string
  * gen_ssl_cert: new tool to generate SSL certs for Monero
  * daemon: print difficulty in decimal, as it used to be
  * easylogging++: windows does not need terminal colour support
  * add a quick early out to get_blocks.bin when up to date
  * cmake: Fix generation of version.cpp
  * wallet2: error out when we need a daemon password but have no prompt function
  * wallet2: fix the logged number of detached transfers
  * RandomX: update to v1.1.5
  * epee: use SO_REUSEADDR on non-Windows targets
  * Support median block size > 4 GB
  * epee: fix SSL server handshake, run_one() can block, use poll_one()
  * v12 fork heights
  * daemon: fix coinbase txes always being seen as pruned
  * daemon: add miner tx hash in print_block output
  * utils: Increase max block size for import/export
  * protocol: fix syncing from peers being too choosy about peers
  * db_lmdb: an empty prunable data record means the tx is not pruned
  * blockchain: initialize pow to ff..ff
  * functional_tests: fix transfer test - long payment ids are gone
  * daemon: fix print_pl synopsis missing recent options
  * unit_tests: fix build after rename
  * levin: armour against some "should not happen" case
  * abstract_tcp_server2: move "Trying to connect" from error to debug
  * wallet_rpc_server: don't report integrated addresses for 0 payment ID
  * wallet: remove long payment ID sending support
  * wallet2: ignore received unencrypted payment IDs (but warn hard)
  * simplewallet: reinstate short payment id nag, only if non default
  * node.inl, add xmrchain.net IP to hardcoded peers
  * Add also ifdef __x86_64__
  * RandomX: update to v1.1.4 * Faster cache initialization with SSSE3/AVX2 * Automatic detection of CPU capabilities in RandomX * Fixed a possible out-of-bounds access in superscalar program generator * Use MONERO_RANDOMX_UMASK to manually disable RandomX flags in monerod
  * Fix build on FreeBSD/!x86
  * p2p+rpc: don't skip p2p or rpc port bind failure by default
  * simplewallet: add --restore-from-seed alias
  * simplewallet: don't trigger idle lock right after a foreground refresh
  * blockchain: use effective median block weight for penalty from v12
  * tx_pool: do not divide by 0
  * cryptonote: don't leave block_weight uninitialized
  * protocol: initialize block_weight in block_complete_entry ctor
  * cryptonote: add function to get weight from a pruned tx
  * unit_tests: fix build with boost 1.69
  * blockchain: fill in cumulative block weight for alt blocks
  * simplewallet: do not print warning for locked coinbase txes
  * cryptonote: fill in tx weight when syncing from pruned blocks
  * Change 'Pootle' to 'Weblate' in Readme
  * easylogging++: fix build with glibc
  * Fix for miners on reorg
  * Print cdifficulty and don't serialize miner tx hash twice
  * tx_pool: make spent return-by-reference as intended
  * Update to RandomX v1.1.3, simplify
  * unit_tests: fix ringdb unit tests
  * wallet2: don't delete file that may not exist
  * Fix randomx cache selection for RPCs
  * Fix debug feature
  * Revert PR #5835 (export view key)
  * Add display address
  * Add hmac over encrypted value during transaction
  * p2p: reject invalid pruning seeds in peer lists
  * epee: tcp server - set SO_LINGER instead of SO_REUSEADDR option
  * p2p: reject invalid rpc_port in peer lists
  * wallet2: add ignore-outputs-{above/below} option
  * simplewallet.cpp - clean up welcome message
  * blockchain: tweak fee as a function of median values
  * RPC on_transfer_split error consistent with on_transfer if no tx sent
  * build: link wallet_merged against blockchain_db and hardforks obj
  * abstract_tcp_server2: log pointer, not contents, where appropriate
  * monerod can now sync from pruned blocks
  * README: Add deps for translations and hardware wallet support
  * build: fix MinGW GUI dependencies build
  * RandomX integration
  * Don't set ARCH_ID if it's already set
  * ban peers sending bad pow outright
  * Request a thread stack size that is large enough for unbound
  * Revert "easylogging++: ensure it finds boost headers"
  * easylogging++: split strings manually
  * easylogging++: ensure it finds boost headers
  * Streamline build setup
  * easylogging++: always omit ANSI codes when colour is not supported
  * epee: misc_log_ex.h can now be used in C code
  * protocol: only print sync complete message when out of precompiled hashes
  * Disable easylogging crash log on non-glibc libraries
  * core: move hardforks into its own lib
  * epee: implement handshake timeout for SSL connections
  * blockchain: enforce 10 block age for spending outputs
  * functional_tests: fix failure on windows removing files
  * fix wallet python test when run with ctest
  * functional_tests: python3 compatibility
  * functional_tests: pop exactly what we need to test before testing
  * functional_tests: check for RPC methods which aren't exposed
  * functional_tests: add get_transaction_pool_stats
  * functional_tests: add save_bc
  * functional_tests: add is_key_image_spent tests
  * functional_tests: add submitblock test
  * functional_tests: check transaction fee is around what we expect
  * functional_tests: add tx_notes tests
  * functional_tests: add wallet attributes test
  * functional_tests: add rescan_spent/rescan_blockchain tests
  * functional_tests: add monero: URI tests
  * wallet: add edit_address_book RPC
  * functional_tests: add address book tests
  * functional_tests: add wallet password change, store and tag tests
  * functional_tests: add spend proof tests
  * functional_tests: add test for mining via wallet
  * functional_tests: add multisig state tests
  * functional_tests: add get_transfers test
  * functional_tests: add missing sweep_dust parameters, and test it
  * functional_tests: move extraneous stuff out of the framework
  * p2p: fix bans taking port into account
  * epee: fix network timeouts in blocked_mode_client
  * Properly format multiline logs
  * Removed Berkeley DB and db switching logic
  * README: fix TOC link
  * abstract_tcp_server2: fix lingering connections
  * blockchain: keep block template timestamp not below recent median
  * refresh language files
  * cmake: add protolib to zmq dependency libs
  * simplewallet: remove erroneously added line under subaddress-lookahead
  * Revert "cryptonote_protocol: drop peers we can't download from when syncing"
  * Revert "Fix check for disconnecting peers when syncing"
  * wallet2: enable ignoring fractional outputs also when sweeping
  * wallet2_api: add missing parameter
  * updating Readme.md TOC
  * depends: fix monero binaries Boost linking errors
  * unit tests: replace global var with lambda returning static local var
  * wallet2_api: fix load unsigned tx from file error propagation
  * depends: fix MacOS build with Clang 3.7.1
  * epee: abstract_tcp_server2: resolve CID 203919 (DC.WEAK_CRYPTO)
  * depends: attempt to fix readline
  * tests: rct_mlsag: resolve CID 203914 (UNINIT_CTOR)
  * bootstrap_daemon: resolve CID 203915 (UNCAUGHT_EXCEPT)
  * epee: connection_basic: resolve CID 203916 (UNINIT_CTOR)
  * wallet2: resolve CID 203918 null pointer deference (NULL_RETURNS)
  * epee: connection_basic: resolve CID 203920 (UNINIT_CTOR)
  * README: fix master branch spelling, it is not Master
  * Make null hash constants constexpr
  * Add the iwyu target to get information on unused headers
  * wallet: fix mismatch between two concepts of "balance"
  * wallet_rpc_server: add locked field to get_transfers/get_{bulk_,}_payments
  * Fix IP address serialization on big endian
  * boost: fix little/big endian compatibility
  * slow-hash: fix CNv2+ on big endian
  * db_lmdb: print percentages as percentages, not ratios
  * unit_tests: fix levin unit test on big endian
  * storages: fix "portable" storage on big endian
  * storages: fix writing varints on big endian
  * epee: fix local/loopback checks on big endian
  * difficulty: fix check_hash on big endian
  * Makefile: add a top level debug target for ASAN
  * Removed unused boost/value_init header
  * Changed the use of boost:value_initialized for C++ list initializer
  * unit_tests: fix build with CLANG 8 and boost 1.69
  * contrib: add a suppressions file for leak sanitizer
  * simplewallet: warn if invalid default ring size is set and actually ignore the setting
  * simplewallet: lock console on inactivity
  * rpc: don't include an address in mining_status when not mining
  * wallet_rpc_server: call deinit on exit
  * cmake: ensure PYTHON_EXECUTABLE is set
  * daemon: print mining algorithm in mining_status even when not mining
  * rpc: move a leftover light wallet RPC out of daemon RPC
  * simplewallet: fix warnings about useless std::move
  * blockchain: fix logging bad number of blocks if first one fails
  * Fix bug in mempool get_transaction_stats histogram calculation
  * MLSAG speedup and additional checks
  * daemon: automatic public nodes discovering and bootstrap daemon switching
  * unit_tests: Fix uninitialized values
  * Fix Travis build on Windows + Mac
  * wallet, rpc: add a release field to get_version
  * ITS#9068 fix backslash escaping
  * device_ledger: fix uninitialized additional_key
  * device_ledger: add paranoid buffer overflow check
  * core: make the "update probably needed soon" message less scary
  * readme: remove snap monero package and add debian
  * wallet2: fix unset_ring tx retrieval checks
  * simplewallet: moan harder about untrusted nodes
  * daemon: add pruned and publicrpc flags to print_pl
  * wallet2: fix cold signing losing tx keys
  * daemon: implement 'set_bootstrap_daemon' command
  * syncobj.h no longer defines shared_guard, so remove those define's
  * build: fix depends Travis ncurses build, don't wipe CONFIG_SHELL
  * p2p: reject incoming connections to self
  * Wallet: Option to export data to ASCII
  * ringdb: fix bug in blackballing
  * blockchain_blackball: use is_output_spent instead of ringdb.blackballed for spentness test
  * blockchain_blackball: add --historical-stat which prints historical stats of spent ratio
  * wallet: add --extra-entropy command line flag
  * p2p: sanitize peer lists
  * p2p: move log away from global
  * MMS: Use chans instead of normal addresses for auto-config
  * device: fix ledger requesting secret keys export twice
  * rpc: fix unitialized 'core_rpc_server::m_was_bootstrap_ever_used'
  * Add depends riscv 64 bit support
  * daemon: fix merge error removing the "never seen before" timestamp check
  * fix feature not introduced until boost 1.66
  * daemon: fix print_pl only printing public zone peers
  * epee: fix connections not being properly closed in some instances
  * blockchain: reject rct signatures in coinbase txes from v12
  * core: from v12, require consistent ring size for mixable txes
  * blockchain: forbid v1 coinbase from v12
  * reject setting lookahead major or minor to 0
  * easylogging++: weed out most calls to allowed without locking
  * Fix Android build in Docker
  * blockchain: Fix alt chain generated coins overflow
  * Increase max_dbs from 20 to 32
  * Fix check for disconnecting peers when syncing
  * functional_tests: test creating wallets with local language names
  * epee: support unicode in parsed strings
  * wallet_api: add multi destination tx support
  * Replace std::random_shuffle with std::shuffle
  * Remove unused code under WINDWOS_PLATFORM guard
  * Docker updated dependencies cmake boost sodium cppzmq udev protobuf zmq
  * simplewallet: fix arg indexing bug in set_device_name
  * simplewallet: add a few missing settings help text
  * Fix for biased signature nonce
  * cryptonote_protocol: fix '--no-sync', ignore new blocks and txes
  * hid_error() could return a null, which causes the program to crash with std::logic_error()
  * Gitian build script fixes for MacOS
  * unpushed languages from pootle (synced)
  * Add IPv6 support
  * gitian build README improvements
  * daemon: print 128bit diff properly
  * fix building on OpenBSD, simplify Readme section
  * functional_tests: add validate_address tests
  * Fixed i2p/tor tx flooding bug (white noise disabled)
  * rpc: implement get_public_nodes command
  * Fixed error preventing build of monero-gui
  * Define _WANT_SEMUN for FreeBSD to ensure `union semun` is defined
  * Add nbproject directory to .gitignore
  * Dropping cppzmq dependency; adding some zmq utils
  * Gitian build (mac, linux): gzip => bzip2
  * bump version to 0.14.1.2
  * update checkpoints.dat hash
  * prep for 0.14.1.1
  * Added support for "noise" over I1P/Tor to mask Tx transmission.
  * translations: add a ready file to control which translations to build
  * Add ref-counted buffer byte_slice. Currently used for sending TCP data.
  * allow blocking whole subnets
  * p2p: store network address directly in blocked host list
  * improve tx_sanity_check clarification
  * Remove unused txs member in NOTIFY_RESPONSE_GET_OBJECT
  * wallet: provide original address for outgoing transfers
  * build: fix OSX static libusb check and link against static libobjc
  * boost: update obsolete usage of endian API
  * wallet_rpc_server: fix get_bulk_payments with short payment ids
  * simplewallet: add restore_height command
  * Fix incorrectly named binding for MMS send_signer_config command
  * Minor formatting fix in help set command
  * p2p: don't connect to more than one IP per class B if we can
  * keccak: guard against misaligned memory accesses on ARM
  * cryptonote_protocol: drop peers we can't download from when syncing
  * p2p: add a few missing connection close calls
  * CryptonightR_JIT: fix return value on error
  * README: add blockchain-based issue to "Known Issues"
  * Remove unnecessary m_check_txin_table, fix const correctness
  * rpc: get_block_template add optional extra_nonce
  * README: add coredumpctl info from iDunk
  * simplewallet: optional all flag to export_outputs/export_key_images
  * miner: fix --bg-mining-enable description
  * zmq: MacPorts latest fix
  * unit_tests: check return values on test data parsing
  * wallet: do not print log settings when unset
  * Gitian: Add version string to output tar archives
  * Depends: Update HIDAPI version
  * Update icu4c to latest support version
  * README: add beginnings of "Known Issues"
  * p2p: don't forget pruning seed or public RPC port when updating peers
  * Add option to run gitian-build.py on non-debian os
  * Add ncurses package for linux and darwin readline
  * distinguish "build status" from "build"
  * Remove clutter in depends installed packages
  * Add debug targets to depends Makefile
  * rpc headers fix
  * simplewallet: don't ask about mining when running a command line
  * p2p: add a reference to Cao, Tong et al. for the last_seen changes
  * Remove Xiala.net from the list of dns resolvers
  * cmake: fix tests generator
  * rpc: set sanity_check_failed to false when successful
  * tests: functional: fix python syntax
  * tx_sanity_check: relax the median check a lot
  * p2p: close the right number of connections on setting max in/out peers
  * p2p: propagate out peers limit to payload handler
  * wallet_api: catch getTxKey exception
  * wallet2: fix change subaddress mixup when sending pre rct outputs
  * core: fix --prune-blockchain not pruning if no blockchain exists
  * device: show address on device display
  * device: tx_key caching fixed, store recovered txkey
  * Fix --restore-date usage
  * unit_tests: add more leeway to the "same distribution" check
  * blockchain: silence an error getting blocks for pruned nodes
  * Bans for RPC connections
  * db_lmdb: commit pruning txn at checkpoints
  * prep for 0.14.1 release
  * rpc: restrict the recent cutoff size in restricted RPC mode
  * ensure no NULL is passed to memcpy
  * abstract_tcp_server2: improve DoS resistance
  * serialization: check stream good flag at the end
  * tree-hash: allocate variable memory on heap, not stack
  * cryptonote: throw on tx hash calculation error
  * serialization: fail on read_varint error
  * cryptonote_protocol: fix another potential P2P DoS
  * cryptonote_protocol: expand basic DoS protection
  * cryptonote_protocol_handler: prevent potential DoS
  * epee: basic sanity check on allocation size from untrusted source
  * core: do not complain about low block rate if disconnected
  * rpc: work around a GCC 7.4.0 (at least) bug
  * Use 9 digit build IDs
  * tx_sanity_check: don't print an error when not enough outs to check
  * rpc: fix get_transactions getting v1 txes from the txpool
  * Delete redundant cppzmq dependency
  * Allow parallel make
  * Don't use -march=native
  * Delete more include string.h
  * rpc: implement set_bootstrap_daemon method
  * tests: fixed file exec permissions
  * cmake: do not use -mmitigate-rop on GCC >= 9.1
  * Fix GCC 9.1 build warnings
  * miner: fix double free of thread attributes
  * miniupnpc: update to build on BSD
  * p2p: fix GCC 9.1 crash
  * p2p: delay IGP probing on startup
  * simplewallet: print errors on exceptions creating wallets
  * rpc: use ip address string representation for peer::host field
  * add 'sponsor' button on GitHub
  * Remember RPC version on initial connect
  * add a command line option to disable ZMQ server
  * daemon: add more chain specific info in alt_chain_info
  * daemon: display peer address type in print_cn
  * cmake: push cmake away from boost as much as we can
  * rpc: in/out peers can now return the setting's value
  * add cumulative difficulty to diff command
  * Unused private member m_miner_address
  * functional_tests: fix python3 compatibility
  * core: update pruning if using --prune-blockchain on a pruned blockchain
  * wallet_manager: omit redundant disconnect, drop unused variable
  * blockchain: do not try to pop blocks down to the genesis block
  * core: do not commit half constructed batch db txn
  * blockchain_export: allow exporting blocks.dat format from pruned
  * daemon: fix "never seen before" time span display for peers
  * Fix allow any cert mode in wallet rpc when configured over rpc
  * Add ssl_options support to monerod's rpc mode.
  * Fix configuration bug; wallet2 --daemon-ssl-allow-any-cert now works.
  * functional_tests: fix rare get_output_distribution failure
  * unit_tests: make the density test a bit less stringent
  * Close file before exit to avoid potential resource leak
  * expose set/get walletcache attribute functionality in wallet api
  * abstract_tcp_server2: move some things out of a lock
  * remove obsolete save_graph skeleton code
  * use crypto::rand instead of libc rand in a few tests
  * net_utils: fix m_ssl type from time_t to bool
  * python-rpc: add missing getblock RPC parameters
  * daemon: add optional arguments to alt_chain_info
  * daemon: sort alt chains by height
  * blockchain: keep alternative blocks in LMDB
  * wallet2: don't wait a day before using new version fees
  * wallet: distinguish between empty and absent attributes
  * functional_tests: add tests for pending/out transfer addresses
  * wallet_rpc_server: use original addresses in destinations in get_transfers
  * difficulty-tests: remove spurious dependency on cryptonote_core
  * remove unused code
  * add a few checks where it seems appropriate
  * functional_tests: add a 3/3 multisig test
  * functional_tests: add get_fee_estimate to blockchain test
  * consensus: from v12, enforce >= 2 outputs
  * dns_checks: new helper program to check on DNSSEC lookups
  * CMakeLists.txt: suggest to update all submodules if one of them is outdated
  * simplewallet: prompt when spending more than one old out in one tx
  * wallet_rpc_server: remove unused variable

-------------------------------------------------------------------
Thu Jul 18 19:13:05 UTC 2019 - marec@detebe.org

- Update to version 0.14.1.2:
  * bump version to 0.14.1.2
  * update checkpoints.dat hash

-------------------------------------------------------------------
Thu Jul 18 19:08:19 UTC 2019 - marec@detebe.org

- Update to version 0.14.1.1:
  * prep for 0.14.1.1
  * wallet_rpc_server: fix get_bulk_payments with short payment ids
  * p2p: don't connect to more than one IP per class B if we can
  * keccak: guard against misaligned memory accesses on ARM
  * cryptonote_protocol: drop peers we can't download from when syncing
  * p2p: add a few missing connection close calls
  * Remove Xiala.net from the list of dns resolvers
  * Depends: Update HIDAPI version
  * p2p: don't forget pruning seed or public RPC port when updating peers
  * Add ncurses package for linux and darwin readline
  * Remove clutter in depends installed packages
  * Add debug targets to depends Makefile
  * rpc: set sanity_check_failed to false when successful
  * tx_sanity_check: relax the median check a lot
  * db_lmdb: commit pruning txn at checkpoints
  * core: fix --prune-blockchain not pruning if no blockchain exists
  * blockchain: silence an error getting blocks for pruned nodes

-------------------------------------------------------------------
Sat Jun 15 12:33:53 UTC 2019 - marec@detebe.org

- Update to version 0.14.1.0:
  * rpc: restrict the recent cutoff size in restricted RPC mode
  * ensure no NULL is passed to memcpy
  * abstract_tcp_server2: improve DoS resistance
  * serialization: check stream good flag at the end
  * tree-hash: allocate variable memory on heap, not stack
  * cryptonote: throw on tx hash calculation error
  * serialization: fail on read_varint error
  * cryptonote_protocol: fix another potential P2P DoS
  * cryptonote_protocol: expand basic DoS protection
  * cryptonote_protocol_handler: prevent potential DoS
  * epee: basic sanity check on allocation size from untrusted source
  * prep for 0.14.1 release
  * Use 9 digit build IDs
  * Delete redundant cppzmq dependency
  * Allow parallel make
  * Don't use -march=native
  * epee: fix SSL autodetect on reconnection
  * miner: fix double free of thread attributes
  * cmake: do not use -mmitigate-rop on GCC >= 9.1
  * Fix GCC 9.1 build warnings
  * miniupnpc: update to build on BSD
  * p2p: fix GCC 9.1 crash
  * functional_tests: fix python3 compatibility
  * core: update pruning if using --prune-blockchain on a pruned blockchain
  * blockchain: do not try to pop blocks down to the genesis block
  * core: do not commit half constructed batch db txn
  * functional_tests: fix rare get_output_distribution failure
  * unit_tests: make the density test a bit less stringent
  * Fix allow any cert mode in wallet rpc when configured over rpc
  * Add ssl_options support to monerod's rpc mode.
  * Fix configuration bug; wallet2 --daemon-ssl-allow-any-cert now works.
  * Fix #5553
  * [depends] update openssl to 1.0.2r
  * refresh and update translations for new release
  * wallet: add unlock_time details to show_transfers
  * Changed odd bullet point to low level header
  * Used subeaders to avoid slightly wonky looking formatting
  * Made code block usage consistent across all .md files
  * Updated Copyright notice
  * Added Table of Contents to main README.md
  * wallet: fix certificate fingerprint length check
  * password: do not use line input on windows
  * wallet_rpc_server: use original addresses in destinations in get_transfers
  * net_ssl: free certs after setting them up
  * rpc: fail update RPC when running offline
  * net_ssl: SSL config tweaks for compatibility and security
  * mlog: default to not showing SSL errors
  * cmake: fix incorrect hint for OPENSSL_ROOT_DIR
  * error: fix compile error on windows with depends
  * blockchain: keep a rolling long term block weight median
  * fix wide difficulty conversion with some versions of boost
  * wallet2: reject standalone short payment IDs in monero: URI API
  * cmake: fix some case of "backtrace lib not found" breaking
  * mnemonics: fix 4 byte UTF-8 rewriting
  * wallet_rpc_server: reject standalone short payment id in address book
  * wallet2: fix infinite loop picking outputs in corner case
  * change SSL certificate fingerprint whitelisting from SHA1 to SHA-256
  * wallet_rpc_server: adding missing return on error in set_daemon
  * wallet_rpc_server: return false on error in set_log_categories
  * wallet_rpc_server: fix crash in validate_address if no wallet is loaded
  * unit_tests: fix crash in debug in output_distribution test
  * rpc: improve get_output_distribution
  * device/trezor: device sorting and filtering improved
  * p2p: do not send last_seen timestamp to peers
  * wallet2: default to trying to keep 5 outputs of 2+ monero
  * tx_sanity_check: relax uniqueness check a bit
  * wallet2: add missing "sanity check failed" reason message
  * wallet2: fix wrong change being recorded in sweep_all
  * functional_tests: flush stdout before popening new process
  * unit_tests: don't delete log file on windows, it will fail
  * net_helper: clear recv buffer on eof
  * daemonizer: add --non-interactive for windows
  * levin_protocol_handler_async: tune down preallocation a fair bit
  * wallet: fix key image computation signaling to the device
  * serialization: set default log category
  * functional_tests: reset blockchain on test start
  * wallet_rpc_server: add block_height and frozen to incoming_transfers
  * hardfork: fix off by one updating fork index after popping
  * Fix socks tests in windows and handle errors better
  * functional_tests: detect requests python module
  * Windows: work around a boost 1.70 and cmake SNAFU
  * device/trezor: button request callback fix
  * simplewallet: fix output representation offset
  * wallet2: "output lineup" fake out selection
  * epee: use boost/timer/timer.hpp, boost/timer.hpp is deprecated
  * Windows: fix a build error in MSYS2 with boost 1.70.0
  * add translations for it, fr, ja, sv from Pootle and refresh template .ts file
  * wallet_rpc_server: add unlocked field to incoming_transfers output
  * simplewallet: add the change amount to the prompt when locking
  * testdb: add override keyword where missing
  * Remove unneeded SFINAE on check_tx/block verification in core_tests
  * unit_tests: undo is_blocked implementation factoring
  * daemon: fix absolute/relative log file test for windows
  * wallet_rpc_server: set suggested_confirmations_threshold for pool txes
  * wallet_rpc_server: add set_log_level/set_log_categories
  * rpc: add a pruned bool to the prune_blockchain call
  * simplewallet: add another warning about long payment ids
  * daemon: remove debug info
  * rpc: fix get_block_hashes.bin from wallet on pruned blockchain
  * blockchain: lock the blockchain while pruning
  * Add Brewfile to allow for an even easier management of dependencies
  * wallet: new --offline option
  * functional_tests: add sweep_single test
  * wallet_rpc_server: remove unused code
  * rpc: omit irrelevant fields for pool txes in gettransactions
  * rpc: add relayed in get_transaction output
  * rpc: set default log category in core_rpc_server.h
  * Increment m_threads_active when mining thread starts
  * hardfork: remove "no hf version db" recreation check
  * cryptonote_protocol: warn when the last connection goes
  * easylogging++: minimal stdout logging format
  * daemon: fix ratio not being floating point
  * core_rpc_server: remove dummy assigning int to bool
  * lmdb: catch non-LMDB negative errors before strerror
  * blockchain_db: fix db txn ending too early
  * bulletproofs: cut down on keyV allocations
  * net_helper: avoid unnecessary memcpy
  * daemon: if a log file has a /, interpret it from the cwd
  * rpc: new sanity check on relayed transactions
  * abstract_tcp_server2: fix timeout on exit
  * simplewallet: fix warning about long payment id using the old option
  * wallet_rpc_server: fix inconsistent wallet caches on reload
  * rpc.getblocktemplate: set reserved_offset to zero when reserve_size==0
  * p2p: fix integer overflow in host bans
  * ringct: prevent use of full ringct signatures for more than one input
  * simplewallet: fix merge error with new welcome command
  * wallet2: update estimate_rct_tx_size for smaller rct proofs
  * rpc: fix off by one in get_height
  * simplewallet: add a welcome/disclaimer message command
  * block_weight: catch exceptions in main for clean exit on error
  * epee: init a new ssl related variable in ctor
  * console: simple shell over console.py
  * console.py: can now connect to several daemons/wallets
  * cmake: always detect python, it's neeed for some tests
  * functional_tests: exit with 1 if any test fails
  * console.py: add tab completion
  * functional_tests: cold signing key images/outputs import/export
  * functional_tests: add double spend detection tests
  * functional_tests: add alt chains tests
  * functional_tests: add wallet creation language tests
  * functional_tests: add more wallet tests
  * python-rpc: add set_log_level and set_log_categories
  * functional_tests: add describe_transfer tests
  * console.py: support connecting to any host, not just 127.0.0.1
  * functional_tests: add more blockchain related tests
  * functional_tests: add bans tests
  * simplewallet: new net_stats command
  * device/trezor: env-configurable ports
  * tests: trezor tests fixes and improvements
  * build: debug and test builds via contrib
  * wallet_rpc_server: add a all flag to export_outputs
  * Fix linker issues using easylogging
  * unit_tests/long_term_block_weight: some tweaks that seem to make more sense
  * tests/block_weight: use integer division when computing median
  * tests/block_weight: remove unused MULTIPLIER_SMALL
  * blockchain: remove unused calc of short_term_constraint
  * readme: add some more instructions for translators
  * README.md: fork table, copy lines from release branch
  * README.md: fix missing comma
  * README.md: minor spelling issue
  * Enabling daemon-rpc SSL now requires non-system CA verification
  * build: libusb static compilation fix
  * tests: fix test_options initialization error
  * build fix: combinator.h stdexcept missing include
  * easylogging++: update to v9.96.7
  * blockchain_import: error out if preparing to handle blocks fails
  * core: don't check block rate nor fork time in regtest mode
  * device/trezor: add button pressed request
  * Require manual override for user chain certificates.
  * Only check top-level certificate against fingerprint list.
  * Call `use_certificate_chain_file` instead of `use_certificate_file`
  * Perform RFC 2818 hostname verification in client SSL handshakes
  * Require server verification when SSL is enabled.
  * Add `verify_fail_if_no_cert` option for proper client authentication
  * Pass SSL arguments via one class and use shared_ptr instead of reference
  * Change default SSL to "enabled" if user specifies fingerprint/certificate
  * Do not require client certificate unless server has some whitelisted.
  * Change SSL certificate file list to OpenSSL builtin load_verify_location
  * rpc: merge the two get_info implementations
  * wallet: API changes to enable passphrase entry
  * rpc: make wide_difficulty hexadecimal
  * cryptonote: rework block blob size sanity check
  * wallet: new option to start background mining
  * wallet2: add --no-dns flag
  * crypto: replace rand<T>()%N idiom with unbiased rand_idx(N)
  * rpc.gettransactions: fill as_json with partial tx in pruned mode
  * wallet2: support multi out txes without change in sanity check
  * tests: add a few try/catch in main to shut coverity up
  * unit_tests: fix long term block weight test after cache change
  * libwallet_merged: add missing net target
  * simplewallet: new unset_ring command
  * README: add and remove dependencies on OSX line
  * api/wallet: fix some wrong namespace
  * wallet: add number of blocks required for the balance to fully unlock
  * wallet2: set confirmations to 0 for pool txes in proofs
  * wallet_rpc_server: error out on getting the spend key from a hot wallet
  * wallet_rpc_server: always fill out subaddr_indices in get_transfers
  * miner: fix race when stopping mining with start mining enabled
  * blockchain_stats: fix sign in formatting function
  * various: remove unused variables
  * blockchain: some debug info when adding txes-from-block fails
  * wallet_rpc_server: error out on getting the spend key from a hot wallet
  * wallet_rpc_server: add a set_daemon RPC
  * wallet2: init some variables to default values if loading old wallets
  * wallet_rpc_server: always fill out subaddr_indices in get_transfers
  * wallet_rpc_server: set confirmations to 0 for pending/pool txes
  * Add NanoX support
  * block_weight: fix python 2/3 compatibility
  * Allow pruning before v10
  * Add hash of top block to /getheight RPC
  * Add missing include
  * lmdb: fix size_t size issues on 32 bit
  * blockchain: fix returned height in create_block_template
  * do not build in parallel as it is non-deterministic
  * util: name replace_file arguments better
  * device/trezor: increase live-refresh timeout
  * fix init warning on whatever compiler version
  * blockchain: incremental long term block weight cache
  * blockchain: simple cache for the long term block weights
  * Add get_tx_proof support, needed for new sanity check
  * Add support for V11 protocol with BulletProofV2 and short amount. New scheme key destination contrfol Fix dummy decryption in debug mode
  * Add application version compatibility check.
  * cryptonote_protocol_handler: add block/tx hashes in notify logs
  * socks: fix build with boost 1.70
  * No longer use deprecated RSA_generate_key in favor of RSA_generate_key_ex
  * wallet2: factor the watchonly/multisig/etc fields on creation
  * tests: trezor_test fix
  * wallet2: fix tx sanity check change test for the sweep_all case
  * epee: some more minor JSON parsing speedup
  * wallet2: skip derivation precalc for blocks we know we'll skip
  * cryptonote_basic: some more minor speedups
  * cryptonote_basic: speedup calculate_block_hash
  * cryptonote: block parsing + hash calculation speedup
  * blockchain: avoid unneeded block copy
  * save some database calls when getting top block hash and height
  * Avoid repeated (de)serialization when syncing
  * wallet_rpc_server: allow english/local language names in create_wallet
  * wallet: fix memory only wallets
  * ringct: fix capitalization for scaler mult
  * Added socks proxy (tor/i2pd/kovri) support to wallet
  * core: improve block rate monitor trigger probabilities
  * wallet2: set confirmations to 0 for pool txes in proofs
  * Make difficulty 128 bit instead of 64 bit
  * perf_timer: move some debug levels to info for consistency
  * test: hmac_keccak - fix number of chunks counting
  * New interactive daemon command 'print_net_stats': Global traffic stats
  * wallet: use original user address if we have a short payment id
  * Fix build on FreeBSD
  * python-rpc: add getblockheadersrange daemon RPC
  * python-rpc: add console.py
  * p2p: don't lookup seed nodes when offline
  * functional_tests: move RPC API to utils, it is not test specific
  * functional_tests: add balance tests
  * functional_tests: add missing parameters to get_balance
  * wallet: add freeze/thaw/frozen commands
  * functional_tests: add proofs tests (tx key, in/out tx, reserve)
  * functional_tests: add more transfer tests
  * functional_tests: add get_bulk_transfer tests
  * functional_tests: add message signing/verification tests
  * functional_tests: add multisig and cold signing tests
  * functional_tests: support several daemons/wallets
  * functional_tests: add txpool RPC tests
  * functional_tests: add integrated address tests
  * functional_tests: add basic transfer tests
  * functional_tests: plug RPC tests into the cmake machinery
  * functional_tests: add basic mining tests
  * functional_tests: add wallet address/subaddress RPC tests
  * functional_tests: improve RPC blockchain tests
  * cryptonote: fix calculating coinbase tx hash
  * wallet_rpc_server: remove mixin from transfer RPCs
  * wallet: fix offline signing calling a daemon RPC
  * wallet2: sanity check new tx before sending
  * slow-hash: default to JIT on x86_64
  * epee: fix build with boost 1.70.0
  * cmake: handle detecting boost using boost's own cmake files
  * rpc: add miner tx hash to block header response
  * dns_utils: really add default DNSSEC servers on failure
  * daemon: init public_port in all ctors
  * tests/trezor: HF9 and HF10 tests
  * device/trezor: HF10 support added, wallet::API
  * crypto: hmac_keccak added
  * Fix daemon startup parameter '--limit-rate' processing after parameter defaults
  * Adding classes, functions, and utilities for common LMDB operations.
  * abstract_tcp_server2: fix crashy race on socket shutdown
  * Upgraded static dependency versions and hashes in Dockerfile.
  * Implement array_entry_t copy constructor
  * rpc: quantize db size up to 5 GB in restricted mode
  * simplewallet: make the long payment ids warnigns more warney
  * Use threadpool instead of new threads for DNS queries
  * wallet2: make use_fork_rules handle chain heights lower than leeway
  * wallet: flush output cache upon reorg
  * wallet_rpc_server: new auto_refresh RPC
  * wallet_rpc_server: fix buffer read overflow in string assignment
  * wallet: move light wallet RPC out of core RPC
  * wallet: adds rescan_bc option with preserving key images
  * mnemonics: fix half length seed to bytes conversion
  * blockchain: do not try to pop the genesis block
  * wallet2: set seed language when creating from json
  * wallet2: fix generation from json when restore height is not set
  * tests: fix path in instructions
  * miner: fix possible exit crash due to race in stop
  * simplewallet: add some missing spacing before uses data
  * console_handler: print newline on EOF
  * wallet_rpc_server: include out subaddress indices in get_transfers
  * wallet_rpc_server: add missing --rpc-ssl-allowed-fingerprints
  * tests: disable wallet SSL init for tests involving wallet2
  * wallet2: don't store 0 amount outputs, they'll fail to be spent
  * hardfork: update last_versions on popped block
  * Wallet API: multisig_tx_set passing bug fixed
  * wallet: fix load failure if the mms isn't usable
  * epee: certificate generation fix, pkey deleted
  * blockchain: fix ahead of time PoW batch calc
  * Start monerod as non root user
  * daemon: new mining_status command
  * connection_basic: remove debug exception ^_^
  * Fix startup errors with SSL cert generation
  * blockchain: speed up getting N blocks weights/long term weights
  * slow-hash: cache TLS references locally once at function start
  * crypto: fix PaX issue on NetBSD with CNv4 JIT
  * gtest: build fix for NetBSD
  * tests: handle any cmake detected python interpreter
  * aesb: avoid stomping on an existing define on NetBSD
  * timings: fix errno.h mispelt as error.h
  * wallet2: do not use invalid keys as fake outs in rings
  * tests: fix cnv4-jit-test link on mac
  * rpc: make fill_pow restricted
  * wallet2: key image import fixes
  * Update 2019 copyright
  * add multisig tx sets to describe_transfer rpc endpoint
  * epee: add SSL support
  * device/trezor: debugging features, trezor tests
  * db_lmdb: make mdb_block_info format conversion more future proof
  * p2p: avoid busy loop when we have nothing to connect to
  * wallet_rpc_server: avoid repeated string allocations when parsing
  * cryptonote: avoid double parsing blocks when syncing
  * cryptonote: speed up calculating coinbase tx prunable hash
  * core: avoid double parsing blocks after hoh
  * blockchain: avoid unneeded block copy
  * save some database calls when getting top block hash and height
  * blockchain: avoid pointless transaction copy and temporary
  * blockchain: avoid duplicate block hash computation
  * core: avoid calculating tx prefix hash when we don't need it
  * Avoid repeated (de)serialization when syncing
  * fix merge errors, update recommended version to 0.14.0.2
  * update checkpoints hash
  * update checkpoints, update README for 0.14.1 release
  * update readme via cherry-pick
  * wallet2: don't calculate prefix hash when we don't need it
  * db: speedup block addition
  * CryptonightR: define out i386/x86_64 specific code on other archs
  * slow-hash: fix build on arm
  * cmake: ARCH_ID fixes for cross compilation
  * check load_t_from_json return values
  * default initialize rpc structures
  * various: remove unused variables
  * blockchain: forbid older BP rct versions from v11
  * tests: add a CNv4 JIT test
  * crypto: plug CNv4 JIT into cn_slow_hash
  * crypto: clear cache after generating random program
  * performance_tests: add tests for new Cryptonight variants
  * CNv4 JIT compiler for x86-64 and tests
  * blockchain: add v10 fork heights
  * Print the reason why a notification spec failed to parse
  * blockchain: include number of discarded blocks in --reorg-notify
  * core: add a few more block rate window sizes
  * core: add --block-rate-notify
  * notify: fix tokenizing being too strict
  * hardfork: fix fork determination for historical heights
  * ArticMine's new block weight algorithm
  * wallet2: fix mishandling rct outputs in coinbase tx
  * Simplify RPC endpoint, emoving second RPC endpoint generate_from_view_key
  * rpc: Allow submitting tx as hex blob over ZMQ
  * SHALL -> MUST
  * dns_utils: use fallback if the default resolver does not support DNSSEC
  * cn_deserialize: remove some unused code
  * cryptonote_protocol_handler: search for syncing peers in "cruise mode"
  * performance_tests: fix NetBSD build
  * discontinue use of alloca
  * daemon: add '--no-sync' arg to optionally disable blockchain sync
  * daemon: add --public-node mode, RPC port propagation over P2P
  * unbound: update to get the redefinition fix
  * Various speedups to depends and Travis
  * miner: it can now autodetect the optimal number of threads
  * Better error when sending a tx with a too large extra field
  * rpc: quantize db size up to 5 GB in restricted mode
  * OS X -> macOS
  * dns_utils: remove MoneroPulse/checkpoints mention in TXT record code
  * Remove code duplication
  * db_lmdb: fix missing mdb_dbi_close in migration
  * wallet-rpc: get balance for all accounts and subaddresses
  * wallet: fix payment ID decryption for construction data
  * device/trezor: dummy payment ID fix
  * Add generate_from_view_key RPC method
  * Add generate_from_keys RPC method
  * epee: Add space after ':' in additional http response headers
  * wallet-rpc: get transfers for all accounts and subaddresses
  * Support docker for gitian builds
  * wallet_rpc_server: add a validate_address RPC
  * Fixed path to int-util.h
  * Adding cnv4-2 tweaks
  * Cryptonight variant 4 aka CryptonightR
  * simplewallet: add help for ask-password options
  * simplewallet: mark confirm-missing-payment-id as obsolete
  * debug compilation fix: net lib missing common deps
  * Don't decrypt keys in view only wallets in wallet_keys_unlocker
  * Use io_service::work in epee tcp server
  * Human readable message if maximum outputs reached
  * Update openssl to 1.0.2q in depends build system
  * Fixed missing return value in once_a_time class on windows
  * Add support for V10 protocol with BulletProofV2 and short amount.
  * Fix dummy decryption in debug mode
  * fix log namespace
  * New scheme key destination contrfol
  * readme: add new workflow for translations (Pootle)
  * simplewallet: tell the user to complain to the recipient
  * ringct: fix v1 ecdhInfo serialization
  * epee: add SSL support
  * wallet_rpc_server: remove detached short payment ids support
  * network_throttle: use circular_buffer where appropriate
  * unit_tests: remove leftover debug print
  * cryptonote: Fix enum check in expand_transaction_2
  * cryptonote: Add const-qualifier on comparison functor
  * serialization: Use pos_type instead of streampos
  * ITS#8969 tweak mdb_page_split
  * cryptonote_protocol_handler: pad tx messages when using tor/i2p
  * i2p: initial support
  * blockchain_prune: don't prune before v10
  * README.md - add few FreeBSD instructions, fix v13.0 release tag
  * Adding initial support for broadcasting transactions over Tor
  * block_queue: fix late sanity check off by one
  * rpc: fix internal daemon calls in restricted rpc getting partial data
  * blockchain: add --reorg-notify
  * notify: handle arbitrary tags
  * notify: warn if the spec contains one of '"\
  * common: set MONERO_DEFAULT_LOG_CATEGORY for notify and spawn
  * performance_tests: better stats, and keep track of timing history
  * blockchain: fix default genesis block timestamp
  * ringct: remove unused senderPk from ecdhTuple
  * ringct: the commitment mask is now deterministic
  * ringct: encode 8 byte amount, saving 24 bytes per output
  * ringct: save 3 bytes on bulletproof size
  * add a bulletproof version, new bulletproof type, and rct config
  * Pruning
  * readline: don't dereference possible NULL pointer
  * wallet2: fix hashchain going out of sync on refresh error
  * bulletproofs: speed up vector_power_sum
  * db_lmdb: don't unnecessarily cast to double on the way to uint64_t
  * core: include a dummy encrypted payment id when no payment is used
  * core, wallet: remember original text version of destination address
  * crptonote_core: do not error out sending unparsable extra field
  * daemon: extend 'print_pl' command, optional filter by type and limit
  * simplewallet: fix help text of rescan_bc to mention the "hard" option
  * simplewallet: remove extra colon in a few calls to input_secure_line
  * simplewallet: avoid conversion to string in input_secure_line
  * simplewallet: factor yesno hint into input_line
  * Resync to upstream mdb.master
  * Optimize the depends builds for faster compilation
  * blockchain_ancestry: allow getting ancestry of a single output
  * blockchain_db: allow getting output keys without commitment
  * simplewallet: disable long payment ids by default
  * epee: speedup word/number matching
  * wallet2: remember which output keys map to which key images
  * simplewallet: improve punctuation in user visible string
  * wallet api: don't truncate address in subaddress_account
  * bump sodium to 1.0.16
  * update readme to include blurb on decentralization
  * wallet2: fix incorrect patch for determining fork rules
  * wallet2: fix duplicate tx notifications for pool txes
  * added two tests for partial word and case tolerance in mnemonics
  * mnemonics: compare canonical words (lowercase)
  * translations: update and sync all language files
  * utils: 'update-translations.sh' now removes obsolete strings
  * README.md: updated build instructions for OpenBSD 6.4
  * device: proper handling of user input
  * wallet: do not check txpool in background mode
  * device_ledger: remove full_name variable
  * i18n: filter LANG/LC_LANG for valid characters, and handle @
  * ringct: remove duplicate rv.mixRing = mixRing; in genRctSimple
  * message_store: init me field
  * blockchain: don't propagate exception past dtor
  * core_tests: add a --list_tests command line switch
  * wallet_api: fix usage of LOG_ERROR
  * Make get_output_key method const
  * Changed Windows build commands.
  * simplewallet: Show new address after going multisig
  * wallet api/device: set estimated restore height if none is provided
  * remove trailing whitespace in README.md
  * simplewallet: don't subtract 1 to estimate blockchain height
  * blockchain: fix wrong hf version when popping multiple blocks
  * blockchain: use the version passed as parameter, not a new one
  * hardfork: remove batch transactions setup
  * wallet2: speedup output tracking
  * wallet: optionally keep track of owned outputs uses
  * p2p: don't stop the idle thread when no gray peers are found
  * wallet: do not display daemon controlled text if untrusted
  * Remove visibility settings from boost.mk
  * epee: speed up json parsing
  * simplewallet: remove ability to transfer with detached short payment ids
  * daemon: add a +hex option to print_block
  * daemon: print human friendly timestamp too
  * blocks: fix checkpoint code generation on OpenBSD
  * cryptonote_core: revert extra_tx_map
  * wallet_rpc_server: add all field to export_key_images
  * Simplewallet: Unify usage messages.
  * epee: better network buffer data structure
  * simplewallet: fix show_transfers colouring, and add red for failed
  * Remove boost::lexical_cast for uuid and unused uuid function
  * message_store: fix error message adding const char * with offset
  * blockchain_blackball: make log file name consistent with executable
  * core_tests: rename invalid multisig tests to read "invalid"
  * wallet2: finalize_multisig now rejects non N-1/N multisig wallets
  * Remove unused hash in export_key_images
  * device/trezor: store tx_prefix_hash in tx key aux
  * blockchain: fix block rate check for empty blockchains
  * build: protobuf dependency fixes, libusb build
  * blockchain_db: speedup tx output gathering
  * wallet2: cut down on the number of useless derivation threads
  * wallet2: fix accessing unwound stack on exception
  * Add --restore-date param
  * Sync hashchain bug fixed
  * Wallet: Initialize members without default ctor.
  * MMS (Multisig Messaging System): Initial version
  * add erciccione's pgp key
  * ringct: avoid repeated point conversion
  * Cleanup leftovers from migrating depends from bitcoin
  * update expiry date for both signing and encryption keys
  * ignore child process when exec
  * perf_timer: make all logs Info level
  * wallet2: clear all payments on soft rescan_bc
  * epee: speed up string matching a bit
  * epee: avoid string allocation when parsing a pod from string
  * singleton: fix missing *this return value in operator=
  * perf_timer: check allowed categories before logging
  * perf_timer: add a way to get and reset the current time
  * perf_timer: only log to file
  * cryptonote: don't serialize for blob size if already known
  * easylogging++: check allowed categories before logging
  * p2p: use vector instead of list for peer lists
  * mlocker: set default log category
  * protocol: change standby mode to not wait sleeping
  * simplewallet: donate command validate amount
  * add a once_a_time_milliseconds class
  * util: use fcntl instead of flock, for compatibility
  * tx_pool: add a few std::move where it can make a difference
  * cryptonote: set tx hash on newly parsed txes when known
  * db_lmdb: avoid pointless division
  * db_lmdb: inline check_open, it's trivial and called everywhere
  * blockchain_db: allocate known size vector only once
  * blockchain_db: remove a couple unused functions
  * util: set MONERO_DEFAULT_LOG_CATEGORY
  * unit_tests: strengthen notify test against OS scheduling
  * blockchain: call deinit in dtor
  * device/trezor: device/trezor: correct device initialization, status check
  * device/trezor: python2 compatibility - bundle dependencies
  * device/trezor: ask for KI sync on first refresh
  * device: enable to use multiple independent device wallets
  * rpc: mask values that are nobody else's business in restricted RPC
  * epee: fix network packet header field endianness
  * move int-util.h to epee
  * Changed RECIEVED to RECEIVED in log messages.
  * Add glibc back compat code
  * easylogging++: avoid uneeded temporary std::string object
  * CONTRIBUTING: mention not changing spelling/typoes in code
  * blockchain: fix race between two external mining threads
  * Bulletproof: Initialize members in default construtor.
  * http -> https
  * easylogging++: ensure logger is initialized before main
  * daemon: print monero version at startup when calling a detached daemon
  * mlocker: remove early page size log
  * cryptonote: add a set_null for transaction_prefix
  * daemon: stop miner before we bring the whole thing down
  * ringct: fix dummy bulletproofs on ledger in fake mode
  * device/trezor: passphrase entry on host
  * add command pop_blocks
  * blockchain_prune_known_spent_data: blackball file is now optional
  * Outputs where all amounts are known spent can now be pruned
  * blockchain: avoid unnecessary DB lookups when syncing
  * rpc: speed up the common get_output_distribution case while syncing
  * easylogging++: faster access to logging
  * Revert "easylogging++: make the logger handle early/late logging"
  * core: fix adding new pre-hoh block when a tx is already in the pool
  * simplewallet: use is_transfer_unlocked instead of is_tx_spendtime_unlocked for show_transfers
  * rpc: speedup get_outs.bin
  * protocol: fix use after free when dropping a connection
  * Only show a single mlock() error, to avoid flooding the log
  * device/trezor: webusb transport added, cmake fixes
  * blockchain_blackball: spot when all outputs of an amount are spent
  * simplewallet: enable donation on testnet/stagenet for easier testing
  * unit_tests: fix malloc/delete mismatch
  * wallet_rpc_server: do not use RPC data if the call failed
  * windows_service: fix memory leak
  * unit_tests: do not rethrow a copy of an exception
  * cryptonote: fix get_unit for non default settings
  * remove some unused code
  * a few minor (but easy) performance tweaks
  * tests: slow_memmem now returns size_t
  * Updated dependencies Cmake 3.13, CPPZMQ 4.3.0, OPENSSL 1.1.0j
  * rctOps: add braces to suppress warnings
  * cn_deserialize: allow parsing partially valid tx extra
  * wallet2: resume processing when tx extra is partially broken
  * wallet2: add n_vouts to capture list
  * mlocker: fix access to global lock map after dtor on exit
  * rpc: add version to get_info
  * scoped_message_writer: protect all std::cout usage from readline
  * blockchain_stats: don't use gmtime_r on Windows
  * protocol: fix incorrect tx hash in log
  * mlocker: don't throw from lock/unlock
  * Fix issue 4793 - M/N multisig transaction signature
  * rpc: speedup get_output_distribution
  * lmdb: fix gcc 7.3.0 'implicit-fallthrough' warning
  * Avoid unnecessary temp block and copy ctor
  * Remove -Werror
  * unit_tests: don't take the address of an unwrapped secret key
  * tests: add unit tests for get_output_distribution
  * Enhance help text for print_ring.
  * Enhance help text for incoming_transfers.
  * blockchain: remove "0 is height" shortcut from get_output_distribution
  * Revert "blockchain: simplify output distribution code"
  * slow-hash: some more big endian fixes
  * slow-hash: fix for big endian
  * Don't cache nettype in core_rpc_server use m_core
  * unit_tests: add some hex parsing test for non hex input
  * unit_tests: add a test for parse_hexstr_to_binbuff
  * epee: speed up parse_hexstr_to_binbuff a little
  * json_archive: initialize inner_array_size in ctor
  * Removed a lot of unnecessary includes
  * various: do not propagate exception through dtor
  * simplewallet: slightly adjust wording when printing multisig seed
  * libwallet_api_tests: add missing dependency on Boost Locale and ICU
  * cmake: move Boost_LOCALE_LIBRARY out of ICU_LIBRARIES
  * common: fix base58 gcc -Werror=implicit-fallthrough
  * CMakeLists.txt: add -ftemplate-depth=900
  * readme 0.13.0.4 in the table
  * Add new command "export_transfers" to save transfers to csv
  * bulletproofs: avoid std::vector allocations for slice
  * unit_tests: add logging unit test
  * db_lmdb: error out if the db needs migration in read only mode
  * Fix version prefix in gitian build
  * No longer use a list for registering self references in the abstract tcp server
  * api/wallet: fix compile errors made in #4720
  * wallet2: remove redundant chacha key generation in store_keys
  * build: fix Ubuntu 16.04 (GCC 5.4.0) compilation
  * protocol: option to pad transaction relay to the next kB
  * easylogging++: update to latest upstream (v9.96.5)
  * Fix build of monero-gui by adding device_trezor to wallet_merged
  * wallet2: fix off by one in output picking
  * epee: log HTTP/RPC calls at info level
  * blockchain: fix innocuous difficulty cache inconsistency
  * blockchain: use uint64_t for block height, not size_t
  * bulletproofs: reserve vector memory when known in advance
  * rct: speedup commit a little
  * unit_tests: fix leak when the test check fails
  * wallet_rpc_server: account for watch-only/non-deterministic/multisig when querying seed
  * perf_timer: remove stray debug addition
  * cryptonote_core: avoid gratuitous recalculations in check_block_rate()
  * rpc: fix linking error of 6097472a, get_output_distribution
  * simplewallet: print the number of show/all transfers
  * wallet2: only export necessary outputs and key images
  * wallet2: faster output and key image import/export
  * build: ubuntu 16 ppc build fixes
  * Fix: out_of_hashchain_bounds_error in refresh
  * rct: add a zeroCommit cache for common pre-rct case
  * blockchain: remove unused output_scan_worker parameter
  * blockchain: don't run threads if we have just one function to run
  * db_lmdb: slight speedup getting array data from the blockchain
  * simplewallet: reorganize SCOPED_WALLET_UNLOCK a bit more
  * simplewallet: don't skip asking for password when watch-only
  * wallet: warn if lockable memory limit is too low
  * wallet: add a non destructive blockchain rescan
  * wallet2: demote a few uninteresting recurring logs to TRACE
  * wallet2: fix print_ring printing double entries for transactions
  * use current height - 1 for top block height in err msgs
  * device/trezor: trezor support added
  * simplewallet: remove redundant messages on daemon connection failure
  * mlocker: fix dtor ordering problem
  * wallet_rpc_server: include additional tx keys in sign_transfer response
  * db_lmdb: log which output was not found in get_output_key
  * cryptonote_core: fix build error gcc 5.4.0 'sign-compare'
  * dns_utils: do not exit if DNS records are corrupt
  * daemon: use msg_writer, not cout, to display information
  * p2p: less frequent incoming connections check
  * db_lmdb: save some string copies for readonly db keys/values
  * p2p: tone down "no incoming connections" warning to info if in peers is 0
  * epee: speed up json number parsing
  * tx_pool: speed up take_tx for transactions from blocks
  * tx_pool: remove unnecessary get_transaction_hash
  * perf_timer: call reserve on new timer array
  * core: avoid unnecessary tx/blob conversions
  * unit_tests: notify test special case for the usual weirdo
  * Expose limit-rate defaults from command line help
  * tx_pool: allow take_tx to work without m_txs_by_fee_and_receive_time
  * tx_pool: fix comment about transaction_prefix
  * wallet2: use padded bulletproofs for multisig signing
  * crypto: fix AES encryption on big endian
  * build: older git versions don't have '-C' flag
  * hash: fix hash_permutation on big endian
  * README.md: increase swap size on Raspberry Pi
  * wallet-rpc: add on_restore_deterministic RPC call.
  * hardfork: initialize current_fork_index in ctor
  * network_throttle: initialize m_last_sample_time in ctor
  * serializtion: add missing mainnet and stagenet fields for 0mq
  * wallet2: initialize amount to 0 in tx_scan_info_t ctor
  * Dockerfile: add udev, libusb and hidapi build
  * tests: fix MSYS2 gcc 7.3.0 warning -Wtype-limits
  * wallet2: rewrite keys file in a safer manner
  * return message in stop_mining if mining never started
  * cryptonote: use logging functions for errors, not std::cout
  * wallet2: save ring in the ringdb once a tx is created
  * blockchain_utilities: fix logs and cout output colliding
  * tests: fix MSYS2 warning 'MONERO_DEFAULT_LOG_CATEGORY redefined'
  * wallet2: fix ring reuse breaking when using histogram
  * unit_tests: fix notify unit test when /tmp does not exist
  * rpc: adjust ring size error message now that too high is also possible
  * core: fix unmixable special case allowing ring size below 11
  * performance_tests: add ge_p3_tobytes
  * performance_tests: measure ge_frombytes_vartime only
  * cmake: fix readline detection when the readline library is not found
  * simplewallet: display locked/unlocked state in show_transfers
  * mnemonics: fix words_to_bytes on big endian
  * crypto: fixed groestl on big-endian platforms
  * unit_tests: notify test special case for the usual weirdo
  * rpc: fix build with older compilers
  * Minor wording changes; added research repository links
  * Makefile: fix building without a git tree
  * Added research information to main readme
  * epee: some minor speedup in parsing
  * Small function declaration cleanup in slow-hash.c
  * Update ZMQ fee estimate and add ZMQ output distribution
  * ringct: use dummy bulletproofs when in fake mode, for speed
  * easylogging++: remove std::deque usage
  * Add stats utility
  * wallet2: extend fake out picks away from the gamma pick
  * wallet2/create_transactions_2: removed obsolete '/ 1024' on min_fee calc
  * Fix prune using receive time as tx_weight
  * miner: fix build with boost 1.69
  * update readme for 0.13.0.4
  * multiexp: some minor speedups
  * bulletproofs: only enable profiling on request
  * multiexp: tune which variants to use for which number of points
  * bulletproofs: speedup prover
  * multiexp: handle pippenger multiexps with part precalc
  * bulletproofs: maintain -z4, -z5, and -y0 to avoid subtractions
  * bulletproofs: rework flow to use sarang's fast batch inversion code
  * bulletproofs: merge multiexps as per sarang's new python code
  * multiexp: pack the digits table when STRAUS_C is 4
  * bulletproofs: some more minor speedup
  * performance_tests: sc_check and ge_dsm_precomp
  * bulletproofs: remove single value prover
  * bulletproofs: some more speedup
  * bulletproofs: random minor speedups
  * bulletproofs: shave off a lot of scalar muls from the g/h construction
  * bulletproofs: speedup PROVE
  * blockchain_utilities: simplify getting block blob from height
  * crypto: fixed incremental keccak API on big-endian platforms
  * wallet2: sanity check rct output distribution from the daemon
  * rpc: fix wrongly formatted JSON for pruned tx
  * blocks: use auto-generated .c files instead of 'LD -r -b binary'
  * mnemonics/electrum-words/create_checksum_index(): updated to work with non fixed word list length mnemonic
  * wallet2/create_transactions_2: fixed typo in try_tx=true's estimate_fee args
  * wallet2/create_transactions_2: removed extraneous shuffle before sort of unused_*_indices_per_subaddr
  * core: fix handle_incoming_tx* comment about return value
  * CMakeLists.txt: only use libatomic when found
  * device_io_hid.cpp: fix copyright header
  * console_handler: add a global log when exiting via EOF
  * blockchain: move two new verification errors to the verify category
  * db_lmdb: use MDB_MULTIPLE_NEXT where possible for some speedup
  * rpc: fix output distribution caching ignoring chain changes
  * perf_timer: separate log categories based on caller categories
  * daemon: fix base fee stating /kB even when it is per byte
  * Add RPC error code for non-deterministic wallet
  * Rename "blackball" for clarity
  * device: extended logging, refactored device selection code
  * Adapt Readme and script to monero gitian build signing
  * Remove Travis check in depends toolchain file
  * Simplewallet: update help text for show_transfers.
  * daemon: Show mining address
  * device: fixed Ledger Nano S device selection
  * tx_pool: revert #4592 and move bin2hex conversion to on_get_transaction_pool
  * unit_tests: fix notify test when run from make *test
  * Update db_lmdb.cpp
  * core: don't verify range proofs multiple times
  * spawn: close all file descriptors before execve
  * util: close keys file lock on exec
  * wallet_rpc_server: fix change_wallet_password RPC
  * wallet2_api: fix generating new wallet in the GUI
  * build: fixed submodule check
  * rpc: init m_rpc_version in Message ctor
  * rpc: remove unused ctors
  * account: init creation timestamp to 0
  * wallet2: initialize some scalar fields in ctor where appropriate
  * blockchain_db: initialize m_hardfork in ctor just in case
  * WalletAPI: rescanBlockchain, rescanBlockchainAsync
  * p2p: only deinitialize what's been initialized in offline mode
  * unit_tests: call umask before mkstemp
  * Providing user supplied default constructor for expect<void>
  * Add building with depends to the Makefile
  * Fix Windows build after epee dependency change
  * p2p: a negative result from UPNP_GetValidIGD is an error
  * daemon: fix reading past stack on exit
  * README: add libnorm to the dependency list
  * tx_pool: store hex string instead of raw binary to tx_blob of get_transaction_pool RPC
  * Dockerfile: init and update submodules
  * readme: update OSX build badges
  * CMakeLists.txt: detect and use -pthread compiler flag
  * Revert "p2p: connect via the bound ip, if any"
  * build: use ARCH 'native' by default, allow to configure and override it
  * SOFTWARE is the default wallet device
  * readline_buffer: fix "cursor in prompt" bug
  * daemon: do not run complex code in a signal handler
  * Remove epee header dependency on cryptonote_core
  * simplewallet: fix view key parsing in --generate-from-view-key
  * rpc: blanket initialize 0MQ request and response structures
  * Return appropriate RPC error code when key image signature check fails
  * Add OSX gitian descriptor
  * simplewallet: perform trivial error checks before password prompt
  * simplewallet: fixed deadlock if a user hits CTRL+C twice
  * README: mention max_usb_current setting on Raspberry Pi
  * wallet_rpc_server: optionally return tx keys in sign_transfer
  * simplewallet: mark default-ring-size setting as obsolete
  * password: fix secure input with echo on windows
  * password: fix backspace outputting ^? on linux on echoing secure input
  * wallet2: make fake out selection messages less spammy
  * fix version changes on master
  * Add windows descriptor to gitian descriptors
  * Utils: add support for newer Windows versions detection
  * wallet2: fix cold signing using non padded bulletproofs
  * Utils: Add Dockerfile for android 64-bit build
  * wallet_rpc_server: add describe_transfer RPC
  * Change gitian.sigs repo from bitcoin-core to monero-project remote host
  * device_io_hid: fix DEFAULT_* type (too short) and init time
  * device: increase ledger timeout to 2 minutes
  * Add checksums for download tools
  * Revert "Merge pull request #4472"
  * device: destroy device objects on exit
  * blockchain_blackball: fix stray !
  * CMakeLists.txt: Fix typo
  * Add gitian build script
  * Remove last traces of libpcsc-lite
  * Prepare Depends Packages for Gitian Scripts
  * ANSI colors in Windows 10
  * miner: really reset flags/precision on std::cout
  * blockchain: add check test options are given for fakechain mode
  * unit_tests: add unit test for alloc alignment being a power of 2
  * Depends: build hidapi with -fPIC
  * tx_pool: avoid parsing a whole tx if only the prefix is needed
  * blockchain_blackball: fix stats double counting
  * Finish all contexts but simple_wallet, translate 23% of simple_wallet
  * tests: update crypto tests data file after PRNG changes
  * Consolidate HID depends makefiles into single recipe
  * cryptonote: sort tx_extra fields
  * README: update MSYS2 dependencies for Ledger
  * Linux: Fix building of static binaries with hw device support
  * wallet-cli: Update French translation
  * Fix some calls to the translation function
  * Add check if submodules need to be updated
  * Add translations for Monero::PendingTransactionImpl, command_line Contexts
  * rpc: fixed typo in JSON command error response message
  * Updating Monero GUI repo link in README.i18n.md
  * secure_pwd_reader: Add proper Unicode handling [Ryo contribution]
  * wallet2_api: fix build with C++14
  * Create Japanese file, add translations for "Monero::AddressBookImpl" and "Wallet" Contexts
  * blocks: use auto-generated .c files instead of 'LD -r -b binary'
  * wallet2: disable height based segregation
  * Move cross compiling steps into proper heading
  * functional_tests: fix linking on Windows
  * epee: initialize a few data members where it seems to be appropriate
  * abstract_tcp_server2: move m_period to subclass
  * connection_basic: remove unused floating time start time
  * Catch more exceptions in dtors
  * Fix rtxn usage in BlockchainLMDB::get_estimated_batch_size
  * wallet2: clear found out for every tx key
  * daemon: do not display uptime when not known
  * common: Windows 'spawn' support for tx and block notifications
  * Multisig M/N functionality core tests added
  * Arbitrary M/N multisig schemes: * support in wallet2 * support in monero-wallet-cli * support in monero-wallet-rpc * support in wallet api * support in monero-gen-trusted-multisig * unit tests for multisig wallets creation
  * wallet_rpc_server: include all transfer records for a txid
  * wallet: fix --generate-from-json using wrong password
  * unit_tests: add a notifier test
  * build: fix gcc false positive 'stringop-overflow' warning
  * wallet2_api: blackball/unblackball now take two parameters
  * Update unbound submodule to 7f23967
  * Merge pull request #4333
  * Merge pull request #4461
  * Merge pull request #4459
  * Merge pull request #4458
  * Merge pull request #4457
  * Merge pull request #4456
  * Merge pull request #4449
  * Merge pull request #4448
  * Merge pull request #4446
  * Merge pull request #4445
  * Merge pull request #4443
  * Merge pull request #4439
  * Merge pull request #4434
  * Merge pull request #4427
  * Merge pull request #4425
  * Merge pull request #4424
  * Merge pull request #4417
  * Merge pull request #4409
  * Merge pull request #4407
  * Fix 32bit depends builds
  * Merge pull request #4406
  * daemon: silence daemon update warnings on testnet
  * unit_tests: fix longstanding DNS related unit test
  * dns_utils: refresh list of usable DNSSEC servers
  * cryptonote_core: warn when the block rate deviates from expectations
  * simplewallet: Add Unicode input_line [Ryo backport]
  * abstract_tcp_server2: fix busy calling of idle IO service

-------------------------------------------------------------------
Thu Mar  7 15:43:23 UTC 2019 - marec <marec@detebe.org>

- Update to version 0.14.0.2:
  * update version to 0.14.0.2 for tag
  * rpc: fix build, ctx does not exist yet on this branch
  * tests: fix cnv4-jit-test link on mac
  * rpc: make fill_pow restricted
  * Fix computation of change address + Fix v11 fork
  * blockchain: fix off by one brought by the regtest mode fix
  * wallet2: fix incorrect patch for determining fork rules

-------------------------------------------------------------------
Mon Mar  4 17:15:22 UTC 2019 - marec <marec@detebe.org>

- Update to version 0.14.0.1:
  * update version to 0.14.0.1
  * wallet2: fix mishandling rct outputs in coinbase tx
  * disable asm w/ x64 instructions set on i386
  * blockchain: fix long term block weight for regtest mode
  * CryptonightR: define out i386/x86_64 specific code on other archs
  * core: fix adding new pre-hoh block when a tx is already in the pool
  * slow-hash: fix build on arm
  * cmake: ARCH_ID fixes for cross compilation
  * update readme wording to more accurately reflect PoW
  * bump version, update readme to reflect, update checkpoints
  * update quick sync checkpoints and hash
  * wallet: fix payment ID decryption for construction data
  * blockchain: remove buggy long term block weight cache
  * blockchain: fix block template creation race
  * tests: add a CNv4 JIT test
  * blockchain: fix long term weight addition on pop/init
  * crypto: plug CNv4 JIT into cn_slow_hash
  * crypto: clear cache after generating random program
  * performance_tests: add tests for new Cryptonight variants
  * rpc: fix wrongly formatted JSON for pruned tx
  * CNv4 JIT compiler for x86-64 and tests
  * db_lmdb: fix missing mdb_dbi_close in migration
  * CMakeLists.txt: detect and use -pthread compiler flag
  * miner: fix build with boost 1.69
  * mlocker: fix access to global lock map after dtor on exit
  * mlocker: fix dtor ordering problem
  * blockchain: fix m_long_term_block_weight_height initialization
  * blockchain: forbid older BP rct versions from v11
  * Fix v3/v4 db conversion
  * Build fixes for some platforms
  * blockchain: add v10 fork heights
  * Adding cnv4-2 tweaks
  * Cryptonight variant 4 aka CryptonightR
  * slow-hash: some more big endian fixes
  * slow-hash: fix for big endian
  * Small function declaration cleanup in slow-hash.c
  * Add support for V10 protocol with BulletProofV2 and short amount.
  * Fix dummy decryption in debug mode
  * fix log namespace
  * New scheme key destination contrfol
  * cryptonote: Fix enum check in expand_transaction_2
  * simplewallet: tell the user to complain to the recipient
  * ringct: fix v1 ecdhInfo serialization
  * ringct: the commitment mask is now deterministic
  * ringct: encode 8 byte amount, saving 24 bytes per output
  * ringct: save 3 bytes on bulletproof size
  * add a bulletproof version, new bulletproof type, and rct config
  * core: include a dummy encrypted payment id when no payment is used
  * core, wallet: remember original text version of destination address
  * simplewallet: disable long payment ids by default
  * blockchain: fix wrong hf version when popping multiple blocks
  * simplewallet: remove ability to transfer with detached short payment ids
  * blockchain: fix block rate check for empty blockchains
  * ignore child process when exec
  * wallet2: fix ring reuse breaking when using histogram
  * core: fix unmixable special case allowing ring size below 11
  * blockchain: include number of discarded blocks in --reorg-notify
  * core: add a few more block rate window sizes
  * notify: fix tokenizing being too strict
  * core: add --block-rate-notify
  * blockchain: add --reorg-notify
  * cryptonote_core: warn when the block rate deviates from expectations
  * notify: handle arbitrary tags
  * ArticMine's new block weight algorithm

-------------------------------------------------------------------
Fri Feb 22 19:46:37 UTC 2019 - marec <marec@detebe.org>

- Update to version 0.14.0.0:
  * update readme wording to more accurately reflect PoW
  * bump version, update readme to reflect, update checkpoints
  * update quick sync checkpoints and hash
  * wallet: fix payment ID decryption for construction data
  * blockchain: remove buggy long term block weight cache
  * blockchain: fix block template creation race
  * tests: add a CNv4 JIT test
  * crypto: plug CNv4 JIT into cn_slow_hash
  * crypto: clear cache after generating random program
  * performance_tests: add tests for new Cryptonight variants
  * rpc: fix wrongly formatted JSON for pruned tx

-------------------------------------------------------------------
Thu Oct 25 15:13:28 UTC 2018 - marec@detebe.org

- Update to version 0.13.0.4:
  * wallet2: extend fake out picks away from the gamma pick
  * update version to 0.13.0.4
  * Providing user supplied default constructor for expect<void>
  * console_handler: add a global log when exiting via EOF
  * blockchain: move two new verification errors to the verify category
  * rpc: fix output distribution caching ignoring chain changes
  * Rename "blackball" for clarity
  * device: fixed Ledger Nano S device selection
  * core: don't verify range proofs multiple times

-------------------------------------------------------------------
Mon Oct 15 16:48:45 UTC 2018 - marec@detebe.org

- Update to version 0.13.0.3:
  * update the version in readme
  * bump version to 0.13.0.3
  * tx_pool: store hex string instead of raw binary to tx_blob of get_transaction_pool RPC
  * build: use ARCH 'native' by default, allow to configure and override it
  * Dockerfile: init and update submodules
  * Revert "p2p: connect via the bound ip, if any"
  * SOFTWARE is the default wallet device
  * daemon: do not run complex code in a signal handler
  * simplewallet: mark default-ring-size setting as obsolete
  * simplewallet: fix view key parsing in --generate-from-view-key

-------------------------------------------------------------------
Wed Oct 10 18:07:55 UTC 2018 - marec@detebe.org

- Update to version 0.13.0.2:
  * remove -release from the version string
  * update version for release
  * Merge pull request #4540
  * Merge pull request #4517
  * Merge pull request #4535
  * Merge pull request #4538
  * Merge pull request #4532
  * Merge pull request #4530
  * Merge pull request #4529
  * Merge pull request #4527

-------------------------------------------------------------------
Tue Oct  2 16:01:37 UTC 2018 - marec@detebe.org

- Update to version 0.12.4.0:
  * wallet2: fix transfers between subaddresses hitting the sanity check
  * wallet2: fix duplicate output making it to the RPC
  * epee: fix invalid memory write reading an array entry
  * epee: fix stack overflow on crafted input
  * abstract_tcp_server2: fix race on shutdown
  * add .load() to make Boost 1.67 happy with its new is_integral check
  * wallet2: ensure outputs are processed only once
  * simplewallet: reword "seed encryption" to "seed offset"

-------------------------------------------------------------------
Sun Jul  8 11:11:35 UTC 2018 - marec@detebe.org

- Update to version 0.12.3.0:
  * add .load() to make Boost 1.67 happy with its new is_integral check
  * wallet2: ensure outputs are processed only once
  * bump version to 12.3
  * docker: update to new versions of dependencies
  * fix sha256sum check, which requires two spaces. added set -ex to catch this, and other, errors in the future.
  * wallet2: fix double counting outs if the tx pubkey is duplicated
  * abstract_tcp_server2: fix use after free
  * device_ledger: fix buffer underflow on bad data from device
  * device: misc cleanup
  * device_ledger: fix potential buffer overflow from bad size calc

-------------------------------------------------------------------
Sat Jun  2 15:38:34 UTC 2018 - marec@detebe.org

- Update to version 0.12.2.0:
  * protocol: drop (and increase fails) if most blocks hashes are invalid
  * blockchain: demote a hash-of-hashes validation warning to debug
  * remove -master from version string
  * update checkpoints.dat for point release
  * bump version for 0.12.2 point release
  * rpc: the cache is still for non cumulative on that branch
  * rpc: convert distribution to cumulative after caching
  * rapidjson: remove outdated in-tree, use submodule

-------------------------------------------------------------------
Tue May 29 19:01:24 UTC 2018 - marec@detebe.org

- Update to version 0.12.1.0:
  * update checkpoints
  * update checkpoints for point release
  * bump version for point release
  * Fix PCSC discovery under Windows/MSYS Fix PCSC compilation under windows
  * simplewallet: use correct unit for fee command
  * Fix output shuffling for multisig
  * speed up get_output_distribution (and precalc common case)
  * daemon: request unpruned transactions for print_tx
  * crypto: more places needing fixing for GCC 8.1
  * chacha: fix build with GCC 8.1
  * Wallet API: allow log path to be non-default & console output to be configurable

-------------------------------------------------------------------
Sun Apr  8 15:57:16 UTC 2018 - marec@detebe.org

- Update to version 0.12.0.0:
  * update block hashes for checkpoints.dat
  * rpc: make get_output_distribution a non-restricted RPC
  * wallet2: set from_height of GET_OUTPUT_DISTRIBUTION correctly The previous expression
  * p2p: correct port number for seed nodes
  * wallet2: fix for loading settings of key reuse mitigation
  * Revert bb19386b
  * Fix generating version.cpp
  * change wording in hard fork description section
  * wallet: catch exceptions dealing with ringdb and warn
  * core: fix use of uninitialised data

-------------------------------------------------------------------
Thu Nov  2 09:55:11 UTC 2017 - marec@detebe.org

- Update to version 0.11.1.0:
  * update version to 0.11.1.0
  * wallet2: fix tx size estimator for large number of inputs
  * core: guard against a mined block not finding all txes in the pool
  * simplewallet: add get/set for refresh-from-height
  * wallet2: Missing underflow check on low heights
  * core: fix failure to sync when a tx is already in the pool
  * Source updates are in a source subdirectory
  * blockchain: fix crash checking pre-validated txids

-------------------------------------------------------------------
Thu Sep 14 19:20:59 UTC 2017 - marec@detebe.org

- Update to version 0.11.0.0:
  * update checkpoint hashes
  * update hardcoded checkpoints
  * update checkpoints.dat
  * tx_pool: catch exceptions in LockedTXN dtor
  * Add a --fluffy-blocks option to relay blocks as fluffy blocks
  * Use latest height for fork date estimate
  * blockchain_import: warn for chunks over 500000, not 100000
  * blockchain_import: properly cleanup core/db on exit
  * blockchain_import: do not error out on truncated files
  * Fix miniupnpc CVE-2017-8798

-------------------------------------------------------------------
Mon Mar 27 17:07:21 UTC 2017 - marec@detebe.org

- Update to version 0.10.3.1:
  * update version to 0.10.3.1 tag
  * core: disable tx/block hash cache
  * Silence warning about possibly uninitialized pointer
  * mnemonics: sanity checks for word lists
  * mnemonics: misc cleanup
  * wallet: option to merge destinations
  * core: avoid possible reordering bugs wth tx/bloch hash cache
  * Fixed typo in v5 hard fork finalized date
  * Fixed typo in CLI wallet help message

-------------------------------------------------------------------
Mon Mar 20 17:12:09 UTC 2017 - marec@detebe.org

- Update to version 0.10.3:
  * update version to 0.10.3.1 tag
  * core: disable tx/block hash cache
  * Silence warning about possibly uninitialized pointer
  * mnemonics: sanity checks for word lists
  * mnemonics: misc cleanup
  * wallet: option to merge destinations
  * core: avoid possible reordering bugs wth tx/bloch hash cache
  * Fixed typo in v5 hard fork finalized date
  * Fixed typo in CLI wallet help message

-------------------------------------------------------------------
Sat Feb 25 10:21:35 UTC 2017 - marec@detebe.org

- Update to version 0.10.2.1:
  * daemon: avoid pre-log-init spew on creating directories
  * wallet: avoid pre-log-init spew on --version
  * update version
  * wallet_rpc_server: new --trusted-daemon flag
  * Updated default RPC timeout from 5 seconds to 15 seconds
  * add rpc timeouts to calls that might timeout
  * wallet2: fix wrong status on daemon shutdown/startup

-------------------------------------------------------------------
Thu Feb 23 17:10:32 UTC 2017 - marec@detebe.org

- Update to version 0.10.2:
  * daemon: avoid pre-log-init spew on creating directories
  * wallet: avoid pre-log-init spew on --version
  * update version
  * wallet_rpc_server: new --trusted-daemon flag
  * Updated default RPC timeout from 5 seconds to 15 seconds
  * add rpc timeouts to calls that might timeout
  * wallet2: fix wrong status on daemon shutdown/startup

-------------------------------------------------------------------
Tue Dec 13 17:55:11 UTC 2016 - marec@detebe.org

- Update to version 0.10.1:
  * Bitmonero namespace renamed Monero. Bitmonero namespace alias added so that third party uses of the wallet api can transition.
  * rename cn_deserialize
  * blockchain: fix reorganizations past a hard fork boundary
  * monero-wallet-cli wording changes 'n' stuff
  * Tx verification failing is not an error
  * bump version
  * update checkpoints
  * update checkpoints
  * addressbook updates

-------------------------------------------------------------------
Sun Sep 11 18:52:50 UTC 2016 - marec@detebe.org

- initial package build

