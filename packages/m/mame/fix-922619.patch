Description: Fix FTBFS on power "not a constant expression"
There are some explanation upstream :
https://github.com/mamedev/mame/issues/3157
and this probably due to the fact that IBM 128bit long double format
is not constant folded.
I slighlty rewrote ""_kHz_XTAL(long double clock) and ""_MHz_XTAL(long double clock)
the way ""_kHz_XTAL(unsigned long long clock) and ""_MHz_XTAL(unsigned long long clock)
which makes the compiler happy.
Also including an upstream change about rounding to get same results as on x86
: https://github.com/mamedev/mame/pull/5164
Author: Frédéric Bonnard <frediz@debian.org>
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/

As per comments in above issue#3157, this patch not accepted upstream,
but allow ppc64le to build.

--- a/src/emu/xtal.h
+++ b/src/emu/xtal.h
@@ -81,8 +81,8 @@
 constexpr XTAL operator *(double       mult, const XTAL &xtal) { return XTAL(xtal.base(), mult * xtal.dvalue()); }
 
 constexpr XTAL operator ""_Hz_XTAL(long double clock) { return XTAL(double(clock)); }
-constexpr XTAL operator ""_kHz_XTAL(long double clock) { return XTAL(double(clock * 1e3)); }
-constexpr XTAL operator ""_MHz_XTAL(long double clock) { return XTAL(double(clock * 1e6)); }
+constexpr XTAL operator ""_kHz_XTAL(long double clock) { return XTAL(double(clock) * 1e3); }
+constexpr XTAL operator ""_MHz_XTAL(long double clock) { return XTAL(double(clock) * 1e6); }
 
 constexpr XTAL operator ""_Hz_XTAL(unsigned long long clock) { return XTAL(double(clock)); }
 constexpr XTAL operator ""_kHz_XTAL(unsigned long long clock) { return XTAL(double(clock) * 1e3); }

