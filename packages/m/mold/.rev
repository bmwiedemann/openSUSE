<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>858344c2d79be113703f2a53e4c60ac4</srcmd5>
    <version>1.0.0</version>
    <time>1640111945</time>
    <user>dimstar_suse</user>
    <comment>Add new Modern Linker (mold) package.</comment>
    <requestid>941885</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>17f440c248f17eee097cc6f6863c3f5a</srcmd5>
    <version>1.0.0</version>
    <time>1640200690</time>
    <user>dimstar_suse</user>
    <comment>- Ignore -Wno-sign-compare for now.

- Use system package for tbb and xxhash.</comment>
    <requestid>942074</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>47321d9eae1f820067541a2efd750783</srcmd5>
    <version>1.0.1</version>
    <time>1641321449</time>
    <user>dimstar_suse</user>
    <comment>- Start using %{_libexecdir} as an installation location.

- Remove quotationsmarks from build_args as it prevented the use
  of system packages for TBB and xxHash.
- Drop configure-fix.patch as xxHash is used from system package,
  so we don't need to patch the wrong configuration of xxHash.
- Use telling name of source tarball, adjust GitHub url to have
  matching names.

- Update to version 1.0.1:
  * make install now creates /usr/local/libexec/mold/ld as
  a symlink to the mold executable. We do this for GCC.
  By passing -B/usr/local/libexec/mold, you can tell GCC to use ld
  inside that directory instead of /usr/bin/ld. (e8dcecf)
  * xxHash library is now included in the mold's source tree as a subtree for ease of building.
    If you want to link against a libxxhash in a system library directory, pass SYSTEM_XXHASH=1 to make. (665bffa)
  * The extern &quot;C++&quot; directive is now supported in the dynamic list. (7aa5c39)
  * --color-diagnostics is supported. mold used to ignore that flag. (6e290aa)
  * Not only * but also ? are now treated as special characters in the version script wildcard pattern. (31b0248)
  * The --threads=N option has been added as
    an alias for --thread-count=N. (f9ff048)
  * The following option has been added: --defsym (f6e8006), -z nodefaultlib (8c86c28),
    -z separate-code, -z noseparate-code and -z separate-lodable-segments (5601cf4), -z max-page-size (f3766cd)
- Add workaround patch configure-fix.patch.</comment>
    <requestid>943544</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>ccc436b7393d9217d2d764b9fb69f9bd</srcmd5>
    <version>1.0.2</version>
    <time>1642941698</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.0.2: complete release notes can be found here:
  https://github.com/rui314/mold/releases/tag/v1.0.2.</comment>
    <requestid>948209</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>e7809f42d4e4d64270bfa2f3b458cbd7</srcmd5>
    <version>1.0.3</version>
    <time>1643838005</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>950270</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>e9fbc80856185c169dc931e905fc945e</srcmd5>
    <version>1.1</version>
    <time>1645462001</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.1:
  https://github.com/rui314/mold/releases/tag/v1.1.</comment>
    <requestid>956314</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>0e7b08c9817fd2c1586365b42eccc8dd</srcmd5>
    <version>1.1</version>
    <time>1645723267</time>
    <user>dimstar_suse</user>
    <comment>- Fix building for openSUSE Leap 15.3 and 15.4.</comment>
    <requestid>957354</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>57d103eb56ef4c96e9417f768ac10832</srcmd5>
    <version>1.1.1</version>
    <time>1646767931</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>960207</requestid>
  </revision>
  <revision rev="9" vrev="2">
    <srcmd5>c9e2076a82dfe7726b1f35d9176353c1</srcmd5>
    <version>1.1.1</version>
    <time>1649450786</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>967876</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>a15f31b962df50832508490d57a15dcf</srcmd5>
    <version>1.2</version>
    <time>1650060934</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.2.0
  * The ARM32 target is now supported.
  * --gdb-index is implemented.
  * mold now supports the following flags: --start-address, -Tbss,
    -Tdata, -Ttext, --oformat=binary, --disable-new-dtags</comment>
    <requestid>970337</requestid>
  </revision>
  <revision rev="11" vrev="2">
    <srcmd5>66175bad4cac39b2be504654361294f5</srcmd5>
    <version>1.2</version>
    <time>1650466480</time>
    <user>dimstar_suse</user>
    <comment>- Run test serially.
- Install some packages in order to increase test coverage.
- Use ExclusiveArch.

- Add fix-gdb-index.patch.
- Enable tests.</comment>
    <requestid>971086</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>ab9678a15946f5d488e44a4ce85b9048</srcmd5>
    <version>1.2.1</version>
    <time>1651180097</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.2.1
  * Various bugs in --gdb-index have been fixed.
  * mold now recognizes --thinlto-cache-dir and --thinlto-cache-policy
    for the sake of compatibility with LLVM lld. (7ebd071)
  * mold can now handle TLS common symbols. It looks like GCC
    sometimes creates such symbol for a thread-local variable. (cf850f8)
  * In some edge cases, mold created a non-versioned symbol and
    a versioned one for the same symbol, even though if one symbol is versioned,
    all symbols of the same name must be versioned.
    This bug has been fixed. (8298c0a)
  * mold used to write a PLT address of a symbol instead
    of its address to .symtab. This bug has been fixed. (e088db7)
  * mold can now handle an input file
    with more than 219 symbols. (f1f2d40)
  * /usr/local/libexec/mold/ld is now installed
    as a relative symlink instead of an absolute symlink. (5803c3c)
- Removed upstreamed fix-gdb-index.patch patch.</comment>
    <requestid>973715</requestid>
  </revision>
  <revision rev="13" vrev="2">
    <srcmd5>15f3b07ff878bfec7632fb24d2d406a3</srcmd5>
    <version>1.2.1</version>
    <time>1652389097</time>
    <user>dimstar_suse</user>
    <comment>- Do not use mimalloc, use system glibc allocator.

- Add valgrind as BuildRequire argument.</comment>
    <requestid>976062</requestid>
  </revision>
  <revision rev="14" vrev="3">
    <srcmd5>217c84804ce650a57354b3182e9985df</srcmd5>
    <version>1.2.1</version>
    <time>1653061870</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>978268</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>3c653354621651247df215be4ecacb81</srcmd5>
    <version>1.3.0</version>
    <time>1655582771</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.3.0
  * The --icf=safe option has been supported.
  * LTO now works reliably under a heavy load.
  mold used to abort occasionally under such condition on Linux
  due to a spurious failure of pthread_create(2). (d8a8877)
  * mold now prints out undefined symbol errors in a format similar to LLVM lld. (13816a1)
  * mold now prints out a better error message for the disk full situation. (5969260)
  * mold can now build GCC 12 with LTO. (708ad63)
  * Fixed an LTO issue on 32-bits hosts such as i686. (920266b)
  * mold is now AddressSanitizer and UndefinedSanitizer clean. (fafb75b, 3499ee6)
  * mold used to create broken debug info on 32-bits hosts (#490).
    The bug has been fixed. (0abd0a4)
  * mold used to accept not only a single dash but also double
    dashes for single-letter options. For example, --S was accidentally accepted as an alias for-S.
    This is unconventional, and such options are no longer accepted. (232dafa)
  * --color-diagnostics is now an alias for --color-diagnostics=auto
    instead of --color-diagnostics=always for compatibility with LLVM lld.
  * pkg-config is no longer needed to build mold.
  * The --package-metadata option is supported. (#505, e9f6715)</comment>
    <requestid>983544</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>d910c18f7e71121e98b60fe141bca6e5</srcmd5>
    <version>1.3.1</version>
    <time>1656675905</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.3.1
  * mold now supports .preinit_array sections. Without this,
    AddressSanitizer didn't work in some environments. (3b75398)
  * [ARM32] R_ARM_MOVT_PREL and R_ARM_PREL31 relocations are now handled
    correctly so that mold no longer emit spurious &quot;recompile with -fPIC&quot; errors. (5294300)</comment>
    <requestid>986181</requestid>
  </revision>
  <revision rev="17" vrev="2">
    <srcmd5>00b6d93ec7a414544a071c106fb3bbc5</srcmd5>
    <version>1.3.1</version>
    <time>1659382374</time>
    <user>RBrownFactory</user>
    <comment>- Add fix-tests.patch which fixes tests on i586.</comment>
    <requestid>992001</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>58c3e9732dc571b1f365a0bd6f93df5b</srcmd5>
    <version>1.4.0</version>
    <time>1659816477</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.4.0
  * Initial support for the 32-bit RISC-V (RV32) has landed. (d9db6bc)
  * mold now demangles Rust symbols in error messages thanks to @eddyb's rust-demangle.c. (22e1bba)
  * --export-dynamic-symbol and --export-dynamic-symbol-list are now supported for
    the sake of compatibility with LLVM lld. With these options, you can specify
    symbols that should be exported using glob pattern. (e115aae)
  * [x86-64] PLT entries created by mold now always begins with ENDBR64 instruction
    to improve compatibility with Intel IBT (Indirect Branch Tracking.) (e3e371d)
  * mold now defines __dso_handle symbol. The lack of this linker-synthesized symbol
    caused a link error with GCC in some environments (#507). (764d757)
- Remove fix-tests.patch.</comment>
    <requestid>993355</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>3ff05caac3020c5c5737f6d3e588b3ef</srcmd5>
    <version>1.4.1</version>
    <time>1660834139</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.4.1
  * mold/macOS is now available as an alpha feature. We do not recommend using it for anything
    serious though. Starting from this version, we accept not only mold/Unix issues but also
    mold/macOS ones on our GitHub Issues. Feel free to file a bug if you encounter any problem.
  * We started supporting CMake in addition to Make to build mold. Our long-term plan is to migrate
    from Make to CMake because we want to support Windows eventually and CMake provides
    a better Windows support than Make does. (e6a0e67)
  * There was a bug that mold accidentally exported a hidden symbol from an executable
    if a shared library linked to that executable happened to define the same symbol.
    This caused a build issue with Blender (#606). The bug has been fixed. (b163068)
    --hash-style=both is now the default if no --hash-style option is given. Previously,
    --hash-style=sysv was the default. This change shouldn't affect most users because
    the compiler driver (cc, gcc, clang, etc.) always passes --hash-style to the linker.
    We made this change because GNU ld defaults to --hash-style=both.
  * Alias symbols defined by the --defsym option now have the same scope as the aliased symbols.
    Previously, alias symbols defined by --defsym were always hidden and never
    be exported as dynamic symbols. (5dd1227)
  * mold now accepts foo = bar-style linker script directive to define symbol aliases.
    Previously, such statement was treated as a syntax error.
    This change was made to link mariadb-connector-c correctly (f0e1237)
  * Symbols in mergeable string sections now have correct output section
    indices instead of SHN_UNDEF. (a595c48)
  * [ARM32] Previously, calling a function from ARM code to Thumb code
    caused a program crash due to bug #442. This issue has been fixed. (053b90b)
- Run tests in parallel.</comment>
    <requestid>997709</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>5ef0b01a5febffcea9be8dea6ea08dd8</srcmd5>
    <version>1.4.2</version>
    <time>1662322302</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.4.2
  * [RV32] We've fixed several issues for 32-bit RISC-V.
    mold can now build complex programs including itself for the target.
  * [ARM32] mold gained range extension thunks so that it can now link programs whose
    .text is larger than 16 MiB. Previously, mold couldn't link such large programs.
    We've also fixed general stability issues for ARM32.</comment>
    <requestid>1001085</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>eac703c4acf7e81e71a252b8e2ab50cb</srcmd5>
    <version>1.5.0</version>
    <time>1664302446</time>
    <user>RBrownFactory</user>
    <comment>- Update to version 1.5.0
  * PPC64LE and SPARC64 are now supported as new targets. They haven't yet been as
    well tested as other targets, but they are already able to link mold itself on
    these platforms. (Note that PPC64LE is very unlikely to work on the most recent
    POWER10 machines as we didn't have a chance to test it due to a limited
    availability (POWER10 was released in 2021). If you can support us on this
    matter, please contact us. We also accept donations, so please consider
    supporting our project!)
  * RV32BE and RV64BE (32-bit and 64-bit big-endian RISC-V) are now supported as
    experimental targets. RISC-V is usually little-endian, but there exists a
    big-endian RISC-V as an extension. You can make gcc to emit code for big-endian
    RISC-V by passing -mbig-endian. mold can now link object files generated with
    that option.
  * --compress-debug-sections=zstd is now supported. This is an option to compress
    debug info embedded to an output file with Zstandard compression algorithm.
    Compared to the existing --compress-debug-sections=zlib, zstd is faster and
    gives a higher compression ratio. You probably can't start using zstd
    compression today though, because other tools such as gdb may not be able to
    read zstd-compressed debug info yet. But adding this option early makes mold
    future-proof. (ede7a5a)
  * mold no longer aligns loadable segments to page boundaries to reduce output file
    size. Previously, we allocated holes between loadable segments. The saving by
    this change is most visible for small programs. For example, a &quot;hello world&quot;
    program used to be ~18 KiB on x86-64. It's now 7.2 KiB. (2941d75)
  * Bug fixes and compatibility improvements
  * [RISCV] We optimized code so that the link speed for RISC-V is now comparable to
    the other targets. As an example, linking mold itself (~150 MiB in size) for
    RV64 used to take ~45 seconds on a simulated 16-core machine. It now takes only
    ~0.25 seconds. (3ab5489)
  * mold used to create more than one .rodata section under a certain condition.</comment>
    <requestid>1006332</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>610131779af2ab210318a2776a6876ea</srcmd5>
    <version>1.5.1</version>
    <time>1664468017</time>
    <user>RBrownFactory</user>
    <comment>- Update to version 1.5.1
  * We changed the memory layout to save both memory and disk space in 1.5.0. Even
    though the new layout works fine on most systems, the change made the linker to
    create unusable executables for systems with large pages. Specifically, if you
    specify a large number for the -z max-page-size option, the loader refused to
    execute it with the error while loading shared libraries: cannot apply
    additional memory protection after relocation: Cannot allocate memory error. We
    reverted our recent commits so that mold creates output files with the same
    memory layout as it did before 1.5.0. (e62de0b)</comment>
    <requestid>1006841</requestid>
  </revision>
</revisionlist>
