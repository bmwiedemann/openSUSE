
# HG changeset patch
# User Mike Hommey <mh+mozilla@glandium.org>
# Date 1526871862 -32400
# Node ID 94f21505ff13cd089f7129cd24927cf8b31a0f43
# Parent  0b7e1398ca2e15e27da93144ba9fb30db38367b1
Bug 1463035 - Remove MOZ_SIGNAL_TRAMPOLINE. r?darchons

For some reason, GNU as is not happy with the assembly generated after
bug 1238661 anymore on Debian armel.

OTOH, as mentioned in bug 1238661 comment 4, we actually don't need this
workaround anymore, so let's just kill it.

diff --git a/mozglue/baseprofiler/core/platform-linux-android.cpp b/mozglue/baseprofiler/core/platform-linux-android.cpp
--- a/mozglue/baseprofiler/core/platform-linux-android.cpp
+++ b/mozglue/baseprofiler/core/platform-linux-android.cpp
@@ -55,17 +55,16 @@
 #ifdef __GLIBC__
 #  include <execinfo.h>  // backtrace, backtrace_symbols
 #endif                   // def __GLIBC__
 #include <strings.h>     // index
 #include <errno.h>
 #include <stdarg.h>
 
 #include "prenv.h"
-#include "mozilla/LinuxSignal.h"
 #include "mozilla/PodOperations.h"
 #include "mozilla/DebugOnly.h"
 
 #include <string.h>
 #include <list>
 
 using namespace mozilla;
 
@@ -266,17 +265,17 @@ Sampler::Sampler(PSLockRef aLock)
 
   // NOTE: We don't initialize LUL here, instead initializing it in
   // SamplerThread's constructor. This is because with the
   // profiler_suspend_and_sample_thread entry point, we want to be able to
   // sample without waiting for LUL to be initialized.
 
   // Request profiling signals.
   struct sigaction sa;
-  sa.sa_sigaction = MOZ_SIGNAL_TRAMPOLINE(SigprofHandler);
+  sa.sa_sigaction = SigprofHandler;
   sigemptyset(&sa.sa_mask);
   sa.sa_flags = SA_RESTART | SA_SIGINFO;
   if (sigaction(SIGPROF, &sa, &mOldSigprofHandler) != 0) {
     MOZ_CRASH("Error installing SIGPROF handler in the profiler");
   }
 }
 
 void Sampler::Disable(PSLockRef aLock) {
diff --git a/tools/profiler/core/platform-linux-android.cpp b/tools/profiler/core/platform-linux-android.cpp
--- a/tools/profiler/core/platform-linux-android.cpp
+++ b/tools/profiler/core/platform-linux-android.cpp
@@ -258,17 +258,17 @@ Sampler::Sampler(PSLockRef aLock)
 
   // NOTE: We don't initialize LUL here, instead initializing it in
   // SamplerThread's constructor. This is because with the
   // profiler_suspend_and_sample_thread entry point, we want to be able to
   // sample without waiting for LUL to be initialized.
 
   // Request profiling signals.
   struct sigaction sa;
-  sa.sa_sigaction = MOZ_SIGNAL_TRAMPOLINE(SigprofHandler);
+  sa.sa_sigaction = SigprofHandler;
   sigemptyset(&sa.sa_mask);
   sa.sa_flags = SA_RESTART | SA_SIGINFO;
   if (sigaction(SIGPROF, &sa, &mOldSigprofHandler) != 0) {
     MOZ_CRASH("Error installing SIGPROF handler in the profiler");
   }
 }
 
 void Sampler::Disable(PSLockRef aLock) {
