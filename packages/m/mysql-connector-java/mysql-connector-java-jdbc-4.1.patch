From 3186d1ff965c608171d34903d6c0b8c91a866c43 Mon Sep 17 00:00:00 2001
From: Emmanuel Bourg <ebourg@apache.org>
Date: Tue, 27 Oct 2015 11:35:57 +0100
Subject: [PATCH] Java 8 compatibility

---
 .../fabric/jdbc/FabricMySQLConnectionProxy.java    |  32 ++++
 src/com/mysql/fabric/jdbc/FabricMySQLDriver.java   |   4 +-
 src/com/mysql/jdbc/CallableStatement.java          |  84 +++++++++
 src/com/mysql/jdbc/ConnectionImpl.java             |  52 ++++++
 src/com/mysql/jdbc/DatabaseMetaData.java           |  16 ++
 src/com/mysql/jdbc/MultiHostMySQLConnection.java   |  52 ++++++
 src/com/mysql/jdbc/NonRegisteringDriver.java       |   5 +
 src/com/mysql/jdbc/PreparedStatement.java          |  12 ++
 src/com/mysql/jdbc/ReplicationConnection.java      |  52 ++++++
 src/com/mysql/jdbc/ResultSetImpl.java              | 196 +++++++++++++++++++++
 .../jdbc2/optional/CallableStatementWrapper.java   | 136 ++++++++++++++
 .../jdbc/jdbc2/optional/ConnectionWrapper.java     |  52 ++++++
 .../mysql/jdbc/jdbc2/optional/MysqlDataSource.java |  12 ++
 .../jdbc/jdbc2/optional/MysqlPooledConnection.java |  11 ++
 .../jdbc2/optional/PreparedStatementWrapper.java   |  72 ++++++++
 .../jdbc/jdbc2/optional/StatementWrapper.java      |  28 +++
 .../jdbc2/optional/SuspendableXAConnection.java    |   8 +
 17 files changed, 822 insertions(+), 2 deletions(-)

Index: mysql-connector-java-5.1.49/src/com/mysql/fabric/jdbc/FabricMySQLConnectionProxy.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/fabric/jdbc/FabricMySQLConnectionProxy.java
+++ mysql-connector-java-5.1.49/src/com/mysql/fabric/jdbc/FabricMySQLConnectionProxy.java
@@ -3073,4 +3073,36 @@ public class FabricMySQLConnectionProxy
     public String getQueryTimingUnits() {
         return getActiveMySQLConnection().getQueryTimingUnits();
     }
+
+    public java.sql.Clob createClob() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.Blob createBlob() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.NClob createNClob() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.SQLXML createSQLXML() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setClientInfo(String name, String value) throws java.sql.SQLClientInfoException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setClientInfo(Properties properties) throws java.sql.SQLClientInfoException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.Array createArrayOf(String typeName, Object[] elements) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.Struct createStruct(String typeName, Object[] attributes) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
 }
Index: mysql-connector-java-5.1.49/src/com/mysql/fabric/jdbc/FabricMySQLDriver.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/fabric/jdbc/FabricMySQLDriver.java
+++ mysql-connector-java-5.1.49/src/com/mysql/fabric/jdbc/FabricMySQLDriver.java
@@ -103,7 +103,7 @@ public class FabricMySQLDriver extends N
         return super.parseURL(url.replaceAll("fabric:", ""), defaults);
     }
 
-    public Logger getParentLogger() throws SQLException {
-        throw new SQLException("no logging");
+    public Logger getParentLogger() throws java.sql.SQLFeatureNotSupportedException {
+        throw new java.sql.SQLFeatureNotSupportedException("no logging");
     }
 }
Index: mysql-connector-java-5.1.49/src/com/mysql/jdbc/CallableStatement.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/jdbc/CallableStatement.java
+++ mysql-connector-java-5.1.49/src/com/mysql/jdbc/CallableStatement.java
@@ -2383,6 +2383,90 @@ public class CallableStatement extends P
         }
     }
 
+    public java.sql.RowId getRowId(int parameterIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.RowId getRowId(String parameterName) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setRowId(String parameterName, java.sql.RowId x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNString(String parameterName, String value) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNClob(String parameterName, java.sql.NClob value) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNClob(String parameterName, Reader reader, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.NClob getNClob(int parameterIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.NClob getNClob(String parameterName) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setSQLXML(String parameterName, java.sql.SQLXML xmlObject) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.SQLXML getSQLXML(int parameterIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.SQLXML getSQLXML(String parameterName) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public String getNString(int parameterIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public String getNString(String parameterName) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public Reader getNCharacterStream(int parameterIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public Reader getNCharacterStream(String parameterName) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public Reader getCharacterStream(int parameterIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public Reader getCharacterStream(String parameterName) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNClob(String parameterName, Reader reader) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setRowId(int parameterIndex, java.sql.RowId x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNClob(int parameterIndex, java.sql.NClob value) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setSQLXML(int parameterIndex, java.sql.SQLXML xmlObject) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
     /**
      * JDBC 4.2
      */
Index: mysql-connector-java-5.1.49/src/com/mysql/jdbc/ConnectionImpl.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/jdbc/ConnectionImpl.java
+++ mysql-connector-java-5.1.49/src/com/mysql/jdbc/ConnectionImpl.java
@@ -5518,4 +5518,56 @@ public class ConnectionImpl extends Conn
     public String getQueryTimingUnits() {
         return this.io != null ? this.io.getQueryTimingUnits() : Constants.MILLIS_I18N;
     }
+
+    public java.sql.Clob createClob() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.Blob createBlob() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.NClob createNClob() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.SQLXML createSQLXML() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public boolean isValid(int timeout) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setClientInfo(String name, String value) throws java.sql.SQLClientInfoException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setClientInfo(Properties properties) throws java.sql.SQLClientInfoException {
+        throw new UnsupportedOperationException();
+    }
+
+    public String getClientInfo(String name) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public Properties getClientInfo() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.Array createArrayOf(String typeName, Object[] elements) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.Struct createStruct(String typeName, Object[] attributes) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public <T> T unwrap(Class<T> iface) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public boolean isWrapperFor(Class<?> iface) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
 }
Index: mysql-connector-java-5.1.49/src/com/mysql/jdbc/DatabaseMetaData.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/jdbc/DatabaseMetaData.java
+++ mysql-connector-java-5.1.49/src/com/mysql/jdbc/DatabaseMetaData.java
@@ -7879,6 +7879,22 @@ public class DatabaseMetaData implements
         return pStmt;
     }
 
+    public java.sql.RowIdLifetime getRowIdLifetime() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public boolean autoCommitFailureClosesAllResultSets() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public <T> T unwrap(Class<T> iface) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public boolean isWrapperFor(Class<?> iface) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
     /**
      * JDBC-4.1
      * 
Index: mysql-connector-java-5.1.49/src/com/mysql/jdbc/MultiHostMySQLConnection.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/jdbc/MultiHostMySQLConnection.java
+++ mysql-connector-java-5.1.49/src/com/mysql/jdbc/MultiHostMySQLConnection.java
@@ -2506,4 +2506,56 @@ public class MultiHostMySQLConnection im
     public String getQueryTimingUnits() {
         return getActiveMySQLConnection().getQueryTimingUnits();
     }
+
+    public java.sql.Clob createClob() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.Blob createBlob() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.NClob createNClob() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.SQLXML createSQLXML() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public boolean isValid(int timeout) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setClientInfo(String name, String value) throws java.sql.SQLClientInfoException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setClientInfo(Properties properties) throws java.sql.SQLClientInfoException {
+        throw new UnsupportedOperationException();
+    }
+
+    public String getClientInfo(String name) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public Properties getClientInfo() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.Array createArrayOf(String typeName, Object[] elements) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.Struct createStruct(String typeName, Object[] attributes) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public <T> T unwrap(Class<T> iface) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public boolean isWrapperFor(Class<?> iface) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
 }
Index: mysql-connector-java-5.1.49/src/com/mysql/jdbc/NonRegisteringDriver.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/jdbc/NonRegisteringDriver.java
+++ mysql-connector-java-5.1.49/src/com/mysql/jdbc/NonRegisteringDriver.java
@@ -871,4 +871,9 @@ public class NonRegisteringDriver implem
     public static boolean isHostPropertiesList(String host) {
         return host != null && StringUtils.startsWithIgnoreCase(host, "address=");
     }
+
+    @Override
+    public java.util.logging.Logger getParentLogger() throws java.sql.SQLFeatureNotSupportedException {
+        throw new java.sql.SQLFeatureNotSupportedException();
+    }
 }
Index: mysql-connector-java-5.1.49/src/com/mysql/jdbc/PreparedStatement.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/jdbc/PreparedStatement.java
+++ mysql-connector-java-5.1.49/src/com/mysql/jdbc/PreparedStatement.java
@@ -5179,6 +5179,18 @@ public class PreparedStatement extends c
                 && StringUtils.indexOfIgnoreCase(statementStartPos, sql, "SELECT", "\"'`", "\"'`", StringUtils.SEARCH_MODE__MRK_COM_WS) == -1;
     }
 
+    public void setRowId(int parameterIndex, java.sql.RowId x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNClob(int parameterIndex, java.sql.NClob value) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setSQLXML(int parameterIndex, java.sql.SQLXML xmlObject) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
     /**
      * JDBC 4.2
      * Same as PreparedStatement.executeUpdate() but returns long instead of int.
Index: mysql-connector-java-5.1.49/src/com/mysql/jdbc/ResultSetImpl.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/jdbc/ResultSetImpl.java
+++ mysql-connector-java-5.1.49/src/com/mysql/jdbc/ResultSetImpl.java
@@ -7861,4 +7861,200 @@ public class ResultSetImpl implements Re
     public int getId() {
         return this.resultId;
     }
+
+    public java.sql.RowId getRowId(int columnIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.RowId getRowId(String columnLabel) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateRowId(int columnIndex, java.sql.RowId x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateRowId(String columnLabel, java.sql.RowId x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public int getHoldability() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateNString(int columnIndex, String nString) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateNString(String columnLabel, String nString) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateNClob(int columnIndex, java.sql.NClob nClob) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateNClob(String columnLabel, java.sql.NClob nClob) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.NClob getNClob(int columnIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.NClob getNClob(String columnLabel) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.SQLXML getSQLXML(int columnIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.SQLXML getSQLXML(String columnLabel) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateSQLXML(int columnIndex, java.sql.SQLXML xmlObject) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateSQLXML(String columnLabel, java.sql.SQLXML xmlObject) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public String getNString(int columnIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public String getNString(String columnLabel) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.io.Reader getNCharacterStream(int columnIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.io.Reader getNCharacterStream(String columnLabel) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateNCharacterStream(int columnIndex, java.io.Reader x, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateNCharacterStream(String columnLabel, java.io.Reader reader, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateAsciiStream(int columnIndex, InputStream x, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateBinaryStream(int columnIndex, InputStream x, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateCharacterStream(int columnIndex, java.io.Reader x, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateAsciiStream(String columnLabel, InputStream x, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateBinaryStream(String columnLabel, InputStream x, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateCharacterStream(String columnLabel, java.io.Reader reader, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateBlob(int columnIndex, InputStream inputStream, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateBlob(String columnLabel, InputStream inputStream, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateClob(int columnIndex, java.io.Reader reader, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateClob(String columnLabel, java.io.Reader reader, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateNClob(int columnIndex, java.io.Reader reader, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateNClob(String columnLabel, java.io.Reader reader, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateNCharacterStream(int columnIndex, java.io.Reader x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateNCharacterStream(String columnLabel, java.io.Reader reader) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateAsciiStream(int columnIndex, InputStream x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateBinaryStream(int columnIndex, InputStream x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateCharacterStream(int columnIndex, java.io.Reader x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateAsciiStream(String columnLabel, InputStream x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateBinaryStream(String columnLabel, InputStream x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateCharacterStream(String columnLabel, java.io.Reader reader) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateBlob(int columnIndex, InputStream inputStream) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateBlob(String columnLabel, InputStream inputStream) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateClob(int columnIndex, java.io.Reader reader) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateClob(String columnLabel, java.io.Reader reader) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateNClob(int columnIndex, java.io.Reader reader) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void updateNClob(String columnLabel, java.io.Reader reader) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public <T> T unwrap(Class<T> iface) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public boolean isWrapperFor(Class<?> iface) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
 }
Index: mysql-connector-java-5.1.49/src/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.java
+++ mysql-connector-java-5.1.49/src/com/mysql/jdbc/jdbc2/optional/CallableStatementWrapper.java
@@ -1498,6 +1498,142 @@ public class CallableStatementWrapper ex
 
         return null;
     }
+
+    public java.sql.RowId getRowId(int parameterIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.RowId getRowId(String parameterName) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setRowId(String parameterName, java.sql.RowId x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNString(String parameterName, String value) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNCharacterStream(String parameterName, Reader value, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNClob(String parameterName, java.sql.NClob value) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setClob(String parameterName, Reader reader, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setBlob(String parameterName, InputStream inputStream, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNClob(String parameterName, Reader reader, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.NClob getNClob(int parameterIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.NClob getNClob(String parameterName) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setSQLXML(String parameterName, java.sql.SQLXML xmlObject) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.SQLXML getSQLXML(int parameterIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.SQLXML getSQLXML(String parameterName) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public String getNString(int parameterIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public String getNString(String parameterName) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public Reader getNCharacterStream(int parameterIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public Reader getNCharacterStream(String parameterName) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public Reader getCharacterStream(int parameterIndex) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public Reader getCharacterStream(String parameterName) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setBlob(String parameterName, Blob x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setClob(String parameterName, Clob x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setAsciiStream(String parameterName, InputStream x, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setBinaryStream(String parameterName, InputStream x, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setCharacterStream(String parameterName, Reader reader, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setAsciiStream(String parameterName, InputStream x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setBinaryStream(String parameterName, InputStream x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setCharacterStream(String parameterName, Reader reader) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNCharacterStream(String parameterName, Reader value) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setClob(String parameterName, Reader reader) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setBlob(String parameterName, InputStream inputStream) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNClob(String parameterName, Reader reader) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public <T> T getObject(int parameterIndex, Class<T> type) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public <T> T getObject(String parameterName, Class<T> type) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
     //
     //	public Reader getCharacterStream(int parameterIndex) throws SQLException {
     //		try {
Index: mysql-connector-java-5.1.49/src/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.java
+++ mysql-connector-java-5.1.49/src/com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.java
@@ -2901,4 +2901,56 @@ public class ConnectionWrapper extends W
     public boolean isUseSSLExplicit() {
         return this.mc.isUseSSLExplicit();
     }
+
+    public java.sql.Clob createClob() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.Blob createBlob() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.NClob createNClob() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.SQLXML createSQLXML() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public boolean isValid(int timeout) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setClientInfo(String name, String value) throws java.sql.SQLClientInfoException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setClientInfo(Properties properties) throws java.sql.SQLClientInfoException {
+        throw new UnsupportedOperationException();
+    }
+
+    public String getClientInfo(String name) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public Properties getClientInfo() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.Array createArrayOf(String typeName, Object[] elements) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public java.sql.Struct createStruct(String typeName, Object[] attributes) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public <T> T unwrap(Class<T> iface) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public boolean isWrapperFor(Class<?> iface) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
 }
Index: mysql-connector-java-5.1.49/src/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.java
+++ mysql-connector-java-5.1.49/src/com/mysql/jdbc/jdbc2/optional/MysqlDataSource.java
@@ -436,6 +436,18 @@ public class MysqlDataSource extends Con
     //		throw SQLError.createSQLFeatureNotSupportedException();
     //	}
 
+    public java.util.logging.Logger getParentLogger() throws java.sql.SQLFeatureNotSupportedException {
+        throw new java.sql.SQLFeatureNotSupportedException();
+    }
+
+    public <T> T unwrap(Class<T> iface) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public boolean isWrapperFor(Class<?> iface) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
     @Override
     public Properties exposeAsProperties(Properties props) throws SQLException {
         return exposeAsProperties(props, true);
Index: mysql-connector-java-5.1.49/src/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.java
+++ mysql-connector-java-5.1.49/src/com/mysql/jdbc/jdbc2/optional/MysqlPooledConnection.java
@@ -33,6 +33,7 @@ import java.util.Map;
 import javax.sql.ConnectionEvent;
 import javax.sql.ConnectionEventListener;
 import javax.sql.PooledConnection;
+import javax.sql.StatementEventListener;
 
 import com.mysql.jdbc.ExceptionInterceptor;
 import com.mysql.jdbc.SQLError;
@@ -230,4 +231,14 @@ public class MysqlPooledConnection imple
     protected ExceptionInterceptor getExceptionInterceptor() {
         return this.exceptionInterceptor;
     }
+
+    @Override
+    public void addStatementEventListener(javax.sql.StatementEventListener listener) {
+        throw new UnsupportedOperationException();
+    }
+
+    @Override
+    public void removeStatementEventListener(javax.sql.StatementEventListener listener) {
+        throw new UnsupportedOperationException();
+    }
 }
\ No newline at end of file
Index: mysql-connector-java-5.1.49/src/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.java
+++ mysql-connector-java-5.1.49/src/com/mysql/jdbc/jdbc2/optional/PreparedStatementWrapper.java
@@ -567,6 +567,78 @@ public class PreparedStatementWrapper ex
         return buf.toString();
     }
 
+    public void setRowId(int parameterIndex, java.sql.RowId x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNString(int parameterIndex, String value) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNCharacterStream(int parameterIndex, Reader value, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNClob(int parameterIndex, java.sql.NClob value) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setClob(int parameterIndex, Reader reader, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setBlob(int parameterIndex, InputStream inputStream, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNClob(int parameterIndex, Reader reader, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setSQLXML(int parameterIndex, java.sql.SQLXML xmlObject) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setAsciiStream(int parameterIndex, InputStream x, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setBinaryStream(int parameterIndex, InputStream x, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setCharacterStream(int parameterIndex, Reader reader, long length) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setAsciiStream(int parameterIndex, InputStream x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setBinaryStream(int parameterIndex, InputStream x) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setCharacterStream(int parameterIndex, Reader reader) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNCharacterStream(int parameterIndex, Reader value) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setClob(int parameterIndex, Reader reader) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setBlob(int parameterIndex, InputStream inputStream) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setNClob(int parameterIndex, Reader reader) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
     //
     //	public void setAsciiStream(int parameterIndex, InputStream x)
     //			throws SQLException {
Index: mysql-connector-java-5.1.49/src/com/mysql/jdbc/jdbc2/optional/StatementWrapper.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/jdbc/jdbc2/optional/StatementWrapper.java
+++ mysql-connector-java-5.1.49/src/com/mysql/jdbc/jdbc2/optional/StatementWrapper.java
@@ -581,6 +581,34 @@ public class StatementWrapper extends Wr
         }
     }
 
+    public void closeOnCompletion() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public boolean isCloseOnCompletion() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public boolean isClosed() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public void setPoolable(boolean poolable) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public boolean isPoolable() throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public <T> T unwrap(Class<T> iface) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
+    public boolean isWrapperFor(Class<?> iface) throws SQLException {
+        throw new UnsupportedOperationException();
+    }
+
     /**
      * JDBC 4.2
      * Same as {@link #executeBatch()} but returns long[] instead of int[].
Index: mysql-connector-java-5.1.49/src/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.java
===================================================================
--- mysql-connector-java-5.1.49.orig/src/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.java
+++ mysql-connector-java-5.1.49/src/com/mysql/jdbc/jdbc2/optional/SuspendableXAConnection.java
@@ -199,4 +199,12 @@ public class SuspendableXAConnection ext
             this.currentXAConnection.close();
         }
     }
+
+    public void addStatementEventListener(javax.sql.StatementEventListener listener) {
+        throw new UnsupportedOperationException();
+    }
+
+    public void removeStatementEventListener(javax.sql.StatementEventListener listener) {
+        throw new UnsupportedOperationException();
+    }
 }
