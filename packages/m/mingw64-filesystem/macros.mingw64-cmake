#
# Macros for cmake for mingw64
#
# depends on macros.cmake
#
%__cmake_generator %{lua: if rpm.expand("%__builder") == rpm.expand("%__make") then print("-G'Unix Makefiles'") else print("-GNinja") end}

%_mingw64_cmake %{_mingw64_env} ; \
    mkdir -p %__builddir \
    %__cmake \\\
         %__cmake_generator \\\
        -S %__sourcedir \\\
        -B %__builddir \\\
        -DCMAKE_SYSTEM_NAME="Windows" \\\
        -DCMAKE_VERBOSE_MAKEFILE=ON \\\
        -DCMAKE_BUILD_TYPE="RelWithDebInfo" \\\
        -DCMAKE_INSTALL_PREFIX:PATH=%{_mingw64_prefix} \\\
        -DCMAKE_INSTALL_LIBDIR:PATH=%{_mingw64_libdir} \\\
        -DBIN_INSTALL_DIR=%{_mingw64_bindir} \\\
        -DINCLUDE_INSTALL_DIR:PATH=%{_mingw64_includedir} \\\
        -DLIB_INSTALL_DIR:PATH=%{_mingw64_libdir} \\\
        -DSHARE_INSTALL_DIR:PATH=%{_mingw64_datadir} \\\
        -DSYSCONF_INSTALL_DIR:PATH=%{_mingw64_sysconfdir} \\\
        -DSHARE_INSTALL_PREFIX:PATH=%{_mingw64_datadir} \\\
        -DBUILD_SHARED_LIBS:BOOL=ON \\\
        -DCMAKE_C_COMPILER="%{_bindir}/%{_mingw64_cc}" \\\
        -DCMAKE_CXX_COMPILER="%{_bindir}/%{_mingw64_cxx}" \\\
        -DCMAKE_Fortran_COMPILER="%{_bindir}/%{_mingw64_fc}" \\\
        -DCMAKE_RC_COMPILER="%{_bindir}/%{_mingw64_windres}" \\\
        -DCMAKE_FIND_ROOT_PATH="%{_mingw64_prefix}" \\\
        -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY \\\
        -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY \\\
        -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER

%__mingw64_cmake \
   echo "Deprecated %%__mingw64_cmake macro used, please use %%_mingw64_cmake" \
   %{_mingw64_cmake}

%_mingw64_cmake_build %cmake_build -C %__builddir

%_mingw64_cmake_install %{_mingw64_env}; \
    %cmake_install

%_mingw64_ctest(:-:) \
    %__ctest --test-dir %__builddir --output-on-failure --force-new-ctest-process %{?_smp_mflags} %**
 