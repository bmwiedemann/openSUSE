Index: meson-0.53.0/test cases/frameworks/1 boost/meson.build
===================================================================
--- meson.build
+++ meson.build
@@ -35,16 +35,7 @@ python3dep = python3.dependency(required
 
 # compile python 2/3 modules only if we found a corresponding python version
 if(python2dep.found() and host_machine.system() == 'linux')
-  if(dep.version().version_compare('>=1.67'))
-    # if we have a new version of boost, we need to construct the module name based
-    # on the installed version of python (and hope that they match the version boost
-    # was compiled against)
-    py2version_string = ''.join(python2dep.version().split('.'))
-    bpython2dep = dependency('boost', modules : ['python' + py2version_string])
-  else
-    # if we have an older version of boost, we need to use the old module names
-    bpython2dep = dependency('boost', modules : ['python'])
-  endif
+  bpython2dep = dependency('boost', modules : ['python'])
 
   if not (bpython2dep.found())
     bpython2dep = disabler()
@@ -55,12 +46,7 @@ else
 endif
 
 if(python3dep.found() and host_machine.system() == 'linux')
-  if(dep.version().version_compare('>=1.67'))
-    py3version_string = ''.join(python3dep.version().split('.'))
-    bpython3dep = dependency('boost', modules : ['python' + py3version_string])
-  else
-    bpython3dep = dependency('boost', modules : ['python3'])
-  endif
+  bpython3dep = dependency('boost', modules : ['python3'])
 
   if not (bpython3dep.found())
     bpython3dep = disabler()
