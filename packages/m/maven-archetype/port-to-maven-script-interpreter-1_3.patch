--- maven-archetype-3.2.1/maven-archetype-plugin/pom.xml	2022-04-27 07:09:49.600766370 +0200
+++ maven-archetype-3.2.1/maven-archetype-plugin/pom.xml	2022-04-27 08:26:27.624062781 +0200
@@ -157,7 +157,7 @@
     <dependency>
       <groupId>org.apache.maven.shared</groupId>
       <artifactId>maven-script-interpreter</artifactId>
-      <version>1.2</version>
+      <version>1.3</version>
     </dependency>
     
     <dependency>
--- maven-archetype-3.2.1/maven-archetype-plugin/src/main/java/org/apache/maven/archetype/mojos/FileLogger.java	2022-04-27 07:09:49.624766532 +0200
+++ maven-archetype-3.2.1/maven-archetype-plugin/src/main/java/org/apache/maven/archetype/mojos/FileLogger.java	2022-04-27 08:19:58.097380863 +0200
@@ -19,9 +19,9 @@
  * under the License.
  */
 
-import org.apache.maven.plugin.logging.Log;
 import org.apache.maven.shared.invoker.InvocationOutputHandler;
 import org.apache.maven.shared.scriptinterpreter.ExecutionLogger;
+import org.apache.maven.shared.scriptinterpreter.FileLoggerMirrorHandler;
 
 import java.io.File;
 import java.io.IOException;
@@ -51,13 +51,13 @@
      * Creates a new logger that writes to the specified file and optionally mirrors messages to the given mojo logger.
      *
      * @param outputFile The path to the output file, must not be <code>null</code>.
-     * @param log The mojo logger to additionally output messages to, may be <code>null</code> if not used.
+     * @param mirrorHandler The class which handle mirrored message, can be <code>null</code>.
      * @throws java.io.IOException If the output file could not be created.
      */
-    FileLogger( File outputFile, Log log )
+    FileLogger( File outputFile, FileLoggerMirrorHandler mirrorHandler )
         throws IOException
     {
-        super( outputFile, log );
+        super( outputFile, mirrorHandler );
     }
 
 }
--- maven-archetype-3.2.1/maven-archetype-plugin/src/main/java/org/apache/maven/archetype/mojos/IntegrationTestMojo.java	2022-04-27 07:09:49.624766532 +0200
+++ maven-archetype-3.2.1/maven-archetype-plugin/src/main/java/org/apache/maven/archetype/mojos/IntegrationTestMojo.java	2022-04-27 08:14:43.135212339 +0200
@@ -66,7 +66,7 @@
 import org.apache.maven.shared.invoker.InvocationResult;
 import org.apache.maven.shared.invoker.Invoker;
 import org.apache.maven.shared.invoker.MavenInvocationException;
-import org.apache.maven.shared.scriptinterpreter.RunFailureException;
+import org.apache.maven.shared.scriptinterpreter.ScriptException;
 import org.apache.maven.shared.scriptinterpreter.ScriptRunner;
 import org.codehaus.plexus.util.FileUtils;
 import org.codehaus.plexus.util.IOUtil;
@@ -725,7 +725,7 @@
             getLog().info( "No post-archetype-generation goals to invoke." );
         }
         // verify result
-        ScriptRunner scriptRunner = new ScriptRunner( getLog() );
+        ScriptRunner scriptRunner = new ScriptRunner();
         scriptRunner.setScriptEncoding( encoding );
 
         Map<String, Object> context = new LinkedHashMap<>();
@@ -733,10 +733,9 @@
 
         try
         {
-            scriptRunner.run( "post-build script", goalFile.getParentFile(), postBuildHookScript, context, logger,
-                              "failure post script", true );
+            scriptRunner.run( "post-build script", goalFile.getParentFile(), postBuildHookScript, context, logger );
         }
-        catch ( RunFailureException e )
+        catch ( ScriptException e )
         {
             throw new IntegrationTestFailure( "post build script failure failure: " + e.getMessage(), e );
         }
@@ -751,14 +750,7 @@
         {
             File outputLog = new File( basedir, "build.log" );
 
-            if ( streamLogs )
-            {
-                logger = new FileLogger( outputLog, getLog() );
-            }
-            else
-            {
                 logger = new FileLogger( outputLog );
-            }
 
             getLog().debug( "build log initialized in: " + outputLog );
 
