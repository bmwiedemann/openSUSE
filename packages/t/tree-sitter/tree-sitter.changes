-------------------------------------------------------------------
Wed Mar  1 13:55:27 UTC 2023 - Matej Cepl <mcepl@suse.com>

- VERSION string used in generating *.pc file
  (among other things) has been hardcoded to 0.6.3
  (gh#tree-sitter/tree-sitter#1608), we should at least fix it
  using sed.

-------------------------------------------------------------------
Wed Jan 18 10:05:05 UTC 2023 - Matej Cepl <mcepl@suse.com>

- Add CVE-2022-45299-update-webbrowser.patch (copied from
  gh#tree-sitter/tree-sitter#2042) to use more recent version
  of webbrowser-rs, which has been fixed against CVE-2022-45299
  (bsc#1207196).

-------------------------------------------------------------------
Sat Sep 24 09:49:29 UTC 2022 - socvirnyl.estela@gmail.com

- Update to version 0.20.7:
  * 0.20.7
  * Bump library versions
  * Build core wasm library with C++ exceptions disabled
  * Generate parsers with ABI version 14 by default
  * Tolerate tree edits whose old range extends beyond the end of the tree
  * Added documentation on web-tree-sitter edge cases
  * Add ts_tree_root_node_with_offset API
  * Fix typos
  * Update section-2-using-parsers.md
  * Add link to Racket language parser

-------------------------------------------------------------------
Sun Jun 19 09:12:46 UTC 2022 - socvirnyl.estela@gmail.com

- Update to version 0.20.6:
  * 0.20.6
  * libs: 0.20.6
  * Properly incorporate lookahead bytes when recovering via missing token
  * Improve randomized testing setup
  * Run cargo test directly on CI
  * Set CLI as default workspace member
  * Don't generate primary states array if it will be unused due to abi version setting
  * tags: 0.20.2
  * 0.20.5
  * libs: 0.20.5

-------------------------------------------------------------------
Tue Feb 22 16:46:36 UTC 2022 - Matej Cepl <mcepl@suse.com>

- Update to 0.20.4:
  - Always generate parser.h, regardless of chosen ABI version
  - add test for removals in eager query matches
  - remove non-local query matches for locals
  - remove unfinished queries from 'ts_query_cursor_remove_match'
  - prevent future matches for '#is-not? local' patterns
  - Represent quantifiers using bytes instead of ints
  - Prefix globally visible TSquantifier values
  - Rewrite quantifier oeprations
  - Add pointer indirection to AnalysisStateSet
  - Fixed rust build, updated docs
  - get_column now counts codepoints
  - Add realloc to wasm exports
  - Add link to Protocol Buffers grammar
  - Convert more fixture grammars from JSON to JS
  - Simplify allocation-recording in test suite using new
    ts_set_allocator API
  - Address feedback
  - Make SubtreeInlineData work on Big-Endian
  - Replace allocator struct with function pointers
  - cli: Fix parsing of test files with newlines in test names
  - Avoid allocator from being switched more than once
  - Remove ts_allocator from api.h
  - Add TSAllocator and ts_set_allocator in api.h
  - Fix declaration of ts_toggle_allocation_recording
  - Allow to change the allocator dynamically
  - Support @module as a highlight key.
  - add link to in-development Elixir parser
  - Added bindings for Java and Kotlin to `index.md`
  - Remove unnecessary types from binding.rs
  - Always include playground.html in the CLI binary
  - playground: Make query error underlines render in safari
  - web: Fix script directory that's passed to locateFile
  - Use serde's derive feature everywhere
  - Improve query execution logging
  - Rename Query::step_is_definite ->
    is_pattern_guaranteed_at_step
  - Add link to Lua bindings
  - Convert more test grammars from JSON to JS
  - Add link to swift bindings package
  - Convert some of the fixture grammars from JSON to JS
  - Use serde's derive feature
  - Simplified corpus test output comparisons
  - Add link to elisp parser
  - Add tree-sitter-cuda, tree-sitter-glsl,
    tree-sitter-commonlisp
  - Avoid dynamic regex construction when parsing test files
  - chore(cli): Rename all internal web_ui stuff to playground
  - cli(query): Improve and unify query subcommand output
  - binding(rust): Mark set_cancellation_flag self as mutable
  - fix(wasm): Fix predicates in alternations, resolves #1392
  - fix(cli): Panic on queries containing alternation with
    predicates
  - Add WGSL WebGPU Shading Language
  - Add HCL (Terraform) and Hack to the list of supported
    languages
  - Add link to OCaml bindings to list and sort list
    alphabetically.
  - Add Objective-C language parser
  - feat(rust): Add an id() method for QueryMatch
  - Assign ids to query matches only when the matches are
    returned
  - feat(cli): add a flag to compile a parser in debug mode with
    -O0 C/C++ compiler flag
  - Put emscripten-version file in cli directory
  - Fix 'include!' error when building the CLI outside of the
    repo
  - fix(lib): fix segfault on ts_query_new with incompatible
    grammar version, close #1318
  - Add Graphviz DOT parser
  - chore(web): Add the LICENSE file to the web-tree-sitter npm
    package
  - chore(cli): Add the LICENSE file to the tree-sitter-cli npm
    package
  - Support for suffixes in test file separators Some languages
    use the non-suffixed separators in their syntax Fixes #982
  - Handle aliases in unicode property escapes in regexes
  - Update `smallbitvec` dependency
  - `Generator::add_parse_table`: Store entries in hash map
  - Use `IndexMap` and `FxHash` for some hot hash maps
  - fix(cli): Remove tree-sitter grammar ./... call limitation
  - Always print where the playground is running
  - Correct quiet description for playground
  - fix(cli): allow dead code in Logger
  - docs(Using parsers): Fix spelling, remove unusual keyword
  - Fix highlighting typo on "creating parsers" site
  - feat(cli): Make "test" output more readable
  - fix(cli): Improve error messages on config.json loading,
    closes #1227
  - fix(parser): count rows in the debug log from 0
  - Docs: document `_` wildcard node
  - Add SQL parser
  - feat(cli): Add a lot of help messages for CLI options
  - fix(cli): fix theme key loading from config.json, closes
    #1232
  - fix(cli): Avoid ENOENT if config.json is not in
    TREE_SITTER_DIR
  - feat(cli/loader): Add TREE_SITTER_INTERNAL_BUILD C/C++
    compiler definition
  - feat(cli): Set TREE_SITTER_DEBUG env var on 'tree-sitter
    parse -d'
  - allow `~` or `$HOME` in `parser-directories`
  - update set_included_ranges to modify extent if the current
    position is at the very beginning of the included range

-------------------------------------------------------------------
Fri Nov  5 03:18:24 UTC 2021 - William Brown <william.brown@suse.com>

- Add cargo audit service to detect potential security issues

-------------------------------------------------------------------
Fri Jul  2 22:49:27 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Update to 0.20.0.

-------------------------------------------------------------------
Tue Apr 27 06:22:19 UTC 2021 - Duncan Mac-Vicar <duncan@mac-vicar.eu>

- Update to 0.19.4.

-------------------------------------------------------------------
Thu Mar 18 13:35:15 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Update to 0.19.3.

-------------------------------------------------------------------
Wed Feb 24 16:54:15 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Update to 0.18.2:
  There isnâ€™t good changelog, so the best I have is
  https://github.com/tree-sitter/tree-sitter/compare/0.17.3...v0.18.2

-------------------------------------------------------------------
Sun Nov 15 17:58:56 UTC 2020 - Matej Cepl <mcepl@suse.com>

- Add fix_build_aarch64.patch (gh#tree-sitter/tree-sitter#804) to fix
  build on aarch64.

-------------------------------------------------------------------
Sat Nov  7 19:13:04 UTC 2020 - Matej Cepl <mcepl@suse.com>

- The initial packaging of tree-sitter 0.17.3.
