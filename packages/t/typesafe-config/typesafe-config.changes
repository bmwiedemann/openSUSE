-------------------------------------------------------------------
Tue Jul 27 13:49:33 UTC 2021 - Fridrich Strba <fstrba@suse.com>

- Build with java-devel >= 1.8 since source/target levels 8 are
  requested

-------------------------------------------------------------------
Mon Apr 19 17:56:42 UTC 2021 - Ferdinand Thiessen <rpm@fthiessen.de>

- Update to 1.4.1:
  * Add a helper method for parsing only application overrides
  * Remove unmodifiable collection wrappers in ResolveContext
  * Added support for memory units which don't fit in a long when
    transformed to bytes
  * Inherit optional and getter evaluation
  * A few other bug fixes
- Update to 1.4.0:
  * application.conf variables can now override variables in
    reference.conf
  * Performance improvement through capacity hint for ArrayList

-------------------------------------------------------------------
Fri Apr 16 22:09:22 UTC 2021 - Ferdinand Thiessen <rpm@fthiessen.de>

- Update to 1.3.4:
  * It is now possible to override any configuration setting from
    environment variables
  * Added support for integer keys that are longer than Int
  * Missing exception now has a reference to the origin Config
  * Performance improvements to resolve()
  * Config file syntax is now resolved when parsing InputStream
  * It is now possible to use @Optional on keys that are reserved words
  * ValidationProblem is now serializable
- Update to 1.3.3:
  * Minor issue fix
- Update to 1.3.2:
  * Environment variables are now able to be resolved to lists in the
    same fashion as system properties.
  * Added getPeriod() which returns time units as java.time.Period.
    Currently supported periods are days, weeks, months and years.
  * ConfigResolveOptions now has appendResolver(...) which allows
    having custom behavior when unresolved substitutions are
    encountered during resolution.
  * Config Beans now support Set collection.
  * A few other small bugfixes.
- Update 1.3.1:
  * Added include required("foo") syntax to specify includes that fail
    if not present support for more kinds of property in
    ConfigBeanFactory:
     enumerations
     optional fields
     lists of beans
  * numbers can now start with a decimal (".33" vs. "0.33"), these
    are still parsed as strings but Config.getDouble() etc. will
    convert them to numbers a few other small bugfixes

-------------------------------------------------------------------
Fri Apr 16 21:39:41 UTC 2021 - Ferdinand Thiessen <rpm@fthiessen.de>

- Update to 1.3.0
  * 1.3.0 should be ABI-compatible with 1.2.x for most applications
  * Added Config.hasPathOrNull, Config.getIsNull and
    parser.ConfigDocument which supports simple load/edit/save on a
    config file.
  * Fixed obscure bug in converting to camel case when instantiating
    beans
  * Now built with Java 8 and requires Java 8
  * If you were relying on the order of key iteration in a config,
    note that Java 8 changed the iteration order for hashes and that
    includes Config and ConfigObject several correctness fixes to
    resolving substitutions.
  * ConfigBeanFactory will auto-fill a JavaBean from a Config
  * It is now possible to create a ConfigOrigin using
    ConfigOriginFactory and to modify origins on values using
    ConfigValue.withOrigin
  * Config.getMemorySize returns a ConfigMemorySize
  * Config.getDuration returns a java.time.Duration
  * The existing ConfigValueFactory.fromAnyRef and related methods
    now pass through a ConfigValue instead of throwing an exception
  * ConfigFactory.defaultApplication() returns the default Config
    used by ConfigFactory.load() in between defaultReference() and
    defaultOverrides(), leaving ConfigFactory.load() as a trivial
    convenience API that uses no internal magic.
  * Fix "allow unresolved" behavior for unresolved list elements
  * Class loaders are cached with a WeakReference to avoid leaks
  * Create valid output for values with multiline descriptions
- Update to 1.2.1
  * Fix resolving substitutions in include statements nested
    inside objects
  * When rendering an object to a string, sort the fields
  * Handle unresolved substitutions in value concatenations
  * Make ConfigOrigin.comments unmodifiable
  * When using '+=' or 'include' inside a list, throw an exception
    instead of generating a wrong result
  * When context class loader is unset throw a more helpful
    exception than NullPointerException
  * Ignore non-string values in a Properties object

-------------------------------------------------------------------
Fri Dec 21 08:42:47 UTC 2018 - Fridrich Strba <fstrba@suse.com>

- Initial package
