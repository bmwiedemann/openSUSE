# /etc/tryton/trytond.conf - Configuration file for Tryton Server (trytond)
#
# This file contains the most common settings for trytond (Defaults
# are commented).
# For more information read 
# https://docs.tryton.org/projects/server/en/latest/topics/configuration.html#topics-configuration

[web]
# Settings for the web interface

# The IP/host and port number of the interface
# (Internal default: localhost:8000)
#
# Listen on all interfaces (IPv4)
#listen = 0.0.0.0:8000
#
# Listen on all interfaces (IPv4 and IPv6)
listen = [::]:8000

# The hostname for this interface
#hostname = 

# The root path to retrieve data for GET requests
# (i.e. namely the path to the web client)
# (Internal default: /var/www/localhost/tryton)
#root = /usr/lib/node-modules/tryton-sao

# The number of proxy servers in front of trytond.
#num_proxies = 0

# The cache timeout in seconds.
#cache_timeout = 12h

# The list (one per line) of origins allowed for Cross-Origin Resource sharing.
# https://en.wikipedia.org/wiki/Cross-origin_resource_sharing
#cors = 

# The base URL without a path for avatar URL.
#avatar_base = ''

[database]
# Database related settings

# The URI to connect to the SQL database (following RFC-3986)
# uri = database://username:password@host:port/?param1=value1&param2=value2
# (Internal default: sqlite:// (i.e. a local SQLite database))
#
# A list of parameters supported by PostgreSQL can be found in the documentation.
# https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-PARAMKEYWORDS

# PostgreSQL via Unix domain sockets
# (e.g. PostgreSQL database running on the same machine (localhost))
#uri = postgresql://tryton:tryton@/
#
# Postgres running on the same machine:

uri = postgresql:///

# PostgreSQL via TCP/IP
# (e.g. connecting to a PostgreSQL database running on a remote machine or
# by means of md5 authentication. Needs PostgreSQL to be configured to accept
# those connections (pg_hba.conf).)
#uri = postgresql://tryton:tryton@localhost:5432/

# SQLite
# The URI is defined as sqlite://
# If the name of the database is :memory:, the parameter mode will be set to memory 
# thus using a pure in-memory database.
# The recognized query parameters can be found in SQLite’s documentation.
# https://www.sqlite.org/uri.html#recognized_query_parameters

# The path to the directory where the Tryton Server stores files.
# The server must have write permissions to this directory.
# (Internal default: /var/lib/trytond)
path = /var/lib/tryton

# Shall available databases be listed in the client?
#list = True

# The number of retries of the Tryton Server when there are errors 
# in a request to the database
#retry = 5

# The primary language, that is used to store entries in translatable
# fields into the database.
#language = en

# avatar_filestore
# This configuration value indicates whether the avatars should be stored in the 
# trytond.filestore (True) or the database (False).
#avatar_filestore = False

# avatar_prefix
# The prefix to use with the FileStore to store avatars.
# Default: None

# default_name
# The name of the database to use for operations without a database name. 
# Default: template1 for PostgreSQL, :memory: for SQLite.

[request]
# The maximum size in bytes for unauthenticated requests (zero means no limit).
#max_size = 2MB

# The maximum size in bytes of an authenticated request (zero means no limit).
#max_size_authenticated = 2GB

[cache]
# Various cache size settings

# The number of different models kept in the cache per transaction.
#model = 200

# The number of loaded records kept in the cache. It can also be changed
# locally using the _record_cache_size key in Transaction.context.
#record = 2000

# The number of fields to load with eager Field.loading.
#field = 100

# The minimum number of seconds between two cleanings of the cache.
#clean_timeout = 300

[queue]
# Activate asynchronous processing of the tasks. Otherwise they are performed at the end of the requests.
#worker = False

# The number of days after which processed tasks are removed.
#clean_days = 30

[table]
# This section allows to override the default generated table name for a ModelSQL. 
# The main goal is to bypass limitation on the name length of the database backend. 
# For example:
#account.invoice.line = acc_inv_line
#account.invoice.tax = acc_inv_tax

[ssl]
# SSL settings 
# Note: It is recommended to delegate the SSL support to a proxy.
#
# Activation of SSL for all available protocols.
# Uncomment the following settings for key and certificate.
# SSL is activated by defining privatekey.

# The path to the private key
#privatekey = /etc/ssl/private/ssl-cert-snakeoil.key

# The path to the certificate
#certificate = /etc/ssl/certs/ssl-cert-snakeoil.pem

[email]
# Mail settings
# Note: Email settings can be tested with the trytond-admin command

# The SMTP-URI to connect to the SMTP server.
# Available protocols are:
# - smtp: simple SMTP
# - smtp+tls: SMTP with STARTTLS
# - smtps: SMTP with SSL
#
# The uri accepts the following additional parameters:
#  local_hostname: used as FQDN of the local host in the HELO/EHLO commands, 
#  if omited it will use the value of socket.getfqdn().

#  timeout: A number of seconds used as timeout for blocking operations. 
#  A socket.timeout will be raised when exceeded. If omited the default timeout will be used.

#uri = smtp://localhost:25

# Defines the default From address (using RFC-822) for emails sent by Tryton.
#from = "Company Inc" <info@example.com>

[session]
# Session settings

# A comma separated list of the authentication methods to try when attempting to verify a user’s 
# identity. Each method is tried in turn, following the order of the list, until one succeeds. 
# In order to allow multi-factor authentication, individual methods can be combined 
# together using a plus (+) symbol.
# Example
#authentications = password+sms, ldap
# By default, Tryton only supports the password method. This method compares the 
# password entered by the user against a stored hash of the user’s password. 
# Other modules can define additional authentication methods, please refer to 
# their documentation for more information.
#Default:
#authentications = password

# The time (in seconds) until a session expires.
#max_age = 2592000   # (30 days)

# The time (in seconds) until an inactive session is considered invalid for
# special internal tasks, thus requiring to re-confirm the session.
#timeout = 300   # (5 minutes)

# The maximal number of authentication attempts before the server answers
# unconditionally 'Too Many Requests'.
# The counting is done on all attempts over one period of timeout.
#max_attempt = 5

# The maximal number of authentication attempts from the same network before
# the server answers unconditionally 'Too Many Requests'.
# The counting is done on all attempts over a period of timeout.
#max_attempt_ip_network = 300

# The network prefix to apply on IPv4 addresses when counting authentication attempts.
#ip_network_4 = 32

# The network prefix to apply on IPv6 addresses when counting authentication attempts.
#ip_network_6 = 56

[password]
# The minimal length required for user passwords.
#length = 8

# The path to a file containing one forbidden password per line.
#forbidden = 

# The ratio of non repeated characters for user passwords.
#entropy = 0.75

# The time (in seconds) until a reset password expires.
#reset_timeout = 86400   # (24h)

# The path to the INI file to load as CryptContext:
# <https://passlib.readthedocs.io/en/stable/narr/context-tutorial.html#loading-saving-a-cryptcontext>
# If no path is set, Tryton will use the schemes `bcrypt` or `pbkdf2_sha512`.
#passlib = None

[attachment]
# Defines how to store the attachments
# A boolean value to store attachment in the FileStore.
#filestore=True

# The prefix to use with the FileStore.
#store_prefix = None

[bus]
# Allow clients to subscribe to bus channels (Boolean).
#allow_subscribe = False

# If set, redirects bus requests to the host URL.
#url_host =

# The time (in seconds) to keep the connection to the client open
# when using long polling for bus messages.
#long_polling_timeout = 300

# The time (in seconds) a message should be kept in the queue
# before being discarded.
#cache_timeout = 300

[html]
# The URL pointing to TinyMCE editor.
#src = https://cloud.tinymce.com/stable/tinymce.min.js

# The space separated list of TinyMCE plugins to load. It can be overridden for 
# specific models and fields using the names: plugins-<model>-<field> or plugins-<model>.
#plugins = ``

# The JSON list of CSS files to load. It can be overridden for specific models 
# and fields using the names: css-<model>-<field> or css-<model>.
#css = []

# The class to add on the body. It can be overridden for specific models and 
# fields using the names: class-<model>-<field> or class-<model>.
#class = ''

[wsgi middleware]
# The section lists the WSGI middleware class to load. Each middleware can be 
# configured with a section named wsgi <middleware> containing args and kwargs options.
#Example:
#[wsgi middleware]
#ie = werkzeug.contrib.fixers.InternetExplorerFix
#
#[wsgi ie]
#kwargs={'fix_attach': False}

[ldap_authentication]
# The LDAP URL to connect to the server following RFC-2255.
#uri = ldap://host:port/dn?attributes?scope?filter?extensions
# A basic default URL could look like
#uri = ldap://localhost:389/

# The LDAP password used to bind if needed.
#bind_pass = 

# If the LDAP server is an Active Directory.
#active_directory = False

# The UID attribute for authentication.
#uid = uid

# If the user shall be created in the database in case it does not exist.
#create_user = False

[sms_authentication]
# The fully qualified name of the method to send SMS. It must take three
# arguments: text, to and from.
#
# - The sms method just sends a code via SMS to the user. This code can directly
#   be used in the login dialog.
# - The password_sms method sends a code only after the user entered a valid
#   password (two-factor authentication).
#
# Both methods require that the user has a *mobile* phone number defined
# otherwise he can not be authenticated with those methods.
#
# This method is required to send SMS.
#function = 

# The number from which the SMS are sent.
#from =

# The length of the generated code.
#length = 6

# The time to live for the generated codes in seconds.
#ttl = 300

# The name used in the SMS text.
#name = Tryton

[product]
# The number of decimals with which the unit prices are stored
# in the database. The default value is 4.
# Warning: This setting can not be lowered once a database is created.
#price_decimal = 4

# only needed by GNU Health:
[webdav] 
# The port on which the webdav server listens
#listen = [::]:8080

