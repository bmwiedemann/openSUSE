---
 libs/gmp/Makefile.in                       |    2 +-
 libs/lua53/Makefile.in                     |    4 ++--
 libs/mpfr/Makefile.in                      |    2 +-
 libs/teckit/TECkit-src/source/Compiler.cpp |   12 +++++++-----
 texk/makeindexk/genind.h                   |   16 +++++++++++++++-
 texk/makeindexk/mkind.h                    |   20 +++++++++++++++++---
 texk/makeindexk/scanid.h                   |   16 +++++++++++++++-
 texk/makeindexk/scanst.h                   |   16 +++++++++++++++-
 8 files changed, 73 insertions(+), 15 deletions(-)

--- libs/gmp/Makefile.in
+++ libs/gmp/Makefile.in	2016-06-07 13:29:33.925651292 +0000
@@ -498,7 +498,7 @@ am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
 am__v_lt_0 = --silent
 am__v_lt_1 = 
 COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
-	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) $(XCFLAGS)
 AM_V_CC = $(am__v_CC_@AM_V@)
 am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
 am__v_CC_0 = @echo "  CC      " $@;
--- libs/lua53/Makefile.in
+++ libs/lua53/Makefile.in	2016-06-07 13:29:33.925651292 +0000
@@ -239,11 +239,11 @@ am__depfiles_remade = ./$(DEPDIR)/luates
 	@LUA53_TREE@/src/$(DEPDIR)/lzio.Plo
 am__mv = mv -f
 COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
-	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) $(XCFLAGS)
 LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
-	$(AM_CFLAGS) $(CFLAGS)
+	$(AM_CFLAGS) $(CFLAGS) $(XCFLAGS)
 AM_V_CC = $(am__v_CC_@AM_V@)
 am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
 am__v_CC_0 = @echo "  CC      " $@;
--- libs/mpfr/Makefile.in
+++ libs/mpfr/Makefile.in	2016-06-07 13:29:33.925651292 +0000
@@ -352,7 +352,7 @@ am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
 am__v_lt_0 = --silent
 am__v_lt_1 = 
 COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
-	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) $(XCFLAGS)
 AM_V_CC = $(am__v_CC_@AM_V@)
 am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
 am__v_CC_0 = @echo "  CC      " $@;
--- libs/teckit/TECkit-src/source/Compiler.cpp
+++ libs/teckit/TECkit-src/source/Compiler.cpp	2020-03-19 13:42:03.021195717 +0000
@@ -1451,11 +1451,13 @@ Compiler::Compiler(const char* txt, UInt
 					if (result == Z_OK) {
 						destLen += 8;
 						dest = static_cast<Byte*>(realloc(dest, destLen)); // shrink dest to fit
-						WRITE(reinterpret_cast<FileHeader*>(dest)->type, kMagicNumberCmp);
-						WRITE(reinterpret_cast<FileHeader*>(dest)->version, compiledSize);
-						free(compiledTable);
-						compiledTable = dest;
-						compiledSize = destLen;
+						if (dest != NULL) {
+							WRITE(reinterpret_cast<FileHeader*>(dest)->type, kMagicNumberCmp);
+							WRITE(reinterpret_cast<FileHeader*>(dest)->version, compiledSize);
+							free(compiledTable);
+							compiledTable = dest;
+							compiledSize = destLen;
+						}
 					}
 					else
 						free(dest);
--- texk/makeindexk/genind.h
+++ texk/makeindexk/genind.h	2016-06-07 13:29:37.209589558 +0000
@@ -25,6 +25,20 @@
  *
  */
 
+#ifndef __has_idx_printf
+#define __has_idx_printf
+#include <stdarg.h>
+static __inline__ int idx_printf(FILE *stream, const char *format, ...)
+{
+    int ret;
+    va_list ap;
+    va_start(ap, format);
+    ret = vfprintf(stream, format, ap);
+    va_end(ap);
+    return ret;
+}
+#endif
+
 #define IND_ERROR(F) { \
     if (idx_dot) { \
 	fprintf(ilg_fp, "\n"); \
@@ -45,7 +59,7 @@
     fprintf(ilg_fp, \
     "## Warning (input = %s, line = %d; output = %s, line = %d):\n   -- ", \
 	    curr->fn, curr->lc, ind_fn, ind_lc+1); \
-    fprintf(ilg_fp, F, D); \
+    idx_printf(ilg_fp, F, D); \
     ind_ec++; \
 }
 
--- texk/makeindexk/mkind.h
+++ texk/makeindexk/mkind.h	2016-06-07 13:29:37.209589558 +0000
@@ -244,6 +244,20 @@ extern int mk_getc (FILE *str);
 #define STREQ(A, B)  (strcmp(A, B) == 0)
 #define STRNEQ(A, B) (strcmp(A, B) != 0)
 
+#ifndef __has_idx_printf
+#define __has_idx_printf
+#include <stdarg.h>
+static __inline__ int idx_printf(FILE *stream, const char *format, ...)
+{
+    int ret;
+    va_list ap;
+    va_start(ap, format);
+    ret = vfprintf(stream, format, ap);
+    va_end(ap);
+    return ret;
+}
+#endif
+
 #define MESSAGE(F) { \
     if (verbose) \
 	fprintf(stderr, F); \
@@ -252,8 +266,8 @@ extern int mk_getc (FILE *str);
 
 #define MESSAGE1(F, S) { \
     if (verbose) \
-	fprintf(stderr, F, S); \
-    fprintf(ilg_fp, F, S); \
+	idx_printf(stderr, F, S); \
+    idx_printf(ilg_fp, F, S); \
 }
 
 #if USE_KPATHSEA /* kpathsea defines a different FATAL */
@@ -271,7 +285,7 @@ extern int mk_getc (FILE *str);
 #endif
 
 #define FATAL1(F, S) { \
-    fprintf(stderr, F, S); \
+    idx_printf(stderr, F, S); \
     fprintf(stderr, USAGE, pgm_fn); \
     EXIT(1); \
 }
--- texk/makeindexk/scanid.h
+++ texk/makeindexk/scanid.h	2016-06-07 13:29:37.209589558 +0000
@@ -118,6 +118,20 @@
     idx_ec++; \
 }
 
+#ifndef __has_idx_printf
+#define __has_idx_printf
+#include <stdarg.h>
+static __inline__ int idx_printf(FILE *stream, const char *format, ...)
+{
+    int ret;
+    va_list ap;
+    va_start(ap, format);
+    ret = vfprintf(stream, format, ap);
+    va_end(ap);
+    return ret;
+}
+#endif
+
 #define IDX_ERROR1(F, D) { \
     if (idx_dot) { \
 	fprintf(ilg_fp, "\n"); \
@@ -125,7 +139,7 @@
     } \
     fprintf(ilg_fp, "!! Input index error (file = %s, line = %d):\n   -- ", \
 	    idx_fn, idx_lc); \
-    fprintf(ilg_fp, F, D); \
+    idx_printf(ilg_fp, F, D); \
     idx_ec++; \
 }
 
--- texk/makeindexk/scanst.h
+++ texk/makeindexk/scanst.h	2016-06-07 13:29:37.209589558 +0000
@@ -158,6 +158,20 @@
     put_dot = FALSE; \
 }
 
+#ifndef __has_idx_printf
+#define __has_idx_printf
+#include <stdarg.h>
+static __inline__ int idx_printf(FILE *stream, const char *format, ...)
+{
+    int ret;
+    va_list ap;
+    va_start(ap, format);
+    ret = vfprintf(stream, format, ap);
+    va_end(ap);
+    return ret;
+}
+#endif
+
 #define STY_ERROR1(F, D) { \
     if (idx_dot) { \
 	fprintf(ilg_fp, "\n"); \
@@ -165,7 +179,7 @@
     } \
     fprintf(ilg_fp, "** Input style error (file = %s, line = %d):\n   -- ", \
 	    sty_fn, sty_lc); \
-    fprintf(ilg_fp, F, D); \
+    idx_printf(ilg_fp, F, D); \
     sty_ec++; \
     put_dot = FALSE; \
 }
