<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>f38588fb58ca7465a6c4424295eb67e2</srcmd5>
    <version>2.1.0</version>
    <time>1583094451</time>
    <user>dimstar_suse</user>
    <comment> </comment>
    <requestid>780275</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>6f60fc394a6805710cb740cb2147b5e2</srcmd5>
    <version>2.1.0</version>
    <time>1583526493</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>782035</requestid>
  </revision>
  <revision rev="3" vrev="3">
    <srcmd5>cfd3ab816ae257a1f99260bd02cdc85a</srcmd5>
    <version>2.1.0</version>
    <time>1583948996</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>783473</requestid>
  </revision>
  <revision rev="4" vrev="4">
    <srcmd5>c0645c8b635a0e6e8b331be6251db894</srcmd5>
    <version>2.1.0</version>
    <time>1584530786</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>785546</requestid>
  </revision>
  <revision rev="5" vrev="5">
    <srcmd5>8c952738ce679b9dd1575c0baa305b8a</srcmd5>
    <version>2.1.0</version>
    <time>1584882989</time>
    <user>dimstar_suse</user>
    <comment>- Lite flavor should not provide python3-tensorflow nor tensorflow
</comment>
    <requestid>786719</requestid>
  </revision>
  <revision rev="6" vrev="6">
    <srcmd5>09d88425315782fffeab8d4ddf52bd70</srcmd5>
    <version>2.1.0</version>
    <time>1585085757</time>
    <user>dimstar_suse</user>
    <comment>Use pip install --no-compile (boo#1094323) (forwarded request 787621 from bmwiedemann)</comment>
    <requestid>787674</requestid>
  </revision>
  <revision rev="7" vrev="7">
    <srcmd5>8fed74bfecfcdbaa458a15ce90620727</srcmd5>
    <version>2.1.0</version>
    <time>1585342835</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>788959</requestid>
  </revision>
  <revision rev="8" vrev="8">
    <srcmd5>0adc87f32c4d7359b2cdf0c11e345980</srcmd5>
    <version>2.1.0</version>
    <time>1586368545</time>
    <user>dimstar_suse</user>
    <comment>- added mkl-ddn as source and do not use system mkl-dnn (bsc#1168839)
- removed patches:
  * fixed-mkl-sgemm-call.patch
  * added-mkl_dnn-as-syslib.patch
- added source:
  mkl-v0.21.2.tar.gz (forwarded request 791969 from mslacken)</comment>
    <requestid>791970</requestid>
  </revision>
  <revision rev="9" vrev="9">
    <srcmd5>de12f82bfaae2f0bd98c5f2d353d84ac</srcmd5>
    <version>2.1.0</version>
    <time>1590649974</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>808912</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>2e07d1317b8375c9e1edfe39a4742534</srcmd5>
    <version>2.1.1</version>
    <time>1592398347</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>815289</requestid>
  </revision>
  <revision rev="11" vrev="2">
    <srcmd5>b568601e20ccaa2e2a706989c238d8b6</srcmd5>
    <version>2.1.1</version>
    <time>1593292944</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>817242</requestid>
  </revision>
  <revision rev="12" vrev="3">
    <srcmd5>869eed053047e118ad02669f4adb4cf3</srcmd5>
    <version>2.1.1</version>
    <time>1593620561</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>817873</requestid>
  </revision>
  <revision rev="13" vrev="4">
    <srcmd5>2a30b31e478d4d99e1a6487daccfa276</srcmd5>
    <version>2.1.1</version>
    <time>1599088513</time>
    <user>dimstar_suse</user>
    <comment>- Lower memoryperjob to 1300 MB (as done for tensorflow)
- Use memoryperjob constraint instead of %limit_build macro.
</comment>
    <requestid>828227</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>7c998ad56fd384a9381664aa69fe24fa</srcmd5>
    <version>2.4.0</version>
    <time>1610050979</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>860831</requestid>
  </revision>
  <revision rev="15" vrev="2">
    <srcmd5>45939439a8b8050b7460798dcf0d902c</srcmd5>
    <version>2.4.0</version>
    <time>1610123855</time>
    <user>dimstar_suse</user>
    <comment>- libiomp5 is x86_64 only
</comment>
    <requestid>861534</requestid>
  </revision>
  <revision rev="16" vrev="3">
    <srcmd5>b0d0409213cf6a92c4f239c92006d6e5</srcmd5>
    <version>2.4.0</version>
    <time>1611068516</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>864033</requestid>
  </revision>
  <revision rev="17" vrev="4">
    <srcmd5>bc3b7d4bd6dc6b5321aac6f324672d4b</srcmd5>
    <version>2.4.0</version>
    <time>1616598675</time>
    <user>dimstar_suse</user>
    <comment>- Generate and install pkgconfig files for tensorflow-lite and
  tensorflow (non-hpc)
- Do not install bazel tools to build Lite version. This will allow
  to build for armv7 where bazel 3.x is not available - boo#1178564
</comment>
    <requestid>873517</requestid>
  </revision>
  <revision rev="18" vrev="5">
    <srcmd5>22cf48ffe1068c5c839ec1d798b397da</srcmd5>
    <version>2.4.0</version>
    <time>1618061245</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>883620</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>a9254ab3ba67a2bad85a58d8e30d6df2</srcmd5>
    <version>2.4.1</version>
    <time>1618610489</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>885569</requestid>
  </revision>
  <revision rev="20" vrev="2">
    <srcmd5>2bf0c33017db1bffa245c3ddc45ed12f</srcmd5>
    <version>2.4.1</version>
    <time>1621531490</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>894333</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>e5634cb29170ea32a83634595dc7121b</srcmd5>
    <version>2.6.0</version>
    <time>1630432545</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>915219</requestid>
  </revision>
  <revision rev="22" vrev="2">
    <srcmd5>b3c73d1d113776ee79a687bce991b371</srcmd5>
    <version>2.6.0</version>
    <time>1630617617</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>915698</requestid>
  </revision>
  <revision rev="23" vrev="3">
    <srcmd5>add0cb997dd91e70e3a57deef559a76f</srcmd5>
    <version>2.6.0</version>
    <time>1633466024</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>922962</requestid>
  </revision>
  <revision rev="24" vrev="4">
    <srcmd5>24349806df07af6b1a100557883d89a4</srcmd5>
    <version>2.6.0</version>
    <time>1635023648</time>
    <user>dimstar_suse</user>
    <comment>- Make sure tensorflow/core/public/version.h is installed in the
  'lite' version (bsc#1191805). (forwarded request 927105 from eeich)</comment>
    <requestid>927109</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>4400a68f77dab133941e2eefb30adf4f</srcmd5>
    <version>2.6.2</version>
    <time>1636729157</time>
    <user>dimstar_suse</user>
    <comment>- updated to 2.6.2 which is bug fix release which just fixes an issue where
  keras, tensorflow_estimator and tensorboard were missing proper upper bounds
  and resulted in broken installs after Keras 2.7 release for all packages in
  TensorFlow ecosystem
- Fixes from 2.6.1 (boo#1192447):
  * Fixes a code injection issue in saved_model_cli (CVE-2021-41228)
  * Fixes a vulnerability due to use of uninitialized value in Tensorflow (CVE-2021-41225)
  * Fixes a heap OOB in FusedBatchNorm kernels (CVE-2021-41223)
  * Fixes an arbitrary memory read in ImmutableConst (CVE-2021-41227)
  * Fixes a heap OOB in SparseBinCount (CVE-2021-41226)
  * Fixes a heap OOB in SparseFillEmptyRows (CVE-2021-41224)
  * Fixes a segfault due to negative splits in SplitV (CVE-2021-41222)
  * Fixes segfaults and vulnerabilities caused by accesses to invalid memory
    during shape inference in Cudnn* ops (CVE-2021-41221)
  * Fixes a null pointer exception when Exit node is not preceded by Enter op (CVE-2021-41217)
  * Fixes an integer division by 0 in tf.raw_ops.AllToAll (CVE-2021-41218)
  * Fixes a use after free and a memory leak in CollectiveReduceV2 (CVE-2021-41220)
  * Fixes an undefined behavior via nullptr reference binding in sparse matrix
    multiplication (CVE-2021-41219)
  * Fixes a heap buffer overflow in Transpose (CVE-2021-41216)
  * Prevents deadlocks arising from mutually recursive tf.function objects (CVE-2021-41213)
  * Fixes a null pointer exception in DeserializeSparse (CVE-2021-41215)
  * Fixes an undefined behavior arising from reference binding to nullptr in
    tf.ragged.cross (CVE-2021-41214)
  * Fixes a heap OOB read in tf.ragged.cross (CVE-2021-41212)
  * Fixes a heap OOB in shape inference for QuantizeV2 (CVE-2021-41211)
  * Fixes a heap OOB read in all tf.raw_ops.QuantizeAndDequantizeV* ops (CVE-2021-41205)
  * Fixes an FPE in ParallelConcat (CVE-2021-41207)
  * Fixes FPE issues in convolutions with zero size filters (CVE-2021-41209)
  * Fixes a heap OOB read in tf.raw_ops.SparseCountSparseOutput (CVE-2021-41210)
  * Fixes vulnerabilities caused by incomplete validation in boosted trees code (CVE-2021-41208)
  * Fixes vulnerabilities caused by incomplete validation of shapes in multiple TF ops (CVE-2021-41206)
  * Fixes a segfault produced while copying constant resource tensor (CVE-2021-41204)
  * Fixes a vulnerability caused by unitialized access in EinsumHelper::ParseEquation (CVE-2021-41201)
  * Fixes several vulnerabilities and segfaults caused by missing validation
    during checkpoint loading (CVE-2021-41203)
  * Fixes an overflow producing a crash in tf.range (CVE-2021-41202)
  * Fixes an overflow producing a crash in tf.image.resize when size is large (CVE-2021-41199)
  * Fixes an overflow producing a crash in tf.tile when tiling tensor is large (CVE-2021-41198)
  * Fixes a vulnerability produced due to incomplete validation in
    tf.summary.create_file_writer (CVE-2021-41200)
  * Fixes multiple crashes due to overflow and CHECK-fail in ops with large
    tensor shapes (CVE-2021-41197)
  * Fixes a crash in max_pool3d when size argument is 0 or negative (CVE-2021-41196)
  * Fixes a crash in tf.math.segment_* operations (CVE-2021-41195)
</comment>
    <requestid>930619</requestid>
  </revision>
  <revision rev="26" vrev="2">
    <srcmd5>5a453e4d71d61138bbcdd5151a2c0479</srcmd5>
    <version>2.6.2</version>
    <time>1641680603</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>944704</requestid>
  </revision>
  <revision rev="27" vrev="3">
    <srcmd5>1335a177d76860a82dfaa2bcb9299e12</srcmd5>
    <version>2.6.2</version>
    <time>1641855217</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>945336</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>bf468a0e7efd96f1544e2046a7def54b</srcmd5>
    <version>2.7.0</version>
    <time>1643838011</time>
    <user>dimstar_suse</user>
    <comment>- Remove URLs from github zip archives for xnnpack transitive
  dependencies: The GitHub archiver produces unreliable files

- Update to 2.7.0
  * Big changelog: at
    https://github.com/tensorflow/tensorflow/releases/tag/v2.7.0
- Security references:
  * Fixes a code injection issue in saved_model_cli
    (CVE-2021-41228)
  * Fixes a vulnerability due to use of uninitialized value in
    Tensorflow (CVE-2021-41225)
  * Fixes a heap OOB in FusedBatchNorm kernels (CVE-2021-41223)
  * Fixes an arbitrary memory read in ImmutableConst
    (CVE-2021-41227)
  * Fixes a heap OOB in SparseBinCount (CVE-2021-41226)
  * Fixes a heap OOB in SparseFillEmptyRows (CVE-2021-41224)
  * Fixes a segfault due to negative splits in SplitV
    (CVE-2021-41222)
  * Fixes segfaults and vulnerabilities caused by accesses to
    invalid memory during shape inference in Cudnn* ops
    (CVE-2021-41221)
  * Fixes a null pointer exception when Exit node is not preceded
    by Enter op (CVE-2021-41217)
  * Fixes an integer division by 0 in tf.raw_ops.AllToAll
    (CVE-2021-41218)
  * Fixes a use after free and a memory leak in CollectiveReduceV2
    (CVE-2021-41220)
  * Fixes an undefined behavior via nullptr reference binding in
    sparse matrix multiplication (CVE-2021-41219)
  * Fixes a heap buffer overflow in Transpose (CVE-2021-41216)</comment>
    <requestid>950525</requestid>
  </revision>
  <revision rev="29" vrev="1">
    <srcmd5>8008c954215243f07b2de96d5e3413df</srcmd5>
    <version>2.7.1</version>
    <time>1644099780</time>
    <user>dimstar_suse</user>
    <comment>- restore larger memory per job constraint
- Update to 2.7.1 -- boo#1195545 security update
  * Fixes a floating point division by 0 when executing convolution
    operators (CVE-2022-21725)
  * Fixes a heap OOB read in shape inference for ReverseSequence
    (CVE-2022-21728)
  * Fixes a heap OOB access in Dequantize (CVE-2022-21726)
  * Fixes an integer overflow in shape inference for Dequantize
    (CVE-2022-21727)
  * Fixes a heap OOB access in FractionalAvgPoolGrad
    (CVE-2022-21730)
  * Fixes an overflow and divide by zero in UnravelIndex
    (CVE-2022-21729)
  * Fixes a type confusion in shape inference for ConcatV2
    (CVE-2022-21731)
  * Fixes an OOM in ThreadPoolHandle (CVE-2022-21732)
  * Fixes an OOM due to integer overflow in StringNGrams
    (CVE-2022-21733)
  * Fixes more issues caused by incomplete validation in boosted
    trees code (CVE-2021-41208)
  * Fixes an integer overflows in most sparse component-wise ops
    (CVE-2022-23567)
  * Fixes an integer overflows in AddManySparseToTensorsMap
    (CVE-2022-23568)
  * Fixes a number of CHECK-failures in MapStage (CVE-2022-21734)
  * Fixes a division by zero in FractionalMaxPool (CVE-2022-21735)
  * Fixes a number of CHECK-fails when building invalid/overflowing
    tensor shapes (CVE-2022-23569)
  * Fixes an undefined behavior in SparseTensorSliceDataset
    (CVE-2022-21736)
  * Fixes an assertion failure based denial of service via faulty
    bin count operations (CVE-2022-21737)
  * Fixes a reference binding to null pointer in QuantizedMaxPool
    (CVE-2022-21739)
  * Fixes an integer overflow leading to crash in
    SparseCountSparseOutput (CVE-2022-21738)
  * Fixes a heap overflow in SparseCountSparseOutput
    (CVE-2022-21740)
  * Fixes an FPE in BiasAndClamp in TFLite (CVE-2022-23557)
  * Fixes an FPE in depthwise convolutions in TFLite
    (CVE-2022-21741)
  * Fixes an integer overflow in TFLite array creation
    (CVE-2022-23558)
  * Fixes an integer overflow in TFLite (CVE-2022-23559)
  * Fixes a dangerous OOB write in TFLite (CVE-2022-23561)
  * Fixes a vulnerability leading to read and write outside of
    bounds in TFLite (CVE-2022-23560)
  * Fixes a set of vulnerabilities caused by using insecure
    temporary files (CVE-2022-23563)
  * Fixes an integer overflow in Range resulting in undefined
    behavior and OOM (CVE-2022-23562)
  * Fixes a vulnerability where missing validation causes
    tf.sparse.split to crash when axis is a tuple (CVE-2021-41206)
  * Fixes a CHECK-fail when decoding resource handles from proto
    (CVE-2022-23564)
  * Fixes a CHECK-fail with repeated AttrDef (CVE-2022-23565)
  * Fixes a heap OOB write in Grappler (CVE-2022-23566)
  * Fixes a CHECK-fail when decoding invalid tensors from proto
    (CVE-2022-23571)
  * Fixes a null-dereference when specializing tensor type
    (CVE-2022-23570)
  * Fixes a crash when type cannot be specialized (CVE-2022-23572)
  * Fixes a heap OOB read/write in SpecializeType (CVE-2022-23574)
  * Fixes an unitialized variable access in AssignOp
    (CVE-2022-23573)
  * Fixes an integer overflow in
    OpLevelCostEstimator::CalculateTensorSize (CVE-2022-23575)
  * Fixes an integer overflow in
    OpLevelCostEstimator::CalculateOutputSize (CVE-2022-23576)
  * Fixes a null dereference in GetInitOp (CVE-2022-23577)
  * Fixes a memory leak when a graph node is invalid
    (CVE-2022-23578)
  * Fixes an abort caused by allocating a vector that is too large
    (CVE-2022-23580)
  * Fixes multiple CHECK-failures during Grappler's
    IsSimplifiableReshape (CVE-2022-23581)
  * Fixes multiple CHECK-failures during Grappler's
    SafeToRemoveIdentity (CVE-2022-23579)
  * Fixes multiple CHECK-failures in TensorByteSize
    (CVE-2022-23582)
  * Fixes multiple CHECK-failures in binary ops due to type
    confusion (CVE-2022-23583)
  * Fixes a use after free in DecodePng kernel (CVE-2022-23584)
  * Fixes a memory leak in decoding PNG images (CVE-2022-23585)
  * Fixes multiple CHECK-fails in function.cc (CVE-2022-23586)
  * Fixes multiple CHECK-fails due to attempting to build a
    reference tensor (CVE-2022-23588)
  * Fixes an integer overflow in Grappler cost estimation of crop
    and resize operation (CVE-2022-23587)
  * Fixes a null pointer dereference in Grappler's IsConstant
    (CVE-2022-23589)
  * Fixes a CHECK failure in constant folding (CVE-2021-41197)
  * Fixes a stack overflow due to self-recursive function in
    GraphDef (CVE-2022-23591)
  * Fixes a crash due to erroneous StatusOr (CVE-2022-23590)
  * Fixes multiple crashes and heap OOB accesses in TFG dialect
    (MLIR) (CVE-2022-23594)
  * Fixes a null pointer dereference in BuildXlaCompilationCache
    (XLA) (CVE-2022-23595)
  * Updates icu to 69.1 to handle CVE-2020-10531
</comment>
    <requestid>951670</requestid>
  </revision>
</revisionlist>
