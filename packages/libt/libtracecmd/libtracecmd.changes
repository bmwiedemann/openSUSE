-------------------------------------------------------------------
Mon Aug 25 09:53:53 UTC 2025 - Petr Pavlu <petr.pavlu@suse.com>

- Update to version 1.5.4:
  * Fix checking glob() return values

-------------------------------------------------------------------
Tue Apr 29 12:11:08 UTC 2025 - Petr Pavlu <petr.pavlu@suse.com>

- Update to 1.5.3:
  * Fix error message of size mismatch
  * Add more error checks
  * Fix several memory leaks
  * Check length of agent version number in protocol
  * Rename private hidden functions to start with "tcmd_"
  * Fix agent protocol when there's a failure

-------------------------------------------------------------------
Thu Nov  7 11:27:50 UTC 2024 - Daniel Wagner <daniel.wagner@suse.com>

- update to 1.5.2
 * Allow recorder to handle a "max buffer size" when communicating
   with an agent
 * Show function return value in function graph if supported
   (new feature in the Linux kernel starting in v6.5)
 * Fix split code that failed if the optional section "cmdline" was
   not present
 * Fix tracecmd_start_recording() to not fail if there's no data in
   polling mode
 * Fix stack trace printing logic within filtering
 * Optimize tracecmd_iterate_events() when limited to a set of CPUs
 * Fix some memory leaks
 * Call dlclose() after errors in loading plugins
 * Fix memory corruption issues
 * Clean up of some code
 * Fix python module

-------------------------------------------------------------------
Mon Jan 29 22:07:19 UTC 2024 - Dirk MÃ¼ller <dmueller@suse.com>

- update to 1.5.1:
  * Fix free_zpage() offset accounting. The read_zpage() subtracted
    the offset from the file start to find where to get the
    compressed data, but the free_zpage() did not, and would fail to
    find and free the passed in zpage.
  * Have function_graph plugin break apart functions that migrate
    between CPUs from entry to exit even if there is no event in
    between.
  * Fix iterators for when there's CPUs with no data. It was using
    the total number of CPUs to iterate the cpu_data[] array, that
    only contains CPUs with content.
  * Fix iterator with respect to function_graph handle that may do
    a peek of the next event to know if it should merge the entry
    and exit events of a function.
  * Some other small fixes and clean ups
  * tracecmd_iterate_events_reverse(): Will iterate events in the
    trace.dat file from the last event to the first.
  * tracecmd_iterate_reset(): Reset the iterator to restart from the
    beginning.
  * Fix meson build
  * Have callbacks exit out of iterator as the man page for
    tracecmd_iterate_events() says it should.
  * Have tracecmd_iterate_events() start where it left off
  * Speed up freeing the zpages by using an rbtree instead of a flat
    link

-------------------------------------------------------------------
Thu Nov  9 15:23:53 UTC 2023 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.4.0
  * trace-cmd extract: Do not extract top level unless told to
- Drop 0001-libtracecmd-Add-initial-support-for-meson.patch
  0002-trace-cmd-Add-initial-support-for-meson.patch (merged)

-------------------------------------------------------------------
Tue Feb  7 13:40:37 UTC 2023 - Daniel Wagner <daniel.wagner@suse.com>

- Sync meson build patch with latest upstream version
  * Documentation is built via extra build target

-------------------------------------------------------------------
Sun Jan 22 00:15:45 UTC 2023 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.3.1
  * No changelog was provided
- Delete static-assign.patch

-------------------------------------------------------------------
Wed Dec 28 07:45:24 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Build project with Meson
  * add 0001-libtracecmd-Add-initial-support-for-meson.patch
  * add 0002-trace-cmd-Add-initial-support-for-meson.patch

-------------------------------------------------------------------
Fri Dec 16 14:59:50 UTC 2022 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.3.0
  * Only set trace-cmd log level (not libtracefs nor libtraceevent)
  * Fix function graph plugin updating the next record
  * Use libtracefs tracefs_cpu() interface for recording
    (requires libtracefs 1.6)

-------------------------------------------------------------------
Sat Dec  3 13:04:42 UTC 2022 - Jan Engelhardt <jengelh@inai.de>

- Update to release 1.2.0
  * Process trace_clock for v7 trace.dat files
  * Add network roles for time sync
  * Have clock source TAI parse to seconds
  * Use uncompressed size for file size
  * Allow callers to save private data in tracecmd_input handlers
  * Add filtering logic for iterating events
  * Add man pages for iterator functions
  * Add API for mapping between host and guests
- Delete 0001-build-Only-consider-libtracecmd-documentation.patch,
  0002-trace-cmd-library-Fix-decleration-of-msg_lseek.patch (merged)
- Add static-assign.patch

-------------------------------------------------------------------
Mon Sep  5 10:38:26 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Drop previous added file extension glob on man pages. Whether it's
  compressed or not is an implementation detail.

-------------------------------------------------------------------
Tue Aug 30 12:10:30 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Add file extension on glob in %files section for man pages
- Set Group to Development/Libraries/C and C++

-------------------------------------------------------------------
Tue Aug 23 12:29:36 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Initial version libtracecmd 1.1.3
  Split libtracecmd from trace-cmd into a separate package because
  libracecmd has a different release cycle and doesn't allign with
  trace-cmd.
  - Add 0001-build-Only-consider-libtracecmd-documentation.patch
  - Add 0002-trace-cmd-library-Fix-decleration-of-msg_lseek.patch
