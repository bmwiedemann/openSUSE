-------------------------------------------------------------------
Thu May  5 06:33:30 UTC 2022 - Christophe Giboudeaux <christophe@krop.fr>

- Update to 1.6.3
  * Fixed an underflow error when using flat_xor_hd.
  * Added a build option to allow a suffix to be added to library
    names passed to dlopen()

-------------------------------------------------------------------
Sun Feb 28 18:02:44 UTC 2021 - Dirk MÃ¼ller <dmueller@suse.com>

- update to 1.6.2:
  * Allow the writing of fragments with the legacy, non-standard CRC-32.
  This is intended to smooth upgrades from liberasurecode 1.5.0 and
  earlier in a system with multiple readers and writers.

  See https://bugs.launchpad.net/liberasurecode/+bug/1886088 for more
  information, including a script you can run on already-written
  fragments to determine whether you are affected.

  If you are affected:
  - Upgrade liberasurecode on all systems, restarting processes as needed.
    Upgraded writers will continue writing CRCs that not-yet-upgraded
    readers can use.
  - After liberasurecode is upgraded everywhere, remove the environment
    variable. zlib CRCs will be used for new writes, and data written with
    either CRC will still be readable.

-------------------------------------------------------------------
Tue Aug  6 08:51:30 UTC 2019 - antoine.belvire@opensuse.org

- Update to 1.6.1:
  * Fixed CRC validation of little-endian fragments on big-endian.
  * Fixed compile warning about unaligned pointers.
- Changes from 1.6.0:
  * Use zlib for CRC-32.
  * Allow support for reading of little-endian framents on
    big-ending and vice-versa.
  * Added check to return error for negative data or parity
    arguments.
  * Added better argument validation for flat_xor_hd.

-------------------------------------------------------------------
Tue Oct 24 10:03:15 UTC 2017 - dmueller@suse.com

- update to 1.5.0:
  * Added support for Phazr.IO libphazr library
  * memory leak fixes
  * avoid Galois Field multiplication tables to be calculated repeatedly
- remove partial-disable-simd.patch: replaced by --disable-mmi

-------------------------------------------------------------------
Thu Jan 12 10:41:40 UTC 2017 - jengelh@inai.de

- Update RPM group and summaries (bsc#1041161)

-------------------------------------------------------------------
Wed Jan 11 14:17:47 UTC 2017 - aplanas@suse.com

- Add partial-disable-simd.patch
  Some libraries like python-PyECLib fail in OBS during the tests.
  This can be because in OBS SSE2, SSE3 and other SIMD extensions are
  not properly addressed by QEMU.
  This patch remove some SIMD extensions, maintaining MMX+SSE for
  x86_64 systems.
- Add buildreuired for pkg-config

-------------------------------------------------------------------
Sat Jan  7 15:00:11 UTC 2017 - dmueller@suse.com

- update to 1.4.0:
  . Added support for ISA-L Cauchy
  . Added get_version functionality to library
  . Fixed reconstruct to return an error when memory allocation failed
  . Fixed posix_memalign error handling
  . Fixed the internal version number. It was inadvertently skipped in 1.3.0.
  . Fixed error handling on gf_ivnert_matrix in isa-l backend
  . Added get_by_desc return value handling to get_fragment_size
  . Other minor fixes and updates

-------------------------------------------------------------------
Mon Oct 10 07:49:02 UTC 2016 - dmueller@suse.com

- update to 1.2.0:
 . Add functionality to enable consumers to check which backends are
   present on a system
 . Fix segfault when fragment index is out of range
 . Add fragment metadata checksumming support

-------------------------------------------------------------------
Mon Feb 29 10:56:53 UTC 2016 - dmueller@suse.com

- update to 1.1.0
  * Fix for a segfault related to Jerasure uninit() function that is being
   looked up by the jerasure EC backend (Issue#19)
  * Split helpers.h include for backward compatibility
  * Create header symlinks in std locations for backward compat (<= 1.0.8)
  * Eliminate erasurecode_stdinc.h dependency on log.h
  * Move fragment_header defn to main erasurecode header
  * doxygen documentation fixes
  * Minor bugfixes including removing offending MAJOR/MINOR version macros
  * Enforce upper limit 32 on the number of erasure coding fragments
   (#data + #chunks) < 32 
  * Introduce 'liberasurecode_rs_vand', a native, software-based Reed-Soloman
   Vandermonde backend
  * Properly set W in the new internal RS backend.  Without this change, the
   fragment length passed up is incorrect.
  * Remove all GPLv3 m4 references for CPUID checks
  * Properly dedupe fragments in fragments_to_string() function
  * Prevent backends from reconstructing an index when it is not missing,
   ie, is available
  * Make ./configure to obey CFLAGS
  * Add missing pkg-config templates
  * Remove autoconf installed files from git control
  * Fix get_supported_flags() arguments
  * Properly detect 64-bit architecture.
  * Add -f argument to autoreconf to regenerate aclocal macros
  * Silent autoconf warning for ac_cv_sizeof_long
  * Fix C++ build issues (add missing cplusplus macros definitions)
  * Make liberasurecode header installs to a specific include directory
  * Fix 'make test' to properly run null and installed backend tests.
  * Fix a uint < 0 warning reported by Clang
  * Fix memory leak in alg_sig init
  * Fix decode when m > k and all parities are chosen as input to decode
- run tests

-------------------------------------------------------------------
Thu Jul 23 14:52:48 UTC 2015 - dmueller@suse.com

- Initial package (1.0.7)

