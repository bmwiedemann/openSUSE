--- rt.equinox.bundles/bundles/org.eclipse.equinox.http.servlet/META-INF/MANIFEST.MF.orig	2019-05-30 16:37:50.444183989 +0100
+++ rt.equinox.bundles/bundles/org.eclipse.equinox.http.servlet/META-INF/MANIFEST.MF	2019-05-30 16:39:53.635849673 +0100
@@ -11,10 +11,7 @@
  org.eclipse.equinox.http.servlet.context;version="1.0.0";x-internal:=true,
  org.eclipse.equinox.http.servlet.session;version="1.0.0";x-internal:=true,
  org.eclipse.equinox.http.servlet.dto;version="1.0.0";x-internal:=true
-Import-Package: org.apache.commons.fileupload;version="[1.2.2, 2.0.0)";resolution:=optional,
- org.apache.commons.fileupload.disk;version="[1.2.2, 2.0.0)";resolution:=optional,
- org.apache.commons.fileupload.servlet;version="[1.2.2, 2.0.0)";resolution:=optional,
- javax.servlet;version="[3.1.0,5.0.0)",
+Import-Package: javax.servlet;version="[3.1.0,5.0.0)",
  javax.servlet.annotation;version="[3.1.0,5.0.0)";resolution:=optional,
  javax.servlet.descriptor;version="[3.1.0,5.0.0)";resolution:=optional,
  javax.servlet.http;version="[3.1.0,5.0.0)",
--- rt.equinox.bundles/bundles/org.eclipse.equinox.http.servlet.tests/META-INF/MANIFEST.MF.orig	2019-05-30 16:55:25.117321897 +0100
+++ rt.equinox.bundles/bundles/org.eclipse.equinox.http.servlet.tests/META-INF/MANIFEST.MF	2019-05-30 16:55:36.792290214 +0100
@@ -8,9 +8,6 @@
 Require-Bundle: org.junit;bundle-version="4.0"
 Import-Package: javax.servlet;version="2.6.0",
  javax.servlet.http;version="2.6.0",
- org.apache.commons.fileupload;version="1.2.2",
- org.apache.commons.fileupload.disk;version="1.2.2",
- org.apache.commons.fileupload.servlet;version="1.2.2",
  org.eclipse.equinox.http.jetty;version="1.4.0",
  org.eclipse.equinox.http.servlet;version="1.1.0",
  org.eclipse.equinox.http.servlet.context;version="1.0.0",
--- eclipse.platform.releng/features/org.eclipse.sdk.tests/feature.xml.orig	2019-06-20 11:07:22.539088841 +0100
+++ eclipse.platform.releng/features/org.eclipse.sdk.tests/feature.xml	2019-06-20 11:07:27.679071742 +0100
@@ -20,7 +20,6 @@
    </license>
 
    <requires>
-      <import plugin="org.apache.commons.fileupload" />
       <import plugin="org.apache.commons.io" />
       <import plugin="org.hamcrest.core" />
       <import plugin="org.hamcrest.library" />
--- rt.equinox.bundles/bundles/org.eclipse.equinox.http.servlet.tests/src/org/eclipse/equinox/http/servlet/tests/ServletTest.java.orig	2019-06-20 11:48:48.317887414 +0100
+++ rt.equinox.bundles/bundles/org.eclipse.equinox.http.servlet.tests/src/org/eclipse/equinox/http/servlet/tests/ServletTest.java	2019-06-20 11:49:35.106774459 +0100
@@ -79,10 +79,6 @@
 import javax.servlet.http.HttpSessionListener;
 import javax.servlet.http.Part;
 
-import org.apache.commons.fileupload.FileItem;
-import org.apache.commons.fileupload.FileUploadException;
-import org.apache.commons.fileupload.disk.DiskFileItemFactory;
-import org.apache.commons.fileupload.servlet.ServletFileUpload;
 import org.eclipse.equinox.http.servlet.ExtendedHttpService;
 import org.eclipse.equinox.http.servlet.RangeAwareServletContextHelper;
 import org.eclipse.equinox.http.servlet.context.ContextPathCustomizer;
@@ -2657,66 +2653,6 @@
 	}
 
 	@Test
-	public void test_commonsFileUpload() throws Exception {
-		Servlet servlet = new HttpServlet() {
-			private static final long serialVersionUID = 1L;
-
-			@Override
-			protected void doPost(HttpServletRequest req, HttpServletResponse resp)
-				throws IOException {
-
-				boolean isMultipart = ServletFileUpload.isMultipartContent(req);
-				Assert.assertTrue(isMultipart);
-
-				DiskFileItemFactory factory = new DiskFileItemFactory();
-
-				ServletContext servletContext = this.getServletConfig().getServletContext();
-				File repository = (File) servletContext.getAttribute("javax.servlet.context.tempdir");
-				factory.setRepository(repository);
-				ServletFileUpload upload = new ServletFileUpload(factory);
-
-				List<FileItem> items = null;
-				try {
-					List<FileItem> parseRequest = upload.parseRequest(req);
-					items = parseRequest;
-				} catch (FileUploadException e) {
-					e.printStackTrace();
-				}
-
-				Assert.assertNotNull(items);
-				Assert.assertFalse(items.isEmpty());
-
-				FileItem fileItem = items.get(0);
-
-				String submittedFileName = fileItem.getName();
-				String contentType = fileItem.getContentType();
-				long size = fileItem.getSize();
-
-				PrintWriter writer = resp.getWriter();
-
-				writer.write(submittedFileName);
-				writer.write("|");
-				writer.write(contentType);
-				writer.write("|" + size);
-			}
-		};
-
-		Dictionary<String, Object> props = new Hashtable<>();
-		props.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_NAME, "S16");
-		props.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_PATTERN, "/Servlet16/*");
-		registrations.add(getBundleContext().registerService(Servlet.class, servlet, props));
-
-		Map<String, List<Object>> map = new HashMap<>();
-
-		map.put("file", Arrays.<Object>asList(getClass().getResource("blue.png")));
-
-		Map<String, List<String>> result = requestAdvisor.upload("Servlet16/do", map);
-
-		Assert.assertEquals("200", result.get("responseCode").get(0));
-		Assert.assertEquals("blue.png|image/png|292", result.get("responseBody").get(0));
-	}
-
-	@Test
 	public void test_PathEncodings_Bug540970() throws Exception {
 		Servlet servlet = new HttpServlet() {
 			private static final long serialVersionUID = 1L;
