hak fetch tries to download devDependencies for two modules. Unfortunately it does so in a very non-deterministic manner (no shrinkwrap file)
Remove that step since the devDependencies are not actually needed for any of these two modules.

--- element-desktop-1.11.65/scripts/hak/fetch.ts.orig	2024-04-23 15:14:00.000000000 +0200
+++ element-desktop-1.11.65/scripts/hak/fetch.ts	2024-05-15 19:40:21.779432272 +0200
@@ -35,23 +35,6 @@ export default async function fetch(hakE
     console.log("Fetching " + moduleInfo.name + "@" + moduleInfo.version);
 
     const packumentCache = new Map();
-    await pacote.extract(`${moduleInfo.name}@${moduleInfo.version}`, moduleInfo.moduleBuildDir, {
-        packumentCache,
-    });
-
-    console.log("Running yarn install in " + moduleInfo.moduleBuildDir);
-    await new Promise<void>((resolve, reject) => {
-        const proc = childProcess.spawn(hakEnv.isWin() ? "yarn.cmd" : "yarn", ["install", "--ignore-scripts"], {
-            stdio: "inherit",
-            cwd: moduleInfo.moduleBuildDir,
-            // We need shell mode on Windows to be able to launch `.cmd` executables
-            // See https://nodejs.org/en/blog/vulnerability/april-2024-security-releases-2
-            shell: hakEnv.isWin(),
-        });
-        proc.on("exit", (code) => {
-            code ? reject(code) : resolve();
-        });
-    });
 
     // also extract another copy to the output directory at this point
     // nb. we do not yarn install in the output copy: we could install in
