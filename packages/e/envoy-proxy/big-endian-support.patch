From
https://github.com/envoyproxy/envoy/pull/10250


From 13dc082d74dd41f89bb279f26f8bfbed0e4a0a60 Mon Sep 17 00:00:00 2001
From: Ilya Leoshkevich <iii@linux.ibm.com>
Date: Thu, 27 Feb 2020 17:23:47 +0100
Subject: [PATCH] common: add big-endian support to Ip6ntohl and Ip6htonl

This patch resolves the TODO from
https://github.com/envoyproxy/envoy/pull/2431.
Tests pass on a big-endian machine (IBM Z).

Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
---
 source/common/network/utility.cc | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/source/common/network/utility.cc b/source/common/network/utility.cc
index f41e306f19f..fd920c67ef4 100644
--- a/envoy/source/common/network/utility.cc
+++ b/envoy/source/common/network/utility.cc
@@ -424,17 +424,19 @@ bool Utility::portInRangeList(const Address::Instance& address, const std::list<
 }
 
 absl::uint128 Utility::Ip6ntohl(const absl::uint128& address) {
-  // TODO(ccaraman): Support Ip6ntohl for big-endian.
-  static_assert(ABSL_IS_LITTLE_ENDIAN,
-                "Machines using big-endian byte order is not supported for IPv6.");
+#ifdef ABSL_IS_LITTLE_ENDIAN
   return flipOrder(address);
+#else
+  return address;
+#endif
 }
 
 absl::uint128 Utility::Ip6htonl(const absl::uint128& address) {
-  // TODO(ccaraman): Support Ip6ntohl for big-endian.
-  static_assert(ABSL_IS_LITTLE_ENDIAN,
-                "Machines using big-endian byte order is not supported for IPv6.");
+#ifdef ABSL_IS_LITTLE_ENDIAN
   return flipOrder(address);
+#else
+  return address;
+#endif
 }
 
 absl::uint128 Utility::flipOrder(const absl::uint128& input) {
