Index: b/src/compiledata.cpp
===================================================================
--- a/src/compiledata.cpp
+++ b/src/compiledata.cpp
@@ -212,7 +212,7 @@ enum {
 	kTUNE_SPLIT,
 };
 
-static const char utf8_bom[] = {0xef,0xbb,0xbf,0};
+static const char utf8_bom[] = {(char)0xef,(char)0xbb,(char)0xbf,0};
 
 static keywtab_t k_intonation[] = {
 	{"tune",      0,   kTUNE},
@@ -748,8 +748,9 @@ static void CompileReport(void)
 	int procedure_num;
 	int prev_mnemonic;
 
-    if(f_report == NULL)
+    if(f_report == NULL) {
         return;
+    }
 
 	// make a list of all the references and sort it
 	list = (REF_HASH_TAB **)malloc((count_references)* sizeof(REF_HASH_TAB *));
@@ -3682,8 +3683,9 @@ make_envs();
 fprintf(f_errors,"\nRefs %d,  Reused %d\n",count_references,duplicate_references);
 	fclose(f_in);
 	fclose(f_phdata);
-    if(f_prog_log != NULL)
+    if(f_prog_log != NULL) {
         fclose(f_prog_log);
+    }
 	fclose(f_phindex);
 	fclose(f_phtab);
 	fclose(f_phcontents);
Index: b/src/espeakedit.cpp
===================================================================
--- a/src/espeakedit.cpp
+++ b/src/espeakedit.cpp
@@ -359,10 +359,11 @@ void MyFrame::SetVoiceTitle(char *voice_
 {//==========================================
 	char buf[100];
 
-	if(samplerate_native == 22050)
+	if(samplerate_native == 22050) {
         sprintf(buf, " - %s  voice", voice_name);
-    else
+    } else {
         sprintf(buf, " - %s  voice  %dHz", voice_name, samplerate_native);
+    }
 	SetTitle(AppName + wxString(buf,wxConvLocal));
 
 	if((data_menu != NULL) && (translator != NULL))
@@ -538,8 +539,9 @@ HtmlWindow::HtmlWindow(wxWindow *parent,
 
 void HtmlWindow::OnLinkClicked(const wxHtmlLinkInfo& link)
 {
-	if(wxLaunchDefaultBrowser(link.GetHref()) == FALSE)
+	if(wxLaunchDefaultBrowser(link.GetHref()) == FALSE) {
 		wxLogStatus(_T("Failed to launch default browser: "+link.GetHref()));
+	}
 }
 
 
@@ -598,8 +600,9 @@ void MyFrame::OnAbout(wxCommandEvent& ev
 		}
 
 		result = wxLaunchDefaultBrowser(url_docs);
-		if(result == 0)
+		if(result == 0) {
 			wxLogStatus(_T("Failed to launch default browser: "+url_docs));
+		}
 		break;
 	}
 }
@@ -744,7 +747,7 @@ void MyFrame::OnTools(wxCommandEvent& ev
 	int debug_flag=0;
 	char fname_log[sizeof(path_dsource)+12];
 	char err_fname[sizeof(path_home)+15];
-	static const char utf8_bom[] = {0xef,0xbb,0xbf,0};
+	static const char utf8_bom[] = {(char)0xef,(char)0xbb,(char)0xbf,0};
 
 	switch(event.GetId())
 	{
Index: b/src/extras.cpp
===================================================================
--- a/src/extras.cpp
+++ b/src/extras.cpp
@@ -335,16 +335,16 @@ void Lexicon_It(int pass)
 	static const char *vowels1 = "aeiou";
 	static const char *vowels2 = "aeou";
 
-	static const char ex1[] = {'a',0xc3,0xac,0};  // aì
-	static const char ex2[] = {'e',0xc3,0xac,0};  // eì
-	static const char ex3[] = {0xc3,0xb9,'a',0};  // ùa
-	static const char ex4[] = {0xc3,0xb9,'e',0};  // ùe
-	static const char ex5[] = {0xc3,0xb9,'i',0};  // ùi
-	static const char ex6[] = {0xc3,0xb9,'o',0};  // ùo
-	static const char ex7[] = {'c',0xc3,0xac,'a',0};  // cìa
-	static const char ex8[] = {'c',0xc3,0xac,'o',0};  // cìo
-	static const char ex9[] = {'c',0xc3,0xac,'u',0};  // cìu
-	static const char ex10[] = {'g','l',0xc3,0xac,0};  // glì
+	static const char ex1[] = {(char)'a',(char)0xc3,(char)0xac,0};  // aì
+	static const char ex2[] = {(char)'e',(char)0xc3,(char)0xac,0};  // eì
+	static const char ex3[] = {(char)0xc3,(char)0xb9,(char)'a',0};  // ùa
+	static const char ex4[] = {(char)0xc3,(char)0xb9,(char)'e',0};  // ùe
+	static const char ex5[] = {(char)0xc3,(char)0xb9,(char)'i',0};  // ùi
+	static const char ex6[] = {(char)0xc3,(char)0xb9,(char)'o',0};  // ùo
+	static const char ex7[] = {(char)'c',(char)0xc3,(char)0xac,(char)'a',0};  // cìa
+	static const char ex8[] = {(char)'c',(char)0xc3,(char)0xac,(char)'o',0};  // cìo
+	static const char ex9[] = {(char)'c',(char)0xc3,(char)0xac,(char)'u',0};  // cìu
+	static const char ex10[] = {(char)'g',(char)'l',(char)0xc3,(char)0xac,0};  // glì
 
 
 	static const char *exceptions[] = {ex1, ex2, ex3, ex4, ex5, ex6, ex7, ex8, ex9, ex10, NULL};
Index: b/src/tr_languages.cpp
===================================================================
--- a/src/tr_languages.cpp
+++ b/src/tr_languages.cpp
@@ -198,7 +198,7 @@ static const unsigned short chars_ignore
 	0x200d,  1, // zero width joiner
 	0, 0 };
 
-const char string_ordinal[] = {0xc2,0xba,0};  // masculine ordinal character, UTF-8
+const char string_ordinal[] = {(char)0xc2,(char)0xba,0};  // masculine ordinal character, UTF-8
 
 
 static Translator* NewTranslator(void)
