From fede0eaff4f0a3f63335d98a02e7fbf616be73bd Mon Sep 17 00:00:00 2001
From: Christophe Giboudeaux <christophe@krop.fr>
Date: Tue, 1 Jun 2021 17:11:20 +0200
Subject: [PATCH] Remove deprecated dynamic exception specifications

Backport of upstream change c3b6df6d8.
---
 src/acl_manager.cpp             |  2 +-
 src/acl_manager.hpp             |  2 +-
 src/eiciel_xattr_controller.cpp | 10 +++++-----
 src/eiciel_xattr_controller.hpp | 10 +++++-----
 src/xattr_manager.cpp           |  8 ++++----
 src/xattr_manager.hpp           |  8 ++++----
 6 files changed, 20 insertions(+), 20 deletions(-)

diff --git a/src/acl_manager.cpp b/src/acl_manager.cpp
index 467aefc..5615589 100644
--- a/src/acl_manager.cpp
+++ b/src/acl_manager.cpp
@@ -19,7 +19,7 @@
 #include "acl_manager.hpp"
 
 
-ACLManager::ACLManager(const string& filename) throw (ACLManagerException)
+ACLManager::ACLManager(const string& filename)
     : _filename(filename) 
 {
     // Get first UGO permissions and info about the file
diff --git a/src/acl_manager.hpp b/src/acl_manager.hpp
index b9eec88..cf574b4 100644
--- a/src/acl_manager.hpp
+++ b/src/acl_manager.hpp
@@ -169,7 +169,7 @@ class ACLManager
         const static int PERM_WRITE = 1;
         const static int PERM_EXEC = 2;
 
-        ACLManager(const string& filename) throw (ACLManagerException);
+        ACLManager(const string& filename);
         
         string get_acl_access() const { return _text_acl_access; }
         string get_acl_default() const { return _text_acl_default; }
diff --git a/src/eiciel_xattr_controller.cpp b/src/eiciel_xattr_controller.cpp
index 229624c..958f50b 100644
--- a/src/eiciel_xattr_controller.cpp
+++ b/src/eiciel_xattr_controller.cpp
@@ -24,7 +24,7 @@ EicielXAttrController::EicielXAttrController()
 {
 }
 
-void EicielXAttrController::open_file(const Glib::ustring& filename) throw (XAttrManagerException)
+void EicielXAttrController::open_file(const Glib::ustring& filename)
 {
     if (_xattr_manager != NULL)
     {
@@ -52,22 +52,22 @@ void EicielXAttrController::open_file(const Glib::ustring& filename) throw (XAtt
     }
 }
 
-void EicielXAttrController::remove_attribute(const Glib::ustring& nomAtrib)  throw (XAttrManagerException)
+void EicielXAttrController::remove_attribute(const Glib::ustring& nomAtrib)
 {
     _xattr_manager->remove_attribute(nomAtrib);
 }
 
-void EicielXAttrController::add_attribute(const Glib::ustring& nomAtrib, const Glib::ustring& valorAtrib) throw (XAttrManagerException)
+void EicielXAttrController::add_attribute(const Glib::ustring& nomAtrib, const Glib::ustring& valorAtrib)
 {
     _xattr_manager->add_attribute(nomAtrib, valorAtrib);
 }
 
-void EicielXAttrController::update_attribute_value(const Glib::ustring& nomAtrib, const Glib::ustring& valorNouAtrib) throw (XAttrManagerException) 
+void EicielXAttrController::update_attribute_value(const Glib::ustring& nomAtrib, const Glib::ustring& valorNouAtrib)
 {
     _xattr_manager->add_attribute(nomAtrib, valorNouAtrib);
 }
 
-void EicielXAttrController::update_attribute_name(const Glib::ustring& nomAnticAtribut, const Glib::ustring& nomNouAtribut) throw (XAttrManagerException)
+void EicielXAttrController::update_attribute_name(const Glib::ustring& nomAnticAtribut, const Glib::ustring& nomNouAtribut)
 {
     _xattr_manager->change_attribute_name(nomAnticAtribut, nomNouAtribut);
 }
diff --git a/src/eiciel_xattr_controller.hpp b/src/eiciel_xattr_controller.hpp
index a24f333..468c175 100644
--- a/src/eiciel_xattr_controller.hpp
+++ b/src/eiciel_xattr_controller.hpp
@@ -32,21 +32,21 @@ class EicielXAttrController : public sigc::trackable
         EicielXAttrWindow* _window;
         bool _opened_file;
 
-        void remove_attribute(const Glib::ustring& attrib_name) throw (XAttrManagerException);
+        void remove_attribute(const Glib::ustring& attrib_name);
 
         void add_attribute(const Glib::ustring& attrib_name, 
-                const Glib::ustring& attrib_value) throw (XAttrManagerException);
+                const Glib::ustring& attrib_value);
         void update_attribute_value(const Glib::ustring& attrib_name, 
-                const Glib::ustring& attrib_new_value) throw (XAttrManagerException) ;
+                const Glib::ustring& attrib_new_value) ;
         void update_attribute_name(const Glib::ustring& old_attribute_name, 
-                const Glib::ustring& new_attribute_name) throw (XAttrManagerException);
+                const Glib::ustring& new_attribute_name);
 
         void check_editable();
     public:
         EicielXAttrController();
         bool opened_file() { return _opened_file; };
 
-        void open_file(const Glib::ustring& filename) throw (XAttrManagerException);
+        void open_file(const Glib::ustring& filename);
 
         friend class EicielXAttrWindow;
 }
diff --git a/src/xattr_manager.cpp b/src/xattr_manager.cpp
index 8d673ad..33f1cfa 100644
--- a/src/xattr_manager.cpp
+++ b/src/xattr_manager.cpp
@@ -18,7 +18,7 @@
 */
 #include "xattr_manager.hpp"
 
-XAttrManager::XAttrManager(const Glib::ustring& filename) throw (XAttrManagerException)
+XAttrManager::XAttrManager(const Glib::ustring& filename)
     : _filename(filename)
 {
     // Check it is an ordinary file or a directory
@@ -41,7 +41,7 @@ XAttrManager::XAttrManager(const Glib::ustring& filename) throw (XAttrManagerExc
 }
 
 // We should find better ways to test xattr support
-void XAttrManager::read_test() throw (XAttrManagerException)
+void XAttrManager::read_test()
 {
     Glib::ustring qualified_attr_name = "user.test";
     int buffer_length;
@@ -62,7 +62,7 @@ void XAttrManager::read_test() throw (XAttrManagerException)
     delete[] buffer;
 }
 
-std::vector<std::string> XAttrManager::get_xattr_list() throw (XAttrManagerException)
+std::vector<std::string> XAttrManager::get_xattr_list()
 {
     std::vector<std::string> result;
 
@@ -133,7 +133,7 @@ std::vector<std::string> XAttrManager::get_xattr_list() throw (XAttrManagerExcep
     return result;
 }
 
-std::string XAttrManager::get_attribute_value(const std::string& attr_name) throw (XAttrManagerException)
+std::string XAttrManager::get_attribute_value(const std::string& attr_name)
 {
     int size = 30;
     char* buffer = new char[size];
diff --git a/src/xattr_manager.hpp b/src/xattr_manager.hpp
index 5f59e17..b8c087a 100644
--- a/src/xattr_manager.hpp
+++ b/src/xattr_manager.hpp
@@ -57,7 +57,7 @@ class XAttrManager {
     public:
         typedef std::map<std::string, std::string> attributes_t;
 
-        XAttrManager(const Glib::ustring& filename) throw (XAttrManagerException);
+        XAttrManager(const Glib::ustring& filename);
 
         attributes_t get_attributes_list();
         void remove_attribute(std::string attr_name);
@@ -71,10 +71,10 @@ class XAttrManager {
         }
 
     private:
-        std::vector<std::string> get_xattr_list() throw (XAttrManagerException);
-        std::string get_attribute_value(const std::string& attr_name) throw (XAttrManagerException);
+        std::vector<std::string> get_xattr_list();
+        std::string get_attribute_value(const std::string& attr_name);
 
-        void read_test() throw (XAttrManagerException);
+        void read_test();
 
         Glib::ustring _filename;
 
-- 
2.31.1

