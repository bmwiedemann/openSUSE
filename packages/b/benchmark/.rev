<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>6ba6a8c71e68757a9ad7d74baf6f7a2c</srcmd5>
    <version>1.0.0</version>
    <time>1465481095</time>
    <user>dimstar_suse</user>
    <comment>Library for microbenchmarking</comment>
    <requestid>395525</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>d10f4200575a1a43196af94458a5a5ac</srcmd5>
    <version>1.0.0</version>
    <time>1467705151</time>
    <user>dimstar_suse</user>
    <comment>- Disable lto as it does not seem to go well with -fPIE</comment>
    <requestid>406298</requestid>
  </revision>
  <revision rev="3" vrev="3">
    <srcmd5>3141c3eaf928a5fd7be9ab50254338c0</srcmd5>
    <version>1.0.0</version>
    <time>1479150900</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>440026</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>773ca26db4f5f40e7f53027dbf80e7c0</srcmd5>
    <version>1.1.0</version>
    <time>1485862893</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.1.0:
  * ArgNames support
  * Fixes for OSX and Cygwin and MSVC builds
  * PauseTiming and ResumeTiming are per thread (#286)
  * Better Range and Arg specifications
  * Complexity reporting

- add support for s390x:
  * benchmark-s390.patch</comment>
    <requestid>452974</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>b1d117cbb8a90757a8bbbcd6e563ecb9</srcmd5>
    <version>1.3.0</version>
    <time>1521405908</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>588118</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>175b1be8aee05549a0d50c47357884d7</srcmd5>
    <version>1.3.0</version>
    <time>1522225968</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>591547</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>917e7c9b0ac2412ba7306c519f43c630</srcmd5>
    <version>1.4.0</version>
    <time>1522935312</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>593723</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>9f33cb7ab16c1f3a2fba6b1e318bea2b</srcmd5>
    <version>1.4.1</version>
    <time>1527605549</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>612786</requestid>
  </revision>
  <revision rev="9" vrev="2">
    <srcmd5>875a3b30212a03d114019660b21a7e79</srcmd5>
    <version>1.4.1</version>
    <time>1530087677</time>
    <user>dimstar_suse</user>
    <comment>- Enable lto
- Update dependencies</comment>
    <requestid>618947</requestid>
  </revision>
  <revision rev="10" vrev="3">
    <srcmd5>0f5d682ca254b85a7879bbd40f4a3d96</srcmd5>
    <version>1.4.1</version>
    <time>1550574056</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>677089</requestid>
  </revision>
  <revision rev="11" vrev="4">
    <srcmd5>ceff3159b050cb3b689b12eaa58c33ca</srcmd5>
    <version>1.4.1</version>
    <time>1551113824</time>
    <user>coolo</user>
    <comment></comment>
    <requestid>678652</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>456065624167dd1be2498dfa9e0deec6</srcmd5>
    <version>1.5.0</version>
    <time>1561405997</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.5.0:
  * Bump CMake minimum version to 3.5.1 (see dependencies.md)
  * Add threads and repetitions to the JSON outputa
  * Memory management and reporting hooks
  * Documentation improvements
  * Miscellaneous build fixes
- Disable gtest part of tests untill new gtest is available</comment>
    <requestid>711652</requestid>
  </revision>
  <revision rev="13" vrev="2">
    <srcmd5>4280a1b7094e36dd5ae157549d3226ca</srcmd5>
    <version>1.5.0</version>
    <time>1573164816</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>739945</requestid>
  </revision>
  <revision rev="14" vrev="3">
    <srcmd5>8eb691b5e25a6376809971df8c61da5a</srcmd5>
    <version>1.5.0</version>
    <time>1574547539</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>749315</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>10353a8aec02aeaaffee14fd63d553b2</srcmd5>
    <version>1.5.2</version>
    <time>1609344742</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.5.2:
  * Timestamps in output are now rfc3339-formatted #965
  * overflow warnings with timers fixed #980
  * Python dependencies are now covered by a requirements.txt #994
  * JSON output cleaned up when no CPU scaling is present (#1008)
  * CartesianProduct added for easier settings of multiple ranges (#1029)
  * Python bindings improvements:
    + Custom main functions (#993)
    + A rename to google_benchmark (#199
    + More state methods bound (#1037) with a builder interface (#1040)
  * Workflow additions in github include pylint (#1039) and bindings runs (#1041)</comment>
    <requestid>859259</requestid>
  </revision>
  <revision rev="16" vrev="2">
    <srcmd5>4d868b5ebbf47c05b895c7c3ad9c1475</srcmd5>
    <version>1.5.2</version>
    <time>1613427005</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>870401</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>90961e2ac01b46639e4502872aa49a30</srcmd5>
    <version>1.5.3</version>
    <time>1619729082</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.5.3:
  * Be compliant and return 0 from main.
  * Fix windows warning on type conversion (#1121)
  * Add verbosity to CI logs (#1122)
  * fix cmake issue with referencing a non-existing function argument (#1118)
  * [tools] Fix dumb mistake in previous commit - print aggregates only means aggregates, not non-aggregates
  * [tools] Don't forget to print UTest when printing aggregates only
  * [sysinfo] Fix CPU Frequency reading on AMD Ryzen CPU's (#1117)
  * Use fewer ramp up repetitions when KeepRunningBatch is used (#1113)
  * Add bazel status to README
  * Re-enable bazel without bazelisk and with scoped build/test targets (#1109)
- Drop no longer needed 0001-src-benchmark_register.h-add-missing-limits-inclusio.patch</comment>
    <requestid>888936</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>939d69d51a20b6ee7caa6791f63d9e89</srcmd5>
    <version>1.5.5</version>
    <time>1631826879</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.5.5:
  * [NFCI] Drop warning to satisfy clang's -Wunused-but-set-variable diag (#1174)
  * Add support for new architecture loongarch (#1173)
  * Use modern clang/libc++ for sanitizers (#1171)
  * Enable various sanitizer builds in github actions (#1167)
  * Random interleaving of benchmark repetitions - the sequel (fixes #1051) (#1163)
  * Fix leak in test, and provide path to remove leak from library (#1169)
  * [NFCI] Make BenchmarkRunner non-internal to it's .cpp file
  * [NFCI] RunBenchmarks(): extract FlushStreams()/Report() functions
  * compare.py: sort the results (#1168)
  * Make 'complexity reports' cache per-family, not global (#1166)
  * Introduce per-family instance index (#1165)
  * Introduce &quot;family index&quot; field into JSON output (#1164)
  * BenchmarkFamilies::FindBenchmarks(): correctly use std::vector&lt;&gt;::reserve()
  * Ensure that we print repetition count even when it was specified via flag `--benchmark_repetitions=`
  * Revert &quot;Implementation of random interleaving.  (#1105)&quot; (#1161)
  * Fix perf counter argument parsing (#1160)
  * Run build-and-test on all branches
  * Un-disable github actions :]
  * Run build-and-test on all branches
  * Set theme jekyll-theme-hacker
  * bump version to v1.5.4
  * Removing freenode from README
  * Fix pedantic compilation flag violation (#1156)
  * fix version recorded in releases (#1047)
  * Implementation of random interleaving.  (#1105)
  * remove appveyor and add libera.chat as IRC resource
  * [PFM] Extend perf counter support to multi-threaded cases. (#1153)
  * Support -Wsuggest-override (#1059)
  * Refactor `BenchmarkInstance` (#1148)</comment>
    <requestid>918664</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>b85d108e44d30866158181fb71ae2fff</srcmd5>
    <version>1.6.1</version>
    <time>1642633922</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.6.1:
  * Creating release commit for v1.6.1
  * Destructor not returning is expected in some cases (#1316)
  * Address c4267 warning on MSVC (#1315)
  * Fix `-DBENCHMARK_ENABLE_INSTALL=OFF` (Fixes #1275) (#1305)
  * Avoid errors due to &quot;default label in switch which covers all enumeration values&quot; in Windows codepath (#1302)
  * update googletest to latest release tag 1.11.0 (#1301)
  * clang-tidy: readability-redundant and performance (#1298)
  * Update user_guide.md (#1296)
  * Fix broken link to Setup/Teardown section (#1291)
  * Add clang-tidy check (#1290)
  * compare.py: compute and print 'OVERALL GEOMEAN' aggregate (#1289)
  * remove long-defunct cli parameter
  * lose some build warnings
  * Disable clang-tidy (unused-using-decls) (#1287)
  * disable lint check where we know it'd fail (#1286)
  * Add Setup/Teardown option on Benchmark. (#1269)
  * Googletest renamed master to main today. (#1285)
  * Remove bazelbuild/rules_cc dependency (#1283)
  * Support for building with LLVM clang-10/clang-11 on Windows. (#1227)
  * Fix dependency typo and unpin cibuildwheel version in wheel building â€¦ (#1263)
  * check clang format on pull requests and merges (#1281)
  * format tests with clang-format (#1282)
  * clang-format Google on {src/,include/} (#1280)
  * Fix warning with MacOS (#1276)
  * Fixed typo in doc:  s/marcro/macro (#1274)
  * Fix error with Fix Werror=old-style-cast  (#1272)
  * Fix error Wshorten-64-to-32 (#1273)
  * [cleanup] Change `== &quot;&quot;` to `.empty()` on string to avoid clang-tidy warnings (#1271)
  * Fix un-initted error in test and fix change the API previously proposed to use std::string instead of raw char* (#1266)</comment>
    <requestid>946943</requestid>
  </revision>
  <revision rev="20" vrev="2">
    <srcmd5>e10c1733c58bde46cf2a6df3e1c46acd</srcmd5>
    <version>1.6.1</version>
    <time>1647367425</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>961637</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>0989fe09e5b88c4721130052b0ecdd48</srcmd5>
    <version>1.7.0</version>
    <time>1661346639</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>998776</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>6c79481570abcaa88479c30df4708849</srcmd5>
    <version>1.7.1</version>
    <time>1670430868</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1040615</requestid>
  </revision>
  <revision rev="23" vrev="2">
    <srcmd5>ea012db137fdfdb4f97d615ade269d60</srcmd5>
    <version>1.7.1</version>
    <time>1706204359</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1141438</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>8694554142ced3895674f14e9ba7aa5f</srcmd5>
    <version>1.8.5</version>
    <time>1722542594</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.8.5:
  * preparing for v1.8.5
  * clang format yet again
  * update actions/checkout to v4
  * another reversal of something that breaks on wasm
  * clang format header fixes
  * clang-format fixes
  * roll back fatal error that breaks some platform (wasm) expectations
  * revert perf counters change until we can do the full version
  * remove old travis config
  * [FR] Add API to provide custom profilers #1807 (#1809)
  * Clarify the difference between `BENCHMARK_TEMPLATE_F` and `BENCHMARK_TEMPLATE_DEFINE_F` + `BENCHMARK_REGISTER_F` (#1815)
  * add PERF_FORMAT_TOTAL_TIME_{ENABLED,RUNNING} to support multiplexing (#1814)
  * Add -lkstat to the .pc for Solaris (#1801)
  * Find libpfm dependency in installed CMake configs (#1806)
  * [bazel] Use `includes` instead of `strip_include_prefix` (#1803)
  * cycleclock: Fix type conversion to match function return type on riscv64 (#1802)
  * Bump minimum required C++ version from C++11 to C++14 (#1800)
  * bump standard to C++14 (#1799)
  * cycleclock: Fix type conversion to match function return type (#1794)
  * CMake: unbreak version handling for tarballs (#1793)
  * hotfix: Correct pypi-publishing action tag to v1.8.14 (#1791)
  * Improve compatibility with Hexagon hardware (#1785)
  * preparing for v1.8.4 (#1788)
  * Modernize wheel building job config (#1783)
  * Switch git override to stable BCR tag for nanobind_bazel (#1778)
  * Add `benchmark_main.pc` to link `main()` containing library (#1779)
  * Refactor: Return frequency as double (#1782)
  * Remove COMPILER_IBMXL macro for z/OS (#1777)
  * Fix OpenBSD build (#1772)
  * allow BENCHMARK_VERSION to be undefined (#1769)
  * clang-tidy broke the world (#1766)
  * Fix implicit conversion changes signess warning in perf_counters.cc (#1765)
  * Add Python bindings build using bzlmod (#1764)
  * mitigate clang build warnings -Wconversion (#1763)
  * Fixed LTO issue on no discard variable (#1761)
  * Revert &quot;fix some warnings&quot; (#1762)
  * fix some warnings
  * Rewrite complexity_test to use (hardcoded) manual time (#1757)
  * sysinfo.cc: Always abort on GetNumCPUs failure (#1756)
  * CycleClock: Add support for Alpha architecture (#1753)
  * fix typo in GetBenchmarkVersion() (#1755)
  * Deflake CI (#1751)
  * Add `BENCHMARK_TEMPLATE[12]_CAPTURE`, fusion of `BENCHMARK_CAPTURE` and `BENCHMARK_TEMPLATE` (#1747)
  * set library version in bazel (#1746)
  * Output library / schema versions in JSON context block (#1742)
  * ignore new bzlmod lock file
  * changes to run bazel migration scripts
  * Bump pre-commit dependencies (#1740)
  * Fix C-style typecasting in QNX-specific code (#1739)
  * Docs: `reducing_variance.md`: proofreading, fix typos (#1736)
  * fix(cmakelists.txt): enforce CMake to find PFM or fail when BENCHMARK_ENABLE_LIBPFM is ON (#1705)
  * Issue 1734: Streams not flushed if not running actual benchmarks (#1735)
  * tools/compare: don't actually discard valid (but zero) `pvalue` (#1733)
  * Issue1731 created console does not receive output (#1732)
  * Change Fixture to use non-const SetUp and TearDown in example (#1723)
  * Avoid leaking LFS flags to reverse dependencies (#1730)
  * style: re-format BUILD file with buildifier.
  * fix per-thread timing error on z/OS (#1719)
  * Enable Large-file Support (#1726)
  * CycleClock: use RDTIME instead of RDCYCLE on RISC-V (#1727)
  * Update perf_counters_gtest.cc (#1728)
  * Fix division by zero for low frequency timers for CV statistics (#1724)
  * fix: fail to import gbench in bazel and python3.12
  * define HOST_NAME_MAX for z/oS (#1717)
  * Fix mis-matching argument in closing tag for cmake macro (#1714) (#1715)
  * Check out repo at depth 0 for Python tests, bump Python and PyPI actions (#1713)
  * Run `pre-commit autoupdate`, fix stale pyproject.toml comments (#1712)
  * Upgrade core bazel dependencies (#1711)
  * Fix editable install by unsetting `build_ext.copy_extensions_to_source` (#1710)
  * [NFC] `complexity_n` is not of `IterationCount` type (#1709)
  * Fix `pre-commit` GitHub Actions job (#1708)
  * Support windows MSYS2 environments (#1704)
  * [CI] Try to fix sanitizer builds by pinning the LLVM revision (#1703)
  * Fix CMakeLists.txt for perf_counters_test (#1701)
  * Add missing `\n` character at end of error log string (#1700)
  * Switch out black for ruff format (#1698)
  * Fixed compiler warnings (#1697)
  * Fix unit tests compilation with non-gnu / non-msvc compilers with c++11 support. (#1691)
  * Add `setuptools_scm` for dynamic zero-config Python versioning (#1690)
  * Drop isort hook for ruff builtin import sorting (#1689)
  * Add pre-commit config and GitHub Actions job (#1688)
  * [bindings] Add LTO builds on Windows+MSVC (#1687)
  * Reapply size optimizations for clang &amp; MSVC, LTO for Mac+Linux (#1685)
  * Change nanobind linkage to response file approach on macOS (#1638)
  * Add Python 3.12 support (#1676)
  * Add no-unititialized to tests (#1683)
  * Set -Wno-unused-variable for tests (#1682)
  * Increase the kMaxIterations limit (#1668)
  * fix format in src/sysinfo
  * add name to clang format job
  * Fix building on MinGW: default `WINVER` is too old (#1681)
  * Update bazel.yml (#1671)
  * correct cli param in docs
  * Make json and csv output consistent. (#1662)
  * Audit MSVC references in cmake files to consider clang++ (#1669)
  * bump version to 1.8.3
  * tweak comment wording
  * StatisticsMedian: Fix bug
  * test: Use gtest_main only when needed  (#1657)
  * perf_counters: Initialize once only when needed (#1656)
  * State: Initialize counters with kAvgIteration in constructor (#1652)
  * perf-counters: Make tests pass on Android (#1653)
  * add logo to github pages
  * add black icon
  * remove logo from generated docs
  * remove icon from main README
  * update logo path
  * adding a logo to the docs
  * benchmark.cc: Fix benchmarks_with_threads condition (#1651)
  * sysinfo.cc: Call getloadavg for Android API &gt;= 29 (#1) (#1649)
  * [perf-counters] Fix pause/resume (#1643)
  * fix: added benchmark_counters_tabular for file (#1645)
  * Fix IntelLLVM compiler error (#1644)
  * bug: Inconsistent suffixes console reporter 1009 (#1631)
  * Mark internal deps as dev_depenencies so that downstream modules don't require those. (#1640)
  * Fix `-Werror,-Wold-style-cast` build failure on Windows. (#1637)
  * Re-enable windows-latest tests for newer Bazel (#1641)
  * Update bzlmod support to new rules_python extension API (#1633)
  * Delete unused requirements file, simplify nanobind build file (#1635)
  * Add tests for Human Readable functionality (#1632)
  * Downgrade bazel to windows-2019 (#1629)
  * Bump scipy from 1.5.4 to 1.10.0 in /tools (#1630)
  * Bump `nanobind` to stable v1.4.0 tag (#1626)
  * missing cmake include
  * add back package properties for PFM
  * pfm: Use a more standard CMake approach for finding libpfm (#1628)
  * Add pyproject.toml file for PEP518 compliance (#1625)
  * Update tools.md for missing color meaning issue #1491 (#1624)
  * Fix broken PFM-enabled tests (#1623)
  * bump version to 1.8.2 ready for release
  * Fix passing non-const lvalue refs to DoNotOptimize (#1622)
  * Add more terminals with color support (#1621)
  * Add discord server link to README
  * bump version to 1.8.1 pre release
  * Suppress intentional potential memory leak as detected by clang static analysis (#1618)
  * Add a CI test for the new bzlmod integration (#1617)
  * Add support for bzlmod (excluding Python bindings) (#1615)
  * remove old-style (C-style) casts (#1614)
  * Fix a typo in regex choice (#1610)
  * Fix pass rvalue to DoNotOptimize (#1608)
  * Add project name to version message
  * Fixed a typo in docs (#1600)
  * Update Python version to PY3, as indicated by the actual source file. (#1598)
  * Fix code triggering -Wsign-conversion (#1596)
  * Disable debug-only test in release builds to avoid expected failures. (#1595)
  * update version to v1.8.0
  * reenable msan sanitizer workflow (#1589)
  * Guard NOMINMAX to prevent redefinition error (#1581) (#1582)
  * Correct libpfm dep for integrators. (#1579)
  * Fix compile warnings about ignoring a [[nodiscard]] type. (#1577)
  * make libpfm dep work for integrators
  * use 'new_git_repository' in external deps call to work with older bazel versions
  * link to benchmark directly for tests that aren't link_main_test (#1576)
  * Convert uses of `const char*` to `std::string` (#1567)
  * add '@' to correctly reference build file for libpfm (#1575)
  * Address warnings on NVIDIA nvc++ (#1573)
  * simplify setting C++ standard
  * [FR] Provide public accessors to benchmark name and arguments #1551 (#1563)
  * use std::string for skip messages (#1571)
  * [FR] state.SkipWithMessage #963 (#1564)
  * Fix build break with nvc++ when -Werror is ON (#1569)
  * Fix examples in user guide using deprecated `DoNotOptimize`-API (#1568)
  * Bump nanobind to stable v0.2.0, change linker options (#1565)
  * Refactoring of PerfCounters infrastructure (#1559)
  * get rid of  warnings in tests (#1562)
  * Filter performance counter names, not invalidate all (#1554)
  * Implement unlimited number of performance counters (#1552)
  * add compiler to build-and-test and create min-cmake CI bot (#1550)
  * Fix CPU frequency estimation on riscv (#1549)
  * cleanup: support CMake &gt;= 3.10 (#1544)
  * Werror all the time (#1546)
  * Add missing parentheses in ParseBenchMinTime() (#1545)
  * Removing warnings appearing with C++20 / CLang 15 (#1542)
  * update github actions to latest versions (#1541)
  * replace complexity with simplicity for faster libc++ setup (#1539)
  * Refactor links which include &quot;master&quot; and change it to &quot;main&quot; (#1540)
  * Allow specifying number of iterations via --benchmark_min_time. (#1525)
  * Support --benchmarks_filter in the compare.py 'benchmarks' command (#1486)
  * get rid of some deprecation warnings from tests
  * fix #1446 by removing the address operator (#1538)
  * Fixing issue with ARM64EC and MSVC (#1514)
  * Deprecate constant reference API to DoNotOptimize. (#1493)
  * remove best effort support for ubuntu 18.04 (#1537)
  * try disabling liquid for jekyll to fix curly braces (#1536)
  * Switch bindings implementation to `nanobind` (#1526)
  * Modernize setup.py, extend Python bindings CI (#1535)
  * Add quick instructions on how to enable sans checks (#1529)
  * Fix Clang-Tidy warnings readability-else-after-return (#1528)
  * Include the benchmark's family-name in State (#1511)
  * Fix typos found by codespell (#1519)
  * Fix Clang-Tidy warnings related to modernize-use-override (#1523)
  * Bug fix variable 'actual_iterations' set but not used (#1517)
  * add more docs to index
  * Add a `benchmark_deps.bzl` function to Google Benchmark (#1520)
  * Try removing attempt to set the C++ standard (#1464)
  * Fixes incorrect wide string conversion on win32 (#1516)
  * Return option benchmark_perf_counters to help output (#1508)
  * Removed deprecated function (#1506)
- Drop no longer needed gcc12-disable-Werror=maybe-uninitialized.patch
</comment>
    <requestid>1190505</requestid>
  </revision>
</revisionlist>
