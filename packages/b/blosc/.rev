<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>9d3d6f7e8a516a00fe4f380bc4e7682b</srcmd5>
    <version>1.4.1</version>
    <time>1406146026</time>
    <user>coolo</user>
    <comment>I plan to submit python-tables and python-h5py, which are the two main tools for accessing hdf5 data (one of the key general-purpose scientific data formats) in python.  

This is a dependency of python-tables.

I have fixed the issues from the previous submit requests.</comment>
    <requestid>241942</requestid>
  </revision>
  <revision rev="2" vrev="3">
    <srcmd5>9d3d6f7e8a516a00fe4f380bc4e7682b</srcmd5>
    <version>1.4.1</version>
    <time>1409300568</time>
    <user>adrianSuSE</user>
    <comment>Split 13.2 from Factory</comment>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>9342debbf9c40509debcd873b4c58e5a</srcmd5>
    <version>1.6.1</version>
    <time>1432072234</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>308020</requestid>
  </revision>
  <revision rev="4" vrev="2">
    <srcmd5>8d2319c9ba7f333018ca68d9de5009e4</srcmd5>
    <version>1.6.1</version>
    <time>1439191001</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>321430</requestid>
  </revision>
  <revision rev="5" vrev="3">
    <srcmd5>5f2bbc491172c9f3aecbde590c3c2cfb</srcmd5>
    <version>1.6.1</version>
    <time>1455701192</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>359581</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>127bc2e7b2ab02bb9bab2c9e06e39cf3</srcmd5>
    <version>1.7.1</version>
    <time>1458120918</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>369756</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>af217124919157a5cfd098c83554f945</srcmd5>
    <version>1.11.1</version>
    <time>1474976694</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>429851</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>1f4d880bc9cf20fa3631666a153d3952</srcmd5>
    <version>1.11.2</version>
    <time>1493819646</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>489137</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>6f9cd3a9ce350c33251237eabe9d9ecc</srcmd5>
    <version>1.12.1</version>
    <time>1514679221</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>560504</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>e6117477996fa13024e476da096f807d</srcmd5>
    <version>1.13.5</version>
    <time>1517932261</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.13.5:
  * Fixed a buffer overrun that happens when compressing small
    buffers and len(destination_buffer) &lt; (len(source_buffer) +
    BLOSC_MAX_OVERHEAD). Reported by Ivan Smirnov.
  * Tests work now when external compressors are located in
    non-system locations. Fixes #210. Thanks to Leif Walsh.
  * Fixed a bug uncovered by the python-blosc test suite: when a
    buffer is to be copied, then we should reserve space for the
    header, not block pointers.
  * Serious optimization of memory copy functions (see new
    blosc/fastcopy.c). This benefits the speed of all the codecs,
    but specially the BloscLZ one. As a result of the above, the
    BloscLZ codec received a new adjustment of knobs so that you
    should expect better compression ratios with it too.</comment>
    <requestid>573293</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>d501d290424ea0b179712522eeb7031a</srcmd5>
    <version>1.14.3</version>
    <time>1530866545</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>620724</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>717f2bf3d377533f32bdcd922c536d9d</srcmd5>
    <version>1.14.4</version>
    <time>1534940478</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.14.4:
  * Added a new DEACTIVATE_SSE2 option for cmake that is useful for
    disabling SSE2 when doing cross-compilation (see #236).
  * New check for detecting output buffers smaller than
    BLOSC_MAX_OVERHEAD.
  * The complib and version parameters for blosc_get_complib_info()
    can be safely set to NULL now. This allows to call this
    function even if the user is not interested in these parameters
    (so no need to reserve memory for them).
  * In some situations that a supposedly blosc chunk is passed to
    blosc_decompress(), one might end with an Arithmetic exception.
    This is probably due to the chunk not being an actual blosc
    chunk, and divisions by zero might occur. A protection has been
    added for this.</comment>
    <requestid>630788</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>cf154bb0b4f1be1cd4dd7a3fe437231f</srcmd5>
    <version>1.16.3</version>
    <time>1559727644</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.16.3:
  * Fix for building for clang with -march=haswell. See PR #262.
  * Fix all the known warnings for GCC/Clang. Still some work to do for MSVC in this front.
  * Due to some problems with several CI systems, the check for library symbols are deactivated now by default. If you want to enforce this check, use: cmake .. -DDEACTIVATE_SYMBOLS_CHECK=ON to re-activate it.
  * Correct the check for the compressed size when the buffer is memcpyed. This was a regression introduced in 1.16.0. Fixes #261.
  * Fixed a regression in 1.16.0 that prevented to compress empty buffers (see #260).
  * Now the functions that execute Blosc decompressions are safe by default for untrusted/possibly corrupted inputs.
  * The previous functions (with less safety) checks are still available with a '_unsafe' suffix. The complete list is:
  * Also, a new API function named blosc_cbuffer_validate(), for validating Blosc compressed data, has been added.
  * For details, see PR #258. Thanks to Jeremy Maitin-Shepard.
  * Fixed a bug in blosc_compress() that could lead to thread deadlock under some situations. See #251. Thanks to @wenjuno for the report and the fix.
  * Fix data race in shuffle.c host_implementation initialization. Fixes #253. Thanks to Jeremy Maitin-Shepard.
  * Add workaround for Visual Studio 2008's lack of a stdint.h file to blosclz.c.
  * Replaced //-comments with /**/-comments and other improvements for compatibility with quite old gcc compilers. See PR #243. Thanks to Andreas Martin.
  * Empty buffers can be compressed again (this was unadvertedly prevented while fixing #234). See #247. Thanks to Valentin Haenel.</comment>
    <requestid>707454</requestid>
  </revision>
  <revision rev="14" vrev="2">
    <srcmd5>e38caba6443922285cd76973dc49ad30</srcmd5>
    <version>1.16.3</version>
    <time>1574337531</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>749894</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>167fdf124cbe43109c33d44d14f39cbd</srcmd5>
    <version>1.17.1</version>
    <time>1581087241</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.17.1:
  * BloscLZ codec updated to 2.0.0.</comment>
    <requestid>770623</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>7f477d1434fa6976cb13e0fb6b30722f</srcmd5>
    <version>1.18.1</version>
    <time>1585667824</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.18.1:
  * Fixed the copy of the leftovers of a chunk when its size is not
    a multiple of the typesize.</comment>
    <requestid>790061</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>711c478444b6e0126943d3b4c10b7a00</srcmd5>
    <version>1.19.0</version>
    <time>1592939194</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.19.0:
  * The length of automatic blocksizes for fast codecs (lz4, blosclz) has been incremented quite a bit (up to 256 KB) for better compression ratios.
  * The performance in modern CPUs (with at least 256 KB in L2 cache) should be better too (for older CPUs the performance should stay roughly the same).
  * For small buffers that cannot be compressed (typically &lt; 128 bytes), blosc_compress() returns now a 0 (cannot compress) instead of a negative number (internal error). See #294.
  * blosclz codec updated to 2.1.0. Expect better compression ratios and performance in a wider variety of scenarios.
  * blosc_decompress_unsafe(), blosc_decompress_ctx_unsafe() and blosc_getitem_unsafe() have been removed because they are dangerous and after latest improvements, they should not be used in production.</comment>
    <requestid>816559</requestid>
  </revision>
  <revision rev="18" vrev="2">
    <srcmd5>40343378bd1a7961506ed6958e20ac34</srcmd5>
    <version>1.19.0</version>
    <time>1597221418</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>825907</requestid>
  </revision>
  <revision rev="19" vrev="3">
    <srcmd5>6019c878ad3693c622b1c0d9ff913423</srcmd5>
    <version>1.19.0</version>
    <time>1599210076</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>830250</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>bcbbfbbb25c2eeab527d9d135f760d74</srcmd5>
    <version>1.20.1</version>
    <time>1608550510</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.20.1 boo#1179914 CVE-2020-29367:
  * More saftey checks have been implemented so that potential flaws discovered by new fuzzers in OSS-Fuzzer are fixed now
  * BloscLZ updated to 2.3.0. Expect better compression ratios for faster codecs. For details, see our new blog post: https://blosc.org/posts/beast-release/
  * Fixed the _xgetbv() collision. Thanks to Michał Górny (@mgorny).</comment>
    <requestid>856832</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>2126fce418c23244c78b8256d2d14119</srcmd5>
    <version>1.21.0</version>
    <time>1619031583</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>886886</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>99f24137fbef901a05f83d92337e82e0</srcmd5>
    <version>1.21.1</version>
    <time>1634943096</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>926959</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>9aae35218e9b2b769414a0cffb46d4d3</srcmd5>
    <version>1.21.4</version>
    <time>1691414953</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1102639</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>6fa377dbfa2822ab62ea74efe4849523</srcmd5>
    <version>1.21.5</version>
    <time>1694019413</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1109002</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>b0048d4afab531c48efe0970b9d2890f</srcmd5>
    <version>1.21.6</version>
    <time>1725885923</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1199596</requestid>
  </revision>
</revisionlist>
