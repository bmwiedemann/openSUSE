-------------------------------------------------------------------
Mon Apr 14 05:40:35 UTC 2025 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Update to 0.23.1
  * Fix build failures due to missing location.hh 

-------------------------------------------------------------------
Thu Mar 27 07:06:04 UTC 2025 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Fix runqlen tool to work on 6.14 kernel (bsc#1239774)
  * add 0001-tools-runqlen.bt-rename-nr_running-to-nr_queued.patch
- Update to 0.23.0
  * Breaking Changes
    * Remove '-kk' command line opt, surface some BPF errors by
      default, and make '-k' surface probe read errors
  * Added
    * offsetof() now supports sub fields
      e.g. offsetof(struct Foo, bar.a.b);
    * Pointers may now be used in if conditions, tenary conditions and
      as operands in logical AND and OR expressions
    * len now also accepts ustack and kstack as arguments
    * Add ability to cast int to an enum
    * Added warning when strcontains() is used on strings that are too
      big and may cause verifier issues
    * Add support for LLVM 20
  * Changed
    * probe builtin is now represented as a string type
    * Change bpftrace help flag output from stderr to stdout
    * Change max_strlen default from 64 to 1024
    * Add feature check for castable map reads
    * Increase default values for max_bpf_progs and max_probes
    * Allow use of variables before they are assigned
  * Removed
    * Drop support for LLVM 14 and 15
  * Fixed
    * Fix json output for none type
    * Fix bug where strftime() %f specifier could be off by up to 1s
    * Fix pid, tid and ustack when running bpftrace in containers with
      PID namespacing
    * Do not generate functions for empty attach points
    * Fix ternary expression to accept all types
    * Fix feature detection for tracing program types
    * Fix strcontains() correctness bug where matches could be lost if
      both strings are non-literal
    * Fix str() bug where optional size parameter did not count
      towards NUL terminator
  * Tools
    * Fix dcsnoop.bt on newer kernels
- Update to 0.22.1
  * Fixed
    * Do not generate functions for empty attach points
  * Tools
    * Switch all bio* tools to tracepoints
    * Fix dcsnoop.bt on newer kernels
- Update to 0.22.0
  * Breaking Changes
    * Return uint32 instead of uint64 for pid and tid builtins
    * Remove multi-map delete functionality
    * Add lexical/block scoping for variables
    * Replace default map printing on SIGUSR1 with custom signal
      handling probes
  * Added
    * Bump max supported LLVM version to 19
      * drop 0002-Drop-support-for-LLVM-12-and-below.patch
      * drop 0003-cmake-Allow-any-LLVM-release-for-debug-builds.patch
      * drop 0004-Bump-max-LLVM-version-to-19-3433.patch
    * Add --dry-run CLI option
    * Enable avg map reads in kernel space (implicit casting)
    * Enable for-loops in multiple probes
    * For-loops: Allow sharing variables between the main probe and
      the loop's body
    * Parse C++ Class and Inheritance from Debug Info
    * Add an optional size parameter to path
    * Allow tuples to be used as map keys
    * Add has_key function for maps
    * Add ability to attach kprobes to inlined functions
    * Variable declarations with let
    * Support symbolizing enum values using %s specifier in printf()
    * Configuration option to suppress printing maps by default at
      program exit
    * Add symbol_source config to source uprobe locations from either
      DWARF or the Symbol Table
    * Introduce builtin to access percpu kernel data
  * Changed
    * Merge output into stdout when -lv
    * Stream output when printing maps
    * Only print kernel headers not found message if parsing fails
    * Add mandatory "stage" argument to the -d CLI option
    * Allow simultaneous use of -v and -d
    * Remove length limitations for the buf builtin function
    * Change delete API to accept a map and key as separate args
    * Symbolize enums when used in maps
  * Removed
    * Remove the -dd CLI option
    * Drop support for LLVM 12 and below
    * Remove ALLOW_UNSAFE_PROBE compiler flag
  * Fixed
    * Fix verifier error when array indexing through pointer
    * Fix segfault for multi-tracepoint probes
    * Fix verifier error from misaligned stack access when using
      strings as map keys
    * Fix min/max map functions
    * Fix stack mode for stack builtin
    * Fix lldb support in appimage builds
    * Fix parsing large unsigned int strings as positional params
    * Fix json formatting for strftime function
    * Fix BTF/DWARF parsing for structs contained in arrays
    * Fix integer comparisons and auto casting for scratch variables
    * Fix tuple resizing
    * Handle invalid BTF without crashing
    * Fix json formatting for hex values
    * Fix binary operations on integers always returning 64 bit values
    * Fix verifier error when comparing result of len()
    * Fix type back propagation for map keys
    * Fix crash by adding checks for bad var/map assignments
    * Fix field access and offsetof for strings that are builtin types
    * Fix crash when using castable per-cpu map types as map keys
    * Fix loop values with per-cpu aggregations
  * Docs
    * Remove mention of unsupported character literals
  * Tools
    * Fix bashreadline tool probe for dynamically linked readline and drop
      0001-tools-bashreadline-fix-probe-for-dynamically-linked-.patch
- Bump maximum support LLVM version to 20

-------------------------------------------------------------------
Thu Dec 26 12:57:46 UTC 2024 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Support building with LLVM 19
  * add 0002-Drop-support-for-LLVM-12-and-below.patch
  * add 0003-cmake-Allow-any-LLVM-release-for-debug-builds.patch
  * add 0004-Bump-max-LLVM-version-to-19-3433.patch
- Default to LLVM 19 in Factory and SLE15-SP7

-------------------------------------------------------------------
Wed Dec 18 07:43:13 UTC 2024 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Update to 0.21.3
  * Fix alignment issue for multi-key maps

-------------------------------------------------------------------

Mon Nov 11 11:33:27 UTC 2024 - Michal Suchanek <msuchanek@suse.de>

- Use clang for build in Factory.

-------------------------------------------------------------------
Fri Nov  1 14:56:49 UTC 2024 - Petr Vorel <pvorel@suse.cz>

- Backport fix for tools/bashreadline.bt needed for openQA testing
  (bsc#1232536)
  0001-tools-bashreadline-fix-probe-for-dynamically-linked-.patch

-------------------------------------------------------------------
Wed Oct 30 12:21:20 UTC 2024 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Switch to gcc for compilation (bsc#1219008)

-------------------------------------------------------------------
Thu Oct 24 15:51:11 UTC 2024 - Aleksa Sarai <asarai@suse.com>

- Update to 0.21.2.
  + Add lazy_symbolication config option.
  + Add ability to list all probes in a program.
  + Add ability to call print() with indexed maps to print single map values.
  + Add LLVM 18 support.
  + Add ability to call delete() with multiple arguments.
  + Add for-each loops for iterating over map elements.
  + Add optional systemd support.
  + Add ability to attach uprobes to inlined functions.
  + Enable count, sum, min, and max map reads in kernel space.
  + Add config option for handling missing probes.
  * Better error message for args in mixed probes.
  * Improve DWARF support, using liblldb instead of libdw.
  * Use new hash function to reduce collisions when aggregating on stack
    traces.
  * Disable func builtin for kretprobes and uretprobes when get_func_ip feature
    is not available.
  * Move error printing from debug to verbose mode.
  * Allow attaching to spin_lock functions with mitigations to prevent
    deadlocks.
  * Remove length limitations for strings coming out of str() and path().
  - Deprecate sarg builtin.

-------------------------------------------------------------------
Wed May 22 07:17:45 UTC 2024 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Update to 0.20.4
  * Drop the kernel headers unpack and caching feature

-------------------------------------------------------------------
Tue Mar 26 13:01:31 UTC 2024 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Update to 0.20.3 to fix build on pre-v5.14 kernel
- Drop fix-build-issue-when-using-UAPI-of-older-kernel.patch which is
  now included

-------------------------------------------------------------------
Tue Mar 19 05:31:53 UTC 2024 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Change LLVM version macro to the cleaner alternative that supports SLE as
  well, matching the one used in bcc package

-------------------------------------------------------------------
Fri Mar  8 06:42:00 UTC 2024 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Update to 0.20.2
  * Fix security hole checking unpacked kernel headers (CVE-2024-2313)
- Add fix-build-issue-when-using-UAPI-of-older-kernel.patch to
  fix build issue on pre-v6.0 kernel

-------------------------------------------------------------------
Wed Jan 31 07:31:21 UTC 2024 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Change LLVM version macro to the cleaner alternative suggested in
  SR#1134405
- Update to 0.20.1
  * Add log2 histograms with finer granularity
  * Add support for uprobe_multi link
  * Attach BTF to generated BPF programs
  * Add fentry/fexit aliases for kfunc/kretfunc
  * Support pid targeting for uprobe
  * New builtin for getting the number of map elements
  * New config block syntax and standardize config and env var names
  * Add a jiffies builtin for advanced usages
  * Fix silent truncation of 64-bit values in hist()
  * Fix retval for kretfunc/fexit
  * Add PPID field to execsnoop.bt

-------------------------------------------------------------------
Mon Jan 22 13:39:02 UTC 2024 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Switch to gcc for compilation (bsc#1219008)

-------------------------------------------------------------------
Wed Dec 20 22:44:04 UTC 2023 - Aaron Puchert <aaronpuchert@alice-dsl.net>

- No longer keep debug info: this is not needed since version 0.16
  because of gh#iovisor/bpftrace#2264. This reduces binary and
  package size significantly, and shouldn't regress on bsc#1178928.
- Enable (Thin)LTO via CMake.

-------------------------------------------------------------------
Thu Dec 14 11:21:31 UTC 2023 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Bump LLVM major version to 17
- Support DWARF parsing (boo#1217737)

-------------------------------------------------------------------
Mon Nov 13 09:17:21 UTC 2023 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Update to 0.19.1
  * Support all iterators
  * Support parsing bitfields from BTF/DWARF and printing entire
    structs
  * Support using BTF for tracepoints defined in modules
  * PowerPC
    * Enable watchpoint support
  * Add new function, offsetof, get the offset of the element in
    the struct
  * Add iter:task_vma iterators detection
  * Add trailer to truncated strings
  * Support func builtin for k(ret)func probes
  * Support casting int <-> int array
  * Support targeting all running processes for USDTs
  * Improve attaching to uprobes with size 0
  * Make args a structure (instead of a pointer)
  * Improve user symbol resolution
  * uprobes: make C++ symbol demangling explicit
  * uprobe: improve C++ probes listing
  * Fix segfaults in dwarf_parser
  * Fix resolving username for malformed /etc/passwd
  * Fix crashes when maps are concurrently modified
  * Fix alignment of byte arrays inside tuples
  * Allow '+' in attach point path
  * Improve listing and 'probe' builtin for several probe types
  * Allow probe builtin with aliased software/hardware probes
  * Support executing symlinked binaries with -c
  * Add access to CLOCK_MONOTONIC with nsecs(monotonic)
  * iter: Skip structures with '__safe_trusted' suffix
  * Improve detection of unknown typedefs in ClangParser
- Drop Vendor-BPF_F_KPROBE_MULTI_RETURN-definition.patch since it
  is included from v0.18.0

-------------------------------------------------------------------
Mon Mar  6 08:57:00 UTC 2023 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Add Vendor-BPF_F_KPROBE_MULTI_RETURN-definition.patch to fix build on
  Leap 15.5/SLES 15-SP5

-------------------------------------------------------------------
Thu Feb  9 07:35:30 UTC 2023 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Set USE_SYSTEM_BPF_BCC to ON so system libraries are used
- Update to 0.17.0
  + Support opaque pointer (boo#1207295)
  + Support 32-bit ARM systems
  + Support BTF in kernel modules
  + Add %rh option to print buffer as hex without \x
  + Add stdbool.h to built-in headers
  + Raise minimum versions for libbpf and bcc and vendor them for local builds
  + Support comparison for integer arrays
  + Drop Ubuntu 19.10 lockdown detection
  + Fix pointer/register loads on 32-bit architectures
  + Fix kprobe multi-attachment
  + Fix attaching to multiple USDT probes using the same wildcard
  + Fix pointer arithmetics codegen
  + Fix segfault for invalid AssignVarStatement visit
  + Better handling of missing function trace support files
  + Fix unroll ID reset
  + Support profile and interval probes in probe matcher
  + Fix BTF detection macro in tools/old/mdflush.bt

-------------------------------------------------------------------
Mon Jan  9 07:19:16 UTC 2023 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Bump LLVM major version to 15 in preparation for Leap 15.5/SLES 15-SP5

-------------------------------------------------------------------
Thu Sep  1 04:58:08 UTC 2022 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Drop Detect-new-BTF-api-btf_dump__new-btf_dump__new_v0_6_0.patch, which is
  incorporated since 0.16.0
- Update to 0.16.0
  + Add builtin: numaid
  + Add helper verifier error handling
  + Add builtin: pton
  + Add builtin: debugf
  + Add builtin: strerror
  + Move from BCC to libbpf (although BCC is still a dependency)
  + Add non-uprobe based BEGIN/END implementation
  + Helper errors (-k, -kk options) are now emitted to text or json output
  + kprobe offset verification is now optional, without requiring --unsafe
  + Disallow different lhist bounds in a single map
  + Serialize empty histogram as an empty JSON array
  + Handle enum values in tracepoint format defs
  + Fix compound assignments with non-unary expr
  + Fix invalid LLVM IR in join builtin
  + Fix lexer buffer size check
  + Fix invalid LLVM IR as detected by tests
  + Fix builds against libbfd(binutils) >=2.39
  + Fix access to ctx
  + Add sslsnoop and ssllatency tools
  + Add undump tool.
- Update to 0.15.0
  + Add option for unconditional hex output
  + Add builtin function: cgroup_path
  + Limit number of generated BPF programs
  + Support the octal format specifier (%o) in printf
  + Improve include paths resolution
  + Automatic type resolution from DWARF
  + Add builtin function: bswap
  + Print all maps to stdout on SIGUSR1
  + Use auto-resolution of library paths for tools
  + Improve handling empty attach points
  + Fix precedence of multiplicative operations
  + Fix probe matching for uprobes with absolute address
  + Fix tools to work on new kernel versions
  + Fix uprobe target resolution
  + Fix using wildcards in kfunc
  + Improve handling of format strings
  + Fix codegen for buf
  + Update biosnoop.bt for kernel >=5.17

-------------------------------------------------------------------
Tue Jun 21 08:36:57 UTC 2022 - pgajdos@suse.com

- do not link against the shared BFD libraries [bsc#1200630]

-------------------------------------------------------------------
Fri Apr 22 07:35:09 UTC 2022 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Update to 0.14.1
  + Fix precedence of multiplicative operations
- Add Detect-new-BTF-api-btf_dump__new-btf_dump__new_v0_6_0.patch to fix
  compilation error when building with libbpf v0.6

-------------------------------------------------------------------
Tue Oct 26 07:46:27 UTC 2021 - Stephan Kulow <coolo@suse.com>

- Update to 0.14.0
  + Support microsecond timestamps in stftime()
  + Add _ as integer literal digit separator
  + Support for C style integer suffix in parser
  + Add C like pointer arithmetic
  + Automatic resolution of library paths for uprobes
  + Support positional parameters as integer literals
  + Access to uprobe arguments by name
  + Prevent LLVM from unrolling loops
  + Fix memory leaks in struct types
  + Fix strncmp() when N is bigger than on-stack buffer
  + Fix strncmp() to check for NUL terminator
  + Fix unroll() with async calls
  + Fix string comparison codegen
  + Fix verifier error when accessing same tracepoint field twice
  + Fix reading too many bits for <64 bit kfunc args
  + Fix misaligned stack access for map keys
  + Write new man page for bpftrace(8)

-------------------------------------------------------------------
Thu Oct 14 23:54:40 UTC 2021 - Aleksa Sarai <asarai@suse.com>

- Ensure we always use a fixed LLVM major version to match upstream (12 at the
  moment). On Leap we use the latest LLVM (9 at the moment) because 12 is not
  available.

-------------------------------------------------------------------
Mon Oct  4 04:11:02 UTC 2021 - Shung-Hsi Yu <shung-hsi.yu@suse.com>

- Update to bpftrace 0.13.0.
    + support for LLVM 12
    + warn if attaching a kprobe to a non-traceable function
    + support for -k[k] and elapsed in iter probes
    + improve JSON printing (nested structs)
    + return 1 from tracepoint probes
    + preserve original order of struct types
    - disallow accessing common tracepoint fields
    - forbid casting from/to struct types

-------------------------------------------------------------------
Fri Apr 16 17:42:10 UTC 2021 - Aleksa Sarai <asarai@suse.com>

- Update to bpftrace 0.12.1.
  * Incorrect --info output bug fix release

-------------------------------------------------------------------
Sat Apr  3 04:19:14 UTC 2021 - Aleksa Sarai <asarai@suse.com>

- Update to bpftrace 0.12.0.
  + add path, macaddr, strftime builtin
  + allow wildcards for tracepoint categories
  + add wildcard support for kfunc probe types
  + support scientific notation for integer literals
  + list retprobes
  + resolve unknown typedefs using BTF and give a hint when a type cannot be found
  + support multi-matched globbed targets for uprobe and ustd probes
  + positional parameters: support numbers as strings and params as string literals
  + support for tracepoint __data_loc fields
  + set addrspace info for various builtins
  + support watchpoint for kernel space address
  + support for pointer to pointer
  + support for uprobe refcounts
  + support for usdt arguments utilising the index register and scale
  + printing structures
  - disable str($# + 1)
  * array improvements (support assignment to variables and usage as a map key)
- Remove upstreamed patches:
  - bpftrace-bsc1180670-sync-man-page-and-help.patch

-------------------------------------------------------------------
Fri Jan  8 02:54:33 UTC 2021 - Gary Ching-Pang Lin <glin@suse.com>

- Add bpftrace-bsc1180670-sync-man-page-and-help.patch to sync
  man page and help (bsc1180670)

-------------------------------------------------------------------
Mon Nov 23 06:25:32 UTC 2020 - Aleksa Sarai <asarai@suse.com>

- Do not strip bpftrace binaries -- bpftrace depends on debuginfos for
  /proc/self/exe in order to implement the BEGIN trigger. bsc#1178928

-------------------------------------------------------------------
Sat Nov 14 23:44:23 UTC 2020 - Aleksa Sarai <asarai@suse.com>

- Update to bpftrace 0.11.4.
    * Alpine build bug fix release
	* bcc 0.17 support release
- Remove upstreamed patches:
  - detect-7-arg-bpf_attach_uprobe.patch

-------------------------------------------------------------------
Mon Nov  9 01:17:21 UTC 2020 - Marcus Rueckert <mrueckert@suse.de>

- added detect-7-arg-bpf_attach_uprobe.patch:
  fix build with new bpf_attach_uprobe in TW

-------------------------------------------------------------------
Sat Oct 31 06:05:03 UTC 2020 - Aleksa Sarai <asarai@suse.com>

- Update to bpftrace 0.11.2.
  * Support for LLVM 11.

-------------------------------------------------------------------
Wed Jul 15 22:26:55 UTC 2020 - Aleksa Sarai <asarai@suse.com>

- Update to bpftrace 0.11.0.

-------------------------------------------------------------------
Tue Apr 14 06:57:29 UTC 2020 - Ismail Dönmez <idonmez@suse.com>

- Update to version 0.10.0
  * Support for LLVM 9 and LLVM 10 has been added.
  * See the complete changelog at https://github.com/iovisor/bpftrace/releases/tag/v0.10.0
- Drop upstreamed patches:
  - boo1162312-cmake-use-_LIBRARIES-when-testing-for-libbfd-version.patch
  - install-man-dir.patch

-------------------------------------------------------------------
Wed Feb  5 02:21:50 UTC 2020 - Aleksa Sarai <asarai@suse.com>

- Update to bpftrace 0.9.4.
  * New calls: signal, override, strncmp.
  * Support for attaching to `kprobes` at an offset.
  * Support for struct bitfields.
  See the upstream changelog for more details:
    <https://github.com/iovisor/bpftrace/releases/tag/v0.9.4>

-------------------------------------------------------------------
Fri Jan 31 09:19:26 UTC 2020 - Aleksa Sarai <asarai@suse.com>

- Fix builds on Leap 15.1. This requires quite a bit of trickery related to
  binutils (see boo#1162312), but it's nothing too hard.
- Added patch to workaround boo#1162312.
  + boo1162312-cmake-use-_LIBRARIES-when-testing-for-libbfd-version.patch

-------------------------------------------------------------------
Thu Nov 21 20:49:17 UTC 2019 - Luigi Baldoni <aloisio@gmx.com>

- Update to version 0.9.3
  * Allow attaching to uprobes at an offset
  * BTF support
  * integer casts
  * integer pointer casts

-------------------------------------------------------------------
Tue Nov 19 06:41:39 UTC 2019 - Gary Ching-Pang Lin <glin@suse.com>

- Update bpftrace to v0.9.2
  + New environment variables (BPFTRACE_NO_USER_SYMBOLS,
    BPFTRACE_LOG_SIZE)
  + New probe type: memory watchpoint
  + Support for JSON output
- Exclude armv7 and i586 since bcc doesn't support USDT for these
  two architectures

-------------------------------------------------------------------
Tue Aug 20 14:05:31 UTC 2019 - Martin Pluskal <mpluskal@suse.com>

- Cleanup using spec-cleaner

-------------------------------------------------------------------
Tue Aug 20 08:50:27 UTC 2019 - Antonio Ojea <aojeagarcia@suse.com>

- Add readline missing dependency

-------------------------------------------------------------------
Sat Jul 13 21:54:11 UTC 2019 - Aaron Puchert <aaronpuchert@alice-dsl.net>

- Use %cmake for building, don't set flags manually.
- Use %cmake_install instead of installing manually.
- install-man-dir.patch: Fix installation directory for man pages.
- Fix executable bit for tools.
- Fix shebangs in %prep, use -exec instead of piping to xargs.
- Disable LTO, because -flto=<number> isn't supported by Clang.
  Also LTO is perhaps not so important here.

-------------------------------------------------------------------
Wed Jun 26 01:49:06 UTC 2019 - Aleksa Sarai <asarai@suse.com>

- Update bpftrace to v0.9.1. Upstream changelog:
  * Additions:
    + Introduce compound assignment operators (+= and friends).
    + Add support for arrays and IPv6 for the ntop builtin function.
    + Add basic support to enums (treat them as constants).
    + Add macro definition support.
    + Add support for arrays and IPv6 for the ntop builtin function.
    + Allow comparison of two string variables.
    + Add pre and post behavior to ++ and -- operators.
  * Breaking changes:
    - Ban kprobes that cause CPU deadlocks.
    + Add unsafe-mode and make default execution mode safe-mode.

-------------------------------------------------------------------
Wed Apr 24 14:58:42 UTC 2019 - Aleksa Sarai <asarai@suse.com>

- Update bpftrace to v0.9.
- Deprecated: sym() and stack() are deprecated.
              Use ksym() and kstack() instead.

-------------------------------------------------------------------
Tue Jan 15 09:56:40 UTC 2019 - Aleksa Sarai <asarai@suse.com>

- Update bpftrace import to 0.0.0 (again).
- Remove patch for bcc-devel now that there is an upstream fix for it
  (https://github.com/iovisor/bpftrace/pull/327). boo#1117223
  - 0001-cmake-fix-builds-within-OBS.patch

-------------------------------------------------------------------
Sun Nov 25 01:11:33 UTC 2018 - Aleksa Sarai <asarai@suse.com>

- Switch to using bcc-devel from Base:System. This required a few backports
  from upstream and some other various changes. boo#1117223
  https://github.com/iovisor/bpftrace/pull/227
  * 0001-cmake-fix-builds-within-OBS.patch

-------------------------------------------------------------------
Tue Oct 30 18:51:01 UTC 2018 - Aleksa Sarai <asarai@suse.com>

- Initial bpftrace 0.0.0 import. Upstream doesn't really have versioning, so
  now we just use _service and pull from master. BCC required a bit of
  vendoring work, though hopefully we can switch to using bcc-tool-devel.
  boo#1117223
