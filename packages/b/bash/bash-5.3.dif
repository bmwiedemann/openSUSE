---
 Makefile.in        |    2 +-
 config-top.h       |   16 ++++++++++------
 doc/Makefile.in    |    2 +-
 doc/bash.1         |    7 +++++++
 general.h          |    3 +++
 parse.y            |    6 +++++-
 shell.c            |    6 +++++-
 support/man2html.c |    1 +
 support/rlvers.sh  |    6 +++---
 support/shobj-conf |    5 +++--
 tests/glob.tests   |    4 ++--
 tests/run-intl     |    2 +-
 tests/run-read     |    2 +-
 13 files changed, 43 insertions(+), 19 deletions(-)

--- Makefile.in
+++ Makefile.in	2025-01-31 14:34:48.840202425 +0000
@@ -500,7 +500,7 @@ SOURCES	 = $(CSOURCES) $(HSOURCES) $(BUI
 # headers in top-level source directory that get installed by install-headers
 INSTALLED_HEADERS = shell.h bashjmp.h command.h syntax.h general.h error.h \
 		    variables.h array.h assoc.h arrayfunc.h quit.h dispose_cmd.h \
-		    make_cmd.h subst.h sig.h externs.h builtins.h \
+		    make_cmd.h subst.h sig.h externs.h builtins.h bashline.h \
 		    bashtypes.h xmalloc.h config-top.h config-bot.h \
 		    bashintl.h bashansi.h bashjmp.h alias.h hashlib.h \
 		    conftypes.h unwind_prot.h jobs.h siglist.h \
--- config-top.h
+++ config-top.h	2025-01-31 14:35:51.119054831 +0000
@@ -55,10 +55,14 @@
    due to EPIPE. */
 /* #define DONT_REPORT_BROKEN_PIPE_WRITE_ERRORS */
 
+#ifndef _PATH_DEFPATH
+# include <paths.h>
+#endif
+
 /* The default value of the PATH variable. */
 #ifndef DEFAULT_PATH_VALUE
 #define DEFAULT_PATH_VALUE \
-  "/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:."
+  "/usr/local/bin:" _PATH_DEFPATH ":."
 #endif
 
 /* If you want to unconditionally set a value for PATH in every restricted
@@ -69,7 +73,7 @@
    the Posix.2 confstr () function, or CS_PATH define are not present. */
 #ifndef STANDARD_UTILS_PATH
 #define STANDARD_UTILS_PATH \
-  "/bin:/usr/bin:/sbin:/usr/sbin"
+  _PATH_STDPATH
 #endif
 
 /* The default path for enable -f */
@@ -92,20 +96,20 @@
 #define DEFAULT_BASHRC "~/.bashrc"
 
 /* System-wide .bashrc file for interactive shells. */
-/* #define SYS_BASHRC "/etc/bash.bashrc" */
+#define SYS_BASHRC "/etc/bash.bashrc"
 
 /* System-wide .bash_logout for login shells. */
-/* #define SYS_BASH_LOGOUT "/etc/bash.bash_logout" */
+#define SYS_BASH_LOGOUT "/etc/bash.bash_logout"
 
 /* Define this to make non-interactive shells begun with argv[0][0] == '-'
    run the startup files when not in posix mode. */
-/* #define NON_INTERACTIVE_LOGIN_SHELLS */
+#define NON_INTERACTIVE_LOGIN_SHELLS
 
 /* Define this if you want bash to try to check whether it's being run by
    sshd and source the .bashrc if so (like the rshd behavior).  This checks
    for the presence of SSH_CLIENT or SSH2_CLIENT in the initial environment,
    which can be fooled under certain not-uncommon circumstances. */
-/* #define SSH_SOURCE_BASHRC */
+#define SSH_SOURCE_BASHRC
 
 /* Define if you want the case-toggling operators (~[~]) and the
    `capcase' variable attribute (declare -c). */
--- doc/Makefile.in
+++ doc/Makefile.in	2025-01-31 14:36:39.222168456 +0000
@@ -153,7 +153,7 @@ BASHREF_FILES = $(srcdir)/bashref.texi $
 #	$(RM) $@
 #	-${TEXI2PDF} $<
 
-all: info dvi text html pdf $(MAN2HTML)
+all: info html $(MAN2HTML)
 nodvi: ps info text html
 everything: all ps
 
--- doc/bash.1
+++ doc/bash.1	2025-01-31 14:39:44.682751126 +0000
@@ -2800,6 +2800,10 @@ startup file, overriding the default of
 .SM
 .B READLINE
 below).
+If that variable is unset, readline will read both
+.FN /etc/inputrc
+and
+.FN \*~/.inputrc .
 .TP
 .B INSIDE_EMACS
 If this variable appears in the environment when the shell starts,
@@ -13443,6 +13447,9 @@ command history
 .TP
 .FN \*~/.inputrc
 Individual \fIreadline\fP initialization file
+.TP
+.FN /etc/inputrc
+System \fBreadline\fP initialization file
 .PD
 .SH AUTHORS
 Brian Fox, Free Software Foundation
--- general.h
+++ general.h	2025-01-31 14:34:48.844202351 +0000
@@ -21,10 +21,13 @@
 #if !defined (_GENERAL_H_)
 #define _GENERAL_H_
 
+#include <time.h>
+#include <sys/types.h>
 #include "stdc.h"
 
 #include "bashtypes.h"
 #include "chartypes.h"
+#include "bashline.h"
 
 #if defined (HAVE_SYS_RESOURCE_H) && defined (RLIMTYPE)
 #  if defined (HAVE_SYS_TIME_H)
--- parse.y
+++ parse.y	2025-01-31 14:40:55.673443061 +0000
@@ -405,6 +405,10 @@ static FILE *yyerrstream;
 /* Special; never created by yylex; only set by parse_matched_pair/parse_comsub/xparse_dolparen */
 %token DOLBRACE
 
+/* Declare token YYEOF as older bison version fails
+   with not defined as a token and has no rules */
+%token YYEOF
+
 /* The types that the various syntactical units return. */
 
 %type <command> inputunit command pipeline pipeline_command
@@ -1649,7 +1653,7 @@ input_file_descriptor (void)
 
 #if defined (READLINE)
 char *current_readline_prompt = (char *)NULL;
-char *current_readline_line = (char *)NULL;
+unsigned char *current_readline_line = (unsigned char *)NULL;
 int current_readline_line_index = 0;
 
 static int
--- shell.c
+++ shell.c	2025-01-31 14:42:34.851615639 +0000
@@ -46,6 +46,7 @@
 #  include <sys/mman.h>
 #  include <sys/types.h>
 #  include <unistd.h>
+#  include <grp.h>
 #endif
 
 #include "bashintl.h"
@@ -512,7 +513,7 @@ main (int argc, char **argv, char **env)
     read_but_dont_execute = 1;
 #endif
 
-  if (running_setuid && privileged_mode == 0)
+  if (running_setuid && privileged_mode == 0 /* && act_like_sh == 0 */)
     disable_priv_mode ();
 
   /* Need to get the argument to a -c option processed in the
@@ -1343,6 +1344,9 @@ disable_priv_mode (void)
   int e, r;
 
   r = 0;
+  if (!current_user.user_name)
+    get_current_user_info();
+  r = initgroups (current_user.user_name, current_user.gid);
 #if HAVE_SETRESUID
   if (current_user.euid != current_user.uid || current_user.saveuid != current_user.uid)
     r = setresuid (current_user.uid, current_user.uid, current_user.uid) ;
--- support/man2html.c
+++ support/man2html.c	2025-01-31 14:34:48.848202278 +0000
@@ -78,6 +78,7 @@
 #include <time.h>
 #include <sys/time.h>
 #include <errno.h>
+#include <unistd.h>
 
 #define NULL_TERMINATED(n) ((n) + 1)
 
--- support/rlvers.sh
+++ support/rlvers.sh	2025-01-31 14:34:48.848202278 +0000
@@ -27,10 +27,10 @@ TDIR=$TMPDIR/rlvers
 
 # defaults
 CC=cc
-RL_LIBDIR=/usr/local/lib
-RL_INCDIR=/usr/local/include
+RL_LIBDIR=/lib
+RL_INCDIR=/usr/include
 
-TERMCAP_LIB="-ltermcap"
+echo 'int main () { return 0; }' | gcc -ltinfo -o /dev/null -xc - > /dev/null 2>&1 && TERMCAP_LIB="-ltinfo" || TERMCAP_LIB="-lncurses"
 
 # cannot rely on the presence of getopts
 while [ $# -gt 0 ]; do
--- support/shobj-conf
+++ support/shobj-conf	2025-01-31 14:34:48.848202278 +0000
@@ -126,10 +126,11 @@ sunos5*|solaris2*)
 linux*-*|gnu*-*|k*bsd*-gnu-*|midnightbsd*|freebsd*|dragonfly*)
 	SHOBJ_CFLAGS=-fPIC
 	SHOBJ_LD='${CC}'
-	SHOBJ_LDFLAGS='-shared -Wl,-soname,$@'
+	SHOBJ_LDFLAGS='-shared'
 
-	SHLIB_XLDFLAGS='-Wl,-rpath,$(libdir) -Wl,-soname,`basename $@ $(SHLIB_MINOR)`'
+	SHLIB_XLDFLAGS='-Wl,-rpath-link,$(libdir) -Wl,-soname,`basename $@ $(SHLIB_MINOR)`'
 	SHLIB_LIBVERSION='$(SHLIB_LIBSUFF).$(SHLIB_MAJOR)$(SHLIB_MINOR)'
+	echo 'int main () { return 0; }' | gcc -ltinfo -o /dev/null -xc - > /dev/null 2>&1 && SHLIB_LIBS=-ltinfo || SHLIB_LIBS=-lncurses
 	;;
 
 # Darwin/MacOS X
--- tests/glob.tests
+++ tests/glob.tests	2025-01-31 14:34:48.848202278 +0000
@@ -35,8 +35,8 @@ ${THIS_SH} ./glob11.sub
 
 MYDIR=$PWD	# save where we are
 
-TESTDIR=$TMPDIR/glob-test-$$
-mkdir $TESTDIR
+TESTDIR=${TMPDIR:=/tmp}/glob-test-$$
+mkdir -p $TESTDIR
 builtin cd $TESTDIR || { echo $0: cannot cd to $TESTDIR >&2 ; exit 1; }
 rm -rf *
 
--- tests/run-intl
+++ tests/run-intl	2025-01-31 14:34:48.848202278 +0000
@@ -2,4 +2,4 @@
 ( diff -a ./intl.right ./intl.right >/dev/null 2>&1 ) && AFLAG=-a
 
 ${THIS_SH} ./intl.tests > ${BASH_TSTOUT}
-diff $AFLAG ${BASH_TSTOUT} intl.right && rm -f ${BASH_TSTOUT}
+diff -w $AFLAG ${BASH_TSTOUT} intl.right && rm -f ${BASH_TSTOUT}
--- tests/run-read
+++ tests/run-read	2025-01-31 14:34:48.848202278 +0000
@@ -1,4 +1,4 @@
 echo "warning: please do not consider output differing only in the amount of" >&2
 echo "warning: white space to be an error." >&2
 ${THIS_SH} ./read.tests > ${BASH_TSTOUT} 2>&1
-diff ${BASH_TSTOUT} read.right && rm -f ${BASH_TSTOUT}
+diff -w ${BASH_TSTOUT} read.right && rm -f ${BASH_TSTOUT}
--- configure
+++ configure	2025-07-22 11:44:32.379750615 +0000
@@ -12749,7 +12749,6 @@ else case e in #(
            # defined sleep(n) _sleep ((n) * 1000)
            #endif
            #include <fcntl.h>
-           GL_MDA_DEFINES
            #ifndef O_NOATIME
             #define O_NOATIME 0
            #endif
--- m4/fcntl-o.m4
+++ m4/fcntl-o.m4	2025-07-22 11:54:23.317130679 +0000
@@ -32,7 +32,6 @@ AC_DEFUN([gl_FCNTL_O_FLAGS],
            # defined sleep(n) _sleep ((n) * 1000)
            #endif
            #include <fcntl.h>
-           ]GL_MDA_DEFINES[
            #ifndef O_NOATIME
             #define O_NOATIME 0
            #endif
