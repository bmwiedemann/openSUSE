-------------------------------------------------------------------
Tue Jul  9 12:20:21 UTC 2024 - Frantisek Simorda <frantisek.simorda@suse.com>

- Update to 2.0.0
Major new features
   * The beets importer UI received a major overhaul. Several new configuration options are available for customizing layout and colors: ui_options.    

New features
   * edit: Prefer editor from VISUAL environment variable over EDITOR.
   * config: Prefer editor from VISUAL environment variable over EDITOR.
   * listenbrainz: Add initial support for importing history and playlists from ListenBrainz  
   * mbsubmit: add new prompt choices helping further to submit unmatched tracks to MusicBrainz faster.
   * spotify: We now fetch track's ISRC, EAN, and UPC identifiers from Spotify when using the spotifysync command.  
   * discogs: supply a value for the cover_art_url attribute, for use by fetchart.  
   * update: added `-e` flag for excluding fields from being updated.
   * deezer: Import rank and other attributes from Deezer during import and add a function to update the rank of existing items.  
   * resolve transl-tracklisting relations for pseudo releases and merge data with the actual release  
   * Fetchart: Use the right field (spotify_album_id) to obtain the Spotify album id  
   * Prevent reimporting album if it is permanently removed from Spotify  
   * Added option to use cover_art_url as an album art source in the fetchart plugin.  
   * fetchart: The plugin can now get album art from spotify.
   * Added option to specify a URL in the embedart plugin.  
   * list singleton:true queries have been made faster
   * list singleton:1 and singleton:0 can now alternatively be used in queries, same as comp
   * --from-logfile now parses log files using a UTF-8 encoding in beets/beets/ui/commands.py.  
   * bareasc lookups have been made faster
   * list lookups using the pattern operator :: have been made faster
   * Added additional error handling for spotify plugin.  
   * We now import the remixer field from Musicbrainz into the library.  
   * mbsubmit: Added a new mbsubmit command to print track information to be submitted to MusicBrainz after initial import.  
   * Added spotify_updated field to track when the information was last updated.
   * We now import and tag the album information when importing singletons using Spotify source.  
   * spotify: The plugin now provides an additional command spotifysync that allows getting track popularity and audio features information from Spotify.  
   * spotify: The plugin now records Spotify-specific IDs in the spotify_album_id, spotify_artist_id, and spotify_track_id fields.  
   * Create the parental directories for database if they do not exist.    
   * musicbrainz-config: a new musicbrainz.enabled option allows disabling the MusicBrainz metadata source during the autotagging process
   * kodiupdate: Now supports multiple kodi instances  
   * Add the item fields bitrate_mode, encoder_info and encoder_settings.
   * Add query prefixes = and ~.
   * A new configuration option, duplicate_keys, lets you change which fields the beets importer uses to identify duplicates.    
   * Add exact match <exact-match> queries, using the prefixes = and =~.  
   * discogs: Permit appending style to genre.
   * discogs: Implement item_candidates for matching singletons.
   * discogs: Check for compliant discogs_client module.
   * convert: Add a new auto_keep option that automatically converts files but keeps the originals in the library.    
   * Added a -P (or --disable-plugins) flag to specify one/multiple plugin(s) to be disabled at startup.
   * import-options: Add support for re-running the importer on paths in log files that were created with the -l (or --logfile) argument.    
   * Preserve mtimes from archives  
   * Add %sunique{} <sunique> template to disambiguate between singletons.  
   * Add a new import.ignored_alias_types config option to allow for specific alias types to be skipped over when importing items/albums.
   * smartplaylist: A new --pretend option lets the user see what a new or changed smart playlist saved in the config is actually returning.  
   * fromfilename: Add debug log messages that inform when the plugin replaced bad (missing) artist, title or tracknumber metadata.    
   * musicbrainz-config: MusicBrainz release pages often link to related metadata sources like Discogs, Bandcamp, Spotify, Deezer and Beatport. When enabled via the musicbrainz.external_ids options, release ID's will be extracted from those URL's and imported to the library.  
   * convert: Add support for generating m3u8 playlists together with converted media files.  
   * Fetch the release_group_title field from MusicBrainz.  4809
   * discogs: Add support for applying album information on singleton imports.  4716
   * smartplaylist: During explicit runs of the splupdate command, the log message "Creating playlist ..."" is now displayed instead of hidden in the debug log, which states some form of progress through the UI.  
   * subsonicupdate: Updates are now triggered whenever either the beets database is changed or a smart playlist is created/updated.  4862
   * importfeeds: Add a new output format allowing to save a playlist once per import session.  4863
   * Make ArtResizer work with PIL/pillow 10.0.0 removals.  
   * A new configuration option, duplicate_verbose_prompt, allows changing how duplicates are presented during import.  4866
   * embyupdate: Add handling for private users by adding userid config option.  
   * substitute: Add the new plugin substitute as an alternative to the rewrite plugin. The main difference between them being that rewrite modifies files' metadata and substitute does not.  
   * Add support for artists and albumartists multi-valued tags.  
   * autobpm: Add the autobpm plugin which uses Librosa to calculate the BPM of the audio.  
   * fetchart: Fix the error with CoverArtArchive where the maxwidth option would not be used to download a pre-sized thumbnail for release groups, as is already done with releases.
   * fetchart: Fix the error with CoverArtArchive where no cover would be found when the maxwidth option matches a pre-sized thumbnail size, but no thumbnail is provided by CAA. We now fallback to the raw image.
   * advancedrewrite: Add an advanced version of the rewrite plugin which allows to replace fields based on a given library query.
   * lyrics: Add LRCLIB as a new lyrics provider and a new synced option to prefer synced lyrics over plain lyrics.
   * import: Expose import.quiet_fallback as CLI option.
   * import: Expose import.incremental_skip_later as CLI option.
   * smartplaylist: Expose config options as CLI options.
   * smartplaylist: Add new option smartplaylist.output.
   * smartplaylist: Add new option smartplaylist.uri_format.
   * Sorted the default configuration file into categories.  
   * convert: Don't treat WAVE (.wav) files as lossy anymore when using the never_convert_lossy_files option. They will get transcoded like the other lossless formats.
   * Add support for barcode field.  
   * smartplaylist: Add new config option smartplaylist.fields.
   
Bug fixes
   * lastimport: Improve error handling in the process_tracks function and enable it to be used with other plugins.
   * spotify: Improve handling of ConnectionError.
   * deezer: Improve Deezer plugin error handling and set requests timeout to 10 seconds.  
   * spotify: Add bad gateway (502) error handling.
   * spotify: Add a limit of 3 retries, instead of retrying endlessly when the API is not available.
   * Fix a crash when the Spotify API timeouts or does not return a Retry-After interval.  
   * scrub: Fixed the import behavior where scrubbed database tags were restored to newly imported tracks with config settings scrub.auto: yes and import.write: no.  
   * deezer: Fixed the error where Deezer plugin would crash if non-Deezer id is passed during import.
   * fetchart: Fix fetching from Cover Art Archive when the maxwidth option is set to one of the supported Cover Art Archive widths.
   * discogs: Fix "Discogs plugin replacing Feat. or Ft. with a comma" by fixing an oversight that removed a functionality from the code base when the MetadataSourcePlugin abstract class was introduced in PR's #3335 and #3371.  
   * convert: Set default max_bitrate value to None to avoid transcoding when this parameter is not set.  
   * replaygain: Avoid a crash when errors occur in the analysis backend.  
   * We now use Python's defaults for command-line argument encoding, which should reduce the chance for errors and "file not found" failures when invoking other command-line tools, especially on Windows.  
   * We now respect the Spotify API's rate limiting, which avoids crashing when the API reports code 429 (too many requests).  
   * Fix implicit paths OR queries (e.g. beet list /path/ , /other-path/) which have previously been returning the entire library.  
   * The Discogs release ID is now populated correctly to the discogs_albumid field again (it was no longer working after Discogs changed their release URL format).  
   * The autotagger no longer considers all matches without a MusicBrainz ID as duplicates of each other.  
   * convert: Resize album art when embedding  
   * deezer: Fix auto tagger pagination issues (fetch beyond the first 25 tracks of a release).
   * spotify: Fix auto tagger pagination issues (fetch beyond the first 50 tracks of a release).
   * lyrics: Fix Genius search by using query params instead of body.
   * unimported: The new ignore_subdirectories configuration option added in 1.6.0 now has a default value if it hasn't been set.
   * deezer: Tolerate missing fields when searching for singleton tracks.  
   * replaygain: The type of the internal r128_track_gain and r128_album_gain fields was changed from integer to float to fix loss of precision due to truncation.  
   * Fix a regression in the previous release that caused a TypeError when moving files across filesystems.  
   * convert: Deleting the original files during conversion no longer logs output when the quiet flag is enabled.
   * web: Fix handling of "query" requests. Previously queries consisting of more than one token (separated by a slash) always returned an empty result.
   * discogs: Skip Discogs query on insufficiently tagged files (artist and album tags missing) to prevent arbitrary candidate results.  
   * lyrics: Fixed issues with the Tekstowo.pl and Genius backends where some non-lyrics content got included in the lyrics
   * limit: Better header formatting to improve index
   * replaygain: Correctly handle the overwrite config option, which forces recomputing ReplayGain values on import even for tracks that already have the tags.
   * embedart: Fix a crash when using recent versions of ImageMagick and the compare_threshold option.  
   * lyrics: Fixed issue with Genius header being included in lyrics, added test case of up-to-date Genius html
   * importadded: Fix a bug with recently added reflink import option that causes a crash when ImportAdded plugin enabled.  
   * convert: Fix a bug with the wma format alias.
   * web: Fix get file from item.
   * lastgenre: Fix a duplicated entry for trip hop in the default genre list.  
   * lyrics: Fixed issue with Tekstowo backend not actually checking if the found song matches.  
   * embedart: Add support for ImageMagick 7.1.1-12  
   * fromfilename: Fix failed detection of <track> <title> filename patterns.    
   * Fix issue where deletion of flexible fields on an album doesn't cascade to items  
   * Fix issue where beet write continuously retags the albumtypes metadata field in files. Additionally broken data could have been added to the library when the tag was read from file back into the library using beet update. It is required for all users to check if such broken data is present in the library. Following the instructions described here, a sanity check and potential fix is easily possible.  
   * Fix updating "data_source" on re-imports and improve logging when flexible attributes are being re-imported.  
   * fetchart: Correctly select the cover art from fanart.tv with the highest number of likes
   * lyrics: Fix a crash with the Google backend when processing some web pages.  
   * Modifying flexible attributes of albums now cascade to the individual album tracks, similar to how fixed album attributes have been cascading to tracks already. A new option --noinherit/-I to modify <modify-cmd> allows changing this behaviour.  
   * Fix bug where an interrupted import process poisons the database, causing a null path that can't be removed.  
   * discogs: Fix bug where empty artist and title fields would return None instead of an empty list.  
   * Fix bug regarding displaying tracks that have been changed not being displayed unless the detail configuration is enabled.
   * web: Fix range request support, allowing to play large audio/ opus files using e.g. a browser/firefox or gstreamer/mopidy directly.
   * Fix bug where zsh completion script made assumptions about the specific variant of awk installed and required specific settings for sqlite3 and caching in zsh.  
   * Remove unused functions  
   * Fix bug where all media types are reported as the first media type when importing with MusicBrainz as the data source  
   * Fix bug where unimported plugin would not ignore children directories of ignored directories.  

For plugin developers
   * beets now explicitly prevents multiple plugins to define replacement functions for the same field. When previously defining template_fields for the same field in two plugins, the last loaded plugin would silently overwrite the function defined by the other plugin. Now, beets will raise an exception when this happens.  
   * Allow reuse of some parts of beets' testing components. This may ease the work for externally developed plugins or related software (e.g. the beets plugin for Mopidy), if they need to create an in-memory instance of a beets music library for their tests.

For packagers
   * As noted above, the minimum Python version is now 3.7.
   * We fixed a version for the dependency on the Confuse library.  
   * The minimum required version of mediafile is now 0.9.0.

Other changes
   * Add sphinx and sphinx_rtd_theme as dependencies for a new docs extra  
   * absubmit: Deprecate the absubmit plugin since AcousticBrainz has stopped accepting new submissions.  
   * acousticbrainz: Deprecate the acousticbrainz plugin since the AcousticBrainz project has shut down.  
   * limit: Limit query results to head or tail (lslimit command only)
   * fish: Add --output option.
   * lyrics: Remove Musixmatch from default enabled sources as they are currently blocking requests from the beets user agent.  
   * /faq: multidisc: Elaborated the multi-disc FAQ  
   * /faq: src: Removed some long lines.
   * Refactor the test cases to avoid test smells.
 

-------------------------------------------------------------------
Tue Aug 22 13:52:07 UTC 2023 - Jaime Marquínez Ferrándiz <jaime.marquinez.ferrandiz@fastmail.net>

- Fix the names of the Flask recommended packages

-------------------------------------------------------------------
Fri Apr 22 11:58:53 UTC 2022 - pgajdos@suse.com

- python-mock is not required for build

-------------------------------------------------------------------
Fri Feb 11 15:49:28 UTC 2022 - Jaime Marquínez Ferrándiz <jaime.marquinez.ferrandiz@fastmail.net>

- Update to 1.6.0:
  * Major new features:
    * When fetching genres from MusicBrainz, we now include genres from the
      release group (in addition to the release). We also prioritize genres
      based on the number of votes. Thanks to @aereaux.
    * Primary and secondary release types from MusicBrainz are now stored in a
      new albumtypes field.
    * An accompanying new albumtypes includes some options for formatting this
      new albumtypes field.
  * Other new things:
    * permissions: The plugin now sets cover art permissions to match the audio
      file permissions.
    * unimported: A new configuration option supports excluding specific
      subdirectories in library.
    * info: Add support for an --album flag.
    * export: Similarly add support for an --album flag.
    * beet move now highlights path differences in color (when enabled).
    * When moving files and a direct rename of a file is not possible (for
      example, when crossing filesystems), beets now copies to a temporary file
      in the target folder first and then moves to the destination instead of
      directly copying the target path. This gets us closer to always updating
      files atomically.
    * fetchart: Add a new option to store cover art as non-progressive image.
      This is useful for DAPs that do not support progressive images. Set
      deinterlace: yes in your configuration to enable this conversion.
    * fetchart: Add a new option to change the file format of cover art images.
      This may also be useful for DAPs that only support some image formats.
    * Support flexible attributes in %aunique.
    * Make %aunique faster, especially when using inline fields.
  * Bug fixes:
    * lyrics: Fix a crash when Beautiful Soup is not installed.
    * discogs: Support a new Discogs URL format for IDs.
    * discogs: Remove built-in rate-limiting because the Discogs Python library
      we use now has its own rate-limiting.
    * export: Fix some duplicated output.
    * aura: Fix a potential security hole when serving image files.
  * The six package is no longer required.
  * The full changelog can be read at https://github.com/beetbox/beets/releases/tag/v1.6.0
- Run fdupes

-------------------------------------------------------------------
Fri Feb 11 15:13:38 UTC 2022 - Jaime Marquínez Ferrándiz <jaime.marquinez.ferrandiz@fastmail.net>

- Update to 1.5.0:
  * Major new features:
    * Fields in queries now fall back to an item's album and check its fields
      too. Notably, this allows querying items by an album's attribute:
      in other words, beet list foo:bar will not only find tracks with
      the foo attribute; it will also find tracks on albums that have
      the foo attribute. This may be particularly useful in the 
      path-format-config, which matches individual items to decide which path
      to use.
    * A new reflink config option instructs the importer to create fast,
      copy-on-write file clones on filesystems that support them.
    * A new unimported lets you find untracked files in your library directory.
    * The aura has arrived! Try out the future of remote music library access today.
    * We now fetch information about works from MusicBrainz.
      MusicBrainz matches provide the fields work (the title),
      mb_workid (the MBID), and work_disambig (the disambiguation string).
    * A new parentwork gets information about the original work,
      which is useful for classical music.
    * bpd: BPD now supports most of the features of version 0.16
      of the MPD protocol. This is enough to get it talking to
      more complicated clients like ncmpcpp, but there are still
      some incompatibilities, largely due to MPD commands we don't support yet.
    * A new deezer can autotag tracks and albums using the Deezer database.
    * A new bareasc provides a new query type: "bare ASCII" queries that ignore
      accented characters, treating them as though they were plain
      ASCII characters. Use the # prefix with list or other commands.
    * fetchart: The plugin can now get album art from last.fm.
    * web: The API now supports the HTTP DELETE and PATCH methods for
      modifying items. They are disabled by default; set readonly:
      no in your configuration file to enable modification via the API.
  * Some functionality has been move to their own python packags: Confuse
    and MediaFile. Mutagen is no longer a direct dependency.
  * Full changelog available at https://github.com/beetbox/beets/releases/tag/v1.5.0
- Drop 0001-Fixed-failing-test-where.patch: Included upstream
- Drop fix_test_command_line_option_relative_to_working_dir.diff: Included upstream
- Drop 0001-Compatibility-with-breaking-changes-to-the-ast-module.patch: Included upstream


-------------------------------------------------------------------
Wed Oct 28 06:17:51 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Add patch to fix a crash due to invalid use of the ast module
  (boo#1178199):
  * 0001-Compatibility-with-breaking-changes-to-the-ast-module.patch
- Use %license

-------------------------------------------------------------------
Sat Jun 29 09:28:04 UTC 2019 - Jaime Marquínez Ferrándiz <jaime.marquinez.ferrandiz@fastmail.net>

- Update to 1.4.9:
  * This small update is part of our attempt to release new versions more often!
    There are a few important fixes, and we're clearing the deck for a change
    to beets' dependencies in the next version.
  * The new feature is:
    * You can use the NO_COLOR environment variable to disable terminal colors.
  * There are some fixes in this release:
    * Fix a regression in the last release that made the image resizer fail to
      detect older versions of ImageMagick.
    * gmusic: The oauth_file config option now supports more flexible path
      values, including ~ for the home directory.
    * gmusic: Fix a crash when using version 12.0.0 or later of the gmusicapi
      module.
    * Fix an incompatibility with Python 3.8's AST changes.
  * Here's a note for packagers:
    * pathlib is now an optional test dependency on Python 3.4+, removing the
      need for a Debian patch.
- Remove fix-pathlib-requirement.diff: Incorporated upstream

-------------------------------------------------------------------
Sun May 19 14:24:27 UTC 2019 - Jaime Marquínez Ferrándiz <jaime.marquinez.ferrandiz@fastmail.net>

- Update to 1.4.8:
  * This release is far too long in coming, but it's a good one. There is the
    usual torrent of new features and a ridiculously long line of fixes, but
    there are also some crucial maintenance changes. We officially support
    Python 3.7 and 3.8, and some performance optimizations can (anecdotally)
    make listing your library more than three times faster than in the previous
    version.
  * The new core features are:
    * A new config-aunique configuration option allows setting default options
      for the aunique template function.
    * The albumdisambig field no longer includes the MusicBrainz release group
      disambiguation comment. A new releasegroupdisambig field has been added.
    * The modify command now allows resetting fixed attributes. For example,
      beet modify -a artist:beatles artpath! resets artpath attribute from matching albums back to the default value.
    * A new importer option, ignore_data_tracks, lets you skip audio tracks
      contained in data files.
  * There are some new plugins:
    * The playlist can query the beets library using M3U playlists.
    * The loadext allows loading of SQLite extensions, primarily for use with
      the ICU SQLite extension for internationalization.
    * The subsonicupdate can automatically update your Subsonic library.
  * And many improvements to existing plugins:
    * lastgenre: Added option -A to match individual tracks and singletons.
    * play: The plugin can now emit a UTF-8 BOM, fixing some issues with
      foobar2000 and Winamp.
    * gmusic:
      * Add a new option to automatically upload to Google Play Music library
        on track import.
      * Add new options for Google Play Music authentication.
    * replaygain: albumpeak on large collections is calculated as the average,
      not the maximum.
    * chroma:
      * Now optionally has a bias toward looking up more relevant releases
        according to the preferred configuration options.
      * Fingerprint values are now properly stored as strings, which prevents
        strange repeated output when running beet write.
    * convert: The plugin now has an id3v23 option that allows you to override
      the global id3v23 option.
    * spotify:
      * The plugin now uses OAuth for authentication to the Spotify API.
      * The plugin now works as an import metadata provider: you can match
        tracks and albums using the Spotify database.
    * ipfs: The plugin now supports a nocopy option which passes that flag to
      ipfs.
    * discogs: The plugin now has rate limiting for the Discogs API.
    * mpdstats, mpdupdate: These plugins now use the MPD_PORT environment
      variable if no port is specified in the configuration file.
    * bpd:
      * MPD protocol commands consume and single are now supported along with
        updated semantics for repeat and previous and new fields for status.
        The bpd server now understands and ignores some additional commands.
      * MPD protocol command idle is now supported, allowing the MPD version to
        be bumped to 0.14.
      * MPD protocol command decoders is now supported.
      * The plugin now uses the main beets logging system. The special-purpose
        --debug flag has been removed.
    * mbsync: The plugin no longer queries MusicBrainz when either the
      mb_albumid or mb_trackid field is invalid. See also the discussion on
      Google Groups
    * export: The plugin now also exports path field if the user explicitly
      specifies it with -i parameter. This only works when exporting library
      fields.
    * acousticbrainz: The plugin now declares types for all its fields, which
      enables easier querying and avoids a problem where very small numbers
      would be stored as strings.
  * Some improvements have been focused on improving beets' performance:
    * Querying the library is now faster:
      * We only convert fields that need to be displayed.
      * We now compile templates once and reuse them instead of recompiling
        them to print out each matching object.
      * Querying the library for items is now faster, for all queries that do
        not need to access album level properties. This was implemented by
        lazily fetching the album only when needed.
    * absubmit, badfiles: Analysis now works in parallel (on Python 3 only).
    * mpdstats: Use the currentsong MPD command instead of playlist to get the
      current song, improving performance when the playlist is long.
  * Several improvements are related to usability:
    * The disambiguation string for identifying albums in the importer now
      shows the catalog number.
    * Added whitespace padding to missing tracks dialog to improve readability.
    * The move command now lists the number of items already in-place.
    * Modify selection can now be applied early without selecting every item.
    * Beets now emits more useful messages during startup if SQLite returns an
      error. The SQLite error message is now attached to the beets message.
    * Fixed a confusing typo when the convert plugin copies the art covers.
  * Many other fixes
  * The full changelog can be read at
    https://github.com/beetbox/beets/releases/tag/v1.4.8
- Remove fix_python_3_7_compatibility.patch: No longer needed

-------------------------------------------------------------------
Sat Feb  9 20:11:03 UTC 2019 - Jaime Marquínez Ferrándiz <jaime.marquinez.ferrandiz@fastmail.net>

- Add fix_python_3_7_compatibility.patch: fix compatibility with python 3.7

-------------------------------------------------------------------
Sat Jun  2 09:34:31 UTC 2018 - jaime.marquinez.ferrandiz@fastmail.net

- Update to 1.4.7:
  * This new release includes lots of new features in the importer and the
    metadata source backends that it uses. We've changed how the beets importer
    handles non-audio tracks listed in metadata sources like MusicBrainz:
  * The importer now ignores non-audio tracks (namely, data and video tracks)
    listed in MusicBrainz. Also, a new option, ignore_video_tracks,
    lets you return to the old behavior and include these video tracks.
  * A new importer option, ignored_media, can let you skip certain media
    formats.
  * There are other subtle improvements to metadata handling in the importer:
  * In the MusicBrainz backend, beets now imports the
    musicbrainz_releasetrackid field.
  * A new importer configuration option, artist_credit, will tell beets to
    prefer the artist credit over the artist when autotagging.
  * And there are even more new features:
  * replaygain: The beet replaygain command now has --force, --write and
    --nowrite options.
  * A new importer configuration option, incremental_skip_later, lets you
    avoid recording skipped directories to the list of "processed" directories
    in incremental mode. This way, you can revisit them later with another
    import.
  * fetchart: The configuration options now support finer-grained control via
    the sources option. You can now specify the search order for different
    matching strategies within different backends.
  * web: A new cors_supports_credentials configuration option lets in-browser
    clients communicate with the server even when it is protected by an
    authorization mechanism (a proxy with HTTP authentication enabled,
    for example).
  * A new sonosupdate plugin automatically notifies Sonos controllers to
    update the music library when the beets library changes.
  * discogs: The plugin now stores master release IDs into mb_releasegroupid.
    It also "simulates" track IDs using the release ID and the track list
    position.
  * discogs: Fetch the original year from master releases.
  * Lots of bug fixes.
  * The full changelog can be read at
    https://github.com/beetbox/beets/blob/master/docs/changelog.rst

-------------------------------------------------------------------
Thu Jan  4 18:59:49 UTC 2018 - alarrosa@suse.com

- Update to 1.4.6:
  * The highlight of this release is "album merging," an often requested
    option in the importer to add new tracks to an existing album you already
    have in your library. This way, you no longer need to resort to removing
    the partial album from your library, combining the files manually, and
    importing again.
  * Here are the larger new features in this release:
  * When the importer finds duplicate albums, you can now merge all the
    tracks—old and new—together and try importing them as a single,
    combined album.
  * lyrics: The plugin can now produce reStructuredText files for beautiful,
    readable books of lyrics.
  * A new from_scratch configuration option makes the importer remove old
    metadata before applying new metadata. This new feature complements the
    zero and scrub plugins but is slightly different: beets clears out all
    the old tags it knows about and only keeps the new data it gets from
    the remote metadata source.
  * There are also somewhat littler, but still great, new features:
  * convert: A new no_convert option lets you skip transcoding items matching
    a query. Instead, the files are just copied as-is.
  * fetchart: A new quiet switch that only prints out messages when album art
    is missing.
  * mbcollection: You can configure a custom MusicBrainz collection via the
    new collection configuration option.
  * mbcollection: The collection update command can now remove albums from
    collections that are longer in the beets library.
  * fetchart: The clearart command now asks for confirmation before touching
    your files.
  * mpdstats: The plugin now correctly updates song statistics when MPD
    switches from a song to a stream and when it plays the same song
    multiple times consecutively.
  * acousticbrainz: The plugin can now be configured to write only a specific
    list of tags.
  * Lots of bug fixes.
  * The full changelog can be read at
    https://github.com/beetbox/beets/blob/master/docs/changelog.rst
- Fixed rpm package group

-------------------------------------------------------------------
Tue Aug  8 21:38:35 UTC 2017 - jengelh@inai.de

- Improve write style of description

-------------------------------------------------------------------
Mon Aug  7 10:29:37 UTC 2017 - alarrosa@suse.com

- Remove %check since it makes random failures that are fixed just
  by retriggering a package build.

-------------------------------------------------------------------
Thu Jun 29 23:56:06 UTC 2017 - alarrosa@suse.com

- Update to 1.4.5:
  * You can now set fields to certain values during import, using either
    a --set field=value command-line flag or a new set_fields configuration
    option under the importer section.
  * Date queries can now include times, so you can filter your music down
    to the second.
  * Date queries can also be relative. You can say added:-1w.. to match
    music added in the last week, for example.
  * A new gmusic lets you interact with your Google Play Music library.
  * replaygain: We now keep R128 data in separate tags from classic
    ReplayGain data for formats that need it (namely, Ogg Opus). A new r128
    configuration option enables this behavior for specific formats.
  * The move command gained a new --export flag, which copies files to an
    external location without changing their paths in the library database.
  * There are also some bug fixes:
  * lastgenre: Fix a crash when using the prefer_specific and canonical
    options together.
  * web: Fix a crash on Windows under Python 2 when serving non-ASCII
    filenames.
  * metasync: Fix a crash in the Amarok backend when filenames contain
    quotes.
  * More informative error messages are displayed when the file format is not
    recognized.
- Update to 1.4.4:

  * Added support for DSF files, once a future version of Mutagen is released
    that supports them.
  * A new hardlink config option instructs the importer to create hard links
    on filesystems that support them.
  * A new kodiupdate lets you keep your Kodi library in sync with beets.
  * A new bell configuration option under the import section enables
    a terminal bell when input is required.
  * A new field, composer_sort, is now supported and fetched from MusicBrainz.
  * The MusicBrainz backend and discogs now both provide a new attribute
    called track_alt that stores more nuanced, possibly non-numeric track
    index data. For example, some vinyl or tape media will report the side of
    the record using a letter instead of a number in that field.
  * web: Added a new endpoint, /item/path/foo, which will return the item info
    for the file at the given path, or 404.
  * web: Added a new config option, include_paths, which will cause paths
    to be included in item API responses if set to true.
  * The %aunique template function for aunique now takes a third argument that
    specifies which brackets to use around the disambiguator value. The
    argument can be any two characters that represent the left and right
    brackets. It defaults to [] and can also be blank to turn off bracketing.
  * Added a --move or -m option to the importer so that the files can be moved
    to the library instead of being copied or added "in place."
  * badfiles: Added a --verbose or -v option. Results are now displayed only
    for corrupted files by default and for all the files when the verbose
    option is set.
  * embedart: The explicit embedart command now asks for confirmation before
    embedding art into music files.
  * You can now run beets by typing python -m beets.
  * smartplaylist: Different playlist specifications that generate
    identically-named playlist files no longer conflict; instead, the
    resulting lists of tracks are concatenated.
  * missing: A new mode lets you see missing albums from artists you have in
    your library.
  * web : Add new reverse_proxy config option to allow serving the web plugins
    under a reverse proxy.
  * Importing a release with multiple release events now selects the event
    based on your preferred countries.
  * play: A new -y or --yes parameter lets you skip the warning message
    if you enqueue more items than the warning threshold usually allows.
  * Fix a bug where commands which forked subprocesses would sometimes
    prevent further inputs. This bug mainly affected convert.
  * There are also quite a few fixes:
  * In the replace configuration option, we now replace a leading hyphen (-)
    with an underscore.
  * absubmit: We no longer filter audio files for specific formats---we will
    attempt the submission process for all formats.
  * mpdupdate: Fix Python 3 compatibility.
  * replaygain: Fix Python 3 compatibility in the bs1770gain backend.
  * bpd: Report playback times as integers.
  * mpdstats: Fix Python 3 compatibility. The plugin also now requires
    version 0.4.2 or later of the python-mpd2 library.
  * mpdstats: Improve handling of MPD status queries.
  * badfiles: Fix Python 3 compatibility.
  * Fix some cases where album-level ReplayGain/SoundCheck metadata would be
    written to files incorrectly.
  * badfiles: The command no longer bails out if the validator command is
    not found or exits with an error.
  * lyrics: The Google search backend no longer crashes when the server
    responds with an error.
  * discogs: You can now authenticate with Discogs using a personal access
    token.
  * Fix Python 3 compatibility when extracting rar archives in the importer.
  * duplicates: Fix Python 3 compatibility when using the copy and move
    options.
  * mbsubmit: The tracks are now sorted properly.
  * thumbnails: Fix a string-related crash on Python 3.
  * beatport: More than just 10 songs are now fetched per album.
  * On Python 3, the terminal_encoding setting is respected again for output
    and printing will no longer crash on systems configured with a limited
    encoding.
  * convert: The default configuration uses FFmpeg's built-in AAC codec
    instead of faac.
  * Fix the importer's detection of multi-disc albums when other
    subdirectories are present.
  * Invalid date queries now print an error message instead of being
    silently ignored.
  * When the SQLite database stops being accessible, we now print a friendly
    error message.
  * web: Avoid a crash when sending binary data, such as Chromaprint
    fingerprints, in music attributes.
  * Fix a hang when parsing templates that end in newlines.
  * Fix a crash when reading non-ASCII characters in configuration files on
    Windows under Python 3.

  * Some backends were removed from two metadata plugins because of bitrot:
  * lyrics: The Lyrics.com backend has been removed. (It stopped working
    because of changes to the site's URL structure.)
  * fetchart: The documentation no longer recommends iTunes Store artwork
    lookup because the unmaintained python-itunes is broken.
- Dropped patches already included upstream:
  * 0001-Add-missing-unittest-suite-declaration.patch
  * 0001-Fix-2381-mpdupdate-on-Python-3.patch
  * 0001-Fix-2382-replaygain-backend-parsing-on-Python-3.patch
  * 0001-Fixed-failing-test-because-mocked-data-was-missing-p.patch
  * 0001-Fixed-failing-test-where-track-number-was-missing-fr.patch
  * 0001-Remove-dependencies-from-convert_stub.py.patch
  * 0001-badfiles-Better-logging-and-error-handling.patch
  * 0001-mpdstats-Fix-Python-3-compatibility.patch
  * 0002-badfiles-Python3-compatibility.patch
  * 0001-Run-python2-or-python3.patch
- Rebase fix_test_command_line_option_relative_to_working_dir.diff
- Changed url to use the github release link.
- BuildRequires python3-python-mpd2 >= 0.4.2

-------------------------------------------------------------------
Mon Apr 10 12:31:10 UTC 2017 - alarrosa@suse.com

- Only BuildRequire python3-pathlib when not in Tumbleweed, since
  the pathlib module was included in the standard library in python 3.4 

-------------------------------------------------------------------
Thu Jan 19 17:09:31 UTC 2017 - alarrosa@suse.com

- Initial release.
- Add 0001-Add-missing-unittest-suite-declaration.patch,
  0001-Fix-2381-mpdupdate-on-Python-3.patch,
  0001-Fix-2382-replaygain-backend-parsing-on-Python-3.patch,
  0001-Fixed-failing-test-because-mocked-data-was-missing-p.patch,
  0001-Fixed-failing-test-where.patch,
  0001-Fixed-failing-test-where-track-number-was-missing-fr.patch,
  0001-Remove-dependencies-from-convert_stub.py.patch,
  0001-Run-python2-or-python3.patch,
  0001-mpdstats-Fix-Python-3-compatibility.patch,
  0001-badfiles-Better-logging-and-error-handling.patch and
  0002-badfiles-Python3-compatibility.patch from upstream to fix
  most failing tests and python3 issues.
- Add fix_test_command_line_option_relative_to_working_dir.diff
  to fix test_ui.py making all tests run successfully.


