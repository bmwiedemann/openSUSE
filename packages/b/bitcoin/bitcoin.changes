-------------------------------------------------------------------
Tue Dec 20 15:28:42 UTC 2022 - Andrea Manzini <andrea.manzini@suse.com>

- Update to version 24.0.1
  changelogs:
  * https://bitcoincore.org/en/releases/24.0.1/
  * https://bitcoincore.org/en/releases/23.0/
  * https://bitcoincore.org/en/releases/22.1/

-------------------------------------------------------------------
Sun May  8 22:33:43 UTC 2022 - Andrei Dziahel <develop7@develop7.info>

- fixed upstream version number change: it's not 0.x anymore`

-------------------------------------------------------------------
Fri Apr 22 13:11:18 UTC 2022 - Andrei Dziahel <develop7@develop7.info>

+ disabled tests to fix Tumbleweed build

+ updated source tarball URL per the upstream recommendation

+ drop 24104.patch: fixed upstream

+ Update to version 0.22.0 
  * P2P and network changes
    - Added support for running Bitcoin Core as an
      [I2P (Invisible Internet Project)](https://en.wikipedia.org/wiki/I2P) service
      and connect to such services. See [i2p.md](https://github.com/bitcoin/bitcoin/blob/22.x/doc/i2p.md) for details. (#20685)
    - This release removes support for Tor version 2 hidden services in favor of Tor
      v3 only, as the Tor network [dropped support for Tor
      v2](https://blog.torproject.org/v2-deprecation-timeline) with the release of
      Tor version 0.4.6.  Henceforth, Bitcoin Core ignores Tor v2 addresses; it
      neither rumors them over the network to other peers, nor stores them in memory
      or to `peers.dat`.  (#22050)
    - Added NAT-PMP port mapping support via
      [`libnatpmp`](https://miniupnp.tuxfamily.org/libnatpmp.html). (#18077)
  * New and Updated RPCs
    - Due to [BIP 350](https://github.com/bitcoin/bips/blob/master/bip-0350.mediawiki)
      being implemented, behavior for all RPCs that accept addresses is changed when
      a native witness version 1 (or higher) is passed. These now require a Bech32m
      encoding instead of a Bech32 one, and Bech32m encoding will be used for such
      addresses in RPC output as well. No version 1 addresses should be created
      for mainnet until consensus rules are adopted that give them meaning
      (as will happen through [BIP 341](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki)).
      Once that happens, Bech32m is expected to be used for them, so this shouldn't
      affect any production systems, but may be observed on other networks where such
      addresses already have meaning (like signet). (#20861)
    - The `getpeerinfo` RPC returns two new boolean fields, `bip152_hb_to` and
      `bip152_hb_from`, that respectively indicate whether we selected a peer to be
      in compact blocks high-bandwidth mode or whether a peer selected us as a
      compact blocks high-bandwidth peer. High-bandwidth peers send new block
      announcements via a `cmpctblock` message rather than the usual inv/headers
      announcements. See BIP 152 for more details. (#19776)
    - `getpeerinfo` no longer returns the following fields: `addnode`, `banscore`,
      and `whitelisted`, which were previously deprecated in 0.21. Instead of
      `addnode`, the `connection_type` field returns manual. Instead of
      `whitelisted`, the `permissions` field indicates if the peer has special
      privileges. The `banscore` field has simply been removed. (#20755)
    - The following RPCs:  `gettxout`, `getrawtransaction`, `decoderawtransaction`,
      `decodescript`, `gettransaction`, and REST endpoints: `/rest/tx`,
      `/rest/getutxos`, `/rest/block` deprecated the following fields (which are no
      longer returned in the responses by default): `addresses`, `reqSigs`.
      The `-deprecatedrpc=addresses` flag must be passed for these fields to be
      included in the RPC response. This flag/option will be available only for this major release, after which
      the deprecation will be removed entirely. Note that these fields are attributes of
      the `scriptPubKey` object returned in the RPC response. However, in the response
      of `decodescript` these fields are top-level attributes, and included again as attributes
      of the `scriptPubKey` object. (#20286)
    - When creating a hex-encoded bitcoin transaction using the `bitcoin-tx` utility
      with the `-json` option set, the following fields: `addresses`, `reqSigs` are no longer
      returned in the tx output of the response. (#20286)
    - The `listbanned` RPC now returns two new numeric fields: `ban_duration` and `time_remaining`.
      Respectively, these new fields indicate the duration of a ban and the time remaining until a ban expires,
      both in seconds. Additionally, the `ban_created` field is repositioned to come before `banned_until`. (#21602)
    - The `setban` RPC can ban onion addresses again. This fixes a regression introduced in version 0.21.0. (#20852)
    - The `getnodeaddresses` RPC now returns a "network" field indicating the
      network type (ipv4, ipv6, onion, or i2p) for each address.  (#21594)
    - `getnodeaddresses` now also accepts a "network" argument (ipv4, ipv6, onion,
      or i2p) to return only addresses of the specified network.  (#21843)
    - The `testmempoolaccept` RPC now accepts multiple transactions (still experimental at the moment,
      API may be unstable). This is intended for testing transaction packages with dependency
      relationships; it is not recommended for batch-validating independent transactions. In addition to
      mempool policy, package policies apply: the list cannot contain more than 25 transactions or have a
      total size exceeding 101K virtual bytes, and cannot conflict with (spend the same inputs as) each other or
      the mempool, even if it would be a valid BIP125 replace-by-fee. There are some known limitations to
      the accuracy of the test accept: it's possible for `testmempoolaccept` to return "allowed"=True for a
      group of transactions, but "too-long-mempool-chain" if they are actually submitted. (#20833)
    - `addmultisigaddress` and `createmultisig` now support up to 20 keys for
      Segwit addresses. (#20867)
    Changes to Wallet or GUI related RPCs can be found in the GUI or Wallet section below.

  * Build System
    - Release binaries are now produced using the new `guix`-based build system.
      The [/doc/release-process.md](/doc/release-process.md) document has been updated accordingly.

  * Files
    - The list of banned hosts and networks (via `setban` RPC) is now saved on disk
      in JSON format in `banlist.json` instead of `banlist.dat`. `banlist.dat` is
      only read on startup if `banlist.json` is not present. Changes are only written to the new
      `banlist.json`. A future version of Bitcoin Core may completely ignore
      `banlist.dat`. (#20966)

  * New settings
    - The `-natpmp` option has been added to use NAT-PMP to map the listening port.
      If both UPnP and NAT-PMP are enabled, a successful allocation from UPnP
      prevails over one from NAT-PMP. (#18077)

  * Updated settings
    Changes to Wallet or GUI related settings can be found in the GUI or Wallet section below.
    - Passing an invalid `-rpcauth` argument now cause bitcoind to fail to start.  (#20461)

  * Tools and Utilities
    - A new CLI `-addrinfo` command returns the number of addresses known to the
      node per network type (including Tor v2 versus v3) and total. This can be
      useful to see if the node knows enough addresses in a network to use options
      like `-onlynet=<network>` or to upgrade to this release of Bitcoin Core 22.0
      that supports Tor v3 only.  (#21595)

    - A new `-rpcwaittimeout` argument to `bitcoin-cli` sets the timeout
      in seconds to use with `-rpcwait`. If the timeout expires,
      `bitcoin-cli` will report a failure. (#21056)

  * Wallet
    - External signers such as hardware wallets can now be used through the new 
      RPC methods `enumeratesigners` and `displayaddress`. Support is also added 
      to the `send` RPC call. This feature is experimental. See 
      [external-signer.md](https://github.com/bitcoin/bitcoin/blob/22.x/doc/external-signer.md) 
      for details. (#16546)
    - A new `listdescriptors` RPC is available to inspect the contents of descriptor-enabled wallets.
      The RPC returns public versions of all imported descriptors, including their timestamp and flags.
      For ranged descriptors, it also returns the range boundaries and the next index to generate addresses from. (#20226)
    - The `bumpfee` RPC is not available with wallets that have private keys
      disabled. `psbtbumpfee` can be used instead. (#20891)
    - The `fundrawtransaction`, `send` and `walletcreatefundedpsbt` RPCs now support an `include_unsafe` option
      that when `true` allows using unsafe inputs to fund the transaction.
      Note that the resulting transaction may become invalid if one of the unsafe inputs disappears.
      If that happens, the transaction must be funded with different inputs and republished. (#21359)
    - We now support up to 20 keys in `multi()` and `sortedmulti()` descriptors
      under `wsh()`. (#20867)
    - Taproot descriptors can be imported into the wallet only after activation 
      has occurred on the network (e.g. mainnet, testnet, signet) in use. See 
      [descriptors.md](https://github.com/bitcoin/bitcoin/blob/22.x/doc/descriptors.md) 
      for supported descriptors.

  * GUI changes
    - External signers such as hardware wallets can now be used. These require 
      an external tool such as [HWI](https://github.com/bitcoin-core/HWI) to be 
      installed and configured under Options -> Wallet. When creating a new 
      wallet a new option "External signer" will appear in the dialog. If the 
      device is detected, its name is suggested as the wallet name. The 
      watch-only keys are then automatically imported. Receive addresses can be 
      verified on the device. The send dialog will automatically use the 
      connected device. This feature is experimental and the UI may freeze for 
      a few seconds when performing these actions.
  
  * RPC
    - The RPC server can process a limited number of simultaneous RPC requests.
      Previously, if this limit was exceeded, the RPC server would respond with
      [status code 500 (`HTTP_INTERNAL_SERVER_ERROR`)](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_server_errors).
      Now it returns status code 503 (`HTTP_SERVICE_UNAVAILABLE`). (#18335)

    - Error codes have been updated to be more accurate for the following error cases (#18466):
      - `signmessage` now returns RPC_INVALID_ADDRESS_OR_KEY (-5) if the
        passed address is invalid. Previously returned RPC_TYPE_ERROR (-3).
      - `verifymessage` now returns RPC_INVALID_ADDRESS_OR_KEY (-5) if the
        passed address is invalid. Previously returned RPC_TYPE_ERROR (-3).
      - `verifymessage` now returns RPC_TYPE_ERROR (-3) if the passed signature
        is malformed. Previously returned RPC_INVALID_ADDRESS_OR_KEY (-5).
    * See release-notes-22.0.md for complete changelog

-------------------------------------------------------------------
Mon Jan 24 05:07:54 UTC 2022 - Bernhard Wiedemann <bwiedemann@suse.com>

- Add 24104.patch to fix build with boost-1.78

-------------------------------------------------------------------
Wed Oct 20 05:01:40 UTC 2021 - Jiri Slaby <jslaby@suse.cz>

- Update to version 0.21.2
  * P2P protocol and network code
    * use NetPermissions::HasFlag() in CConnman::Bind()
    * Rate limit the processing of rumoured addresses
  * Wallet
    * Do not iterate a directory if having an error while accessing it
  * RPC
    * Reset scantxoutset progress before inferring descriptors
  * Build System
    * depends: update Qt 5.9 source url
    * Update Windows code signing certificate
    * Use custom MacOS code signing tool
    * Fix build with Boost 1.77.0
  * Tests and QA
    * Build with --enable-werror by default, and document exceptions
    * Fix intermittent feature_taproot issue
    * Fix macOS brew install command
    * add missing ECCVerifyHandle to base_encode_decode
    * Run fuzzer task for the master branch only
  * GUI
    * Do not use QClipboard::Selection on Windows and macOS.
    * Remove user input from URI error message
    * Draw "eye" sign at the beginning of watch-only addresses
  * Miscellaneous
    * Fix crash when parsing command line with -noincludeconf=0
    * util: Properly handle -noincludeconf on command line (take 2)

-------------------------------------------------------------------
Fri Aug 27 07:49:41 UTC 2021 - Johannes Segitz <jsegitz@suse.com>

- Added hardening to systemd service(s). Added patch(es):
  * harden_bitcoind.service.patch
  Modified:
  * bitcoind.service

-------------------------------------------------------------------
Fri May 14 10:54:00 UTC 2021 - Ferdinand Thiessen <rpm@fthiessen.de>

- Update to version 0.21.1
  * Consensus:
    * Speedy trial support for versionbits
    * Speedy trial activation parameters for Taproot
  * P2P protocol and network code
    * allow CSubNet of non-IP networks
    * Avoid UBSan warning in ProcessMessage
  * Wallet
    * Introduce DeferredSignatureChecker and have
      SignatureExtractorClass subclass it
    * Avoid requesting fee rates multiple times during coin selection
  * RPC and other APIs:
    * Disallow sendtoaddress and sendmany when private keys disabled
      CVE-2021-3195

-------------------------------------------------------------------
Tue Jan 19 08:59:17 UTC 2021 - Martin Pluskal <mpluskal@suse.com>

- Update to version 0.21.0:
  * For full details see release-notes-0.21.0.md

-------------------------------------------------------------------
Tue Aug  4 08:02:30 UTC 2020 - Paolo Stivanin <info@paolostivanin.com>

- Update to version 0.20.1
  * Mining
    * Fix GBT: Restore "!segwit" and "csv" to "rules" key
  * P2P protocol and network code
    * Replace automatic bans with discouragement filter
  * Wallet
    * Handle concurrent wallet loading
    * Minimal fix to restore conflicted transaction notifications 
  * RPC and other APIs
    * Increment input value sum only once per UTXO in decodepsbt
    * psbt: Increment input value sum only once per UTXO in decodepsbt
    * psbt: Include and allow both non_witness_utxo and witness_utxo for segwit inputs
  * GUI
    * Add missing QPainterPath include
    * update Qt base translations for macOS release
  * Misc
    * util: Don't reference errno when pthread fails
    * Fix locking on WSL using flock instead of fcntl
- Remove fix-qpainterpath.patch

-------------------------------------------------------------------
Fri Jul 24 04:46:06 UTC 2020 - Michel Normand <normand@linux.vnet.ibm.com>

- Add 7GB min disk space and change memory setting to physicalmemory
  in existing _constraints file

-------------------------------------------------------------------
Wed Jun 17 11:57:34 UTC 2020 - Paolo Stivanin <info@paolostivanin.com>

- Add fix-qpainterpath.patch
- Add -fcommon to allow building against GCC10

-------------------------------------------------------------------
Fri Jun 12 05:39:25 UTC 2020 - Martin Pluskal <mpluskal@suse.com>

- Update to version 0.20.0:
  * See https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.20.0.md

-------------------------------------------------------------------
Thu Mar 26 20:57:22 UTC 2020 - Michał Rostecki <mrostecki@opensuse.org>

- Fix build on aarch64.

-------------------------------------------------------------------
Wed Mar 11 13:25:45 UTC 2020 - Michał Rostecki <mrostecki@opensuse.org>

- Do not run bitcoind in daemon mode. Running it not as a
  background process makes it working properly with journald
  (instead of writing logs in /var/log).

-------------------------------------------------------------------
Mon Mar  9 20:31:46 UTC 2020 - Michał Rostecki <mrostecki@opensuse.org>

- Update to version 0.19.1:
  * Wallet
    * Fix origfee return for bumpfee with feerate arg
    * Fix unique_ptr usage in boost::signals2
    * Fix issue with conflicted mempool tx in listsinceblock
    * Bug: IsUsedDestination shouldn't use key id as script id for
      ScriptHash
    * IsUsedDestination should count any known single-key address
    * Reset reused transactions cache
  * RPC and other APIs
    * cli: Fix fatal leveldb error when specifying
      -blockfilterindex=basic twice
    * require second argument only for scantxoutset start action
    * zmq: Fix due to invalid argument and multiple notifiers
    * psbt: handle unspendable psbts
    * psbt: check that various indexes and amounts are within
      bounds
  * GUI
    * Fix missing qRegisterMetaType for size_t
    * disable File->CreateWallet during startup
    * Fix comparison function signature
    * Fix unintialized WalletView::progressDialog
  * Tests and QA
    * Appveyor improvement - text file for vcpkg package list
    * fix "bitcoind already running" warnings on macOS
    * add missing #include to fix compiler errors
  * Platform support
    * Update msvc build for Visual Studio 2019 v16.4
    * Updates to appveyor config for VS2019 and Qt5.9.8 + msvc
      project fixes
    * bug-fix macos: give free bytes to F_PREALLOCATE
  * Miscellaneous
    * init: Stop indexes on shutdown after ChainStateFlushed
      callback
    * util: Add missing headers to util/fees.cpp
    * Unbreak build with Boost 1.72.0
    * scripts: Fix symbol-check & security-check argument passing
    * Log to net category for exceptions in ProcessMessages
    * Update univalue subtree

-------------------------------------------------------------------
Wed Dec  4 23:57:17 UTC 2019 - Michał Rostecki <mrostecki@opensuse.org>

- Update to version 0.19.0.1:
  * New RPCs
    + `getbalances` returns an object with all balances
    + `setwalletflag` sets and unsets wallet flags that enable or
      disable features specific to that existing wallet
    + `getblockfilter` fets the BIP158 filter for the specified
       block
  * New settings
    + `-blockfilterindex` enables the creation of BIP158 block
      filters for the entire blockchain
  * Updated settings
    + `whitebind` and `whitelist` now accept a list of permissions
      to provide peers connecting using the indicated interfaces or
      IP addresses
    + Users setting custom `dbcache` values can increase their
      setting slightly without using any more real memory
  * Updated RPCs
    + `sendmany` no longer has a `minconf` argument
    + `getbalance` and `sendtoaddress`, plus the new RPCs
      `getbalances` and `createwaller`, now accept an `acoid_reuse`
      parameter that controls whether already used addresses should
      be included in the operation
    + RPCs which have an `include_watchonly` argument or
      `includeWatching` option now default to true for watch-only
      wallets
    + `listunspent` now returns a `reused` bool for each output if
      the wallet flag `avoid_reuse` is enabled
    + `getblockstats` now uses BlockUndo data instead of the
      transaction index, making it much faster, no longer dependent
      on the `-txindex` configuration option, and functional for
      all non-pruned blocks
    + `utxoupdatepsbt` now accepts a `descriptors` parameter that
       will fill out input and output scripts and keys when known
    + `sendrawtransaction` and `testmempoolaccept` no longer accept
      a allowhighfees parameter to fail mempool acceptance if the
      transaction fee exceeds the value of the configuration option
      `-maxtxfee`
    + `getmempoolancestors`, `getmempooldescendants`,
      `getmempoolentry`, and `getrawmempool` no longer return a
      size field unless the configuration option
      `-deprecatedrpc=size` is used
    + `getwalletinfo` now includes a scanning field that is either
      false (no scanning) or an object with information about the
      duration and progress of the wallet's scanning historical
      blocks for transactions affecting its balances
    + `gettransaction` now accepts a third (boolean) argument
      `verbose`
    + `createwallet` accepts a new passphrase parameter
    + `getchaintxstats` RPC now returns the additional key of
      `window_final_block_height`
    + `getmempoolentry` now provides a weight field containing the
      transaction weight as defined in BIP141
    + The `getnetworkinfo` and `getpeerinfo` commands now contain a
      new field with decoded network service flags
    + `getdescriptorinfo` now returns an additional `checksum`
      field containing the checksum for the unmodified descriptor
      provided by the user
    + `joinpsbts` now shuffles the order of the inputs and outputs
      of the resulting joined PSBT
    + `walletcreatefundedpsbt` now signals BIP125 Replace-by-Fee if
      the -walletrbf configuration option is set to true
  * GUI changes
    + The GUI wallet now provides bech32 addresses by default. The
      user may change the address type during invoice generation
      using a GUI toggle, or the default address type may be
      changed with the -addresstype configuration option.
    + In 0.18.0, a ./configure flag was introduced to allow
      disabling BIP70 support in the GUI (support was enabled by
      default). In 0.19.0, this flag is now disabled by default.
  * P2P changes
    + BIP 61 reject messages were deprecated in version 0.18. They
      are now disabled by default, but can be enabled by setting
      the -enablebip61 command line option.
    + To eliminate well-known denial-of-service vectors in Bitcoin
      Core, especially for nodes with spinning disks, the default
      value for the -peerbloomfilters configuration option has been
      changed to false.
    + By default, Bitcoin Core will now make two additional 
      outbound connections that are exclusively used for
      block-relay.
  * CLI changes
    + The testnet field in bitcoin-cli -getinfo has been renamed to
      chain and now returns the current network name as defined in
      BIP70
- Fix installation of desktop file

-------------------------------------------------------------------
Thu Jul 11 15:31:41 UTC 2019 - Martin Pluskal <mpluskal@suse.com>

- Fix downloaded source

-------------------------------------------------------------------
Thu Jul 11 11:41:01 UTC 2019 - Andrei Dziahel <develop7@develop7.info>

- Update to version 0.18.0
  See release-notes.md for complete list of changes

-------------------------------------------------------------------
Wed Jul 10 09:51:31 UTC 2019 - matthias.gerstner@suse.com

- removal of SuSEfirewall2 service, since SuSEfirewall2 has been replaced by
  firewalld, see [1].

  [1]: https://lists.opensuse.org/opensuse-factory/2019-01/msg00490.html

-------------------------------------------------------------------
Wed Feb 13 15:46:13 UTC 2019 - Andrei Dziahel <develop7@develop7.info>

- Update to version 0.17.1
  * `listtransactions` label support

  See release-notes-0.17.1.md for complete changelog
- fix previous entry date

-------------------------------------------------------------------
Fri Nov 02 09:03:37 UTC 2018 - sean@suspend.net

- Update to version 0.17.0.1:
  * Resolves bcc#14416 Fix OSX dmg issue
  * Resolves bcc#14509 doc:use SegWit in getblocktemplate example

-------------------------------------------------------------------
Wed Oct  3 14:17:09 UTC 2018 - Martin Pluskal <mpluskal@suse.com>

- Update to version 0.17.0:
  * For complete list of changes see:
    + release-notes-0.17.0.md

-------------------------------------------------------------------
Wed Sep 26 07:55:07 UTC 2018 - Martin Pluskal <mpluskal@suse.com>

- Update to version 0.16.3:
  * For complete list of changes see:
    + release-notes-0.16.3.md
    + release-notes-0.16.2.md
- Resolves bsc#1108992 CVE-2018-17144 

-------------------------------------------------------------------
Mon Jun 18 07:48:50 UTC 2018 - mpluskal@suse.com

- Update to version 0.16.1:
  * For complete list of changes see release-notes-0.16.1.md

-------------------------------------------------------------------
Fri Mar  9 12:24:09 UTC 2018 - develop7@develop7.info

- Update to version 0.16.0
  * Segwit Wallet
  * BIP173 (Bech32) Address support ("bc1..." addresses)
  * HD-wallets by default
  * Replace-By-Fee by default in GUI
  * Wallets directory configuration (`-walletdir`)
  * Build: Minimum GCC bumped to 4.8.x
  * Support for signalling pruned nodes (BIP159)
  * Performance: SHA256 assembly enabled by default
  * GUI changes
  * RPC changes
- Remove bitcoin-boost_1_66.patch

-------------------------------------------------------------------
Tue Jan  2 21:13:00 UTC 2018 - jengelh@inai.de

- Trim redundant wording from description.

-------------------------------------------------------------------
Mon Jan  1 09:39:27 UTC 2018 - mpluskal@suse.com

- Update to version 0.15.1:
  * Network fork safety enhancements
  * Miner block size limiting deprecated
  * GUI settings backed up on reset
  * Duplicate wallets disallowed
  * Debug -minimumchainwork argument added
  * Low-level RPC changes
- Fix building with current boost:
  * bitcoin-boost_1_66.patch

-------------------------------------------------------------------
Mon Oct  9 09:12:56 UTC 2017 - mpluskal@suse.com

- Update to version 0.15.0.1:
  * Some clients may have crashed at startup because a custom fee
    setting was configured that no longer exists in the GUI
  * Small translation updates
  * update manpages, forgotten in 0.15.0
- Small specfile cleanup

-------------------------------------------------------------------
Tue Sep 12 08:44:43 UTC 2017 - mpluskal@suse.com

- Update to version 0.15.0
  * For a complete list of changes see provided release-notes

-------------------------------------------------------------------
Mon Jun 19 07:59:38 UTC 2017 - mpluskal@suse.com

- Update to version 0.14.2
  * For a complete list of changes see provided release-notes

-------------------------------------------------------------------
Wed May 31 08:13:30 UTC 2017 - mpluskal@suse.com

- Update to version 0.14.1:
  * For a complete list of changes see provided release-notes
- Update unit file
 
-------------------------------------------------------------------
Tue Mar 14 13:46:10 UTC 2017 - mpluskal@suse.com

- Update to version 0.14.0:
  * For a complete list of changes see provided release-notes

-------------------------------------------------------------------
Wed Feb  1 10:00:28 UTC 2017 - adam.majer@suse.de

- use individual libboost-*-devel packages instead of boost-devel

-------------------------------------------------------------------
Wed Dec 14 08:01:13 UTC 2016 - mpluskal@suse.com

- Update to version 0.13.1:
  * For a complete list of changes see provided release-notes

-------------------------------------------------------------------
Sun Sep 18 10:16:30 UTC 2016 - mpluskal@suse.com

- Speedup build/reduce it's memory consumption by using gold linker

-------------------------------------------------------------------
Wed Aug 24 14:35:06 UTC 2016 - mpluskal@suse.com

- Update to version 0.13.0:
  * For a complete list of changes see provided release-notes
- Drop upstreamed patch:
  * bitcoin_missing_ppc64le_in_ax_boost_base.m4.patch
- Fail build on testsuite failure

-------------------------------------------------------------------
Mon Jun 20 15:58:45 UTC 2016 - normand@linux.vnet.ibm.com

- put back still need patch for ppc64le
  bitcoin_missing_ppc64le_in_ax_boost_base.m4.patch
  (subset of upstream commit id cf5c786)

-------------------------------------------------------------------
Sat Jun 18 11:17:59 UTC 2016 - mpluskal@suse.com

- Update test dependencies
- Build with safer ldflags

-------------------------------------------------------------------
Fri May 27 07:53:02 UTC 2016 - mpluskal@suse.com

- Remove unnecessary build dependencies

-------------------------------------------------------------------
Sat Apr 30 08:38:08 UTC 2016 - mpluskal@suse.com

- Update to 0.12.1
  * For a complete list of changes see provided release-notes
- Drop no longer needed patch
  * bitcoin_missing_ppc64le_in_ax_boost_base.m4.patch
- Small spec file polishing

-------------------------------------------------------------------
Wed Apr 13 06:56:37 UTC 2016 - mpluskal@suse.com

- Use pretty name for tarball
- Update describtion in .firewall

-------------------------------------------------------------------
Sun Feb 21 08:24:50 UTC 2016 - mpluskal@suse.com

- Update to 0.12.0
  * For a complete list of changes see provided release-notes
- Small spec file cleanups
  * remove old obsole/provides
  * move icon handling scriplets to correct subpackage

-------------------------------------------------------------------
Wed Dec  9 11:40:17 UTC 2015 - mpluskal@suse.com

- Update to 0.11.2
  * no upstream changelog provided

-------------------------------------------------------------------
Fri Nov 13 09:18:31 UTC 2015 - jimmy@boombatower.com

- Small consistency cleanups.

-------------------------------------------------------------------
Thu Nov 12 02:32:41 UTC 2015 - jimmy@boombatower.com

- Refactor spec to allow for easy building of altcoins.
  * drop bitcoin-fix-desktop-icon-name.patch

-------------------------------------------------------------------
Sat Oct 31 09:43:55 UTC 2015 - mpluskal@suse.com

- Update to 0.11.1

-------------------------------------------------------------------
Fri Aug  7 10:17:04 UTC 2015 - normand@linux.vnet.ibm.com

- new patch for ppc64le build and remove ExcludeArch ppc ppc64
  bitcoin_missing_ppc64le_in_ax_boost_base.m4.patch

-------------------------------------------------------------------
Sun Jul 12 22:40:07 UTC 2015 - prusnak@opensuse.org

- Update to 0.11.0

-------------------------------------------------------------------
Mon Jun  1 16:41:59 UTC 2015 - mpluskal@suse.com

- Build as PIC so that building does not fail with recent qt5
- Move autoreconf to %prep
- Enable verbose build
- Use macro for systemd tmpfiles creation

-------------------------------------------------------------------
Wed May 27 07:32:16 UTC 2015 - mpluskal@suse.com

- Update to 0.10.2
- Correct desktop file handling scriplets and their dependencies

-------------------------------------------------------------------
Fri May 15 12:13:17 UTC 2015 - mpluskal@suse.com

- Update to 0.10.1
  * no upstream changelog available

-------------------------------------------------------------------
Mon Feb 16 13:54:56 UTC 2015 - mpluskal@suse.com

- Update to 0.10.0:
 * Faster synchronization
 * new REST interface
 * RPC Server “Warm-Up” Mode
 * Improved signing security
 * Watch-only wallet support
 * Consensus library
 * Standard script rules relaxed for P2SH addresses
 * New tool bitcoin-tx
 * Mining and relay policy enhancements
 * BIP 66: strict DER encoding for signatures
 * for more details see https://bitcoin.org/en/release/v0.10.0
- New package libbitcoinconsensus
- Rename package bitcoin-cli to bitcoin-tools
- Exclude ppc and ppc64 from being built - bitcoin does not support
  big endian.

-------------------------------------------------------------------
Sat Jan 31 22:54:32 UTC 2015 - mpluskal@suse.com

- Enable qr support
- Run tests after build

-------------------------------------------------------------------
Tue Oct 28 14:16:43 UTC 2014 - mpluskal@suse.com

- Add _constraint due to memory consumption of build
- Decrease verbosity of bitcoind

-------------------------------------------------------------------
Thu Oct 23 07:54:03 UTC 2014 - mpluskal@suse.com

- Enable tests
- Split to multiple packages (bitcoind, bitcoin-qt, bitcoin-cli and bitcoin-test)
- Cleanup spec file
- Add unit file and sude .firewall for bitcoind
- Update to 0.9.3:
 + RPC:

  * Avoid a segfault on getblock if it can?t read a block from disk
  * Add paranoid return value checks in base58
  * Protocol and network code:

  * Don?t poll showmyip.com, it doesn?t exist anymore
  * Add a way to limit deserialized string lengths and use it
  * Add a new checkpoint at block 295,000
  * Increase IsStandard() scriptSig length
  * Avoid querying DNS seeds, if we have open connections
  * Remove a useless millisleep in socket handler
  * Stricter memory limits on CNode
  * Better orphan transaction handling
  * Add -maxorphantx=<n> and -maxorphanblocks=<n> options for control over the maximum orphan transactions and blocks
 + Wallet:

  * Check redeemScript size does not exceed 520 byte limit
  * Ignore (and warn about) too-long redeemScripts while loading wallet
 + GUI:

  * fix ?opens in testnet mode when presented with a BIP-72 link with no fallback?
  * AvailableCoins: acquire cs_main mutex
  * Fix unicode character display on MacOSX
 + Miscellaneous:

 * key.cpp: fail with a friendlier message on missing ssl EC support
 * Remove bignum dependency for scripts
 * Upgrade OpenSSL to 1.0.1i (see https://www.openssl.org/news/secadv_20140806.txt - just to be sure, no critical issues for Bitcoin Core)
 * Upgrade miniupnpc to 1.9.20140701
 * Fix boost detection in build system on some platforms

-------------------------------------------------------------------
Fri Jun 20 20:30:24 UTC 2014 - prusnak@opensuse.org

- updated to 0.9.2.1

-------------------------------------------------------------------
Sat Apr 12 17:31:30 UTC 2014 - malcolmlewis@opensuse.org

- Updated to version 0.9.1:
  + Dependency-only update to build against fixed openssl security
    vulnerability (CVE-2014-0160).
- Create new patch bitcoin-fix-desktop-icon-name.patch: Rename
  icon in desktop file to remove size reference.
- Allow to build for QT5.
- Add man pages.
- General spec file clean up.
- Drop bitcoin-desktop.patch.

-------------------------------------------------------------------
Fri Mar 21 16:15:29 UTC 2014 - prusnak@opensuse.org

- updated to 0.9.0

-------------------------------------------------------------------
Mon Dec  9 15:36:33 UTC 2013 - prusnak@opensuse.org

- updated to 0.8.6

-------------------------------------------------------------------
Sat Sep 14 10:06:37 UTC 2013 - prusnak@opensuse.org

- updated to 0.8.5

-------------------------------------------------------------------
Sun Sep  1 10:06:17 UTC 2013 - prusnak@opensuse.org

- updated to 0.8.4

-------------------------------------------------------------------
Tue Jun 25 23:17:54 UTC 2013 - prusnak@opensuse.org

- updated to 0.8.3

-------------------------------------------------------------------
Thu May 30 23:37:13 UTC 2013 - prusnak@opensuse.org

- updated to 0.8.2

-------------------------------------------------------------------
Mon Mar 18 18:21:03 UTC 2013 - prusnak@opensuse.org

- updated to 0.8.1

-------------------------------------------------------------------
Wed Feb 20 01:02:58 UTC 2013 - prusnak@opensuse.org

- updated to 0.8.0

-------------------------------------------------------------------
Fri Dec 14 19:00:14 UTC 2012 - prusnak@opensuse.org

- updated to 0.7.2

-------------------------------------------------------------------
Mon Oct 29 12:44:09 UTC 2012 - prusnak@opensuse.org

- updated to 0.7.1

-------------------------------------------------------------------
Tue Sep 11 14:53:01 UTC 2012 - prusnak@opensuse.org

- updated to 0.6.3

-------------------------------------------------------------------
Sat May  5 14:51:32 UTC 2012 - fisiu@opensuse.org

- updated to 0.6.1

-------------------------------------------------------------------
Mon Apr  2 18:27:01 UTC 2012 - prusnak@opensuse.org

- updated to 0.6.0

-------------------------------------------------------------------
Sat Mar 17 01:03:30 UTC 2012 - prusnak@opensuse.org

- updated to 0.5.3

-------------------------------------------------------------------
Thu Jan 19 14:25:30 UTC 2012 - prusnak@opensuse.org

- updated to 0.5.2

-------------------------------------------------------------------
Thu Dec 22 01:22:02 UTC 2011 - prusnak@opensuse.org

- updated to 0.5.1

-------------------------------------------------------------------
Thu Nov 24 09:55:05 UTC 2011 - prusnak@opensuse.org

- created package (version 0.5.0)

