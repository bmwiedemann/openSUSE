From 6415cbc2e8046f62a261d014ea01f0d2ba860914 Mon Sep 17 00:00:00 2001
From: Harald Sitter <sitter@kde.org>
Date: Tue, 16 Feb 2021 15:40:58 +0100
Subject: [PATCH] run input user/group names through input validation

to harden against abuse we'll match them against a regex that should
only match what could possibly be a valid user or group name.

thanks to Wolfgang Frisch and SUSE for the suggestion

BUG: 432757
FIXED-IN: 20.12.3
---
 samba/filepropertiesplugin/authhelper.cpp | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

diff --git a/samba/filepropertiesplugin/authhelper.cpp b/samba/filepropertiesplugin/authhelper.cpp
index 9a0f62e..8343f82 100644
--- a/samba/filepropertiesplugin/authhelper.cpp
+++ b/samba/filepropertiesplugin/authhelper.cpp
@@ -1,16 +1,24 @@
 /*
     SPDX-License-Identifier: GPL-2.0-only OR GPL-3.0-only OR LicenseRef-KDE-Accepted-GPL
-    SPDX-FileCopyrightText: 2020 Harald Sitter <sitter@kde.org>
+    SPDX-FileCopyrightText: 2020-2021 Harald Sitter <sitter@kde.org>
 */
 
 #include "authhelper.h"
 
 #include <QProcess>
+#include <QRegularExpression>
+
+static bool isValidUserName(const QString &name)
+{
+    // https://systemd.io/USER_NAMES/
+    static QRegularExpression expr(QStringLiteral("^[a-z_][a-z0-9_-]*$"));
+    return expr.match(name).hasMatch();
+}
 
 ActionReply AuthHelper::isuserknown(const QVariantMap &args)
 {
     const auto username = args.value(QStringLiteral("username")).toString();
-    if (username.isEmpty()) {
+    if (!isValidUserName(username)) {
         return ActionReply::HelperErrorReply();
     }
 
@@ -35,7 +43,7 @@ ActionReply AuthHelper::createuser(const QVariantMap &args)
 {
     const auto username = args.value(QStringLiteral("username")).toString();
     const auto password = args.value(QStringLiteral("password")).toString();
-    if (username.isEmpty() || password.isEmpty()) {
+    if (!isValidUserName(username) || password.isEmpty()) {
         return ActionReply::HelperErrorReply();
     }
 
@@ -73,7 +81,7 @@ ActionReply AuthHelper::addtogroup(const QVariantMap &args)
 {
     const auto user = args.value(QStringLiteral("user")).toString();
     const auto group = args.value(QStringLiteral("group")).toString();
-    if (user.isEmpty() || group.isEmpty()) {
+    if (!isValidUserName(user) || !isValidUserName(group)) {
         return ActionReply::HelperErrorReply();
     }
     // Harden against some input abuse.
-- 
2.30.1

