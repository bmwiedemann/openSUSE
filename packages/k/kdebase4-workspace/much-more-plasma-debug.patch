Index: kde-workspace-4.11.16/plasma/desktop/containments/desktop/desktop.cpp
===================================================================
--- kde-workspace-4.11.16.orig/plasma/desktop/containments/desktop/desktop.cpp
+++ kde-workspace-4.11.16/plasma/desktop/containments/desktop/desktop.cpp
@@ -53,7 +53,7 @@ DefaultDesktop::DefaultDesktop(QObject *
     resize(800, 600);
 
     setHasConfigurationInterface(true);
-    //kDebug() << "!!! loading desktop";
+    kWarning() << "!!! loading desktop";
 }
 
 DefaultDesktop::~DefaultDesktop()
@@ -130,7 +130,7 @@ void DefaultDesktop::refreshWorkingArea(
 
     Corona *c = corona();
     if (!c) {
-        //kDebug() << "no corona?!";
+        kWarning() << "no corona?!";
         m_delayedRefreshTimer->start(DELAYED_REFRESH_WAIT);
         return;
     }
@@ -139,16 +139,16 @@ void DefaultDesktop::refreshWorkingArea(
     if (screen() != -1 && screen() < c->numScreens()) {
         // we are associated with a screen, make sure not to overlap panels
         workingGeom = c->availableScreenRegion(screen()).boundingRect();
-        //kDebug() << "got" << workingGeom;
+        kWarning() << "got" << workingGeom;
         // From screen coordinates to containment coordinates
         workingGeom.translate(-c->screenGeometry(screen()).topLeft());
     } else {
         workingGeom = mapFromScene(geometry()).boundingRect();
-        //kDebug() << "defaults due to no screen; got:" << workingGeom;
+        kWarning() << "defaults due to no screen; got:" << workingGeom;
     }
 
     if (workingGeom.isValid()) {
-        //kDebug() << "!!!!!!!!!!!!! workingGeom is" << workingGeom;
+        kWarning() << "!!!!!!!!!!!!! workingGeom is" << workingGeom;
         m_refreshFails = 0;
         m_layout->setWorkingArea(workingGeom);
         m_layout->adjustPhysicalPositions();
Index: kde-workspace-4.11.16/plasma/desktop/containments/panel/panel.cpp
===================================================================
--- kde-workspace-4.11.16.orig/plasma/desktop/containments/panel/panel.cpp
+++ kde-workspace-4.11.16/plasma/desktop/containments/panel/panel.cpp
@@ -73,6 +73,7 @@ protected:
         Q_UNUSED(option)
         Q_UNUSED(widget)
 
+	kWarning() << "paint " << m_visible;
         if (!m_visible) {
             return;
         }
@@ -179,12 +180,14 @@ void Panel::backgroundChanged()
 
 void Panel::adjustLastSpace()
 {
+    kWarning() << "Panel::adjustLastSpace " << m_layout;
     if (!m_layout) {
         return;
     }
 
     bool useSpacer = true;
 
+    kWarning() << "formFactor " << formFactor();
     if (formFactor() == Plasma::Vertical) {
         foreach (Applet *applet, applets()) {
             if (applet->sizePolicy().verticalPolicy() & QSizePolicy::ExpandFlag) {
@@ -201,6 +204,7 @@ void Panel::adjustLastSpace()
         }
     }
 
+    kWarning() << "useSpacer " << useSpacer;
     if (useSpacer) {
         if (!m_lastSpace) {
             m_lastSpace = new Spacer(this);
@@ -333,6 +337,7 @@ void Panel::appletWasRemoved(Plasma::App
 
 void Panel::updateSize()
 {
+	kWarning() << "updateSze " << m_canResize << m_resizedApplets;
     if (!m_canResize || m_resizedApplets < 1) {
         m_resizedApplets = 0;
         return;
@@ -367,7 +372,7 @@ void Panel::updateSize()
         }
     }
 
-    //kDebug() << "resize to" << preferredSize() << delta << ", was" << size();
+    kWarning() << "resize to" << preferredSize() << delta << ", was" << size();
     resize(preferredSize());
 
     //for a while we won't execute updateSize() again
@@ -380,13 +385,14 @@ void Panel::updateBorders(const QRect &g
     FrameSvg::EnabledBorders enabledBorders = FrameSvg::AllBorders;
 
     int s = screen();
-    //kDebug() << loc << s << formFactor() << geometry();
+    kWarning() << loc << s << formFactor() << geometry();
 
     qreal topHeight = m_background->marginSize(Plasma::TopMargin);
     qreal bottomHeight = m_background->marginSize(Plasma::BottomMargin);
     qreal leftWidth = m_background->marginSize(Plasma::LeftMargin);
     qreal rightWidth = m_background->marginSize(Plasma::RightMargin);
 
+    kWarning() << topHeight << bottomHeight << leftWidth << rightWidth;
     //remove unwanted borders
     if (s < 0) {
         // do nothing in this case, we want all the borders
@@ -603,12 +609,12 @@ void Panel::setFormFactorFromLocation(Pl
     switch (loc) {
         case BottomEdge:
         case TopEdge:
-            //kDebug() << "setting horizontal form factor";
+            kWarning() << "setting horizontal form factor";
             setFormFactor(Plasma::Horizontal);
             break;
         case RightEdge:
         case LeftEdge:
-            //kDebug() << "setting vertical form factor";
+            kWarning() << "setting vertical form factor";
             setFormFactor(Plasma::Vertical);
             break;
         case Floating:
