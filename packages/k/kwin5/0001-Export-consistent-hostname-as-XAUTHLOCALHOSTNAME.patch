From 6c3999f106a66563e32352efc3ae483745c7d09c Mon Sep 17 00:00:00 2001
From: Fabian Vogt <fabian@ritter-vogt.de>
Date: Wed, 10 Feb 2021 21:23:40 +0100
Subject: [PATCH] Export consistent hostname as XAUTHLOCALHOSTNAME

To deal with hostname changes, FamilyWild is used for Xauthority, but for Xsm
XAUTHLOCALHOSTNAME is also set (boo#1177835, downstream patch in xtrans).
The hostname is read once on startup and then used consistently.
---
 src/xwl/xwayland.cpp | 8 +++++---
 src/xwl/xwayland.h   | 1 +
 2 files changed, 6 insertions(+), 3 deletions(-)

Index: kwin-5.17.80git.20210329T113728~72cc1daf2/src/xwl/xwayland.cpp
===================================================================
--- kwin-5.17.80git.20210329T113728~72cc1daf2.orig/src/xwl/xwayland.cpp	2021-03-30 07:04:25.529356779 +0200
+++ kwin-5.17.80git.20210329T113728~72cc1daf2/src/xwl/xwayland.cpp	2021-03-30 07:07:32.663603468 +0200
@@ -52,6 +52,7 @@
 Xwayland::Xwayland(ApplicationWaylandAbstract *app, QObject *parent)
     : XwaylandInterface(parent)
     , m_app(app)
+    , m_hostname(QHostInfo::localHostName().toUtf8())
 {
     m_resetCrashCountTimer = new QTimer(this);
     m_resetCrashCountTimer->setSingleShot(true);
@@ -97,7 +98,7 @@
     return cookie;
 }
 
-static bool generateXauthorityFile(int display, QTemporaryFile *authorityFile)
+static bool generateXauthorityFile(int display, QTemporaryFile *authorityFile, const QByteArray &hostname)
 {
     const QString runtimeDirectory = QStandardPaths::writableLocation(QStandardPaths::RuntimeLocation);
 
@@ -106,7 +107,6 @@
         return false;
     }
 
-    const QByteArray hostname = QHostInfo::localHostName().toUtf8();
     const QByteArray displayName = QByteArray::number(display);
     const QByteArray name = QByteArrayLiteral("MIT-MAGIC-COOKIE-1");
     const QByteArray cookie = generateXauthorityCookie();
@@ -142,7 +142,7 @@
     }
 
     if (!qEnvironmentVariableIsSet("KWIN_WAYLAND_NO_XAUTHORITY")) {
-        if (!generateXauthorityFile(socket->display(), &m_authorityFile)) {
+        if (!generateXauthorityFile(socket->display(), &m_authorityFile, m_hostname)) {
             qCWarning(KWIN_XWL) << "Failed to create an Xauthority file";
             emit errorOccurred();
             return;
@@ -441,6 +441,7 @@
     qputenv("DISPLAY", displayName);
     if (m_authorityFile.isOpen()) {
         qputenv("XAUTHORITY", m_authorityFile.fileName().toUtf8());
+        qputenv("XAUTHLOCALHOSTNAME", m_hostname);
     }
 
     // create selection owner for WM_S0 - magic X display number expected by XWayland
Index: kwin-5.17.80git.20210329T113728~72cc1daf2/src/xwl/xwayland.h
===================================================================
--- kwin-5.17.80git.20210329T113728~72cc1daf2.orig/src/xwl/xwayland.h	2021-03-30 07:04:25.529356779 +0200
+++ kwin-5.17.80git.20210329T113728~72cc1daf2/src/xwl/xwayland.h	2021-03-30 07:04:28.752150965 +0200
@@ -113,6 +113,7 @@
     QScopedPointer<KSelectionOwner> m_selectionOwner;
     QTemporaryFile m_authorityFile;
     QScopedPointer<XwaylandSocket> m_socket;
+    QByteArray m_hostname;
     int m_crashCount = 0;
 
     Q_DISABLE_COPY(Xwayland)
