From 94f43c59104f54cdc4e50b35ee420035977ea587 Mon Sep 17 00:00:00 2001
From: Fabian Vogt <fabian@ritter-vogt.de>
Date: Thu, 24 Aug 2017 09:32:10 +0200
Subject: [PATCH] Disable KAuth integration

The security team does not want this in openSUSE, as it is an "insane functionality"
and an "abuse of the privileged DBUS functionality." (boo#1033055).
I disagree, but that does not help much.
---
 src/CMakeLists.txt            | 8 --------
 src/buffer/katetextbuffer.cpp | 3 +--
 2 files changed, 1 insertion(+), 10 deletions(-)

Index: ktexteditor-5.62.0git.20220101T121918~6bf059d3/src/CMakeLists.txt
===================================================================
--- ktexteditor-5.62.0git.20220101T121918~6bf059d3.orig/src/CMakeLists.txt
+++ ktexteditor-5.62.0git.20220101T121918~6bf059d3/src/CMakeLists.txt
@@ -395,15 +395,6 @@ include(ECMGeneratePriFile)
 ecm_generate_pri_file(BASE_NAME KTextEditor LIB_NAME KF5TextEditor DEPS "KParts" FILENAME_VAR PRI_FILENAME INCLUDE_INSTALL_DIR ${KDE_INSTALL_INCLUDEDIR_KF}/KTextEditor)
 install(FILES ${PRI_FILENAME} DESTINATION ${ECM_MKSPECS_INSTALL_DIR})
 
-
-add_executable(kauth_ktexteditor_helper buffer/katesecuretextbuffer.cpp)
-target_link_libraries(kauth_ktexteditor_helper
-  KF5::AuthCore
-)
-install(TARGETS kauth_ktexteditor_helper DESTINATION ${KAUTH_HELPER_INSTALL_DIR} )
-kauth_install_helper_files(kauth_ktexteditor_helper org.kde.ktexteditor.katetextbuffer root)
-kauth_install_actions(org.kde.ktexteditor.katetextbuffer buffer/org.kde.ktexteditor.katetextbuffer.actions)
-
 # add part
 add_subdirectory(part)
 
Index: ktexteditor-5.62.0git.20220101T121918~6bf059d3/src/buffer/katetextbuffer.cpp
===================================================================
--- ktexteditor-5.62.0git.20220101T121918~6bf059d3.orig/src/buffer/katetextbuffer.cpp
+++ ktexteditor-5.62.0git.20220101T121918~6bf059d3/src/buffer/katetextbuffer.cpp
@@ -818,7 +818,7 @@ bool TextBuffer::saveBuffer(const QStrin
 
 TextBuffer::SaveResult TextBuffer::saveBufferUnprivileged(const QString &filename)
 {
-    if (m_alwaysUseKAuthForSave) {
+    if (0 && m_alwaysUseKAuthForSave) {
         // unit-testing mode, simulate we need privileges
         return SaveResult::MissingPermissions;
     }
