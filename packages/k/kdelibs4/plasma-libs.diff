--- plasma/containment.cpp	2012-10-12 14:26:42.586367366 +0200
+++ plasma/containment.cpp	2012-10-12 20:54:32.890230374 +0200
@@ -140,6 +140,18 @@
     setBackgroundHints(NoBackground);
 }
 
+Containment::Containment(QObject *parent, const QVariantList &args, bool showToolBox)
+    : Applet(parent, args),
+      d(new ContainmentPrivate(this))
+{
+    // WARNING: do not access config() OR globalConfig() in this method!
+    //          that requires a scene, which is not available at this point
+    setPos(0, 0);
+    setBackgroundHints(NoBackground);
+    setHasConfigurationInterface(false);
+    d->showToolBox=showToolBox;
+}
+
 Containment::~Containment()
 {
     // Applet touches our dptr if we are a containment and is the superclass (think of dtors)
--- plasma/containment.h	2012-10-12 14:26:42.587367367 +0200
+++ plasma/containment.h	2012-10-12 20:54:32.890230374 +0200
@@ -128,6 +128,8 @@
          */
         Containment(QObject *parent, const QVariantList &args);
 
+        Containment(QObject *parent, const QVariantList &args, bool showToolBox);
+
         ~Containment();
 
         /**
--- plasma/private/containment_p.h	2012-10-12 14:26:42.704367433 +0200
+++ plasma/private/containment_p.h	2012-10-12 20:54:32.891230388 +0200
@@ -60,6 +60,7 @@
           type(Containment::NoContainmentType),
           showDropZoneDelayTimer(0),
           drawWallpaper(true),
+          showToolBox(true),
           dropZoneStarted(false),
           containmentActionsSource(Global)
     {
@@ -187,6 +188,7 @@
     QHash<KJob*, KMenu*> dropMenus;
     QTimer *showDropZoneDelayTimer;
     bool drawWallpaper : 1;
+    bool showToolBox : 1;
     bool dropZoneStarted : 1;
 
     enum ContainmentActionsSource {
--- plasma/theme.cpp	2012-10-12 14:26:42.887367524 +0200
+++ plasma/theme.cpp	2012-10-12 20:54:32.892230398 +0200
@@ -80,7 +80,6 @@
           colorScheme(QPalette::Active, KColorScheme::Window, KSharedConfigPtr(0)),
           buttonColorScheme(QPalette::Active, KColorScheme::Button, KSharedConfigPtr(0)),
           viewColorScheme(QPalette::Active, KColorScheme::View, KSharedConfigPtr(0)),
-          defaultWallpaperTheme(DEFAULT_WALLPAPER_THEME),
           defaultWallpaperSuffix(DEFAULT_WALLPAPER_SUFFIX),
           defaultWallpaperWidth(DEFAULT_WALLPAPER_WIDTH),
           defaultWallpaperHeight(DEFAULT_WALLPAPER_HEIGHT),
@@ -108,6 +107,10 @@
         updateNotificationTimer->setInterval(500);
         QObject::connect(updateNotificationTimer, SIGNAL(timeout()), q, SLOT(notifyOfChanged()));
 
+        KSharedConfigPtr defaultconfig = KSharedConfig::openConfig("plasma-desktoprc");
+        KConfigGroup group = KConfigGroup(defaultconfig, "Defaults");
+        defaultWallpaperTheme = group.readEntry("wallpaper", DEFAULT_WALLPAPER_THEME);
+
         if (QPixmap::defaultDepth() > 8) {
             QObject::connect(KWindowSystem::self(), SIGNAL(compositingChanged(bool)), q, SLOT(compositingChanged(bool)));
 #ifdef Q_WS_X11
@@ -564,7 +567,10 @@
         cg = config();
     }
 
-    defaultWallpaperTheme = cg.readEntry("defaultWallpaperTheme", DEFAULT_WALLPAPER_THEME);
+    KSharedConfigPtr defaultconfig = KSharedConfig::openConfig("plasma-desktoprc");
+    KConfigGroup group = KConfigGroup(defaultconfig, "Defaults");
+    defaultWallpaperTheme = cg.readEntry("defaultWallpaperTheme", group.readEntry("wallpaper", DEFAULT_WALLPAPER_THEME));
+
     defaultWallpaperSuffix = cg.readEntry("defaultFileSuffix", DEFAULT_WALLPAPER_SUFFIX);
     defaultWallpaperWidth = cg.readEntry("defaultWidth", DEFAULT_WALLPAPER_WIDTH);
     defaultWallpaperHeight = cg.readEntry("defaultHeight", DEFAULT_WALLPAPER_HEIGHT);
@@ -814,6 +820,10 @@
         }
     }
 
+    if (!QFile::exists(fullPath)) {
+        fullPath = KStandardDirs::locate("wallpaper", d->defaultWallpaperTheme);
+    }
+
     return fullPath;
 }
 
