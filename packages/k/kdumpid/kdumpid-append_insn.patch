From: Petr Tesarik <ptesarik@suse.com>
Date: Tue Aug 16 10:39:16 2022 +0200
Subject: Split off append_insn() from instruction printers
Upstream: yes
Git-commit: 222de76bc6d1dc7acfb094980d266834a6672fbc

This allows to reuse the code.

Signed-off-by: Petr Tesarik <ptesarik@suse.com>

diff --git a/ppc.c b/ppc.c
index 5a496c4..4a321c4 100644
--- a/ppc.c
+++ b/ppc.c
@@ -40,21 +40,27 @@ static const char sep[] = ", \t\r\n";
 
 static disassembler_ftype print_insn;
 
-static int
-disas_fn(void *data, const char *fmt, ...)
+static void
+append_insn(void *data, const char *fmt, va_list va)
 {
 	struct disas_priv *priv = data;
-	va_list va;
 	size_t remain;
 	int len;
 
-	va_start(va, fmt);
-
 	remain = priv->insn + sizeof(priv->insn) - priv->iptr;
 	len = vsnprintf(priv->iptr, remain, fmt, va);
 	if (len > 0)
 		priv->iptr += len;
 
+}
+
+static int
+disas_fn(void *data, const char *fmt, ...)
+{
+	va_list va;
+
+	va_start(va, fmt);
+	append_insn(data, fmt, va);
 	va_end(va);
 
 	return 0;
diff --git a/ppc64.c b/ppc64.c
index 3d421ac..1542b80 100644
--- a/ppc64.c
+++ b/ppc64.c
@@ -40,21 +40,26 @@ static const char sep[] = ", \t\r\n";
 
 static disassembler_ftype print_insn;
 
-static int
-disas_fn(void *data, const char *fmt, ...)
+static void
+append_insn(void *data, const char *fmt, va_list va)
 {
 	struct disas_priv *priv = data;
-	va_list va;
 	size_t remain;
 	int len;
 
-	va_start(va, fmt);
-
 	remain = priv->insn + sizeof(priv->insn) - priv->iptr;
 	len = vsnprintf(priv->iptr, remain, fmt, va);
 	if (len > 0)
 		priv->iptr += len;
+}
 
+static int
+disas_fn(void *data, const char *fmt, ...)
+{
+	va_list va;
+
+	va_start(va, fmt);
+	append_insn(data, fmt, va);
 	va_end(va);
 
 	return 0;
diff --git a/s390.c b/s390.c
index bef4e79..15db888 100644
--- a/s390.c
+++ b/s390.c
@@ -45,21 +45,26 @@ static const char sep[] = ", \t\r\n";
 
 static disassembler_ftype print_insn;
 
-static int
-disas_fn(void *data, const char *fmt, ...)
+static void
+append_insn(void *data, const char *fmt, va_list va)
 {
 	struct disas_priv *priv = data;
-	va_list va;
 	size_t remain;
 	int len;
 
-	va_start(va, fmt);
-
 	remain = priv->insn + sizeof(priv->insn) - priv->iptr;
 	len = vsnprintf(priv->iptr, remain, fmt, va);
 	if (len > 0)
 		priv->iptr += len;
+}
 
+static int
+disas_fn(void *data, const char *fmt, ...)
+{
+	va_list va;
+
+	va_start(va, fmt);
+	append_insn(data, fmt, va);
 	va_end(va);
 
 	return 0;
diff --git a/x86.c b/x86.c
index ac9bec6..0f69c76 100644
--- a/x86.c
+++ b/x86.c
@@ -37,21 +37,26 @@ static const char sep[] = ", \t\r\n";
 
 static disassembler_ftype print_insn;
 
-static int
-disas_fn(void *data, const char *fmt, ...)
+static void
+append_insn(void *data, const char *fmt, va_list va)
 {
 	struct disas_priv *priv = data;
-	va_list va;
 	size_t remain;
 	int len;
 
-	va_start(va, fmt);
-
 	remain = priv->insn + sizeof(priv->insn) - priv->iptr;
 	len = vsnprintf(priv->iptr, remain, fmt, va);
 	if (len > 0)
 		priv->iptr += len;
+}
 
+static int
+disas_fn(void *data, const char *fmt, ...)
+{
+	va_list va;
+
+	va_start(va, fmt);
+	append_insn(data, fmt, va);
 	va_end(va);
 
 	return 0;
