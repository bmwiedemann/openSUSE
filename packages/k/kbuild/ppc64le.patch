---
 kBuild/env.sh     |    3 +++
 kBuild/header.kmk |    6 +++---
 src/lib/k/kDefs.h |   16 ++++++++++------
 3 files changed, 16 insertions(+), 9 deletions(-)

Index: kbuild-0.1.9998svn3110/kBuild/env.sh
===================================================================
--- kbuild-0.1.9998svn3110.orig/kBuild/env.sh
+++ kbuild-0.1.9998svn3110/kBuild/env.sh
@@ -368,6 +368,9 @@ if test -z "$KBUILD_HOST_ARCH"; then
         m68k)
             KBUILD_HOST_ARCH='m68k'
             ;;
+        ppc64le|powerpc64le)
+            KBUILD_HOST_ARCH='ppc64le'
+            ;;
         mips32|mips)
             KBUILD_HOST_ARCH='mips32'
             ;;
Index: kbuild-0.1.9998svn3110/kBuild/header.kmk
===================================================================
--- kbuild-0.1.9998svn3110.orig/kBuild/header.kmk
+++ kbuild-0.1.9998svn3110/kBuild/header.kmk
@@ -197,8 +197,8 @@ KBUILD_BLD_TYPES := release profile debu
 # build types. (PORTME)
 #
 KBUILD_OSES      := darwin dos dragonfly freebsd gnuhurd gnukfbsd gnuknbsd haiku l4 linux netbsd nt openbsd os2 solaris win os-agnostic
-KBUILD_ARCHES    := x86 amd64 noarch alpha arm32 arm64 hppa32 hppa64 ia64 m68k mips32 mips64 ppc32 ppc64 s390 s390x sh32 sh64 sparc32 sparc64
-KBUILD_ARCHES_64 := amd64 alpha arm64 hppa64 ia64 mips64 ppc64 s390x sh64 sparc64
+KBUILD_ARCHES    := x86 amd64 noarch alpha arm32 arm64 hppa32 hppa64 ia64 m68k ppc64le mips32 mips64 ppc32 ppc64 s390 s390x sh32 sh64 sparc32 sparc64
+KBUILD_ARCHES_64 := amd64 alpha arm64 hppa64 ia64 ppc64le mips64 ppc64 s390x sh64 sparc64
 KBUILD_ARCHES_32 := x86 arm32 hppa32 m68k mips32 ppc32 s390 sh32 sparc32
 
 
@@ -515,7 +515,7 @@ endif
 KBUILD_DEVTOOLS_TRG ?= $(KBUILD_DEVTOOLS)/$(KBUILD_TARGET).$(KBUILD_TARGET_ARCH)
 KBUILD_DEVTOOLS_HST ?= $(KBUILD_DEVTOOLS)/$(KBUILD_HOST).$(KBUILD_HOST_ARCH)
 
-if1of ($(KBUILD_TARGET_ARCH), amd64 hppa64 mips64 ppc64 s390x sparc64)
+if1of ($(KBUILD_TARGET_ARCH), amd64 hppa64 mips64 ppc64 ppc64le s390x sparc64)
  ifeq ($(KBUILD_TARGET_ARCH),amd64)
   KBUILD_DEVTOOLS_TRG_ALT ?= $(KBUILD_DEVTOOLS)/$(KBUILD_TARGET).x86
  else ifeq ($(KBUILD_TARGET_ARCH),hppa64)
Index: kbuild-0.1.9998svn3110/src/lib/kStuff/include/k/kDefs.h
===================================================================
--- kbuild-0.1.9998svn3110.orig/src/lib/kStuff/include/k/kDefs.h
+++ kbuild-0.1.9998svn3110/src/lib/kStuff/include/k/kDefs.h
@@ -172,20 +172,22 @@
 #define K_ARCH_POWERPC_32       ( 9 | K_ARCH_BIT_32 | K_ARCH_END_BI)
 /** 64-bit PowerPC. */
 #define K_ARCH_POWERPC_64       ( 9 | K_ARCH_BIT_64 | K_ARCH_END_BI)
+/** 64-bit PowerPC. */
+#define K_ARCH_POWERPC_64LE     (15 | K_ARCH_BIT_64 | K_ARCH_END_LITTLE)
 /** 32(31)-bit S390. */
-#define K_ARCH_S390_32          (10 | K_ARCH_BIT_32 | K_ARCH_END_BIG)
+#define K_ARCH_S390_32          (16 | K_ARCH_BIT_32 | K_ARCH_END_BIG)
 /** 64-bit S390. */
-#define K_ARCH_S390_64          (10 | K_ARCH_BIT_64 | K_ARCH_END_BIG)
+#define K_ARCH_S390_64          (17 | K_ARCH_BIT_64 | K_ARCH_END_BIG)
 /** 32-bit SuperH. */
 #define K_ARCH_SH_32            (11 | K_ARCH_BIT_32 | K_ARCH_END_BI)
 /** 64-bit SuperH. */
 #define K_ARCH_SH_64            (11 | K_ARCH_BIT_64 | K_ARCH_END_BI)
 /** 32-bit SPARC. */
-#define K_ARCH_SPARC_32         (12 | K_ARCH_BIT_32 | K_ARCH_END_BIG)
+#define K_ARCH_SPARC_32         (18 | K_ARCH_BIT_32 | K_ARCH_END_BIG)
 /** 64-bit SPARC. */
-#define K_ARCH_SPARC_64         (12 | K_ARCH_BIT_64 | K_ARCH_END_BI)
+#define K_ARCH_SPARC_64         (19 | K_ARCH_BIT_64 | K_ARCH_END_BI)
 /** The end of the valid architecture values (exclusive). */
-#define K_ARCH_MAX              (12+1)
+#define K_ARCH_MAX              (20)
 /** @} */
 
 
@@ -216,8 +218,10 @@
 #  define K_ARCH    K_ARCH_MIPS_64
 # elif defined(__mips__)
 #  define K_ARCH    K_ARCH_MIPS_32
-# elif defined(__powerpc64__) || defined(__ppc64__) || defined(__PPC64__)
+# elif (defined(__powerpc64__) && defined(__BIG_ENDIAN__))|| defined(__ppc64__) || defined(__PPC64__)
 #  define K_ARCH    K_ARCH_POWERPC_64
+# elif (defined(__powerpc64__) && defined(__LITTLE_ENDIAN__))
+#  define K_ARCH    K_ARCH_POWERPC_64LE
 # elif defined(__powerpc__) || defined(__ppc__) || defined(__PPC__)
 #  define K_ARCH    K_ARCH_POWERPC_32
 # elif defined(__sparcv9__) || defined(__sparcv9)
