Index: addfname.c
===================================================================
--- addfname.c.orig
+++ addfname.c
@@ -50,7 +50,7 @@ unsigned version_no;
    if (lastname >= sz_fentry - 3) {
 		sz_fentry += FENTRY_BSIZE;
 		fentry = (struct item **) 
-			erealloc(fentry, sizeof(struct item *) * sz_fentry);
+			erealloc((void*)fentry, sizeof(struct item *) * sz_fentry);
 	}
 
    fentry[lastname]->fname = str_dup(fname);
Index: comment.c
===================================================================
--- comment.c.orig
+++ comment.c
@@ -14,6 +14,7 @@ Copyright (C) 1986, 1987 Rahul Dhesi --
 
 /* buffer size for any one comment line */
 #define  COMMENT_LINE_SIZE 76
+#include "zoo.h"
 
 #define  MAX_COMMENT_SIZE  32767
 #include "zooio.h"
@@ -23,7 +24,6 @@ Copyright (C) 1986, 1987 Rahul Dhesi --
 #include <signal.h>
 #endif
 
-#include "zoo.h"
 #include "zoofns.h"
 #include "errors.i"
 
Index: zooio.h
===================================================================
--- zooio.h.orig
+++ zooio.h
@@ -58,6 +58,9 @@ ZOOFILE zoocreate PARMS((char *));
 int zooclose PARMS((ZOOFILE));
 int zootrunc PARMS((ZOOFILE));
 
+int isadir PARMS((ZOOFILE file));
+
+
 char *choosefname PARMS((struct direntry *));
 char *fullpath PARMS((struct direntry *));
 int frd_zooh PARMS((struct zoo_header *, ZOOFILE));
@@ -68,3 +71,5 @@ int readdir PARMS((struct direntry *, ZO
 void rwheader PARMS((struct zoo_header *, ZOOFILE, int));
 void newdir PARMS((struct direntry *));
 void writedir PARMS((struct direntry *, ZOOFILE));
+int isfdir PARMS((char *this_path));
+
Index: nixtime.i
===================================================================
--- nixtime.i.orig
+++ nixtime.i
@@ -52,9 +52,9 @@ unsigned int date, time;
 {
 	long mstonix();
 	long gettz();
-	long utimbuf[2];
-	utimbuf[0] = utimbuf[1] = gettz() + mstonix (date, time);
-	return (utime (path, utimbuf));
+	struct utimbuf utimbuf;
+	utimbuf.actime = utimbuf.modtime = gettz() + mstonix (date, time);
+	return (utime (path, &utimbuf));
 }
 
 /****************
Index: zoo.c
===================================================================
--- zoo.c.orig
+++ zoo.c
@@ -43,6 +43,7 @@ int next_arg = FIRST_ARG; /* filenames s
 int arg_count;          /* count of arguments supplied to program */
 char **arg_vector;      /* vector of arguments supplied to program */
 
+int
 main(argc,argv)
 register int argc;
 register char **argv;
Index: zoofilt.c
===================================================================
--- zoofilt.c.orig
+++ zoofilt.c
@@ -41,8 +41,6 @@ char *option;
 	unsigned int filetag;							/* tag stored in input */
 	int stat1, stat2, stat3;						/* status codes */
 	int use_lzh = 0;									/* use lzh instead */
-	extern lzc(), lzh_encode();					/* possible encoders */
-	extern lzd(), lzh_decode();					/* and decoders */
 
 	while (*++option) {
 		switch (*option) {
Index: zooext.c
===================================================================
--- zooext.c.orig
+++ zooext.c
@@ -636,7 +636,7 @@ ZOOFILE file;
 
 /* Ctrl_c() is called if ^C is hit while a file is being extracted.
    It closes the files, deletes it, and exits. */
-T_SIGNAL ctrl_c()
+T_SIGNAL ctrl_c(int x)
 {
 #ifndef NOSIGNAL
    signal (SIGINT, SIG_IGN);     /* ignore any more */
Index: zoopack.c
===================================================================
--- zoopack.c.orig
+++ zoopack.c
@@ -23,9 +23,9 @@ Copyright (C) 1986, 1987 Rahul Dhesi --
 
 
 #include "portable.h"
+#include "zoo.h"
 #include "zooio.h"
 #include "various.h"
-#include "zoo.h"
 #include "zoofns.h"
 #include "errors.i"
 #ifndef NOSIGNAL
@@ -399,7 +399,7 @@ OSs might not allow renaming of read-onl
 
 /* handle_break() */
 /* Sets break_hit to 1 when called */
-T_SIGNAL handle_break()
+T_SIGNAL handle_break(int x)
 {
 #ifndef NOSIGNAL
    signal (SIGINT, SIG_IGN);     /* ignore future control ^Cs for now */
Index: zoofns.h
===================================================================
--- zoofns.h.orig
+++ zoofns.h
@@ -42,12 +42,12 @@ char *nextfile PARMS ((int, char *, int)
 int cfactor PARMS ((long, long));
 int chname PARMS ((char *, char *));
 int cmpnum PARMS ((unsigned int, unsigned int, unsigned int, unsigned int));
-T_SIGNAL ctrl_c PARMS ((void));
+T_SIGNAL ctrl_c PARMS ((int));
 int exists PARMS ((char *));
 int getfile PARMS ((ZOOFILE, ZOOFILE, long, int));
 int getutime PARMS ((char *, unsigned *, unsigned *));
 int gettime PARMS ((ZOOFILE, unsigned *, unsigned *));
-T_SIGNAL handle_break PARMS ((void));
+T_SIGNAL handle_break PARMS ((int));
 
 #ifdef USE_ASCII
 int isupper PARMS ((int));
Index: zoolist.c
===================================================================
--- zoolist.c.orig
+++ zoolist.c
@@ -19,6 +19,7 @@ Copyright (C) 1986, 1987 Rahul Dhesi --
 (C) Copyright 1988 Rahul Dhesi -- All rights reserved
 */
 #include "options.h"
+#include "various.h"
 #include "portable.h"
 #include "zoomem.h"  /* to get ZOOCOUNT */
 
@@ -322,7 +323,7 @@ if (fiz_ofs != 0L) {                /* i
 				int next_col;
 #if 0
             if ( (quiet && !first_ever || !first_time) && one_col)
-               fputchar ('\n');
+               fputc ('\n', stdout);
 				first_ever = 0;
 #endif
 				/* If we are showing directories, whichname already contains the
@@ -458,7 +459,7 @@ if (fiz_ofs != 0L) {                /* i
 	   	if (del_count || (show_gen && zoo_header.type > 0))
 	      	printf ("\n-----\n");
 			else
-	      	fputchar ('\n');
+	      	fputc ('\n', stdout);
 		}
 		if (del_count)
 			printf ("%d deleted.\n", del_count);
@@ -535,7 +536,7 @@ if (talking && show_name) {
 			printf ("\n");
    } 
 } else if (fast && quiet)
-	fputchar ('\n');
+	fputc ('\n', stdout);
 	
 
 if (!file_count)
Index: fiz.c
===================================================================
--- fiz.c.orig
+++ fiz.c
@@ -14,16 +14,17 @@ offsets.  Zoo 1.41 and later may then be
 file by supplying the offset of the file.
 */
 
+#include "zoo.h"
 #include "options.h"
-#include "zooio.h"
 #include "various.h"
-#include "zoofns.h"
 #include "portable.h"         /* I/O definitions */
-#include "zoo.h"
+#include "zooio.h"
+#include "zoofns.h"
 
 void prtctrl ();
 void prtch ();
 
+int
 main(argc,argv)
 register int argc;
 register char **argv;
