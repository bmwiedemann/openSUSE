<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>d1695f455483d258ee78e0c0fa67a923</srcmd5>
    <version>1.3.1</version>
    <time>1504521015</time>
    <user>dimstar_suse</user>
    <comment>Resubmitting</comment>
    <requestid>519400</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>eadb2111b49a9934fad6dc40d2642ee6</srcmd5>
    <version>1.3.2</version>
    <time>1509461014</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>537467</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>58050d18b5d67f6a8474383153024adf</srcmd5>
    <version>1.3.3</version>
    <time>1513941626</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.3.3
  * perf: improved zstd_opt strategy (levels 16-19)
  * fix : bug #944 : multithreading with shared ditionary and
    large data, reported by @gsliepen
  * cli : fix : content size written in header by default
  * cli : fix : improved LZ4 format support, by @felixhandte
  * cli : new : hidden command -b -S, to benchmark multiple files
    and generate one result per file
  * api : change : when setting pledgedSrcSize, use
    ZSTD_CONTENTSIZE_UNKNOWN macro value to mean &quot;unknown&quot;
  * api : fix : support large skippable frames, by @terrelln
  * api : fix : re-using context could result in suboptimal
    block size in some corner case scenarios
  * api : fix : streaming interface was adding a useless
    3-bytes null block to small frames</comment>
    <requestid>559047</requestid>
  </revision>
  <revision rev="4" vrev="2">
    <srcmd5>c7da704b4948c883aa7a866cd26e7ef7</srcmd5>
    <version>1.3.3</version>
    <time>1518426581</time>
    <user>dimstar_suse</user>
    <comment>- build the static library (depency for btrfsprogs-static)
</comment>
    <requestid>574132</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>53749266342844c3ef7823fd176ebe25</srcmd5>
    <version>1.3.4</version>
    <time>1522404108</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.3.4
  * perf: faster speed (especially decoding speed) on recent cpus
    (haswell+)
  * perf: much better performance associating --long with
    multi-threading
  * perf: better compression at levels 13-15
  * cli : asynchronous compression by default, for faster
    experience (use --single-thread for former behavior)
  * cli : smoother status report in multi-threading mode
  * cli : added command --fast=#, for faster compression modes
  * cli : fix crash when not overwriting existing files
  * api : `nbThreads` becomes `nbWorkers` : 1 triggers
    asynchronous mode
  * api : compression levels can be negative, for even more speed
  * api : ZSTD_getFrameProgression() : get precise progress
    status of ZSTDMT anytime
  * api : ZSTDMT can accept new compression parameters during
    compression
  * api : implemented all advanced dictionary decompression prototypes</comment>
    <requestid>592074</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>15c1589883c933f120c76f6ac29d2ece</srcmd5>
    <version>1.3.4</version>
    <time>1527277054</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>611888</requestid>
  </revision>
  <revision rev="7" vrev="3">
    <srcmd5>ca83b2431cbf4dfced195f394ce1daec</srcmd5>
    <version>1.3.4</version>
    <time>1529665928</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>617021</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>3b9a0d4dd1619e051fc0da6c0bd045ee</srcmd5>
    <version>1.3.5</version>
    <time>1530741248</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>620417</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>a8c393a8c388a49649936ba84c216c16</srcmd5>
    <version>1.3.7</version>
    <time>1541509489</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>644210</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>0bf3542b2b1f85429be35243a2405906</srcmd5>
    <version>1.3.8</version>
    <time>1547211667</time>
    <user>dimstar_suse</user>
    <comment>zstd 1.3.8 (forwarded request 663038 from AndreasStieger)</comment>
    <requestid>663039</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>c0782f6135dba82dedb6b576da68362a</srcmd5>
    <version>1.4.0</version>
    <time>1556915800</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>698236</requestid>
  </revision>
  <revision rev="12" vrev="2">
    <srcmd5>90b6797f539232fcb149df21ec1af7d5</srcmd5>
    <version>1.4.0</version>
    <time>1559727456</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>707021</requestid>
  </revision>
  <revision rev="13" vrev="3">
    <srcmd5>129abc9162599fd870636a547ce49d64</srcmd5>
    <version>1.4.0</version>
    <time>1560862472</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>709974</requestid>
  </revision>
  <revision rev="14" vrev="4">
    <srcmd5>a82e2da93ae267d968cdb4b4ad6da467</srcmd5>
    <version>1.4.0</version>
    <time>1563017690</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>714596</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>87f434fd687148bde77ee9207302b539</srcmd5>
    <version>1.4.1</version>
    <time>1564413714</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>717542</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>46422335e0a366621c3beb46bf6a43fd</srcmd5>
    <version>1.4.2</version>
    <time>1564993826</time>
    <user>dimstar_suse</user>
    <comment>add old changelog for a 15.0 update:  * fix race condition in one-pass compression functions that could allow out of bounds write (CVE-2019-11922, boo#1142941)

- Add disk _constraints to fix ppc64le build
- Update to version 1.4.2:
  * bug: Fix bug in zstd-0.5 decoder by @terrelln (#1696)
  * bug: Fix seekable decompression in-memory API by @iburinoc (#1695)
  * bug: Close minor memory leak in CLI by @LeeYoung624 (#1701)
  * misc: Validate blocks are smaller than size limit by @vivekmig (#1685)</comment>
    <requestid>720572</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>e7695a9481e7d1e44208b9939675523e</srcmd5>
    <version>1.4.3</version>
    <time>1567848207</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>724746</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>6246958043eabd07270a6d01807dba34</srcmd5>
    <version>1.4.4</version>
    <time>1573473440</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>745725</requestid>
  </revision>
</revisionlist>
