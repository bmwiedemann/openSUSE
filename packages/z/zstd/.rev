<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>d1695f455483d258ee78e0c0fa67a923</srcmd5>
    <version>1.3.1</version>
    <time>1504521015</time>
    <user>dimstar_suse</user>
    <comment>Resubmitting</comment>
    <requestid>519400</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>eadb2111b49a9934fad6dc40d2642ee6</srcmd5>
    <version>1.3.2</version>
    <time>1509461014</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>537467</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>58050d18b5d67f6a8474383153024adf</srcmd5>
    <version>1.3.3</version>
    <time>1513941626</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.3.3
  * perf: improved zstd_opt strategy (levels 16-19)
  * fix : bug #944 : multithreading with shared ditionary and
    large data, reported by @gsliepen
  * cli : fix : content size written in header by default
  * cli : fix : improved LZ4 format support, by @felixhandte
  * cli : new : hidden command -b -S, to benchmark multiple files
    and generate one result per file
  * api : change : when setting pledgedSrcSize, use
    ZSTD_CONTENTSIZE_UNKNOWN macro value to mean &quot;unknown&quot;
  * api : fix : support large skippable frames, by @terrelln
  * api : fix : re-using context could result in suboptimal
    block size in some corner case scenarios
  * api : fix : streaming interface was adding a useless
    3-bytes null block to small frames</comment>
    <requestid>559047</requestid>
  </revision>
  <revision rev="4" vrev="2">
    <srcmd5>c7da704b4948c883aa7a866cd26e7ef7</srcmd5>
    <version>1.3.3</version>
    <time>1518426581</time>
    <user>dimstar_suse</user>
    <comment>- build the static library (depency for btrfsprogs-static)
</comment>
    <requestid>574132</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>53749266342844c3ef7823fd176ebe25</srcmd5>
    <version>1.3.4</version>
    <time>1522404108</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.3.4
  * perf: faster speed (especially decoding speed) on recent cpus
    (haswell+)
  * perf: much better performance associating --long with
    multi-threading
  * perf: better compression at levels 13-15
  * cli : asynchronous compression by default, for faster
    experience (use --single-thread for former behavior)
  * cli : smoother status report in multi-threading mode
  * cli : added command --fast=#, for faster compression modes
  * cli : fix crash when not overwriting existing files
  * api : `nbThreads` becomes `nbWorkers` : 1 triggers
    asynchronous mode
  * api : compression levels can be negative, for even more speed
  * api : ZSTD_getFrameProgression() : get precise progress
    status of ZSTDMT anytime
  * api : ZSTDMT can accept new compression parameters during
    compression
  * api : implemented all advanced dictionary decompression prototypes</comment>
    <requestid>592074</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>15c1589883c933f120c76f6ac29d2ece</srcmd5>
    <version>1.3.4</version>
    <time>1527277054</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>611888</requestid>
  </revision>
  <revision rev="7" vrev="3">
    <srcmd5>ca83b2431cbf4dfced195f394ce1daec</srcmd5>
    <version>1.3.4</version>
    <time>1529665928</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>617021</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>3b9a0d4dd1619e051fc0da6c0bd045ee</srcmd5>
    <version>1.3.5</version>
    <time>1530741248</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>620417</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>a8c393a8c388a49649936ba84c216c16</srcmd5>
    <version>1.3.7</version>
    <time>1541509489</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>644210</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>0bf3542b2b1f85429be35243a2405906</srcmd5>
    <version>1.3.8</version>
    <time>1547211667</time>
    <user>dimstar_suse</user>
    <comment>zstd 1.3.8 (forwarded request 663038 from AndreasStieger)</comment>
    <requestid>663039</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>c0782f6135dba82dedb6b576da68362a</srcmd5>
    <version>1.4.0</version>
    <time>1556915800</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>698236</requestid>
  </revision>
  <revision rev="12" vrev="2">
    <srcmd5>90b6797f539232fcb149df21ec1af7d5</srcmd5>
    <version>1.4.0</version>
    <time>1559727456</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>707021</requestid>
  </revision>
  <revision rev="13" vrev="3">
    <srcmd5>129abc9162599fd870636a547ce49d64</srcmd5>
    <version>1.4.0</version>
    <time>1560862472</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>709974</requestid>
  </revision>
  <revision rev="14" vrev="4">
    <srcmd5>a82e2da93ae267d968cdb4b4ad6da467</srcmd5>
    <version>1.4.0</version>
    <time>1563017690</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>714596</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>87f434fd687148bde77ee9207302b539</srcmd5>
    <version>1.4.1</version>
    <time>1564413714</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>717542</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>46422335e0a366621c3beb46bf6a43fd</srcmd5>
    <version>1.4.2</version>
    <time>1564993826</time>
    <user>dimstar_suse</user>
    <comment>add old changelog for a 15.0 update:  * fix race condition in one-pass compression functions that could allow out of bounds write (CVE-2019-11922, boo#1142941)

- Add disk _constraints to fix ppc64le build
- Update to version 1.4.2:
  * bug: Fix bug in zstd-0.5 decoder by @terrelln (#1696)
  * bug: Fix seekable decompression in-memory API by @iburinoc (#1695)
  * bug: Close minor memory leak in CLI by @LeeYoung624 (#1701)
  * misc: Validate blocks are smaller than size limit by @vivekmig (#1685)</comment>
    <requestid>720572</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>e7695a9481e7d1e44208b9939675523e</srcmd5>
    <version>1.4.3</version>
    <time>1567848207</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>724746</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>6246958043eabd07270a6d01807dba34</srcmd5>
    <version>1.4.4</version>
    <time>1573473440</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>745725</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>693f880915db159c7700364c7ac38010</srcmd5>
    <version>1.4.5</version>
    <time>1591285834</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>808123</requestid>
  </revision>
  <revision rev="20" vrev="2">
    <srcmd5>2cb7e264bbf5a3f00e618c3cb8687bfa</srcmd5>
    <version>1.4.5</version>
    <time>1594804329</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>819625</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>542246d98defa60442647f6aa4cd144e</srcmd5>
    <version>1.4.8</version>
    <time>1610123510</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.4.8 to fix i586+s390x

- Update to version 1.4.7
  * Improved --long mode
  * --long now automatically enabled for any window size &gt;= 128MB
  * Faster decompression of small blocks
  * CLI improvements
    + accept parameter through environment variable ZSTD_NBTHREADS
    + new command --output-dir-mirror
    + more accurate warning and error messages
  * New experimental features
    + Shared Thread Pool
    + Faster Dictionary Compression
    + New Sequence Ingestion API
  * Drop upstream fix-lib-build.patch</comment>
    <requestid>856941</requestid>
  </revision>
  <revision rev="22" vrev="2">
    <srcmd5>2a5d66d774f38a18f8d629339f24500b</srcmd5>
    <version>1.4.8</version>
    <time>1612182295</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>866512</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>6ef1e2931c48bcc5150d7ded98b0f7c9</srcmd5>
    <version>1.4.9</version>
    <time>1615489602</time>
    <user>dimstar_suse</user>
    <comment>Update to version 1.4.9
  * https://github.com/facebook/zstd/releases/tag/v1.4.9
  * &gt;2x Faster Long Distance Mode
  * New Experimental Decompression Feature: ZSTD_d_refMultipleDDicts
  * bug: Use umask() to Constrain Created File Permissions
  * bug: Make Simple Single-Pass Functions Ignore Advanced Parameters
  * cli: Fix --output-dir-mirror's Rejection of ..-Containing Paths
  * cli: Allow Input From Console When -f/--force is Passed</comment>
    <requestid>876633</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>05fb229190ed517f831a11b12a349473</srcmd5>
    <version>1.5.0</version>
    <time>1621626566</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.5.0
  * https://github.com/facebook/zstd/releases/tag/v1.5.0
  * Improved Middle-Level Compression Speed
  * Improved High-Level Compression Ratio
  * Faster Decompression Speed
  * Dynamic Library Supports Multithreading by Default
- Drop zstd-1.4.9-Avoid-SIGBUS-on-armv6.patch, merged upstream

- Add zstd-1.4.9-Avoid-SIGBUS-on-armv6.patch
  to fix crashes when running armv6 userspace on armv8 64-bit kernels</comment>
    <requestid>893241</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>e8e433da8eb9ba635133c81a55cc70db</srcmd5>
    <version>1.5.1</version>
    <time>1641321446</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>943560</requestid>
  </revision>
  <revision rev="26" vrev="2">
    <srcmd5>34e76381b4e4a4a85444a16552189e6a</srcmd5>
    <version>1.5.0</version>
    <time>1641378470</time>
    <user>dimstar_suse</user>
    <comment>https://bugzilla.opensuse.org/show_bug.cgi?id=1194337</comment>
  </revision>
  <revision rev="27" vrev="2">
    <srcmd5>1355a7358b31a51c51107ba96ca2233d</srcmd5>
    <version>1.5.1</version>
    <time>1641555907</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>944059</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>8bc5c18511413b961d431cda14ad4771</srcmd5>
    <version>1.5.2</version>
    <time>1644273409</time>
    <user>dimstar_suse</user>
    <comment>now with explicit Conflicts for gzip+busybox-gzip

- enable zlib/gzip compatible backend, as zlib is significantly
  (50%-100%) faster than gzip
- add zstd-gzip compatibility subpackage which can be used
  as a drop in compatible replacement for gzip
- small spec file cleanups

- update to 1.5.2:
  * correct a performance regression
  * smaller improvements and fixes
  * See https://github.com/facebook/zstd/releases/tag/v1.5.2
- Refresh pzstd.1.patch
- Drop upstream noexecstack.patch</comment>
    <requestid>952093</requestid>
  </revision>
  <revision rev="29" vrev="2">
    <srcmd5>fb82d91485beff100ba03a21d5ad309a</srcmd5>
    <version>1.5.2</version>
    <time>1673108137</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1046687</requestid>
  </revision>
  <revision rev="30" vrev="1">
    <srcmd5>27b9890d910b7a5ed1f12f2d117b4142</srcmd5>
    <version>1.5.4</version>
    <time>1677351253</time>
    <user>dimstar_suse</user>
    <comment>zchunk is already updated to work with zstd-1.5.4

- update to 1.5.4:
  * perf: +20% faster huffman decompression for targets that
    can't compile x64 assembly
  * perf: up to +10% faster streaming compression at levels 1-2
  * perf: +4-13% for levels 5-12 by optimizing function
    generation
  * pref: +3-11% compression speed for `arm` target
  * perf: +5-30% faster dictionary compression at levels 1-4
  * perf: +10-20% cold dict compression speed by prefetching
    CDict tables
  * perf: +1% faster compression by removing a branch in
    ZSTD_fast_noDict
  * perf: Small compression ratio improvements in high
    compression mode
  * perf: small speed improvement by better detecting
    `STATIC_BMI2` for `clang`
  * perf: Improved streaming performance when
    `ZSTD_c_stableInBuffer` is set
  * cli: Asynchronous I/O for improved cli speed
  * cli: Change `zstdless` behavior to align with `zless`
  * cli: Keep original file if `-c` or `--stdout` is given
  * cli: Keep original files when result is concatenated into a
    single output with `-o`
  * cli: Preserve Permissions and Ownership of regular files
  * cli: Print zlib/lz4/lzma library versions with `-vv`
  * cli: Print checksum value for single frame files with `-lv`
  * cli: Print `dictID` when present with `-lv`
  * cli: when `stderr` is *not* the console, disable status
    updates, but preserve final summary
  * cli: support `--best` and `--no-name` in `gzip` compatibility</comment>
    <requestid>1067313</requestid>
  </revision>
  <revision rev="31" vrev="2">
    <srcmd5>a0b3841c3f3b36a89ef5708b54724440</srcmd5>
    <version>1.5.4</version>
    <time>1678634535</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1070370</requestid>
  </revision>
  <revision rev="32" vrev="1">
    <srcmd5>f6c6d8bd67c2c459216d7687c346feb7</srcmd5>
    <version>1.5.5</version>
    <time>1682434386</time>
    <user>dimstar_suse</user>
    <comment>now without cmake again

- update to 1.5.5:
  * fix: fix rare corruption bug affecting the high compression
    mode, reported by @danlark1
  * perf: improve mid-level compression speed
  * lib: deprecated bufferless block-level API (#3534) by
    @terrelln
  * cli: mmap large dictionaries to save memory, by
    @daniellerozenblit
  * cli: improve speed of --patch-from mode (~+50%) (#3545) by
    @daniellerozenblit
  * cli: improve i/o speed (~+10%) when processing lots of small
    files (#3479) by @felixhandte
  * cli: zstd no longer crashes when requested to write into
    write-protected directory (#3541) by @felixhandte
  * cli: fix decompression into block device using -o, reported
    by @georgmu
  * misc: improve seekable format ingestion speed (~+100%) for
    very small chunk sizes (#3544) by @Cyan4973
  * misc: tests/fullbench can benchmark multiple files (#3516) by
    @dloidolt</comment>
    <requestid>1082541</requestid>
  </revision>
  <revision rev="33" vrev="2">
    <srcmd5>67b771fedef5824b932793daa3bea239</srcmd5>
    <version>1.5.5</version>
    <time>1683991014</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1085997</requestid>
  </revision>
  <revision rev="34" vrev="3">
    <srcmd5>868e89064d174275a942ddb3cb60e364</srcmd5>
    <version>1.5.5</version>
    <time>1685294515</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1089288</requestid>
  </revision>
  <revision rev="35" vrev="4">
    <srcmd5>8f8be24566c5eb85fdfe522c815f5afb</srcmd5>
    <version>1.5.5</version>
    <time>1705099441</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1138092</requestid>
  </revision>
</revisionlist>
