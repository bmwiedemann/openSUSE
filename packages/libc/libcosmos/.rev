<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>8159fefd202f843c5f22e8b48dcd1ffe</srcmd5>
    <version>0.2</version>
    <time>1706885256</time>
    <user>anag+factory</user>
    <comment>I'd like to add this new library to Factory.</comment>
    <requestid>1143580</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>4cb4bf1ba4989f52e36f20cdccae562a</srcmd5>
    <version>0.2</version>
    <time>1707760384</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1146102</requestid>
  </revision>
  <revision rev="3" vrev="3">
    <srcmd5>e90592d0511c50c349945b0f6ea1dfb2</srcmd5>
    <version>0.2</version>
    <time>1708116161</time>
    <user>anag+factory</user>
    <comment>- Update to version 0.2.0+git7f2b8ee:
  * formatting: export another definition missing on 32-bit archs
  * scripts: use single quotes throughout
  * check.py: build all targets
  * buildsystem: support disabling doc build
  * check.py: select proper root directory for non-libcosmos projects
  * buildsystem: use single quotes throughout
  * buildsystem: use -fdiagnostics-color=auto instead of colorgcc wrapper
  * python files: incorporate Flake8 findings
  * check.py: also fun flake8 on Python files
  * buildsystem: support including local libraries with fallback to system pkg
  * PosixThread: fix race condition in setting m_pthread
  * buildsystem: support configuring default library type for project

- Update to version 0.2.0+git33d893b:
  * buildsystem: support transparent use of local lib or system lib</comment>
    <requestid>1147055</requestid>
  </revision>
  <revision rev="4" vrev="4">
    <srcmd5>8c3b0444fe4433ec71edd179eacbe161</srcmd5>
    <version>0.2</version>
    <time>1708534874</time>
    <user>anag+factory</user>
    <comment>- Update to version 0.2.0+gitff219ee:
  * ILogger: support a prefix() to be added to each log message
  * ILogger: use more robust way to detect std::cout and std::cerr
  * trivial: SocketAddress: remove superfluous slash in comment</comment>
    <requestid>1148686</requestid>
  </revision>
  <revision rev="5" vrev="5">
    <srcmd5>7ed96d587d6d222e04f5d1aee8c3f4a0</srcmd5>
    <version>0.2</version>
    <time>1709762756</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 0.2.0+gita8e6f94:
  * GroupInfo: fix system include style
  * global: use angle bracket includes for libcosmos
  * string.hxx: add wide-string variant for to_lower(), to_upper()
  * string.hxx. support wide string strip() operation
  * byte_order: add default constructor for EndianNumber
- this fixes a broken -debugsource package generation</comment>
    <requestid>1155512</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>23bf0ed205c3026e3ed1fe54795f0834</srcmd5>
    <version>0.3.1</version>
    <time>1723107436</time>
    <user>dimstar_suse</user>
    <comment>- Setup obsoletes/provides to cover the renaming of the library SONAME. 

- update to first source tarball release v0.3.1. Drop git SCM service.

- change library package name from libcosmos-0_2_0 to libcosmos-0, because it
  needs to follow the library's SONAME which is libcosmos.so.0. 

- Update to version 0.2.1+gitcb2663e:
  * buildsystem: fix bug in passing multiple parameters via CXXFLAGS &amp; friends
  * test/thread.cxx: fix potential race condition in isCallerThread()
  * buildsystem: passthrough ASAN_OPTIONS
  * tests: on unit test error cat logfile to stderr
  * bump lib version which now contains memory mapping API
  * github action: disable ODR iolation checks in unit tests in sanitizer build
  * README.md: add info about recent developments
  * check.py: support more fine tuning regarding which configs are built
  * tests: mman: disable core dumping for expected SEGFAULT
  * check.py: use dedicated buildroot that is cleaned before each config
  * LinkLayerAddress: make some exotic protocols optional
  * support older toolchains and non-x86 architectures better
  * buildsystem.py: be prepared for TERM not existing
  * buildsystem.py: satisfy flake8 &quot;missing whitespace after comma&quot;
  * check.py: refer to current HEAD, not to master
  * .github: add github action workflow file
  * global: fix spelling errors in comments and documentation
  * mman.hxx: fix doxygen list item indentation
  * README: remove mention of memory mappings, which are available by now
  * addrinfo test: switch UDP resolve from http to tftp
  * feature: add support for memory mapping functionality
  * FileBase: add runcate() member function</comment>
    <requestid>1191875</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>60296a29ab37810e04eded952ce8a051</srcmd5>
    <version>0.4.0</version>
    <time>1741992748</time>
    <user>anag+factory</user>
    <comment>- drop no longer needed provides/obsoletes

- update to version 0.4.0:
  This release contains major API additions and harmonization of the API
  modeling. The latter causes breaking changes.
  Bugfixes
  - fix bad value for SignalNr::TERM_STOP.
  - fix inconsistent state in SubProc when child is killed by a signal.
  - fix bugs in the error handling of the pthread API.
  Filesystem
  - added support for access() and faccessat().
  - added support for flock() API.
  - added file locking operations in FileDescriptor.
  - added for asynchronous signal-driven I/O in FileDescriptor.
  - added support for file lease support in FileDescriptor.
  - renamed TYPE_MASK and MODE_MASK enum values to avoid preprocessor macro name clashes on some GCC toolchains (e.g. Ubuntu arm cross toolchain).
  Signals
  - support for sending thread-directed signals.
  - add pause() wrapper.
  - add sigqueue() variant for sending signals.
  - support sigsuspend().
  - full support for asynchronous signal handling via sigaction()
    harmonize process state information by fully wrapping siginfo_t. This type
    is now used in cosmos::proc::wait() as well in asynchronous signal handling
    and cosmos::proc::wait_info() and some other locations. This replaces
    WaitRes, which was only a partial special-purpose wrapper over siginfo_t.
  - added wrapper for sigaltstack().
  Threads
  - use dedicated ThreadID that is distinct from ProcessID.
  ptrace() API</comment>
    <requestid>1253007</requestid>
  </revision>
  <revision rev="8" vrev="2">
    <srcmd5>0794af283cd0f98cc25c818d1028c9ca</srcmd5>
    <version>0.4.0</version>
    <time>1742937027</time>
    <user>anag+factory</user>
    <comment>- Add upstream patch to fix build on aarch64:
  * libcosmos-fix-aarch64.patch (forwarded request 1254181 from Guillaume_G)</comment>
    <requestid>1255634</requestid>
  </revision>
</revisionlist>
