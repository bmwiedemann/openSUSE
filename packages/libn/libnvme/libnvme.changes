-------------------------------------------------------------------
Fri Jul 25 09:50:15 UTC 2025 - Daniel Wagner <dwagner@suse.de>

- Update to version 1.15:
  * Release v1.15
  * doc: Regenerate all docs for v1.15
  * tree: always set the host key (bsc#1246560)
  * json: do not leak port_obj for PCI devices
  * Revert "linux: TLS PSK derivation fixes"
  * linux: TLS PSK derivation fixes
  * mi: correct mi admin feature functions map file
  * mi: add power management feature functions
  * mi: add arbitration feature get function
  * libnvme: sanitize free() handling
  * ioctl: fix nvme_get_log_endurance_grp_evt() description
  * tree: free ctrl attributes when (re)configure ctrl (bsc#1243716)
  * types: Add Create Queue Specific (CQS) shift and mask for LM CDQ command
  * test: add tests for miscellaneous ioctl functions
  * test: move _cleanup_free_ to util.h
  * ioctl: fix nvme_directive_recv_stream_status
  * test: add tests for miscellaneous ioctl functions
  * tree: filter tree after scan has completed (bsc#1243716)
  * build: disable liburing support per default
  * ioctl: introduce force xfer length configuration knob
  * mi:     nvme_mi_mi_xfer() is overly restrictive
  * mi: Additional define options for older systems with SIOCMCTPALLOC
  * types: Fix nvme_ns_id_desc packing
  * types: add SMART / health information CW shift and mask values
  * doc: fix return value description for nvme_scan_topology
  * test: add tests for zns functions
  * test: add missing tests for features functions
  * ioctl: fix nvme_lm_set_features_ctrl_data_queue
  * test: extend sysfs tree dump test
  * tree: add attribute numa_nodes for NVMe path object
  * tree: add queue-depth attribute for nvme path object
  * tree: add support for discovering nvme paths using sysfs multipath link
  * test: add tests for log functions
  * test: add missing tests for identify functions
  * ioctl: only use io_uring for char devices
  * examples: Make examples build selectable
  * examples: remove unnecessary include of <bits/pthreadtypes.h>
  * tree: handle the case when host_iface/host_traddr are set to "none"
  * Release v1.14
  * doc: Regenerate all docs for v1.14
  * examples: add explicit pthread dependency to meson
  * build: disable netdb test for static builds
  * build: make 'clean' target an alias for 'purge'
  * types: Change LM CDQ sz argument from u8 to u32.
  * Revert "fabrics: retry connect command on EINTR"
  * ioctl: add temperature threshold TMPSEL and THSEL parameters to get
  * types: add temperature threshold feature TMPTHH field
  * mi: Introduce asynchronous event message handling
  * types,util: add enums for Boot Partition Write Protection Config feature
  * tests: Add an empty NBFT table
  * tests: Add sample NBFT table with empty HFI ipv6 address
  * mi: Add support for multiple csi buffers
  * mi: add nvme_mi_submit entry and exit weak functions
  * util: add FDP events feature length
  * tree: add routine to fetch subsys serial number
  * mi: fix unrleased section name
  * build: use newer build container for readthedocs
  * build: update readthedocs commands
  * scripts: update UNRELEASED export map on release
  * src: introduce unreleased export section
  * biuld: patch the meson.build for test pypi upload
  * build: split 'dev' postfix from version string
  * build: cleanup python test pypi upload
  * build: fix test pypi cleanup task
  * build: add cleanup task for pypi test uploads
  * build: upload unique pypi test versions
  * util: add performance characteristic feature length
  * types: add performance characteristics attribute definitions
  * build: allow to specify tag for workflow_dispatch
  * build: switch to new python meson backend
- disable liburing support, upstream disabled it on default.

-------------------------------------------------------------------
Mon Apr 14 09:26:06 UTC 2025 - Daniel Wagner <dwagner@suse.de>

- Update to version 1.13:
  * Release v1.13
  * doc: Regenerate all docs for v1.13
  * fabrics: retry connect command on EINTR
  * types: Fix Live Migration SEQIND Shift and Mask
  * types: add performance characteristics attribute type values
  * util: add performance characteristics feature decode function
  * types: add performance characteristics feature access values
  * types: add performance attribute structures
  * types: Update nvme_id_independent_id_ns fields based on NVMe 2.1 spec
  * mock.c: fix checking of HAVE_GLIBC_IOCTL
  * libnvme: do not byte swap command dwords
  * ioctl: return status code when using liburing
  * src: update include directive
  * gitignore: ignore .build-tools
  * tree: add routine to fetch subsys firmware rev (bsc#1240518)
  * tree: add routine to fetch subsys model (bsc#1240518)
- add liburing dependency only for newer distros

-------------------------------------------------------------------
Mon Mar 17 10:18:04 UTC 2025 - Daniel Wagner <dwagner@suse.de>

- Update to version 1.12:
  * Release v1.12
  * doc: Regenerate all docs for v1.12
  * build: ignore PREFER_DEFINED_ATTRIBUTE_MACRO
  * python, swig: add missing controller attributes
  * types: add SLM and CP command set indicator values
  * Makefile: Add new targets and update meson command syntax
  * build: do not include config.h globally
  * types: add enum for Identify I/O Command Set Data Structure
  * libnvme: export nvmf_exat_ptr_next
  * build: drop support for openssl 1
  * build: request c++ compiler for host and build machine
  * build: update min meson dependency
  * pyproject.toml: allow newer meson version
  * examples: fix time stamp prefix printf format string
  * mi: fix nvme_mi_admin_get_log_reachability_groups() parameters order
  * types: add HDISNS field of Host Behavior Support feature
  * types: fix nvme_reachability_association_desc member variable name
  * ioctl: fix nvme_get_log_reachability_groups() parameters order
  * build: checkpatch limit line length to 100 chars
  * types,util: add Asynchronous Event Configuration NVMe 2.1 definitions
  * types,util: Added Enums for missing status codes
  * ioctl: add libnvme-mi NVMe 2.1 log page APIs
  * mi: fix indentation errors
  * test: check the namespace is not cluttered with min/max
  * util: avoid min macro pollution
  * build: remove thank you bot
  * types: Update nvm-id-ns fields based on NVM Command Set Spec 1.1
  * build: add github token to comment step
  * types: add NVME_CTRL_OACS definitions
  * build: add thank you bot
  * types: Update id-ns fields based on NVM Command Set Spec 1.1
  * build(deps): bump pypa/gh-action-pypi-publish@release/v1.5
  * mi: add nvme_mi_admin_get_log_mgmt_addr_list()
  * types: add spinup control and pls features definition
  * types: fix enum nvme_psd definitions indentation errors
  * mi_xfer: Added nvme_mi_mi_xfer API
  * types: add I/O command fabric commands opcode definition
  * types: add NVME_FEAT_FDPE_*** definitions
  * ioctl: add nvme_get_log_pull_model_ddc_req()
  * ioctl: add nvme_get_log_ave_discover()
  * ioctl: add nvme_get_log_host_discover()
  * ioctl: add nvme_get_log_changed_alloc_ns_list()
  * ioctl: add nvme_get_log_reachability_associations()
  * ioctl: add nvme_get_log_reachability_groups()
  * ioctl: add nvme_get_log_mgmt_addr_list()
  * ioctl: add nvme_get_log_dispersed_ns_participating_nss()
  * ioctl: add nvme_get_log_rotational_media_info()
  * ioctl: add nvme_get_endgid_log()
  * types: add NVMe 2.1 identify command CNS definitions
  * types: add NVMe 2.1 admin command opcode definitions
  * types: Add NVMe 2.1 feature ID definitions
  * types: add NVMe 2.1 identify power state descriptor fields
  * types: error information log entry status field definitions
  * types: fix lm data field unsigned values to little endian
  * build: bump wraps
  * ioctl: fix io_uring whitespace damages
  * ioctl: get_log_page by nvme uring cmd
  * tests: mock io_uring_get_probe
  * types: add enum for the fields added in TP4058
  * Update mctp APIs to mctp codeconstruct version 2.0
  * ioctl: Live Migration
  * types: Add enum for nvme_id_ctrl.trattr
  * types: use __le16 instead of __u16 for data fields
  * types: Update id-ctrl field based on NVMe 2.1 spec
  * types: Live Migration
  * mi: telemetry log update based NVMe v2.1
  * ioctl,types: telemetry log update based NVMe v2.1
  * types: add enum for the fields added in TP4160
  * rpm: use defined prefix from meson
  * tests: do not unconditionally depend on dlsym
  * types: add NVME_ID_CTRL_NVM_LBAMQF definitions
  * test/mock: pass thru unknown ioctls
  * build(deps): bump codecov/codecov-action from 4 to 5
  * Release v1.11.1
  * doc: Regenerate all docs for v1.11.1
  * fabrics: do not attempt to import keys if tls is not enabled (bsc#1216982 bsc#1226216)
  * linux: do not do any keyring ops when no key is provided (bsc#1216982 bsc#1226216)
  * types: Add id-ctrl CTRATT.RHII enum
  * linux: do not return w/o OpenSSL support enabled (bsc#1216982 bsc#1226216)
  * build: Add token for coverage test
  * linux: fix derive_psk_digest OpenSSL 1.1 version (bsc#1216982 bsc#1226216)
- Add liburing dependency
- Add bugzilla references
- Remove downstream build fixes
  * remove 0001-linux-fix-derive_psk_digest-OpenSSL-1.1-version.patch
  * remove 0002-test-mock-pass-thru-unknown-ioctls.patch

-------------------------------------------------------------------
Mon Nov 25 13:15:00 UTC 2024 - Daniel Wagner <daniel.wagner@suse.com>

- Fix tests on s390
  * add 0002-test-mock-pass-thru-unknown-ioctls.patch

-------------------------------------------------------------------
Thu Oct 31 13:06:35 UTC 2024 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.11:
  * prefix: Use Request or Response Length in DLEN and DOFF for MI
  * types: Add ETPVDS and SSI fields of sanitize status log
  * json: do not escape strings when printing the configuration (bsc#1216982 bsc#1226216)
  * tree: do no export tls keys when not provided by user (bsc#1216982 bsc#1226216)
  * types: add struct nvme_id_ctrl_nvm ver and lbamqf member variables
  * types: add NVMe 2.1 get log page LIDs
  * type: Added enums for ANSAN and RGCNS bit of OAES field
  * linux: fixup PSK HMAC type '0' handling (bsc#1216982 bsc#1226216)
  * util: added error code for ENOKEY (bsc#1216982 bsc#1226216)
  * fabrics: fix map error level in __nvmf_add_ctrl (bsc#1216982 bsc#1226216)
  * fabrics: add ctrl connect interface (bsc#1216982 bsc#1226216)
  * fabrics: use hex numbers when generating command line options (bsc#1216982 bsc#1226216)
  * fabrics: rename first argument for argument macros (bsc#1216982 bsc#1226216)
  * linux: handle key import correctly (bsc#1216982 bsc#1226216)
  * linux: export keys to config (bsc#1216982 bsc#1226216)
  * tree: read tls_configured_key and tls_keyring from sysfs (bsc#1216982 bsc#1226216)
  * tree: move dhchap and tls sysfs parser into separate functions (bsc#1216982 bsc#1226216)
  * json: move keystore operations out of the JSON parser (bsc#1216982 bsc#1226216)
  * tree: add getter/setters for TLS PSK (bsc#1216982 bsc#1226216)
  * linux: add import/export function for TLS pre-shared keys (bsc#1216982 bsc#1226216)
  * linux: only return the description of a key (bsc#1216982 bsc#1226216)
  * linux: use ssize_t as return type for nvme_identity_len (bsc#1216982 bsc#1226216)
  * linux: reorder variable declarations
  * types: Added enum for SMVES event of PEL log
  * libnvme: add lockdown log page support(LID : 0x14)
  * libnvme: add EMVS support to sanitize command
  * types: Add TP4159 PCIe Infrastructure for Live Migration definitions
  * types: add NVME_CTRL_OAES get macro definitions
  * types: add NVME_CTRL_OAES_TTHR definition
  * types: add NVME_CTRL_FNA definitions to get field values
  * types: add NVME_VAL() definition
  * tree: fix tls key mem leak (bsc#1231668)
  * tree: fix dhchap_ctrl_key mem leak (bsc#1231668)
  * tree: fix dhchap_key mem leak (bsc#1231668)
  * types: add NVME_CHECK() definition to check nvme register field value
  * types: add kv opcodes
  * types: added new fields in nvme_nvme_id_ns
  * types: Add enum for Completion Condition of Get LBA status command
  * ioctl: refactoring set_features
  * types: add new fields added in TP4142
  * mi: add control primitive command
  * linux: Correct error handling for derive_psk_digest (bsc#1228376)
  * types: Added new field CSER in enum as per TP4167
- build fix for OpenSSL 1.1
  * add 0001-linux-fix-derive_psk_digest-OpenSSL-1.1-version.patch

-------------------------------------------------------------------
Fri Aug 02 08:23:49 UTC 2024 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.10:
  * linux: update TLS version 1 PSK derivation (bsc#1228376)
  * tree: fix nvme_read_config() to not set errno if return 0
  * types: add new fields added in TP4165 (bsc#1231668)
  * types: Changed the space into tap space (bsc#1231668)
  * tree: handle no address phy slot dirs (bsc#1229193)
  * linux: Remove the use of OpenSSL Engine API
  * types: Added new controller attribute as per TP4104
  * tree: add helper to lookup hostnqn/hostid (bsc#1226216)
  * fabrics: extend hostnqn/hostid variable inject interface (bsc#1226216)
  * json: filter out pcie transport (bsc#1226216)
  * tree: preserve parsing order of a config file (bsc#1226216)
  * types: add new field added in TP4099
  * types: add new field added in TP4090 (bsc#1231668)
  * linux: add nvme_revoke_tls_key (bsc#1226197)
  * tree: fix segfault in nvme_free_tree() (bsc#1231668)
  * types: add PEL vendor specific and TCG defined events definitions
  * mi-mctp: initialize the rc variable in handle_mctp_endpoint()
  * linux: avoid potential null pointer dereference
  * linux: add nvme_get_ana_log_len_from_id_ctrl()
  * libnvme: export nvme_mi_admin_get_ana_log_atomic()
  * ioctl: add support for atomic, piecewise ANA log fetch
  * ioctl: replace nvme_ana_rsp_hdr in doc comments
  * ioctl: respect rae in nvme_get_log_ana()
  * ioctl: fix nvme_get_log_ana_groups() pointer type
  * types: add new filed added in TP4141a
  * mi: Probe quirks on first command submission
  * tree: optionally skip namespaces during scanning (bsc#1232616)
  * ioctl: update nvme_set_var_size_tags() to properly use reftag
  * types: add enum for Protection Information Format
  * libnvme: Introduce functions to generate host identifier and host NQN (bsc#1226216)
  * fabrics: Unescape URI elements
  * tests: Add uriparser tests
  * fabrics: Introduce simple URI parser
  * linux: default init cleanup variable
  * linux: Fix uninitialized variables
  * types: add the nvme Cancel command opcode
  * log: split log variables from root object
  * log: keep log level logic in one place
  * mi: restore default ep timeout during admin_passthru
  * mi: fix the rc for nvme_mi_scan_ep
  * ccan/endian.h: Only define __{BIG,LITTLE}_ENDIAN if undefined.
  * Use C99 types for uint32_t
  * mi: fix the return error code.

-------------------------------------------------------------------
Fri May 03 13:11:16 UTC 2024 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.9+0.g80c5cf2:
  * types: Added Command and Feature Lockdown LID
  * types: add ASQ, ACQ and BPMBL controller properties definitions
  * types: add controller properties enum documentation
  * types: fix CRTO.CRIMT mask value definition
  * tree: use strtou32 to read lba_size
  * types: Fix PMRWBM register name
  * examples: fix mi-mctp build warning errors
  * test: add CSTS.ST, CAP.CPS and CAP.NSSS registers
  * types: add CAP.CPS and CAP.NSSS definitions
  * types: add enum nvme_cap documentation
  * types: Add enum nvme_unit/cmbebs/cmbswtp/flbas/cmic documentation
  * util: Add string constant for ENVME_CONNECT_IGNORED
  * tests: Add sample NBFT table with mpath IPv4+IPv6 discovery
  * types: add controller status shutdown type (CSTS.ST) definition
  * types: Add enum nvme_csts documentation
  * types: Add NVME_CMIC definitions
  * types: Add CMBSWTP property definitions
  * types: Add NVME_CMBEBS property definitions
  * types: Fix boot partition read offset (BPROF) mask value
  * tree: fix mem leak in nvme_ns_init() (bsc#1223331)
  * fabrics: retry discovery log page when DNR is not set
  * ioctl: return EPROTO when an NVMe status occurred
  * linux: Allocate aligned payload for nvme_get_telemetry_log
  * test: use diff to compare sysfs output (bsc#1226216)
  * tree: fix lba_count size calculation
  * tree: Add NVM subsystem controller identifier (bsc#1224024)
  * test: Add unit test for nvme_id_ns_flbas_to_lbaf_inuse()
  * types: Fix NVME_CSTS_SHST_MASK definition
  * util: Fixed nvme_id_ns_flbas_to_lbaf_inuse()
  * types: Add optional data present filed mask and shift definition
  * types: Fix EOM header optional data present fields definition
  * libnvme : record the nvme pci adapter physical slot (bsc#1223208)
  * sysfs: minimize heap allocations of sysfs paths
  * json: Fix uninitialized variables
  * libnvme: add missing symbol nvme_scan_tls_keys (bsc#1226197)
  * nbft: Whitespace fixes (bsc#1222026)
  * tests: Add complex NBFT table from Dell R660 (bsc#1222026)
  * tests: Adapt to added NBFT SSNS flags (bsc#1222026)
  * nbft: Add SSNS 'discovered' flag (bsc#1222026)
  * nbft: Add SSNS 'unavailable' flag (bsc#1222026)
  * doc: Document the NBFT API (bsc#1222026)
  * ioctl: Move nvme_cmd_dword_fields definitions into header file
  * types: Add PEL set feature event layout definitions
  * types: Fix enum nvme_pel_rci documentation error
  * types: Add boot partition information definitions
  * types: Add PEL header additional information definitions
  * fabrics: keyring is a long (bsc#1216982)
  * config-schema.json.in: tls keys and keyrings are strings (bsc#1216982)
  * linux: Add nvme_scan_tls_keys() (bsc#1216982)
  * json: dump TLS key data in PSK interchange format (bsc#1216982)
  * json: import TLS key from PSK interchange format (bsc#1216982)
  * json: export TLS key in PSK interchange format (bsc#1216982)
  * tree: read TLS key in nvme_configure_ctrl() (bsc#1216982)
  * linux: rework nvme_insert_tls_key_versioned() (bsc#1216982)
  * linux: add nvme_import_tls_key() (bsc#1216982)
  * linux: add nvme_export_tls_key() (bsc#1216982)
  * crc32: Add CRC32 algorithm (bsc#1216982)
  * linux: add nvme_update_key() (bsc#1216982)
  * linux: add nvme_read_key() (bsc#1216982)
  * linux: allow for NULL argument in nvme_lookup_keyring() (bsc#1216982)
  * log: Respect DEFAULT_LOGLEVEL on uninitialized logging
  * log: Introduce nvme_get_logging_level()
  * ioctl: remove incomplete debug logging infrastructure
  * ioctl: export nvme_submit_passthru{64} as weak symbol (bsc#1231668)
  * log: move nvme_{set|get}_debug to log.c
  * fabrics: check the read() return value
  * types: Add PEL reporting context port identifier type definitions
  * types: Add persistent event log reporting context definitions
-  Upstream changed the sysfs test setup, thus sysfs test works in OSB
  * remove 0001-build-disable-sysfs-test.patch

-------------------------------------------------------------------
Wed Feb 14 12:04:28 UTC 2024 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.8+0.gbff7dda:
  * linux: Explicitly initialize auto-cleanup variables
  * example: fix mi identify failed with error cntid
  * tree: do not issue an error when subsys lookup fails during scanning
  * types: Add controller properties CMBEBS, CMBSWTP and NSSD
  * tests: Add sample NBFT table from Dell PowerEdge R660
  * tests: Add sample NBFT table from Dell PowerEdge R760
  * tests: Fix diffs output for duplicate HFI entries
  * nbft: avoid duplicate entries in ssns->hfis
  * nbft: Fix (struct nbft_info_subsystem_ns).num_hfis off-by-one
  * test: read and dump sysfs tar file
  * nvme: allow to overwrite hostnqn and hostid
  * nvme: allow to overwrite base sysfs path
  * json: dump the output to the user selected filedescriptor
  * libnvme: export nvme_dump_tree
  * fabrics: add 'concat' option
  * mi: set correct rc and errno when crc mismatch
  * tree: use logical block size for lba
  * json-schema: add keyring and tls_key details (bsc#1219086)
  * build: checkout full repo for checkpatch
  * linux: avoid segfault in check-tls-key due to null hostnqn/subsysnqn (bsc#1219086)
  * meson.build: fixup 'join' syntax
  * util: Explicitly initialize auto-cleanup variables
  * tree: Explicitly initialize auto-cleanup variables
  * linux: Explicitly initialize auto-cleanup variables
  * fabrics: Explicitly initialize auto-cleanup variables
  * util: Added function to find specific UUID in UUID list.
  * build: fix release python tag match
- Disable new unit test which is not running stable in OSB
  * add 0001-build-disable-sysfs-test.patch

-------------------------------------------------------------------
Wed Dec 20 10:10:56 UTC 2023 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.7.1+0.g13ba383:
  * tree: do no free ns on error in nvme_ns_init

-------------------------------------------------------------------
Tue Dec 19 13:26:50 UTC 2023 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.7+0.gf38b1d7:
  * tree: do not open blk device on default
  * tree: read all attributes from sysfs when available
  * ioctl: set data length when retrieving LBA status
  * types: fix regression for vendor-specific field in nvme_id_ns
  * util: use cleanup functions
  * linux: use cleanup functions
  * json: use cleanup functions
  * fabrics: use cleanup functions
  * tree: use cleanup functions
  * cleanup: add cleanup functions
  * tree: fix incorrect return value
  * tree: Fix clearing application strings
  * libnvme: reshuffle nvme_generate_tls_key_identity()
  * libnvme: fixup error codes
  * libnvme: Implement 'nvme_generate_tls_key_identity()'
  * libnvme: support NVMe TLS identities version 1 (bsc#1219086)
  * libnvme: Add base64 functions
  * libnvme: separate out 'gen_tls_identity' and reshuffle 'derive_nvme_keys'
  * libnvme: separate out a function 'select_hmac'
  * libnvme: fix a memory leak when calling read_ssns()
  * libnvme: fix a memory leak in read_discovery()
  * fabrics: avoid redundant args in nvme_discovery_log()
  * fabrics: have nvmf_get_discovery_log() call nvmf_get_discovery_wargs()
  * fabrics: fetch smaller Discovery Log Page header
  * fabrics: avoid redundant Get Log Page on retry
  * fabrics: clear RAE for discovery log page commands
  * json-schema: add keyring and tls_key details (bsc#1219086)
  * types: add Host Behavior Support field definitions
  * mi: Cast values to u32 if shift overflows int
  * types: Cast values to u32 if shift overflows int
  * test: Avoid unaligned pointer dereferences
  * nbft: Avoid unaligned pointer dereferences
  * types: add cross-namespace copy formats, status codes, ONCS bits
  * nvme: Add length field to Hkdf-Expand-Label computation
  * ioctl: use lsp arg in nvme_get_log_boot_partition
  * fabrics: use SECTYPE to determine whether to use TLS (bsc#1219086)
  * fabrics: Allocate aligned payloads for id_ctrl and discovery log calls
  * linux: Allocate aligned payloads for id_ctrl and id_ns calls
  * ioctl: MSB variable-size storage/reference tags

-------------------------------------------------------------------
Tue Oct 17 14:38:25 UTC 2023 - Martin Wilck <mwilck@suse.com>

- Update to version 1.6+5.g68c6ffb:
  * avoid stack corruption by unaligned DMA to user space buffers
    (bsc#1216344, gh#linux-nvme/libnvme#727)

-------------------------------------------------------------------
Thu Oct 12 16:50:55 UTC 2023 - Daniel Wagner <daniel.wagner@suse.com>

- Add missing jsc# tracking references to changelog

-------------------------------------------------------------------
Mon Oct  9 10:00:13 UTC 2023 - Daniel Wagner <daniel.wagner@suse.com>

- Use glob for python3-libnvme file listening. Workaround pycache_only
  problems for SLE/Leap builds.
- Drop usused libuuid dependency

-------------------------------------------------------------------
Wed Oct  4 14:31:09 UTC 2023 - Daniel Wagner <daniel.wagner@suse.com>

- Enable tests during build
- Set git version tag
- Drop unused make dependency

-------------------------------------------------------------------
Wed Oct  4 10:32:55 UTC 2023 - Daniel Wagner <daniel.wagner@suse.com>

- Drop unencessary minimum version depedency on meson.
- Re-enable libdbus feature. Upstream defaults changed.

-------------------------------------------------------------------
Fri Sep 29 11:42:15 UTC 2023 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.6: (jsc#PED-3610 jsc#PED-4879 jsc#PED-5061)
  * docs: Fix Read-the-Docs configuration (deprecated config param)
  * mi-mctp: Fix free() in error path of mi_open_mctp
  * types: Use NVME_SET for status type mask to get status value
  * types: Define FLBAS MASK and SHIFT to use NVME_GET
  * types: Support Phy Rx Eye Opening Measurement Log
  * log: Add nvme root global variable to set for default output
  * types: Add support for the OAQD ID controller field
  * test: use non deprecated API
  * test: add tests for Get/Set Features functions
  * ioctl: implement nvme_set_features_lba_range()
  * ioctl: pass NSID in Get/Set Features commands that use it
  * ioctl: fix swapped parameters in nvme_set_features_host_id()
  * ioctl: export nvme_{g,s}et_features_iocs_profile()
  * ioctl: pass ENDGID in nvme_get_features_endurance_event_cfg()
  * ioctl: don't set SAVE bit on unsaveable features
  * ioctl: avoid sending uninitialized timestamp
  * ioctl: pass data for Get/Set Features commands
  * ioctl: set correct bits in Set Features commands
  * ioctl: correct feature IDs in Get/Set Features commands
  * tree: Add 2 new public functions to lookup existing controllers
  * ioctl: Add debugging feature to show command outputs
  * Fix incorrect article 'an' as 'a' to use for a description
  * linux: Added functions to enable faster telemetry data retrieval. Moved telemetry data area support detection into separate function. Added possibility to modify data transfer chunk size. Enable telemetry extraction up to specified data area. Removed some printf() and perror().
  * test: account for discovery log page entry stripping
  * fabrics: unconditionally strip discovery entry strings
  * fabrics: only look for spaces in strchomp()
  * tree: Use early return instead of else statements
  * test: fix lookup test case
  * test: make all function static
  * test: add tests for new tcp controller matching algorithm
  * tree: Improve TCP controller matching algorithm
  * util: Add functions to parse the system's interfaces
  * types: Add support for EGFEAT, Domain Identifier, TEGCAP and UEGCAP
  * mi: remove nsid from nvme_mi_admin_identify_secondary_ctrl_list()
  * test: add tests for nvme_ctrl_get_src_addr()
  * tree: Add nvme_ctrl_get_src_addr() to get the controller's src_addr
  * util: Split _nvme_ipaddrs_eq() from nvme_ipaddrs_eq()
  * test: add tests for Identify functions
  * ioctl: use available Identify helper functions
  * test: pass a large enough buffer to nvme_identify_ns_descs()
  * ioctl: remove nsid from nvme_identify_secondary_ctrl_list()
  * meson: Don't hard-code path to "internal/config.h"
  * fabrics: Do not pass disable_sqflow if not supported
  * fabrics: Read the supported options lazy
  * test: add discovery log page tests
  * test: add infra for mocking passthru ioctls
  * tree: fix segfault in nvme_scan_subsystem() (bsc#1213993)
  * src/nvme/tree.c: make __nvme_scan_subsystem() returning bool (bsc#1213993)
  * doc: fix minor mistake in README.md about dependencies
  * nvme-tree: avoid warning in 'list-subsys' (bsc#1212598)
  * tree: Add getter for subsystem iopolicy (bsc#1124564)
  * fabrics: Consider also all hosts settings for context match
  * tree: Scan all subsystems (bsc#1212598)
  * doc: Fixing compile instruction in README
  * mi: allow non-4-byte-aligned responses
  * mi-mctp: use a linear response buffer
  * mi: implement length and offset alignment checks in admin_xfer()
  * tree: Don't open nvme devices until it's absolutely required
    (bsc#1213527 bsc#1213686)
  * tree: missing closedir() causes fd leak for "/sys/bus/pci/slots"
  * mi: don't return from mi_mctp_submit with a tag held
  * util: Provide empty nvme_ipaddrs_eq for static builds
  * fabrics: Relax match on well known disc ctrl lookup
  * tree: Ignore NULL address pointer for phy slot lookup
  * fabrics: Filter discovery ctrls out during application context check
  * util: Add ignored error code
  * json: Use memory block allocated by realloc() instead printbuf
  * util: Use HAVE_NETDB instead of HAVE_LIBNSS
  * tree: Add PCI physical slot number for controller
  * tree: Use nvme_ipaddrs_eq() to compare IP addresses
  * fabrics: Add EADDRNOTAVAIL error mapping
  * fabrics: filter out subsystems with non-matching application string
  * libnvme: add 'application' setting to nvme_root
  * libnvme: add 'application' setting to the subsystem
  * test: Add more code coverage for nvme_ipaddrs_eq()
  * util: rename ipaddrs_eq() to nvme_ipaddrs_eq() and make public.
  * util: Add ipaddrs_eq() to check whether two IP addresses are equal
  * test: Add unit test for ctrl lookups
  * ioctl: fix RAE bit on last Get Log Page command (bsc#1213618)
  * fabrics: check genctr after getting discovery entries (bsc#1213618)
  * fabrics: handle /dev/nvme-fabrics read failure
  * fabrics: fix potential invalid memory access in __nvmf_supported_option()
  * Python: Fix crash during garbage collection
  * python/swig: Check swig version to determine whether -py3 is needed
  * python/swig: Wrap swig-sensitive struct inside #ifwdef SWIG
  * mi: Add nvme_mi_ctrl_id to retrieve controller ID
  * Python: Suppress swig warnings about unnamed struct
  * examples: fix incorrect controller status in MI info output
  * ioctl: Explicitly initialize all members of struct nvme_ns_mgmt_args
  * Python: make NBFT data more pythonic
  * ioctl: io management send, receive args fix
  * python: Update test data
  * NBFT: Remove documentation from nbft.c since it's also in nbft.h
  * Python: Add NBFT support
  * nbft: Doc typo - Use nvme_nbft_free() instead of nbft_free()
  * nbft: Parse the {HOSTID,HOSTNQN}_CONFIGURED flags
  * nbft: Fix nbft_ssns_flags endianness test
  * nbft: Add a simple unit test
  * doc: Update README
  * build: Simple muon build configuration
  * build: Extend summary section
  * build: Make json-c dependency lookup not fail
  * nbft: Move added symbols to LIBNVME_1_5
  * build: Update wrap mode defaults
  * build: Disable fallback on default
  * tree: Fix offset argument check in nvme_bytes_to_lba
  * nbft: add NBFT v1.0 table support (jsc#PED-1449)
  * types: Add IO command set specific field on nsmgmt
  * fabrics: Do not pass unsupported options to kernel
  * types: Add ns-mgmt host software specified fields
  * types.h: Add FDP related Status Code
  * tree: Fix argument check in nvme_bytes_to_lba

-------------------------------------------------------------------
Thu Jul 27 13:10:34 UTC 2023 - Ana Guerrero <ana.guerrero@suse.com>

- Fix build with meson 1.2.0 

-------------------------------------------------------------------
Fri Mar 31 15:38:35 UTC 2023 - Daniel Wagnrer <daniel.wagner@suse.com>

- Update to version 1.4: (jsc#PED-553 jsc#PED-3884)
  * fabrics: Filter out invalid UUIDs from DMI
  * fabrics: Add define for DMI sysinfo
  * Print out correct TREQ strings for discovery
  * tree: fix generic device open failure
  * fabrics: add configuration option 'tls_key'
  * fabrics: add configuration option 'keyring'
  * linux: add key helper functions
  * nvme: add 'nvme_insert_tls_key()' function
  * linux: add nvme_lookup_keyring()
  * python: Change python option from combo to feature
  * types: add opcode field to error log page (TP4113)
  * python: Add setter property for controller DHCHAP Key
  * python: Remove redundant host.set_key() method
  * build, meson: Print option summary
  * Python: Add support for setting/getting Host DHCHAP key
  * Python: Add hostnqn_from_file() and hostid_from_file()
  * types: Update position of elbatm in struct nvme_copy_range{_f1}
  * doc: fix kernel-doc-check warning
  * python, meson: Assert that deps are present for -Dpython=true
  * python: Reformat SWIG input file
  * python test: Check there is no SIGSEGV during garbage collection
  * python: Return PyObject* from __str__() instead of a static char[]
  * python: Fix segmentation fault during garbage collection
  * build: Enable test in muon minimal build
  * build: Streamline workflows with nvme-cli
  * mi: Add nvme_mi_admin_get_log_page
  * ioctl: Set file descriptor in nvme_get_log_page()
  * fix endians
  * fabrics: Do not ignore one char whitespace when string sanitizing
- Enabled unit test on s390x again (bsc#1207687, bsc#1207686)
- Fix invalid string lenght calculcation for UUID (bsc#1209906)
- Fix segmentation fault during garbage collection (bsc#1209905)
- Always sanitize traddr and trsvcid entries (bsc#1207435)
- Allow tracking unique discover controllers (bsc#1186689)

-------------------------------------------------------------------
Mon Jan 30 14:46:55 UTC 2023 - Martin Wilck <mwilck@suse.com>

- temporarily disable unit tests on s390x (bsc#1207687, bsc#1207686)

-------------------------------------------------------------------
Mon Jan 30 13:51:19 UTC 2023 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.3:
 * Support added for Flexible Data Placement (TP4146)
 * Fabrics: added support for Persistent Discovery Controllers.
 * libnvme-mi added a quirk framework to workaround special behavior of
   certain devices
 * The python binding behaves more friendly in a threading environment
   by release the GIL on blocking calls.
 * Replaced  3the libsystemd dependency with libdbus
 * A lot of small fixes everywhere (leaks, wrong ordering of arguments, ...)
- Update spec file
  * Project depends on meson >= 0.50.0

-------------------------------------------------------------------
Wed Nov 02 16:06:21 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.2:
  * Add more details for return code of MI admin cmds
  * Parse dhchap_host_key on controller level
  * Update json config schema for missing dhchap host key
  * fabrics: Add new TP8010 definitions
  * fabrics: Add nvmf_get_discovery_wargs()
  * fabrics: Duplicate strings when merging configs
  * fabrics: Filter out empty strings in add_argument()
  * fabrics: Use fallthrough statement
  * ioctl: Set log page offset for nvme_get_log_telemetry_host
  * json-schema: add dhchap_key details to host section
  * json: Enforce correctly formatted JSON config files
  * json: Verify JSON config file starts with an array
  * mi: Add Get Log Page helpers
  * mi: Add Identify function for secondary controller list
  * mi: Add Identify helper for ns-descs and primary-ctrl-caps
  * mi: Add firmware download and commit commands
  * mi: Add identify helper for nsid-capable Controller List
  * mi: Add identify helpers for namespace lists
  * mi: Add identify helpers for namespaces
  * mi: Allow Admin-message sized More Processing Required responses
  * mi: Distinguish MI status from NVMe (CDW3) status
  * mi: Fix C++ compiler errors
  * mi: Implement Format NVM command
  * mi: Implement Get & Set Features Admin commands
  * mi: Implement NS attach command and helpers
  * mi: Implement Namespace Management command and create/delete helpers
  * mi: Implement Sanitize command
  * mi: Init ctrl_id within xfer
  * mi: Introduce a helper for response status, unify values with ioctls
  * mi: Set log page offset for nvme_get_log_telemetry_host
  * mi: add nvme_mi_status_to_string()
  * mi: fix a memory leak in nvme_mi_open_mctp()
  * mi: fix get_log_page chunked offset check
  * nvme-tree: avoid segfault if auth keys are unavailable
  * python: Use nvmf_get_discovery_wargs()
  * tree: rename controller 'dhchap_key' to 'dhchap_ctrl_key'
  * types: Move enum nvme_data_tfr to types
  * util: Add LINE_MAX define
  * util: Add get feature length 2 API to support direction parameter
  * util: Add simple UUID type
  * util: Do not expose fallthrough defines
- Make man page build conditiional. Install man page location has been
  fixed upstream.
- Mark the Python directory own by the libnvme3-python package

-------------------------------------------------------------------
Mon Oct 31 19:06:17 UTC 2022 - Bernhard Wiedemann <bwiedemann@suse.com>

- Use fixed manpage build date (boo#1047218)

-------------------------------------------------------------------
Fri Aug 26 06:32:07 UTC 2022 - Thorsten Kukuk <kukuk@suse.com>

- Fix installation of manual pages to make them accessible

-------------------------------------------------------------------
Tue Aug  2 18:55:31 UTC 2022 - Dirk Müller <dmueller@suse.com>

- Update to version 1.1:
  * Regenerate all documentation
  * json: fixup dhchap_ctrl_key definitions
  * fabrics: Fix build_options() return values
  * fabrics: sanitize dump-config output
  * Fix poll.h includes
  * build: Drop -nostdinc for LibreSSL header checks
  * ioctl: Honor rae in nvme_get_nsid_log
  * build: Add support to build against LibreSSL
  * rpmbuild: Enable 'make rpm' to build rpm pkgs #408
  * mi: unify MI Get Log Page function with ioctl API
  * python: add missing ctrl attrs to Python bindings
  * mi-mctp: Add timeout support to MCTP transport
  * mi: Add maximum More Processing Required limit API
  * mi: Add endpoint get/set timeout API
  * tree: Factor lookup code for controller (bsc#1199503)
  * fabrics: Consider config from file when adding new controller (bsc#1199503)
  * fabrics: Lower log level in __nvmf_add_ctrl (bsc#1199994 bsc#1199503)
  * fabrics: Remove double connection error logging (bsc#1199994 bsc#1199503)
  * Fixes for controller authentication (bsc#1201501 bsc#1201700 bsc#1201701 bsc#1201717)

-------------------------------------------------------------------
Thu Jul 14 14:00:41 UTC 2022 - daniel.wagner@suse.com

- Update to version v1.1-rc0:
  * update/cleanup of documentation
  * various build fixes
  * various fixes reported by coverity
  * 64-bit Reference Tags and TP-4068 changes
  * libnvme-mi: Introduce NVMe Managament Interface library

-------------------------------------------------------------------
Fri Apr 08 17:04:22 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.0:
  * tree: Remove default port setting for TCP and RDMA ports
  * tree: add 'f_args' argument to pass user data to the filter function
  * tree: remove 'ctrl_get_ana_state()'
  * tree: add namespace path iterators
  * tree: filter out namespaces
  * tree: update nvme_scan_filter_t usage

-------------------------------------------------------------------
Fri Apr 01 13:22:12 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.0-rc8:
  * types: Add support for get log - MI Command Supported
  * types: Add new Identify constant
  * types: Update persistent event entry struct added new fields
  * types: Add Host Initiated Data Gen Number to telemetry log struct
  * tree: always allocate config file in nvme_read_config()
  * tree: rework nvme_scan_subsystem()
  * tree: make subsystem name mandatory in nvme_scan_ctrl()
  * tree: move nvme_init_subsystem() into nvme_lookup_subsystem()
  * tree: do not return error when filtering out subsystems
  * tree: add debugging messages during scanning
  * tree: Handle NULL subsysname in nvme_scan_ctrl()
  * tree: Fix subsystem initialization in nvme_scan_ctrl()
  * tree: Fix leaking 'name' in nvme_subsystem_lookup_namespace()
  * tree: Avoid dereferencing nvme_subsystem_t before its check for NULL
  * tree: Clarify NULL return values from nvme_get_attr()
  * fabrics: Invoke nvmf_dim() with provided tas argument
  * fabrics: add 'nvmf_update_config()'
  * fabrics: Avoid out of bounds string chomping
  * fabrics: Free old traddr in nvmf_add_ctrl
  * fabrics: update log level for write failures
  * fabrics: Streamlining documentation
  * fabrics: Fix leaking ctrl in nvmf_connect_disc_entry()
  * fabrics: Add missing break in a switch
  * ioctl: Remove attribute packed and alignedof for args structs
  * ioctl: Align arguments indentation with braces
  * json: fix endless loop scanning for controllers
  * Remove nvme_init_id_ns
  * Add lbstm support for create-ns
  * documentation updates

-------------------------------------------------------------------
Fri Mar 18 19:08:52 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.0-rc7:
  * linux: fixup log page offset in nvme_get_log_page()
  * tree: Add support for default trsvcid for all controllers (bsc#1195858)
  * tree: fixup coredump during nvme discover

-------------------------------------------------------------------
Fri Mar 11 17:58:36 UTC 2022 - Daniel Wagnrer <daniel.wagner@suse.com>

- Update to version 1.0-rc6:
  * tree: add nvme_ctrl_get_ana_state() (bsc#1195938)
  * tree: link paths to namespaces in nvme_subsystem_scan_namespace() (bsc#1195938)
  * ioctl.h: ns list bug fix (wrong cns value)
  * types.h: Key Value Command Set Identifier added (NVME_CSI_KV)
  * types: fix status code type bug (wrong masking)

-------------------------------------------------------------------
Tue Mar  8 09:30:25 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Update License information. The library is released under
  LGPL-2.1-or-later and not LGPL-2.1-only.

-------------------------------------------------------------------
Thu Mar 03 18:54:35 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.0-rc5:
  * ioctl: Set lsp to action in nvme_get_log_persistent_event (bsc#1196121)
  * tree: Ignore traddr case in nvme_lookup_ctrl() (bsc#1194025)
  * fabrics: Do not swap bytes for system uuid (bsc#1196565)
  * documentation updates

-------------------------------------------------------------------
Tue Feb 22 17:40:44 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.0-rc4:
  * fabrics: add default port number for NVMe/TCP I/O controllers
  * linux: Update size when telemetry controller initiated data is unavailable
  * add cdw13 for set_feature_args structure
  * Add support for TP8010
  * Documentation cleanups

-------------------------------------------------------------------
Fri Feb 11 13:29:54 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version v1.0-rc3:
  * Properly create manuals/documentation
  * Fix memleaks in __nvme_free_ns() and nvme_scan_subsystem()
  * nvme: get log domain id included in Log Specific Identifier
  * nvme: Add nulbaf(Number of Unique Capability LBA Formats) field on nvmd_id_ns
  * ioctl: Add identify ioctl for CNS 09h, 0Ah
  * nvme: Add Enhanced Controller Meta Data(FID: 0x7D)
  * nvme: Add Supported Capacity Configuration List log page(LID: 0x11)
  * tree: do not set dhchap_key to 'none'
  * tree: restart controller lookup
  * tree: fixup memory leak in nvme_scan_ctrl()
  * Rename nvme_path_get_subsystem()
  * Remove nvme_reset_topology()
- Use precompiled documentation instead regenerating it

-------------------------------------------------------------------
Tue Feb 01 11:26:39 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Update to version 1.0~2:
  * Add fabrics config option 'tls'
  * Logging infrastructure reworked (API break)
  * Changed argument structs layout (API break)
  * Changed scan API (API break)
  * Fixed ctrl_loss_tmo handling concerning values of '-1'
  * Various build fixes

-------------------------------------------------------------------
Wed Jan 19 11:13:42 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Remove Provide for python package.
- Remove explicit tar file name for setup step.

-------------------------------------------------------------------
Tue Jan 18 14:26:47 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Use osc_scm to manage upstream input source.

-------------------------------------------------------------------
Tue Jan 18 12:53:02 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Fix Source URL

-------------------------------------------------------------------
Fri Jan 14 17:54:47 UTC 2022 - Daniel Wagner <daniel.wagner@suse.com>

- Initial package creation for libnvme
