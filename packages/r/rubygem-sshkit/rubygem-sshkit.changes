-------------------------------------------------------------------
Tue Nov 28 08:18:13 UTC 2023 - Dan Čermák <dan.cermak@posteo.net>

- New upstream release 1.21.6, see bundled CHANGELOG.md

-------------------------------------------------------------------
Tue Nov 14 15:39:42 UTC 2023 - Dan Čermák <dan.cermak@posteo.net>

- New upstream release 1.21.5, see bundled CHANGELOG.md

-------------------------------------------------------------------
Mon Oct 10 13:24:31 UTC 2022 - Stephan Kulow <coolo@suse.com>

updated to version 1.21.3
 see installed CHANGELOG.md


-------------------------------------------------------------------
Wed Jan 20 13:25:14 UTC 2021 - Stephan Kulow <coolo@suse.com>

updated to version 1.21.2
 see installed CHANGELOG.md


-------------------------------------------------------------------
Thu May  7 21:33:56 UTC 2020 - Stephan Kulow <coolo@suse.com>

- updated to version 1.21.0
 see installed CHANGELOG.md

-------------------------------------------------------------------
Mon Feb 10 15:52:44 UTC 2020 - Stephan Kulow <coolo@suse.com>

- updated to version 1.20.0
 see installed CHANGELOG.md

  ## [1.20.0][] (2019-08-03)
  
    * [#468](https://github.com/capistrano/sshkit/pull/468): Make `upload!` take a `:verbosity` option like `exec` does - [@grosser](https://github.com/grosser)

-------------------------------------------------------------------
Fri Jul 19 09:39:24 UTC 2019 - Stephan Kulow <coolo@suse.com>

- updated to version 1.19.1
 see installed CHANGELOG.md

  ## [1.19.1][] (2019-07-02)
  
    * [#465](https://github.com/capistrano/sshkit/pull/456): Fix a regression in 1.19.0 that prevented `~` from being used in Capistrano paths, e.g. `:deploy_to`, etc. - [@grosser](https://github.com/grosser)
  
  ## [1.19.0][] (2019-06-30)
  
    * [#455](https://github.com/capistrano/sshkit/pull/455): Ensure UUID of commands are stable in logging - [@lazyatom](https://github.com/lazyatom)
    * [#453](https://github.com/capistrano/sshkit/pull/453): `as` and `within` now properly escape their user/group/path arguments, and the command nested within an `as` block is now properly escaped before passing to `sh -c`. In the unlikely case that you were manually escaping commands passed to SSHKit as a workaround, you will no longer need to do this. See [#458](https://github.com/capistrano/sshkit/issues/458) for examples of what has been fixed. - [@grosser](https://github.com/grosser)
    * [#460](https://github.com/capistrano/sshkit/pull/460): Handle IPv6 addresses without port - [@will-in-wi](https://github.com/will-in-wi)

-------------------------------------------------------------------
Sat Mar  2 15:40:04 UTC 2019 - Stephan Kulow <coolo@suse.com>

- updated to version 1.18.2
 see installed CHANGELOG.md

  ## [1.18.2][] (2019-02-03)
  
    * [#448](https://github.com/capistrano/sshkit/pull/448): Fix misbehaving connection eviction loop when disabling connection pooling - [Sebastian Cohnen](https://github.com/tisba)
  
  ## [1.18.1][] (2019-01-26)
  
    * [#447](https://github.com/capistrano/sshkit/pull/447): Fix broken thread safety by widening critical section - [Takumasa Ochi](https://github.com/aeroastro)

-------------------------------------------------------------------
Thu Nov 22 05:38:06 UTC 2018 - Stephan Kulow <coolo@suse.com>

- updated to version 1.18.0
 see installed CHANGELOG.md

  ## [1.18.0][] (2018-10-21)
  
    * [#435](https://github.com/capistrano/sshkit/pull/435): Consistent verbosity configuration #capture and #test methods - [@NikolayRys](https://github.com/NikolayRys)

-------------------------------------------------------------------
Sun Jul  8 02:18:04 UTC 2018 - factory-auto@kulow.org

- updated to version 1.17.0
 see installed CHANGELOG.md

  ## [1.17.0][] (2018-07-07)
  
    * [#430](https://github.com/capistrano/sshkit/pull/430): [Feature] Command Argument STDOUT/capistrano.log Hiding - [@NorseGaud](https://github.com/NorseGaud)

-------------------------------------------------------------------
Mon May 21 01:17:13 UTC 2018 - factory-auto@kulow.org

- updated to version 1.16.1
 see installed CHANGELOG.md

  ## [1.16.1][] (2018-05-20)
  
    * [#425](https://github.com/capistrano/sshkit/pull/425): Command#group incorrectly escapes double quotes, resulting in a a syntax error when specifying the group execution using `as`. This issue manifested when user command quotes changed from double quotes to single quotes. This fix removes the double quote escaping - [@pblesi](https://github.com/pblesi).

-------------------------------------------------------------------
Tue Feb 27 05:35:47 UTC 2018 - factory-auto@kulow.org

- updated to version 1.16.0
 see installed CHANGELOG.md

  ## [1.16.0][] (2018-02-03)
  
    * [#417](https://github.com/capistrano/sshkit/pull/417): Cache key generation for connections becomes slow when `known_hosts` is a valid `net/ssh` options and `known_hosts` file is big. This changes the cache key generation and fixes performance issue - [@ElvinEfendi](https://github.com/ElvinEfendi).
  
  ## [1.15.1][] (2017-11-18)
  
  This is a small bug-fix release that fixes problems with `upload!` and `download!` that were inadvertently introduced in 1.15.0.
  
  ### Breaking changes
  
    * None
  
  ### Bug fixes
  
    * [#410](https://github.com/capistrano/sshkit/pull/410): fix NoMethodError when using upload!/download! with Pathnames - [@UnderpantsGnome](https://github.com/UnderpantsGnome)
    * [#411](https://github.com/capistrano/sshkit/pull/410): fix upload!/download! when using relative paths outside of `within` blocks -  [@Fjan](https://github.com/Fjan)
  
  ## [1.15.0][] (2017-11-03)
  
  ### New features
  
    * [#408](https://github.com/capistrano/sshkit/pull/408): upload! and download! now respect `within` - [@sj26](https://github.com/sj26)
  
  ### Potentially breaking changes
  
    * `upload!` and `download!` now support remote paths which are
      relative to the `within` working directory. They were previously documented
      as only supporting absolute paths, but relative paths still worked relative
      to the remote working directory. If you rely on the previous behaviour you
      may need to adjust your code.

-------------------------------------------------------------------
Thu Aug  3 19:43:23 UTC 2017 - coolo@suse.com

- updated to version 1.14.0
 see installed CHANGELOG.md

  ## [1.14.0][] (2017-06-30)
  
  ### Breaking changes
  
    * None
  
  ### New features
  
    * [#401](https://github.com/capistrano/sshkit/pull/401): Add :log_percent option to specify upload!/download! transfer log percentage - [@aubergene](https://github.com/aubergene)

-------------------------------------------------------------------
Sat Apr  1 04:37:39 UTC 2017 - coolo@suse.com

- updated to version 1.13.1
 see installed CHANGELOG.md

  ## [1.13.1][] (2017-03-31)
  
  ### Breaking changes
  
    * None
  
  ### Bug fixes
  
    * [#397](https://github.com/capistrano/sshkt/pull/397): Fix NoMethodError assign_defaults with net-ssh older than 4.0.0 - [@shirosaki](https://github.com/shirosaki)

-------------------------------------------------------------------
Sat Mar 25 05:36:25 UTC 2017 - coolo@suse.com

- updated to version 1.13.0
 see installed CHANGELOG.md

  ## [1.13.0][] (2017-03-24)
  
  ### Breaking changes
  
    * None
  
  ### New features
  
    * [#372](https://github.com/capistrano/sshkit/pull/372): Use cp_r in local backend with recursive option - [@okuramasafumi](https://github.com/okuramasafumi)
  
  ### Bug fixes
  
    * [#390](https://github.com/capistrano/sshkit/pull/390): Properly wrap Ruby StandardError w/ add'l context - [@mattbrictson](https://github.com/mattbrictson)
    * [#392](https://github.com/capistrano/sshkit/pull/392): Fix open two connections with changed cache key - [@shirosaki](https://github.com/shirosaki)

-------------------------------------------------------------------
Sat Feb 11 06:10:45 UTC 2017 - coolo@suse.com

- updated to version 1.12.0
 see installed CHANGELOG.md

  ## [1.12.0][] (2017-02-10)
  
  ### Breaking changes
  
    * None
  
  ### New features
  
    * Add `SSHKit.config.default_runner_config` option that allows overriding default runner configs.

-------------------------------------------------------------------
Sat Dec 17 05:48:38 UTC 2016 - coolo@suse.com

- updated to version 1.11.5
 see installed CHANGELOG.md

-------------------------------------------------------------------
Thu Nov  3 05:52:56 UTC 2016 - coolo@suse.com

- updated to version 1.11.4
 see installed CHANGELOG.md

  ## [1.11.4][] (2016-11-02)
  
    * Use string interpolation for environment variables to avoid escaping issues
      with sprintf
      [PR #280](https://github.com/capistrano/sshkit/pull/280)
      @Sinjo - Chris Sinjakli

-------------------------------------------------------------------
Sat Sep 17 04:47:58 UTC 2016 - coolo@suse.com

- updated to version 1.11.3
 see installed CHANGELOG.md

  ## [1.11.3][] (2016-09-16)
  
    * Fix known_hosts caching to match on the entire hostlist
      [PR #364](https://github.com/capistrano/sshkit/pull/364) @byroot

-------------------------------------------------------------------
Sat Jul 30 04:33:44 UTC 2016 - coolo@suse.com

- updated to version 1.11.2
 see installed CHANGELOG.md

  ## [1.11.2][] (2016-07-29)
  
  ### Bug fixes
  
    * Fixed a crash occurring when `Host@keys` was set to a non-Enumerable.
      @xavierholt [PR #360](https://github.com/capistrano/sshkit/pull/360)

-------------------------------------------------------------------
Wed Jun 29 04:33:48 UTC 2016 - coolo@suse.com

- updated to version 1.11.1
 see installed CHANGELOG.md

  ## [1.11.1][] (2016-06-17)
  
  ### Bug fixes
  
    * Fixed a regression in 1.11.0 that would cause
      `ArgumentError: invalid option(s): known_hosts` in some older versions of
      net-ssh. @byroot [#357](https://github.com/capistrano/sshkit/issues/357)

-------------------------------------------------------------------
Wed Jun 15 04:34:48 UTC 2016 - coolo@suse.com

- updated to version 1.11.0
 see installed CHANGELOG.md

-------------------------------------------------------------------
Sat Apr 23 04:36:00 UTC 2016 - coolo@suse.com

- updated to version 1.10.0
 see installed CHANGELOG.md

  ## 1.10.0 (2016-04-22)
  
    * You can now opt-in to caching of SSH's known_hosts file for a speed boost
      when deploying to a large fleet of servers. Refer to the
      [README](https://github.com/capistrano/sshkit#known-hosts-caching) for
      details. We plan to turn this on by default in a future version of SSHKit.
      [PR #330](https://github.com/capistrano/sshkit/pull/330) @byroot
    * SSHKit now explicitly closes its pooled SSH connections when Ruby exits;
      this fixes `zlib(finalizer): the stream was freed prematurely` warnings
      [PR #343](https://github.com/capistrano/sshkit/pull/343) @mattbrictson
    * Allow command map entries (`SSHKit::CommandMap#[]`) to be Procs
      [PR #310](https://github.com/capistrano/sshkit/pull/310)
      @mikz

-------------------------------------------------------------------
Fri Mar 11 05:43:55 UTC 2016 - coolo@suse.com

- updated to version 1.9.0
 see installed CHANGELOG.md

  ## 1.9.0
  
  **Refer to the 1.9.0.rc1 release notes for a full list of new features, fixes,
  and potentially breaking changes since SSHKit 1.8.1.** There are no changes
  since 1.9.0.rc1.
  
  ## 1.9.0.rc1
  
  ### Potentially breaking changes
  
    * The SSHKit DSL is no longer automatically included when you `require` it.
      **This means you  must now explicitly `include SSHKit::DSL`.**
      See [PR #219](https://github.com/capistrano/sshkit/pull/219) for details.
      @beatrichartz
    * `SSHKit::Backend::Printer#test` now always returns true
      [PR #312](https://github.com/capistrano/sshkit/pull/312) @mikz
  
  ### New features
  
    * `SSHKit::Formatter::Abstract` now accepts an optional Hash of options
      [PR #308](https://github.com/capistrano/sshkit/pull/308) @mattbrictson
    * Add `SSHKit::Backend.current` so that Capistrano plugin authors can refactor
      helper methods and still have easy access to the currently-executing Backend
      without having to use global variables.
    * Add `SSHKit.config.default_runner` options that allows to override default command runner.
      This option also accepts a name of the custom runner class.
    * The ConnectionPool has been rewritten in this release to be more efficient
      and have a cleaner internal API. You can still completely disable the pool
      by setting `SSHKit::Backend::Netssh.pool.idle_timeout = 0`.
      @mattbrictson @byroot [PR #328](https://github.com/capistrano/sshkit/pull/328)
  
  ### Bug fixes
  
    * make sure working directory for commands is properly cleared after `within` blocks
      [PR #307](https://github.com/capistrano/sshkit/pull/307)
      @steved
    * display more accurate string for commands with spaces being output in `Formatter::Pretty`
      [PR #304](https://github.com/capistrano/sshkit/pull/304)
      @steved
      [PR #319](https://github.com/capistrano/sshkit/pull/319) @mattbrictson
    * Fix a race condition experienced in JRuby that could cause multi-server
      deploys to fail. [PR #322](https://github.com/capistrano/sshkit/pull/322)
      @mattbrictson

-------------------------------------------------------------------
Sat Dec 12 05:32:08 UTC 2015 - coolo@suse.com

- updated to version 1.8.1
 see installed CHANGELOG.md

  ## 1.8.1
  
    * Change license to MIT, thanks to all the patient contributors who gave
      their permissions.

-------------------------------------------------------------------
Thu Dec  3 05:30:54 UTC 2015 - coolo@suse.com

- updated to version 1.8.0
 see installed CHANGELOG.md

  ## 1.8.0
  
    * add SSHKit::Backend::ConnectionPool#close_connections
      [PR #285](https://github.com/capistrano/sshkit/pull/285)
      @akm
    * Clean up rubocop lint warnings
      [PR #275](https://github.com/capistrano/sshkit/pull/275)
      @cshaffer
      * Prepend unused parameter names with an underscore
      * Prefer “safe assignment in condition”
      * Disambiguate regexp literals with parens
      * Prefer `sprintf` over `String#%`
      * No longer shadow `caller_line` variable in `DeprecationLogger`
      * Rescue `StandardError` instead of `Exception`
      * Remove useless `private` access modifier in `TestAbstract`
      * Disambiguate block operator with parens
      * Disambiguate between grouped expression and method params
      * Remove assertion in `TestHost#test_assert_hosts_compare_equal` that compares something with itself
    * Export environment variables and execute command in a subshell.
      [PR #273](https://github.com/capistrano/sshkit/pull/273)
      @kuon
    * Introduce `log_command_start`, `log_command_data`, `log_command_exit` methods on `Formatter`
      [PR #257](https://github.com/capistrano/sshkit/pull/257)
      @robd
      * Deprecate `@stdout` and `@stderr` accessors on `Command`
    * Add support for deprecation logging options.
      [README](README.md#deprecation-warnings),
      [PR #258](https://github.com/capistrano/sshkit/pull/258)
      @robd
    * Quote environment variable values.
      [PR #250](https://github.com/capistrano/sshkit/pull/250)
      @Sinjo - Chris Sinjakli
    * Simplified formatter hierarchy.
      [PR #248](https://github.com/capistrano/sshkit/pull/248)
      @robd
      * `SimpleText` formatter now extends `Pretty`, rather than duplicating.
    * Hide ANSI color escape sequences when outputting to a file.
      [README](README.md#output-colors),
      [Issue #245](https://github.com/capistrano/sshkit/issues/245),
      [PR #246](https://github.com/capistrano/sshkit/pull/246)
      @robd
      * Now only color the output if it is associated with a tty,
        or the `SSHKIT_COLOR` environment variable is set.
    * Removed broken support for assigning an `IO` to the `output` config option.
      [Issue #243](https://github.com/capistrano/sshkit/issues/243),
      [PR #244](https://github.com/capistrano/sshkit/pull/244)
      @robd
      * Use `SSHKit.config.output = SSHKit::Formatter::SimpleText.new($stdin)` instead
    * Added support for `:interaction_handler` option on commands.
      [PR #234](https://github.com/capistrano/sshkit/pull/234),
      [PR #242](https://github.com/capistrano/sshkit/pull/242)
      @robd
    * Removed partially supported `TRACE` log level.
      [2aa7890](https://github.com/capistrano/sshkit/commit/2aa78905f0c521ad9f697e7a4ed04ba438d5ee78)
      @robd
    * Add support for the `:strip` option to the `capture` method and strip by default on the `Local` backend.
      [PR #239](https://github.com/capistrano/sshkit/pull/239),
      [PR #249](https://github.com/capistrano/sshkit/pull/249)
      @robd
      * The `Local` backend now strips by default to be consistent with the `Netssh` one.
      * This reverses change [7d15a9a](https://github.com/capistrano/sshkit/commit/7d15a9aebfcc43807c8151bf6f3a4bc038ce6218) to the `Local` capture API to remove stripping by default.
      * If you require the raw, unstripped output, pass the `strip: false` option: `capture(:ls, strip: false)`
    * Simplified backend hierarchy.
      [PR #235](https://github.com/capistrano/sshkit/pull/235),
      [PR #237](https://github.com/capistrano/sshkit/pull/237)
      @robd
      * Moved duplicate implementations of `make`, `rake`, `test`, `capture`, `background` on to `Abstract` backend.
      * Backend implementations now only need to implement `execute_command`, `upload!` and `download!`
      * Removed `Printer` from backend hierarchy for `Local` and `Netssh` backends (they now just extend `Abstract`)
      * Removed unused `Net::SSH:LogLevelShim`
    * Removed dependency on the `colorize` gem. SSHKit now implements its own ANSI color logic, with no external dependencies. Note that SSHKit now only supports the `:bold` or plain modes. Other modes will be gracefully ignored. [#263](https://github.com/capistrano/sshkit/issues/263)
    * New API for setting the formatter: `use_format`. This differs from `format=` in that it accepts options or arguments that will be passed to the formatter's constructor. The `format=` syntax will be deprecated in a future release. [#295](https://github.com/capistrano/sshkit/issues/295)
    * SSHKit now immediately raises a `NameError` if you try to set a formatter that does not exist. [#295](https://github.com/capistrano/sshkit/issues/295)

-------------------------------------------------------------------
Fri Mar  6 17:38:51 UTC 2015 - coolo@suse.com

- updated to version 1.7.1
 
   * Fix a regression in 1.7.0 that caused command completion messages to be removed from log output. @mattbrictson
 
 ## 1.7.0
 
   * Update Vagrantfile to use multi-provider Hashicorp precise64 box - remove URLs. @townsen
   * Merge host ssh_options and Netssh defaults @townsen
     Previously if host-level ssh_options were defined the Netssh defaults
     were ignored.
   * Merge host ssh_options and Netssh defaults
   * Fixed race condition where output of failed command would be empty. @townsen
     Caused random failures of `test_execute_raises_on_non_zero_exit_status_and_captures_stdout_and_stderr`
     Also fixes output handling in failed commands, and generally buggy output.
   * Remove override of backtrace() and backtrace_locations() from ExecuteError. @townsen
     This interferes with rake default behaviour and creates duplicate stacktraces.
   * Allow running local commands using `on(:local)`
   * Implement the upload! and download! methods for the local backend

-------------------------------------------------------------------
Mon Feb  9 10:04:45 UTC 2015 - coolo@suse.com

- updated to version 1.6.1
   * Fix colorize to use the correct API (@fazibear)
   * Lock colorize (sorry guys) version at >= 0.7.0
 
 ## 1.6.0 (Yanked, because of colorize.)
 
   * Force dependency on colorize v0.6.0
   * Add your entries here, remember to credit yourself however you want to be
     credited!
   * Remove strip from capture to preserve whitespace. Nick Townsend
   * Add vmware_fusion Vagrant provider. Nick Townsend
   * Add some padding to the pretty log formatter
 
 ## 1.5.1
 
   * Use `sudo -u` rather than `sudo su` to switch users. Mat Trudel
 
 ## 1.5.0
 
   * Deprecate background helper - too many badly behaved pseudo-daemons. Lee Hambley
   * Don't colourize unless $stdout is a tty. Lee Hambley
   * Remove out of date "Known Issues" section from README. Lee Hambley
   * Dealy variable interpolation inside `as()` block. Nick Townsend
   * Fixes for functional tests under modern Vagrant. Lewis Marshal
   * Fixes for connection pooling. Chris Heald
   * Add `localhost` hostname to local backend. Adam Mckaig
   * Wrap execptions to include hostname. Brecht Hoflack
   * Remove `shellwords` stdlib dependency Bruno Sutic
   * Remove unused `cooldown` accessor. Bruno Sutic
   * Replace Term::ANSIColor with a lighter solution. Tom Clements
   * Documentation fixes. Matt Brictson

-------------------------------------------------------------------
Mon Oct 13 18:47:43 UTC 2014 - coolo@suse.com

- adapt to new rubygem packaging

-------------------------------------------------------------------
Sun May 18 09:04:45 UTC 2014 - coolo@suse.com

- updated to version 1.4.0
   * Removed `invoke` alias for [`SSHKit::Backend::Printer.execute`](https://github.com/capistrano/sshkit/blob/master/lib/sshkit/backends/printer.rb#L20). This is to prevent collisions with
   methods in capistrano with similar names, and to provide a cleaner API. See [capistrano issue 912](https://github.com/capistrano/capistrano/issues/912) and [issue 107](https://github.com/capistrano/sshkit/issues/107) for more details.
   * Connection pooling now uses a thread local to store connection pool, giving each thread its own connection pool. Thank you @mcbriston see [#101](https://github.com/capistrano/sshkit/pull/101) for more.
   * Command map indifferent towards strings and symbols thanks to @thomasfedb see [#91](https://github.com/capistrano/sshkit/pull/91)
   * Moved vagrant wrapper to `support` directory, added ability to run tests with vagrant using ssh. @miry see [#64](https://github.com/capistrano/sshkit/pull/64)
   * Removed unnecessary require `require_relative '../sshkit'` in `lib/sshkit/dsl.rb` prevents warnings thanks @brabic.
   * Doc fixes thanks @seanhandley @vojto

-------------------------------------------------------------------
Fri Dec 20 12:02:56 UTC 2013 - coolo@suse.com

- updated to version 1.3.0
  * Connection pooling. SSH connections are reused across multiple invocations
    of `on()`, which can result in significant performance gains. See:
    https://github.com/capistrano/sshkit/pull/70. Matt @mbrictson Brictson.
  * Fixes to the Formatter::Dot and to the formatter class name resolver. @hab287:w
  * Added the license to the Gemspec. @anatol.
  * Fix :limit handling for the `in: :groups` run mode. Phil @phs Smith
  * Doc fixes @seanhandley, @sergey-alekseev.

-------------------------------------------------------------------
Sat Nov 23 09:22:44 UTC 2013 - coolo@suse.com

- updated to version 1.2.0
  * Support picking up a project local SSH config file, if a SSH config file
    exists at ./.ssh/config it will be merged with the ~/.ssh/config. This is
    ideal for defining project-local proxies/gateways, etc. Thanks to Alex 
    @0rca Vzorov.
  * Tests and general improvements to the Printer backends (mostly used 
    internally). Thanks to Michael @miry Nikitochkin.
  * Update the net-scp dependency version. Thanks again to Michael @miry 
    Nikitochkin.
  * Improved command map. This feature allows mapped variables to be pushed
    and unshifted onto the mapping so that the Capistrano extensions for
    rbenv and bundler, etc can work together. For discussion about the reasoning
    see https://github.com/capistrano/capistrano/issues/639 and 
    https://github.com/capistrano/sshkit/pull/45. A big thanks to Kir @kirs
    Shatrov.
  * `test()` and `capture()` now behave as expected inside a `run_locally` block
    meaning that they now run on your local machine, rather than erring out. Thanks
    to Kentaro @kentaroi Imai.
  * The `:wait` option is now successfully passed to the runner now. Previously the 
    `:wait` option was ignored. Thanks to Jordan @jhollinger Hollinger for catching
    the mistake in our test coverage.
  * Fixes and general improvements to the `download()` method which until now was 
    quite naïve. Thanks to @chqr.

-------------------------------------------------------------------
Sun Oct 20 12:05:40 UTC 2013 - coolo@suse.com

- updated to version 1.1.0
   * The output now reads "Command exited with status _", rather than "command
     failed", or "command succeded", the semantics are the same, but people
     were confused by "failure", when things were running correctly.
 
   * Small fix to the printer backend for tests, casting command to a string
     explicitly.
 
   * The gem now supports a run_locally, although it's nothing to do with SSH,
     it makes a nice API. There are examples in the EXAMPLES.md.

-------------------------------------------------------------------
Fri Oct 11 06:59:08 UTC 2013 - coolo@suse.com

- initial package

