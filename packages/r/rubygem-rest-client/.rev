<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>97f4681958f71fcc99c97d4f5bde28d5</srcmd5>
    <version>1.6.7</version>
    <time>1354712862</time>
    <user>namtrac</user>
    <comment>http://lists.opensuse.org/opensuse-factory/2012-12/msg00020.html</comment>
    <requestid>143813</requestid>
  </revision>
  <revision rev="2" vrev="3">
    <srcmd5>97f4681958f71fcc99c97d4f5bde28d5</srcmd5>
    <version>1.6.7</version>
    <time>1359110342</time>
    <user>adrianSuSE</user>
    <comment>Split 12.3 from Factory</comment>
  </revision>
  <revision rev="3" vrev="5">
    <srcmd5>97f4681958f71fcc99c97d4f5bde28d5</srcmd5>
    <version>1.6.7</version>
    <time>1379664567</time>
    <user>adrianSuSE</user>
    <comment>Split 13.1 from Factory</comment>
  </revision>
  <revision rev="4" vrev="6">
    <srcmd5>7f917aa26d2cee62360980a333f067be</srcmd5>
    <version>1.6.7</version>
    <time>1396174449</time>
    <user>scarabeus_factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>228205</requestid>
  </revision>
  <revision rev="5" vrev="8">
    <srcmd5>7f917aa26d2cee62360980a333f067be</srcmd5>
    <version>1.6.7</version>
    <time>1409303275</time>
    <user>adrianSuSE</user>
    <comment>Split 13.2 from Factory</comment>
  </revision>
  <revision rev="6" vrev="9">
    <srcmd5>b7f2db27f80db8e6344fface6c0ad0d7</srcmd5>
    <version>1.6.7</version>
    <time>1413263511</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>255466</requestid>
  </revision>
  <revision rev="7" vrev="10">
    <srcmd5>fb134bd7904c0fd97ce36fff7cda2b9e</srcmd5>
    <version>1.6.7</version>
    <time>1414066827</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>257991</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>b70db8d1e9a8464b84e63b485da4ff2c</srcmd5>
    <version>1.7.3</version>
    <time>1425217594</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>286937</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>0ca4765502d2199c4070d1a096b33505</srcmd5>
    <version>2.0.1</version>
    <time>1491895946</time>
    <user>maxlin_factory</user>
    <comment>1</comment>
    <requestid>479682</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>9f3e33573d6a508016f0922b8750b628</srcmd5>
    <version>2.0.2</version>
    <time>1496926867</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>497689</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>c0d33deff0330626e23796dc28e6ceb8</srcmd5>
    <version>2.1.0</version>
    <time>1585085675</time>
    <user>dimstar_suse</user>
    <comment>- updated to version 2.1.0
 see installed history.md
  # 2.1.0
  
  - Add a dependency on http-accept for parsing Content-Type charset headers.
    This works around a bad memory leak introduced in MRI Ruby 2.4.0 and fixed in
    Ruby 2.4.2. (#615)
  - Use mime/types/columnar from mime-types 2.6.1+, which is leaner in memory
    usage than the older storage model of mime-types. (#393)
  - Add `:log` option to individual requests. This allows users to set a log on a
    per-request / per-resource basis instead of the kludgy global log. (#538)
  - Log request duration by tracking request start and end times. Make
    `log_response` a method on the Response object, and ensure the `size` method
    works on RawResponse objects. (#126)
    - `# =&gt; 200 OK | text/html 1270 bytes, 0.08s`
    - Also add a new `:stream_log_percent` parameter, which is applicable only
      when `:raw_response =&gt; true` is set. This causes progress logs to be
      emitted only on every N% (default 10%) of the total download size rather
      than on every chunk.
  - Drop custom handling of compression and use built-in Net::HTTP support for
    supported Content-Encodings like gzip and deflate. Don't set any explicit
    `Accept-Encoding` header, rely instead on Net::HTTP defaults. (#597)
    - Note: this changes behavior for compressed responses when using
      `:raw_response =&gt; true`. Previously the raw response would not have been
      uncompressed by rest-client, but now Net::HTTP will uncompress it.
  - The previous fix to avoid having Netrc username/password override an
    Authorization header was case-sensitive and incomplete. Fix this by
    respecting existing Authorization headers, regardless of letter case. (#550)
  - Handle ParamsArray payloads. Previously, rest-client would silently drop a
    ParamsArray passed as the payload. Instead, automatically use
    Payload::Multipart if the ParamsArray contains a file handle, or use
    Payload::UrlEncoded if it doesn't. (#508)
  - Gracefully handle Payload objects (Payload::Base or subclasses) that are
    passed as a payload argument. Previously, `Payload.generate` would wrap a
    Payload object in Payload::Streamed, creating a pointlessly nested payload.
    Also add a `closed?` method to Payload objects, and don't error in
    `short_inspect` if `size` returns nil. (#603)
  - Test with an image in the public domain to avoid licensing complexity. (#607)
</comment>
    <requestid>787515</requestid>
  </revision>
</revisionlist>
