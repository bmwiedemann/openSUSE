 lib/error.c        |    2 +-
 lib/getopt.h       |    2 +-
 lib/long-options.c |    2 +-
 lib/long-options.h |    2 +-
 lib/xstrtol.c      |    2 --
 src/lrz.c          |    6 +++---
 src/lsz.c          |    6 +++---
 7 files changed, 10 insertions(+), 12 deletions(-)

--- a/lib/error.c
+++ b/lib/error.c
@@ -73,7 +73,7 @@ extern char *program_name;
 
 # if HAVE_STRERROR
 #  ifndef strerror		/* On some systems, strerror is a macro */
-char *strerror ();
+char *strerror (int);
 #  endif
 # else
 static char *
--- a/lib/getopt.h
+++ b/lib/getopt.h
@@ -101,7 +101,7 @@ struct option
    errors, only prototype getopt for the GNU C library.  */
 extern int getopt (int argc, char *const *argv, const char *shortopts);
 #else /* not __GNU_LIBRARY__ */
-extern int getopt ();
+extern int getopt (int, char * const [], const char *);
 #endif /* __GNU_LIBRARY__ */
 extern int getopt_long (int argc, char *const *argv, const char *shortopts,
 		        const struct option *longopts, int *longind);
--- a/lib/long-options.c
+++ b/lib/long-options.c
@@ -44,7 +44,7 @@ parse_long_options (argc, argv,version,
      int argc;
      char **argv;
      void (*version)();
-     void (*usage)();
+     void (*usage)(int);
 #endif
 {
   int c;
--- a/lib/long-options.h
+++ b/lib/long-options.h
@@ -6,5 +6,5 @@
 #endif
 
 void parse_long_options __P ((int _argc, char **_argv, 
-							  void (*_version) (void), 
+							  void (*_version) (), 
 							  void (*_usage) (int)));
--- a/lib/xstrtol.c
+++ b/lib/xstrtol.c
@@ -65,8 +65,6 @@ extern int errno;
 	}								\
       while (0)
 
-__unsigned long int __strtol ();
-
 /* FIXME: comment.  */
 
 strtol_error
--- a/src/lrz.c
+++ b/src/lrz.c
@@ -42,9 +42,9 @@
 #include "error.h"
 
 #ifndef STRICT_PROTOTYPES
-extern time_t time();
-extern char *strerror();
-extern char *strstr();
+extern time_t time(time_t *tloc);
+extern char *strerror(int errnum);
+extern char *strstr(const char *s1, const char *s2);
 #endif
 
 #ifndef HAVE_ERRNO_DECLARATION
--- a/src/lsz.c
+++ b/src/lsz.c
@@ -51,9 +51,9 @@ void *mm_addr=NULL;
 #include "error.h"
 
 #ifndef STRICT_PROTOTYPES
-extern time_t time();
-extern char *strerror();
-extern char *strstr();
+extern time_t time(time_t *tloc);
+extern char *strerror(int errnum);
+extern char *strstr(const char *s1, const char *s2);
 #endif
 
 #ifndef HAVE_ERRNO_DECLARATION
