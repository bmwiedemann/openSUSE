Not easy to build. If someone can figure out how to make this work,
this patch can be removed again.

diff --git a/src/cpp/session/CMakeLists.txt b/src/cpp/session/CMakeLists.txt
index a0bc394..657c2e9 100644
--- a/src/cpp/session/CMakeLists.txt
+++ b/src/cpp/session/CMakeLists.txt
@@ -670,12 +670,6 @@ if(NOT RSTUDIO_SESSION_WIN32 AND NOT RSESSION_ALTERNATE_BUILD)
    install(DIRECTORY "${RSTUDIO_DEPENDENCIES_DICTIONARIES_DIR}"
            DESTINATION "${RSTUDIO_INSTALL_SUPPORTING}/resources")

-   # install node
-   install(
-      DIRECTORY "${RSTUDIO_DEPENDENCIES_DIR}/common/node/${RSTUDIO_INSTALLED_NODE_VERSION}/"
-      DESTINATION "${RSTUDIO_INSTALL_BIN}/node"
-      USE_SOURCE_PERMISSIONS)
-
    # install embedded packages
    foreach(PKG ${RSTUDIO_EMBEDDED_PACKAGES})
       file(GLOB PKG_FILES "${RSTUDIO_DEPENDENCIES_DIR}/common/${PKG}*.tar.gz")
diff --git a/src/gwt/build.xml b/src/gwt/build.xml
index 27ffe33..24fd98d 100644
--- a/src/gwt/build.xml
+++ b/src/gwt/build.xml
@@ -83,80 +83,6 @@
       <echo>Concatenated acesupport files to 'acesupport.js'</echo>
    </target>
 
-   <!-- panmirror typescript library -->
-   <!-- ensure version matches RSTUDIO_NODE_VERSION -->
-   <property name="node.version" value="18.18.2"/>
-   <property name="node.dir" value="../../dependencies/common/node/${node.version}"/>
-   <!-- use yarn from system but will prefer yarn from dependencies if available -->
-   <condition property="yarn.bin" value="yarn">
-     <not>
-        <os family="windows" />
-     </not>
-   </condition>
-   <available
-      property="yarn.bin"
-      value="${node.dir}/bin/yarn"
-      file="${node.dir}/bin/yarn"/>
-   <condition property="yarn.bin" value="${node.dir}/node_modules/yarn/bin/yarn.cmd">
-     <os family="windows" />
-   </condition>
-   <!-- use yarn from /opt/rstudio-tools if installed (typical for Docker) -->
-   <available
-      property="yarn.bin"
-      value="/opt/rstudio-tools/dependencies/common/node/${node.version}/bin/yarn"
-      file="/opt/rstudio-tools/dependencies/common/node/${node.version}/bin/yarn"/>
-   <!-- use yarn from c:/rstudio-tools if installed (typical for Docker on Windows) -->
-   <available
-      property="yarn.bin"
-      value="c:\rstudio-tools\dependencies\common\node\${node.version}\node_modules\yarn\bin\yarn.cmd"
-      file="c:\rstudio-tools\dependencies\common\node\${node.version}\node_modules\yarn\bin\yarn.cmd"/>
-
-   <property name="panmirror.dir" value="./lib/quarto/apps/panmirror"/>
-   <property name="panmirror.build.dir" value="./www/js/panmirror"/>
-
-   <!-- use panmirror from /opt/rstudio-tools if available (typical for Docker) -->
-   <available
-      property="panmirror.dir"
-      value="/opt/rstudio-tools/src/gwt/lib/quarto/apps/panmirror"
-      file="/opt/rstudio-tools/src/gwt/lib/quarto/apps/panmirror"/>
-   <!-- use yarn from c:/rstudio-tools if installed (typical for Docker on Windows) -->
-   <available
-      property="panmirror.dir"
-      value="c:\rstudio-tools\src\gwt\lib\quarto\apps\panmirror"
-      file="c:\rstudio-tools\src\gwt\lib\quarto\apps\panmirror"/>
-
-   <target name="panmirror" description="Compile panmirror library">
-
-      <!-- Make sure a default value for panmirror.minify is set -->
-      <condition property="panmirror.minify" value="true">
-         <not>
-            <isset property="panmirror.minify" />
-         </not>
-      </condition>
-
-      <echo message="yarn location: ${yarn.bin}"/>
-      <echo message="panmirror location: ${panmirror.dir}"/>
-      <echo message="panmirror minify: ${panmirror.minify}"/>
-
-      <mkdir dir="${panmirror.build.dir}"/>
-      <exec executable="${yarn.bin}" dir="${panmirror.dir}" resolveexecutable="true" failonerror="true">
-         <arg value="install"/>
-         <arg value="--network-timeout"/>
-         <arg value="240000"/>
-      </exec>
-      <exec executable="${yarn.bin}" dir="${panmirror.dir}" resolveexecutable="true" failonerror="true">
-         <arg value="build"/>
-         <arg value="--minify"/>
-         <arg value="${panmirror.minify}"/>
-         <arg value="--sourcemap"/>
-         <arg value="true"/>
-         <env key="PANMIRROR_OUTDIR" value="dist-rstudio"/>
-      </exec>
-      <copy todir="${panmirror.build.dir}">
-         <fileset dir="${panmirror.dir}/dist-rstudio"/>
-      </copy>
-   </target>
-
    <target name="javac" description="Compile java source">
       <mkdir dir="${build.dir}"/>
       <!-- Compile com.google stuff separately from org.rstudio stuff since
@@ -186,9 +112,6 @@
    </target>
 
    <target name="gwtc" depends="ext,javac" description="GWT compile to JavaScript">
-      <antcall target="panmirror">
-         <param name="panmirror.target" value="ide-dist"/>
-      </antcall>
       <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
          <classpath>
             <pathelement location="${src.dir}"/>
@@ -237,8 +160,6 @@
       <antcall target="generate-i18n"/>
       <antcall target="codeserver">
          <param name="gwt.main.module" value="org.rstudio.studio.RStudioDesktopSuperDevMode"/>
-         <param name="panmirror.target" value="ide-dev"/>
-         <param name="panmirror.minify" value="false"/>
       </antcall>
    </target>
 
