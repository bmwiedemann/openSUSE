# ---
# Since vagrant-spec has no release yet, there is no gem on rubygems.org. Thus
# the gem must be rebuild manually on each update.
#
# Therefore, clone the upstream repository:
# $ git clone https://github.com/hashicorp/vagrant-spec
#
# apply the following patches:
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~{.patch}
# diff --git a/lib/vagrant-spec/version.rb b/lib/vagrant-spec/version.rb
# index 3625ab7..0e95cf3 100644
# --- a/lib/vagrant-spec/version.rb
# +++ b/lib/vagrant-spec/version.rb
# @@ -1,5 +1,5 @@
#  module Vagrant
#    module Spec
# -    VERSION = "0.0.1"
# +    VERSION = "0.0.1." + `git log --pretty=format:'%h' -n 1 origin/master` + ".git"
#    end
#  end
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# and:
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~{.patch}
# diff --git a/vagrant-spec.gemspec b/vagrant-spec.gemspec
# index 33a2d86..d7bc46f 100644
# --- a/vagrant-spec.gemspec
# +++ b/vagrant-spec.gemspec
# @@ -21,7 +21,7 @@ Gem::Specification.new do |spec|
#    spec.add_dependency "childprocess", "~> 0.6.0"
#    spec.add_dependency "log4r", "~> 1.1.9"
#    spec.add_dependency "rspec", "~> 3.5.0"
# -  spec.add_dependency "thor", "~> 0.18.1"
# +  spec.add_dependency "thor", "~> 0.18"
#
#    spec.add_development_dependency "rake"
#  end
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# and build the gem:
# $ gem build vagrant-spec.gemspec
#
# Then copy the gem into the project folder and optionally recreate the spec file:
# $ gem2rpm --config gem2rpm.yml vagrant-spec-0.0.1.abfc344.git.gem > rubygem-vagrant-spec.spec
#
# If you recreated the spec file, then you **must** also override the Source
# field in the spec file to not be an URL to rubygems.org, as that doesn't exist
# and makes factory_auto reject this.
#
# The last step is necessary, when upstream added a new commit and thus the
# version would change.
#
# ## used by gem2rpm
# :summary: this is a custom summary
# ## used by gem2rpm
:description: |-
  vagrant-spec is a both a specification of how Vagrant and its various
  components should behave as well as a library of testing helpers that let you
  write your own unit and acceptance tests for Vagrant.

  The library provides a set of helper methods in addition to RSpec matchers and
  expectations to help you both unit test and acceptance test Vagrant
  components. The RSpec components are built on top of the helper methods so
  that the test library can be used with your test framework of choice, but the
  entire tool is geared very heavily towards RSpec.
# ## used by gem2rpm
:license: MPL-2.0
# ## used by gem2rpm and gem_packages
# :version_suffix: -x_y
# ## used by gem2rpm and gem_packages
# :disable_docs: true
# ## used by gem2rpm
# :disable_automatic_rdoc_dep: true
# ## used by gem2rpm
# :preamble: |-
#   BuildRequires: foobar
#   Requires: foobar
# ## used by gem2rpm
# :patches:
# ## used by gem2rpm
:sources:
# - foo.desktop
# - bar.desktop
# :gem_install_args: '....'
# ## used by gem2rpm
# :pre_install: |-
#   %if 0%{?use_system_libev}
#   export USE_VENDORED_LIBEV="no"
#   %endif
# ## used by gem2rpm
:post_install: |-
  find %{buildroot}/%{_libdir}/ruby/gems \( -name .gitignore -o -name .travis.yml \) | xargs rm
#   # delete custom files here or do other fancy stuff
#   install -D -m 0644 %{S:1} %{buildroot}%{_bindir}/gem2rpm-opensuse
# ## used by gem2rpm
# :testsuite_command: |-
#   (pushd %{buildroot}%{gem_base}/gems/%{mod_full_name} && rake test)
# ## used by gem2rpm
# :filelist: |-
#   /usr/bin/gem2rpm-opensuse
# ## used by gem2rpm
# :scripts:
#   :post: |-
#     /bin/echo foo
# ## used by gem_packages
# :main:
#   :preamble: |-
#     Requires: util-linux
#     Recommends: pwgen
#   :filelist: |-
#     /usr/bin/gem2rpm-opensuse
# ## used by gem_packages
# :custom:
#   apache:
#     :preamble: |-
#       Requires: .....
#     :filelist: |-
#       /etc/apache2/conf.d/passenger.conf
#     :summary: Custom summary is optional
#     :description: |-
#       Custom description is optional
#
#       bar
#     :post: |-
#       /bin/echo foo
#
