<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>6805fc5d962fa98a70e22e15375915e5</srcmd5>
    <version>0.3.0</version>
    <time>1605217553</time>
    <user>dimstar_suse</user>
    <comment>would like this in factory</comment>
    <requestid>847920</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>33c3c0d83011d3b3e2feec09b1440df5</srcmd5>
    <version>0.3.1</version>
    <time>1605450415</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>848431</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>9e11a6229d4f6795497149c2a3b5352d</srcmd5>
    <version>0.3.91</version>
    <time>1620504452</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>891359</requestid>
  </revision>
  <revision rev="4" vrev="2">
    <srcmd5>62841dbcee7405ad730444e542d504ad</srcmd5>
    <version>0.3.91</version>
    <time>1624551775</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>901714</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>00688631069843c00a5ed5a604b41661</srcmd5>
    <version>0.3.92</version>
    <time>1630012519</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>914432</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>9387ddd829a531264da3f1ee8ed4c48d</srcmd5>
    <version>0.4.1</version>
    <time>1641680622</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>944798</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>761ed128663f4cb9b97a127283dffb9f</srcmd5>
    <version>0.5.4</version>
    <time>1667579637</time>
    <user>dimstar_suse</user>
    <comment>- Use the default lua version (currently 5.4): buildrequire
  lua-busted instead of lua53-busted, which then fails to run
  against the default lua interpreter.
  See also boo#1199151

- Update to 0.5.4:
  * Allow passing arguments to structs created via ArrayResize()
    and ArrayExtend() template functions.
  * Fix parsing of whitespace in template array dereference (#175).
  * Display offsets in comments panel (#165).
  * Improve performance of templates that declare many (thousands+)
    of variables in the file.
  * Add Error() function for templates (#186).
  * Fix crash when attempting to use string as a file variable
    in templates (#185).
  * Add plugin for annotating pcap files.

- Update to 0.5.3:
  * Correctly nest comments when updating comments panel (#169).
  * Update text in comments panel when a comment is modified.
  * Fix display of &gt;4GiB virtual offsets in files that are &lt;=4GiB (#170).
  * Add support for code page 437 (IBM) and 932/936/949/950 (Microsoft).
  * Fix handling of multibyte character boundaries in document view.
  * Draw wide characters in document view (#173).
  * Move forwards/backwards and select whole instructions from disassembly in document view.
  * Don't capture tab key press in text area of document view.
  * Add missing error checks.
  * Add number base option to &quot;Jump to offset&quot; dialog.
  * Drawing optimisations (improves responsiveness), particularly on macOS.
  * Fix some undefined behaviour issues.</comment>
    <requestid>1033527</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>1a8146c20166e59f072fdee4aee3dfef</srcmd5>
    <version>0.60.1</version>
    <time>1690809896</time>
    <user>maxlin_factory</user>
    <comment>- Update to 0.60.1:
  New features:
  * Add data histogram tool (#140).
  * Monitor for open files being externally modified and allow
    reloading (#124).
  * Add &quot;Delete comment and children&quot; context menu command to
    delete a comment and any comments encapsulated by it (#198).
  * Allow dragging tabs between windows or out to new ones.
  Quality of life improvements:
  * Use virtual offsets in &quot;Select range&quot; dialog.
  * Don't re-open files to save when there are no changes (#193).
  * Improve performance when large numbers of comments are defined.
  * Open original file when passed a rehex-meta file on the command line (#207).
  Character set handling:
  * Add &lt;charset = &quot;XXX&quot;&gt; syntax to templates (#184).
  * Add character set option to text search (#182, #200).
  * Add IBM codepage 866 and Windows-1251 (#208).
  Binary templates:
  * Expose current array index as ArrayIndex when expanding arrays
    of structs in templates (#191).
  * Fix true/false not being usable inside template functions/structs (#197).
  * Add new ReadString(), SPrintf(), SetComment(), StringLengthBytes(),
    ArrayPush(), ArrayPop() and OffsetOf() template function.
  * Fix repeated execution of the same switch() block in a template (#202).
  * Add 'private' variables to template language.
  * Fix template format strings that expand to further format tokens.
  * Fix template error when converting a float to an int.
  * Remember recently selected templates (#183).
  * Implement lexical variable scoping in templates and allow functions
    to access global variables defined above them (#190).</comment>
    <requestid>1101459</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>b1816b816ff3cbde037a82063d3b05a6</srcmd5>
    <version>0.61.0</version>
    <time>1708027291</time>
    <user>anag+factory</user>
    <comment>- Update to 0.61.0:
  * Permit trailing commas in template enum definitions (#216).
  * Add overwrite/insert toggle to &quot;Fill range&quot; dialog (#213).
  * Add copy/export context menu commands to strings tool (#210).
  * Fix temporary hang in strings tool when processing large files (#217).
  * Fix settings not being saved during application exit.
  * Batch comments panel updates to improve responsiveness (#205).
  * Add search field to comments panel (#204).
  * Add bit editor tool.
  * Add checksum tool (#219).
  * Add options to search for floating point values.
  * Don't reload files modified externally when requested not to.
  * Start search when Enter is pressed in search dialog input field,
	  or search backwards when Shift+Enter is pressed.
  * Add &quot;Reload automatically&quot; toggle to &quot;File&quot; menu to automatically
	  reload the file when modified externally (and not in the editor) (#222).
  * Preserve scroll position when reloading file.</comment>
    <requestid>1146850</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>05435ab7baeec7bf169f91c9862b5a1e</srcmd5>
    <version>0.61.1</version>
    <time>1710434684</time>
    <user>anag+factory</user>
    <comment>- Update to 0.61.0:
  * Fix data being displayed from the wrong point in the file when
    &quot;Collapse matches&quot; is enabled in the file comparison window.</comment>
    <requestid>1157813</requestid>
  </revision>
</revisionlist>
