# ---
# ## used by gem2rpm
# :summary: this is a custom summary
# ## used by gem2rpm
# :description: |-
#   this is a custom description
#
#   it can be multiline
# ## used by gem2rpm
# :license: MIT or Ruby
# ## used by gem2rpm and gem_packages
# :version_suffix: -x_y
# ## used by gem2rpm
# :preamble: |-
#   BuildRequires: foobar
#   Requires: foobar
# ## used by gem2rpm
# :patches:
# - foo.patch: -p1
#   bar.patch: 
# ## used by gem2rpm
# :sources:
# - foo.desktop
# - bar.desktop
# :gem_install_args: '....'
# ## used by gem2rpm
# :pre_install: |-
#   %if 0%{?use_system_libev}
#   export USE_VENDORED_LIBEV="no"
#   %endif
# ## used by gem2rpm
# :post_install: |-
#   # delete custom files here or do other fancy stuff
#   install -D -m 0644 %{S:1} %{buildroot}%{_bindir}/gem2rpm-opensuse
# ## used by gem_packages
# :main:
#   :preamble: |-
#     Requires: util-linux
#     Recommends: pwgen
#   :filelist: |-
#     /usr/bin/gem2rpm-opensuse
# ## used by gem_packages
# :custom:
#   apache:
#     :preamble: |-
#       Requires: .....
#     :filelist: |-
#       /etc/apache2/conf.d/passenger.conf
#     :summary: Custom summary is optional
#     :description: |-
#       Custom description is optional
#
#       bar
---
:license: MIT and GPL-2.0
:preamble: |-
  %if 0%{?suse_version} > 1220
  %bcond_without systemd
  %define passenger_tempdir /run/passenger
  %else
  %bcond_with    systemd
  %define passenger_tempdir /var/run/passenger
  %endif
  %bcond_without systemlibs
  BuildRequires:  apache2-devel
  BuildRequires:  boost-devel
  BuildRequires:  gcc-c++
  BuildRequires:  libopenssl-devel
  %if 0%{?suse_version} >= 1110
  BuildRequires:  libcurl-devel
  %else
  BuildRequires:  curl-devel
  %endif
  BuildRequires:  zlib-devel
  %if %{with systemlibs}
  #BuildRequires:  libeio-devel
  #BuildRequires:  libev-devel
  %endif
  BuildRequires:  %{rubygem rake}
  BuildRequires:  apache-rpm-macros
  BuildRequires:  apache2-utils
  # TODO: move to subpackage
  Recommends:     packageand(apache2:rubygem-passenger-apache2)
  Recommends:     packageand(nginx:rubygem-passenger-nginx)
  Requires:       rubygem(passenger) = %{version}
  Recommends:     rubygem(%{rb_default_ruby_abi}:passenger) = %{version}
:sources:
- mod_passenger.conf
- mod_passenger_root.include
- nginx_passenger.conf
- nginx_passenger_root.include
- passenger.systemd.conf
- series
- rubygem-passenger-rpmlintrc
:patches:
  0001-suse.patch: -p1
  0002-fix-shebangs.patch: -p1
:post_patch: |-
  # those files have been committed accidentally by the developers of passenger with version 6.0.8. they are not needed so
  # we have to remove them (otherwise a suse-filelist-forbidden linter error with a badness of 10000 is raised when .orig
  # files are in the file list). Patching src/ruby_supportlib/phusion_passenger/packaging.rb to exclude these files from
  # the packaging process did not work out, because it's getting parsed before the patch even applies.
  # If you find a better solution, feel free to improve this section here.
  #
  # The files will probably be removed with a later release, so feel free to drop this section if the building fails
  # because of those files being missing.
  sed -i 's/"src\/cxx_supportlib\/vendor-modified\/boost\/thread\/detail\/thread.hpp.orig".freeze, //g' passenger-*.gemspec
  sed -i 's/"src\/cxx_supportlib\/vendor-modified\/boost\/thread\/once.hpp.orig".freeze, //g' passenger-*.gemspec
  # Do not install a Python script with +x
  chmod a-x src/cxx_supportlib/vendor-copy/libuv/gyp_uv.py
:pre_install: |-
  # TODO:
  # currently -lev gets lost when using system libev
  %if %{with systemlibs}
  export USE_VENDORED_LIBEV="yes"
  export USE_VENDORED_LIBEIO="yes"
  %endif
  export EXTRA_CFLAGS="%{optflags}"
  export EXTRA_CXXFLAGS="%{optflags}"
:post_install: |-
  # avoid BUILDROOT leaking into the binaries
  pushd %{mod_full_name}
    export PATH="%{_sbindir}:$PATH"

    #compiling nginx stuff
    rake nginx:clean nginx CACHING=no

    #compiling apache2 stuff
    rake apache2 CACHING="no"
    install -D -m 0755 buildout/apache2/mod_passenger.so %{buildroot}%{apache_libexecdir}/mod_passenger.so

    for i in $(/usr/bin/ruby-find-versioned) ; do
      rubysuffix="${i#/usr/bin/ruby}"
      /usr/bin/rake$rubysuffix native_support
      # we dont calculate the arch here as passenger build seems to use the running host arch and not the arch that ruby was build with.
      rubydir=$($i -r rubygems -e 'puts "#{Gem.ruby_engine}-#{RUBY_VERSION}-"')
      gemdir="%{buildroot}$(/usr/bin/gem$rubysuffix env gemdir)/gems/%{mod_full_name}/src/ruby_supportlib/"
      cp -v buildout/ruby/$rubydir*/*.so $gemdir
      /usr/bin/rake$rubysuffix native_support:clean
    done
    find buildout -name \*.o -print -delete
    mkdir -p %{buildroot}%{_libdir}/passenger/%{version}/{buildout,src}/
    cp -av buildout/support-binaries/                                 %{buildroot}%{_libdir}/passenger/%{version}/
    cp -av src/nodejs_supportlib/ src/helper-scripts/ bin/ resources/ %{buildroot}%{_libdir}/passenger/%{version}/
  popd
  #
  #
  #
  mkdir -p %{buildroot}%{_sysconfdir}/passenger/
  cat <<EOF >  %{buildroot}%{_sysconfdir}/passenger/locations.ini
  [locations]
  packaging_method=rpm
  natively_packaged=true
  bin_dir=%{_libdir}/passenger/%{version}/bin/
  support_binaries_dir=%{_libdir}/passenger/%{version}/support-binaries/
  lib_dir=%{_libdir}/passenger/%{version}/
  include_dir=%{_libdir}/passenger/%{version}/
  helper_scripts_dir=%{_libdir}/passenger/%{version}/helper-scripts/
  node_libdir=%{_libdir}/passenger/%{version}/nodejs_supportlib/
  resources_dir=%{_libdir}/passenger/%{version}/resources/
  apache2_module_path=%{apache_libexecdir}/mod_passenger.so
  ruby_libdir=%{_libdir}/passenger/%{version}/ignore
  ruby_extension_source_dir=%{_libdir}/passenger/%{version}/ignore
  nginx_module_source_dir=%{_libdir}/passenger/%{version}/ignore
  doc_dir=%{_libdir}/passenger/%{version}/ignore
  EOF

  # webserver configs
  install -D -m 0644 %{S:1} %{buildroot}%{apache_sysconfdir}/conf.d/mod_passenger.conf
  install -D -m 0644 %{S:2} %{buildroot}%{apache_sysconfdir}/conf.d/mod_passenger_root.include
  install -D -m 0644 %{S:3} %{buildroot}/etc/nginx/conf.d/passenger.conf
  install -D -m 0644 %{S:4} %{buildroot}/etc/nginx/conf.d/passenger_root.include
  #
  sed -i -e "s,@passengertmpdir@,%{passenger_tempdir},"           %{buildroot}%{apache_sysconfdir}/conf.d/mod_passenger.conf
  sed -i -e "s,@PassengerRoot@,%{_libdir}/passenger/%{version}/," %{buildroot}%{apache_sysconfdir}/conf.d/mod_passenger_root.include

  sed -i -e "s,@passengertmpdir@,%{passenger_tempdir},"           %{buildroot}/etc/nginx/conf.d/passenger.conf
  sed -i -e "s,@PassengerRoot@,%{_libdir}/passenger/%{version}/," %{buildroot}/etc/nginx/conf.d/passenger_root.include
  #
  %if %{with systemd}
  install -D -m 0644 %{S:5} %{buildroot}/usr/lib/tmpfiles.d/passenger.conf
  %endif
:filelist: |-
  %if %{with systemd}
  /usr/lib/tmpfiles.d/passenger.conf
  %endif
  %config %{_sysconfdir}/passenger/
  %dir %{_libdir}/passenger/
  %{_libdir}/passenger/%{version}/
:scripts:
  :post: |-
    %if %{with systemd}
    systemd-tmpfiles --create /usr/lib/tmpfiles.d/passenger.conf || true
    %endif
:main:
  :preamble: |-
     Requires:       rubygem-passenger = %{version}
:custom_pkgs:
  apache2:
    :preamble: |-
      Requires:       %{apache_mmn}
      Requires:       apache2
      Requires:       rubygem-passenger = %{version}
      Summary:        Passenger apache module
      Group:          Development/Languages/Ruby
      Supplements:    packageand(apache2:rubygem-passenger)
    :filelist: |-
     %config(noreplace) %{apache_sysconfdir}/conf.d/mod_passenger.conf
     %config            %{apache_sysconfdir}/conf.d/mod_passenger_root.include
     %{apache_libexecdir}/mod_passenger.so
  nginx:
    :preamble: |-
      Requires:       nginx
      Requires:       rubygem-passenger = %{version}
      Summary:        Passenger Nginx module
      Group:          Development/Languages/Ruby
      Supplements:    packageand(nginx:rubygem-passenger)
    :filelist: |-
      %dir /etc/nginx/
      %dir /etc/nginx/conf.d/
      %config(noreplace) /etc/nginx/conf.d/passenger.conf
      %config            /etc/nginx/conf.d/passenger_root.include
