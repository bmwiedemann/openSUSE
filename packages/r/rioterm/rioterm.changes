-------------------------------------------------------------------
Thu May 15 13:58:27 UTC 2025 - Scott Bradnick <scott.bradnick@suse.com>

- Update to version 0.2.16:
  * prepare 0.2.16
  * Replace changelog with details URL for all releases
  * Remove weird linebreaks
  * Add metainfo and screenshots for appstream
  * fix crash with invalid line index
  * Update release notes
  * Update docs
  * Read XDG_CONFIG_HOME to figure out configuration path
  * flake.lock: Update
  * Update build-from-source.md
  * tbd on 0.2.16
  * fix typed character
  * move back sugarloaf to the fam
  * Always damage current cursor
  * Use both offset and render_offset in scale and update skrifa
  * update releases.md
  * fix bookmark size (closes #1094)
  * update release.md

-------------------------------------------------------------------
Tue May 06 13:40:16 UTC 2025 - Scott Bradnick <scott.bradnick@suse.com>

- Update to version 0.2.14:
  * update to 0.2.14
  * fix index out of reach for line (closes #1093)
  * cut 0.2.13 version in docs
  * update docs
  * introduce last_active property on screen to fix update
  * flake.lock: Update
  * move logic of drawable_character recognition to sugarloaf
  * update docs
  * add QuadrantUpperRightAndLowerRight and QuadrantUpperRightAndLowerLeft
  * remove BlackSquare to WhiteDiamond
  * implement QuadrantUpperLeftAndLowerLeft and QuadrantUpperLeftAndLowerRight
  * implement LightDownAndHeavyRight, LightDownAndHeavyLeft, HeavyDownAndLightRight, HeavyDownAndLightLeft, LightUpAndHeavyRight, LightUpAndHeavyLeft, HeavyUpAndLightRight, HeavyUpAndLightLeft
  * implement DownDoubleAndRightSingle, DownDoubleAndLeftSingle, VerticalDoubleAndRightSingle, VerticalDoubleAndLeftSingle, VerticalSingleAndRightDouble, VerticalSingleAndLeftDouble, DownSingleAndRightDouble, DownSingleAndLeftDouble, HeavyDownAndRight, HeavyDownAndLeft, HeavyUpAndRight, HeavyUpAndLeft
  * update notify
  * update comment
  * specify as default-features true
  * Add support for custom parsing of APC, SOS and PM sequences
  * downgrade msvr to 1.85.0
  * fix lint
  * VerticalDoubleAndHorizontalSingle, DownDoubleAndRightSingle and DownDoubleAndLeftSingle
  * DoubleHorizontalUp
  * DoubleHorizontalDown
  * DoubleVerticalLeft
  * fix DoubleCross and DoubleVerticalRight
  * add request_animation_frame
  * fix wait_until calculation
  * remove utf8 parser, update handler to receive slice
  * octants and sextants
  * format code
  * make drawable characters be foldable
  * add more characters to drawable-chars
  * update links
  * update README.md
  * update rust version (closes #1080)
  * flake.lock: Update (#1084)
  * Add support for $RIO_CONFIG_HOME and additional font dirs (#1082)
  * update deps
  * fix glyph session
  * fix lint
  * fix panic whenever data is empty (close #1075)
  * lock line run to first line data
  * Remove duplicate cursor in default-colors.md
  * flake.lock: Update
  * update goreleaser-action
  * update examples
  * update lint
  * introduce line cache for the vertex
  * increase font_size
  * merge fetch_dimensions into draw_layout
  * drop display list
  * use draw instead, dropping indices
  * few improvs
  * remove clones
  * add force_damage
  * update renderer
  * fix image
  * drop RioEvent::UpdateGraphicLibrary
  * updates
  * update releases.md
  * fmt code
  * updates
  * update
  * use damage
  * update to work with cursor/hyperlink
  * wip
  * Update the links to the installation guides
  * anti aliased polygon
  * feat: change to shift key for hyperlinks on windows/linux
  * update releases md
  * fix: Shift+Tab event is doubled, as if hit twice (close https://github.com/raphamorim/rio/issues/1061)
  * add info in releases.md
  * fix: fps calculation
  * update yt video
  * update releases md
  * update releases.md
  * update releases
  * implement fonts.disable-warnings-not-found (closes https://github.com/raphamorim/rio/issues/1031)
  * comment panic
  * refactor how dots works
  * implement missing vertical and horizontal dashes
  * update docs
  * implement powerlines until \ue0bf
  * increase segments
  * braille symbols
  * implement remaining chars
  * use unicode straigh instead of char notation
  * update brailes, still missing stuff
  * add remaining to from
  * braille dots (partial support, needs to fix 7 and 7w8)
  * fmt code
  * still has to fix DoubleUpAndRight, DoubleUpAndLeft, UpSingleAndRightDouble, UpSingleAndLeftDouble, VerticalSingleAndHorizontalDouble
  * reenable debug
  * add DoubleHorizontal
  * flake.lock: Update
  * fix some lints
  * add DoubleVertical
  * remove unused functions
  * fix PowerlineCurvedLeftSolid and PowerlineCurvedRightSolid
  * update PowerlineCurvedRightSolid and left version
  * add_polygon
  * ignore font shaping for drawable chars
  * update wgpu to v25
  * move from CascadiaCodePL to CascadiaCode
  * update docs
  * add more eightblocks and quarterblocks
  * add Lower chars
  * update deps
  * fix VerticalRight and VerticalLeft gaps
  * fix topright and topleft
  * calculate with radius
  * fix for multiple characters
  * quadrants and shades
  * HorizontalDown and HorizontalUp
  * dynamic stroke
  * fix size
  * lint fix
  * remove unnecessary comment
  * ignore shaping
  * fix some stuff
  * fix line_height
  * update ui
  * remove rect
  * add max_layers
  * control layers
  * remove HEAD
  * only rendering last layer
  * update stuff
  * only rendering last layer
  * rename to drawable_char
  * rename curved to arc and fix bottomright, topright, bottomleft and bottomright
  * fix tab size
  * flake.lock: Update
  * update lock file
  * Fix dimension for whenever a new tab is created from a view with splits
  * update enums
  * docs: add path to debug log file
  * fix examples
  * work in progress
  * add support to box drawing
  * fix lint
  * correct docs
  * logic should be in sugarloaf instead
  * todo: move builtin_box_drawing logic inside of sugarloaf
  * move to fonts.symbol-map in docs
  * move symbol_maps to fonts
  * update changelog
  * symbol-map in config and docs level
  * support builtin_box_drawing config
  * fix lint
  * fix lint
  * use wgpu from branch trunk for now
  * update versioning
  * add info about sugarloaf since it's also used in boo
  * README: make repology badge display 3 columns
  * update docs regarding unfocused-split-opacity
  * docs: add note for flake install instruction process
  * refactor: add title for nixos part
  * feat: add nix flake install instructions
  * fix: remove duplicate cursor in colors example
  * add details
  * Drop subtables with empty coverage (implemented by @xorgy on https://github.com/dfrg/swash/pull/92)
  * add filters data
  * flake.lock: Update

-------------------------------------------------------------------
Fri Mar 28 14:19:37 UTC 2025 - scott.bradnick@suse.com

- Adding 'rioterm-rpmlintrc' to deal w/ 'useless provides' warnings
- Update to version 0.2.12:
  * prepare 0.2.12
  * remove .gitattributes
  * restore nerd font
  * restore emoji font
  * restore test-fonts
  * restore fonts
  * fix lint
  * clamp texture size to device limits by @chyyran
  * Update docs/docs/releases.md
  * update lint
  * remove ntsc_vcr
  * fix lint
  * add builtin filters
  * update libshader deps
  * feat: bultin filters
  * update releases.md
  * prepare 0.2.11
  * fix dimension computation
  * add debug flag for metal
  * upda skrifa
  * remove wa
  * update wgpu
  * migrate navigation
  * migrate routes
  * refactor compositors into one
  * remove text mod
  * move search to it's own struct
  * fix lint
  * feat: unify text renderer
  * update description
  * remove ttf and otf from git lfs track
  * update cascadia code to latest
  * use std::hash::RandomState and update twox-hash
  * fix toml format
  * bump dependencies
  * update releases
  * update tests
  * fix issue for first tab dimension after create new tabs using bottom or top tab
  * change default height to 490
  * fix compute lines and columns
  * update version to 0.2.10
  * fix lint
  * fix: remove assertion, this test is complicated because can run into race conditions where path is known beforehand (closes #994)
  * fixes: opacity on foreground text, opacity for unfocused split and allow unfocused routes to be updated
  * prepare 0.2.9
  * flake.lock: Update
  * fix wrong toml comments
  * fix tests
  * fix comment on toml
  * update releases
  * feat: implement symbol_map
  * update docs
  * add symbol-map support on config level and fix issue when font isn't found
  * Add missing LICENSE files to several workspace crates (#1003)
  * Small changes to macOS info.plist file (#1002)
  * Add Switch to Next/Prev Split or Tab command (#995)
  * Update 2025-03-01-rio-is-now-releasing-with-goreleaser.mdx (#997)
  * Update 2025-03-01-rio-is-now-releasing-with-goreleaser.mdx (#996)
  * update releases.md
  * uppercase R of Goreleaser
  * update text
  * remove confusing part on paragraph
  * update paragraph
  * new post
  * fix(goreleaser): different terminfo paths on linux & macos, address deprecation msgs (#990)
  * fix(goreleaser): bundle compiled terminfo in deb/rpm (#986)
  * fix(goreleaser): template syntax (#988)
  * use rioterm.com
  * fix(goreleaser): do not run after hooks on intermediary steps (#987)
  * prepare 0.2.8
  * update description
  * update website
  * update path
  * fix CNAME
  * update url and baseUrl
  * add CNAME
  * migrate to flakehub cache
  * add support to ios
  * fix(goreleaser): different terminfo paths for deb/rpm based distros (#985)
  * spinning logo (#984)
  * remove indices and ids
  * update release.md
  * Cache GSUB and GPOS features independently
  * flake.lock: Update (#983)
  * update release.md
  * ci: native macos notarization (#982)
  * fix(goreleaser): rpm dependencies (#981)
  * update docs
  * back to timeout
  * remove timeout from goreleaser.yml
  * wait true for notarize
  * feat: shell integration - current path (#970)
  * ci(release): publish nightlies only on config/workflow changes (#954)
  * feat-update-windows-sys-0.59 (#969)
  * Update flake.lock (#966)
  * ci(release): update goreleaser-action to v6.2.1 (#965)
  * fix(goreleaser): special chars should be wrapped in `"` (#964)
  * refactor(goreleaser): use conventional file names for deb, rpm (#960)
  * ci: fix multiple things and run only when necessary (#962)
  * docs: update releases.md (#963)
  * chore(goreleaser): add rpm, fix github release (#955)
  * feat: add goreleaser (#921)
  * update install links
  * prepare 0.2.7
  * update 0.2.7
  * Implement set_color and reset_color (#952)
  * [fix] changing Ubuntu version to 22.04 for supporting older version (#950)
  * Don't report unshifted key when Shift was not pressed (originally taken from alacritty)
  * Update flake.lock (#949)
  * update links
  * mark plist as 0.2.6
  * prepare 0.2.6
  * update release.md
  * update release.md
  * bugfix: fix duplicate tab_id by monotonic counter for unique tab IDs (#938)
  * update releases
  * Add backslash to invalid characters for URL regex
  * fix regression introduced by 0.2.5 on light colors
  * Update defaults.rs (#936)
  * flake.lock: Update (#935)
  * Alias to Normal and Italic works without capitalization (#934)
  * docs: update default font style from normal to Normal (#933)
  * use null_mut() instead of zero isize
  * bump dependencies
  * fix: Use `closesplitortab` instead of `closecurrenttaborsplit` (#929)
  * fix some links
  * fix some links
  * fix some links
  * update release
  * prepare 0.2.5
  * new docs (#928)
  * update docs
  * apply calculation on color
  * introduce Mul<f32> for ColorRgb
  * receive colors
  * update releases.md
  * fix lint
  * fix macos unable to type Option + Number for special characters
  * flake.lock: Update (#923)
  * remove cursor duplication
  * update wgpu to 24.0.1
  * fix array concat lint
  * migrate to objc-rs
  * fix: Better handling of Escape and Enter keys (#915)
  * update changelog
  * option as alt per default on macos
  * add cyberpunk video
  * fix broken link to nixpkgs (#909)
  * update icons
  * Use wrapper type for CFUUID retired from (https://github.com/rust-windowing/winit/pull/4032)
  * flake.lock: Update (#910)
  * update article
  * update links on docs
  * use src as raphamorim.io

-------------------------------------------------------------------
Tue Jan 28 17:33:09 UTC 2025 - nf@ioa.pm

- Update to version 0.2.4:
  * Breaking: Rio now doesn't allow anymore disable kitty keyboard
    protocol.
  * Fullwidth semantic escape characters.
  * Fix: report of Enter/Tab/Backspace in kitty keyboard.
  * Fix: use-kitty-keyboard-protocol = true doesn't work with tmux
    #599.
  * Fix: use-kitty-keyboard-protocol breaks F[5-12] on macOS #904.
  * Rio now allows you to configure window title through
    configuration via template.
  * Perf improvement on text selection #898 by @marc2332.
  * Window title is now updated regardless the Navigation Mode.
  * Performance: Background and foreground data are only retrieved
    if is asked (either color automation is enabled or window.title
    contains any request for it).
  * Support to window.macos-use-shadow (enable or disable shadow
    on MacOS).
  * Support to window.windows-corner-preference (options: Default,
    DoNotRound,Round and RoundSmall).
  * Support to window.windows-use-undecorated-shadow (default is
    enabled).
  * Support to window.windows-use-no-redirection-bitmap (This sets
    WS_EX_NOREDIRECTIONBITMAP).
  * Support for Unicode 16 characters.
  * Support to line height.
  * Renamed --title to --title-placeholder on CLI.
  * Fixed: Unremovable bottom padding when using line-height #449.
  * Introduce SwitchCurrentTabToPrev and SwitchCurrentTabToNext
    actions #854 by @agjini.
  * On X11, Wayland, Windows and macOS, improved scancode
    conversions for more obscure key codes.
  * Kitty keyboard protocol is now enabled by default.
  * Allow Renderer to be configured cross-platform by Platform
    property.
  * Add ToggleFullscreen to configurable actions.
  * Escape sequence to move cursor forward tabs ( CSI Ps I ).
  * Always emit 1 for the first parameter when having modifiers in
    kitty keyboard protocol.
  * Microsoft Windows: fix the event loop not waking on
    accessibility requests.
  * Wayland: disable title text drawn with crossfont crate, use
    ab_glyph crate instead.
  * Fix iterm2 image protocol.
  * Allow setting initial window title #806 by @xsadia.
  * Fix runtime error after changing to a specific retroarch shader
    on windows #788 by @chyyran.
  * Makes editor.args and shell.args optional in config.toml #801
    by @Nylme.
  * Introduce navigation.open-config-with-split.
  * Fix: Search seems broken in 0.2.0 #785.
  * Regular font is now 400 as default weight.
  * Support to chooseing font width #507.
  * Support to multiconfiguration. Rio now allows you to have
    different configurations per OS, you can write ovewrite Shell,
    Navigation and Window.
  * Fix: Grey triangle in the titlebar #778
  * Update window title straight away (#779 by @hunger)
  * Always update the title on windows and MacOS (#780 by @hunger)
  * Note: The migration from 0.1.x to v0.2.x changed considerably
    the renderer source code, although it was tested for 3 weeks
    it's entirely possible that introduced bugs (hopefully not!).
  * Sugarloaf: Major rewrite of font glyph logic.
  * Sugarloaf: Removal of some unnecessary processing on shaping
    logic.
  * Sugarloaf: Rewrite/Change of render architecture, now sugarloaf
    does not have any reference to column/lines logic.
  * Breaking: Minimum MacOS version went from El Captain to Big Sur
    on ARM64 and Catalina on Intel x86.
  * Microsoft Windows: Rio terminal is now available on WinGet
    packages.
  * Microsoft Windows: Rio terminal is now available on MINGW
    packages.
  * Microsoft Windows: Rio support on ARM architecture by
    @andreban.
  * Support disable font hinting: fonts.hinting = false.
  * Fix: Configuration updates triggered multiple times on one
    save.
  * Support to RetroArch shaders @igorsaux.
  * Fix: Set notepad as a default editor on Windows by @igorsaux.
  * Increased Linux font fallbacks list.
  * Early initial split support (this feature is not yet stable).
  * Fix: Preserve current working directory when opening new tabs
    #725.
  * Added SplitDown, SplitRight, CloseSplitOrTab, SelectNextSplit
    and SelectPrevSplit actions.
  * Fix: Window doesn't receive mouse events on Windows 11 by
    @igorsaux.
  * Support to hex RGBA (example: #43ff64d9) on colors/theme by
    @bio on #696.
  * Introduced renderer.strategy, options are Events and
    Continuous.
  * Fix: Window output lost when rio loses focus #706.
  * VI Mode now supports search by @orhun.
  * Use max frame per seconds based on the current monitor refresh
    rate.
  * breaking renderer.max-fps has been changed to
    renderer.target-fps.
  * Fix background color for underline and beam cursors when using
    transparent window.
  * Fix IME color for underline and beam cursors.
  * Add default for Style property on Sugarloaf font.

-------------------------------------------------------------------
Wed Sep 25 13:24:45 UTC 2024 - Nico Fischer <nf@ioa.pm>

- Update to version 0.1.16
  * confirm before quit on macos
  * remove window_activation_hack
  * use application should reopen api
  * apply close logic to all navigations (closes #683)
  * add macro to hide_application
  * implement unhide on macos app
  * fix window has focus to find keyWindow
  * increase max-fps on macos
  * Revert "frame interval"
  * remove examples on sugarloaf README
  * enable new tab on macos dock
  * support should_embolden and should_italicize
  * frame interval
  * flake.lock: Update (#682)
  * remove plugins page
  * macos and windows as 240
  * obtain render time from fn render
  * update fps logic and allow to keep rendering if render took less time
  * [i18n] Japanese support for landing page (#681)
  * change default weight for regular and italic fonts
  * confirm before quit
  * linux to 120
  * increase macos fps to 240
  * implement menu hooks
  * remove menu_legacy
  * fix derefs
  * update menu and add dockbar
  * dialog to quit
  * increase max-fps (macos: 120->180, others: 60->90)
  * Fix invalid link in default config.toml (#679)
  * update dependencies and lock copa
  * remove ununsed stuff
  * allow option_as_alt as unused
  * add listen_device_events again
  * implement system_theme x11
  * add for wayland and windows
  * update_colors_based_on_theme
  * update macos defaults
  * update default configuration file
  * fix blinking cursor lag issue and introduce blinking cursor interval
  * Fix adaptive theme background color on macos
  * add limited debug to release
  * update releases.md
  * Testing msys2 release builds (#643)
  * update defaults info
  * rotate two fonts
  * make bold, bold_italic and italic evictable as well
  * remove println and apply format on size'
  * Word cache for multiple font sources
  * add MOUSE_MODE to Mode initialisation
  * add lifetimes to application
  * add is_emoji to from_slice
  * font deallocation
  * reduce SIZE of atlas to 1024 (it was consuming a lot of memory)
  * add content.rs
  * apply corrections on renderer and use hashmap for font
  * implement get for font_library
  * reduce abstractions
  * use inspect instead of map
  * remove mark_dirty
  * remove abstractions on content level
  * reduce initial quantity for rect in buffer
  * fix run width on emojis
  * only build scaler if necessary
  * fix font switching
  * remove boundaries check
  * fixup! move from RwLock to FairMutex
  * move from RwLock to FairMutex
  * change font to Arc<dyn AsRef<[u8]> + Send + Sync>
  * disable unicode that is not available yet for all OS
  * simply style on fragment data
  * start rewrite builder
  * update docs regarding bookmark
  * remove boundaries analyze
  * remove font from TextRunStyle
  * reduce word cache
  * remove println on config/mod.rs
  * fix lint for linux
  * move routes inside router
  * fix macos tabbing for native tabs
  * set rio variable title
  * specify tab id
  * use 1CC6D instead of triangle
  * drop cfg! for default trait
  * update documentation
  * configure_window apply on reference
  * use config alpha for window on macos
  * use ▲ to match with bottom tab
  * implement background color on macos
  * update code to early return
  * macos: native tab as default with transparency
  * check before put on wordcache
  * remove clear_cache
  * fix cache and just remove metrics when font size/scale changes
  * disable hinting on macos
  * Fix font emoji width
  * remove shape_with
  * remove rich_text util mod
  * update deps version
  * update deps
  * refactor and remove hash logic
  * remove draw layout cache
  * improve cache on builder
  * remove cache
  * remove temporary test/fix of positioning
  * update docs about iterm2 image protocol
  * remove unicode-normalization on copa
  * Support to iTerm2 image protocol
  * implement set_private_mode
  * rewrite backend core and sixel
  * remove old code
  * iTerm2 image protocol
  * remove ThemeChanged from skip_window_event (closes #660)
  * use correct ffi::XPointer on ime/context.rs for x11
  * image: Workaround WGPU OpenGL heuristics
  * Fix this double render hack on scale update
  * feat(logger): improve the logging via tracing (#648)
  * scale other fonts whenever is necessary
  * implement lru for render operations
  * set subtitle on macos again
  * use Twemoji as default
  * introduce fonts.ui
  * remove fonts to load
  * update docs regarding emojis
  * use ref charmap_proxy
  * use 120 max fps only for macos
  * remove all markers
  * drop frame timer and use based on config max-fps
  * format code and remove comment
  * set limit as 120
  * reset to i32 display_offset
  * use values_mut
  * reenable img protocol
  * comment stuff for now
  * refactor hash
  * merge render again...
  * refactor on shaper
  * refactor shape fn
  * cache analysis
  * add markers
  * disable cache for testing
  * perf: work in progress
  * docs(cursor): update cursor documentation (#650)
  * fix sugarloaf tests
  * remove unnecessary deprecated
  * remove time markers
  * add header mentioning swash
  * remove OnceCell and apply lint on font_introspector
  * lint and format
  * port swash into rio source code
  * refactor(config)!: revamp the cursor configuration (#632)
  * fix underline cursor not working
  * set edition as 2015 for corcovado
  * update lint
  * remove needless borrow
  * workaround to fix sixel rendering order
  * remove benches references
  * remove sugarloaf benchmark and update examples to use rio-window
  * add algolia search
  * add cfg target_os as macos for platforms
  * remove use_wa from code reference
  * use clipboard as refcell
  * drop unwrap on event_proxy
  * finish port to use-run
  * use run-app
  * update release regarding WM_PAINT
  * update release notes
  * fix lint
  * fix lints on windows and make pty be faillable
  * remove send_resize windows
  * pty window creation fallible
  * remove ios support
  * Reduce WM_PAINT messages of thread target window
  * replace naming on comments
  * remove rwh_06 entry on windows
  * update parent
  * update examples
  * remove unnecessary stuff
  * use raw-window-handle straight
  * introduce rio-window crate
  * remove winit-fork and introduce rio-window
  * use DepartureMono as default font for UI
  * messenger.send_resize on windows
  * fix response and order csi_st-16
  * implement CSI t 16 (cells size report)
  * implement TextAreaSizeRequest
  * cleanup selection once happens a resize
  * update docs regarding CSI t 14 and 18
  * add terminal capability on device
  * add more info on docs and update example
  * remove generational on entries
  * remove owner and standalone logic
  * add explict drops
  * remove extra steps on resize and set_scale
  * rename changelog to releases
  * reduce max length on cache size for draw_layout
  * specify primitive state on rich text
  * range_request
  * add more info on background
  * add note regarding background-image width/height
  * update docs regarding sixel
  * implement background graphic
  * graphics as struct
  * reduce clones
  * use textureSampleLevel
  * drop fn and apply direct access on dlist
  * remove double draw_indexed
  * cursor as option
  * remove texture_id
  * refactor finish
  * atlas for text only (missing grow/cleanup)
  * remove context from prepare
  * apply bind group only if entries are different
  * drop extra texture
  * rename color_layer
  * working when bindings are swiped
  * simplify stuff
  * pass layers
  * use i32 texture map instead of flags
  * ok it renders now but is still very nonoptimal
  * fix size
  * set new as just context ref
  * correct order
  * refactoring atlas
  * layout bind group refactor
  * define max texture
  * load graphic directly on rich_text_brush
  * scroll with image
  * render image
  * add graphics into image cache
  * set offset x and y
  * media field on FragmentStyle
  * chore(config): rename option to hide-mouse-cursor-when-typing (#631)
  * feat(config): allow configuring with lowercase values for enums (#628)
  * change docs structure (readd deleted under configs)
  * change docs structure
  * add search local
  * remove grab cursor on macos and place default instead
  * Unschedule pending events
  * update frame scheduling
  * frame scheduler
  * remove tokio runtime
  * remove deadlock_detection feature flag
  * enable features on parking_lot like hardware-lock-elision (x86) and deadlock_detection
  * added tabs-active-foreground config (#619)
  * fixed tabs-active-highlight config key (#618)
  * remove rust-toolchain.toml
  * update version on install
  * remove kitty as default for now
  * update rio winit fork
  * update CHANGELOG
  * feat(tabs): add command for closing all tabs except the current one (#614)
  * add windows search key bindings and update docs
  * remove * scale on size for search bar
  * if current was 0 then needs to update again
  * fix padding on native tabs
  * refactor close contexts logic
  * define exec to conpty
  * fix the behavior of using a complete shell command and a shell command with parameters is inconsistent
  * fix kitty keyboard delete (backspace + fn) on macos
  * fix lint
  * update build_key_sequence on kitty keyboard protocol
  * prepare bump
  * flake.lock: Update (#609)
  * fix(bindings): enable search as default on Linux (#612)
  * cancel search on tab is changed/deleted/created
  * remove breadcrumb on navigation features section
  * fix wrong version title
  * ignore size on curly
  * reduce underline size for smaller dpis
  * comment line height for now
  * implement SearchDeleteWord, SearchHistoryPrevious and SearchHistoryNext
  * search details on key bindings
  * update Cargo.lock
  * rollback version
  * update rio winit fork to 0.30.8
  * remove 0.0.x references
  * remove warning note
  * delete versioned docs
  * fix lint
  * update rio winit fork to 0.30.7
  * remove hyphen on bindings
  * update rio winit fork to 0.30.6
  * update rio winit fork
  * resize top or bottom line after rio evicts close terminal
  * draw with less opacity
  * fix len value
  * set capacity for objects
  * ignore clippy for now
  * refactor navigation renderer
  * render hints
  * focused and match on search
  * set active search
  * move check to up
  * when search is active then BottomTab should not be rendered
  * update UI styles (make it larger and able to show more text when necessary)
  * update demo bottom tab
  * resize on search
  * receive colors and apply on search bar
  * drop colors on navigation entity
  * update vec with capacity
  * state -> renderer and introduce demand renderer
  * move render function down
  * update search
  * wip highlight
  * render as immutable
  * hint.rs
  * type and search next
  * render simple search bar
  * map search bindings and triggers on frontend
  * search.rs (retired from alacritty and ported to rio code)
  * work in progress (search)
  * start search
  * remove unused on quit and update content when hyperlink search is by modifiers
  * add keyword
  * bump dependencies
  * feat(config): support creating config via `--write-config` (#605)
  * refactor(cli): support a short variant (`-w`) for `--working-dir` (#606)
  * Fix scale update on transitioning between screens with different DPI
  * add update content
  * fix default for hide_if_single
  * remove Wakeup and create update_content
  * remove derivable impls for BottomTab
  * update tab UI
  * improve tabs UI
  * Fix `[editor]` overshadow headerless parameters in config (#604)
  * hide if single
  * hide single tab config property
  * add bar and remove breadcrumbs
  * remove resize conditional
  * introduce object
  * remove intercepts support
  * remove hash as option
  * font size
  * remove font size from style
  * remove unnecessary stuff
  * cleanup with sugar references
  * cleanup on examples
  * use Content instead of Sugar primitives
  * undo latest changes
  * fix lint
  * redraw straight after key up
  * add schedule render on RenderRoute to avoid multiple re-renders
  * use slice
  * remove drop call
  * render as immutable
  * keep immutable call
  * Vec::with_capacity for grid lines
  * prepare version
  * Make ConPty creation fallible (alacritty/91d034ff8b53867143c005acfaa14609147c9a2c)
  * update dependencies
  * remove patreon link
  * fix lint
  * drop run_on_demand
  * use custom route as topic
  * add split color support
  * implement args for editor (close #550)
  * fix Weird rendering behaviour on setting padding-x in config (closes #590)
  * remove unnecessary check
  * update blinking to only on route
  * fix lint
  * wip undercurl
  * undercurl
  * work in progress curly underline
  * add testing scripts
  * support decoration colors
  * corrections double
  * dotted corrections
  * dashed and double corrections
  * dotted as rect
  * introduce shape enum
  * support double underline and use same function on cache
  * add new underlines on enum
  * fixed custom key bindings URL in default config (#589)
  * set macos latest in ci
  * update tokio and CHANGELOG
  * fix multiple cursors and background being rendered
  * set caches as fn argument
  * fix glyph.y for rendering with padding
  * remove println used for debugging
  * fix underline cache
  * cache strategy improvements
  * refactor cache strategy
  * fix order
  * use char_width outside of loop
  * remove subpixel from cache key
  * avoid create session for repeated fonts (perf gain ~25% for draw_layout)
  * fix tests on text mod
  * drop rtl support and script
  * fixup! update
  * remove Language import
  * refactor FragmentStyle organization
  * remove bidi, direction logics
  * remove unnecessary stuff
  * Changed default font family to Cascadia Code, width to 800 and height to 500
  * update winit fork
  * consider blocks as part of tree
  * In case no font_id is found and exists a font spec requirement, then drop requirement and try to find something that can match.
  * remove is_focused
  * correct current_route id check
  * fix lint
  * update example resouces and fix double items when extra font is loaded
  * update examples
  * use CascadiaMonoPL with otf
  * fix Bug switch tabs doesn't work (closes #536)
  * stop select font id in runtime and apply on builder.rs
  * update Cascadia Code to 2404.23 (it includes native 'Nerd Font' variant
  * bump fork version
  * remove dimensions changed check
  * change test rules to doesn't match round
  * rename variable
  * Improvements for mouse selection
  * do not rely on index for route_id
  * save route_id on terminal and only render if necessary
  * key_without_modifiers for process key bindings
  * fix binding without modifiers on macos
  * use same image version
  * update wgpu to 22.1.0
  * use FxHashMap instead of Hashmap on glyph.rs
  * update swash (0.1.18), ab_glyph (0.2.28) and remove double hashmap implementation
  * support padding-y (top and bottom) (closes #400)
  * update Info.plis
  * update version on Cargo.toml
  * always_dirty on wayland
  * remove hack from 0.0.x version that was computing margins wrongly
  * update default config file
  * font features settled up on initialisation
  * font features updates
  * fix IO Safety violation from dropping RawFd (fatal runtime error: IO Safety violation: owned file descriptor already closed)
  * set font features
  * rust 1.80.0
  * add default for font features
  * support to font features
  * use cargo-deb default
  * use cargo-deb 2.4.0
  * use cargo-deb 2.5.0
  * add comment on deallocation
  * drop epoch for cache
  * bump dependencies
  * comment markers
  * fix comment
  * re add copy lines index
  * drop synchronous redraw
  * cache rects to render
  * use hash as separated field since isn't responsible for order
  * retrieve line as hash
  * perf upgrades markers
  * upgrade wgpu to v22.0.0
  * save width as f32
  * apply cell width/height restrictions
  * update winit fork
  * option as alt as unused
  * lint epoll.rs
  * Revert "disable sixel terminal backend support for now"
  * update rust to 1.79.0
  * Wayland: avoid crashing when compositor is misbehaving
  * update actions-gh-pages
  * update workflows
  * update swash and fix ci pipeline for macos unsigned

-------------------------------------------------------------------
Thu Jun 20 13:45:52 UTC 2024 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Remove checksums update for config.guess and config.sub for aarch64
  and ppc64le

-------------------------------------------------------------------
Thu Jun 20 13:07:41 UTC 2024 - androw95220@gmail.com

- Update to version 0.1.1:
  * undo width
  * update wgpu
  * update versions
  * add note on README.md
  * remove ununsed logic
  * disable sixel terminal backend support for now
  * disable bidi for now, will reintroduce later via flag
  * refactor batch
  * get rid of bind pipeline
  * don't alarm if the font family is same as default
  * Improvements on font loader (avoid set weight or style in the lookup if isn't defined) and Fallbacks fonts doesn't trigger alerts anymore
  * docs: fix user facing typos (#532)
  * update CHANGELOG
  * remove banner
  * update winit to rio_winit_fork
  * current as SugarTree and next in heap
  * use Box for current and next
  * re add display.display.as_ptr()
  * mark 0.1.0
  * Update CHANGELOG.md for now
  * update configuration refs
  * update CHANGELOG.md
  * sugarloaf/frontend with lifecycles
  * work in progress
  * drop static lifecyle
  * fix test after background_color become Option
  * remove Box for Tree, reduce limit for supported vertex buffer on rich_text
  * correct display on wayland
  * update pipelines
  * work in progress
  * update changelog
  * update the rest of the code
  * rollback wgpu to 0.18 for now due to a memory leaked introduced in static lifecycle in context.rs, eventually will be fixed later
  * flake.lock: Update (#529)
  * add demo-rio.png to 0.1.0 folder
  * update README.md
  * fix cargo fmt
  * disable foreground opacity for now
  * fix property naming
  * [window.opacity] and drop foreground-opacity property
  * use new rio winit fork
  * fix label to release
  * disable fallbacks for linux
  * update script to test underline styles (ref #370)
  * fix label of version
  * clean whenever advanced compositor is equal
  * reenable nightly builds
  * load font from configuration
  * compute font update
  * support change font
  * allow to change font
  * load emoji font on demand
  * update winit ref
  * flake.lock: Update (#521)
  * remove embolden for macos and fix scale changes updates
  * nix: add hash value for a dependency (#516)
  * set_hash_shadow on macos if is transparent
  * fix wrong span data association
  * remove color, bg_color, cursor, underline from runData and use straight from span
  * format sequencer.rs
  * remove redraw on key up
  * lock versions on crates
  * Event::Opened only for macos
  * update CHANGELOG.md
  * always use tabbing for native
  * open url with tabbing and update version
  * lock crate versions
  * application:openUrl for winit
  * only run set_subtitle for macos
  * update wix to 4.0.5
  * support open here on windows
  * allow set_subtitle for anything
  * implement subtitle
  * update welcome screen
  * update fork
  * update margin and correct use_wa for close tab
  * flake.lock: Update (#515)
  * use_wa cfg on tests
  * clean modifiers on new tab/window (fix lint)
  * clean modifiers on new tab/window
  * use if let Some instead of single match
  * format on update texture
  * remove lru
  * resize as event
  * mouse motion
  * disable nightly builds for now
  * reuse payload.app instead of lock to retrieve
  * use try_iter instead of try_recv
  * introduce is_dirty and use while for try_recv()
  * remove CFRunLoopTimerIsValid
  * remove render on keydown
  * always rerun
  * modifier removed from route level
  * break after push diff::hash
  * Fixed transparency on backgrounds for Welcome/Dialog
  * update docs install version to 0.0.38
  * correction on state.dynamic_background
  * replicate changes of dynamic background made in ef00c52b5ad611e48484ca5667be9b6fc16d48b7 on main
  * update CHANGELOG
  * update swash and decrease default font_size to 14
  * fix multiple bound locations
  * propagate macports docs to 0.0.x
  * to_owned to clone_into(&mut <>)
  * docs: add MacPorts install info (#508)
  * upgrade rust to 1.78 and remove dead_code
  * flake.lock: Update (#506)
  * rewrite scheduler and stop use create_proxy all time
  * reuse same bitflags version
  * prettier files
  * update nodejs to 20
  * update docs and rustfmt
  * Fix README.md installation links (#505)
  * split hash functions
  * fix first render
  * use try_recv instead
  * use NSView instead of MTKView for Rio
  * update wa
  * logs and appstate
  * events wip
  * work in progress
  * flake.lock: Update (#504)
  * add From<&Sugar> for FragmentStyle (#502)
  * flake.lock: Update (#500)
  * docs updates on links (2)
  * docs updates on links
  * docs updates
  * rename 0.1.x to 1.0.0
  * update docs version to v0.0.37
  * update changelog
  * update Makefile
  * fix nix builds (#498)
  * update cache size for lines
  * update wgpu to 0.20.0
  * remove EventLoopBuilder
  * correct router
  * remove startup notify for initial window, ref https://github.com/rust-windowing/winit/issues/3633
  * correct to ActiveEventLoop
  * update use for linux
  * update winit on benches and examples
  * fmt code and update CHANGELOG
  * update winit to 0.30.0
  * Add VI toggle for CTRL + SHIFT + SPACE on win (#496)
  * flake.lock: Update (#497)
  * cache by sugarline hash
  * implement hash for sugar and sugar_line
  * update (#495)
  * only change font based on att in render step
  * correct docs (close #494)
  * update rust to 1.77.2, update dependencies and use write_all on awakener for unix
  * flake.lock: Update (#490)
  * looking ahead post
  * update docusaurus
  * bump dependencies
  * remove open url from displaay data
  * Fix cursor repetition on render data with temporary fix
  * lint corrections
  * stop receive handler by frontend
  * add focues to payload
  * try borrow mut
  * remove fair mutex around handler
  * remove lock for app ptr
  * passing handler but breaking tabs due to borrow
  * update swash to 0.1.15
  * refactor wa to use same event handler for router/routes and different windows
  * wip process
  * migrate event loop to macos observer
  * BottomTab as default
  * flake.lock: Update (#487)
  * Fix `LD_LIBRARY_PATH` in Nix flake dev shell (#486)
  * flake.lock: Update (#485)
  * add font ligatures to home
  * correct cache
  * load clusters on demand
  * end quick test for gtag
  * Rgba8Snorm macos
  * update lint
  * set macos default as Rgb10a2Unorm and update docusaurus
  * flake.lock: Update (#484)
  * correct windows self usage
  * disable webassembly (since it also has to go through wa migration yet
  * some cleanup
  * use same line height as before when breaking lines
  * refactor dimension
  * correct first item style
  * bold, italic, bold_italic
  * update screen
  * use font_library
  * correct linux build and update  benchs/examples
  * update CHANGELOG
  * introduce font fallbacks and  use same font on any rio instance
  * remove font id
  * correct lint
  * Fix load_system_fonts on Windows when the system drive is not C: (retired from fontdb)
  * Treat fonts with non-zero italic angle as italic (retired from fontdb
  * stop load emoji on wasm
  * use SharedData instead of Vec
  * remove FONT_EMOJI from wasm
  * disable setNeedsDisplay on macos
  * update CHANGELOG.md and README.md
  * remove SugarCompositorLevel
  * correction on Default derive
  * remove renderer_level and notoemoji font
  * wrap up cache
  * cache working partially (line_number as key isn't best option here)
  * replace cache
  * apply spacing only once
  * move line updater to a next pr
  * breaking render to develop cache
  * if the line is new then reset
  * save styles in the line
  * load colors
  * set scale and clear
  * now it renders (yey?)
  * remove nav
  * remove span data
  * remove state and dir_depth
  * wip remove spans
  * span as span data
  * process from cache
  * process line updates
  * update CHANGELOG
  * flake.lock: Update (#474)
  * correct line_height and reduce initial instances
  * update changelog and wix for windows
  * update changelog
  * fix lint
  * update lockfile
  * update copypasta and retrieve pid on windows
  * differentiate Diff per Char or Line
  * update winit to 0.29.15
  * flake.lock: Update (#471)
  * Workaround new text renderer (#467)
  * fix: build on Darwin (#470)
  * update wgpu and winit
  * flake.lock: Update (#468)
  * update CHANGELOG
  * add 0.0.x branch as well
  * add workflow_dispatch for nix-build
  * flake.lock: Update (#463)
  * revert additional change on grid
  * revert additional change
  * correct new tab testing code
  * update rio with windows fix for alt+control
  * update wayland dependencies with cargo update
  * few corrections
  * update draft post
  * add a post about 0.1.0
  * update Makefile
  * implement map instead of filter_map
  * support open urls on macos
  * rollback json configuration alternative support
  * work in progress open urls
  * update hide_cursor_when_typing to false
  * reset update on level selection
  * support to json config
  * configuration as json add fallbacks for unwrap
  * add json as configuration fallback
  * update cascadia code to ttf
  * use front
  * update get(0) to first()
  * update CHANGELOG regarding new rust version
  * use 1.75.0 instead
  * rewrite get(0) to first()
  * update CHANGELOG and rust version
  * drop equal check on wayland
  * add reset_next
  * update current
  * update current
  * check self.next and self.current
  * cover ColumnsLengthIsDifferent and LineLengthIsDifferent
  * enable debug for dev modes on makefile
  * remove println
  * reset navigation
  * debuggin
  * test with winit 0.29.9
  * use width and height instead of u32
  * use Elementary
  * update lint for linx
  * borrow bg image to set
  * corrections linux pt 4
  * corrections linux pt 3
  * corrections linux pt 2
  * corrections linux
  * remove init fn
  * few corrections for linux
  * test advanced on linux
  * remove acc
  * remove printlns for now
  * rename to fetch_dimensions
  * correct UnderlineOffset and keep updating mask_texture if necessary
  * clean primary always
  * wip breadcrumb fix
  * remove kind
  * update printl! to log::info and correct wasm load
  * cleanup arc references
  * use slice instead of vec
  * stop cloning fonts on shaping
  * removal of font mod
  * read font from library
  * update swash
  * load font
  * work in progress to load font from rio
  * .update_tree_with_new_line use line index
  * self.content_builder.build_ref
  * remove constants
  * use vec to spare memory usage
  * update default level to 1
  * readd wasm and remove self.sugarloaf.calculate_bounds
  * disable wasm test for now
  * fix lint checks and introduce new api for line
  * update lint
  * remove view
  * layer_brush with rpass
  * reuse render pass
  * reuse render pass
  * use queue instead of encoder to reduce buffer usage
  * move glyph to text component
  * refactor lines
  * force computation on declaration
  * enable tabs (tab+control isn't working yet)
  * compute updates fn()
  * compute changes outside of compute_dimensions
  * remove legacy
  * corrections for elementary render
  * only advanced renderer is working
  * cleanup on stack fn
  * updat examples
  * remove custom_decoration
  * work in progress to remove custom_decoration
  * use sugarline on level 1
  * renderer level per config
  * lot's of refactors and remove clone from suugar layout (closes #439)
  * wip process changes
  * state tree to compute changes
  * calculate_diff and SugarChanges
  * calculate_diff and SugarChanges
  * calculate line differences
  * introduce sugarline
  * update examples
  * refactor sugarloaf and introduce primitives
  * check dimension and content updates
  * with diff check
  * clippy updates
  * refactoring some code
  * update decoration on basic renderer
  * remove self.current_row inc
  * disable advanced rendering for now
  * license mention on top of changed files
  * introduce pending updates
  * set sugarheight and sugarwidth
  * move prepare to outside of render
  * cursors initial version
  * background support
  * use add_char instead
  * remove color
  * redo font size change
  * update default font size
  * remove color from rtext mod
  * use current_transform
  * strikethrough initial support
  * update to use .unwrap_or_default
  * start to work on Strikethrough
  * use span color
  * support to SpanStyle::Color
  * work in progress color
  * update stack_rich_text function
  * redo removal of calculate_bounds()
  * stack_text and stack_rich_text
  * keep legacy renderer
  * ensure texture view are not empty'
  * remove gl shaders
  * test fragment shader
  * port sugarloaf into rioterm
  * 0.1.0 to new renderer
  * rendering without emojis
  * with rebind per self.bind_layout_group
  * rendering with indexed drawing
  * use queue to render
  * wip
  * load textures
  * prepare to render
  * finish_composition
  * work in progress render
  * link base_fs_shader
  * load richtext brush
  * add color, image_cache and text.rs
  * start rich_text mod
  * flake.lock: Update (#455)
  * flake.lock: Update (#451)
  * flake.lock: Update (#446)
  * update macos-11 to macos-14 and use arm to run tests (since latest isn't pointing to sonoma yet
  * refactor: disable cursor blink on selection (ref #437) (#441)
  * Report focus change https://terminalguide.namepad.de/mode/p1004/
  * flake.lock: Update (#435)
  * change logic to reset cursor based on ALT_SCREEN instead of aAPP_CURSOR
  * reenable nightly for deb
  * docs: remove dead config options (#432)
  * docs: creating your own themes (#431)
  * docs: add keybind mode section (#430)
  * flake.lock: Update (#424)
  * fix: set screen cols & rows on new tab (#427)
  * #[allow(unused)] on schedule render since isn't being used on macos
  * updatw wgpu to 0.19.1
  * render only with seelection updates
  * use orthographic_projection; from core
  * use ctx.size instead of dimensions params
  * docs: fix typos in the library documentation (#423)
  * flake: add `apps` entry and fix runtime error (#412)
  * flake.lock: Update (#413)
  * move render pass creation outside of the loop
  * update test workflow to remove rioterm-beta reference
  * correct state imports
  * window_id build for each test step
  * navigation as pub mod
  * add navigation and state to non-macos
  * move RoutePath outside of router mod
  * add confirmquit for non macos
  * move layout to correct position
  * remove unusable vars
  * move context to main
  * few corrections for non-macos
  * rioterm-beta has been merged into rioterm
  * use display as_mut()
  * fix desired_maximum_frame_latency
  * raw_window_window 06 for examples and benches
  * update wgpu wip
  * update winit
  * update CHANGELOG.md
  * small changes on  WIP: add basic touch support #226 PR
  * add basic touch support
  * add '-p rioterm' to docs reference (closes #416)
  * update graphic library on rioterm as well
  * preferred into instead of as
  * use as instead to convert
  * fix nix build (#411)
  * flake: refactor and update flake.lock (#406)
  * docs: mention that Ctrl + Shift + Tab moves to previous tab (#410)
  * load columns/lines from size (ref: #409)
  * use text_builder scale
  * remove comment
  * remove fount_bound ref
  * re add cfg to macos only
  * change font order
  * re-add line-break
  * fmt code after scale changes
  * scale PxScale for all repeated text
  * remove self.is_text_monospaced logic
  * work in progress scale
  * correct mouse_point when line_height isn't 1.0
  * update docusaurus
  * update lint
  * vertical text alignment is bottom instead of center and initial support to line-height
  * correct versions between rioterm and rioterm-beta
  * remove redundant RUST_BACKTRACE=full
  * beta should test only beta
  * use exclude on clippy
  * update ttf-parser and memmap2
  * exclude rioterm-beta
  * update sugarloaf lint
  * update sugarloaf lint
  * update sugarloaf lint
  * remove make lint on test beta
  * use make lint
  * move beta test to only macos
  * use target_os = 'macos'
  * update lint
  * corrections to rioterm crate
  * delete rio-backend-legacy
  * correct lint wip
  * workflow for test-beta
  * Adding `flake.nix` (#363)
  * set layer for wa
  * beta building
  * rioterm building correctly
  * rename folders
  * build dev from 0.0.x
  * migrate 0.0.x to main branch
  * have legacy together
  * move back
  * moving 0.0.x back to main
  * update wa superloop
  * use observer instead of affect loop by waking with (CFRunLoopGetMain)
  * add runloop
  * correct update_dimensions
  * last_callback
  * introduce app loop
  * use ns_event
  * update changelog.md
  * use same function for window creation
  * add sync mod
  * use FnvHashMap and move watcher to sync mod
  * use Fowler–Noll–Vo hash function (implementation that is more efficient for smaller hash keys)
  * refactor event()
  * remove ForceRefresh
  * add watch_app and bump to 0.1.0
  * refactor wa macos
  * errors and routes
  * use log::info
  * theme detector
  * remove id from process fn
  * render flow
  * implement KeyAssignment copy
  * drop native requests
  * use app_connection
  * rename rio to wa
  * dock menu
  * remove power on
  * update render lifecycle macos
  * remove process
  * window close
  * register for drag and drop operations
  * update CHANGELOG
  * nightly should use 0.0.x for all builds
  * docs: note use-current-path requires use-fork to be false (#397)
  * update README.md
  * nightly uses 0.0.x branch
  * update about build-from-source
  * add info about 0.0.x branch
  * comment borderless
  * ime state
  * work in progress IME
  * wip IME support
  * refactor app/windows
  * enable click on hyperlinks
  * set background image
  * native tab and new window
  * wip application_should_terminate
  * use view as window delegate
  * use Bgra8Unorm on MacOS
  * sync with main
  * open file
  * corrections on init id
  * wip new window
  * wip new window/native-tab
  * next as a counter
  * id as u16
  * wip id window
  * VIEW_CLASS_NAME
  * correction
  * wip event loop
  * wip event handler
  * Sixel Support and WA migration

-------------------------------------------------------------------
Fri Jun  7 12:12:58 UTC 2024 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Remove checksums for config.guess and config.sub for aarch64
  and ppc64le since they are updated

-------------------------------------------------------------------
Tue Feb 27 20:16:40 UTC 2024 - androw95220@gmail.com

- Update to version 0.0.35:
  * update action for nix build
  * update to sync with main
  * add workflow_dispatch for nix-build
  * flake.lock: Update (#465)
  * update flake to match main
  * use first() instead of get(0)
  * prepare 0.0.35
  * Bump wayland dependencies: wayland-backend, wayland-client, wayland-cursor and wayland-scanner.
  * disable cursor blink on selection
  * report focus change
  * update rust version and winit
  * flake: refactor and update flake.lock (#406)
  * update CHANGELOG.md

-------------------------------------------------------------------
Sun Feb 11 15:23:51 UTC 2024 - androw95220@gmail.com

- Update to version 0.0.34:
  * prepare 0.0.34
  * update winit to 0.29.9
  * use Fowler–Noll–Vo hash function (implementation that is more efficient for smaller hash keys)
  * update winit to 0.29.6
  * Adding `flake.nix` (#363)
  * remove wa from 0.0.x
  * remove wa from 0.0.x
  * update changelog
  * docs: set padding-x default to 0 (#396)
  * docs: add image in configuration-file.md (#394)
  * prepare 0.0.33
  * move forceful computation to resumed
  * update CHANGELOG.md (highligh breaking for macos-hide-toolbar-buttons
  * update fmt on last commit
  * linux: compute render update on init whenever the window has blur or transparency
  * linux force render computation if window is transparent or is blur
  * ident on nightly.yml
  * set_blur on window update
  * docs: reordering keys to avoid conflicts (#391)
  * create nightly tag from main head
  * add window decorations to docs
  * update docs
  * feat: path based tab color coding (#389)
  * fix: use explicit lifetime for const str (#385)
  * new configuration for window: decoration

-------------------------------------------------------------------
Fri Dec 15 20:14:10 UTC 2023 - androw95220@gmail.com

- Update to version 0.0.32:
  * prepare 0.0.32
  * change on font order
  * fix: add default values to keyboard config (#382)
  * refactor(cross-winit): remove unnecessary cloning of key events (#381)
  * disable deb build for nightly for now
  * update sugarloaf/Cargo.toml
  * update sugarloaf/Cargo.toml
  * update sugarloaf/Cargo.toml
  * prepare version 0.0.31
  * disable clippy for Keyboard since it will fail for linux case but pass for the rest
  * change font order priority
  * disable_ctlseqs_alt
  * keyboard config
  * add Hide the cursor while typing info on docs
  * implement [renderer] configuration property
  * updat changelog
  * fix: update padding top on config change (#378)
  * update changelog
  * fix: trim unix program name (#377)
  * fix: remove duplicate kitty backspace keybinds (#375)
  * fix order of modifiers
  * move install-terminfo to outside make release-macos
  * prepare 0.0.30
  * remove canary from docs
  * rename macos zip to unsigned
  * update nightly release to keep there
  * update canary name
  * update logic for native tabs calculation
  * move to nightly releases
  * feat(i18n): add polish translation to landing page (#369)
  * feat(i18n): add spanish translation to landing page (#368)
  * feat(i18n): add spanish translation to landing page (#368)
  * fix rustfmt after correct for ansi regression
  * fix regression made with transaprency work
  * fix regression with dynamic_background
  * macos-hide-toolbar-buttons

-------------------------------------------------------------------
Wed Dec 06 20:04:53 UTC 2023 - androw95220@gmail.com

- Update to version 0.0.29:
  * prepare 0.0.29
  * fix command key + left and right strange behavior (closes #359 and #366)
  * corrections on linux for EventLoopExtStartupNotify
  * configure startup_notify
  * remove APPLICATION_ID
  * move APPLICATION_ID out of screen
  * move window to router
  * remove key.key_without_modifiers but keep Key::Character
  * corrections for tmux and new scroll api
  * docs(config): mention blur requires restart (#358)
  * add info about iTerm2 image protocol
  * add description to rioterm
  * update workspace.dependencies
  * update version to 0.0.28
  * prepare release
  * breadcrumb isn't windows
  * raw_window_handle is only used in macos
  * close last tab for native tab too
  * fix NativeTab for macos
  * wip OSC 1337
  * disable sugarloaf warn errors when find the font
  * fix broken link
  * remove shadow for whenever have shadow
  * set blur in the defaults
  * update info about bg image
  * add blur support
  * add editor back
  * remove settings UI (going back to the window with editor)
  * update test script
  * update scripts and docs
  * set default for macos padding-x as 5.0
  * update pt-br text for docs
  * update docs regarding window.background-image
  * fix broken link and start pt-br translation
  * update CHANGELOG
  * remove render in calculate_bounds and additional line render
  * rename title for docs
  * transparency partially working (named_colors should load transparency)
  * small refactor suggestions (#351)
  * bumping `winit` (#349)
  * disable wa examples for lint
  * renaming `rust-toolchain` to `rust-toolchain.toml` (#350)
  * set target_os for graphics
  * disable clippy for now in WA
  * add more info about WA
  * RenderableSugarloaf trait
  * update multi to cross-winit
  * update documentation
  * introduce sugarloaf void and sugarloaffn trait
  * use webgpu with wa
  * start wa project
  * More `PathBuf` (#342)
  * Some refactors (#341)
  * Add basic translations for Korean (#339)
  * correction for route.window.winit_window.set_cursor_visible happening on mouse moving
  * fix broken link docs
  * NativeTab is macos default navigation mode
  * separate by frontend and backend
  * hide_cursor_when_typing config
  * update derive for default
  * hide-cursor-when-typing config
  * update links
  * using raphamorim/winit fork
  * add swift-ui as backend
  * cleaning up
  * config to lib
  * initial version of multi build
  * docs in main level
  * introduce backends concept and drop wa project
  * swift start rio project
  * swift gitignore
  * fmt to CloseWindow
  * macos-enable-close-last-tab for non-native tabs
  * implement confirm-before-quit
  * update imports
  * default_macos_enable_close_last_tab is true
  * rename to macos-enable-close-last-tab to keep consistency
  * introduce macos_allow_close_last_tab for native tabs only (closes #296)
  * Update configuration-file.md (#320)
  * update CHANGELOG.md
  * osc 8 (hyperlinks) (ref #60)
  * update CHANGELOG.md
  * implement use_current_path for native tabs close #323
  * Fix some issues for docs (#334)
  * Redesign docs index page (#333)
  * update to references to wa
  * update README.md
  * add info
  * correct files and add README.md
  * move CompositeAlphaMode to Auto and PresentMode to AutoVsync
  * Add web font (#332)
  * migrate winit to winit fork (wa)
  * save alpha_mode and present_mode from capabilities
  * move to wa
  * introduce wa (winit/tao wrapper)
  * update ab_glyph
  * change POLLING_TIMEOUT to 2s
  * update changelog
  * re add className around RioLogo
  * Simplify logo (#329)
  * Bit improve docs (#330)
  * add an extra step for publish-crates to ensure build before publish
  * prepare 0.0.27
  * lock and update dependencies
  * update then() message
  * rio-wasm should be just an index.html that loads the js/wasm rio file
  * lib only exist for wasm context, so renaming it for wasm
  * webassembly support for rio (reorganization folders)
  * Activate the hyperlink check whenever a modifier is changed ( for windows/linux/bsd and  for macos)
  * update comments
  * Update docs (#326)
  * add link to Void Linux package in install docs (#325)
  * update changelog
  * fix Error when Double click on terminal side (close #316)
  * Update configuration-file.md (#319)
  * Fix typo in error messages (#317)

-------------------------------------------------------------------
Sun Oct 29 07:16:31 UTC 2023 - androw95220@gmail.com

- Update to version 0.0.26:
  * prepare 0.0.26
  * upgrade winit to 0.29.3
  * (docs)terminfo.md: add instructions to install when not cloned (#302)
  * hyperlink support in docs
  * drop vec usage on open_hyperlink
  * avoid to_string with exec on windows
  * avoid to_string with exec on windows
  * add CommandExt for windows spawn_daemon
  * correct lint for windows
  * fix windows imports
  * run action/link support for windows
  * support for alt key in linux/windows for hyperlinks
  * set multiple lines support for hyperlink
  * correction of assert! for hyperlink test
  * only for unix now trigger_hyperlink_from_position
  * move back update_selection_scrolling
  * update changelog about current hyperlink status (closes #60)
  * update info about hyperlink in changelog
  * fixes for lifecycle
  * links working for macos/linux only
  * add link processing
  * underline straight once is found
  * search for nearest hyperlink
  * update mentions
  * Fix typos on the key bindings documentation (#315)

-------------------------------------------------------------------
Wed Oct 25 19:29:48 UTC 2023 - androw95220@gmail.com

- Update to version 0.0.25:
  * prepare 0.0.25
  * use wgpu 0.18.0
  * use += for vi_cursor pos control
  * update changelog regarding #311
  * fix vi cursor disappear when scroll
  * Add program (shell) name to the window_title (#312)
  * fix flagged dimmed named colors (cases where it does not comes from rgb index). closes #308
  * add Jai mention
  * fix MacOS fullscreen empty space on margin top (fmt)
  * fix MacOS fullscreen empty space on margin top
  * update to Named keys for windows/linux
  * upgrade winit 0.29.2 (take 4 - last)
  * upgrade winit 0.29.2 (take 3)
  * upgrade winit 0.29.2 (take 2)
  * upgrade winit 0.29.2 (take 1)
  * update image vi mode
  * update index.md link
  * rename docs

-------------------------------------------------------------------
Fri Oct 20 19:54:36 UTC 2023 - androw95220@gmail.com

- Update to version v0.0.24:
  * move self.state.set_selection back to start_selection
  * correction for cursor
  * prepare 0.0.24
  * update CHANGELOG.md
  * improve calculate_mouse_position and add tests
  * implementation of copy mode (alacritty vi mode) close #186
  * add documentation regarding alacritty vi mode
  * implement cursor color for vi mode
  * add Rio logo to README.md
  * Update build-from-source.md (#298)
  * redraw per key release
  * stop inline render fn and render once key is released

-------------------------------------------------------------------
Wed Oct 18 20:44:26 UTC 2023 - androw95220@gmail.com

- Update to version 0.0.23:
  * disable toggle VI mode for now
  * prepare release 0.0.23
  * correct keybindings
  * put kitty keyboard protocol back but being optional
  * update docs
  * use tempdir 0.3.7
  * update regex to 1.10.2
  * update information regarding use_kitty_keyboard_protocol
  * docs: fix typo in tagline (#297)
  * disable kitty keyboard protocol temporarily
  * fix bold lookup
  * long width bound for text builder
  * text builder logic
  * text builder sugarloaf
  * update CHANGELOG.md
  * logic for repeated background
  * repeated bg rect
  * docs: uniform style in configuration sample (#291)
  * docs: add scroll-multiplier configuration parameter (#290)
  * keep pattern for string creation for pre-str
  * Delete old canary release
  * keep pattern whenever creating strings in welcome.rs
  * re-add delete tag-and-release to canary pipeline
  * create a canary release
  * use canary release naming/tag and delete previous canary release before submit a new one
  * feat: added scroll_modifier to Config with default 2.0 (#288)
  * requires_restart for new tabs using current path settings UI
  * fix padding_x changes through settings UI
  * update changelog
  * Navigation: Remove magic strings (#285)
  * write simple simple test for calculate_mouse_position #182
  * newline at end of file
  * floor() on cell_dimension for mouse_position
  * move logic to mouse.rs and prepare to start writing tests (#182)
  * remove unnecessary check after use scaled_margin_x (#182)
  * improve mouse position calculation for scales >=2.0 (#182)
  * improve mouse position calculation ref (#182)
  * add a comment regarding backspace+control for windows and update CHANGELOG
  * enable powershell shortcut for windows (close #220)
  * add clearhistory support
  * update CHANGELOG regarding reverse order of collapsedTabs
  * fix CHANGELOG syntax
  * fix order of tab moving and apply reverse on collapsed tabs
  * correct tabs move shortcut
  * vi mode wip
  * clear_selection implementation as action
  * docs escape sequence support
  * new Scroll api with docs escape sequence support
  * fix  Cursor shape isn't restored (close #279)
  * Fix color automation for breadcrumb mode
  * introduce scaled_sugarwidth and scaled_sugarheight
  * sugarloaf: adding `repository` to `Cargo.toml` (#280)
  * Fix link to build from source in Linux install (#277)
  * updating rust-version to 1.73.0 (#275)
  * remove multiplier
  * remove round from spaces
  * comment println
  * update CHANGELOG.md
  * fix OSC52 (closes #276)
  * support 7.0 as minimum font-size with shortcut and fix change font size function
  * fix in progress for tab overlaping text
  * update CHANGELOG.md
  * fmt fix lines calculation
  * fix for calculate lines
  * update changelog and add a comment
  * fix bug whenever is not closing terminal for non native tabs (ref #255)
  * use term UNRELEASED instead of In Progress
  * support to new Run and Scroll API
  * update docs to use ignore-selection-fg-color
  * undo fixed scaledwidth/height
  * exec and Act::Command(program) are unix exclusives
  * sugarwidth now has fixed weight (as it should have been since beginning). The font bounds now needs to be scaled to match the fixed sugarwidth (ref #167 #264 #182)

-------------------------------------------------------------------
Wed Oct 11 12:24:57 UTC 2023 - Dominique Leuenberger <dimstar@opensuse.org>

- Replace freetype-devel BuildRequires with freetype2: this is
  actually what is needed, but as fontconfig happened to pull it in
  already, things happened to work. Freetype 1 is not needed here.

-------------------------------------------------------------------
Mon Oct 02 17:22:11 UTC 2023 - androw95220@gmail.com

- Update to version 0.0.22:
  * update CHANGELOG.md
  * move back 0.0.22 sugarloaf
  * use 0.0.22-1 for sugarloaf
  * try to find glyph from font vec
  * update commands
  * move sugarloaf fontes to test-fonts folder
  * update lockfile
  * prepare 0.0.22
  * fix wasm builds
  * format code and fix wasm build
  * update CHANGELOG regarding support to extra fonts
  * implement extra fonts
  * use Ms jhenghei
  * update windows unicode and symbols fonts
  * use arial unicode ms for windows
  * update docs regarding shell program examples
  * update default examples for shell (ref #263)
  * bump few more deps
  * bump few dependencies
  * update CHANGELOG.md
  * add scroll actions to bindings/mod.rs (close #265)
  * move back to font_spec usage
  * use first of filtered_formats and update CHANGELOG
  * use queue rendering instead of use staging_belt
  * update brush and calculator imports
  * rename glyph_brush and glyph_calculator mods
  * port glyph-brush into glyph mod.rs
  * test sugarloaf height

-------------------------------------------------------------------
Sat Sep 30 09:53:09 UTC 2023 - androw95220@gmail.com

- Update to version 0.0.21:
  * fmt unsupported_formats.contains
  * add publish-crates to make
  * lock to 0.0.21
  * prepare 0.0.21
  * move wegpu upgrade to next version bump
  * rollback with webgpu upgrade
  * use wgpu 0.17.1
  * update lockfile
  * remove comments
  * use npm ci instead of install for ci
  * remove index.md of HomepageFeatures
  * remove working-directory
  * update docs flow
  * check if is_srgb
  * comment ligatures feature for now in docs
  * update changelog
  * workflow: automatically deploy documentation site using GitHub Actions (#261)
  * Hide other applications in MacOS (#262)
  * implement --working-dir on cli (closes #258)
  * update broken links in the README
  * skip_serializing for some fields in navigation
  * docs: markdown (#257)
  * update version docs
  * remove legacy icns icons
  * use version from workspace

-------------------------------------------------------------------
Sun Sep 24 13:24:14 UTC 2023 - androw95220@gmail.com

- Update to version 0.0.20:
  * update changelog.md
  * prepare 0.0.20
  * Fix cursor disappearing in the first tab whenever a new tab is created with NativeTab
  * add log error to not found font
  * update docs
  * fmt performer/handler
  * switch sync escape from DCS to CSI (changes originally implemented in alacritty/vte that's licensed under MIT)
  * update documentation
  * update docs with default documentation file and add themes section (close #250)
  * update colors and remove screen rendering from state mod
  * update rio-colors
  * update changelog
  * remove RIO_CONFIG variable from init (Ref #243)
  * keep original license and copyright from alacritty take2 #246
  * update fmt for screen/mod.rs
  * keep original license and copyright from alacritty #246
  * update website
  * migration to docasaurus
  * select specific dependencies
  * add fontconfig-parser dep to sugarloaf
  * add fontconfig-parser dep to sugarloaf
  * add fontconfig search for unix (non-macos)
  * add fontconfig
  * Add ToggleFullscreen Action #229 (#249)
  * Update configuration-file.md: fix broken link (#248)
  * fix: Command + H can't hide rio on macOS #240 (#244)
  * fix fmt for standalone colors
  * start to use fixed colors for screens (avoid issues with themes and specific configs
  * update default colors
  * update colors
  * [Draft] Docs migration (#241)
  * fmt LOGO_ICON
  * update website
  * update new logo
  * new logo
  * updating rust-version to 1.72.1 (#238)
  * update CHANGELOG.md
  * use specific version #198
  * Feature/chocolatey (#239)
  * refactor: enable full optimizations for release profile (#236)
  * refactor: enable CPU-specific optimizations on aarch64-apple-darwin (#235)
  * update docs

-------------------------------------------------------------------
Tue Sep 19 12:58:51 UTC 2023 - androw95220@gmail.com

- Update to version 0.0.19:
  * wrap up post release 0.0.19
  * update CHANGELOG.md
  * update package versions
  * prepare 0.0.19
  * disable menu macos
  * update image example
  * use TriangleList as PrimitiveTopology
  * update config with undercased
  * update fmt dynamic change
  * dynamic background color
  * remove renderable trait
  * update config tests
  * implementation of image background without opacity
  * work in progress image rendering
  * compute fg/bg colors
  * new docs
  * teach sugarloaf how render layer image and start docs 2.0
  * feat: option for ignoring theme foreground selection color (#227)
  * remove backspace with modifierState
  * remove DISAMBIGUATE_KEYS from arrows bindings
  * split update counter per x/y on settings menu
  * update sugarloaf api for wasm32
  * map the rest of the configuration
  * write configuration from settings UI
  * reuse font reference in all screens (yey) and link font faces to settings
  * ignore loader on wasm32
  * incluse font loader to sugarloaf with normalization of the name
  * font loader
  * docs: add opensuse linux package (#224)
  * use fixed font width
  * update fmt teleypewriter
  * treat errors from teletypewriter
  * turn off testing settings route
  * update character position for column whenever has a selection (related #182)
  * remove settings representation
  * settings ui work in progress
  * remove x icon on error ui
  * update fmt for &error.report
  * update window dead context
  * create dead_context and report now is splitted in two levels warning and error (closes #212)
  * update env variables
  * read from working_directory in flatpak
  * use spawn as default for flatpak
  * flatpak support
  * Rename Regular window mode to Windowed (#219)
  * custom impl Default for Window
  * add window mode default for mode
  * fmt window rio-config
  * add window.rs in rio-config
  * new window API that allow configure maximized or fullscreen (closes #215)
  * fmt unix/mod.rs
  * if runs inside a flatpak sandbox retrieve /bin/zsh from flatpak-spawn
  * docs: add alpine linux package (#218)
  * move style code back
  * teletypewriter validate if is a flatpak sandbox to retrieve SHELL
  * remove duplicate get_pw_entry calls
  * retrieve-shell-outside-box-for-flatpak
  * Add navigation Plain mode (closes #213)
  * demo/emacs: better screenshot (#211)
  * disable NavigationHasChanged warn (todo for next release)
  * fix: change package name from rio to rioterm (#210)
  * update changelog
  * update Cargo.toml files and published a rc version to crates.io
  * has_regained_focus redraw window for idle windows
  * update rules for blinking cursor
  * partial support to blinking cursor (has few incosistencies yet like selection and VI mode switchs
  * add font name variant for cascadia code
  * fix breadcrumbs id
  * error UI for fonts
  * use crate::ui::Error
  * update target_arch for sugarloaf
  * minor fixes for docs styles
  * linux doesn't use .0 since is font_arc straight
  * clear comments
  * implementation of event for UI component that shows the error of configuration file (closes #168)
  * update lock file
  * make docs and docs-prod
  * add jekyll-minifier
  * update CHANGELOG.md
  * migrated font-kit to fontdb
  * move scripts to inside misc folder
  * rename rio_proc_macros to rio-proc-macro and reuse version from workspace
  * merge config and colors into rio-config
  * move create toolbar to ui::appkit::mod
  * remove silkscreen
  * update images
  * update website wip
  * update docs
  * add top to other sections
  * go to top button docs
  * update docs (on-going)
  * update ui mod (code originally came from madsmtm/menubar
  * ui kit
  * add initial support to menubar
  * block rgba16float to prevent nvidia driver to enable hdr (#209)
  * adaptive theme support (close #207)
  * correct std::fmt::Display for Breadcrumb
  * update settings function
  * provide settings from builder
  * finish layout UI for settings
  * colors and config load version from workspaces
  * use workspace
  * update cargo.toml
  * copa 0.12
  * update changelog
  * implemented ScrollPageUp, ScrollPageDown, ScrollHalfPageUp, ScrollHalfPageDown, ScrollToTop, ScrollToBottom, ScrollLineUp, ScrollLineDown (close #206)
  * support fonts.family to overwrite all other font families
  * create_native_tab only for macos
  * fix shift key with arrow
  * update CHANGELOG.md
  * connect router with windows and native tabs
  * welcome screen
  * use .to_string
  * update identation
  * cover legacy modifiers
  * wip settings ui
  * update styles for settings ui
  * mockup settings UI
  * introduce Router
  * fix literal with an empty format string
  * release on enter
  * update message config
  * add assistant
  * NativeTab is MacOS default now
  * add errors to assistant if have configuration error whenever updating the config
  * assistant UI
  * corcovado use Rc instead of Arc due to Sync trait
  * update lint for rust 1.72
  * Update CHANGELOG.md
  * update rust and fix 'Backspace' keypress triggers Ctrl+h keybinding in Zellij (closes #197)
  * update CHANGELOG.md
  * implement TERM_PROGRAM and TERM_PROGRAM_VERSION variables
  * chore: fix typo (#199)
  * only apply check for native tab deadzone in cursor updates
  * Whenever native tabs is on disable macos deadzone logic
  * docs: update the link for Arch Linux package (#195)

-------------------------------------------------------------------
Sun Sep 10 16:43:45 UTC 2023 - androw95220@gmail.com

- Update to version 0.0.18~0:
  * update to 0.0.18
  * 0.0.18
  * fix delete key
  * fix breadcrumb navigation crash
  * fix breadcrumb navigation (closes #193)
  * fix wasmbuild with font spec
  * update docs regarding release
  * prepare 0.0.17 release
  * update repology badge
  * update font API

-------------------------------------------------------------------
Sun Sep 10 16:11:59 UTC 2023 - Nicolas Lorin <androw95220@gmail.com>

new package- 
