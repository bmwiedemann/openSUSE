-------------------------------------------------------------------
Thu Aug  4 12:52:32 UTC 2022 - Stephan Kulow <coolo@suse.com>

updated to version 7.0.3.1
 see installed CHANGELOG.md

  ## Rails 7.0.3.1 (July 12, 2022) ##
  
  *   Change ActiveRecord::Coders::YAMLColumn default to safe_load
  
      This adds two new configuration options The configuration options are as
      follows:
      
      * `config.active_storage.use_yaml_unsafe_load`
      
      When set to true, this configuration option tells Rails to use the old
      "unsafe" YAML loading strategy, maintaining the existing behavior but leaving
      the possible escalation vulnerability in place.  Setting this option to true
      is *not* recommended, but can aid in upgrading.
      
      * `config.active_record.yaml_column_permitted_classes`
      
      The "safe YAML" loading method does not allow all classes to be deserialized
      by default.  This option allows you to specify classes deemed "safe" in your
      application.  For example, if your application uses Symbol and Time in
      serialized data, you can add Symbol and Time to the allowed list as follows:
      
      ```
      config.active_record.yaml_column_permitted_classes = [Symbol, Date, Time]
      ```
  
      [CVE-2022-32224]
  
  

-------------------------------------------------------------------
Sun May 15 15:19:24 UTC 2022 - Manuel Schnitzer <mschnitzer@suse.com>

- updated to version 7.0.3

  *   Some internal housekeeping on reloads could break custom `respond_to?`
      methods in class objects that referenced reloadable constants. See
      [#44125](https://github.com/rails/rails/issues/44125) for details.

      *Xavier Noria*

  *   Fixed MariaDB default function support.

      Defaults would be written wrong in "db/schema.rb" and not work correctly
      if using `db:schema:load`. Further more the function name would be
      added as string content when saving new records.

      *kaspernj*

  *   Fix `remove_foreign_key` with `:if_exists` option when foreign key actually exists.

      *fatkodima*

  *   Remove `--no-comments` flag in structure dumps for PostgreSQL

      This broke some apps that used custom schema comments. If you don't want
      comments in your structure dump, you can use:

      ```ruby
      ActiveRecord::Tasks::DatabaseTasks.structure_dump_flags = ['--no-comments']
      ```

      *Alex Ghiculescu*

  *   Use the model name as a prefix when filtering encrypted attributes from logs.

      For example, when encrypting `Person#name` it will add `person.name` as a filter
      parameter, instead of just `name`. This prevents unintended filtering of parameters
      with a matching name in other models.

      *Jorge Manrubia*

  *   Fix quoting of `ActiveSupport::Duration` and `Rational` numbers in the MySQL adapter.

      *Kevin McPhillips*

  *   Fix `change_column_comment` to preserve column's AUTO_INCREMENT in the MySQL adapter

      *fatkodima*

-------------------------------------------------------------------
Thu Apr 28 05:14:19 UTC 2022 - Stephan Kulow <coolo@suse.com>

updated to version 7.0.2.4
 see installed CHANGELOG.md

  ## Rails 7.0.2.4 (April 26, 2022) ##
  
  *   No changes.
  
  

-------------------------------------------------------------------
Thu Mar 10 13:21:47 UTC 2022 - Manuel Schnitzer <mschnitzer@suse.com>

- updated to version 7.0.2.3

  * no changes

-------------------------------------------------------------------
Tue Feb 15 07:12:06 UTC 2022 - Stephan Kulow <coolo@suse.com>

updated to version 7.0.2.2
 see installed CHANGELOG.md

  ## Rails 7.0.2.2 (February 11, 2022) ##
  
  *   No changes.
  
  
  ## Rails 7.0.2.1 (February 11, 2022) ##
  
  *   No changes.
  
  
  ## Rails 7.0.2 (February 08, 2022) ##
  
  *   Fix `PG.connect` keyword arguments deprecation warning on ruby 2.7.
  
      *Nikita Vasilevsky*
  
  *   Fix the ability to exclude encryption params from being autofiltered.
  
      *Mark Gangl*
  
  *   Dump the precision for datetime columns following the new defaults.
  
      *Rafael Mendonça França*
  
  *   Make sure encrypted attributes are not being filtered twice.
  
      *Nikita Vasilevsky*
  
  *   Dump the database schema containing the current Rails version.
  
      Since https://github.com/rails/rails/pull/42297, Rails now generate datetime columns
      with a default precision of 6. This means that users upgrading to Rails 7.0 from 6.1,
      when loading the database schema, would get the new precision value, which would not match
      the production schema.
  
      To avoid this the schema dumper will generate the new format which will include the Rails
      version and will look like this:
  
      ```
      ActiveRecord::Schema[7.0].define
      ```
  
      When upgrading from Rails 6.1 to Rails 7.0, you can run the `rails app:update` task that will
      set the current schema version to 6.1.
  
      *Rafael Mendonça França*
  
  *   Fix parsing expression for PostgreSQL generated column.
  
      *fatkodima*
  
  *   Fix `Mysql2::Error: Commands out of sync; you can't run this command now`
      when bulk-inserting fixtures that exceed `max_allowed_packet` configuration.
  
      *Nikita Vasilevsky*
  
  *   Fix error when saving an association with a relation named `record`.
  
      *Dorian Marié*
  
  *   Fix `MySQL::SchemaDumper` behavior about datetime precision value.
  
      *y0t4*
  
  *   Improve associated with no reflection error.
  
      *Nikolai*
  
  *   Fix PG.connect keyword arguments deprecation warning on ruby 2.7.
  
      Fixes #44307.
  
      *Nikita Vasilevsky*
  
  *   Fix passing options to `check_constraint` from `change_table`.
  
      *Frederick Cheung*
  
  

-------------------------------------------------------------------
Tue Jan 25 06:24:56 UTC 2022 - Stephan Kulow <coolo@suse.com>

updated to version 7.0.1
 see installed CHANGELOG.md

  ## Rails 7.0.1 (January 06, 2022) ##
  
  *   Change `QueryMethods#in_order_of` to drop records not listed in values.
  
      `in_order_of` now filters down to the values provided, to match the behavior of the `Enumerable` version.
  
      *Kevin Newton*
  
  *   Allow named expression indexes to be revertible.
  
      Previously, the following code would raise an error in a reversible migration executed while rolling back, due to the index name not being used in the index removal.
  
      ```ruby
      add_index(:settings, "(data->'property')", using: :gin, name: :index_settings_data_property)
      ```
  
      Fixes #43331.
  
      *Oliver Günther*
  
  *   Better error messages when association name is invalid in the argument of `ActiveRecord::QueryMethods::WhereChain#missing`.
  
      *ykpythemind*
  
  *   Fix ordered migrations for single db in multi db environment.
  
      *Himanshu*
  
  *   Extract `on update CURRENT_TIMESTAMP` for mysql2 adapter.
  
      *Kazuhiro Masuda*
  
  *   Fix incorrect argument in PostgreSQL structure dump tasks.
  
      Updating the `--no-comment` argument added in Rails 7 to the correct `--no-comments` argument.
  
      *Alex Dent*
  
  *   Fix schema dumping column default SQL values for sqlite3.
  
      *fatkodima*
  
  *   Correctly parse complex check constraint expressions for PostgreSQL.
  
      *fatkodima*
  
  *   Fix `timestamptz` attributes on PostgreSQL handle blank inputs.
  
      *Alex Ghiculescu*
  
  *   Fix migration compatibility to create SQLite references/belongs_to column as integer when migration version is 6.0.
  
      Reference/belongs_to in migrations with version 6.0 were creating columns as
      bigint instead of integer for the SQLite Adapter.
  
      *Marcelo Lauxen*
  
  *   Fix joining through a polymorphic association.
  
      *Alexandre Ruban*
  
  *   Fix `QueryMethods#in_order_of` to handle empty order list.
  
      ```ruby
      Post.in_order_of(:id, []).to_a
      ```
  
      Also more explicitly set the column as secondary order, so that any other
      value is still ordered.
  
      *Jean Boussier*
  
  *   Fix `rails dbconsole` for 3-tier config.
  
      *Eileen M. Uchitelle*
  
  *   Fix quoting of column aliases generated by calculation methods.
  
      Since the alias is derived from the table name, we can't assume the result
      is a valid identifier.
  
      ```ruby
      class Test < ActiveRecord::Base
        self.table_name = '1abc'
      end
      Test.group(:id).count
      # syntax error at or near "1" (ActiveRecord::StatementInvalid)
      # LINE 1: SELECT COUNT(*) AS count_all, "1abc"."id" AS 1abc_id FROM "1...
      ```
  
      *Jean Boussier*
  
  

-------------------------------------------------------------------
Mon Dec 27 11:24:50 UTC 2021 - Manuel Schnitzer <mschnitzer@suse.com>

- Don't limit building to specific ruby versions

-------------------------------------------------------------------
Tue Dec 21 22:09:13 UTC 2021 - Manuel Schnitzer <mschnitzer@suse.com>

- Rails 7.0 has been released

  https://edgeguides.rubyonrails.org/7_0_release_notes.html

-------------------------------------------------------------------
Sun Dec 12 22:00:58 UTC 2021 - Marcus Rueckert <mrueckert@suse.de>

- initial package
