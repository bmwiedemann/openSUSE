<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>0f681be13696114db3e9106aa5813c0c</srcmd5>
    <version>7.0.2.2</version>
    <time>1646671655</time>
    <user>dimstar_suse</user>
    <comment>switch from rails 6 to 7</comment>
    <requestid>959886</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>893d02c0dc60f27e99084bf72f81e895</srcmd5>
    <version>7.0.2.3</version>
    <time>1646948741</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>960793</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>f242a20c2881c0c60830aa42ee4ead80</srcmd5>
    <version>7.0.2.4</version>
    <time>1651351941</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>974041</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>6b76ad4f769d6182aed952e574ef3391</srcmd5>
    <version>7.0.3</version>
    <time>1652717310</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>977366</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>ef9b5f7493aaaacd501678f41a5cf2c6</srcmd5>
    <version>7.0.3.1</version>
    <time>1659816465</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>993457</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>be0807f2eedc47440e14cce6baa097b0</srcmd5>
    <version>7.0.4</version>
    <time>1665591900</time>
    <user>dimstar_suse</user>
    <comment>updated to version 7.0.4
 see installed CHANGELOG.md
  ## Rails 7.0.4 (September 09, 2022) ##
  
  *   Symbol is allowed by default for YAML columns
  
      *Étienne Barrié*
  
  *   Fix `ActiveRecord::Store` to serialize as a regular Hash
  
      Previously it would serialize as an `ActiveSupport::HashWithIndifferentAccess`
      which is wasteful and cause problem with YAML safe_load.
  
      *Jean Boussier*
  
  *   Add `timestamptz` as a time zone aware type for PostgreSQL
  
      This is required for correctly parsing `timestamp with time zone` values in your database.
  
      If you don't want this, you can opt out by adding this initializer:
  
      ```ruby
      ActiveRecord::Base.time_zone_aware_types -= [:timestamptz]
      ```
  
      *Alex Ghiculescu*
  
  *   Fix supporting timezone awareness for `tsrange` and `tstzrange` array columns.
  
      ```ruby
      # In database migrations
      add_column :shops, :open_hours, :tsrange, array: true
      # In app config
      ActiveRecord::Base.time_zone_aware_types += [:tsrange]
      # In the code times are properly converted to app time zone
      Shop.create!(open_hours: [Time.current..8.hour.from_now])
      ```
  
      *Wojciech Wnętrzak*
  
  *   Resolve issue where a relation cache_version could be left stale.
  
      Previously, when `reset` was called on a relation object it did not reset the cache_versions
      ivar. This led to a confusing situation where despite having the correct data the relation
      still reported a stale cache_version.
  
      Usage:
  
      ```ruby
      developers = Developer.all
      developers.cache_version
  
      Developer.update_all(updated_at: Time.now.utc + 1.second)
  
      developers.cache_version # Stale cache_version
      developers.reset
      developers.cache_version # Returns the current correct cache_version
      ```
  
      Fixes #45341.
  
      *Austen Madden*
  
  *   Fix `load_async` when called on an association proxy.
  
      Calling `load_async` directly an association would schedule
      a query but never use it.
  
      ```ruby
      comments = post.comments.load_async # schedule a query
      comments.to_a # perform an entirely new sync query
      ```
  
      Now it does use the async query, however note that it doesn't
      cause the association to be loaded.
  
      *Jean Boussier*
  
  *   Fix eager loading for models without primary keys.
  
      *Anmol Chopra*, *Matt Lawrence*, and *Jonathan Hefner*
  
  *   `rails db:schema:{dump,load}` now checks `ENV[&quot;SCHEMA_FORMAT&quot;]` before config
  
      Since `rails db:structure:{dump,load}` was deprecated there wasn't a simple
      way to dump a schema to both SQL and Ruby formats. You can now do this with
      an environment variable. For example:
  
      ```
      SCHEMA_FORMAT=sql rake db:schema:dump
      ```
  
      *Alex Ghiculescu*
  
  *   Fix Hstore deserialize regression.
  
      *edsharp*
  
  
</comment>
    <requestid>1010045</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>effaeb070c6991a97975b662deaae8c0</srcmd5>
    <version>7.0.4.1</version>
    <time>1678283540</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1067315</requestid>
  </revision>
</revisionlist>
