diff -r a48f0f1c34c8 -r 1741862a1b97 analyses/pluginCMS/CMS_2013_I1223519.cc
--- a/analyses/pluginCMS/CMS_2013_I1223519.cc   Fri May 24 15:08:51 2019 +0000
+++ b/analyses/pluginCMS/CMS_2013_I1223519.cc   Tue May 28 14:39:35 2019 +0200
@@ -123,9 +123,9 @@
       const Jets jets37 = filter_select(alljets, Cuts::Et > 37*GeV);
       const Jets jets43 = filter_select(jets37, Cuts::Et > 43*GeV);
       const Jets jets50 = filter_select(jets43, Cuts::Et > 50*GeV);
-      const double ht37 = sum(jets37, Et, 0.0);
-      const double ht43 = sum(jets43, Et, 0.0);
-      const double ht50 = sum(jets50, Et, 0.0);
+      const double ht37 = sum(jets37, Kin::Et, 0.0);
+      const double ht43 = sum(jets43, Kin::Et, 0.0);
+      const double ht50 = sum(jets50, Kin::Et, 0.0);
 
       // Find the relevant HT bin and apply leading jet event-selection cuts
       static const vector<double> htcuts = { /* 275., 325., */ 375., 475., 575., 675., 775., 875.}; //< comment to avoid jets50 "fall-down"
@@ -153,7 +153,7 @@
 
       // Compute DeltaHT = minimum difference of "dijet" ETs, i.e. max(|1+2-3|, |1+3-2|, |2+3-1|)
       double deltaht = -1;
-      vector<double> jetets; transform(jets, jetets, Et);
+      vector<double> jetets; transform(jets, jetets, Kin::Et);
       for (int i = 1; i < (1 << (jetets.size()-1)); ++i) { // count from 1 to 2**N-1, i.e. through all heterogeneous bitmasks with MSB(2**N)==0
         const bitset<10> bits(i); /// @warning There'd better not be more than 10 jets...
         const double htdiff = partition_diff(bits, jetets);

