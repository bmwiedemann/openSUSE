-------------------------------------------------------------------
Fri Mar 29 05:53:46 UTC 2019 - Stephan Kulow <coolo@suse.com>

- updated to version 5.1.7
 see installed CHANGELOG.md

  ## Rails 5.1.7 (March 27, 2019) ##
  
  *   Fix `touch` option to behave consistently with `Persistence#touch` method.
  
      *Ryuta Kamizono*
  
  *   Back port Rails 5.2 `reverse_order` Arel SQL literal fix.
  
      *Matt Jones*, *Brooke Kuhlmann*
  
  *   `becomes` should clear the mutation tracker which is created in `after_initialize`.
  
      Fixes #32867.
  
      *Ryuta Kamizono*

-------------------------------------------------------------------
Thu Mar 14 10:47:40 UTC 2019 - Stephan Kulow <coolo@suse.com>

- updated to version 5.1.6.2
 see installed CHANGELOG.md

  ## Rails 5.1.6.2 (March 11, 2019) ##
  
  *   No changes.

-------------------------------------------------------------------
Sat Dec  8 16:16:54 UTC 2018 - Stephan Kulow <coolo@suse.com>

- updated to version 5.1.6.1
 see installed CHANGELOG.md

  ## Rails 5.1.6.1 (November 27, 2018) ##
  
  *   No changes.

-------------------------------------------------------------------
Fri Mar 30 04:31:05 UTC 2018 - factory-auto@kulow.org

- updated to version 5.1.6
 see installed CHANGELOG.md

  ## Rails 5.1.6 (March 29, 2018) ##
  
  *   MySQL: Support mysql2 0.5.x.
  
      *Aaron Stone*
  
  *   Apply time column precision on assignment.
  
      PR #20317 changed the behavior of datetime columns so that when they
      have a specified precision then on assignment the value is rounded to
      that precision. This behavior is now applied to time columns as well.
  
      Fixes #30301.
  
      *Andrew White*
  
  *   Normalize time column values for SQLite database.
  
      For legacy reasons, time columns in SQLite are stored as full datetimes
      because until #24542 the quoting for time columns didn't remove the date
      component. To ensure that values are consistent we now normalize the
      date component to 2001-01-01 on reading and writing.
  
      *Andrew White*
  
  *   Ensure that the date component is removed when quoting times.
  
      PR #24542 altered the quoting for time columns so that the date component
      was removed however it only removed it when it was 2001-01-01. Now the
      date component is removed irrespective of what the date is.
  
      *Andrew White*
  
  *   Fix that after commit callbacks on update does not triggered when optimistic locking is enabled.
  
      *Ryuta Kamizono*
  
  *   `ActiveRecord::Persistence#touch` does not work well when optimistic locking enabled and
      `locking_column`, without default value, is null in the database.
  
      *bogdanvlviv*
  
  *   Fix destroying existing object does not work well when optimistic locking enabled and
      `locking column` is null in the database.
  
      *bogdanvlviv*

-------------------------------------------------------------------
Thu Feb 15 05:29:44 UTC 2018 - factory-auto@kulow.org

- updated to version 5.1.5
 see installed CHANGELOG.md

  ## Rails 5.1.5 (February 14, 2018) ##
  
  *   Fix `count(:all)` with eager loading and having an order other than the driving table.
  
      Fixes #31783.
  
      *Ryuta Kamizono*
  
  *   Use `count(:all)` in `HasManyAssociation#count_records` to prevent invalid
      SQL queries for association counting.
  
      *Klas Eskilson*
  
  *   Fix to invoke callbacks when using `update_attribute`.
  
      *Mike Busch*
  
  *   Fix `count(:all)` to correctly work `distinct` with custom SELECT list.
  
      *Ryuta Kamizono*
  
  *   Fix conflicts `counter_cache` with `touch: true` by optimistic locking.
  
      ```
      # create_table :posts do |t|
      #   t.integer :comments_count, default: 0
      #   t.integer :lock_version
      #   t.timestamps
      # end
      class Post < ApplicationRecord
      end
  
      # create_table :comments do |t|
      #   t.belongs_to :post
      # end
      class Comment < ApplicationRecord
        belongs_to :post, touch: true, counter_cache: true
      end
      ```
  
      Before:
      ```
      post = Post.create!
      # => begin transaction
           INSERT INTO "posts" ("created_at", "updated_at", "lock_version")
           VALUES ("2017-12-11 21:27:11.387397", "2017-12-11 21:27:11.387397", 0)
           commit transaction
  
      comment = Comment.create!(post: post)
      # => begin transaction
           INSERT INTO "comments" ("post_id") VALUES (1)
  
           UPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1,
           "lock_version" = COALESCE("lock_version", 0) + 1 WHERE "posts"."id" = 1
  
           UPDATE "posts" SET "updated_at" = '2017-12-11 21:27:11.398330',
           "lock_version" = 1 WHERE "posts"."id" = 1 AND "posts"."lock_version" = 0
           rollback transaction
      # => ActiveRecord::StaleObjectError: Attempted to touch a stale object: Post.
  
      Comment.take.destroy!
      # => begin transaction
           DELETE FROM "comments" WHERE "comments"."id" = 1
  
           UPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) - 1,
           "lock_version" = COALESCE("lock_version", 0) + 1 WHERE "posts"."id" = 1
  
           UPDATE "posts" SET "updated_at" = '2017-12-11 21:42:47.785901',
           "lock_version" = 1 WHERE "posts"."id" = 1 AND "posts"."lock_version" = 0
           rollback transaction
      # => ActiveRecord::StaleObjectError: Attempted to touch a stale object: Post.
      ```
  
      After:
      ```
      post = Post.create!
      # => begin transaction
           INSERT INTO "posts" ("created_at", "updated_at", "lock_version")
           VALUES ("2017-12-11 21:27:11.387397", "2017-12-11 21:27:11.387397", 0)
           commit transaction
  
      comment = Comment.create!(post: post)
      # => begin transaction
           INSERT INTO "comments" ("post_id") VALUES (1)
  
           UPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1,
           "lock_version" = COALESCE("lock_version", 0) + 1,
           "updated_at" = '2017-12-11 21:37:09.802642' WHERE "posts"."id" = 1
           commit transaction
  
      comment.destroy!
      # => begin transaction
           DELETE FROM "comments" WHERE "comments"."id" = 1
  
           UPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) - 1,
           "lock_version" = COALESCE("lock_version", 0) + 1,
           "updated_at" = '2017-12-11 21:39:02.685520' WHERE "posts"."id" = 1
           commit transaction
      ```
  
      Fixes #31199.
  
      *bogdanvlviv*
  
  *   Query cache was unavailable when entering the `ActiveRecord::Base.cache` block
      without being connected.
  
      *Tsukasa Oishi*
  
  *   Fix `bin/rails db:setup` and `bin/rails db:test:prepare` create  wrong
      ar_internal_metadata's data for a test database.
  
      Before:
      ```
      $ RAILS_ENV=test rails dbconsole
      > SELECT * FROM ar_internal_metadata;
      key|value|created_at|updated_at
      environment|development|2017-09-11 23:14:10.815679|2017-09-11 23:14:10.815679
      ```
  
      After:
      ```
      $ RAILS_ENV=test rails dbconsole
      > SELECT * FROM ar_internal_metadata;
      key|value|created_at|updated_at
      environment|test|2017-09-11 23:14:10.815679|2017-09-11 23:14:10.815679
      ```
  
      Fixes #26731.
  
      *bogdanvlviv*
  
  *   Fix longer sequence name detection for serial columns.
  
      Fixes #28332.
  
      *Ryuta Kamizono*
  
  *   MySQL: Don't lose `auto_increment: true` in the `db/schema.rb`.
  
      Fixes #30894.
  
      *Ryuta Kamizono*
  
  *   Fix `COUNT(DISTINCT ...)` for `GROUP BY` with `ORDER BY` and `LIMIT`.
  
      Fixes #30886.
  
      *Ryuta Kamizono*

-------------------------------------------------------------------
Mon Nov 20 11:05:20 UTC 2017 - mrueckert@suse.de

- disable rdoc for now
  https://github.com/rails/rails/commit/8dd76a7a6ff1bb7105beabb8f834ca54ab1e5fc2

-------------------------------------------------------------------
Mon Sep 11 09:22:02 UTC 2017 - enavarro@suse.com

- Update to version 5.1.4

-------------------------------------------------------------------
Wed Aug  9 08:02:57 UTC 2017 - cbruckmayer@suse.com

- Update to version 5.1.3

-------------------------------------------------------------------
Sat Jun 24 06:23:43 UTC 2017 - adrian@suse.de

- update to version 5.1.1

-------------------------------------------------------------------
Mon Mar  6 08:47:18 UTC 2017 - adrian@suse.de

- fix db_runtime logging

-------------------------------------------------------------------
Wed Dec 21 05:30:31 UTC 2016 - coolo@suse.com

- updated to version 5.0.1
 see installed CHANGELOG.md

  ## Rails 5.0.1 (December 21, 2016) ##

  *   No changes.


  ## Rails 5.0.1.rc2 (December 10, 2016) ##

  *   Correct resolution of associated class in `has_many :through`
      associations' `*_ids` setters.

      Fixes #27297.

      *Matthew Draper*

  *   Support index length and order options using both string and symbol
      column names.

      Fixes #27243.

      *Ryuta Kamizono*


  ## Rails 5.0.1.rc1 (December 01, 2016) ##

  *   Fix that unsigned with zerofill is treated as signed.

      Fixes #27125.

      *Ryuta Kamizono*

  *   Fix the uniqueness validation scope with a polymorphic association.

      *Sergey Alekseev*

  *   Raise ActiveRecord::RecordNotFound from collection `*_ids` setters
      for unknown IDs with a better error message.

      Changes the collection `*_ids` setters to cast provided IDs the data
      type of the primary key set in the association, not the model
      primary key.

      *Dominic Cleal*

  *   Introduce `Model#reload_<association>` to bring back the behavior
      of `Article.category(true)` where `category` is a singular
      association.

      The force reloading of the association reader was deprecated
      in #20888. Unfortunately the suggested alternative of
      `article.reload.category` does not expose the same behavior.

      This patch adds a reader method with the prefix `reload_` for
      singular associations. This method has the same semantics as
      passing true to the association reader used to have.

      *Yves Senn*

  *   Make sure eager loading `ActiveRecord::Associations` also loads
      constants defined in `ActiveRecord::Associations::Preloader`.

      *Yves Senn*

  *   Allow `ActionController::Parameters`-like objects to be passed as
      values for Postgres HStore columns.

      Fixes #26904.

      *Jon Moss*

  *   Configure query caching (per thread) on the connection pool.

      Moving the configuration to the pool means we don't allocate a connection
      until it's actually needed.

      Applications that manually interact with the connection pool and/or query
      cache may notice that the connection's cache is now cleared and disabled
      when it gets returned to the pool, even if the request is not yet completed.

      *Samuel Cochran*, *Matthew Draper*

  *   Fixed support for case insensitive comparisons of `text` columns in
      PostgreSQL.

      *Edho Arief*

  *   Return `true` from `update_attribute` when the value of the attribute
      to be updated is unchanged.

      Fixes #26593.

      *Prathamesh Sonpatki*

  *   Serialize JSON attribute value `nil` as SQL `NULL`, not JSON `null`

      *Trung Duc Tran*

  *   Always store errors details information with symbols.

      When the association is autosaved we were storing the details with
      string keys. This was creating inconsistency with other details that are
      added using the `Errors#add` method. It was also inconsistent with the
      `Errors#messages` storage.

      To fix this inconsistency we are always storing with symbols. This will
      cause a small breaking change because in those cases the details could
      be accessed as strings keys but now it can not.

      Fix #26499.

      *Rafael Mendonça França*, *Marcus Vieira*

  *   Using a mysql2 connection after it fails to reconnect will now have an error message
      saying the connection is closed rather than an undefined method error message.

      *Dylan Thacker-Smith*

  *   Remove unnecessarily association load when a `belongs_to` association has already been
      loaded then the foreign key is changed directly and the record saved.

      *James Coleman*

  *   PostgreSQL array columns will now respect the encoding of strings contained
      in the array.

      Fixes #26326.

      *Sean Griffin*

  *   Inverse association instances will now be set before `after_find` or
      `after_initialize` callbacks are run.

      Fixes #26320.

      *Sean Griffin*

  *   Avoid loading records from database when they are already loaded using
      the `pluck` method on a collection.

      Fixes #25921.

      *Ryuta Kamizono*

  *   Sqlite3 migrations to add a column to an existing table can now be
      successfully rolled back when the column was given and invalid column
      type.

      Fixes #26087

      *Travis O'Neill*

  *   Hashes can once again be passed to setters of `composed_of`, if all of the
      mapping methods are methods implemented on `Hash`.

      Fixes #25978.

      *Sean Griffin*

  *   Doing count on relations that contain LEFT OUTER JOIN Arel node no longer
      force a DISTINCT. This solves issues when using count after a left_joins.

      *Maxime Handfield Lapointe*

  *   RecordNotFound raised by association.find exposes `id`, `primary_key` and
      `model` methods to be consistent with RecordNotFound raised by Record.find.

      *Michel Pigassou*

  *   Fix the SELECT statement in `#table_comment` for MySQL.

      *Takeshi Akima*

  *   Virtual attributes will no longer raise when read on models loaded from the
      database

      *Sean Griffin*

  *   Fixes multi-parameter attributes conversion with invalid params.

      *Hiroyuki Ishii*

  *   Add newline between each migration in `structure.sql`.

      Keeps schema migration inserts as a single commit, but allows for easier
      git diff-ing. Fixes #25504.

      *Grey Baker*, *Norberto Lopes*

  *   Using `group` with an attribute that has a custom type will properly cast
      the hash keys after calling a calculation method like `count`.

      Fixes #25595.

      *Sean Griffin*

  *   Ensure concurrent invocations of the connection reaper cannot allocate the
      same connection to two threads.

      Fixes #25585.

      *Matthew Draper*

  *   Fixed dumping of foreign key's referential actions when MySQL connection
      uses `sql_mode = ANSI_QUOTES`.

      Fixes #25300.

      *Ryuta Kamizono*

-------------------------------------------------------------------
Fri Aug 12 04:33:33 UTC 2016 - coolo@suse.com

- updated to version 5.0.0.1
 see installed CHANGELOG.md

-------------------------------------------------------------------
Mon Jul  4 09:23:36 UTC 2016 - coolo@suse.com

- updated to rails 5.0 - see http://weblog.rubyonrails.org/2016/6/30/Rails-5-0-final/

-------------------------------------------------------------------
Tue Mar  8 05:31:37 UTC 2016 - coolo@suse.com

- updated to version 4.2.6
 see installed CHANGELOG.md

  ## Rails 4.2.6 (March 07, 2016) ##

  *   Fix a bug where using `t.foreign_key` twice with the same `to_table` within
      the same table definition would only create one foreign key.

      *George Millo*

  *   Fix regression in dirty attribute tracking after #dup.  Changes to the
      clone no longer show as changed attributes in the original object.

      *Dominic Cleal*

  *   Fix regression when loading fixture files with symbol keys.

      Closes #22584.

      *Yves Senn*

  *   Fix `rake db:structure:dump` on Postgres when multiple schemas are used.

      Fixes #22346.

      *Nick Muerdter*, *ckoenig*

  *   Introduce `connection.data_sources` and `connection.data_source_exists?`.
      These methods determine what relations can be used to back Active Record
      models (usually tables and views).

      *Yves Senn*, *Matthew Draper*

-------------------------------------------------------------------
Tue Mar  1 05:33:54 UTC 2016 - coolo@suse.com

- updated to version 4.2.5.2
 see installed CHANGELOG.md

  ## Rails 4.2.5.2 (February 26, 2016) ##

  *   No changes.


  ## Rails 4.2.5.1 (January 25, 2015) ##

  *   No changes.

-------------------------------------------------------------------
Tue Jan 26 05:31:50 UTC 2016 - coolo@suse.com

- updated to version 4.2.5.1
 see installed CHANGELOG.md

-------------------------------------------------------------------
Fri Nov 13 05:31:15 UTC 2015 - coolo@suse.com

- updated to version 4.2.5
 see installed CHANGELOG.md

  ## Rails 4.2.5 (November 12, 2015) ##

  *   No longer pass deprecated option `-i` to `pg_dump`.

      *Paul Sadauskas*

  *   Set `scope.reordering_value` to `true` if :reordering values are specified.

      Fixes #21886.

      *Hiroaki Izu*

  *   Avoid disabling errors on the PostgreSQL connection when enabling the
      standard_conforming_strings setting. Errors were previously disabled because
      the setting wasn't writable in Postgres 8.1 and didn't exist in earlier
      versions. Now Rails only supports Postgres 8.2+ we're fine to assume the
      setting exists. Disabling errors caused problems when using a connection
      pooling tool like PgBouncer because it's not guaranteed to have the same
      connection between calls to `execute` and it could leave the connection
      with errors disabled.

      Fixes #22101.

      *Harry Marr*

  *   Includes HABTM returns correct size now. It's caused by the join dependency
      only instantiates one HABTM object because the join table hasn't a primary key.

      Fixes #16032.

      Examples:

          before:

          Project.first.salaried_developers.size # => 3
          Project.includes(:salaried_developers).first.salaried_developers.size # => 1

          after:

          Project.first.salaried_developers.size # => 3
          Project.includes(:salaried_developers).first.salaried_developers.size # => 3

      *Bigxiang*

  *   Descriptive error message when fixtures contain a missing column.

      Closes #21201.

      *Yves Senn*

  *   `bin/rake db:migrate` uses
      `ActiveRecord::Tasks::DatabaseTasks.migrations_paths` instead of
      `Migrator.migrations_paths`.

      *Tobias Bielohlawek*

  *   Fix `rewhere` in a `has_many` association.

      Fixes #21955.

      *Josh Branchaud*, *Kal*

  *   Added run_cmd class method to ActiveRecord::Tasks::DatabaseTasks for
      drying up Kernel.system() calls within this namespace and to avoid
      shell expansion by using a paramter list instead of string as arguments
      for Kernel.system(). Thanks to Nate Berkopec for supply patch to get
      test units passing.

      *Bryan Paxton*

  *   Avoid leaking the first relation we call `first` on, per model.

      Fixes #21921.

      *Matthew Draper*, *Jean Boussier*

  *   Allow deserialization of Active Record models that were YAML encoded prior
      to Rails 4.2

      *Sean Griffin*

  *   Correctly apply `unscope` when preloading through associations.

      *Jimmy Bourassa*

  *   Ensure `select` quotes aliased attributes, even when using `from`.

      Fixes #21488

      *Sean Griffin & @johanlunds*

  *   Correct query for PostgreSQL 8.2 compatibility.

      *Ben Murphy*, *Matthew Draper*

  *   Uniqueness validator raises descriptive error when running on a persisted
      record without primary key.

      Closes #21304.

      *Yves Senn*

-------------------------------------------------------------------
Tue Aug 25 04:31:14 UTC 2015 - coolo@suse.com

- updated to version 4.2.4
 see installed CHANGELOG.md

  ## Rails 4.2.4 (August 24, 2015) ##

  *   Skip statement cache on through association reader.

      If the through class has default scopes we should skip the statement
      cache.

      Closes #20745.

      *Rafael Mendonça França*

  *   Fixes #19420. When generating schema.rb using Postgres BigInt[] data type
      the limit: 8 was not coming through. This caused it to become Int[] data type
      after doing a rebuild off of schema.rb.

      *Jake Waller*

  *   Fix state being carried over from previous transaction.

      Considering the following example where `name` is a required attribute.
      Before we had `new_record?` returning `true` for a persisted record:

          author = Author.create! name: 'foo'
          author.name = nil
          author.save        # => false
          author.new_record? # => true

      Fixes #20824.

      *Roque Pinel*

  *   Correctly ignore `mark_for_destruction` when `autosave` isn't set to `true`
      when validating associations.

      Fixes #20882.

      *Sean Griffin*

  *   Fix through associations using scopes having the scope merged multiple
      times.

      Fixes #20721.
      Fixes #20727.

      *Sean Griffin*

  *   `ActiveRecord::Base.dump_schema_after_migration` applies migration tasks
      other than `db:migrate`. (eg. `db:rollback`, `db:migrate:dup`, ...)

      Fixes #20743.

      *Yves Senn*

  *   Correctly raise `ActiveRecord::AssociationTypeMismatch` when assigning
      a wrong type to a namespaced association.

      Fixes #20545.

      *Diego Carrion*

  *   Prevent error when using `force_reload: true` on an unassigned polymorphic
      belongs_to association.

      Fixes #20426.

      *James Dabbs*

-------------------------------------------------------------------
Fri Jun 26 04:31:24 UTC 2015 - coolo@suse.com

- updated to version 4.2.3
 see installed CHANGELOG.md

  ## Rails 4.2.3 (June 25, 2015) ##

  *   Let `WITH` queries (Common Table Expressions) be explainable.

      *Vladimir Kochnev*

  *   Fix n+1 query problem when eager loading nil associations (fixes #18312)

      *Sammy Larbi*

  *   Fixed an error which would occur in dirty checking when calling
      `update_attributes` from a getter.

      Fixes #20531.

      *Sean Griffin*

  *   Ensure symbols passed to `ActiveRecord::Relation#select` are always treated
      as columns.

      Fixes #20360.

      *Sean Griffin*

  *   Clear query cache when `ActiveRecord::Base#reload` is called.

      *Shane Hender*

  *   Pass `:extend` option for `has_and_belongs_to_many` associations to the
      underlying `has_many :through`.

      *Jaehyun Shin*

  *   Make `unscope` aware of "less than" and "greater than" conditions.

      *TAKAHASHI Kazuaki*

  *   Revert behavior of `db:schema:load` back to loading the full
      environment. This ensures that initializers are run.

      Fixes #19545.

      *Yves Senn*

  *   Fix missing index when using `timestamps` with the `index` option.

      The `index` option used with `timestamps` should be passed to both
      `column` definitions for `created_at` and `updated_at` rather than just
      the first.

      *Paul Mucur*

  *   Rename `:class` to `:anonymous_class` in association options.

      Fixes #19659.

      *Andrew White*

  *   Fixed a bug where uniqueness validations would error on out of range values,
      even if an validation should have prevented it from hitting the database.

      *Andrey Voronkov*

  *   Foreign key related methods in the migration DSL respect
      `ActiveRecord::Base.pluralize_table_names = false`.

      Fixes #19643.

      *Mehmet Emin İNAÇ*

  *   Reduce memory usage from loading types on pg.

      Fixes #19578.

      *Sean Griffin*

  *   Fix referencing wrong table aliases while joining tables of has many through
      association (only when calling calculation methods).

      Fixes #19276.

      *pinglamb*

  *   Don't attempt to update counter caches, when the column wasn't selected.

      Fixes #19437.

      *Sean Griffin*

  *   Correctly persist a serialized attribute that has been returned to
      its default value by an in-place modification.

      Fixes #19467.

      *Matthew Draper*

  *   Fix default `format` value in `ActiveRecord::Tasks::DatabaseTasks#schema_file`.

      *James Cox*

  *   Dont enroll records in the transaction if they dont have commit callbacks.
      That was causing a memory grow problem when creating a lot of records inside a transaction.

      Fixes #15549.

      *Will Bryant*, *Aaron Patterson*

  *   Correctly create through records when created on a has many through
      association when using `where`.

      Fixes #19073.

      *Sean Griffin*

-------------------------------------------------------------------
Wed Jun 17 04:32:38 UTC 2015 - coolo@suse.com

- updated to version 4.2.2
 see installed CHANGELOG.md

  ## Rails 4.2.2 (June 16, 2015) ##

  * No Changes *

-------------------------------------------------------------------
Mon Mar 23 11:15:05 UTC 2015 - coolo@suse.com

- updated to version 4.2.1
 *   Fixed ActiveRecord::Relation#becomes! and changed_attributes issues for type column
     Fixes #17139.
 *   `remove_reference` with `foreign_key: true` removes the foreign key before
     removing the column. This fixes a bug where it was not possible to remove
     the column on MySQL.
     Fixes #18664.
 *   Add a `:foreign_key` option to `references` and associated migration
     methods. The model and migration generators now use this option, rather than
     the `add_foreign_key` form.
 *   Fix rounding problem for PostgreSQL timestamp column.

     If timestamp column have the precision, it need to format according to
     the precision of timestamp column.
 *   Respect the database default charset for `schema_migrations` table.

     The charset of `version` column in `schema_migrations` table is depend
     on the database default charset and collation rather than the encoding
     of the connection.
 *   Respect custom primary keys for associations when calling `Relation#where`
     Fixes #18813.
 *   Fixed several edge cases which could result in a counter cache updating
     twice or not updating at all for `has_many` and `has_many :through`.
     Fixes #10865.
 *   Foreign keys added by migrations were given random, generated names. This
     meant a different `structure.sql` would be generated every time a developer
     ran migrations on their machine.

     The generated part of foreign key names is now a hash of the table name and
     column name, which is consistent every time you run the migration.
 *   Fixed ActiveRecord::Relation#group method when argument is SQL reserved key word:

       SplitTest.group(:key).count
       Property.group(:value).count

-------------------------------------------------------------------
Mon Jan 19 21:15:26 UTC 2015 - dmueller@suse.com

- update to 4.1.9:
  * `db:schema:load` and `db:structure:load` no longer purge the database
  before loading the schema. This is left for the user to do.
  `db:test:prepare` will still purge the database.
  * Bring back `db:test:prepare` to synchronize the test database schema.
  * Renaming a table in pg also renames the primary key index.
  * Make it possible to access fixtures excluded by a `default_scope`.
  * `timestamps` and `add_timestamps` passes additional options along.
  (like `null: false`)
  * Cache `CollectionAssociation#reader` proxies separately before and after
    the owner has been saved so that the proxy is not cached without the
    owner's id.
  * Fix preloading of associations which unscope a default scope.
  * Do not use `RENAME INDEX` syntax for MariaDB 10.0.
  * Allow included modules to override association methods.
  * Schema loading rake tasks (like `db:schema:load` and `db:setup`) maintain
    the database connection to the current environment.
  * `db:purge` with MySQL respects `Rails.env`.
  * Fixed automatic maintaining test schema to properly handle sql structure
    schema format.
  * Fix has_many :through relation merging failing when dynamic conditions are
    passed as a lambda with an arity of one.

-------------------------------------------------------------------
Mon Nov 10 14:00:03 UTC 2014 - tboerger@suse.com

- To get rails 4 running on SLE 11 i have switched the
  rb_build_versions definition to rub21 as it is activated within
  devel:languages:ruby. That way we can get running rails 4 on
  SLE 11 too.

-------------------------------------------------------------------
Sun Oct 12 17:02:33 UTC 2014 - coolo@suse.com

- updated to version 4.1.6, see CHANGELOG.md

-------------------------------------------------------------------
Wed Jul 23 13:30:41 UTC 2014 - mrueckert@suse.de

- - initial package

