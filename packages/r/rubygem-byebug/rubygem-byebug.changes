-------------------------------------------------------------------
Mon Jan 27 12:39:40 UTC 2020 - Manuel Schnitzer <mschnitzer@suse.com>

- updated to version 11.1.1

### Fixed

* [#635](https://github.com/deivid-rodriguez/byebug/pull/635): usage
  on Fedora 31 or any other `byebug` installation performed by a
  `rubygems` copy customized by setting `Gem.install_extension_in_lib` to false.

-------------------------------------------------------------------
Mon Mar 18 12:02:58 UTC 2019 - manuel <mschnitzer@suse.com>

- updated to version 11.0.1

  # Fixed

    * 546: continue! to ignore further byebug calls.
    * 545: skip autolisting code for intermediate skipped breakpoints.

-------------------------------------------------------------------
Sat Mar  2 15:07:38 UTC 2019 - Stephan Kulow <coolo@suse.com>

- updated to version 11.0.0
 see installed CHANGELOG.md

-------------------------------------------------------------------
Sat Mar 31 04:28:29 UTC 2018 - factory-auto@kulow.org

- updated to version 10.0.2
 see installed CHANGELOG.md

  ## 10.0.2 - 2018-03-30
  
  * Error when using byebug with `debase` gem (#447, @tzmfreedom)

-------------------------------------------------------------------
Thu Mar 22 05:28:33 UTC 2018 - factory-auto@kulow.org

- updated to version 10.0.1
 see installed CHANGELOG.md

  ## 10.0.1 - 2018-03-21
  
  ### Fixed
  
  * Error when using byebug with `debase` gem (#443, @tzmfreedom)

-------------------------------------------------------------------
Thu Feb  8 05:55:45 UTC 2018 - coolo@suse.com

- updated to version 10.0.0
 see installed CHANGELOG.md

-------------------------------------------------------------------
Mon Sep  4 10:12:51 UTC 2017 - mrueckert@suse.de

- only build on 2.2 and newer

-------------------------------------------------------------------
Sun Sep  3 08:57:33 UTC 2017 - coolo@suse.com

- updated to version 9.1.0
 see installed CHANGELOG.md

  ## 9.1.0 - 2016-08-22
  
  ### Added
  
  * Better UI messages for breakpoint management.
  
  ### Fixed
  
  * `where` command failing on instance_exec block stack frames.
  * `restart` command crashing in certain cases because of a missing `require 'English'` (#321, @akaneko3).
  * `restart` command crashing when debugged script is not executable or has no shebang (#321, @akaneko3).
  
  ### Removed
  
  * Ruby 2.0 and Ruby 2.1 official & unofficial support. Byebug no longer installs
    on these platforms.

-------------------------------------------------------------------
Sat Oct  1 04:33:09 UTC 2016 - coolo@suse.com

- updated to version 9.0.6
 see installed CHANGELOG.md

  ## 9.0.6 - 2016-09-29
  
  ### Fixed
  
  * Error when using `byebug` with a ruby compiled against libedit (#241).
  * Allow `Byebug.start_server` to yield the block passed to it when the actual
    port is already known (#277, thanks @cben).
  * Use a standard license name so it can be more reliably used by tools (#275).

-------------------------------------------------------------------
Sun May 29 04:28:32 UTC 2016 - coolo@suse.com

- updated to version 9.0.5
 see installed CHANGELOG.md

-------------------------------------------------------------------
Sat May 21 04:29:39 UTC 2016 - coolo@suse.com

- updated to version 9.0.4
 see installed CHANGELOG.md

  ## 9.0.4 - 2015-05-19
  
  ### Fixed
  
  * Errors in rc file not being displayed to the user.

-------------------------------------------------------------------
Thu May 19 11:11:13 UTC 2016 - lslezak@suse.cz

- updated to version 9.0.3
 see installed CHANGELOG.md:

  ## 9.0.3 - 2016-05-16
  ### Fixed
  * Unfriendly output in byebug's executable when no script specified (#256).
  * Unfriendly output in byebug's executable when script doesn't exist.
  * Unfriendly output in byebug's executable when script has invalid code.
  ## 9.0.2 - 2016-05-15
  ### Fixed
  * Skip to get a line in eval context (#263, thanks @k0kubun).
  * Debugger getting disabled after `continue` even when linetrace is enabled
    (#264, thanks @k0kubun).
  ## 9.0.1 - 2016-05-14
  ### Fixed
  * `quit` never exiting when remote debugging (#201).
  ## 9.0.0 - 2016-05-11
  ### Fixed
  * `irb` command unintentionally changing $PROGRAM_NAME.
  * `pry` command failing.
  * Unrelated error message when using `pry` command and Pry not installed.
  * Interrupting program execution from remote control interface (#239, thanks
    @izaera).
  ### Removed
  * Official Ruby 2.0.0 support. `var local` no longer works in Ruby 2.0. The
    rest of the commands should still work as before, but `byebug` is no longer
    tested against this version so they might start breaking in the
    future.
  ## 8.2.5 - 2016-04-27
  ### Fixed
  * Allows paths with spaces (#244, thanks @HookyQR).
  * Allows paths with colons (#244, thanks @HookyQR).

-------------------------------------------------------------------
Tue Apr 12 04:28:20 UTC 2016 - coolo@suse.com

- updated to version 8.2.4
 see installed CHANGELOG.md

  ## 8.2.4 - 2016-04-08
  
  ### Fixed
  
  * Reverts #211 which leads to an unusable debugger.

-------------------------------------------------------------------
Fri Apr  8 04:28:21 UTC 2016 - coolo@suse.com

- updated to version 8.2.3
 see installed CHANGELOG.md

-------------------------------------------------------------------
Tue Feb  2 05:29:25 UTC 2016 - coolo@suse.com

- updated to version 8.2.2
 see installed CHANGELOG.md

  # CHANGELOG

-------------------------------------------------------------------
Fri Nov 27 05:29:15 UTC 2015 - coolo@suse.com

- updated to version 8.2.1
 see installed CHANGELOG.md

  ## 8.2.1 - 2015-11-26
  ### Fixed
  * Bug in evaluations using "eval.

-------------------------------------------------------------------
Mon Nov 23 05:28:32 UTC 2015 - coolo@suse.com

- updated to version 8.2.0
 see installed CHANGELOG.md

  ## Master (Unreleased)
  
  ## 8.2.0 - 2015-11-12
  ### Fixed
  * [#184](https://github.com/deivid-rodriguez/byebug/issues/184) &
  [#188](https://github.com/deivid-rodriguez/byebug/issues/188), both due
  to the way of running evaluations in a separate thread.
  
  ### Added
  * `debug` command to evaluate things in a separate thread, since this behavior
  was removed from default `eval` to fix the above issues.
  
  ## 8.1.0 - 2015-11-09
  ### Fixed
  * Command history should be specific per project.
  * Better error message in certain edge cases when printing the backtrace.
  * Bug in evaluator which would show information about having stopped at a
  breakpoint in some cases.
  
  ### Added
  * Ability to autolist source code after `frame` command.
  * Ability to stop at lines where methods return.
  
  ## 8.0.1 - 2015-11-07
  ### Fixed
  * Error stream wouldn't be properly reset when using standalone `byebug`.
  * Confusing error message for invalid breakpoint locations.
  
  ## 8.0.0 - 2015-11-05
  ### Fixed
  * [#183](https://github.com/deivid-rodriguez/byebug/issues/183). Compilation
  in Ruby 2.0. Regression introduced in 7.0.0
  * "Return value is: nil" would be displayed when stopping right before the end
  of a class definition. We want to avoid showing anything instead.
  
  ## Changed
  * Plugins now need to implement an `at_end` method (separate from `at_return`)
  in their custom processors.

-------------------------------------------------------------------
Thu Nov  5 05:28:49 UTC 2015 - coolo@suse.com

- updated to version 7.0.0
 see installed CHANGELOG.md

  ## 7.0.0 - 2015-11-04
  ### Fixed
  * [#177](https://github.com/deivid-rodriguez/byebug/issues/177). Some issues
  with formatting results of evaluations.
  * [#144](https://github.com/deivid-rodriguez/byebug/issues/144). Ruby process
  after using byebug does no longer get slow.
  * [#121](https://github.com/deivid-rodriguez/byebug/issues/121). `byebug`
  commands inside code evaluated from debugger's prompt are now properly working.
  * Another evaluation bug in autocommands.
  * `finish 0` command would sometimes fail to stop right before exiting the
  current frame.
  * Runner's `--[no-]stop` option now works (thanks @windwiny).
  * Change variable name `bool`, avoid conflict clang's predefined macro
  
  ### Removed
  * `ps` command.
  
  ### Changed
  * [#166](https://github.com/deivid-rodriguez/byebug/issues/166). Don't load
  the entire library on require, but only when a `byebug` call is issued. Thanks
  @bquorning.
  * The above fix to the `finish 0` command cause `byebug`'s entrypoint to
  require 3 steps out instead of 2. In general, plugins using
  `Byebug::Context.step_out` will need to be changed to consider "c return events"
  as well.
  
  ### Added
  * `autopry` setting that calls `pry` on every stop.
  * Return value information to debugger's output when `finish 0` is used.

-------------------------------------------------------------------
Mon Aug 24 04:28:30 UTC 2015 - coolo@suse.com

- updated to version 6.0.2
 see installed CHANGELOG.md

  ## 6.0.2 - 2015-08-20
  ### Fixed
  * The user should always be given back a prompt unless (s)he explicitly states
  the opposite. This provides a more general fix to the bug resolved in 6.0.1.
  
  ## 6.0.1 - 2015-08-19
  ### Fixed
  * Bug in evaluation where the user would lose the command prompt when entering
  an expression with a syntax error.

-------------------------------------------------------------------
Tue Aug 18 04:29:56 UTC 2015 - coolo@suse.com

- updated to version 6.0.0
 see installed CHANGELOG.md

-------------------------------------------------------------------
Thu Jul 23 09:16:04 UTC 2015 - mmeister@suse.com

- make it possible to use this gem on SLE 11 too.

-------------------------------------------------------------------
Wed Jun 17 16:25:48 UTC 2015 - cdenicolo@suse.com

- license update: BSD-2-Clause (fate#318281)
  correct license is  BSD-2-Clause.

-------------------------------------------------------------------
Tue May 19 04:28:31 UTC 2015 - coolo@suse.com

- updated to version 5.0.0
 see installed CHANGELOG.md

  ## 5.0.0
  ### Fixed
  * [#136](https://github.com/deivid-rodriguez/byebug/issues/136). `frame`
  command not working with negative numbers (thanks @ark6).
  
  ### Added
  * IDE support and a new command/subcommand API for plugins.
  * Add a "savefile" setting holding the file where "save" command saves current
  debugger's state.
  
  ### Changed
  * `disable` no longer disable all breakpoints, it just shows command's help
  instead. To disable all breakpoints now you need to do `disable breakpoints`
  (or `dis b`). Similarly, you can't no longer use `dis 1 2 3` but need to do
  `dis b 1 2 3` to disable specific breakpoints. The same applies to the `enable`
  command.
  
  ### Removed
  * `help set <setting>` no longer works. `help set` includes that same output and
  it's not verbose enough so that this is a problem. Same with `help show
  <setting>`.

-------------------------------------------------------------------
Wed Apr  8 09:25:07 UTC 2015 - coolo@suse.com

- updated to version 4.0.5
 ### Fixed
 * #131
 * Thread commands help format should be consistent with the rest of the help
 system now.
 
 ## 4.0.4 - 2015-03-27
 ### Fixed
 * #127

-------------------------------------------------------------------
Fri Mar 20 05:33:10 UTC 2015 - coolo@suse.com

- updated to version 4.0.3
 ### Fixed
 * Unused variable warning in context.c

-------------------------------------------------------------------
Wed Mar 18 15:39:52 UTC 2015 - coolo@suse.com

- updated to version 4.0.2
 ### Fixed
 * Removed `rb-readline` as a dependency and show a help message whenever
 requiring readline fails instead (#118)
 
 ## 4.0.1 - 2014-03-13
 ### Fixed
 * .yml files needed for printers support were missing from the release... :S
 * Add `rb-readline` as a dependency (#118)
 
 ## 4.0.0 - 2014-03-13
 ### Added
 - `untracevar` command that stops tracing a global variable.
 - Window CI build through AppVeyor.
 - OSX CI build through Travis.
 - Style enforcement through RuboCop.
 - C style enforment using the `indent` command line utility.
 - Some remote debugging tests (thanks @eric-hu).
 - Printer's support (thanks @astashov).
 
 ### Changed
 - A lot of internal refactoring.
 - `tracevar` now requires the full global variable name (with "$").
 - `catch` command is not allowed in post_mortem mode anymore. It was not
 working anyways (#92).
 - `step` is now more user friendly when used in combination with `up` (see #85).
 - `var const` can now be called without an argument and will show constants in
 the current scope.
 - `break` with a class name now creates breakpoints regardless of class not
 being yet defined. If that's the case, it gives a warning but the class is
 created anyways.
 
 ### Fixed
 - Code reloading issues.
 - `set fullpath` was not showing fullpaths. Now it is.
 - `up`, `down` and `frame` commands now work in post_mortem mode (#93).
 - Fixes in rc file (.byebugrc): invalid commands are just ignored instead of
 aborting, global (home) rc file is now properly loaded before project's file.
 - Backtraces not working in `post_mortem` mode (#93).
 - 'cmd1 ; cmd2 ; ...; cmdN' syntax which allows running several commands
 sequentially.
 - Finish command not stopping at the correct line (#101).
 - `break` with namespaced class, like `break A::B#c` should now work (#106).
 - Command history is now persisted before exiting byebug.
 - Setting breakpoint in a method would stop not only at the beginning of the
 method but also at the beginning of every block inside the method.
 - Setting breakpoints on module methods (#122, @x-yuri).
 
 ### Removed
 - `autoreload` setting as it's not necessary anymore. Code should always be up
 to date.
 - `reload` command for the same reason.
 - Gem dependency on `debugger-linecache`.
 - `step+`, `step-`, `next+`, `next-`, `set/show linetrace_plus` and
 `set/show forcestep` commands. These were all mechanisms to deal with TracePoint
 API event dupplication, but this duplicated events have been completely removed
 from the API since
 [r48609](bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/48609), so
 they are no longer necessary.
 - `info file` subcommands: `info file breakpoints`, `info file mtime`, `info
 file sha1`, `info file all`. Now all information is listed under `info file`.
 - `testing` setting. It was just a hack to be able to test `byebug`. Nobody was
 supposed to actually use it!
 - `var class` command, just use Ruby (`self.class.class_variables`).
 - `p` command, just use `eval`, or just type your expression and `byebug` will
 autoevaluate it.
 - `exit` alias for `quit`.

-------------------------------------------------------------------
Wed Dec 17 10:11:03 UTC 2014 - tboerger@suse.com

- Added rpmlintrc for devel files filter
- Updated to 3.5.1
  - 3.5.1
    - Windows installation (#79).
    - condition command not properly detecting invalid breakpoint ids.
  - 3.5.0
    - Byebug's history messing other programs using Readline (#81).
    - Readline's history not being properly saved and inmediately available.
    - User not being notified when trying to debug a non existent script.
    - Complete rewrite of byebug's history.
    - Complete rewrite of list command.
    - Docs about stacktrace related commands (up, down, frame, backtrace).
  - 3.4.2
    - Debugging commands invoked by ruby exectuable (#67), as in byebug --
      ruby -Itest test/controllers/posts_controller_test.rb -n test_should_get_index.
  - 3.4.1
    - Use of threads inside eval command (#54).
    - list command not listing backwards after reaching the end of the file.
  - 3.4.0
    - deivid-rodriguez/pry-byebug#32 in a better way.
  - 3.3.0
    - set verbose command.
    - set post_mortem false command.
    - Debugger stopping in byebug's internal frames in some cases.
    - backtrace crashing when fullpath setting disabled and calculated
      stack size being smaller than the real one.
    - The -t option for bin/byebug now turns tracing on whereas the -x
      option tells byebug to run the initialization file (.byebugrc) on
      startup. This is the default behaviour though.
    - bin/byebug libified and tests added.
    - Removed info locals command. Use var local instead.
    - Removed info instance_variables command. Use var instance instead.
    - Removed info global_variables command. Use var global instead.
    - Removed info variables command. Use var all instead.
    - Removed irb command stepping capabilities, see 8e226d0.
    - Removed script and restart-script options for bin/byebug.
  - 3.2.0
    - Remote debugging (#71), thanks @shuky19.
    - source command (#68), thanks @Olgagr.
    - ruby-head support (#71).
    - Removed post_mortem activation through Byebug.post_mortem. Use set post_mortem instead.
    - Removed info stack command. Use where instead.
    - Removed method iv command. Use var instance instead.
    - Removed Warning reported in #77.
  - 3.1.2
    - (Really) post_mortem mode in bin/byebug.
    - Line tracing in bin/byebug.
  - 3.1.1
    - post_mortem mode in bin/byebug.
  - 3.1.0
    - Removed show commands command. Use history instead.
    - Removed Byebug.start accepting options. Any program settings you want applied from the start should be set in .byebugrc.
    - Removed trace command. Use set linetrace for line tracing and tracevar for global variable tracing.
    - Removed show version command. Use byebug --version to check byebug's version.
    - Removed set arg setting. Use the restart command instead.
    - linetrace_plus setting renamed to tracing_plus.
    - history command to check byebug's history of previous commands.
  - 3.0.0
    - Plain byebug not working when pry-byebug installed.
    - post_mortem mode.
    - Command history not being saved after regular program termination.
    - (Again) Calling Byebug.start with Timeout.timeout (#54), thanks @zmoazeni!
    - Allow disabling post_mortem mode.
    - show commands command for listing history of previous commands now behaves like shell's history command.
    - show/set history filename is now show/set histfile
    - show/set history size is now show/set histsize
    - show/set history save is now show/set autosave
    - finish semantic, see 61f9b4d.
    - Use per project history file by default.
    - Removed The init option for Byebug.start. Information to make the restart command work is always saved now.

-------------------------------------------------------------------
Mon Oct 13 05:45:36 UTC 2014 - coolo@suse.com

- adapt to new rubygem packaging

-------------------------------------------------------------------
Mon Mar 24 18:47:24 UTC 2014 - kkaempf@suse.com

- Fix openSUSE 13.1 build

-------------------------------------------------------------------
Wed Mar 19 14:34:24 UTC 2014 - tboerger@novell.com

- Intial package 2.7.0

