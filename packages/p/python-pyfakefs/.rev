<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>2998bc7d2766bc62453f81ce068ff977</srcmd5>
    <version>3.4.1</version>
    <time>1524742616</time>
    <user>dimstar_suse</user>
    <comment>requires as dependency for python-fido2</comment>
    <requestid>599186</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>8cc6747cffacfacf76bb360889c7d78d</srcmd5>
    <version>3.4.3</version>
    <time>1529402472</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>616798</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>52f470f1ffc97e607571834ea6333992</srcmd5>
    <version>3.5.3</version>
    <time>1543224525</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>651220</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>2cd7f731c02b2be765f7d4e58a42da45</srcmd5>
    <version>3.5.4</version>
    <time>1545376951</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>660280</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>92f0dea57d669261e1d7330026fcecb2</srcmd5>
    <version>3.5.5</version>
    <time>1545648437</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>660559</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>2bd47c5fca1ba040da3e21720d2b0b97</srcmd5>
    <version>3.5.6</version>
    <time>1548335407</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>665654</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>9dac6992de7ef1e3e2556ca6ebe1ea5e</srcmd5>
    <version>3.5.7</version>
    <time>1551113469</time>
    <user>coolo</user>
    <comment></comment>
    <requestid>674178</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>bcbb5967c025e52b0e77f748f4b8d271</srcmd5>
    <version>3.5.8</version>
    <time>1553436029</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.5.8:
  * Mainly fixes a regression bug under Python 2.7.</comment>
    <requestid>687703</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>0a4f53e6a95409a0793cfb9f04be9966</srcmd5>
    <version>3.6.1</version>
    <time>1570557513</time>
    <user>dimstar_suse</user>
    <comment>- Update 3.6.1:
  * fix borked tests from 3.6

- Update to 3.6:
  * fixed incorrect argument names for some os functions
  * fake DirEntry now implements os.PathLike in Python &gt;= 3.6 (see #483)
  * fixed incorrect argument name for os.makedirs (see #481)
  * avoid pytest warning under Python 2.7 (see #466)
  * add next to FakeFileWrapper (see #485)</comment>
    <requestid>735927</requestid>
  </revision>
  <revision rev="10" vrev="2">
    <srcmd5>1776897dd7827d400ad5e4d248b92179</srcmd5>
    <version>3.6.1</version>
    <time>1576062895</time>
    <user>dimstar_suse</user>
    <comment>- Pull in the full python</comment>
    <requestid>755753</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>d8daefef0a98487496d3b207478f1132</srcmd5>
    <version>3.7.2</version>
    <time>1583702578</time>
    <user>dimstar_suse</user>
    <comment>- Swith to multibuild in order to avoid full python buildcycle

- Update to 3.7.2:
  * Various fixes for python 3.8</comment>
    <requestid>782610</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>253ae478aebd51d0ced1e5f54bdd3ddd</srcmd5>
    <version>4.0.2</version>
    <time>1587325232</time>
    <user>dimstar_suse</user>
    <comment>Staging:I py3 only pkg</comment>
    <requestid>784798</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>0508c51bd6e347e4ed15e87da62b8878</srcmd5>
    <version>4.5.3</version>
    <time>1639685921</time>
    <user>dimstar_suse</user>
    <comment>- Update to 4.5.3:
  * New Features
    + added support for some Python 3.10 features:
    + new method pathlib.Path.hardlink_to
    + new newline argument in pathlib.Path.write_text
    + new follow_symlinks argument in pathlib.Path.stat and pathlib.Path.chmod
    + new 'strict' argument in os.path.realpath
    + added support for pathlib.Path.link_to (new in Python 3.8) (see #580)
    + added support for pathlib.Path.readlink (new in Python 3.9) (see #584)
    + added FakeFilesystem.create_link convenience method which creates intermittent directories (see #580)
  * Changes
    + Python 3.5 has reached its end of life in September 2020 and is no longer supported
    + pathlib2 is still supported, but considered to have the same functionality as pathlib and is no longer tested separately; the previous behavior broke newer pathlib features if pathlib2 was installed (see #592)
    + Added caching of patched modules to avoid lookup overhead
    + Added use_cache option and clear_cache method to be able to deal with unwanted side effects of the newly introduced caching
    + The patchfs decorator now expects a positional argument instead of the keyword arguments fs. This avoids confusion with the pytest fs fixture and conforms to the behavior of mock.patch. You may have to adapt the argument order if you use the patchfs and mock.patch decorators together (see #566)
    + Default arguments that are file system functions are now not patched by default to avoid a large performance impact. An additional parameter patch_default_args has been added that switches this behavior on (see #567).
  * Fixes
    + added handling of path-like where missing
    + improved handling of str/bytes paths
    + suppress all warnings while inspecting loaded modules (see #614)
    + do not import pandas and related modules if it is not patched (see #627)
    + handle pathlib.Path.owner() and pathlib.Path.group by returning the current user/group name (see #629)
    + fixed handling of use_known_patches=False (could cause an exception)
    + correctly handle byte paths in os.path.exists (see #595)
    + Update fake_pathlib to support changes coming in Python 3.10 (see
    + correctly handle UNC paths in os.path.split and in directory path evaluation (see #606)
    + fixed handling of pipe descriptors in the fake filesystem (see #581)
    + added non-functional argument effective_ids to os.access (see #585)
    + correctly handle os.file for unreadable files (see #588)</comment>
    <requestid>940364</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>0027c765e8f2450947080c12ae200613</srcmd5>
    <version>4.6.3</version>
    <time>1660144344</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>993545</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>6b4471e8229308aa6ee87e9a97a69ff8</srcmd5>
    <version>4.7.0</version>
    <time>1665754816</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1010379</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>09a7a4a0021a131c559899ac4d671b58</srcmd5>
    <version>5.0.0</version>
    <time>1667315434</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1032496</requestid>
  </revision>
  <revision rev="17" vrev="2">
    <srcmd5>b27d4ebd97ce1fe9a3eab72af34d92be</srcmd5>
    <version>5.0.0</version>
    <time>1682193476</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1081658</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>f7afbc9b3c588f837cf7eb18b7e30293</srcmd5>
    <version>5.2.2</version>
    <time>1683801096</time>
    <user>dimstar_suse</user>
    <comment>- update to 5.2.2:
  * Made the user and group IDs accessible via dedicated
    ``get_uid`` and ``get_gid`` functions
    (for symmetry to ``set_uid`` / ``set_gid``)
  * The test fixture is now included in the source distribution
    and installed with the package.
  * Some public constants in `fake_filesystem` that had been
    moved to `helpers` are made accessible from there again
  * Add missing fake implementations for `os.getuid` and
    `os.getgid` (Posix only)
  * Make sure a `/tmp` path exists under linux (`TMPDIR` may
    point elsewhere)
  * Support for latest Python 3.12 version.
  * Properties defining the capabilities of some `os` functions
    like `os.supports_follow_symlinks` are now properly faked to
    contain the fake functions if the real functions are faked
  * Supports current Python 3.12 version (alpha 6). We plan to
    make patch releases in case of breaking changes in alpha
    or beta versions.
  * Fake module classes previously defined in `fake_filesystem`
    have now moved to their own modules: `fake_os.FakeOsModule`,
    `fake_path.FakePathModule`, `fake_io.FakeIoModule` and 
    `fake_open.FakeFileOpen`.
  * Patching of parsers for pandas &gt;= 1.2 is removed since pandas
    now uses Python fs functions internally even when the engine
    selected is &quot;c&quot;.
  * added possibility to set a path inaccessible under Windows by
    using `chown()` with the `force_unix_mode` flag (see #720)
  * added class level setup method `setUpClassPyfakefs` for
    unittest and class-scoped</comment>
    <requestid>1085988</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>5314340b22b35f482fdf50ddda7afdb2</srcmd5>
    <version>5.2.4</version>
    <time>1694200506</time>
    <user>anag+factory</user>
    <comment>- update to 5.2.4:
  * Fixes a rare problem on pytest shutdown.
  * Adds compatibility with PyPy 3.10 and Python 3.12.

    `fake_path.FakePathModule`, `fake_io.FakeIoModule` and
- Update to version 5.0.0
- Update to version 4.7.0
- Update to version 3.5.2
  - Added support for path-like objects as arguments in create_file(),
    - readline() did not work correctly in binary mode
    - several functions did not behave correctly for paths ending with a
- Initial packaging of version 3.4.1</comment>
    <requestid>1109529</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>c71521e6454d9ed7e19305aa59e1f611</srcmd5>
    <version>5.3.4</version>
    <time>1706563557</time>
    <user>anag+factory</user>
    <comment>- update to 5.3.4:
  * fixes handling of unhashable modules which cannot be cached
    (see #923)
  * reload modules loaded by the dynamic patcher instead of
    removing them - sometimes they may
  * not be reloaded automatically (see #932)
  * add back argument `use_dynamic_patch` as a fallback for
    similar problems
  * fixed a problem with patching `_io` under Python 3.12 (see
    #910)
  * fixed a problem with accessing the temp path if emulating
    Linux under Windows
  * (see #912)
  * fixed result of `os.walk` with a path-like top directory
  * (see #915)
  * properly fixed the problem that filesystem patching was still
    active in the pytest
  * logreport phase (see #904), the previous fix was incomplete
  * changed behavior of `add_real_directory` to be able to map a
    real directory
  * Restores compatibility with PyTorch 2.0 and above, as well as
    with other classes that have custom __setattr__ methods
    (see #905).
  * Adds official support for Python 3.12.
  * removed a leftover debug print statement (see #869)
  * make sure tests work without HOME environment set (see #870)
  * automount drive or UNC path under Windows if needed for
    `pathlib.Path.mkdir()`
  * (see #890)
  * adapt patching `io.open` and `io.open_code` to work with</comment>
    <requestid>1141813</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>35a2de18744042e736cee29e76ee8c74</srcmd5>
    <version>5.3.5</version>
    <time>1707233547</time>
    <user>anag+factory</user>
    <comment>- update to 5.3.5:
  * Fixes a regression due to the changed behavior of the dynamic
    patcher cleanup (see #939).
  * The change is now by default only made if the `django` module
    is loaded, and the behavior can
  * be changed using the new argument `module_cleanup_mode`.</comment>
    <requestid>1143996</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>25849d0cdaea0374e737ed2a3f99ca45</srcmd5>
    <version>5.4.1</version>
    <time>1713891301</time>
    <user>anag+factory</user>
    <comment>- update to 5.4.1:
  * fixed a regression from version 5.4.0 that incorrectly
    handled files opened twice via file descriptor
- update to 5.4.0
  * Improves permission handling.
  * added support for `O_NOFOLLOW` and `O_DIRECTORY` flags in
    `os.open`
  * added support for fake `os.dup`, `os.dup2` and `os.lseek`
  * fixed a specific problem on reloading a pandas-related module
  * added possibility for unload hooks for specific modules
    use this also to reload django views (see #932)
  * fixed `EncodingWarning` for Python &gt;= 3.11 (see #957)
    consider directory ownership while adding or removing
    directory entries
  * fixed handling of directory enumeration and search
    permissions under Posix systems
  * fixed creation of the temp directory in the fake file system
    after a filesystem reset
  * fixed handling of `dirfd` in `os.symlink` (see #968)
  * add missing `follow_symlink` argument to `os.link` (see #973)
  * fixed handling of missing attribute in `os.getxattr` (see
  * fixed permission problem with `shutil.rmtree` if emulating
    Windows under POSIX
  * fixed handling of errors on opening files via file descriptor
  * fixed handling of `umask` - it is now applied by default
  * fixed behavior of `os.makedirs` (see #987)</comment>
    <requestid>1169537</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>2f854a60abcbbec21b149a446f418cef</srcmd5>
    <version>5.6.0</version>
    <time>1722179939</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1189791</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>aa37697909654c96940378216d630ab1</srcmd5>
    <version>5.8.0</version>
    <time>1746032544</time>
    <user>dimstar_suse</user>
    <comment>- update to 5.8.0:
  * Adds preliminary support for Python 3.14.
  * added some preliminary support for Python 3.14
  * change behavior of `FakeFilesystem.get_object()` to ignore
    permissions as it has been
  * before version 5.4.0 (see #1122)
  * fixed a problem with flushing if writing over the buffer end
  * (see #1120)
  * fixed a regression that could break tests under Posix in
    Python 3.12
  * (see #1126)
  * fixed behavior for `os.access` for symlinks under Windows
  * fixed permission problem on querying file properties (see
    #1122)
  * fixed patching in pytest setup phase for module and session-
    scoped fs fixtures
  * fixed a problem with module and session scoped fixtures in
    Python 3.13
  * fixed handling of `cwd` if set to a `pathlib.Path` (see
    #1108)
  * fixed documentation for cleanup handlers, added convenience
    handler `reload_cleanup_handler`
  * Fixes some problems with patching.
  * added some support for loading fake modules in `AUTO` patch
    mode using `importlib.import_module` (see #1079)
  * added some support to avoid patching debugger related modules
  * avoid reloading `tempfile` in Posix systems
  * Adds official Python 3.13 support, improves OS emulation
    behavior.
  * avoid reloading `glob` in Python 3.13</comment>
    <requestid>1273204</requestid>
  </revision>
  <revision rev="25" vrev="2">
    <srcmd5>dfe73b4022fc4145685b551771733921</srcmd5>
    <version>5.8.0</version>
    <time>1749651545</time>
    <user>anag_factory</user>
    <comment>- Switch to pyproject macros.</comment>
    <requestid>1284634</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>b452a30e1dd8004dcc0c86aae2b5d2eb</srcmd5>
    <version>5.9.1</version>
    <time>1751281421</time>
    <user>anag_factory</user>
    <comment></comment>
    <requestid>1288857</requestid>
  </revision>
</revisionlist>
