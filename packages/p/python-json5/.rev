<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>e829054769e76e8d1a00ba36cf37bdde</srcmd5>
    <version>0.8.5</version>
    <time>1564414268</time>
    <user>dimstar_suse</user>
    <comment>A Python implementation of the JSON5 data format

Required by the latest version of jupyter-jupyterlab-server</comment>
    <requestid>719461</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>0d499d3d094ce96064d996f266364482</srcmd5>
    <version>0.9.4</version>
    <time>1587071138</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>794585</requestid>
  </revision>
  <revision rev="3" vrev="2">
    <srcmd5>3ab9dd8f7f1313d2d0cf1403e9a47b80</srcmd5>
    <version>0.9.4</version>
    <time>1590508136</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>808779</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>347b410cf5385e38f602bea0afbf3a65</srcmd5>
    <version>0.9.6</version>
    <time>1624462690</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>901357</requestid>
  </revision>
  <revision rev="5" vrev="2">
    <srcmd5>3719b35ef3be8b5758caccfa36211769</srcmd5>
    <version>0.9.6</version>
    <time>1635272014</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>923471</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>1b63c61c6728a94c0db5a8bce7546902</srcmd5>
    <version>0.9.8</version>
    <time>1653907447</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.9.8:
  * Fixed error reporting in some cases due to how parsing was handling
    nested rules in the grammar - previously the reported location for
    the error could be far away from the point where it actually happened.
  * Fixed behavior of `default` fn in `dump` and `dumps`. Previously
    we didn't require the function to return a string, and so we could
    end up returning something that wasn't actually valid. This change
    now matches the behavior in the `json` module.</comment>
    <requestid>979749</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>892a8ca5854613cef1b81d0aa85af8fb</srcmd5>
    <version>0.9.10</version>
    <time>1664112929</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.9.10:
  * Updated the //README.md to be clear that parsing arbitrary JS
    code may not work.
  * Fixed serialization for objects that subclass `int` or `float`:
    Previously we would use the objects __str__ implementation, but
    that might result in an illegal JSON5 value if the object had
    customized __str__ to return something illegal. Instead,
    we follow the lead of the `JSON` module and call `int.__repr__`
    or `float.__repr__` directly.
  * While I was at it, I added tests for dumps(-inf) and dumps(nan)
    when those were supposed to be disallowed by `allow_nan=False`.</comment>
    <requestid>1005760</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>5b309aa1cede46476c23f74611b51db2</srcmd5>
    <version>0.9.12</version>
    <time>1672927239</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.9.12:
  * fix dump error on python 2
  * fix GitHub actions</comment>
    <requestid>1055991</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>321a1b0cb13566f62ed54cdbd749e96b</srcmd5>
    <version>0.9.13</version>
    <time>1679933773</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.9.13:
  * Remove a field from one of the JSON benchmark files to
    reduce confusion in Chromium.
  * No code changes.</comment>
    <requestid>1074504</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>90617aa3e21f64cf4d758cd692e5a77c</srcmd5>
    <version>0.9.14</version>
    <time>1701121498</time>
    <user>anag+factory</user>
    <comment>- update to 0.9.14:
  * Handle `+Infinity` as well as `-Infinity` and `Infinity`.

  * No code changes.
  * fix GitHub actions</comment>
    <requestid>1129222</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>222dbf18d9eee99983669072496e38e7</srcmd5>
    <version>0.9.24</version>
    <time>1711477581</time>
    <user>anag+factory</user>
    <comment>- update to 0.9.24:
  * drop python2
  * switch to pyproject.toml
  * add typing
  * format with ruff</comment>
    <requestid>1161553</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>cdebb7461d001cf25ea2a5d8d9da4bc2</srcmd5>
    <version>0.9.25</version>
    <time>1713205076</time>
    <user>anag+factory</user>
    <comment>- update to 0.9.25:
  * Explicitly specify the directory to use for the package in
    pyproject.toml.</comment>
    <requestid>1167722</requestid>
  </revision>
</revisionlist>
