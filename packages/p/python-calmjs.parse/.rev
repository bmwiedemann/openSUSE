<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>32d9dba5c004589880add2d29a31f82d</srcmd5>
    <version>1.2.1</version>
    <time>1578437637</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>761189</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>bc78cb8487bc42ceed2bbcac08bf0de9</srcmd5>
    <version>1.2.1</version>
    <time>1579557265</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>765754</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>5061e1a4bb3cdc530b2714ff58452b26</srcmd5>
    <version>1.2.4</version>
    <time>1585602248</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>789692</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>f363e67dfd62105d3aa0acfee30d37ef</srcmd5>
    <version>1.3.0</version>
    <time>1637108061</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.3.0:
  - Introduce the extractor unparser - an unparser that will
    unparse a valid AST into a dict.
  - Correct the JoinAttr ruletype such that the intended empty
    definition value is passed to walk if it was defined as such
    to avoid an unintended infinite recursion.
  - Will now import Iterable from the Python 3.3+ location as the
    previous location is marked for removal in Python 3.9. The import
    will still have a fallback to the previous location in order to
    maintain support for Python 2.7.
  - Provide a test case helper to ensure that the generic Program repr
    signature is provided to assist with test case portability.
  - In the calmjs.parse.vlq module, implemented the decode_vlq helper
    for completeness/symmetry to the encode_vlq helper.
</comment>
    <requestid>931812</requestid>
  </revision>
  <revision rev="5" vrev="2">
    <srcmd5>fc85eded7b093c91161d0b6c06e37616</srcmd5>
    <version>1.3.0</version>
    <time>1637372341</time>
    <user>dimstar_suse</user>
    <comment>- Generated tables should get correct *.pyc files
- And no, this won't work with Python 2 modules. Just don't even
  try.
</comment>
    <requestid>932332</requestid>
  </revision>
  <revision rev="6" vrev="3">
    <srcmd5>2a2486ef25a952fe9034136bc70c066b</srcmd5>
    <version>1.3.0</version>
    <time>1687550012</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1094866</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>4956dcc22e3a55717d164646f5409d8b</srcmd5>
    <version>1.3.1</version>
    <time>1699910276</time>
    <user>anag+factory</user>
    <comment>- update to 1.3.1:
  * Modified existing ``setup.py`` hook from an install hook to a
    build hook to ensure the generated module files are present.
    Should any of those modules are missing and the required
    dependencies for are not present (i.e. ``ply`` and
    ``setuptools``), the build will result in a
    non-zero exit status and the documented error message should
    reflect which of the required dependencies are missing.</comment>
    <requestid>1124864</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>72771703d40fd3cf6ec96b78f439a8bc</srcmd5>
    <version>1.3.2</version>
    <time>1729710589</time>
    <user>anag+factory</user>
    <comment>- update to 1.3.2:
  * Ensure building from source tree under Python 3.13 works.
  * Dropped support for building under Python 2 in source tree. [
    #44 ]</comment>
    <requestid>1217048</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>fdaaea03e8f21cbb2e2715ca13503ade</srcmd5>
    <version>1.3.3</version>
    <time>1738689222</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1243035</requestid>
  </revision>
  <revision rev="10" vrev="2">
    <srcmd5>cef8995b95dbaa971a954a6e8c43fa4b</srcmd5>
    <version>1.3.3</version>
    <time>1750065179</time>
    <user>anag_factory</user>
    <comment>- Switch to pyroject macros.</comment>
    <requestid>1285949</requestid>
  </revision>
</revisionlist>
