-------------------------------------------------------------------
Sat Jan 13 20:43:45 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 6.1.13:
  * Expanded support for SCons variables declared in the legacy
    format ``${SCONS_VARNAME}`` (issue #4828)
- update to 6.1.12:
  * Added support for Python 3.12
  * Introduced the capability to launch the debug server in a
    separate process (issue #4722)
  * Introduced a warning during the verification of MCU maximum
    RAM usage, signaling when the allocated RAM surpasses 100%
    (issue #4791)
  * Drastically enhanced the speed of project building when
    operating in verbose mode (issue #4783)
  * Upgraded the build engine to the latest version of SCons
    (4.6.0) to improve build performance, reliability, and
    compatibility with other tools and systems (release notes)
  * Enhanced the handling of built-in variables in
    "platformio.ini" configuration file during Interpolation of
    Values (issue #4695)
  * Enhanced PIP dependency declarations for improved reliability
    and extended support to include Python 3.6 (issue #4819)
  * Implemented automatic installation of missing dependencies
    when utilizing a SOCKS proxy (issue #4822)
  * Implemented a fail-safe mechanism to terminate a debugging
    session if an unknown CLI option is passed (issue #4699)
  * Rectified an issue where ``${platformio.name}`` erroneously
    represented ``None`` as the default project name (issue
    #4717)
  * Resolved an issue where the
    ``COMPILATIONDB_INCLUDE_TOOLCHAIN`` setting was not correctly
    applying to private libraries (issue #4762)
  * Resolved an issue where ``get_systype()`` inaccurately
    returned the architecture when executed within a Docker
    container on a 64-bit kernel with a 32-bit userspace (issue
    #4777)
  * Resolved an issue with incorrect handling of the
    ``check_src_filters`` option when used in multiple
    environments (issue #4788)
  * Resolved an issue where running pio project metadata resulted
    in duplicated "include" entries (issue #4723)
  * Resolved an issue where native debugging failed on the host
    machine (issue #4745)
  * Resolved an issue where custom debug configurations were
    being inadvertently overwritten in VSCode's ``launch.json``
    (issue #4810)
- update to 6.1.11:
  * Resolved a possible issue that may cause generated projects
    for PlatformIO IDE for VSCode to fail to launch a debug
    session because of a missing "objdump" binary when GDB is not
    part of the toolchain package
  * Resolved a regression issue that resulted in the malfunction
    of the Memory Inspection feature within PIO Home
- update to 6.1.10:
  * Resolved an issue that caused generated projects for
    PlatformIO IDE for VSCode to break when the ``-iprefix``
    compiler flag was used
  * Resolved an issue encountered while utilizing the pio pkg
    exec command on the Windows platform to execute Python
    scripts from a package
  * Implemented a crucial improvement to the pio run command,
    guaranteeing that the ``monitor`` target is not executed if
    any of the preceding targets, such as ``upload``, encounter
    failures
  * Cppcheck v2.11 with new checks, CLI commands and various
    analysis improvements
  * Resolved a critical issue that arose on macOS ARM platforms
    due to the Python "requests" module, leading to a
    "ModuleNotFoundError: No module named 'chardet'" (issue
    #4702)
- update to 6.1.9:
  * Rectified a regression bug that occurred when the
    ``-include`` flag was passed via the build_flags option as a
    relative path and subsequently expanded (issue #4683)
  * Resolved an issue that resulted in unresolved absolute
    toolchain paths when generating the Compilation database
    "compile_commands.json" (issue #4684)
- update to 6.1.8:
  * Added a new ``--lint`` option to the pio project config
    command, enabling users to efficiently perform linting on the
    "platformio.ini" configuration file
  * Enhanced the parsing of the "platformio.ini" configuration
    file to provide comprehensive diagnostic information
  * Expanded the functionality of the library.json manifest by
    allowing the use of the underscore symbol in the keywords
    field
  * Optimized project integration templates to address the issue
    of long paths on Windows (issue #4652)
  * Refactored Unit Testing engine to resolve compiler warnings
    with "-Wpedantic" option (pull #4671)
  * Eliminated erroneous warning regarding the use of obsolete
    PlatformIO Core when downgrading to the stable version (issue
    #4664)
  * Updated the pio project metadata command to return C/C++
    flags as parsed Unix shell arguments when dumping project
    build metadata
  * Resolved a critical issue related to the usage of the
    ``-include`` flag within the build_flags option, specifically
    when employing dynamic variables (issue #4682)
  * Removed PlatformIO IDE for Atom from the documentation as
    Atom has been deprecated
- update to 6.1.7:
  * Introduced a new ``--sample-code`` option to the pio project
    init command, which allows users to include sample code in
    the newly created project
  * Added validation for project working environment names to
    ensure that they only contain lowercase letters ``a-z``,
    numbers ``0-9``, and special characters ``_`` (underscore)
    and ``-`` (hyphen)
  * Added the ability to show a detailed library dependency tree
    only in verbose mode, which can help you understand the
    relationship between libraries and troubleshoot issues more
    effectively (issue #4517)
  * Added the ability to run only the device monitor when using
    the pio run -t monitor command, saving you time and resources
    by skipping the build process
  * Implemented a new feature to store device monitor logs in the
    project's ``logs`` folder, making it easier to access and
    review device monitor logs for your projects (issue #4596)
  * Improved support for projects located on Windows network
    drives, including Network Shared Folder, Dropbox, OneDrive,
    Google Drive, and other similar services (issue #3417)
  * Improved source file filtering functionality for the Static
    Code Analysis feature, making it easier to analyze only the
    code you need to
  * Upgraded the build engine to the latest version of SCons
    (4.5.2) to improve build performance, reliability, and
    compatibility with other tools and systems (release notes)
  * Implemented a fix for shell injection vulnerabilities when
    converting INO files to CPP, ensuring your code is safe and
    secure (issue #4532)
  * Restored the project generator for the NetBeans IDE,
    providing you with more flexibility and options for your
    development workflow
  * Resolved installation issues with PIO Remote on Raspberry Pi
    and other small form-factor PCs (issue #4425, issue #4493,
    issue #4607)
  * Resolved an issue where the build_cache_dir setting was not
    being recognized consistently across multiple environments
    (issue #4574)
  * Resolved an issue where organization details could not be
    updated using the pio org update command
  * Resolved an issue where the incorrect debugging environment
    was generated for VSCode in "Auto" mode (issue #4597)
  * Resolved an issue where native tests would fail if a custom
    program name was specified (issue #4546)
  * Resolved an issue where the PlatformIO Debugging solution was
    not escaping the tool installation process into MI2 correctly
    (issue #4565)
  * Resolved an issue where multiple targets were not executed
    sequentially (issue #4604)
  * Resolved an issue where upgrading PlatformIO Core fails on
    Windows with Python 3.11 (issue #4540)
- update to 6.1.6:
  * Added support for Python 3.11
  * Added a new name configuration option to customize a project
    name (pull #4498)
  * Made assets (templates, ``99-platformio-udev.rules``) part of
    Python's module (issue #4458)
  * Updated Clang-Tidy check tool to v15.0.5 with new diagnostics
    and bugfixes
  * Removed dependency on the "zeroconf" package and install it
    only when a user lists mDNS devices (issue with zeroconf's
    LGPL license)
  * Show the real error message instead of "Can not remove
    temporary directory" when "platformio.ini" configuration file
    is broken (issue #4480)
  * Fixed an issue with an incorrect test summary when a testcase
    name includes a colon (issue #4508)
  * Fixed an issue when extends did not override options in the
    right order (issue #4462)
  * Fixed an issue when pio pkg list and pio pkg uninstall
    commands fail if there are circular dependencies in the
    library.json manifests (issue #4475)

-------------------------------------------------------------------
Thu Nov 10 12:07:39 UTC 2022 - Matej Cepl <mcepl@suse.com>

- Switch to wheel build/install, move scripts/ directory to the
  packages's namespace (see gh#platformio/platformio-core#4458).
- Add python-platformio.rpmlintrc to avoid false positives.

-------------------------------------------------------------------
Wed Nov  9 16:27:43 UTC 2022 - Yogalakshmi Arunachalam <yarunachalam@suse.com>

- Update to versino 6.1.5
  * Added a new enable_proxy_strict_ssl setting to disable the proxy server certificate verification (issue #4432)
  * Documented PlatformIO Core Proxy Configuration
  * Speeded up device port finder by avoiding loading board HWIDs from development platforms
  * Improved caching of build metadata in debug mode
  * Fixed an issue when pio pkg install --storage-dir command requires PlatformIO project (issue #4410)

-------------------------------------------------------------------
Tue Oct  4 23:08:41 UTC 2022 - Yogalakshmi Arunachalam <yarunachalam@suse.com>

- Update to version 6.1.4 (2022-08-12)
  Added support for accepting the original FileNode environment in a “callback” function when using Build Middlewares (pull #4380)
  Improved device port finder when using dual channel UART converter (issue #4367)
  Improved project dependency resolving when using the pio project init --ide command
  Upgraded build engine to the SCons 4.4.0 (release notes)
  Keep custom “unwantedRecommendations” when generating projects for VSCode (issue #4383)
  Do not resolve project dependencies for the cleanall target (issue #4344)
  Warn about calling “env.BuildSources” in a POST-type script (issue #4385)
  Fixed an issue when escaping macros/defines for IDE integration (issue #4360)
  Fixed an issue when the “cleanall” target removes dependencies from all working environments (issue #4386)

-------------------------------------------------------------------
Mon Sep 26 06:44:37 UTC 2022 - Matej Cepl <mcepl@suse.com>

- Remove less-than Requires … it is just asking for pain without
  any good reason.

-------------------------------------------------------------------
Mon Jul 25 17:25:51 UTC 2022 - Henning Wülpern <hwuelpern@gmail.com>

- update to 6.1.3:
  * full list of changes beginning from version 5.2.1 at
    https://github.com/platformio/platformio-core/blob/v5.2.5/HISTORY.rst
  * full list of changes beginning from version 5.2.5 at
    https://docs.platformio.org/en/latest/core/history.html

- updated dependency versions according to setup.py

-------------------------------------------------------------------
Sat Oct 16 22:05:39 UTC 2021 - Dirk Müller <dmueller@suse.com>

- update to 5.2.1:
  * Clean a build environment and installed library dependencies using a new
    cleanall target
  * Override a default library builder via a new builder field in a build group
    of library.json manifest
  * Updated Cppcheck v2.6 with new checks, increased reliability of advanced
    addons (MISRA/CERT) and various improvements
  * Handle the "test" folder as a part of CLion project
  * Improved handling of a library root based on "Conan" or "CMake" build systems
  * Fixed a "KeyError: Invalid board option 'build.cpu'" when using a
    precompiled library with a board that does not have a CPU field in the
    manifest
  * Fixed a "FileExist" error when the platformio ci command is used in pair
    with the --keep-build-dir option (issue #4011)
  * Fixed an issue with draft values of C++ language standards that broke
    static analysis via Cppcheck

-------------------------------------------------------------------
Sun Nov  1 09:15:44 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- update to 5.0.2:
  * Improved “core.call” RPC for PlatformIO Home
  * Fixed a “KeyError: ‘versions’” when dependency does not exist in the
  registry
  * Fixed an issue with GCC linker when “native” dev-platform is used in pair
  with library dependencies
  * Fixed an “AssertionError: ensure_dir_exists” when checking library updates
  from simultaneous subprocesses
  * Fixed an issue when pio package publish command removes original archive
  after submitting to the registry
  * Fixed an issue when multiple pio lib install command with the same local
  library results in duplicates in lib_deps (issue #3715) Fixed an issue with
  a “wrong” timestamp in device monitor output using “time” filter

-------------------------------------------------------------------
Fri Oct  9 20:37:13 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- update to 5.0.1:
  * Integration with the new PlatformIO Trusted Registry
  * Integration with the new Account Management System
  * New Package Management System
  * see https://docs.platformio.org/page/core/migration.html  for migrating from 4.x
  * full list of changes at https://docs.platformio.org/en/latest/core/history.html

-------------------------------------------------------------------
Fri Aug 28 10:57:42 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- Initial package (4.3.4)
