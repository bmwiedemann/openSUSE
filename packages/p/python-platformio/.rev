<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>2b66c1dbb9a50763cbaf5fa8e1d6acbe</srcmd5>
    <version>4.3.4</version>
    <time>1600801544</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>830265</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>192f35279fb4b366cdde1912af337310</srcmd5>
    <version>5.0.1</version>
    <time>1602349441</time>
    <user>dimstar_suse</user>
    <comment>- update to 5.0.1:
  * Integration with the new PlatformIO Trusted Registry
  * Integration with the new Account Management System
  * New Package Management System
  * see https://docs.platformio.org/page/core/migration.html  for migrating from 4.x
  * full list of changes at https://docs.platformio.org/en/latest/core/history.html</comment>
    <requestid>840482</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>0a250b945f413ac464045b06c1ed85f8</srcmd5>
    <version>5.0.2</version>
    <time>1604309763</time>
    <user>dimstar_suse</user>
    <comment>- update to 5.0.2:
  * Improved “core.call” RPC for PlatformIO Home
  * Fixed a “KeyError: ‘versions’” when dependency does not exist in the
  registry
  * Fixed an issue with GCC linker when “native” dev-platform is used in pair
  with library dependencies
  * Fixed an “AssertionError: ensure_dir_exists” when checking library updates
  from simultaneous subprocesses
  * Fixed an issue when pio package publish command removes original archive
  after submitting to the registry
  * Fixed an issue when multiple pio lib install command with the same local
  library results in duplicates in lib_deps (issue #3715) Fixed an issue with
  a “wrong” timestamp in device monitor output using “time” filter</comment>
    <requestid>845251</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>7090aa61242810e3f03e6eed7ac1bdee</srcmd5>
    <version>5.2.1</version>
    <time>1634587147</time>
    <user>dimstar_suse</user>
    <comment>- update to 5.2.1:
  * Clean a build environment and installed library dependencies using a new
    cleanall target
  * Override a default library builder via a new builder field in a build group
    of library.json manifest
  * Updated Cppcheck v2.6 with new checks, increased reliability of advanced
    addons (MISRA/CERT) and various improvements
  * Handle the &quot;test&quot; folder as a part of CLion project
  * Improved handling of a library root based on &quot;Conan&quot; or &quot;CMake&quot; build systems
  * Fixed a &quot;KeyError: Invalid board option 'build.cpu'&quot; when using a
    precompiled library with a board that does not have a CPU field in the
    manifest
  * Fixed a &quot;FileExist&quot; error when the platformio ci command is used in pair
    with the --keep-build-dir option (issue #4011)
  * Fixed an issue with draft values of C++ language standards that broke
    static analysis via Cppcheck</comment>
    <requestid>925764</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>6cec70532d52144f08c6c91d2894c113</srcmd5>
    <version>6.1.3</version>
    <time>1659470940</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>992112</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>5b2e714019c2a4974c6865e404007827</srcmd5>
    <version>6.1.3</version>
    <time>1664210888</time>
    <user>dimstar_suse</user>
    <comment>- Remove less-than Requires … it is just asking for pain without
  any good reason.
</comment>
    <requestid>1005983</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>1d9688289003df4d2c4b39641dc464e5</srcmd5>
    <version>6.1.4</version>
    <time>1665185115</time>
    <user>RBrownFactory</user>
    <comment></comment>
    <requestid>1008696</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>7b8fafc5fe6a64badb84b82de7508fd3</srcmd5>
    <version>6.1.5</version>
    <time>1668094835</time>
    <user>dimstar_suse</user>
    <comment>- Switch to wheel build/install, move scripts/ directory to the
  packages's namespace (see
  https://community.platformio.org/t/installs-scripts-directory-to-the-global-namespace/30396).
- Add python-platformio.rpmlintrc to avoid false positives.
- Update to versino 6.1.5 
  * Added a new enable_proxy_strict_ssl setting to disable the proxy server certificate verification (issue #4432)
  * Documented PlatformIO Core Proxy Configuration
  * Speeded up device port finder by avoiding loading board HWIDs from development platforms
  * Improved caching of build metadata in debug mode
  * Fixed an issue when pio pkg install --storage-dir command requires PlatformIO project (issue #4410)
</comment>
    <requestid>1035075</requestid>
  </revision>
  <revision rev="9" vrev="2">
    <srcmd5>c8f46138966e453cc1c1e688bb4fde70</srcmd5>
    <version>6.1.5</version>
    <time>1668359338</time>
    <user>dimstar_suse</user>
    <comment>- Switch to wheel build/install, move scripts/ directory to the
  packages's namespace (see gh#platformio/platformio-core#4458).
- Add python-platformio.rpmlintrc to avoid false positives.
- Update to versino 6.1.5 
  * Added a new enable_proxy_strict_ssl setting to disable the proxy server certificate verification (issue #4432)
  * Documented PlatformIO Core Proxy Configuration
  * Speeded up device port finder by avoiding loading board HWIDs from development platforms
  * Improved caching of build metadata in debug mode
  * Fixed an issue when pio pkg install --storage-dir command requires PlatformIO project (issue #4410)
- Update to version 6.1.4 (2022-08-12)
  Added support for accepting the original FileNode environment in a “callback” function when using Build Middlewares (pull #4380)
  Improved device port finder when using dual channel UART converter (issue #4367)
  Improved project dependency resolving when using the pio project init --ide command
  Upgraded build engine to the SCons 4.4.0 (release notes)
  Keep custom “unwantedRecommendations” when generating projects for VSCode (issue #4383)
  Do not resolve project dependencies for the cleanall target (issue #4344)
  Warn about calling “env.BuildSources” in a POST-type script (issue #4385)
  Fixed an issue when escaping macros/defines for IDE integration (issue #4360)
  Fixed an issue when the “cleanall” target removes dependencies from all working environments (issue #4386) 
- Remove less-than Requires … it is just asking for pain without
  any good reason.
- update to 6.1.3:
  * full list of changes beginning from version 5.2.1 at
    https://github.com/platformio/platformio-core/blob/v5.2.5/HISTORY.rst
  * full list of changes beginning from version 5.2.5 at
    https://docs.platformio.org/en/latest/core/history.html
- updated dependency versions according to setup.py
- update to 5.2.1:
  * Clean a build environment and installed library dependencies using a new
    cleanall target
  * Override a default library builder via a new builder field in a build group
    of library.json manifest
  * Updated Cppcheck v2.6 with new checks, increased reliability of advanced
    addons (MISRA/CERT) and various improvements
  * Handle the &quot;test&quot; folder as a part of CLion project
  * Improved handling of a library root based on &quot;Conan&quot; or &quot;CMake&quot; build systems
  * Fixed a &quot;KeyError: Invalid board option 'build.cpu'&quot; when using a
    precompiled library with a board that does not have a CPU field in the
    manifest
  * Fixed a &quot;FileExist&quot; error when the platformio ci command is used in pair
    with the --keep-build-dir option (issue #4011)
  * Fixed an issue with draft values of C++ language standards that broke
    static analysis via Cppcheck
- update to 5.0.2:
  * Improved “core.call” RPC for PlatformIO Home
  * Fixed a “KeyError: ‘versions’” when dependency does not exist in the
  registry
  * Fixed an issue with GCC linker when “native” dev-platform is used in pair
  with library dependencies
  * Fixed an “AssertionError: ensure_dir_exists” when checking library updates
  from simultaneous subprocesses
  * Fixed an issue when pio package publish command removes original archive
  after submitting to the registry
  * Fixed an issue when multiple pio lib install command with the same local
  library results in duplicates in lib_deps (issue #3715) Fixed an issue with
  a “wrong” timestamp in device monitor output using “time” filter
- update to 5.0.1:
  * Integration with the new PlatformIO Trusted Registry
  * Integration with the new Account Management System
  * New Package Management System
  * see https://docs.platformio.org/page/core/migration.html  for migrating from 4.x
  * full list of changes at https://docs.platformio.org/en/latest/core/history.html
- Initial package (4.3.4) 
</comment>
    <requestid>1035453</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>708a6c0a43c94acee1c2a7bc0dd77cd1</srcmd5>
    <version>6.1.13</version>
    <time>1705353353</time>
    <user>anag+factory</user>
    <comment>- update to 6.1.13:
  * Expanded support for SCons variables declared in the legacy
    format ``${SCONS_VARNAME}`` (issue #4828)
- update to 6.1.12:
  * Added support for Python 3.12
  * Introduced the capability to launch the debug server in a
    separate process (issue #4722)
  * Introduced a warning during the verification of MCU maximum
    RAM usage, signaling when the allocated RAM surpasses 100%
    (issue #4791)
  * Drastically enhanced the speed of project building when
    operating in verbose mode (issue #4783)
  * Upgraded the build engine to the latest version of SCons
    (4.6.0) to improve build performance, reliability, and
    compatibility with other tools and systems (release notes)
  * Enhanced the handling of built-in variables in
    &quot;platformio.ini&quot; configuration file during Interpolation of
    Values (issue #4695)
  * Enhanced PIP dependency declarations for improved reliability
    and extended support to include Python 3.6 (issue #4819)
  * Implemented automatic installation of missing dependencies
    when utilizing a SOCKS proxy (issue #4822)
  * Implemented a fail-safe mechanism to terminate a debugging
    session if an unknown CLI option is passed (issue #4699)
  * Rectified an issue where ``${platformio.name}`` erroneously
    represented ``None`` as the default project name (issue
    #4717)
  * Resolved an issue where the
    ``COMPILATIONDB_INCLUDE_TOOLCHAIN`` setting was not correctly
    applying to private libraries (issue #4762)</comment>
    <requestid>1138501</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>00fbbcb0b2282ab7fae94088540caec0</srcmd5>
    <version>6.1.14</version>
    <time>1711397563</time>
    <user>anag+factory</user>
    <comment>- update to 6.1.14:
  * Introduced the ``--json-output`` option to the pio test
    command, enabling users to generate test results in the JSON
    format
  * Upgraded the build engine to the latest version of SCons
    (4.7.0) to improve build performance, reliability, and
    compatibility with other tools and systems (release notes)
  * Broadened version support for the ``pyelftools`` dependency,
    enabling compatibility with lower versions and facilitating
    integration with a wider range of third-party tools (issue
    #4834)
  * Addressed an issue where passing a relative path
    (``--project-dir``) to the pio project init command resulted
    in an error (issue #4847)
  * Enhanced Static Code Analysis to accommodate scenarios where
    custom ``src_dir`` or ``include_dir`` are located outside the
    project folder (pull #4874)
  * Corrected the validation of ``symlink://`` package
    specifications , resolving an issue that caused the package
    manager to repeatedly reinstall dependencies (pull #4870)
  * Resolved an issue related to the relative package path in the
    pio pkg publish command
  * Resolved an issue where the LDF selected an incorrect library
    version (issue #4860)
  * Resolved an issue with the ``hexlify`` filter in the device
    monitor command, ensuring proper representation of characters
    with Unicode code points higher than 127 (issue #4732)</comment>
    <requestid>1161396</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>73d253889c3d909c85392953193fbcb7</srcmd5>
    <version>6.1.15</version>
    <time>1715097888</time>
    <user>dimstar_suse</user>
    <comment>- update to 6.1.15:
  * Resolved an issue where the LDF couldn't locate a library
    dependency declared via version control system repository
    (issue #4885)
  * Resolved an issue related to the inaccurate detection of the
    Clang compiler (pull #4897)</comment>
    <requestid>1172343</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>d223e51a680a7bb1d337cc5410d61881</srcmd5>
    <version>6.1.16</version>
    <time>1727970033</time>
    <user>anag+factory</user>
    <comment>- update to 6.1.16:
  * Added support for Python 3.13
  * Introduced the PLATFORMIO_SYSTEM_TYPE environment variable,
    enabling manual override of the detected system type for
    greater flexibility and control in custom build environments
  * Enhanced internet connection checks by falling back to HTTPS
    protocol when HTTP (port 80) fails (issue #4980)
  * Upgraded the build engine to the latest version of SCons
    (4.8.1) to improve build performance, reliability, and
    compatibility with other tools and systems (release notes)
  * Upgraded the Doctest testing framework to version 2.4.11, the
    GoogleTest to version 1.15.2, and the Unity to version 2.6.0,
    incorporating the latest features and improvements for
    enhanced testing capabilities
  * Corrected an issue where the incorrect public class was
    imported for the ``DoctestTestRunner`` (issue #4949)</comment>
    <requestid>1205379</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>7219348fe779f52b4c8b0aee3d669630</srcmd5>
    <version>6.1.17</version>
    <time>1740586683</time>
    <user>dimstar_suse</user>
    <comment>- update to 6.1.17:
  * Introduced the PLATFORMIO_RUN_JOBS environment variable,
    allowing manual override of the number of parallel build jobs
    (issue #5077)
  * Added support for ``tar.xz`` tarball dependencies (pull
    #4974)
  * Ensured that dependencies of private libraries are no longer
    unnecessarily re-installed, optimizing dependency management
    and reducing redundant operations (issue #4987)
  * Resolved an issue where the ``compiledb`` target failed to
    properly escape compiler executable paths containing spaces
    (issue #4998)
  * Resolved an issue with incorrect path resolution when linking
    static libraries via the build_flags option (issue #5004)
  * Resolved an issue where the ``--project-dir`` flag did not
    function correctly with the pio check and pio debug commands
    (issue #5029)
  * Resolved an issue where the LDF occasionally excluded bundled
    platform libraries from the dependency graph (pull #4941)</comment>
    <requestid>1248480</requestid>
  </revision>
</revisionlist>
