From 8b33dc69f3d3c1f6c5f429fdb06e38b5c28f238a Mon Sep 17 00:00:00 2001
From: Micah Lee <micah@micahflee.com>
Date: Mon, 22 May 2023 20:13:52 -0700
Subject: [PATCH 01/14] Add dependabot for /docs too

---
 .github/dependabot.yml | 5 +++++
 1 file changed, 5 insertions(+)

Index: onionshare-2.6/cli/poetry.lock
===================================================================
--- onionshare-2.6.orig/cli/poetry.lock
+++ onionshare-2.6/cli/poetry.lock
@@ -496,6 +496,26 @@ docs = ["Sphinx"]
 test = ["zope.testrunner"]
 
 [[package]]
+name = "importlib-metadata"
+version = "6.6.0"
+description = "Read metadata from Python packages"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+files = [
+    {file = "importlib_metadata-6.6.0-py3-none-any.whl", hash = "sha256:43dd286a2cd8995d5eaef7fee2066340423b818ed3fd70adf0bad5f1fac53fed"},
+    {file = "importlib_metadata-6.6.0.tar.gz", hash = "sha256:92501cdf9cc66ebd3e612f1b4f0c0765dfa42f0fa38ffb319b6bd84dd675d705"},
+]
+
+[package.dependencies]
+zipp = ">=0.5"
+
+[package.extras]
+docs = ["furo", "jaraco.packaging (>=9)", "jaraco.tidelift (>=1.4)", "rst.linker (>=1.9)", "sphinx (>=3.5)", "sphinx-lint"]
+perf = ["ipython"]
+testing = ["flake8 (<5)", "flufl.flake8", "importlib-resources (>=1.3)", "packaging", "pyfakefs", "pytest (>=6)", "pytest-black (>=0.3.7)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=1.3)", "pytest-flake8", "pytest-mypy (>=0.9.1)", "pytest-perf (>=0.9.2)"]
+
+[[package]]
 name = "zope.interface"
 version = "5.4.0"
 description = "Interfaces for Python"
Index: onionshare-2.6/cli/pyproject.toml
===================================================================
--- onionshare-2.6.orig/cli/pyproject.toml
+++ onionshare-2.6/cli/pyproject.toml
@@ -18,7 +18,8 @@ classifiers = [
 [tool.poetry.dependencies]
 python = "^3.7"
 click = "*"
-flask = "2.0.3"
+flask = "2.3.2"
+flask-compress = "^1.13"
 flask-socketio = "5.3.1"
 psutil = "*"
 pysocks = "*"
@@ -31,7 +32,8 @@ pynacl = "*"
 colorama = "*"
 gevent-websocket = "*"
 stem = "1.8.1"
-werkzeug = "~2.0.3"
+waitress = "^2.1.2"
+werkzeug = ">=2.3.4"
 
 [tool.poetry.dev-dependencies]
 pytest = "*"
Index: onionshare-2.6/desktop/poetry.lock
===================================================================
--- onionshare-2.6.orig/desktop/poetry.lock
+++ onionshare-2.6/desktop/poetry.lock
@@ -24,7 +24,6 @@ python-versions = ">=3.7"
 name = "black"
 version = "22.10.0"
 description = "The uncompromising code formatter."
-category = "dev"
 optional = false
 python-versions = ">=3.7"
 
@@ -317,8 +316,9 @@ develop = true
 click = "*"
 colorama = "*"
 eventlet = "*"
-flask = "2.0.3"
-flask-socketio = "5.3.1"
+flask = "2.3.2"
+flask-compress = "^1.13"
+flask-socketio = "5.3.4"
 gevent-websocket = "*"
 psutil = "*"
 pynacl = "*"
@@ -328,7 +328,8 @@ setuptools = "*"
 stem = "1.8.1"
 unidecode = "*"
 urllib3 = "*"
-werkzeug = "~2.0.3"
+waitress = "^2.1.2"
+werkzeug = ">=2.3.4"
 
 [package.source]
 type = "directory"
@@ -482,7 +483,7 @@ py = ">=1.8.2"
 tomli = ">=1.0.0"
 
 [package.extras]
-testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "pygments (>=2.7.2)", "requests", "xmlschema"]
+testing = ["argcomplete", "attrs (>=19.2.0)", "hypothesis (>=3.56)", "mock", "nose", "pygments (>=2.7.2)", "requests", "xmlschema"]
 
 [[package]]
 name = "pytest-faulthandler"
@@ -569,7 +570,7 @@ certifi = ">=2017.4.17"
 charset-normalizer = ">=2,<3"
 idna = ">=2.5,<4"
 PySocks = {version = ">=1.5.6,<1.5.7 || >1.5.7", optional = true, markers = "extra == \"socks\""}
-urllib3 = ">=1.21.1,<1.27"
+urllib3 = ">=1.21.1,<3"
 
 [package.extras]
 socks = ["PySocks (>=1.5.6,!=1.5.7)"]
Index: onionshare-2.6/desktop/pyproject.toml
===================================================================
--- onionshare-2.6.orig/desktop/pyproject.toml
+++ onionshare-2.6/desktop/pyproject.toml
@@ -10,7 +10,8 @@ python = ">=3.7"
 onionshare_cli = {path = "../cli", develop = true}
 PySide2 = "5.15.2.1"
 qrcode = "*"
-werkzeug = "~2.0.3"
+werkzeug = "*"
+python-gnupg = "*"
 
 [tool.poetry.dev-dependencies]
 click = "*"
Index: onionshare-2.6/docs/poetry.lock
===================================================================
--- onionshare-2.6.orig/docs/poetry.lock
+++ onionshare-2.6/docs/poetry.lock
@@ -1,18 +1,28 @@
+# This file is automatically @generated by Poetry and should not be changed by hand.
+
 [[package]]
 name = "alabaster"
-version = "0.7.12"
+version = "0.7.13"
 description = "A configurable sidebar-enabled Sphinx theme"
 category = "main"
 optional = false
-python-versions = "*"
+python-versions = ">=3.6"
+files = [
+    {file = "alabaster-0.7.13-py3-none-any.whl", hash = "sha256:1ee19aca801bbabb5ba3f5f258e4422dfa86f82f3e9cefb0859b283cdd7f62a3"},
+    {file = "alabaster-0.7.13.tar.gz", hash = "sha256:a27a4a084d5e690e16e01e03ad2b2e552c61a65469419b907243193de1a84ae2"},
+]
 
 [[package]]
 name = "anyio"
-version = "3.6.1"
+version = "3.6.2"
 description = "High level compatibility layer for multiple asynchronous event loop implementations"
 category = "main"
 optional = false
 python-versions = ">=3.6.2"
+files = [
+    {file = "anyio-3.6.2-py3-none-any.whl", hash = "sha256:fbbe32bd270d2a2ef3ed1c5d45041250284e31fc0a4df4a5a6071842051a51e3"},
+    {file = "anyio-3.6.2.tar.gz", hash = "sha256:25ea0d673ae30af41a0c442f81cf3b38c7e79fdc7b60335a4c14e05eb0947421"},
+]
 
 [package.dependencies]
 idna = ">=2.8"
@@ -60,46 +70,66 @@ description = "Composable command line i
 category = "main"
 optional = false
 python-versions = ">=3.7"
+files = [
+    {file = "click-8.1.3-py3-none-any.whl", hash = "sha256:bb4d8133cb15a609f44e8213d9b391b0809795062913b383c62be0ee95b1db48"},
+    {file = "click-8.1.3.tar.gz", hash = "sha256:7682dc8afb30297001674575ea00d1814d808d6a36af415a82bd481d37ba7b8e"},
+]
 
 [package.dependencies]
 colorama = {version = "*", markers = "platform_system == \"Windows\""}
 
 [[package]]
 name = "colorama"
-version = "0.4.5"
+version = "0.4.6"
 description = "Cross-platform colored terminal text."
 category = "main"
 optional = false
-python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
+python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"
+files = [
+    {file = "colorama-0.4.6-py2.py3-none-any.whl", hash = "sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6"},
+    {file = "colorama-0.4.6.tar.gz", hash = "sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44"},
+]
 
 [[package]]
 name = "docutils"
-version = "0.17.1"
+version = "0.18.1"
 description = "Docutils -- Python Documentation Utilities"
 category = "main"
 optional = false
 python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
+files = [
+    {file = "docutils-0.18.1-py2.py3-none-any.whl", hash = "sha256:23010f129180089fbcd3bc08cfefccb3b890b0050e1ca00c867036e9d161b98c"},
+    {file = "docutils-0.18.1.tar.gz", hash = "sha256:679987caf361a7539d76e584cbeddc311e3aee937877c87346f31debc63e9d06"},
+]
 
 [[package]]
 name = "h11"
-version = "0.12.0"
+version = "0.14.0"
 description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
 category = "main"
 optional = false
-python-versions = ">=3.6"
+python-versions = ">=3.7"
+files = [
+    {file = "h11-0.14.0-py3-none-any.whl", hash = "sha256:e3fe4ac4b851c468cc8363d500db52c2ead036020723024a109d37346efaa761"},
+    {file = "h11-0.14.0.tar.gz", hash = "sha256:8f19fbbe99e72420ff35c00b27a34cb9937e902a8b810e2c88300c6f0a3b699d"},
+]
 
 [[package]]
 name = "httpcore"
-version = "0.15.0"
+version = "0.17.1"
 description = "A minimal low-level HTTP client."
 category = "main"
 optional = false
 python-versions = ">=3.7"
+files = [
+    {file = "httpcore-0.17.1-py3-none-any.whl", hash = "sha256:628e768aaeec1f7effdc6408ba1c3cdbd7487c1fc570f7d66844ec4f003e1ca4"},
+    {file = "httpcore-0.17.1.tar.gz", hash = "sha256:caf508597c525f9b8bfff187e270666309f63115af30f7d68b16143a403c8356"},
+]
 
 [package.dependencies]
-anyio = ">=3.0.0,<4.0.0"
+anyio = ">=3.0,<5.0"
 certifi = "*"
-h11 = ">=0.11,<0.13"
+h11 = ">=0.13,<0.15"
 sniffio = ">=1.0.0,<2.0.0"
 
 [package.extras]
@@ -108,21 +138,25 @@ socks = ["socksio (>=1.0.0,<2.0.0)"]
 
 [[package]]
 name = "httpx"
-version = "0.23.0"
+version = "0.24.1"
 description = "The next generation HTTP client."
 category = "main"
 optional = false
 python-versions = ">=3.7"
+files = [
+    {file = "httpx-0.24.1-py3-none-any.whl", hash = "sha256:06781eb9ac53cde990577af654bd990a4949de37a28bdb4a230d434f3a30b9bd"},
+    {file = "httpx-0.24.1.tar.gz", hash = "sha256:5853a43053df830c20f8110c5e69fe44d035d850b2dfe795e196f00fdb774bdd"},
+]
 
 [package.dependencies]
 certifi = "*"
-httpcore = ">=0.15.0,<0.16.0"
-rfc3986 = {version = ">=1.3,<2", extras = ["idna2008"]}
+httpcore = ">=0.15.0,<0.18.0"
+idna = "*"
 sniffio = "*"
 
 [package.extras]
 brotli = ["brotli", "brotlicffi"]
-cli = ["click (>=8.0.0,<9.0.0)", "pygments (>=2.0.0,<3.0.0)", "rich (>=10,<13)"]
+cli = ["click (>=8.0.0,<9.0.0)", "pygments (>=2.0.0,<3.0.0)", "rich (>=10,<14)"]
 http2 = ["h2 (>=3,<5)"]
 socks = ["socksio (>=1.0.0,<2.0.0)"]
 
@@ -133,6 +167,10 @@ description = "Internationalized Domain
 category = "main"
 optional = false
 python-versions = ">=3.5"
+files = [
+    {file = "idna-3.4-py3-none-any.whl", hash = "sha256:90b77e79eaa3eba6de819a0c442c0b4ceefc341a7a2ab77d7562bf49f425c5c2"},
+    {file = "idna-3.4.tar.gz", hash = "sha256:814f528e8dead7d329833b91c5faa87d60bf71824cd12a7530b5526063d02cb4"},
+]
 
 [[package]]
 name = "imagesize"
@@ -141,30 +179,42 @@ description = "Getting image size from p
 category = "main"
 optional = false
 python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
+files = [
+    {file = "imagesize-1.4.1-py2.py3-none-any.whl", hash = "sha256:0d8d18d08f840c19d0ee7ca1fd82490fdc3729b7ac93f49870406ddde8ef8d8b"},
+    {file = "imagesize-1.4.1.tar.gz", hash = "sha256:69150444affb9cb0d5cc5a92b3676f0b2fb7cd9ae39e947a5e11a36b4497cd4a"},
+]
 
 [[package]]
 name = "importlib-metadata"
-version = "5.0.0"
+version = "6.6.0"
 description = "Read metadata from Python packages"
 category = "main"
 optional = false
 python-versions = ">=3.7"
+files = [
+    {file = "importlib_metadata-6.6.0-py3-none-any.whl", hash = "sha256:43dd286a2cd8995d5eaef7fee2066340423b818ed3fd70adf0bad5f1fac53fed"},
+    {file = "importlib_metadata-6.6.0.tar.gz", hash = "sha256:92501cdf9cc66ebd3e612f1b4f0c0765dfa42f0fa38ffb319b6bd84dd675d705"},
+]
 
 [package.dependencies]
 zipp = ">=0.5"
 
 [package.extras]
-docs = ["furo", "jaraco.packaging (>=9)", "jaraco.tidelift (>=1.4)", "rst.linker (>=1.9)", "sphinx (>=3.5)"]
+docs = ["furo", "jaraco.packaging (>=9)", "jaraco.tidelift (>=1.4)", "rst.linker (>=1.9)", "sphinx (>=3.5)", "sphinx-lint"]
 perf = ["ipython"]
 testing = ["flake8 (<5)", "flufl.flake8", "importlib-resources (>=1.3)", "packaging", "pyfakefs", "pytest (>=6)", "pytest-black (>=0.3.7)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=1.3)", "pytest-flake8", "pytest-mypy (>=0.9.1)", "pytest-perf (>=0.9.2)"]
 
 [[package]]
-name = "Jinja2"
+name = "jinja2"
 version = "3.1.2"
 description = "A very fast and expressive template engine."
 category = "main"
 optional = false
 python-versions = ">=3.7"
+files = [
+    {file = "Jinja2-3.1.2-py3-none-any.whl", hash = "sha256:6088930bfe239f0e6710546ab9c19c9ef35e29792895fed6e6e31a023a182a61"},
+    {file = "Jinja2-3.1.2.tar.gz", hash = "sha256:31351a702a408a9e7595a8fc6150fc3f43bb6bf7e319770cbc0db9df9437e852"},
+]
 
 [package.dependencies]
 MarkupSafe = ">=2.0"
@@ -173,97 +223,129 @@ MarkupSafe = ">=2.0"
 i18n = ["Babel (>=2.7)"]
 
 [[package]]
-name = "MarkupSafe"
-version = "2.1.1"
+name = "markupsafe"
+version = "2.1.2"
 description = "Safely add untrusted strings to HTML/XML markup."
 category = "main"
 optional = false
 python-versions = ">=3.7"
+files = [
+    {file = "MarkupSafe-2.1.2-cp310-cp310-macosx_10_9_universal2.whl", hash = "sha256:665a36ae6f8f20a4676b53224e33d456a6f5a72657d9c83c2aa00765072f31f7"},
+    {file = "MarkupSafe-2.1.2-cp310-cp310-macosx_10_9_x86_64.whl", hash = "sha256:340bea174e9761308703ae988e982005aedf427de816d1afe98147668cc03036"},
+    {file = "MarkupSafe-2.1.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:22152d00bf4a9c7c83960521fc558f55a1adbc0631fbb00a9471e097b19d72e1"},
+    {file = "MarkupSafe-2.1.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:28057e985dace2f478e042eaa15606c7efccb700797660629da387eb289b9323"},
+    {file = "MarkupSafe-2.1.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:ca244fa73f50a800cf8c3ebf7fd93149ec37f5cb9596aa8873ae2c1d23498601"},
+    {file = "MarkupSafe-2.1.2-cp310-cp310-musllinux_1_1_aarch64.whl", hash = "sha256:d9d971ec1e79906046aa3ca266de79eac42f1dbf3612a05dc9368125952bd1a1"},
+    {file = "MarkupSafe-2.1.2-cp310-cp310-musllinux_1_1_i686.whl", hash = "sha256:7e007132af78ea9df29495dbf7b5824cb71648d7133cf7848a2a5dd00d36f9ff"},
+    {file = "MarkupSafe-2.1.2-cp310-cp310-musllinux_1_1_x86_64.whl", hash = "sha256:7313ce6a199651c4ed9d7e4cfb4aa56fe923b1adf9af3b420ee14e6d9a73df65"},
+    {file = "MarkupSafe-2.1.2-cp310-cp310-win32.whl", hash = "sha256:c4a549890a45f57f1ebf99c067a4ad0cb423a05544accaf2b065246827ed9603"},
+    {file = "MarkupSafe-2.1.2-cp310-cp310-win_amd64.whl", hash = "sha256:835fb5e38fd89328e9c81067fd642b3593c33e1e17e2fdbf77f5676abb14a156"},
+    {file = "MarkupSafe-2.1.2-cp311-cp311-macosx_10_9_universal2.whl", hash = "sha256:2ec4f2d48ae59bbb9d1f9d7efb9236ab81429a764dedca114f5fdabbc3788013"},
+    {file = "MarkupSafe-2.1.2-cp311-cp311-macosx_10_9_x86_64.whl", hash = "sha256:608e7073dfa9e38a85d38474c082d4281f4ce276ac0010224eaba11e929dd53a"},
+    {file = "MarkupSafe-2.1.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:65608c35bfb8a76763f37036547f7adfd09270fbdbf96608be2bead319728fcd"},
+    {file = "MarkupSafe-2.1.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:f2bfb563d0211ce16b63c7cb9395d2c682a23187f54c3d79bfec33e6705473c6"},
+    {file = "MarkupSafe-2.1.2-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:da25303d91526aac3672ee6d49a2f3db2d9502a4a60b55519feb1a4c7714e07d"},
+    {file = "MarkupSafe-2.1.2-cp311-cp311-musllinux_1_1_aarch64.whl", hash = "sha256:9cad97ab29dfc3f0249b483412c85c8ef4766d96cdf9dcf5a1e3caa3f3661cf1"},
+    {file = "MarkupSafe-2.1.2-cp311-cp311-musllinux_1_1_i686.whl", hash = "sha256:085fd3201e7b12809f9e6e9bc1e5c96a368c8523fad5afb02afe3c051ae4afcc"},
+    {file = "MarkupSafe-2.1.2-cp311-cp311-musllinux_1_1_x86_64.whl", hash = "sha256:1bea30e9bf331f3fef67e0a3877b2288593c98a21ccb2cf29b74c581a4eb3af0"},
+    {file = "MarkupSafe-2.1.2-cp311-cp311-win32.whl", hash = "sha256:7df70907e00c970c60b9ef2938d894a9381f38e6b9db73c5be35e59d92e06625"},
+    {file = "MarkupSafe-2.1.2-cp311-cp311-win_amd64.whl", hash = "sha256:e55e40ff0cc8cc5c07996915ad367fa47da6b3fc091fdadca7f5403239c5fec3"},
+    {file = "MarkupSafe-2.1.2-cp37-cp37m-macosx_10_9_x86_64.whl", hash = "sha256:a6e40afa7f45939ca356f348c8e23048e02cb109ced1eb8420961b2f40fb373a"},
+    {file = "MarkupSafe-2.1.2-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:cf877ab4ed6e302ec1d04952ca358b381a882fbd9d1b07cccbfd61783561f98a"},
+    {file = "MarkupSafe-2.1.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:63ba06c9941e46fa389d389644e2d8225e0e3e5ebcc4ff1ea8506dce646f8c8a"},
+    {file = "MarkupSafe-2.1.2-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:f1cd098434e83e656abf198f103a8207a8187c0fc110306691a2e94a78d0abb2"},
+    {file = "MarkupSafe-2.1.2-cp37-cp37m-musllinux_1_1_aarch64.whl", hash = "sha256:55f44b440d491028addb3b88f72207d71eeebfb7b5dbf0643f7c023ae1fba619"},
+    {file = "MarkupSafe-2.1.2-cp37-cp37m-musllinux_1_1_i686.whl", hash = "sha256:a6f2fcca746e8d5910e18782f976489939d54a91f9411c32051b4aab2bd7c513"},
+    {file = "MarkupSafe-2.1.2-cp37-cp37m-musllinux_1_1_x86_64.whl", hash = "sha256:0b462104ba25f1ac006fdab8b6a01ebbfbce9ed37fd37fd4acd70c67c973e460"},
+    {file = "MarkupSafe-2.1.2-cp37-cp37m-win32.whl", hash = "sha256:7668b52e102d0ed87cb082380a7e2e1e78737ddecdde129acadb0eccc5423859"},
+    {file = "MarkupSafe-2.1.2-cp37-cp37m-win_amd64.whl", hash = "sha256:6d6607f98fcf17e534162f0709aaad3ab7a96032723d8ac8750ffe17ae5a0666"},
+    {file = "MarkupSafe-2.1.2-cp38-cp38-macosx_10_9_universal2.whl", hash = "sha256:a806db027852538d2ad7555b203300173dd1b77ba116de92da9afbc3a3be3eed"},
+    {file = "MarkupSafe-2.1.2-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:a4abaec6ca3ad8660690236d11bfe28dfd707778e2442b45addd2f086d6ef094"},
+    {file = "MarkupSafe-2.1.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:f03a532d7dee1bed20bc4884194a16160a2de9ffc6354b3878ec9682bb623c54"},
+    {file = "MarkupSafe-2.1.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:4cf06cdc1dda95223e9d2d3c58d3b178aa5dacb35ee7e3bbac10e4e1faacb419"},
+    {file = "MarkupSafe-2.1.2-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:22731d79ed2eb25059ae3df1dfc9cb1546691cc41f4e3130fe6bfbc3ecbbecfa"},
+    {file = "MarkupSafe-2.1.2-cp38-cp38-musllinux_1_1_aarch64.whl", hash = "sha256:f8ffb705ffcf5ddd0e80b65ddf7bed7ee4f5a441ea7d3419e861a12eaf41af58"},
+    {file = "MarkupSafe-2.1.2-cp38-cp38-musllinux_1_1_i686.whl", hash = "sha256:8db032bf0ce9022a8e41a22598eefc802314e81b879ae093f36ce9ddf39ab1ba"},
+    {file = "MarkupSafe-2.1.2-cp38-cp38-musllinux_1_1_x86_64.whl", hash = "sha256:2298c859cfc5463f1b64bd55cb3e602528db6fa0f3cfd568d3605c50678f8f03"},
+    {file = "MarkupSafe-2.1.2-cp38-cp38-win32.whl", hash = "sha256:50c42830a633fa0cf9e7d27664637532791bfc31c731a87b202d2d8ac40c3ea2"},
+    {file = "MarkupSafe-2.1.2-cp38-cp38-win_amd64.whl", hash = "sha256:bb06feb762bade6bf3c8b844462274db0c76acc95c52abe8dbed28ae3d44a147"},
+    {file = "MarkupSafe-2.1.2-cp39-cp39-macosx_10_9_universal2.whl", hash = "sha256:99625a92da8229df6d44335e6fcc558a5037dd0a760e11d84be2260e6f37002f"},
+    {file = "MarkupSafe-2.1.2-cp39-cp39-macosx_10_9_x86_64.whl", hash = "sha256:8bca7e26c1dd751236cfb0c6c72d4ad61d986e9a41bbf76cb445f69488b2a2bd"},
+    {file = "MarkupSafe-2.1.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:40627dcf047dadb22cd25ea7ecfe9cbf3bbbad0482ee5920b582f3809c97654f"},
+    {file = "MarkupSafe-2.1.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:40dfd3fefbef579ee058f139733ac336312663c6706d1163b82b3003fb1925c4"},
+    {file = "MarkupSafe-2.1.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:090376d812fb6ac5f171e5938e82e7f2d7adc2b629101cec0db8b267815c85e2"},
+    {file = "MarkupSafe-2.1.2-cp39-cp39-musllinux_1_1_aarch64.whl", hash = "sha256:2e7821bffe00aa6bd07a23913b7f4e01328c3d5cc0b40b36c0bd81d362faeb65"},
+    {file = "MarkupSafe-2.1.2-cp39-cp39-musllinux_1_1_i686.whl", hash = "sha256:c0a33bc9f02c2b17c3ea382f91b4db0e6cde90b63b296422a939886a7a80de1c"},
+    {file = "MarkupSafe-2.1.2-cp39-cp39-musllinux_1_1_x86_64.whl", hash = "sha256:b8526c6d437855442cdd3d87eede9c425c4445ea011ca38d937db299382e6fa3"},
+    {file = "MarkupSafe-2.1.2-cp39-cp39-win32.whl", hash = "sha256:137678c63c977754abe9086a3ec011e8fd985ab90631145dfb9294ad09c102a7"},
+    {file = "MarkupSafe-2.1.2-cp39-cp39-win_amd64.whl", hash = "sha256:0576fe974b40a400449768941d5d0858cc624e3249dfd1e0c33674e5c7ca7aed"},
+    {file = "MarkupSafe-2.1.2.tar.gz", hash = "sha256:abcabc8c2b26036d62d4c746381a6f7cf60aafcc653198ad678306986b09450d"},
+]
 
 [[package]]
 name = "packaging"
-version = "21.3"
+version = "23.1"
 description = "Core utilities for Python packages"
 category = "main"
 optional = false
-python-versions = ">=3.6"
-
-[package.dependencies]
-pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"
+python-versions = ">=3.7"
+files = [
+    {file = "packaging-23.1-py3-none-any.whl", hash = "sha256:994793af429502c4ea2ebf6bf664629d07c1a9fe974af92966e4b8d2df7edc61"},
+    {file = "packaging-23.1.tar.gz", hash = "sha256:a392980d2b6cffa644431898be54b0045151319d1e7ec34f0cfed48767dd334f"},
+]
 
 [[package]]
-name = "Pygments"
-version = "2.13.0"
+name = "pygments"
+version = "2.15.1"
 description = "Pygments is a syntax highlighting package written in Python."
 category = "main"
 optional = false
-python-versions = ">=3.6"
+python-versions = ">=3.7"
+files = [
+    {file = "Pygments-2.15.1-py3-none-any.whl", hash = "sha256:db2db3deb4b4179f399a09054b023b6a586b76499d36965813c71aa8ed7b5fd1"},
+    {file = "Pygments-2.15.1.tar.gz", hash = "sha256:8ace4d3c1dd481894b2005f560ead0f9f19ee64fe983366be1a21e171d12775c"},
+]
 
 [package.extras]
 plugins = ["importlib-metadata"]
 
 [[package]]
-name = "pyparsing"
-version = "3.0.9"
-description = "pyparsing module - Classes and methods to define and execute parsing grammars"
-category = "main"
-optional = false
-python-versions = ">=3.6.8"
-
-[package.extras]
-diagrams = ["jinja2", "railroad-diagrams"]
-
-[[package]]
-name = "pytz"
-version = "2022.4"
-description = "World timezone definitions, modern and historical"
-category = "main"
-optional = false
-python-versions = "*"
-
-[[package]]
 name = "requests"
-version = "2.28.1"
+version = "2.31.0"
 description = "Python HTTP for Humans."
 category = "main"
 optional = false
-python-versions = ">=3.7, <4"
+python-versions = ">=3.7"
+files = [
+    {file = "requests-2.31.0-py3-none-any.whl", hash = "sha256:58cd2187c01e70e6e26505bca751777aa9f2ee0b7f4300988b709f44e013003f"},
+    {file = "requests-2.31.0.tar.gz", hash = "sha256:942c5a758f98d790eaed1a29cb6eefc7ffb0d1cf7af05c3d2791656dbd6ad1e1"},
+]
 
 [package.dependencies]
 certifi = ">=2017.4.17"
-charset-normalizer = ">=2,<3"
+charset-normalizer = ">=2,<4"
 idna = ">=2.5,<4"
-urllib3 = ">=1.21.1,<1.27"
+urllib3 = ">=1.21.1,<3"
 
 [package.extras]
 socks = ["PySocks (>=1.5.6,!=1.5.7)"]
-use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]
-
-[[package]]
-name = "rfc3986"
-version = "1.5.0"
-description = "Validating URI References per RFC 3986"
-category = "main"
-optional = false
-python-versions = "*"
-
-[package.dependencies]
-idna = {version = "*", optional = true, markers = "extra == \"idna2008\""}
-
-[package.extras]
-idna2008 = ["idna"]
+use-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]
 
 [[package]]
 name = "setuptools"
-version = "65.4.1"
+version = "67.8.0"
 description = "Easily download, build, install, upgrade, and uninstall Python packages"
 category = "main"
 optional = false
 python-versions = ">=3.7"
+files = [
+    {file = "setuptools-67.8.0-py3-none-any.whl", hash = "sha256:5df61bf30bb10c6f756eb19e7c9f3b473051f48db77fddbe06ff2ca307df9a6f"},
+    {file = "setuptools-67.8.0.tar.gz", hash = "sha256:62642358adc77ffa87233bc4d2354c4b2682d214048f500964dbe760ccedf102"},
+]
 
 [package.extras]
-docs = ["furo", "jaraco.packaging (>=9)", "jaraco.tidelift (>=1.4)", "pygments-github-lexers (==0.0.5)", "rst.linker (>=1.9)", "sphinx (>=3.5)", "sphinx-favicon", "sphinx-hoverxref (<2)", "sphinx-inline-tabs", "sphinx-notfound-page (==0.8.3)", "sphinx-reredirects", "sphinxcontrib-towncrier"]
-testing = ["build[virtualenv]", "filelock (>=3.4.0)", "flake8 (<5)", "flake8-2020", "ini2toml[lite] (>=0.9)", "jaraco.envs (>=2.2)", "jaraco.path (>=3.2.0)", "mock", "pip (>=19.1)", "pip-run (>=8.8)", "pytest (>=6)", "pytest-black (>=0.3.7)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=1.3)", "pytest-flake8", "pytest-mypy (>=0.9.1)", "pytest-perf", "pytest-xdist", "tomli-w (>=1.0.0)", "virtualenv (>=13.0.0)", "wheel"]
+docs = ["furo", "jaraco.packaging (>=9)", "jaraco.tidelift (>=1.4)", "pygments-github-lexers (==0.0.5)", "rst.linker (>=1.9)", "sphinx (>=3.5)", "sphinx-favicon", "sphinx-hoverxref (<2)", "sphinx-inline-tabs", "sphinx-lint", "sphinx-notfound-page (==0.8.3)", "sphinx-reredirects", "sphinxcontrib-towncrier"]
+testing = ["build[virtualenv]", "filelock (>=3.4.0)", "flake8-2020", "ini2toml[lite] (>=0.9)", "jaraco.envs (>=2.2)", "jaraco.path (>=3.2.0)", "pip (>=19.1)", "pip-run (>=8.8)", "pytest (>=6)", "pytest-black (>=0.3.7)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=1.3)", "pytest-mypy (>=0.9.1)", "pytest-perf", "pytest-ruff", "pytest-timeout", "pytest-xdist", "tomli-w (>=1.0.0)", "virtualenv (>=13.0.0)", "wheel"]
 testing-integration = ["build[virtualenv]", "filelock (>=3.4.0)", "jaraco.envs (>=2.2)", "jaraco.path (>=3.2.0)", "pytest", "pytest-enabler", "pytest-xdist", "tomli", "virtualenv (>=13.0.0)", "wheel"]
 
 [[package]]
@@ -273,6 +355,10 @@ description = "Sniff out which async lib
 category = "main"
 optional = false
 python-versions = ">=3.7"
+files = [
+    {file = "sniffio-1.3.0-py3-none-any.whl", hash = "sha256:eecefdce1e5bbfb7ad2eeaabf7c1eeb404d7757c379bd1f7e5cce9d8bf425384"},
+    {file = "sniffio-1.3.0.tar.gz", hash = "sha256:e60305c5e5d314f5389259b7f22aaa33d8f7dee49763119234af3755c55b9101"},
+]
 
 [[package]]
 name = "snowballstemmer"
@@ -281,26 +367,34 @@ description = "This package provides 29
 category = "main"
 optional = false
 python-versions = "*"
+files = [
+    {file = "snowballstemmer-2.2.0-py2.py3-none-any.whl", hash = "sha256:c8e1716e83cc398ae16824e5572ae04e0d9fc2c6b985fb0f900f5f0c96ecba1a"},
+    {file = "snowballstemmer-2.2.0.tar.gz", hash = "sha256:09b16deb8547d3412ad7b590689584cd0fe25ec8db3be37788be3810cbf19cb1"},
+]
 
 [[package]]
-name = "Sphinx"
-version = "5.2.3"
+name = "sphinx"
+version = "6.2.1"
 description = "Python documentation generator"
 category = "main"
 optional = false
-python-versions = ">=3.6"
+python-versions = ">=3.8"
+files = [
+    {file = "Sphinx-6.2.1.tar.gz", hash = "sha256:6d56a34697bb749ffa0152feafc4b19836c755d90a7c59b72bc7dfd371b9cc6b"},
+    {file = "sphinx-6.2.1-py3-none-any.whl", hash = "sha256:97787ff1fa3256a3eef9eda523a63dbf299f7b47e053cfcf684a1c2a8380c912"},
+]
 
 [package.dependencies]
 alabaster = ">=0.7,<0.8"
 babel = ">=2.9"
 colorama = {version = ">=0.4.5", markers = "sys_platform == \"win32\""}
-docutils = ">=0.14,<0.20"
+docutils = ">=0.18.1,<0.20"
 imagesize = ">=1.3"
 importlib-metadata = {version = ">=4.8", markers = "python_version < \"3.10\""}
 Jinja2 = ">=3.0"
 packaging = ">=21.0"
-Pygments = ">=2.12"
-requests = ">=2.5.0"
+Pygments = ">=2.13"
+requests = ">=2.25.0"
 snowballstemmer = ">=2.0"
 sphinxcontrib-applehelp = "*"
 sphinxcontrib-devhelp = "*"
@@ -311,16 +405,20 @@ sphinxcontrib-serializinghtml = ">=1.1.5
 
 [package.extras]
 docs = ["sphinxcontrib-websupport"]
-lint = ["docutils-stubs", "flake8 (>=3.5.0)", "flake8-bugbear", "flake8-comprehensions", "flake8-simplify", "isort", "mypy (>=0.981)", "sphinx-lint", "types-requests", "types-typed-ast"]
-test = ["cython", "html5lib", "pytest (>=4.6)", "typed_ast"]
+lint = ["docutils-stubs", "flake8 (>=3.5.0)", "flake8-simplify", "isort", "mypy (>=0.990)", "ruff", "sphinx-lint", "types-requests"]
+test = ["cython", "filelock", "html5lib", "pytest (>=4.6)"]
 
 [[package]]
 name = "sphinx-intl"
-version = "2.0.1"
+version = "2.1.0"
 description = "Sphinx utility that make it easy to translate and to apply translation."
 category = "main"
 optional = false
-python-versions = ">=3.5"
+python-versions = ">=3.7"
+files = [
+    {file = "sphinx-intl-2.1.0.tar.gz", hash = "sha256:9d9849ae42515b39786824e99f1e30db0404c377b01bb022690fc932b0221c02"},
+    {file = "sphinx_intl-2.1.0-py3-none-any.whl", hash = "sha256:9798946b995989de691387651d70c3fc191275b587e2e519655541edfd7bbd68"},
+]
 
 [package.dependencies]
 babel = "*"
@@ -329,31 +427,39 @@ setuptools = "*"
 sphinx = "*"
 
 [package.extras]
-test = ["mock", "pytest"]
-transifex = ["transifex_client (>=0.11)"]
+test = ["mock", "pytest", "six"]
 
 [[package]]
 name = "sphinx-rtd-theme"
-version = "1.0.0"
+version = "1.2.0"
 description = "Read the Docs theme for Sphinx"
 category = "main"
 optional = false
-python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*"
+python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"
+files = [
+    {file = "sphinx_rtd_theme-1.2.0-py2.py3-none-any.whl", hash = "sha256:f823f7e71890abe0ac6aaa6013361ea2696fc8d3e1fa798f463e82bdb77eeff2"},
+    {file = "sphinx_rtd_theme-1.2.0.tar.gz", hash = "sha256:a0d8bd1a2ed52e0b338cbe19c4b2eef3c5e7a048769753dac6a9f059c7b641b8"},
+]
 
 [package.dependencies]
-docutils = "<0.18"
-sphinx = ">=1.6"
+docutils = "<0.19"
+sphinx = ">=1.6,<7"
+sphinxcontrib-jquery = {version = ">=2.0.0,<3.0.0 || >3.0.0", markers = "python_version > \"3\""}
 
 [package.extras]
-dev = ["bump2version", "sphinxcontrib-httpdomain", "transifex-client"]
+dev = ["bump2version", "sphinxcontrib-httpdomain", "transifex-client", "wheel"]
 
 [[package]]
 name = "sphinxcontrib-applehelp"
-version = "1.0.2"
-description = "sphinxcontrib-applehelp is a sphinx extension which outputs Apple help books"
+version = "1.0.4"
+description = "sphinxcontrib-applehelp is a Sphinx extension which outputs Apple help books"
 category = "main"
 optional = false
-python-versions = ">=3.5"
+python-versions = ">=3.8"
+files = [
+    {file = "sphinxcontrib-applehelp-1.0.4.tar.gz", hash = "sha256:828f867945bbe39817c210a1abfd1bc4895c8b73fcaade56d45357a348a07d7e"},
+    {file = "sphinxcontrib_applehelp-1.0.4-py3-none-any.whl", hash = "sha256:29d341f67fb0f6f586b23ad80e072c8e6ad0b48417db2bde114a4c9746feb228"},
+]
 
 [package.extras]
 lint = ["docutils-stubs", "flake8", "mypy"]
@@ -366,6 +472,10 @@ description = "sphinxcontrib-devhelp is
 category = "main"
 optional = false
 python-versions = ">=3.5"
+files = [
+    {file = "sphinxcontrib-devhelp-1.0.2.tar.gz", hash = "sha256:ff7f1afa7b9642e7060379360a67e9c41e8f3121f2ce9164266f61b9f4b338e4"},
+    {file = "sphinxcontrib_devhelp-1.0.2-py2.py3-none-any.whl", hash = "sha256:8165223f9a335cc1af7ffe1ed31d2871f325254c0423bc0c4c7cd1c1e4734a2e"},
+]
 
 [package.extras]
 lint = ["docutils-stubs", "flake8", "mypy"]
@@ -373,23 +483,46 @@ test = ["pytest"]
 
 [[package]]
 name = "sphinxcontrib-htmlhelp"
-version = "2.0.0"
+version = "2.0.1"
 description = "sphinxcontrib-htmlhelp is a sphinx extension which renders HTML help files"
 category = "main"
 optional = false
-python-versions = ">=3.6"
+python-versions = ">=3.8"
+files = [
+    {file = "sphinxcontrib-htmlhelp-2.0.1.tar.gz", hash = "sha256:0cbdd302815330058422b98a113195c9249825d681e18f11e8b1f78a2f11efff"},
+    {file = "sphinxcontrib_htmlhelp-2.0.1-py3-none-any.whl", hash = "sha256:c38cb46dccf316c79de6e5515e1770414b797162b23cd3d06e67020e1d2a6903"},
+]
 
 [package.extras]
 lint = ["docutils-stubs", "flake8", "mypy"]
 test = ["html5lib", "pytest"]
 
 [[package]]
+name = "sphinxcontrib-jquery"
+version = "4.1"
+description = "Extension to include jQuery on newer Sphinx releases"
+category = "main"
+optional = false
+python-versions = ">=2.7"
+files = [
+    {file = "sphinxcontrib-jquery-4.1.tar.gz", hash = "sha256:1620739f04e36a2c779f1a131a2dfd49b2fd07351bf1968ced074365933abc7a"},
+    {file = "sphinxcontrib_jquery-4.1-py2.py3-none-any.whl", hash = "sha256:f936030d7d0147dd026a4f2b5a57343d233f1fc7b363f68b3d4f1cb0993878ae"},
+]
+
+[package.dependencies]
+Sphinx = ">=1.8"
+
+[[package]]
 name = "sphinxcontrib-jsmath"
 version = "1.0.1"
 description = "A sphinx extension which renders display math in HTML via JavaScript"
 category = "main"
 optional = false
 python-versions = ">=3.5"
+files = [
+    {file = "sphinxcontrib-jsmath-1.0.1.tar.gz", hash = "sha256:a9925e4a4587247ed2191a22df5f6970656cb8ca2bd6284309578f2153e0c4b8"},
+    {file = "sphinxcontrib_jsmath-1.0.1-py2.py3-none-any.whl", hash = "sha256:2ec2eaebfb78f3f2078e73666b1415417a116cc848b72e5172e596c871103178"},
+]
 
 [package.extras]
 test = ["flake8", "mypy", "pytest"]
@@ -401,6 +534,10 @@ description = "sphinxcontrib-qthelp is a
 category = "main"
 optional = false
 python-versions = ">=3.5"
+files = [
+    {file = "sphinxcontrib-qthelp-1.0.3.tar.gz", hash = "sha256:4c33767ee058b70dba89a6fc5c1892c0d57a54be67ddd3e7875a18d14cba5a72"},
+    {file = "sphinxcontrib_qthelp-1.0.3-py2.py3-none-any.whl", hash = "sha256:bd9fc24bcb748a8d51fd4ecaade681350aa63009a347a8c14e637895444dfab6"},
+]
 
 [package.extras]
 lint = ["docutils-stubs", "flake8", "mypy"]
@@ -413,6 +550,10 @@ description = "sphinxcontrib-serializing
 category = "main"
 optional = false
 python-versions = ">=3.5"
+files = [
+    {file = "sphinxcontrib-serializinghtml-1.1.5.tar.gz", hash = "sha256:aa5f6de5dfdf809ef505c4895e51ef5c9eac17d0f287933eb49ec495280b6952"},
+    {file = "sphinxcontrib_serializinghtml-1.1.5-py2.py3-none-any.whl", hash = "sha256:352a9a00ae864471d3a7ead8d7d79f5fc0b57e8b3f95e9867eb9eb28999b92fd"},
+]
 
 [package.extras]
 lint = ["docutils-stubs", "flake8", "mypy"]
Index: onionshare-2.6/cli/onionshare_cli/web/share_mode.py
===================================================================
--- onionshare-2.6.orig/cli/onionshare_cli/web/share_mode.py
+++ onionshare-2.6/cli/onionshare_cli/web/share_mode.py
@@ -29,7 +29,7 @@ from datetime import datetime, timezone
 from flask import Response, request, render_template, make_response, abort
 from unidecode import unidecode
 from werkzeug.http import parse_date, http_date
-from werkzeug.urls import url_quote
+from urllib.parse import quote
 
 from .send_base_mode import SendBaseModeWeb
 
@@ -181,7 +181,6 @@ class ShareModeWeb(SendBaseModeWeb):
 
             # Prepare some variables to use inside generate() function below
             # which is outside of the request context
-            shutdown_func = request.environ.get("werkzeug.server.shutdown")
             request_path = request.path
 
             # If this is a zipped file, then serve as-is. If it's not zipped, then,
@@ -218,7 +217,6 @@ class ShareModeWeb(SendBaseModeWeb):
             else:
                 r = Response(
                     self.generate(
-                        shutdown_func,
                         range_,
                         file_to_download,
                         request_path,
@@ -233,7 +231,7 @@ class ShareModeWeb(SendBaseModeWeb):
             r.headers.set("Content-Length", range_[1] - range_[0] + 1)
             filename_dict = {
                 "filename": unidecode(basename),
-                "filename*": "UTF-8''%s" % url_quote(basename),
+                "filename*": "UTF-8''%s" % quote(basename),
             }
             r.headers.set("Content-Disposition", "attachment", **filename_dict)
             # guess content type
@@ -303,7 +301,7 @@ class ShareModeWeb(SendBaseModeWeb):
         return range_, status_code
 
     def generate(
-        self, shutdown_func, range_, file_to_download, path, history_id, filesize
+        self, range_, file_to_download, path, history_id, filesize
     ):
         # The user hasn't canceled the download
         self.client_cancel = False
@@ -390,9 +388,7 @@ class ShareModeWeb(SendBaseModeWeb):
             print("Stopped because transfer is complete")
             self.web.running = False
             try:
-                if shutdown_func is None:
-                    raise RuntimeError("Not running with the Werkzeug Server")
-                shutdown_func()
+                self.web.stop()
             except Exception:
                 pass
 
Index: onionshare-2.6/cli/onionshare_cli/web/web.py
===================================================================
--- onionshare-2.6.orig/cli/onionshare_cli/web/web.py
+++ onionshare-2.6/cli/onionshare_cli/web/web.py
@@ -23,7 +23,8 @@ import os
 import queue
 import requests
 import shutil
-from distutils.version import LooseVersion as Version
+from packaging.version import Version
+from waitress.server import create_server
 
 import flask
 from flask import (
@@ -35,6 +36,7 @@ from flask import (
     send_file,
     __version__ as flask_version,
 )
+from flask_compress import Compress
 from flask_socketio import SocketIO
 
 from .share_mode import ShareModeWeb
@@ -55,6 +57,12 @@ except Exception:
     pass
 
 
+class WaitressException(Exception):
+    """
+    There was a problem starting the waitress web server.
+    """
+
+
 class Web:
     """
     The Web object is the OnionShare web server, powered by flask
@@ -91,6 +99,8 @@ class Web:
         # https://github.com/onionshare/onionshare/issues/1443
         mimetypes.add_type("text/javascript", ".js")
 
+        self.waitress = None
+
         # The flask app
         self.app = Flask(
             __name__,
@@ -98,6 +108,9 @@ class Web:
             static_url_path=f"/static_{self.common.random_string(16)}",  # randomize static_url_path to avoid making /static unusable
             template_folder=self.common.get_resource_path("templates"),
         )
+        self.compress = Compress()
+        self.compress.init_app(self.app)
+
         self.app.secret_key = self.common.random_string(8)
         self.generate_static_url_path()
 
@@ -251,16 +264,6 @@ class Web:
             mode.cur_history_id += 1
             return self.error500(history_id)
 
-        @self.app.route("/<password_candidate>/shutdown")
-        def shutdown(password_candidate):
-            """
-            Stop the flask web server, from the context of an http request.
-            """
-            if password_candidate == self.shutdown_password:
-                self.force_shutdown()
-                return ""
-            abort(404)
-
         if self.mode != "website":
 
             @self.app.route("/favicon.ico")
@@ -329,25 +332,6 @@ class Web:
         log_handler.setLevel(logging.WARNING)
         self.app.logger.addHandler(log_handler)
 
-    def force_shutdown(self):
-        """
-        Stop the flask web server, from the context of the flask app.
-        """
-        # Shutdown the flask service
-        try:
-            func = request.environ.get("werkzeug.server.shutdown")
-            if func is None and self.mode != "chat":
-                raise RuntimeError("Not running with the Werkzeug Server")
-            func()
-        except Exception:
-            pass
-
-        self.running = False
-
-        # If chat, shutdown the socket server
-        if self.mode == "chat":
-            self.socketio.stop()
-
     def start(self, port):
         """
         Start the flask web server.
@@ -371,7 +355,17 @@ class Web:
         if self.mode == "chat":
             self.socketio.run(self.app, host=host, port=port)
         else:
-            self.app.run(host=host, port=port, threaded=True)
+            try:
+                self.waitress = create_server(
+                    self.app,
+                    host=host,
+                    port=port,
+                    clear_untrusted_proxy_headers=True,
+                    ident="OnionShare",
+                )
+                self.waitress.run()
+            except Exception as e:
+                raise WaitressException(f"Error starting Waitress: {e}")
 
     def stop(self, port):
         """
@@ -382,21 +376,12 @@ class Web:
         # Let the mode know that the user stopped the server
         self.stop_q.put(True)
 
-        # To stop flask, load http://shutdown:[shutdown_password]@127.0.0.1/[shutdown_password]/shutdown
-        # (We're putting the shutdown_password in the path as well to make routing simpler)
-        if self.running:
-            try:
-                requests.get(
-                    f"http://127.0.0.1:{port}/{self.shutdown_password}/shutdown"
-                )
-            except requests.exceptions.ConnectionError as e:
-                # The way flask-socketio stops a connection when running using
-                # eventlet is by raising SystemExit to abort all the processes.
-                # Hence the connections are closed and no response is returned
-                # to the above request. So I am just catching the ConnectionError
-                # to check if it was chat mode, in which case it's okay
-                if self.mode != "chat":
-                    raise e
+        # If in chat mode, shutdown the socket server rather than Waitress.
+        if self.mode == "chat":
+            self.socketio.stop()
+
+        if self.waitress:
+            self.waitress_custom_shutdown()
 
     def cleanup(self):
         """
@@ -409,3 +394,14 @@ class Web:
             dir.cleanup()
 
         self.cleanup_tempdirs = []
+
+    def waitress_custom_shutdown(self):
+        """Shutdown the Waitress server immediately"""
+        # Code borrowed from https://github.com/Pylons/webtest/blob/4b8a3ebf984185ff4fefb31b4d0cf82682e1fcf7/webtest/http.py#L93-L104
+        while self.waitress._map:
+            triggers = list(self.waitress._map.values())
+            for trigger in triggers:
+                trigger.handle_close()
+        self.waitress.maintenance(0)
+        self.waitress.task_dispatcher.shutdown()
+        return True
Index: onionshare-2.6/desktop/onionshare/threads.py
===================================================================
--- onionshare-2.6.orig/desktop/onionshare/threads.py
+++ onionshare-2.6/desktop/onionshare/threads.py
@@ -39,6 +39,8 @@ from onionshare_cli.onion import (
     PortNotAvailable,
 )
 
+from onionshare_cli.web.web import WaitressException
+
 from . import strings
 
 
@@ -62,9 +64,6 @@ class OnionThread(QtCore.QThread):
     def run(self):
         self.mode.common.log("OnionThread", "run")
 
-        # Make a new static URL path for each new share
-        self.mode.web.generate_static_url_path()
-
         # Choose port early, because we need them to exist in advance for scheduled shares
         if not self.mode.app.port:
             self.mode.app.choose_port()
@@ -86,7 +85,6 @@ class OnionThread(QtCore.QThread):
                 # wait for modules in thread to load, preventing a thread-related cx_Freeze crash
                 time.sleep(0.2)
                 # start onionshare http service in new thread
-                self.mode.web_thread = WebThread(self.mode)
                 self.mode.web_thread.start()
                 self.success.emit()
 
@@ -125,9 +123,14 @@ class WebThread(QtCore.QThread):
 
     def run(self):
         self.mode.common.log("WebThread", "run")
-        self.mode.web.start(self.mode.app.port)
-        self.success.emit()
-
+        try:
+            self.mode.web.start(self.mode.app.port)
+            self.success.emit()
+        except WaitressException as e:
+            message = self.mode.common.gui.get_translated_web_error(e)
+            self.mode.common.log("WebThread", "run", message)
+            self.error.emit(message)
+            return
 
 class AutoStartTimer(QtCore.QThread):
     """
Index: onionshare-2.6/flatpak/org.onionshare.OnionShare.yaml
===================================================================
--- onionshare-2.6.orig/flatpak/org.onionshare.OnionShare.yaml
+++ onionshare-2.6/flatpak/org.onionshare.OnionShare.yaml
@@ -381,6 +381,9 @@ modules:
                 url: https://files.pythonhosted.org/packages/fc/34/3030de6f1370931b9dbb4dad48f6ab1015ab1d32447850b9fc94e60097be/idna-3.4-py3-none-any.whl
                 sha256: 90b77e79eaa3eba6de819a0c442c0b4ceefc341a7a2ab77d7562bf49f425c5c2
               - type: file
+                url: https://files.pythonhosted.org/packages/30/bb/bf2944b8b88c65b797acc2c6a2cb0fb817f7364debf0675792e034013858/importlib_metadata-6.6.0-py3-none-any.whl
+                sha256: 43dd286a2cd8995d5eaef7fee2066340423b818ed3fd70adf0bad5f1fac53fed
+              - type: file
                 url: https://files.pythonhosted.org/packages/a0/a1/b153a0a4caf7a7e3f15c2cd56c7702e2cf3d89b1b359d1f1c5e59d68f4ce/importlib_metadata-4.8.3-py3-none-any.whl
                 sha256: 65a9576a5b2d58ca44d133c42a241905cc45e34d2c06fd5ba2bafa221e5d7b5e
               - type: file
Index: onionshare-2.6/snap/snapcraft.yaml
===================================================================
--- onionshare-2.6.orig/snap/snapcraft.yaml
+++ onionshare-2.6/snap/snapcraft.yaml
@@ -176,7 +176,9 @@ parts:
       colorama
       gevent-websocket
       stem==1.8.1
-      werkzeug==2.0.3
+      werkzeug==2.3.4
+      flask-compress
+      waitress
       # onionshare
       qrcode
       EOF
Index: onionshare-2.6/.github/workflows/tests.yml
===================================================================
--- onionshare-2.6.orig/.github/workflows/tests.yml
+++ onionshare-2.6/.github/workflows/tests.yml
@@ -23,10 +23,10 @@ jobs:
       - run: |
           cd cli
           poetry run pytest -v ./tests
-          poetry run onionshare-cli --local-only ./tests --auto-stop-timer 2
-          poetry run onionshare-cli --local-only --receive --auto-stop-timer 2
-          poetry run onionshare-cli --local-only --website ../docs --auto-stop-timer 2
-          poetry run onionshare-cli --local-only --chat --auto-stop-timer 2
+          poetry run onionshare-cli --local-only ./tests --auto-stop-timer 2 --verbose
+          poetry run onionshare-cli --local-only --receive --auto-stop-timer 2 --verbose
+          poetry run onionshare-cli --local-only --website ../docs --auto-stop-timer 2 --verbose
+          poetry run onionshare-cli --local-only --chat --auto-stop-timer 5 --verbose
 
   test-desktop:
     runs-on: ubuntu-latest
Index: onionshare-2.6/cli/onionshare_cli/web/send_base_mode.py
===================================================================
--- onionshare-2.6.orig/cli/onionshare_cli/web/send_base_mode.py
+++ onionshare-2.6/cli/onionshare_cli/web/send_base_mode.py
@@ -25,7 +25,7 @@ import mimetypes
 import gzip
 from flask import Response, request
 from unidecode import unidecode
-from werkzeug.urls import url_quote
+from urllib.parse import quote
 
 
 class SendBaseModeWeb:
@@ -284,7 +284,7 @@ class SendBaseModeWeb:
         r.headers.set("Content-Length", filesize)
         filename_dict = {
             "filename": unidecode(basename),
-            "filename*": "UTF-8''%s" % url_quote(basename),
+            "filename*": "UTF-8''%s" % quote(basename),
         }
         r.headers.set("Content-Disposition", "inline", **filename_dict)
         (content_type, _) = mimetypes.guess_type(basename, strict=False)
Index: onionshare-2.6/desktop/tests/gui_base_test.py
===================================================================
--- onionshare-2.6.orig/desktop/tests/gui_base_test.py
+++ onionshare-2.6/desktop/tests/gui_base_test.py
@@ -58,6 +58,13 @@ class GuiBaseTest(unittest.TestCase):
                 "<html><body><p>This is a test website hosted by OnionShare</p></body></html>"
             )
 
+        # A file called "test.html"
+        cls.tmpfile_test_html = os.path.join(cls.tmpdir.name, "test.html")
+        with open(cls.tmpfile_test_html, "w") as file:
+            file.write(
+                "<html><body><p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</p></body></html>"
+            )
+
         # A large file
         size = 1024 * 1024 * 155
         cls.tmpfile_large = os.path.join(cls.tmpdir.name, "large_file")
Index: onionshare-2.6/desktop/tests/test_gui_share.py
===================================================================
--- onionshare-2.6.orig/desktop/tests/test_gui_share.py
+++ onionshare-2.6/desktop/tests/test_gui_share.py
@@ -541,3 +541,30 @@ class TestShare(GuiBaseTest):
         self.hit_405(url, expected_resp="OnionShare: 405 Method Not Allowed", data = {'foo':'bar'}, methods = ["put", "post", "delete", "options"])
         self.history_widgets_present(tab)
         self.close_all_tabs()
+
+
+    def test_compression(self):
+        """
+        A file with a compressable mimetype should return a Content-Encoding header
+        with gzip compression enabled.
+        """
+        tab = self.new_share_tab()
+        tab.get_mode().autostop_sharing_checkbox.click()
+
+        self.run_all_common_setup_tests()
+        self.run_all_share_mode_setup_tests(tab)
+        tab.get_mode().mode_settings_widget.public_checkbox.click()
+        tab.get_mode().remove_all_button.click()
+        tab.get_mode().server_status.file_selection.file_list.add_file(
+            self.tmpfile_test_html
+        )
+        self.run_all_share_mode_started_tests(tab)
+        url = f"http://127.0.0.1:{tab.app.port}/test.html"
+        r = requests.get(url)
+        self.assertTrue("Content-Encoding" in r.headers)
+        self.assertEqual("gzip", r.headers["Content-Encoding"])
+
+        self.server_is_stopped(tab)
+        self.web_server_is_stopped(tab)
+        self.server_status_indicator_says_closed(tab)
+        self.close_all_tabs()
Index: onionshare-2.6/desktop/onionshare/gui_common.py
===================================================================
--- onionshare-2.6.orig/desktop/onionshare/gui_common.py
+++ onionshare-2.6/desktop/onionshare/gui_common.py
@@ -41,7 +41,7 @@ from onionshare_cli.onion import (
     PortNotAvailable,
 )
 from onionshare_cli.meek import Meek
-
+from onionshare_cli.web.web import WaitressException
 
 class GuiCommon:
     """
@@ -581,6 +581,13 @@ class GuiCommon:
             return strings._("error_port_not_available")
         return None
 
+    @staticmethod
+    def get_translated_web_error(e):
+        """
+        Takes an exception defined in web.py and returns a translated error message
+        """
+        if type(e) is WaitressException:
+            return strings._("waitress_web_server_error")
 
 class ToggleCheckbox(QtWidgets.QCheckBox):
     def __init__(self, text):
Index: onionshare-2.6/desktop/onionshare/resources/locale/en.json
===================================================================
--- onionshare-2.6.orig/desktop/onionshare/resources/locale/en.json
+++ onionshare-2.6/desktop/onionshare/resources/locale/en.json
@@ -252,5 +252,6 @@
     "moat_bridgedb_error": "Could not contact BridgeDB.",
     "moat_captcha_error": "Incorrect solution. Please try again.",
     "moat_solution_empty_error": "Enter the characters from the image",
-    "mode_tor_not_connected_label": "OnionShare is not connected to the Tor network"
+    "mode_tor_not_connected_label": "OnionShare is not connected to the Tor network",
+    "waitress_web_server_error": "There was a problem starting the web server"
 }
Index: onionshare-2.6/desktop/onionshare/tab/mode/__init__.py
===================================================================
--- onionshare-2.6.orig/desktop/onionshare/tab/mode/__init__.py
+++ onionshare-2.6/desktop/onionshare/tab/mode/__init__.py
@@ -27,7 +27,7 @@ from .mode_settings_widget import ModeSe
 
 from ..server_status import ServerStatus
 from ... import strings
-from ...threads import OnionThread, AutoStartTimer
+from ...threads import OnionThread, WebThread, AutoStartTimer
 from ...widgets import Alert, MinimumSizeWidget
 
 
@@ -294,6 +294,8 @@ class Mode(QtWidgets.QWidget):
             self.onion_thread.success.connect(self.starting_server_step2.emit)
             self.onion_thread.success_early.connect(self.starting_server_early.emit)
             self.onion_thread.error.connect(self.starting_server_error.emit)
+            self.web_thread = WebThread(self)
+            self.web_thread.error.connect(self.starting_server_error.emit)
             self.onion_thread.start()
 
     def start_scheduled_service(self, obtain_onion_early=False):
