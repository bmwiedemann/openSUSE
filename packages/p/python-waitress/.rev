<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>7a9825ccfd6ff85ea5a07ee6467c05f9</srcmd5>
    <version>0.8.3</version>
    <time>1367559621</time>
    <user>coolo</user>
    <comment></comment>
    <requestid>174305</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>0854c0d3703443f7635c80ae2ff032b8</srcmd5>
    <version>0.8.5</version>
    <time>1372509403</time>
    <user>coolo</user>
    <comment>- update to 0.8.5:
 - Fix runner multisegment imports in some Python 2 revisions (see
   https://github.com/Pylons/waitress/pull/34).
 - For compatibility, WSGIServer is now an alias of TcpWSGIServer. The
   signature of BaseWSGIServer is now compatible with WSGIServer pre-0.8.4.
 - Add a command-line runner called ``waitress-serve`` to allow Waitress
   to run WSGI applications without any addional machinery. This is
   essentially a thin wrapper around the ``waitress.serve()`` function.
 - Allow parallel testing (e.g., under ``detox`` or ``nosetests --processes``)
   using PID-dependent port / socket for functest servers.
 - Fix integer overflow errors on large buffers. Thanks to Marcin Kuzminski
   for the patch.  See: https://github.com/Pylons/waitress/issues/22
 - Add support for listening on Unix domain sockets. (forwarded request 180848 from dirkmueller)</comment>
    <requestid>180862</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>624f0fbb70d962142ffd3e00977be58a</srcmd5>
    <version>0.8.6</version>
    <time>1376562621</time>
    <user>scarabeus_factory</user>
    <comment>- update to 0.8.6:
 - Do alternate type of checking for UNIX socket support, instead of checking
   for platform == windows.
 
 - Functional tests now use multiprocessing module instead of subprocess module,
   speeding up test suite and making concurrent execution more reliable.
 
 - Runner now appends the current working directory to ``sys.path`` to support
   running WSGI applications from a directory (i.e., not installed in a
   virtualenv). (forwarded request 186925 from saschpe)</comment>
    <requestid>186944</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>adf6b1daa7874357b55a0980122ed989</srcmd5>
    <version>0.8.7</version>
    <time>1379076381</time>
    <user>scarabeus_factory</user>
    <comment>- update to 0.8.7:
  - The HTTP version of the response returned by waitress when it catches an
  exception will now match the HTTP request version.
  - Fix: CONNECTION header will be HTTP_CONNECTION and not CONNECTION_TYPE
  (see https://github.com/Pylons/waitress/issues/13) (forwarded request 198597 from dirkmueller)</comment>
    <requestid>198878</requestid>
  </revision>
  <revision rev="5" vrev="3">
    <srcmd5>adf6b1daa7874357b55a0980122ed989</srcmd5>
    <version>0.8.7</version>
    <time>1379664310</time>
    <user>adrianSuSE</user>
    <comment>Split 13.1 from Factory</comment>
  </revision>
  <revision rev="6" vrev="5">
    <srcmd5>adf6b1daa7874357b55a0980122ed989</srcmd5>
    <version>0.8.7</version>
    <time>1409303019</time>
    <user>adrianSuSE</user>
    <comment>Split 13.2 from Factory</comment>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>1bb624be94ed98e3f1121980a797520a</srcmd5>
    <version>0.8.9</version>
    <time>1418737722</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>265068</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>d646b7c86f66cc24e6fa311d2976b7ea</srcmd5>
    <version>0.9.0</version>
    <time>1464484403</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>398357</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>6d8c8c29eb1fc463c64a71ad7a81aca2</srcmd5>
    <version>1.0.1</version>
    <time>1479299603</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>440450</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>d50cd71e5c9e23ed6fbcadce89b47dd2</srcmd5>
    <version>1.0.2</version>
    <time>1494262999</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>493201</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>23c3ade887b913a89ba3ddbf80678c48</srcmd5>
    <version>1.1.0</version>
    <time>1508316845</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>534388</requestid>
  </revision>
  <revision rev="12" vrev="2">
    <srcmd5>d5841730dc93db0d43cd61be0b85bc5f</srcmd5>
    <version>1.1.0</version>
    <time>1545648359</time>
    <user>dimstar_suse</user>
    <comment>Remove superfluous devel dependency for noarch package</comment>
    <requestid>659749</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>cc8519c95eae71309abebf4988b75f1e</srcmd5>
    <version>1.2.1</version>
    <time>1551468522</time>
    <user>coolo</user>
    <comment>- Add fetch-intersphinx-inventories.sh to sources
- Add local-intersphinx-inventories.patch for generating the docs
  correctly

- update to version 1.2.1:
  too many changes to list here, see:
  https://github.com/Pylons/waitress/blob/master/CHANGES.txt
  or even:
  https://github.com/Pylons/waitress/commits/master</comment>
    <requestid>679188</requestid>
  </revision>
  <revision rev="14" vrev="2">
    <srcmd5>3ae40de08dabb3b69846076d02c1330d</srcmd5>
    <version>1.2.1</version>
    <time>1553888180</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>687121</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>2ba136b8b3d668b385961178e31478d7</srcmd5>
    <version>1.3.0</version>
    <time>1557263574</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>701058</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>db1d1cc90503fbbd17fd41bdd01033cb</srcmd5>
    <version>1.3.1</version>
    <time>1567580206</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>727098</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>41812e7eed887ce20c41c0caed58d228</srcmd5>
    <version>1.4.0</version>
    <time>1577887055</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.4.0:
  - Waitress used to slam the door shut on HTTP pipelined requests without
  setting the ``Connection: close`` header as appropriate in the response. This
  is of course not very friendly. Waitress now explicitly sets the header when
  responding with an internally generated error such as 400 Bad Request or 500
  Internal Server Error to notify the remote client that it will be closing the
  connection after the response is sent.
  - Waitress no longer allows any spaces to exist between the header field-name
  and the colon. While waitress did not strip the space and thereby was not
  vulnerable to any potential header field-name confusion, it should have sent
  back a 400 Bad Request. See https://github.com/Pylons/waitress/issues/273
  - CRLR handling Security fixes</comment>
    <requestid>758618</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>ebe18d2d166ee9144d467bcecfb368f4</srcmd5>
    <version>1.4.3</version>
    <time>1581801788</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>770684</requestid>
  </revision>
  <revision rev="19" vrev="2">
    <srcmd5>6c8868ee379c2e36b1cf5b51bbabbab8</srcmd5>
    <version>1.4.3</version>
    <time>1590649645</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>806803</requestid>
  </revision>
  <revision rev="20" vrev="3">
    <srcmd5>5f7f9b9b93b603640850afbc69251b91</srcmd5>
    <version>1.4.3</version>
    <time>1592938980</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>815873</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>1d0d9dfc8828288da0bb561f67ca84f6</srcmd5>
    <version>1.4.4</version>
    <time>1603961186</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>839291</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>4a76b3eb74733efdab55a32525a62f38</srcmd5>
    <version>2.0.0</version>
    <time>1631042020</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>916725</requestid>
  </revision>
  <revision rev="23" vrev="2">
    <srcmd5>6b59b200671105ab62d64847549da9e6</srcmd5>
    <version>2.0.0</version>
    <time>1636498435</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>929842</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>3a8d337aa84ec7dec7385c760f3831ca</srcmd5>
    <version>2.1.1</version>
    <time>1647806109</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.1.1 (bsc#1197255, CVE-2022-24761):
  * Waitress now validates that chunked encoding extensions are valid, and donâ€™t
    contain invalid characters that are not allowed. They are still skipped/not
    processed, but if they contain invalid data we no longer continue in and return
    a 400 Bad Request. This stops potential HTTP desync/HTTP request smuggling.
    Thanks to Zhang Zeyu for reporting this issue. See
    https://github.com/Pylons/waitress/security/advisories/GHSA-4f7p-27jc-3c36
  * Waitress now validates that the chunk length is only valid hex digits when
    parsing chunked encoding, and values such as 0x01 and +01 are no longer
    supported. This stops potential HTTP desync/HTTP request smuggling. Thanks
    to Zhang Zeyu for reporting this issue. See
    https://github.com/Pylons/waitress/security/advisories/GHSA-4f7p-27jc-3c36
  * Waitress now validates that the Content-Length sent by a remote contains only
    digits in accordance with RFC7230 and will return a 400 Bad Request when the
    Content-Length header contains invalid data, such as +10 which would
    previously get parsed as 10 and accepted. This stops potential HTTP
    desync/HTTP request smuggling Thanks to Zhang Zeyu for reporting this issue.
    See
    https://github.com/Pylons/waitress/security/advisories/GHSA-4f7p-27jc-3c36</comment>
    <requestid>962909</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>4765284ee2e2b1d29407503c9a81d19d</srcmd5>
    <version>2.1.2</version>
    <time>1654097650</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>980052</requestid>
  </revision>
  <revision rev="26" vrev="2">
    <srcmd5>e6d37af1ddf7f033a075704f3f279406</srcmd5>
    <version>2.1.2</version>
    <time>1661020055</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>998078</requestid>
  </revision>
  <revision rev="27" vrev="3">
    <srcmd5>bdce79e2e4e79ef6ade3de509229a7f8</srcmd5>
    <version>2.1.2</version>
    <time>1663598378</time>
    <user>dimstar_suse</user>
    <comment>- update to version 2.1.2 (bsc#1200126, CVE-2022-31015):</comment>
    <requestid>1004640</requestid>
  </revision>
  <revision rev="28" vrev="4">
    <srcmd5>f2a390fdc658e6e294b9902934306ec5</srcmd5>
    <version>2.1.2</version>
    <time>1683212985</time>
    <user>dimstar_suse</user>
    <comment>- Use sphinx-build and do not depend on removed build_sphinx
  in Sphinx 7.0 (boo#1211051).

- add sle15_python_module_pythons (jsc#PED-68)</comment>
    <requestid>1084290</requestid>
  </revision>
  <revision rev="29" vrev="5">
    <srcmd5>83a28dbd6f15dd1eed91424e580f6c16</srcmd5>
    <version>2.1.2</version>
    <time>1686927116</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1093051</requestid>
  </revision>
  <revision rev="30" vrev="6">
    <srcmd5>2d6bdef621f764b9f15f34450d450cdd</srcmd5>
    <version>2.1.2</version>
    <time>1690469408</time>
    <user>anag+factory</user>
    <comment>Forwarded request #1100756 from bmwiedemann

Drop sphinx doctrees for reproducible builds</comment>
    <requestid>1100878</requestid>
  </revision>
</revisionlist>
