From cf91a25dfec11db5bcce3dde3c92331e9d913f0f Mon Sep 17 00:00:00 2001
From: Marius Tomaschewski <mt@suse.de>
Date: Mon, 7 Feb 2022 14:10:46 +0100
Subject: [PATCH 22/27] split scanhcn function into nm+wicked variants

---
 scripts/hcnmgr | 112 ++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 111 insertions(+), 1 deletion(-)

diff --git a/scripts/hcnmgr b/scripts/hcnmgr
index cc38a6a..a31e096 100644
--- a/scripts/hcnmgr
+++ b/scripts/hcnmgr
@@ -692,7 +692,7 @@ scanhcn_cleanup_old_hnv_nm() {
 #	ibm,hcn-id, if the hybrid network has not been created, create HCN
 #	(active-backup bonding) for them.
 #
-scanhcn() {
+scanhcn_nm() {
 	local HcnIds=()
 
 	hcnlog DEBUG "scanhcn: on boot scan for hybrid virtual network starts"
@@ -773,6 +773,116 @@ scanhcn() {
 
 	hcnlog DEBUG "scanhcn: scan for hybrid virtual network finished"
 }
+scanhcn_wicked() {
+	local hcnids=()
+	local -A hcn_devs hcn_primary
+	local file dev
+
+	hcnlog DEBUG "scanhcn: on boot scan for hybrid virtual network starts"
+
+	hcnlog DEBUG "search sr_iov device with ibm,hcn-id propterty......"
+	# Look at pci ethernet devices for SR_IOV VFs with ibm,hcn-id propterty
+	# join or Create bond for this hcnid if not exist, add SR-IOVs as primary
+	# slave for this bond accosiated with hcnid, if not already to
+	for pci_dev in "$DT_PATH"/pci*; do
+		[ -d "$pci_dev" ] || continue
+		for dev in "$pci_dev"/ethernet*; do
+			[ -d "$dev" ] || continue
+			if [ -e "$dev"/ibm,hcn-id ] && get_dev_hcn "$dev"; then
+				hcnlog DEBUG "scanhcn found $MODE sr-iov device $DEVNAME with hcnid  $HCNID"
+				# Collect what we have found
+				hcnids=($(suse_wlist_uniq ${hcnids[*]} $HCNID))
+				hcn_devs[$HCNID]=$(suse_wlist_uniq ${hcn_devs[$HCNID]} $DEVNAME)
+				[ "X$MODE" = "Xprimary" ] && hcn_primary[$HCNID]="$DEVNAME"
+			fi
+		done
+	done
+
+	hcnlog DEBUG "search ibmveth device with ibm,hcn-id propterty......"
+	# Look at every vNIC device with ibm,hcn-id propterty
+	# join or create bond for this hcnid if not exist, add vnic device as
+	# slave for this bond accosiated with hcnid, if not already to
+	for dev in "$DT_PATH"/vdevice/l-lan*; do
+		[ -d "$dev" ] || continue
+		if [ -e "$dev"/ibm,hcn-id ] && get_dev_hcn "$dev"; then
+			hcnlog DEBUG "scanhcn found $MODE veth device $DEVNAME with hcnid $HCNID"
+			# Collect what we have found
+			hcnids=($(suse_wlist_uniq ${hcnids[*]} $HCNID))
+			hcn_devs[$HCNID]=$(suse_wlist_uniq ${hcn_devs[$HCNID]} $DEVNAME)
+			[ "X$MODE" = "Xprimary" ] && hcn_primary[$HCNID]="$DEVNAME"
+		fi
+	done
+
+	hcnlog DEBUG "search vnic device with ibm,hcn-id propterty......"
+	# Look at every vNIC device with ibm,hcn-id propterty
+	# join or create bond for this hcnid if not exist, add vnic device as
+	# slave for this bond accosiated with hcnid, if not already to
+	for dev in "$DT_PATH"/vdevice/vnic*; do
+		[ -d "$dev" ] || continue
+		if [ -e "$dev"/ibm,hcn-id ] && get_dev_hcn "$dev"; then
+			hcnlog DEBUG "scanhcn found $MODE vnic device $DEVNAME with hcnid $HCNID"
+			# Collect what we have found
+			hcnids=($(suse_wlist_uniq ${hcnids[*]} $HCNID))
+			hcn_devs[$HCNID]=$(suse_wlist_uniq ${hcn_devs[$HCNID]} $DEVNAME)
+			[ "X$MODE" = "Xprimary" ] && hcn_primary[$HCNID]="$DEVNAME"
+		fi
+	done
+
+	# TODO: delete orphan bond$HCNID configs ... test -- can this happen? :
+	#	when the LPAR has been shut down, the configuration changes then,
+	#	e.g. from: bond$HCNID_old { eth0, eth1 }
+	#	     into: bond$HCNID_new { eth0, eth2 }
+	#	                            ^^^^
+	#     	there is still a config for bond$HCNID_old that we need to remove
+	#	(at boot) _before_ we can setup bond$HCNID_new as the new bond is
+	#	(re)using one slave device of the old bond..
+	#	This requires to know which bond is managed via HCN and we may need
+	#	to mark or remember the hcn managed bonds...
+
+	# (Re)configure all bonds
+	for hcnid in "${hcnids[@]}" ; do
+		local bond="bond$hcnid"
+		local primary="${hcn_primary[$HCNID]}"
+		local devices="${hcn_devs[$HCNID]}"
+
+		hcnlog INFO "scanhcn configure HCN $bond with devices '$devices'"
+		if suse_ifcfg_bond_modify "$bond" "$devices" ; then
+			hcnlog INFO "scanhcn configured bond '$bond' config with devices '$devices'"
+		else
+			hcnlog INFO "scanhcn failed to configure bond '$bond' with devices '$devices'"
+			continue
+		fi
+		if suse_ifcfg_bond_set_primary "$bond" "$primary" ; then
+			hcnlog INFO "scanhcn adjusted bond '$bond' config primary to '$primary'"
+		else
+			hcnlog INFO "scanhcn failed to adjust bond '$bond' config primary to '$primary'"
+		fi
+		echo "* $bond config:"
+		cat $(suse_ifcfg_file_name "$bond")
+
+		if systemctl is-active -q wicked.service ; then
+			hcnlog INFO "scanhcn reloading HCN bonding: $bond"
+			wicked ifreload "$bond"
+		else
+			hcnlog INFO "scanhcn omits HCN bondings reload due to inactive network"
+			# at boot, hcn-init.service adjusts the configuration and
+			# the wicked.service starting after sets up the bondings.
+		fi
+	done
+
+	hcnlog DEBUG "scanhcn: scan for hybrid virtual network finished"
+	return $E_SUCCESS
+}
+scanhcn() {
+	case $SERVICE in
+		NetworkManager.service)
+			scanhcn_nm
+			;;
+		wicked.service)
+			scanhcn_wicked
+			;;
+	esac
+}
 
 # function check_network_service
 #	Check what connection manager is used
-- 
2.34.1

