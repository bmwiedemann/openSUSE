<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>38ba21b154b3aa5556620f0ace8cc622</srcmd5>
    <version>2.3.2</version>
    <time>1527583050</time>
    <user>dimstar_suse</user>
    <comment>- update to version 2.3.2:
  * Don't mask the parent table for single-table inheritance
    models. (#561)
- specfile:
  * increased SQLAlchemy dependency to &gt;= 0.8
  * changed from nose to pytest
  * added fdupes to remove some rpmlint warnings
- update to version 2.3.1:
  * If a model has a table name that matches an existing table in the
    metadata, use that table. Fixes a regression where reflected
    tables were not picked up by models. (#551)
  * Raise the correct error when a model has a table name but no
    primary key. (#556)
  * Fix repr on models that don't have an identity because they have
    not been flushed yet. (#555)
  * Allow specifying a max_per_page limit for pagination, to avoid
    users specifying high values in the request args. (#542)
  * For paginate with error_out=False, the minimum value for page is 1
    and per_page is 0. (#558)
- changes from version 2.3.0:
  * Multiple bugs with __tablename__ generation are fixed. Names will
    be generated for models that define a primary key, but not for
    single-table inheritance subclasses. Names will not override a
    declared_attr. PrimaryKeyConstraint is detected. (#541)
  * Passing an existing declarative_base() as model_class to
    SQLAlchemy.__init__ will use this as the base class instead of
    creating one. This allows customizing the metaclass used to
    construct the base. (#546)
  * The undocumented DeclarativeMeta internals that the extension uses
    for binds and table name generation have been refactored to work
    as mixins. Documentation is added about how to create a custom
    metaclass that does not do table name generation. (#546)
  * Model and metaclass code has been moved to a new models
    module. _BoundDeclarativeMeta is renamed to DefaultMeta; the old
    name will be removed in 3.0. (#546)
  * Models have a default repr that shows the model name and primary
    key. (#530)
  * Fixed a bug where using init_app would cause connectors to always
    use the current_app rather than the app they were created
    for. This caused issues when multiple apps were registered with
    the extension. (#547)
- changes from version 2.2:
  * Minimum SQLAlchemy version is 0.8 due to use of
    sqlalchemy.inspect.
  * Added support for custom query_class and model_class as args to
    the SQLAlchemy constructor. (#328)
  * Allow listening to SQLAlchemy events on db.session. (#364)
  * Allow __bind_key__ on abstract models. (#373)
  * Allow SQLALCHEMY_ECHO to be a string. (#409)
  * Warn when SQLALCHEMY_DATABASE_URI is not set. (#443)
  * Don't let pagination generate invalid page numbers. (#460)
  * Drop support of Flask &lt; 0.10. This means the db session is always
    tied to the app context and its teardown event. (#461)
  * Tablename generation logic no longer accesses class properties
    unless they are declared_attr. (#467)
- convert to single spec
- update copyright
- Update to Version 2.1
  - Table names are automatically generated in more cases, including
    subclassing mixins and abstract models.
  - Allow using a custom MetaData object.
  - Add support for binds parameter to session.
- Update to Version 2.0
  - Changed how the builtin signals are subscribed to skip non Flask-SQLAlchemy
    sessions.  This will also fix the attribute error about model changes
    not existing.
  - Added a way to control how signals for model modifications are tracked.
  - Made the ``SignallingSession`` a public interface and added a hook
    for customizing session creation.
  - If the ``bind`` parameter is given to the signalling session it will no
    longer cause an error that a parameter is given twice.
  - Added working table reflection support.
  - Enabled autoflush by default.
  - Consider ``SQLALCHEMY_COMMIT_ON_TEARDOWN`` harmful and remove from docs.
- Update to Version 1.0
  - Added Python 3.3 support.
  - Dropped 2.5 compatibility.
  - Various bugfixes
  - Changed versioning format to do major releases for each update now.
- Require python-setuptools instead of distribute (upstreams merged)
- Update to version 0.16:
  + New distribution format (flask_sqlalchemy)
  + Added support for Flask 0.9 specifics.
- Fix bnc#732325
- Update to version 0.15:
  + Added session support for multiple databases
- Initial version
</comment>
    <requestid>611046</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>c9443d91dd5fb1a181b11da7d7ef89cb</srcmd5>
    <version>2.4.0</version>
    <time>1557263900</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>701092</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>f52dc39c4b521a2a059e53105ef40526</srcmd5>
    <version>2.4.1</version>
    <time>1569523651</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>733496</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>8ac65714f177b0935f6994869eefc9b3</srcmd5>
    <version>2.4.3</version>
    <time>1591101480</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>810457</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>74cd129cfb26438c9ea6a8fca488b207</srcmd5>
    <version>2.4.4</version>
    <time>1595577460</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>822157</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>949dd058c468d9deb119dd98ea78dba3</srcmd5>
    <version>2.5.1</version>
    <time>1622536807</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>896577</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>e49324b3530ad2e9c765118ced041e93</srcmd5>
    <version>2.5.1</version>
    <time>1646349474</time>
    <user>dimstar_suse</user>
    <comment>- Work around test suite failure inside OBS: BuildRequire krb5.
  krb5 is a dependency to python (via tirpc), and inside OBS we get
  a slightly limited version of it as krb5-mini. The test suite of
  this package fails to pass with the mini flavor though. As -mini
  is never offered to actual users, we can get away with this
  workaround.
</comment>
    <requestid>958744</requestid>
  </revision>
  <revision rev="8" vrev="3">
    <srcmd5>59276e91b5ba667873fa822433caf052</srcmd5>
    <version>2.5.1</version>
    <time>1652801086</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>977759</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>a42a7ad703178d86403170a1dcd420b9</srcmd5>
    <version>3.0.2</version>
    <time>1670162299</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1039834</requestid>
  </revision>
  <revision rev="10" vrev="2">
    <srcmd5>e8a963bc43be1d2630b7fb26c8969678</srcmd5>
    <version>3.0.2</version>
    <time>1686576467</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1092484</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>db1fd898d81e027dbfadb66b9a820d15</srcmd5>
    <version>3.0.5</version>
    <time>1690987803</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.0.5:
  * ``Pagination.next()`` enforces ``max_per_page``.
  * Improve type hint for ``get_or_404`` return value to be non-optional.
  * Fix type hint for ``get_or_404`` return value.
  * Fix type hints for pyright (used by VS Code Pylance extension).
  * Show helpful errors when mistakenly using multiple ``SQLAlchemy``
    instances for the same app, or without calling ``init_app``
  * Fix issue with getting the engine associated with a model that uses
    polymorphic table inheritance.
- Update URL.</comment>
    <requestid>1101893</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>e06bf54246e980b08c1352c6c0bc2fee</srcmd5>
    <version>3.1.1</version>
    <time>1696269974</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1114539</requestid>
  </revision>
  <revision rev="13" vrev="2">
    <srcmd5>22023dc6e2d63d9c17c7c1fc3f7d1e4d</srcmd5>
    <version>3.1.1</version>
    <time>1697836699</time>
    <user>anag+factory</user>
    <comment>- Clean up the SPEC file</comment>
    <requestid>1119107</requestid>
  </revision>
  <revision rev="14" vrev="3">
    <srcmd5>3a177f4de4ce0fce8595a68021d3c80d</srcmd5>
    <version>3.1.1</version>
    <time>1706807103</time>
    <user>anag+factory</user>
    <comment>- Add patch stop-using-utcnow.patch:
  * Use a callable wrapping datetime.now(utc) rather than utcnow().</comment>
    <requestid>1143168</requestid>
  </revision>
</revisionlist>
