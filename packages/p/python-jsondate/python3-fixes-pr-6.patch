From 80c3b355f2f4fe61b46f53d9078dd7ccac127b76 Mon Sep 17 00:00:00 2001
From: Chris Norman <chris.norman2@googlemail.com>
Date: Sat, 13 May 2017 20:46:31 +0100
Subject: [PATCH 2/2] Removed the references to u'' and iteritems for
 dictionaries. Also began to update the tests.

---
 jsondate/__init__.py   | 9 +--------
 test-requirements.txt  | 4 ++++
 tests/test_jsondate.py | 4 ++--
 3 files changed, 7 insertions(+), 10 deletions(-)
 create mode 100644 test-requirements.txt

Index: jsondate-0.1.2/jsondate/__init__.py
===================================================================
--- jsondate-0.1.2.orig/jsondate/__init__.py	2012-11-09 17:44:19.000000000 +0100
+++ jsondate-0.1.2/jsondate/__init__.py	2021-05-25 09:24:54.519218741 +0200
@@ -15,14 +15,7 @@ def _datetime_encoder(obj):
 
 
 def _datetime_decoder(dict_):
-    for key, value in dict_.iteritems():
-        # The built-in `json` library will `unicode` strings, except for empty
-        # strings which are of type `str`. `jsondate` patches this for
-        # consistency so that `unicode` is always returned.
-        if value == '':
-            dict_[key] = u''
-            continue
-
+    for key, value in dict_.items():
         try:
             datetime_obj = datetime.datetime.strptime(value, ISO8601_FMT)
             dict_[key] = datetime_obj
Index: jsondate-0.1.2/test-requirements.txt
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ jsondate-0.1.2/test-requirements.txt	2021-05-25 09:24:54.519218741 +0200
@@ -0,0 +1,4 @@
+# Only needed for running the tests.
+
+pytest
+jsonschema
Index: jsondate-0.1.2/tests/test_jsondate.py
===================================================================
--- jsondate-0.1.2.orig/tests/test_jsondate.py	2012-11-09 17:42:31.000000000 +0100
+++ jsondate-0.1.2/tests/test_jsondate.py	2021-05-25 09:26:14.231638295 +0200
@@ -1,7 +1,8 @@
 import datetime
 import json
 import unittest
-import StringIO
+import sys
+from io import BytesIO, StringIO
 
 import jsondate
 
@@ -19,19 +20,6 @@
         orig_dict = dict(foo='bar')
         self.assertEqual(orig_dict, jsondate.loads(jsondate.dumps(orig_dict)))
 
-    def test_dump_unicode_roundtrips(self):
-        orig_dict = {u'foo': u'bar', 'empty': u''}
-
-        # json module broken: unicode objects, empty-string objects are str
-        result = json.loads(json.dumps(orig_dict))
-        self.assertTypeAndValue(unicode, u'bar', result[u'foo'])
-        self.assertTypeAndValue(str, '', result[u'empty'])
-
-        # jsondate fix: always return unicode objects
-        result = jsondate.loads(jsondate.dumps(orig_dict))
-        self.assertTypeAndValue(unicode, u'bar', result[u'foo'])
-        self.assertTypeAndValue(unicode, u'', result[u'empty'])
-
     def test_dumps_none_roundtrips(self):
         # Generates a TypeError from _datetime_object_hook
         orig_dict = dict(foo=None)
@@ -57,7 +45,10 @@
 
     def test_dump_datetime_roundtrips(self):
         orig_dict = dict(created_at=datetime.date(2011, 1, 1))
-        fileobj = StringIO.StringIO()
+        if sys.version_info[0] == 2:
+            fileobj = BytesIO()
+        elif sys.version_info[0] == 3:
+            fileobj = StringIO()
         jsondate.dump(orig_dict, fileobj)
         fileobj.seek(0)
         self.assertEqual(orig_dict, jsondate.load(fileobj))
