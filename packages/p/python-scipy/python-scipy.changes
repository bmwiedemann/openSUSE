-------------------------------------------------------------------
Mon Jul  1 13:35:29 UTC 2024 - John Paul Adrian Glaubitz <adrian.glaubitz@suse.com>

- Update to 1.14.0
  ## Highlights of this release
  * SciPy now supports the new Accelerate library introduced in macOS 13.3, and
    has wheels built against Accelerate for macOS >=14 resulting in significant
    performance improvements for many linear algebra operations.
  * A new method, ``cobyqa``, has been added to `scipy.optimize.minimize` - this
    is an interface for COBYQA (Constrained Optimization BY Quadratic
    Approximations), a derivative-free optimization solver, designed to
    supersede COBYLA, developed by the Department of Applied Mathematics, The
    Hong Kong Polytechnic University.
  * `scipy.sparse.linalg.spsolve_triangular` is now more than an order of
    magnitude faster in many cases.
  ## New features
  # `scipy.fft` improvements
  * A new function, `scipy.fft.prev_fast_len`, has been added. This function
    finds the largest composite of FFT radices that is less than the target
    length. It is useful for discarding a minimal number of samples before FFT.
  #`scipy.io` improvements
  * ``wavfile`` now supports reading and writing of ``wav`` files in the RF64
    format, allowing files greater than 4 GB in size to be handled.
  #`scipy.constants` improvements
  * Experimental support for the array API standard has been added.
  #`scipy.interpolate` improvements
  * `scipy.interpolate.Akima1DInterpolator` now supports extrapolation via the
    ``extrapolate`` argument.
  #`scipy.optimize` improvements
  * `scipy.optimize.HessianUpdateStrategy` now also accepts square arrays for
    ``init_scale``.
  * A new method, ``cobyqa``, has been added to `scipy.optimize.minimize` - this
    is an interface for COBYQA (Constrained Optimization BY Quadratic
    Approximations), a derivative-free optimization solver, designed to
    supersede COBYLA, developed by the Department of Applied Mathematics, The
    Hong Kong Polytechnic University.
  * There are some performance improvements in
    `scipy.optimize.differential_evolution`.
  * `scipy.optimize.approx_fprime` now has linear space complexity.
  #`scipy.signal` improvements
  * `scipy.signal.minimum_phase` has a new argument ``half``, allowing the
    provision of a filter of the same length as the linear-phase FIR filter
    coefficients and with the same magnitude spectrum.
  #`scipy.sparse` improvements
  * Sparse arrays now support 1D shapes in COO, DOK and CSR formats.
    These are all the formats we currently intend to support 1D shapes.
    Other sparse array formats raise an exception for 1D input.
  * Sparse array methods min/nanmin/argmin and max analogs now return 1D arrays.
    Results are still COO format sparse arrays for min/nanmin and
    dense ``np.ndarray`` for argmin.
  * Sparse matrix and array objects improve their ``repr`` and ``str`` output.
  * A special case has been added to handle multiplying a ``dia_array`` by a
    scalar, which avoids a potentially costly conversion to CSR format.
  * `scipy.sparse.csgraph.yen` has been added, allowing usage of Yen's K-Shortest
    Paths algorithm on a directed on undirected graph.
  * Addition between DIA-format sparse arrays and matrices is now faster.
  * `scipy.sparse.linalg.spsolve_triangular` is now more than an order of
    magnitude faster in many cases.
  #`scipy.spatial` improvements
  * ``Rotation`` supports an alternative "scalar-first" convention of quaternion
    component ordering. It is available via the keyword argument ``scalar_first``
    of ``from_quat`` and ``as_quat`` methods.
  * Some minor performance improvements for inverting of ``Rotation`` objects.
  #`scipy.special` improvements
  * Added `scipy.special.log_wright_bessel`, for calculation of the logarithm of
    Wright's Bessel function.
  * The relative error in `scipy.special.hyp2f1` calculations has improved
    substantially.
  * Improved behavior of ``boxcox``, ``inv_boxcox``, ``boxcox1p``, and
    ``inv_boxcox1p`` by preventing premature overflow.
  #`scipy.stats` improvements
  * A new function `scipy.stats.power` can be used for simulating the power
    of a hypothesis test with respect to a specified alternative.
  * The Irwin-Hall (AKA Uniform Sum) distribution has been added as
    `scipy.stats.irwinhall`.
  * Exact p-value calculations of `scipy.stats.mannwhitneyu` are much faster
    and use less memory.
  * `scipy.stats.pearsonr` now accepts n-D arrays and computes the statistic
    along a specified ``axis``.
  * `scipy.stats.kstat`, `scipy.stats.kstatvar`, and `scipy.stats.bartlett`
    are faster at performing calculations along an axis of a large n-D array.
  ## Array API Standard Support
  * Experimental* support for array libraries other than NumPy has been added to
    existing sub-packages in recent versions of SciPy. Please consider testing
    these features by setting an environment variable ``SCIPY_ARRAY_API=1`` and
    providing PyTorch, JAX, or CuPy arrays as array arguments.
  * As of 1.14.0, there is support for
    * `scipy.cluster`
    * `scipy.fft`
    * `scipy.constants`
    * `scipy.special`: (select functions)
       * `scipy.special.log_ndtr`
       * `scipy.special.ndtr`
       * `scipy.special.ndtri`
       * `scipy.special.erf`
       * `scipy.special.erfc`
       * `scipy.special.i0`
       * `scipy.special.i0e`
       * `scipy.special.i1`
       * `scipy.special.i1e`
       * `scipy.special.gammaln`
       * `scipy.special.gammainc`
       * `scipy.special.gammaincc`
       * `scipy.special.logit`
       * `scipy.special.expit`
       * `scipy.special.entr`
       * `scipy.special.rel_entr`
       * `scipy.special.xlogy`
       * `scipy.special.chdtrc`
   * `scipy.stats`: (select functions)
     * `scipy.stats.describe`
     * `scipy.stats.moment`
     * `scipy.stats.skew`
     * `scipy.stats.kurtosis`
     * `scipy.stats.kstat`
     * `scipy.stats.kstatvar`
     * `scipy.stats.circmean`
     * `scipy.stats.circvar`
     * `scipy.stats.circstd`
     * `scipy.stats.entropy`
     * `scipy.stats.variation`
     * `scipy.stats.sem`
     * `scipy.stats.ttest_1samp`
     * `scipy.stats.pearsonr`
     * `scipy.stats.chisquare`
     * `scipy.stats.skewtest`
     * `scipy.stats.kurtosistest`
     * `scipy.stats.normaltest`
     * `scipy.stats.jarque_bera`
     * `scipy.stats.bartlett`
     * `scipy.stats.power_divergence`
     * `scipy.stats.monte_carlo_test`
  ## Deprecated features
  * `scipy.stats.gstd`, `scipy.stats.chisquare`, and
    `scipy.stats.power_divergence` have deprecated support for masked array
    input.
  * `scipy.stats.linregress` has deprecated support for specifying both samples
    in one argument; ``x`` and ``y`` are to be provided as separate arguments.
  * The ``conjtransp`` method for `scipy.sparse.dok_array` and
    `scipy.sparse.dok_matrix` has been deprecated and will be removed in SciPy
    1.16.0.
  * The option ``quadrature="trapz"`` in `scipy.integrate.quad_vec` has been
    deprecated in favour of ``quadrature="trapezoid"`` and will be removed in
    SciPy 1.16.0.
  * ``scipy.special.{comb,perm}`` have deprecated support for use of ``exact=True`` in
    conjunction with non-integral ``N`` and/or ``k``.
  ## Backwards incompatible changes
  * Many `scipy.stats` functions now produce a standardized warning message when
    an input sample is too small (e.g. zero size). Previously, these functions
    may have raised an error, emitted one or more less informative warnings, or
    emitted no warnings. In most cases, returned results are unchanged; in almost
    all cases the correct result is ``NaN``.
  ## Expired deprecations
  There is an ongoing effort to follow through on long-standing deprecations.
  The following previously deprecated features are affected:
  * Several previously deprecated methods for sparse arrays were removed:
    ``asfptype``, ``getrow``, ``getcol``, ``get_shape``, ``getmaxprint``,
    ``set_shape``, ``getnnz``, and ``getformat``. Additionally, the ``.A`` and
    ``.H`` attributes were removed.
  * ``scipy.integrate.{simps,trapz,cumtrapz}`` have been removed in favour of
    ``simpson``, ``trapezoid``, and ``cumulative_trapezoid``.
  * The ``tol`` argument of ``scipy.sparse.linalg.{bcg,bicstab,cg,cgs,gcrotmk,
    mres,lgmres,minres,qmr,tfqmr}`` has been removed in favour of ``rtol``.
    Furthermore, the default value of ``atol`` for these functions has changed
    to ``0.0``.
  * The ``restrt`` argument of `scipy.sparse.linalg.gmres` has been removed in
    favour of ``restart``.
  * The ``initial_lexsort`` argument of `scipy.stats.kendalltau` has been
    removed.
  * The ``cond`` and ``rcond`` arguments of `scipy.linalg.pinv` have been
    removed.
  * The ``even`` argument of `scipy.integrate.simpson` has been removed.
  * The ``turbo`` and ``eigvals`` arguments from ``scipy.linalg.{eigh,eigvalsh}``
    have been removed.
  * The ``legacy`` argument of `scipy.special.comb` has been removed.
  * The ``hz``/``nyq`` argument of ``signal.{firls, firwin, firwin2, remez}`` has
    been removed.
  * Objects that weren't part of the public interface but were accessible through
    deprecated submodules have been removed.
  * ``float128``, ``float96``, and object arrays now raise an error in
    `scipy.signal.medfilt` and `scipy.signal.order_filter`.
  * ``scipy.interpolate.interp2d`` has been replaced by an empty stub (to be
    removed completely in the future).
  * Coinciding with changes to function signatures (e.g. removal of a deprecated
    keyword), we had deprecated positional use of keyword arguments for the
    affected functions, which will now raise an error. Affected functions are:
    * ``sparse.linalg.{bicg, bicgstab, cg, cgs, gcrotmk, gmres, lgmres, minres,
      qmr, tfqmr}``
    * ``stats.kendalltau``
    * ``linalg.pinv``
    * ``integrate.simpson``
    * ``linalg.{eigh,eigvalsh}``
    * ``special.comb``
    * ``signal.{firls, firwin, firwin2, remez}``
  ## Other changes
  * SciPy now uses C17 as the C standard to build with, instead of C99. The C++
    standard remains C++17.
  * macOS Accelerate, which got a major upgrade in macOS 13.3, is now supported.
    This results in significant performance improvements for linear algebra
    operations, as well as smaller binary wheels.
  * Cross-compilation should be smoother and QEMU or similar is no longer needed
    to run the cross interpreter.
  * Experimental array API support for the JAX backend has been added to several
    parts of SciPy.
- Cherry-pick upstream patch to fix build with GCC 14
  * https://github.com/scipy/scipy/pull/21063.patch
- Update BuildRequires from pyproject.toml

-------------------------------------------------------------------
Sun May 26 11:26:14 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Update to 1.13.1
  * SciPy 1.13.1 is a bug-fix release with no new features compared
    to 1.13.0.
  ## Issues closed
  * BUG: `scipy.ndimage.value_indices` returns empty dict for
    `intc`/`uintc` dtype on Windows
  * BUG: csr_array can no longer be initialized with 1D array
  * BUG: `TestEig.test_falker` fails on windows + MKL as well as…
  * BUG: Cannot find `OpenBLAS` on Cygwin
  * BUG: special.spherical_in: derivative at `z=0, n=1` incorrect
  * BUG: `eigh` fails for size 1 array with driver=evd
  * BUG: warning from `optimize.least_squares` for astropy with…
  * BUG: spatial: error in `Rotation.align_vectors()` with an
    infinite…
  * BUG: scipy.special.factorial2 doesn’t handle `uint32` dtypes
  * BUG: scipy.stats.wilcoxon in 1.13 fails on 2D array with nan…
  * BUG: scipy.spatial.Delaunay,
    scipy.interpolate.LinearNDInterpolator…
  * BUG: stats.yulesimon: incorrect kurtosis values
  * BUG: incorrect origin tuple handling in ndimage
    `minimum_filter`…
  * BUG: spatial: `Rotation.align_vectors()` incorrect for
    anti-parallel…
  * BUG: sparse matrix creation in 1.13 with indices not summing…
  * BUG: stats.zipf: incorrect pmf values 
- Allow pythran 0.16: Upstream's pre-emptive pin is not necessary
- Drop scipy-pr20530-f2py_error.patch

-------------------------------------------------------------------
Sun May 12 16:37:45 UTC 2024 - Sarah Kriesch <sarah.kriesch@opensuse.org>

- Enable python-scipy:gnu-hpc for s390x (together with python-numpy:gnu-hpc)

-------------------------------------------------------------------
Thu May  9 10:33:32 UTC 2024 - Sarah Kriesch <sarah.kriesch@opensuse.org>

- Enable openblas for s390x

-------------------------------------------------------------------
Wed Apr 24 11:41:51 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Skip another test out of numeric precision for 32-bit
- Fix HPC _version

-------------------------------------------------------------------
Fri Apr 19 10:55:20 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Update to 1.13.0
  ## Highlights of this release
  * Support for NumPy 2.0.0.
  * Interactive examples have been added to the documentation,
    allowing users to run the examples locally on embedded
    Jupyterlite notebooks in their browser.
  * Preliminary 1D array support for the COO and DOK sparse
    formats.
  * Several scipy.stats functions have gained support for
    additional axis, nan_policy, and keepdims arguments.
    scipy.stats also has several performance and accuracy
    improvements.
  ## New features
  * scipy.integrate improvements
  * scipy.io improvements
  * scipy.interpolate improvements
  * scipy.signal improvements
  * scipy.sparse improvements
  * scipy.spatial improvements
  * scipy.special improvements
  * scipy.stats improvements
  ## Deprecated features
  * Complex dtypes in PchipInterpolator and Akima1DInterpolator
    have been deprecated and will raise an error in SciPy 1.15.0.
    If you are trying to use the real components of the passed
    array, use np.real on y.
  ## Other changes
  * The second argument of scipy.stats.moment has been renamed to
    order while maintaining backward compatibility.
- Release 1.12.0
  ## Highlights of this release
  * Experimental support for the array API standard has been added
    to part of scipy.special, and to all of scipy.fft and
    scipy.cluster. There are likely to be bugs and early feedback
    for usage with CuPy arrays, PyTorch tensors, and other array
    API compatible libraries is appreciated. Use the
    SCIPY_ARRAY_API environment variable for testing.
  * A new class, ShortTimeFFT, provides a more versatile
    implementation of the short-time Fourier transform (STFT), its
    inverse (ISTFT) as well as the (cross-) spectrogram. It
    utilizes an improved algorithm for calculating the ISTFT.
  * Several new constructors have been added for sparse arrays, and
    many operations now additionally support sparse arrays, further
    facilitating the migration from sparse matrices.
  * A large portion of the scipy.stats API now has improved support
    for handling NaN values, masked arrays, and more fine-grained
    shape-handling. The accuracy and performance of a number of
    stats methods have been improved, and a number of new
    statistical tests and distributions have been added.
  ## New features
  * scipy.cluster improvements
  * scipy.fft improvements
  * scipy.integrate improvements
  * scipy.interpolate improvements
  * scipy.linalg improvements
  * scipy.ndimage improvements
  * scipy.optimize improvements
  * scipy.signal improvements
  * scipy.sparse improvements
  * scipy.spatial improvements
  * scipy.special improvements
  * scipy.stats improvements
  ## Deprecated features
  * Error messages have been made clearer for objects that don’t
    exist in the public namespace and warnings sharpened for
    private attributes that are not supposed to be imported at all.
  * scipy.signal.cmplx_sort has been deprecated and will be removed
    in SciPy 1.15. A replacement you can use is provided in the
    deprecation message.
  * Values the argument initial of
    scipy.integrate.cumulative_trapezoid other than 0 and None are
    now deprecated.
  * scipy.stats.rvs_ratio_uniforms is deprecated in favour of
    scipy.stats.sampling.RatioUniforms
  * scipy.integrate.quadrature and scipy.integrate.romberg have
    been deprecated due to accuracy issues and interface
    shortcomings. They will be removed in SciPy 1.15. Please use
    scipy.integrate.quad instead.
  * Coinciding with upcoming changes to function signatures (e.g.
    removal of a deprecated keyword), we are deprecating positional
    use of keyword arguments for the affected functions, which will
    raise an error starting with SciPy 1.14. In some cases, this
    has delayed the originally announced removal date, to give time
    to respond to the second part of the deprecation. Affected
    functions are:
    - linalg.{eigh, eigvalsh, pinv}
    - integrate.simpson
    - signal.{firls, firwin, firwin2, remez}
    - sparse.linalg.{bicg, bicgstab, cg, cgs, gcrotmk, gmres,
      lgmres, minres, qmr, tfqmr}
    - special.comb
    - stats.kendalltau
  * All wavelet functions have been deprecated, as PyWavelets
    provides suitable implementations; affected functions are:
    signal.{daub, qmf, cascade, morlet, morlet2, ricker, cwt}
  * scipy.integrate.trapz, scipy.integrate.cumtrapz, and
    scipy.integrate.simps have been deprecated in favour of
    scipy.integrate.trapezoid,
    scipy.integrate.cumulative_trapezoid, and
    scipy.integrate.simpson respectively and will be removed in
    SciPy 1.14.
  * The tol argument of
    scipy.sparse.linalg.{bcg,bicstab,cg,cgs,gcrotmk,gmres,lgmres,
    minres,qmr,tfqmr}
    is now deprecated in favour of rtol and will be removed in
    SciPy 1.14. Furthermore, the default value of atol for these
    functions is due to change to 0.0 in SciPy 1.14.
  ## Expired Deprecations
  * There is an ongoing effort to follow through on long-standing
    deprecations. The following previously deprecated features are
    affected:
  * The centered keyword of scipy.stats.qmc.LatinHypercube has been
    removed. Use scrambled=False instead of centered=True.
  * scipy.stats.binom_test has been removed in favour of
    scipy.stats.binomtest.
  * In scipy.stats.iqr, the use of scale='raw' has been removed in
    favour of scale=1.
  * Functions from NumPy’s main namespace which were exposed in
    SciPy’s main namespace, such as numpy.histogram exposed by
    scipy.histogram, have been removed from SciPy’s main namespace.
    Please use the functions directly from numpy.
  ## Other changes
  * The arguments used to compile and link SciPy are now available
    via show_config.
- Drop 8c96a1f742335bca283aae418763aaba62c03378.patch (merged
  upstream)
- Add scipy-pr20530-f2py_error.patch gh#scipy/scipy#20530, used to
  find workaround for failing HPC build gh#scipy/scipy#20535

-------------------------------------------------------------------
Tue Feb 27 17:20:08 UTC 2024 - Egbert Eich <eich@suse.com>

- Add 8c96a1f742335bca283aae418763aaba62c03378.patch
  to fix issues with OpenBLAS 0.3.26 and later (boo#1220163).

-------------------------------------------------------------------
Mon Jan 22 12:20:49 UTC 2024 - Daniel Garcia <daniel.garcia@suse.com>

- Disable broken tests in s390x, gh#scipy/scipy#18878, bsc#1218608

-------------------------------------------------------------------
Tue Nov 21 04:25:02 UTC 2023 - Steve Kowalik <steven.kowalik@suse.com>

- Update to 1.11.4:
  * MAINT: ensure cobyla objective returns scalar
  * MAINT: fixup dep warning
  * BUG: interpolate: fix spalde with len(c) < len(t)
  * BUG: pass unused xrtol in fmin_bfgs to _minimize_bfgs
  * BUG: Regression test for lsq trf boundary error
  * BUG: lsq trf gives x=1e-10 if x0 is near a bound
  * BUG: make Bessel-roots function not hang and not skip roots
  * io/matlab: Fix loading of mat files containing fn handles when
    simplify_cells=True
  * BUG: make L-BFGS-B work with single precision gradient
  * MAINT: stats: fix NumPy DeprecationWarnings
  * BUG: sparse.linalg: Cast to intc before SuperLU
  * MAINT: Use deb_system scheme to match meson's path inference & fix aarch64
  * BUG: Fix python3.12 distutils dev.py build
  * BUG: stats: remove use of `BOOST_MATH_DECLARE_SPECIAL_FUNCTIONS`
  * MAINT: fix libquadmath licence
  * MAINT: newton, make sure x0 is an inexact type
  * MAINT: stats.CovViaEigendecomposition: fix _colorize for singular
    covariance
  * TST: fix `TestODR.test_implicit` test failure with tolerance bump
  * BUG: signal: freqz rfft grid fix
  * BUG: Support sparse arrays in scipy.sparse.csgraph.laplacian
  * MAINT: signal: Remove the cval parameter from the private function
    _pad_test.
  * BLD: Avoid absolute pathnames in .pyx files
  * BUG: Add back make_strictly_feasible to lsq trf.
  * MAINT: should not be using np.float64() on arrays
  * BUG: trust-constr Bounds exclusive
  * BUG: sparse.csgraph: Support int64 indices in traversal.pyx
  * BUG: add infeasibility checks to min_weight_full_bipartite_matching
  * DOC, MAINT: workaround for py311 docs
  * BUG: Fix typecasting problem in scipy.sparse.lil_matrix truediv
  * BUG: In least_squares make initial guess sufficiently feasible w.r.t.
    to bounds for method 'trf'
  * BUG: fix pow method for sparrays with power zero
  * BUG: set idx_dtype in sparse dia_array.tocoo
- Drop patch intc.patch, included.

-------------------------------------------------------------------
Mon Oct  9 06:52:54 UTC 2023 - ecsos <ecsos@opensuse.org>

- Let it build for Leap 15.6 also.

-------------------------------------------------------------------
Thu Jul 27 13:31:24 UTC 2023 - Markéta Machová <mmachova@suse.com>

- Add upstream intc.patch to fix gh#scipy/scipy#18603

-------------------------------------------------------------------
Tue Jul 25 10:04:04 UTC 2023 - Markéta Machová <mmachova@suse.com>

- Update to 1.11.1
  * Several scipy.sparse array API improvements, including sparse.sparray, 
    a new public base class distinct from the older sparse.spmatrix class, 
    proper 64-bit index support, and numerous deprecations paving the way 
    to a modern sparse array experience.
  * scipy.stats added tools for survival analysis, multiple hypothesis 
    testing, sensitivity analysis, and working with censored data.
  * A new function was added for quasi-Monte Carlo integration, and linear 
    algebra functions det and lu now accept nD-arrays.
  * An axes argument was added broadly to ndimage functions, facilitating 
    analysis of stacked image data.

-------------------------------------------------------------------
Thu Jun 29 07:21:08 UTC 2023 - Andreas Schneider <asn@cryptomilk.org>

- Use sle15_python_module_pythons
- Require GCC >= 8

-------------------------------------------------------------------
Fri Mar 10 14:18:09 UTC 2023 - Martin Liška <mliska@suse.cz>

- Fix i686 tests for GCC 13 due to:
  https://gcc.gnu.org/gcc-13/porting_to.html#excess-precision

-------------------------------------------------------------------
Sun Feb 26 00:27:35 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Update to 1.10.1
  * bug-fix release with no new features compared to 1.10.0
- Drop scipy-pr17717-ro-interpn.patch

-------------------------------------------------------------------
Mon Jan 16 22:06:27 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Highlights of the 1.10.0 release
  * A new dedicated datasets submodule (scipy.datasets) has been
    added, and is now preferred over usage of scipy.misc for
    dataset retrieval.
  * A new scipy.interpolate.make_smoothing_spline function was
    added. This function constructs a smoothing cubic spline from
    noisy data, using the generalized cross-validation (GCV)
    criterion to find the tradeoff between smoothness and proximity
    to data points.
  * scipy.stats has three new distributions, two new hypothesis
    tests, three new sample statistics, a class for greater control
    over calculations involving covariance matrices, and many other
    enhancements.
- Add scipy-pr17717-ro-interpn.patch gh#scipy/scipy#17717
  * Fixes gh#spacetelescope/gwcs#433
- Provide scipy-datasets.tar.gz for pooch cache and tests without
  needing to download during test time.

-------------------------------------------------------------------
Wed Jan 11 07:35:47 UTC 2023 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Update to version 1.10.0
- Drop upstream pacthes:
  * fix-tests.patch
  * fix-tests-pytest72.patch
  * scipy-pr17467-no-np.int0.patch

-------------------------------------------------------------------
Fri Dec 23 16:37:30 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Add scipy-pr17467-no-np.int0.patch gh#scipy/scipy#17467
- Move the flavored packaganame definition so that quilt does not
  fail

-------------------------------------------------------------------
Thu Dec  8 17:07:18 UTC 2022 - Dominique Leuenberger <dimstar@opensuse.org>

- Ensure the test flavor has a different source name than the main
  flavor: OBS uses the source names to create the dep-chain. With
  the test package having the same name as the mani flavor, all
  builds behind python-scipy are blocked until the test suite
  passed.

-------------------------------------------------------------------
Wed Dec  7 11:11:11 UTC 2022 - Daniel Garcia <daniel.garcia@suse.com>

- Add fix-tests-pytest72.patch to fix the tests that fails with pytest 7
  gh#scipy/scipy#17296

-------------------------------------------------------------------
Fri Dec  2 11:56:35 UTC 2022 - Daniel Garcia <daniel.garcia@suse.com>

- Add fix-tests.patch gh#scipy/scipy#16926#issuecomment-1287507634

-------------------------------------------------------------------
Thu Oct 20 15:05:16 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update to version 1.9.3
  * SciPy 1.9.3 is a bug-fix release with no new features compared
    to 1.9.2.
  * #3691: scipy.interpolate.UnivariateSpline segfault
  * #5286: BUG: multivariate_normal returns a pdf for values
    outside its…
  * #6551: BUG: stats: inconsistency in docs and behavior of gmean
    and hmean
  * #9245: running
    scipy.interpolate.tests.test_fitpack::test_bisplev_integer_overflow…
  * #12471: test_bisplev_integer_overflow: Segmentation fault (core
    dumped)
  * #13321: Bug: setting iprint=0 hides all output from
    fmin_l_bfgs_b, but…
  * #13730: `scipy.stats.mood` does not correct for ties
  * #14019: ks_2samp throws `RuntimeWarning: overflow encountered
    in double_scalars`
  * #14589: `shgo` error since scipy 1.8.0.dev0+1529.803e52d
  * #14591: Input data validation for RectSphereBivariateSpline
  * #15101: BUG: binom.pmf - RuntimeWarning: divide by zero
  * #15342: BUG: scipy.optimize.minimize: Powell’s method function
    evaluated…
  * #15964: BUG: lombscargle fails if argument is a view
  * #16211: BUG: Possible bug when using winsorize on pandas data
    instead…
  * #16459: BUG: stats.ttest_ind returns wrong p-values with
    permutations
  * #16500: odr.Model default meta value fails with __getattr__
  * #16519: BUG: Error in error message for incorrect sample
    dimension in…
  * #16527: BUG: dimension of isuppz in syevr is mistranslated
  * #16600: BUG: `KDTree`’s optional argument `eps` seems to have
    no…
  * #16656: dtype not preserved with operations on sparse arrays
  * #16751: BUG: `stats.fit` on `boltzmann` expects `bound` for
    `lambda`,…
  * #17012: BUG: Small oversight in sparse.linalg.lsmr?
  * #17020: BUG: Build failure due to problems with shebang line in
    cythoner.py
  * #17088: BUG: stats.rayleigh.fit: returns `loc` that is
    inconsistent…
  * #17104: BUG? Incorrect branch in `LAMV` / `_specfunc.lamv`
  * #17196: DOC: keepdims in stats.mode is incorrectly documented
- Move multibuild flavor ":standard" to unflavored build
- Test in parallel (pytest-xdist) 

-------------------------------------------------------------------
Tue Oct 11 08:36:20 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update to version 1.9.2
  * SciPy 1.9.2 is a bug-fix release with no new features compared
    to 1.9.1.

-------------------------------------------------------------------
Sat Sep 10 23:43:22 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update to version 1.9.1
  * SciPy 1.9.1 is a bug-fix release with no new features compared
    to 1.9.0. Notably, some important meson build fixes are
    included.
- Release 1.9.0
  * Full changelog at
    https://docs.scipy.org/doc/scipy/release.1.9.0.html
- Highlights of the 1.9.0 release:
  * We have modernized our build system to use meson,
    substantially improving our build performance, and providing
    better build-time configuration and cross-compilation support,
  * Added scipy.optimize.milp, new function for mixed-integer
    linear programming,
  * Added scipy.stats.fit for fitting discrete and continuous
    distributions to data,
  * Tensor-product spline interpolation modes were added to
    scipy.interpolate.RegularGridInterpolator,
  * A new global optimizer (DIviding RECTangles algorithm)
    scipy.optimize.direct.
- Switch to meson-python PEP517 build

-------------------------------------------------------------------
Mon Jul 18 15:23:43 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Keep lowercase egg-info despite setuptools 60+

-------------------------------------------------------------------
Sat May 21 08:12:51 UTC 2022 - andy great <andythe_great@pm.me>

- Update to version 1.8.1.
  * Bug-fix release with no new features.

-------------------------------------------------------------------
Tue Apr 12 12:20:43 UTC 2022 - Martin Liška <mliska@suse.cz>

- With the previously added -ffloat-store, some tests that fail on i586.
  Disable them.

-------------------------------------------------------------------
Tue Apr 12 06:36:01 UTC 2022 - Martin Liška <mliska@suse.cz>

- Limit double floating point precision for x87, triggered by GCC 12.
  Fixes test_kolmogorov.py Fatal Python error: Floating point exception
  which is a double floating-point test.

-------------------------------------------------------------------
Mon Mar 28 18:16:15 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update to version 1.8.0
  * https://scipy.github.io/devdocs/release.1.8.0.html
  * SciPy 1.8.0 is the culmination of 6 months of hard work. It
    contains many new features, numerous bug-fixes, improved test
    coverage and better documentation. There have been a number of
    deprecations and API changes in this release. All users are
    encouraged to upgrade to this release, as there are a large
    number of bug-fixes and optimizations. Before upgrading, we
    recommend that users check that their own code does not use
    deprecated SciPy functionality (to do so, run your code with
    python -Wd and check for `DeprecationWarning`s). 
  * A sparse array API has been added for early testing and
    feedback; this work is ongoing, and users should expect minor
    API refinements over the next few releases.
  * The sparse SVD library PROPACK is now vendored with SciPy, and
    an interface is exposed via scipy.sparse.svds with
    solver='PROPACK'. It is currently default-off due to potential
    issues on Windows that we aim to resolve in the next release,
    but can be optionally enabled at runtime for friendly testing
    with an environment variable setting of USE_PROPACK=1.
  * A new scipy.stats.sampling submodule that leverages the UNU.RAN
    C library to sample from arbitrary univariate non-uniform
    continuous and discrete distributions
  * All namespaces that were private but happened to miss
    underscores in their names have been deprecated.
  * Backwards incompatible changes
    - SciPy has raised the minimum compiler versions to GCC 6.3 on
      linux and VS2019 on windows. In particular, this means that
      SciPy may now use C99 and C++14 features. For more details
      see here.
    - The result for empty bins for scipy.stats.binned_statistic
      with the builtin 'std' metric is now nan, for consistency
      with np.std.
    - The function scipy.spatial.distance.wminkowski has been
      removed. To achieve the same results as before, please use
      the minkowski distance function with the (optional) w=
      keyword-argument for the given weight.

-------------------------------------------------------------------
Sat Jan 29 20:44:30 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Provide empty debuginfo extraction for :test flavor

-------------------------------------------------------------------
Sun Jan 23 17:52:38 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update to version 1.7.3
  * 3rd bugfix release since 1.7.0
- Highlights from the 1.7.0 release
  * A new submodule for quasi-Monte Carlo, scipy.stats.qmc, was
    added
  * The documentation design was updated to use the same
    PyData-Sphinx theme as NumPy and other ecosystem libraries.
  * We now vendor and leverage the Boost C++ library to enable
    numerous improvements for long-standing weaknesses in
    scipy.stats
  * scipy.stats has six new distributions, eight new (or
    overhauled) hypothesis tests, a new function for bootstrapping,
    a class that enables fast random variate sampling and
    percentile point function evaluation, and many other
    enhancements.
  * cdist and pdist distance calculations are faster for several
    metrics, especially weighted cases, thanks to a rewrite to a
    new C++ backend framework
  * A new class for radial basis function interpolation,
    RBFInterpolator, was added to address issues with the Rbf
    class.
- Enable fast part of the test suite

-------------------------------------------------------------------
Mon Jul 26 14:37:33 UTC 2021 - Andreas Schwab <schwab@suse.de>

- Enable openblas on riscv64

-------------------------------------------------------------------
Mon May  3 01:31:43 UTC 2021 - Arun Persaud <arun@gmx.de>

- update to version 1.6.3:
  * Issues closed
    + #13772: Divide by zero in distance.yule
    + #13796: CI: prerelease_deps failures
    + #13890: TST: spatial rotation failure in (1.6.3) wheels repo
       (ARM64)
  * Pull requests
    + #13755: CI: fix the matplotlib warning emitted during builing
       docs
    + #13773: BUG: Divide by zero in yule dissimilarity of constant
       vectors
    + #13799: CI/MAINT: deprecated np.typeDict
    + #13819: substitute np.math.factorial with math.factorial
    + #13895: TST: add random seeds in Rotation module

-------------------------------------------------------------------
Sun Apr  4 16:40:00 UTC 2021 - Arun Persaud <arun@gmx.de>

- update to version 1.6.2:
  * Issues closed for 1.6.2
    + #13512: `stats.gaussian_kde.evaluate` broken on S390X
    + #13584: rotation._compute_euler_from_matrix() creates an array
       with negative...
    + #13585: Behavior change in coo_matrix when dtype=None
    + #13686: delta0 argument of scipy.odr.ODR() ignored
  * Pull requests for 1.6.2
    + #12862: REL: put upper bounds on versions of dependencies
    + #13575: BUG: fix `gaussian_kernel_estimate` on S390X
    + #13586: BUG: sparse: Create a utility function `getdata`
    + #13598: MAINT, BUG: enforce contiguous layout for output array
       in Rotation.as_euler
    + #13687: BUG: fix scipy.odr to consider given delta0 argument

-------------------------------------------------------------------
Wed Mar  3 19:09:30 UTC 2021 - Arun Persaud <arun@gmx.de>

- update to version 1.6.1:
  * Issues closed
    + #13072: BLD: Quadpack undefined references
    + #13241: Not enough values to unpack when passing tuple to
       `blocksize`...
    + #13329: Large sparse matrices of big integers lose information
    + #13342: fftn crashes if shape arguments are supplied as ndarrays
    + #13356: LSQBivariateSpline segmentation fault when quitting the
       Python...
    + #13358: scipy.spatial.transform.Rotation object can not be
       deepcopied...
    + #13408: Type of `has_sorted_indices` property
    + #13412: Sorting spherical Voronoi vertices leads to crash in
       area calculation
    + #13421: linear_sum_assignment - support for matrices with more
       than 2^31...
    + #13428: `stats.exponnorm.cdf` returns `nan` for small values of
       `K`...
    + #13465: KDTree.count_neighbors : 0xC0000005 error for tuple of
       different...
    + #13468: directed_hausdorff issue with shuffle
    + #13472: Failures on FutureWarnings with numpy 1.20.0 for
       lfilter, sosfilt...
    + #13565: BUG: 32-bit wheels repo test failure in optimize
  * Pull requests
    + #13318: REL: prepare for SciPy 1.6.1
    + #13344: BUG: fftpack doesn't work with ndarray shape argument
    + #13345: MAINT: Replace scipy.take with numpy.take in FFT
       function docstrings.
    + #13354: BUG: optimize: rename private functions to include
       leading underscore
    + #13387: BUG: Support big-endian platforms and big-endian WAVs
    + #13394: BUG: Fix Python crash by allocating larger array in
       LSQBivariateSpline
    + #13400: BUG: sparse: Better validation for BSR ctor
    + #13403: BUG: sparse: Propagate dtype through CSR/CSC
       constructors
    + #13414: BUG: maintain dtype of SphericalVoronoi regions
    + #13422: FIX: optimize: use npy_intp to store array dims for lsap
    + #13425: BUG: spatial: make Rotation picklable
    + #13426: BUG: `has_sorted_indices` and `has_canonical_format`
       should...
    + #13430: BUG: stats: Fix exponnorm.cdf and exponnorm.sf for small
       K
    + #13470: MAINT: silence warning generated by
       `spatial.directed_hausdorff`
    + #13473: TST: fix failures due to new FutureWarnings in NumPy
       1.21.dev0
    + #13479: MAINT: update directed_hausdorff Cython code
    + #13485: BUG: KDTree weighted count_neighbors doesn't work
       between two...
    + #13503: TST: fix `test_fortranfile_read_mixed_record` on
       big-endian...
    + #13518: DOC: document that pip >= 20.3.3 is needed for macOS 11
    + #13520: BLD: update reqs based on oldest-supported-numpy in
       pyproject.toml
    + #13567: TST, BUG: adjust tol on test_equivalence

-------------------------------------------------------------------
Sat Jan 16 17:14:26 UTC 2021 - Benjamin Greiner <code@bnavigator.de>

- NEP 29: Last minorversion bump deprecated Python 3.6
  https://numpy.org/neps/nep-0029-deprecation_policy.html
- Fix hpc setup for coinstallable python3 flavors, needs
  gh#openSUSE/hpc#3

-------------------------------------------------------------------
Tue Jan  5 07:57:30 UTC 2021 - Paolo Stivanin <info@paolostivanin.com>

- Update to 1.6.0:
  * scipy.ndimage improvements: Fixes and ehancements to boundary extension
    modes for interpolation functions. Support for complex-valued inputs
    in many filtering and interpolation functions. New grid_mode option
    for scipy.ndimage.zoom to enable results consistent with scikit-image’s rescale.
  * scipy.optimize.linprog has fast, new methods for large, sparse
    problems from the HiGHS library.
  * scipy.stats improvements including new distributions, a new test,
    and enhancements to existing distributions and tests
  * scipy.special now has improved support for 64-bit LAPACK backend
  * scipy.odr now has support for 64-bit integer BLAS
  * scipy.odr.ODR has gained an optional overwrite argument so that
    existing files may be overwritten.
  * scipy.cluster.hierarchy.DisjointSet has been added for incremental
    connectivity queries.
  * scipy.cluster.hierarchy.dendrogram return value now also includes
    leaf color information in leaves_color_list.
  * scipy.interpolate.interp1d has a new method nearest-up, similar to
    the existing method nearest but rounds half-integers up instead of down.
  * scipy.ndimage.convolve, scipy.ndimage.correlate and their 1d counterparts
    now accept both complex-valued images and/or complex-valued filter kernels.
    All convolution-based filters also now accept complex-valued inputs 
  * scipy.optimize.linprog has fast, new methods for large, sparse problems
    from the HiGHS C++ library
  * scipy.optimize.quadratic_assignment has been added for approximate solution of
    the quadratic assignment problem.
  * scipy.optimize.linear_sum_assignment now has a substantially reduced
    overhead for small cost matrix sizes
  * scipy.optimize.least_squares has improved performance when the user
    provides the jacobian as a sparse jacobian already in csr_matrix format
  * scipy.signal.gammatone has been added to design FIR or IIR filters that
    model the human auditory system.
  * scipy.signal.iircomb has been added to design IIR peaking/notching
    comb filters that can boost/attenuate a frequency from a signal.
  * scipy.signal.sosfilt performance has been improved to avoid some
    previously- observed slowdowns
  * scipy.signal.windows.taylor has been added–the Taylor window function
    is commonly used in radar digital signal processing
  * scipy.signal.gauss_spline now supports list type input for consistency
    with other related SciPy functions
  * scipy.signal.correlation_lags has been added to allow calculation of
    the lag/ displacement indices array for 1D cross-correlation.

-------------------------------------------------------------------
Fri Dec 18 20:29:48 UTC 2020 - andy great <andythe_great@pm.me>

- Update to version 1.5.4.
  * Bug fix release with no new feature.
- Updates for 1.5.3.
  * Bug fix release with no new feature.

-------------------------------------------------------------------
Thu Aug 13 07:23:03 UTC 2020 - Marketa Calabkova <mcalabkova@suse.com>

- Update to 1.5.2
  * wrappers for more than a dozen new LAPACK routines are now available in scipy.linalg.lapack
  * Improved support for leveraging 64-bit integer size from linear algebra backends
  * addition of the probability distribution for two-sided one-sample Kolmogorov-Smirnov tests
  * see upstream changelog for more detailed info
- Drop breaking patch no_implicit_decl.patch
  * the problem is with lapacke

-------------------------------------------------------------------
Thu Mar 19 08:05:49 UTC 2020 - Martin Liška <mliska@suse.cz>

- Add -std=legacy in order to build with GCC10:
  https://gcc.gnu.org/gcc-10/porting_to.html#argument-mismatch

-------------------------------------------------------------------
Mon Mar 16 13:51:18 UTC 2020 - Egbert Eich <eich@suse.com>

- 'umpfack' is a runtime dependency of scipy. No build time
  dependency to suitesparse is required (jsc#SLE-11732).
- Get rid of site.cfg entirely as it is used nowhwere in scipy.

-------------------------------------------------------------------
Wed Jan 15 12:56:20 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Fix pybind11 devel dependency to match real name

-------------------------------------------------------------------
Fri Dec 20 01:27:36 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to 1.4.1
  * SciPy 1.4.1 is a bug-fix release with no new features compared
    to 1.4.0. Importantly, it aims to fix a problem where an older
    version of pybind11 may cause a segmentation fault when
    imported alongside incompatible libraries.

-------------------------------------------------------------------
Tue Dec 17 20:48:57 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to 1.4.0
  + Highlights of this release
    * a new submodule, `scipy.fft`, now supersedes `scipy.fftpack`; this
      means support for ``long double`` transforms, faster multi-dimensional
      transforms, improved algorithm time complexity, release of the global
      intepreter lock, and control over threading behavior
    * support for ``pydata/sparse`` arrays in `scipy.sparse.linalg`
    * substantial improvement to the documentation and functionality of
      several `scipy.special` functions, and some new additions
    * the generalized inverse Gaussian distribution has been added to
      `scipy.stats`
    * an implementation of the Edmonds-Karp algorithm in
      `scipy.sparse.csgraph.maximum_flow`
    * `scipy.spatial.SphericalVoronoi` now supports n-dimensional input, 
      has linear memory complexity, improved performance, and
      supports single-hemisphere generators
  + New features
    > Infrastructure
      * Documentation can now be built with ``runtests.py --doc``
      * A ``Dockerfile`` is now available in the ``scipy/scipy-dev`` repository to
        acilitate getting started with SciPy development.
    > `scipy.constants` improvements
      * `scipy.constants` has been updated with the CODATA 2018 constants.
    > `scipy.fft` added
      * `scipy.fft` is a new submodule that supersedes the `scipy.fftpack` submodule. 
        or the most part, this is a drop-in replacement for ``numpy.fft`` and 
        scipy.fftpack` alike. With some important differences, `scipy.fft`:
      * uses NumPy's conventions for real transforms (``rfft``). This means the 
        eturn value is a complex array, half the size of the full ``fft`` output.
        his is different from the output of ``fftpack`` which returned a real array 
        epresenting complex components packed together.
      * the inverse real to real transforms (``idct`` and ``idst``) are normalized 
        or ``norm=None`` in thesame way as ``ifft``. This means the identity 
        `idct(dct(x)) == x`` is now ``True`` for all norm modes.
      * does not include the convolutions or pseudo-differential operators
        rom ``fftpack``.
      * This submodule is based on the ``pypocketfft`` library, developed by the 
        uthor of ``pocketfft`` which was recently adopted by NumPy as well.
        `pypocketfft`` offers a number of advantages over fortran ``FFTPACK``:
      * support for long double (``np.longfloat``) precision transforms.
      * faster multi-dimensional transforms using vectorisation
      * Bluestein’s algorithm removes the worst-case ``O(n^2)`` complexity of
        `FFTPACK``
      * the global interpreter lock (``GIL``) is released during transforms
      * optional multithreading of multi-dimensional transforms via the ``workers``
        rgument
      * Note that `scipy.fftpack` has not been deprecated and will continue to be 
        aintained but is now considered legacy. New code is recommended to use 
        scipy.fft` instead, where possible.
    > `scipy.fftpack` improvements
      * `scipy.fftpack` now uses pypocketfft to perform its FFTs, offering the same
        peed and accuracy benefits listed for scipy.fft above but without the
        mproved API.
    > `scipy.integrate` improvements
      * The function `scipy.integrate.solve_ivp` now has an ``args`` argument.
        his allows the user-defined functions passed to the function to have
        dditional parameters without having to create wrapper functions or
        ambda expressions for them.
      * `scipy.integrate.solve_ivp` can now return a ``y_events`` attribute 
        epresenting the solution of the ODE at event times
      * New ``OdeSolver`` is implemented --- ``DOP853``. This is a high-order explicit
        unge-Kutta method originally implemented in Fortran. Now we provide a pure 
        ython implementation usable through ``solve_ivp`` with all its features.
      * `scipy.integrate.quad` provides better user feedback when break points are 
        pecified with a weighted integrand.
      * `scipy.integrate.quad_vec` is now available for general purpose integration
        f vector-valued functions
    > `scipy.interpolate` improvements
      * `scipy.interpolate.pade` now handles complex input data gracefully
      * `scipy.interpolate.Rbf` can now interpolate multi-dimensional functions
    > `scipy.io` improvements
      * `scipy.io.wavfile.read` can now read data from a `WAV` file that has a
        alformed header, similar to other modern `WAV` file parsers
      * `scipy.io.FortranFile` now has an expanded set of available ``Exception``
        lasses for handling poorly-formatted files
    > `scipy.linalg` improvements
      * The function ``scipy.linalg.subspace_angles(A, B)`` now gives correct
        esults for complex-valued matrices. Before this, the function only returned
        orrect values for real-valued matrices.
      * New boolean keyword argument ``check_finite`` for `scipy.linalg.norm`; whether 
        o check that the input matrix contains only finite numbers. Disabling may 
        ive a performance gain, but may result in problems (crashes, non-termination)
        f the inputs do contain infinities or NaNs.
      * `scipy.linalg.solve_triangular` has improved performance for a C-ordered
        riangular matrix
      * ``LAPACK`` wrappers have been added for ``?geequ``, ``?geequb``, ``?syequb``,
        nd ``?heequb``
      * Some performance improvements may be observed due to an internal optimization
        n operations involving LAPACK routines via ``_compute_lwork``. This is
        articularly true for operations on small arrays.
      * Block ``QR`` wrappers are now available in `scipy.linalg.lapack`
    > `scipy.optimize` improvements
      * It is now possible to use linear and non-linear constraints with 
        scipy.optimize.differential_evolution`.
      * `scipy.optimize.linear_sum_assignment` has been re-written in C++ to improve 
        erformance, and now allows input costs to be infinite.
      * A ``ScalarFunction.fun_and_grad`` method was added for convenient simultaneous
        etrieval of a function and gradient evaluation
      * `scipy.optimize.minimize` ``BFGS`` method has improved performance by avoiding
        uplicate evaluations in some cases
      * Better user feedback is provided when an objective function returns an array
        nstead of a scalar.
    > `scipy.signal` improvements
      * Added a new function to calculate convolution using the overlap-add method,
        amed `scipy.signal.oaconvolve`. Like `scipy.signal.fftconvolve`, this
        unction supports specifying dimensions along which to do the convolution.
      * `scipy.signal.cwt` now supports complex wavelets.
      * The implementation of ``choose_conv_method`` has been updated to reflect the 
        ew FFT implementation. In addition, the performance has been significantly 
        mproved (with rather drastic improvements in edge cases).
      * The function ``upfirdn`` now has a ``mode`` keyword argument that can be used
        o select the signal extension mode used at the signal boundaries. These modes
        re also available for use in ``resample_poly`` via a newly added ``padtype``
        rgument.
      * `scipy.signal.sosfilt` now benefits from Cython code for improved performance
      * `scipy.signal.resample` should be more efficient by leveraging ``rfft`` when
        ossible
    > `scipy.sparse` improvements
      * It is now possible to use the LOBPCG method in `scipy.sparse.linalg.svds`.
      * `scipy.sparse.linalg.LinearOperator` now supports the operation ``rmatmat`` 
        or adjoint matrix-matrix multiplication, in addition to ``rmatvec``.
      * Multiple stability updates enable float32 support in the LOBPCG eigenvalue 
        olver for symmetric and Hermitian eigenvalues problems in 
        `scipy.sparse.linalg.lobpcg``.
      * A solver for the maximum flow problem has been added as
        scipy.sparse.csgraph.maximum_flow`.
      * `scipy.sparse.csgraph.maximum_bipartite_matching` now allows non-square inputs,
        o longer requires a perfect matching to exist, and has improved performance.
      * `scipy.sparse.lil_matrix` conversions now perform better in some scenarios
      * Basic support is available for ``pydata/sparse`` arrays in
        scipy.sparse.linalg`
      * `scipy.sparse.linalg.spsolve_triangular` now supports the ``unit_diagonal``
        rgument to improve call signature similarity with its dense counterpart,
        scipy.linalg.solve_triangular`
      * ``assertAlmostEqual`` may now be used with sparse matrices, which have added
        upport for ``__round__``
    > `scipy.spatial` improvements
      * The bundled Qhull library was upgraded to version 2019.1, fixing several
        ssues. Scipy-specific patches are no longer applied to it.
      * `scipy.spatial.SphericalVoronoi` now has linear memory complexity, improved
        erformance, and supports single-hemisphere generators. Support has also been
        dded for handling generators that lie on a great circle arc (geodesic input)
        nd for generators in n-dimensions.
      * `scipy.spatial.transform.Rotation` now includes functions for calculation of a
        ean rotation, generation of the 3D rotation groups, and reduction of rotations
        ith rotational symmetries.
      * `scipy.spatial.transform.Slerp` is now callable with a scalar argument
      * `scipy.spatial.voronoi_plot_2d` now supports furthest site Voronoi diagrams
      * `scipy.spatial.Delaunay` and `scipy.spatial.Voronoi` now have attributes
        or tracking whether they are furthest site diagrams
    > `scipy.special` improvements
      * The Voigt profile has been added as `scipy.special.voigt_profile`.
      * A real dispatch has been added for the Wright Omega function
        `scipy.special.wrightomega`).
      * The analytic continuation of the Riemann zeta function has been added. (The 
        iemann zeta function is the one-argument variant of `scipy.special.zeta`.)
      * The complete elliptic integral of the first kind (`scipy.special.ellipk`) is 
        ow available in `scipy.special.cython_special`.
      * The accuracy of `scipy.special.hyp1f1` for real arguments has been improved.
      * The documentation of many functions has been improved.
    > `scipy.stats` improvements
      * `scipy.stats.multiscale_graphcorr` added as an independence test that
        perates on high dimensional and nonlinear data sets. It has higher statistical
        ower than other `scipy.stats` tests while being the only one that operates on
        ultivariate data.
      * The generalized inverse Gaussian distribution (`scipy.stats.geninvgauss`) has 
        een added.
      * It is now possible to efficiently reuse `scipy.stats.binned_statistic_dd` 
        ith new values by providing the result of a previous call to the function.
      * `scipy.stats.hmean` now handles input with zeros more gracefully.
      * The beta-binomial distribution is now available in `scipy.stats.betabinom`.
      * `scipy.stats.zscore`, `scipy.stats.circmean`, `scipy.stats.circstd`, and
        scipy.stats.circvar` now support the ``nan_policy`` argument for enhanced
        andling of ``NaN`` values
      * `scipy.stats.entropy` now accepts an ``axis`` argument
      * `scipy.stats.gaussian_kde.resample` now accepts a ``seed`` argument to empower
        eproducibility
      * `scipy.stats.kendalltau` performance has improved, especially for large inputs,
        ue to improved cache usage
      * `scipy.stats.truncnorm` distribution has been rewritten to support much wider
        ails
  + Deprecated features
    > `scipy` deprecations
      * Support for NumPy functions exposed via the root SciPy namespace is deprecated
        nd will be removed in 2.0.0. For example, if you use ``scipy.rand`` or
        `scipy.diag``, you should change your code to directly use
        `numpy.random.default_rng`` or ``numpy.diag``, respectively.
        hey remain available in the currently continuing Scipy 1.x release series.
      * The exception to this rule is using ``scipy.fft`` as a function --
        mod:`scipy.fft` is now meant to be used only as a module, so the ability to
        all ``scipy.fft(...)`` will be removed in SciPy 1.5.0.
      * In `scipy.spatial.Rotation` methods ``from_dcm``, ``as_dcm`` were renamed to 
        `from_matrix``, ``as_matrix`` respectively. The old names will be removed in 
        ciPy 1.6.0.
      * Method ``Rotation.match_vectors`` was deprecated in favor of 
        `Rotation.align_vectors``, which provides a more logical and 
        eneral API to the same functionality. The old method 
        ill be removed in SciPy 1.6.0.
  + Backwards incompatible changes
    > `scipy.special` changes
      * The deprecated functions ``hyp2f0``, ``hyp1f2``, and ``hyp3f0`` have been
        emoved.
      * The deprecated function ``bessel_diff_formula`` has been removed.
      * The function ``i0`` is no longer registered with ``numpy.dual``, so that 
        `numpy.dual.i0`` will unconditionally refer to the NumPy version regardless 
        f whether `scipy.special` is imported.
      * The function ``expn`` has been changed to return ``nan`` outside of its 
        omain of definition (``x, n < 0``) instead of ``inf``.
    > `scipy.sparse` changes
      * Sparse matrix reshape now raises an error if shape is not two-dimensional, 
        rather than guessing what was meant. The behavior is now the same as before 
        ciPy 1.1.0.
      * ``CSR`` and ``CSC`` sparse matrix classes should now return empty matrices
        f the same type when indexed out of bounds. Previously, for some versions
        f SciPy, this would raise an ``IndexError``. The change is largely motivated
        y greater consistency with ``ndarray`` and ``numpy.matrix`` semantics.
    > `scipy.signal` changes
      * `scipy.signal.resample` behavior for length-1 signal inputs has been
        ixed to output a constant (DC) value rather than an impulse, consistent with
        he assumption of signal periodicity in the FFT method.
      * `scipy.signal.cwt` now performs complex conjugation and time-reversal of
        avelet data, which is a backwards-incompatible bugfix for
        ime-asymmetric wavelets.
    > `scipy.stats` changes
      * `scipy.stats.loguniform` added with better documentation as (an alias for
        `scipy.stats.reciprocal``). ``loguniform`` generates random variables
        hat are equally likely in the log space; e.g., ``1``, ``10`` and ``100``
        re all equally likely if ``loguniform(10 ** 0, 10 ** 2).rvs()`` is used.
  + Other changes
    * The ``LSODA`` method of `scipy.integrate.solve_ivp` now correctly detects stiff
        roblems.
    * `scipy.spatial.cKDTree` now accepts and correctly handles empty input data
    * `scipy.stats.binned_statistic_dd` now calculates the standard deviation 
        tatistic in a numerically stable way.
    * `scipy.stats.binned_statistic_dd` now throws an error if the input data 
        ontains either ``np.nan`` or ``np.inf``. Similarly, in `scipy.stats` now all 
        ontinuous distributions' ``.fit()`` methods throw an error if the input data
        ontain any instance of either ``np.nan`` or ``np.inf``.
- Rebase no_implicit_decl.patch

-------------------------------------------------------------------
Tue Dec 10 14:24:29 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to 1.3.3
  * Fix deadlock on osx for python 3.8
  * MAINT: TST: Skip tests with multiprocessing that use "spawn" start method

-------------------------------------------------------------------
Tue Nov 19 20:08:41 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to 1.3.2
  * Bug in unique_roots in scipy.signal.signaltools.py for roots...
  * Optimizers reporting success when the minimum is NaN
  * ValueError raised if scipy.sparse.linalg.expm recieves array...
  * linprog(method='revised simplex') doctest bug
  * Graph shortest path with Floyd-Warshall removes explicit zeros.
  * BUG: stats: Formula for the variance of the noncentral F distribution...
  * BUG: Assignation issues in csr_matrix with fancy indexing
  * root_scalar fails when passed a function wrapped with functools.lru_cache
  * CI: travis osx build failure
  * macOS build failure in SuperLU on maintenance/1.3.x
  * Typo in sp.stats.wilcoxon docstring

-------------------------------------------------------------------
Fri Aug 16 15:00:19 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to 1.3.1
  * BUG: Empty data handling of (c)KDTrees
  * lsoda fails to detect stiff problem when called from solve_ivp
  * sparse matrices indexing with scipy 1.3
  * Exception in loadarff with quoted nominal attributes in scipy...
  * DOC/REL: Some sections of the release notes are not nested correctly. 
  * BUG: optimize: `linprog` failing TestLinprogSimplexBland::test_unbounded_below_no_presolve_corrected 
  * TST: Travis CI fails (with pytest 5.0 ?)
  * CircleCI doc build failing on new warnings
  * Scipy 1.3.0 build broken in AIX
  * BUG: scipy.spatial.HalfspaceIntersection works incorrectly
  * BUG: cKDTree GIL handling is incorrect
  * TST: master branch CI failures 
  * BUG: ckdtree query_ball_point errors on discontiguous input
  * BUG: No warning on PchipInterpolator changing from bernstein base to local power base

-------------------------------------------------------------------
Sun May 19 02:47:42 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to 1.3.0
  + Highlights of this release
    * Three new ``stats`` functions, a rewrite of ``pearsonr``, and an exact
      computation of the Kolmogorov-Smirnov two-sample test
    * A new Cython API for bounded scalar-function root-finders in `scipy.optimize`
    * Substantial ``CSR`` and ``CSC`` sparse matrix indexing performance
      improvements
    * Added support for interpolation of rotations with continuous angular
      rate and acceleration in ``RotationSpline``
  + New features
    > `scipy.interpolate` improvements
      * A new class ``CubicHermiteSpline`` is introduced. It is a piecewise-cubic 
        interpolator which matches observed values and first derivatives. Existing 
        cubic interpolators ``CubicSpline``, ``PchipInterpolator`` and 
        ``Akima1DInterpolator`` were made subclasses of ``CubicHermiteSpline``.
    > `scipy.io` improvements
      * For the Attribute-Relation File Format (ARFF) `scipy.io.arff.loadarff` 
        now supports relational attributes.
      * `scipy.io.mmread` can now parse Matrix Market format files with empty lines.
    > `scipy.linalg` improvements
      * Added wrappers for ``?syconv`` routines, which convert a symmetric matrix 
        given by a triangular matrix factorization into two matrices and vice versa.
      * `scipy.linalg.clarkson_woodruff_transform` now uses an algorithm that leverages
        sparsity. This may provide a 60-90 percent speedup for dense input matrices.
        Truly sparse input matrices should also benefit from the improved sketch
        algorithm, which now correctly runs in ``O(nnz(A))`` time.
      * Added new functions to calculate symmetric Fiedler matrices and
        Fiedler companion matrices, named `scipy.linalg.fiedler` and 
        `scipy.linalg.fiedler_companion`, respectively. These may be used
        for root finding.
    > `scipy.ndimage` improvements
      * Gaussian filter performances may improve by an order of magnitude in
        some cases, thanks to removal of a dependence on ``np.polynomial``. This
        may impact `scipy.ndimage.gaussian_filter` for example.
    > `scipy.optimize` improvements
      * The `scipy.optimize.brute` minimizer obtained a new keyword ``workers``, which
        can be used to parallelize computation.
      * A Cython API for bounded scalar-function root-finders in `scipy.optimize`
        is available in a new module `scipy.optimize.cython_optimize` via ``cimport``.
        This API may be used with ``nogil`` and ``prange`` to loop 
        over an array of function arguments to solve for an array of roots more 
        quickly than with pure Python.
      * ``'interior-point'`` is now the default method for ``linprog``, and 
        ``'interior-point'`` now uses SuiteSparse for sparse problems when the 
        required scikits  (scikit-umfpack and scikit-sparse) are available. 
        On benchmark problems (gh-10026), execution time reductions by factors of 2-3 
        were typical. Also, a new ``method='revised simplex'`` has been added. 
        It is not as fast or robust as ``method='interior-point'``, but it is a faster,
        more robust, and equally accurate substitute for the legacy 
        ``method='simplex'``.
      * ``differential_evolution`` can now use a ``Bounds`` class to specify the
        bounds for the optimizing argument of a function.
      * `scipy.optimize.dual_annealing` performance improvements related to
        vectorisation of some internal code.
    > `scipy.signal` improvements
      * Two additional methods of discretization are now supported by 
        `scipy.signal.cont2discrete`: ``impulse`` and ``foh``.
      * `scipy.signal.firls` now uses faster solvers
      * `scipy.signal.detrend` now has a lower physical memory footprint in some
        cases, which may be leveraged using the new ``overwrite_data`` keyword argument
      * `scipy.signal.firwin` ``pass_zero`` argument now accepts new string arguments
        that allow specification of the desired filter type: ``'bandpass'``,
        ``'lowpass'``, ``'highpass'``, and ``'bandstop'``
      * `scipy.signal.sosfilt` may have improved performance due to lower retention
        of the global interpreter lock (GIL) in algorithm
    > `scipy.sparse` improvements
      * A new keyword was added to ``csgraph.dijsktra`` that 
        allows users to query the shortest path to ANY of the passed in indices,
        as opposed to the shortest path to EVERY passed index.
      * `scipy.sparse.linalg.lsmr` performance has been improved by roughly 10 percent
        on large problems
      * Improved performance and reduced physical memory footprint of the algorithm
        used by `scipy.sparse.linalg.lobpcg`
      * ``CSR`` and ``CSC`` sparse matrix fancy indexing performance has been
        improved substantially
    > `scipy.spatial` improvements
      * `scipy.spatial.ConvexHull` now has a ``good`` attribute that can be used 
        alongsize the ``QGn`` Qhull options to determine which external facets of a 
        convex hull are visible from an external query point.
      * `scipy.spatial.cKDTree.query_ball_point` has been modernized to use some newer 
        Cython features, including GIL handling and exception translation. An issue 
        with ``return_sorted=True`` and scalar queries was fixed, and a new mode named 
        ``return_length`` was added. ``return_length`` only computes the length of the 
        returned indices list instead of allocating the array every time.
      * `scipy.spatial.transform.RotationSpline` has been added to enable interpolation
        of rotations with continuous angular rates and acceleration
    > `scipy.stats` improvements
      * Added a new function to compute the Epps-Singleton test statistic,
        `scipy.stats.epps_singleton_2samp`, which can be applied to continuous and
        discrete distributions.
      * New functions `scipy.stats.median_absolute_deviation` and `scipy.stats.gstd`
        (geometric standard deviation) were added. The `scipy.stats.combine_pvalues` 
        method now supports ``pearson``,  ``tippett`` and ``mudholkar_george`` pvalue 
        combination methods.
      * The `scipy.stats.ortho_group` and `scipy.stats.special_ortho_group` 
        ``rvs(dim)`` functions' algorithms were updated from a ``O(dim^4)`` 
        implementation to a ``O(dim^3)`` which gives large speed improvements 
        for ``dim>100``.
      * A rewrite of `scipy.stats.pearsonr` to use a more robust algorithm,
        provide meaningful exceptions and warnings on potentially pathological input,
        and fix at least five separate reported issues in the original implementation.
      * Improved the precision of ``hypergeom.logcdf`` and ``hypergeom.logsf``.
      * Added exact computation for Kolmogorov-Smirnov (KS) two-sample test, replacing
        the previously approximate computation for the two-sided test `stats.ks_2samp`.
        Also added a one-sided, two-sample KS test, and a keyword ``alternative`` to 
        `stats.ks_2samp`.
  + Backwards incompatible changes
    > `scipy.interpolate` changes
      * Functions from ``scipy.interpolate`` (``spleval``, ``spline``, ``splmake``,
        and ``spltopp``) and functions from ``scipy.misc`` (``bytescale``,
        ``fromimage``, ``imfilter``, ``imread``, ``imresize``, ``imrotate``,
        ``imsave``, ``imshow``, ``toimage``) have been removed. The former set has 
        been deprecated since v0.19.0 and the latter has been deprecated since v1.0.0.
        Similarly, aliases from ``scipy.misc`` (``comb``, ``factorial``,
        ``factorial2``, ``factorialk``, ``logsumexp``, ``pade``, ``info``, ``source``,
        ``who``) which have been deprecated since v1.0.0 are removed. 
        `SciPy documentation for
        v1.1.0 <https://docs.scipy.org/doc/scipy-1.1.0/reference/misc.html>`__
        can be used to track the new import locations for the relocated functions.
    > `scipy.linalg` changes
      * For ``pinv``, ``pinv2``, and ``pinvh``, the default cutoff values are changed 
        for consistency (see the docs for the actual values).
    > `scipy.optimize` changes
      * The default method for ``linprog`` is now ``'interior-point'``. The method's
        robustness and speed come at a cost: solutions may not be accurate to
        machine precision or correspond with a vertex of the polytope defined
        by the constraints. To revert to the original simplex method,
        include the argument ``method='simplex'``.
    > `scipy.stats` changes
      * Previously, ``ks_2samp(data1, data2)`` would run a two-sided test and return 
        the approximated p-value. The new signature, ``ks_2samp(data1, data2,
        alternative="two-sided", method="auto")``, still runs the two-sided test by
        default but returns the exact p-value for small samples and the approximated
        value for large samples. ``method="asymp"`` would be equivalent to the 
        old version but ``auto`` is the better choice.
  + Other changes
    * Our tutorial has been expanded with a new section on global optimizers
    * There has been a rework of the ``stats.distributions`` tutorials.
    * `scipy.optimize` now correctly sets the convergence flag of the result to 
      ``CONVERR``, a convergence error, for bounded scalar-function root-finders 
      if the maximum iterations has been exceeded, ``disp`` is false, and 
      ``full_output`` is true.
    * `scipy.optimize.curve_fit` no longer fails if ``xdata`` and ``ydata`` dtypes 
      differ; they are both now automatically cast to ``float64``.
    * `scipy.ndimage` functions including ``binary_erosion``, ``binary_closing``, and 
      ``binary_dilation`` now require an integer value for the number of iterations,
      which alleviates a number of reported issues.
    * Fixed normal approximation in case ``zero_method == "pratt"`` in 
      `scipy.stats.wilcoxon`.
    * Fixes for incorrect probabilities, broadcasting issues and thread-safety 
      related to stats distributions setting member variables inside ``_argcheck()``.
    * `scipy.optimize.newton` now correctly raises a ``RuntimeError``, when default 
      arguments are used, in the case that a derivative of value zero is obtained,
      which is a special case of failing to converge.
    * A draft toolchain roadmap is now available, laying out a compatibility plan
      including Python versions, C standards, and NumPy versions.
- Python 2 is no longer supported

-------------------------------------------------------------------
Tue Mar 19 17:08:19 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to 1.2.1
  * SyntaxError: Non-ASCII character 'xe2' in file scipy/stats/_continuous_distns.py on line 3346, but no encoding declared
  * Version 1.2.0 introduces `too many indices for array` error in `optimize.newton()`
  * scipy.stats.gaussian_kde normalizes the weights keyword argument externally.
  * scipy.linalg.qr_update gives NaN result
  * CI: Is scipy.scipy Windows Python36-32bit-full working?

-------------------------------------------------------------------
Fri Mar  1 20:45:50 UTC 2019 - Matej Cepl <mcepl@suse.com>

- Use direct number in the Version tag

-------------------------------------------------------------------
Tue Feb 12 08:55:55 UTC 2019 - Egbert Eich <eich@suse.com>

bsc#1130564: Apply update from the openSUSE package

- Properly create and tear down default version links when the
  HPC master packages are installed/uninstalled.
- Make use of %hpc_modules_init to make modules also known to
  client.
- Module file:
  * remove PATH element. Package has no binary,
  * make cosmetic changes.
- Remove use of %%python_module in dependency.

-------------------------------------------------------------------
Mon Jan 21 19:11:15 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Trim filler wording from description.

-------------------------------------------------------------------
Fri Jan 18 11:33:14 UTC 2019 - eich@suse.com

- Some futher changes:
  * Remove the use of fftw. The code doesn't link against it
    anywhere. For HPC we would have to build things separately
    for different MPI flavors as fftw3 exists only with HPC
    support there.
  * restructure the build process: since the environment for
    the right python version of Numpy needs to be loaded, wrap
    entire build (and install) in %%{python_expand: ..}.

-------------------------------------------------------------------
Thu Jan 17 23:58:18 UTC 2019 - jjolly@suse.com

- Add support for HPC builds:
  * Add _multibuild file
  * Add standard and gnu-hpc builds
  * Create initialization for both flavors to set the correct
    target directories in macros and replace install paths
    with these.
  * Restructure the build process.
  * Create 'master' packages for non-HPC builds.
  * Create environment module information,

-------------------------------------------------------------------
Sat Dec 22 02:01:08 UTC 2018 - Todd R <toddrme2178@gmail.com>

- Update to version 1.2.0
  * Many changes. Please see changelog at:
    https://github.com/scipy/scipy/blob/v1.2.0/doc/release/1.2.0-notes.rst

-------------------------------------------------------------------
Fri May 11 20:17:12 UTC 2018 - toddrme2178@gmail.com

- Fix build on SLE

-------------------------------------------------------------------
Mon May  7 06:48:57 UTC 2018 - toddrme2178@gmail.com

- Update to version 1.1.0
  * Many changes. Please see changelog at:
    https://github.com/scipy/scipy/blob/v1.1.0/doc/release/1.1.0-notes.rst

-------------------------------------------------------------------
Sun Apr  1 22:41:09 UTC 2018 - arun@gmx.de

- update to version 1.0.1:
  * Issues closed for 1.0.1
    + #7493: ndimage.morphology functions are broken with numpy 1.13.0
    + #8118: minimize_cobyla broken if disp=True passed
    + #8142: scipy-v1.0.0 pdist with metric=`minkowski` raises
       `ValueError:...
    + #8173: scipy.stats.ortho_group produces all negative
       determinants...
    + #8207: gaussian_filter seg faults on float16 numpy arrays
    + #8234: scipy.optimize.linprog interior-point presolve bug with
       trivial...
    + #8243: Make csgraph importable again via from scipy.sparse
       import*
    + #8320: scipy.root segfaults with optimizer 'lm'
  * Pull requests for 1.0.1
    + #8068: BUG: fix numpy deprecation test failures
    + #8082: BUG: fix solve_lyapunov import
    + #8144: MRG: Fix for cobyla
    + #8150: MAINT: resolve UPDATEIFCOPY deprecation errors
    + #8156: BUG: missing check on minkowski w kwarg
    + #8187: BUG: Sign of elements in random orthogonal 2D matrices in
       "ortho_group_gen"...
    + #8197: CI: uninstall oclint
    + #8215: Fixes Numpy datatype compatibility issues
    + #8237: BUG: optimize: fix bug when variables fixed by bounds are
       inconsistent...
    + #8248: BUG: declare "gfk" variable before call of terminate() in
       newton-cg
    + #8280: REV: reintroduce csgraph import in scipy.sparse
    + #8322: MAINT: prevent scipy.optimize.root segfault closes #8320
    + #8334: TST: stats: don't use exact equality check for hdmedian
       test
    + #8477: BUG: signal/signaltools: fix wrong refcounting in
       PyArray_OrderFilterND
    + #8530: BUG: linalg: Fixed typo in flapack.pyf.src.
    + #8566: CI: Temporarily pin Cython version to 0.27.3
    + #8573: Backports for 1.0.1
    + #8581: Fix Cython 0.28 build break of qhull.pyx

-------------------------------------------------------------------
Tue Feb 13 12:48:45 UTC 2018 - schwab@suse.de

- Don't use openblas on m68k and riscv64

-------------------------------------------------------------------
Thu Oct 26 03:22:32 UTC 2017 - toddrme2178@gmail.com

- Update to version 1.0.0
  * Many changes. Please see changelog at:
    https://github.com/scipy/scipy/blob/v1.0.0/doc/release/1.0.0-notes.rst#why-1-0-now
- Rebase no_implicit_decl.patch

-------------------------------------------------------------------
Tue Jul 11 19:55:40 UTC 2017 - toddrme2178@gmail.com

- More rpmlint fixes.

-------------------------------------------------------------------
Mon Jul 10 18:25:30 UTC 2017 - toddrme2178@gmail.com

- Update to version 0.19.1
  * #7214: Memory use in integrate.quad in scipy-0.19.0
  * #7258: linalg.matrix_balance gives wrong transformation matrix
  * #7262: Segfault in daily testing
  * #7273: scipy.interpolate._bspl.evaluate_spline gets wrong type
  * #7335: scipy.signal.dlti(A,B,C,D).freqresp() fails
  * #7211: BUG: convolve may yield inconsistent dtypes with method changed
  * #7216: BUG: integrate: fix refcounting bug in quad()
  * #7229: MAINT: special: Rewrite a test of wrightomega
  * #7261: FIX: Corrected the transformation matrix permutation
  * #7265: BUG: Fix broken axis handling in spectral functions
  * #7266: FIX 7262: ckdtree crashes in query_knn.
  * #7279: Upcast half- and single-precision floats to doubles in BSpline...
  * #7336: BUG: Fix signal.dfreqresp for StateSpace systems
  * #7419: Fix several issues in sparse.load_npz, save_npz
  * #7420: BUG: stats: allow integers as kappa4 shape parameters
- Add no_implicit_decl.patch
  Fixes implicit-pointer-decl warnings and implicit-fortify-decl error.
- Fix wrong-script-interpreter rpmlint error.

-------------------------------------------------------------------
Wed Apr 19 18:52:04 UTC 2017 - toddrme2178@gmail.com

- Update to version 0.19.0
  + Highlights
    * A unified foreign function interface layer, `scipy.LowLevelCallable`.
    * Cython API for scalar, typed versions of the universal functions from
      the `scipy.special` module, via `cimport scipy.special.cython_special`.
- Removed weave subpackage. It was removed upstream in this release.

-------------------------------------------------------------------
Fri Oct 21 19:12:29 UTC 2016 - toddrme2178@gmail.com

- Switch to single-spec version
- update to version 0.18.1:
  * #6357: scipy 0.17.1 piecewise cubic hermite interpolation does not
     return...
  * #6420: circmean() changed behaviour from 0.17 to 0.18
  * #6421: scipy.linalg.solve_banded overwrites input 'b' when the
     inversion...
  * #6425: cKDTree INF bug
  * #6435: scipy.stats.ks_2samp returns different values on different
     computers
  * #6458: Error in scipy.integrate.dblquad when using variable
     integration...
  * #6405: BUG: sparse: fix elementwise divide for CSR/CSC
  * #6431: BUG: result for insufficient neighbours from cKDTree is
     wrong.
  * #6432: BUG Issue #6421: scipy.linalg.solve_banded overwrites input
     'b'...
  * #6455: DOC: add links to release notes
  * #6462: BUG: interpolate: fix .roots method of PchipInterpolator
  * #6492: BUG: Fix regression in dblquad: #6458
  * #6543: fix the regression in circmean
  * #6545: Revert gh-5938, restore ks_2samp
  * #6557: Backports for 0.18.1
- update to version 0.18.0:
  (see http://scipy.github.io/devdocs/release.0.18.0.html for full changelog)
  * Highlights of this release include:
    + A new ODE solver for two-point boundary value problems,
      scipy.optimize.solve_bvp.
    + A new class, CubicSpline, for cubic spline interpolation of
      data.
    + N-dimensional tensor product polynomials,
      scipy.interpolate.NdPPoly.
    + Spherical Voronoi diagrams, scipy.spatial.SphericalVoronoi.
    + Support for discrete-time linear systems, scipy.signal.dlti.
- update to version 0.17.1:
  * #5817: BUG: skew, kurtosis return np.nan instead of "propagate"
  * #5850: Test failed with sgelsy
  * #5898: interpolate.interp1d crashes using float128
  * #5953: Massive performance regression in cKDTree.query with L_inf
     distance...
  * #6062: mannwhitneyu breaks backward compatibility in 0.17.0
  * #6134: T test does not handle nans
  * #5902: BUG: interpolate: make interp1d handle np.float128 again
  * #5957: BUG: slow down with p=np.inf in 0.17 cKDTree.query
  * #5970: Actually propagate nans through stats functions with
     nan_policy="propagate"
  * #5971: BUG: linalg: fix lwork check in *gelsy
  * #6074: BUG: special: fixed violation of strict aliasing rules.
  * #6083: BUG: Fix dtype for sum of linear operators
  * #6100: BUG: Fix mannwhitneyu to be backward compatible
  * #6135: Don't pass null pointers to LAPACK, even during workspace
     queries.
  * #6148: stats: fix handling of nan values in T tests and kendalltau
- specfile:
  * updated source url to files.pythonhosted.org
  * require setuptools
  * Add openBLAS support.
    This can improve performance in many situations.
  * Drop ATLAS support.

-------------------------------------------------------------------
Thu Jan 28 09:21:47 UTC 2016 - toddrme2178@gmail.com

- specfile:
  * update copyright year

- update to version 0.17.0:
  (see http://scipy.github.io/devdocs/release.0.17.0.html for full changelog)
  * Highlights
    + New functions for linear and nonlinear least squares
      optimization with constraints: scipy.optimize.lsq_linear and
      scipy.optimize.least_squares
    + Support for fitting with bounds in scipy.optimize.curve_fit.
    + Significant improvements to scipy.stats, providing many
      functions with better handing of inputs which have NaNs or are
      empty, improved documentation, and consistent behavior between
      scipy.stats and scipy.stats.mstats.
    + Significant performance improvements and new functionality in
      scipy.spatial.cKDTree.

-------------------------------------------------------------------
Fri Oct 30 09:04:05 UTC 2015 - toddrme2178@gmail.com

- Update to 0.16.1
  SciPy 0.16.1 is a bug-fix release with no new features compared
  to 0.16.0.

-------------------------------------------------------------------
Mon Jul 27 15:24:02 UTC 2015 - toddrme2178@gmail.com

- Remove Cython subpackage.  The sources are not as cleanly 
  separated as the changelog implied.

-------------------------------------------------------------------
Mon Jul 27 09:26:20 UTC 2015 - toddrme2178@gmail.com

- Update to 0.16.0
  * Highlights of this release include:
    - A Cython API for BLAS/LAPACK in scipy.linalg
    - A new benchmark suite.  It's now straightforward to add new benchmarks,
       and they're routinely included with performance enhancement PRs.
    - Support for the second order sections (SOS) format in scipy.signal.
  * New features
    - Benchmark suite
      + The benchmark suite has switched to using Airspeed Velocity
        for benchmarking.
    - scipy.linalg improvements
      + A full set of Cython wrappers for BLAS and LAPACK has been added in 
        the modules scipy.linalg.cython_blas and scipy.linalg.cython_lapack.
        In Cython, these wrappers can now be cimported from their 
        corresponding modules and used without linking directly against BLAS 
        or LAPACK.
      + The functions scipy.linalg.qr_delete, scipy.linalg.qr_insert and
        scipy.linalg.qr_update for updating QR decompositions were added.
      + The function scipy.linalg.solve_circulant solves a linear system with
       a circulant coefficient matrix.
      + The function scipy.linalg.invpascal computes the inverse of a Pascal matrix.
      + The function scipy.linalg.solve_toeplitz, a Levinson-Durbin Toeplitz solver,
        was added.
      + Added wrapper for potentially useful LAPACK function *lasd4.  It computes
        the square root of the i-th updated eigenvalue of a positive symmetric rank-one
        modification to a positive diagonal matrix. See its LAPACK documentation and
        unit tests for it to get more info.
      + Added two extra wrappers for LAPACK least-square solvers. Namely, they are 
        *gelsd and *gelsy.
       + Wrappers for the LAPACK *lange functions, which calculate various matrix
         norms, were added.
       + Wrappers for *gtsv and *ptsv, which solve A*X = B for tri-diagonal
         matrix A, were added.
    - scipy.signal improvements
       + Support for second order sections (SOS) as a format for IIR filters
         was added.  The new functions are:
         * scipy.signal.sosfilt
         * scipy.signal.sosfilt_zi,
         * scipy.signal.sos2tf
         * scipy.signal.sos2zpk
         * scipy.signal.tf2sos
         * scipy.signal.zpk2sos.
       + Additionally, the filter design functions iirdesign, iirfilter, butter,
         cheby1, cheby2, ellip, and bessel can return the filter in the SOS
         format.
       + The function scipy.signal.place_poles, which provides two methods to place
         poles for linear systems, was added.
       + The option to use Gustafsson's method for choosing the initial conditions
         of the forward and backward passes was added to scipy.signal.filtfilt.
       + New classes TransferFunction, StateSpace and ZerosPolesGain were
         added.  These classes are now returned when instantiating scipy.signal.lti.
         Conversion between those classes can be done explicitly now.
       + An exponential (Poisson) window was added as scipy.signal.exponential, and a
         Tukey window was added as scipy.signal.tukey.
       + The function for computing digital filter group delay was added as
         scipy.signal.group_delay.
       + The functionality for spectral analysis and spectral density estimation has
         been significantly improved: scipy.signal.welch became ~8x faster and the
         functions scipy.signal.spectrogram, scipy.signal.coherence and
         scipy.signal.csd (cross-spectral density) were added.
       + scipy.signal.lsim was rewritten - all known issues are fixed, so this
         function can now be used instead of lsim2; lsim is orders of magnitude
         faster than lsim2 in most cases.
    - scipy.sparse improvements
       + The function scipy.sparse.norm, which computes sparse matrix norms, was
         added.
       + The function scipy.sparse.random, which allows to draw random variates from
         an arbitrary distribution, was added.
    - scipy.spatial improvements
       + scipy.spatial.cKDTree has seen a major rewrite, which improved the
         performance of the query method significantly, added support for parallel
         queries, pickling, and options that affect the tree layout.  See pull request
         4374 for more details.
       + The function scipy.spatial.procrustes for Procrustes analysis (statistical
         shape analysis) was added.
    - scipy.stats improvements
       + The Wishart distribution and its inverse have been added, as
         scipy.stats.wishart and scipy.stats.invwishart.
       + The Exponentially Modified Normal distribution has been
         added as scipy.stats.exponnorm.
       + The Generalized Normal distribution has been added as scipy.stats.gennorm.
       + All distributions now contain a random_state property and allow specifying a
         specific numpy.random.RandomState random number generator when generating
         random variates.
       + Many statistical tests and other scipy.stats functions that have multiple
         return values now return namedtuples.  See pull request 4709 for details.
    - scipy.optimize improvements
       + A new derivative-free method DF-SANE has been added to the nonlinear equation
         system solving function scipy.optimize.root.
  * Deprecated features
    - scipy.stats.pdf_fromgamma is deprecated.  This function was undocumented,
      untested and rarely used.  Statsmodels provides equivalent functionality
      with statsmodels.distributions.ExpandedNormal.
    - scipy.stats.fastsort is deprecated.  This function is unnecessary,
      numpy.argsort can be used instead.
    - scipy.stats.signaltonoise and scipy.stats.mstats.signaltonoise are
      deprecated.  These functions did not belong in scipy.stats and are rarely
      used.  See issue #609 for details.
    - scipy.stats.histogram2 is deprecated. This function is unnecessary, 
      numpy.histogram2d can be used instead.
  * Backwards incompatible changes
    - The deprecated global optimizer scipy.optimize.anneal was removed.
    - The following deprecated modules have been removed. They had been deprecated
      since Scipy 0.12.0, the functionality should be accessed as scipy.linalg.blas
      and scipy.linalg.lapack.
      + scipy.lib.blas
      + scipy.lib.lapack
      + scipy.linalg.cblas
      + scipy.linalg.fblas
      + scipy.linalg.clapack
      + scipy.linalg.flapack.
    - The deprecated function scipy.special.all_mat has been removed.
    - These deprecated functions have been removed from scipy.stats:
      + scipy.stats.fprob
      + scipy.stats.ksprob
      + scipy.stats.zprob
      + scipy.stats.randwcdf
      + scipy.stats.randwppf
  * Other changes
    - The version numbering for development builds has been updated to comply with PEP 440.
    - Building with python setup.py develop is now supported.
- Move Cython imports to another package

-------------------------------------------------------------------
Mon Mar  2 15:57:12 UTC 2015 - toddrme2178@gmail.com

- update to version 0.15.1:
  * #4413: BUG: Tests too strict, f2py doesn't have to overwrite this array
  * #4417: BLD: avoid using NPY_API_VERSION to check not using deprecated...
  * #4418: Restore and deprecate scipy.linalg.calc_work

-------------------------------------------------------------------
Mon Jan 12 13:36:00 UTC 2015 - toddrme2178@gmail.com

- Update to 0.15.0
  * New features
    * scipy.optimize improvements
      * scipy.optimize.linprog now provides a generic
        linear programming similar to the way scipy.optimize.minimize
        provides a generic interface to nonlinear programming optimizers.
        Currently the only method supported is simplex which provides
        a two-phase, dense-matrix-based simplex algorithm. Callbacks
        functions are supported,allowing the user to monitor the progress
        of the algorithm.
      * The differential_evolution function is available from the scipy.optimize
        module.  Differential Evolution is an algorithm used for finding the global
        minimum of multivariate functions. It is stochastic in nature (does not use
        gradient methods), and can search large areas of candidate space, but often
        requires larger numbers of function evaluations than conventional gradient
        based techniques.
    * scipy.signal improvements
      * The function max_len_seq was added, which computes a Maximum
        Length Sequence (MLS) signal.
    * scipy.integrate improvements
      * The interface between the scipy.integrate module and the QUADPACK library was 
        redesigned. It is now possible to use scipy.integrate to integrate 
        multivariate ctypes functions, thus avoiding callbacks to Python and providing 
        better performance, especially for complex integrand functions.
    * scipy.sparse improvements
      * scipy.sparse.linalg.svds now takes a LinearOperator as its main input.
    * scipy.stats improvements
      * Added a Dirichlet distribution as multivariate distribution.
      * The new function `scipy.stats.median_test` computes Mood's median test.
      * `scipy.stats.describe` returns a namedtuple rather than a tuple, allowing
        users to access results by index or by name.
  * Deprecated features
    * The scipy.weave module is deprecated.  It was the only module never ported
      to Python 3.x, and is not recommended to be used for new code - use Cython
      instead.  In order to support existing code, scipy.weave has been packaged
      separately: https://github.com/scipy/weave.  It is a pure Python package, so
      can easily be installed with pip install weave.
    * scipy.special.bessel_diff_formula is deprecated.  It is a private function,
      and therefore will be removed from the public API in a following release.
  * Backwards incompatible changes
    * scipy.ndimage
      * The functions scipy.ndimage.minimum_positions,
      scipy.ndimage.maximum_positions and scipy.ndimage.extrema return
      positions as ints instead of floats.
  * Other changes
    * scipy.integrate
      * The OPTPACK and QUADPACK code has been changed to use the LAPACK matrix
        solvers rather than the bundled LINPACK code. This means that there is no
        longer any need for the bundled LINPACK routines, so they have been removed.
- Update copyright year

-------------------------------------------------------------------
Mon Aug 11 08:53:11 UTC 2014 - toddrme2178@gmail.com

- Switch to pypi download location
- Minor spec file cleanups

-------------------------------------------------------------------
Fri May 30 15:06:23 UTC 2014 - toddrme2178@gmail.com

- Mark python-scipy-weave as deprecated.
  Please use python-weave package instead.

-------------------------------------------------------------------
Thu May  8 10:16:00 UTC 2014 - toddrme2178@gmail.com

- Update to version 0.14.0
  * New features
    * scipy.interpolate improvements
      * A new wrapper function `scipy.interpolate.interpn` for 
        interpolation onregular grids has been added. `interpn` 
        supports linear and nearest-neighbor interpolation in 
        arbitrary dimensions and spline interpolation in two 
        dimensions.
      * Faster implementations of piecewise polynomials in power 
        and Bernstein polynomial bases have been added as 
        `scipy.interpolate.PPoly` and `scipy.interpolate.BPoly`. 
        New users should use these in favor of 
        `scipy.interpolate.PiecewisePolynomial`.
      * `scipy.interpolate.interp1d` now accepts non-monotonic 
        inputs and sorts them.  If performance is critical, sorting 
        can be turned off by using the new ``assume_sorted`` 
        keyword.
      * Functionality for evaluation of bivariate spline 
        derivatives in ``scipy.interpolate`` has been added.
      * The new class `scipy.interpolate.Akima1DInterpolator` 
        implements the piecewise cubic polynomial interpolation 
        scheme devised by H. Akima.
      * Functionality for fast interpolation on regular, unevenly 
        spaced grids in arbitrary dimensions has been added as 
        `scipy.interpolate.RegularGridInterpolator` .
    * ``scipy.linalg`` improvements
      * The new function `scipy.linalg.dft` computes the matrix of 
        the discrete Fourier transform.
      * A condition number estimation function for matrix 
        exponential, `scipy.linalg.expm_cond`, has been added.
    * ``scipy.optimize`` improvements
      * A set of benchmarks for optimize, which can be run with 
        ``optimize.bench()``, has been added.
      * `scipy.optimize.curve_fit` now has more controllable error 
        estimation via the ``absolute_sigma`` keyword.
      * Support for passing custom minimization methods to 
        ``optimize.minimize()``  and ``optimize.minimize_scalar()``
        has been added, currently useful especially for combining
        ``optimize.basinhopping()`` with custom local optimizer 
        routines.
    * ``scipy.stats`` improvements
      * A new class `scipy.stats.multivariate_normal` with 
        functionality for  multivariate normal random variables 
        has been added.
      * A lot of work on the ``scipy.stats`` distribution framework 
        has been done.  Moment calculations (skew and kurtosis 
        mainly) are fixed and verified, all examples are now 
        runnable, and many small accuracy and performance 
        improvements for individual distributions were merged.
      * The new function `scipy.stats.anderson_ksamp` computes the 
        k-sample Anderson-Darling test for the null hypothesis that 
        k samples come from the same parent population.
    * ``scipy.signal`` improvements
      * ``scipy.signal.iirfilter`` and related functions to design 
        Butterworth, Chebyshev, elliptical and Bessel IIR filters 
        now all use pole-zero ("zpk") format internally instead of 
        using transformations to numerator/denominator format.  
        The accuracy of the produced filters, especially high-order
        ones, is improved significantly as a result.
      * The new function `scipy.signal.vectorstrength` computes the 
        vector strength, a measure of phase synchrony, of a set of 
        events.
    * ``scipy.special`` improvements
      * The functions `scipy.special.boxcox` and 
        `scipy.special.boxcox1p`, which compute the 
        Box-Cox  transformation, have been added.
    * ``scipy.sparse`` improvements
      * Significant performance improvement in CSR, CSC, and DOK 
        indexing speed. 
      * When using Numpy >= 1.9 (to be released in MM 2014), sparse 
        matrices function correctly when given to arguments of 
        ``np.dot``, ``np.multiply`` and other ufuncs.  
        With earlier Numpy and Scipy versions, the results of such 
        operations are undefined and usually unexpected. 
      * Sparse matrices are no longer limited to ``2^31`` nonzero 
        elements.  They automatically switch to using 64-bit index 
        data type for matrices containing more elements.  User code 
        written assuming the sparse matrices use int32 as the index 
        data type will continue to work, except for such large 
        matrices. Code dealing with larger matrices needs to accept 
        either int32 or int64 indices. 
  * Deprecated features
    * ``anneal``
      * The global minimization function `scipy.optimize.anneal` is 
        deprecated.  All users should use the 
        `scipy.optimize.basinhopping` function instead.
    * ``scipy.stats``
      * ``randwcdf`` and ``randwppf`` functions are deprecated. 
        All users should use distribution-specific ``rvs`` methods 
        instead.
      * Probability calculation aliases ``zprob``, ``fprob`` and 
        ``ksprob`` are deprecated. Use instead the ``sf`` methods 
        of the corresponding distributions or the ``special`` 
        functions directly.
    * ``scipy.interpolate``
      * ``PiecewisePolynomial`` class is deprecated.
  * Backwards incompatible changes
    * scipy.special.lpmn
      * ``lpmn`` no longer accepts complex-valued arguments. A new 
        function ``clpmn`` with uniform complex analytic behavior 
        has been added, and it should be used instead.
    * scipy.sparse.linalg
      * Eigenvectors in the case of generalized eigenvalue problem 
        are normalized to unit vectors in 2-norm, rather than 
        following the LAPACK normalization convention.
      * The deprecated UMFPACK wrapper in ``scipy.sparse.linalg`` 
        has been removed due to license and install issues.  If 
        available, ``scikits.umfpack`` is still used transparently 
        in the ``spsolve`` and ``factorized`` functions.  
        Otherwise, SuperLU is used instead in these functions.
    * scipy.stats
      * The deprecated functions ``glm``, ``oneway`` and 
        ``cmedian`` have been removed from ``scipy.stats``.
      * ``stats.scoreatpercentile`` now returns an array instead of
        a list of percentiles.
    * scipy.interpolate
      * The API for computing derivatives of a monotone piecewise 
        interpolation has changed: if `p` is a 
        ``PchipInterpolator`` object, `p.derivative(der)`  
        returns a callable object representing the derivative of 
        `p`. For in-place derivatives use the second argument of 
        the `__call__` method: `p(0.1, der=2)` evaluates the 
        second derivative of `p` at `x=0.1`.
      * The method `p.derivatives` has been removed.
      
-------------------------------------------------------------------
Sun Mar  2 04:22:42 UTC 2014 - arun@gmx.de

- updated to version 0.13.3
  Issues fixed:
  * 3148: fix a memory leak in ``ndimage.label``.
  * 3216: fix weave issue with too long file names for MSVC.
  Other changes:
  * Update Sphinx theme used for html docs so ``>>>`` in examples can be toggled.

-------------------------------------------------------------------
Wed Dec 11 14:15:25 UTC 2013 - toddrme2178@gmail.com

- Update to version 0.13.2
  + require Cython 0.19, earlier versions have memory leaks in 
    fused types
  + ndimage.label fix swapped 64-bitness test
  + optimize.fmin_slsqp constraint violation
- Require python-Cython >= 0.19

-------------------------------------------------------------------
Tue Nov 19 21:23:02 UTC 2013 - p.drouand@gmail.com

- Update to version 0.13.1
  + ``ndimage.label`` returns incorrect results in scipy 0.13.0
  + ``ndimage.label`` return type changed from int32 to uint32
  + `ndimage.find_objects`` doesn't work with int32 input in some cases
  
-------------------------------------------------------------------
Fri Oct 25 15:17:10 UTC 2013 - toddrme2178@gmail.com

- Update to 0.13.0
  * Highlights
      * support for fancy indexing and boolean comparisons with 
        sparse matrices
      * interpolative decompositions and matrix functions in the 
        linalg module
      * two new trust-region solvers for unconstrained minimization
  * scipy.integrate improvements
      * N-dimensional numerical integration
      * dopri* improvements
  * scipy.linalg improvements
      * Interpolative decompositions
      * Polar decomposition
      * BLAS level 3 functions
      * Matrix functions
  * scipy.optimize improvements
      * Trust-region unconstrained minimization algorithms
  * scipy.sparse improvements
      * Boolean comparisons and sparse matrices
      * CSR and CSC fancy indexing
  * scipy.io improvements
      * Unformatted Fortran file reader
      * scipy.io.wavfile enhancements
  * scipy.interpolate improvements
      * B-spline derivatives and antiderivatives
  * Deprecated features
    * expm2 and expm3
    * scipy.stats functions
  * Backwards incompatible changes
    * LIL matrix assignment
    * Deprecated radon function removed
    * Removed deprecated keywords xa and xb from 
      stats.distributions
    * Changes to MATLAB file readers / writers
- Add a new flag to easily enable/disable atlas support for if it
  ever gets fixed in the future
- Added numpy version number to requires and buildrequires
- Updated rpmlint fixes

-------------------------------------------------------------------
Sun Apr 14 04:43:43 UTC 2013 - termim@gmail.com

- Update to version 0.12.0
  Some of the highlights of this release are:
  * Completed QHull wrappers in scipy.spatial.
  * cKDTree now a drop-in replacement for KDTree.
  * A new global optimizer, basinhopping.
  * Support for Python 2 and Python 3 from the same code base (no more 2to3).
 
-------------------------------------------------------------------
Mon Oct  1 12:45:12 UTC 2012 - toddrme2178@gmail.com

- Update to version 0.11.0:
  * Sparse Graph Submodule
  * scipy.optimize improvements
    * A unified interface to minimizers of univariate and 
      multivariate functions has been added. 
    * A unified interface to root finding algorithms for 
      multivariate functions has been added.
    * The L-BFGS-B algorithm has been updated to version 3.0.
  * scipy.linalg improvements
    * New matrix equation solvers
    * QZ and QR Decomposition
    * Pascal matrices
    * Sparse matrix construction and operations
    * LSMR iterative solver 
    * Discrete Sine Transform
  * scipy.interpolate improvements
    * Interpolation in spherical coordinates
  * scipy.stats improvements
    * Binned statistics
- Remove upstreamed patches

-------------------------------------------------------------------
Mon Aug 27 09:12:38 UTC 2012 - toddrme2178@gmail.com

- Disable broken libatlas3

-------------------------------------------------------------------
Mon Jun  4 15:32:19 UTC 2012 - toddrme2178@gmail.com

- Add suitesparse buildrequires
- Remove blas/lapack tests since these build successfully on all
  targets now
  
-------------------------------------------------------------------
Tue May 29 19:51:34 UTC 2012 - cfarrell@suse.com

- license update: BSD-3-Clause
  No LGPL licenses found in the package

-------------------------------------------------------------------
Tue May 29 11:28:00 UTC 2012 - toddrme2178@gmail.com

- Don't build against libatlas on factory since libatlas doesn't 
  work there

-------------------------------------------------------------------
Fri May 18 08:54:19 UTC 2012 - toddrme2178@gmail.com

- Fix rmplint warnings
- Clean up spec file formatting

-------------------------------------------------------------------
Mon Apr 30 15:17:34 UTC 2012 - toddrme2178@gmail.com

- Removed tests for unsupported openSUSE versions

-------------------------------------------------------------------
Tue Apr 24 12:06:38 UTC 2012 - toddrme2178@gmail.com

- Add python 3 package

-------------------------------------------------------------------
Sat Apr 14 03:11:58 UTC 2012 - badshah400@gmail.com

- Modify BuildRequires to match recent name changes of lapack and
  blas in project. 

-------------------------------------------------------------------
Tue Mar 27 09:35:10 UTC 2012 - saschpe@suse.de

- Update to version 0.10.1:
  * AFAICS, upstream provides no changelog
- Spec file cleanup:
  * New sub-package weave provides the devel package (only headers in
    a 'devel' package won't work)
  * Don't ship testsuite and package weave examples as documentation
  * Set license to SDPX style

-------------------------------------------------------------------
Sun Oct  2 22:16:43 CEST 2011 - behrisch@users.sf.net

- update to 0.10.0b2
- added patch for fortran functions returning random data
- prepared addition of ufsparse

-------------------------------------------------------------------
Mon Sep 13 08:13:03 UTC 2010 - coolo@novell.com

- update to 0.8.0:
   * Python 3 compat
   * Major documentation improvements
   * Deprecated features
      o Swapping inputs for correlation functions (scipy.signal)
      o Obsolete code deprecated (scipy.misc)
   * New features
      o DCT support (scipy.fftpack)
      o Single precision support for fft functions (scipy.fftpack)
      o Correlation functions now implement the usual definition (scipy.signal)
      o Additions and modification to LTI functions (scipy.signal)
    ... many more, see 0.8.0-notes.rst

-------------------------------------------------------------------
Tue Jul 14 17:44:43 CEST 2009 - lars@linux-schulserver.de

- update to 0.7.1:
  + Several fixes in Matlab file IO
  + Work around a failure with Python 2.6
  + Memory leak in lfilter have been fixed
  + Several bugs of varying severity were fixed in the special 
    functions
- adapted patches to latest version
- also package release notes

-------------------------------------------------------------------
Sun Jun 21 12:12:10 CEST 2009 - lars@linux-schulserver.de

- update to 0.7.0.3 (0.7.1rc3):
  + bugfix release
- adapted patches:
  + scipy-0.7.1rc3-implicit-fortify-decl.patch (xerbla.c)
  + scipy-0.7.1rc3-undefined_operation.patch (zutil.c; cutil.c) 
- new patches:
  + scipy-0.7.1rc3-umfpack-include.patch (fix to find umfpack)
  + scipy-0.7.1rc3-atlas-include.patch (fix to find atlas)
  + scipy-0.7.1rc3-superlu.patch (correct use of fprintf)
- enable umfpack, atlas and amd support
- drop devel subpackage 
- enable mandriva build

-------------------------------------------------------------------
Mon Mar  9 15:55:36 CET 2009 - lars@linux-schulserver.de

- update to 0.7.0:
  SciPy 0.7.0 is the culmination of 16 months of hard work. It 
  contains many new features, numerous bug-fixes, improved test 
  coverage and better documentation.
  + Python 2.6 support (NOT Python 3.0)
  + Major documentation improvements
  + Support for NumScons has been added
  + Sandbox Removed
  + Sparse matrices have seen extensive improvements
  + Statistical functions for masked arrays have been added
  + The IO code in both NumPy and SciPy is being extensively
    reworked
  + New Hierarchical Clustering module
  + New Spatial package
  + Reworked fftpack package
  + New Constants package
  + New Radial Basis Function module
  + New complex ODE integrator
  + New generalized symmetric and hermitian eigenvalue problem solver
  + Bug fixes in the interpolation package
  + Weave clean up
- adapted patches to new source  

-------------------------------------------------------------------
Fri Dec 19 23:48:19 CET 2008 - lars@linux-schulserver.de

- fix compile errors on 11.1 and Factory (should go upstream):
  + scipy-0.6.0-implicit-fortify-decl.patch
  + scipy-0.6.0-undefined_operation.patch
  + scipy-0.6.0-no-return-in-nonvoid-function.patch

-------------------------------------------------------------------
Thu Oct 30 21:29:56 CET 2008 - lars@linux-schulserver.de

- temporary fix _Py_c_abs compile error on new python

-------------------------------------------------------------------
Thu Sep 25 16:21:33 CEST 2008 - lars@linux-schulserver.de

- moved to Education base repository

-------------------------------------------------------------------
Thu Jul 01 14:10:10 CEST 2008 - andrea@opensuse-org

- fixed spec file
- libblas-devel is now libblas3 and blas to avoid version conflicts
- devel package splitted out to make rpmlint happy

-------------------------------------------------------------------
Sun May 11 18:11:16 CEST 2008 - lars@linux-schulserver.de

- build for openSUSE-Education
- Require python-numpy-devel for build
- blas-devel is now libblas-devel
- beautify specfile

-------------------------------------------------------------------
Tue Nov 06 00:00:00 CEST 2007 Felix Richter <felix.richter2@uni-rostock.de>

- version bump to 0.6.0

-------------------------------------------------------------------
Fri Oct 19 00:00:00 CEST 2007 Werner Hoch <werner.ho@gmx.de>

- removed blas/lapack-devel packages for newer distributions

-------------------------------------------------------------------
Sat Sep 08 00:00:00 CEST 2007 Werner Hoch <werner.ho@gmx.de>

- new version 0.5.2.1

-------------------------------------------------------------------
Fri Jan 19 00:00:00 CEST 2007 Werner Hoch <werner.ho@gmx.de>

- version upgraded to 0.5.2

-------------------------------------------------------------------
Thu Dec 05 00:00:00 CEST 2006 Werner Hoch <werner.ho@gmx.de>

- added blas-devel and lapack-devel to BuildRequires

-------------------------------------------------------------------
Thu Sep 28 00:00:00 CEST 2006 Werner Hoch <werner.ho@gmx.de>

- Initial build.
