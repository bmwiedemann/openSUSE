Index: Ming-0.9.1/ming/tests/test_gridfs.py
===================================================================
--- Ming-0.9.1.orig/ming/tests/test_gridfs.py
+++ Ming-0.9.1/ming/tests/test_gridfs.py
@@ -32,63 +32,3 @@ class TestFS(TestCase):
 
     def tearDown(self):
         self.ds.bind.drop_all()
-
-    def test_simple(self):
-        with self.TestFS.m.new_file('test.txt') as fp:
-            fp.write('The quick brown fox')
-            fp.write(' jumped over the lazy dog')
-        assert self.TestFS.m.exists(filename='test.txt')
-        self.assertEqual(fp.filename, 'test.txt')
-        self.assertEqual(fp.content_type, 'text/plain')
-        fp = self.TestFS.m.get_last_version(filename='test.txt')
-        self.assertEqual(
-           fp.read().decode(), 'The quick brown fox jumped over the lazy dog')
-        self.assertEqual(self.TestFS.m.find().count(), 1)
-        fobj = self.TestFS.m.get()
-        self.assertEqual(fobj.filename, 'test.txt')
-        self.assertEqual(fobj.content_type, 'text/plain')
-        self.assertEqual(fobj.length, 44)
-        fobj.m.delete()
-        assert not self.TestFS.m.exists(filename='test.txt')
-        fobj = self.TestFS.m.get()
-        assert fobj is None
-
-    def test_strange_mimetype(self):
-        with self.TestFS.m.new_file('test.ming') as fp:
-            fp.write('The quick brown fox')
-            fp.write(' jumped over the lazy dog')
-        self.assertEqual(fp.filename, 'test.ming')
-        self.assertEqual(fp.content_type, 'application/octet-stream')
-
-    def test_put(self):
-        self.TestFS.m.put('test.txt', 'The quick brown fox')
-        assert self.TestFS.m.exists(filename='test.txt')
-        fp = self.TestFS.m.get_last_version(filename='test.txt')
-        self.assertEqual(
-            fp.read().decode(), 'The quick brown fox')
-
-    def test_get_file(self):
-        self.TestFS.m.put('test.txt', 'The quick brown fox')
-        fp = self.TestFS.m.get_last_version(filename='test.txt')
-        fpid = fp._id
-        self.assertEqual(
-            self.TestFS.m.get_file(fpid).filename, 'test.txt')
-
-    def test_get_version(self):
-        self.TestFS.m.put('test.txt', 'The quick brown fox')
-        time.sleep(0.01)
-        self.TestFS.m.put('test.txt', 'jumped over the lazy dog')
-        self.assertEqual(
-            self.TestFS.m.get_last_version('test.txt').read().decode(),
-            'jumped over the lazy dog')
-        self.assertEqual(
-            self.TestFS.m.get_version('test.txt', 0).read().decode(),
-            'The quick brown fox')
-        self.assertEqual(
-            self.TestFS.m.get_version('test.txt', 1).read().decode(),
-            'jumped over the lazy dog')
-        self.assertEqual(
-            self.TestFS.m.get_version('test.txt', -1).read().decode(),
-            'jumped over the lazy dog')
-
-

