<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>b92cbe3daf055d29ee49bdd4400c8aa2</srcmd5>
    <version>3.8.0</version>
    <time>1663850984</time>
    <user>dimstar_suse</user>
    <comment>dep of sr#1004914</comment>
    <requestid>1005242</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>085e7c2a232145e6b3bc29ad07157f23</srcmd5>
    <version>3.8.1</version>
    <time>1667067398</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1032049</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>60c98752411e5c43dde6c1ede50ae8ff</srcmd5>
    <version>3.8.3</version>
    <time>1672754729</time>
    <user>dimstar_suse</user>
    <comment>- update to 3.8.3:
  * `orjson.dumps()` accepts `option=None` per `Optional[int]` type.
  * Fix tests on 32-bit for `numpy.intp` and `numpy.uintp`.
  * Build now depends on rustc 1.60 or later.
  * Support building with maturin 0.13 or 0.14.</comment>
    <requestid>1046301</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>2bbd311227964854923c91f9db5bd60f</srcmd5>
    <version>3.8.10</version>
    <time>1681470804</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.8.10:
  - Fix compatibility with CPython 3.12.0a7.
  - Fix compatibility with big-endian architectures.
  - Fix crash in serialization.
  - Fix parallel initialization of orjson.
</comment>
    <requestid>1079288</requestid>
  </revision>
  <revision rev="5" vrev="2">
    <srcmd5>be7f3c006262e98e1903d309daa086ee</srcmd5>
    <version>3.8.10</version>
    <time>1686576347</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1092239</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>c0dc1c435b4c072ca9b2e1d2e282fd45</srcmd5>
    <version>3.9.10</version>
    <time>1705353599</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1138742</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>a50b0e18851eef3d84d8d1e581064d55</srcmd5>
    <version>3.9.15</version>
    <time>1709239794</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.9.15 (bsc#1220489, CVE-2024-27454):
  * Implement recursion limit of 1024 on orjson.loads().
  * Use byte-exact read on str formatting SIMD path to avoid crash.
- 3.9.14:
  * Fix crash serializing str introduced in 3.9.11.
  * Build now depends on Rust 1.72 or later.
- 3.9.13:
  * Serialization str escape uses only 128-bit SIMD.
  * Fix compatibility with CPython 3.13 alpha 3.
  * Publish musllinux_1_2 instead of musllinux_1_1 wheels.
  * Serialization uses small integer optimization in CPython 3.12 or later.
- 3.9.12:
  * Minimal musllinux_1_1 build due to sporadic CI failure.
- 3.9.11:
  * Improve performance of serializing. str is significantly faster. Documents
    using dict, list, and tuple are somewhat faster.
- Update to 3.9.10
  * Fix debug assert failure on 3.12 --profile=dev build.
- Release 3.9.9
  * orjson module metadata explicitly marks subinterpreters as not
    supported.
- Release 3.9.8
  * Improve performance.
  * Drop support for Python 3.7.
- Release 3.9.7
  * Fix crash in orjson.loads() due to non-reentrant handling of
    persistent buffer. This was introduced in 3.9.3.
  * Handle some FFI removals in CPython 3.13.
- Release 3.9.6
  * Fix numpy reference leak on unsupported array dtype.
  * Fix numpy.datetime64 reference handling.
  * Minor performance improvements.
- Release 3.9.5
  * Remove futex from module import and initialization path.
- Release 3.9.4
  * Fix hash builder using default values.
  * Fix non-release builds of orjson copying large deserialization
    buffer from stack to heap. This was introduced in 3.9.3.
- Release 3.9.3
  * Fix compatibility with CPython 3.12.
  * Support i686/x86 32-bit Python installs on Windows.
- Release 3.9.2
  * Fix the __cause__ exception on orjson.JSONEncodeError possibly
    being denormalized, i.e., of type str instead of Exception.
- Release 3.9.1
  * Fix memory leak on chained tracebacks of exceptions raised in
    default. This was introduced in 3.8.12.
- Release 3.9.0
  * orjson.Fragment includes already-serialized JSON in a document.
- Release 3.8.13
  * Source distribution contains all source code required for an
    offline build.
  * Build uses maturin v1.
- Release 3.8.12
    * Exceptions raised in default are now chained as the __cause__
      attribute on orjson.JSONEncodeError.
- Release 3.8.11
  * orjson.loads() on an empty document has a specific error
    message.
- Avoid cargo_audit error because of shipped old vulnerable
  zerocopy: Devendor the shipped cargo and update the cargo_vendor
  service
- Add %{?sle15_python_module_pythons}
- Update to 3.8.10:
  - Fix compatibility with CPython 3.12.0a7.
  - Fix compatibility with big-endian architectures.
  - Fix crash in serialization.
  - Fix parallel initialization of orjson.
- update to 3.8.3:
  * `orjson.dumps()` accepts `option=None` per `Optional[int]` type.
  * Fix tests on 32-bit for `numpy.intp` and `numpy.uintp`.
  * Build now depends on rustc 1.60 or later.
  * Support building with maturin 0.13 or 0.14.
- Update to 3.8.1 
  - Build maintenance for Python 3.11.
- Update to 3.8.0:
  - Support serializing numpy.int16 and numpy.uint16.
  - Fix datetime regression tests with tzinfo 2022b.
- Activate test suite
- Tidy spec
- initial package of version 3.7.7
</comment>
    <requestid>1153104</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>71744a507c82fbe2fc7d344b0e7928a9</srcmd5>
    <version>3.10.7</version>
    <time>1725995545</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1199665</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>83a2c84d817128e6182583ccaeb39bae</srcmd5>
    <version>3.10.12</version>
    <time>1733255141</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1227755</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>008ae5c812520300f6f36b95f9ebce6f</srcmd5>
    <version>3.10.14</version>
    <time>1736676559</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1236919</requestid>
  </revision>
</revisionlist>
