-------------------------------------------------------------------
Thu Jun  6 10:36:17 UTC 2024 - John Paul Adrian Glaubitz <adrian.glaubitz@suse.com>

- Update to 5.6.4
  * Fixed compilation of C extension failing on GCC 14
  * Fixed compiler warnings when building C extension
- Drop patches for issues fixed upstream
  * https://github.com/agronholm/cbor2/pull/238.patch

-------------------------------------------------------------------
Wed Jun  5 15:47:30 UTC 2024 - John Paul Adrian Glaubitz <adrian.glaubitz@suse.com>

- Update to 5.6.3
  * Fixed decoding of epoch-based dates being affected by the local
    time zone in the C extension
- from version 5.6.2
  * Fixed ``__hash__()`` of the C version of the ``CBORTag`` type crashing
    when there's a recursive reference cycle
  * Fixed type annotation for the file object in ``cbor2.dump()``, ``cbor2.load()``,
    ``CBOREncoder`` and ``CBORDecoder`` to be ``IO[bytes]`` instead of ``BytesIO``
  * Worked around a `CPython bug <https://github.com/python/cpython/issues/99612>`_
    that caused a ``SystemError`` to be raised, or even a buffer overflow to occur
    when decoding a long text string that contained only ASCII characters
  * Changed the return type annotations of ``cbor2.load()`` and ``cbor2.load()``
    to return ``Any`` instead of ``object`` so as not to force users to make type casts
- from version 5.6.1
  * Fixed use-after-free in the decoder's C version when prematurely encountering
    the end of stream
  * Fixed the C version of the decoder improperly raising ``CBORDecodeEOF`` when
    decoding a text string longer than 65536 bytes
- from version 5.6.0
  * Added the ``cbor2`` command line tool (for ``pipx run cbor2``)
  * Added support for native date encoding (bschoenmaeckers)
  * Made the C extension mandatory when the environment variable
    ``CBOR2_BUILD_C_EXTENSION`` is set to ``1``.
  * Fixed ``SystemError`` in the C extension when decoding a ``Fractional``
    with a bad number of arguments or a non-tuple value
  * Fixed ``SystemError`` in the C extension when the decoder object hook
    raises an exception
  * Fixed a segmentation fault when decoding invalid unicode data
  * Fixed infinite recursion when trying to hash a CBOR tag whose
    value points to the tag itself
  * Fixed ``MemoryError`` when maliciously constructed bytestrings or string
    (declared to be absurdly large) are being decoded
  * Fixed ``UnicodeDecodeError`` from failed parsing of a UTF-8 text string
    not being wrapped as ``CBORDecodeValueError``
  * Fixed ``TypeError`` or ``ZeroDivisionError`` from a failed decoding of
    ``Fraction`` not being wrapped as ``CBORDecodeValueError``
  * Fixed ``TypeError`` or ``ValueError`` from a failed decoding of ``UUID``
    not being wrapped as ``CBORDecodeValueError``
  * Fixed ``TypeError`` from a failed decoding of ``MIMEMessage`` not being
    wrapped as ``CBORDecodeValueError``
  * Fixed ``OverflowError``, ``OSError`` or ``ValueError`` from a failed decoding
    of epoch-based ``datetime`` not being wrapped as ``CBORDecodeValueError``
- Cherry-pick upstream patch to fix build with GCC 14
  * https://github.com/agronholm/cbor2/pull/238.patch
- Add update-alternatives to Requires for post and postun
- Install cbor2 binary in %files section using %python_alternative
- Run %python_install_alternative in %post section
- Run %python_uninstall_alternative in %postun section
- Set CBOR2_BUILD_C_EXTENSION to 1 to build C extension

-------------------------------------------------------------------
Thu Dec 14 09:18:38 UTC 2023 - Petr Gajdos <pgajdos@suse.com>

- update to 5.5.1:
  * Fixed ``CBORSimpleValue`` allowing the use of reserved values
    (24 to 31) which resulted in invalid byte sequences
  * Fixed encoding of simple values from 20 to 23 producing the
    wrong byte sequences
  * The ``cbor2.encoder``, ``cbor2.decoder`` or ``cbor2.types``
    modules were deprecated – import their contents directly
    from ``cbor2`` from now on. The old modules will be removed
    in the next major release.
  * Added support for Python 3.12
  * Added type annotations
  * Dropped support for Python 3.7
  * Fixed bug in the ``fp`` attribute of the built-in version of
    ``CBORDecoder`` and ``CBOREncoder`` where the getter returns
    an invalid pointer if the ``read`` method of the file was a
    built-in method

-------------------------------------------------------------------
Sun Jun 11 13:37:55 UTC 2023 - ecsos <ecsos@opensuse.org>

- Add %{?sle15_python_module_pythons}

-------------------------------------------------------------------
Sat Jan  7 23:33:26 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 5.4.6:
  * Fix tag decoding error
  * fix potential memory leak
  * Bump requirement to 3.7+

-------------------------------------------------------------------
Sat Jan 15 17:50:18 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 5.4.2:
  * Fix segfault when initializing CBORTag with incorrect arguments
  * Fix sphinx build warnings
  * Fix SystemErrors when using C-backend, meaningful exceptions now raised
  * Fix precision loss when decoding base10 decimal fractions
  * Made CBORTag handling consistent between python and C-module

-------------------------------------------------------------------
Tue Jun  8 12:53:06 UTC 2021 - Dirk Müller <dmueller@suse.com>

- update to 5.4.0:
  * Added new feature stringrefs, which makes repetitive dictionary structures
    more compact. Use with care since support for this is rare in other CBOR
    implementations.
  * This release includes some bugfixes around decoding invalid data, which may
    improve security on decoding untrusted data.

-------------------------------------------------------------------
Thu Apr 22 20:17:32 UTC 2021 - Dirk Müller <dmueller@suse.com>

- update to 5.2.0:
  * Final version tested with Python 2.7 and 3.5
  * README: Announce deprecation of Python 2.7, 3.5
  * README: More detail and examples
  * Bugfix: Fix segfault on loading huge arrays with C-backend (Sekenre)
  * Build system: Allow packagers to force C-backend building or disable using env var (jameshilliard)
  * Feature: :module:`cbor2.tool` Command line diagnostic tool (Sekenre)
  * Feature: Ignore semantic tag used for file magic 55799 AKA "Self-Described CBOR" (kalcutter)

-------------------------------------------------------------------
Fri Aug 21 10:06:22 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- Update to version 5.1.2
 * Refcount bug in C lib causing intermittent segfaults on shutdown
 * Fractional seconds parsing in datetimes

-------------------------------------------------------------------
Mon Mar 30 12:59:56 UTC 2020 - Marketa Calabkova <mcalabkova@suse.com>

- update to version 5.1.0
  * Minor API change :class:`CBORSimpleValue` is now a subclass of namedtuple and allows
    all numeric comparisons. This brings functional parity between C and Python modules.
  * Fixes for C-module on big-endian systems including floating point decoding, smallint encoding,
    and boolean argument handling. Tested on s390x and MIPS32.
  * Increase version requred of setuptools during install due to unicode errors.

-------------------------------------------------------------------
Mon Mar  9 08:31:26 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- On python3 this package is compiled, so mark it such

-------------------------------------------------------------------
Fri Jan 24 13:45:03 UTC 2020 - Marketa Calabkova <mcalabkova@suse.com>

- update to version 5.0.1
  * Fix deprecation warning on python 3.7, 3.8
  * BACKWARD INCOMPATIBLE CBOR does not have a bare DATE type,
    encoding dates as datetimes is disabled by default
  * few major changes in the API, see docs/versionhistory.rst
  * Optional Pure C implementation by waveform80 that functions
    identically to the pure Python implementation
  * Drop Python 3.3 and 3.4 support from the build process
  * Added support for encoding and decoding IPv4 and IPv6 addresses

-------------------------------------------------------------------
Tue Feb 19 02:42:46 AM UTC 2019 - John Vandenberg <jayvdb@gmail.com>

- Initial spec for v4.1.2
