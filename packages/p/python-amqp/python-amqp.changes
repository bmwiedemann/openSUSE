-------------------------------------------------------------------
Mon Feb  1 17:40:55 UTC 2021 - Dirk Müller <dmueller@suse.com>

- update to 5.0.5:
  - Removed mistakenly introduced code which was causing import errors
  - Add missing load_default_certs() call to fix a regression in v5.0.3 release. (#350)
  - Change the default value of ssl_version to None. When not set, the
    proper value between ssl.PROTOCOL_TLS_CLIENT and ssl.PROTOCOL_TLS_SERVER
    will be selected based on the param server_side in order to create
    a TLS Context object with better defaults that fit the desired
    connection side.
  - Change the default value of cert_reqs to None. The default value
    of ctx.verify_mode is ssl.CERT_NONE, but when ssl.PROTOCOL_TLS_CLIENT
    is used, ctx.verify_mode defaults to ssl.CERT_REQUIRED.
  - Fix context.check_hostname logic. Checking the hostname depends on
    having support of the SNI TLS extension and being provided with a
    server_hostname value. Another important thing to mention is that
    enabling hostname checking automatically sets verify_mode from
    ssl.CERT_NONE to ssl.CERT_REQUIRED in the stdlib ssl and it cannot
    be set back to ssl.CERT_NONE as long as hostname checking is enabled.
  - Refactor the SNI tests to test one thing at a time and removing some
    tests that were being repeated over an 

-------------------------------------------------------------------
Sun Dec 20 09:46:14 UTC 2020 - Dirk Müller <dmueller@suse.com>

- update to 5.0.2:
  - Whhels are no longer universal.
  - Added debug representation to Connection and *Transport classes
  - Reintroduce ca_certs and ciphers parameters of SSLTransport._wrap_socket_sni()
  - Fix infinite wait when using confirm_publish

-------------------------------------------------------------------
Tue Nov 10 03:55:27 UTC 2020 - Steve Kowalik <steven.kowalik@suse.com>

- Update to 5.0.1:
  * Require vine 5.0.0.
  * Stop to use deprecated method ssl.wrap_socket.
  * Dropped Python 3.5 support.
  * Removed additional compatibility code.
  * Dropped Python 2.x support.
  * Dropped Python 3.4 support.
- Add vine-no-double-equals-deps.patch that loosens the vine requirement

-------------------------------------------------------------------
Tue Aug  4 12:09:50 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- update to 2.6.1:
  - Fix buffer overflow in frame_writer after frame_max is increased. `frame_writer`
  allocates a `bytearray` on intialization with a length based on the `connection.frame_max`
  value. If `connection.frame_max` is changed to a larger value, this causes an
  error like `pack_into requires a buffer of at least 408736 bytes`.

-------------------------------------------------------------------
Mon Jun  8 13:29:28 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- update to 2.6.0:
  - Implement speedups in cython (#311)
  - Updated some tests & code improvements
  - Separate logger for Connection.heartbeat_tick method
  - Cython generic content (#315)
  - Improve documentation a_global parameter of basic_qos() method.
  - Fix saving partial read buffer on windows during socket timeout. (#321)
  - Fix deserialization of long string field values that are not utf-8.
  - Added simple cythonization of abstract_channel.py
  - Speedups of serialization.py are more restrictive

-------------------------------------------------------------------
Wed Oct  9 08:40:24 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 2.5.2:
  - Ignore all methods except Close and Close-OK when channel/connection is closing
  - Fix faulty ssl sni intiation parameters (#283) 
  - Undeprecate auto_delete flag for exchanges. (#287) 
  - Improved tests and testing environments

-------------------------------------------------------------------
Wed Sep 11 13:18:08 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 2.5.1:
  - Ignore all methods except Close and Close-OK when channel/connection is closing
  - Fix faulty ssl sni intiation parameters (#283) 
  - Undeprecate auto_delete flag for exchanges. (#287) 
  - Improved tests and testing environments

-------------------------------------------------------------------
Fri Jul 19 10:45:30 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Do not depend on pytest-sugar, it is just pretty-formatter

-------------------------------------------------------------------
Fri Jun  7 14:40:51 UTC 2019 - Marketa Calabkova <mcalabkova@suse.com>

- Update to 2.5.0
  - Drop Python 3.4
  - Add new platform
  - Numerious bug fixes

-------------------------------------------------------------------
Wed Mar  6 11:42:22 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 2.4.2:
  - Added support for the Cygwin platform
  - Correct offset incrementation when parsing bitmaps.
  - Consequent bitmaps are now parsed correctly.

-------------------------------------------------------------------
Fri Feb 15 11:55:34 UTC 2019 - Matej Cepl <mcepl@suse.com>

- Better call of py.test

-------------------------------------------------------------------
Fri Feb 15 09:32:49 UTC 2019 - John Vandenberg <jayvdb@gmail.com>

- Add versions to dependencies
- Remove python-sasl from build dependencies
- Update to version 2.4.1
  * To avoid breaking the API basic_consume() now returns the consumer tag
    instead of a tuple when nowait is True.
  * Fix crash in basic_publish when broker does not support connection.blocked
    capability.
  * read_frame() is now Python 3 compatible for large payloads.
  * Support float read_timeout/write_timeout.
  * Always treat SSLError timeouts as socket timeouts.
  * Treat EWOULDBLOCK as timeout.
- from 2.4.0
  * Fix inconsistent frame_handler return value.
    The function returned by frame_handler is meant to return True
    once the complete message is received and the callback is called,
    False otherwise.
    This fixes the return value for messages with a body split across
    multiple frames, and heartbeat frames.
  * Don't default content_encoding to utf-8 for bytes.
    This is not an acceptable default as the content may not be
    valid utf-8, and even if it is, the producer likely does not
    expect the message to be decoded by the consumer.
  * Fix encoding of messages with multibyte characters.
    Body length was previously calculated using string length,
    which may be less than the length of the encoded body when
    it contains multibyte sequences. This caused the body of
    the frame to be truncated.
  * Respect content_encoding when encoding messages.
    Previously the content_encoding was ignored and messages
    were always encoded as utf-8. This caused messages to be
    incorrectly decoded if content_encoding is properly respected
    when decoding.
  * Fix AMQP protocol header for AMQP 0-9-1.
    Previously it was set to a different value for unknown reasons.
  * Add support for Python 3.7.
    Change direct SSLSocket instantiation with wrap_socket.
  * Add support for field type "x" (byte array).
  * If there is an exception raised on Connection.connect or
    Connection.close, ensure that the underlying transport socket
    is closed.  Adjust exception message on connection errors as well.
  * TCP_USER_TIMEOUT has to be excluded from KNOWN_TCP_OPTS in BSD platforms.
  * Handle negative acknowledgments.
  * Added integration tests.
  * Fix basic_consume() with no consumer_tag provided.
  * Improved empty AMQPError string representation.
  * Drain events before publish.
    This is needed to capture out of memory messages for clients that only
    publish. Otherwise on_blocked is never called.
  * Don't revive channel when connection is closing.
    When connection is closing don't raise error when Channel.Close
    method is received.

-------------------------------------------------------------------
Sun Jul  1 02:15:08 UTC 2018 - arun@gmx.de

- specfile:
  * added dependency pytest-sugar

-------------------------------------------------------------------
Sun Jun 24 15:30:55 UTC 2018 - arun@gmx.de

- update to version 2.3.2:
  * Fix a regression that occurs when running amqp under Python 2.7 on
    OSX.  TCP_USER_TIMEOUT is not available when running on OSX.  We
    now remove it from the set of known TCP options.

- changes from version 2.3.1:
  * Fix a regression that occurs when running amqp under Python 2.7.
    #182 mistakingly replaced a type check with unicode to string_t
    which is str in Python 2.7. text_t should have been used instead.
    This is now fixed and the tests have been adjusted to ensure this
    never regresses again.

-------------------------------------------------------------------
Sun May 27 16:31:21 UTC 2018 - arun@gmx.de

- update to version 2.3.0:
  * Cleanup TCP configurations across platforms and unified defaults.
    Fix contributed by **Dan Chowdhury**
  * Fix for TypeError when setting socket options.  Fix contributed by
    **Matthias Erll**
  * Ensure that all call sites for decoding bytes to str allow
    surrogates, as the encoding mechanism now supports.  Fix
    contributed by **Stephen Hatch**
  * Don't send AAAA DNS request when domain resolved to IPv4 address.
    Fix contributed by **Ihar Hrachyshka & Omer Katz**
  * Support for EXTERNAL authentication and specific login_method.
    Fix contributed by **Matthias Erll**
  * If the old python-gssapi library is installed the gssapi module
    will be available.  We now ensure that we only use the new gssapi
    library.  Fix contributed by **Jacopo Notarstefano**

-------------------------------------------------------------------
Wed Jan 10 12:14:22 UTC 2018 - mpluskal@suse.com

- Fix building on pre Factory distros by not running test suite
  (which fails due to old sasl)

-------------------------------------------------------------------
Tue Nov 14 23:22:19 UTC 2017 - dmueller@suse.com

- fix build by adding sasl as BuildRequires

-------------------------------------------------------------------
Sun Oct 15 22:25:08 UTC 2017 - arun@gmx.de

- specfile:
  * added fdupes

- update to version 2.2.2:
  * Sending empty messages no longer hangs. Instead an empty message
    is sent correctly.(addresses #151) Fix contributed by **Christian
    Blades**
  * Fixed compatibility issues in UTF-8 encoding behavior between
    Py2/Py3 (#164) Fix contributed by **Tyler James Harden**

- changes from version 2.2.1:
  * Fix implicit conversion from bytes to string on the connection
    object. (Issue #155) This issue has caused Celery to crash on
    connection to RabbitMQ.  Fix contributed by **Omer Katz**

- changes from version 2.2.0:
  * Fix random delays in task execution.  This is a bug that caused
    performance issues due to polling timeouts that occur when
    receiving incomplete AMQP frames. (Issues #3978 #3737 #3814) Fix
    contributed by **Robert Kopaczewski**
  * Calling "conn.collect()" multiple times will no longer raise an
    "AttributeError" when no channels exist.  Fix contributed by
    **Gord Chung**
  * Fix compatibility code for Python 2.7.6.  Fix contributed by
    **Jonathan Schuff**
  * When running in Windows, py-amqp will no longer use the
    unsupported TCP option TCP_MAXSEG.  Fix contributed by **Tony
    Breeds**
  * Added support for setting the SNI hostname header.  The SSL
    protocol version is now set to SSLv23 Contributed by **Dhananjay
    Sathe**
  * Authentication mechanisms were refactored to be more
    modular. GSSAPI authentication is now supported.  Contributed by
    **Alexander Dutton**
  * Do not reconnect on collect.  Fix contributed by **Gord Chung**

-------------------------------------------------------------------
Wed Mar 15 09:15:18 UTC 2017 - tbechtold@suse.com

- update to 2.1.4:
  - Removes byte string comparison warnings when running under ``python -b``.
  - Linux version parsing broke when the version included a '+' character
    (Issue #119).
  - Now sets default TCP settings for platforms that support them (e.g. Linux).
  - Fixes compatibility with Python 2.7.5 and below (Issue #107).
  - Linux: Now sets the :data:`~socket.TCP_USER_TIMEOUT` flag if available
    for better failed connection detection.
  - Python compatibility: Fixed compatibility when using the python ``-b`` flag.
  - Frame writer: Account for overhead when calculating frame size.
  - Frame writer: Account for overhead when calculating frame size.
  - Datetimes in method frame arguments are now handled properly.
  - Fixed compatibility with Python <= 2.7.6
  - Frame_writer is no longer a generator, which should solve
    a rare "generator already executing" error (Issue #103).
  - SSLTransport: Fixed crash "no attribute sslopts" when ``ssl=True``
    (Issue #100).
  - Fixed incompatible argument spec for ``Connection.Close`` (Issue #45).
    This caused the RabbitMQ server to raise an exception (INTERNAL ERROR).
  - Transport: No longer implements `__del__` to make sure gc can collect
    connections.
  - Python 3: Installation requirements ended up being a generator
    and crashed setup.py.
  - Python <= 2.7.7: struct.pack arguments cannot be unicode
  - Python 3.4: Fixed use of `bytes % int`.
  - Connection/Transport: Fixed handling of default port.
  - Adds backward compatibility layer for the 1.4 API.
  - Fixes kombu 3.0/celery 3.1 compatibility (Issue #88).
  - Fixed compatibility with Python 2.7.3 (Issue #85)
  - Fixed bug where calling drain_events() with a timeout of 0 would actually
    block until a frame is received.
  - Documentation moved to http://amqp.readthedocs.io (Issue #89).
  - No longer supports Python 2.6
  - You must now call Connection.connect() to establish the connection.
  - Library rewritten to anticipate async changes.
  - Connection now exposes underlying socket options.
  - Additional logging for heartbeats.
  - SSL: Fixes issue with remote connection hanging
  - SSL: ``ssl`` dict argument now supports the ``check_hostname`` key
    (Issue #63).
- Drop tune-keepalive-intervals.diff . Similar solution applied upstream
- Drop amqp-drop-sphinxcontrib-issuetracker-dependency.patch. No longer
  needed
- Switch to singlespec approach
- Drop doc build

-------------------------------------------------------------------
Wed Jan 13 17:10:55 UTC 2016 - antoine.belvire@laposte.net

- Update to 1.4.9:
  * Fix compatibility with Linux/OS X instances where the
    ``ctypes`` module does not exist
- Changes from 1.4.8:
  * ``abstract_channel.wait`` now accepts a float `timeout`
    parameter expressed in seconds

-------------------------------------------------------------------
Thu Dec 10 09:43:54 UTC 2015 - seife+obs@b1-systems.com

- remove build date from documentation

-------------------------------------------------------------------
Mon Oct  5 13:43:48 UTC 2015 - mcihar@suse.cz

- Add uniittest2 to BuildRequires for Python 2.6

-------------------------------------------------------------------
Sun Oct  4 09:50:25 UTC 2015 - tbechtold@suse.com

- update to 1.4.7:
  * Fixed libSystem error on OS X 10.11 (El Capitan)
  * ``channel.basic_publish`` now raises :exc:`amqp.exceptions.NotConfirmed` on
    ``basic.nack``.
  * AMQP timestamps received are now converted from GMT instead of local time
    (Issue #67).
  * Wheel package installation now supported by both Python 2 and Python3.
- Add python-mock as BuildRequires. Needed for tests

-------------------------------------------------------------------
Thu Aug  6 13:20:10 UTC 2015 - cdenicolo@suse.com

- license update: LGPL-2.1+
  LGPL includes "or later"

-------------------------------------------------------------------
Thu Jan 29 16:15:42 UTC 2015 - dmueller@suse.com

- replace set_socket_TCP_KEEPALIVE_and_TCP_USER_TIMEOUT.patch 
  with tune-keepalive-intervals.diff (bnc#902207)

-------------------------------------------------------------------
Mon Sep 15 07:50:41 UTC 2014 - tbechtold@suse.com

- update to 1.4.6:
  * Now keeps buffer when socket times out.
  * Adds ``Connection.Transport`` attribute that can be used to specify
    a different transport implementation.

-------------------------------------------------------------------
Mon May  5 08:07:30 UTC 2014 - dmueller@suse.com

- update to 1.4.5:
  - Can now deserialize more AMQP types.
  - SSL: Workaround for Python SSL bug.
  - ``Transport.__del_`` now handles errors occurring at late interpreter
  shutdown (Issue #36).
 - SSL transport accidentally disconnected after read timeout.

-------------------------------------------------------------------
Thu Mar  6 14:38:33 UTC 2014 - speilicke@suse.com

- Add amqp-drop-sphinxcontrib-issuetracker-dependency.patch: Avoid
  unnesseary build-time dependencies.

-------------------------------------------------------------------
Thu Feb 20 18:31:59 UTC 2014 - dmueller@suse.com

- update to 1.4.3:
  - Fixed bug where more data was requested from the socket
    than was actually needed.
  - Heartbeat negotiation would use heartbeat value from server even
    if heartbeat disabled (Issue #31).

-------------------------------------------------------------------
Tue Jan 21 13:13:06 UTC 2014 - dmueller@suse.com

- update to 1.4.1:
  - Fixed error occurring when heartbeats disabled.

-------------------------------------------------------------------
Tue Jan 14 10:56:30 UTC 2014 - dmueller@suse.com

- update to 1.4.0:
 - Heartbeat implementation improved (Issue #6).
 - NoneType is now supported in tables and arrays.
 - SSLTransport: Now handles ``ENOENT``.

-------------------------------------------------------------------
Sun Dec  1 15:43:57 UTC 2013 - oliver.bengs@opensuse.org

- Update to 1.3.3:
  - SSLTransport: Now keeps read buffer if an exception is raised
  - Message.channel is now a channel object (not the channel id)
  - Now sets ``Message.channel`` on delivery
  - New option to wait for publish confirmations
  - ``queue_declare`` now returns named tuple of type
  - Contents of ``Channel.returned_messages`` is now named tuples.
  - Sockets now set to close on exec using the ``FD_CLOEXEC`` flag

-------------------------------------------------------------------
Thu Oct 24 10:58:39 UTC 2013 - speilicke@suse.com

- Require python-setuptools instead of distribute (upstreams merged)

-------------------------------------------------------------------
Tue Apr 30 09:21:42 UTC 2013 - speilicke@suse.com

- Run testsuite

-------------------------------------------------------------------
Mon Feb 11 12:43:45 UTC 2013 - saschpe@suse.de

- Add Python3 support
- Build HTML documentation
- Install LICENSE, README.rst

-------------------------------------------------------------------
Mon Nov 12 17:55:30 UTC 2012 - alexandre@exatati.com.br

- Update to 1.2.0:
  - New exception hierarchy:
    - amqp.AMQPError
        - amqp.ConnectionError
            - amqp.RecoverableConnectionError
                - amqp.ConsumerCancelled
                - amqp.ConnectionForced
                - amqp.ResourceError
            - IrrecoverableConnectionError
                - amqp.ChannelNotOpen
                - amqp.FrameError
                - amqp.FrameSyntaxError
                - amqp.InvalidCommand
                - amqp.InvalidPath
                - amqp.NotAllowed
                - amqp.UnexpectedFrame
                - amqp.AMQPNotImplementedError
                - amqp.InternalError
        - amqp.ChannelError
            - RecoverableChannelError
                - amqp.ContentTooLarge
                - amqp.NoConsumers
                - amqp.ResourceLocked
            - IrrecoverableChannelError
                - amqp.AccessRefused
                - amqp.NotFound
                - amqp.PreconditionFailed

-------------------------------------------------------------------
Thu Nov  8 23:18:41 UTC 2012 - alexandre@exatati.com.br

- Update to 1.1.0:
  - No longer supports Pyhton 2.5
  - Fixed receiving of float table values.
  - Now Supports Python 3 and Python 2.6+ in the same source code.
  - Python 3 related fixes.

-------------------------------------------------------------------
Tue Nov  6 18:00:08 UTC 2012 - alexandre@exatati.com.br

- Update to 1.0.2:
  - Now supports float values in headers/tables.

-------------------------------------------------------------------
Mon Nov  5 15:34:26 UTC 2012 - alexandre@exatati.com.br

- Update to 1.0.1:
  - Connection errors does no longer include AttributeError.
  - Fixed problem with using the SSL transport in a non-blocking
    context.
    Fix contributed by Mher Movsisyan.

-------------------------------------------------------------------
Fri Sep 21 19:20:37 UTC 2012 - alexandre@exatati.com.br

- Update to 0.9.4:
  - Adds support for exchange_bind and exchange_unbind.
    Contributed by Rumyana Neykova
  - Fixed bugs in funtests and demo scripts.
    Contributed by Rumyana Neykova
- Aditional changes from version 0.9.3:
  - Fixed bug that could cause the consumer to crash when reading
    large message payloads asynchronously.
  - Serialization error messages now include the invalid value.

-------------------------------------------------------------------
Fri Aug 24 20:18:48 UTC 2012 - alexandre@exatati.com.br

- Initial package (0.9.2) for openSUSE.
