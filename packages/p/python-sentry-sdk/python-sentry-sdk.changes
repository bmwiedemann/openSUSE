-------------------------------------------------------------------
Thu Nov 14 11:54:57 UTC 2024 - Daniel Garcia <daniel.garcia@suse.com>

- Update to 2.18.0:
  * Various fixes & improvements
    - Add LaunchDarkly and OpenFeature integration (#3648) by
      @cmanallen
    - Correct typo in a comment (#3726) by @szokeasaurusrex
    - End http.client span on timeout (#3723) by @Zylphrex
    - Check for h2 existence in HTTP/2 transport (#3690) by @BYK
    - Use type() instead when extracting frames (#3716) by @Zylphrex
    - Prefer python_multipart import over multipart (#3710) by
      @musicinmybrain
    - Update active thread for asgi (#3669) by @Zylphrex
    - Only enable HTTP2 when DSN is HTTPS (#3678) by @BYK
    - Prepare for upstream Strawberry extension removal (#3649) by
      @DoctorJohn
    - Enhance README with improved clarity and developer-friendly
      examples (#3667) by @UTSAVS26
    - Run license compliance action on all PRs (#3699) by
      @szokeasaurusrex
    - Run CodeQL action on all PRs (#3698) by @szokeasaurusrex
    - Fix UTC assuming test (#3722) by @BYK
    - Exclude fakeredis 2.26.0 on py3.6 and 3.7 (#3695) by
      @szokeasaurusrex
    - Unpin pytest for tornado-latest tests (#3714) by
      @szokeasaurusrex
    - Install pytest-asyncio for redis tests (Python 3.12-13) (#3706)
      by @szokeasaurusrex
    - Clarify that only pinned tests are required (#3713) by
      @szokeasaurusrex
    - Remove accidentally-committed print (#3712) by @szokeasaurusrex
    - Disable broken RQ test in newly-released RQ 2.0 (#3708) by
      @szokeasaurusrex
    - Unpin pytest for celery tests (#3701) by @szokeasaurusrex
    - Unpin pytest on Python 3.8+ gevent tests (#3700) by
      @szokeasaurusrex
    - Unpin pytest for Python 3.8+ common tests (#3697) by
      @szokeasaurusrex
    - Remove pytest pin in requirements-devenv.txt (#3696) by
      @szokeasaurusrex
    - Test with Falcon 4.0 (#3684) by @sentrivana

-------------------------------------------------------------------
Tue Nov 12 02:14:34 UTC 2024 - Steve Kowalik <steven.kowalik@suse.com>

- Remove ipdb from BuildRequires, it should have been removed with 2.8. 

-------------------------------------------------------------------
Fri Nov  1 15:10:38 UTC 2024 - ecsos <ecsos@opensuse.org>

- Update to 2.17.0
  * Various fixes & improvements
    - Add support for async calls in Anthropic and OpenAI
      integration (#3497) by @vetyy
    - Allow custom transaction names in ASGI (#3664)
      by @sl0thentr0py
    - Langchain: Handle case when parent span wasn't traced (#3656)
      by @rbasoalto
    - Fix Anthropic integration when using tool calls (#3615)
      by @kwnath
    - More defensive Django Spotlight middleware injection (#3665)
      by @BYK
    - Remove ensure_integration_enabled_async (#3632) by @sentrivana
    - Test with newer Falcon version (#3644, #3653, #3662)
      by @sentrivana
    - Fix mypy (#3657) by @sentrivana
    - Fix flaky transport test (#3666) by @sentrivana
    - Remove pin on sphinx (#3650) by @sentrivana
    - Bump actions/checkout from 4.2.0 to 4.2.1 (#3651) by @dependabot
- Changes from 2.16.0
  * Integrations
    - Bottle: Add failed_request_status_codes (#3618)
      by @szokeasaurusrex
    - Bottle: Delete never-reached code (#3605) by @szokeasaurusrex
    - Redis: Remove flaky test (#3626) by @sentrivana
    - Django: Improve getting psycopg3 connection info (#3580)
      by @nijel
    - Django: Add SpotlightMiddleware when Spotlight is enabled
      (#3600) by @BYK
    - Django: Open relevant error when SpotlightMiddleware is on
      (#3614) by @BYK
    - Django: Support http_methods_to_capture in ASGI Django
      (#3607) by @sentrivana
  * Miscellaneous
    - Add 3.13 to setup.py (#3574) by @sentrivana
    - Add 3.13 to basepython (#3589) by @sentrivana
    - Fix type of sample_rate in DSC (and add explanatory tests)
      (#3603) by @antonpirker
    - Add httpcore based HTTP2Transport (#3588) by @BYK
    - Add opportunistic Brotli compression (#3612) by @BYK
    - Add __notes__ support (#3620) by @szokeasaurusrex
    - Remove useless makefile targets (#3604) by @antonpirker
    - Simplify tox version spec (#3609) by @sentrivana
    - Consolidate contributing docs (#3606) by @antonpirker
    - Bump codecov/codecov-action from 4.5.0 to 4.6.0 (#3617)
      by @dependabot

-------------------------------------------------------------------
Tue Oct  8 06:08:53 UTC 2024 - Johannes Kastl <opensuse_buildservice@ojkastl.de>

- Update to 2.15.0:
  * Integrations
    Please see release notes for details
    https://github.com/getsentry/sentry-python/releases/tag/2.15.0
  * Miscellaneous
    - Deprecate sentry_sdk.metrics (#3512) by @szokeasaurusrex
    - Add name parameter to start_span() and deprecate description
      parameter (#3524 & #3525) by @antonpirker
    - Fix add_query_source with modules outside of project root
      (#3313) by @rominf
    - Test more integrations on 3.13 (#3578) by @sentrivana
    - Fix trailing whitespace (#3579) by @sentrivana
    - Improve get_integration typing (#3550) by @szokeasaurusrex
    - Make import-related tests stable (#3548) by @BYK
    - Fix breadcrumb sorting (#3511) by @sentrivana
    - Fix breadcrumb timestamp casting and its tests (#3546) by
      @BYK
    - Don't use deprecated logger.warn (#3552) by @sentrivana
    - Fix Cohere API change (#3549) by @BYK
    - Fix deprecation message (#3536) by @antonpirker
    - Remove experimental explain_plan feature. (#3534) by
      @antonpirker
    - X-fail one of the Lambda tests (#3592) by @antonpirker
    - Update Codecov config (#3507) by @antonpirker
    - Update actions/upload-artifact to v4 with merge (#3545) by
      @joshuarli
    - Bump actions/checkout from 4.1.7 to 4.2.0 (#3585) by
      @dependabot
- Update to 2.14.0:
  * New SysExitIntegration (#3401) by @szokeasaurusrex
  * For more information, see the documentation for the
    SysExitIntegration.
  * Add SENTRY_SPOTLIGHT env variable support (#3443) by @BYK
  * Support Strawberry 0.239.2 (#3491) by @szokeasaurusrex
  * Add separate pii_denylist to EventScrubber and run it always
    (#3463) by @sl0thentr0py
  * Celery: Add wrapper for Celery().send_task to support behavior
    as Task.apply_async (#2377) by @divaltor
  * Django: SentryWrappingMiddleware.init fails if super() is
    object (#2466) by @cameron-simpson
  * Fix data_category for sessions envelope items (#3473) by
    @sl0thentr0py
  * Fix non-UTC timestamps (#3461) by @szokeasaurusrex
  * Remove obsolete object as superclass (#3480) by @sentrivana
  * Replace custom TYPE_CHECKING with stdlib typing.TYPE_CHECKING
    (#3447) by @dev-satoshi
  * Refactor tracing_utils.py (#3452) by @rominf
  * Explicitly export symbol in subpackages instead of ignoring
    (#3400) by @hartungstenio
  * Better test coverage reports (#3498) by @antonpirker
  * Fixed config for old coverage versions (#3504) by @antonpirker
  * Fix AWS Lambda tests (#3495) by @antonpirker
  * Remove broken Bottle tests (#3505) by @sentrivana

-------------------------------------------------------------------
Wed Aug 21 03:59:32 UTC 2024 - Steve Kowalik <steven.kowalik@suse.com>

- Update to 2.13.0:
  * New integration: Ray
  * New integration: Litestar
  * Profiling: Add client SDK info to profile chunk (#3386)
  * Serialize vars early to avoid living references (#3409)
  * Deprecate hub-based `sessions.py` logic (#3419)
  * Deprecate `is_auto_session_tracking_enabled` (#3428)
  * API: `push_scope` deprecation warning (#3355) (#3355)
  * API: Replace `push_scope` (#3353, #3354)
  * OTel: Remove experimental autoinstrumentation (#3239)
  * Graphene: Add span for grapqhl operation (#2788)
  * AI: Add async support for `ai_track` decorator (#3376)
  * CI: Workaround bug preventing Django test runs (#3371)
  * CI: Remove Django setuptools pin (#3378)
  * Tests: Test with Django 5.1 RC (#3370)
  * Broaden `add_attachment` type (#3342)
  * Add span data to the transactions trace context (#3374)
  * Gracefully fail attachment path not found case (#3337)
  * Document attachment parameters (#3342)
  * Add `disabled_integrations` (#3328)
  * Use operation name as transaction name in Strawberry (#3294)
  * WSGI integrations respect `SCRIPT_NAME` env variable (#2622)
  * Make Django DB spans have origin `auto.db.django` (#3319)
  * Sort breadcrumbs by time before sending (#3307)
  * Fix `KeyError('sentry-monitor-start-timestamp-s')` (#3278)
  * Set MongoDB tags directly on span data (#3290)
  * Lower logger level for some messages (#3305)
  * Emit deprecation warnings from `Hub` API (#3280)
  * Clarify that `instrumenter` is internal-only (#3299)
  * Support Django 5.1 (#3207)
  * Remove apparently unnecessary `if` (#3298)
  * Preliminary support for Python 3.13 (#3200)
  * Move `sentry_sdk.init` out of `hub.py` (#3276)
  * Unhardcode integration list (#3240)
  * Allow passing of PostgreSQL port in tests (#3281)
  * Add tests for `@ai_track` decorator (#3325)
  * Do not include type checking code in coverage report (#3327)
  * Fix test_installed_modules (#3309)
  * Fix typos and grammar in a comment (#3293)
  * Fixed failed tests setup (#3303)
  * Only assert warnings we are interested in (#3314)
- Switch to pyproject macros.

-------------------------------------------------------------------
Wed Jul 17 13:51:46 UTC 2024 - Markéta Machová <mmachova@suse.com>

- Update to 2.10.0
  * refactored a big part of the foundation of the SDK
  * Additional integrations will now be activated automatically if 
    the SDK detects the respective package is installed
  * Added new API for custom instrumentation: new_scope, isolation_scope
  * Many breaking changes, see CHANGELOG.md
  * Removed support for Python 2 and Python 3.5
  * Removed support for Celery 3.*
  * Removed support for Django 1.8, 1.9, 1.10
  * Removed support for Flask 0.*
  * Removed support for gRPC < 1.39
  * Removed support for Tornado < 6
  * few deprecations
  * fix(integrations): don't send full env to subprocess
    (bsc#1228128, CVE-2024-40647)
  * many more changes, see CHANGELOG.md
- Revised tests

-------------------------------------------------------------------
Sat Jun 29 19:24:30 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 1.45.0:
  * Allow to upsert monitors
  * It's now possible to provide `monitor_config` to the
    `monitor` decorator/context manager directly:
  * Add Django `signals_denylist` to filter signals that are
    attached to by `signals_spans`
  * `increment` for metrics
  * Add `value`, `unit` to `before_emit_metric`
  * New normalization rules for metric keys, names, units, tags
  * Change `data_category` from `statsd` to `metric_bucket`
  * Accessing `__mro__` might throw a `ValueError`
  * Suppress prompt spawned by subprocess when using `pythonw`
  * Handle `None` in GraphQL query
  * Do not send "quiet" Sanic exceptions to Sentry
  * Implement `metric_bucket` rate limits
  * Fix type hints for `monitor` decorator
  * Remove deprecated `typing` imports in crons
  * Make `monitor_config` a `TypedDict`
  * Make `monitor` async friendly
  * Fixed `Event | None` runtime `TypeError`
  * ref: Define types at runtime
  * Explicit reexport of types
  * Add optional `keep_alive`
  * Add support for Celery Redbeat cron tasks
  * `aws_event` can be an empty list
  * Re-export `Event` in `types.py`
  * We added an integration for OpenAI to capture errors and also
    performance data when using the OpenAI Python SDK.
  * Discard open OpenTelemetry spans after 10 minutes
  * Propagate sentry-trace and baggage headers to Huey tasks
  * Added Event type
  * Improve scrub_dict typing
  * Fix compatibility with `greenlet`/`gevent`
  * Fix query source relative filepath
  * Support `clickhouse-driver==0.2.7`
  * Deprecate `last_event_id()`.
  * `parsed_url` can be `None`

-------------------------------------------------------------------
Sat Jun 15 19:22:19 UTC 2024 - Fabian Vogt <fabian@ritter-vogt.de>

- Only require install requirements. The extra requirements are
  mostly for integrations and not meant to be dependencies.

-------------------------------------------------------------------
Wed Mar 13 18:57:20 UTC 2024 - Dirk Müller <dmueller@suse.com>

- disable build for python39 as ipdb is no longer available

-------------------------------------------------------------------
Tue Feb 13 11:28:05 UTC 2024 - ecsos <ecsos@opensuse.org>

- Update to 1.40.4
  - Only start metrics flusher thread on demand (#2727)
  - Bump checkouts/data-schemas from aa7058c to 6121fd3 (#2724)
- Changes from 1.40.3
  - Turn off metrics for uWSGI (#2720)
  - Minor improvements (#2714)
- Changes from 1.40.2
  - test: Fix pytest error (#2712)
  - build(deps): bump types-protobuf from 4.24.0.4 to 4.24.0.20240129 (#2691)
- Changes from 1.40.1
  - Fix uWSGI workers hanging (#2694)
  - Make metrics work with gevent (#2694)
  - Guard against engine.url being None (#2708)
  - Fix performance regression in sentry_sdk.utils._generate_installed_modules (#2703)
  - Guard against Sentry initialization mid SQLAlchemy cursor (#2702)
  - Fix yaml generation script (#2695)
  - Fix AWS Lambda workflow (#2710)
  - Bump codecov/codecov-action from 3 to 4 (#2706)
  - Bump actions/cache from 3 to 4 (#2661)
  - Bump actions/checkout from 3.1.0 to 4.1.1 (#2561)
  - Bump github/codeql-action from 2 to 3 (#2603)
  - Bump actions/setup-python from 4 to 5 (#2577)
- Changes from 1.40.0
  - Enable metrics related settings by default (#2685)
  - Fix UnicodeDecodeError on Python 2 (#2657)
  - Enable DB query source by default (#2629)
  - Fix query source duration check (#2675)
  - Reformat with black==24.1.0 (#2680)
  - Cleaning up existing code to prepare for new Scopes API (#2611)
  - Moved redis related tests to databases (#2674)
  - Improve sentry_sdk.trace type hints (#2633)
  - Bump checkouts/data-schemas from e9f7d58 to aa7058c (#2639)

-------------------------------------------------------------------
Wed Jan 10 11:46:51 UTC 2024 - ecsos <ecsos@opensuse.org>

- Update to 1.39.2
  - Fix timestamp in transaction created by OTel (#2627)
  - Fix relative path in DB query source (#2624)
  - Run more CI checks on 2.0 branch (#2625)
  - Fix tracing TypeError for static and class methods (#2559)
  - Fix missing ctx in Arq integration (#2600)
  - Change data_category from check_in to monitor (#2598)
- Changes from 1.39.1
  - Fix psycopg2 detection in the Django integration (#2593)
  - Filter out empty string releases (#2591)
  - Fixed local var not present when there is an error in a user's
    error_sampler function (#2511)
  - Fixed typing in aiohttp (#2590)
- Changes from 1.39.0
  - Add support for cluster clients from Redis SDK (#2394)
  - Improve location reporting for timer metrics (#2552)
  - Fix Celery TypeError with no-argument apply_async (#2575)
  - Fix Lambda integration with EventBridge source (#2546)
  - Add max tries to Spotlight (#2571)
  - Handle os.path.devnull access issues (#2579)
  - Change code.filepath frame picking logic (#2568)
  - Trigger AWS Lambda tests on label (#2538)
  - Run permissions step on pull_request_target but not push (#2548)
  - Hash AWS Lambda test functions based on current revision (#2557)
  - Update Django version in tests (#2562)
  - Make metrics tests non-flaky (#2572)

-------------------------------------------------------------------
Fri Dec  8 16:03:11 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 1.38.0:
  * Only add trace context to checkins and do not run
    `event_processors` for checkins (#2536) by @antonpirker
  * Metric span summaries (#2522) by @mitsuhiko
  * Add source context to code locations (#2539) by @jan-auer
  * Use in-app filepath instead of absolute path (#2541) by
    @antonpirker
  * Switch to `jinja2` for generating CI yamls (#2534) by
    @sentrivana
  * Fix `NameError` on `parse_version` with eventlet (#2532) by
    @sentrivana
  * build(deps): bump checkouts/data-schemas from `68def1e` to
    `e9f7d58` (#2501) by @dependabot
  * Move installed modules code to utils (#2429) by @sentrivana
  * Note: We moved the internal function `_get_installed_modules`
    from `sentry_sdk.integrations.modules` to `sentry_sdk.utils`.
  * So if you use this function you have to update your imports
  * Add code locations for metrics (#2526) by @jan-auer
  * Add query source to DB spans (#2521) by @antonpirker
  * Send events to Spotlight sidecar (#2524) by @HazAT
  * Fix: Prevent global var from being discarded at shutdown
    (#2530) by @antonpirker
  * Fix: Scope transaction source not being updated in scope.span
    setter (#2519) by @sl0thentr0py

-------------------------------------------------------------------
Tue Nov 21 19:14:03 UTC 2023 - ecsos <ecsos@opensuse.org>

- Update to 1.36.0
  - Django: Support Django 5.0 (#2490)
  - Django: Handling ASGI body in the right way. (#2513)
  - Flask: Test with Flask 3.0 (#2506)
  - Celery: Do not create a span when task is triggered by Celery Beat (#2510)
  - Redis: Ensure RedisIntegration is disabled, unless redis is installed (#2504)
  - Quart: Fix Quart integration for Quart 0.19.4 (#2516)
  - gRPC: Make async gRPC less noisy (#2507)
- Update to 1.35.0
  - Updated gRPC integration: Asyncio interceptors and easier setup (#2369)
  - Python 3.12: Replace deprecated datetime functions (#2502)
  - Metrics: Unify datetime format (#2409)
  - Celery: Set correct data in check_ins (#2500)
  - Celery: Read timezone for Crons monitors from celery_schedule if existing (#2497)
  - Django: Removing redundant code in Django tests (#2491)
  - Django: Make reading the request body work in Django ASGI apps. (#2495)
  - FastAPI: Use wraps on fastapi request call wrapper (#2476)
  - Fix: Probe for psycopg2 and psycopg3 parameters function. (#2492)
  - Fix: Remove unnecessary TYPE_CHECKING alias (#2467)

-------------------------------------------------------------------
Thu Nov  2 15:49:52 UTC 2023 - ecsos <ecsos@opensuse.org>

- Update to 1.34.0
  - Added Python 3.12 support (#2471, #2483)
  - Handle missing connection_kwargs in patch_redis_client (#2482)
  - Run common test suite on Python 3.12 (#2479)
- Update to 1.33.1
  - Make parse_version work in utils.py itself. (#2474)
- Update to 1.33.0
  - New: Added error_sampler option (#2456)
  - Python 3.12: Detect interpreter in shutdown state on thread spawn (#2468)
  - Patch eventlet under Sentry SDK (#2464)
  - Mitigate CPU spikes when sending lots of events with lots of data (#2449)
  - Make debug option also configurable via environment (#2450)
  - Make sure get_dsn_parameters is an actual function (#2441)
  - Bump pytest-localserver, add compat comment (#2448)
  - AWS Lambda: Update compatible runtimes for AWS Lambda layer (#2453)
  - AWS Lambda: Load AWS Lambda secrets in Github CI (#2153)
  - Redis: Connection attributes in redis database spans (#2398)
  - Falcon: Falcon integration checks response status before reporting error (#2465)
  - Quart: Support Quart 0.19 onwards (#2403)
  - Sanic: Sanic integration initial version (#2419)
  - Django: Fix parsing of Django path patterns (#2452)
  - Django: Add Django 4.2 to test suite (#2462)
  - Polish changelog (#2434)
  - Update CONTRIBUTING.md (#2443)
  - Update README.md (#2435)
- Update to 1.32.0
  https://github.com/getsentry/sentry-python/blob/master/CHANGELOG.md#1320
- Update to 1.31.0
  https://github.com/getsentry/sentry-python/blob/master/CHANGELOG.md#1310
- Update to 1.30.0
  https://github.com/getsentry/sentry-python/blob/master/CHANGELOG.md#1300
- Update to 1.29.2
  https://github.com/getsentry/sentry-python/blob/master/CHANGELOG.md#1292
- Update to 1.29.1
  https://github.com/getsentry/sentry-python/blob/master/CHANGELOG.md#1291
- Update to 1.29.0
  https://github.com/getsentry/sentry-python/blob/master/CHANGELOG.md#1290

-------------------------------------------------------------------
Wed Jul 19 05:44:19 UTC 2023 - ecsos <ecsos@opensuse.org>

- Update to 1.28.1
  - Redis: Add support for redis.asyncio (#1933)
  - Make sure each task that is started by Celery Beat has its own trace. (#2249)
  - Add Sampling Decision to Trace Envelope Header (#2239)
  - Do not add trace headers (sentry-trace and baggage) to HTTP requests to Sentry (#2240)
  - Prevent adding sentry-trace header multiple times (#2235)
  - Skip distributions with incomplete metadata (#2231)
  - Remove stale.yml (#2245)
  - Django: Fix 404 Handler handler being labeled as "generic ASGI request" (#1277)
- Update to 1.28.0
  - Add support for cron jobs in ARQ integration (#2088)
  - Backpressure handling prototype (#2189)
  - Add "replay" context to event payload (#2234)
  - Update test Django app to be compatible for Django 4.x (#1794)
- Update to 1.27.1
  + Add Starlette/FastAPI template tag for adding Sentry tracing information (#2225)
    - By adding {{ sentry_trace_meta }} to your Starlette/FastAPI Jinja2 templates
      we will include   Sentry trace information as a meta tag in the rendered HTML
      to allow your frontend to pick up and continue the trace started in the backend.
  - Fixed generation of baggage when a DSC is already in propagation context (#2232)
  - Handle explicitly passing None for trace_configs in aiohttp (#2230)
  - Support newest Starlette versions (#2227)
- Update to 1.27.0
  - Support for SQLAlchemy 2.0 (#2200)
  - Add instrumentation of aiohttp client requests (#1761)
  + Add Django template tag for adding Sentry tracing information (#2222)
    - By adding {{ sentry_trace_meta }} to your Django templates we will include Sentry trace
      information as a meta tag in the rendered HTML to allow your frontend to pick up and
      continue the trace started in the backend.
  - Update Flask HTML meta helper (#2203)
  - Take trace ID always from propagation context (#2209)
  - Fix trace context in event payload (#2205)
  - Use new top level API in trace_propagation_meta (#2202)
  - Do not overwrite existing baggage on outgoing requests (#2191, #2214)
  - Set the transaction/span status from an OTel span (#2115)
  - Fix propagation of OTel NonRecordingSpan (#2187)
  - Fix TaskLockedException handling in Huey integration (#2206)
  - Add message format configuration arguments to Loguru integration (#2208)
  - Profiling: Add client reports for profiles (#2207)
  - CI: Fix CI (#2220)
  - Dependencies: Bump checkouts/data-schemas from 7fdde87 to 1b85152 (#2218)
  - Dependencies: Bump mypy from 1.3.0 to 1.4.1 (#2194)
  - Docs: Change API doc theme (#2210)
  - Docs: Allow (some) autocompletion for top-level API (#2213)
  - Docs: Revert autocomplete hack (#2224)
- Update to 1.26.0
  - Tracing without performance (#2136)
  - Load tracing information from environment (#2176)
  - Auto-enable HTTPX integration if HTTPX installed (#2177)
  - Support for SOCKS proxies (#1050)
  - Wrap parse_url calls in capture_internal_exceptions (#2162)
  - Run 2.7 tests in CI again (#2181)
  - Crons: Do not support sub-minute cron intervals (#2172)
  - Profile: Add function name to profiler frame cache (#2164)
  - Dependencies: bump checkouts/data-schemas from 0ed3357 to 7fdde87 (#2165)
  - Update changelog (#2163)
- Update to 1.25.1
  - Fix parse_url (#2161)
    Our URL sanitization used in multiple integrations broke with the recent Python security update.
    If you started seeing ValueErrors with "'Filtered' does not appear to be an IPv4 or IPv6
    address", this release fixes that. See the original issue for more context.
  - Better version parsing in integrations (#2152)
    We now properly support all integration versions that conform to PEP 440.
    This replaces our naïve version parsing that wouldn't accept versions
    such as 2.0.0rc1 or 2.0.5.post1.
  - Align HTTP status code as span data field http.response.status_code (#2113)
  - Do not encode cached value to determine size (#2143)
  - Fix using unittest.mock whenever available (#1926)
  - Fix 2.7 common tests (#2145)
  - Bump actions/stale from 6 to 8 (#1978)
  - Bump black from 22.12.0 to 23.3.0 (#1984)
  - Bump mypy from 1.2.0 to 1.3.0 (#2110)
  - Bump sphinx from 5.3.0 to 7.0.1 (#2112)
- Update to 1.25.0
  - Support urllib3>=2.0.0 (#2148)
    We're now supporting urllib3's new major version, 2.0.0.
    If you encounter issues (e.g. some of your dependencies not supporting
    the new urllib3 version yet) you might consider pinning the urllib3 version
    to <2.0.0 manually in your project. Check out the the urllib3 migration guide for details.
  - Auto-retry tests on failure (#2134)
  - Correct importlib.metadata check in test_modules (#2149)
  - Fix distribution name normalization (PEP-0503) (#2144)
  - Fix functions_to_trace typing (#2141)
- Drop mock.patch beecause no more need.

-------------------------------------------------------------------
Sun Jun 11 13:22:50 UTC 2023 - ecsos <ecsos@opensuse.org>

- Add %{?sle15_python_module_pythons}

-------------------------------------------------------------------
Mon May 29 13:31:22 UTC 2023 - Dirk Müller <dmueller@suse.com>

- add mock.patch to use mock from stdlib

-------------------------------------------------------------------
Tue May 23 10:39:34 UTC 2023 - ecsos <ecsos@opensuse.org>

- Update to 1.24.0
  - New: Celery Beat exclude tasks option (#2130)
  - New: Add support for ExceptionGroups (#2025)
  - Prefer importlib.metadata over pkg_resources if available (#2081)
  - Work with a copy of request, vars in the event (#2125)
  - Pinned version of dependency that broke the build (#2133)
- Changes from 1.23.1
  - Disable Django Cache spans by default. (#2120)
- Changes from 1.23.0
  - New: Add loguru integration (#1994)
  - Do not truncate request body if request_bodies is "always" (#2092)
  - Fixed Celery headers for Beat auto-instrumentation (#2102)
  - Add db.operation to Redis and MongoDB spans (#2089)
  - Make sure we're importing redis the library (#2106)
  - Add include_source_context option (#2020)
  - Import Markup from markupsafe (#2047)
  - Fix __qualname__ missing attribute in asyncio integration (#2105)
  - Remove relay extension from AWS Layer (#2068)
  - Add a note about pip freeze to the bug template (#2103)
- Changes from 1.22.2
  - Fix: Django caching spans when using keyword arguments (#2086)
  - Fix: Duration in Celery Beat tasks monitoring (#2087)
  - Fix: Docstrings of SPANDATA (#2084) by @antonpirker
- Changes from 1.22.1
  - Fix: Handle a list of keys (not just a single key) in Django cache spans (#2082)
- Changes from 1.22.0
  - Add cache.hit and cache.item_size to Django (#2057)
  - Use http.method instead of method (#2054)
  - Handle non-int exc.status_code in Starlette (#2075)
  - Handle SQLAlchemy engine.name being bytes (#2074)
  - Fix KeyError in capture_checkin if SDK is not initialized (#2073)
  - Use functools.wrap for ThreadingIntegration patches to fix attributes (#2080)
  - Pin urllib3 to <2.0.0 for now (#2069)
- Changes from 1.21.1
  - Do not send monitor_config when unset (#2058)
  - Add db.system span data (#2040, #2042)
  - Fix memory leak in profiling (#2049)
  - Fix crash loop when returning none in before_send (#2045)

-------------------------------------------------------------------
Tue Apr 25 14:33:14 UTC 2023 - ecsos <ecsos@opensuse.org>

- Update to 1.21.0
  - Better handling of redis span/breadcrumb data (#2033)
  - Add db.system to redis and SQLAlchemy db spans (#2037, #2038, #2039) (#2037)
  - Upgraded linting tooling (#2026)
  - Made code more resilient. (#2031)
- Changes from 1.20.0
  - Send all events to /envelope endpoint when tracing is enabled (#2009)
  - Note: If you’re self-hosting Sentry 9, you need to stay in the
    previous version of the SDK or update your self-hosted to at least 20.6.0
  - Profiling: Remove profile context from SDK (#2013)
  - Profiling: Additionl performance improvements to the profiler (#1991)
  - Fix: Celery Beat monitoring without restarting the Beat process (#2001)
  - Fix: Using the Codecov uploader instead of deprecated python package (#2011)
  - Fix: Support for Quart (#2003)` (#2003)
- Changes from 1.19.1
  - Make auto monitoring beat update support Celery 4 and 5 (#1989)
- Changes from 1.19.0
  - New: Celery Beat auto monitoring (#1967)
  - New: gRPC integration (#1911)
  - New: socket integration (#1911)
  - Fix: Do not trim span descriptions. (#1983)
- Changes from 1.18.0
  - New: Implement EventScrubber (#1943)
  - New: Added new functions_to_trace option for central way of performance instrumentation (#1960)
  - Updated denylist to include other widely used cookies/headers (#1972)
  - Forward all sentry- baggage items (#1970)
  - Update OSS licensing (#1973)
  - Profiling: Handle non frame types in profiler (#1965)
  - Tests: Bad arq dependency in tests (#1966)
  - Better naming (#1962)
- Changes from 1.17.0
  - New: Monitor Celery Beat tasks with Sentry Cron Monitoring.
  - New: Add decorator for Sentry tracing (#1089)
  - Make Django signals tracing optional (#1929)
  - See the Django Guide to learn more.
  - Deprecated with_locals in favor of include_local_variables (#1924)
  - Added top level API to get current span (#1954)
  - Profiling: Add profiler options to init (#1947)
  - Profiling: Set active thread id for quart (#1830)
  - Fix: Update get_json function call for werkzeug 2.1.0+ (#1939)
  - Fix: Returning the tasks result. (#1931)
  - Fix: Rename MYPY to TYPE_CHECKING (#1934)
  - Fix: Fix type annotation for ignore_errors in sentry_sdk.init() (#1928)
  - Tests: Start a real http server instead of mocking libs (#1938)
- Changes from 1.16.0
  - New: Add arq Integration (#1872)
  - Update of Falcon Integration (#1733)
  - Adding Cloud Resource Context integration (#1882)
  - Profiling: Use the transaction timestamps to anchor the profile (#1898)
  - Profiling: Add debug logs to profiling (#1883)
  - Profiling: Start profiler thread lazily (#1903)
  - Fixed checks for structured http data (#1905)
  - Make set_measurement public api and remove experimental status (#1909)
  - Add trace_propagation_targets option (#1916)
  - Add enable_tracing to default traces_sample_rate to 1.0 (#1900)
  - Remove deprecated tracestate (#1907)
  - Sanitize URLs in Span description and breadcrumbs (#1876)
  - Mechanism should default to true unless set explicitly (#1889)
  - Better setting of in-app in stack frames (#1894)
  - Add workflow to test gevent (#1870)
  - Updated outdated HTTPX test matrix (#1917)
  - Switch to MIT license (#1908)

-------------------------------------------------------------------
Tue Feb  7 12:11:22 UTC 2023 - ecsos <ecsos@opensuse.org>

- Update to 1.15.0
  - New: Add [Huey](https://huey.readthedocs.io/en/latest/) Integration (#1555)
  - Profiling: Do not send single sample profiles (#1879)
  - Profiling: Add additional test coverage for profiler (#1877)
  - Profiling: Always use builtin time.sleep (#1869)
  - Profiling: Defaul in_app decision to None (#1855)
  - Profiling: Remove use of threading.Event (#1864)
  - Profiling: Enable profiling on all transactions (#1797)
  - FastAPI: Fix check for Starlette in FastAPI integration (#1868)
  - Flask: Do not overwrite default for username with email address in FlaskIntegration (#1873)
  - Tests: Add py3.11 to test-common (#1871)
  - Fix: Don't log whole event in before_send / event_processor drops (#1863)
- Changes from 1.14.0
  - Add `before_send_transaction` (#1840)
  - Django: Always remove values of Django session related cookies. (#1842)
  - Profiling: Enable profiling for ASGI frameworks (#1824)
  - Profiling: Better gevent support (#1822)
  - Profiling: Add profile context to transaction (#1860)
  - Profiling: Use co_qualname in python 3.11 (#1831)
  - OpenTelemetry: fix Use dict for sentry-trace context instead of tuple (#1847)
  - OpenTelemetry: fix extra dependency (#1825)
  - OpenTelemetry: fix NoOpSpan updates scope (#1834)
  - OpenTelemetry: Make sure to noop when there is no DSN (#1852)
  - FastAPI: Fix middleware being patched multiple times (#1841)
  - Starlette: Avoid import of pkg_resource with Starlette integration (#1836)
  - Removed code coverage target (#1862)
- Changes from 1.13.0
  - Add Starlite integration (#1748)
  - Profiling: Remove sample buffer from profiler (#1791)
  - Profiling: Performance tweaks to profile sampler (#1789)
  - Add span for Django SimpleTemplateResponse rendering (#1818)
  - Use @wraps for Django Signal receivers (#1815)
  - Add enqueued_at and started_at to rq job extra (#1024)
  - Remove sanic v22 pin (#1819)
  - Add support for `byterray` and `memoryview` built-in types (#1833)
  - Handle `"rc"` in SQLAlchemy version. (#1812)
  - Doc: Use .venv (not .env) as a virtual env location in CONTRIBUTING.md (#1790)
  - Auto publish to internal pypi on release (#1823)
  - Added Python 3.11 to test suite (#1795)
  - Update test/linting dependencies (#1801)
  - Deps: bump sphinx from 5.2.3 to 5.3.0 (#1686)
- Changes from 1.12.1
  - Link errors to OTel spans (#1787) by @antonpirker
- Changes from 1.12.0
  - This adds support to automatically integrate OpenTelemetry performance tracing with Sentry.
    (#1772, #1766, #1765)
  - Tox Cleanup (#1749)
  - CI: Fix Github action checks (#1780)
  - Profiling: Introduce active thread id on scope (#1764)
  - Profiling: Eagerly hash stack for profiles (#1755)
  - Profiling: Resolve inherited method class names (#1756)
- Changes from 1.11.1
  - Move set_transaction_name out of event processor in fastapi/starlette (#1751)
  - Expose proxy_headers as top level config and use in ProxyManager:
    https://docs.sentry.io/platforms/python/configuration/options/#proxy-headers (#1746)

-------------------------------------------------------------------
Mon Nov 14 15:19:03 UTC 2022 - ecsos <ecsos@opensuse.org>

- Update to 1.11.0
  - NEW: Support for MongoDB (#1590)
    Queries to MongoDB are now instrumented!
    See https://docs.sentry.io/platforms/python/guides/pymongo/
    for more information.
  - Profiling: Do not error if already setup (#1731)
  - Profiling: Use sleep scheduler by default (#1729)
  - Profiling: Extract more frame info (#1702)
  - Profiling: Tune the sample profile generation code for performance (#1694)
  - Fix: Reading FastAPI request body twice. (#1724)
  - Fix: Django signals problem on sentry.io (#1732)
  - Fix: Performance optimizations for Django signals (#1725)
  - Fix: Move relay to port 5333 to avoid collisions (#1716)
  - Fix: strip_string() checks text length counting bytes not chars (#1711)
  - Chore: remove jira workflow (#1707)
  - Update actions/upload-artifact to v3.1.1 (#1718)
  - Update checkouts/data-schemas from a214fbc to 20ff3b9 (#1703)

-------------------------------------------------------------------
Sun Oct 23 10:40:00 UTC 2022 - John Vandenberg <jayvdb@gmail.com>

- Update to v1.10.1
  * Bug fixes for FastAPI and Sentry SDK 1.10.0
  * The wrapped receive() did not return anything
- from v1.10.0
  * Unified naming for span ops
    We have unified the strings of our span operations.
    See https://develop.sentry.dev/sdk/performance/span-operations/
  * Include framework in SDK name
  * Asyncio integration
  * Add exception handling to Asyncio Integration
  * Fix asyncio task factory
  * Have instrumentation for ASGI middleware receive/send callbacks.
  * Use Django internal ASGI handling from Channels version 4.0.0.
  * fix(integrations): Fix http putrequest when url is None
  * Check for Decimal is in_valid_sample_rate
  * Add session for aiohttp integration
  * feat(profiling): Extract qualified name for each frame
  * feat(profiling): Attach thread metadata to profiles
  * ref(profiling): Rename profiling frame keys
  * fix(profiling): get_frame_name only look at arguments
  * fix(profiling): Need to sample profile correctly
  * fix(profiling): Race condition spawning multiple profiling threads
- from v1.9.10
  * Use content-length header in ASGI instead of reading request body
  * Added newer Celery versions to test suite
  * Django 4.x support
  * Increase max string size for desc
  * Fix for partial signals in old Django and old Python versions
  * Convert profile output to the sample format
  * Dynamically adjust profiler sleep time
- from v1.9.9
  * Instrument Django Signals so they show up in "Performance" view
  * include other Django enhancements brought up by the community
  * fix(profiling): Profiler mode type hints
  * New ASGIMiddleware tests
  * ref: upgrade linters to flake8 5.x
  * feat(profiling): Introduce different profiler schedulers
  * fix(profiling): Check transaction sampled status before profiling
  * Wrap Baggage ser/deser in capture_internal_exceptions
  * feat(profiling): Add support for profiles_sample_rate
  * feat(profiling): Support for multithreaded profiles
- from v1.9.8
  * Baggage creation for head of trace
    The SDK now also generates new baggage entries for dynamic sampling
    when it is the first (head) SDK in the pipeline.
- from v1.9.7
  * Let SentryAsgiMiddleware work with Starlette and FastAPI integrations
- from v1.9.6
  * Auto-enable Starlette and FastAPI
  * Add more version constraints
- from v1.9.5
  * fix(redis): import redis pipeline using full path
- from v1.9.4
  * Remove TRANSACTION_SOURCE_UNKNOWN and default to CUSTOM
  * feat(redis): Add instrumentation for redis pipeline
  * Handle no release when uploading profiles
- from v1.9.3
  * Wrap StarletteRequestExtractor in capture_internal_exceptions
- from v1.9.2
  * chore: remove quotes
- from v1.9.1
  * Fix FastAPI issues
  * Add deprecation warning for 3.4, 3.5
  * Update Flask and Quart integrations
  * fix(django): Send correct "url" transaction source if Django resolver fails to resolve
- from v1.9.0
  * feat(profiler): Add experimental profiler under experiments.enable_profiling
  * Fixed problem with broken response and python-multipart
1.8.0
  * feat(starlette): add Starlette integration
    Important: Remove manual usage of SentryAsgiMiddleware!
  * fix: avoid sending empty Baggage header
  * fix: properly freeze Baggage object
- from v1.7.2
  * feat(transactions): Transaction Source
  * Removed (unused) sentry_timestamp header
- from v1.7.1
  * Skip malformed baggage items
- from v1.7.0
  * feat(tracing): Dynamic Sampling Context / Baggage continuation
  * The SDK now propagates the W3C Baggage Header from incoming
    transactions to outgoing requests. It also extracts Sentry
    specific sampling information and adds it to the transaction
    headers to enable Dynamic Sampling in the product.

-------------------------------------------------------------------
Sun Jul  3 09:34:55 UTC 2022 - ecsos <ecsos@opensuse.org>

- Update to 1.6.0
  - Fix Deployment (#1474)
  - Serverless V2 (#1450)
  - Use logging levelno instead of levelname. Levelnames can be
    overridden (#1449)

-------------------------------------------------------------------
Sun Jul  3 09:24:33 UTC 2022 - ecsos <ecsos@opensuse.org>

- Update to 1.5.12
  - feat(measurements): Add experimental set_measurement api on
    transaction (#1359)
  - fix: Remove incorrect usage from flask helper example (#1434)
- Update to 1.5.11
  - chore: Bump mypy and fix abstract ContextManager typing (#1421)
  - chore(issues): add link to Sentry support (#1420)
  - fix: replace git.io links with redirect targets (#1412)
  - ref: Update error verbose for sentry init (#1361)
  - fix(sessions): Update session also for non sampled events and
    change filter order (#1394)
- Update to 1.5.10
  - Remove Flask version contraint (#1395)
  - Change ordering of event drop mechanisms (#1390)
- Update to 1.5.9
  - fix(sqlalchemy): Use context instead of connection in
    sqlalchemy integration (#1388)
  - Update correct test command in contributing docs (#1377)
  - Update black (#1379)
  - build(deps): bump sphinx from 4.1.1 to 4.5.0 (#1376)
  - fix: Auto-enabling Redis and Pyramid integration (#737)
  - feat(testing): Add pytest-watch (#853)
  - Treat x-api-key header as sensitive (#1236)
  - fix: Remove obsolete MAX_FORMAT_PARAM_LENGTH (#1375)
- Update to 1.5.8
  - feat(asgi): Add support for setting transaction name to path
    in FastAPI (#1349)
  - fix(sqlalchemy): Change context manager type to avoid race in
    threads (#1368)
  - fix(perf): Fix transaction setter on scope to use
    containing_transaction to match with getter (#1366)
  - chore(ci): Change stale GitHub workflow to run once a day
    (#1367)
  - feat(django): Make django middleware expose more wrapped
    attributes (#1202)
- Update to 1.5.7
  - fix(serializer): Make sentry_repr dunder method to avoid mock
    problems (#1364)
- Update to 1.5.6
  - Create feature.yml (#1350)
  - Update contribution guide (#1346)
  - chore: add bug issue template (#1345)
  - Added default value for auto_session_tracking (#1337)
  - docs(readme): reordered content (#1343)
  - fix(tests): Removed unsupported Django 1.6 from tests to avoid
    confusion (#1338)
  - Group captured warnings under separate issues (#1324)
  - build(changelogs): Use automated changelogs from Craft (#1340)
  - fix(aiohttp): AioHttpIntegration sentry_app_handle() now
    ignores ConnectionResetError (#1331)
  - meta: Remove black GH action (#1339)
  - feat(flask): Add sentry_trace() template helper (#1336)
- Update to 1.5.5
  - Add session tracking to ASGI integration (#1329)
  - Pinning test requirements versions (#1330)
  - Allow classes to short circuit serializer with sentry_repr
    (#1322)
  - Set default on json.dumps in compute_tracestate_value to ensure
    string conversion (#1318)

-------------------------------------------------------------------
Sun Jan 30 11:20:25 UTC 2022 - ecsos <ecsos@opensuse.org>

- Update to 1.5.4
  - Add Python 3.10 to test suite (#1309)
  - Capture only 5xx HTTP errors in Falcon Integration (#1314)
  - Attempt custom urlconf resolve in got_request_exception
    as well (#1317)
- Update to 1.5.3
  - Pick up custom urlconf set by Django middlewares from request
    if any (#1308)
- Update to 1.5.2
  - Record event_processor client reports #1281
  - Add a Quart integration #1248
  - Sanic v21.12 support #1292
  - Support Celery abstract tasks #1287
- Update to 1.5.1
  - Fix django legacy url resolver regex substitution due to
    upstream CVE-2021-44420 fix #1272
  - Record lost sample_rate events only if tracing is enabled #1268
  - Fix gevent version parsing for non-numeric parts #1243
  - Record span and breadcrumb when Django opens db connection #1250
- Disable check test_leaks to build Leap.

-------------------------------------------------------------------
Fri Nov 19 08:41:01 UTC 2021 - ecsos <ecsos@opensuse.org>

- Update to 1.5.0
  - Also record client outcomes for before send #1211
  - Add support for implicitly sized envelope items #1229
  - Fix integration with Apache Beam 2.32, 2.33 #1233
  - Remove Python 2.7 support for AWS Lambda layers in craft config #1241
  - Refactor Sanic integration for v21.9 support #1212
  - AWS Lambda Python 3.9 runtime support #1239
  - Fix "shutdown_timeout" typing #1256
- Disable of python36 build, because out of support at 2021-12-23.

-------------------------------------------------------------------
Mon Oct 25 20:39:36 UTC 2021 - Martin Hauke <mardnh@gmx.de>

- Update to 1.4.3
  * Turned client reports on by default.
- Update to 1.4.2
  * Made envelope modifications in the HTTP transport non
    observable.
- Update to 1.4.1
  * Fix race condition between finish and start_child in tracing.
- Update to 1.4.0
  * No longer set the last event id for transactions.
  * Added support for client reports (disabled by default for now).
  * Added tracestate header handling.
  * Added real ip detection to asgi integration.

-------------------------------------------------------------------
Wed Aug 25 12:00:44 UTC 2021 - Martin Hauke <mardnh@gmx.de>

- Update to 1.3.1
  * Fix detection of contextvars compatibility with Gevent
    versions >=20.9.0 .
- Update to 1.3.0
  * Add support for Sanic versions 20 and 21 .
- Update to 1.2.0
  * Fix for AWSLambda Integration to handle other path formats
    for function initial handler #1139
  * Fix for worker to set deamon attribute instead of deprecated
    setDaemon method #1093
  * Fix for bottle Integration that discards -dev for version
    extraction #1085
  * Fix for transport that adds a unified hook for capturing
    metrics about dropped events #1100
  * Add Httpx Integration #1119
  * Add support for china domains in AWSLambda Integration #1051

-------------------------------------------------------------------
Thu May  6 18:54:28 UTC 2021 - ecsos <ecsos@opensuse.org>

- Update to 1.1.0
  - Fix for AWSLambda integration returns value of original handler
    #1106
  - Fix for RQ integration that only captures exception if RQ job
    has failed and ignore retries #1076
  - Feature that supports Tracing for the Tornado integration #1060
  - Feature that supports wild cards in ignore_logger in the
    Logging Integration #1053
  - Fix for django that deals with template span description names
    that are either lists or tuples #1054

-------------------------------------------------------------------
Wed Mar 10 06:36:59 UTC 2021 - ecsos <ecsos@opensuse.org>

- Update to 1.0.0
  - BREAKING CHANGE: Feat: Moved auto_session_tracking experimental
    flag to a proper option and removed explicitly setting
    experimental session_mode in favor of auto detecting its value,
    hence enabling release health by default #994
  - Fixed Django transaction name by setting the name to
    request.path_info rather than request.path
  - Fix for tracing by getting HTTP headers from span rather than
    transaction when possible #1035
  - Fix for Flask transactions missing request body in non errored
    transactions #1034
  - Fix for honoring the X-Forwarded-For header #1037
  - Fix for worker that logs data dropping of events with level
    error #1032
- Changes from 0.20.3
  - Added scripts to support auto instrumentation of no code AWS
    lambda Python functions
- Changes from 0.20.2
  - Fix incorrect regex in craft to include wheel file in pypi
    release
- Changes from 0.20.1
  - Fix for error that occurs with Async Middlewares when the
    middleware is a function rather than a class
- Changes from 0.20.0
  - Fix for header extraction for AWS lambda/API extraction
  - Fix multiple **kwargs type hints # 967
  - Fix that corrects AWS lambda integration failure to detect
    the aws-lambda-ric 1.0 bootstrap #976
  - Fix AWSLambda integration: variable "timeout_thread" referenced
    before assignment #977
  - Use full git sha as release name #960
  - BREAKING CHANGE: The default environment is now production,
    not based on release
  - Django integration now creates transaction spans for template
    rendering
  - Fix headers not parsed correctly in ASGI middleware,
    Decode headers before creating transaction #984
  - Restored ability to have tracing disabled #991
  - Fix Django async views not behaving asynchronously
  - Performance improvement: supported pre-aggregated sessions

-------------------------------------------------------------------
Thu Dec 10 13:23:46 UTC 2020 - ecsos <ecsos@opensuse.org>

- Update to 0.19.5
  - Fix two regressions added in 0.19.2 with regard to sampling
    behavior when reading the sampling decision from headers.
  - Increase internal transport queue size and make it configurable.

-------------------------------------------------------------------
Wed Dec  2 12:33:17 UTC 2020 - ecsos <ecsos@opensuse.org>

- Add additional and missing requirements.

-------------------------------------------------------------------
Tue Dec  1 21:41:22 UTC 2020 - Hans-Peter Jansen <hpj@urpla.net>

- Update to version 0.19.4
  * Fix a bug that would make applications crash if an old version
    of boto3 was installed.

- Update to version 0.19.3
  * Automatically pass integration-relevant data to traces_sampler
    for AWS, AIOHTTP, ASGI, Bottle, Celery, Django, Falcon, Flask,
    GCP, Pyramid, Tryton, RQ, and WSGI integrations
  * Fix a bug where the AWS integration would crash if event was
    anything besides a dictionary
  * Fix the Django integrations's ASGI handler for Channels 3.0.
    Thanks Luke Pomfrey!

- Update to version 0.19.2
  * Add traces_sampler option.
  * The SDK now attempts to infer a default release from various
    environment variables and the current git repo.
  * Fix a crash with async views in Django 3.1.
  * Fix a bug where complex URL patterns in Django would create
    malformed transaction names.
  * Add options for transaction styling in AIOHTTP.
  * Add basic attachment support (documentation tbd).
  * fix a crash in the pure_eval integration.
  * Integration for creating spans from boto3.

- Update to version 0.19.1
  * Fix dependency check for blinker fixes #858
  * Fix incorrect timeout warnings in AWS Lambda and GCP
    integrations #854

- Update to version 0.19.0
  * Removed _experiments.auto_enabling_integrations in favor of
    just auto_enabling_integrations which is now enabled by
    default.

- Update to version 0.18.0
  * Breaking change: The no_proxy environment variable is now
    honored when inferring proxy settings from the system. Thanks
    Xavier Fernandez!
  * Added Performance/Tracing support for AWS and GCP functions.
  * Fix an issue with Django instrumentation where the SDK modified
    resolver_match.callback and broke user code.

- Update to version 0.17.8
  * Fix yet another bug with disjoint traces in Celery.
  * Added support for Chalice 1.20. Thanks again to the folks at
    Cuenca MX!

- Update to version 0.17.7
  * Internal: Change data category for transaction envelopes.
  * Fix a bug under Celery 4.2+ that may have caused disjoint
    traces or missing transactions.

- Update to version 0.17.6
  * Support for Flask 0.10 (only relaxing version check)

- Update to version 0.17.5
  * Work around an issue in the Python stdlib that makes the entire
    process deadlock during garbage collection if events are sent
    from a __del__ implementation.
  * Add possibility to wrap ASGI application twice in middleware to
    enable split up of request scope data and exception catching.

- Update to version 0.17.4
  * New integration for the Chalice web framework for AWS Lambda.
    Thanks to the folks at Cuenca MX!

- Update to version 0.17.3
  * Fix an issue with the pure_eval integration in interaction with
    trimming where pure_eval would create a lot of useless local
    variables that then drown out the useful ones in trimming.

- Update to version 0.17.2
  * Fix timezone bugs in GCP integration.

- Update to version 0.17.1
  * Fix timezone bugs in AWS Lambda integration.
  * Fix crash on GCP integration because of missing parameter
    timeout_warning.

- Update to version 0.17.0
  * Fix a bug where class-based callables used as Django views
    (without using Django's regular class-based views) would not
    have csrf_exempt applied.
  * New integration for Google Cloud Functions.
  * Fix a bug where a recently released version of urllib3 would
    cause the SDK to enter an infinite loop on networking and SSL
    errors.
  * Breaking change: Remove the traceparent_v2 option. The option
    has been ignored since 0.16.3, just remove it from your code.

- Update to version 0.16.5
  * Fix a bug that caused Django apps to crash if the view didn't
    have a __name__ attribute.

- Update to version 0.16.4
  * Add experiment to avoid trunchating span descriptions.
    Initialize with
    init(_experiments={"smart_transaction_trimming": True}).
  * Add a span around the Django view in transactions to
    distinguish its operations from middleware operations.

- Update to version 0.16.3
  * Fix AWS Lambda support for Python 3.8.
  * The AWS Lambda integration now captures initialization/import
    errors for Python 3.
  * The AWS Lambda integration now supports an option to warn about
    functions likely to time out.
  * Testing for RQ 1.5
  * Flip default of traceparent_v2. This change should have zero
    impact. The flag will be removed in 0.17.
  * Fix compatibility bug with Django 3.1.

- Update to version 0.16.2
  * New (optional) integrations for richer stacktraces: pure_eval
    for additional variables, executing for better function names.

- Update to version 0.16.1
  * Flask integration: Fix a bug that prevented custom tags from
    being attached to transactions.

- Update to version 0.16.0
  * Redis integration: add tags for more commands
  * Redis integration: Patch rediscluster package if installed.
  * Session tracking: A session is no longer considered crashed if
    there has been a fatal log message (only unhandled exceptions
    count).
  * Breaking change: Revamping of the tracing API.
  * Breaking change: before_send is no longer called for
    transactions.

- Update to version 0.15.1
  * Fix fatal crash in Pyramid integration on 404.

- Update to version 0.15.0
  * Breaking change: The ASGI middleware will now raise an
    exception if contextvars are not available, like it is already
    the case for other asyncio integrations.
  * Contextvars are now used in more circumstances following a
    bugfix release of gevent. This will fix a few instances of
    wrong request data being attached to events while using an
    asyncio-based web framework.
  * APM: Fix a bug in the SQLAlchemy integration where a span was
    left open if the database transaction had to be rolled back.
    This could have led to deeply nested span trees under that db
    query span.
  * Fix a bug in the Pyramid integration where the transaction name
    could not be overridden at all.
  * Fix a broken type annotation on capture_exception.
  * Basic support for Django 3.1. More work is required for async
    middlewares to be instrumented properly for APM.

- Add new dependencies

-------------------------------------------------------------------
Thu Jun 18 16:32:19 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- update to 0.14.4
  * Fix bugs in transport rate limit enforcement for specific data
    categories.
  * The bug should not have affected anybody because we do not yet
    emit rate limits for specific event types/data categories.
  * Fix a bug in capture_event where it would crash if given
    additional kwargs.
  * Fix a bug where contextvars from the request handler were
    inaccessible in AIOHTTP error handlers.
  * Fix a bug where the Celery integration would crash if newrelic
    instrumented Celery as well.

-------------------------------------------------------------------
Thu Mar 26 12:36:49 UTC 2020 - Marketa Calabkova <mcalabkova@suse.com>

- update to 0.14.3
  * Attempt to use a monotonic clock to measure span durations in Performance/APM.
  * Avoid overwriting explicitly set user data in web framework integrations.
  * Allow to pass keyword arguments to `capture_event` instead of configuring the scope.
  * Feature development for session tracking.

-------------------------------------------------------------------
Wed Mar 18 14:30:44 UTC 2020 - pgajdos@suse.com

- version update to 0.14.2
  * Fix a crash in the Django integration when used in combination with Django Rest Framework's test utilities for request.
  * Fix high memory consumption when sending a lot of errors in the same process. Particularly noticeable in async environments.
  * Show ASGI request data in Django 3.0
  * New integration for the Trytond ERP framework. Thanks n1ngu!
  * Fix trace continuation bugs in APM.
  * No longer report `asyncio.CancelledError` as part of AIOHTTP integration.
  * Fix package classifiers to mark this package as supporting Python 3.8. The SDK supported 3.8 before though.
  * Update schema sent for transaction events (transaction status).
  * Fix a bug where `None` inside request data was skipped/omitted.
  * Fix an issue with the ASGI middleware that would cause Uvicorn to infer the wrong ASGI versions and call the wrapped application with the wrong argument count.
  * Do not ignore the `tornado.application` logger.
  * The Redis integration now instruments Redis blaster for breadcrumbs and transaction spans.
- test at least something
- deleted sources
  - pytest.ini (not needed)

-------------------------------------------------------------------
Fri Nov  8 23:09:33 UTC 2019 - Jimmy Berry <jberry@suse.com>

- Update to 0.13.2
  - Fix a bug in APM that would cause wrong durations to be
    displayed on non-UTC servers.

-------------------------------------------------------------------
Fri Oct 25 14:53:43 UTC 2019 - Jimmy Berry <jberry@suse.com>

- Update to 0.13.1
  - Add new global functions for setting scope/context data.
  - Fix a bug that would make Django 1.11+ apps crash when using
    function-based middleware.

-------------------------------------------------------------------
Thu Oct 17 21:13:24 UTC 2019 - Jimmy Berry <jberry@suse.com>

- Update to 0.13.0
  - Remove an old deprecation warning (behavior itself already
    changed since a long time).
  - The AIOHTTP integration now attaches the request body to crash
    reports. Thanks to Vitali Rebkavets!
  - Add an experimental PySpark integration.
  - First release to be tested under Python 3.8. No code changes
    were necessary though, so previous releases also might have
    worked.

-------------------------------------------------------------------
Wed Oct  2 20:34:44 UTC 2019 - Jimmy Berry <jberry@suse.com>

- Update to 0.12.3
  - Various performance improvements to event sending.
  - Avoid crashes when scope or hub is racy.
  - Revert a change that broke applications using gevent and channels
    (in the same virtualenv, but different processes).
  - Fix a bug that made the SDK crash on unicode in SQL.
- Comment out test build dependencies since tests are disabled.

-------------------------------------------------------------------
Mon Sep 30 22:28:19 UTC 2019 - Jimmy Berry <jberry@suse.com>

- Add pytest.ini source to ignore deprecation warning from eventlet
- Disable %check since pytest does not want to follow documentation

-------------------------------------------------------------------
Mon Sep 30 22:07:37 UTC 2019 - Jimmy Berry <jberry@suse.com>

- Update to 0.12.2
  - Temporarily remove sending of SQL parameters (as part of
    breadcrumbs or spans for APM) to Sentry to avoid memory
    consumption issues.
  - Fix a crash with ASGI (Django Channels) when the ASGI request
    type is neither HTTP nor Websockets.

-------------------------------------------------------------------
Thu Sep 19 13:34:03 UTC 2019 - Jimmy Berry <jberry@suse.com>

- Update to 0.12.0
  - Fix a bug where the response object for httplib (or requests)
    was held onto for an unnecessarily long amount of time.
  - APM: Add spans for more methods on subprocess.Popen objects.
  - APM: Add spans for Django middlewares.
  - APM: Add spans for ASGI requests.

-------------------------------------------------------------------
Fri Aug 30 15:36:40 UTC 2019 - Jimmy Berry <jberry@suse.com>

- Update to 0.11.2
  - fixed shutdown bug while runnign under eventlet
  - added missing data to Redis breadcrumbs
- Include build requirement on python eventlet module for the tests
  while exclusing a subset of new tests

-------------------------------------------------------------------
Sat Aug 24 06:02:01 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Trim time-dependent wording from description.

-------------------------------------------------------------------
Mon Aug 19 20:18:33 UTC 2019 - Jimmy Berry <jberry@suse.com>

- Update to 0.11.1
  - Remove a faulty assertion (observed in environment with
    Django Channels and ASGI).

-------------------------------------------------------------------
Fri Aug 16 21:37:16 UTC 2019 - Jimmy Berry <jberry@suse.com>

- Update to 0.11.0
  - mostly bug fixes
  - integration with SQLAlchemy and Apache Beam

-------------------------------------------------------------------
Mon Aug 12 14:19:52 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Format with spec-cleaner
- Run tests

-------------------------------------------------------------------
Fri Aug  9 22:36:25 UTC 2019 - Jimmy Berry <jberry@suse.com>

- Set BuildArch to noarch.

-------------------------------------------------------------------
Fri Aug  9 22:30:15 UTC 2019 - Jimmy Berry <jberry@suse.com>

- Update to 0.10.2.

-------------------------------------------------------------------
Fri Jun  7 10:19:06 UTC 2019 - ecsos@opensuse.org

- initial version 0.9.0
