<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>62f69e6ac1c3bfc9ddefc6a7c687ec4d</srcmd5>
    <version>16.4</version>
    <time>1537787479</time>
    <user>dimstar_suse</user>
    <comment>- filelist cleanups
- Update to version 16.4
- Update to version 16.0
  * Removed deprecated ``execute_*`` methods on ``Connection``
    and ``Reactor`` as introduced in 15.0.
  * Fixed link in README.
  15.1.1:
  * New ``send_items`` method takes star args for simplicity
    in the syntax and usage.
  15.1:
  * Introduce ``ServerConnection.send_items``, consolidating
    common behavior across many methods previously calling
    ``send_raw``.
  15.0.6:
  * Now publish `documentation
    &lt;https://python-irc.readthedocs.io/&gt;`_ to Read The Docs.
  15.0.5:
  * #119: Handle broken pipe exception in IRCClient _send()
    (server.py).
  15.0.4:
  * #116: Correct invocation of execute_every.
  15.0.3:
  * #115: Fix AttributeError in ``execute_at`` in scheduling
    support.
  15.0.2:
  * #113: Use preferred scheduler in the bot implementation.
  15.0.1:
  * Deprecated calls to Connection.execute_* and
    Reactor.execute_*. Instead, call the equivalently-named
    methods on the reactor's scheduler.
  15.0:
  * The event scheduling functionality has been decoupled
    from the client.Reactor object. Now the reactor will
    construct a Scheduler from the scheduler_class property,
    which must be an instance of irc.schedule.IScheduler.
    The ``_on_schedule`` parameter is no longer accepted
    to the Reactor class. Implementations requiring a
    signal during scheduling should hook into the ``add``
    method of the relevant scheduler class.
  * Moved the underlying scheduler implementation to
    `tempora &lt;https://pypi.org/project/tempora&gt;`_, allowing
    it to be re-used for other purposes.
- Added -doc subpackage
- Converted to single-spec
- Update to version 14.2.2 (changes since 8.5.4):
  * Drop support for Python 2.6.
  * Drop support for Python 3.2.
  * Introduce ‘Manifold’ as an alias for irc.client.IRC. This
    better name will replace the IRC name in a future version.
  * Introduce the ‘manifold’ property of SimpleIRCClient as an
    alias for ircobj.
  * Add ‘manifold_class’ property to the client.SimpleIRCClient to
    allow consumers to provide a customised Manifold.
  * Introduce buffer.LenientDecodingLineBuffer for handling input
    in a more lenient way, preferring UTF-8 but falling back to
    latin-1 if the content cannot be decoded as UTF-8. To enable it
    by default for your application, set it as the default decoder.
  * Remove the mutex during process_once.
  * Deprecated buffer.LineBuffer for Python 3.
  * The whois command now accepts a single string or iterable for
    the target.
  * NickMask now returns None when user, host, or userhost are not
    present. Previously, an IndexError was raised.
  * Drop irc.client.LineBuffer and irc.client.DecodingBuffer
    (available in irc.client.buffer).
  * Rename irc.client.IRC to irc.client.Manifold to provide a
    clearer name for that object. Clients supporting 8.6 and later
    can use the Manifold name. Latest clients must use the Manifold
    name.
  * Rename irc.client.Connection.irclibobj property to manifold.
    The property is still exposed as irclibobj for compatibility
    but will be removed in a future version.
  * Remove unused irc.client.mask_matches function.
  * Remove unused irc.client.nick_characters.
  * Add extra numerics for ‘whoisaccount’ and ‘cannotknock’.
  * Add ServerConnection.as_nick, a context manager to set a nick
    for the duration of the context.
  * Rename irc.client.Manifold to irc.client.Reactor. Reactor
    better reflects the implementation as a reactor pattern &lt;. This
    name makes it’s function much more clear and inline with
    standard terminology.
  * Remove deprecated manifold and irclibobj properties from
    Connection. Use reactor instead.
  * Remove deprecated ircobj from SimpleIRCClient. Use reactor
    instead.
  * Decoding errors now log a warning giving a reference to the
    Decoding Input section of the readme.
  * Remove dependency on jaraco.util. Instead depend on surgical
    packages.
  * Deprecate irc.logging in favour of jaraco.logging.
  * Remove changelog from package metadata.
  * Better handling of Python 3 in testbot.py script.
  * Fix broken references to irc.client members.
  * Add numeric for WHOX reply.
  * Add support for tags in message processing and Event class.
  * Fix apparent escaping issue with IRCv3 tags.
  * Move Throttler class to jaraco.functools 1.5.
  * Update schedule module to properly support timezone aware times
    and use them by default. Clients that rely on the timezone
    native datetimes may restore the old behaviour by overriding
    the schedule.now and schedule.from_timestamp functions.
  * Clients that were previously patching
    schedule.DelayedCommand.now will need to instead patch the
    aforementioned module-global methods. The classmethod technique
    was a poor interface for effectively controlling timezone
    awareness, so was likely unused.
  * ISUPPORT PREFIX now retains the order of permissions for each
    prefix.
  * Fix infinite recursion for irc.strings.IRCFoldedCase and
    irc.strings.lower.
  * In irc.bot, add support for tracking admin status (mode ‘a’) in
    channels. Use channel.is_admin or channel.admins to identify
    admin users for a channel.
  * Remove deprecated irc.logging module.
  * Now remove mode for owners, halfops, and admins when the user is
    removed from a channel.
  * Refactor the Channel class implementation for cleaner, less
    repetitive code.
  * Expand tests coverage for Channel class.
  * Dropped deprecated constructor
    connection.Factory.from_legacy_params. Use the natural
    constructor instead.
  * connection.Factory no longer attempts to bind before connect
    unless a bind address is specified.
  * SingleServerIRCBot now accepts a recon parameter implementing a
    ReconnectStrategy. The new default strategy is
    ExponentialBackoff, implementing an exponential backoff with
    jitter. The reconnection_interval parameter is now deprecated
    but retained for compatibility. To customise the minimum time
    before reconnect, create a custom ExponentialBackoff instance
    or create another ReconnectStrategy object and pass that as the
    recon parameter. The reconnection_interval parameter will be
    removed in future versions.
  * The ExponentialBackoff implementation now protects from
    multiple scheduled reconnects, avoiding the issue where
    reconnect attempts accumulate exponentially when the bot is
    immediately disconnected by the server.
  * Move buffer module to jaraco.stream for use in other packages.
  * Update docs to remove missing or deprecated modules.
  * Declare Gitter support as a badge in the docs.
  * Add an ugly hack to force build_sphinx command to have the
    requisite libraries to build module documentation.
- Correct licence: MIT.
- Remove python-irclib obsoletion: different non-conflicting
  package.
- Cleanup dependencies.
- Update to version 8.5.4
  * Issue #32: Add logging around large DCC messages to facilitate
    troubleshooting.
  * Issue #31: Fix error in connection wrapper for SSL example.
- Add python-py requirement; new dependency to launch tests
- Require python-setuptools instead of distribute (upstreams merged)
- update to 8.5.3:
  * Updated DCC send and receive scripts
  * Fix TypeError in version calculation in irc.bot CTCP version.
- update to 8.5.1:
  * Added support for throttling send_raw messages via the ServerConnection object
  * Added a set_keepalive method to the ServerConnection.
  * Fixed encoding errors in server on Python 3.
  * Catch error in bot.py on NAMREPLY when nick is not in any visible channel.
  * Added DCCConnection.send_bytes for transmitting binary data. privmsg
  remains to support transmitting text
  * irc.client.NickMask is now a Unicode object on Python 2
  * Fix timestamp support in schedule.DelayedCommand construction.
- add test to capture desired behavior
- remove unused imports
- typo in irc.bot.SingleServerIRCBot
- Added some tests; fixed some failures
- Extracted various feature loaders each as a separate method.
- Move feature support to its own class in the features module
- Add a couple of default PREFIXES for backward compatibility.
- Rename 'isupport' to 'features'. Moved feature loading to its own method.
- Add some standard prefixes
- Adding number ISUPPORT options, so they're autoconverted to numbers
- TARGMAX processing
- Added ISUPPORT functionality
- Add support for owner (+q) and halfop (+h) modes
- Invoke main loop as a for loop rather than a while with a break
- Add Python 3 compatibility
- Use argument parsing to solicit optional port
- Use argparse for argument parsing
- Add and document global variable
 
- Require python-importlib only on SP2
- Add SLE_11_SP2 (build) requirements (argparse, importlib), which are
  not part of Python-2.6
- Run testsuite
- updated to latest upstream version 8.0.1
  - changes from 5.0.1:
    * Issue #13: TypeError on Python 3 when constructing
      PeriodicCommand (and thus execute_every).
    * Fixed regression created in 7.0 where PeriodicCommandFixedDelay
      would only cause the first command to be scheduled,
      but not subsequent ones.
    * Moved scheduled command classes to irc.schedule module.
      Kept references for backwards-compatibility.
    * PeriodicCommand now raises a ValueError if
      it's created with a negative or zero delay.
    * Renamed the parameters to the IRC object.
    * Fixed some unhandled exceptions in server client connections
      when the client would disconnect in response to messages
      sent after select was called.
    * Moved LineBuffer and DecodingLineBuffer from client
      to buffer module. Backward-compatible references have been kept for now.
    * Removed daemon mode and log-to-file options for server.
    * Miscellaneous bugfixes in server.
    * Fix error in 2to3 conversion on irc/server.py
    * The IRC library is now licensed under the MIT license.
    * Added irc/server.py, based on hircd by Ferry Boender.
    * Added support for CAP command (pull request #10), thanks to Danneh Oaks.
- initial packaging of irc version 5.0.1


Dependencies:
- https://build.opensuse.org/request/show/635003
- https://build.opensuse.org/request/show/635002
- https://build.opensuse.org/request/show/635000
- https://build.opensuse.org/request/show/634999
- https://build.opensuse.org/request/show/634998
</comment>
    <requestid>635005</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>cec4245c72920c4b846b1ef8dfcc5970</srcmd5>
    <version>17.0</version>
    <time>1548064806</time>
    <user>dimstar_suse</user>
    <comment>- Sync with python-irclib package -&gt; provides/obsoletes fun
- Add patch fix-lint.patch to fix lint error
- Update version to 17.0:
  * Support for py3.7
- Drop support for python2, dropped by upstream</comment>
    <requestid>666973</requestid>
  </revision>
  <revision rev="3" vrev="2">
    <srcmd5>6fe518db86b36b23fd6e4908852a602c</srcmd5>
    <version>17.0</version>
    <time>1551455275</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>680052</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>f6228d9334258e0b03acc88ec3959b58</srcmd5>
    <version>17.1</version>
    <time>1554749582</time>
    <user>dimstar_suse</user>
    <comment>- Update to 17.1:
  * Rely on importlib_metadata for loading version from metadata. Removes implicit dependency on setuptools and pkg_resources.
  * #158: The AsyncIO server now accepts a connection factory to enable features like SSL and IPv6 support.
  * #155: SimpleIRCClient now has a dcc method for initiating and associating a DCCConnection object with the client. DCCConnection.listen now accepts a address parameter. Deprecated SimpleIRCClient.dcc_listen and SimpleIRCClient.dcc_connect in favor of the better separation of concerns. Clients should replace:</comment>
    <requestid>691787</requestid>
  </revision>
  <revision rev="5" vrev="2">
    <srcmd5>44fefedceed6c7f5621a8be78caf3707</srcmd5>
    <version>17.1</version>
    <time>1556817502</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>699681</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>83f64306327fd0a92822d4b7d7c1bc75</srcmd5>
    <version>18.0.0</version>
    <time>1584350389</time>
    <user>dimstar_suse</user>
    <comment>- Update to 18.0.0:
  * Require Python 3.6 or later.</comment>
    <requestid>785245</requestid>
  </revision>
</revisionlist>
