<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>112765820a596b28a69e847820c310b6</srcmd5>
    <version>2.1.2</version>
    <time>1527934267</time>
    <user>dimstar_suse</user>
    <comment>Required by python-csvkit.  See request 612101
https://build.opensuse.org/request/show/612101</comment>
    <requestid>613121</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>21aea3d561583a00cb581ce5fdcf50d4</srcmd5>
    <version>2.1.2</version>
    <time>1544631877</time>
    <user>dimstar_suse</user>
    <comment>Remove superfluous devel dependency for noarch package</comment>
    <requestid>653905</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>84cbd2710839988846b8e27dda6218bb</srcmd5>
    <version>2.2.1</version>
    <time>1564483131</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>719690</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>31da94747cbe71c0a22185afbb7a55b2</srcmd5>
    <version>2.2.3</version>
    <time>1576189077</time>
    <user>dimstar_suse</user>
    <comment>- Update to 2.2.3:
  * Various minor fixes</comment>
    <requestid>755836</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>6f4ae18e15cd32a255b495ddd59a1ee7</srcmd5>
    <version>3.0.0</version>
    <time>1618387850</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.0.0:
  * The more esoteric method of creating Enums have been modified or removed
  * Member creation has been redone to match Python 3.10's methods.
  * enum_property() has been renamed to property() (old name still available,
    but deprecated).
  * bin() replacement shows negative integers in twos-complement
  * call __init_subclass__ after members have been added, and in Pythons &lt; 3.6
  * call __set_name__ in Pythons &lt; 3.6
  * do not convert/disallow private names
  * add iteration/len support to NamedConstant
  * add support to Constant to retrieve members by value
  * add pickle/deepcopy support to Constant
  * add support for Constant to use other Constant values
  * AutoNumber and auto() now work together 
- Update URL now that bitbucket is dead.</comment>
    <requestid>884804</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>fcef0514264b335e17e8ccf631ccace0</srcmd5>
    <version>3.1.0</version>
    <time>1630265634</time>
    <user>dimstar_suse</user>
    <comment>- Convert test script into proper unittest module and then skip
  failing tests (gh#ethanfurman/aenum#12):
  - tempdir_missing.patch
  - skip_failing_testcases.patch
- Update to 3.1.0:
  * redo EnumConstants
  * add `__set_name__` to `constant`
  * add new test; make re strings raw
</comment>
    <requestid>914827</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>ca177fa79da040b90662e8b5cc5577c3</srcmd5>
    <version>3.1.5</version>
    <time>1641855222</time>
    <user>dimstar_suse</user>
    <comment>- update to 3.1.5:
  * fix support of `auto()` kwds
  * rename `aenum.property` to `aenum.enum_property`
  * fix `extend_enum()` for unhashable values
  * fix `extend_enum()` for most cases</comment>
    <requestid>945349</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>42e3b8d047566ce191b544e0ef11acf9</srcmd5>
    <version>3.1.11</version>
    <time>1674232725</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.1.11:
  * update MANIFEST file
- 3.1.10
  * improve tests
- 3.1.9
  * fail gracefully for badly written EnumType
- 3.1.8
  * recalculate bits used after all flags created (sometimes needed when a
    custom `__new__` is in place.
- 3.1.7
  * update flag creation to (possibly) add bitwise operator methods to newly
    created flags
  * update extend_enum() to work with 3.11 flags
- 3.1.6
  * Update `dir()` on mixed enums to include mixed data type methods and
    attributes.
  * Rename `enum_property` to `property` to match stdlib.  Recommended usage is
    `aenum.property` (prefix with module name).
  * Remove quadritic creation behavior.
  BREAKING CHANGE BUG FIX that won't affect most people
  Enums with a custom `__new__` that:
  - use the enum machinery to generate the values; AND
  - have keyword arguments set to a default (like `None`)
  will fail to generate a missing value.  To fix: remove the default value and
  instead specify it on the member creation line.
  BREAKING CHANGE
  In Python 3.11 the `str()` of mixed enums will now match its `format()` which
  will be the normal `str()` of the data type -- so for an IntEnum you'll see
  `5` instead of `Perm.R|X`.  This affects IntEnum, StrEnum, and IntFlag.
</comment>
    <requestid>1059839</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>7f8f99a9722253d029095b8bf96b6fad</srcmd5>
    <version>3.1.12</version>
    <time>1687379939</time>
    <user>dimstar_suse</user>
    <comment>- update to 3.1.12:
  * no changelog available</comment>
    <requestid>1094127</requestid>
  </revision>
  <revision rev="10" vrev="2">
    <srcmd5>5c5aae9394ca4137468527e61fd8f8d1</srcmd5>
    <version>3.1.12</version>
    <time>1699994530</time>
    <user>anag+factory</user>
    <comment>- add sle15_python_module_pythons for SLE15 build

  * AutoNumber and auto() now work together
  * add _create_pseudo_member_values_</comment>
    <requestid>1125419</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>41e1b7cd8fc40f3ed744d3541f1067ae</srcmd5>
    <version>3.1.15</version>
    <time>1703281325</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1134618</requestid>
  </revision>
  <revision rev="12" vrev="2">
    <srcmd5>83731b7acdd35b2d02a706d79fc41646</srcmd5>
    <version>3.1.15</version>
    <time>1707233723</time>
    <user>anag+factory</user>
    <comment>- Add fix-python312-tests.patch to skip failing tests with python 3.12
  gh#ethanfurman/aenum#36</comment>
    <requestid>1144506</requestid>
  </revision>
</revisionlist>
