<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>ead7448ca13840c93aca2cce37583015</srcmd5>
    <version>0.17.1</version>
    <time>1625950425</time>
    <user>dimstar_suse</user>
    <comment>New package python-pytest-xprocess required by
python-Werkzeug 2.0.1 (currently in Staging:F)</comment>
    <requestid>901127</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>d5f45fbcb511b3c66e25a12bc766273e</srcmd5>
    <version>0.21.0</version>
    <time>1673021071</time>
    <user>dimstar_suse</user>
    <comment>- Remove python_module macro definition
- More specific python_sitelib in %files
- Update to 0.21.0:
  * Explicitly add py package as a dependency, fixing issue with pytest &gt;=
    7.2.0
  * Process log files will not be overwritten for each new process anymore,
    making it easier to debug issues that occurred in the middle of failed test
    runs
- 0.19.0:
  * drop support for python 3.5 and 3.6
  * reorganize internals. pytest-xprocess is now a package and all resources
    used by running processes are kept as instances of
    :class:XProcessResources.
- 0.18.1:
  * Fix bug with previous release where internal module was missing
- 0.18.0:
  * :method:`ProcessInfo.terminate` will now terminate outer leaves in process
    tree first and work its way towards root process. For example, if a process
    has child and grandchild, xprocess will terminate first child and
    grandchild and only then will the root process receive a termination
    signal.
  * :class:`ProcessStarter` now has attr:terminate_on_interrupt. This flag will
    make xprocess attempt to terminate and clean up all started process
    resources upon interruptions during pytest runs (CTRL+C, SIGINT and
    internal errors) when set to True. It will default to False, so if the
    described behaviour is desired the flag must be explicitly set True.
  * Add a new popen_kwargs variable to ProcessStarter, this variable can be
    used for passing keyword values to the subprocess.Popen constructor, giving
    the user more control over how the process is initialized.
</comment>
    <requestid>1039102</requestid>
  </revision>
  <revision rev="3" vrev="2">
    <srcmd5>ee939f384a28587cebfaf5fa2e7d00f0</srcmd5>
    <version>0.21.0</version>
    <time>1682434403</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1082424</requestid>
  </revision>
</revisionlist>
