-------------------------------------------------------------------
Thu Sep 28 18:55:55 UTC 2023 - Arjen de Korte <suse+build@de-korte.org>

- update to 5.3.1
  * Fixed infinite save loop in `Phalcon\Mvc\Model::save()` [#16395]
  * Fixed undefined column with columnMap and model caching [#16420]
  * Fixed memory leak in `Phalcon\Mvc\Router::handle()` [#16431]

-------------------------------------------------------------------
Thu Aug 17 20:14:30 UTC 2023 - Arjen de Korte <suse+build@de-korte.org>

- update to 5.3.0
  * Added `Phalcon\Mvc\Model::appendMessagedFrom` for code consistency
    and to add messages from another model [#16391]
  * Added `Phalcon\Autoload\Loader::isRegistered` for debugging purposes
    [#16391]
  * Added `Phalcon\Mvc\Model\Metadata::initializeMetadata` [#16393]
  * Added `Phalcon\Mvc\Model\Metadata::getMetaDataUniqueKey` [#16393]
  * Added `Phalcon\Mvc\Model\Metadata::getColumnMapUniqueKey` [#16393]
  * Added `Phalcon\Encryption\Security\JWT\Builder::addHeader()` to allow
    adding custom headers [#16396]
  * Refactored `Phalcon\Mvc\Model::doLowUpdate` and
    `Phalcon\Mvc\Model::postSaveRelatedRecords` for better code logic and
    a clearer separation of behaviour, although it lead to partially
    repeated code. [#16391]
  * Cleaned `Phalcon\Mvc\Model\Metadata::initialize` [#16393]
  * Parse multipart/form-data from PUT request [#16271]
  * Set Dynamic Update by default system-wide [#16343]
  * Fixed memory leak in Micro application [#16404]

- update to 5.2.3
  * Tried to reproduce the behavior described in #16244 but had no
    success. [#16244]
  * Extended `Phalcon\Di\Injectable` from `stdClass` to remove the
    deprecation warning (dynamic properties) for PHP 8.2 [#16308]
  * Corrected the return type of `Phalcon\Mvc\View::getVar()` so that
    stubs can be accurate. [#16276]
  * Changed all the `encode`/`decode` methods for JSON to use the
    `Phalcon\Support\Helper\Json\*` classes. [#15608]
  * Changed the `Phalcon\Support\Helper\Json\*` classes to clear up
    `json_last_error()` before doing any conversions. [#15608]
  * Fixed `Phalcon\Http\Request::getJsonRawBody` to protect from empty
    body [#16373]
  * Added `getAdapter()` in `Phalcon\Mvc\Model\Metadata` to retrieve the
    internal cache adapter if necessary. [#16244]
  * Added `Phalcon\Storage\Adapter\Weak` implemented with WeakReference
    has a cache/retrieval solution for objects not yet collected by the
    Garbage Collection. [#16372]

-------------------------------------------------------------------
Wed Jun 21 18:23:15 UTC 2023 - Arjen de Korte <suse+build@de-korte.org>

- update to 5.2.2
  * Fixed `Encryption\Crypt::checkCipherHashIsAvailable` to allow
    proper setting of the hash [#16314]
  * Removed `unlikely` from `if` statements from the Stream storage
    adapter and Json serializer [#16339]
  * Fixed `Storage\Adapter\Stream::get()/set()` to correctly calculate
    the path if the prefix is present in the key [#16348]
  * Fixed `Html\Helper\Input\Checkbox` to correctly process empty
    values [#15959]

-------------------------------------------------------------------
Sun Mar  5 21:22:47 UTC 2023 - Arjen de Korte <suse+build@de-korte.org>

- update to 5.2.1
  * Fixed compilation under PHP 8.2 [#16293]

- update to 5.2.0
  * Fixed `Phalcon\Html\Helper\Title::prepend` to correctly prepend
    text in subsequent calls [#16283]
  * Added support for PHP 8.2 [#15973]

-------------------------------------------------------------------
Sat Jan 14 10:54:47 UTC 2023 - Arjen de Korte <suse+build@de-korte.org>

- update to 5.1.4
  * Fixed `Phalcon\Acl\Adapter\Memory::isAllowed` to not use the
    deprecated `ReflectionType::getClass` [#16255]

- update to 5.1.3
  * Fixed `Phalcon\Mvc\Micro::handle` to type check an object for the
    `finish` [#16240]
  * Fixed `Phalcon\DI\Service::resolve` to not call the `get()` from
    the container and cause an infinite loop [#15032]

-------------------------------------------------------------------
Sat Dec 10 10:50:44 UTC 2022 - Arjen de Korte <suse+build@de-korte.org>

- update to 5.1.2
  * Fixed `Phalcon\Support\Debug` to correctly calculate the documents
    URL for the hyperlinks [#16223]
  * Fixed `Phalcon\Html\TagFactory` docblock for autocompletion
  * Fixed `Phalcon\Db\Profiler` by correctly calculating the seconds
    (reapplied changes) [#15822]
  * Added `Phalcon\Html\TagFactory` to the
    `Phalcon\Di\FactoryDefault\Cli` [#16233]

-------------------------------------------------------------------
Sat Dec 10 10:32:12 UTC 2022 - Arjen de Korte <suse+build@de-korte.org>

- Remove php7 build for Tumbleweed (PHP 7.4 has reached EOL)

-------------------------------------------------------------------
Mon Nov 28 21:49:29 UTC 2022 - Arjen de Korte <suse+build@de-korte.org>

- update to 5.1.1
  * Fixed `Phalcon\Filter::sanitize` to return correct data when
    `noRecursive` is `true` [#16199]
  * Fixed `Phalcon\Html\Escaper::html` to not return `null` when a zero
    string is passed [#16202]

-------------------------------------------------------------------
Sat Nov  5 21:13:25 UTC 2022 - Arjen de Korte <suse+build@de-korte.org>

- update to 5.1.0
  * Fixed `Phalcon\Mvc\View\Engine\Volt\Compiler::isTagFactory` to
    correctly detect a `TagFactory` object without throwing an error
    [#16097]
  * Fixed default values for `Phalcon\Cli`, `Phalcon\Dispatcher` and
    `Phalcon\Application` components to ensure not `null` values are
     passed to methods [#16186]
  * Fixed `Phalcon\Form::clear` to correctly clear the elements and not
    recurse [#15956]
  * Added `Phalcon\Http\Request::getPatch()` to get a value from a
    PATCH request [#16188]
  * Added `Phalcon\Http\Request::getFilteredPatch()` to get a value
    filtered from a PATCH request [#16188]
  * Added `Phalcon\Http\Request::hasPatch()` to check if a value exist
    in a PATCH request [#16188]

- update to 5.0.5
  * Fixed `Phalcon\Config\Config::setData` to pass the `insensitive`
    flag to child objects [#16171]
  * Fixed `Phalcon\Config\Adapter\Groupped::__construct` to pass the
    `insensitive` flag to child objects [#16171]
  * Fixed `Phalcon\Session\Manager::setName`, removing the regex check
    for the name for custom adapters to work with `create_sid()`
    [#16170]
  * Fixed `PdoResult::fetchAll` when passed class name in 2nd argument
    [#16177]
  * Fixed `Forms\Form::label` to accept an array as a default variable
    [#16180]

- update to 5.0.4
  * Fixed `Phalcon\Encryption\Security` to take into account the
    `workFactor` in the cost calculation [#16153]
  * Removed double unserializing during Model caching [#16035]
  * Fixed `Phalcon\Db\Adapter\Pdo\Mysql::describeIndexes` to assign an
    empty string in the index type of `null` and remove warnings
    [#16157]
  * Fixed `Phalcon\Db\Adapter\Pdo\Sqlite::describeIndexes` to assign an
    empty string in the index type of `null` and remove warnings
    [#16157]
  * Fixed `Phalcon\Mvc\Model\Manager::notifyEvent` to return `true`
    instead of `null` on success [#16161]
  * Fixed `Phalcon\Encryption\Security\JWT\Validator::validateExpiration`
    to correctly validate the `exp` claim [#16166]

-------------------------------------------------------------------
Mon Oct 17 20:37:00 UTC 2022 - Arjen de Korte <suse+build@de-korte.org>

- update to 5.0.3
  * Fixed `Phalcon\Filter\Sanitize\StringVal` to accept flags for
    `htmlspecialchars()` [#16135]
  * Fixed `Phalcon\Html\Escaper::attributes()` to honor the `$flags`
    set for `htmlspecialchars()` [#16134]

-------------------------------------------------------------------
Fri Sep 30 18:11:23 UTC 2022 - Arjen de Korte <suse+build@de-korte.org>

- Update to 5.0.2
  * Fixed `Phalcon\Html\Escaper::attributes()` to accept any value and
    transform it to string [#16123]
  * Fixed `Phalcon\Logger\AbstractLogger::getLevelNumber()` to better
    check for string levels [#16123]

- Update to 5.0.1
  * Fixed `Phalcon\Encryption\Security\JWT\Token\Token::validate()` to
    correctly call validator methods [#16115]
  * Added `Phalcon\Encryption\Security\JWT\Validator::get()` and
    `Phalcon\Encryption\Security\JWT\Validator::set()` for validation
    data [#16115]

- Update to 5.0.0
  * Changed `Phalcon\Logger\Adapter\Stream::process` to open the log
    file, check for locks, write contents and close the stream [#16072]
  * Changed getters and setters from shorthand format to full methods
    [#16102]
  * Changed return types to `array` in `Phalcon\Annotations\Reflection`
    class methods [#16106]
  * Changed `Phalcon\Html\Escaper::attributes()` to also accept an
    array of attributes [#16108]
  * Fixed and improved return type of `object` and `?object` [#16023]
  * Fixed `Phalcon\Filter\Validation\Validator\Digit` to use only
    strings for `ctype_*` calls [#16064]
  * Fixed `Phalcon\Flash\AbstractFlash::outputMessage` to return the
    message (implicitFlush) [#16063]
  * Fixed `Phalcon\Filter\Validation\Validator\Numericality` to
    correctly detect illegal characters within string numbers [#16070]
  * Fixed segmentation fault on Reflection of `Phalcon\Mvc\Model` class
    [#16080]
  * Fixed segmentation fault on Reflection [#16096]
  * Added `Phalcon\Encryption\Security\JWT\Token::validate()` to
    validate a token's claims [#16094]
  * Added `Phalcon\Encryption\Security\JWT\Token::verify()` to verify a
    token's signature [#16094]
  * Added `Phalcon\Encryption\Security\JWT\Validator::getErrors()` to
    return any errors with the validation as an array [#16094]

- Full changelog can be found at:
  https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md

-------------------------------------------------------------------
Thu Jun  3 07:42:57 UTC 2021 - Arjen de Korte <suse+build@de-korte.org>

- Update to 4.1.2
  * Fixed Logger\Log::log() log to recognize all log levels.
  * Changed setClaims to be protected so that the
    Phalcon\Security\JWT\Builder class can be properly extended.
- Changed to PECL repository
- Fix specfile typos and include %license

-------------------------------------------------------------------
Thu Feb 18 22:51:45 UTC 2021 - Arjen de Korte <suse+build@de-korte.org>

- Use _multibuild (prepare to build for php8)
- Use php_cfgdir and php_extdir macros to determine location of files

-------------------------------------------------------------------
Sun Jan 24 10:45:03 UTC 2021 - Jan Engelhardt <jengelh@inai.de>

- Trim filler wording from description.

-------------------------------------------------------------------
Sat Jan 16 20:39:36 UTC 2021 - Arjen de Korte <suse+build@de-korte.org>

- Use php-config to determine location of files in package

-------------------------------------------------------------------
Thu Nov 12 20:06:20 UTC 2020 - Arjen de Korte <suse+build@de-korte.org>

- Update to 4.1.0
  * Added JWT (JSON Web Tokens) support under Phalcon\Security\JWT.
    Offers support for:
    + Token
    + Parser
    + Builder
    + Validator
    + Signers (None, HMAC)
    + Base64 encode/decodeUrl helper class [#13856]
  * Added additional HTML helpers under Phalcon\Html\Helper: Anchor, Base,
    Body, Button, Close, Element, Form, Img, Input\Color, Input\Date,
    Input\DateTime, Input\DateTimeLocal, Input\Email, Input\File,
    Input\Hidden, Input\Image, Input\Input, Input\Month, Input\Numeric,
    Input\Password, Input\Range, Input\Select, Input\Search, Input\Submit,
    Input\Tel, Input\Text, Input\Textarea, Input\Time, Input\Url, Input\Week,
    Label, Link, Meta, Ol, Script, Style, Title, Ul [#14696]
  * Added Phalcon\Http\Request::getPreferredIsoLocaleVariant() to return the
    base language if this is a specific one (en vs en-US) [#3135]
  * Added preload for Volt, which will send a HTTP/2 preload header [#13128]
  * Added Phalcon\Helper\Arr::blackList() to exclude elements of an array by
    the keys obtained from the elements of a blacklist [#14801]
  * Added Phalcon\Debug::renderHtml() to get a HTML representation of the
    exception [#14794]
  * Added Phalcon\Mvc\Router\Annotations->setActionPreformatCallback($callback)
    to set a callback which pre-formats actions to custom pattern [#14819]
  * Added new PDO wrapper for the Data Mapper implementation, with decorated
    instance, locator and profiler
    + Phalcon\DataMapper\Pdo\Connection
    + Phalcon\DataMapper\Pdo\Connection\Decorated
    + Phalcon\DataMapper\Pdo\Profiler\Profiler
    + Phalcon\DataMapper\Pdo\Profiler\MemoryLogger
    + Phalcon\DataMapper\Pdo\ConnectionLocator This component will be used in
      the Data Mapper implementation but can be used as a stand alone component
      for PDO connections. [#14733]
  * Added new Query Builder, as well as a factory, for the Data Mapper
    implementation supporting CRUD with bound parameters
    + Phalcon\DataMapper\Query\Bind
    + Phalcon\DataMapper\Query\Delete
    + Phalcon\DataMapper\Query\Insert
    + Phalcon\DataMapper\Query\Select
    + Phalcon\DataMapper\Query\Update
    + Phalcon\DataMapper\Query\QueryFactory This component can be used to
      create SQL statements using a fluent interface. Optionally the statements
      can be executed from the builder itself using the DataMapper\Pdo
      connection. [#14734]
  * Added Phalcon\Mvc\Micro\LazyLoader::getHandler() to return real handler
    when using lazy loaded controllers for Phalcon\Mvc\Micro [#14871]
  * Added Phalcon\Collection\CollectionInterface and
    Phalcon\Config\ConfigInterface to use as typehints when extending or
    implementing custom classes [#15106]
  * Added Phalcon\Db\Adapter\AdapterInterface::getDefaultValue() and
    supportsDefaultValue() methods to properly support the DEFAULT keyword
    [#15180]
  * Added Phalcon\Db\Adapter\AbstractAdapter::supportsDefaultValue() method to
    properly support the DEFAULT keyword [#15180]
  * Added service checks for the session. Now cookies will be saved in the
    session only when the session service is defined [#11770, #14649]
  * Changed Phalcon\Db\Adapter\*::getRawSQLStatement() to return the full SQL
    query with parameters [#12196]
  * Changed Phalcon\Filter::sanitize to throw a E_USER_NOTICE when a filter
    does not exist. [#14679]
  * PHQL now supports the use of any printable characters from the extended
    ASCII table for escaped identifiers. The exception characters are [ and ].
    To use [ and ] escape they (\[, \]) [#14535]
  * Removed UTF-8 charset when using Phalcon\Http\Response::setJsonContent to
    apply with rfc7159
  * Changed the visibility of properties in Phalcon\Http\Message\Uri to work
    with clone. [#15040]
  * Change Phalcon\Validation\AbstractValidator::__construct. Save custom
    validator message in options. [#15053]
  * Add proxy methods without _ prefix in methods names: getRelatedRecords(),
    groupResult(), exists(), preSaveRelatedRecords(), preSave(), doLowUpdate(),
    postSaveRelatedRecords(), postSave(), cancelOperation(), doLowInsert(),
    getConnection(), getConnectionService(), getVersion(), getSpecial() [#14971]
  * Modified Phalcon\Mvc\Model\Relation to accept callable params for model
    relations. [#15158]
  * Fixed Phalcon\Db\Dialect\Mysql::getColumnDefinition to recognize size for
    DATETIME, TIME and TIMESTAMP columns [#13297]
  * Fixed Phalcon\Events\Manager to provide callable support [#13322, #15045]
  * Fixed Phalcon\Validation\Validator\Uniqueness fixed except query [#15084]
  * Fixed Phalcon\Mvc\Model to also check the params option in cascade
    relations when deleting [#15098]
  * Fixed Phalcon\Mvc\Model to also check the params option in restricted
    relations when deleting [#15172]
  * Fixed Phalcon\Mvc\Model::findFirst() to return correct value [#15077]
  * Fixed Phalcon\Mvc\Model\CriteriaInterface::where() parameters [#15144]
  * Fixed Phalcon\Http\Response\Cookies::set() to utilize the options parameter
    correctly [#15129]
  * Fixed Phalcon\Http\Cookie::send() to define options parameter [#15142]
  * Fixed Phalcon\Crypt performance issues. [#15118]
  * Fixed Phalcon\Mvc\Router\Route unicode support in patterns [#15102]
  * Fixed fatal error in Phalcon\Mvc\Model::cloneResultMap() when column map is
    used with orm.cast_on_hydrate turned on. [#14617]
  * Fixed Phalcon\Mvc\Model::sum(), average(), minimum(), maxmium(), count() to
    utilize the transaction parameter. [#15113]
  * Fixed Phalcon\Mvc\Model::__set() to clear dirtyRelated when empty array is
    set. [#14822]
  * Fixed Phalcon\Mvc\Model to skip columns with default values when the
    DEFAULT keyword is not supported by the database adapter (SQLite) [#15180]
  * Fixed Phalcon\Mvc\Router to handle numeric routes properly [#14926]
  * Fixed Phalcon\Session\Adapter\Redis and Phalcon\Session\Adapter\Libmemcached
    to utilize the prefix option [#15184]
  * Fixed Phalcon\Mvc\Model to save the modified properties of previously
    queried single related records. [#15148]
  * Removed Phalcon\Http\Cookie binding to session [#11770]
  * Phalcon\Http\Cookie no longer depends on the session service and data will
    not be duplicated in the session. This made it difficult to use cookies in
    stateless applications (SPA).
  * Removed unused property Phalcon\Mvc\Router::uriSource. [#15123]

-------------------------------------------------------------------
Sun Aug 30 11:53:17 UTC 2020 - Arjen de Korte <suse+build@de-korte.org>

- Update to 4.0.6
  * Changed Volt::convertEncoding to no longer using iconv for a fallback since it
    causes issues with macOS [#14912]
  * Changed schema manipulation in Phalcon\Db\Dialect\Mysql - unquote numerical
    defaults [#14888]
  * Changed the default ACL access level from boolean FALSE to Enum::DENY [#14974]
  * Changed the way Phalcon\Http\Response::__construct checks content data type.
    Now a TypeError will be thrown if incompatible data type was passed [#14983]
  * Changed return type hints of the following Phalcon\Flash\FlashInterface's
    methods: error, message, notice, success and warning [#14994]
  * Changed return type hint for Phalcon\Mvc\ModelInterface::sum [#15000]
  * Changed return type for Phalcon\Mvc\Model\Criteria::getLimit so that integer,
    NULL or array will be returned [#15004]
  * Changed return type hint for Phalcon\Mvc\Model\Manager::getCustomEventsManager to
    return NULL instead of boolean FALSE if there is no special events manager [#15008]
  * Changed Phalcon\Mvc\Model\MetaData::getDI so that now it will throw a
    Phalcon\Mvc\Model\Exception if there is no DiInterface instance [#15011]
  * Changed Phalcon\Http\Request::getJsonRawBody to use json_decode instead of
    Phalcon\Json::decode [#14936]
  * Changed Phalcon\Factory\AbstractFactory to expose getService which will throw an
    exception if it does not exist. Removed checkService and adjusted all references
    in newInstance() calls. [#15038]
  * Changed the visibility of methods and properties in Phalcon\Http\Message\Response,
    Phalcon\Http\Message\ServerRequest and Phalcon\Http\Message\Uri to work with clone.
    [#15040]
  * Fixed Phalcon\Mvc\Model\Query\Builder::getPhql to add single quote between string
    value on a simple condition [#14874]
  * Fixed recognizing language operators inside Volt's echo mode ({{ ... }}) [#14476]
  * Fixed Tag::friendlyTitle to correctly convert titles under MacOS and Windows [#14866]
  * Fixed the Volt compiler to no longer parse cache fragments and thus searching for
    the viewCache service (deprecated for v4) [#14907]
  * Fixed IN operator precedence in Volt [#14816]
  * Fixed testing suite to work with PHPUnit 9 when we upgrade [#14837]
  * Fixed return type hints of the following Phalcon\Acl\AbstractAdapter's methods:
    getActiveAccess, getActiveRole and getActiveComponent [#14974]
  * Fixed default value of the following Phalcon\Annotations\Annotation's properties:
    $arguments and $exprArguments [#14977]
  * Fixed return type hints of the following Phalcon\Annotations\Annotation's methods:
    getArgument, getName and getNamedArgument [#14977]
  * Fixed incorrect return type hint for Phalcon\Http\Response\Cookies::setSignKey
    [#14982]
  * Fixed return type hints for Phalcon\Config\ConfigFactory::load and
    Phalcon\Config\ConfigFactory::newInstance to explicitly indicate the return type
    as Phalcon\Config instance [#14978]
  * Fixed return type hints for the following methods [#14987]
    + Phalcon\Dispatcher\AbstractDispatcher::dispatch
    + Phalcon\Dispatcher\DispatcherInterface::dispatch
    + Phalcon\Filter::get
    + Phalcon\Http\Message\AbstractCommon::cloneInstance
    + Phalcon\Http\Message\AbstractCommon::processWith
    + Phalcon\Http\Message\AbstractMessage::withAddedHeader
    + Phalcon\Http\Message\AbstractMessage::withBody
    + Phalcon\Http\Message\AbstractMessage::withHeader
    + Phalcon\Http\Message\AbstractMessage::withProtocolVersion
    + Phalcon\Http\Message\AbstractMessage::withoutHeader
    + Phalcon\Http\Message\AbstractRequest::withMethod
    + Phalcon\Http\Message\AbstractRequest::withRequestTarget
    + Phalcon\Http\Message\AbstractRequest::withUri
    + Phalcon\Mvc\Model\Binder::findBoundModel
    + Phalcon\Validation::getEntity
    + Phalcon\Validation\ValidationInterface::getEntity
  * Fixed default value of Phalcon\Crypt::$key to satisfy the interface [#14989]
  * Fixed return type hint for Phalcon\Di::getInternalEventsManager [#14992]
  * Fixed return type hints of the following Phalcon\Flash\AbstractFlash's methods:
    error, notice, success and warning [#14994]
  * Fixed return type hint for Phalcon\Translate\InterpolatorFactory::newInstance [#14996]
  * Fixed return type hint for Phalcon\Mvc\Model::sum [#15000]
  * Fixed return type hint for Phalcon\Mvc\Model\CriteriaInterface::getLimit and
    Phalcon\Mvc\Model\Criteria::getLimit to follow documentation and original purpose
    [#15004]
  * Fixed return type hint for Phalcon\Mvc\Model::count and
    Phalcon\Mvc\ModelInterface::count to reflect original behavior [#15006]
  * Fixed return type hint for Phalcon\Mvc\Model::getEventsManager to reflect original
    behavior [#15008]
  * Fixed return type hint for Phalcon\Mvc\Model::average and
    Phalcon\Mvc\ModelInterface::average to reflect original behavior [#15013]
  * Fixed return type hint for Phalcon\Mvc\Model\MetaData::getColumnMap and
    Phalcon\Mvc\Model\MetaData::getReverseColumnMap to reflect original behavior [#15015]
  * Fixed return type hint for Phalcon\Mvc\Model\MetaDataInterface::getColumnMap and
    Phalcon\Mvc\Model\MetaDataInterface::getReverseColumnMap to reflect original behavior
    [#15015]
  * Fixed return type hint for Phalcon\Mvc\Model\CriteriaInterface::getColumns and
    Phalcon\Mvc\Model\Criteria::getColumns to reflect original behavior [#15017]
  * Fixed return type hint for Phalcon\Db\Column::getSize and
    Phalcon\Db\ColumnInterface::getSize to reflect original behavior [#15019]
  * Fixed return type hint for Phalcon\Db\Column::getAfterPosition and
    Phalcon\Db\ColumnInterface::getAfterPosition to reflect original behavior [#15021]
  * Fixed return type hint for Phalcon\Mvc\Model\Manager::executeQuery and
    Phalcon\Mvc\Model\Manager::ManagerInterface to reflect original behavior [#15024]
  * Fixed return type hint for Phalcon\Mvc\Model\Resultset::getFirst and
    Phalcon\Mvc\Model\ResultsetInterface::getFirst to reflect original behavior [#15027]
  * Rollback the regression changes for Phalcon\Mvc\Model\Query::_prepareSelect to
    properly prepare a SQL SELECT statement from a PHQL one [#14657]
  * Fixed SerializerInterface usage for Phalcon\Mvc\Model\Resultset\Complex::unserialize
    as well as Phalcon\Mvc\Model\Resultset\Complex::unserialize [#14942]
  * Removed Phalcon\Translate\InterpolatorFactory::$mapper as well as
    Phalcon\Translate\InterpolatorFactory::$services in favor of
    Phalcon\Factory\AbstractFactory ones [#15036]
- Update to 4.0.5
  * Fixed Phalcon\Db::fetchAll to correctly return data when Enum::FETCH_COLUMN is
    supplied. [#13321]
  * Fixed Postgres NULL values to not be required during model update. [#14862]
  * Fixed MySQL alter column when default value contains not only CURRENT_TIMESTAMP
    [#14880]
  * Fixed MySQL default value with ON UPDATE expression [#14887]
  * Fixed Str::dirFromFile() to replace . with - to avoid issues with Windows
    environments [#14858]
- Update to 4.0.4
  * Added a way to utilize GitHub actions to run database tests against each RDBMS and
    reworked the testing suite. [#14779]
  * Added the latest version of Codeception (v4) and utilized the phalcon4 module.
    [#14779]
  * Changed Column 'notNull' definition to make possible create nullable (NULL) columns
    [#14804]
  * Fixed Phalcon\Db\Adapter\Pdo\Postgresql to correctly identify bool fields instead of
    treating them as tinyint [#14722]
  * Fixed Phalcon\Cli\Console to pass current container to the
    Phalcon\Mvc\ModuleDefinitionInterface::registerAutoloaders() [#14787]
  * Fixed Phalcon\Db\Dialect\Mysql::createTable() to create default value with
    CURRENT_TIMESTAMP ON UPDATE/DELETE [#14797]
  * Fixed Phalcon\Storage\Adapter\* to no longer accept the serializer option as it was
    clashing with the factory [#14828]
  * Fixed Phalcon\Http\Request to return the correct host on an UnexpectedValueException
    [#14763]
  * Fixed Phalcon\Assets\Collection to initialize position to 0 [#14848]
- Update to 4.0.3
  * Fixed Phalcon\Db\Adapter\Pdo\Mysql Tinyint(1) is handled as boolean under MySql
    [#14708]
  * Fixed Phalcon\Mvc\View\Engine\Volt to produce the correct order of variables for the
    join filter [#14771]
  * Fixed Phalcon\Storage\Adapter\Stream::getKeys() bug in the absence of a directory
    with a prefix name [#14725]
  * Fixed Phalcon\Debug::onUncaughtException Should accept \Throwable instead of
    \Exception as an argument [#14738]
  * Fixed Phalcon\Validation\ValidatorFactory Should return
    Phalcon\Validation\ValidatorInterface [14749]
  * Fixed Phalcon\Mvc\Model\Binder to now correctly call has and set on the cache object
    [#14743]
  * Fixed Phalcon\Session\Adapter\Stream and Phalcon\Storage\Adapter\Stream to correctly
    handle simultaneous read/write [#14694]
  * Fixed Phalcon\Config\ConfigFactory to always add the correct extension [#14756]
- Update to 4.0.2
  * Fixed Phalcon version number incorrectly set in the previous release
- Update to 4.0.1
  * Changed the logic when logging times for Phalcon\Logger to use DateTimeImmutable so
    as to handle microseconds if necessary. [#2893]
  * Changed Phalcon\Http\Cookie::send and Phalcon\Http\Cookie::delete to allow for
    samesite to be passed in the options when using PHP > 7.3 [#14627]
  * Fixed Phalcon\Mvc\Model\Criteria Di isn't set when using Criteria::fromInput()
    [#14538]
  * Fixed Phalcon\Db\Dialect\Mysql removing unnecessary parentheses for double and float
    [#14645]
  * Fixed Phalcon\Http\Cookie::delete to parse the correct parameters - cannot use
    alternative syntax until PHP 7.3 [#14643]
  * Fixed Phalcon\Mvc\Model::__isset to take into account non visible properties by
    checking the getter if it exists [#13518]
  * Fixed Phalcon\Mvc\Model::__set to return a more informative message if we are tying
    to access a non visible property [#13518]
  * Fixed Phalcon\Mvc\Model\Resultset\Simple::toArray to correctly process virtual fields
    [#14669]
  * Fixed Phalcon\Session\Manager::getUniqueKey to prefix the key only if uniqueId is
    present [#14688]
  * Fixed Phalcon\Db\Adapter\Pdo::describeColumns to correctly detect ENUM columns
    [#14691]

-------------------------------------------------------------------
Fri Dec 27 15:07:30 UTC 2019 - Arjen de Korte <suse+build@de-korte.org>

- Update to 4.0.0
  * Provided PHP 7.4 support
  * Added the ability to Phalcon\Model::findFirstBy* and Phalcon\Model::findBy* to process passed
    parameters (for order etc.)
  * Added Phalcon\Helper\Str::decrement to remove a number from a string or decrements that number
    if it already is defined
  * Added Exception storing and getting in the Phalcon\Domain\Payload\*
  * Added options array in Phalcon\Http\Cookie in the constructor as well as getOptions and
    setOptions
  * Added options array in Phalcon\Http\Response\Cookies in the set()
  * Changed Phalcon\Mvc\Router\Annotations to use converters instead of conversors
  * Changed Phalcon\Di::setRaw to Phalcon\Di::setService to align more with the use of the method
  * Changed Phalcon\Http\CookieInterface to Phalcon\Http\Cookie\CookieInterface to avoid confusion
  * Changed Phalcon\Storage\Adapter\*::getKeys to accept an optional $prefix so as to filter the
    keys returned
  * Changed dates reported by the logger to use the "c" date mask for better sorting
  * Changed the Phalcon\Storage\Adapter\* constructors to require the
    Phalcon\Storage\SerializerFactory object
  * Fixed PhalconMvc\Model to ignore internal setters if properties have the same name as the
    setter
  * Fixed Phalcon\Logger\Formatter\Line to not add PHP_EOL at the end of the message and added it
    to the Phalcon\Logger\Adapter\Stream
  * Fixed Phalcon\Mvc\Model\MetaData\Apcu and Phalcon\Mvc\Model\MetaData\Redis to allow setting the
    prefix and lifetime using the options or use the default.
  * Fixed Phalcon\Storage\Adapter\AbstractAdapter, Phalcon\Storage\Adapter\AbstractInterface
    getters to contain a default value
  * Fixed Phalcon\Storage\Adapter\Memory initializing the array store correctly
  * Fixed Phalcon\Storage\Adapter\Stream to capture notice if the stream is not opened properly
  * Fixed Phalcon\Security::getRandomBytes to return int
  * Fixed Phalcon\Security to use 10 as the default work factor
  * Fixed Phalcon\Helper\Arr::validateAny and Phalcon\Helper\Arr::validateAllto use null as default
    for the callback method
  * Fixed Phalcon\Escaper::escapeHtml and Phalcon\Escaper::escapeHtmlAttr to allow null values
  * Fixed Phalcon\Mvc\Model::cloneResultMap to correctly recognize aliased fields and include them
    in the resultset
  * Fixed Phalcon\Http\Request::getQuery,Phalcon\Http\Request::getPut,Phalcon\Http\Request::getPost
    to treat 0 as non empty for allowNoEmpty
  * Fixed Phalcon\Router::handle() to use the / route on empty string
  * Fixed Phalcon\Storage\Adapter\Libmemcached::getKeys and Phalcon\Storage\Adapter\Redis::getKeys
    to return the keys that are prefixed only for that adapter
  * Fixed factories to return a new instance when calling newInstance and not a cached one from the
    internal mapper
    + Phalcon/Annotations/AnnotationsFactory
    + Phalcon/Cache/AdapterFactory
    + Phalcon/Config/ConfigFactory
    + Phalcon/Db/Adapter/PdoFactory
    + Phalcon/Image/ImageFactory
    + Phalcon/Logger/AdapterFactory
    + Phalcon/Paginator/PaginatorFactory
    + Phalcon/Storage/AdapterFactory
    + Phalcon/Storage/SerializerFactory
    + Phalcon/Translate/InterpolatorFactory
    + Phalcon/Translate/TranslateFactory
    + Phalcon/Validation/ValidatorFactory
  * Fixed Phalcon\Mvc\Model::cloneResultMap to cast integers when fields are TYPE_BIGINTEGER,
    TYPE_INTEGER, TYPE_MEDIUMINTEGER, TYPE_SMALLINTEGER, TYPE_TINYINTEGER
  * Fixed Phalcon\Http\Response::setCookies to use the correct interface
  * Fixed Phalcon\Test\Unit\Image\Adapter\Gd::processBackground to correctly calculate the alpha
    value.
  * Fixed Phalcon\Logger\Adapter\AdapterInterface adding missing inTransaction()
  * Fixed Phalcon\Mvc\Model::cloneResultsetMap to remove fatal error when looking up the columnMap.
  * Fixed Phalcon\Http\Request\FileInterface by adding getError that was missing.
- Update to 3.4.5
  * Fixed segfault in Phalcon\Mvc\Micro\LazyLoader::__call() when the handler has a syntax error.
  * Fixed RuntimeException in Phalcon\Db\Adapter\Pdo Trying to call method upper on a non-object.
  * Fixed Phalcon\Storage\Adapter\Redis::delete() deprecated warning from php-redis
- Update to 3.4.4
  * Generated Dialect Class referring to a PHP class can't be found
  * Changed default gcc's CFLAGS so that, the extension should be properly generated for most hosts,
    including Docker
  * Phalcon\Forms\Form::clear() now correctly clears single fields.
  * Used latest stable Zephir from 0.10.x branch to prevent segfaults with PHP 7.3.6

-------------------------------------------------------------------
Sun Mar  3 22:51:40 UTC 2019 - Mariusz Fik <fisiu@opensuse.org>

- Update to 3.4.3:
  * Provided PHP 7.3 support

-------------------------------------------------------------------
Wed Jan  2 19:39:46 UTC 2019 - fisiu@opensuse.org

- Update to 3.4.2:
  * Added missing Volt tags to array helper in
    Phalcon\Mvc\View\Engine\Volt\Compiler::functionCall
  * Added the ability to explicitly define nullable columns (especially timestamp ones)
  * Refactored Phalcon\Db\Adapter\Pdo::query to use PDO's prepare and execute
    and Phalcon\Db\Adapter::fetchAll to use PDO's fetchAll
  * Fixed Phalcon\Validation\Validator\Numericality to accept float numbers
    on locales with comma decimal point
  * Fixed Phalcon\Tag so it unsets parameters before passing options array to
    self::renderAttributes
  * Fixed Phalcon\Http\Response::setFileToSend filename; when file downloaded
    it had an extra _
  * Fixed Phalcon\Mvc\Model\Query::execute to properly bind parameters to sub queries
  * Fixed Phalcon\Http\Request::getJsonRawBody #13501. It will now return
    false when the body content is empty, as well as when it encounters an
    error whilst decoding the JSON content
  * Fixed Phalcon\Validation::preChecking to allow use Phalcon\Db\RawValue as
    an empty container for isAllowEmpty option
  * Fixed object binding and placeholder creation in Phalcon\Db\Adapter::insert
    and Phalcon\Db\Adapter::update
  * Fixed Phalcon\Config\Adapter\Ini not building config objects properly for
    numerical keys
  * Fixed incorrect scope of view variables
  * Fixed Phalcon\Config::_merge not merging config with numeric properties properly

-------------------------------------------------------------------
Wed Sep 26 19:06:22 UTC 2018 - fisiu@opensuse.org

- Update to 3.4.1:
  * Changed Phalcon\Cache\Backend\Redis to support connection timeout parameter
  * Fixed Phalcon\Validaiton\Validator\Uniqueness::isUniquenessModel to properly
    get value of primary key when it has different name in column map
  * Fixed bad performance for repeated Phalcon\Mvc\Router::getRouteByName and
    Phalcon\Mvc\Router::getRouteById calls for applications with many routes
  * Fixed incorrect tinyblob bind type in Phalcon\Db\Adapter\Pdo\Mysql::describeColumns
  * Fixed Phalcon\Http\Request::getPut to provide json content-type support

-------------------------------------------------------------------
Sat Jul 21 21:55:27 UTC 2018 - fisiu@opensuse.org

- Update to 3.4.0:
  * Added Phalcon\Mvc\Router::attach to add Route object directly into Router
  * Added the ability to listen request:beforeAuthorizationResolve and
    request:afterAuthorizationResolve events
  * Added call event afterFetch in Phalcon\Mvc\Model:refresh
  * Added Phalcon\Http\Response::getReasonPhrase to retrieve the reason phrase from the Status header
  * Added Phalcon\Loader::setFileCheckingCallback to set internal file existence resolver
  * Added ability to pass aggregation options for Phalcon\Mvc\Collection::aggregate
  * Added Phalcon\Crypt::setHashAlgo, Phalcon\Crypt::getHashAlgo, Phalcon\Crypt::useSigning
    and Phalcon\Crypt::getAvailableHashAlgos
  * Added Phalcon\Crypt::__construct so now the cipher can be set at object
    construction and the calculating message digest can be enabled without the
    need to call setCipher or useSigning explicitly
  * Added Phalcon\Crypt\Mismatch. Exceptions thrown in Phalcon\Crypt will use this class
  * Added Phalcon\Http\Cookie::setSignKey to set sign key used to generate a message
    authentication code (eg. message digest)
  * Added Phalcon\Http\Response\Cookies::setSignKey to set sign key used to
    generate a message authentication code (eg. message digest)
  * Changed Phalcon\Crypt::setCipher so that IV length will be reconfigured
    during setting the cipher algorithm
  * Changed Phalcon\Crypt::setCipher so that method will throw Phalcon\Crypt\Exception if a cipher is unavailable
  * Fixed regression for Phalcon\Debug\Dump::output to correctly work with detailed mode
  * Fixed Phalcon\Mvc\Model\Query\Builder::having and Phalcon\Mvc\Model\Query\Builder::where
    to correctly merge the bind types
  * Fixed Phalcon\Mvc\Model::setSnapshotData to properly sets the old snapshot
  * Do not throw Exception when superglobal does not exist

-------------------------------------------------------------------
Fri Mar 30 20:58:06 UTC 2018 - fisiu@opensuse.org

- Update to 3.3.2:
  * Fixed Phalcon\Db\Dialect\Mysql::modifyColumn to produce valid SQL for
    renaming the column
  * Fixed Phalcon\Forms\Form::getMessages to return back previous behaviour
  * Fixed Phalcon\Mvc\Model\Behavior\SoftDelete::notify to solve
    the exception that soft deletion renamed model
  * Fixed E_DEPRECATED error for each() in Phalcon\Debug\Dump

-------------------------------------------------------------------
Tue Jan 16 21:33:46 UTC 2018 - fisiu@opensuse.org

- Update to 3.3.1:
  * Added support of PHP 7.2 and initial support of PHP 7.3
  * Added support for switch/case syntax to the Volt Engine
  * Added Phalcon\Logger\Adapter\Blackhole
  * Added Phalcon\Http\Request::hasHeader to check if certain header exists
  * Added support of 103 (Early Hint) HTTP status code
  * Added router:beforeMount event to Router::mount
  * Added ability to use PDO option aliases on database connect
  * Added Phalcon\Mvc\Model\MetaData\Apcu
  * Added ability to use string(file path) as a argument in Phalcon\Config\Factory::load()
  * Changed Phalcon\Mvc\Model to allow to pass a transaction within the query context
  * Many other fixes and improvements.

-------------------------------------------------------------------
Mon Oct 23 21:27:58 UTC 2017 - fisiu@opensuse.org

- Update to 3.2.4:
  * Fix regression by removing injection of dispatcher's parameters.

-------------------------------------------------------------------
Fri Oct 20 17:16:14 UTC 2017 - fisiu@opensuse.org

- Update to 3.2.3:
  * Minor fixes arround Mvc\Model, View and Query.

-------------------------------------------------------------------
Wed Oct 11 15:12:36 UTC 2017 - fisiu@opensuse.org

- Don't generate c from zephir. Use c code provided by upstream.
- Drop zephir-0.9.11.tar.gz.

-------------------------------------------------------------------
Fri Aug 18 20:44:41 UTC 2017 - fisiu@opensuse.org

- Update Phalcon to 3.2.2 and use zephir 0.9.11:
  * Bug fix release.

-------------------------------------------------------------------
Wed Aug  2 11:32:27 UTC 2017 - tchvatal@suse.com

- Drop the php5 part to keep only php7 due to the php5 removal

-------------------------------------------------------------------
Wed Jul 12 18:39:29 UTC 2017 - fisiu@opensuse.org

- Update version to 3.2.1:
  * Added Phalcon\Db\Dialect\Mysql::getForeignKeyChecks to generate a SQL to
    check the foreign key settings
  * Many bugfixes.

-------------------------------------------------------------------
Fri Jun 23 20:08:32 UTC 2017 - fisiu@opensuse.org

- Update version to 3.2.0 and build with zephir 0.9.9.

-------------------------------------------------------------------
Mon Apr 10 20:27:01 UTC 2017 - fisiu@opensuse.org

- Update Phalcon to 3.1.2 and use zephir 0.9.7.

-------------------------------------------------------------------
Tue Dec 20 22:05:37 UTC 2016 - fisiu@opensuse.org

- Update Phalcon to 3.0.2 and use zephir 0.9.5.

-------------------------------------------------------------------
Wed Aug 24 21:21:51 UTC 2016 - fisiu@opensuse.org

- Update Phalcon to 3.0.1.

-------------------------------------------------------------------
Wed Aug 17 21:29:37 UTC 2016 - fisiu@opensuse.org

- Compile phalcon-3.0.0 with zephir 0.9.4.

-------------------------------------------------------------------
Sat Jul 30 00:54:04 UTC 2016 - fisiu@opensuse.org

- Update Phalcon to 3.0.0. Package built with zephir-0.9.3.

-------------------------------------------------------------------
Thu Mar 24 21:46:28 UTC 2016 - fisiu@opensuse.org

- Phalcon 2.1.0 RC1.

-------------------------------------------------------------------
Thu Mar 10 22:22:46 UTC 2016 - fisiu@opensuse.org

- Phalcon 2.1.0 beta 2.

-------------------------------------------------------------------
Sun Nov 29 15:57:31 UTC 2015 - mruz@poczta.onet.pl

- Phalcon 2.0.9
 + Improved overall support of SQL for migrations
 + Fixed bug that double serializes data using Redis adapter
 + Added console:boot event to allow the developer to perform initialization actions
 + Added implementation options allowEmpty for Phalcon\Mvc\Model\Validator\Ip
 + Fixed SQLite bug[#10997] related to setting of index type
 + Added Phalcon\Db\Dialect\Sqlite::listIndexesSql - to generate the SQL to get query list of indexes
 + Fixed MySQL bug[#11036] related to setting of index type
 + Added missed RouteInterface::setHostname, RouteInterface::getHostname
 + Added strict option for ExclusionIn validator
 + Added Phalcon\Text::underscore - to make a phrase underscored instead of spaced
 + Added Phalcon\Text::humanize - to make an underscored or dashed phrase human-readable
 + Added ability to change document class to be returned in ODM through class option

-------------------------------------------------------------------
Sat Sep 26 10:26:38 UTC 2015 - mruz@poczta.onet.pl

- Phalcon 2.0.8
 + Added Phalcon\Security\Random::base58 - to generate a random base58 string
 + Added Phalcon\Logger\Adapter::isTransaction() to check whether the logger is currently in transaction mode or not (Phalcon 1.3 behavior)
 + Phalcon\Session\Adapter now closes the session when the adapter is destroyed (Phalcon 1.3 behavior)
 + Fixed fetching of data in modes FETCH_CLASS, FETCH_INTO and FETCH_FUNC in Phalcon\Db
 + Added missing code property in Phalcon\Validation\Message available in Phalcon 1.3.x
 + Added Phalcon\Db\Column::TYPE_TIMESTAMP to allow migrations on these kind of columns
 + Added Phalcon\Db\ColumnInterface::hasDefault to check if a column has a default value declared in its database column definition
 + Fixed determining of default value for column in Phalcon\Db\Dialect\MySQL, Phalcon\Db\Dialect\Sqlite and Phalcon\Db\Dialect\Postgresql classes
 + Now Phalcon\Mvc\Model::__call invokes finders as in __callStatic
 + Fixed Phalcon\Db\Dialect\Postgresql::getColumnDefinition for BIGINT and BOOLEAN data types
 + Fixed BOOLEAN default value in Phalcon\Db\Dialect\Postgresql
 + Added Phalcon\Validation\Validator\CreditCard - validation credit card number using luhn algorithm

-------------------------------------------------------------------
Tue Aug 18 07:06:32 UTC 2015 - mruz@poczta.onet.pl

- Phalcon 2.0.7
 + Image\Adapter\Gd::save() no longer fails if the method or the instance is created with a filename without an extension
 + Fixed segfault and implementation of Image\Adapter\Imagick::text()
 + Exceptions thrown in Volt compiler are now Phalcon\Mvc\View\Engine\Exception
 + Now you can import macros from other files using {% include "file.volt" %}
 + Undefined function calls fall back to macro calls in Volt templates
 + Automatic bound parameters in Mvc\Model\Criteria now uses a different prefix
 + than Mvc\Model\Query\Builder to avoid collisions
 + Added Cache\Multiple::flush() to flush the cache backends added to the multiple system
 + Fixed Session\Bag::remove()
 + Session\Bag::destroy() eliminates any temporary data in the variables bag
 + afterCreate/afterUpdate are only called if saving related records was successful
 + Added an optional parameter removeData to Session\Adapter::remove() to remove any data in $_SESSION that belongs to the uniqueId or the whole session data
 + Now session variables making use of unique prefixes use # as internal separator
 + Added parameter that changes the default operator for conditions in method Mvc\Model\Criteria::fromImput() #10749
 + Added \Phalcon\Queue\Beanstalk::listTubes() to get list of a tubes
 + Added a fix to avoid that a table present in many sub-queries causes invalid SQL generation
 + Add CookieInterface, update Cookie and Cookies to use this interface - Decoupling Cookies and Cookie - Check Session state before using it in Cookie. #10789
 + Fixed merge of two Phalcon\Config instances that contains object values different than Phalcon\Config compatible instances
 + When creating tables in Postgres, inline PRIMARY keys are now escaped properly#10797
 + Fixed incorrect generation of SELECT COUNT(*) causing unexpected exceptions when phqlLiterals is disabled
 + Added Phalcon\Security\Random - secure random number generator class. Provides secure random number generator which is suitable for generating session key in HTTP cookies, etc

-------------------------------------------------------------------
Wed Jul 22 16:05:42 UTC 2015 - mruz@poczta.onet.pl

- Phalcon 2.0.6
 + Builds in TravisCI now uses Docker to perform faster builds
 + Added Http\Response::setCache() to easily set cache headers.
 + When a beanstalkd connection is closed the adapter does not produce a notice anymore
 + Default separator in Text::increment is now _ (underscore)
 + Using tel_field in Volt now generates correct PHP code
 + SQL generated by PostgreSQL dialect in dropTable and dropView is now correct
 + Errors generated in Cache\Backend\Memcached now shows the result code to easily debug problems
 + Fixed LIMIT/OFFSET SQL generation in Mvc\Model\Query\Builder
 + Fixed Logger\Formatter\Line to match 1.3.x behavior
 + Fixed warning when castOnHydrate' is true #10648
 + Added name before int/float/numeric/string/bool/null/other variables in Debug\Dump::output
 + Now Validation\Validator\Identical allows both 'accepted' and 'value' as value to keep backwards compatibility
 + Added \Phalcon\Mvc\Model\MetaData\Redis adapter.
 + Added Redis Session adapter
 + Fixed bug in Mvc\Model\Criteria::fromInput unallowing it to use renamed columns
 + Fixed bug in Http\Request getRawBody()/getPut() clears input buffer #10694

- Phalcon 2.0.5
 + Fixed a bug that makes that attaching an events manager to an Mvc\Application causes view->render() not being called
 + Fixed bug that makes generated SQL statements using FOR UPDATE not being parsed correctly
 + The email filter now no longer removes the ' character #10603
 + When an array is bound the cached representation in PHQL makes the SQL being incorrectly generated the second time.
 + Added \Phalcon\Mvc\Model\MetaData\Memcache and \Phalcon\Mvc\Model\MetaData\Libmemcached adapters
 + Fixed a bug that makes macro can't be called recursively in Volt

-------------------------------------------------------------------
Wed Jul  8 05:36:01 UTC 2015 - mruz@poczta.onet.pl

- Phalcon 2.0.4
 + Fixed bug in Phalcon\Mvc\Model::update() that mistakenly throws an exception when the record does exist
 + Now links in Phalcon\Debug point to https://api.phalconphp.com instead of http://docs.phalconphp.com
 + Implemented a more versatile way to assign variables in Volt allowing to assign properties and array indexes
 + Improved generation of macros in Volt using anonymous functions instead of plain PHP functions, this allow to bind the adapter object and inject services within them
 + Fixed generation and validation of default parameters in Volt's macros
 + Added Phalcon\Assets\Manager::getCollections() to return all collections registered #2488
 + Now Phalcon\Mvc\Url::getStatic() generates URLs from routes
 + Introduced Phalcon\Mvc\EntityInterface to allow parameters receive both Phalcon\Mvc\Model and Phalcon\Mvc\Collection instances. This interface allow Mvc\Model\Validators being used in Mvc\Collection
 + Added Phalcon\Session\Adapter::setName() to change the session name
 + Added BIGINT column type support in Phalcon\Db
 + Added new types Phalcon\Db\Column::BLOB and Phalcon\Db\Column::DOUBLE #10506
 + Automatic binding of Large Object data (LOB) in the ORM
 + Support for BIT types in MySQL with binding as booleans
 + Added Phalcon\Flash\Direct::output() allowing to place flash messages in a specific place of the view #629
 + Added 'autoescape' option that allows to globally enable autoescape in any Volt template
 + Added readAttribute/writeAttribute to Phalcon\Mvc\Collection\Document
 + Added toArray to Phalcon\Mvc\Collection\Document
 + Global setting db.force_casting now forces casting bound parameters to specified bind types
 + Introduced new placeholders in PHQL enclosed in brackets that allow to set the type: {name:str} or {names:array}
 + Now you can bind arrays in bound parameters in PHQL
 + Global setting orm.cast_on_hydrate allow to cast hydrated attributes to the original types in the mapped tables instead of using strings
 + Values in LIMIT/OFFSET clause are now passed using bound parameters in PHQL
 + Allowing late state binding in both Simple/Complex results to allow override Mvc\Model::cloneResultMap
 + Added method distinct() in Phalcon\Mvc\Model\Criteria #10536
 + Added global setting orm.ignore_unknown_columns to ignore unexpected columns when hydrating instances in the ORM This fixes extra auxiliar columns used in Db\Adapter\Pdo\Oracle
 + Added support for afterFetch in Mvc\Collection
 + Added 'beforeMatch' parameter in @Route annotation of Mvc\Router\Annotations
 + Added groupBy/getGroupBy/having/getHaving to Mvc\Model\Criteria
 + Phalcon\Mvc\Model::count() now return values as integer
 + Removed __construct from Phalcon\Mvc\View\EngineInterface
 + Added Phalcon\Debug\Dump::toJson() to return an JSON string of information about a single variable
 + Now instances in Phalcon\Di are built using internal optimizers instead of \ReflectionClass (PHP 5.6)
 + Added Phalcon\Mvc\Model\Validator\IP from incubator
 + Added parameter return defaultValue in Phalcon\Mvc\Model\Validator::getOption()

-------------------------------------------------------------------
Thu Jun 11 07:09:33 UTC 2015 - mruz@poczta.onet.pl

- Phalcon 2.0.3

-------------------------------------------------------------------
Tue May 26 06:18:47 UTC 2015 - mruz@poczta.onet.pl

- Phalcon 2.0.2

-------------------------------------------------------------------
Tue Oct 28 11:00:08 UTC 2014 - mruz@poczta.onet.pl

- Phalcon 1.3.4 release

-------------------------------------------------------------------
Sun Sep 28 11:40:31 UTC 2014 - mruz@poczta.onet.pl

- Phalcon 1.3.3 release

-------------------------------------------------------------------
Tue Jul  8 11:57:49 UTC 2014 - mruz@poczta.onet.pl

- Phaclcon 1.3.2 rebuild

-------------------------------------------------------------------
Thu Jun  5 12:22:09 UTC 2014 - mruz@poczta.onet.pl

- Phalcon 1.3.2 release

-------------------------------------------------------------------
Fri Mar 28 07:17:40 UTC 2014 - mruz@poczta.onet.pl

- Phalcon 1.3.1 release

-------------------------------------------------------------------
Tue Mar 18 06:10:23 UTC 2014 - mruz@poczta.onet.pl

- Phalcon 1.3.0 release

-------------------------------------------------------------------
Tue Mar 11 06:07:53 UTC 2014 - mruz@poczta.onet.pl

- Phalcon 1.3.0 build 11032014

-------------------------------------------------------------------
Mon Mar  3 14:00:36 UTC 2014 - mruz@poczta.onet.pl

- Phalcon 1.3.0 build 03032014

-------------------------------------------------------------------
Wed Feb 12 14:44:26 UTC 2014 - mruz@poczta.onet.pl

- Phalcon 1.3.0 build 12022014

-------------------------------------------------------------------
Thu Dec 12 08:04:33 UTC 2013 - mruz@poczta.onet.pl

- Phalcon 1.3.0 beta 1 release

-------------------------------------------------------------------
Mon Oct 21 16:52:48 UTC 2013 - mruz@poczta.onet.pl

- Phalcon 1.2.4 release

-------------------------------------------------------------------
Mon Aug 26 17:53:05 UTC 2013 - mruz@poczta.onet.pl

- Phalcon 1.2.3 release

-------------------------------------------------------------------
Fri Aug  9 19:16:56 UTC 2013 - mruz@poczta.onet.pl

- Phalcon 1.2.2 release

-------------------------------------------------------------------
Thu Jul 25 21:24:42 UTC 2013 - mruz@poczta.onet.pl

- Phalcon 1.2.1 release

-------------------------------------------------------------------
Wed Jul 10 08:30:41 UTC 2013 - mruz@poczta.onet.pl

- Phalcon 1.2.0 release

-------------------------------------------------------------------
Wed Jun 19 08:06:12 UTC 2013 - mruz@poczta.onet.pl

- Phalcon 1.2 beta 1 release

-------------------------------------------------------------------
Sat Jun  1 18:09:01 UTC 2013 - mruz@poczta.onet.pl

- PhalconPHP release 1.1.0
