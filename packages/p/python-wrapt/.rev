<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>c2d06989579513f76769a2b36ca9277f</srcmd5>
    <version>1.9.0</version>
    <time>1438750250</time>
    <user>coolo</user>
    <comment></comment>
    <requestid>318875</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>32f3b2e643f22de8946b08b47ce00d97</srcmd5>
    <version>1.10.6</version>
    <time>1455701195</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>359586</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>b099441bfba66c0036c04b2d16dd3f9d</srcmd5>
    <version>1.10.8</version>
    <time>1472731425</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>424131</requestid>
  </revision>
  <revision rev="4" vrev="2">
    <srcmd5>e1240ef1081d2820ae96ff0272584b6e</srcmd5>
    <version>1.10.8</version>
    <time>1489866644</time>
    <user>dimstar_suse</user>
    <comment>- update for singlespec (forwarded request 479711 from matejcik)</comment>
    <requestid>479713</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>186450f9a395c1b86e3f6bbdd791f322</srcmd5>
    <version>1.10.10</version>
    <time>1500670006</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>509027</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>9bc59aa4143542c1abf9331146652e61</srcmd5>
    <version>1.10.10</version>
    <time>1506195195</time>
    <user>dimstar_suse</user>
    <comment>- update to version 1.10.10:
  * Added back missing description and categorisations when releasing
  to PyPi.
  * Code for inspect.getargspec() when using Python 2.6 was missing 
  import of sys module.</comment>
    <requestid>527615</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>9d13f509fc74a3be56f7c5266334d3fb</srcmd5>
    <version>1.11.1</version>
    <time>1552380404</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.11.1:
  * Many bugfixes all around
  * see changes.rst for detailed list
- Switch to github to include tests</comment>
    <requestid>683895</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>7982c5097e6911522767181c96c7c9a3</srcmd5>
    <version>1.11.2</version>
    <time>1564484675</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.11.2:
  * Fix possible crash when garbage collection kicks in when invoking a destructor of wrapped object.</comment>
    <requestid>717552</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>b80f642c6c67df0db9ee6c5cce5d7213</srcmd5>
    <version>1.12.0</version>
    <time>1583948732</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.12.0:
  * Provided that you only want to support Python 3.7, when deriving from
    a base class which has a decorator applied to it, you no longer need
    to access the true type of the base class using ``__wrapped__`` in
    the inherited class list of the derived class.
  * When using the ``synchronized`` decorator on instance methods of a
    class, if the class declared special methods to override the result for
    when the class instance was tested as a boolean so that it returned
    ``False`` all the time, the synchronized method would fail when called.
  * When using an adapter function to change the signature of the decorated                    
    function, ``inspect.signature()`` was returning the wrong signature
    when an instance method was inspected by accessing the method via the
    class type.</comment>
    <requestid>783021</requestid>
  </revision>
</revisionlist>
