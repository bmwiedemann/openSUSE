-------------------------------------------------------------------
Sat Mar 20 16:50:08 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Fix python39 test suite failures
  * wrapt-pr161-py39tests.patch
  * gh#GrahamDumpleton/wrapt#161

-------------------------------------------------------------------
Fri Dec  4 00:37:53 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Fix python3.6 build with pytest 6
  * fix-dummy-collector-pytest6.patch
  * gh#GrahamDumpleton/wrapt#168

-------------------------------------------------------------------
Mon Mar 16 11:01:55 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- update to 1.12.1:
  * Applying a function wrapper to a static method of a class using the
  ``wrap_function_wrapper()`` function, or wrapper for the same, wasn't
  being done correctly when the static method was the immediate child of
  the target object. It was working when the name path had multiple name
  components. A failure would subsequently occur when the static method
  was called via an instance of the class, rather than the class.

-------------------------------------------------------------------
Mon Mar  9 16:25:43 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- update to 1.12.0:
  * Provided that you only want to support Python 3.7, when deriving from
    a base class which has a decorator applied to it, you no longer need
    to access the true type of the base class using ``__wrapped__`` in
    the inherited class list of the derived class.
  * When using the ``synchronized`` decorator on instance methods of a
    class, if the class declared special methods to override the result for
    when the class instance was tested as a boolean so that it returned
    ``False`` all the time, the synchronized method would fail when called.
  * When using an adapter function to change the signature of the decorated                    
    function, ``inspect.signature()`` was returning the wrong signature
    when an instance method was inspected by accessing the method via the
    class type.

-------------------------------------------------------------------
Mon Jul 22 11:37:01 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 1.11.2:
  * Fix possible crash when garbage collection kicks in when invoking a destructor of wrapped object.

-------------------------------------------------------------------
Mon Mar 11 13:28:24 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 1.11.1:
  * Many bugfixes all around
  * see changes.rst for detailed list
- Switch to github to include tests

-------------------------------------------------------------------
Sun Jul  9 10:26:29 UTC 2017 - adrian@suse.de

- update to version 1.10.10:
  * Added back missing description and categorisations when releasing
  to PyPi.
  * Code for inspect.getargspec() when using Python 2.6 was missing 
  import of sys module.

-------------------------------------------------------------------
Mon Feb 27 13:54:07 UTC 2017 - jmatejek@suse.com

- update for singlespec

-------------------------------------------------------------------
Thu Sep  1 05:30:31 UTC 2016 - tbechtold@suse.com

update to version 1.10.8
  * Increment version to 1.10.8.
  * Fix modulo operator on ObjectProxy
  * Increment version to 1.10.7.
  * Document mod operator bug in Python variant of object proxy.
  * Update copyright year.
  * Fix tests for floordiv and mod.
  * Remove reference to inspect.getargspec() as removed in Python 3.6. #64
- Use pypi.io as Source url

-------------------------------------------------------------------
Tue Feb 16 08:25:35 UTC 2016 - michael@stroeder.com

- update to 1.10.6

-------------------------------------------------------------------
Tue Nov  4 16:03:54 UTC 2014 - hpj@urpla.net

- version 1.9: initial build

