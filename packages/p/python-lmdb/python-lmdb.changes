-------------------------------------------------------------------
Mon Aug 17 16:04:47 UTC 2020 - Michael Str√∂der <michael@stroeder.com>

- Update to v0.99
  * Fix lmdb.tool encoding issues.
  * Fix -l lmdb invocation issue.
  * Minor documentation improvements.
  * Update LMDB to version 0.9.24.
  * Update for Python 3.9 (current release candidate) support.
  * Resolve a bug when using cursor.putmulti and append=True on dupsort DBs.
  * Allow _Database.flags method to take no arguments since the one argument
    wasn't being used.

-------------------------------------------------------------------
Tue Nov 26 00:43:19 UTC 2019 - Martin Herkt <9+suse@cirno.systems>

- Update to v0.98
  * Fix that a duplicate argument to a lmdb method would cause
    an assert.
  * Fix crash under debug cpython when mdb_cursor_open failed

-------------------------------------------------------------------
Mon Aug 12 05:24:44 UTC 2019 - Martin Herkt <9+suse@cirno.systems>

- Update to v0.97
  * Fix a missed GIL unlock sequence.
  * Fix argv check in JEP (cpython under Java) environment.

-------------------------------------------------------------------
Wed Jul 24 13:54:02 UTC 2019 - Martin Herkt <9+suse@cirno.systems>

- Update to v0.96
  * Doc updates.
  * More removal of code for now-unsupported Python versions.
  * Only preload the value with the GIL unlocked when the value is
    actually requested. This significantly improves read
    performance to retrieve keys with large values when the value
    isn't retrieved.

-------------------------------------------------------------------
Sun Jun  9 01:40:08 UTC 2019 - Martin Herkt <9+suse@cirno.systems>

- Update to v0.95
  * Handling of the Environment(create=True) flag was improved.
  * Database names may be reused after they are dropped on CFFI,
    without reopening the environment.

-------------------------------------------------------------------
Mon May 21 17:37:59 UTC 2018 - 9+suse@cirno.systems

- Update to v0.94
  * CPython argument parsing now matches the behaviour of CFFI,
    and most sane  Python APIs: a bool parameter is considered
    to be true if it is any truthy value, not just if it is
    exactly True.
  * Fixed several 2.7/3 bugs in command line tool.

-------------------------------------------------------------------
Mon May 21 16:25:54 UTC 2018 - 9+suse@cirno.systems

- Use system liblmdb

-------------------------------------------------------------------
Fri Aug 11 10:08:42 UTC 2017 - 9@cirno.systems

- Add doc files

-------------------------------------------------------------------
Fri Aug  4 09:41:00 UTC 2017 - 9@cirno.systems

- Init package, v0.93
