Index: voila-0.3.6/setup.cfg
===================================================================
--- voila-0.3.6.orig/setup.cfg
+++ voila-0.3.6/setup.cfg
@@ -36,8 +36,8 @@ install_requires =
 	jupyter_server>=1.18,<2.0.0
 	jupyterlab_server>=2.3.0,<3
 	jupyter_client>=6.1.3,<8
-	nbclient>=0.4.0,<0.6
-	nbconvert>=6.4.5,<7
+	nbclient>=0.4.0,<0.8
+	nbconvert>=6.4.5,<8
 	websockets>=9.0
 	traitlets>=5.0.3,<6
 
Index: voila-0.3.6/voila/exporter.py
===================================================================
--- voila-0.3.6.orig/voila/exporter.py
+++ voila-0.3.6/voila/exporter.py
@@ -28,21 +28,25 @@ from .utils import create_include_assets
 class VoilaMarkdownRenderer(IPythonRenderer):
     """Custom markdown renderer that inlines images"""
 
+    def __init__(self, contents_manager, *args, **kwargs):
+        self.contents_manager = contents_manager
+        super().__init__(*args, **kwargs)
+
     def image(self, src, title, text):
-        contents_manager = self.options['contents_manager']
+        contents_manager = self.contents_manager
         if contents_manager.file_exists(src):
             content = contents_manager.get(src, format='base64')
             data = content['content'].replace('\n', '')  # remove the newline
             mime_type, encoding = mimetypes.guess_type(src)
             src = 'data:{mime_type};base64,{data}'.format(mime_type=mime_type, data=data)
-        return super(VoilaMarkdownRenderer, self).image(src, title, text)
+        return super().image(src, title, text)
 
 
 class VoilaExporter(HTMLExporter):
     """Custom HTMLExporter that inlines the images using VoilaMarkdownRenderer"""
 
     base_url = traitlets.Unicode(help="Base url for resources").tag(config=True)
-    markdown_renderer_class = traitlets.Type('mistune.Renderer').tag(config=True)
+    markdown_renderer_class = traitlets.Type(VoilaMarkdownRenderer).tag(config=True)
     # Can be a ContentsManager from notebook or jupyter_server, so Any will have to do for now
     contents_manager = traitlets.Any()
 
