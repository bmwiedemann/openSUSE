-------------------------------------------------------------------
Fri Apr 21 12:25:02 UTC 2023 - Dirk Müller <dmueller@suse.com>

- add sle15_python_module_pythons (jsc#PED-68)

-------------------------------------------------------------------
Thu Apr 13 22:41:13 UTC 2023 - Matej Cepl <mcepl@suse.com>

- Make calling of %{sle15modernpython} optional.

-------------------------------------------------------------------
Fri Jul 19 08:55:52 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Fix building with pytest4+

-------------------------------------------------------------------
Thu Mar 28 15:33:17 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Remove pytest-benchmark dependency to avoid buildcycle

-------------------------------------------------------------------
Wed Feb 13 09:58:09 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Clean up with spec-cleaner
- Make sure the tests are not conditioned
- Use %license macro

-------------------------------------------------------------------
Wed Oct 18 16:43:04 UTC 2017 - toddrme2178@gmail.com

- Implement single-spec version
- Update to 5.0.0
  * See changelog at https://github.com/ionelmc/python-fields/blob/v5.0.0/CHANGELOG.rst

-------------------------------------------------------------------
Thu Sep  3 14:29:19 UTC 2015 - toddrme2178@gmail.com

- Update to 2.4.0 (2015-06-13)
  * Similarly to ``fields.Fields``, added three new bases:
    * ``fields.BareFields`` (implements ``__init__``).
    * ``fields.ComparableMixin`` (implements ``__eq__``, ``__ne__``, ``__lt__``, ``__gt__``, ``__le__``, ``__ge__`` and ``__hash__``).
    * ``fields.PrintableMixin`` (implements ``__repr__``).
  * Improved reference section in the docs.
  * Added ``fields.ConvertibleFields`` and ``fields.ConvertibleMixin``. They have two convenience properties: ``as_dict`` and `as_tuple``.
- Update to 2.3.0 (2015-01-20)
  * Allowed overriding ``__slots__`` in ``SlotsFields`` subclasses.
- Update to 2.2.0 (2015-01-19)
  * Added ``make_init_func`` as an optional argument to ``class_sealer``. Rename the ``__base__`` option to just ``base``.
- Update to 2.1.1 (2015-01-19)
  * Removed bogus ``console_scripts`` entrypoint.
- Update to 2.1.0 (2015-01-09)
  * Added ``SlotsFields`` (same as ``Fields`` but automatically adds ``__slots__`` for memory efficiency on CPython).
  * Added support for default argument to Tuple.
- Update to 2.0.0 (2014-10-16)
  * Made the __init__ in the FieldsBase way faster (used for ``fields.Fields``).
  * Moved ``RegexValidate`` in ``fields.extras``.
- Update to 1.0.0 (2014-10-05)
  * Lots of internal changes, the metaclass is not created in a closure anymore. No more closures.
  * Added ``RegexValidate`` container creator (should be taken as an example on using the Factory metaclass).
  * Added support for using multiple containers as baseclasses.
  * Added a ``super()`` `sink` so that ``super().__init__(*args, **kwargs)`` always works. Everything inherits from a
    baseclass that has an ``__init__`` that can take any argument (unlike ``object.__init__``). This allows for flexible
    usage.
  * Added validation so that you can't use conflicting field layout when using multiple containers as the baseclass.
  * Changed the __init__ function in the class container so it works like a python function w.r.t. positional and keyword
    arguments. Example: ``class MyContainer(Fields.a.b.c[1].d[2])`` will function the same way as ``def func(a, b, c=1,
    d=2)`` would when arguments are passed in. You can now use ``MyContainer(1, 2, 3, 4)`` (everything positional) or
    ``MyContainer(1, 2, 3, d=4)`` (mixed).

-------------------------------------------------------------------
Wed Jul 30 06:42:12 UTC 2014 - toddrme2178@gmail.com

- Initial version

