--- a/lib/libomemo/src/libomemo.c
+++ b/lib/libomemo/src/libomemo.c
@@ -1356,9 +1356,9 @@ int omemo_message_get_encrypted_key(omem
   const char * key_b64 = (void *) 0;
   size_t key_len = 0;
 
-
-  ret_val = expect_next_node(msg_p->header_node_p, mxmlGetFirstChild, KEY_NODE_NAME, &key_node_p);
-  if (ret_val) {
+  key_node_p = mxmlFindElement(msg_p->header_node_p, msg_p->header_node_p, KEY_NODE_NAME, NULL, NULL, MXML_DESCEND);
+  if (!key_node_p) {
+    // if there is not at least one key, skip the rest of the function
     ret_val = 0;
     *key_pp = (void *) 0;
     goto cleanup;
@@ -1430,8 +1430,9 @@ int omemo_message_export_decrypted(omemo
   }
   payload_p = g_base64_decode(payload_b64, &payload_len);
 
-  ret_val = expect_next_node(msg_p->header_node_p, mxmlGetLastChild, IV_NODE_NAME, &iv_node_p);
-  if (ret_val) {
+  iv_node_p = mxmlFindElement(msg_p->header_node_p, msg_p->header_node_p, IV_NODE_NAME, NULL, NULL, MXML_DESCEND);
+  if (!iv_node_p) {
+    ret_val = OMEMO_ERR_MALFORMED_XML;
     goto cleanup;
   }
 
