-------------------------------------------------------------------
Sat Jul  3 00:39:43 UTC 2021 - Atri Bhattacharya <badshah400@gmail.com>

- Update to version 1.4.0:
  * Long list of changes since last packaged version, see
    https://awkward-array.readthedocs.io/en/latest/_auto/changelog.html.
- Adapt symlinks and file-list for changes to shared object
  locations (directly in python_sitearch instead of
  python_sitearch/awkward/).
- Skip a test on 32-bit that uses float128, since float32 is not
  available.

-------------------------------------------------------------------
Sun Feb 21 14:25:27 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to 1.1.2
  * The fix that motivates this patch release is @henryiii’s repair
    of the SDist distribution: PR #720. The addition of dlpack
    wasn’t included in the source distribution, so pip install
    awkward without an available wheel was failing due to not
    having all the headers it needed to compile.
  * Also fixed jagged slices: issue #723, PRs #725 and #729, as
    well as a segfault in ak.flatten: issue #724, PR #726.
- Release 1.1.1
  * New patch release motivated by a bug discovered in Uproot’s
    tests: PR #719. (From now on, Uproot will test Awkward release
    candidates.)
  * Also, #717 adds an optional behavior argument to every function
    that takes a highlevel=True/False.
  * Also from now on, only critical bug-fixes (like this one) will
    be patch releases and other updates will all go into release
    candidates for the next non-patch release (e.g. 1.2.0,
    [scheduled for 2021-04-01](https://github.com/scikit-hep/
    awkward-1.0#roadmap)).
- Release 1.1.0
  * Updates to Arrow 3.0. PR #709.
  * Can now read and write Parquet datasets (conventions for sets
    of multiple files): PR #706, fixes #368 (old!).
  * Also, Python 2 can use ellipsis because we have pybind11 2.6
    now: PR #707, fixes #705.
  * remove deprecated features
  * Fixed #689, the dimension of arrays returned by empty slices:
    PR #691.
  * @ianna fixed tuple-building in ArrayBuilder to guard against
    specifying a nonexistent slot and segfaulting: #697.
  * Added [ak.materialized](https://awkward-array.readthedocs.io/
    en/latest/_auto/ak.materialized.html) to force-materialize
    arrays (opposite of [ak.virtual](https://awkward-array.
    readthedocs.io/en/latest/_auto/ak.virtual.html)) because
    debugging very lazy deferments is hard.
  * Can now use np.newaxis to give one array the same number of
    dimensions as another for slicing (which closes #492).
  * Fixed ak.min/ak.max with axis != None for partitioned data.
  * Fixed a bug that affected boolean-masking of partitioned data.
  * Reducing over-materialization of virtual arrays: PRs #643,
    #644, #657, added Form-aware lazy Parquet: #688
  * Fixed ak.from_buffers to allow unreachable elements: PR #673
  * Developed the AwkwardForth VM: PRs #683, #648, #653, #661,
    #664, #672
  * Removed right-broadcasting from all operations except those
    that require it for NumPy compliance: #656, #680
  * @ianna improved sorting: PRs #639, #687, added complex numbers
    support: PRs #652
  * @trickarcher generalized CuPy interop to JAX: PRs #645, #662
  * @reikdas cleaned up developer scripts: PRs #665, #666, #667
  * @henryiii added more code quality tests: PRs #675, #681, #682,
    #677, #676, #685, #683
- Somehow the missing python-devel BuildRequires was okay until
  recently.

-------------------------------------------------------------------
Sun Feb 14 14:10:00 UTC 2021 - Dirk Müller <dmueller@suse.com>

- skip python 3.6 (numbas requires scipy) 

-------------------------------------------------------------------
Mon Jan 25 23:10:46 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to 1.0.2
  * @nsmith- fixed virtual arrays in ak.to_arrow (PR #642).
  * Fixed #628, allowing np.int64(N) to be used in a slice like
    integer N (PR #636).
  * Added the ability to select fields inside of nested 
    records with syntax like array[[“pt”, “eta”, “phi”], 
    “nominal”] (#619).
  * Fixed Apache Arrow → Awkward Array (ak.from_arrow) for 
    sliced Arrow arrays: it has an offset attribute we had 
    been ignoring (#625). Thanks to @trickarcher for the 
    extensive tests!
  * Ensured that an ak.Array’s behavior always gets passed to 
    output of any operation (#626), even if the input is a 
    dict (#627, affected ak.zip, ak.cartesian, and 
    ak.argcartesian).
  * Fixed #629, ak.with_field dropping parameters (#631), 
    and #634, ak.fill_none not accepting a Record as a fill 
    value (#635).
  * Added a roadmap and upvote/thumbs up instructions to the 
    README.
  * @jpivarski revised the ak.concatenate implementation 
    (#610), fixed a bug related to axis handling (#612), and 
    made ak.concatenate friendlier to lazy arrays (#613; 
    “friendlier” = “materializes arrays in fewer cases”).
  * @chrisburr added setuptools as a requirement because it 
    is used for pkg_resources.
  * @ianna added validity-checking for strings, bytestrings, 
    and categorical (#571), including some revisions of 
    sorting and a partial implementation of checking for 
    uniqueness and identifying unique elements from arrays 
    that can later be used to implement np.unique.
  * Updated Awkward <–> Arrow conversion to preserve nullability 
    in type (PRs #602, #606). Preemptively avoiding warnings 
    from NumPy 1.20 (#599) and fixed 32-bit Linux cases in the 
    tests (#604).
  * @henryiii fixed hardcoded threads in MacOS compilation 
    target (for deploying to conda-forge).
- Drop awkward-tests-on-32bit.patch merged upstream
- Fix python_expand for primary flavor check

-------------------------------------------------------------------
Wed Dec 16 00:13:41 UTC 2020 - Atri Bhattacharya <badshah400@gmail.com>

- Add awkward-tests-on-32bit.patch: Fix tests on 32 bit systems;
  patch taken from upstream PR [gh#scikit-hep/awkward-1.0#600].

-------------------------------------------------------------------
Tue Dec 15 00:31:07 UTC 2020 - Atri Bhattacharya <badshah400@gmail.com>

- Disable tests making use of 64 bit data types on i586
  (gh#scikit-hep#awkward-1.0#600).

-------------------------------------------------------------------
Mon Dec 14 23:23:12 UTC 2020 - Atri Bhattacharya <badshah400@gmail.com>

- Move header files to standard header dir and package them plus
  symlink to shared lib as part of awkward-devel package (for use
  by C/C++ coders).

-------------------------------------------------------------------
Sun Dec 13 19:06:50 UTC 2020 - Atri Bhattacharya <badshah400@gmail.com>

- Add awkward-correct-includedir.patch: Make awkward.config return
  the correct includedir (/usr/include/awkward) where we move the
  header files to (default installation is to
  python_sitearch/awkward/include, which is non-std).
- Add awkward-cmake-build-with-RelWithDebInfo.patch: Set
  CMAKE_BUILD_TYPE to RelWithDebInfo by default instead of
  Release.

-------------------------------------------------------------------
Sun Dec 13 14:33:55 UTC 2020 - Atri Bhattacharya <badshah400@gmail.com>

- Initial package.
