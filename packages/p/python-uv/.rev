<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>582e21710dba8703dce06b5fc1e3ece0</srcmd5>
    <version>0.4.9</version>
    <time>1726501343</time>
    <user>anag+factory</user>
    <comment>I want to add this to openSUSE:Factory. This will replace `uv` based on naming scheme and as well that it's a hybrid python+rust package.

</comment>
    <requestid>1201235</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>428a6539928c316a005557f01e848cff</srcmd5>
    <version>0.4.15</version>
    <time>1727097781</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1202477</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>84c6548573b7e3e8d50ef243cb2c4dde</srcmd5>
    <version>0.4.22</version>
    <time>1729259722</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1208669</requestid>
  </revision>
  <revision rev="4" vrev="2">
    <srcmd5>7182e7aa108a67e38d44ce193f71479a</srcmd5>
    <version>0.4.22</version>
    <time>1729710664</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1217239</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>bdb7ba960551e2fadcbf1dcbc232db3e</srcmd5>
    <version>0.4.27</version>
    <time>1730024781</time>
    <user>anag+factory</user>
    <comment>- Update to version 0.4.27:
  * Support for PEP 735
  * Add support for --dry-run mode in uv lock
  * Don't allow non-string email in authors
  * Enforce lockfile schema versions
  * Always attach URL to network errors
  * Fix dangling non-platform dependencies in uv tree
  * Prefer lto over debug free-threaded managed Python builds
  * Add tool.uv.sources to the &quot;Settings&quot; reference
  * Add reference to uv build and uv publish in the landing pages
  * Avoid duplicate [tool.uv] header in TOML examples
  * Document .netrc environment variable and path
  * Fix .netrc typo in authentication docs
  * Fix heading level of &quot;Script support&quot; on docs landing page
  * Move the installation configuration docs to a separate page
  * Update docs for --publish-url to avoid duplication.
- Changes since 0.4.23 to 0.4.26:
  * Allow static dependency metadata entries for direct URL requirements
  * Use reinstall report formatting for uv python install --reinstall
  * Add support for system-level uv.toml configuration
  * Apply requires-python narrowing with upper bounds
  * Avoid rewriting [[tool.uv.index]] entries when credentials are provided
  * Fix uv add comment handling for empty arrays
  * Replace dashes with underscores in index credential variables
  * Respect --allow-insecure-host in uv publish
  * Allow arbitrary --package includes in uv tree
  * Remove existing Python install after successful download in uv python install
  * Add docs example for URLs with [tool.uv.dependency-metadata]
  * Add help page for build failures
  * Fix cache-keys typo in tags = true
  * Add documentation examples for manual branch, rev, and tag Git dependencies
  * Improve error message for cache info serialization
  * Suggest --from command when executable is available for uvx
  * Support --with-editable in uv tool install
  * Add support for uv pip show --files
  * Don't prefetch unreachable packages
  * Remove tool.uv.sources table if it is empty
  * Modify cache versioning to support backwards compatibility
  * Add support for UV_FROZEN and UV_LOCKED
  * Allow dashes and underscores in custom index names
  * Avoid panic when Git dependencies are included in fork markers
  * Check existing source by normalized name before uv add and uv remove
  * Fix bug where username from authentication cache could be ignored
  * Fix to respect comments positioning in pyproject.toml on change
  * Redact index sources in uv.lock
  * Use correct indentation when project table contains open bracket comment
  * Only remove a source from [tool.uv.sources] if it is no long being referenced
  * Modify uv pip list and uv tree to print to stdout regardless of --quiet flag
  * Improve help message for missing self update invocations
  * Log .netrc parsing errors
  * Remove trailing newlines in error messages
  * Use a dedicated message for incompatible Python versions in wheel ABI tags
  * Remove commands available in the top-level from the suggested subcommand error
  * Fix Python executable name in Windows free-threaded Python distributions
  * Redact index credentials from lockfile sources
  * Respect UV_INDEX_ rather than UV_HTTP_BASIC_ as documented
  * Improve sources deserialization errors
  * Correct pytorch-to-torch reference in docs
  * Add index URLs when provided via uv add --index or --default-index
  * Add support for named and explicit indexes
  * Add templates for popular build backends
  * Allow multiple pinned indexes in tool.uv.sources
  * Allow users to incorporate Git tags into dynamic cache keys
  * Pin named indexes in uv add
  * Respect named --index and --default-index values in tool.uv.sources
  * Update to latest PubGrub version
  * Enable environment variable authentication for named indexes
  * Avoid showing lower-bound warning outside of explicit lock and sync
  * Improve logging during lock errors
  * Improve styling of requires-python warnings
  * Show hint in resolution failure on Forbidden (403) or Unauthorized (401)
  * Update to latest cargo-dist version (includes new installer features)
  * Warn when patch version in requires-python is implicitly 0
  * Add more context on client errors during range requests
  * Avoid writing duplicate index URLs with --emit-index-url
  * Fix error leading to out-of-bound panic in uv-pep508
  * Fix managed distributions of free-threaded Python on Windows
  * Fix selection of free-threaded interpreters during default Python discovery
  * Ignore sources in build requirements for non-source trees
  * Invalid cache when adding lower bound to lockfile
  * Respect index priority when storing credentials
  * Respect relative paths in uv build sources
  * Narrow what the pip3. logic drops from entry points.
  * Add some additional notes to --index-url docs
  * Add upgrade note to README
  * Remove note that &quot;only a single source may be defined for each dependency&quot;
</comment>
    <requestid>1218527</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>92f2bf6e2d9a101d9e429134d71e7485</srcmd5>
    <version>0.5.0</version>
    <time>1731435709</time>
    <user>anag+factory</user>
    <comment>Forwarded request #1222844 from adrianSuSE

- update to version 0.5.0:
    Please see CHANGELOG.md for details</comment>
    <requestid>1223462</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>15a7fafbf762edc198ebfff01341b614</srcmd5>
    <version>0.5.2</version>
    <time>1731956464</time>
    <user>anag+factory</user>
    <comment>- Update to version 0.5.2:
  * Hide `--no-system` from `uv pip tree` CLI
  * Allow configuration of Python and PyPy install mirrors in `uv.toml`
  * Allow passing Python download mirrors to `uv python install`
  * Add support for specifying conflicting extras and dependency groups
  * Consistent colon usage in build failure errors
  * Show full derivation chain when encountering build failures
  * Show link we failed on parsing index pages
  * Remove duplicate log when searching for interpreters
  * Update uv development status classifier to &quot;Stable&quot; on PyPI
  * Use rich diagnostic formatting for early build failures
  * Use rich diagnostic formatting for install failures
  * Avoid retraversing filesystem when testing exact glob matches
  * Allow `--no-build` to validate lock
  * Allow default indexes to be marked as explicit
  * Avoid creating `.venv` in `uv add --frozen` and `uv add --no-sync`
  * Avoid duplicating first-entry comments in `uv add`
  * Defer reporting of build failures in resolver
  * Fix references to `--resolution-strategy` in error message output
  * Ignore virtual environments in parent directories when choosing Python version for new projects
  * Forward SIGTERM to child processes in `uv run`
  * Prefer Python executable names that match the request over default names
  * Prefer compatible to incompatible distributions when packages exist on multiple indexes
  * Publish: Ignore non-matching files
  * Revert `uv.lock` changes when `uv add` fails
  * Show file extensions on available commands when not `.exe`
  * Sort by name, then specifiers in `uv add`
  * Split after specifiers in `--with` requirements
  * Support multiple extras in universal pip compile output
  * Build backend: Add tests for source tree -&gt; source dist -&gt; wheel conversions
  * Build backend: Switch to custom `glob-walkdir` implementation
  * Build backend: Add minimal wheel settings
  * Add wget instructions for systems without curl
  * Fix `.env` file example in docs
  * Fix reference to `--resolution` in docs
  * Fix typo in GitLab integration docs
  * Update format of environment variable reference
  * Use Python syntax for `value_type` consistently
  * Use `[[index]]` API in configuration example
  * Mention how to use extras
  * Add some words about specifying conflicting extras/groups
  * Allow installation of manylinux wheels on `riscv64`
  * Build source distributions at top-level of cache
  * Allow non-registry dependencies in `uv pip list --outdated`
  * Compute superset of existing and required hashes when healing cache
  * Enable uv to replace and delete itself on Windows
  * Remove source distribution filename from cache
  * Respect `--index-url` in `uv pip list`
  * Respect comma-separated extras in `--with`
  * Add uninstall note for previous versions
  * Remove some missed references to `~/.cargo/bin`
  * Split README's install code block into 3
</comment>
    <requestid>1224685</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>93844542cfe859e77b2aa5c6e5197c15</srcmd5>
    <version>0.5.6</version>
    <time>1733414962</time>
    <user>anag+factory</user>
    <comment>- Update to version 0.5.6:
  * Add --dry-run to uv pip uninstall
  * Allow --constraints and --overrides in uv tool install
  * Display removed Python executables on uninstall
  * Warn when keyring has no password for uv publish
  * Add suggested action when .python-version pin is incompatible with the project
  * Improve error messages for mismatches in tool.uv.sources
  * Use constraints in trace rather than irrelevant requires-python
  * Add uv python install --default
  * Fix Python executable installation when multiple patch versions are requested
  * Build backend: Revamp include / exclude
  * Build backend: Add fast path
  * Build backend: Add functions to collect file list
  * Build backend: Default excludes
  * Build backend: Refactoring before list
  * Build backend: Warn when visiting over 10k files
  * Make check-url available in configuration files
  * Avoid adding non-extra package with extra dependencies
  * Avoid cloning String in marker evaluation
  * uv-pep508: Add more methods for simplifying extra-related expressions
  * Allow file: URLs to include package names
  * Avoid using IDs across PubGrub states
  * Consistently enforce requested-vs.-built metadata when retrieving wheels
  * Do not show empty version specifier in uv tool list
  * Include Git member information when getting metadata from cache
  * Include base installation directory in uv run PATH
  * Insert backslash when appending to system drive
  * Normalize paths when lowering Git dependencies
  * Omit origin when comparing requirements
  * Override manylinux_compatible with --python-platform
  * Pass extra when evaluating lockfile markers
  * Propagate markers for recursive extras in resolver
  * Respect path dependencies within Git dependencies
  * Support recursive extras with marker in pip compile -r pyproject.toml
  * Don't emit unpinned warning for proxy packages
  * Fix --refresh-package flag mentioned as --refresh-dependency
  * Handle Windows AV/EDR file locks during script installations
  * Re-enable conflicting extra/group tests and fix regression from #9540
  * Add missing word to docs for run.md
  * Add policies reference section and license document
  * Fix typo in entry point docs
  * Fix up version in prior uninstall instructions
  * Mention uv pip behavior in build system note
  * Update build failures document
  * Correct wording for multiple sources section
  * Add aliases for build backend requests
  * Avoid displaying empty paths
  * Allow constraints in uv tool upgrade
  * Remove conflict between --no-sync and --frozen in uv run
  * Respect dependency sources in overrides and constraints
  * Show an interpreter-focused message for --target and --prefix
  * Add --no-extra flag and setting
  * Add uv export --prune
  * Add dedicated error message for musl install attempts
  * Add various grammar changes to conflict error messages
  * Annotate default groups in conflict error messages
  * Report marker diagnostics during parsing, rather than evaluation
  * Use consistent formatting for build system errors
  * Use rich diagnostics for build failures
  * Improve build backend excludes
  * Include PEP 639 license-files metadata during uv publish
  * Initialize rayon lazily
  * Migrate to PubGrub's arena for package names
  * Allow dependency groups to include the containing package
  * Allow syncing to empty virtual environment directories
  * Allow system Python discovery with --target and --prefix
  * Don't warn when --output-file is empty
  * Fix Python interpreter discovery on non-glibc hosts
  * Fix tool.uv.dependency-metadata.[].version schema
  * Only respect preferences across the same indexes
  * Re-compile when --compile is passed to an install operation
  * Remove --upgrade, --no-upgrade, and --upgrade-package from uv tool upgrade
  * Remove dev dependencies in --all-groups --no-dev
  * Surface extras and group conflicts in uv export
  * Treat deprecated aliases as equivalent in marker algebra
  * Treat less compatible tags as lower priority in resolver
  * Avoid referencing scikit-build (instead of scikit-build-core)
  * Expand entry points documentation
  * Fix example pyproject.toml in project concept documentation
  * Fix header level of &quot;Conflicting dependencies&quot; page
  * Touch-up the extension module guide
  * Update the dependencies documentation
  * Reference --no-progress option in related environment variable
  * Accept either singular or plural values for CLI requirements
  * Add --all-groups to uv sync, uv run, uv export, and uv tree
  * Add a progress bar to uv tree --outdated and uv pip list --outdated
  * Add retries for Python downloads
  * Use exponential backoff for publish retries
  * Add manylinux target triples up to glibc 2.40
  * Parallelize network requests in uv tree --outdated
  * Use zlib-rs on all platforms
  * Avoid validating extra and group sources in build-system.requires
  * Catch retries with wrapped reqwest errors
  * Sort hashes in uv export output
  * Strip --index and --default-index from command header
  * Add breadcrumbs to the documentation
  * Add minimum version to PyTorch guide
  * Add support for anchor redirects with client-side js
  * Improve content on project configuration
  * Improve the project creation documentation
  * Move the integration guides into the &quot;Guides&quot; section as a collapsed group
  * Reorganize the project concept documentation
  * Use the full screen height for the main content to stabilize the nav
  * Add dedicated warning for empty stdin
  * Allow conflicting extras in explicit index assignments
  * Support overrides and constraints in PEP 723 scripts
  * Update uv tool install --force to imply --reinstall-package &lt;name&gt;
  * Turn --verify-hashes on by default
  * Enable zlib-rs on all platforms
  * Allow apostrophe in virtual environment name
  * Automatically retry body errors when processing response
  * Detect nested workspace inside the current workspace and members with identical names
  * Only install the specified project with --frozen --package in legacy non-[project] workspaces
  * Respect [[tool.uv.index]] in PEP 723 scripts
  * Show derivation markers for resolutions with project name
  * Sort distributions when computing hash
  * Include trampolines in source distributions on Windows
  * Add --index &lt;name&gt;=&lt;url&gt; syntax to index documentation
  * Add documentation for using uv with PyTorch
  * Add a dedicated error for include = &quot;dev&quot; with tool.uv.dev-dependencies
  * Avoid showing disjoint marker error with true
  * Improve error message when git is not found
  * Include extras and dependency groups in derivation chains
  * Include version constraints in derivation chains
</comment>
    <requestid>1228409</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>ebca610ad03e942f1735d119ed5400a3</srcmd5>
    <version>0.5.9</version>
    <time>1734459815</time>
    <user>anag+factory</user>
    <comment>- Update to version 0.5.9:
  * Fork version selection based on requires-python requirements
  * Patch sysconfig data at install time
  * Remove -isysroot when patching sysconfig
  * Introduce a --fork-strategy preference mode
  * Add support for UV_OFFLINE
  * Avoid panic!() when current directory does not exist
  * Avoid reusing interpreter metadata when running under Rosetta
  * Avoid trailing slash when deserializing from lockfile
  * Fix bug in terms when collapsing unavailable versions in resolver errors
  * Fix suggestion to use uv help python on invalid install requests
  * Skip root when assessing prefix viability
  * Avoid spurious 'Upgraded tool environment' in uv tool upgrade
  * Upgrade minimum Rust version to 1.83
  * Document the --fork-strategy setting
  * Build backend: Allow underscores in entrypoints
  * Omit empty resolution markers in lockfile
  * Add --install-dir to to uv python install and uninstall commands
  * Add --show-urls and --only-downloads to uv python list
  * Add uv python list --all-arches
  * Add uv run --gui-script flag for running Python scripts with pythonw.exe
  * Allow --gui-script on Unix
  * Allow download of Python distribution variants optimized for newer x86_64 microarchitectures
  * Allow execution of pyw files on Unix
  * Allow users to specify URLs in project.dependencies and tool.uv.sources
  * Encode mutually-incompatible pairs of markers
  * Improve the error message when a Python install request is not valid
  * Preserve directory-level standalone build symlinks
  * Add support for uv publish --index &lt;name&gt;
  * Reframe --locked and --frozen as --check operations for uv lock
  * Rename Python install scratch directory from .cache -&gt; .temp
  * Enable uv tool uninstall uv on Windows
  * Improve self-dependency hint to make shadowing clear
  * Refactor unavailable metadata to shrink the resolver
  * Show 'depends on itself' for proxy packages
  * Show a dedicated error for missing subdirectories
  * Show a dedicated hint for missing git+ prefixes
  * Eagerly error when parsing pyproject.toml requirements
  * Use copy-on-write when normalizing paths
  * Avoid enforcing non-conflicts in uv export
  * Don't drop comments between items in TOML tables
  * Don't fail with --no-build when static metadata is available
  * Don't filter non-patch registry version
  * Don't read metadata from stale .egg-info files
  * Enforce correctness of self-dependencies
  * Fix projects's typo in resolver error messages
  * Ignore . prefixed directories during managed Python installation discovery
  * Improve handling of invalid virtual environments during interpreter discovery
  * Normalize relative paths when --project is specified
  * Respect self-constraints on recursive extras
  * Respect user settings for tracing coloring
  * Retry on tar extraction errors
  * Add conflict markers to the lock file
  * De-duplicate resolution markers
  * Avoid 403 error hint for PyTorch URLs
  * Avoid treating non-existent --find-links as relative URLs
  * Omit Windows Store python3.13.exe et al
  * Replace executables with broken symlinks during uv python install
  * Fix build failure links
  * Ignore dynamic version in source dist
  * Improve build frontend error handling
  * Un-hide uv build --no-build-logs option
  * Flag version mismatch between sdist and wheel during uv build
  * Improve message when updater receipt is for a different uv executable
  * Add environment variable to disable writing installer metadata files
  * Add managed downloads for the latest CPython releases: 3.9.21, 3.10.16, 3.11.11, 3.12.8, and 3.13.1
  * Build backend: Add hint on import with preview disabled
  * Build backend: Add direct builds to the resolver and installer
  * Build backend: Add integration test for scripts
  * Build backend: Add template to uv init
  * Build backend: Add --list option
  * Create missing parent directories for output file of uv export / uv pip compile
  * Fix missing display of non-freethreaded Python 3.13 in python list
  * Implement Ord and PartialOrd without origin for Requirement
  * Include more sources to avoid lowest bound warning
  * Respect build tag priority in uv.lock
  * Add build-essentials note to build failures doc
  * Add entry-point for distroless image in GitLab documentation
  * Add documentation for uv python pin without a REQUEST argument
  * Add a link to uv python pin reference docs
</comment>
    <requestid>1231592</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>ae617c6028ed43cdbbd24f0eaf912421</srcmd5>
    <version>0.5.10</version>
    <time>1735212260</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1233312</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>d710d81226fa9526c02035fa0f3b3ee6</srcmd5>
    <version>0.5.30</version>
    <time>1739902358</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1246622</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>d87bdeb9d8164440c6b6f68ebb0a671c</srcmd5>
    <version>0.6.9</version>
    <time>1743020470</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1256155</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>24ab8b5db7f14b6c1abcf070187d2d82</srcmd5>
    <version>0.6.11</version>
    <time>1743622737</time>
    <user>anag+factory</user>
    <comment>- Update to 0.6.11 
 * Enhancements
   * Add dependents (&quot;via ...&quot; comments) in uv export command 
   * Bump least-recent non-EOL macOS version to 13.0 
   * Support --find-links-style &quot;flat&quot; indexes in [[tool.uv.index]] 
   * Distinguish between -q and -qq 
   * Add uv sync --check flag 
   * Add support for Python version requests in uv python list 
   * Support .env files in uv tool run 
   * Support python find --script 
 * Configuration
   * Support UV_PROJECT environment to set project directory. 
 * Performance
   * Use a boxed slice for various requirement types 
   * Use a boxed slice for extras and groups 
   * Use small string for index name type 
 * Bug fixes
   * Add a newline after metadata when initializing scripts with other metadata blocks 
   * Avoid writing empty requires-python to script blocks 
   * Respect build constraints in uv sync 
   * Respect transitive dependencies in uv tree --only-group 
   * Allow virtual packages with --no-build 
   * Ignore --find-links entries for pinned indexes 
   * Omit wheels from lockfile based on --exclude-newer 
   * Retain end-of-line comment position when adding dependency 
   * Omit fragment when querying for wheels in Simple HTML API 
   * Error on missing argument in requirements.txt 
   * Support modules with different casing in build backend 
   * Add authentication policy support for pip commands 
 * Preview features</comment>
    <requestid>1266628</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>185ae55f1603bd28abf5b85e4931c038</srcmd5>
    <version>0.6.12</version>
    <time>1744046104</time>
    <user>anag_factory</user>
    <comment>- Update to 0.6.12
 * Enhancements
   * Report the queried executable path in uv python list 
   * Improve archive unpack error messages 
 * Bug fixes
   * Respect authenticate when using explicit = true 
   * Normalize extra and group names in uv add and uv remove 
   * Enforce CRC-32 checks when unpacking archives 
   * Fix parsing of python-platform in settings files 
 * Documentation
   * Add note about uv build to package = false 
   * Add index fallback note to authenticate = always documentation 
   * Fix invalid 'kind' reference in flat index docs</comment>
    <requestid>1267437</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>d719953eb256b8f93babf21e92ce3072</srcmd5>
    <version>0.6.13</version>
    <time>1744228201</time>
    <user>anag_factory</user>
    <comment>- Update to 0.6.13
 * Enhancements
   * Add --show-version to uv python find 
   * Remove --no-config warning from uv pip compile and uv pip sync 
   * Skip repeated directories in PATH when searching for Python interpreters 
   * Unset SCRIPT_PATH in relocatable activation script 
   * Add UV_PYTHON_DOWNLOADS_JSON_URL to set custom managed python sources 
   * Reject pyproject.toml files in uv pip compile -o 
   * Respect the --offline flag for Git operations 
 * Bug fixes
   * Warn instead of error if CRC appears to be missing 
   * Avoid infinite loop in uv export with conflicts 
 * Rust API
   * Update MSRV to 1.84</comment>
    <requestid>1267949</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>1370b739f3cd9fae2ac6d6486b53dd5d</srcmd5>
    <version>0.6.16</version>
    <time>1745426410</time>
    <user>anag_factory</user>
    <comment>- Update to 0.6.16
   * This release includes preliminary support for the pylock.toml file format,
     as standardized in PEP 751.
   * As of this release, pylock.toml is supported in the following commands:
     * To export a uv.lock to the pylock.toml format, run: uv export -o pylock.toml
     * To generate a pylock.toml file from a set of requirements, run: uv pip compile -o pylock.toml -r requirements.in
     * To install from a pylock.toml file, run: uv pip sync pylock.toml or uv pip install -r pylock.toml
 * Enhancements
   * Add PEP 751 support to uv pip compile 
   * Add uv export support for PEP 751 
   * Accept requirements.txt (verbatim) as a format on the CLI 
   * Add UV_NO_EDITABLE environment variable to set --no-editable on all invocations 
   * Add pylock.toml to uv pip install and uv pip sync 
   * Add a brief sleep before sending SIGINT to child processes 
   * Add upload time to uv.lock 
   * Allow updating Git sources by name 
   * Cache which git in uv init 
   * Enable --dry-run with --locked / --frozen for uv sync 
   * Infer output type in uv export 
   * Make uv init resilient against broken git 
   * Respect build constraints for uv run --with dependencies 
   * Split UV_INDEX on all whitespace 
   * Support build constraints in uv tool and PEP723 scripts. 
   * Use suffix from uvx binary when searching for uv binary 
   * Update version formatting to use cyan color 
   * Add debug logs for version file search 
   * Fix SourceNotAllowed error message during Python discovery 
   * Obfuscate password in credentials debug messages 
   * Obfuscate possible tokens in URL logs 
   * Validate that PEP 751 entries don't include multiple sources</comment>
    <requestid>1272193</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>c4ec6933573fdc7c04c2a44dfba8423a</srcmd5>
    <version>0.7.0</version>
    <time>1746032736</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.7.0
 + Breaking Changes:
  * Update uv version to display and update project versions
  * Avoid fallback to subsequent indexes on authentication failure
  * Require the command in uvx &lt;name&gt; to be available in the Python environment
  * Use index URL instead of package URL for keyring credential lookups
  * Remove --version from subcommands
  * Omit Python 3.7 downloads from managed versions
  * Reject non-PEP 751 TOML files in install, compile, and export commands
  * Ignore arbitrary Python requests in version files
  * Error on unknown dependency object specifiers
  * Make --frozen and --no-sources conflicting options
  * Treat empty UV_PYTHON_INSTALL_DIR and UV_TOOL_DIR as unset
 * Enhancements
  * Disallow mixing requirements across PyTorch indexes 
  * Add optional managed Python archive download cache 
  * Add poetry-core as a uv init build backend option 
  * Show tag hints when failing to find a compatible wheel in pylock.toml 
  * Report Python versions in pyvenv.cfg version mismatch 
 * Bug fixes
  * Avoid erroring on omitted wheel-only packages in pylock.toml 
  * Fix display name for uvx --version 
  * Restore handling of authentication when encountering redirects 
  * Respect build options (--no-binary et al) in pylock.toml 
  * Use upload-time rather than upload_time in uv.lock 
 * Documentation
  * Changed fish completions append &gt;&gt; to overwrite &gt; 
  * Add pylock.toml mentions where relevant 
  * Add ROCm example to the PyTorch guide 
  * Upgrade PyTorch guide to CUDA 12.8 and PyTorch 2.7</comment>
    <requestid>1273631</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>11f76362fda0c0c03d00a6d3190a01d2</srcmd5>
    <version>0.7.2</version>
    <time>1746298732</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.7.2
 * Enhancements
  * Improve trace log for retryable errors 
  * Use &quot;error&quot; instead of &quot;warning&quot; for self-update message 
  * Error when uv version is used with project-specific flags but no project is found 
  * Add support for BLAKE2b-256 
 * Bug fixes
  * Fix incorrect virtual environment invalidation for pre-release Python versions 
  * Fix patching of clang in managed Python sysconfig 
  * Respect --project in uv version 
  * Revert fix handling of authentication when encountering redirects</comment>
    <requestid>1274065</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>4f79d16db54cc52b19f7e11b1cf108f5</srcmd5>
    <version>0.7.3</version>
    <time>1746809507</time>
    <user>anag_factory</user>
    <comment>- update to 0.7.3
 * Enhancements
   * Add --dry-run support to uv self update 
   * Add --show-with to uv tool list to list packages included by --with 
   * De-duplicate fetched index URLs 
   * Support more zip compression formats: bzip2, lzma, xz, zstd 
   * Add support for downloading GraalPy 
   * Improve error message when a virtual environment Python symlink is broken 
   * Use fs_err for paths in symlinking errors 
   * Minify and embed managed Python JSON at compile time 
 * Preview features
   * Build backend: Make preview default and add configuration docs 
   * Build backend: Allow escaping in globs 
   * Build backend: Make builds reproducible across operating systems 
 * Configuration
   * Add python-downloads-json-url option for uv.toml to configure custom Python installations via JSON URL 
 * Bug fixes
   * Check nested IO errors for retries 
   * Accept musllinux_1_0 as a valid platform tag 
   * Fix discovery of pre-release managed Python versions in range requests 
   * Respect locked script preferences in uv run --with 
   * Retry streaming downloads on broken pipe errors 
   * Treat already-installed base environment packages as preferences in uv run --with 
   * Avoid enumerating sources in errors for path Python requests 
   * Avoid re-creating virtual environment with --no-sync 
 * Documentation
   * Remove outdated description of index strategy 
   * Update &quot;Viewing the version&quot; docs</comment>
    <requestid>1276194</requestid>
  </revision>
  <revision rev="20" vrev="2">
    <srcmd5>3245ead03a7dd14ba18cfd411d4d7b26</srcmd5>
    <version>0.7.3</version>
    <time>1747061466</time>
    <user>anag_factory</user>
    <comment></comment>
    <requestid>1276718</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>e51c8df18429e931abe6a46992c1c802</srcmd5>
    <version>0.7.5</version>
    <time>1747726746</time>
    <user>anag_factory</user>
    <comment>- update to 0.7.5:
 * Enhancements
   * Add more context to external errors 
   * Align indentation of long arguments 
   * Preserve order of dependencies which are sorted naively 
   * Align progress bars by largest name length 
   * Reinstall local packages in uv add 
   * Rename --raw-sources to --raw 
   * Show 'Downgraded' when self update is used to install an older version 
   * Suggest uv self update if required uv version is newer 
   * Add 3.14 beta images to uv Docker images 
   * Add comma after &quot;i.e.&quot; in Conda environment error 
   * Be more precise in unpinned packages warning 
   * Fix detection of sorted dependencies when include-group is used 
   * Fix display of HTTP responses in trace logs for retry of errors 
   * Log skip reasons during Python installation key interpreter match checks 
   * Redact credentials when displaying URLs 
 * Bug fixes
   * Support case-sensitive module discovery in the build backend 
   * Bump Simple cache bucket to v16 
   * Don't error when the script is too short for the buffer 
   * Add missing word in &quot;script not supported&quot; error 
   * Avoid erroring on pylock.toml dependency entries 
   * Avoid panics for cannot-be-a-base URLs 
   * Ensure cached realm credentials are applied if no password is found for index URL 
   * Fix .tgz parsing to respect true extension 
   * Fix double self-dependency 
   * Reject pylock.toml in uv add -r 
   * Retain dot-separated wheel tags during cache prune 
   * Retain trailing comments after PEP 723 metadata block</comment>
    <requestid>1278420</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>bcdf56e04a2146ab1d17f56139dc8bce</srcmd5>
    <version>0.7.6</version>
    <time>1747753457</time>
    <user>anag_factory</user>
    <comment>- update to 0.7.6:
 * Standalone Python
   * Add Python 3.14 on musl
   * Add free-threaded Python on musl
   * Add Python 3.14.0a7
   * Statically link libpython into the interpreter on Linux for a significant performance boost
   * See the python-build-standalone release notes for more details.
 * Enhancements
   * Improve compatibility of VIRTUAL_ENV_PROMPT value 
   * Bump MSRV to 1.85 and Edition 2024 
 * Bug fixes
   * Respect default extras in uv remove 
 * Documentation
   * Fix PowerShell code blocks</comment>
    <requestid>1278558</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>e60028ef065a75e153f6a40f076f1ce2</srcmd5>
    <version>0.7.8</version>
    <time>1748277263</time>
    <user>anag_factory</user>
    <comment>- update to 0.7.8
 * Standalone Python
   + revert almost all changesd from 0.7.6 - 0.7.7 due misscompilation
 * Documentation
   * Remove misleading line in pin documentation

- update to 0.7.7:
 * Python
   * Work around third-party packages that (incorrectly) assume the interpreter is dynamically linking libpython
   * Allow the experimental JIT to be enabled at runtime on Python 3.13 and 3.14 on macOS on aarch64 aka Apple Silicon
   * See the python-build-standalone release notes for more details.
 * Bug fixes
   * Make uv version lock and sync
   * Fix references to ldd in diagnostics to correctly refer to ld.so 
 * Documentation
   * Clarify adding SSH Git dependencies</comment>
    <requestid>1280090</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>49c18c1d758bce61affd04deef1a35bc</srcmd5>
    <version>0.7.9</version>
    <time>1748894419</time>
    <user>anag_factory</user>
    <comment>- update to 0.7.9:
   * The changes reverted in 0.7.8 have been restored.
   * See the python-build-standalone release notes for more details.
 * Enhancements
   * Improve obfuscation of credentials in URLs 
   * Allow running non-default Python implementations via uvx 
   * Add uvw as alias for uv without console window on Windows 
   * Allow discovery of x86-64 managed Python builds on macOS 
   * Differentiate between implicit vs explicit architecture requests 
   * Implement ordering for Python architectures to prefer native installations 
   * Only show the first match per platform (and architecture) by default in uv python list 
   * Write the path of the parent environment to an extends-environment key in the pyvenv.cfg file of an ephemeral environment 
   * Improve the error message when libc cannot be found, e.g., when using the distroless containers 
 * Performance
   * Avoid rendering info log level 
   * Improve performance of uv-python crate's manylinux submodule 
   * Optimize Version display 
   * Reduce number of reference-checks for uv cache clean 
 * Bug fixes
   * Avoid reinstalling dependency group members with --all-packages 
   * Don't fail direct URL hash checking with dependency metadata 
   * Exit early on self update if global --offline is set 
   * Fix cases where the uv lock is incorrectly marked as out of date 
   * Include pre-release versions in uv python install --reinstall 
   * Set LC_ALL=C for git when checking git worktree 
   * Avoid rejecting Windows paths for remote Python download JSON targets 
 * Preview
   * Add uv add --bounds to configure version constraints 
 * Documentation
   * Add documentation about Python versions to Tools concept page</comment>
    <requestid>1281713</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>9f2a16802affdeb19ada53fcb44912fb</srcmd5>
    <version>0.7.10</version>
    <time>1749061808</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.7.10:
 * Enhancements
   * Add --show-extras to uv tool list 
   * Add dynamically generated sysconfig replacement mappings 
   * Add data locations to install wheel logs 
 * Bug fixes
   * Avoid redaction of placeholder git username when using SSH authentication 
   * Propagate credentials to files on devpi indexes ending in /+simple 
   * Restore retention of credentials for direct URLs in uv export</comment>
    <requestid>1282811</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>252defaf5d4be347c2137765a99979ed</srcmd5>
    <version>0.7.12</version>
    <time>1749539236</time>
    <user>anag_factory</user>
    <comment>- update to 0.7.12: 
 * Enhancements
   * Add uv python pin --rm to remove .python-version pins 
   * Don't hint at versions removed by excluded-newer 
   * Add hint to use tool.uv.environments on resolution error 
   * Add hint to use tool.uv.required-environments on resolution error 
   * Improve python pin error messages 
 * Bug fixes
   * Lock environments during uv sync, uv add and uv remove to prevent race conditions 
   * Add --no-editable to uv export for pylock.toml 
 * Documentation
   * List .gitignore in project init files 
   * Move the pip interface documentation into the concepts section 
   * Remove the configuration section in favor of concepts / reference 
   * Update Git and GitHub Actions docs to mention gh auth login 
 * Preview
   * Fix directory glob traversal fallback preventing exclusion of all files 

- update to 0.7.11:
 * Enhancements
   * Add Pyodide support 
   * Better error message for version specifier with missing operator 
 * Bug fixes
   * Downgrade reqwest and hyper-util to resolve connection reset errors over IPv6 
   * Prefer uv's binary's version when checking if it's up to date 
 * Documentation
   * Use &quot;terminal driver&quot; instead of &quot;shell&quot; in SIGINT docs</comment>
    <requestid>1284045</requestid>
  </revision>
  <revision rev="27" vrev="1">
    <srcmd5>9b40de0518c16452ed0796f8e89b7a29</srcmd5>
    <version>0.7.13</version>
    <time>1749833516</time>
    <user>anag_factory</user>
    <comment>- update to 0.7.13:
 * Enhancements
   * Download versions in uv python pin if not found 
   * Use TTY detection to determine if SIGINT forwarding is enabled 
   * Avoid fetching an exact, cached Git commit, even if it isn't locked 
   * Add zstd and deflate to Accept-Encoding 
   * Build binaries for riscv64 
 * Bug fixes
   * Check if relative URL is valid directory before treating as index 
   * Ignore Python discovery errors during uv python pin 
   * Do not allow uv add --group ... --script 
 * Preview changes
   * Build backend: Support namespace packages 
 * Documentation
   * Add 3.14 to the supported platform reference 
   * Add an llms.txt to uv 
   * Add supported macOS version to the platform reference 
   * Update platform support reference to include Python implementation list 
   * Update pytorch.md 
   * Update the CLI help and reference to include references to the Python bin directory</comment>
    <requestid>1285525</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>c3dc8ae3068a8721e8b89d6d21efbf81</srcmd5>
    <version>0.7.14</version>
    <time>1750790932</time>
    <user>anag_factory</user>
    <comment>- update to 0.7.14:
 * Enhancements
   * Add XPU to --torch-backend 
   * Add ROCm backends to --torch-backend 
   * Remove preview label from --torch-backend 
   * Add [tool.uv.dependency-groups].mygroup.requires-python 
   * Add auto-detection for AMD GPUs 
   * Show retries for HTTP status code errors 
   * Support transparent Python patch version upgrades 
   * Warn on empty index directory 
   * Publish to DockerHub 
 * Performance
   * Make cold resolves about 10% faster 
 * Bug fixes
   * Don't use walrus operator in interpreter query script 
   * Fix handling of changes to requires-python 
   * Fix implied platform_machine marker for win_amd64 platform tag 
   * Only update existing symlink directories on preview uninstall 
   * Serialize Python requests for tools as canonicalized strings 
   * Support netrc and same-origin credential propagation on index redirects 
   * Support reading dependency-groups from pyproject.tomls with no [project] 
   * Handle an existing shebang in uv init --script 
   * Prevent concurrent updates of the environment in uv run 
   * Filter managed Python distributions by platform before querying when included in request 
 * Documentation
   * Replace cuda124 with cuda128 
   * Document the way member sources shadow workspace sources 
   * Sync documented PyTorch integration index for CUDA and ROCm versions from PyTorch website</comment>
    <requestid>1288102</requestid>
  </revision>
  <revision rev="29" vrev="1">
    <srcmd5>b9e0c0e5d45a5298ea66224945f2c5c7</srcmd5>
    <version>0.7.15</version>
    <time>1750930745</time>
    <user>anag_factory</user>
    <comment>- update to 0.7.15:
* Enhancements
  * Consistently use Ordering::Relaxed for standalone atomic use cases 
  * Warn on ambiguous relative paths for --index 
  * Skip GitHub fast path when rate-limited 
  * Preserve newlines in schema.json descriptions 
* Bug fixes
  * Add check for using minor version link when creating a venv on Windows 
  * Strip query parameters when parsing source URL 
* Documentation
  * Add a link to PyPI FAQ to clarify what per-project token is 
* Preview features
  * Allow symlinks in the build backend</comment>
    <requestid>1288524</requestid>
  </revision>
  <revision rev="30" vrev="1">
    <srcmd5>ddca55be33b9b6170ae510f93b9db2e6</srcmd5>
    <version>0.7.17</version>
    <time>1751362437</time>
    <user>anag_factory</user>
    <comment>- update to 0.7.17
 * Bug fixes
  * Apply build constraints when resolving --with dependencies 
  * Drop trailing slashes when converting index URL from URL 
  * Ignore UV_PYTHON_CACHE_DIR when empty 
  * Fix error message ordering for pyvenv.cfg version conflict 

- update to 0.7.16 
 * Enhancements
   * Include path or URL when failing to convert in lockfile 
   * Warn when ~= is used as a Python version specifier without a patch version 
 * Preview features
   * Ensure preview default Python installs are upgradeable 
 * Performance
   * Share workspace cache between lock and sync operations 
 * Bug fixes
   * Allow local indexes to reference remote files 
   * Avoid rendering desugared prefix matches in error messages 
   * Avoid using path URL for workspace Git dependencies in requirements.txt 
   * Normalize index URLs to remove trailing slash 
   * Respect URL-encoded credentials in redirect location 
   * Lock the source tree when running setuptools, to protect concurrent builds 
 * Documentation
   * Note that GCP Artifact Registry download URLs must have /simple component</comment>
    <requestid>1289111</requestid>
  </revision>
  <revision rev="31" vrev="1">
    <srcmd5>c9fc198f4f32a625777fb45f58604ca5</srcmd5>
    <version>0.7.18</version>
    <time>1751470254</time>
    <user>anag_factory</user>
    <comment>- update to 0.7.18
 * Enhancements
   * Keep track of retries in ManagedPythonDownload::fetch_with_retry 
   * Reuse build (virtual) environments across resolution and installation 
   * Improve trace message for cached Python interpreter query 
   * Use parsed URLs for conflicting URL error message 
 * Preview features
   * Ignore invalid build backend settings when not building 
 * Bug fixes
   * Fix equals-star and tilde-equals with python_version and python_full_version 
   * Include the canonical path in the interpreter query cache key 
   * Only drop build directories on program exit 
   * Error instead of panic on conflict between global and subcommand flags 
   * Consistently normalize trailing slashes on URLs with no path segments 
 * Documentation
   * Add instructions for publishing to JFrog's Artifactory 
   * Edits to the build backend documentation</comment>
    <requestid>1289789</requestid>
  </revision>
  <revision rev="32" vrev="2">
    <srcmd5>2bae49e632f6ba92cabfa25c6a32d25a</srcmd5>
    <version>0.7.18</version>
    <time>1751537446</time>
    <user>anag_factory</user>
    <comment>Forwarded request #1289932 from dgarcia

- Reduce memory usage during build, removing lto=fat from Cargo.toml.
    bsc#1245526</comment>
    <requestid>1290024</requestid>
  </revision>
  <revision rev="33" vrev="1">
    <srcmd5>7fbae9f0bfeea917c58f08cf4d14679c</srcmd5>
    <version>0.7.19</version>
    <time>1751814904</time>
    <user>anag_factory</user>
    <comment>- update to 0.7.19
 * The uv build backend is now stable, and considered ready for production use.
 * Enhancements
   * Ignore Python patch version for --universal pip compile
   * Update the tilde version specifier warning to include more context
   * Clarify behavior and hint on tool install when no executables are available
 * Bug fixes
   * Make project and interpreter lock acquisition non-fatal
   * Includes sys.prefix in cached environment keys to avoid --with collisions across projects 
 * Documentation
   * Add a migration guide from pip to uv projects</comment>
    <requestid>1290741</requestid>
  </revision>
  <revision rev="34" vrev="1">
    <srcmd5>1289b39cbc933ce10700859d2ad8ae96</srcmd5>
    <version>0.7.20</version>
    <time>1752483145</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.7.20
 * Enhancements
   * Add --workspace flag to uv add 
   * Add auto-detection for Intel GPUs 
   * Drop trailing arguments when writing shebangs 
   * Add debug message when skipping Python downloads 
   * Add support for declaring multiple modules in namespace packages 
 * Bug fixes
   * Revert normalization of trailing slashes on index URLs 
   * Fix forced resolution with all extras in uv version 
   * Fix handling of pre-releases in preferences 
   * Remove transparent variants in uv-extract to enable retries 
 * Rust API
   * Add method to get packages involved in a NoSolutionError 
   * Make ErrorTree for NoSolutionError public 
 * Documentation
   * Finish incomplete sentence in pip migration guide 
   * Remove cache-dependency-glob examples for setup-uv 
   * Remove uv pip sync suggestion with pyproject.toml 
   * Update documentation for GitHub to use setup-uv@v6</comment>
    <requestid>1292524</requestid>
  </revision>
  <revision rev="35" vrev="1">
    <srcmd5>47552c86dccffca45a611492a9fd5402</srcmd5>
    <version>0.7.21</version>
    <time>1752590752</time>
    <user>anag_factory</user>
    <comment>- update to 0.7.21
 * Enhancements
   * Add --python-platform to uv sync 
   * Support pre-releases in uv version --bump 
   * Add -w shorthand for --with 
   * Add an exception handler on Windows to display information on crash 
   * Add hint when Python downloads are disabled 
   * Add UV_HTTP_RETRIES to customize retry counts 
   * Follow leaf symlinks matched by globs in cache-key 
   * Support parent path components (..) in globs in cache-key 
   * Improve cache-key performance 
 * Preview features
   * Add uv sync --output-format json 
 * Bug fixes
   * Do not re-resolve with a new Python version in uv tool if it is incompatible with --python 
 * Documentation
   * Document how to nest dependency groups with include-group 
   * Fix repeated word in Pyodide doc 
   * Update CONTRIBUTING.md with instructions to format Markdown files via Docker 
   * Fix version number for setup-python</comment>
    <requestid>1293311</requestid>
  </revision>
  <revision rev="36" vrev="1">
    <srcmd5>3312eaf85716bbc39c10758768d49e40</srcmd5>
    <version>0.8.0</version>
    <time>1753120769</time>
    <user>anag_factory</user>
    <comment>- update to 0.8.0
 * Breaking changes
   * Install Python executables into a directory on the PATH
   * Prompt before removing an existing directory in uv venv
   * Validate that discovered interpreters meet the Python preferences
   * Install dependencies without build systems when they are path sources
   * Install dependencies without build systems when they are workspace members
   * Bump --python-platform linux to manylinux_2_28
   * Remove uv version fallback
   * Require --global for removal of the global Python pin
   * Support conflicting editable settings across groups
   * Make uv_build the default build backend in uv init
   * Set default UV_TOOL_BIN_DIR on Docker images
   * Update --check to return an exit code of 1
   * Use an ephemeral environment for uv run --with invocations
   * Restructure the uv venv command output and exit codes
   * Default to --workspace when adding subdirectories
   * Add missing validations for disallowed uv.toml fields
 * Configuration
   * Add support for toggling Python bin and registry install options via env vars 
   * Add UV_COMPILE_BYTECODE_TIMEOUT environment variable 
   * Allow users to override index cache-control headers 
   * Add UV_LIBC to override libc selection in multi-libc environment 
 * Bug fixes
   * Fix --all-arches when paired with --only-downloads 
   * Skip Windows Python interpreters that return a broken MSIX package code 
   * Warn on invalid uv.toml when provided via direct path 
   * Improve async signal safety in Windows exception handler 
 * Documentation
   * Mention the revision in the lockfile versioning doc</comment>
    <requestid>1294440</requestid>
  </revision>
  <revision rev="37" vrev="1">
    <srcmd5>943877467ac7e0a0978c7f703793144b</srcmd5>
    <version>0.8.2</version>
    <time>1753375581</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.8.2
 * Configuration
   * Add UV_INIT_BUILD_BACKEND 
 * Rust API
   * Expose tls_built_in_root_certs for client 
 * Enhancements
   * Add derivation chains for dependency errors 
   * Add support for HF_TOKEN 
   * Allow --config-settings-package to apply configuration settings at the package level 
   * Create (e.g.) python3.13t executables in uv venv 
   * Disallow writing symlinks outside the source distribution target directory 
   * Elide traceback when python -m uv in interrupted with Ctrl-C on Windows 
   * Match --bounds formatting for uv_build bounds in uv init 
   * Support extras and dependency_groups markers in PEP 508 grammar 
   * Support extras and dependency_groups markers on uv pip install and uv pip sync 
   * Add hint to use uv self version when uv version cannot find a project 
   * Improve error reporting when removing Python versions from the Windows registry 
   * Make warnings about masked [tool.uv] fields more precise 
 * Preview features
   * Emit JSON output in uv sync with --quiet 
 * Bug fixes
   * Avoid reading files in the environment bin that are not entrypoints 
   * Avoid removing empty directories when constructing virtual environments 
   * Preserve index URL priority order when writing to pyproject.toml 
   * Allow removal of virtual environments with missing interpreters 
   * Apply Cache-Control overrides to response, not request headers 
   * Copy entry points into ephemeral environments to ensure layers are respected 
   * Workaround Jupyter Lab application directory discovery in ephemeral environments 
   * Enforce requires-python in pylock.toml 
   * Fix kebab casing of README variants in build backend</comment>
    <requestid>1295390</requestid>
  </revision>
  <revision rev="38" vrev="1">
    <srcmd5>dc6fa47afb16f032e344806bc0bf4f58</srcmd5>
    <version>0.8.4</version>
    <time>1754088069</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.8.4
 * Enhancements
  * Improve styling of warning cause chains 
  * Extend wheel filtering to Android tags 
  * Perform wheel lockfile filtering based on platform and OS intersection 
  * Clarify messaging when a new resolution needs to be performed 
 * Preview features
  * Add support for extending package's build dependencies with extra-build-dependencies 
  * Split preview mode into separate feature flags 
 * Configuration
  * Add support for package specific exclude-newer dates via exclude-newer-package 
 * Bug fixes
  * Avoid invalidating lockfile when path or workspace dependencies define explicit indexes 
  * Copy entrypoints that have a shebang that differs in python vs python3 
  * Fix incorrect file permissions in wheel packages 
  * Update validation for environments and required-environments in uv.toml 
 * Documentation
  * Show uv_build in projects documentation 
  * Add UV_ prefix to installer environment variables 
  * Un-hide uv from --build-backend options 
  * Update documentation for preview flags 

- update to 0.8.3:
 * Enhancements
  * Allow non-standard entrypoint names in uv_build 
  * Publish riscv64 wheels to PyPI 
 * Bug fixes
  * Avoid writing redacted credentials to tool receipt 
  * Respect --with versions over base environment versions 
  * Respect credentials from all defined indexes</comment>
    <requestid>1296842</requestid>
  </revision>
  <revision rev="39" vrev="1">
    <srcmd5>665bf956238e1d91fc69ddba2fdd390a</srcmd5>
    <version>0.8.5</version>
    <time>1754496926</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.8.5
 * Enhancements
  * Enable uv run with a GitHub Gist 
  * Improve HTTP response caching log messages 
  * Show wheel tag hints in install plan 
  * Support installing additional executables in uv tool install 
 * Preview features
  * Enable extra build dependencies to 'match runtime' versions 
  * Remove duplicate extra-build-dependencies warnings for uv pip 
  * Use &quot;option&quot; instead of &quot;setting&quot; in pylock warning 
  * Respect extra build requires when reading from wheel cache 
  * Preserve lowered extra build dependencies 
 * Bug fixes
  * Add Python versions to markers implied from wheels 
  * Ensure consistent indentation when adding dependencies 
  * Fix handling of python-preference = system when managed interpreters are on the PATH 
  * Fix symlink preservation in virtual environment creation 
  * Gracefully handle entrypoint permission errors 
  * Include wheel hashes from local Simple indexes 
  * Prefer system Python installations over managed ones when --system is used 
  * Remove retry wrapper when matching on error kind 
  * Revert h2 upgrade 
 * Documentation
  * Improve visibility of copy and line separator in dark mode</comment>
    <requestid>1297963</requestid>
  </revision>
  <revision rev="40" vrev="1">
    <srcmd5>28d30200de2f414d53fc7b1ffb84aadb</srcmd5>
    <version>0.8.8</version>
    <time>1754762394</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.8.8
 - long changelog at https://github.com/astral-sh/uv/blob/main/CHANGELOG.mode
 - fixed CVE-2025-54368 - boo#1247829</comment>
    <requestid>1298596</requestid>
  </revision>
  <revision rev="41" vrev="1">
    <srcmd5>a8dcc3fb5e514f3f2f188001588c6ba8</srcmd5>
    <version>0.8.9</version>
    <time>1755011116</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.8.9
 * Enhancements
  * Add --reinstall flag to uv python upgrade 
 * Bug fixes
  * Include build settings in cache key for registry source distribution lookups 
  * Avoid creating bin links on uv python upgrade if they don't already exist 
  * Respect system proxies on macOS and Windows 
 * Documentation
  * Add the 3.14 classifier</comment>
    <requestid>1298991</requestid>
  </revision>
  <revision rev="42" vrev="1">
    <srcmd5>b1a41bde1508492ed5424ed8a4d20351</srcmd5>
    <version>0.8.11</version>
    <time>1755287502</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.8.11
 * Enhancements
  * Add extra-build-dependencies hint for any missing module on build failure 
  * Make 'v' prefix cyan in overlap warnings 
 * Bug fixes
  * Fix missing uv version in extended Docker image tags 
  * Persist cache info when re-installing cached wheels 
 * Rust API
  *Allow passing custom reqwest clients to RegistryClient

- update to 0.8.10 
 * Enhancements
  * Allow Python requests with missing segments, e.g., just aarch64 
 * Preview
  * Move warnings for conflicting modules into preview</comment>
    <requestid>1299855</requestid>
  </revision>
  <revision rev="43" vrev="1">
    <srcmd5>c43db74083b4cccb72f5e9a5c9bd69d6</srcmd5>
    <version>0.8.12</version>
    <time>1755693635</time>
    <user>anag_factory</user>
    <comment>- update to 0.8.12
 * Enhancements
  * Add an aarch64-pc-windows-msvc target for python-platform 
  * Add fallback parent process detection to uv tool update-shell 
  * Install non-build-isolation packages in a second phase 
  * Add hint when virtual environments are included in source distributions 
  * Add Docker images derived from buildpack-deps:trixie, debian:trixie-slim, alpine:3.22 
 * Bug fixes
  * Reject already-installed wheels built with outdated settings 
  * Skip interpreters that are not found on query 
  * Handle dotted package names in script path resolution 
  * Reject match-runtime = true for dynamic packages 
 * Documentation
  * Document improvements to build-isolation setups 
  * Fix reference documentation recommendation to use uv cache clean instead of clear</comment>
    <requestid>1300468</requestid>
  </revision>
  <revision rev="44" vrev="1">
    <srcmd5>c3f80355e65a98242a203167ba557d7d</srcmd5>
    <version>0.8.13</version>
    <time>1756147028</time>
    <user>anag_factory</user>
    <comment>- update to 0.8.13
 * Enhancements
  * Add --no-install-* arguments to uv add 
  * Initialize Git prior to reading author in uv init 
  * Add CUDA 129 to available torch backends 
  * Update Pyodide to 0.28.2 
 * Preview features
  * Add an experimental uv format command 
  * Allow version specifiers in extra-build-dependencies if match-runtime is explicitly false 
 * Bug fixes
  * Add triton to torch-backend manifest 
  * Avoid panicking when resolver returns stale distributions 
  * Fix uv_build wheel hashes 
  * Treat --upgrade-package on the command-line as overriding upgrade = false in configuration</comment>
    <requestid>1300990</requestid>
  </revision>
  <revision rev="45" vrev="1">
    <srcmd5>7ac57fd22557f1289fd6aa9157115ff6</srcmd5>
    <version>0.8.14</version>
    <time>1756485377</time>
    <user>anag_factory</user>
    <comment>- update to 0.8.14
 * Enhancements
  * Add --python-platform to uv pip check 
  * Add an environment variable for UV_ISOLATED 
  * Add logging to the uv build backend 
  * Allow more trailing null bytes in zip files 
  * Allow pinning managed Python versions to specific build versions 
  * Cache PyTorch wheels by default 
  * Reject already-installed wheels that don't match the target platform 
  * Add --no-install-local option to uv sync, uv add and uv export 
  * Include cycle error message in uv pip CLI 
 * Preview features
  * Fix format of {version} on uv format failure 
  * Lock during installs in uv format to prevent races 
  * Respect --project in uv format 
  * Run uv format in the project root 
 * Configuration
  * Add file-to-CLI overrides for build isolation configuration 
  * Add file-to-CLI overrides for reinstall configuration 
 * Performance
  * Cache WHEEL and METADATA reads in installed distributions 
 * Bug fixes
  * Avoid erroring when creating venv in current working directory 
  * Avoid introducing unnecessary system dependency on CUDA 
  * Clear discovered site packages when creating virtual environment 
  * Read index credentials from the environment during uv publish checks 
  * Refuse to remove non-virtual environments in uv venv 
  * Stop setting CLICOLOR_FORCE=1 when calling build backends 
  * Support file or directory removal for Windows symlinks 
 * Documentation</comment>
    <requestid>1301842</requestid>
  </revision>
  <revision rev="46" vrev="2">
    <srcmd5>afa007ff5deff08647465b1c515b8352</srcmd5>
    <version>0.8.14</version>
    <time>1756836163</time>
    <user>anag_factory</user>
    <comment></comment>
    <requestid>1302463</requestid>
  </revision>
  <revision rev="47" vrev="1">
    <srcmd5>864db3eb9a1ba8d242ee2d8d9744fdcc</srcmd5>
    <version>0.8.15</version>
    <time>1757001592</time>
    <user>anag_factory</user>
    <comment>- update to 0.8.15
 * Enhancements
  * Add uv auth commands for credential management 
  * Add pyx support to uv auth commands 
  * Add uv tree --show-sizes to show package sizes 
  * Add --python-platform riscv64-unknown-linux 
  * Add --python-platform to uv run and uv tool 
  * Add uv publish --dry-run 
  * Add zstandard support for wheels 
  * Allow registries to pre-provide core metadata 
  * Retry streaming Python and binary download errors 
 * Bug fixes
  * Fix settings rendering for extra-build-dependencies 
  * Skip non-existent directories in bytecode compilation 
 * Error messages
  * Add error trace to invalid package format</comment>
    <requestid>1302718</requestid>
  </revision>
  <revision rev="48" vrev="1">
    <srcmd5>3f19f973b97ebb9d2ef3e694120ff62b</srcmd5>
    <version>0.8.16</version>
    <time>1757518238</time>
    <user>anag_factory</user>
    <comment>- update to 0.8.16
 * Enhancements
  * Allow --editable to override editable = false annotations 
  * Allow editable = false for workspace sources 
  * Show a dedicated error for virtual environments in source trees on build 
  * Support Android platform tags 
  * Support iOS platform tags 
  * Support scripts with inline metadata in --with-requirements and --requirements 
 * Preview features
  * Support --no-project in uv format 
  * Allow uv format in unmanaged projects 
 * Bug fixes
  * Avoid erroring when match-runtime target is optional 
  * Ban empty usernames and passwords in uv auth 
  * Error early for parent path in build backend 
  * Retry on IO errors during HTTP/2 streaming 
  * Support recursive requirements and constraints inclusion 
  * Use token store credentials for uv publish 
  * Fix virtual environment activation script compatibility with latest nushell 
  * Skip Python interpreters that cannot be queried with permission errors 
 * Documentation
  * Clarify that uv auth commands take a URL 
  * Improve the CLI help for options that accept requirements files 
  * Adds example for caching for managed Python downloads in Docker builds</comment>
    <requestid>1303630</requestid>
  </revision>
  <revision rev="49" vrev="1">
    <srcmd5>76e433f325d4beece902030b36f686af</srcmd5>
    <version>0.8.17</version>
    <time>1757601636</time>
    <user>anag_factory</user>
    <comment>- update to  0.8.17
 * Enhancements
  * Improve error message for HTTP validation in auth services 
  * Respect PYX_API_URL when suggesting uv auth login on 401 
  * Add pyx as a supported PyTorch index URL 
 * Bug fixes
  * Avoid initiating login flow for invalid API keys 
  * Do not search for a password for requests with a token attached already 
  * Filter pre-release Python versions in uv init --script</comment>
    <requestid>1304077</requestid>
  </revision>
  <revision rev="50" vrev="2">
    <srcmd5>bf6dd14c35a648bb12b202cd2e2ed27c</srcmd5>
    <version>0.8.17</version>
    <time>1757704223</time>
    <user>anag_factory</user>
    <comment>- Update python-uv requirement for completion packages

- Completion packages renamed as uv-bash-completion instead of having
  one per flavor. bsc#1249345
- Add uv-bash-completion, uv-fish-completion and uv-zsh-completion
  packages as recommendations in the base package.</comment>
    <requestid>1304273</requestid>
  </revision>
</revisionlist>
