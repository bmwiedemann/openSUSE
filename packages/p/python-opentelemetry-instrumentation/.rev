<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>602d0a9c5b91e37b19fbc4c7b6cf0c81</srcmd5>
    <version>0.48b0</version>
    <time>1726066540</time>
    <user>anag+factory</user>
    <comment>apparently needed for the OpenWebUI stack</comment>
    <requestid>1199966</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>a39dcc5aecf90378fbc83597889f8c2f</srcmd5>
    <version>0.50b0</version>
    <time>1736431803</time>
    <user>anag+factory</user>
    <comment>- Update to version 0.50b0
  * `opentelemetry-instrumentation-starlette` Add type hints to the instrumentation
  * `opentelemetry-distro` default to OTLP log exporter.
  * `opentelemetry-instrumentation-sqlalchemy` Update unit tests to run with SQLALchemy 2
  * Add `opentelemetry-instrumentation-openai-v2` to `opentelemetry-bootstrap`
  * `opentelemetry-instrumentation-sqlalchemy` Add sqlcomment to `db.statement` attribute
  * `opentelemetry-instrumentation-dbapi` Add sqlcomment to `db.statement` attribute
  * `opentelemetry-instrumentation-dbapi` instrument_connection accepts optional connect_module
  * `opentelemetry-instrumentation-mysqlclient` Add sqlcommenter support
  * `opentelemetry-instrumentation-pymysql` Add sqlcommenter support
  * `opentelemetry-instrumentation-click`: new instrumentation to trace click commands
  * `opentelemetry-instrumentation-starlette`: Retrieve `meter_provider` key instead of
    `_meter_provider` on `_instrument`
  * `opentelemetry-instrumentation-httpx`: instrument_client is a static method again
  * `opentelemetry-instrumentation-system_metrics`: fix callbacks reading wrong config
  * `opentelemetry-instrumentation-httpx`: Check if mount transport is none before wrap it
  * Replace all instrumentor unit test `assertEqualSpanInstrumentationInfo` calls with
    `assertEqualSpanInstrumentationScope` calls
  * `opentelemetry-instrumentation-sqlalchemy` Fixes engines from `sqlalchemy.engine_from_config`
    not being fully instrumented
  * `opentelemetry-instrumentation-sqlalchemy`: Fix a remaining memory leak in EngineTracer
  * `opentelemetry-instrumentation-sqlite3`: Update documentation on explicit cursor support of tracing
  * `opentelemetry-instrumentation-sqlalchemy` teach instruments version
  * Drop `opentelemetry-instrumentation-test` package from default instrumentation list
  * `opentelemetry-instrumentation-httpx`: remove private unused `_InstrumentedClient`
    and `_InstrumentedAsyncClient` classes
- from version 0.49b0
  * `opentelemetry-instrumentation-openai-v2` Instrumentation for OpenAI &gt;= 0.27.0
  * `opentelemetry-instrumentation-fastapi` Add autoinstrumentation mechanism tests.
  * `opentelemetry-instrumentation-aiokafka` Add instrumentor and auto instrumentation (forwarded request 1235904 from glaubitz)</comment>
    <requestid>1235920</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>6e1885cb8b395cfa6434dc58a745e323</srcmd5>
    <version>0.51b0</version>
    <time>1740586699</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.51b0:
  * Always setup logs sdk,
    OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED only
    controls python `logging` module handler setup
  * Add `attributes` field in `metrics.get_meter` wrapper
    function
  * Add Python 3.13 support
  * sdk: don't log or print warnings when the SDK has been
    disabled
  * Fix span context manager typing by using ParamSpec from
    typing_extensions
  * Fix serialization of None values in logs body to match
    1.31.0+ data model
  * [BREAKING] semantic-conventions: Remove `opentelemetry.semcon
    v.attributes.network_attributes.NETWORK_INTERFACE_NAME`
    introduced by mistake in the wrong module.
  * Add support for explicit bucket boundaries advisory for
    Histograms
  * semantic-conventions: Bump to 1.30.0</comment>
    <requestid>1248492</requestid>
  </revision>
</revisionlist>
