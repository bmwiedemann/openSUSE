diff -rup JPype1-1.5.0.orig/test/jpypetest/test_conversionInt.py JPype1-1.5.0.new/test/jpypetest/test_conversionInt.py
--- JPype1-1.5.0.orig/test/jpypetest/test_conversionInt.py	2023-12-26 06:51:56.000000000 -0500
+++ JPype1-1.5.0.new/test/jpypetest/test_conversionInt.py	2024-09-11 17:03:59.996582210 -0400
@@ -76,7 +76,7 @@ class ConversionIntTestCase(common.JPype
     def testIntFromNPFloat(self):
         import numpy as np
         with self.assertRaises(TypeError):
-            self.Test.callInt(np.float_(2))
+            self.Test.callInt(np.float64(2))
 
     @common.unittest.skipUnless(haveNumpy(), "numpy not available")
     def testIntFromNPFloat32(self):
diff -rup JPype1-1.5.0.orig/test/jpypetest/test_conversionLong.py JPype1-1.5.0.new/test/jpypetest/test_conversionLong.py
--- JPype1-1.5.0.orig/test/jpypetest/test_conversionLong.py	2023-12-26 06:51:56.000000000 -0500
+++ JPype1-1.5.0.new/test/jpypetest/test_conversionLong.py	2024-09-11 17:03:59.996582210 -0400
@@ -76,7 +76,7 @@ class ConversionLongTestCase(common.JPyp
     def testLongFromNPFloat(self):
         import numpy as np
         with self.assertRaises(TypeError):
-            self.Test.callLong(np.float_(2))
+            self.Test.callLong(np.float64(2))
 
     @common.unittest.skipUnless(haveNumpy(), "numpy not available")
     def testLongFromNPFloat32(self):
diff -rup JPype1-1.5.0.orig/test/jpypetest/test_conversionShort.py JPype1-1.5.0.new/test/jpypetest/test_conversionShort.py
--- JPype1-1.5.0.orig/test/jpypetest/test_conversionShort.py	2023-12-26 06:51:56.000000000 -0500
+++ JPype1-1.5.0.new/test/jpypetest/test_conversionShort.py	2024-09-11 17:03:59.996582210 -0400
@@ -76,7 +76,7 @@ class ConversionShortTestCase(common.JPy
     def testShortFromNPFloat(self):
         import numpy as np
         with self.assertRaises(TypeError):
-            self.Test.callShort(np.float_(2))
+            self.Test.callShort(np.float64(2))
 
     @common.unittest.skipUnless(haveNumpy(), "numpy not available")
     def testShortFromNPFloat32(self):
diff -rup JPype1-1.5.0.orig/test/jpypetest/test_jboolean.py JPype1-1.5.0.new/test/jpypetest/test_jboolean.py
--- JPype1-1.5.0.orig/test/jpypetest/test_jboolean.py	2023-12-26 06:51:56.000000000 -0500
+++ JPype1-1.5.0.new/test/jpypetest/test_jboolean.py	2024-09-11 17:03:59.996582210 -0400
@@ -103,7 +103,7 @@ class JBooleanTestCase(common.JPypeTestC
     def testBooleanFromNPFloat(self):
         import numpy as np
         with self.assertRaises(TypeError):
-            self.Test.callBoolean(np.float_(2))
+            self.Test.callBoolean(np.float64(2))
 
     @common.requireNumpy
     def testBooleanFromNPFloat32(self):
diff -rup JPype1-1.5.0.orig/test/jpypetest/test_jbyte.py JPype1-1.5.0.new/test/jpypetest/test_jbyte.py
--- JPype1-1.5.0.orig/test/jpypetest/test_jbyte.py	2023-12-26 06:51:56.000000000 -0500
+++ JPype1-1.5.0.new/test/jpypetest/test_jbyte.py	2024-09-11 17:03:59.996582210 -0400
@@ -111,7 +111,7 @@ class JByteTestCase(common.JPypeTestCase
     def testByteFromNPFloat(self):
         import numpy as np
         with self.assertRaises(TypeError):
-            self.fixture.callByte(np.float_(2))
+            self.fixture.callByte(np.float64(2))
 
     @common.requireNumpy
     def testByteFromNPFloat32(self):
diff -rup JPype1-1.5.0.orig/test/jpypetest/test_jdouble.py JPype1-1.5.0.new/test/jpypetest/test_jdouble.py
--- JPype1-1.5.0.orig/test/jpypetest/test_jdouble.py	2023-12-26 06:51:56.000000000 -0500
+++ JPype1-1.5.0.new/test/jpypetest/test_jdouble.py	2024-09-11 17:03:59.996582210 -0400
@@ -375,7 +375,7 @@ class JDoubleTestCase(common.JPypeTestCa
 
     @common.requireNumpy
     def testArrayInitFromNPFloat(self):
-        a = np.random.random(100).astype(np.float_)
+        a = np.random.random(100).astype(np.float64)
         jarr = JArray(JDouble)(a)
         self.assertElementsAlmostEqual(a, jarr)
 
diff -rup JPype1-1.5.0.orig/test/jpypetest/test_jfloat.py JPype1-1.5.0.new/test/jpypetest/test_jfloat.py
--- JPype1-1.5.0.orig/test/jpypetest/test_jfloat.py	2023-12-26 06:51:56.000000000 -0500
+++ JPype1-1.5.0.new/test/jpypetest/test_jfloat.py	2024-09-11 17:03:59.996582210 -0400
@@ -383,7 +383,7 @@ class JFloatTestCase(common.JPypeTestCas
 
     @common.requireNumpy
     def testArrayInitFromNPFloat(self):
-        a = np.random.random(100).astype(np.float_)
+        a = np.random.random(100).astype(np.float64)
         jarr = JArray(JFloat)(a)
         self.assertElementsAlmostEqual(a, jarr)
 
