<package name="python-construct" project="openSUSE:Factory">
  <title>construct</title>
  <description>Instead of writing imperative code to parse a piece of data, you declaratively define a data structure that describes your data. As this data structure is not code, you can use it in one direction to parse data into Pythonic objects, and in the other direction, convert (&quot;build&quot;) objects into binary data.

The library provides both simple, atomic constructs (such as integers of various sizes), as well as composite ones which allow you form hierarchical structures of increasing complexity. Construct features bit and byte granularity, easy debugging and testing, an easy-to-extend subclass system, and lots of primitive constructs to make your work easier:

    Fields: raw bytes or numerical types
    Structs and Sequences: combine simpler constructs into more complex ones
    Adapters: change how data is represented
    Arrays/Ranges: duplicate constructs
    Meta-constructs: use the context (history) to compute the size of data
    If/Switch: branch the computational path based on the context
    On-demand (lazy) parsing: read only what you require
    Pointers: jump from here to there in the data stream
</description>
  <devel project="devel:languages:python" package="python-construct"/>
</package>
