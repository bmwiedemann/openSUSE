<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>2043d935ba0406be5bc4a18d169e71a3</srcmd5>
    <version>3.3.0</version>
    <time>1571950891</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>734585</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>7abb63e6e3feab0ba03f789b10d353e8</srcmd5>
    <version>3.3.0</version>
    <time>1572021757</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>742747</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>1ae58b099a6c78d35e375b9061868f40</srcmd5>
    <version>4.2.0</version>
    <time>1583830286</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>782866</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>75f63babbd25014d58eb19e0de9e1dd3</srcmd5>
    <version>4.3.2</version>
    <time>1585842296</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>790855</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>56af5426abd6cebf34fa5fc6ce5c4aa7</srcmd5>
    <version>5.2.3</version>
    <time>1617723012</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>882786</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>786f82ef49a9664ba675c05758162325</srcmd5>
    <version>5.6.0</version>
    <time>1643228850</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>949274</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>a7cb9af10fd79076e256e4bb1671724e</srcmd5>
    <version>5.8.1</version>
    <time>1656422567</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>985464</requestid>
  </revision>
  <revision rev="8" vrev="2">
    <srcmd5>8a4bf56c2c82de2de82d823ccab05cd6</srcmd5>
    <version>5.8.1</version>
    <time>1662740860</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1001929</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>882ddb9dea9dcd418b88ccae2a1c3349</srcmd5>
    <version>6.2.3</version>
    <time>1676990185</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1066938</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>4692c8e98a1d750d6e64748889459027</srcmd5>
    <version>6.3.0</version>
    <time>1683111416</time>
    <user>dimstar_suse</user>
    <comment>- Update to 6.3.0:
  - PrefixOrSuffixOperator: This operator will skip strings that are
    suffix or prefix of each other.
  - include_obj_callback and include_obj_callback_strict are added
    by [HÃ¥vard Thom](https://github.com/havardthom).
  - Fixed a corner case where numpy's np.float32 nans are not
    ignored when using ignore_nan_equality by [Noam
    Gottlieb](https://github.com/noamgot)
  - orjson becomes optional again.
  - Fix for ignore_type_in_groups with numeric values so it does not
    report number changes when the number types are different.
- Move python-orjson from Recommends to Requires, it's a requirement
  right now in the latest release.
</comment>
    <requestid>1084088</requestid>
  </revision>
  <revision rev="11" vrev="2">
    <srcmd5>2aff6b0f4155e952e20be00d80d9f70d</srcmd5>
    <version>6.3.0</version>
    <time>1686576354</time>
    <user>dimstar_suse</user>
    <comment>- Add %{?sle15_python_module_pythons}</comment>
    <requestid>1092260</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>e2963c06d29c6227e6d1ee6c676ebabc</srcmd5>
    <version>6.7.1</version>
    <time>1705353453</time>
    <user>anag+factory</user>
    <comment>- update to 6.7.1:
  * Support for subtracting delta objects when
    iterable_compare_func is used.
  * Better handling of force adding a delta to an object.
  * Fix for `Can't compare dicts with both single and double
    quotes in keys`
  * Updated docs for Inconsistent Behavior with math_epsilon and
    ignore_order = True
  * Delta can be subtracted from other objects now.
  * verify_symmetry is deprecated. Use bidirectional instead.
  * always_include_values flag in Delta can be enabled to include
    values in the delta for every change.
  * Fix for Delta.__add__ breaks with esoteric dict keys.
  * You can load a delta from the list of flat dictionaries.
- update to 6.6.0:
  * [x] Numpy 2.0 support
  * [x] Adding Delta.to_flat_dicts
- update to 6.4.1:
  * Bugfix: Numpy should be optional
- update to 6.4.0:
  * Add Ignore List Order Option to DeepHash by
  * pyyaml to 6.0.1 to fix cython build problems by Robert Bo
    Davis
  * Precompiled regex simple diff by cohml
  * New flag: `zip_ordered_iterables` for forcing iterable items
    to be compared one by one.
- update to 6.3.1:
  * Bugfix deephash for paths by maggelus
  * Bugfix deephash compiled regex maggelus
  * Fix tests dependent on toml by martin-kokos</comment>
    <requestid>1138688</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>0b2ade956211e4480bac08e10435a521</srcmd5>
    <version>7.0.1</version>
    <time>1713724036</time>
    <user>anag+factory</user>
    <comment>- update to 7.0.1:
  * When verbose=2, return `new_path` when the `path` and
    `new_path` are different (for example when ignore_order=True
    and the index of items have changed).
  * Dropping support for Python 3.7
  * Introducing serialize to flat rows for delta objects.
  * fixes the issue with hashing `datetime.date` objects
    where it treated them as numbers instead of dates (fixes
    #445).
  * upgrading orjson to the latest version
  * Fix for bug when diffing two lists with ignore_order and
    providing compare_func
  * Supporting Python 3.12 in the build process by Leo Sin
  * Include type info and change the &quot;unknown&quot; value for flat
    rows to something that is friendly for Postgres enums</comment>
    <requestid>1169369</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>51c53ec3abff66320f94bfddcce3f5df</srcmd5>
    <version>8.0.1</version>
    <time>1730208945</time>
    <user>anag+factory</user>
    <comment>- update to 8.0.1:
  * With the introduction of `threshold_to_diff_deeper`, the
    values returned are different than in previous versions of
    DeepDiff. You can still get the older values by setting
    `threshold_to_diff_deeper=0`. However to signify that enough
    has changed in this release that the users need to update the
    parameters passed to DeepDiff, we will be doing a major
    version update.
  * [x] `use_enum_value=True` makes it so when diffing enum, we
    use the enum's value. It makes it so comparing an enum to a
    string or any other value is not reported as a type change.
  * [x] `threshold_to_diff_deeper=float` is a number between 0
    and 1. When comparing dictionaries that have a small
    intersection of keys, we will report the dictionary as a
    `new_value` instead of reporting individual keys changed. If
    you set it to zero, you get the same results as DeepDiff
    7.0.1 and earlier, which means this feature is disabled. The
    new default is 0.33 which means if less that one third of
    keys between dictionaries intersect, report it as a new
    object.
  * [x] Deprecated `ordered-set` and switched to `orderly-set`.
    The `ordered-set` package was not being maintained anymore
    and starting Python 3.6, there were better options for sets
    that ordered. I forked one of the new implementations,
    modified it, and published it as `orderly-set`.
  * [x] Added `use_log_scale:bool` and
    `log_scale_similarity_threshold:float`. They can be used to
    ignore small changes in numbers by comparing their
    differences in logarithmic space. This is different than
    ignoring the difference based on significant digits.</comment>
    <requestid>1218894</requestid>
  </revision>
  <revision rev="15" vrev="2">
    <srcmd5>9e375c4dde5ea0b6a5b1b0d6a3a8eaaf</srcmd5>
    <version>8.0.1</version>
    <time>1732051403</time>
    <user>anag+factory</user>
    <comment>- Skip test failing on Python 3.13
</comment>
    <requestid>1225064</requestid>
  </revision>
</revisionlist>
