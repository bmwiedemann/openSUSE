-------------------------------------------------------------------
Mon Feb 17 21:15:35 UTC 2020 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.10.1
  * Poco 1.10.0 doesn't build with cmake & POCO_UNBUNDLED
  * poco 1.10/ NetSSL / openssl < 1.1 : default server usage
    changed (compare to 1.9.4)
  * Wrong cancelation of the fix: incorrect type of store name
    parameter in
  * allow pre-allocation of the buffer in Poco::LogStreamBuf.
  * Modernise TLS configuration
  * Add getSpecifiedPort() method in Poco::URI.
  * Test failures on s390x architecture with 1.10.0
  * Poco::UTF16Encoding and Poco::UTF32Encoding byte order
    conversion bug
  * Poco::SHA2Engine computes incorrect hash on big-endian systems
  * Close Service Handle after DeleteService Function call
  * MySQL: resetting the session when putting it back into a
    SessionPool is now optional (and disabled by default) due to a
    bug in MySQL messing up the character encoding when doing so.
  * Poco::AutoPtr and Poco::SharedPtr now support comparison with
    nullptr.
- Update to version 1.10.0
  * POCO's fixed-size integer types are now based on <cstdint>
    types.
  * Many methods exposing raw pointers have been changed to use
    smart pointers (usually Poco::SharedPtr or Poco::AutoPtr)
    instead. This may break some existing code. Specifically, the
    Logging framework in the Foundation library and the
    Configuration framework in the Util library have been changed.
  * New JWT library for dealing with JSON Web Tokens.
  * The NetSSL_OpenSSL library supports TLS 1.3 with OpenSSL 1.1.1
    or later.
  * NetSSL_OpenSSL now has a Poco::Net::FTPSClientSession and
    Poco::Net::FTPSStreamOpener class for connecting to FTP servers
    over TLS.
  * Fixed a potential crash in Poco::Net::NetworkInterface on Linux
    due to an invalid cast when obtaining the MAC address of an
    interface.
  *  X509Certificate does not render UTF-8 characters in subjectName
  *  NetworkInterface::map can fail to reveal some interfaces if an
     earlier one can not be handled
  *  Poco::Data::ODBC Binding of SQL Decimal Type
  *  Allow to filter long tests using a command line argument
  *  Poco::Net::MediaType::parse() does not split parameters
  *  Added tryWait() into Process and ProcessHandle. Handle
     kill()-ed UNIX process exit codes.
  *  unescape Backslash char in UTF8 unescape method
  *  Add support for SameSite attribute in HTTPCookie
  *  setEscapeUnicode() functions in JSON Array and Object classes
     ignore their boolean parameter
  *  Allow Poco::Net::Context::usePrivateKey to accept ECKey and/or
     general EVPPKey
  *  X509Certificate validFrom expiresOn Date parsing
  *  Poco::Mysql does not build with MySQL 8.0+
  *  Uploads larger than 2GB fail
  *  UUIDGenerator should allow random seed
  *  Support for XDG Base Directory Specification
  *  Add an option to force the use of PollingDirectoryWatcherStrategy
  *  fix Dynamic::Var parse string issue
  *  Restore pre-1.8.0 behaviour of Poco::Net::ServerSocket::bind.
  *  Implement DataURIStream for extracting data from data URIs.
  *  File fail on overwrite
  *  X509Certificate: Get rid of deprecated OpenSSL 1.1 APIs
  *  SocketAcceptor::setReactor() is broken
  *  Poco::strToInt<> fails for values right above the type's
     boundary/limit
  *  Poco::JSON::Object::set() should return reference to this to
     allow chaining.
  *  SQLite mismatch open/close API calls
  *  ICMPSocket does not check reply address
  *  Use PollSet in SocketReactor
  *  MySQL session state is not cleared in SessionPool
  *  Preserve entries order in DynamicStruct
  *  Can not open certain zip files include data descriptor
  *  add struct tm support to DateTime
  *  NTPClient not checking reply address
  *  lock-order-inversion in SocketReactor
  *  add socket gather/scatter capabilities
  *  UDPServer and client
  *  add PMTU discovery
  *  SocketNotifier not thread-safe
  *  WebSocketTest.cpp faults reported by valgrind
  *  Reset connection when a session is returned to the SessionPool
  *  Android abstract namespace local socket address
  *  Fix race condition in TCPServerDispatcher.cpp
  *  SocketImpl::bind --> bind wrong config

-------------------------------------------------------------------
Wed Jan 22 14:02:43 UTC 2020 - Martin Pluskal <mpluskal@suse.com>

- Make spec file greater 

-------------------------------------------------------------------
Mon Aug 26 21:21:17 UTC 2019 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.9.3
  * Data/ODBC: make binding of std::string configurable
    (SQL_LONGVARCHAR - default or SQL_VARCHAR) through a global
    setting (Poco::Data::ODBC::Connector::bindStringToLongVarChar()).
  * CppParser now supports type aliases defined with using keyword.
  * PageCompiler: added support for adding Content-Security-Policy
    and Cache-Control headers.

-------------------------------------------------------------------
Fri Jul 12 18:08:57 UTC 2019 - Martin Hauke <mardnh@gmx.de>

- Update to version 1.9.2
  * fixed GH #2736: Error using CMake gui - latest version
  * fixed GH #2737: Bundles vulnerable copy of Expat
  * fixed GH #2738: Poco::AccessExpireStrategy::onGet() must not
    extend expiration time after expiration
- Update to version 1.9.1
  * Added Poco::Net::HTTPClientSession::flushRequest()
  * Added Poco::Net::WebSocket::setMaxPayloadSize() and
    Poco::Net::WebSocket::getMaxPayloadSize() to specify a maximum
    acceptable payload size for Poco::Net::WebSocket::receiveFrame().
  * Poco::Net::WebSocket: don't attempt to send empty credentials
    in response to 401 response.
  * Redis: added support for additional commands (exists, expire,
    ping, multi, exec, discard)
  * Redis: added Poco::Redis::Client::isConnected()
  * Added HTTP*Credentials::empty() and HTTPCredentials::clear()
  * fixed GH #2277: SQLite null pointer dereference occurs when
    exception is being thrown
  * fixed GH #2316: cmake can't find MySQL and ODBC libraries
  * fixed GH #2336: Omit ContentLength in WebSocket accept response
  * fixed GH #2358: Don't include <openssl/fips.h> for later OpenSSL
  * fixed GH #2364: Stringify escapes every unicode symbol when
    object contain an array
  * fixed GH #2380: Calling
    Poco::Net::X509Certificate::addChainCertificate() leads to double
    free.
  * fixed GH #2549: Fix keepAlive in http client session
  * fixed GH #2565: HTMLForm: optional enforcement of Content-Length
    instead of Chunked Transfer-Encoding
  * fixed GH #2570: DialogSocket: receiveStatusMessage() - line
    length limit applies to entire multi-line message
  * fixed GH #2583: Crypto library does not build with OpenSSL 1.0.0
  * fixed GH #2655: MongoDB Binary element to string - bug
  * fixed GH #2700: Invalid read of memory in Poco::Environment::set
    which may cause crashes.
  * fixed GH #2723: Access violation when trying to decompress .zip
    file with unsupported compression method.

-------------------------------------------------------------------
Fri Mar  9 08:56:20 UTC 2018 - mardnh@gmx.de

- Update to version 1.9.0
  * Added additional text encodings, available in the new PocoEncodings
    library (GH #2165)
  * Added Punycode support for resolving Internationalized Domain Names
    to Poco::Net::DNS (GH #2164)
  * Added XDG Base Directory Specification support in Poco::Path,
    Poco::Util::SystemConfiguration
    and Poco::Util::Application (GH #1609, GH #561, GH #1609)
  * Added support for GCM ciphers in Crypto library (GH #2129)
  * Poco::Net::RemoteSyslogChannel and Poco::Net::RemoteSyslogListener
    now have basic support for RFC 5424 structured data (GH #2173)
  * Poco::File now has methods for obtaining partition space (GH #1545)
  * Added Poco::Net::Context::addCertificateAuthority() (GH #2197)
  * Added Poco::AutoPtr::reset() and Poco::SharedPtr::reset() to improve
    compatibility with std::shared_ptr() (GH #2172)
  * fixed GH #703: Poco::Data::SQLite data types (INTEGER is now mapped
    to Int64)
  * fixed GH #1426: inttypes.h is available on sun solaris
  * fixed GH #1912: Run ping with custom data size #1912
  * fixed GH #2177: Run ping with custom timeout instead of the default
  * fixed GH #2058 and GH #2095: Synchronization issue/deadlock in
    Poco::Util::Timer at destruction
  * fixed GH #2089: Allow hyphen in HTTP authentication scheme names
  * fixed GH #2106: Undefined behavior in Delegate::equals()
  * fixed GH #2108: POCO SQLite Data Connector hangs for 20 secs waiting
    for thread timeouts on Windows
  * fixed GH #2142: JSON::Object preserveOrder keys not synced on
    assignment
  * fixed GH #2199 and GH #2188: Illegal header in zip file
    exception/assertion failure during JAR file decompression
  * fixed GH #2203: Use MAX_ADDRESS_LENGTH to determine buffer size
- Remove patch:
  * poco-respect-libdir-cmake.patch (fixed upstream)

-------------------------------------------------------------------
Thu Jan 11 18:57:25 UTC 2018 - mardnh@gmx.de

- Update to version 1.8.1
  * Added Poco::File::linkTo()
  * fixed GH #2044: Poco::Net::NetworkInterface::list does not list
    inactive interfaces even when explicitly being asked for it.
  * fixed GH #2042: Android abstract namespace local socket address
  * fixed GH #2038: Poco::Net::MultipartWriter::createBoundary()
    always returns the same string.
  * fixed GH #2020: SQLite not handling parameter count mismatch
    correctly.
  * fixed GH #2012: Data/SQLite: Exception messages contain
    duplicate text
  * fixed GH #2005: Upgraded bundled PCRE to 8.41
  * fixed GH #2000: Fix building XMLStreamParser with unbundled expat
  * fixed GH #1603: fix MinGW 4.8.2 Compilation
  * fixed GH #1991: Support building poco 1.8.0 as cmake sub-project
  * fixed GH #2080: Bugs in Poco::Net::Socket::select when
    POCO_HAVE_FD_POLL is defined

- Update to version 1.8.0.1
  * Reverted change for GH #1828; DeflatingStreamBuf::sync() no
    longer flushes underlying stream as this causes corruption for
    some Zip files.
  * PocoDoc: fix for handling compiler configuration for Gradle
    builds.

- Update to version 1.8.0
  * Poco::Base64Encoder: add support for base64url encoding
  * Add Poco::Net::PollSet class to Net library
  * The Net library now supports Unix Domain Sockets, where
    available.
  * Added stream parser (Poco::XML::XMLStreamParser) to XML
    library (GH #1697)
  * Added Poco::Net::TCPServerConnectionFilter and
    Poco::Net::TCPServer::setConnectionFilter() to support
    connection filtering and IP blacklisting (GH #1485)
  * Added Redis library (GH #1383)
  * Added Zip64 support to Zip library (GH #1356)
  * Upgraded bundled SQLite to 3.21.0
  * Removed OpenVMS support (GH #1988)
  * fixed GH #271: NamedMutex_UNIX.cpp must remove semid
  * fixed GH #739: Add WebSocket::receiveFrame() that appends to a
    Poco::Buffer<char>
  * fixed GH #749: NTP Packet impl not according to RFC958
  * fixed GH #896: Sample "TwitterClient" of NetSSL_OpenSSL can't be
    build.
  * fixed GH #1172: Poco::Data default storage should be std::vector
  * fixed GH #1337: Poco::HTMLForm throws exception
    HTMLFormException("Form must be prepared") even after form is
    prepared.
  * fixed GH #1373: SessionImpl::close() does not check return code
    of close handle specific function
  * fixed GH #1425: Workaround bug in SolarisStudio 12.4 on RVO-ed
    objects.
  * fixed GH #1614: Problematic license for JSON component: the
    previously used JSON.org parser has been replaced with pdjson.
  * fixed GH #1659: wrong field size calculation in ODBC code.
  * fixed GH #1683: Poco::Data ODBC impl doesn't bind to unsigned
    numeric types properly
  * fixed GH #1705: MongoDB: support URI in Connection
  * fixed GH #1708: "SocketReactor::addEventHandler" and
    "SocketReactor::removeEventHandler" must protect the access to
    "NotifierPtr pNotifier"
  * fixed GH #1729: getConnectionTimeout of SQLite DB wrapper
    returns wrong value (in milliseconds, should be in seconds)
  * fixed GH #1739: OpenSSLInitializer isn't threadsafe
  * fixed GH #1750: double_conversion in NumericString is in
    conflict with Qt5 Core.
  * fixed GH #1804 and GH #1805: Integer Overflow or Wraparound
  * fixed GH #1828: DeflatingStreamBuf::sync() should also flush
    underlying stream.
  * fixed GH #1880: FTPClientSession::close() error
  * fixed GH #1897: DateTime wrong binding/extraction for MySQL
    database.
  * fixed GH #1905: Compiling Foundation library with
    POCO_NO_FPENVIRONMENT in Config.h fails.
  * fixed GH #1906: Race condition in ThreadPool
  * fixed GH #1913: Message Doesn't Support 64-bit Thread IDs
  * fixed GH #1921: ICMPSocket does not check reply address
  * fixed GH #1926: Exception when using SortedDirectoryIterator
  * fixed GH #1934: File::setExecutable() on POSIX should set
    executable bit for group and other if corresponding readable
    bit is set
  * fixed GH #1950: Net Exception: Address family not supported with
    clang
  * fixed GH #1964: Buffer<> swap miss ownMem

-------------------------------------------------------------------
Fri Nov 10 13:04:24 UTC 2017 - mardnh@gmx.de

- Update to version 1.7.9p2
  - fixed GH #1628: Export Poco::Zip::ZipUtil class

-------------------------------------------------------------------
Tue Nov  7 15:38:56 UTC 2017 - mardnh@gmx.de

- Update to version 1.7.9p1
  - fixed GH# 1968: Zip Decompress Parent Path Injection

-------------------------------------------------------------------
Wed Oct 11 01:06:40 UTC 2017 - jayvdb@gmail.com

- Add minimum versions cmake >= 2.8.12 and pkgconfig(sqlite3) >= 3.7
  to prevent broken builds against other distributions.
- Use virtual package dependency mysql-devel to support all distributions

-------------------------------------------------------------------
Sun Oct  1 15:32:30 UTC 2017 - mardnh@gmx.de

- Update to version 1.7.9
  - fixed GH #1813: xmlparse.cpp doesn't compile in WinCE (poco 1.7.8p3)
  - fixed GH #1826: XPath query error
  - fixed GH #1834: Visual Studio 2008 cannot find stdint.h
  - fixed GH #1842: Upgrade bundled expat to 2.2.3
  - fixed GH #1843: Use random salt for Poco::XML::NamePool
  - fixed GH #1865: AbstractEvent::hasDelegates() is not thread-safe
  - improved/fixed QNX support
  - Poco::Util::LayeredConfiguration: added support for labelling configurations and
    finding them by their label
  - upgraded bundled SQLite to 3.20.1
  - PageCompiler: support <%@ include file="<path>" %> syntax for includes, in addition
    to <%@ include page="<path>" %>
  - PageCompiler: optimize generated request handler code by removing useless
    statements, e.g. writing empty strings.
  - added POCO_DEPRECATED macro which will be used in the future to deprecate
    classes and methods.
  - Poco::NamedMutex and Poco::NamedEvent (System V Semaphores implementation): files are
    now opened with O_RDONLY | O_CREAT instead of O_WRONLY | O_CREAT, allowing sharing
    between different users. Furthermore, ftok() is called with 'p' as project ID
    argument.

-------------------------------------------------------------------
Thu Jun 22 12:43:09 UTC 2017 - mardnh@gmx.de

- Update to version 1.7.8p3
  - fixed GH #1760: Upgrade bundled expat to 2.2.1 which fixes some vulnerabilities:
    http://seclists.org/oss-sec/2017/q2/499

-------------------------------------------------------------------
Sun Jun  4 17:44:11 UTC 2017 - mardnh@gmx.de

- Add libexpat-devel and pcre-devel as requirement for poco-devel

-------------------------------------------------------------------
Sun Jun  4 06:10:57 UTC 2017 - tchvatal@suse.com

- Add testsuite - off by default, 4 tests fail
- Format with spec-cleaner

-------------------------------------------------------------------
Sat Jun  3 13:57:00 UTC 2017 - tchvatal@suse.com

- Switch to cmake build system
- Add patch to respect libdir:
  * poco-respect-libdir-cmake.patch
- Remove patches for the hand written configure/make:
  * poco-disable_rpath.patch
  * poco-poco_libdir.patch
- Do not rename gz archive to xz

-------------------------------------------------------------------
Sun Apr 30 00:07:36 UTC 2017 - jengelh@inai.de

- Trim some empty phrases from description
- Use better find -exec with "+"

-------------------------------------------------------------------
Thu Apr 20 09:02:38 UTC 2017 - mardnh@gmx.de

- update to 1.7.8p2 (see https://github.com/pocoproject/poco/blob/poco-1.7.8p2-release/CHANGELOG for details)
- Rename %soname to %sover to better reflect its use

-------------------------------------------------------------------
Sat Mar 11 14:50:23 UTC 2017 - vmiklos@collabora.co.uk

- update to 1.7.8 (see https://github.com/pocoproject/poco/blob/poco-1.7.8-release/CHANGELOG for details)

-------------------------------------------------------------------
Fri Feb  3 10:19:31 UTC 2017 - vmiklos@collabora.co.uk

- update to 1.7.7 (see https://github.com/pocoproject/poco/blob/poco-1.7.7-release/CHANGELOG for details)

-------------------------------------------------------------------
Sun Sep 25 20:30:14 UTC 2016 - andras.timar@collabora.com

- update to 1.7.5 (see https://github.com/pocoproject/poco/blob/poco-1.7.5-release/CHANGELOG for details)

-------------------------------------------------------------------
Mon Mar 21 16:44:14 UTC 2016 - vmiklos@collabora.co.uk

- update to 1.7.2 (see https://github.com/pocoproject/poco/blob/poco-1.7.2-release/CHANGELOG for details)

-------------------------------------------------------------------
Sun Jan 25 12:22:56 UTC 2015 - bjoern@schramke-online.de

- update to 1.6.0 (see https://github.com/pocoproject/poco/blob/poco-1.6.0-release/CHANGELOG for details)

-------------------------------------------------------------------
Sat Oct 11 11:10:07 UTC 2014 - bjoern@schramke-online.de

- adjusted build dependencies to facilitate building for non-SUSE distributions

-------------------------------------------------------------------
Thu Sep 25 15:19:44 UTC 2014 - bjoern@schramke-online.de

- update to 1.4.6.p4 (see
  https://github.com/pocoproject/poco/blob/poco-1.4.6p4-release/CHANGELOG
  for details)

-------------------------------------------------------------------
Thu Mar  7 18:56:44 UTC 2013 - adam@mizerski.pl

- update to 1.4.6.p1 (see CHANGELOG or
  https://raw.github.com/pocoproject/poco/poco-1.4.6/CHANGELOG
  for details)
- disabled "unbundled" build because of
  https://github.com/pocoproject/poco/issues/120
- Corrected License boost license is BSL-1.0
- added --no-tests --no-samples to configure options
- added all Poco libraries as poco-devel requirements

-------------------------------------------------------------------
Fri Apr 20 07:48:36 UTC 2012 - joop.boonen@opensuse.org

- Build version 1.4.3p1
- Passed the specfile through spec-cleaner
- Corrected License boost license is BSD-3-Clause
- Have to use make -j1 in stead of make %{?_smp_mflags} due to memory usage

-------------------------------------------------------------------
Sun Jan 29 15:48:13 UTC 2012 - jengelh@medozas.de

- Remove redundant tags/sections per specfile guideline suggestions
- Parallel building using %_smp_mflags

-------------------------------------------------------------------
Mon Sep 20 06:07:07 UTC 2010 - pascal.bleser@opensuse.org

- initial package: 1.3.6p2

