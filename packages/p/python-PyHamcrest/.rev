<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>e58bdb9d0eaa90930d4852e4ac74628c</srcmd5>
    <version>1.9.0</version>
    <time>1539869498</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>642555</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>04c141f8fbee959befc5459758be4e88</srcmd5>
    <version>1.9.0</version>
    <time>1562327301</time>
    <user>dimstar_suse</user>
    <comment>- Add patch to fix build with new pytest:
  * pytest4.patch</comment>
    <requestid>713181</requestid>
  </revision>
  <revision rev="3" vrev="3">
    <srcmd5>98ec4b5b23ad45620f1b1726a8e29e88</srcmd5>
    <version>1.9.0</version>
    <time>1564484532</time>
    <user>dimstar_suse</user>
    <comment>- Restrict pytest to 3.x as the newer does not work with release.
  In upstream git this was fixed by quite few commits so lets
  just wait for the release</comment>
    <requestid>717015</requestid>
  </revision>
  <revision rev="4" vrev="4">
    <srcmd5>5c2eee3fe94521face14a1c1bf33e4f7</srcmd5>
    <version>1.9.0</version>
    <time>1574414781</time>
    <user>dimstar_suse</user>
    <comment>- Remove pytest4.patch and replace it with pytest4-02.patch,
  which is the upstream gh#hamcrest/PyHamcrest#124 fixing
  compatibility with pytest 4+ officially. And of course, we
  don't have to massacre test files anymore.

- Run spec-cleaner
- Add pytest4.patch to make the testsuite actually really pass.

- Because of gh#hamcrest/PyHamcrest#123 we have to remove 
  tests/hamcrest_unit_test/core/is{_test,instanceof_test}.py to
  make the test suite passing.
  Patch pytest4.patch has been removed, it was a step into dead
  end.</comment>
    <requestid>750095</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>8b21f45ba73d3c1eb9c50099e0bd795a</srcmd5>
    <version>2.0.2</version>
    <time>1587325561</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>788891</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>6e5371dba335317f4b932f759d2fefda</srcmd5>
    <version>2.0.3</version>
    <time>1649461428</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>967457</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>7a98697dbe03dba82778fab4f05a0ab6</srcmd5>
    <version>2.0.3</version>
    <time>1682193761</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1082033</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>272238036777346492f70b64b787b76e</srcmd5>
    <version>2.1.0</version>
    <time>1706563595</time>
    <user>anag+factory</user>
    <comment>- update to 2.1.0:
  * Add a matcher for exceptions in asyncio future
  * Use the correct generic type in the internal
    ``describe_keyvalue`` method
  * ``has_properties`` now returns ``Matcher[Any]`` type, which
    addresses type checking errors when nested as a matcher.
  * Added Python 3.11 testing

- Because of gh#hamcrest/PyHamcrest#123 we have to remove</comment>
    <requestid>1141945</requestid>
  </revision>
  <revision rev="9" vrev="2">
    <srcmd5>22d15950ccb0dcf37494096b84bf551f</srcmd5>
    <version>2.1.0</version>
    <time>1758818630</time>
    <user>anag_factory</user>
    <comment>- Add py314.patch to fix tests with Python 3.14
</comment>
    <requestid>1306900</requestid>
  </revision>
</revisionlist>
