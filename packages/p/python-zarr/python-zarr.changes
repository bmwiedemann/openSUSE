-------------------------------------------------------------------
Mon Sep 23 19:36:57 UTC 2024 - ecsos <ecsos@opensuse.org>

- Fix build error and use numpy1

-------------------------------------------------------------------
Sat Jun 29 05:18:49 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 2.18.2:
  * Add Zstd codec to old V3 code path.
  * Fix a regression when getting or setting a single value from
    arrays with size-1 chunks.

-------------------------------------------------------------------
Wed May  8 10:59:58 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 2.18.0:
  * Performance improvement for reading and writing chunks if any
    of the dimensions is size 1.
  * Enable ruff/bugbear rules (B) and fix issues.
  * Minor updates to use np.inf instead of np.PINF / np.NINF in
    preparation for NumPy 2.0.0 release.
  * Deprecate experimental v3 support by issuing a FutureWarning.
    Also updated docs to warn about using the experimental v3
    version.
  * Deprecate the following stores:
    :class:`zarr.storage.DBMStore`,
    :class:`zarr.storage.LMDBStore`,
    :class:`zarr.storage.SQLiteStore`,
    :class:`zarr.storage.MongoDBStore`,
    :class:`zarr.storage.RedisStore`, and
    :class:`zarr.storage.ABSStore`. These stores are slated to be
    removed from Zarr-Python in version 3.0.

-------------------------------------------------------------------
Sat Apr 20 08:12:17 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 2.17.2:
  * [v3] Dramatically reduce number of __contains__ requests in
    favor of optimistically calling __getitem__ and handling any
    error that may arise.
  * [v3] Reuse the downloaded array metadata when creating an
    Array.
  * Optimize Array.info so that it calls getsize only once.
  * Override IPython _repr_*_ methods to avoid expensive lookups
    against object stores.
  * FSStore now raises rather than return bad data.
  * Add CI test environment for Python 3.12
  * Bump minimum supported NumPy version to 1.23 (per spec 0000)

-------------------------------------------------------------------
Sat Mar 16 19:53:17 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Update to 2.17.1
  * Change occurrences of % and format() to f-strings. By Dimitri
    Papadopoulos Orfanos #1423.
  * Proper argument for numpy.reshape. By Dimitri Papadopoulos
    Orfanos #1425.
  * Add typing to dimension separator arguments. By David Stansby
    #1620.
- Release 2.17.0
  * Added type hints to zarr.creation.create(). By David Stansby
    #1536.
  * Pyodide support: Don’t require fasteners on Emscripten. By Hood
    Chatham #1663.

-------------------------------------------------------------------
Fri Jan 19 14:52:05 UTC 2024 - Daniel Garcia <daniel.garcia@suse.com>

- skip broken tests in s390x, gh#zarr-developers/zarr-python#1375
  bsc#1218611

-------------------------------------------------------------------
Wed Dec 27 16:02:56 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 2.16.1:
  * Require ``setuptools_scm`` version ``1.5.4``\+
  * Add ``docs`` requirements to ``pyproject.toml``
  * Fixed caching issue in ``LRUStoreCache``.

-------------------------------------------------------------------
Tue Aug  1 13:24:34 UTC 2023 - Markéta Machová <mmachova@suse.com>

- update to version 2.16
  * Migrate to pyproject.toml and remove redundant infrastructure.
  * Require setuptools 64.0.0+
  * Bump to NumPy 1.20+ in environment.yml.
  * More maintenance changes, special thanks to Outreachy participants
    for contributing to most of the maintenance PRs.
  * Improve Zarr V3 support, adding partial store read/write and
    storage transformers.
  * N5 nows supports Blosc. Remove warnings emitted when using N5Store
    or N5FSStore with a blosc-compressed array.
  * Implement more extensive fallback of getitem/setitem for
    orthogonal indexing.
  * Getitems supports meta_array.
  * Allow for partial codec specification in V3 array metadata.
  * Implemented blockwise (chunk blocks) indexing to zarr.Array.

-------------------------------------------------------------------
Thu Jul 27 09:47:45 UTC 2023 - Dirk Müller <dmueller@suse.com>

- set python311 context for SLE15

-------------------------------------------------------------------
Sun Oct  9 19:15:50 UTC 2022 - Arun Persaud <arun@gmx.de>

- update to version 2.13.3:
  * Improve performance of slice selections with steps by omitting
    chunks with no relevant data. By Richard Shaw #843.

-------------------------------------------------------------------
Wed Sep 28 13:11:03 UTC 2022 - Arun Persaud <arun@gmx.de>

- update to version 2.13.2:
  * Fix test failure on conda-forge builds (again). By :user:`Josh
    Moore <joshmoore>`; see zarr-feedstock#65.

-------------------------------------------------------------------
Tue Sep 27 17:21:04 UTC 2022 - Arun Persaud <arun@gmx.de>

- update to version 2.13.1:
  * Fix test failure on conda-forge builds. By Josh Moore; see
    zarr-feedstock#65.

-------------------------------------------------------------------
Sun Sep 25 20:17:30 UTC 2022 - Arun Persaud <arun@gmx.de>

- specfile:
  * requrie python >= 3.8

- update to version 2.13.0:
  * Major changes
    + Support of alternative array classes by introducing a new
      argument, meta_array, that specifies the type/class of the
      underlying array. The meta_array argument can be any class
      instance that can be used as the like argument in NumPy (see NEP
      35). enabling support for CuPy through, for example, the
      creation of a CuPy CPU compressor. By Mads R. B. Kristensen
      #934.
    + Remove support for Python 3.7 in concert with NumPy
      dependency. By Davis Bennett #1067.
    + Zarr v3: add support for the default root path rather than
      requiring that all API users pass an explicit path. By Gregory
      R. Lee #1085, #1142.
  * Bug fixes
    + Remove/relax erroneous “meta” path check (regression). By
      Gregory R. Lee #1123.
    + Cast all attribute keys to strings (and issue deprecation
      warning). By Mattia Almansi #1066.
    + Fix bug in N5 storage that prevented arrays located in the root
      of the hierarchy from bearing the n5 keyword. Along with fixing
      this bug, new tests were added for N5 routines that had
      previously been excluded from testing, and type annotations were
      added to the N5 codebase. By Davis Bennett #1092.
    + Fix bug in LRUEStoreCache in which the current size wasn’t reset
      on invalidation. By BGCMHou and Josh Moore #1076, #1077.
    + Remove erroneous check that disallowed array keys starting with
      “meta”. By Gregory R. Lee #1105.
  * Documentation
    + Typo fixes to close quotes. By Pavithra Eswaramoorthy
    + Added copy button to documentation. By Altay Sansal #1124.
  * Maintenance
    + Simplify release docs. By Josh Moore #1119.
    + Pin werkzeug to prevent test hangs. By Davis Bennett #1098.
    + Fix a few DeepSource.io alerts By Dimitri Papadopoulos Orfanos
      #1080.
    + Fix URLs. By Dimitri Papadopoulos Orfanos, #1074.
    + Fix spelling. By Dimitri Papadopoulos Orfanos, #1073.
    + Update GitHub issue templates with YAML format. By Saransh
      Chopra #1079.
    + Remove option to return None from _ensure_store. By Greggory Lee
      #1068.
    + Fix a typo of “integers”. By Richard Scott #1056.

-------------------------------------------------------------------
Sun Aug 21 15:21:17 UTC 2022 - Arun Persaud <arun@gmx.de>

- specfile:
  * update copyright year

- update to version 2.12.0:
  * Enhancements
    + Add support for reading and writing Zarr V3. The new
      zarr._store.v3 package has the necessary classes and functions
      for evaluating Zarr V3. Since the format is not yet finalized,
      the classes and functions are not automatically imported into
      the regular zarr name space. Setting the
      ZARR_V3_EXPERIMENTAL_API environment variable will activate
      them. By Greggory Lee; #898, #1006, and #1007 as well as by Josh
      Moore #1032.
    + Create FSStore from an existing fsspec filesystem. If you have
      created an fsspec filesystem outside of Zarr, you can now pass
      it as a keyword argument to FSStore. By Ryan Abernathey; #911.
    + Add numpy encoder class for json.dumps By Eric Prestat; #933.
    + Appending performance improvement to Zarr arrays, e.g., when
      writing to S3. By hailiangzhang; #1014.
    + Add number encoder for json.dumps to support numpy intergers in
      chunks arguments. By Eric Prestat #697.
  * Bug fixes
    + Fix bug that made it impossible to create an FSStore on
      unlistable filesystems (e.g. some HTTP servers). By Ryan
      Abernathey; #993.
  * Documentation
    + Update resize doc to clarify surprising behavior. By
      hailiangzhang; #1022.
  * Maintenance
    + Added Pre-commit configuration, incl. Yaml Check. By Shivank
      Chaudhary; #1015, #1016.
    + Fix URL to renamed file in Blosc repo. By Andrew Thomas #1028.
    + Activate Py 3.10 builds. By Josh Moore #1027.
    + Make all unignored zarr warnings errors. By Josh Moore #1021.

- changes from version 2.11.3:
  * Bug fixes
    + Fix missing case to fully revert change to default
      write_empty_chunks. By Tom White; #1005.

- changes from version 2.11.2:
  * Bug fixes
    + Changes the default value of write_empty_chunks to True to
      prevent unanticipated data losses when the data types do not
      have a proper default value when empty chunks are read back
      in. By Vyas Ramasubramani; #965, #1001.

- changes from version 2.11.1:
  * Bug fixes
    + Fix bug where indexing with a scalar numpy value returned a
      single-value array. By Ben Jeffery #967.
    + Removed clobber argument from normalize_store_arg. This enables
      to change data within a opened consolidated group using mode
      “r+” (i.e region write). By Tobias Kölling #975.

- changes from version 2.11.0:
  * Enhancements
    + Sparse changes with performance impact! One of the advantages of
      the Zarr format is that it is sparse, which means that chunks
      with no data (more precisely, with data equal to the fill value,
      which is usually 0) don’t need to be written to disk at
      all. They will simply be assumed to be empty at read
      time. However, until this release, the Zarr library would write
      these empty chunks to disk anyway. This changes in this version:
      a small performance penalty at write time leads to significant
      speedups at read time and in filesystem operations in the case
      of sparse arrays. To revert to the old behavior, pass the
      argument write_empty_chunks=True to the array creation
      function. By Juan Nunez-Iglesias; #853 and Davis Bennett; #738.
    + Fancy indexing. Zarr arrays now support NumPy-style fancy
      indexing with arrays of integer coordinates. This is equivalent
      to using zarr.Array.vindex. Mixing slices and integer arrays is
      not supported. By Juan Nunez-Iglesias; #725.
    + New base class. This release of Zarr Python introduces a new
      BaseStore class that all provided store classes implemented in
      Zarr Python now inherit from. This is done as part of
      refactoring to enable future support of the Zarr version 3
      spec. Existing third-party stores that are a MutableMapping
      (e.g. dict) can be converted to a new-style key/value store
      inheriting from BaseStore by passing them as the argument to the
      new zarr.storage.KVStore class. For backwards compatibility,
      various higher-level array creation and convenience functions
      still accept plain Python dicts or other mutable mappings for
      the store argument, but will internally convert these to a
      KVStore. By Greggory Lee; #839, #789, and #950.
    + Allow to assign array fill_values and update metadata
      accordingly. By Ryan Abernathey, #662.
    + Allow to update array fill_values By Matthias Bussonnier #665.
  * Bug fixes
    + Fix bug where the checksum of zipfiles is wrong By Oren Watson
      #930.
    + Fix consolidate_metadata with FSStore. By Joe Hamman #916.
    + Unguarded next inside generator. By Dimitri Papadopoulos Orfanos
      #889.
  * Documentation
    + Update docs creation of dev env. By Ray Bell #921.
    + Update docs to use python -m pytest. By Ray Bell #923.
    + Fix versionadded tag in zarr.core.Array docstring. By Juan
      Nunez-Iglesias #852.
    + Doctest seem to be stricter now, updating tostring() to
      tobytes(). By John Kirkham #907.
    + Minor doc fix. By Mads R. B. Kristensen #937.
  * Maintenance
    + Upgrade MongoDB in test env. By Joe Hamman #939.
    + Pass dimension_separator on fixture generation. By Josh Moore
      #858.
    + Activate Python 3.9 in GitHub Actions. By Josh Moore #859.
    + Drop shortcut fsspec[s3] for dependency. By Josh Moore #920.
    + and a swath of code-linting improvements by Dimitri Papadopoulos
      Orfanos:
       o Unnecessary comprehension (#899)
       o Unnecessary None provided as default (#900)
       o use an if expression instead of and/or (#888)
       o Remove unnecessary literal (#891)
       o Decorate a few method with @staticmethod (#885)
       o Drop unneeded return (#884)
       o Drop explicit object inheritance from class-es (#886)
       o Unnecessary comprehension (#883)
       o Codespell configuration (#882)
       o Fix typos found by codespell (#880)
       o Proper C-style formatting for integer (#913)
       o Add LGTM.com / DeepSource.io configuration files (#909)

- changes from version 2.10.3:
  * Bug fixes
    + N5 keywords now emit UserWarning instead of raising a
      ValueError. By Boaz Mohar; #860.
    + blocks_to_decompress not used in read_part function. By Boaz
      Mohar; #861.
    + defines blocksize for array, updates hexdigest values. By Andrew
      Fulton; #867.
    + Fix test failure on Debian and conda-forge builds. By Josh
      Moore; #871.

- changes from version 2.10.2:
  * Bug fixes
    + Fix NestedDirectoryStore datasets without dimension_separator
      metadata. By Josh Moore; #850.

- changes from version 2.10.1:
  * Bug fixes
    + Fix regression by setting normalize_keys=False in fsstore
      constructor. By Davis Bennett; #842.

- changes from version 2.10.0:
  * Enhancements
    + Add N5FSStore. By Davis Bennett; #793.
  * Bug fixes
    + Ignore None dim_separators in save_array. By Josh Moore; #831.

-------------------------------------------------------------------
Wed Sep  1 09:34:16 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Update to 2.9.5:
  - Fix FSStore.listdir behavior for nested directories (replaces
    now unnecessary skip-825-TestFSStore-test_create.patch).
  - Fix structured arrays that contain objects (which replaces
    zarr-pr802-fsspec-2021-07.patch).

-------------------------------------------------------------------
Sat Aug 28 08:54:39 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Update to 2.9.3:
  - Mark the fact that some tests that require fsspec, without
    compromising the code coverage score. By Ben Williams; #823.
  - Only inspect alternate node type if desired isn’t
    present. By Trevor Manz; #696.
  - Correct conda-forge deployment of Zarr by fixing some Zarr
    tests. By Ben Williams; #821.
- Add skip-825-TestFSStore-test_create.patch
  (gh#zarr-developers/zarr-python#825).

-------------------------------------------------------------------
Mon Aug 23 16:51:52 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to version 2.9.0
  * This release of Zarr Python is the first release of Zarr to not
    support Python 3.6.
  * Update ABSStore for compatibility with newer azure.storage.
    blob.
  * Pathlib support.
  * Fix dimension_separator support.
  * Extract ABSStore to zarr._storage.absstore.
  * TST: add missing assert in test_hexdigest.
- Add zarr-pr802-fsspec-2021-07.patch
  * gh#zarr-developers/zarr-python#802
  * gh#zarr-developers/zarr-python#812

-------------------------------------------------------------------
Fri Jul 16 15:07:21 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to v2.8.3
  * FSStore: default to normalize_keys=False
- Release 2.8.2
  * Add section on rechunking to tutorial
  * Expand FSStore tests and fix implementation issues
  * Updated ipytree warning for jlab3
  * Update Python classifiers (Zarr is stable!)
- Release 2.8.1
 * raise an error if create_dataset’s dimension_separator is
   inconsistent
- Release 2.8.0
  * V2 Specification Update
  * Introduce optional dimension_separator .zarray key for nested
    chunks.
- Release 2.7.1
  * Update Array to respect FSStore’s key_separator (#718)
- Release 2.7.0
  * Start stop for iterator (islice())
  * Add capability to partially read and decompress chunks
  * Make DirectoryStore __setitem__ resilient against antivirus
    file locking
  * Compare test data’s content generally
  * Fix dtype usage in zarr/meta.py
  * Fix FSStore key_seperator usage
  * Simplify text handling in DB Store

-------------------------------------------------------------------
Wed Feb 17 21:08:29 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Requires numpy: NEP 29, NumPy 1.20 in TW dropped Python 3.6
  support. Skip python36 build.

-------------------------------------------------------------------
Mon Dec 28 12:16:28 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Initial specfile for v2.6.1
- required by dask
