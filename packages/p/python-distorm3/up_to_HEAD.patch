--- /dev/null
+++ b/.github/workflows/py.yml
@@ -0,0 +1,34 @@
+name: Python package
+
+on: [push]
+
+jobs:
+  build:
+    runs-on: ${{ matrix.os }}
+    strategy:
+      max-parallel: 4
+      matrix:
+        os: [ubuntu-18.04, windows-latest, macos-latest]
+        python-version: [2.7, 3.5]
+        exclude:
+          # This combination requires MSVC 9, which is difficult here
+          - os: windows-latest
+            python-version: 2.7
+    steps:
+    - uses: actions/checkout@v1
+    - name: Set up Python ${{ matrix.python-version }}
+      uses: actions/setup-python@v1
+      with:
+        python-version: ${{ matrix.python-version }}
+    - uses: ilammy/msvc-dev-cmd@v1
+    - name: Build and install package
+      run: |
+        python -m pip install --upgrade pip setuptools wheel
+        python setup.py bdist_wheel
+        pip install --find-links=dist --no-index distorm3
+    - uses: actions/upload-artifact@v1
+      with:
+        name: Wheels
+        path: dist
+    - name: Test importing
+      run: python -c 'import distorm3'
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,5 @@
+*.egg-info
+*.py[cod]
+*.so
+build
+dist
--- a/COPYING
+++ b/COPYING
@@ -1,6 +1,6 @@
 :[diStorm3}:
 The ultimate disassembler library.
-Copyright (c) 2003-2018, Gil Dabah
+Copyright (c) 2003-2020, Gil Dabah
 All rights reserved.
 
 Redistribution and use in source and binary forms, with or without
--- a/include/distorm.h
+++ b/include/distorm.h
@@ -1,4 +1,4 @@
-/* diStorm 3.4.0 */
+/* diStorm 3.4.2 */
 
 /*
 distorm.h
@@ -6,7 +6,7 @@ distorm.h
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
@@ -67,10 +67,10 @@ typedef unsigned __int8		uint8_t;
 /* ***  Helper Macros  *** */
 
 /* Get the ISC of the instruction, used with the definitions below. */
-#define META_GET_ISC(meta) (((meta) >> 3) & 0x1f)
-#define META_SET_ISC(di, isc) (((di)->meta) |= ((isc) << 3))
+#define META_GET_ISC(meta) (((meta) >> 8) & 0x1f)
+#define META_SET_ISC(di, isc) (((di)->meta) |= ((isc) << 8))
 /* Get the flow control flags of the instruction, see 'features for decompose' below. */
-#define META_GET_FC(meta) ((meta) & 0x7)
+#define META_GET_FC(meta) ((meta) & 0xf)
 
 /* Get the target address of a branching instruction. O_PC operand type. */
 #define INSTRUCTION_GET_TARGET(di) ((_OffsetType)(((di)->addr + (di)->imm.addr + (di)->size)))
@@ -251,7 +251,7 @@ typedef struct {
 	uint8_t base, scale;
 	uint8_t dispSize;
 	/* Meta defines the instruction set class, and the flow control flags. Use META macros. */
-	uint8_t meta;
+	uint16_t meta;
 	/* The CPU flags that the instruction operates upon. */
 	uint16_t modifiedFlagsMask, testedFlagsMask, undefinedFlagsMask;
 } _DInst;
@@ -285,7 +285,7 @@ typedef struct {
 #define RM_CX 2     /* CL, CH, CX, ECX, RCX */
 #define RM_DX 4     /* DL, DH, DX, EDX, RDX */
 #define RM_BX 8     /* BL, BH, BX, EBX, RBX */
-#define RM_SP 0x10  /* SPL, SP, ESP, RSP */ 
+#define RM_SP 0x10  /* SPL, SP, ESP, RSP */
 #define RM_BP 0x20  /* BPL, BP, EBP, RBP */
 #define RM_SI 0x40  /* SIL, SI, ESI, RSI */
 #define RM_DI 0x80  /* DIL, DI, EDI, RDI */
@@ -384,8 +384,15 @@ typedef struct {
 #define DF_STOP_ON_INT 0x100
 /* The decoder will stop and return to the caller when any of the 'CMOVxx' instruction was decoded. */
 #define DF_STOP_ON_CMOV 0x200
+/* The decoder will stop and return to the caller when it encounters the HLT instruction. */
+#define DF_STOP_ON_HLT 0x400
+/* The decoder will stop and return to the caller when it encounters a privileged instruction. */
+#define DF_STOP_ON_PRIVILEGED 0x800
+/* The decoder will not synchronize to the next byte after the previosuly decoded instruction, instead it will start decoding at the next byte. */
+#define DF_SINGLE_BYTE_STEP 0x1000
+
 /* The decoder will stop and return to the caller when any flow control instruction was decoded. */
-#define DF_STOP_ON_FLOW_CONTROL (DF_STOP_ON_CALL | DF_STOP_ON_RET | DF_STOP_ON_SYS | DF_STOP_ON_UNC_BRANCH | DF_STOP_ON_CND_BRANCH | DF_STOP_ON_INT | DF_STOP_ON_CMOV)
+#define DF_STOP_ON_FLOW_CONTROL (DF_STOP_ON_CALL | DF_STOP_ON_RET | DF_STOP_ON_SYS | DF_STOP_ON_UNC_BRANCH | DF_STOP_ON_CND_BRANCH | DF_STOP_ON_INT | DF_STOP_ON_CMOV | DF_STOP_ON_HLT)
 
 /* Indicates the instruction is not a flow-control instruction. */
 #define FC_NONE 0
@@ -406,6 +413,8 @@ typedef struct {
 #define FC_INT 6
 /* Indicates the instruction is one of: CMOVxx. */
 #define FC_CMOV 7
+/* Indicates the instruction is HLT. */
+#define FC_HLT 8
 
 /* Return code of the decoding function. */
 typedef enum { DECRES_NONE, DECRES_SUCCESS, DECRES_MEMORYERR, DECRES_INPUTERR, DECRES_FILTERED } _DecodeResult;
@@ -431,7 +440,7 @@ typedef enum { DECRES_NONE, DECRES_SUCCE
  * Notes:  1)The minimal size of maxInstructions is 15.
  *         2)You will have to synchronize the offset,code and length by yourself if you pass code fragments and not a complete code block!
  */
- 
+
 /* distorm_decompose
  * See more documentation online at the GitHub project's wiki.
  *
--- a/include/mnemonics.h
+++ b/include/mnemonics.h
@@ -4,7 +4,7 @@ mnemonics.h
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
--- a/make/win32/cdistorm.vcxproj
+++ b/make/win32/cdistorm.vcxproj
@@ -23,7 +23,7 @@
     <ProjectGuid>{15051CE1-AB10-4239-973D-01B84F2AD0A9}</ProjectGuid>
     <RootNamespace>distorm</RootNamespace>
     <Keyword>Win32Proj</Keyword>
-    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>
+    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='dll|Win32'" Label="Configuration">
@@ -101,7 +101,7 @@
   </PropertyGroup>
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='clib|Win32'">
     <ClCompile>
-      <Optimization>Full</Optimization>
+      <Optimization>MaxSpeed</Optimization>
       <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
       <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
       <OmitFramePointers>true</OmitFramePointers>
@@ -130,7 +130,7 @@
       <TargetEnvironment>X64</TargetEnvironment>
     </Midl>
     <ClCompile>
-      <Optimization>Full</Optimization>
+      <Optimization>MaxSpeed</Optimization>
       <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
       <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
       <OmitFramePointers>true</OmitFramePointers>
@@ -156,7 +156,7 @@
   </ItemDefinitionGroup>
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='dll|Win32'">
     <ClCompile>
-      <Optimization>Full</Optimization>
+      <Optimization>MaxSpeed</Optimization>
       <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
       <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
       <OmitFramePointers>true</OmitFramePointers>
@@ -185,7 +185,7 @@
       <TargetEnvironment>X64</TargetEnvironment>
     </Midl>
     <ClCompile>
-      <Optimization>Full</Optimization>
+      <Optimization>MaxSpeed</Optimization>
       <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
       <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
       <OmitFramePointers>true</OmitFramePointers>
--- a/make/win32/distorm.sln
+++ b/make/win32/distorm.sln
@@ -1,5 +1,7 @@
-Microsoft Visual Studio Solution File, Format Version 11.00
-# Visual Studio 2010
+Microsoft Visual Studio Solution File, Format Version 12.00
+# Visual Studio 15
+VisualStudioVersion = 15.0.28307.572
+MinimumVisualStudioVersion = 10.0.40219.1
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "distorm", "cdistorm.vcxproj", "{15051CE1-AB10-4239-973D-01B84F2AD0A9}"
 EndProject
 Global
@@ -22,4 +24,7 @@ Global
 	GlobalSection(SolutionProperties) = preSolution
 		HideSolutionNode = FALSE
 	EndGlobalSection
+	GlobalSection(ExtensibilityGlobals) = postSolution
+		SolutionGuid = {11B358A5-CF9E-4C14-9F0F-B7DE2C53FA81}
+	EndGlobalSection
 EndGlobal
--- a/python/distorm3/__init__.py
+++ b/python/distorm3/__init__.py
@@ -26,8 +26,7 @@ __all__ = [
 ]
 
 from ctypes import *
-from os.path import split, join
-from os import name as os_name
+import os
 import sys
 
 if sys.version_info[0] >= 3:
@@ -36,26 +35,25 @@ if sys.version_info[0] >= 3:
 #==============================================================================
 # Load the diStorm DLL
 
-# Guess the DLL filename and load the library.
-_distorm_path = split(__file__)[0]
-if hasattr(sys, '_MEIPASS'):
-    _distorm_path = sys._MEIPASS
-potential_libs = ['libdistorm3.so', 'libdistorm3.dylib']
-if os_name == 'nt':
-    potential_libs = ['distorm3.dll', 'libdistorm3.dll']
-lib_was_found = False
-for i in potential_libs:
-    try:
-        _distorm_file = join(_distorm_path, i)
-        _distorm = cdll.LoadLibrary(_distorm_file)
-        lib_was_found = True
-        break
-    except OSError:
-        pass
-
-if lib_was_found == False:
+def _load_distorm():
+    if sys.version_info[0] == 3:
+        try:
+            import _distorm3
+            return cdll.LoadLibrary(_distorm3.__spec__.origin)
+        except ImportError:
+            pass
+
+    dll_ext = ('.dll' if sys.platform == 'win32' else '.so')
+    libnames = ['_distorm3' + dll_ext]
+    for dir in sys.path:
+        for name in libnames:
+            _distorm_file = os.path.join(dir, name)
+            if os.path.isfile(_distorm_file):
+                return cdll.LoadLibrary(_distorm_file)
     raise ImportError("Error loading the diStorm dynamic library (or cannot load library into process).")
 
+_distorm = _load_distorm()
+
 # Get the decode C function (try 64 bits version first, only then 32 bits).
 SUPPORT_64BIT_OFFSET = False
 try:
@@ -64,12 +62,9 @@ try:
     internal_format = _distorm.distorm_format64
     SUPPORT_64BIT_OFFSET = True
 except AttributeError:
-    try:
-          internal_decode = _distorm.distorm_decode32
-          internal_decompose = _distorm.distorm_decompose32
-          internal_format = _distorm.distorm_format32
-    except AttributeError:
-        raise ImportError("Error loading distorm")
+    internal_decode = _distorm.distorm_decode32
+    internal_decompose = _distorm.distorm_decompose32
+    internal_format = _distorm.distorm_format32
 
 #==============================================================================
 # diStorm C interface
@@ -174,7 +169,7 @@ class _DInst (Structure):
         ('base', c_ubyte),    # base register for indirections
         ('scale', c_ubyte),   # ignore for values 0, 1 (other valid values - 2,4,8)
         ('dispSize', c_ubyte),
-        ('meta', c_ubyte), # meta flags - instruction set class, etc. See C headers again...
+        ('meta', c_uint16), # meta flags - instruction set class, etc. See C headers again...
         ('modifiedFlagsMask', c_uint16), # CPU modified (output) flags by instruction.
         ('testedFlagsMask', c_uint16), # CPU tested (input) flags by instruction.
         ('undefinedFlagsMask', c_uint16) # CPU undefined flags by instruction.
@@ -485,8 +480,12 @@ DF_STOP_ON_UNC_BRANCH  = 0x40
 DF_STOP_ON_CND_BRANCH  = 0x80
 DF_STOP_ON_INT  = 0x100
 DF_STOP_ON_CMOV  = 0x200
+DF_STOP_ON_HLT  = 0x400
+DF_STOP_ON_PRIVILEGED = 0x800
+DF_SINGLE_BYTE_STEP = 0x1000
 DF_STOP_ON_FLOW_CONTROL = (DF_STOP_ON_CALL | DF_STOP_ON_RET | DF_STOP_ON_SYS | \
-    DF_STOP_ON_UNC_BRANCH | DF_STOP_ON_CND_BRANCH | DF_STOP_ON_INT | DF_STOP_ON_CMOV)
+    DF_STOP_ON_UNC_BRANCH | DF_STOP_ON_CND_BRANCH | DF_STOP_ON_INT | DF_STOP_ON_CMOV | \
+    DF_STOP_ON_HLT)
 
 def DecodeGenerator(codeOffset, code, dt):
     """
@@ -671,22 +670,41 @@ FlowControlFlags = [
 # Indiciates the instruction is one of: INT, INT1, INT 3, INTO, UD2.
 "FC_INT",
 # Indicates the instruction is one of: CMOVxx.
-"FC_CMOV"
+"FC_CMOV",
+# Indicates the instruction is HLT.
+"FC_HLT",
 ]
 
+# TODO: put FlowControlFlags together in one class with _repr_.
+class FlowControl:
+	""" The flow control instruction will be flagged in the lo byte of the 'meta' field in _InstInfo of diStorm.
+	They are used to distinguish between flow control instructions (such as: ret, call, jmp, jz, etc) to normal ones. """
+	(CALL,
+	RET,
+	SYS,
+	UNC_BRANCH,
+	CND_BRANCH,
+	INT,
+	CMOV,
+	HLT) = range(1, 9)
+
 def _getOpSize(flags):
     return ((flags >> 7) & 3)
 
 def _getISC(metaflags):
-    realvalue = ((metaflags >> 3) & 0x1f)
-    return InstructionSetClasses[realvalue]
+    realvalue = ((metaflags >> 8) & 0x1f)
+    try:
+        return InstructionSetClasses[realvalue]
+    except IndexError:
+        print ("Bad ISC flags in meta member: {}".format(realvalue))
+        raise
 
 def _getFC(metaflags):
-    realvalue = (metaflags & 0x7)
+    realvalue = (metaflags & 0xf)
     try:
         return FlowControlFlags[realvalue]
     except IndexError:
-        print ("Bad meta-flags: {}".format(realvalue))
+        print ("Bad FlowControl flags in meta member: {}".format(realvalue))
         raise
 
 def _getMnem(opcode):
@@ -778,6 +796,7 @@ class Instruction (object):
         self.operands = []
         self.flags = []
         self.rawFlags = di.flags
+        self.meta = 0
         self.instructionClass = _getISC(0)
         self.flowControl = _getFC(0)
         self.address = di.addr
@@ -812,6 +831,7 @@ class Instruction (object):
 
         # decode the meta-flags
         metas = di.meta
+        self.meta = di.meta
         self.instructionClass = _getISC(metas)
         self.flowControl = _getFC(metas)
 
@@ -897,7 +917,7 @@ def DecomposeGenerator(codeOffset, code,
     instruction_off = 0
 
     while codeLen > 0:
-        
+
         usedInstructionsCount = c_uint(0)
         codeInfo = _CodeInfo(_OffsetType(codeOffset), _OffsetType(0), cast(p_code, c_char_p), codeLen, dt, features)
         status = internal_decompose(byref(codeInfo), byref(result), MAX_INSTRUCTIONS, byref(usedInstructionsCount))
@@ -912,15 +932,17 @@ def DecomposeGenerator(codeOffset, code,
         for index in range(used):
             di = result[index]
             yield Instruction(di, code[instruction_off : instruction_off + di.size], dt)
-            delta += di.size
-            instruction_off += di.size
+
+            # Take into account filtered out instructions.
+            delta += di.size + codeInfo.nextOffset - codeOffset
+            instruction_off += di.size + codeInfo.nextOffset - codeOffset
 
         if delta <= 0:
             break
         codeOffset = codeOffset + delta
         p_code     = byref(code_buf, instruction_off)
         codeLen    = codeLen - delta
-        
+
         if (features & DF_STOP_ON_FLOW_CONTROL) != 0:
             break # User passed a stop flag.
 
--- /dev/null
+++ b/python/python_module_init.c
@@ -0,0 +1,28 @@
+#define PY_SSIZE_T_CLEAN
+#include <Python.h>
+
+#if PY_MAJOR_VERSION == 2
+PyMODINIT_FUNC init_distorm3(void)
+{
+    (void)Py_InitModule("_distorm3", NULL);
+}
+#else
+static struct PyModuleDef _distorm3_module = {
+    PyModuleDef_HEAD_INIT,
+    "_distorm3",
+    NULL,
+    -1,
+    NULL,
+};
+
+PyMODINIT_FUNC PyInit__distorm3(void)
+{
+    PyObject *m;
+
+    m = PyModule_Create(&_distorm3_module);
+    if (m == NULL)
+        return NULL;
+
+    return m;
+}
+#endif
--- a/setup.cfg
+++ b/setup.cfg
@@ -1,6 +1,3 @@
-[wheel]
-universal = 1
-
 [install]
 force=1
 compile=1
--- a/setup.py
+++ b/setup.py
@@ -7,219 +7,11 @@
 # Licensed under BSD.
 #
 
-__revision__ = "$Id: setup.py 603 2010-01-31 00:11:05Z qvasimodo $"
-
-import re
 import os
 import os.path
-import platform
-import string
-import shutil
-import sys
-import subprocess as sp
-
 from glob import glob
-from shutil import ignore_patterns
-from setuptools import dist
-from distutils import log
-from distutils.command.build import build
-from distutils.command.build_clib import build_clib
-from distutils.command.clean import clean
-from setuptools.command.install import install
-from distutils.command.install_lib import install_lib
-from distutils.command.sdist import sdist
-from distutils.core import setup, Extension
-from distutils.errors import DistutilsSetupError
-
-def scanfor_vc_all():
- fname = "vcvarsall.bat"
- startDir = "C:\\Program Files (x86)\\Microsoft Visual Studio\\"
- print("searching for %s" % fname)
- for dirpath, dirnames, filenames in os.walk(startDir):
-  for f in filenames:
-   if f == fname:
-    return os.path.join(dirpath, f)
-
-def compile_vc(solution_path, config, platform):
-    match_vs = re.compile('vs(\d+)comntools$', re.I).match
-    compilers = [
-        m.group(1, 0) for m in (match_vs(k) for k in os.environ.keys())
-        if m is not None
-    ]
-    msbuild = [
-        'msbuild',
-            '/p:Configuration=%s' % config,
-            '/p:Platform=%s' % platform,
-            solution_path
-    ]
-    for ver, var in sorted(compilers, key = lambda v: -int(v[0])):
-        bat = os.path.join(os.environ[var], r'..\..\vc\vcvarsall.bat')
-        try:
-            log.info('Compiling with %s: %s', var, ' '.join(msbuild))
-            sp.check_call(['call', bat, '&&'] + msbuild, shell = True)
-            return
-        except sp.CalledProcessError:
-            log.info('compilation with %s failed', var)
-    # Try brute force find the batch file for VS env
-    try:
-        bat = scanfor_vc_all()
-        log.info('Compiling with %s' % bat)
-        sp.check_call(['call', bat, 'x86_amd64' if platform=='x64' else 'x86', '&&'] + msbuild, shell = True)
-        return
-    except sp.CalledProcessError:
-        log.info('compilation failed')
-
-    raise DistutilsSetupError(
-        'Failed to compile "%s" with any available compiler' % solution_path
-    )
-
-def get_sources():
-    """Returns a list of C source files that should be compiled to 
-    create the libdistorm3 library.
-    """
-    return sorted(glob('src/*.c'))
-
-class custom_build(build):
-    """Customized build command"""
-    def run(self):
-        log.info('running custom_build')
-        if 'windows' in platform.system().lower():
-            bits = 'win32' # x86 by default
-            # If x64 is specified in command line, change it here
-            for i in sys.argv:
-                if i.find("--plat-name=win-amd64") != -1:
-                     bits = 'x64'
-            compile_vc('make/win32/distorm.sln', 'dll', bits)
-            self.copy_file('distorm3.dll', 'python/distorm3')
-        build.run(self)
-
-class custom_build_clib(build_clib):
-    """Customized build_clib command
-
-    This custom_build_clib will create dynamically linked libraries rather 
-    than statically linked libraries.  In addition, it places the compiled 
-    libraries alongside the python packages, to facilitate the use of ctypes. 
-    """
-
-    def finalize_options(self):
-        # We want build-clib to default to build-lib as defined by the 
-        # "build" command.  This is so the compiled library will be put 
-        # in the right place along side the python code.
-        self.set_undefined_options('build',
-                                   ('build_lib', 'build_clib'),
-                                   ('build_temp', 'build_temp'),
-                                   ('compiler', 'compiler'),
-                                   ('debug', 'debug'),
-                                   ('force', 'force'))
-
-        self.libraries = self.distribution.libraries
-        if self.libraries: # In Python 3.0 they have a bug in check_library_list, comment it out then.
-            self.check_library_list(self.libraries)
-
-        if self.include_dirs is None:
-            self.include_dirs = self.distribution.include_dirs or []
-        if type(self.include_dirs) in (bytes, str):
-            self.include_dirs = string.split(self.include_dirs,
-                                             os.pathsep)
-
-    def get_source_files_for_lib(self, lib_name, build_info):
-        sources = build_info.get('sources', [])
-        if hasattr(sources, '__call__'):
-            sources = sources()
-        if (sources is None or
-            type(sources) not in (list, tuple) or
-            len(sources) == 0):
-            raise DistutilsSetupError(
-                "in 'libraries' option (library '%s'), 'sources' must be "
-                "present and must be a list of source filenames" % lib_name
-            )
-        return sources
-
-    def get_source_files(self):
-        self.check_library_list(self.libraries)
-        filenames = []
-        for (lib_name, build_info) in self.libraries:
-            sources = self.get_source_files_for_lib(lib_name, build_info)
-            filenames.extend(sources)
-        return filenames
+from setuptools import Extension, setup
 
-    def run(self):
-        log.info('running custom_build_clib')
-        build_clib.run(self)
-
-    def build_libraries(self, libraries):
-        for (lib_name, build_info) in libraries:
-            sources = self.get_source_files_for_lib(lib_name, build_info)
-            sources = list(sources)
-
-            log.info("building '%s' library", lib_name)
-
-            # First, compile the source code to object files in the 
-            # library directory.
-            macros = build_info.get('macros')
-            include_dirs = build_info.get('include_dirs')
-            objects = self.compiler.compile(sources,
-                output_dir=self.build_temp,
-                macros=macros,
-                include_dirs=include_dirs,
-                extra_postargs=build_info.get('extra_compile_args', []),
-                debug=self.debug)
-
-            # Then link the object files and put the result in the 
-            # package build directory.
-            package = build_info.get('package', '')
-            self.compiler.link_shared_lib(
-                objects, lib_name,
-                output_dir=os.path.join(self.build_clib, package),
-                extra_postargs=build_info.get('extra_link_args', []),
-                debug=self.debug,)
-
-
-class custom_clean(clean):
-    """Customized clean command
-
-    Customized clean command removes .pyc files from the project, 
-    as well as build and dist directories."""
-    def run(self):
-        log.info('running custom_clean')
-        # Remove .pyc files
-        if hasattr(os, 'walk'):
-            for root, dirs, files in os.walk('.'):
-                for f in files:
-                    if f.endswith('.pyc'):
-                        log.info("removing '%s'" % f)
-                        try:
-                            os.unlink(f)
-                        except:
-                            pass
-
-        # Remove generated directories
-        for dir in ['build', 'dist']:
-            if os.path.exists(dir):
-                log.info("removing '%s' (and everything under it)"%dir)
-                try:
-                    shutil.rmtree(dir, ignore_errors=True)
-                except:
-                    pass
-
-        clean.run(self)
-
-class custom_sdist(sdist):
-    """Customized sdist command"""
-    def run(self):
-        log.info('running custom_sdist')
-        sdist.run(self)
-
-class BinaryDistribution(dist.Distribution):
-    def is_pure(self):
-        return False
-    def has_ext_modules(self):
-        return True
-
-class custom_install(install):
-    def finalize_options(self):
-        install.finalize_options(self)
-        self.install_lib = self.install_platlib
 
 def main():
     # Just in case we are being called from a different directory
@@ -227,44 +19,13 @@ def main():
     if cwd:
         os.chdir(cwd)
 
-    # Get the target platform
-    system  = platform.system().lower()
-
-    # Setup the extension module
-    # Setup the library
-    ext_modules = None
-    libraries = None
     package_data = []
-    if 'windows' in system:
-        package_data = ['distorm3.dll']
-    elif 'darwin' in system or 'macosx' in system:
-        libraries = [(
-            'distorm3', dict(
-            package='distorm3',
-            sources=get_sources,
-            include_dirs=['src', 'include'],
-            extra_compile_args=['-arch', 'i386', '-arch', 'x86_64', '-O2',
-                                '-Wall', '-fPIC', '-DSUPPORT_64BIT_OFFSET',
-                                '-DDISTORM_DYNAMIC']))]
-    elif 'cygwin' in system:
-        libraries = [(
-            'distorm3', dict(
-            package='distorm3',
-            sources=get_sources,
-            include_dirs=['src', 'include'],
-            extra_compile_args=['-fPIC', '-O2', '-Wall',
-                                '-DSUPPORT_64BIT_OFFSET',
-                                '-DDISTORM_STATIC']))]
-    else:
-        libraries = [(
-            'distorm3', dict(
-            package='distorm3',
-            sources=get_sources,
-            include_dirs=['src', 'include'],
-            extra_link_args=['-Wl,-soname,libdistorm3.so.3'],
-            extra_compile_args=['-fPIC', '-O2', '-Wall',
-                                '-DSUPPORT_64BIT_OFFSET',
-                                '-DDISTORM_STATIC']))]
+    distorm_module = Extension(
+        "_distorm3",
+        sources=sorted(glob('src/*.c')) + ["python/python_module_init.c"],
+        include_dirs=['src', 'include'],
+        define_macros=[('SUPPORT_64BIT_OFFSET', None), ('DISTORM_DYNAMIC', None)],
+    )
 
     options = {
 
@@ -273,18 +34,11 @@ def main():
     'provides'          : ['distorm3'],
     'packages'          : ['distorm3'],
     'package_dir'       : { '' : 'python' },
-    'cmdclass'          : { 'build' : custom_build,
-                            'build_clib' : custom_build_clib,
-                            'clean' : custom_clean, 
-                            'sdist' : custom_sdist,
-                            'install' : custom_install },
-    'libraries'         : libraries,
+    'ext_modules'       : [distorm_module],
     'package_data'      : {'distorm3': package_data},
-    'distclass'         : BinaryDistribution,
-
     # Metadata
     'name'              : 'distorm3',
-    'version'           : '3.4.1',
+    'version'           : '3.4.2',
     'description'       : 'The goal of diStorm3 is to decode x86/AMD64' \
                           ' binary streams and return a structure that' \
                           ' describes each instruction.',
--- a/src/config.h
+++ b/src/config.h
@@ -4,7 +4,7 @@ config.h
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
@@ -13,7 +13,7 @@ This library is licensed under the BSD l
 #define CONFIG_H
 
 /* diStorm version number. */
-#define __DISTORMV__ 0x030400
+#define __DISTORMV__ 0x030402
 
 #include <string.h> /* memset, memcpy - can be easily self implemented for libc independency. */
 
--- a/src/decoder.c
+++ b/src/decoder.c
@@ -4,7 +4,7 @@ decoder.c
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
@@ -511,7 +511,7 @@ _DecodeResult decode_internal(_CodeInfo*
 			code += prefixSize;
 			codeOffset += prefixSize;
 
-			/* If we got only prefixes continue to next instruction. */
+			/* If we got only prefixes continue to next instruction, note that DF_SINGLE_BYTE_STEP is ignored here. */
 			if (prefixSize == INST_MAXIMUM_SIZE) continue;
 		}
 
@@ -585,14 +585,27 @@ _DecodeResult decode_internal(_CodeInfo*
 				prefixSize -= 1;
 				codeLen += 1;
 			}
+			/* DF_SINGLE_BYTE_STEP is ignored here. */
 			ps.last = ps.start + prefixSize - 1;
 			code = ps.last + 1;
 			codeOffset = startInstOffset + prefixSize;
 		} else {
 			/* Advance to next instruction. */
-			codeLen -= pdi->size;
-			codeOffset += pdi->size;
-			code += pdi->size;
+
+			if (!(_ci->features & DF_SINGLE_BYTE_STEP)) { /* Start with the more likely happy flow. */
+				codeLen -= pdi->size;
+				codeOffset += pdi->size;
+				code += pdi->size;
+			} else {
+				/* Skip one byte only, so ignore the prefixes read. */
+				codeLen += prefixSize - 1;
+				codeOffset = codeOffset - prefixSize + 1;
+				code = code - prefixSize + 1;
+
+				/* Keep ci in sync. */
+				ci.code = code;
+				ci.codeLen = codeLen;
+			}
 
 			/* Instruction's size should include prefixes. */
 			pdi->size += (uint8_t)prefixSize;
@@ -631,18 +644,24 @@ _DecodeResult decode_internal(_CodeInfo*
 		/* Fix next offset. */
 		_ci->nextOffset = codeOffset;
 
-		/* Check whether we need to stop on any flow control instruction. */
+		/* Check whether we need to stop on any feature. */
 		features = _ci->features;
-		mfc = META_GET_FC(pdi->meta);
-		if ((decodeResult == DECRES_SUCCESS) && (features & DF_STOP_ON_FLOW_CONTROL)) {
-			if (((features & DF_STOP_ON_CALL) && (mfc == FC_CALL)) ||
-				((features & DF_STOP_ON_RET) && (mfc == FC_RET)) ||
-				((features & DF_STOP_ON_SYS) && (mfc == FC_SYS)) ||
-				((features & DF_STOP_ON_UNC_BRANCH) && (mfc == FC_UNC_BRANCH)) ||
-				((features & DF_STOP_ON_CND_BRANCH) && (mfc == FC_CND_BRANCH)) ||
-				((features & DF_STOP_ON_INT) && (mfc == FC_INT)) ||
-				((features & DF_STOP_ON_CMOV) && (mfc == FC_CMOV)))
-				return DECRES_SUCCESS;
+		if (decodeResult == DECRES_SUCCESS) {
+			if ((features & DF_STOP_ON_PRIVILEGED) && (FLAG_GET_PRIVILEGED(pdi->flags))) return DECRES_SUCCESS;
+
+			if (features & DF_STOP_ON_FLOW_CONTROL) {
+				mfc = META_GET_FC(pdi->meta);
+				if (((features & DF_STOP_ON_CALL) && (mfc == FC_CALL)) ||
+					((features & DF_STOP_ON_RET) && (mfc == FC_RET)) ||
+					((features & DF_STOP_ON_SYS) && (mfc == FC_SYS)) ||
+					((features & DF_STOP_ON_UNC_BRANCH) && (mfc == FC_UNC_BRANCH)) ||
+					((features & DF_STOP_ON_CND_BRANCH) && (mfc == FC_CND_BRANCH)) ||
+					((features & DF_STOP_ON_INT) && (mfc == FC_INT)) ||
+					((features & DF_STOP_ON_CMOV) && (mfc == FC_CMOV)) ||
+					((features & DF_STOP_ON_HLT) && (mfc == FC_HLT))) {
+						return DECRES_SUCCESS;
+				}
+			}
 		}
 	}
 
--- a/src/decoder.h
+++ b/src/decoder.h
@@ -4,20 +4,8 @@ decoder.h
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2011  Gil Dabah
-
-This program is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
-
-This program is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
-
-You should have received a copy of the GNU General Public License
-along with this program.  If not, see <http://www.gnu.org/licenses/>
+Copyright (C) 2003-2020 Gil Dabah
+This library is licensed under the BSD license. See the file COPYING.
 */
 
 
--- a/src/distorm.c
+++ b/src/distorm.c
@@ -5,7 +5,7 @@ diStorm3 C Library Interface
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
--- a/src/instructions.c
+++ b/src/instructions.c
@@ -4,7 +4,7 @@ instructions.c
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
--- a/src/instructions.h
+++ b/src/instructions.h
@@ -4,7 +4,7 @@ instructions.h
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
@@ -127,7 +127,7 @@ typedef enum OpType {
 	 * We need this to detect whether an operand size prefix is used.
 	 */
 	OT_SEG,
-	
+
 	/* Use AL */
 	OT_ACC8,
 	/* Use AX (FSTSW) */
@@ -399,7 +399,7 @@ typedef enum {ONT_NONE = -1, ONT_1 = 0,
 typedef struct {
 	uint8_t flagsIndex; /* An index into FlagsTables */
 	uint8_t s, d; /* OpType. */
-	uint8_t meta; /* Hi 5 bits = Instruction set class | Lo 3 bits = flow control flags. */
+	uint16_t meta; /* High byte = Instruction set class | Low byte = flow control flags. */
 	/*
 	 * The following are CPU flag masks that the instruction changes.
 	 * The flags are compacted so 8 bits representation is enough.
@@ -461,3 +461,4 @@ _InstInfo* inst_lookup(_CodeInfo* ci, _P
 _InstInfo* inst_lookup_3dnow(_CodeInfo* ci);
 
 #endif /* INSTRUCTIONS_H */
+
--- a/src/insts.c
+++ b/src/insts.c
@@ -4,7 +4,7 @@ insts.c
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
@@ -15,15 +15,15 @@ This library is licensed under the BSD l
 
 
 /*
- * GENERATED BY disOps at Sat Nov 10 19:20:27 2018
+ * GENERATED BY disOps at Mon Dec 30 13:32:24 2019
  */
 
-_InstInfo II_MOVSXD =	/*II*/ {0x1d4, 10027};
+_InstInfo II_MOVSXD =	/*II*/ {0x1d5, 10027};
 _InstInfo II_NOP =	/*II*/ {0x53, 581};
-_InstInfo II_PAUSE =	/*II*/ {0x88, 10035};
+_InstInfo II_PAUSE =	/*II*/ {0x89, 10035};
 _InstInfo II_WAIT =	/*II*/ {0x53, 10042};
-_InstInfo II_RDRAND =	/*II*/ {0x1d5, 10048};
-_InstInfo II_3DNOW =	/*II*/ {0x1d6, 10056};
+_InstInfo II_RDRAND =	/*II*/ {0x1d6, 10048};
+_InstInfo II_3DNOW =	/*II*/ {0x1d7, 10056};
 
 _iflags FlagsTable[101] = {
 0x80000011,
@@ -340,1047 +340,1047 @@ _InstInfo InstInfos[1246] = {
 	/*II_EE*/ {0x81, 33219},
 	/*II_EF*/ {0x82, 33219},
 	/*II_F1*/ {0x6d, 476},
-	/*II_F4*/ {0x53, 33250},
-	/*II_F5*/ {0x83, 487},
-	/*II_F8*/ {0x83, 492},
-	/*II_F9*/ {0x83, 497},
-	/*II_FA*/ {0x84, 33270},
-	/*II_FB*/ {0x84, 33275},
-	/*II_FC*/ {0x85, 512},
-	/*II_FD*/ {0x85, 517},
-	/*II_0F_02*/ {0x86, 522},
-	/*II_0F_03*/ {0x86, 527},
-	/*II_0F_05*/ {0x87, 532},
-	/*II_0F_06*/ {0x88, 33309},
-	/*II_0F_07*/ {0x87, 547},
-	/*II_0F_08*/ {0x88, 33323},
-	/*II_0F_09*/ {0x88, 33329},
-	/*II_0F_0B*/ {0x89, 569},
-	/*II_0F_0E*/ {0x8a, 574},
-	/*II_0F_1F*/ {0x8b, 581},
-	/*II_0F_20*/ {0x8c, 32986},
-	/*II_0F_21*/ {0x8d, 32986},
-	/*II_0F_22*/ {0x8e, 32986},
-	/*II_0F_23*/ {0x8f, 32986},
-	/*II_0F_30*/ {0x88, 33354},
-	/*II_0F_31*/ {0x88, 33361},
-	/*II_0F_32*/ {0x88, 33368},
-	/*II_0F_33*/ {0x88, 33375},
-	/*II_0F_34*/ {0x87, 614},
-	/*II_0F_35*/ {0x87, 624},
-	/*II_0F_37*/ {0x90, 633},
-	/*II_0F_40*/ {0x91, 641},
-	/*II_0F_41*/ {0x91, 648},
-	/*II_0F_42*/ {0x92, 656},
-	/*II_0F_43*/ {0x92, 663},
-	/*II_0F_44*/ {0x93, 671},
-	/*II_0F_45*/ {0x93, 678},
-	/*II_0F_46*/ {0x94, 686},
-	/*II_0F_47*/ {0x94, 694},
-	/*II_0F_48*/ {0x95, 701},
-	/*II_0F_49*/ {0x95, 708},
-	/*II_0F_4A*/ {0x96, 716},
-	/*II_0F_4B*/ {0x96, 723},
-	/*II_0F_4C*/ {0x97, 731},
-	/*II_0F_4D*/ {0x97, 738},
-	/*II_0F_4E*/ {0x98, 746},
-	/*II_0F_4F*/ {0x98, 754},
-	/*II_0F_80*/ {0x99, 134},
-	/*II_0F_81*/ {0x99, 138},
-	/*II_0F_82*/ {0x9a, 143},
-	/*II_0F_83*/ {0x9a, 147},
-	/*II_0F_84*/ {0x9b, 152},
-	/*II_0F_85*/ {0x9b, 156},
-	/*II_0F_86*/ {0x9c, 161},
-	/*II_0F_87*/ {0x9c, 166},
-	/*II_0F_88*/ {0x9d, 170},
-	/*II_0F_89*/ {0x9d, 174},
-	/*II_0F_8A*/ {0x9e, 179},
-	/*II_0F_8B*/ {0x9e, 183},
-	/*II_0F_8C*/ {0x9f, 188},
-	/*II_0F_8D*/ {0x9f, 192},
-	/*II_0F_8E*/ {0xa0, 197},
-	/*II_0F_8F*/ {0xa0, 202},
-	/*II_0F_90*/ {0xa1, 761},
-	/*II_0F_91*/ {0xa1, 767},
-	/*II_0F_92*/ {0xa2, 774},
-	/*II_0F_93*/ {0xa2, 780},
-	/*II_0F_94*/ {0xa3, 787},
-	/*II_0F_95*/ {0xa3, 793},
-	/*II_0F_96*/ {0xa4, 800},
-	/*II_0F_97*/ {0xa4, 807},
-	/*II_0F_98*/ {0xa5, 813},
-	/*II_0F_99*/ {0xa5, 819},
-	/*II_0F_9A*/ {0xa6, 826},
-	/*II_0F_9B*/ {0xa6, 832},
-	/*II_0F_9C*/ {0xa7, 839},
-	/*II_0F_9D*/ {0xa7, 845},
-	/*II_0F_9E*/ {0xa8, 852},
-	/*II_0F_9F*/ {0xa8, 859},
-	/*II_0F_A0*/ {0xa9, 16},
-	/*II_0F_A1*/ {0xaa, 22},
-	/*II_0F_A2*/ {0x88, 865},
-	/*II_0F_A3*/ {0xab, 872},
-	/*II_0F_A8*/ {0xad, 16},
-	/*II_0F_A9*/ {0xae, 22},
-	/*II_0F_AA*/ {0xaf, 882},
-	/*II_0F_AB*/ {0xb0, 887},
-	/*II_0F_AF*/ {0xb1, 117},
-	/*II_0F_B0*/ {0xb2, 898},
-	/*II_0F_B1*/ {0xb3, 898},
-	/*II_0F_B2*/ {0xb4, 907},
-	/*II_0F_B3*/ {0xb0, 912},
-	/*II_0F_B4*/ {0xb4, 917},
-	/*II_0F_B5*/ {0xb4, 922},
-	/*II_0F_B6*/ {0xb5, 927},
-	/*II_0F_B7*/ {0xb6, 927},
-	/*II_0F_B9*/ {0x89, 569},
-	/*II_0F_BB*/ {0xb0, 934},
-	/*II_0F_BE*/ {0xb5, 939},
-	/*II_0F_BF*/ {0xb6, 939},
-	/*II_0F_C0*/ {0xb2, 946},
-	/*II_0F_C1*/ {0xb3, 946},
-	/*II_0F_C3*/ {0xb7, 952},
-	/*II_0F_C8*/ {0xb8, 960},
-	/*II_0F_C8*/ {0xb8, 960},
-	/*II_0F_C8*/ {0xb8, 960},
-	/*II_0F_C8*/ {0xb8, 960},
-	/*II_0F_C8*/ {0xb8, 960},
-	/*II_0F_C8*/ {0xb8, 960},
-	/*II_0F_C8*/ {0xb8, 960},
-	/*II_0F_C8*/ {0xb8, 960},
-	/*II_80_00*/ {0xb9, 11},
-	/*II_80_01*/ {0xba, 27},
-	/*II_80_02*/ {0xbb, 31},
-	/*II_80_03*/ {0xbb, 36},
-	/*II_80_04*/ {0xbc, 41},
-	/*II_80_05*/ {0xb9, 51},
-	/*II_80_06*/ {0xbd, 61},
-	/*II_80_07*/ {0xbe, 71},
-	/*II_81_00*/ {0xbf, 11},
-	/*II_81_01*/ {0xc0, 27},
-	/*II_81_02*/ {0xc1, 31},
-	/*II_81_03*/ {0xc1, 36},
-	/*II_81_04*/ {0xc2, 41},
-	/*II_81_05*/ {0xbf, 51},
-	/*II_81_06*/ {0xc3, 61},
-	/*II_81_07*/ {0xc4, 71},
-	/*II_82_00*/ {0xc5, 11},
-	/*II_82_01*/ {0xc6, 27},
-	/*II_82_02*/ {0xc7, 31},
-	/*II_82_03*/ {0xc7, 36},
-	/*II_82_04*/ {0xc8, 41},
-	/*II_82_05*/ {0xc5, 51},
-	/*II_82_06*/ {0xc9, 61},
-	/*II_82_07*/ {0xca, 71},
-	/*II_83_00*/ {0xcb, 11},
-	/*II_83_01*/ {0xcc, 27},
-	/*II_83_02*/ {0xcd, 31},
-	/*II_83_03*/ {0xcd, 36},
-	/*II_83_04*/ {0xce, 41},
-	/*II_83_05*/ {0xcb, 51},
-	/*II_83_06*/ {0xcf, 61},
-	/*II_83_07*/ {0xd0, 71},
-	/*II_8F_00*/ {0xd1, 22},
-	/*II_C0_00*/ {0xd2, 967},
-	/*II_C0_01*/ {0xd2, 972},
-	/*II_C0_02*/ {0xd3, 977},
-	/*II_C0_03*/ {0xd3, 982},
-	/*II_C0_04*/ {0xd4, 987},
-	/*II_C0_05*/ {0xd4, 992},
-	/*II_C0_06*/ {0xd4, 997},
-	/*II_C0_07*/ {0xd4, 1002},
-	/*II_C1_00*/ {0xd5, 967},
-	/*II_C1_01*/ {0xd5, 972},
-	/*II_C1_02*/ {0xd6, 977},
-	/*II_C1_03*/ {0xd6, 982},
-	/*II_C1_04*/ {0xd7, 987},
-	/*II_C1_05*/ {0xd7, 992},
-	/*II_C1_06*/ {0xd7, 997},
-	/*II_C1_07*/ {0xd7, 1002},
-	/*II_C6_00*/ {0xd8, 218},
-	/*II_C6_F8*/ {0xd9, 1007},
-	/*II_C7_00*/ {0xda, 218},
-	/*II_C7_F8*/ {0xdb, 1015},
-	/*II_D0_00*/ {0xdc, 967},
-	/*II_D0_01*/ {0xdc, 972},
-	/*II_D0_02*/ {0xdd, 977},
-	/*II_D0_03*/ {0xdd, 982},
-	/*II_D0_04*/ {0xde, 987},
-	/*II_D0_05*/ {0xde, 992},
-	/*II_D0_06*/ {0xde, 997},
-	/*II_D0_07*/ {0xde, 1002},
-	/*II_D1_00*/ {0xdf, 967},
-	/*II_D1_01*/ {0xdf, 972},
-	/*II_D1_02*/ {0xe0, 977},
-	/*II_D1_03*/ {0xe0, 982},
-	/*II_D1_04*/ {0xe1, 987},
-	/*II_D1_05*/ {0xe1, 992},
-	/*II_D1_06*/ {0xe1, 997},
-	/*II_D1_07*/ {0xe1, 1002},
-	/*II_D2_00*/ {0xe2, 967},
-	/*II_D2_01*/ {0xe2, 972},
-	/*II_D2_02*/ {0xe3, 977},
-	/*II_D2_03*/ {0xe3, 982},
-	/*II_D2_04*/ {0xe4, 987},
-	/*II_D2_05*/ {0xe4, 992},
-	/*II_D2_06*/ {0xe4, 997},
-	/*II_D2_07*/ {0xe4, 1002},
-	/*II_D3_00*/ {0xe5, 967},
-	/*II_D3_01*/ {0xe5, 972},
-	/*II_D3_02*/ {0xe6, 977},
-	/*II_D3_03*/ {0xe6, 982},
-	/*II_D3_04*/ {0xe7, 987},
-	/*II_D3_05*/ {0xe7, 992},
-	/*II_D3_06*/ {0xe7, 997},
-	/*II_D3_07*/ {0xe7, 1002},
-	/*II_D8_00*/ {0xe8, 1023},
-	/*II_D8_01*/ {0xe8, 1029},
-	/*II_D8_02*/ {0xe8, 1035},
-	/*II_D8_03*/ {0xe8, 1041},
-	/*II_D8_04*/ {0xe8, 1048},
-	/*II_D8_05*/ {0xe8, 1054},
-	/*II_D8_06*/ {0xe8, 1061},
-	/*II_D8_07*/ {0xe8, 1067},
-	/*II_D8_C0*/ {0xe9, 1023},
-	/*II_D8_C0*/ {0xe9, 1023},
-	/*II_D8_C0*/ {0xe9, 1023},
-	/*II_D8_C0*/ {0xe9, 1023},
-	/*II_D8_C0*/ {0xe9, 1023},
-	/*II_D8_C0*/ {0xe9, 1023},
-	/*II_D8_C0*/ {0xe9, 1023},
-	/*II_D8_C0*/ {0xe9, 1023},
-	/*II_D8_C8*/ {0xe9, 1029},
-	/*II_D8_C8*/ {0xe9, 1029},
-	/*II_D8_C8*/ {0xe9, 1029},
-	/*II_D8_C8*/ {0xe9, 1029},
-	/*II_D8_C8*/ {0xe9, 1029},
-	/*II_D8_C8*/ {0xe9, 1029},
-	/*II_D8_C8*/ {0xe9, 1029},
-	/*II_D8_C8*/ {0xe9, 1029},
-	/*II_D8_D0*/ {0xea, 1035},
-	/*II_D8_D0*/ {0xea, 1035},
-	/*II_D8_D0*/ {0xea, 1035},
-	/*II_D8_D0*/ {0xea, 1035},
-	/*II_D8_D0*/ {0xea, 1035},
-	/*II_D8_D0*/ {0xea, 1035},
-	/*II_D8_D0*/ {0xea, 1035},
-	/*II_D8_D0*/ {0xea, 1035},
-	/*II_D8_D8*/ {0xea, 1041},
-	/*II_D8_D9*/ {0xeb, 1041},
-	/*II_D8_D8*/ {0xea, 1041},
-	/*II_D8_D8*/ {0xea, 1041},
-	/*II_D8_D8*/ {0xea, 1041},
-	/*II_D8_D8*/ {0xea, 1041},
-	/*II_D8_D8*/ {0xea, 1041},
-	/*II_D8_D8*/ {0xea, 1041},
-	/*II_D8_E0*/ {0xe9, 1048},
-	/*II_D8_E0*/ {0xe9, 1048},
-	/*II_D8_E0*/ {0xe9, 1048},
-	/*II_D8_E0*/ {0xe9, 1048},
-	/*II_D8_E0*/ {0xe9, 1048},
-	/*II_D8_E0*/ {0xe9, 1048},
-	/*II_D8_E0*/ {0xe9, 1048},
-	/*II_D8_E0*/ {0xe9, 1048},
-	/*II_D8_E8*/ {0xe9, 1054},
-	/*II_D8_E8*/ {0xe9, 1054},
-	/*II_D8_E8*/ {0xe9, 1054},
-	/*II_D8_E8*/ {0xe9, 1054},
-	/*II_D8_E8*/ {0xe9, 1054},
-	/*II_D8_E8*/ {0xe9, 1054},
-	/*II_D8_E8*/ {0xe9, 1054},
-	/*II_D8_E8*/ {0xe9, 1054},
-	/*II_D8_F0*/ {0xe9, 1061},
-	/*II_D8_F0*/ {0xe9, 1061},
-	/*II_D8_F0*/ {0xe9, 1061},
-	/*II_D8_F0*/ {0xe9, 1061},
-	/*II_D8_F0*/ {0xe9, 1061},
-	/*II_D8_F0*/ {0xe9, 1061},
-	/*II_D8_F0*/ {0xe9, 1061},
-	/*II_D8_F0*/ {0xe9, 1061},
-	/*II_D8_F8*/ {0xe9, 1067},
-	/*II_D8_F8*/ {0xe9, 1067},
-	/*II_D8_F8*/ {0xe9, 1067},
-	/*II_D8_F8*/ {0xe9, 1067},
-	/*II_D8_F8*/ {0xe9, 1067},
-	/*II_D8_F8*/ {0xe9, 1067},
-	/*II_D8_F8*/ {0xe9, 1067},
-	/*II_D8_F8*/ {0xe9, 1067},
-	/*II_D9_00*/ {0xe8, 1074},
-	/*II_D9_02*/ {0xec, 1079},
-	/*II_D9_03*/ {0xec, 1084},
-	/*II_D9_04*/ {0xed, 1090},
-	/*II_D9_05*/ {0xee, 1098},
-	/*II_D9_C0*/ {0xea, 1074},
-	/*II_D9_C0*/ {0xea, 1074},
-	/*II_D9_C0*/ {0xea, 1074},
-	/*II_D9_C0*/ {0xea, 1074},
-	/*II_D9_C0*/ {0xea, 1074},
-	/*II_D9_C0*/ {0xea, 1074},
-	/*II_D9_C0*/ {0xea, 1074},
-	/*II_D9_C0*/ {0xea, 1074},
-	/*II_D9_C8*/ {0xea, 1105},
-	/*II_D9_C9*/ {0xeb, 1105},
-	/*II_D9_C8*/ {0xea, 1105},
-	/*II_D9_C8*/ {0xea, 1105},
-	/*II_D9_C8*/ {0xea, 1105},
-	/*II_D9_C8*/ {0xea, 1105},
-	/*II_D9_C8*/ {0xea, 1105},
-	/*II_D9_C8*/ {0xea, 1105},
-	/*II_D9_D0*/ {0xeb, 1111},
-	/*II_D9_E0*/ {0xeb, 1117},
-	/*II_D9_E1*/ {0xeb, 1123},
-	/*II_D9_E4*/ {0xeb, 1129},
-	/*II_D9_E5*/ {0xeb, 1135},
-	/*II_D9_E8*/ {0xeb, 1141},
-	/*II_D9_E9*/ {0xeb, 1147},
-	/*II_D9_EA*/ {0xeb, 1155},
-	/*II_D9_EB*/ {0xeb, 1163},
-	/*II_D9_EC*/ {0xeb, 1170},
-	/*II_D9_ED*/ {0xeb, 1178},
-	/*II_D9_EE*/ {0xeb, 1186},
-	/*II_D9_F0*/ {0xeb, 1192},
-	/*II_D9_F1*/ {0xeb, 1199},
-	/*II_D9_F2*/ {0xeb, 1206},
-	/*II_D9_F3*/ {0xeb, 1213},
-	/*II_D9_F4*/ {0xeb, 1221},
-	/*II_D9_F5*/ {0xeb, 1230},
-	/*II_D9_F6*/ {0xeb, 1238},
-	/*II_D9_F7*/ {0xeb, 1247},
-	/*II_D9_F8*/ {0xeb, 1256},
-	/*II_D9_F9*/ {0xeb, 1263},
-	/*II_D9_FA*/ {0xeb, 1272},
-	/*II_D9_FB*/ {0xeb, 1279},
-	/*II_D9_FC*/ {0xeb, 1288},
-	/*II_D9_FD*/ {0xeb, 1297},
-	/*II_D9_FE*/ {0xeb, 1305},
-	/*II_D9_FF*/ {0xeb, 1311},
-	/*II_DA_00*/ {0xe8, 1317},
-	/*II_DA_01*/ {0xe8, 1324},
-	/*II_DA_02*/ {0xe8, 1331},
-	/*II_DA_03*/ {0xe8, 1338},
-	/*II_DA_04*/ {0xe8, 1346},
-	/*II_DA_05*/ {0xe8, 1353},
-	/*II_DA_06*/ {0xe8, 1361},
-	/*II_DA_07*/ {0xe8, 1368},
-	/*II_DA_C0*/ {0xef, 1376},
-	/*II_DA_C0*/ {0xef, 1376},
-	/*II_DA_C0*/ {0xef, 1376},
-	/*II_DA_C0*/ {0xef, 1376},
-	/*II_DA_C0*/ {0xef, 1376},
-	/*II_DA_C0*/ {0xef, 1376},
-	/*II_DA_C0*/ {0xef, 1376},
-	/*II_DA_C0*/ {0xef, 1376},
-	/*II_DA_C8*/ {0xf0, 1384},
-	/*II_DA_C8*/ {0xf0, 1384},
-	/*II_DA_C8*/ {0xf0, 1384},
-	/*II_DA_C8*/ {0xf0, 1384},
-	/*II_DA_C8*/ {0xf0, 1384},
-	/*II_DA_C8*/ {0xf0, 1384},
-	/*II_DA_C8*/ {0xf0, 1384},
-	/*II_DA_C8*/ {0xf0, 1384},
-	/*II_DA_D0*/ {0xf1, 1392},
-	/*II_DA_D0*/ {0xf1, 1392},
-	/*II_DA_D0*/ {0xf1, 1392},
-	/*II_DA_D0*/ {0xf1, 1392},
-	/*II_DA_D0*/ {0xf1, 1392},
-	/*II_DA_D0*/ {0xf1, 1392},
-	/*II_DA_D0*/ {0xf1, 1392},
-	/*II_DA_D0*/ {0xf1, 1392},
-	/*II_DA_D8*/ {0xf2, 1401},
-	/*II_DA_D8*/ {0xf2, 1401},
-	/*II_DA_D8*/ {0xf2, 1401},
-	/*II_DA_D8*/ {0xf2, 1401},
-	/*II_DA_D8*/ {0xf2, 1401},
-	/*II_DA_D8*/ {0xf2, 1401},
-	/*II_DA_D8*/ {0xf2, 1401},
-	/*II_DA_D8*/ {0xf2, 1401},
-	/*II_DA_E9*/ {0xeb, 1409},
-	/*II_DB_00*/ {0xe8, 1418},
-	/*II_DB_01*/ {0xf3, 1424},
-	/*II_DB_02*/ {0xec, 1432},
-	/*II_DB_03*/ {0xec, 1438},
-	/*II_DB_05*/ {0xf4, 1074},
-	/*II_DB_07*/ {0xf5, 1084},
-	/*II_DB_C0*/ {0xef, 1445},
-	/*II_DB_C0*/ {0xef, 1445},
-	/*II_DB_C0*/ {0xef, 1445},
-	/*II_DB_C0*/ {0xef, 1445},
-	/*II_DB_C0*/ {0xef, 1445},
-	/*II_DB_C0*/ {0xef, 1445},
-	/*II_DB_C0*/ {0xef, 1445},
-	/*II_DB_C0*/ {0xef, 1445},
-	/*II_DB_C8*/ {0xf0, 1454},
-	/*II_DB_C8*/ {0xf0, 1454},
-	/*II_DB_C8*/ {0xf0, 1454},
-	/*II_DB_C8*/ {0xf0, 1454},
-	/*II_DB_C8*/ {0xf0, 1454},
-	/*II_DB_C8*/ {0xf0, 1454},
-	/*II_DB_C8*/ {0xf0, 1454},
-	/*II_DB_C8*/ {0xf0, 1454},
-	/*II_DB_D0*/ {0xf1, 1463},
-	/*II_DB_D0*/ {0xf1, 1463},
-	/*II_DB_D0*/ {0xf1, 1463},
-	/*II_DB_D0*/ {0xf1, 1463},
-	/*II_DB_D0*/ {0xf1, 1463},
-	/*II_DB_D0*/ {0xf1, 1463},
-	/*II_DB_D0*/ {0xf1, 1463},
-	/*II_DB_D0*/ {0xf1, 1463},
-	/*II_DB_D8*/ {0xf2, 1473},
-	/*II_DB_D8*/ {0xf2, 1473},
-	/*II_DB_D8*/ {0xf2, 1473},
-	/*II_DB_D8*/ {0xf2, 1473},
-	/*II_DB_D8*/ {0xf2, 1473},
-	/*II_DB_D8*/ {0xf2, 1473},
-	/*II_DB_D8*/ {0xf2, 1473},
-	/*II_DB_D8*/ {0xf2, 1473},
-	/*II_DB_E0*/ {0xeb, 1482},
-	/*II_DB_E1*/ {0xeb, 1488},
-	/*II_DB_E4*/ {0xeb, 1496},
-	/*II_DB_E8*/ {0xf6, 1504},
-	/*II_DB_E8*/ {0xf6, 1504},
-	/*II_DB_E8*/ {0xf6, 1504},
-	/*II_DB_E8*/ {0xf6, 1504},
-	/*II_DB_E8*/ {0xf6, 1504},
-	/*II_DB_E8*/ {0xf6, 1504},
-	/*II_DB_E8*/ {0xf6, 1504},
-	/*II_DB_E8*/ {0xf6, 1504},
-	/*II_DB_F0*/ {0xf7, 1512},
-	/*II_DB_F0*/ {0xf7, 1512},
-	/*II_DB_F0*/ {0xf7, 1512},
-	/*II_DB_F0*/ {0xf7, 1512},
-	/*II_DB_F0*/ {0xf7, 1512},
-	/*II_DB_F0*/ {0xf7, 1512},
-	/*II_DB_F0*/ {0xf7, 1512},
-	/*II_DB_F0*/ {0xf7, 1512},
-	/*II_DC_00*/ {0xf8, 1023},
-	/*II_DC_01*/ {0xf8, 1029},
-	/*II_DC_02*/ {0xf8, 1035},
-	/*II_DC_03*/ {0xf8, 1041},
-	/*II_DC_04*/ {0xf8, 1048},
-	/*II_DC_05*/ {0xf8, 1054},
-	/*II_DC_06*/ {0xf8, 1061},
-	/*II_DC_07*/ {0xf8, 1067},
-	/*II_DC_C0*/ {0xf9, 1023},
-	/*II_DC_C0*/ {0xf9, 1023},
-	/*II_DC_C0*/ {0xf9, 1023},
-	/*II_DC_C0*/ {0xf9, 1023},
-	/*II_DC_C0*/ {0xf9, 1023},
-	/*II_DC_C0*/ {0xf9, 1023},
-	/*II_DC_C0*/ {0xf9, 1023},
-	/*II_DC_C0*/ {0xf9, 1023},
-	/*II_DC_C8*/ {0xf9, 1029},
-	/*II_DC_C8*/ {0xf9, 1029},
-	/*II_DC_C8*/ {0xf9, 1029},
-	/*II_DC_C8*/ {0xf9, 1029},
-	/*II_DC_C8*/ {0xf9, 1029},
-	/*II_DC_C8*/ {0xf9, 1029},
-	/*II_DC_C8*/ {0xf9, 1029},
-	/*II_DC_C8*/ {0xf9, 1029},
-	/*II_DC_E0*/ {0xf9, 1054},
-	/*II_DC_E0*/ {0xf9, 1054},
-	/*II_DC_E0*/ {0xf9, 1054},
-	/*II_DC_E0*/ {0xf9, 1054},
-	/*II_DC_E0*/ {0xf9, 1054},
-	/*II_DC_E0*/ {0xf9, 1054},
-	/*II_DC_E0*/ {0xf9, 1054},
-	/*II_DC_E0*/ {0xf9, 1054},
-	/*II_DC_E8*/ {0xf9, 1048},
-	/*II_DC_E8*/ {0xf9, 1048},
-	/*II_DC_E8*/ {0xf9, 1048},
-	/*II_DC_E8*/ {0xf9, 1048},
-	/*II_DC_E8*/ {0xf9, 1048},
-	/*II_DC_E8*/ {0xf9, 1048},
-	/*II_DC_E8*/ {0xf9, 1048},
-	/*II_DC_E8*/ {0xf9, 1048},
-	/*II_DC_F0*/ {0xf9, 1067},
-	/*II_DC_F0*/ {0xf9, 1067},
-	/*II_DC_F0*/ {0xf9, 1067},
-	/*II_DC_F0*/ {0xf9, 1067},
-	/*II_DC_F0*/ {0xf9, 1067},
-	/*II_DC_F0*/ {0xf9, 1067},
-	/*II_DC_F0*/ {0xf9, 1067},
-	/*II_DC_F0*/ {0xf9, 1067},
-	/*II_DC_F8*/ {0xf9, 1061},
-	/*II_DC_F8*/ {0xf9, 1061},
-	/*II_DC_F8*/ {0xf9, 1061},
-	/*II_DC_F8*/ {0xf9, 1061},
-	/*II_DC_F8*/ {0xf9, 1061},
-	/*II_DC_F8*/ {0xf9, 1061},
-	/*II_DC_F8*/ {0xf9, 1061},
-	/*II_DC_F8*/ {0xf9, 1061},
-	/*II_DD_00*/ {0xf8, 1074},
-	/*II_DD_01*/ {0xfa, 1424},
-	/*II_DD_02*/ {0xfb, 1079},
-	/*II_DD_03*/ {0xfb, 1084},
-	/*II_DD_04*/ {0xed, 1519},
-	/*II_DD_C0*/ {0xea, 1527},
-	/*II_DD_C0*/ {0xea, 1527},
-	/*II_DD_C0*/ {0xea, 1527},
-	/*II_DD_C0*/ {0xea, 1527},
-	/*II_DD_C0*/ {0xea, 1527},
-	/*II_DD_C0*/ {0xea, 1527},
-	/*II_DD_C0*/ {0xea, 1527},
-	/*II_DD_C0*/ {0xea, 1527},
-	/*II_DD_D0*/ {0xea, 1079},
-	/*II_DD_D0*/ {0xea, 1079},
-	/*II_DD_D0*/ {0xea, 1079},
-	/*II_DD_D0*/ {0xea, 1079},
-	/*II_DD_D0*/ {0xea, 1079},
-	/*II_DD_D0*/ {0xea, 1079},
-	/*II_DD_D0*/ {0xea, 1079},
-	/*II_DD_D0*/ {0xea, 1079},
-	/*II_DD_D8*/ {0xea, 1084},
-	/*II_DD_D8*/ {0xea, 1084},
-	/*II_DD_D8*/ {0xea, 1084},
-	/*II_DD_D8*/ {0xea, 1084},
-	/*II_DD_D8*/ {0xea, 1084},
-	/*II_DD_D8*/ {0xea, 1084},
-	/*II_DD_D8*/ {0xea, 1084},
-	/*II_DD_D8*/ {0xea, 1084},
-	/*II_DD_E0*/ {0xf9, 1534},
-	/*II_DD_E1*/ {0xeb, 1534},
-	/*II_DD_E0*/ {0xf9, 1534},
-	/*II_DD_E0*/ {0xf9, 1534},
-	/*II_DD_E0*/ {0xf9, 1534},
-	/*II_DD_E0*/ {0xf9, 1534},
-	/*II_DD_E0*/ {0xf9, 1534},
-	/*II_DD_E0*/ {0xf9, 1534},
-	/*II_DD_E8*/ {0xea, 1541},
-	/*II_DD_E9*/ {0xeb, 1541},
-	/*II_DD_E8*/ {0xea, 1541},
-	/*II_DD_E8*/ {0xea, 1541},
-	/*II_DD_E8*/ {0xea, 1541},
-	/*II_DD_E8*/ {0xea, 1541},
-	/*II_DD_E8*/ {0xea, 1541},
-	/*II_DD_E8*/ {0xea, 1541},
-	/*II_DE_00*/ {0xee, 1317},
-	/*II_DE_01*/ {0xee, 1324},
-	/*II_DE_02*/ {0xee, 1331},
-	/*II_DE_03*/ {0xee, 1338},
-	/*II_DE_04*/ {0xee, 1346},
-	/*II_DE_05*/ {0xee, 1353},
-	/*II_DE_06*/ {0xee, 1361},
-	/*II_DE_07*/ {0xee, 1368},
-	/*II_DE_C0*/ {0xf9, 1549},
-	/*II_DE_C1*/ {0xeb, 1549},
-	/*II_DE_C0*/ {0xf9, 1549},
-	/*II_DE_C0*/ {0xf9, 1549},
-	/*II_DE_C0*/ {0xf9, 1549},
-	/*II_DE_C0*/ {0xf9, 1549},
-	/*II_DE_C0*/ {0xf9, 1549},
-	/*II_DE_C0*/ {0xf9, 1549},
-	/*II_DE_C8*/ {0xf9, 1556},
-	/*II_DE_C9*/ {0xeb, 1556},
-	/*II_DE_C8*/ {0xf9, 1556},
-	/*II_DE_C8*/ {0xf9, 1556},
-	/*II_DE_C8*/ {0xf9, 1556},
-	/*II_DE_C8*/ {0xf9, 1556},
-	/*II_DE_C8*/ {0xf9, 1556},
-	/*II_DE_C8*/ {0xf9, 1556},
-	/*II_DE_D9*/ {0xeb, 1563},
-	/*II_DE_E0*/ {0xf9, 1571},
-	/*II_DE_E1*/ {0xeb, 1571},
-	/*II_DE_E0*/ {0xf9, 1571},
-	/*II_DE_E0*/ {0xf9, 1571},
-	/*II_DE_E0*/ {0xf9, 1571},
-	/*II_DE_E0*/ {0xf9, 1571},
-	/*II_DE_E0*/ {0xf9, 1571},
-	/*II_DE_E0*/ {0xf9, 1571},
-	/*II_DE_E8*/ {0xf9, 1579},
-	/*II_DE_E9*/ {0xeb, 1579},
-	/*II_DE_E8*/ {0xf9, 1579},
-	/*II_DE_E8*/ {0xf9, 1579},
-	/*II_DE_E8*/ {0xf9, 1579},
-	/*II_DE_E8*/ {0xf9, 1579},
-	/*II_DE_E8*/ {0xf9, 1579},
-	/*II_DE_E8*/ {0xf9, 1579},
-	/*II_DE_F0*/ {0xf9, 1586},
-	/*II_DE_F1*/ {0xeb, 1586},
-	/*II_DE_F0*/ {0xf9, 1586},
-	/*II_DE_F0*/ {0xf9, 1586},
-	/*II_DE_F0*/ {0xf9, 1586},
-	/*II_DE_F0*/ {0xf9, 1586},
-	/*II_DE_F0*/ {0xf9, 1586},
-	/*II_DE_F0*/ {0xf9, 1586},
-	/*II_DE_F8*/ {0xf9, 1594},
-	/*II_DE_F9*/ {0xeb, 1594},
-	/*II_DE_F8*/ {0xf9, 1594},
-	/*II_DE_F8*/ {0xf9, 1594},
-	/*II_DE_F8*/ {0xf9, 1594},
-	/*II_DE_F8*/ {0xf9, 1594},
-	/*II_DE_F8*/ {0xf9, 1594},
-	/*II_DE_F8*/ {0xf9, 1594},
-	/*II_DF_00*/ {0xee, 1418},
-	/*II_DF_01*/ {0xfc, 1424},
-	/*II_DF_02*/ {0xfd, 1432},
-	/*II_DF_03*/ {0xfd, 1438},
-	/*II_DF_04*/ {0xf4, 1601},
-	/*II_DF_05*/ {0xf8, 1418},
-	/*II_DF_06*/ {0xf5, 1607},
-	/*II_DF_07*/ {0xfb, 1438},
-	/*II_DF_E8*/ {0xf6, 1614},
-	/*II_DF_E8*/ {0xf6, 1614},
-	/*II_DF_E8*/ {0xf6, 1614},
-	/*II_DF_E8*/ {0xf6, 1614},
-	/*II_DF_E8*/ {0xf6, 1614},
-	/*II_DF_E8*/ {0xf6, 1614},
-	/*II_DF_E8*/ {0xf6, 1614},
-	/*II_DF_E8*/ {0xf6, 1614},
-	/*II_DF_F0*/ {0xf6, 1623},
-	/*II_DF_F0*/ {0xf6, 1623},
-	/*II_DF_F0*/ {0xf6, 1623},
-	/*II_DF_F0*/ {0xf6, 1623},
-	/*II_DF_F0*/ {0xf6, 1623},
-	/*II_DF_F0*/ {0xf6, 1623},
-	/*II_DF_F0*/ {0xf6, 1623},
-	/*II_DF_F0*/ {0xf6, 1623},
-	/*II_F6_00*/ {0xfe, 206},
-	/*II_F6_02*/ {0xff, 1631},
-	/*II_F6_03*/ {0x100, 1636},
-	/*II_F6_04*/ {0x101, 1641},
-	/*II_F6_05*/ {0x101, 117},
-	/*II_F6_06*/ {0x102, 1646},
-	/*II_F6_07*/ {0x102, 1651},
-	/*II_F7_00*/ {0x103, 206},
-	/*II_F7_02*/ {0x104, 1631},
-	/*II_F7_03*/ {0x105, 1636},
-	/*II_F7_04*/ {0x106, 1641},
-	/*II_F7_05*/ {0x106, 117},
-	/*II_F7_06*/ {0x107, 1646},
-	/*II_F7_07*/ {0x107, 1651},
-	/*II_FE_00*/ {0x108, 81},
-	/*II_FE_01*/ {0x108, 86},
-	/*II_FF_00*/ {0x109, 81},
-	/*II_FF_01*/ {0x109, 86},
-	/*II_FF_02*/ {0x10a, 456},
-	/*II_FF_03*/ {0x10b, 260},
-	/*II_FF_04*/ {0x10c, 462},
-	/*II_FF_05*/ {0x10d, 467},
-	/*II_FF_06*/ {0x10e, 16},
-	/*II_0F_00_00*/ {0x10f, 1657},
-	/*II_0F_00_01*/ {0x110, 1663},
-	/*II_0F_00_02*/ {0x110, 34436},
-	/*II_0F_00_03*/ {0x111, 34442},
-	/*II_0F_00_04*/ {0x112, 1679},
-	/*II_0F_00_05*/ {0x112, 1685},
-	/*II_0F_01_00*/ {0x113, 1691},
-	/*II_0F_01_01*/ {0x113, 1697},
-	/*II_0F_01_02*/ {0x113, 34471},
-	/*II_0F_01_03*/ {0x113, 34477},
-	/*II_0F_01_04*/ {0x114, 1715},
-	/*II_0F_01_06*/ {0x115, 34489},
-	/*II_0F_01_07*/ {0x116, 34495},
-	/*II_0F_01_C1*/ {0x117, 1735},
-	/*II_0F_01_C2*/ {0x117, 1743},
-	/*II_0F_01_C3*/ {0x117, 1753},
-	/*II_0F_01_C4*/ {0x117, 1763},
-	/*II_0F_01_C8*/ {0x118, 1771},
-	/*II_0F_01_C9*/ {0x118, 1780},
-	/*II_0F_01_D0*/ {0x88, 1787},
-	/*II_0F_01_D1*/ {0x88, 1795},
-	/*II_0F_01_D4*/ {0x117, 1803},
-	/*II_0F_01_D5*/ {0x119, 1811},
-	/*II_0F_01_D8*/ {0x11a, 1817},
-	/*II_0F_01_D9*/ {0x11b, 1824},
-	/*II_0F_01_DA*/ {0x11c, 1833},
-	/*II_0F_01_DB*/ {0x11c, 1841},
-	/*II_0F_01_DC*/ {0x11b, 1849},
-	/*II_0F_01_DD*/ {0x11b, 1855},
-	/*II_0F_01_DE*/ {0x11c, 1861},
-	/*II_0F_01_DF*/ {0x11d, 1869},
-	/*II_0F_01_F8*/ {0x11e, 1878},
-	/*II_0F_01_F9*/ {0x11e, 1886},
-	/*II_0F_0D_00*/ {0x11f, 1894},
-	/*II_0F_0D_01*/ {0x11f, 1904},
-	/*II_0F_0F_0C*/ {0x120, 1915},
-	/*II_0F_0F_0D*/ {0x121, 1922},
-	/*II_0F_0F_1C*/ {0x120, 1929},
-	/*II_0F_0F_1D*/ {0x121, 1936},
-	/*II_0F_0F_8A*/ {0x120, 1943},
-	/*II_0F_0F_8E*/ {0x120, 1951},
-	/*II_0F_0F_90*/ {0x121, 1960},
-	/*II_0F_0F_94*/ {0x121, 1969},
-	/*II_0F_0F_96*/ {0x121, 1976},
-	/*II_0F_0F_97*/ {0x121, 1983},
-	/*II_0F_0F_9A*/ {0x121, 1992},
-	/*II_0F_0F_9E*/ {0x121, 1999},
-	/*II_0F_0F_A0*/ {0x121, 2006},
-	/*II_0F_0F_A4*/ {0x121, 2015},
-	/*II_0F_0F_A6*/ {0x121, 2022},
-	/*II_0F_0F_A7*/ {0x121, 2032},
-	/*II_0F_0F_AA*/ {0x121, 2042},
-	/*II_0F_0F_AE*/ {0x121, 2050},
-	/*II_0F_0F_B0*/ {0x121, 2057},
-	/*II_0F_0F_B4*/ {0x121, 2066},
-	/*II_0F_0F_B6*/ {0x121, 2073},
-	/*II_0F_0F_B7*/ {0x121, 2083},
-	/*II_0F_0F_BB*/ {0x120, 2092},
-	/*II_0F_0F_BF*/ {0x121, 2100},
-	/*II_0F_10*/ {0x122, 2109},
-	/*II_66_0F_10*/ {0x123, 2117},
-	/*II_F3_0F_10*/ {0x124, 2125},
-	/*II_F2_0F_10*/ {0x125, 2132},
-	/*II_0F_11*/ {0x12a, 2109},
-	/*II_66_0F_11*/ {0x12b, 2117},
-	/*II_F3_0F_11*/ {0x12c, 2125},
-	/*II_F2_0F_11*/ {0x12d, 2132},
-	/*II_66_0F_12*/ {0x132, 2190},
-	/*II_F3_0F_12*/ {0x133, 2198},
-	/*II_F2_0F_12*/ {0x133, 2208},
-	/*II_0F_13*/ {0x137, 2182},
-	/*II_66_0F_13*/ {0x138, 2190},
-	/*II_0F_14*/ {0x13a, 2266},
-	/*II_66_0F_14*/ {0x13b, 2276},
-	/*II_0F_15*/ {0x13a, 2308},
-	/*II_66_0F_15*/ {0x13b, 2318},
-	/*II_66_0F_16*/ {0x132, 2367},
-	/*II_F3_0F_16*/ {0x13d, 2375},
-	/*II_0F_17*/ {0x137, 2359},
-	/*II_66_0F_17*/ {0x138, 2367},
-	/*II_0F_18_00*/ {0x13e, 2424},
-	/*II_0F_18_01*/ {0x13e, 2437},
-	/*II_0F_18_02*/ {0x13e, 2449},
-	/*II_0F_18_03*/ {0x13e, 2461},
-	/*II_0F_28*/ {0x122, 2473},
-	/*II_66_0F_28*/ {0x123, 2481},
-	/*II_0F_29*/ {0x12a, 2473},
-	/*II_66_0F_29*/ {0x12b, 2481},
-	/*II_0F_2A*/ {0x13f, 2507},
-	/*II_66_0F_2A*/ {0x140, 2517},
-	/*II_F3_0F_2A*/ {0x141, 2527},
-	/*II_F2_0F_2A*/ {0x142, 2537},
-	/*II_0F_2B*/ {0x143, 2569},
-	/*II_66_0F_2B*/ {0x144, 2578},
-	/*II_F3_0F_2B*/ {0x145, 2587},
-	/*II_F2_0F_2B*/ {0x146, 2596},
-	/*II_0F_2C*/ {0x148, 2625},
-	/*II_66_0F_2C*/ {0x149, 2636},
-	/*II_F3_0F_2C*/ {0x14a, 2647},
-	/*II_F2_0F_2C*/ {0x14b, 2658},
-	/*II_0F_2D*/ {0x148, 2693},
-	/*II_66_0F_2D*/ {0x13b, 2703},
-	/*II_F3_0F_2D*/ {0x14a, 2713},
-	/*II_F2_0F_2D*/ {0x14b, 2723},
-	/*II_0F_2E*/ {0x14d, 2755},
-	/*II_66_0F_2E*/ {0x14e, 2764},
-	/*II_0F_2F*/ {0x14d, 2793},
-	/*II_66_0F_2F*/ {0x14e, 2801},
-	/*II_0F_50*/ {0x151, 2827},
-	/*II_66_0F_50*/ {0x152, 2837},
-	/*II_0F_51*/ {0x13a, 2869},
-	/*II_66_0F_51*/ {0x13b, 2877},
-	/*II_F3_0F_51*/ {0x154, 2885},
-	/*II_F2_0F_51*/ {0x14e, 2893},
-	/*II_0F_52*/ {0x13a, 2937},
-	/*II_F3_0F_52*/ {0x154, 2946},
-	/*II_0F_53*/ {0x13a, 2975},
-	/*II_F3_0F_53*/ {0x154, 2982},
-	/*II_0F_54*/ {0x13a, 3005},
-	/*II_66_0F_54*/ {0x13b, 3012},
-	/*II_0F_55*/ {0x13a, 3035},
-	/*II_66_0F_55*/ {0x13b, 3043},
-	/*II_0F_56*/ {0x13a, 3069},
-	/*II_66_0F_56*/ {0x13b, 3075},
-	/*II_0F_57*/ {0x13a, 3095},
-	/*II_66_0F_57*/ {0x13b, 3102},
-	/*II_0F_58*/ {0x13a, 3125},
-	/*II_66_0F_58*/ {0x13b, 3132},
-	/*II_F3_0F_58*/ {0x154, 3139},
-	/*II_F2_0F_58*/ {0x14e, 3146},
-	/*II_0F_59*/ {0x13a, 3185},
-	/*II_66_0F_59*/ {0x13b, 3192},
-	/*II_F3_0F_59*/ {0x154, 3199},
-	/*II_F2_0F_59*/ {0x14e, 3206},
-	/*II_0F_5A*/ {0x14e, 3245},
-	/*II_66_0F_5A*/ {0x13b, 3255},
-	/*II_F3_0F_5A*/ {0x155, 3265},
-	/*II_F2_0F_5A*/ {0x14e, 3275},
-	/*II_0F_5B*/ {0x13b, 3329},
-	/*II_66_0F_5B*/ {0x13b, 3339},
-	/*II_F3_0F_5B*/ {0x13b, 3349},
-	/*II_0F_5C*/ {0x13a, 3394},
-	/*II_66_0F_5C*/ {0x13b, 3401},
-	/*II_F3_0F_5C*/ {0x154, 3408},
-	/*II_F2_0F_5C*/ {0x14e, 3415},
-	/*II_0F_5D*/ {0x13a, 3454},
-	/*II_66_0F_5D*/ {0x13b, 3461},
-	/*II_F3_0F_5D*/ {0x154, 3468},
-	/*II_F2_0F_5D*/ {0x14e, 3475},
-	/*II_0F_5E*/ {0x13a, 3514},
-	/*II_66_0F_5E*/ {0x13b, 3521},
-	/*II_F3_0F_5E*/ {0x154, 3528},
-	/*II_F2_0F_5E*/ {0x14e, 3535},
-	/*II_0F_5F*/ {0x13a, 3574},
-	/*II_66_0F_5F*/ {0x13b, 3581},
-	/*II_F3_0F_5F*/ {0x154, 3588},
-	/*II_F2_0F_5F*/ {0x14e, 3595},
-	/*II_0F_60*/ {0x158, 3634},
-	/*II_66_0F_60*/ {0x13b, 3634},
-	/*II_0F_61*/ {0x158, 3657},
-	/*II_66_0F_61*/ {0x13b, 3657},
-	/*II_0F_62*/ {0x158, 3680},
-	/*II_66_0F_62*/ {0x13b, 3680},
-	/*II_0F_63*/ {0x159, 3703},
-	/*II_66_0F_63*/ {0x13b, 3703},
-	/*II_0F_64*/ {0x159, 3724},
-	/*II_66_0F_64*/ {0x13b, 3724},
-	/*II_0F_65*/ {0x159, 3743},
-	/*II_66_0F_65*/ {0x13b, 3743},
-	/*II_0F_66*/ {0x159, 3762},
-	/*II_66_0F_66*/ {0x13b, 3762},
-	/*II_0F_67*/ {0x159, 3781},
-	/*II_66_0F_67*/ {0x13b, 3781},
-	/*II_0F_68*/ {0x159, 3802},
-	/*II_66_0F_68*/ {0x13b, 3802},
-	/*II_0F_69*/ {0x159, 3825},
-	/*II_66_0F_69*/ {0x13b, 3825},
-	/*II_0F_6A*/ {0x159, 3848},
-	/*II_66_0F_6A*/ {0x13b, 3848},
-	/*II_0F_6B*/ {0x159, 3871},
-	/*II_66_0F_6B*/ {0x13b, 3871},
-	/*II_66_0F_6C*/ {0x13b, 3892},
-	/*II_66_0F_6D*/ {0x13b, 3917},
-	/*II_0F_6F*/ {0x15d, 3948},
-	/*II_66_0F_6F*/ {0x123, 3968},
-	/*II_F3_0F_6F*/ {0x123, 3976},
-	/*II_0F_74*/ {0x159, 4065},
-	/*II_66_0F_74*/ {0x13b, 4065},
-	/*II_0F_75*/ {0x159, 4084},
-	/*II_66_0F_75*/ {0x13b, 4084},
-	/*II_0F_76*/ {0x159, 4103},
-	/*II_66_0F_76*/ {0x13b, 4103},
-	/*II_0F_77*/ {0x161, 4122},
-	/*II_0F_78*/ {0x163, 4150},
-	/*II_0F_79*/ {0x166, 4174},
-	/*II_66_0F_79*/ {0x167, 4158},
-	/*II_F2_0F_79*/ {0x168, 4165},
-	/*II_0F_7A_30*/ {0x169, 4183},
-	/*II_0F_7A_31*/ {0x16a, 4193},
-	/*II_66_0F_7C*/ {0x16b, 4203},
-	/*II_F2_0F_7C*/ {0x16b, 4211},
-	/*II_66_0F_7D*/ {0x16b, 4237},
-	/*II_F2_0F_7D*/ {0x16b, 4245},
-	/*II_F3_0F_7E*/ {0x125, 3948},
-	/*II_0F_7F*/ {0x16f, 3948},
-	/*II_66_0F_7F*/ {0x12b, 3968},
-	/*II_F3_0F_7F*/ {0x12b, 3976},
-	/*II_F3_0F_B8*/ {0x173, 4360},
-	/*II_0F_BA_04*/ {0x174, 872},
-	/*II_0F_BA_05*/ {0x175, 887},
-	/*II_0F_BA_06*/ {0x175, 912},
-	/*II_0F_BA_07*/ {0x175, 934},
-	/*II_0F_BC*/ {0x176, 4368},
-	/*II_F3_0F_BC*/ {0x177, 4373},
-	/*II_0F_BD*/ {0x176, 4380},
-	/*II_F3_0F_BD*/ {0x178, 4385},
-	/*II_0F_C7_07*/ {0x188, 6407},
-	/*II_66_0F_D0*/ {0x16b, 6416},
-	/*II_F2_0F_D0*/ {0x16b, 6426},
-	/*II_0F_D1*/ {0x159, 6458},
-	/*II_66_0F_D1*/ {0x13b, 6458},
-	/*II_0F_D2*/ {0x159, 6473},
-	/*II_66_0F_D2*/ {0x13b, 6473},
-	/*II_0F_D3*/ {0x159, 6488},
-	/*II_66_0F_D3*/ {0x13b, 6488},
-	/*II_0F_D4*/ {0x14e, 6503},
-	/*II_66_0F_D4*/ {0x13b, 6503},
-	/*II_0F_D5*/ {0x159, 6518},
-	/*II_66_0F_D5*/ {0x13b, 6518},
-	/*II_66_0F_D6*/ {0x12d, 3948},
-	/*II_F3_0F_D6*/ {0x189, 6535},
-	/*II_F2_0F_D6*/ {0x18a, 6544},
-	/*II_0F_D7*/ {0x18c, 6553},
-	/*II_66_0F_D7*/ {0x18d, 6553},
-	/*II_0F_D8*/ {0x159, 6574},
-	/*II_66_0F_D8*/ {0x13b, 6574},
-	/*II_0F_D9*/ {0x159, 6593},
-	/*II_66_0F_D9*/ {0x13b, 6593},
-	/*II_0F_DA*/ {0x18f, 6612},
-	/*II_66_0F_DA*/ {0x13b, 6612},
-	/*II_0F_DB*/ {0x159, 6629},
-	/*II_66_0F_DB*/ {0x13b, 6629},
-	/*II_0F_DC*/ {0x159, 6642},
-	/*II_66_0F_DC*/ {0x13b, 6642},
-	/*II_0F_DD*/ {0x159, 6661},
-	/*II_66_0F_DD*/ {0x13b, 6661},
-	/*II_0F_DE*/ {0x18f, 6670},
-	/*II_66_0F_DE*/ {0x13b, 6670},
-	/*II_0F_DF*/ {0x159, 6687},
-	/*II_66_0F_DF*/ {0x13b, 6687},
-	/*II_0F_E0*/ {0x18f, 6702},
-	/*II_66_0F_E0*/ {0x13b, 6702},
-	/*II_0F_E1*/ {0x159, 6717},
-	/*II_66_0F_E1*/ {0x13b, 6717},
-	/*II_0F_E2*/ {0x159, 6732},
-	/*II_66_0F_E2*/ {0x13b, 6732},
-	/*II_0F_E3*/ {0x18f, 6747},
-	/*II_66_0F_E3*/ {0x13b, 6747},
-	/*II_0F_E4*/ {0x18f, 6762},
-	/*II_66_0F_E4*/ {0x13b, 6762},
-	/*II_0F_E5*/ {0x159, 6781},
-	/*II_66_0F_E5*/ {0x13b, 6781},
-	/*II_66_0F_E6*/ {0x13b, 6798},
-	/*II_F3_0F_E6*/ {0x14e, 6809},
-	/*II_F2_0F_E6*/ {0x13b, 6819},
-	/*II_0F_E7*/ {0x190, 6863},
-	/*II_66_0F_E7*/ {0x144, 6871},
-	/*II_0F_E8*/ {0x159, 6890},
-	/*II_66_0F_E8*/ {0x13b, 6890},
-	/*II_0F_E9*/ {0x159, 6907},
-	/*II_66_0F_E9*/ {0x13b, 6907},
-	/*II_0F_EA*/ {0x18f, 6924},
-	/*II_66_0F_EA*/ {0x13b, 6924},
-	/*II_0F_EB*/ {0x159, 6941},
-	/*II_66_0F_EB*/ {0x13b, 6941},
-	/*II_0F_EC*/ {0x159, 6952},
-	/*II_66_0F_EC*/ {0x13b, 6952},
-	/*II_0F_ED*/ {0x159, 6969},
-	/*II_66_0F_ED*/ {0x13b, 6969},
-	/*II_0F_EE*/ {0x18f, 6986},
-	/*II_66_0F_EE*/ {0x13b, 6986},
-	/*II_0F_EF*/ {0x159, 7003},
-	/*II_66_0F_EF*/ {0x13b, 7003},
-	/*II_F2_0F_F0*/ {0x191, 7016},
-	/*II_0F_F1*/ {0x159, 7031},
-	/*II_66_0F_F1*/ {0x13b, 7031},
-	/*II_0F_F2*/ {0x159, 7046},
-	/*II_66_0F_F2*/ {0x13b, 7046},
-	/*II_0F_F3*/ {0x159, 7061},
-	/*II_66_0F_F3*/ {0x13b, 7061},
-	/*II_0F_F4*/ {0x193, 7076},
-	/*II_66_0F_F4*/ {0x13b, 7076},
-	/*II_0F_F5*/ {0x159, 7095},
-	/*II_66_0F_F5*/ {0x13b, 7095},
-	/*II_0F_F6*/ {0x18f, 7114},
-	/*II_66_0F_F6*/ {0x13b, 7114},
-	/*II_0F_F7*/ {0x194, 7131},
-	/*II_66_0F_F7*/ {0x195, 7141},
-	/*II_0F_F8*/ {0x159, 7166},
-	/*II_66_0F_F8*/ {0x13b, 7166},
-	/*II_0F_F9*/ {0x159, 7181},
-	/*II_66_0F_F9*/ {0x13b, 7181},
-	/*II_0F_FA*/ {0x159, 7196},
-	/*II_66_0F_FA*/ {0x13b, 7196},
-	/*II_0F_FB*/ {0x193, 7211},
-	/*II_66_0F_FB*/ {0x13b, 7211},
-	/*II_0F_FC*/ {0x159, 7226},
-	/*II_66_0F_FC*/ {0x13b, 7226},
-	/*II_0F_FD*/ {0x159, 7241},
-	/*II_66_0F_FD*/ {0x13b, 7241},
-	/*II_0F_FE*/ {0x159, 7256},
-	/*II_66_0F_FE*/ {0x13b, 7256},
-	/*II_D9_06*/ {0x197, 7271},
-	/*II_9B_D9_06*/ {0x198, 7280},
-	/*II_D9_07*/ {0xfd, 7288},
-	/*II_9B_D9_07*/ {0x199, 7296},
-	/*II_DB_E2*/ {0xeb, 7303},
-	/*II_9B_DB_E2*/ {0x19a, 7311},
-	/*II_DB_E3*/ {0xeb, 7318},
-	/*II_9B_DB_E3*/ {0x19a, 7326},
-	/*II_DD_06*/ {0x197, 7333},
-	/*II_9B_DD_06*/ {0x198, 7341},
-	/*II_DD_07*/ {0xfd, 7348},
-	/*II_9B_DD_07*/ {0x199, 7356},
-	/*II_DF_E0*/ {0x19b, 7348},
-	/*II_9B_DF_E0*/ {0x19c, 7356},
-	/*II_0F_38_00*/ {0x19d, 7363},
-	/*II_66_0F_38_00*/ {0x19e, 7363},
-	/*II_0F_38_01*/ {0x19d, 7380},
-	/*II_66_0F_38_01*/ {0x19e, 7380},
-	/*II_0F_38_02*/ {0x19d, 7397},
-	/*II_66_0F_38_02*/ {0x19e, 7397},
-	/*II_0F_38_03*/ {0x19d, 7414},
-	/*II_66_0F_38_03*/ {0x19e, 7414},
-	/*II_0F_38_04*/ {0x19d, 7433},
-	/*II_66_0F_38_04*/ {0x19e, 7433},
-	/*II_0F_38_05*/ {0x19d, 7456},
-	/*II_66_0F_38_05*/ {0x19e, 7456},
-	/*II_0F_38_06*/ {0x19d, 7473},
-	/*II_66_0F_38_06*/ {0x19e, 7473},
-	/*II_0F_38_07*/ {0x19d, 7490},
-	/*II_66_0F_38_07*/ {0x19e, 7490},
-	/*II_0F_38_08*/ {0x19d, 7509},
-	/*II_66_0F_38_08*/ {0x19e, 7509},
-	/*II_0F_38_09*/ {0x19d, 7526},
-	/*II_66_0F_38_09*/ {0x19e, 7526},
-	/*II_0F_38_0A*/ {0x19d, 7543},
-	/*II_66_0F_38_0A*/ {0x19e, 7543},
-	/*II_0F_38_0B*/ {0x19d, 7560},
-	/*II_66_0F_38_0B*/ {0x19e, 7560},
-	/*II_66_0F_38_17*/ {0x1a0, 7651},
-	/*II_0F_38_1C*/ {0x19d, 7710},
-	/*II_66_0F_38_1C*/ {0x19e, 7710},
-	/*II_0F_38_1D*/ {0x19d, 7725},
-	/*II_66_0F_38_1D*/ {0x19e, 7725},
-	/*II_0F_38_1E*/ {0x19d, 7740},
-	/*II_66_0F_38_1E*/ {0x19e, 7740},
-	/*II_66_0F_38_20*/ {0x1a5, 7755},
-	/*II_66_0F_38_21*/ {0x1a6, 7776},
-	/*II_66_0F_38_22*/ {0x1a7, 7797},
-	/*II_66_0F_38_23*/ {0x1a5, 7818},
-	/*II_66_0F_38_24*/ {0x1a6, 7839},
-	/*II_66_0F_38_25*/ {0x1a5, 7860},
-	/*II_66_0F_38_28*/ {0x1a9, 7881},
-	/*II_66_0F_38_29*/ {0x1a9, 7898},
-	/*II_66_0F_38_2A*/ {0x1aa, 7917},
-	/*II_66_0F_38_2B*/ {0x1a9, 7938},
-	/*II_66_0F_38_30*/ {0x1a5, 7983},
-	/*II_66_0F_38_31*/ {0x1a6, 8004},
-	/*II_66_0F_38_32*/ {0x1a7, 8025},
-	/*II_66_0F_38_33*/ {0x1a5, 8046},
-	/*II_66_0F_38_34*/ {0x1a6, 8067},
-	/*II_66_0F_38_35*/ {0x1a5, 8088},
-	/*II_66_0F_38_37*/ {0x1a0, 8109},
-	/*II_66_0F_38_38*/ {0x1a9, 8128},
-	/*II_66_0F_38_39*/ {0x1a9, 8145},
-	/*II_66_0F_38_3A*/ {0x1a9, 8162},
-	/*II_66_0F_38_3B*/ {0x1a9, 8179},
-	/*II_66_0F_38_3C*/ {0x1a9, 8196},
-	/*II_66_0F_38_3D*/ {0x1a9, 8213},
-	/*II_66_0F_38_3E*/ {0x1a9, 8230},
-	/*II_66_0F_38_3F*/ {0x1a9, 8247},
-	/*II_66_0F_38_40*/ {0x1a9, 8264},
-	/*II_66_0F_38_41*/ {0x1a9, 8281},
-	/*II_66_0F_38_80*/ {0x1ad, 8306},
-	/*II_66_0F_38_81*/ {0x1ad, 8314},
-	/*II_66_0F_38_82*/ {0x1ad, 8323},
-	/*II_66_0F_38_DB*/ {0x1b0, 9172},
-	/*II_66_0F_38_DC*/ {0x1b0, 9189},
-	/*II_66_0F_38_DD*/ {0x1b0, 9206},
-	/*II_66_0F_38_DE*/ {0x1b0, 9231},
-	/*II_66_0F_38_DF*/ {0x1b0, 9248},
-	/*II_0F_38_F0*/ {0x1b3, 9273},
-	/*II_F2_0F_38_F0*/ {0x1b4, 9280},
-	/*II_0F_38_F1*/ {0x1b5, 9273},
-	/*II_F2_0F_38_F1*/ {0x1b6, 9280},
-	/*II_0F_71_02*/ {0x1cd, 6458},
-	/*II_66_0F_71_02*/ {0x1ce, 6458},
-	/*II_0F_71_04*/ {0x1cd, 6717},
-	/*II_66_0F_71_04*/ {0x1ce, 6717},
-	/*II_0F_71_06*/ {0x1cd, 7031},
-	/*II_66_0F_71_06*/ {0x1ce, 7031},
-	/*II_0F_72_02*/ {0x1cd, 6473},
-	/*II_66_0F_72_02*/ {0x1ce, 6473},
-	/*II_0F_72_04*/ {0x1cd, 6732},
-	/*II_66_0F_72_04*/ {0x1ce, 6732},
-	/*II_0F_72_06*/ {0x1cd, 7046},
-	/*II_66_0F_72_06*/ {0x1ce, 7046},
-	/*II_0F_73_02*/ {0x1cd, 6488},
-	/*II_66_0F_73_02*/ {0x1ce, 6488},
-	/*II_66_0F_73_03*/ {0x1ce, 9852},
-	/*II_0F_73_06*/ {0x1cd, 7061},
-	/*II_66_0F_73_06*/ {0x1ce, 7061},
-	/*II_66_0F_73_07*/ {0x1ce, 9869},
-	/*II_F3_0F_AE_00*/ {0x1d0, 9904},
-	/*II_F3_0F_AE_01*/ {0x1d0, 9934},
-	/*II_0F_AE_02*/ {0x1d1, 9944},
-	/*II_F3_0F_AE_02*/ {0x1d0, 9953},
-	/*II_0F_AE_03*/ {0x1d1, 9973},
-	/*II_F3_0F_AE_03*/ {0x1d0, 9982},
-	/*II_0F_C7_06*/ {0x1d3, 10002},
-	/*II_66_0F_C7_06*/ {0x188, 10011},
-	/*II_F3_0F_C7_06*/ {0x188, 10020}
+	/*II_F4*/ {0x83, 33250},
+	/*II_F5*/ {0x84, 487},
+	/*II_F8*/ {0x84, 492},
+	/*II_F9*/ {0x84, 497},
+	/*II_FA*/ {0x85, 33270},
+	/*II_FB*/ {0x85, 33275},
+	/*II_FC*/ {0x86, 512},
+	/*II_FD*/ {0x86, 517},
+	/*II_0F_02*/ {0x87, 522},
+	/*II_0F_03*/ {0x87, 527},
+	/*II_0F_05*/ {0x88, 532},
+	/*II_0F_06*/ {0x89, 33309},
+	/*II_0F_07*/ {0x88, 547},
+	/*II_0F_08*/ {0x89, 33323},
+	/*II_0F_09*/ {0x89, 33329},
+	/*II_0F_0B*/ {0x8a, 569},
+	/*II_0F_0E*/ {0x8b, 574},
+	/*II_0F_1F*/ {0x8c, 581},
+	/*II_0F_20*/ {0x8d, 32986},
+	/*II_0F_21*/ {0x8e, 32986},
+	/*II_0F_22*/ {0x8f, 32986},
+	/*II_0F_23*/ {0x90, 32986},
+	/*II_0F_30*/ {0x89, 33354},
+	/*II_0F_31*/ {0x89, 33361},
+	/*II_0F_32*/ {0x89, 33368},
+	/*II_0F_33*/ {0x89, 33375},
+	/*II_0F_34*/ {0x88, 614},
+	/*II_0F_35*/ {0x88, 624},
+	/*II_0F_37*/ {0x91, 633},
+	/*II_0F_40*/ {0x92, 641},
+	/*II_0F_41*/ {0x92, 648},
+	/*II_0F_42*/ {0x93, 656},
+	/*II_0F_43*/ {0x93, 663},
+	/*II_0F_44*/ {0x94, 671},
+	/*II_0F_45*/ {0x94, 678},
+	/*II_0F_46*/ {0x95, 686},
+	/*II_0F_47*/ {0x95, 694},
+	/*II_0F_48*/ {0x96, 701},
+	/*II_0F_49*/ {0x96, 708},
+	/*II_0F_4A*/ {0x97, 716},
+	/*II_0F_4B*/ {0x97, 723},
+	/*II_0F_4C*/ {0x98, 731},
+	/*II_0F_4D*/ {0x98, 738},
+	/*II_0F_4E*/ {0x99, 746},
+	/*II_0F_4F*/ {0x99, 754},
+	/*II_0F_80*/ {0x9a, 134},
+	/*II_0F_81*/ {0x9a, 138},
+	/*II_0F_82*/ {0x9b, 143},
+	/*II_0F_83*/ {0x9b, 147},
+	/*II_0F_84*/ {0x9c, 152},
+	/*II_0F_85*/ {0x9c, 156},
+	/*II_0F_86*/ {0x9d, 161},
+	/*II_0F_87*/ {0x9d, 166},
+	/*II_0F_88*/ {0x9e, 170},
+	/*II_0F_89*/ {0x9e, 174},
+	/*II_0F_8A*/ {0x9f, 179},
+	/*II_0F_8B*/ {0x9f, 183},
+	/*II_0F_8C*/ {0xa0, 188},
+	/*II_0F_8D*/ {0xa0, 192},
+	/*II_0F_8E*/ {0xa1, 197},
+	/*II_0F_8F*/ {0xa1, 202},
+	/*II_0F_90*/ {0xa2, 761},
+	/*II_0F_91*/ {0xa2, 767},
+	/*II_0F_92*/ {0xa3, 774},
+	/*II_0F_93*/ {0xa3, 780},
+	/*II_0F_94*/ {0xa4, 787},
+	/*II_0F_95*/ {0xa4, 793},
+	/*II_0F_96*/ {0xa5, 800},
+	/*II_0F_97*/ {0xa5, 807},
+	/*II_0F_98*/ {0xa6, 813},
+	/*II_0F_99*/ {0xa6, 819},
+	/*II_0F_9A*/ {0xa7, 826},
+	/*II_0F_9B*/ {0xa7, 832},
+	/*II_0F_9C*/ {0xa8, 839},
+	/*II_0F_9D*/ {0xa8, 845},
+	/*II_0F_9E*/ {0xa9, 852},
+	/*II_0F_9F*/ {0xa9, 859},
+	/*II_0F_A0*/ {0xaa, 16},
+	/*II_0F_A1*/ {0xab, 22},
+	/*II_0F_A2*/ {0x89, 865},
+	/*II_0F_A3*/ {0xac, 872},
+	/*II_0F_A8*/ {0xae, 16},
+	/*II_0F_A9*/ {0xaf, 22},
+	/*II_0F_AA*/ {0xb0, 882},
+	/*II_0F_AB*/ {0xb1, 887},
+	/*II_0F_AF*/ {0xb2, 117},
+	/*II_0F_B0*/ {0xb3, 898},
+	/*II_0F_B1*/ {0xb4, 898},
+	/*II_0F_B2*/ {0xb5, 907},
+	/*II_0F_B3*/ {0xb1, 912},
+	/*II_0F_B4*/ {0xb5, 917},
+	/*II_0F_B5*/ {0xb5, 922},
+	/*II_0F_B6*/ {0xb6, 927},
+	/*II_0F_B7*/ {0xb7, 927},
+	/*II_0F_B9*/ {0x8a, 569},
+	/*II_0F_BB*/ {0xb1, 934},
+	/*II_0F_BE*/ {0xb6, 939},
+	/*II_0F_BF*/ {0xb7, 939},
+	/*II_0F_C0*/ {0xb3, 946},
+	/*II_0F_C1*/ {0xb4, 946},
+	/*II_0F_C3*/ {0xb8, 952},
+	/*II_0F_C8*/ {0xb9, 960},
+	/*II_0F_C8*/ {0xb9, 960},
+	/*II_0F_C8*/ {0xb9, 960},
+	/*II_0F_C8*/ {0xb9, 960},
+	/*II_0F_C8*/ {0xb9, 960},
+	/*II_0F_C8*/ {0xb9, 960},
+	/*II_0F_C8*/ {0xb9, 960},
+	/*II_0F_C8*/ {0xb9, 960},
+	/*II_80_00*/ {0xba, 11},
+	/*II_80_01*/ {0xbb, 27},
+	/*II_80_02*/ {0xbc, 31},
+	/*II_80_03*/ {0xbc, 36},
+	/*II_80_04*/ {0xbd, 41},
+	/*II_80_05*/ {0xba, 51},
+	/*II_80_06*/ {0xbe, 61},
+	/*II_80_07*/ {0xbf, 71},
+	/*II_81_00*/ {0xc0, 11},
+	/*II_81_01*/ {0xc1, 27},
+	/*II_81_02*/ {0xc2, 31},
+	/*II_81_03*/ {0xc2, 36},
+	/*II_81_04*/ {0xc3, 41},
+	/*II_81_05*/ {0xc0, 51},
+	/*II_81_06*/ {0xc4, 61},
+	/*II_81_07*/ {0xc5, 71},
+	/*II_82_00*/ {0xc6, 11},
+	/*II_82_01*/ {0xc7, 27},
+	/*II_82_02*/ {0xc8, 31},
+	/*II_82_03*/ {0xc8, 36},
+	/*II_82_04*/ {0xc9, 41},
+	/*II_82_05*/ {0xc6, 51},
+	/*II_82_06*/ {0xca, 61},
+	/*II_82_07*/ {0xcb, 71},
+	/*II_83_00*/ {0xcc, 11},
+	/*II_83_01*/ {0xcd, 27},
+	/*II_83_02*/ {0xce, 31},
+	/*II_83_03*/ {0xce, 36},
+	/*II_83_04*/ {0xcf, 41},
+	/*II_83_05*/ {0xcc, 51},
+	/*II_83_06*/ {0xd0, 61},
+	/*II_83_07*/ {0xd1, 71},
+	/*II_8F_00*/ {0xd2, 22},
+	/*II_C0_00*/ {0xd3, 967},
+	/*II_C0_01*/ {0xd3, 972},
+	/*II_C0_02*/ {0xd4, 977},
+	/*II_C0_03*/ {0xd4, 982},
+	/*II_C0_04*/ {0xd5, 987},
+	/*II_C0_05*/ {0xd5, 992},
+	/*II_C0_06*/ {0xd5, 997},
+	/*II_C0_07*/ {0xd5, 1002},
+	/*II_C1_00*/ {0xd6, 967},
+	/*II_C1_01*/ {0xd6, 972},
+	/*II_C1_02*/ {0xd7, 977},
+	/*II_C1_03*/ {0xd7, 982},
+	/*II_C1_04*/ {0xd8, 987},
+	/*II_C1_05*/ {0xd8, 992},
+	/*II_C1_06*/ {0xd8, 997},
+	/*II_C1_07*/ {0xd8, 1002},
+	/*II_C6_00*/ {0xd9, 218},
+	/*II_C6_F8*/ {0xda, 1007},
+	/*II_C7_00*/ {0xdb, 218},
+	/*II_C7_F8*/ {0xdc, 1015},
+	/*II_D0_00*/ {0xdd, 967},
+	/*II_D0_01*/ {0xdd, 972},
+	/*II_D0_02*/ {0xde, 977},
+	/*II_D0_03*/ {0xde, 982},
+	/*II_D0_04*/ {0xdf, 987},
+	/*II_D0_05*/ {0xdf, 992},
+	/*II_D0_06*/ {0xdf, 997},
+	/*II_D0_07*/ {0xdf, 1002},
+	/*II_D1_00*/ {0xe0, 967},
+	/*II_D1_01*/ {0xe0, 972},
+	/*II_D1_02*/ {0xe1, 977},
+	/*II_D1_03*/ {0xe1, 982},
+	/*II_D1_04*/ {0xe2, 987},
+	/*II_D1_05*/ {0xe2, 992},
+	/*II_D1_06*/ {0xe2, 997},
+	/*II_D1_07*/ {0xe2, 1002},
+	/*II_D2_00*/ {0xe3, 967},
+	/*II_D2_01*/ {0xe3, 972},
+	/*II_D2_02*/ {0xe4, 977},
+	/*II_D2_03*/ {0xe4, 982},
+	/*II_D2_04*/ {0xe5, 987},
+	/*II_D2_05*/ {0xe5, 992},
+	/*II_D2_06*/ {0xe5, 997},
+	/*II_D2_07*/ {0xe5, 1002},
+	/*II_D3_00*/ {0xe6, 967},
+	/*II_D3_01*/ {0xe6, 972},
+	/*II_D3_02*/ {0xe7, 977},
+	/*II_D3_03*/ {0xe7, 982},
+	/*II_D3_04*/ {0xe8, 987},
+	/*II_D3_05*/ {0xe8, 992},
+	/*II_D3_06*/ {0xe8, 997},
+	/*II_D3_07*/ {0xe8, 1002},
+	/*II_D8_00*/ {0xe9, 1023},
+	/*II_D8_01*/ {0xe9, 1029},
+	/*II_D8_02*/ {0xe9, 1035},
+	/*II_D8_03*/ {0xe9, 1041},
+	/*II_D8_04*/ {0xe9, 1048},
+	/*II_D8_05*/ {0xe9, 1054},
+	/*II_D8_06*/ {0xe9, 1061},
+	/*II_D8_07*/ {0xe9, 1067},
+	/*II_D8_C0*/ {0xea, 1023},
+	/*II_D8_C0*/ {0xea, 1023},
+	/*II_D8_C0*/ {0xea, 1023},
+	/*II_D8_C0*/ {0xea, 1023},
+	/*II_D8_C0*/ {0xea, 1023},
+	/*II_D8_C0*/ {0xea, 1023},
+	/*II_D8_C0*/ {0xea, 1023},
+	/*II_D8_C0*/ {0xea, 1023},
+	/*II_D8_C8*/ {0xea, 1029},
+	/*II_D8_C8*/ {0xea, 1029},
+	/*II_D8_C8*/ {0xea, 1029},
+	/*II_D8_C8*/ {0xea, 1029},
+	/*II_D8_C8*/ {0xea, 1029},
+	/*II_D8_C8*/ {0xea, 1029},
+	/*II_D8_C8*/ {0xea, 1029},
+	/*II_D8_C8*/ {0xea, 1029},
+	/*II_D8_D0*/ {0xeb, 1035},
+	/*II_D8_D0*/ {0xeb, 1035},
+	/*II_D8_D0*/ {0xeb, 1035},
+	/*II_D8_D0*/ {0xeb, 1035},
+	/*II_D8_D0*/ {0xeb, 1035},
+	/*II_D8_D0*/ {0xeb, 1035},
+	/*II_D8_D0*/ {0xeb, 1035},
+	/*II_D8_D0*/ {0xeb, 1035},
+	/*II_D8_D8*/ {0xeb, 1041},
+	/*II_D8_D9*/ {0xec, 1041},
+	/*II_D8_D8*/ {0xeb, 1041},
+	/*II_D8_D8*/ {0xeb, 1041},
+	/*II_D8_D8*/ {0xeb, 1041},
+	/*II_D8_D8*/ {0xeb, 1041},
+	/*II_D8_D8*/ {0xeb, 1041},
+	/*II_D8_D8*/ {0xeb, 1041},
+	/*II_D8_E0*/ {0xea, 1048},
+	/*II_D8_E0*/ {0xea, 1048},
+	/*II_D8_E0*/ {0xea, 1048},
+	/*II_D8_E0*/ {0xea, 1048},
+	/*II_D8_E0*/ {0xea, 1048},
+	/*II_D8_E0*/ {0xea, 1048},
+	/*II_D8_E0*/ {0xea, 1048},
+	/*II_D8_E0*/ {0xea, 1048},
+	/*II_D8_E8*/ {0xea, 1054},
+	/*II_D8_E8*/ {0xea, 1054},
+	/*II_D8_E8*/ {0xea, 1054},
+	/*II_D8_E8*/ {0xea, 1054},
+	/*II_D8_E8*/ {0xea, 1054},
+	/*II_D8_E8*/ {0xea, 1054},
+	/*II_D8_E8*/ {0xea, 1054},
+	/*II_D8_E8*/ {0xea, 1054},
+	/*II_D8_F0*/ {0xea, 1061},
+	/*II_D8_F0*/ {0xea, 1061},
+	/*II_D8_F0*/ {0xea, 1061},
+	/*II_D8_F0*/ {0xea, 1061},
+	/*II_D8_F0*/ {0xea, 1061},
+	/*II_D8_F0*/ {0xea, 1061},
+	/*II_D8_F0*/ {0xea, 1061},
+	/*II_D8_F0*/ {0xea, 1061},
+	/*II_D8_F8*/ {0xea, 1067},
+	/*II_D8_F8*/ {0xea, 1067},
+	/*II_D8_F8*/ {0xea, 1067},
+	/*II_D8_F8*/ {0xea, 1067},
+	/*II_D8_F8*/ {0xea, 1067},
+	/*II_D8_F8*/ {0xea, 1067},
+	/*II_D8_F8*/ {0xea, 1067},
+	/*II_D8_F8*/ {0xea, 1067},
+	/*II_D9_00*/ {0xe9, 1074},
+	/*II_D9_02*/ {0xed, 1079},
+	/*II_D9_03*/ {0xed, 1084},
+	/*II_D9_04*/ {0xee, 1090},
+	/*II_D9_05*/ {0xef, 1098},
+	/*II_D9_C0*/ {0xeb, 1074},
+	/*II_D9_C0*/ {0xeb, 1074},
+	/*II_D9_C0*/ {0xeb, 1074},
+	/*II_D9_C0*/ {0xeb, 1074},
+	/*II_D9_C0*/ {0xeb, 1074},
+	/*II_D9_C0*/ {0xeb, 1074},
+	/*II_D9_C0*/ {0xeb, 1074},
+	/*II_D9_C0*/ {0xeb, 1074},
+	/*II_D9_C8*/ {0xeb, 1105},
+	/*II_D9_C9*/ {0xec, 1105},
+	/*II_D9_C8*/ {0xeb, 1105},
+	/*II_D9_C8*/ {0xeb, 1105},
+	/*II_D9_C8*/ {0xeb, 1105},
+	/*II_D9_C8*/ {0xeb, 1105},
+	/*II_D9_C8*/ {0xeb, 1105},
+	/*II_D9_C8*/ {0xeb, 1105},
+	/*II_D9_D0*/ {0xec, 1111},
+	/*II_D9_E0*/ {0xec, 1117},
+	/*II_D9_E1*/ {0xec, 1123},
+	/*II_D9_E4*/ {0xec, 1129},
+	/*II_D9_E5*/ {0xec, 1135},
+	/*II_D9_E8*/ {0xec, 1141},
+	/*II_D9_E9*/ {0xec, 1147},
+	/*II_D9_EA*/ {0xec, 1155},
+	/*II_D9_EB*/ {0xec, 1163},
+	/*II_D9_EC*/ {0xec, 1170},
+	/*II_D9_ED*/ {0xec, 1178},
+	/*II_D9_EE*/ {0xec, 1186},
+	/*II_D9_F0*/ {0xec, 1192},
+	/*II_D9_F1*/ {0xec, 1199},
+	/*II_D9_F2*/ {0xec, 1206},
+	/*II_D9_F3*/ {0xec, 1213},
+	/*II_D9_F4*/ {0xec, 1221},
+	/*II_D9_F5*/ {0xec, 1230},
+	/*II_D9_F6*/ {0xec, 1238},
+	/*II_D9_F7*/ {0xec, 1247},
+	/*II_D9_F8*/ {0xec, 1256},
+	/*II_D9_F9*/ {0xec, 1263},
+	/*II_D9_FA*/ {0xec, 1272},
+	/*II_D9_FB*/ {0xec, 1279},
+	/*II_D9_FC*/ {0xec, 1288},
+	/*II_D9_FD*/ {0xec, 1297},
+	/*II_D9_FE*/ {0xec, 1305},
+	/*II_D9_FF*/ {0xec, 1311},
+	/*II_DA_00*/ {0xe9, 1317},
+	/*II_DA_01*/ {0xe9, 1324},
+	/*II_DA_02*/ {0xe9, 1331},
+	/*II_DA_03*/ {0xe9, 1338},
+	/*II_DA_04*/ {0xe9, 1346},
+	/*II_DA_05*/ {0xe9, 1353},
+	/*II_DA_06*/ {0xe9, 1361},
+	/*II_DA_07*/ {0xe9, 1368},
+	/*II_DA_C0*/ {0xf0, 1376},
+	/*II_DA_C0*/ {0xf0, 1376},
+	/*II_DA_C0*/ {0xf0, 1376},
+	/*II_DA_C0*/ {0xf0, 1376},
+	/*II_DA_C0*/ {0xf0, 1376},
+	/*II_DA_C0*/ {0xf0, 1376},
+	/*II_DA_C0*/ {0xf0, 1376},
+	/*II_DA_C0*/ {0xf0, 1376},
+	/*II_DA_C8*/ {0xf1, 1384},
+	/*II_DA_C8*/ {0xf1, 1384},
+	/*II_DA_C8*/ {0xf1, 1384},
+	/*II_DA_C8*/ {0xf1, 1384},
+	/*II_DA_C8*/ {0xf1, 1384},
+	/*II_DA_C8*/ {0xf1, 1384},
+	/*II_DA_C8*/ {0xf1, 1384},
+	/*II_DA_C8*/ {0xf1, 1384},
+	/*II_DA_D0*/ {0xf2, 1392},
+	/*II_DA_D0*/ {0xf2, 1392},
+	/*II_DA_D0*/ {0xf2, 1392},
+	/*II_DA_D0*/ {0xf2, 1392},
+	/*II_DA_D0*/ {0xf2, 1392},
+	/*II_DA_D0*/ {0xf2, 1392},
+	/*II_DA_D0*/ {0xf2, 1392},
+	/*II_DA_D0*/ {0xf2, 1392},
+	/*II_DA_D8*/ {0xf3, 1401},
+	/*II_DA_D8*/ {0xf3, 1401},
+	/*II_DA_D8*/ {0xf3, 1401},
+	/*II_DA_D8*/ {0xf3, 1401},
+	/*II_DA_D8*/ {0xf3, 1401},
+	/*II_DA_D8*/ {0xf3, 1401},
+	/*II_DA_D8*/ {0xf3, 1401},
+	/*II_DA_D8*/ {0xf3, 1401},
+	/*II_DA_E9*/ {0xec, 1409},
+	/*II_DB_00*/ {0xe9, 1418},
+	/*II_DB_01*/ {0xf4, 1424},
+	/*II_DB_02*/ {0xed, 1432},
+	/*II_DB_03*/ {0xed, 1438},
+	/*II_DB_05*/ {0xf5, 1074},
+	/*II_DB_07*/ {0xf6, 1084},
+	/*II_DB_C0*/ {0xf0, 1445},
+	/*II_DB_C0*/ {0xf0, 1445},
+	/*II_DB_C0*/ {0xf0, 1445},
+	/*II_DB_C0*/ {0xf0, 1445},
+	/*II_DB_C0*/ {0xf0, 1445},
+	/*II_DB_C0*/ {0xf0, 1445},
+	/*II_DB_C0*/ {0xf0, 1445},
+	/*II_DB_C0*/ {0xf0, 1445},
+	/*II_DB_C8*/ {0xf1, 1454},
+	/*II_DB_C8*/ {0xf1, 1454},
+	/*II_DB_C8*/ {0xf1, 1454},
+	/*II_DB_C8*/ {0xf1, 1454},
+	/*II_DB_C8*/ {0xf1, 1454},
+	/*II_DB_C8*/ {0xf1, 1454},
+	/*II_DB_C8*/ {0xf1, 1454},
+	/*II_DB_C8*/ {0xf1, 1454},
+	/*II_DB_D0*/ {0xf2, 1463},
+	/*II_DB_D0*/ {0xf2, 1463},
+	/*II_DB_D0*/ {0xf2, 1463},
+	/*II_DB_D0*/ {0xf2, 1463},
+	/*II_DB_D0*/ {0xf2, 1463},
+	/*II_DB_D0*/ {0xf2, 1463},
+	/*II_DB_D0*/ {0xf2, 1463},
+	/*II_DB_D0*/ {0xf2, 1463},
+	/*II_DB_D8*/ {0xf3, 1473},
+	/*II_DB_D8*/ {0xf3, 1473},
+	/*II_DB_D8*/ {0xf3, 1473},
+	/*II_DB_D8*/ {0xf3, 1473},
+	/*II_DB_D8*/ {0xf3, 1473},
+	/*II_DB_D8*/ {0xf3, 1473},
+	/*II_DB_D8*/ {0xf3, 1473},
+	/*II_DB_D8*/ {0xf3, 1473},
+	/*II_DB_E0*/ {0xec, 1482},
+	/*II_DB_E1*/ {0xec, 1488},
+	/*II_DB_E4*/ {0xec, 1496},
+	/*II_DB_E8*/ {0xf7, 1504},
+	/*II_DB_E8*/ {0xf7, 1504},
+	/*II_DB_E8*/ {0xf7, 1504},
+	/*II_DB_E8*/ {0xf7, 1504},
+	/*II_DB_E8*/ {0xf7, 1504},
+	/*II_DB_E8*/ {0xf7, 1504},
+	/*II_DB_E8*/ {0xf7, 1504},
+	/*II_DB_E8*/ {0xf7, 1504},
+	/*II_DB_F0*/ {0xf8, 1512},
+	/*II_DB_F0*/ {0xf8, 1512},
+	/*II_DB_F0*/ {0xf8, 1512},
+	/*II_DB_F0*/ {0xf8, 1512},
+	/*II_DB_F0*/ {0xf8, 1512},
+	/*II_DB_F0*/ {0xf8, 1512},
+	/*II_DB_F0*/ {0xf8, 1512},
+	/*II_DB_F0*/ {0xf8, 1512},
+	/*II_DC_00*/ {0xf9, 1023},
+	/*II_DC_01*/ {0xf9, 1029},
+	/*II_DC_02*/ {0xf9, 1035},
+	/*II_DC_03*/ {0xf9, 1041},
+	/*II_DC_04*/ {0xf9, 1048},
+	/*II_DC_05*/ {0xf9, 1054},
+	/*II_DC_06*/ {0xf9, 1061},
+	/*II_DC_07*/ {0xf9, 1067},
+	/*II_DC_C0*/ {0xfa, 1023},
+	/*II_DC_C0*/ {0xfa, 1023},
+	/*II_DC_C0*/ {0xfa, 1023},
+	/*II_DC_C0*/ {0xfa, 1023},
+	/*II_DC_C0*/ {0xfa, 1023},
+	/*II_DC_C0*/ {0xfa, 1023},
+	/*II_DC_C0*/ {0xfa, 1023},
+	/*II_DC_C0*/ {0xfa, 1023},
+	/*II_DC_C8*/ {0xfa, 1029},
+	/*II_DC_C8*/ {0xfa, 1029},
+	/*II_DC_C8*/ {0xfa, 1029},
+	/*II_DC_C8*/ {0xfa, 1029},
+	/*II_DC_C8*/ {0xfa, 1029},
+	/*II_DC_C8*/ {0xfa, 1029},
+	/*II_DC_C8*/ {0xfa, 1029},
+	/*II_DC_C8*/ {0xfa, 1029},
+	/*II_DC_E0*/ {0xfa, 1054},
+	/*II_DC_E0*/ {0xfa, 1054},
+	/*II_DC_E0*/ {0xfa, 1054},
+	/*II_DC_E0*/ {0xfa, 1054},
+	/*II_DC_E0*/ {0xfa, 1054},
+	/*II_DC_E0*/ {0xfa, 1054},
+	/*II_DC_E0*/ {0xfa, 1054},
+	/*II_DC_E0*/ {0xfa, 1054},
+	/*II_DC_E8*/ {0xfa, 1048},
+	/*II_DC_E8*/ {0xfa, 1048},
+	/*II_DC_E8*/ {0xfa, 1048},
+	/*II_DC_E8*/ {0xfa, 1048},
+	/*II_DC_E8*/ {0xfa, 1048},
+	/*II_DC_E8*/ {0xfa, 1048},
+	/*II_DC_E8*/ {0xfa, 1048},
+	/*II_DC_E8*/ {0xfa, 1048},
+	/*II_DC_F0*/ {0xfa, 1067},
+	/*II_DC_F0*/ {0xfa, 1067},
+	/*II_DC_F0*/ {0xfa, 1067},
+	/*II_DC_F0*/ {0xfa, 1067},
+	/*II_DC_F0*/ {0xfa, 1067},
+	/*II_DC_F0*/ {0xfa, 1067},
+	/*II_DC_F0*/ {0xfa, 1067},
+	/*II_DC_F0*/ {0xfa, 1067},
+	/*II_DC_F8*/ {0xfa, 1061},
+	/*II_DC_F8*/ {0xfa, 1061},
+	/*II_DC_F8*/ {0xfa, 1061},
+	/*II_DC_F8*/ {0xfa, 1061},
+	/*II_DC_F8*/ {0xfa, 1061},
+	/*II_DC_F8*/ {0xfa, 1061},
+	/*II_DC_F8*/ {0xfa, 1061},
+	/*II_DC_F8*/ {0xfa, 1061},
+	/*II_DD_00*/ {0xf9, 1074},
+	/*II_DD_01*/ {0xfb, 1424},
+	/*II_DD_02*/ {0xfc, 1079},
+	/*II_DD_03*/ {0xfc, 1084},
+	/*II_DD_04*/ {0xee, 1519},
+	/*II_DD_C0*/ {0xeb, 1527},
+	/*II_DD_C0*/ {0xeb, 1527},
+	/*II_DD_C0*/ {0xeb, 1527},
+	/*II_DD_C0*/ {0xeb, 1527},
+	/*II_DD_C0*/ {0xeb, 1527},
+	/*II_DD_C0*/ {0xeb, 1527},
+	/*II_DD_C0*/ {0xeb, 1527},
+	/*II_DD_C0*/ {0xeb, 1527},
+	/*II_DD_D0*/ {0xeb, 1079},
+	/*II_DD_D0*/ {0xeb, 1079},
+	/*II_DD_D0*/ {0xeb, 1079},
+	/*II_DD_D0*/ {0xeb, 1079},
+	/*II_DD_D0*/ {0xeb, 1079},
+	/*II_DD_D0*/ {0xeb, 1079},
+	/*II_DD_D0*/ {0xeb, 1079},
+	/*II_DD_D0*/ {0xeb, 1079},
+	/*II_DD_D8*/ {0xeb, 1084},
+	/*II_DD_D8*/ {0xeb, 1084},
+	/*II_DD_D8*/ {0xeb, 1084},
+	/*II_DD_D8*/ {0xeb, 1084},
+	/*II_DD_D8*/ {0xeb, 1084},
+	/*II_DD_D8*/ {0xeb, 1084},
+	/*II_DD_D8*/ {0xeb, 1084},
+	/*II_DD_D8*/ {0xeb, 1084},
+	/*II_DD_E0*/ {0xfa, 1534},
+	/*II_DD_E1*/ {0xec, 1534},
+	/*II_DD_E0*/ {0xfa, 1534},
+	/*II_DD_E0*/ {0xfa, 1534},
+	/*II_DD_E0*/ {0xfa, 1534},
+	/*II_DD_E0*/ {0xfa, 1534},
+	/*II_DD_E0*/ {0xfa, 1534},
+	/*II_DD_E0*/ {0xfa, 1534},
+	/*II_DD_E8*/ {0xeb, 1541},
+	/*II_DD_E9*/ {0xec, 1541},
+	/*II_DD_E8*/ {0xeb, 1541},
+	/*II_DD_E8*/ {0xeb, 1541},
+	/*II_DD_E8*/ {0xeb, 1541},
+	/*II_DD_E8*/ {0xeb, 1541},
+	/*II_DD_E8*/ {0xeb, 1541},
+	/*II_DD_E8*/ {0xeb, 1541},
+	/*II_DE_00*/ {0xef, 1317},
+	/*II_DE_01*/ {0xef, 1324},
+	/*II_DE_02*/ {0xef, 1331},
+	/*II_DE_03*/ {0xef, 1338},
+	/*II_DE_04*/ {0xef, 1346},
+	/*II_DE_05*/ {0xef, 1353},
+	/*II_DE_06*/ {0xef, 1361},
+	/*II_DE_07*/ {0xef, 1368},
+	/*II_DE_C0*/ {0xfa, 1549},
+	/*II_DE_C1*/ {0xec, 1549},
+	/*II_DE_C0*/ {0xfa, 1549},
+	/*II_DE_C0*/ {0xfa, 1549},
+	/*II_DE_C0*/ {0xfa, 1549},
+	/*II_DE_C0*/ {0xfa, 1549},
+	/*II_DE_C0*/ {0xfa, 1549},
+	/*II_DE_C0*/ {0xfa, 1549},
+	/*II_DE_C8*/ {0xfa, 1556},
+	/*II_DE_C9*/ {0xec, 1556},
+	/*II_DE_C8*/ {0xfa, 1556},
+	/*II_DE_C8*/ {0xfa, 1556},
+	/*II_DE_C8*/ {0xfa, 1556},
+	/*II_DE_C8*/ {0xfa, 1556},
+	/*II_DE_C8*/ {0xfa, 1556},
+	/*II_DE_C8*/ {0xfa, 1556},
+	/*II_DE_D9*/ {0xec, 1563},
+	/*II_DE_E0*/ {0xfa, 1571},
+	/*II_DE_E1*/ {0xec, 1571},
+	/*II_DE_E0*/ {0xfa, 1571},
+	/*II_DE_E0*/ {0xfa, 1571},
+	/*II_DE_E0*/ {0xfa, 1571},
+	/*II_DE_E0*/ {0xfa, 1571},
+	/*II_DE_E0*/ {0xfa, 1571},
+	/*II_DE_E0*/ {0xfa, 1571},
+	/*II_DE_E8*/ {0xfa, 1579},
+	/*II_DE_E9*/ {0xec, 1579},
+	/*II_DE_E8*/ {0xfa, 1579},
+	/*II_DE_E8*/ {0xfa, 1579},
+	/*II_DE_E8*/ {0xfa, 1579},
+	/*II_DE_E8*/ {0xfa, 1579},
+	/*II_DE_E8*/ {0xfa, 1579},
+	/*II_DE_E8*/ {0xfa, 1579},
+	/*II_DE_F0*/ {0xfa, 1586},
+	/*II_DE_F1*/ {0xec, 1586},
+	/*II_DE_F0*/ {0xfa, 1586},
+	/*II_DE_F0*/ {0xfa, 1586},
+	/*II_DE_F0*/ {0xfa, 1586},
+	/*II_DE_F0*/ {0xfa, 1586},
+	/*II_DE_F0*/ {0xfa, 1586},
+	/*II_DE_F0*/ {0xfa, 1586},
+	/*II_DE_F8*/ {0xfa, 1594},
+	/*II_DE_F9*/ {0xec, 1594},
+	/*II_DE_F8*/ {0xfa, 1594},
+	/*II_DE_F8*/ {0xfa, 1594},
+	/*II_DE_F8*/ {0xfa, 1594},
+	/*II_DE_F8*/ {0xfa, 1594},
+	/*II_DE_F8*/ {0xfa, 1594},
+	/*II_DE_F8*/ {0xfa, 1594},
+	/*II_DF_00*/ {0xef, 1418},
+	/*II_DF_01*/ {0xfd, 1424},
+	/*II_DF_02*/ {0xfe, 1432},
+	/*II_DF_03*/ {0xfe, 1438},
+	/*II_DF_04*/ {0xf5, 1601},
+	/*II_DF_05*/ {0xf9, 1418},
+	/*II_DF_06*/ {0xf6, 1607},
+	/*II_DF_07*/ {0xfc, 1438},
+	/*II_DF_E8*/ {0xf7, 1614},
+	/*II_DF_E8*/ {0xf7, 1614},
+	/*II_DF_E8*/ {0xf7, 1614},
+	/*II_DF_E8*/ {0xf7, 1614},
+	/*II_DF_E8*/ {0xf7, 1614},
+	/*II_DF_E8*/ {0xf7, 1614},
+	/*II_DF_E8*/ {0xf7, 1614},
+	/*II_DF_E8*/ {0xf7, 1614},
+	/*II_DF_F0*/ {0xf7, 1623},
+	/*II_DF_F0*/ {0xf7, 1623},
+	/*II_DF_F0*/ {0xf7, 1623},
+	/*II_DF_F0*/ {0xf7, 1623},
+	/*II_DF_F0*/ {0xf7, 1623},
+	/*II_DF_F0*/ {0xf7, 1623},
+	/*II_DF_F0*/ {0xf7, 1623},
+	/*II_DF_F0*/ {0xf7, 1623},
+	/*II_F6_00*/ {0xff, 206},
+	/*II_F6_02*/ {0x100, 1631},
+	/*II_F6_03*/ {0x101, 1636},
+	/*II_F6_04*/ {0x102, 1641},
+	/*II_F6_05*/ {0x102, 117},
+	/*II_F6_06*/ {0x103, 1646},
+	/*II_F6_07*/ {0x103, 1651},
+	/*II_F7_00*/ {0x104, 206},
+	/*II_F7_02*/ {0x105, 1631},
+	/*II_F7_03*/ {0x106, 1636},
+	/*II_F7_04*/ {0x107, 1641},
+	/*II_F7_05*/ {0x107, 117},
+	/*II_F7_06*/ {0x108, 1646},
+	/*II_F7_07*/ {0x108, 1651},
+	/*II_FE_00*/ {0x109, 81},
+	/*II_FE_01*/ {0x109, 86},
+	/*II_FF_00*/ {0x10a, 81},
+	/*II_FF_01*/ {0x10a, 86},
+	/*II_FF_02*/ {0x10b, 456},
+	/*II_FF_03*/ {0x10c, 260},
+	/*II_FF_04*/ {0x10d, 462},
+	/*II_FF_05*/ {0x10e, 467},
+	/*II_FF_06*/ {0x10f, 16},
+	/*II_0F_00_00*/ {0x110, 1657},
+	/*II_0F_00_01*/ {0x111, 1663},
+	/*II_0F_00_02*/ {0x111, 34436},
+	/*II_0F_00_03*/ {0x112, 34442},
+	/*II_0F_00_04*/ {0x113, 1679},
+	/*II_0F_00_05*/ {0x113, 1685},
+	/*II_0F_01_00*/ {0x114, 1691},
+	/*II_0F_01_01*/ {0x114, 1697},
+	/*II_0F_01_02*/ {0x114, 34471},
+	/*II_0F_01_03*/ {0x114, 34477},
+	/*II_0F_01_04*/ {0x115, 1715},
+	/*II_0F_01_06*/ {0x116, 34489},
+	/*II_0F_01_07*/ {0x117, 34495},
+	/*II_0F_01_C1*/ {0x118, 1735},
+	/*II_0F_01_C2*/ {0x118, 1743},
+	/*II_0F_01_C3*/ {0x118, 1753},
+	/*II_0F_01_C4*/ {0x118, 1763},
+	/*II_0F_01_C8*/ {0x119, 1771},
+	/*II_0F_01_C9*/ {0x119, 1780},
+	/*II_0F_01_D0*/ {0x89, 1787},
+	/*II_0F_01_D1*/ {0x89, 1795},
+	/*II_0F_01_D4*/ {0x118, 1803},
+	/*II_0F_01_D5*/ {0x11a, 1811},
+	/*II_0F_01_D8*/ {0x11b, 1817},
+	/*II_0F_01_D9*/ {0x11c, 1824},
+	/*II_0F_01_DA*/ {0x11d, 1833},
+	/*II_0F_01_DB*/ {0x11d, 1841},
+	/*II_0F_01_DC*/ {0x11c, 1849},
+	/*II_0F_01_DD*/ {0x11c, 1855},
+	/*II_0F_01_DE*/ {0x11d, 1861},
+	/*II_0F_01_DF*/ {0x11e, 1869},
+	/*II_0F_01_F8*/ {0x11f, 1878},
+	/*II_0F_01_F9*/ {0x11f, 1886},
+	/*II_0F_0D_00*/ {0x120, 1894},
+	/*II_0F_0D_01*/ {0x120, 1904},
+	/*II_0F_0F_0C*/ {0x121, 1915},
+	/*II_0F_0F_0D*/ {0x122, 1922},
+	/*II_0F_0F_1C*/ {0x121, 1929},
+	/*II_0F_0F_1D*/ {0x122, 1936},
+	/*II_0F_0F_8A*/ {0x121, 1943},
+	/*II_0F_0F_8E*/ {0x121, 1951},
+	/*II_0F_0F_90*/ {0x122, 1960},
+	/*II_0F_0F_94*/ {0x122, 1969},
+	/*II_0F_0F_96*/ {0x122, 1976},
+	/*II_0F_0F_97*/ {0x122, 1983},
+	/*II_0F_0F_9A*/ {0x122, 1992},
+	/*II_0F_0F_9E*/ {0x122, 1999},
+	/*II_0F_0F_A0*/ {0x122, 2006},
+	/*II_0F_0F_A4*/ {0x122, 2015},
+	/*II_0F_0F_A6*/ {0x122, 2022},
+	/*II_0F_0F_A7*/ {0x122, 2032},
+	/*II_0F_0F_AA*/ {0x122, 2042},
+	/*II_0F_0F_AE*/ {0x122, 2050},
+	/*II_0F_0F_B0*/ {0x122, 2057},
+	/*II_0F_0F_B4*/ {0x122, 2066},
+	/*II_0F_0F_B6*/ {0x122, 2073},
+	/*II_0F_0F_B7*/ {0x122, 2083},
+	/*II_0F_0F_BB*/ {0x121, 2092},
+	/*II_0F_0F_BF*/ {0x122, 2100},
+	/*II_0F_10*/ {0x123, 2109},
+	/*II_66_0F_10*/ {0x124, 2117},
+	/*II_F3_0F_10*/ {0x125, 2125},
+	/*II_F2_0F_10*/ {0x126, 2132},
+	/*II_0F_11*/ {0x12b, 2109},
+	/*II_66_0F_11*/ {0x12c, 2117},
+	/*II_F3_0F_11*/ {0x12d, 2125},
+	/*II_F2_0F_11*/ {0x12e, 2132},
+	/*II_66_0F_12*/ {0x133, 2190},
+	/*II_F3_0F_12*/ {0x134, 2198},
+	/*II_F2_0F_12*/ {0x134, 2208},
+	/*II_0F_13*/ {0x138, 2182},
+	/*II_66_0F_13*/ {0x139, 2190},
+	/*II_0F_14*/ {0x13b, 2266},
+	/*II_66_0F_14*/ {0x13c, 2276},
+	/*II_0F_15*/ {0x13b, 2308},
+	/*II_66_0F_15*/ {0x13c, 2318},
+	/*II_66_0F_16*/ {0x133, 2367},
+	/*II_F3_0F_16*/ {0x13e, 2375},
+	/*II_0F_17*/ {0x138, 2359},
+	/*II_66_0F_17*/ {0x139, 2367},
+	/*II_0F_18_00*/ {0x13f, 2424},
+	/*II_0F_18_01*/ {0x13f, 2437},
+	/*II_0F_18_02*/ {0x13f, 2449},
+	/*II_0F_18_03*/ {0x13f, 2461},
+	/*II_0F_28*/ {0x123, 2473},
+	/*II_66_0F_28*/ {0x124, 2481},
+	/*II_0F_29*/ {0x12b, 2473},
+	/*II_66_0F_29*/ {0x12c, 2481},
+	/*II_0F_2A*/ {0x140, 2507},
+	/*II_66_0F_2A*/ {0x141, 2517},
+	/*II_F3_0F_2A*/ {0x142, 2527},
+	/*II_F2_0F_2A*/ {0x143, 2537},
+	/*II_0F_2B*/ {0x144, 2569},
+	/*II_66_0F_2B*/ {0x145, 2578},
+	/*II_F3_0F_2B*/ {0x146, 2587},
+	/*II_F2_0F_2B*/ {0x147, 2596},
+	/*II_0F_2C*/ {0x149, 2625},
+	/*II_66_0F_2C*/ {0x14a, 2636},
+	/*II_F3_0F_2C*/ {0x14b, 2647},
+	/*II_F2_0F_2C*/ {0x14c, 2658},
+	/*II_0F_2D*/ {0x149, 2693},
+	/*II_66_0F_2D*/ {0x13c, 2703},
+	/*II_F3_0F_2D*/ {0x14b, 2713},
+	/*II_F2_0F_2D*/ {0x14c, 2723},
+	/*II_0F_2E*/ {0x14e, 2755},
+	/*II_66_0F_2E*/ {0x14f, 2764},
+	/*II_0F_2F*/ {0x14e, 2793},
+	/*II_66_0F_2F*/ {0x14f, 2801},
+	/*II_0F_50*/ {0x152, 2827},
+	/*II_66_0F_50*/ {0x153, 2837},
+	/*II_0F_51*/ {0x13b, 2869},
+	/*II_66_0F_51*/ {0x13c, 2877},
+	/*II_F3_0F_51*/ {0x155, 2885},
+	/*II_F2_0F_51*/ {0x14f, 2893},
+	/*II_0F_52*/ {0x13b, 2937},
+	/*II_F3_0F_52*/ {0x155, 2946},
+	/*II_0F_53*/ {0x13b, 2975},
+	/*II_F3_0F_53*/ {0x155, 2982},
+	/*II_0F_54*/ {0x13b, 3005},
+	/*II_66_0F_54*/ {0x13c, 3012},
+	/*II_0F_55*/ {0x13b, 3035},
+	/*II_66_0F_55*/ {0x13c, 3043},
+	/*II_0F_56*/ {0x13b, 3069},
+	/*II_66_0F_56*/ {0x13c, 3075},
+	/*II_0F_57*/ {0x13b, 3095},
+	/*II_66_0F_57*/ {0x13c, 3102},
+	/*II_0F_58*/ {0x13b, 3125},
+	/*II_66_0F_58*/ {0x13c, 3132},
+	/*II_F3_0F_58*/ {0x155, 3139},
+	/*II_F2_0F_58*/ {0x14f, 3146},
+	/*II_0F_59*/ {0x13b, 3185},
+	/*II_66_0F_59*/ {0x13c, 3192},
+	/*II_F3_0F_59*/ {0x155, 3199},
+	/*II_F2_0F_59*/ {0x14f, 3206},
+	/*II_0F_5A*/ {0x14f, 3245},
+	/*II_66_0F_5A*/ {0x13c, 3255},
+	/*II_F3_0F_5A*/ {0x156, 3265},
+	/*II_F2_0F_5A*/ {0x14f, 3275},
+	/*II_0F_5B*/ {0x13c, 3329},
+	/*II_66_0F_5B*/ {0x13c, 3339},
+	/*II_F3_0F_5B*/ {0x13c, 3349},
+	/*II_0F_5C*/ {0x13b, 3394},
+	/*II_66_0F_5C*/ {0x13c, 3401},
+	/*II_F3_0F_5C*/ {0x155, 3408},
+	/*II_F2_0F_5C*/ {0x14f, 3415},
+	/*II_0F_5D*/ {0x13b, 3454},
+	/*II_66_0F_5D*/ {0x13c, 3461},
+	/*II_F3_0F_5D*/ {0x155, 3468},
+	/*II_F2_0F_5D*/ {0x14f, 3475},
+	/*II_0F_5E*/ {0x13b, 3514},
+	/*II_66_0F_5E*/ {0x13c, 3521},
+	/*II_F3_0F_5E*/ {0x155, 3528},
+	/*II_F2_0F_5E*/ {0x14f, 3535},
+	/*II_0F_5F*/ {0x13b, 3574},
+	/*II_66_0F_5F*/ {0x13c, 3581},
+	/*II_F3_0F_5F*/ {0x155, 3588},
+	/*II_F2_0F_5F*/ {0x14f, 3595},
+	/*II_0F_60*/ {0x159, 3634},
+	/*II_66_0F_60*/ {0x13c, 3634},
+	/*II_0F_61*/ {0x159, 3657},
+	/*II_66_0F_61*/ {0x13c, 3657},
+	/*II_0F_62*/ {0x159, 3680},
+	/*II_66_0F_62*/ {0x13c, 3680},
+	/*II_0F_63*/ {0x15a, 3703},
+	/*II_66_0F_63*/ {0x13c, 3703},
+	/*II_0F_64*/ {0x15a, 3724},
+	/*II_66_0F_64*/ {0x13c, 3724},
+	/*II_0F_65*/ {0x15a, 3743},
+	/*II_66_0F_65*/ {0x13c, 3743},
+	/*II_0F_66*/ {0x15a, 3762},
+	/*II_66_0F_66*/ {0x13c, 3762},
+	/*II_0F_67*/ {0x15a, 3781},
+	/*II_66_0F_67*/ {0x13c, 3781},
+	/*II_0F_68*/ {0x15a, 3802},
+	/*II_66_0F_68*/ {0x13c, 3802},
+	/*II_0F_69*/ {0x15a, 3825},
+	/*II_66_0F_69*/ {0x13c, 3825},
+	/*II_0F_6A*/ {0x15a, 3848},
+	/*II_66_0F_6A*/ {0x13c, 3848},
+	/*II_0F_6B*/ {0x15a, 3871},
+	/*II_66_0F_6B*/ {0x13c, 3871},
+	/*II_66_0F_6C*/ {0x13c, 3892},
+	/*II_66_0F_6D*/ {0x13c, 3917},
+	/*II_0F_6F*/ {0x15e, 3948},
+	/*II_66_0F_6F*/ {0x124, 3968},
+	/*II_F3_0F_6F*/ {0x124, 3976},
+	/*II_0F_74*/ {0x15a, 4065},
+	/*II_66_0F_74*/ {0x13c, 4065},
+	/*II_0F_75*/ {0x15a, 4084},
+	/*II_66_0F_75*/ {0x13c, 4084},
+	/*II_0F_76*/ {0x15a, 4103},
+	/*II_66_0F_76*/ {0x13c, 4103},
+	/*II_0F_77*/ {0x162, 4122},
+	/*II_0F_78*/ {0x164, 4150},
+	/*II_0F_79*/ {0x167, 4174},
+	/*II_66_0F_79*/ {0x168, 4158},
+	/*II_F2_0F_79*/ {0x169, 4165},
+	/*II_0F_7A_30*/ {0x16a, 4183},
+	/*II_0F_7A_31*/ {0x16b, 4193},
+	/*II_66_0F_7C*/ {0x16c, 4203},
+	/*II_F2_0F_7C*/ {0x16c, 4211},
+	/*II_66_0F_7D*/ {0x16c, 4237},
+	/*II_F2_0F_7D*/ {0x16c, 4245},
+	/*II_F3_0F_7E*/ {0x126, 3948},
+	/*II_0F_7F*/ {0x170, 3948},
+	/*II_66_0F_7F*/ {0x12c, 3968},
+	/*II_F3_0F_7F*/ {0x12c, 3976},
+	/*II_F3_0F_B8*/ {0x174, 4360},
+	/*II_0F_BA_04*/ {0x175, 872},
+	/*II_0F_BA_05*/ {0x176, 887},
+	/*II_0F_BA_06*/ {0x176, 912},
+	/*II_0F_BA_07*/ {0x176, 934},
+	/*II_0F_BC*/ {0x177, 4368},
+	/*II_F3_0F_BC*/ {0x178, 4373},
+	/*II_0F_BD*/ {0x177, 4380},
+	/*II_F3_0F_BD*/ {0x179, 4385},
+	/*II_0F_C7_07*/ {0x189, 6407},
+	/*II_66_0F_D0*/ {0x16c, 6416},
+	/*II_F2_0F_D0*/ {0x16c, 6426},
+	/*II_0F_D1*/ {0x15a, 6458},
+	/*II_66_0F_D1*/ {0x13c, 6458},
+	/*II_0F_D2*/ {0x15a, 6473},
+	/*II_66_0F_D2*/ {0x13c, 6473},
+	/*II_0F_D3*/ {0x15a, 6488},
+	/*II_66_0F_D3*/ {0x13c, 6488},
+	/*II_0F_D4*/ {0x14f, 6503},
+	/*II_66_0F_D4*/ {0x13c, 6503},
+	/*II_0F_D5*/ {0x15a, 6518},
+	/*II_66_0F_D5*/ {0x13c, 6518},
+	/*II_66_0F_D6*/ {0x12e, 3948},
+	/*II_F3_0F_D6*/ {0x18a, 6535},
+	/*II_F2_0F_D6*/ {0x18b, 6544},
+	/*II_0F_D7*/ {0x18d, 6553},
+	/*II_66_0F_D7*/ {0x18e, 6553},
+	/*II_0F_D8*/ {0x15a, 6574},
+	/*II_66_0F_D8*/ {0x13c, 6574},
+	/*II_0F_D9*/ {0x15a, 6593},
+	/*II_66_0F_D9*/ {0x13c, 6593},
+	/*II_0F_DA*/ {0x190, 6612},
+	/*II_66_0F_DA*/ {0x13c, 6612},
+	/*II_0F_DB*/ {0x15a, 6629},
+	/*II_66_0F_DB*/ {0x13c, 6629},
+	/*II_0F_DC*/ {0x15a, 6642},
+	/*II_66_0F_DC*/ {0x13c, 6642},
+	/*II_0F_DD*/ {0x15a, 6661},
+	/*II_66_0F_DD*/ {0x13c, 6661},
+	/*II_0F_DE*/ {0x190, 6670},
+	/*II_66_0F_DE*/ {0x13c, 6670},
+	/*II_0F_DF*/ {0x15a, 6687},
+	/*II_66_0F_DF*/ {0x13c, 6687},
+	/*II_0F_E0*/ {0x190, 6702},
+	/*II_66_0F_E0*/ {0x13c, 6702},
+	/*II_0F_E1*/ {0x15a, 6717},
+	/*II_66_0F_E1*/ {0x13c, 6717},
+	/*II_0F_E2*/ {0x15a, 6732},
+	/*II_66_0F_E2*/ {0x13c, 6732},
+	/*II_0F_E3*/ {0x190, 6747},
+	/*II_66_0F_E3*/ {0x13c, 6747},
+	/*II_0F_E4*/ {0x190, 6762},
+	/*II_66_0F_E4*/ {0x13c, 6762},
+	/*II_0F_E5*/ {0x15a, 6781},
+	/*II_66_0F_E5*/ {0x13c, 6781},
+	/*II_66_0F_E6*/ {0x13c, 6798},
+	/*II_F3_0F_E6*/ {0x14f, 6809},
+	/*II_F2_0F_E6*/ {0x13c, 6819},
+	/*II_0F_E7*/ {0x191, 6863},
+	/*II_66_0F_E7*/ {0x145, 6871},
+	/*II_0F_E8*/ {0x15a, 6890},
+	/*II_66_0F_E8*/ {0x13c, 6890},
+	/*II_0F_E9*/ {0x15a, 6907},
+	/*II_66_0F_E9*/ {0x13c, 6907},
+	/*II_0F_EA*/ {0x190, 6924},
+	/*II_66_0F_EA*/ {0x13c, 6924},
+	/*II_0F_EB*/ {0x15a, 6941},
+	/*II_66_0F_EB*/ {0x13c, 6941},
+	/*II_0F_EC*/ {0x15a, 6952},
+	/*II_66_0F_EC*/ {0x13c, 6952},
+	/*II_0F_ED*/ {0x15a, 6969},
+	/*II_66_0F_ED*/ {0x13c, 6969},
+	/*II_0F_EE*/ {0x190, 6986},
+	/*II_66_0F_EE*/ {0x13c, 6986},
+	/*II_0F_EF*/ {0x15a, 7003},
+	/*II_66_0F_EF*/ {0x13c, 7003},
+	/*II_F2_0F_F0*/ {0x192, 7016},
+	/*II_0F_F1*/ {0x15a, 7031},
+	/*II_66_0F_F1*/ {0x13c, 7031},
+	/*II_0F_F2*/ {0x15a, 7046},
+	/*II_66_0F_F2*/ {0x13c, 7046},
+	/*II_0F_F3*/ {0x15a, 7061},
+	/*II_66_0F_F3*/ {0x13c, 7061},
+	/*II_0F_F4*/ {0x194, 7076},
+	/*II_66_0F_F4*/ {0x13c, 7076},
+	/*II_0F_F5*/ {0x15a, 7095},
+	/*II_66_0F_F5*/ {0x13c, 7095},
+	/*II_0F_F6*/ {0x190, 7114},
+	/*II_66_0F_F6*/ {0x13c, 7114},
+	/*II_0F_F7*/ {0x195, 7131},
+	/*II_66_0F_F7*/ {0x196, 7141},
+	/*II_0F_F8*/ {0x15a, 7166},
+	/*II_66_0F_F8*/ {0x13c, 7166},
+	/*II_0F_F9*/ {0x15a, 7181},
+	/*II_66_0F_F9*/ {0x13c, 7181},
+	/*II_0F_FA*/ {0x15a, 7196},
+	/*II_66_0F_FA*/ {0x13c, 7196},
+	/*II_0F_FB*/ {0x194, 7211},
+	/*II_66_0F_FB*/ {0x13c, 7211},
+	/*II_0F_FC*/ {0x15a, 7226},
+	/*II_66_0F_FC*/ {0x13c, 7226},
+	/*II_0F_FD*/ {0x15a, 7241},
+	/*II_66_0F_FD*/ {0x13c, 7241},
+	/*II_0F_FE*/ {0x15a, 7256},
+	/*II_66_0F_FE*/ {0x13c, 7256},
+	/*II_D9_06*/ {0x198, 7271},
+	/*II_9B_D9_06*/ {0x199, 7280},
+	/*II_D9_07*/ {0xfe, 7288},
+	/*II_9B_D9_07*/ {0x19a, 7296},
+	/*II_DB_E2*/ {0xec, 7303},
+	/*II_9B_DB_E2*/ {0x19b, 7311},
+	/*II_DB_E3*/ {0xec, 7318},
+	/*II_9B_DB_E3*/ {0x19b, 7326},
+	/*II_DD_06*/ {0x198, 7333},
+	/*II_9B_DD_06*/ {0x199, 7341},
+	/*II_DD_07*/ {0xfe, 7348},
+	/*II_9B_DD_07*/ {0x19a, 7356},
+	/*II_DF_E0*/ {0x19c, 7348},
+	/*II_9B_DF_E0*/ {0x19d, 7356},
+	/*II_0F_38_00*/ {0x19e, 7363},
+	/*II_66_0F_38_00*/ {0x19f, 7363},
+	/*II_0F_38_01*/ {0x19e, 7380},
+	/*II_66_0F_38_01*/ {0x19f, 7380},
+	/*II_0F_38_02*/ {0x19e, 7397},
+	/*II_66_0F_38_02*/ {0x19f, 7397},
+	/*II_0F_38_03*/ {0x19e, 7414},
+	/*II_66_0F_38_03*/ {0x19f, 7414},
+	/*II_0F_38_04*/ {0x19e, 7433},
+	/*II_66_0F_38_04*/ {0x19f, 7433},
+	/*II_0F_38_05*/ {0x19e, 7456},
+	/*II_66_0F_38_05*/ {0x19f, 7456},
+	/*II_0F_38_06*/ {0x19e, 7473},
+	/*II_66_0F_38_06*/ {0x19f, 7473},
+	/*II_0F_38_07*/ {0x19e, 7490},
+	/*II_66_0F_38_07*/ {0x19f, 7490},
+	/*II_0F_38_08*/ {0x19e, 7509},
+	/*II_66_0F_38_08*/ {0x19f, 7509},
+	/*II_0F_38_09*/ {0x19e, 7526},
+	/*II_66_0F_38_09*/ {0x19f, 7526},
+	/*II_0F_38_0A*/ {0x19e, 7543},
+	/*II_66_0F_38_0A*/ {0x19f, 7543},
+	/*II_0F_38_0B*/ {0x19e, 7560},
+	/*II_66_0F_38_0B*/ {0x19f, 7560},
+	/*II_66_0F_38_17*/ {0x1a1, 7651},
+	/*II_0F_38_1C*/ {0x19e, 7710},
+	/*II_66_0F_38_1C*/ {0x19f, 7710},
+	/*II_0F_38_1D*/ {0x19e, 7725},
+	/*II_66_0F_38_1D*/ {0x19f, 7725},
+	/*II_0F_38_1E*/ {0x19e, 7740},
+	/*II_66_0F_38_1E*/ {0x19f, 7740},
+	/*II_66_0F_38_20*/ {0x1a6, 7755},
+	/*II_66_0F_38_21*/ {0x1a7, 7776},
+	/*II_66_0F_38_22*/ {0x1a8, 7797},
+	/*II_66_0F_38_23*/ {0x1a6, 7818},
+	/*II_66_0F_38_24*/ {0x1a7, 7839},
+	/*II_66_0F_38_25*/ {0x1a6, 7860},
+	/*II_66_0F_38_28*/ {0x1aa, 7881},
+	/*II_66_0F_38_29*/ {0x1aa, 7898},
+	/*II_66_0F_38_2A*/ {0x1ab, 7917},
+	/*II_66_0F_38_2B*/ {0x1aa, 7938},
+	/*II_66_0F_38_30*/ {0x1a6, 7983},
+	/*II_66_0F_38_31*/ {0x1a7, 8004},
+	/*II_66_0F_38_32*/ {0x1a8, 8025},
+	/*II_66_0F_38_33*/ {0x1a6, 8046},
+	/*II_66_0F_38_34*/ {0x1a7, 8067},
+	/*II_66_0F_38_35*/ {0x1a6, 8088},
+	/*II_66_0F_38_37*/ {0x1a1, 8109},
+	/*II_66_0F_38_38*/ {0x1aa, 8128},
+	/*II_66_0F_38_39*/ {0x1aa, 8145},
+	/*II_66_0F_38_3A*/ {0x1aa, 8162},
+	/*II_66_0F_38_3B*/ {0x1aa, 8179},
+	/*II_66_0F_38_3C*/ {0x1aa, 8196},
+	/*II_66_0F_38_3D*/ {0x1aa, 8213},
+	/*II_66_0F_38_3E*/ {0x1aa, 8230},
+	/*II_66_0F_38_3F*/ {0x1aa, 8247},
+	/*II_66_0F_38_40*/ {0x1aa, 8264},
+	/*II_66_0F_38_41*/ {0x1aa, 8281},
+	/*II_66_0F_38_80*/ {0x1ae, 8306},
+	/*II_66_0F_38_81*/ {0x1ae, 8314},
+	/*II_66_0F_38_82*/ {0x1ae, 8323},
+	/*II_66_0F_38_DB*/ {0x1b1, 9172},
+	/*II_66_0F_38_DC*/ {0x1b1, 9189},
+	/*II_66_0F_38_DD*/ {0x1b1, 9206},
+	/*II_66_0F_38_DE*/ {0x1b1, 9231},
+	/*II_66_0F_38_DF*/ {0x1b1, 9248},
+	/*II_0F_38_F0*/ {0x1b4, 9273},
+	/*II_F2_0F_38_F0*/ {0x1b5, 9280},
+	/*II_0F_38_F1*/ {0x1b6, 9273},
+	/*II_F2_0F_38_F1*/ {0x1b7, 9280},
+	/*II_0F_71_02*/ {0x1ce, 6458},
+	/*II_66_0F_71_02*/ {0x1cf, 6458},
+	/*II_0F_71_04*/ {0x1ce, 6717},
+	/*II_66_0F_71_04*/ {0x1cf, 6717},
+	/*II_0F_71_06*/ {0x1ce, 7031},
+	/*II_66_0F_71_06*/ {0x1cf, 7031},
+	/*II_0F_72_02*/ {0x1ce, 6473},
+	/*II_66_0F_72_02*/ {0x1cf, 6473},
+	/*II_0F_72_04*/ {0x1ce, 6732},
+	/*II_66_0F_72_04*/ {0x1cf, 6732},
+	/*II_0F_72_06*/ {0x1ce, 7046},
+	/*II_66_0F_72_06*/ {0x1cf, 7046},
+	/*II_0F_73_02*/ {0x1ce, 6488},
+	/*II_66_0F_73_02*/ {0x1cf, 6488},
+	/*II_66_0F_73_03*/ {0x1cf, 9852},
+	/*II_0F_73_06*/ {0x1ce, 7061},
+	/*II_66_0F_73_06*/ {0x1cf, 7061},
+	/*II_66_0F_73_07*/ {0x1cf, 9869},
+	/*II_F3_0F_AE_00*/ {0x1d1, 9904},
+	/*II_F3_0F_AE_01*/ {0x1d1, 9934},
+	/*II_0F_AE_02*/ {0x1d2, 9944},
+	/*II_F3_0F_AE_02*/ {0x1d1, 9953},
+	/*II_0F_AE_03*/ {0x1d2, 9973},
+	/*II_F3_0F_AE_03*/ {0x1d1, 9982},
+	/*II_0F_C7_06*/ {0x1d4, 10002},
+	/*II_66_0F_C7_06*/ {0x189, 10011},
+	/*II_F3_0F_C7_06*/ {0x189, 10020}
 };
 
 _InstInfoEx InstInfosEx[381] = {
@@ -1389,382 +1389,382 @@ _InstInfoEx InstInfosEx[381] = {
 	/*II_98*/ {{0x4e, 228}, 0x0, 0, 0, 233, 239},
 	/*II_99*/ {{0x4e, 245}, 0x0, 0, 0, 250, 255},
 	/*II_E3*/ {{0x76, 427}, 0x0, 0, 0, 433, 440},
-	/*II_0F_A4*/ {{0xac, 876}, 0x0, 1, 0, 0, 0},
-	/*II_0F_A5*/ {{0xac, 876}, 0x0, 52, 0, 0, 0},
-	/*II_0F_AC*/ {{0xac, 892}, 0x0, 1, 0, 0, 0},
-	/*II_0F_AD*/ {{0xac, 892}, 0x0, 52, 0, 0, 0},
-	/*II_V_0F_10*/ {{0x126, 2139}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_10*/ {{0x126, 2148}, 0x41, 0, 0, 0, 0},
-	/*II_V_F3_0F_10*/ {{0x127, 2157}, 0x20, 69, 0, 0, 0},
-	/*II_V_F2_0F_10*/ {{0x127, 2165}, 0x20, 69, 0, 0, 0},
-	/*II_VRR_F3_0F_10*/ {{0x128, 2157}, 0x60, 0, 0, 0, 0},
-	/*II_VRR_F2_0F_10*/ {{0x129, 2165}, 0x60, 0, 0, 0, 0},
-	/*II_V_0F_11*/ {{0x12e, 2139}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_11*/ {{0x12e, 2148}, 0x41, 0, 0, 0, 0},
-	/*II_V_F3_0F_11*/ {{0x127, 2157}, 0x20, 69, 0, 0, 0},
-	/*II_V_F2_0F_11*/ {{0x127, 2165}, 0x20, 69, 0, 0, 0},
-	/*II_VRR_F3_0F_11*/ {{0x12f, 2157}, 0x60, 0, 0, 0, 0},
-	/*II_VRR_F2_0F_11*/ {{0x130, 2165}, 0x60, 0, 0, 0, 0},
-	/*II_0F_12*/ {{0x131, 2173}, 0x0, 0, 0, 2182, 0},
-	/*II_V_0F_12*/ {{0x134, 2217}, 0x0, 72, 0, 2227, 0},
-	/*II_V_66_0F_12*/ {{0x135, 2236}, 0x0, 46, 0, 0, 0},
-	/*II_V_F3_0F_12*/ {{0x126, 2245}, 0x41, 0, 0, 0, 0},
-	/*II_V_F2_0F_12*/ {{0x136, 2256}, 0x41, 0, 0, 0, 0},
-	/*II_V_0F_13*/ {{0x139, 2227}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_13*/ {{0x139, 2236}, 0x40, 0, 0, 0, 0},
-	/*II_V_0F_14*/ {{0x13c, 2286}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_14*/ {{0x13c, 2297}, 0x1, 90, 0, 0, 0},
-	/*II_V_0F_15*/ {{0x13c, 2328}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_15*/ {{0x13c, 2339}, 0x1, 90, 0, 0, 0},
-	/*II_0F_16*/ {{0x131, 2350}, 0x0, 0, 0, 2359, 0},
-	/*II_V_0F_16*/ {{0x134, 2385}, 0x0, 72, 0, 2395, 0},
-	/*II_V_66_0F_16*/ {{0x135, 2404}, 0x0, 46, 0, 0, 0},
-	/*II_V_F3_0F_16*/ {{0x126, 2413}, 0x41, 0, 0, 0, 0},
-	/*II_V_0F_17*/ {{0x139, 2395}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_17*/ {{0x139, 2404}, 0x40, 0, 0, 0, 0},
-	/*II_V_0F_28*/ {{0x126, 2489}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_28*/ {{0x126, 2498}, 0x41, 0, 0, 0, 0},
-	/*II_V_0F_29*/ {{0x12e, 2489}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_29*/ {{0x12e, 2498}, 0x41, 0, 0, 0, 0},
-	/*II_V_F3_0F_2A*/ {{0x135, 2547}, 0x2, 79, 0, 0, 0},
-	/*II_V_F2_0F_2A*/ {{0x135, 2558}, 0x2, 79, 0, 0, 0},
-	/*II_V_0F_2B*/ {{0x147, 2605}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_2B*/ {{0x147, 2615}, 0x41, 0, 0, 0, 0},
-	/*II_V_F3_0F_2C*/ {{0x14c, 2669}, 0x42, 0, 0, 0, 0},
-	/*II_V_F2_0F_2C*/ {{0x14c, 2681}, 0x42, 0, 0, 0, 0},
-	/*II_V_F3_0F_2D*/ {{0x14c, 2733}, 0x42, 0, 0, 0, 0},
-	/*II_V_F2_0F_2D*/ {{0x14c, 2744}, 0x42, 0, 0, 0, 0},
-	/*II_V_0F_2E*/ {{0x14f, 2773}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_2E*/ {{0x150, 2783}, 0x40, 0, 0, 0, 0},
-	/*II_V_0F_2F*/ {{0x14f, 2809}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_2F*/ {{0x150, 2818}, 0x40, 0, 0, 0, 0},
-	/*II_V_0F_50*/ {{0x153, 2847}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_50*/ {{0x153, 2858}, 0x41, 0, 0, 0, 0},
-	/*II_V_0F_51*/ {{0x126, 2901}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_51*/ {{0x126, 2910}, 0x41, 0, 0, 0, 0},
-	/*II_V_F3_0F_51*/ {{0x135, 2919}, 0x0, 71, 0, 0, 0},
-	/*II_V_F2_0F_51*/ {{0x135, 2928}, 0x0, 72, 0, 0, 0},
-	/*II_V_0F_52*/ {{0x126, 2955}, 0x41, 0, 0, 0, 0},
-	/*II_V_F3_0F_52*/ {{0x135, 2965}, 0x0, 71, 0, 0, 0},
-	/*II_V_0F_53*/ {{0x126, 2989}, 0x41, 0, 0, 0, 0},
-	/*II_V_F3_0F_53*/ {{0x135, 2997}, 0x0, 71, 0, 0, 0},
-	/*II_V_0F_54*/ {{0x13c, 3019}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_54*/ {{0x13c, 3027}, 0x1, 90, 0, 0, 0},
-	/*II_V_0F_55*/ {{0x13c, 3051}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_55*/ {{0x13c, 3060}, 0x1, 90, 0, 0, 0},
-	/*II_V_0F_56*/ {{0x13c, 3081}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_56*/ {{0x13c, 3088}, 0x1, 90, 0, 0, 0},
-	/*II_V_0F_57*/ {{0x13c, 3109}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_57*/ {{0x13c, 3117}, 0x1, 90, 0, 0, 0},
-	/*II_V_0F_58*/ {{0x13c, 3153}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_58*/ {{0x13c, 3161}, 0x1, 90, 0, 0, 0},
-	/*II_V_F3_0F_58*/ {{0x135, 3169}, 0x0, 71, 0, 0, 0},
-	/*II_V_F2_0F_58*/ {{0x135, 3177}, 0x0, 72, 0, 0, 0},
-	/*II_V_0F_59*/ {{0x13c, 3213}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_59*/ {{0x13c, 3221}, 0x1, 90, 0, 0, 0},
-	/*II_V_F3_0F_59*/ {{0x135, 3229}, 0x0, 71, 0, 0, 0},
-	/*II_V_F2_0F_59*/ {{0x135, 3237}, 0x0, 72, 0, 0, 0},
-	/*II_V_0F_5A*/ {{0x156, 3285}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_5A*/ {{0x157, 3296}, 0x41, 0, 0, 0, 0},
-	/*II_V_F3_0F_5A*/ {{0x135, 3307}, 0x0, 71, 0, 0, 0},
-	/*II_V_F2_0F_5A*/ {{0x135, 3318}, 0x0, 72, 0, 0, 0},
-	/*II_V_0F_5B*/ {{0x126, 3360}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_5B*/ {{0x126, 3371}, 0x41, 0, 0, 0, 0},
-	/*II_V_F3_0F_5B*/ {{0x126, 3382}, 0x41, 0, 0, 0, 0},
-	/*II_V_0F_5C*/ {{0x13c, 3422}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_5C*/ {{0x13c, 3430}, 0x1, 90, 0, 0, 0},
-	/*II_V_F3_0F_5C*/ {{0x135, 3438}, 0x0, 71, 0, 0, 0},
-	/*II_V_F2_0F_5C*/ {{0x135, 3446}, 0x0, 72, 0, 0, 0},
-	/*II_V_0F_5D*/ {{0x13c, 3482}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_5D*/ {{0x13c, 3490}, 0x1, 90, 0, 0, 0},
-	/*II_V_F3_0F_5D*/ {{0x135, 3498}, 0x0, 71, 0, 0, 0},
-	/*II_V_F2_0F_5D*/ {{0x135, 3506}, 0x0, 72, 0, 0, 0},
-	/*II_V_0F_5E*/ {{0x13c, 3542}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_5E*/ {{0x13c, 3550}, 0x1, 90, 0, 0, 0},
-	/*II_V_F3_0F_5E*/ {{0x135, 3558}, 0x0, 71, 0, 0, 0},
-	/*II_V_F2_0F_5E*/ {{0x135, 3566}, 0x0, 72, 0, 0, 0},
-	/*II_V_0F_5F*/ {{0x13c, 3602}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_5F*/ {{0x13c, 3610}, 0x1, 90, 0, 0, 0},
-	/*II_V_F3_0F_5F*/ {{0x135, 3618}, 0x0, 71, 0, 0, 0},
-	/*II_V_F2_0F_5F*/ {{0x135, 3626}, 0x0, 72, 0, 0, 0},
-	/*II_V_66_0F_60*/ {{0x135, 3645}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_61*/ {{0x135, 3668}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_62*/ {{0x135, 3691}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_63*/ {{0x135, 3713}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_64*/ {{0x135, 3733}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_65*/ {{0x135, 3752}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_66*/ {{0x135, 3771}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_67*/ {{0x135, 3791}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_68*/ {{0x135, 3813}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_69*/ {{0x135, 3836}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_6A*/ {{0x135, 3859}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_6B*/ {{0x135, 3881}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_6C*/ {{0x135, 3904}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_6D*/ {{0x135, 3929}, 0x0, 73, 0, 0, 0},
-	/*II_0F_6E*/ {{0x15a, 3942}, 0x0, 0, 0, 0, 3948},
-	/*II_66_0F_6E*/ {{0x15b, 3942}, 0x0, 0, 0, 0, 3948},
-	/*II_V_66_0F_6E*/ {{0x15c, 3954}, 0x46, 0, 0, 3961, 0},
-	/*II_V_66_0F_6F*/ {{0x126, 3984}, 0x41, 0, 0, 0, 0},
-	/*II_V_F3_0F_6F*/ {{0x126, 3993}, 0x41, 0, 0, 0, 0},
-	/*II_0F_70*/ {{0x15e, 4002}, 0x0, 1, 0, 0, 0},
-	/*II_66_0F_70*/ {{0x15f, 4010}, 0x0, 1, 0, 0, 0},
-	/*II_F3_0F_70*/ {{0x15f, 4018}, 0x0, 1, 0, 0, 0},
-	/*II_F2_0F_70*/ {{0x15f, 4027}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_70*/ {{0x160, 4036}, 0x40, 1, 0, 0, 0},
-	/*II_V_F3_0F_70*/ {{0x160, 4045}, 0x40, 1, 0, 0, 0},
-	/*II_V_F2_0F_70*/ {{0x160, 4055}, 0x40, 1, 0, 0, 0},
-	/*II_V_66_0F_74*/ {{0x135, 4074}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_75*/ {{0x135, 4093}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_76*/ {{0x135, 4112}, 0x0, 73, 0, 0, 0},
-	/*II_V_0F_77*/ {{0x162, 4128}, 0x49, 0, 0, 4140, 0},
-	/*II_66_0F_78*/ {{0x164, 4158}, 0x0, 8, 0, 0, 0},
-	/*II_F2_0F_78*/ {{0x165, 4165}, 0x0, 7, 8, 0, 0},
-	/*II_V_66_0F_7C*/ {{0x13c, 4219}, 0x1, 90, 0, 0, 0},
-	/*II_V_F2_0F_7C*/ {{0x13c, 4228}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_7D*/ {{0x13c, 4253}, 0x1, 90, 0, 0, 0},
-	/*II_V_F2_0F_7D*/ {{0x13c, 4262}, 0x1, 90, 0, 0, 0},
-	/*II_0F_7E*/ {{0x16c, 3942}, 0x0, 0, 0, 0, 3948},
-	/*II_66_0F_7E*/ {{0x16d, 3942}, 0x0, 0, 0, 0, 3948},
-	/*II_V_66_0F_7E*/ {{0x16e, 3954}, 0x46, 0, 0, 3961, 0},
-	/*II_V_F3_0F_7E*/ {{0x150, 3961}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_7F*/ {{0x12e, 3984}, 0x41, 0, 0, 0, 0},
-	/*II_V_F3_0F_7F*/ {{0x12e, 3993}, 0x41, 0, 0, 0, 0},
-	/*II_0F_AE_04*/ {{0x170, 4271}, 0x0, 0, 0, 0, 4278},
-	/*II_0F_AE_05*/ {{0x171, 4287}, 0x0, 0, 0, 4295, 4303},
-	/*II_0F_AE_06*/ {{0x171, 4313}, 0x0, 0, 0, 4321, 4331},
-	/*II_0F_AE_07*/ {{0x172, 4343}, 0x0, 0, 0, 4351, 0},
-	/*II_0F_C2*/ {{0x179, 4392}, 0x0, 0, 0, 4401, 4410},
-	/*II_66_0F_C2*/ {{0x17a, 4471}, 0x0, 0, 0, 4480, 4489},
-	/*II_F3_0F_C2*/ {{0x17b, 4550}, 0x0, 0, 0, 4559, 4568},
-	/*II_F2_0F_C2*/ {{0x17c, 4629}, 0x0, 0, 0, 4638, 4647},
-	/*II_V_0F_C2*/ {{0x17d, 4708}, 0x1, 90, 0, 4718, 4728},
-	/*II_V_66_0F_C2*/ {{0x17d, 5110}, 0x1, 90, 0, 5120, 5130},
-	/*II_V_F3_0F_C2*/ {{0x17e, 5512}, 0x0, 71, 0, 5522, 5532},
-	/*II_V_F2_0F_C2*/ {{0x17e, 5914}, 0x0, 72, 0, 5924, 5934},
-	/*II_0F_C4*/ {{0x17f, 6316}, 0x0, 1, 0, 0, 0},
-	/*II_66_0F_C4*/ {{0x180, 6316}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_C4*/ {{0x181, 6324}, 0x0, 25, 1, 0, 0},
-	/*II_0F_C5*/ {{0x182, 6333}, 0x0, 1, 0, 0, 0},
-	/*II_66_0F_C5*/ {{0x183, 6333}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_C5*/ {{0x184, 6341}, 0x40, 1, 0, 0, 0},
-	/*II_0F_C6*/ {{0x185, 6350}, 0x0, 1, 0, 0, 0},
-	/*II_66_0F_C6*/ {{0x15f, 6358}, 0x0, 1, 0, 0, 0},
-	/*II_V_0F_C6*/ {{0x186, 6366}, 0x1, 90, 1, 0, 0},
-	/*II_V_66_0F_C6*/ {{0x186, 6375}, 0x1, 90, 1, 0, 0},
-	/*II_0F_C7_01*/ {{0x187, 6384}, 0x0, 0, 0, 0, 6395},
-	/*II_V_66_0F_D0*/ {{0x13c, 6436}, 0x1, 90, 0, 0, 0},
-	/*II_V_F2_0F_D0*/ {{0x13c, 6447}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_D1*/ {{0x135, 6465}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_D2*/ {{0x135, 6480}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_D3*/ {{0x135, 6495}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_D4*/ {{0x135, 6510}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_D5*/ {{0x135, 6526}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_D6*/ {{0x18b, 3961}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_D7*/ {{0x18e, 6563}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_D8*/ {{0x135, 6583}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_D9*/ {{0x135, 6602}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_DA*/ {{0x135, 6620}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_DB*/ {{0x135, 6635}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_DC*/ {{0x135, 6651}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_DD*/ {{0x135, 6651}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_DE*/ {{0x135, 6678}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_DF*/ {{0x135, 6694}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_E0*/ {{0x135, 6709}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_E1*/ {{0x135, 6724}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_E2*/ {{0x135, 6739}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_E3*/ {{0x135, 6754}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_E4*/ {{0x135, 6771}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_E5*/ {{0x135, 6789}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_E6*/ {{0x157, 6829}, 0x41, 0, 0, 0, 0},
-	/*II_V_F3_0F_E6*/ {{0x156, 6841}, 0x41, 0, 0, 0, 0},
-	/*II_V_F2_0F_E6*/ {{0x157, 6852}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_E7*/ {{0x147, 6880}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_E8*/ {{0x135, 6898}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_E9*/ {{0x135, 6915}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_EA*/ {{0x135, 6932}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_EB*/ {{0x135, 6946}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_EC*/ {{0x135, 6960}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_ED*/ {{0x135, 6977}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_EE*/ {{0x135, 6994}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_EF*/ {{0x135, 7009}, 0x0, 73, 0, 0, 0},
-	/*II_V_F2_0F_F0*/ {{0x192, 7023}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_F1*/ {{0x135, 7038}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_F2*/ {{0x135, 7053}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_F3*/ {{0x135, 7068}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_F4*/ {{0x135, 7085}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_F5*/ {{0x135, 7104}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_F6*/ {{0x135, 7122}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_F7*/ {{0x196, 7153}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_F8*/ {{0x135, 7173}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_F9*/ {{0x135, 7188}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_FA*/ {{0x135, 7203}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_FB*/ {{0x135, 7218}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_FC*/ {{0x135, 7233}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_FD*/ {{0x135, 7248}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_FE*/ {{0x135, 7263}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_00*/ {{0x135, 7371}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_01*/ {{0x135, 7388}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_02*/ {{0x135, 7405}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_03*/ {{0x135, 7423}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_04*/ {{0x135, 7444}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_05*/ {{0x135, 7464}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_06*/ {{0x135, 7481}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_07*/ {{0x135, 7499}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_08*/ {{0x135, 7517}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_09*/ {{0x135, 7534}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_0A*/ {{0x135, 7551}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_0B*/ {{0x135, 7570}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_0C*/ {{0x13c, 7581}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_38_0D*/ {{0x13c, 7592}, 0x1, 90, 0, 0, 0},
-	/*II_V_66_0F_38_0E*/ {{0x126, 7603}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_38_0F*/ {{0x126, 7612}, 0x41, 0, 0, 0, 0},
-	/*II_66_0F_38_10*/ {{0x19f, 7621}, 0x0, 74, 0, 0, 0},
-	/*II_66_0F_38_14*/ {{0x19f, 7631}, 0x0, 74, 0, 0, 0},
-	/*II_66_0F_38_15*/ {{0x19f, 7641}, 0x0, 74, 0, 0, 0},
-	/*II_V_66_0F_38_17*/ {{0x126, 7658}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_38_18*/ {{0x1a1, 7666}, 0x41, 0, 0, 0, 0},
-	/*II_V_66_0F_38_19*/ {{0x1a2, 7680}, 0x50, 0, 0, 0, 0},
-	/*II_V_66_0F_38_1A*/ {{0x1a3, 7694}, 0x50, 0, 0, 0, 0},
-	/*II_V_66_0F_38_1C*/ {{0x1a4, 7717}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_1D*/ {{0x1a4, 7732}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_1E*/ {{0x1a4, 7747}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_20*/ {{0x150, 7765}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_21*/ {{0x14f, 7786}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_22*/ {{0x1a8, 7807}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_23*/ {{0x150, 7828}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_24*/ {{0x14f, 7849}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_25*/ {{0x150, 7870}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_28*/ {{0x135, 7889}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_29*/ {{0x135, 7907}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_2A*/ {{0x1ab, 7927}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_2B*/ {{0x135, 7948}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_2C*/ {{0x13c, 7959}, 0x1, 92, 0, 0, 0},
-	/*II_V_66_0F_38_2D*/ {{0x13c, 7971}, 0x1, 92, 0, 0, 0},
-	/*II_V_66_0F_38_2E*/ {{0x1ac, 7959}, 0x1, 83, 0, 0, 0},
-	/*II_V_66_0F_38_2F*/ {{0x1ac, 7971}, 0x1, 83, 0, 0, 0},
-	/*II_V_66_0F_38_30*/ {{0x150, 7993}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_31*/ {{0x14f, 8014}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_32*/ {{0x1a8, 8035}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_33*/ {{0x150, 8056}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_34*/ {{0x14f, 8077}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_35*/ {{0x150, 8098}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_37*/ {{0x135, 8118}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_38*/ {{0x135, 8136}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_39*/ {{0x135, 8153}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_3A*/ {{0x135, 8170}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_3B*/ {{0x135, 8187}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_3C*/ {{0x135, 8204}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_3D*/ {{0x135, 8221}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_3E*/ {{0x135, 8238}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_3F*/ {{0x135, 8255}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_40*/ {{0x135, 8272}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_41*/ {{0x1a4, 8293}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_96*/ {{0x1ae, 8332}, 0x7, 90, 0, 8348, 0},
-	/*II_V_66_0F_38_97*/ {{0x1ae, 8364}, 0x7, 90, 0, 8380, 0},
-	/*II_V_66_0F_38_98*/ {{0x1ae, 8396}, 0x7, 90, 0, 8409, 0},
-	/*II_V_66_0F_38_99*/ {{0x1af, 8422}, 0x6, 80, 0, 8435, 0},
-	/*II_V_66_0F_38_9A*/ {{0x1ae, 8448}, 0x7, 90, 0, 8461, 0},
-	/*II_V_66_0F_38_9B*/ {{0x1af, 8474}, 0x6, 80, 0, 8487, 0},
-	/*II_V_66_0F_38_9C*/ {{0x1ae, 8500}, 0x7, 90, 0, 8514, 0},
-	/*II_V_66_0F_38_9D*/ {{0x1af, 8528}, 0x6, 80, 0, 8542, 0},
-	/*II_V_66_0F_38_9E*/ {{0x1ae, 8556}, 0x7, 90, 0, 8570, 0},
-	/*II_V_66_0F_38_9F*/ {{0x1af, 8584}, 0x6, 80, 0, 8598, 0},
-	/*II_V_66_0F_38_A6*/ {{0x1ae, 8612}, 0x7, 90, 0, 8628, 0},
-	/*II_V_66_0F_38_A7*/ {{0x1ae, 8644}, 0x7, 90, 0, 8660, 0},
-	/*II_V_66_0F_38_A8*/ {{0x1ae, 8676}, 0x7, 90, 0, 8689, 0},
-	/*II_V_66_0F_38_A9*/ {{0x1af, 8702}, 0x6, 80, 0, 8715, 0},
-	/*II_V_66_0F_38_AA*/ {{0x1ae, 8728}, 0x7, 90, 0, 8741, 0},
-	/*II_V_66_0F_38_AB*/ {{0x1af, 8754}, 0x6, 80, 0, 8767, 0},
-	/*II_V_66_0F_38_AC*/ {{0x1ae, 8780}, 0x7, 90, 0, 8794, 0},
-	/*II_V_66_0F_38_AD*/ {{0x1af, 8808}, 0x6, 80, 0, 8822, 0},
-	/*II_V_66_0F_38_AE*/ {{0x1ae, 8836}, 0x7, 90, 0, 8850, 0},
-	/*II_V_66_0F_38_AF*/ {{0x1af, 8864}, 0x6, 80, 0, 8878, 0},
-	/*II_V_66_0F_38_B6*/ {{0x1ae, 8892}, 0x7, 90, 0, 8908, 0},
-	/*II_V_66_0F_38_B7*/ {{0x1ae, 8924}, 0x7, 90, 0, 8940, 0},
-	/*II_V_66_0F_38_B8*/ {{0x1ae, 8956}, 0x7, 90, 0, 8969, 0},
-	/*II_V_66_0F_38_B9*/ {{0x1af, 8982}, 0x6, 80, 0, 8995, 0},
-	/*II_V_66_0F_38_BA*/ {{0x1ae, 9008}, 0x7, 90, 0, 9021, 0},
-	/*II_V_66_0F_38_BB*/ {{0x1af, 9034}, 0x6, 80, 0, 9047, 0},
-	/*II_V_66_0F_38_BC*/ {{0x1ae, 9060}, 0x7, 90, 0, 9074, 0},
-	/*II_V_66_0F_38_BD*/ {{0x1af, 9088}, 0x6, 80, 0, 9102, 0},
-	/*II_V_66_0F_38_BE*/ {{0x1ae, 9116}, 0x7, 90, 0, 9130, 0},
-	/*II_V_66_0F_38_BF*/ {{0x1af, 9144}, 0x6, 80, 0, 9158, 0},
-	/*II_V_66_0F_38_DB*/ {{0x1b1, 9180}, 0x40, 0, 0, 0, 0},
-	/*II_V_66_0F_38_DC*/ {{0x1b2, 9197}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_DD*/ {{0x1b2, 9218}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_DE*/ {{0x1b2, 9239}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_38_DF*/ {{0x1b2, 9260}, 0x0, 73, 0, 0, 0},
-	/*II_V_66_0F_3A_04*/ {{0x1b7, 7581}, 0x41, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_05*/ {{0x1b7, 7592}, 0x41, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_06*/ {{0x1b8, 9287}, 0x10, 86, 1, 0, 0},
-	/*II_66_0F_3A_08*/ {{0x19f, 9299}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_08*/ {{0x1b7, 9308}, 0x41, 1, 0, 0, 0},
-	/*II_66_0F_3A_09*/ {{0x19f, 9318}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_09*/ {{0x1b7, 9327}, 0x41, 1, 0, 0, 0},
-	/*II_66_0F_3A_0A*/ {{0x1b9, 9337}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_0A*/ {{0x181, 9346}, 0x0, 71, 1, 0, 0},
-	/*II_66_0F_3A_0B*/ {{0x1ba, 9356}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_0B*/ {{0x181, 9365}, 0x0, 72, 1, 0, 0},
-	/*II_66_0F_3A_0C*/ {{0x19f, 9375}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_0C*/ {{0x186, 9384}, 0x1, 90, 1, 0, 0},
-	/*II_66_0F_3A_0D*/ {{0x19f, 9394}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_0D*/ {{0x186, 9403}, 0x1, 90, 1, 0, 0},
-	/*II_66_0F_3A_0E*/ {{0x19f, 9413}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_0E*/ {{0x181, 9422}, 0x0, 73, 1, 0, 0},
-	/*II_0F_3A_0F*/ {{0x1bb, 9432}, 0x0, 1, 0, 0, 0},
-	/*II_66_0F_3A_0F*/ {{0x1bc, 9432}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_0F*/ {{0x181, 9441}, 0x0, 73, 1, 0, 0},
-	/*II_66_0F_3A_14*/ {{0x1bd, 9451}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_14*/ {{0x1be, 9459}, 0x40, 1, 0, 0, 0},
-	/*II_66_0F_3A_15*/ {{0x1bf, 6333}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_15*/ {{0x1c0, 6341}, 0x40, 1, 0, 0, 0},
-	/*II_66_0F_3A_16*/ {{0x1c1, 9468}, 0x0, 1, 0, 0, 9476},
-	/*II_V_66_0F_3A_16*/ {{0x1c2, 9484}, 0x46, 1, 0, 9493, 0},
-	/*II_66_0F_3A_17*/ {{0x1c3, 9502}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_17*/ {{0x1c4, 9513}, 0x40, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_18*/ {{0x1b8, 9525}, 0x10, 73, 1, 0, 0},
-	/*II_V_66_0F_3A_19*/ {{0x1c5, 9538}, 0x50, 1, 0, 0, 0},
-	/*II_66_0F_3A_20*/ {{0x1c6, 9552}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_20*/ {{0x181, 9560}, 0x0, 76, 1, 0, 0},
-	/*II_66_0F_3A_21*/ {{0x1b9, 9569}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_21*/ {{0x181, 9579}, 0x0, 71, 1, 0, 0},
-	/*II_66_0F_3A_22*/ {{0x1c7, 9590}, 0x0, 1, 0, 0, 9598},
-	/*II_V_66_0F_3A_22*/ {{0x181, 9606}, 0x6, 79, 1, 9615, 0},
-	/*II_66_0F_3A_40*/ {{0x19f, 9624}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_40*/ {{0x186, 9630}, 0x1, 90, 1, 0, 0},
-	/*II_66_0F_3A_41*/ {{0x19f, 9637}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_41*/ {{0x181, 9643}, 0x0, 73, 1, 0, 0},
-	/*II_66_0F_3A_42*/ {{0x19f, 9650}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_42*/ {{0x181, 9659}, 0x0, 73, 1, 0, 0},
-	/*II_66_0F_3A_44*/ {{0x1c8, 9669}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_44*/ {{0x1c9, 9680}, 0x0, 73, 1, 0, 0},
-	/*II_V_66_0F_3A_4A*/ {{0x186, 9692}, 0x1, 90, 84, 0, 0},
-	/*II_V_66_0F_3A_4B*/ {{0x186, 9703}, 0x1, 90, 84, 0, 0},
-	/*II_V_66_0F_3A_4C*/ {{0x181, 9714}, 0x0, 73, 82, 0, 0},
-	/*II_66_0F_3A_60*/ {{0x1ca, 9725}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_60*/ {{0x160, 9736}, 0x40, 1, 0, 0, 0},
-	/*II_66_0F_3A_61*/ {{0x1ca, 9748}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_61*/ {{0x160, 9759}, 0x40, 1, 0, 0, 0},
-	/*II_66_0F_3A_62*/ {{0x1ca, 9771}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_62*/ {{0x160, 9782}, 0x40, 1, 0, 0, 0},
-	/*II_66_0F_3A_63*/ {{0x1ca, 9794}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_63*/ {{0x160, 9805}, 0x40, 1, 0, 0, 0},
-	/*II_66_0F_3A_DF*/ {{0x1cb, 9817}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_3A_DF*/ {{0x1cc, 9834}, 0x40, 1, 0, 0, 0},
-	/*II_V_66_0F_71_02*/ {{0x1cf, 6465}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_71_04*/ {{0x1cf, 6724}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_71_06*/ {{0x1cf, 7038}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_72_02*/ {{0x1cf, 6480}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_72_04*/ {{0x1cf, 6739}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_72_06*/ {{0x1cf, 7053}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_73_02*/ {{0x1cf, 6495}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_73_03*/ {{0x1cf, 9860}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_73_06*/ {{0x1cf, 7068}, 0x0, 1, 0, 0, 0},
-	/*II_V_66_0F_73_07*/ {{0x1cf, 9877}, 0x0, 1, 0, 0, 0},
-	/*II_0F_AE_00*/ {{0x170, 9886}, 0x0, 0, 0, 0, 9894},
-	/*II_0F_AE_01*/ {{0x170, 9914}, 0x0, 0, 0, 0, 9923},
-	/*II_V_0F_AE_02*/ {{0x1d2, 9963}, 0x40, 0, 0, 0, 0},
-	/*II_V_0F_AE_03*/ {{0x1d2, 9992}, 0x40, 0, 0, 0, 0}
+	/*II_0F_A4*/ {{0xad, 876}, 0x0, 1, 0, 0, 0},
+	/*II_0F_A5*/ {{0xad, 876}, 0x0, 52, 0, 0, 0},
+	/*II_0F_AC*/ {{0xad, 892}, 0x0, 1, 0, 0, 0},
+	/*II_0F_AD*/ {{0xad, 892}, 0x0, 52, 0, 0, 0},
+	/*II_V_0F_10*/ {{0x127, 2139}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_10*/ {{0x127, 2148}, 0x41, 0, 0, 0, 0},
+	/*II_V_F3_0F_10*/ {{0x128, 2157}, 0x20, 69, 0, 0, 0},
+	/*II_V_F2_0F_10*/ {{0x128, 2165}, 0x20, 69, 0, 0, 0},
+	/*II_VRR_F3_0F_10*/ {{0x129, 2157}, 0x60, 0, 0, 0, 0},
+	/*II_VRR_F2_0F_10*/ {{0x12a, 2165}, 0x60, 0, 0, 0, 0},
+	/*II_V_0F_11*/ {{0x12f, 2139}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_11*/ {{0x12f, 2148}, 0x41, 0, 0, 0, 0},
+	/*II_V_F3_0F_11*/ {{0x128, 2157}, 0x20, 69, 0, 0, 0},
+	/*II_V_F2_0F_11*/ {{0x128, 2165}, 0x20, 69, 0, 0, 0},
+	/*II_VRR_F3_0F_11*/ {{0x130, 2157}, 0x60, 0, 0, 0, 0},
+	/*II_VRR_F2_0F_11*/ {{0x131, 2165}, 0x60, 0, 0, 0, 0},
+	/*II_0F_12*/ {{0x132, 2173}, 0x0, 0, 0, 2182, 0},
+	/*II_V_0F_12*/ {{0x135, 2217}, 0x0, 72, 0, 2227, 0},
+	/*II_V_66_0F_12*/ {{0x136, 2236}, 0x0, 46, 0, 0, 0},
+	/*II_V_F3_0F_12*/ {{0x127, 2245}, 0x41, 0, 0, 0, 0},
+	/*II_V_F2_0F_12*/ {{0x137, 2256}, 0x41, 0, 0, 0, 0},
+	/*II_V_0F_13*/ {{0x13a, 2227}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_13*/ {{0x13a, 2236}, 0x40, 0, 0, 0, 0},
+	/*II_V_0F_14*/ {{0x13d, 2286}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_14*/ {{0x13d, 2297}, 0x1, 90, 0, 0, 0},
+	/*II_V_0F_15*/ {{0x13d, 2328}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_15*/ {{0x13d, 2339}, 0x1, 90, 0, 0, 0},
+	/*II_0F_16*/ {{0x132, 2350}, 0x0, 0, 0, 2359, 0},
+	/*II_V_0F_16*/ {{0x135, 2385}, 0x0, 72, 0, 2395, 0},
+	/*II_V_66_0F_16*/ {{0x136, 2404}, 0x0, 46, 0, 0, 0},
+	/*II_V_F3_0F_16*/ {{0x127, 2413}, 0x41, 0, 0, 0, 0},
+	/*II_V_0F_17*/ {{0x13a, 2395}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_17*/ {{0x13a, 2404}, 0x40, 0, 0, 0, 0},
+	/*II_V_0F_28*/ {{0x127, 2489}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_28*/ {{0x127, 2498}, 0x41, 0, 0, 0, 0},
+	/*II_V_0F_29*/ {{0x12f, 2489}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_29*/ {{0x12f, 2498}, 0x41, 0, 0, 0, 0},
+	/*II_V_F3_0F_2A*/ {{0x136, 2547}, 0x2, 79, 0, 0, 0},
+	/*II_V_F2_0F_2A*/ {{0x136, 2558}, 0x2, 79, 0, 0, 0},
+	/*II_V_0F_2B*/ {{0x148, 2605}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_2B*/ {{0x148, 2615}, 0x41, 0, 0, 0, 0},
+	/*II_V_F3_0F_2C*/ {{0x14d, 2669}, 0x42, 0, 0, 0, 0},
+	/*II_V_F2_0F_2C*/ {{0x14d, 2681}, 0x42, 0, 0, 0, 0},
+	/*II_V_F3_0F_2D*/ {{0x14d, 2733}, 0x42, 0, 0, 0, 0},
+	/*II_V_F2_0F_2D*/ {{0x14d, 2744}, 0x42, 0, 0, 0, 0},
+	/*II_V_0F_2E*/ {{0x150, 2773}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_2E*/ {{0x151, 2783}, 0x40, 0, 0, 0, 0},
+	/*II_V_0F_2F*/ {{0x150, 2809}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_2F*/ {{0x151, 2818}, 0x40, 0, 0, 0, 0},
+	/*II_V_0F_50*/ {{0x154, 2847}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_50*/ {{0x154, 2858}, 0x41, 0, 0, 0, 0},
+	/*II_V_0F_51*/ {{0x127, 2901}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_51*/ {{0x127, 2910}, 0x41, 0, 0, 0, 0},
+	/*II_V_F3_0F_51*/ {{0x136, 2919}, 0x0, 71, 0, 0, 0},
+	/*II_V_F2_0F_51*/ {{0x136, 2928}, 0x0, 72, 0, 0, 0},
+	/*II_V_0F_52*/ {{0x127, 2955}, 0x41, 0, 0, 0, 0},
+	/*II_V_F3_0F_52*/ {{0x136, 2965}, 0x0, 71, 0, 0, 0},
+	/*II_V_0F_53*/ {{0x127, 2989}, 0x41, 0, 0, 0, 0},
+	/*II_V_F3_0F_53*/ {{0x136, 2997}, 0x0, 71, 0, 0, 0},
+	/*II_V_0F_54*/ {{0x13d, 3019}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_54*/ {{0x13d, 3027}, 0x1, 90, 0, 0, 0},
+	/*II_V_0F_55*/ {{0x13d, 3051}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_55*/ {{0x13d, 3060}, 0x1, 90, 0, 0, 0},
+	/*II_V_0F_56*/ {{0x13d, 3081}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_56*/ {{0x13d, 3088}, 0x1, 90, 0, 0, 0},
+	/*II_V_0F_57*/ {{0x13d, 3109}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_57*/ {{0x13d, 3117}, 0x1, 90, 0, 0, 0},
+	/*II_V_0F_58*/ {{0x13d, 3153}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_58*/ {{0x13d, 3161}, 0x1, 90, 0, 0, 0},
+	/*II_V_F3_0F_58*/ {{0x136, 3169}, 0x0, 71, 0, 0, 0},
+	/*II_V_F2_0F_58*/ {{0x136, 3177}, 0x0, 72, 0, 0, 0},
+	/*II_V_0F_59*/ {{0x13d, 3213}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_59*/ {{0x13d, 3221}, 0x1, 90, 0, 0, 0},
+	/*II_V_F3_0F_59*/ {{0x136, 3229}, 0x0, 71, 0, 0, 0},
+	/*II_V_F2_0F_59*/ {{0x136, 3237}, 0x0, 72, 0, 0, 0},
+	/*II_V_0F_5A*/ {{0x157, 3285}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_5A*/ {{0x158, 3296}, 0x41, 0, 0, 0, 0},
+	/*II_V_F3_0F_5A*/ {{0x136, 3307}, 0x0, 71, 0, 0, 0},
+	/*II_V_F2_0F_5A*/ {{0x136, 3318}, 0x0, 72, 0, 0, 0},
+	/*II_V_0F_5B*/ {{0x127, 3360}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_5B*/ {{0x127, 3371}, 0x41, 0, 0, 0, 0},
+	/*II_V_F3_0F_5B*/ {{0x127, 3382}, 0x41, 0, 0, 0, 0},
+	/*II_V_0F_5C*/ {{0x13d, 3422}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_5C*/ {{0x13d, 3430}, 0x1, 90, 0, 0, 0},
+	/*II_V_F3_0F_5C*/ {{0x136, 3438}, 0x0, 71, 0, 0, 0},
+	/*II_V_F2_0F_5C*/ {{0x136, 3446}, 0x0, 72, 0, 0, 0},
+	/*II_V_0F_5D*/ {{0x13d, 3482}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_5D*/ {{0x13d, 3490}, 0x1, 90, 0, 0, 0},
+	/*II_V_F3_0F_5D*/ {{0x136, 3498}, 0x0, 71, 0, 0, 0},
+	/*II_V_F2_0F_5D*/ {{0x136, 3506}, 0x0, 72, 0, 0, 0},
+	/*II_V_0F_5E*/ {{0x13d, 3542}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_5E*/ {{0x13d, 3550}, 0x1, 90, 0, 0, 0},
+	/*II_V_F3_0F_5E*/ {{0x136, 3558}, 0x0, 71, 0, 0, 0},
+	/*II_V_F2_0F_5E*/ {{0x136, 3566}, 0x0, 72, 0, 0, 0},
+	/*II_V_0F_5F*/ {{0x13d, 3602}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_5F*/ {{0x13d, 3610}, 0x1, 90, 0, 0, 0},
+	/*II_V_F3_0F_5F*/ {{0x136, 3618}, 0x0, 71, 0, 0, 0},
+	/*II_V_F2_0F_5F*/ {{0x136, 3626}, 0x0, 72, 0, 0, 0},
+	/*II_V_66_0F_60*/ {{0x136, 3645}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_61*/ {{0x136, 3668}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_62*/ {{0x136, 3691}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_63*/ {{0x136, 3713}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_64*/ {{0x136, 3733}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_65*/ {{0x136, 3752}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_66*/ {{0x136, 3771}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_67*/ {{0x136, 3791}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_68*/ {{0x136, 3813}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_69*/ {{0x136, 3836}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_6A*/ {{0x136, 3859}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_6B*/ {{0x136, 3881}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_6C*/ {{0x136, 3904}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_6D*/ {{0x136, 3929}, 0x0, 73, 0, 0, 0},
+	/*II_0F_6E*/ {{0x15b, 3942}, 0x0, 0, 0, 0, 3948},
+	/*II_66_0F_6E*/ {{0x15c, 3942}, 0x0, 0, 0, 0, 3948},
+	/*II_V_66_0F_6E*/ {{0x15d, 3954}, 0x46, 0, 0, 3961, 0},
+	/*II_V_66_0F_6F*/ {{0x127, 3984}, 0x41, 0, 0, 0, 0},
+	/*II_V_F3_0F_6F*/ {{0x127, 3993}, 0x41, 0, 0, 0, 0},
+	/*II_0F_70*/ {{0x15f, 4002}, 0x0, 1, 0, 0, 0},
+	/*II_66_0F_70*/ {{0x160, 4010}, 0x0, 1, 0, 0, 0},
+	/*II_F3_0F_70*/ {{0x160, 4018}, 0x0, 1, 0, 0, 0},
+	/*II_F2_0F_70*/ {{0x160, 4027}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_70*/ {{0x161, 4036}, 0x40, 1, 0, 0, 0},
+	/*II_V_F3_0F_70*/ {{0x161, 4045}, 0x40, 1, 0, 0, 0},
+	/*II_V_F2_0F_70*/ {{0x161, 4055}, 0x40, 1, 0, 0, 0},
+	/*II_V_66_0F_74*/ {{0x136, 4074}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_75*/ {{0x136, 4093}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_76*/ {{0x136, 4112}, 0x0, 73, 0, 0, 0},
+	/*II_V_0F_77*/ {{0x163, 4128}, 0x49, 0, 0, 4140, 0},
+	/*II_66_0F_78*/ {{0x165, 4158}, 0x0, 8, 0, 0, 0},
+	/*II_F2_0F_78*/ {{0x166, 4165}, 0x0, 7, 8, 0, 0},
+	/*II_V_66_0F_7C*/ {{0x13d, 4219}, 0x1, 90, 0, 0, 0},
+	/*II_V_F2_0F_7C*/ {{0x13d, 4228}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_7D*/ {{0x13d, 4253}, 0x1, 90, 0, 0, 0},
+	/*II_V_F2_0F_7D*/ {{0x13d, 4262}, 0x1, 90, 0, 0, 0},
+	/*II_0F_7E*/ {{0x16d, 3942}, 0x0, 0, 0, 0, 3948},
+	/*II_66_0F_7E*/ {{0x16e, 3942}, 0x0, 0, 0, 0, 3948},
+	/*II_V_66_0F_7E*/ {{0x16f, 3954}, 0x46, 0, 0, 3961, 0},
+	/*II_V_F3_0F_7E*/ {{0x151, 3961}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_7F*/ {{0x12f, 3984}, 0x41, 0, 0, 0, 0},
+	/*II_V_F3_0F_7F*/ {{0x12f, 3993}, 0x41, 0, 0, 0, 0},
+	/*II_0F_AE_04*/ {{0x171, 4271}, 0x0, 0, 0, 0, 4278},
+	/*II_0F_AE_05*/ {{0x172, 4287}, 0x0, 0, 0, 4295, 4303},
+	/*II_0F_AE_06*/ {{0x172, 4313}, 0x0, 0, 0, 4321, 4331},
+	/*II_0F_AE_07*/ {{0x173, 4343}, 0x0, 0, 0, 4351, 0},
+	/*II_0F_C2*/ {{0x17a, 4392}, 0x0, 0, 0, 4401, 4410},
+	/*II_66_0F_C2*/ {{0x17b, 4471}, 0x0, 0, 0, 4480, 4489},
+	/*II_F3_0F_C2*/ {{0x17c, 4550}, 0x0, 0, 0, 4559, 4568},
+	/*II_F2_0F_C2*/ {{0x17d, 4629}, 0x0, 0, 0, 4638, 4647},
+	/*II_V_0F_C2*/ {{0x17e, 4708}, 0x1, 90, 0, 4718, 4728},
+	/*II_V_66_0F_C2*/ {{0x17e, 5110}, 0x1, 90, 0, 5120, 5130},
+	/*II_V_F3_0F_C2*/ {{0x17f, 5512}, 0x0, 71, 0, 5522, 5532},
+	/*II_V_F2_0F_C2*/ {{0x17f, 5914}, 0x0, 72, 0, 5924, 5934},
+	/*II_0F_C4*/ {{0x180, 6316}, 0x0, 1, 0, 0, 0},
+	/*II_66_0F_C4*/ {{0x181, 6316}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_C4*/ {{0x182, 6324}, 0x0, 25, 1, 0, 0},
+	/*II_0F_C5*/ {{0x183, 6333}, 0x0, 1, 0, 0, 0},
+	/*II_66_0F_C5*/ {{0x184, 6333}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_C5*/ {{0x185, 6341}, 0x40, 1, 0, 0, 0},
+	/*II_0F_C6*/ {{0x186, 6350}, 0x0, 1, 0, 0, 0},
+	/*II_66_0F_C6*/ {{0x160, 6358}, 0x0, 1, 0, 0, 0},
+	/*II_V_0F_C6*/ {{0x187, 6366}, 0x1, 90, 1, 0, 0},
+	/*II_V_66_0F_C6*/ {{0x187, 6375}, 0x1, 90, 1, 0, 0},
+	/*II_0F_C7_01*/ {{0x188, 6384}, 0x0, 0, 0, 0, 6395},
+	/*II_V_66_0F_D0*/ {{0x13d, 6436}, 0x1, 90, 0, 0, 0},
+	/*II_V_F2_0F_D0*/ {{0x13d, 6447}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_D1*/ {{0x136, 6465}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_D2*/ {{0x136, 6480}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_D3*/ {{0x136, 6495}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_D4*/ {{0x136, 6510}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_D5*/ {{0x136, 6526}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_D6*/ {{0x18c, 3961}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_D7*/ {{0x18f, 6563}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_D8*/ {{0x136, 6583}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_D9*/ {{0x136, 6602}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_DA*/ {{0x136, 6620}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_DB*/ {{0x136, 6635}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_DC*/ {{0x136, 6651}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_DD*/ {{0x136, 6651}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_DE*/ {{0x136, 6678}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_DF*/ {{0x136, 6694}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_E0*/ {{0x136, 6709}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_E1*/ {{0x136, 6724}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_E2*/ {{0x136, 6739}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_E3*/ {{0x136, 6754}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_E4*/ {{0x136, 6771}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_E5*/ {{0x136, 6789}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_E6*/ {{0x158, 6829}, 0x41, 0, 0, 0, 0},
+	/*II_V_F3_0F_E6*/ {{0x157, 6841}, 0x41, 0, 0, 0, 0},
+	/*II_V_F2_0F_E6*/ {{0x158, 6852}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_E7*/ {{0x148, 6880}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_E8*/ {{0x136, 6898}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_E9*/ {{0x136, 6915}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_EA*/ {{0x136, 6932}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_EB*/ {{0x136, 6946}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_EC*/ {{0x136, 6960}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_ED*/ {{0x136, 6977}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_EE*/ {{0x136, 6994}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_EF*/ {{0x136, 7009}, 0x0, 73, 0, 0, 0},
+	/*II_V_F2_0F_F0*/ {{0x193, 7023}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_F1*/ {{0x136, 7038}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_F2*/ {{0x136, 7053}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_F3*/ {{0x136, 7068}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_F4*/ {{0x136, 7085}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_F5*/ {{0x136, 7104}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_F6*/ {{0x136, 7122}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_F7*/ {{0x197, 7153}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_F8*/ {{0x136, 7173}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_F9*/ {{0x136, 7188}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_FA*/ {{0x136, 7203}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_FB*/ {{0x136, 7218}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_FC*/ {{0x136, 7233}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_FD*/ {{0x136, 7248}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_FE*/ {{0x136, 7263}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_00*/ {{0x136, 7371}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_01*/ {{0x136, 7388}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_02*/ {{0x136, 7405}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_03*/ {{0x136, 7423}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_04*/ {{0x136, 7444}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_05*/ {{0x136, 7464}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_06*/ {{0x136, 7481}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_07*/ {{0x136, 7499}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_08*/ {{0x136, 7517}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_09*/ {{0x136, 7534}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_0A*/ {{0x136, 7551}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_0B*/ {{0x136, 7570}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_0C*/ {{0x13d, 7581}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_38_0D*/ {{0x13d, 7592}, 0x1, 90, 0, 0, 0},
+	/*II_V_66_0F_38_0E*/ {{0x127, 7603}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_38_0F*/ {{0x127, 7612}, 0x41, 0, 0, 0, 0},
+	/*II_66_0F_38_10*/ {{0x1a0, 7621}, 0x0, 74, 0, 0, 0},
+	/*II_66_0F_38_14*/ {{0x1a0, 7631}, 0x0, 74, 0, 0, 0},
+	/*II_66_0F_38_15*/ {{0x1a0, 7641}, 0x0, 74, 0, 0, 0},
+	/*II_V_66_0F_38_17*/ {{0x127, 7658}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_38_18*/ {{0x1a2, 7666}, 0x41, 0, 0, 0, 0},
+	/*II_V_66_0F_38_19*/ {{0x1a3, 7680}, 0x50, 0, 0, 0, 0},
+	/*II_V_66_0F_38_1A*/ {{0x1a4, 7694}, 0x50, 0, 0, 0, 0},
+	/*II_V_66_0F_38_1C*/ {{0x1a5, 7717}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_1D*/ {{0x1a5, 7732}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_1E*/ {{0x1a5, 7747}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_20*/ {{0x151, 7765}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_21*/ {{0x150, 7786}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_22*/ {{0x1a9, 7807}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_23*/ {{0x151, 7828}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_24*/ {{0x150, 7849}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_25*/ {{0x151, 7870}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_28*/ {{0x136, 7889}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_29*/ {{0x136, 7907}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_2A*/ {{0x1ac, 7927}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_2B*/ {{0x136, 7948}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_2C*/ {{0x13d, 7959}, 0x1, 92, 0, 0, 0},
+	/*II_V_66_0F_38_2D*/ {{0x13d, 7971}, 0x1, 92, 0, 0, 0},
+	/*II_V_66_0F_38_2E*/ {{0x1ad, 7959}, 0x1, 83, 0, 0, 0},
+	/*II_V_66_0F_38_2F*/ {{0x1ad, 7971}, 0x1, 83, 0, 0, 0},
+	/*II_V_66_0F_38_30*/ {{0x151, 7993}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_31*/ {{0x150, 8014}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_32*/ {{0x1a9, 8035}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_33*/ {{0x151, 8056}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_34*/ {{0x150, 8077}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_35*/ {{0x151, 8098}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_37*/ {{0x136, 8118}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_38*/ {{0x136, 8136}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_39*/ {{0x136, 8153}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_3A*/ {{0x136, 8170}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_3B*/ {{0x136, 8187}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_3C*/ {{0x136, 8204}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_3D*/ {{0x136, 8221}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_3E*/ {{0x136, 8238}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_3F*/ {{0x136, 8255}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_40*/ {{0x136, 8272}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_41*/ {{0x1a5, 8293}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_96*/ {{0x1af, 8332}, 0x7, 90, 0, 8348, 0},
+	/*II_V_66_0F_38_97*/ {{0x1af, 8364}, 0x7, 90, 0, 8380, 0},
+	/*II_V_66_0F_38_98*/ {{0x1af, 8396}, 0x7, 90, 0, 8409, 0},
+	/*II_V_66_0F_38_99*/ {{0x1b0, 8422}, 0x6, 80, 0, 8435, 0},
+	/*II_V_66_0F_38_9A*/ {{0x1af, 8448}, 0x7, 90, 0, 8461, 0},
+	/*II_V_66_0F_38_9B*/ {{0x1b0, 8474}, 0x6, 80, 0, 8487, 0},
+	/*II_V_66_0F_38_9C*/ {{0x1af, 8500}, 0x7, 90, 0, 8514, 0},
+	/*II_V_66_0F_38_9D*/ {{0x1b0, 8528}, 0x6, 80, 0, 8542, 0},
+	/*II_V_66_0F_38_9E*/ {{0x1af, 8556}, 0x7, 90, 0, 8570, 0},
+	/*II_V_66_0F_38_9F*/ {{0x1b0, 8584}, 0x6, 80, 0, 8598, 0},
+	/*II_V_66_0F_38_A6*/ {{0x1af, 8612}, 0x7, 90, 0, 8628, 0},
+	/*II_V_66_0F_38_A7*/ {{0x1af, 8644}, 0x7, 90, 0, 8660, 0},
+	/*II_V_66_0F_38_A8*/ {{0x1af, 8676}, 0x7, 90, 0, 8689, 0},
+	/*II_V_66_0F_38_A9*/ {{0x1b0, 8702}, 0x6, 80, 0, 8715, 0},
+	/*II_V_66_0F_38_AA*/ {{0x1af, 8728}, 0x7, 90, 0, 8741, 0},
+	/*II_V_66_0F_38_AB*/ {{0x1b0, 8754}, 0x6, 80, 0, 8767, 0},
+	/*II_V_66_0F_38_AC*/ {{0x1af, 8780}, 0x7, 90, 0, 8794, 0},
+	/*II_V_66_0F_38_AD*/ {{0x1b0, 8808}, 0x6, 80, 0, 8822, 0},
+	/*II_V_66_0F_38_AE*/ {{0x1af, 8836}, 0x7, 90, 0, 8850, 0},
+	/*II_V_66_0F_38_AF*/ {{0x1b0, 8864}, 0x6, 80, 0, 8878, 0},
+	/*II_V_66_0F_38_B6*/ {{0x1af, 8892}, 0x7, 90, 0, 8908, 0},
+	/*II_V_66_0F_38_B7*/ {{0x1af, 8924}, 0x7, 90, 0, 8940, 0},
+	/*II_V_66_0F_38_B8*/ {{0x1af, 8956}, 0x7, 90, 0, 8969, 0},
+	/*II_V_66_0F_38_B9*/ {{0x1b0, 8982}, 0x6, 80, 0, 8995, 0},
+	/*II_V_66_0F_38_BA*/ {{0x1af, 9008}, 0x7, 90, 0, 9021, 0},
+	/*II_V_66_0F_38_BB*/ {{0x1b0, 9034}, 0x6, 80, 0, 9047, 0},
+	/*II_V_66_0F_38_BC*/ {{0x1af, 9060}, 0x7, 90, 0, 9074, 0},
+	/*II_V_66_0F_38_BD*/ {{0x1b0, 9088}, 0x6, 80, 0, 9102, 0},
+	/*II_V_66_0F_38_BE*/ {{0x1af, 9116}, 0x7, 90, 0, 9130, 0},
+	/*II_V_66_0F_38_BF*/ {{0x1b0, 9144}, 0x6, 80, 0, 9158, 0},
+	/*II_V_66_0F_38_DB*/ {{0x1b2, 9180}, 0x40, 0, 0, 0, 0},
+	/*II_V_66_0F_38_DC*/ {{0x1b3, 9197}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_DD*/ {{0x1b3, 9218}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_DE*/ {{0x1b3, 9239}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_38_DF*/ {{0x1b3, 9260}, 0x0, 73, 0, 0, 0},
+	/*II_V_66_0F_3A_04*/ {{0x1b8, 7581}, 0x41, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_05*/ {{0x1b8, 7592}, 0x41, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_06*/ {{0x1b9, 9287}, 0x10, 86, 1, 0, 0},
+	/*II_66_0F_3A_08*/ {{0x1a0, 9299}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_08*/ {{0x1b8, 9308}, 0x41, 1, 0, 0, 0},
+	/*II_66_0F_3A_09*/ {{0x1a0, 9318}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_09*/ {{0x1b8, 9327}, 0x41, 1, 0, 0, 0},
+	/*II_66_0F_3A_0A*/ {{0x1ba, 9337}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_0A*/ {{0x182, 9346}, 0x0, 71, 1, 0, 0},
+	/*II_66_0F_3A_0B*/ {{0x1bb, 9356}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_0B*/ {{0x182, 9365}, 0x0, 72, 1, 0, 0},
+	/*II_66_0F_3A_0C*/ {{0x1a0, 9375}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_0C*/ {{0x187, 9384}, 0x1, 90, 1, 0, 0},
+	/*II_66_0F_3A_0D*/ {{0x1a0, 9394}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_0D*/ {{0x187, 9403}, 0x1, 90, 1, 0, 0},
+	/*II_66_0F_3A_0E*/ {{0x1a0, 9413}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_0E*/ {{0x182, 9422}, 0x0, 73, 1, 0, 0},
+	/*II_0F_3A_0F*/ {{0x1bc, 9432}, 0x0, 1, 0, 0, 0},
+	/*II_66_0F_3A_0F*/ {{0x1bd, 9432}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_0F*/ {{0x182, 9441}, 0x0, 73, 1, 0, 0},
+	/*II_66_0F_3A_14*/ {{0x1be, 9451}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_14*/ {{0x1bf, 9459}, 0x40, 1, 0, 0, 0},
+	/*II_66_0F_3A_15*/ {{0x1c0, 6333}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_15*/ {{0x1c1, 6341}, 0x40, 1, 0, 0, 0},
+	/*II_66_0F_3A_16*/ {{0x1c2, 9468}, 0x0, 1, 0, 0, 9476},
+	/*II_V_66_0F_3A_16*/ {{0x1c3, 9484}, 0x46, 1, 0, 9493, 0},
+	/*II_66_0F_3A_17*/ {{0x1c4, 9502}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_17*/ {{0x1c5, 9513}, 0x40, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_18*/ {{0x1b9, 9525}, 0x10, 73, 1, 0, 0},
+	/*II_V_66_0F_3A_19*/ {{0x1c6, 9538}, 0x50, 1, 0, 0, 0},
+	/*II_66_0F_3A_20*/ {{0x1c7, 9552}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_20*/ {{0x182, 9560}, 0x0, 76, 1, 0, 0},
+	/*II_66_0F_3A_21*/ {{0x1ba, 9569}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_21*/ {{0x182, 9579}, 0x0, 71, 1, 0, 0},
+	/*II_66_0F_3A_22*/ {{0x1c8, 9590}, 0x0, 1, 0, 0, 9598},
+	/*II_V_66_0F_3A_22*/ {{0x182, 9606}, 0x6, 79, 1, 9615, 0},
+	/*II_66_0F_3A_40*/ {{0x1a0, 9624}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_40*/ {{0x187, 9630}, 0x1, 90, 1, 0, 0},
+	/*II_66_0F_3A_41*/ {{0x1a0, 9637}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_41*/ {{0x182, 9643}, 0x0, 73, 1, 0, 0},
+	/*II_66_0F_3A_42*/ {{0x1a0, 9650}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_42*/ {{0x182, 9659}, 0x0, 73, 1, 0, 0},
+	/*II_66_0F_3A_44*/ {{0x1c9, 9669}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_44*/ {{0x1ca, 9680}, 0x0, 73, 1, 0, 0},
+	/*II_V_66_0F_3A_4A*/ {{0x187, 9692}, 0x1, 90, 84, 0, 0},
+	/*II_V_66_0F_3A_4B*/ {{0x187, 9703}, 0x1, 90, 84, 0, 0},
+	/*II_V_66_0F_3A_4C*/ {{0x182, 9714}, 0x0, 73, 82, 0, 0},
+	/*II_66_0F_3A_60*/ {{0x1cb, 9725}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_60*/ {{0x161, 9736}, 0x40, 1, 0, 0, 0},
+	/*II_66_0F_3A_61*/ {{0x1cb, 9748}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_61*/ {{0x161, 9759}, 0x40, 1, 0, 0, 0},
+	/*II_66_0F_3A_62*/ {{0x1cb, 9771}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_62*/ {{0x161, 9782}, 0x40, 1, 0, 0, 0},
+	/*II_66_0F_3A_63*/ {{0x1cb, 9794}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_63*/ {{0x161, 9805}, 0x40, 1, 0, 0, 0},
+	/*II_66_0F_3A_DF*/ {{0x1cc, 9817}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_3A_DF*/ {{0x1cd, 9834}, 0x40, 1, 0, 0, 0},
+	/*II_V_66_0F_71_02*/ {{0x1d0, 6465}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_71_04*/ {{0x1d0, 6724}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_71_06*/ {{0x1d0, 7038}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_72_02*/ {{0x1d0, 6480}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_72_04*/ {{0x1d0, 6739}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_72_06*/ {{0x1d0, 7053}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_73_02*/ {{0x1d0, 6495}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_73_03*/ {{0x1d0, 9860}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_73_06*/ {{0x1d0, 7068}, 0x0, 1, 0, 0, 0},
+	/*II_V_66_0F_73_07*/ {{0x1d0, 9877}, 0x0, 1, 0, 0, 0},
+	/*II_0F_AE_00*/ {{0x171, 9886}, 0x0, 0, 0, 0, 9894},
+	/*II_0F_AE_01*/ {{0x171, 9914}, 0x0, 0, 0, 0, 9923},
+	/*II_V_0F_AE_02*/ {{0x1d3, 9963}, 0x40, 0, 0, 0, 0},
+	/*II_V_0F_AE_03*/ {{0x1d3, 9992}, 0x40, 0, 0, 0, 0}
 };
 
 _InstNode InstructionsTree[5688] = {
@@ -7458,478 +7458,479 @@ _InstNode InstructionsTree[5688] = {
 /* 1637 -  */  0
 };
 
-_InstSharedInfo InstSharedInfoTable[471] = {
-{0, 9, 15, 8, 245, 0, 0},
-{0, 11, 17, 8, 245, 0, 0},
-{0, 15, 9, 8, 245, 0, 0},
-{0, 17, 11, 8, 245, 0, 0},
-{1, 1, 33, 8, 245, 0, 0},
-{1, 3, 35, 8, 245, 0, 0},
-{2, 0, 32, 8, 0, 0, 0},
-{3, 0, 32, 8, 0, 0, 0},
-{0, 9, 15, 8, 196, 16, 0},
-{0, 11, 17, 8, 196, 16, 0},
-{0, 15, 9, 8, 196, 16, 0},
-{0, 17, 11, 8, 196, 16, 0},
-{1, 1, 33, 8, 196, 16, 0},
-{1, 3, 35, 8, 196, 16, 0},
-{4, 0, 32, 8, 0, 0, 0},
-{0, 9, 15, 8, 245, 1, 0},
-{0, 11, 17, 8, 245, 1, 0},
-{0, 15, 9, 8, 245, 1, 0},
-{0, 17, 11, 8, 245, 1, 0},
-{1, 1, 33, 8, 245, 1, 0},
-{1, 3, 35, 8, 245, 1, 0},
-{5, 0, 32, 8, 0, 0, 0},
-{6, 0, 32, 8, 0, 0, 0},
-{7, 0, 32, 8, 0, 0, 0},
-{8, 0, 32, 8, 0, 0, 0},
-{0, 9, 15, 8, 229, 0, 16},
-{0, 11, 17, 8, 229, 0, 16},
-{0, 15, 9, 8, 229, 0, 16},
-{0, 17, 11, 8, 229, 0, 16},
-{1, 1, 33, 8, 229, 0, 16},
-{1, 3, 35, 8, 229, 0, 16},
-{9, 0, 0, 8, 213, 17, 32},
-{0, 9, 15, 8, 196, 0, 16},
-{0, 11, 17, 8, 196, 0, 16},
-{0, 15, 9, 8, 196, 0, 16},
-{0, 17, 11, 8, 196, 0, 16},
-{1, 1, 33, 8, 196, 0, 16},
-{1, 3, 35, 8, 196, 0, 16},
-{9, 0, 0, 8, 17, 16, 228},
-{10, 9, 15, 8, 245, 0, 0},
-{10, 11, 17, 8, 245, 0, 0},
-{10, 15, 9, 8, 245, 0, 0},
-{10, 17, 11, 8, 245, 0, 0},
-{11, 1, 33, 8, 245, 0, 0},
-{11, 3, 35, 8, 245, 0, 0},
-{12, 0, 54, 8, 244, 0, 0},
-{13, 0, 54, 8, 0, 0, 0},
-{14, 0, 54, 8, 0, 0, 0},
-{15, 0, 0, 8, 0, 0, 0},
-{16, 42, 11, 8, 0, 0, 0},
-{10, 10, 16, 8, 64, 0, 0},
-{13, 0, 3, 8, 0, 0, 0},
-{17, 17, 11, 8, 33, 0, 212},
-{18, 0, 5, 8, 0, 0, 0},
-{19, 59, 56, 8, 0, 8, 0},
-{20, 59, 56, 8, 0, 8, 0},
-{19, 55, 59, 8, 0, 8, 0},
-{20, 55, 59, 8, 0, 8, 0},
-{13, 0, 40, 13, 0, 32, 0},
-{13, 0, 40, 13, 0, 1, 0},
-{13, 0, 40, 13, 0, 64, 0},
-{13, 0, 40, 13, 0, 65, 0},
-{13, 0, 40, 13, 0, 128, 0},
-{13, 0, 40, 13, 0, 4, 0},
-{13, 0, 40, 13, 0, 160, 0},
-{13, 0, 40, 13, 0, 224, 0},
-{10, 9, 15, 8, 196, 0, 16},
-{10, 11, 17, 8, 196, 0, 16},
-{0, 9, 15, 8, 0, 0, 0},
-{0, 11, 17, 8, 0, 0, 0},
-{21, 9, 15, 8, 0, 0, 0},
-{21, 11, 17, 8, 0, 0, 0},
-{21, 15, 9, 8, 0, 0, 0},
-{21, 17, 11, 8, 0, 0, 0},
-{21, 31, 28, 8, 0, 0, 0},
-{21, 42, 11, 8, 0, 0, 0},
-{21, 28, 31, 8, 0, 0, 0},
-{1, 35, 54, 8, 0, 0, 0},
-{22, 0, 0, 8, 0, 0, 0},
-{9, 0, 38, 9, 0, 0, 0},
-{23, 0, 0, 8, 0, 0, 0},
-{23, 0, 0, 8, 255, 0, 0},
-{11, 0, 0, 8, 213, 0, 0},
-{11, 0, 0, 8, 0, 0, 0},
-{1, 49, 33, 8, 0, 0, 0},
-{1, 50, 35, 8, 0, 0, 0},
-{1, 33, 49, 8, 0, 0, 0},
-{1, 35, 50, 8, 0, 0, 0},
-{24, 55, 56, 8, 0, 8, 0},
-{25, 55, 56, 8, 0, 8, 0},
-{19, 56, 55, 8, 245, 8, 0},
-{26, 56, 55, 8, 245, 8, 0},
-{11, 1, 33, 8, 196, 0, 16},
-{11, 3, 35, 8, 196, 0, 16},
-{19, 33, 56, 8, 0, 8, 0},
-{26, 35, 56, 8, 0, 8, 0},
-{19, 55, 33, 8, 0, 8, 0},
-{26, 55, 35, 8, 0, 8, 0},
-{19, 33, 56, 8, 245, 8, 0},
-{26, 35, 56, 8, 245, 8, 0},
-{1, 1, 53, 8, 0, 0, 0},
-{27, 3, 54, 8, 0, 0, 0},
-{13, 0, 2, 10, 0, 0, 0},
-{13, 0, 0, 10, 0, 0, 0},
-{16, 37, 11, 8, 0, 0, 0},
-{13, 8, 6, 8, 0, 0, 0},
-{13, 0, 0, 8, 0, 0, 0},
-{28, 0, 2, 10, 0, 0, 0},
-{28, 0, 0, 10, 0, 0, 0},
-{11, 0, 0, 14, 0, 0, 0},
-{11, 0, 1, 14, 0, 0, 0},
-{9, 0, 0, 14, 0, 0, 0},
-{28, 0, 0, 10, 255, 0, 0},
-{9, 0, 1, 8, 196, 0, 49},
-{9, 0, 0, 8, 0, 0, 0},
-{29, 0, 57, 8, 0, 0, 0},
-{30, 0, 40, 13, 0, 64, 0},
-{30, 0, 40, 13, 0, 0, 0},
-{31, 0, 40, 13, 0, 0, 0},
-{1, 1, 33, 8, 0, 0, 0},
-{1, 1, 36, 8, 0, 0, 0},
-{11, 33, 1, 8, 0, 0, 0},
-{11, 36, 1, 8, 0, 0, 0},
-{13, 0, 41, 9, 0, 0, 0},
-{13, 0, 41, 12, 0, 0, 0},
-{9, 0, 38, 12, 0, 0, 0},
-{13, 0, 40, 12, 0, 0, 0},
-{1, 59, 33, 8, 0, 0, 0},
-{1, 59, 36, 8, 0, 0, 0},
-{11, 33, 59, 8, 0, 0, 0},
-{11, 36, 59, 8, 0, 0, 0},
-{11, 0, 0, 8, 1, 0, 0},
-{11, 0, 0, 8, 2, 0, 0},
-{11, 0, 0, 8, 8, 0, 0},
-{10, 16, 11, 8, 64, 0, 0},
-{32, 0, 0, 27, 0, 0, 0},
-{32, 0, 0, 8, 0, 0, 0},
-{32, 0, 0, 14, 0, 0, 0},
-{11, 0, 0, 96, 0, 0, 0},
-{10, 0, 17, 8, 0, 0, 0},
-{33, 29, 14, 8, 0, 0, 0},
-{33, 30, 14, 8, 0, 0, 0},
-{33, 14, 29, 8, 0, 0, 0},
-{33, 14, 30, 8, 0, 0, 0},
-{34, 0, 0, 8, 0, 0, 0},
-{35, 17, 11, 31, 0, 32, 0},
-{35, 17, 11, 31, 0, 1, 0},
-{35, 17, 11, 31, 0, 64, 0},
-{35, 17, 11, 31, 0, 65, 0},
-{35, 17, 11, 31, 0, 128, 0},
-{35, 17, 11, 31, 0, 4, 0},
-{35, 17, 11, 31, 0, 160, 0},
-{35, 17, 11, 31, 0, 224, 0},
-{32, 0, 41, 13, 0, 32, 0},
-{32, 0, 41, 13, 0, 1, 0},
-{32, 0, 41, 13, 0, 64, 0},
-{32, 0, 41, 13, 0, 65, 0},
-{32, 0, 41, 13, 0, 128, 0},
-{32, 0, 41, 13, 0, 4, 0},
-{32, 0, 41, 13, 0, 160, 0},
-{32, 0, 41, 13, 0, 224, 0},
-{35, 0, 15, 8, 0, 32, 0},
-{35, 0, 15, 8, 0, 1, 0},
-{35, 0, 15, 8, 0, 64, 0},
-{35, 0, 15, 8, 0, 65, 0},
-{35, 0, 15, 8, 0, 128, 0},
-{35, 0, 15, 8, 0, 4, 0},
-{35, 0, 15, 8, 0, 160, 0},
-{35, 0, 15, 8, 0, 224, 0},
-{36, 0, 32, 8, 0, 0, 0},
-{37, 0, 32, 8, 0, 0, 0},
-{35, 11, 17, 8, 1, 0, 244},
-{38, 11, 17, 8, 197, 0, 48},
-{39, 0, 32, 8, 0, 0, 0},
-{40, 0, 32, 8, 0, 0, 0},
-{32, 0, 0, 8, 255, 0, 0},
-{41, 11, 17, 8, 1, 0, 244},
-{35, 17, 11, 8, 33, 0, 212},
-{41, 9, 15, 8, 245, 0, 0},
-{41, 11, 17, 8, 245, 0, 0},
-{42, 37, 11, 8, 0, 0, 0},
-{35, 15, 11, 8, 0, 0, 0},
-{43, 16, 11, 8, 0, 0, 0},
-{43, 13, 45, 48, 0, 0, 0},
-{44, 0, 54, 8, 0, 0, 0},
-{45, 1, 15, 8, 245, 0, 0},
-{45, 1, 15, 8, 196, 16, 0},
-{45, 1, 15, 8, 245, 1, 0},
-{45, 1, 15, 8, 229, 0, 16},
-{45, 1, 15, 8, 196, 0, 16},
-{46, 1, 15, 8, 245, 0, 0},
-{45, 3, 17, 8, 245, 0, 0},
-{45, 3, 17, 8, 196, 16, 0},
-{45, 3, 17, 8, 245, 1, 0},
-{45, 3, 17, 8, 229, 0, 16},
-{45, 3, 17, 8, 196, 0, 16},
-{46, 3, 17, 8, 245, 0, 0},
-{47, 1, 15, 8, 245, 0, 0},
-{47, 1, 15, 8, 196, 16, 0},
-{47, 1, 15, 8, 245, 1, 0},
-{47, 1, 15, 8, 229, 0, 16},
-{47, 1, 15, 8, 196, 0, 16},
-{48, 1, 15, 8, 245, 0, 0},
-{45, 5, 17, 8, 245, 0, 0},
-{49, 5, 17, 8, 196, 16, 0},
-{45, 5, 17, 8, 245, 1, 0},
-{49, 5, 17, 8, 229, 0, 16},
-{49, 5, 17, 8, 196, 0, 16},
-{46, 5, 17, 8, 245, 0, 0},
-{50, 0, 17, 8, 0, 0, 0},
-{51, 1, 15, 8, 1, 0, 32},
-{51, 1, 15, 8, 1, 1, 32},
-{51, 1, 15, 8, 197, 0, 48},
-{51, 1, 17, 8, 1, 0, 32},
-{51, 1, 17, 8, 1, 1, 32},
-{51, 1, 17, 8, 197, 0, 48},
-{52, 1, 15, 8, 0, 0, 0},
-{53, 0, 1, 24, 0, 0, 0},
-{52, 3, 17, 8, 0, 0, 0},
-{53, 0, 41, 24, 0, 0, 0},
-{51, 51, 15, 8, 33, 0, 0},
-{51, 51, 15, 8, 33, 1, 0},
-{51, 51, 15, 8, 229, 0, 16},
-{51, 51, 17, 8, 33, 0, 0},
-{51, 51, 17, 8, 33, 1, 0},
-{51, 51, 17, 8, 229, 0, 16},
-{51, 52, 15, 8, 1, 0, 32},
-{51, 52, 15, 8, 1, 1, 32},
-{51, 52, 15, 8, 197, 0, 48},
-{51, 52, 17, 8, 1, 0, 32},
-{51, 52, 17, 8, 1, 1, 32},
-{51, 52, 17, 8, 197, 0, 48},
-{46, 0, 21, 16, 0, 0, 0},
-{54, 0, 62, 16, 0, 0, 0},
-{54, 0, 61, 16, 0, 0, 0},
-{54, 0, 0, 16, 0, 0, 0},
-{51, 0, 21, 16, 0, 0, 0},
-{46, 0, 42, 16, 0, 0, 0},
-{46, 0, 20, 16, 0, 0, 0},
-{55, 0, 62, 24, 0, 1, 0},
-{55, 0, 62, 24, 0, 64, 0},
-{55, 0, 62, 24, 0, 65, 0},
-{55, 0, 62, 24, 0, 4, 0},
-{56, 0, 21, 56, 0, 0, 0},
-{46, 0, 23, 16, 0, 0, 0},
-{51, 0, 23, 16, 0, 0, 0},
-{55, 0, 62, 16, 69, 0, 0},
-{55, 0, 62, 24, 69, 0, 0},
-{46, 0, 22, 16, 0, 0, 0},
-{54, 0, 63, 16, 0, 0, 0},
-{56, 0, 22, 56, 0, 0, 0},
-{51, 0, 22, 16, 0, 0, 0},
-{56, 0, 20, 56, 0, 0, 0},
-{51, 0, 20, 16, 0, 0, 0},
-{46, 1, 15, 8, 196, 0, 16},
-{45, 0, 15, 8, 0, 0, 0},
-{45, 0, 15, 8, 245, 0, 0},
-{51, 0, 15, 8, 33, 0, 212},
-{51, 0, 15, 8, 0, 0, 245},
-{46, 3, 17, 8, 196, 0, 16},
-{45, 0, 17, 8, 0, 0, 0},
-{45, 0, 17, 8, 245, 0, 0},
-{51, 0, 17, 8, 33, 0, 212},
-{51, 0, 17, 8, 0, 0, 245},
-{45, 0, 15, 8, 244, 0, 0},
-{45, 0, 17, 8, 244, 0, 0},
-{57, 0, 17, 9, 0, 0, 0},
-{58, 0, 37, 9, 0, 0, 0},
-{57, 0, 17, 12, 0, 0, 0},
-{58, 0, 37, 12, 0, 0, 0},
-{57, 0, 17, 8, 0, 0, 0},
-{46, 0, 17, 8, 0, 0, 0},
-{46, 0, 16, 8, 0, 0, 0},
-{56, 0, 16, 8, 0, 0, 0},
-{46, 0, 16, 8, 64, 0, 0},
-{57, 0, 39, 8, 0, 0, 0},
-{52, 0, 28, 8, 0, 0, 0},
-{59, 0, 16, 8, 0, 0, 0},
-{56, 0, 42, 8, 0, 0, 0},
-{55, 0, 0, 112, 0, 0, 0},
-{55, 0, 0, 8, 0, 0, 0},
-{13, 0, 0, 24, 0, 0, 0},
-{56, 0, 58, 120, 0, 0, 0},
-{55, 0, 0, 120, 0, 0, 0},
-{55, 0, 58, 120, 0, 0, 0},
-{55, 60, 58, 120, 0, 0, 0},
-{60, 0, 0, 8, 0, 0, 0},
-{56, 0, 42, 96, 0, 0, 0},
-{61, 67, 64, 104, 0, 0, 0},
-{61, 67, 64, 96, 0, 0, 0},
-{35, 73, 68, 40, 0, 0, 0},
-{35, 73, 68, 48, 0, 0, 0},
-{35, 71, 68, 40, 0, 0, 0},
-{35, 72, 68, 48, 0, 0, 0},
-{62, 90, 83, 128, 0, 0, 0},
-{63, 81, 68, 128, 0, 0, 0},
-{64, 44, 68, 128, 0, 0, 0},
-{64, 46, 68, 128, 0, 0, 0},
-{35, 68, 73, 40, 0, 0, 0},
-{35, 68, 73, 48, 0, 0, 0},
-{35, 68, 71, 40, 0, 0, 0},
-{35, 68, 72, 48, 0, 0, 0},
-{62, 83, 90, 128, 0, 0, 0},
-{64, 68, 44, 128, 0, 0, 0},
-{64, 68, 46, 128, 0, 0, 0},
-{65, 72, 68, 40, 0, 0, 0},
-{35, 46, 68, 48, 0, 0, 0},
-{35, 72, 68, 56, 0, 0, 0},
-{66, 81, 68, 128, 0, 0, 0},
-{67, 81, 68, 128, 0, 0, 0},
-{62, 89, 83, 128, 0, 0, 0},
-{35, 68, 46, 40, 0, 0, 0},
-{35, 68, 46, 48, 0, 0, 0},
-{62, 68, 46, 128, 0, 0, 0},
-{34, 73, 68, 40, 0, 0, 0},
-{34, 73, 68, 48, 0, 0, 0},
-{67, 88, 83, 128, 0, 0, 0},
-{35, 73, 68, 56, 0, 0, 0},
-{56, 0, 42, 40, 0, 0, 0},
-{34, 67, 68, 40, 0, 0, 0},
-{34, 67, 68, 48, 0, 0, 0},
-{42, 18, 68, 40, 0, 0, 0},
-{42, 18, 68, 48, 0, 0, 0},
-{35, 68, 47, 40, 0, 0, 0},
-{35, 68, 47, 48, 0, 0, 0},
-{35, 68, 44, 88, 0, 0, 0},
-{35, 68, 46, 88, 0, 0, 0},
-{62, 83, 92, 128, 0, 0, 0},
-{34, 72, 64, 40, 0, 0, 0},
-{34, 73, 64, 48, 0, 0, 0},
-{42, 71, 13, 40, 0, 0, 0},
-{42, 72, 13, 48, 0, 0, 0},
-{62, 80, 78, 128, 0, 0, 0},
-{34, 71, 68, 40, 69, 0, 0},
-{34, 72, 68, 48, 0, 0, 0},
-{62, 71, 68, 128, 0, 0, 0},
-{62, 72, 68, 128, 0, 0, 0},
-{68, 69, 12, 40, 0, 0, 0},
-{68, 69, 12, 48, 0, 0, 0},
-{69, 83, 13, 128, 0, 0, 0},
-{34, 71, 68, 40, 0, 0, 0},
-{34, 71, 68, 48, 0, 0, 0},
-{62, 91, 83, 128, 0, 0, 0},
-{62, 90, 68, 128, 0, 0, 0},
-{34, 66, 64, 32, 0, 0, 0},
-{34, 67, 64, 32, 0, 0, 0},
-{70, 18, 64, 32, 0, 0, 0},
-{70, 18, 68, 48, 0, 0, 0},
-{62, 79, 68, 128, 0, 0, 0},
-{35, 67, 64, 32, 0, 0, 0},
-{71, 67, 64, 40, 0, 0, 0},
-{71, 73, 68, 48, 0, 0, 0},
-{67, 73, 68, 128, 0, 0, 0},
-{32, 0, 0, 32, 0, 0, 0},
-{72, 0, 0, 128, 0, 0, 0},
-{73, 13, 18, 112, 0, 0, 0},
-{74, 7, 69, 88, 0, 0, 0},
-{75, 69, 68, 88, 0, 0, 0},
-{73, 18, 13, 112, 0, 0, 0},
-{34, 69, 68, 88, 0, 0, 0},
-{76, 69, 68, 88, 0, 0, 0},
-{32, 72, 68, 112, 0, 0, 0},
-{32, 68, 72, 112, 0, 0, 0},
-{34, 73, 68, 56, 0, 0, 0},
-{70, 64, 18, 32, 0, 0, 0},
-{70, 68, 18, 48, 0, 0, 0},
-{62, 68, 79, 128, 0, 0, 0},
-{35, 64, 67, 32, 0, 0, 0},
-{77, 0, 42, 8, 0, 0, 0},
-{78, 0, 43, 8, 0, 0, 0},
-{79, 0, 43, 8, 0, 0, 0},
-{80, 17, 11, 80, 64, 0, 0},
-{81, 1, 17, 8, 1, 0, 244},
-{49, 1, 17, 8, 1, 0, 244},
-{34, 17, 11, 8, 64, 0, 245},
-{82, 17, 11, 112, 0, 0, 0},
-{83, 17, 11, 8, 65, 0, 180},
-{84, 73, 68, 40, 0, 0, 0},
-{84, 73, 68, 48, 0, 0, 0},
-{84, 71, 68, 40, 0, 0, 0},
-{84, 72, 68, 48, 0, 0, 0},
-{85, 88, 83, 128, 0, 0, 0},
-{85, 81, 68, 128, 0, 0, 0},
-{71, 25, 64, 40, 0, 0, 0},
-{71, 25, 68, 48, 0, 0, 0},
-{86, 81, 68, 128, 0, 0, 0},
-{87, 65, 12, 40, 0, 0, 0},
-{71, 69, 12, 48, 0, 0, 0},
-{88, 68, 13, 128, 0, 0, 0},
-{71, 73, 68, 40, 0, 0, 0},
-{86, 88, 83, 128, 0, 0, 0},
-{89, 0, 48, 8, 64, 0, 0},
-{56, 0, 46, 112, 0, 0, 0},
-{68, 65, 68, 48, 0, 0, 0},
-{68, 69, 64, 48, 0, 0, 0},
-{62, 68, 72, 128, 0, 0, 0},
-{76, 65, 12, 40, 0, 0, 0},
-{76, 69, 12, 48, 0, 0, 0},
-{69, 68, 13, 128, 0, 0, 0},
-{34, 67, 64, 40, 0, 0, 0},
-{35, 64, 46, 40, 0, 0, 0},
-{34, 42, 68, 56, 0, 0, 0},
-{62, 92, 83, 128, 0, 0, 0},
-{34, 67, 64, 48, 0, 0, 0},
-{76, 65, 64, 40, 0, 0, 0},
-{76, 69, 68, 48, 0, 0, 0},
-{90, 69, 68, 128, 0, 0, 0},
-{51, 0, 42, 16, 0, 0, 0},
-{91, 0, 42, 16, 0, 0, 0},
-{91, 0, 20, 16, 0, 0, 0},
-{92, 0, 0, 16, 0, 0, 0},
-{93, 0, 34, 16, 0, 0, 0},
-{94, 0, 34, 16, 0, 0, 0},
-{34, 67, 64, 64, 0, 0, 0},
-{34, 73, 68, 64, 0, 0, 0},
-{71, 73, 68, 72, 0, 0, 0},
-{34, 73, 68, 80, 0, 0, 0},
-{62, 44, 83, 128, 0, 0, 0},
-{62, 46, 85, 128, 0, 0, 0},
-{62, 47, 85, 128, 0, 0, 0},
-{62, 73, 68, 128, 0, 0, 0},
-{34, 72, 68, 72, 0, 0, 0},
-{34, 71, 68, 72, 0, 0, 0},
-{34, 70, 68, 72, 0, 0, 0},
-{62, 70, 68, 128, 0, 0, 0},
-{34, 73, 68, 72, 0, 0, 0},
-{35, 47, 68, 72, 0, 0, 0},
-{62, 47, 68, 128, 0, 0, 0},
-{67, 88, 92, 128, 0, 0, 0},
-{73, 47, 13, 112, 0, 0, 0},
-{67, 88, 83, 136, 0, 0, 0},
-{67, 81, 68, 136, 0, 0, 0},
-{34, 73, 68, 152, 0, 0, 0},
-{62, 73, 68, 152, 0, 0, 0},
-{67, 81, 68, 152, 0, 0, 0},
-{35, 17, 11, 8, 0, 0, 0},
-{35, 15, 13, 80, 0, 0, 0},
-{35, 11, 17, 8, 0, 0, 0},
-{35, 17, 13, 80, 0, 0, 0},
-{67, 90, 83, 128, 0, 0, 0},
-{86, 87, 85, 128, 0, 0, 0},
-{71, 71, 68, 72, 0, 0, 0},
-{71, 72, 68, 72, 0, 0, 0},
-{71, 67, 64, 64, 0, 0, 0},
-{71, 73, 68, 64, 0, 0, 0},
-{71, 68, 26, 72, 0, 0, 0},
-{88, 68, 76, 128, 0, 0, 0},
-{71, 68, 27, 72, 0, 0, 0},
-{88, 68, 77, 128, 0, 0, 0},
-{95, 68, 18, 72, 0, 0, 0},
-{67, 68, 79, 128, 0, 0, 0},
-{71, 68, 18, 72, 0, 0, 0},
-{67, 68, 75, 128, 0, 0, 0},
-{67, 85, 73, 128, 0, 0, 0},
-{71, 24, 68, 72, 0, 0, 0},
-{95, 18, 68, 72, 0, 0, 0},
-{71, 73, 68, 144, 0, 0, 0},
-{86, 81, 68, 144, 0, 0, 0},
-{71, 73, 68, 80, 0, 0, 0},
-{71, 73, 68, 152, 0, 0, 0},
-{67, 73, 68, 152, 0, 0, 0},
-{96, 1, 65, 32, 0, 0, 0},
-{56, 1, 69, 48, 0, 0, 0},
-{97, 69, 81, 128, 0, 0, 0},
-{98, 0, 13, 112, 0, 0, 0},
-{56, 0, 44, 8, 0, 0, 0},
-{64, 0, 44, 128, 0, 0, 0},
-{56, 0, 42, 112, 0, 0, 0},
-{99, 75, 13, 8, 0, 0, 0},
-{98, 0, 17, 8, 0, 0, 0},
-{100, 67, 64, 96, 0, 0, 0}
+_InstSharedInfo InstSharedInfoTable[472] = {
+{0, 9, 15, 256, 245, 0, 0},
+{0, 11, 17, 256, 245, 0, 0},
+{0, 15, 9, 256, 245, 0, 0},
+{0, 17, 11, 256, 245, 0, 0},
+{1, 1, 33, 256, 245, 0, 0},
+{1, 3, 35, 256, 245, 0, 0},
+{2, 0, 32, 256, 0, 0, 0},
+{3, 0, 32, 256, 0, 0, 0},
+{0, 9, 15, 256, 196, 16, 0},
+{0, 11, 17, 256, 196, 16, 0},
+{0, 15, 9, 256, 196, 16, 0},
+{0, 17, 11, 256, 196, 16, 0},
+{1, 1, 33, 256, 196, 16, 0},
+{1, 3, 35, 256, 196, 16, 0},
+{4, 0, 32, 256, 0, 0, 0},
+{0, 9, 15, 256, 245, 1, 0},
+{0, 11, 17, 256, 245, 1, 0},
+{0, 15, 9, 256, 245, 1, 0},
+{0, 17, 11, 256, 245, 1, 0},
+{1, 1, 33, 256, 245, 1, 0},
+{1, 3, 35, 256, 245, 1, 0},
+{5, 0, 32, 256, 0, 0, 0},
+{6, 0, 32, 256, 0, 0, 0},
+{7, 0, 32, 256, 0, 0, 0},
+{8, 0, 32, 256, 0, 0, 0},
+{0, 9, 15, 256, 229, 0, 16},
+{0, 11, 17, 256, 229, 0, 16},
+{0, 15, 9, 256, 229, 0, 16},
+{0, 17, 11, 256, 229, 0, 16},
+{1, 1, 33, 256, 229, 0, 16},
+{1, 3, 35, 256, 229, 0, 16},
+{9, 0, 0, 256, 213, 17, 32},
+{0, 9, 15, 256, 196, 0, 16},
+{0, 11, 17, 256, 196, 0, 16},
+{0, 15, 9, 256, 196, 0, 16},
+{0, 17, 11, 256, 196, 0, 16},
+{1, 1, 33, 256, 196, 0, 16},
+{1, 3, 35, 256, 196, 0, 16},
+{9, 0, 0, 256, 17, 16, 228},
+{10, 9, 15, 256, 245, 0, 0},
+{10, 11, 17, 256, 245, 0, 0},
+{10, 15, 9, 256, 245, 0, 0},
+{10, 17, 11, 256, 245, 0, 0},
+{11, 1, 33, 256, 245, 0, 0},
+{11, 3, 35, 256, 245, 0, 0},
+{12, 0, 54, 256, 244, 0, 0},
+{13, 0, 54, 256, 0, 0, 0},
+{14, 0, 54, 256, 0, 0, 0},
+{15, 0, 0, 256, 0, 0, 0},
+{16, 42, 11, 256, 0, 0, 0},
+{10, 10, 16, 256, 64, 0, 0},
+{13, 0, 3, 256, 0, 0, 0},
+{17, 17, 11, 256, 33, 0, 212},
+{18, 0, 5, 256, 0, 0, 0},
+{19, 59, 56, 256, 0, 8, 0},
+{20, 59, 56, 256, 0, 8, 0},
+{19, 55, 59, 256, 0, 8, 0},
+{20, 55, 59, 256, 0, 8, 0},
+{13, 0, 40, 261, 0, 32, 0},
+{13, 0, 40, 261, 0, 1, 0},
+{13, 0, 40, 261, 0, 64, 0},
+{13, 0, 40, 261, 0, 65, 0},
+{13, 0, 40, 261, 0, 128, 0},
+{13, 0, 40, 261, 0, 4, 0},
+{13, 0, 40, 261, 0, 160, 0},
+{13, 0, 40, 261, 0, 224, 0},
+{10, 9, 15, 256, 196, 0, 16},
+{10, 11, 17, 256, 196, 0, 16},
+{0, 9, 15, 256, 0, 0, 0},
+{0, 11, 17, 256, 0, 0, 0},
+{21, 9, 15, 256, 0, 0, 0},
+{21, 11, 17, 256, 0, 0, 0},
+{21, 15, 9, 256, 0, 0, 0},
+{21, 17, 11, 256, 0, 0, 0},
+{21, 31, 28, 256, 0, 0, 0},
+{21, 42, 11, 256, 0, 0, 0},
+{21, 28, 31, 256, 0, 0, 0},
+{1, 35, 54, 256, 0, 0, 0},
+{22, 0, 0, 256, 0, 0, 0},
+{9, 0, 38, 257, 0, 0, 0},
+{23, 0, 0, 256, 0, 0, 0},
+{23, 0, 0, 256, 255, 0, 0},
+{11, 0, 0, 256, 213, 0, 0},
+{11, 0, 0, 256, 0, 0, 0},
+{1, 49, 33, 256, 0, 0, 0},
+{1, 50, 35, 256, 0, 0, 0},
+{1, 33, 49, 256, 0, 0, 0},
+{1, 35, 50, 256, 0, 0, 0},
+{24, 55, 56, 256, 0, 8, 0},
+{25, 55, 56, 256, 0, 8, 0},
+{19, 56, 55, 256, 245, 8, 0},
+{26, 56, 55, 256, 245, 8, 0},
+{11, 1, 33, 256, 196, 0, 16},
+{11, 3, 35, 256, 196, 0, 16},
+{19, 33, 56, 256, 0, 8, 0},
+{26, 35, 56, 256, 0, 8, 0},
+{19, 55, 33, 256, 0, 8, 0},
+{26, 55, 35, 256, 0, 8, 0},
+{19, 33, 56, 256, 245, 8, 0},
+{26, 35, 56, 256, 245, 8, 0},
+{1, 1, 53, 256, 0, 0, 0},
+{27, 3, 54, 256, 0, 0, 0},
+{13, 0, 2, 258, 0, 0, 0},
+{13, 0, 0, 258, 0, 0, 0},
+{16, 37, 11, 256, 0, 0, 0},
+{13, 8, 6, 256, 0, 0, 0},
+{13, 0, 0, 256, 0, 0, 0},
+{28, 0, 2, 258, 0, 0, 0},
+{28, 0, 0, 258, 0, 0, 0},
+{11, 0, 0, 262, 0, 0, 0},
+{11, 0, 1, 262, 0, 0, 0},
+{9, 0, 0, 262, 0, 0, 0},
+{28, 0, 0, 258, 255, 0, 0},
+{9, 0, 1, 256, 196, 0, 49},
+{9, 0, 0, 256, 0, 0, 0},
+{29, 0, 57, 256, 0, 0, 0},
+{30, 0, 40, 261, 0, 64, 0},
+{30, 0, 40, 261, 0, 0, 0},
+{31, 0, 40, 261, 0, 0, 0},
+{1, 1, 33, 256, 0, 0, 0},
+{1, 1, 36, 256, 0, 0, 0},
+{11, 33, 1, 256, 0, 0, 0},
+{11, 36, 1, 256, 0, 0, 0},
+{13, 0, 41, 257, 0, 0, 0},
+{13, 0, 41, 260, 0, 0, 0},
+{9, 0, 38, 260, 0, 0, 0},
+{13, 0, 40, 260, 0, 0, 0},
+{1, 59, 33, 256, 0, 0, 0},
+{1, 59, 36, 256, 0, 0, 0},
+{11, 33, 59, 256, 0, 0, 0},
+{11, 36, 59, 256, 0, 0, 0},
+{11, 0, 0, 264, 0, 0, 0},
+{11, 0, 0, 256, 1, 0, 0},
+{11, 0, 0, 256, 2, 0, 0},
+{11, 0, 0, 256, 8, 0, 0},
+{10, 16, 11, 256, 64, 0, 0},
+{32, 0, 0, 771, 0, 0, 0},
+{32, 0, 0, 256, 0, 0, 0},
+{32, 0, 0, 262, 0, 0, 0},
+{11, 0, 0, 3072, 0, 0, 0},
+{10, 0, 17, 256, 0, 0, 0},
+{33, 29, 14, 256, 0, 0, 0},
+{33, 30, 14, 256, 0, 0, 0},
+{33, 14, 29, 256, 0, 0, 0},
+{33, 14, 30, 256, 0, 0, 0},
+{34, 0, 0, 256, 0, 0, 0},
+{35, 17, 11, 775, 0, 32, 0},
+{35, 17, 11, 775, 0, 1, 0},
+{35, 17, 11, 775, 0, 64, 0},
+{35, 17, 11, 775, 0, 65, 0},
+{35, 17, 11, 775, 0, 128, 0},
+{35, 17, 11, 775, 0, 4, 0},
+{35, 17, 11, 775, 0, 160, 0},
+{35, 17, 11, 775, 0, 224, 0},
+{32, 0, 41, 261, 0, 32, 0},
+{32, 0, 41, 261, 0, 1, 0},
+{32, 0, 41, 261, 0, 64, 0},
+{32, 0, 41, 261, 0, 65, 0},
+{32, 0, 41, 261, 0, 128, 0},
+{32, 0, 41, 261, 0, 4, 0},
+{32, 0, 41, 261, 0, 160, 0},
+{32, 0, 41, 261, 0, 224, 0},
+{35, 0, 15, 256, 0, 32, 0},
+{35, 0, 15, 256, 0, 1, 0},
+{35, 0, 15, 256, 0, 64, 0},
+{35, 0, 15, 256, 0, 65, 0},
+{35, 0, 15, 256, 0, 128, 0},
+{35, 0, 15, 256, 0, 4, 0},
+{35, 0, 15, 256, 0, 160, 0},
+{35, 0, 15, 256, 0, 224, 0},
+{36, 0, 32, 256, 0, 0, 0},
+{37, 0, 32, 256, 0, 0, 0},
+{35, 11, 17, 256, 1, 0, 244},
+{38, 11, 17, 256, 197, 0, 48},
+{39, 0, 32, 256, 0, 0, 0},
+{40, 0, 32, 256, 0, 0, 0},
+{32, 0, 0, 256, 255, 0, 0},
+{41, 11, 17, 256, 1, 0, 244},
+{35, 17, 11, 256, 33, 0, 212},
+{41, 9, 15, 256, 245, 0, 0},
+{41, 11, 17, 256, 245, 0, 0},
+{42, 37, 11, 256, 0, 0, 0},
+{35, 15, 11, 256, 0, 0, 0},
+{43, 16, 11, 256, 0, 0, 0},
+{43, 13, 45, 1536, 0, 0, 0},
+{44, 0, 54, 256, 0, 0, 0},
+{45, 1, 15, 256, 245, 0, 0},
+{45, 1, 15, 256, 196, 16, 0},
+{45, 1, 15, 256, 245, 1, 0},
+{45, 1, 15, 256, 229, 0, 16},
+{45, 1, 15, 256, 196, 0, 16},
+{46, 1, 15, 256, 245, 0, 0},
+{45, 3, 17, 256, 245, 0, 0},
+{45, 3, 17, 256, 196, 16, 0},
+{45, 3, 17, 256, 245, 1, 0},
+{45, 3, 17, 256, 229, 0, 16},
+{45, 3, 17, 256, 196, 0, 16},
+{46, 3, 17, 256, 245, 0, 0},
+{47, 1, 15, 256, 245, 0, 0},
+{47, 1, 15, 256, 196, 16, 0},
+{47, 1, 15, 256, 245, 1, 0},
+{47, 1, 15, 256, 229, 0, 16},
+{47, 1, 15, 256, 196, 0, 16},
+{48, 1, 15, 256, 245, 0, 0},
+{45, 5, 17, 256, 245, 0, 0},
+{49, 5, 17, 256, 196, 16, 0},
+{45, 5, 17, 256, 245, 1, 0},
+{49, 5, 17, 256, 229, 0, 16},
+{49, 5, 17, 256, 196, 0, 16},
+{46, 5, 17, 256, 245, 0, 0},
+{50, 0, 17, 256, 0, 0, 0},
+{51, 1, 15, 256, 1, 0, 32},
+{51, 1, 15, 256, 1, 1, 32},
+{51, 1, 15, 256, 197, 0, 48},
+{51, 1, 17, 256, 1, 0, 32},
+{51, 1, 17, 256, 1, 1, 32},
+{51, 1, 17, 256, 197, 0, 48},
+{52, 1, 15, 256, 0, 0, 0},
+{53, 0, 1, 768, 0, 0, 0},
+{52, 3, 17, 256, 0, 0, 0},
+{53, 0, 41, 768, 0, 0, 0},
+{51, 51, 15, 256, 33, 0, 0},
+{51, 51, 15, 256, 33, 1, 0},
+{51, 51, 15, 256, 229, 0, 16},
+{51, 51, 17, 256, 33, 0, 0},
+{51, 51, 17, 256, 33, 1, 0},
+{51, 51, 17, 256, 229, 0, 16},
+{51, 52, 15, 256, 1, 0, 32},
+{51, 52, 15, 256, 1, 1, 32},
+{51, 52, 15, 256, 197, 0, 48},
+{51, 52, 17, 256, 1, 0, 32},
+{51, 52, 17, 256, 1, 1, 32},
+{51, 52, 17, 256, 197, 0, 48},
+{46, 0, 21, 512, 0, 0, 0},
+{54, 0, 62, 512, 0, 0, 0},
+{54, 0, 61, 512, 0, 0, 0},
+{54, 0, 0, 512, 0, 0, 0},
+{51, 0, 21, 512, 0, 0, 0},
+{46, 0, 42, 512, 0, 0, 0},
+{46, 0, 20, 512, 0, 0, 0},
+{55, 0, 62, 768, 0, 1, 0},
+{55, 0, 62, 768, 0, 64, 0},
+{55, 0, 62, 768, 0, 65, 0},
+{55, 0, 62, 768, 0, 4, 0},
+{56, 0, 21, 1792, 0, 0, 0},
+{46, 0, 23, 512, 0, 0, 0},
+{51, 0, 23, 512, 0, 0, 0},
+{55, 0, 62, 512, 69, 0, 0},
+{55, 0, 62, 768, 69, 0, 0},
+{46, 0, 22, 512, 0, 0, 0},
+{54, 0, 63, 512, 0, 0, 0},
+{56, 0, 22, 1792, 0, 0, 0},
+{51, 0, 22, 512, 0, 0, 0},
+{56, 0, 20, 1792, 0, 0, 0},
+{51, 0, 20, 512, 0, 0, 0},
+{46, 1, 15, 256, 196, 0, 16},
+{45, 0, 15, 256, 0, 0, 0},
+{45, 0, 15, 256, 245, 0, 0},
+{51, 0, 15, 256, 33, 0, 212},
+{51, 0, 15, 256, 0, 0, 245},
+{46, 3, 17, 256, 196, 0, 16},
+{45, 0, 17, 256, 0, 0, 0},
+{45, 0, 17, 256, 245, 0, 0},
+{51, 0, 17, 256, 33, 0, 212},
+{51, 0, 17, 256, 0, 0, 245},
+{45, 0, 15, 256, 244, 0, 0},
+{45, 0, 17, 256, 244, 0, 0},
+{57, 0, 17, 257, 0, 0, 0},
+{58, 0, 37, 257, 0, 0, 0},
+{57, 0, 17, 260, 0, 0, 0},
+{58, 0, 37, 260, 0, 0, 0},
+{57, 0, 17, 256, 0, 0, 0},
+{46, 0, 17, 256, 0, 0, 0},
+{46, 0, 16, 256, 0, 0, 0},
+{56, 0, 16, 256, 0, 0, 0},
+{46, 0, 16, 256, 64, 0, 0},
+{57, 0, 39, 256, 0, 0, 0},
+{52, 0, 28, 256, 0, 0, 0},
+{59, 0, 16, 256, 0, 0, 0},
+{56, 0, 42, 256, 0, 0, 0},
+{55, 0, 0, 3584, 0, 0, 0},
+{55, 0, 0, 256, 0, 0, 0},
+{13, 0, 0, 768, 0, 0, 0},
+{56, 0, 58, 3840, 0, 0, 0},
+{55, 0, 0, 3840, 0, 0, 0},
+{55, 0, 58, 3840, 0, 0, 0},
+{55, 60, 58, 3840, 0, 0, 0},
+{60, 0, 0, 256, 0, 0, 0},
+{56, 0, 42, 3072, 0, 0, 0},
+{61, 67, 64, 3328, 0, 0, 0},
+{61, 67, 64, 3072, 0, 0, 0},
+{35, 73, 68, 1280, 0, 0, 0},
+{35, 73, 68, 1536, 0, 0, 0},
+{35, 71, 68, 1280, 0, 0, 0},
+{35, 72, 68, 1536, 0, 0, 0},
+{62, 90, 83, 4096, 0, 0, 0},
+{63, 81, 68, 4096, 0, 0, 0},
+{64, 44, 68, 4096, 0, 0, 0},
+{64, 46, 68, 4096, 0, 0, 0},
+{35, 68, 73, 1280, 0, 0, 0},
+{35, 68, 73, 1536, 0, 0, 0},
+{35, 68, 71, 1280, 0, 0, 0},
+{35, 68, 72, 1536, 0, 0, 0},
+{62, 83, 90, 4096, 0, 0, 0},
+{64, 68, 44, 4096, 0, 0, 0},
+{64, 68, 46, 4096, 0, 0, 0},
+{65, 72, 68, 1280, 0, 0, 0},
+{35, 46, 68, 1536, 0, 0, 0},
+{35, 72, 68, 1792, 0, 0, 0},
+{66, 81, 68, 4096, 0, 0, 0},
+{67, 81, 68, 4096, 0, 0, 0},
+{62, 89, 83, 4096, 0, 0, 0},
+{35, 68, 46, 1280, 0, 0, 0},
+{35, 68, 46, 1536, 0, 0, 0},
+{62, 68, 46, 4096, 0, 0, 0},
+{34, 73, 68, 1280, 0, 0, 0},
+{34, 73, 68, 1536, 0, 0, 0},
+{67, 88, 83, 4096, 0, 0, 0},
+{35, 73, 68, 1792, 0, 0, 0},
+{56, 0, 42, 1280, 0, 0, 0},
+{34, 67, 68, 1280, 0, 0, 0},
+{34, 67, 68, 1536, 0, 0, 0},
+{42, 18, 68, 1280, 0, 0, 0},
+{42, 18, 68, 1536, 0, 0, 0},
+{35, 68, 47, 1280, 0, 0, 0},
+{35, 68, 47, 1536, 0, 0, 0},
+{35, 68, 44, 2816, 0, 0, 0},
+{35, 68, 46, 2816, 0, 0, 0},
+{62, 83, 92, 4096, 0, 0, 0},
+{34, 72, 64, 1280, 0, 0, 0},
+{34, 73, 64, 1536, 0, 0, 0},
+{42, 71, 13, 1280, 0, 0, 0},
+{42, 72, 13, 1536, 0, 0, 0},
+{62, 80, 78, 4096, 0, 0, 0},
+{34, 71, 68, 1280, 69, 0, 0},
+{34, 72, 68, 1536, 0, 0, 0},
+{62, 71, 68, 4096, 0, 0, 0},
+{62, 72, 68, 4096, 0, 0, 0},
+{68, 69, 12, 1280, 0, 0, 0},
+{68, 69, 12, 1536, 0, 0, 0},
+{69, 83, 13, 4096, 0, 0, 0},
+{34, 71, 68, 1280, 0, 0, 0},
+{34, 71, 68, 1536, 0, 0, 0},
+{62, 91, 83, 4096, 0, 0, 0},
+{62, 90, 68, 4096, 0, 0, 0},
+{34, 66, 64, 1024, 0, 0, 0},
+{34, 67, 64, 1024, 0, 0, 0},
+{70, 18, 64, 1024, 0, 0, 0},
+{70, 18, 68, 1536, 0, 0, 0},
+{62, 79, 68, 4096, 0, 0, 0},
+{35, 67, 64, 1024, 0, 0, 0},
+{71, 67, 64, 1280, 0, 0, 0},
+{71, 73, 68, 1536, 0, 0, 0},
+{67, 73, 68, 4096, 0, 0, 0},
+{32, 0, 0, 1024, 0, 0, 0},
+{72, 0, 0, 4096, 0, 0, 0},
+{73, 13, 18, 3584, 0, 0, 0},
+{74, 7, 69, 2816, 0, 0, 0},
+{75, 69, 68, 2816, 0, 0, 0},
+{73, 18, 13, 3584, 0, 0, 0},
+{34, 69, 68, 2816, 0, 0, 0},
+{76, 69, 68, 2816, 0, 0, 0},
+{32, 72, 68, 3584, 0, 0, 0},
+{32, 68, 72, 3584, 0, 0, 0},
+{34, 73, 68, 1792, 0, 0, 0},
+{70, 64, 18, 1024, 0, 0, 0},
+{70, 68, 18, 1536, 0, 0, 0},
+{62, 68, 79, 4096, 0, 0, 0},
+{35, 64, 67, 1024, 0, 0, 0},
+{77, 0, 42, 256, 0, 0, 0},
+{78, 0, 43, 256, 0, 0, 0},
+{79, 0, 43, 256, 0, 0, 0},
+{80, 17, 11, 2560, 64, 0, 0},
+{81, 1, 17, 256, 1, 0, 244},
+{49, 1, 17, 256, 1, 0, 244},
+{34, 17, 11, 256, 64, 0, 245},
+{82, 17, 11, 3584, 0, 0, 0},
+{83, 17, 11, 256, 65, 0, 180},
+{84, 73, 68, 1280, 0, 0, 0},
+{84, 73, 68, 1536, 0, 0, 0},
+{84, 71, 68, 1280, 0, 0, 0},
+{84, 72, 68, 1536, 0, 0, 0},
+{85, 88, 83, 4096, 0, 0, 0},
+{85, 81, 68, 4096, 0, 0, 0},
+{71, 25, 64, 1280, 0, 0, 0},
+{71, 25, 68, 1536, 0, 0, 0},
+{86, 81, 68, 4096, 0, 0, 0},
+{87, 65, 12, 1280, 0, 0, 0},
+{71, 69, 12, 1536, 0, 0, 0},
+{88, 68, 13, 4096, 0, 0, 0},
+{71, 73, 68, 1280, 0, 0, 0},
+{86, 88, 83, 4096, 0, 0, 0},
+{89, 0, 48, 256, 64, 0, 0},
+{56, 0, 46, 3584, 0, 0, 0},
+{68, 65, 68, 1536, 0, 0, 0},
+{68, 69, 64, 1536, 0, 0, 0},
+{62, 68, 72, 4096, 0, 0, 0},
+{76, 65, 12, 1280, 0, 0, 0},
+{76, 69, 12, 1536, 0, 0, 0},
+{69, 68, 13, 4096, 0, 0, 0},
+{34, 67, 64, 1280, 0, 0, 0},
+{35, 64, 46, 1280, 0, 0, 0},
+{34, 42, 68, 1792, 0, 0, 0},
+{62, 92, 83, 4096, 0, 0, 0},
+{34, 67, 64, 1536, 0, 0, 0},
+{76, 65, 64, 1280, 0, 0, 0},
+{76, 69, 68, 1536, 0, 0, 0},
+{90, 69, 68, 4096, 0, 0, 0},
+{51, 0, 42, 512, 0, 0, 0},
+{91, 0, 42, 512, 0, 0, 0},
+{91, 0, 20, 512, 0, 0, 0},
+{92, 0, 0, 512, 0, 0, 0},
+{93, 0, 34, 512, 0, 0, 0},
+{94, 0, 34, 512, 0, 0, 0},
+{34, 67, 64, 2048, 0, 0, 0},
+{34, 73, 68, 2048, 0, 0, 0},
+{71, 73, 68, 2304, 0, 0, 0},
+{34, 73, 68, 2560, 0, 0, 0},
+{62, 44, 83, 4096, 0, 0, 0},
+{62, 46, 85, 4096, 0, 0, 0},
+{62, 47, 85, 4096, 0, 0, 0},
+{62, 73, 68, 4096, 0, 0, 0},
+{34, 72, 68, 2304, 0, 0, 0},
+{34, 71, 68, 2304, 0, 0, 0},
+{34, 70, 68, 2304, 0, 0, 0},
+{62, 70, 68, 4096, 0, 0, 0},
+{34, 73, 68, 2304, 0, 0, 0},
+{35, 47, 68, 2304, 0, 0, 0},
+{62, 47, 68, 4096, 0, 0, 0},
+{67, 88, 92, 4096, 0, 0, 0},
+{73, 47, 13, 3584, 0, 0, 0},
+{67, 88, 83, 4352, 0, 0, 0},
+{67, 81, 68, 4352, 0, 0, 0},
+{34, 73, 68, 4864, 0, 0, 0},
+{62, 73, 68, 4864, 0, 0, 0},
+{67, 81, 68, 4864, 0, 0, 0},
+{35, 17, 11, 256, 0, 0, 0},
+{35, 15, 13, 2560, 0, 0, 0},
+{35, 11, 17, 256, 0, 0, 0},
+{35, 17, 13, 2560, 0, 0, 0},
+{67, 90, 83, 4096, 0, 0, 0},
+{86, 87, 85, 4096, 0, 0, 0},
+{71, 71, 68, 2304, 0, 0, 0},
+{71, 72, 68, 2304, 0, 0, 0},
+{71, 67, 64, 2048, 0, 0, 0},
+{71, 73, 68, 2048, 0, 0, 0},
+{71, 68, 26, 2304, 0, 0, 0},
+{88, 68, 76, 4096, 0, 0, 0},
+{71, 68, 27, 2304, 0, 0, 0},
+{88, 68, 77, 4096, 0, 0, 0},
+{95, 68, 18, 2304, 0, 0, 0},
+{67, 68, 79, 4096, 0, 0, 0},
+{71, 68, 18, 2304, 0, 0, 0},
+{67, 68, 75, 4096, 0, 0, 0},
+{67, 85, 73, 4096, 0, 0, 0},
+{71, 24, 68, 2304, 0, 0, 0},
+{95, 18, 68, 2304, 0, 0, 0},
+{71, 73, 68, 4608, 0, 0, 0},
+{86, 81, 68, 4608, 0, 0, 0},
+{71, 73, 68, 2560, 0, 0, 0},
+{71, 73, 68, 4864, 0, 0, 0},
+{67, 73, 68, 4864, 0, 0, 0},
+{96, 1, 65, 1024, 0, 0, 0},
+{56, 1, 69, 1536, 0, 0, 0},
+{97, 69, 81, 4096, 0, 0, 0},
+{98, 0, 13, 3584, 0, 0, 0},
+{56, 0, 44, 256, 0, 0, 0},
+{64, 0, 44, 4096, 0, 0, 0},
+{56, 0, 42, 3584, 0, 0, 0},
+{99, 75, 13, 256, 0, 0, 0},
+{98, 0, 17, 256, 0, 0, 0},
+{100, 67, 64, 3072, 0, 0, 0}
 };
 
 uint16_t CmpMnemonicOffsets[8] = {
--- a/src/insts.h
+++ b/src/insts.h
@@ -4,7 +4,7 @@ insts.h
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
--- a/src/mnemonics.c
+++ b/src/mnemonics.c
@@ -4,7 +4,7 @@ mnemonics.c
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
--- a/src/operands.c
+++ b/src/operands.c
@@ -4,7 +4,7 @@ operands.c
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
--- a/src/operands.h
+++ b/src/operands.h
@@ -4,7 +4,7 @@ operands.h
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
--- a/src/prefix.c
+++ b/src/prefix.c
@@ -4,7 +4,7 @@ prefix.c
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
--- a/src/prefix.h
+++ b/src/prefix.h
@@ -4,7 +4,7 @@ prefix.h
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
--- a/src/textdefs.c
+++ b/src/textdefs.c
@@ -4,7 +4,7 @@ textdefs.c
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
--- a/src/textdefs.h
+++ b/src/textdefs.h
@@ -4,7 +4,7 @@ textdefs.h
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
--- a/src/wstring.c
+++ b/src/wstring.c
@@ -4,7 +4,7 @@ wstring.c
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
--- a/src/wstring.h
+++ b/src/wstring.h
@@ -4,7 +4,7 @@ wstring.h
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
--- a/src/x86defs.h
+++ b/src/x86defs.h
@@ -4,7 +4,7 @@ x86defs.h
 diStorm3 - Powerful disassembler for X86/AMD64
 http://ragestorm.net/distorm/
 distorm at gmail dot com
-Copyright (C) 2003-2018 Gil Dabah
+Copyright (C) 2003-2020 Gil Dabah
 This library is licensed under the BSD license. See the file COPYING.
 */
 
