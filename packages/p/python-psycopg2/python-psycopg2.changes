-------------------------------------------------------------------
Thu Mar 19 08:19:57 UTC 2020 - Hans-Peter Jansen <hpj@urpla.net>

- fix postgresql build dependency: pg_config is in postgresql-server-devel (bsc#1167541)

-------------------------------------------------------------------
Fri Feb 28 21:49:40 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- update to 2.8.4:
  - Fixed building with Python 3.8 (:ticket:`#854`).
  - Don't swallow keyboard interrupts on connect when a password is specified
    in the connection string (:ticket:`#898`).
  - Don't advance replication cursor when the message wasn't confirmed
    (:ticket:`#940`).
  - Fixed inclusion of ``time.h`` on linux (:ticket:`#951`).
  - Fixed int overflow for large values in `~psycopg2.extensions.Column.table_oid`
    and `~psycopg2.extensions.Column.type_code` (:ticket:`#961`).
  - `~psycopg2.errorcodes` map and `~psycopg2.errors` classes updated to
    PostgreSQL 12.
  - Wheel package compiled against OpenSSL 1.1.1d and PostgreSQL at least 11.4.

-------------------------------------------------------------------
Mon Oct 14 14:14:29 UTC 2019 - Matej Cepl <mcepl@suse.com>

- Replace %fdupes -s with plain %fdupes; hardlinks are better.

-------------------------------------------------------------------
Thu Jul  4 15:02:11 UTC 2019 - Daniel Molkentin <daniel.molkentin@suse.com>

- Update to 2.8.4
  * Added interval_status parameter to start_replication() method and other
    facilities to send automatic replication keepalives at periodic intervals
    (ticket #913).
  * Fixed namedtuples caching introduced in 2.8 (ticket #928).

-------------------------------------------------------------------
Tue Jun  4 15:36:23 UTC 2019 - Marketa Calabkova <mcalabkova@suse.com>

- Update to 2.8.3
  * Added interval_status parameter to start_replication() method 
    and other facilities to send automatic replication keepalives 
    at periodic intervals
  * Fixed RealDictCursor when there are repeated columns
  * Fixed RealDictRow modifiability
  * Fixed “there’s no async cursor” error polling a connection with 
    no cursor
  2.8.0
  * Added errors module. Every PostgreSQL error is converted into 
    a specific exception class
  * Added encrypt_password() function
  * Added BYTES adapter to manage databases with mixed encodings on 
    Python 3
  * Added table_oid and table_column attributes on cursor.description 
    items
  * Added connection.info object to retrieve various PostgreSQL 
    connection information
  * str() on Range produces a human-readable representation
  * Fixed async communication blocking if results are returned in 
    different chunks
  * Fixed adaptation of numeric subclasses such as IntEnum
  * Dropped support for Python 2.6, 3.2, 3.3.
  * Dropped deprecated register_tstz_w_secs()
  * Dropped deprecated PersistentConnectionPool. Use 
    ZPsycopgDA.pool instead.
  * Binary packages no longer installed by default. The 
    ‘psycopg2-binary’ package must be used explicitly.
  * Dropped PSYCOPG_DISPLAY_SIZE build parameter.

-------------------------------------------------------------------
Tue Apr  2 16:43:30 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Requires postgresql-server-devel on Factory now.

-------------------------------------------------------------------
Mon Mar  4 12:13:19 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 2.7.7:
  * Cleanup of the cursor results assignment code, which might have solved
    double free and inconsistencies in concurrent usage (:tickets:`#346, #384`).
  * Close named cursors if exist, even if execute() wasn't called (ticket #746).
  * Fixed building on modern FreeBSD versions with Python 3.7 (ticket #755).
  * Fixed hang trying to COPY via execute() in asynchronous connections (ticket #781).
  * Fixed adaptation of arrays of empty arrays (ticket #788).
  * Fixed segfault accessing the connection.readonly and connection.deferrable attributes repeatedly (ticket #790).
  * execute_values() accepts sql.Composable objects (ticket #794).
  * errorcodes map updated to PostgreSQL 11.
  * Allow non-ascii chars in namedtuple fields (regression introduced fixing ticket #211).
  * Fixed adaptation of arrays of arrays of nulls (ticket #325).
  * Fixed building on Solaris 11 and derivatives such as SmartOS and illumos (ticket #677).
  * Maybe fixed building on MSYS2 (as reported in ticket #658).
  * Allow string subclasses in connection and other places (ticket #679).
  * Don't raise an exception closing an unused named cursor (ticket #716).

-------------------------------------------------------------------
Wed Mar  7 14:03:13 UTC 2018 - aplanas@suse.com

- Allows Recommends and Suggest in Fedora

-------------------------------------------------------------------
Tue Feb 27 17:55:42 UTC 2018 - aplanas@suse.com

- Suggests only for SUSE

-------------------------------------------------------------------
Thu Feb 22 10:31:09 UTC 2018 - sebix+novell.com@sebix.at

- update to version 2.7.4:
 - Moving away from installing the wheel package by default.
   Packages installed from wheel raise a warning on import. Added package
   ``psycopg2-binary`` to install from wheel instead (:ticket:`#543`).
 - Convert fields names into valid Python identifiers in
   `~psycopg2.extras.NamedTupleCursor` (:ticket:`#211`).
 - Fixed Solaris 10 support (:ticket:`#532`).
 - `cursor.mogrify()` can be called on closed cursors (:ticket:`#579`).
 - Fixed setting session characteristics in corner cases on autocommit
   connections (:ticket:`#580`).
 - Fixed `~psycopg2.extras.MinTimeLoggingCursor` on Python 3 (:ticket:`#609`).
 - Fixed parsing of array of points as floats (:ticket:`#613`).
 - Fixed `~psycopg2.__libpq_version__` building with libpq >= 10.1
   (:ticket:`632`).
 - Fixed `~cursor.rowcount` after `~cursor.executemany()` with :sql:`RETURNING`
   statements (:ticket:`633`).
 - Fixed compatibility problem with pypy3 (:ticket:`#649`).
 - Wheel packages compiled against PostgreSQL 10.1 libpq and OpenSSL 1.0.2n.
 - Wheel packages for Python 2.6 no more available (support dropped from
   wheel building infrastructure).
- update to version 2.7.3.2:
 - not relevant
- update to version 2.7.3.1:
 - not relevant

-------------------------------------------------------------------
Tue Aug  8 15:42:47 UTC 2017 - tbechtold@suse.com

- update version to 2.7.3:
  - Restored default :sql:`timestamptz[]` typecasting to Python `!datetime`.
    Regression introduced in Psycopg 2.7.2 (:ticket:`#578`).
  - Fixed inconsistent state in externally closed connections
    (:tickets:`#263, #311, #443`). Was fixed in 2.6.2 but not included in
    2.7 by mistake.
  - Fixed Python exceptions propagation in green callback (:ticket:`#410`).
  - Don't display the password in `connection.dsn` when the connection
    string is specified as an URI (:ticket:`#528`).
  - Return objects with timezone parsing "infinity" :sql:`timestamptz`
    (:ticket:`#536`).
  - Dropped dependency on VC9 runtime on Windows binary packages
    (:ticket:`#541`).
  - Fixed segfault in `~connection.lobject()` when *mode*\=\ `!None`
    (:ticket:`#544`).
  - Fixed `~connection.lobject()` keyword argument *lobject_factory*
    (:ticket:`#545`).
  - Fixed `~psycopg2.extras.ReplicationCursor.consume_stream()`
    *keepalive_interval* argument (:ticket:`#547`).
  - Maybe fixed random import error on Python 3.6 in multiprocess
    environment (:ticket:`#550`).
  - Fixed random `!SystemError` upon receiving abort signal (:ticket:`#551`).
  - Accept `~psycopg2.sql.Composable` objects in
    `~psycopg2.extras.ReplicationCursor.start_replication_expert()`
    (:ticket:`554`).
  - Parse intervals returned as microseconds from Redshift (:ticket:`#558`).
  - Added `~psycopg2.extras.Json` `!prepare()` method to consider connection
    params when adapting (:ticket:`#562`).
  - `~psycopg2.errorcodes` map updated to PostgreSQL 10 beta 1.

-------------------------------------------------------------------
Mon Jul 10 10:07:07 UTC 2017 - jengelh@inai.de

- Trim filler wording from description.

-------------------------------------------------------------------
Fri Jun 23 16:26:18 UTC 2017 - jmatejek@suse.com

- convert to singlespec
- update to 2.7.1
  * Added sql module to generate SQL dynamically (ticket #308).
  * Added Replication protocol support (ticket #322). Main authors are 
    Oleksandr Shulgin and Craig Ringer, who deserve a huge thank you.
  * Added parse_dsn() and make_dsn() functions (tickets #321, #363). connect() 
    now can take both dsn and keyword arguments, merging them together.
  * Added __libpq_version__ and libpq_version() to inspect the version of the 
    libpq library the module was compiled/loaded with (tickets #35, #323).
  * The attributes notices and notifies can be customized replacing them with 
    any object exposing an append() method (ticket #326).
  * Adapt network types to ipaddress objects when available. When not enabled, 
    convert arrays of network types to lists by default. The old Inet adapter is 
    deprecated (tickets #317, #343, #387).
  * Added quote_ident() function (ticket #359).
  * Added get_dsn_parameters() connection method (ticket #364).
  * callproc() now accepts a dictionary of parameters (ticket #381).
  * Give precedence to __conform__() over superclasses to choose an object 
    adapter (ticket #456).
  * Using Python C API decoding functions and codecs caching for faster 
    unicode encoding/decoding (ticket #473).
  * executemany() slowness addressed by execute_batch() and execute_values() 
    (ticket #491).
  * Added async_ as an alias for async to support Python 3.7 where async will 
    become a keyword (ticket #495).
  * Unless in autocommit, do not use default_transaction_* settings to control 
    the session characteristics as it may create problems with external 
    connection pools such as pgbouncer; use BEGIN options instead (ticket #503).
  * isolation_level is now writable and entirely separated from autocommit; 
    added readonly, deferrable writable attributes.
  * dropped support for python 2.5 and postgres client library < 9.1
  * many bugs fixed

- drop doc subpackage, html docs available from http://pythonhosted.org/psycopg2/

-------------------------------------------------------------------
Wed Jun 21 13:44:46 UTC 2017 - bwiedemann@suse.com

- Do not include unneccessary undeterministic environment.pickle in package to fix build-compare

-------------------------------------------------------------------
Mon Nov 14 14:06:11 UTC 2016 - dmueller@suse.com

- update to 2.6.2:
  * Fixed inconsistent state in externally closed connections (tickets #263, #311, #443).
  * Report the server response status on errors (such as ticket #281).
  * Raise NotSupportedError on unhandled server response status (ticket #352).
  * Allow overriding string adapter encoding with no connection (ticket #331).
  * The wait_select callback allows interrupting a long-running query in an interactive shell using Ctrl-C (ticket #333).
  * Fixed PersistentConnectionPool on Python 3 (ticket #348).
  * Fixed segfault on repr() of an uninitialized connection (ticket #361).
  * Allow adapting bytes using QuotedString on Python 3 (ticket #365).
  * Added support for setuptools/wheel (ticket #370).
  * Fix build on Windows with Python 3.5, VS 2015 (ticket #380).
  * Fixed errorcodes.lookup initialization thread-safety (ticket #382).
  * Fixed read() exception propagation in copy_from (ticket #412).
  * Fixed possible NULL TZ decref (ticket #424).
  * errorcodes map updated to PostgreSQL 9.5.
  * Lists consisting of only None are escaped correctly (ticket #285).
  * Fixed deadlock in multithread programs using OpenSSL (ticket #290).
  * Correctly unlock the connection after error in flush (ticket #294).
  * Fixed MinTimeLoggingCursor.callproc() (ticket #309).
  * Added support for MSVC 2015 compiler (ticket #350).

-------------------------------------------------------------------
Wed Mar  9 10:29:20 UTC 2016 - bwiedemann@suse.com

- use the year from source gzip header instead of current one
  to make reproducible rpms

-------------------------------------------------------------------
Tue Feb 24 14:52:53 UTC 2015 - tbechtold@suse.com

- update to version 2.6:
  - Added support for large objects larger than 2GB. Many thanks to Blake Rouse
    and the MAAS Team for the feature development.
  - Python `time` objects with a tzinfo specified and PostgreSQL :sql:`timetz`
    data are converted into each other (:ticket:`#272`).
  - Json apapter's `!str()` returns the adapted content instead of the `!repr()`
    (:ticket:`#191`).
  - Named cursors used as context manager don't swallow the exception on exit
    (:ticket:`#262`).
  - `cursor.description` can be pickled (:ticket:`#265`).
  - Propagate read error messages in COPY FROM (:ticket:`#270`).
  - PostgreSQL time 24:00 is converted to Python 00:00 (:ticket:`#278`).
  - Added :sql:`jsonb` support for PostgreSQL 9.4 (:ticket:`#226`).
  - Fixed segfault if COPY statements are passed to `~cursor.execute()` instead
    of using the proper methods (:ticket:`#219`).
  - Force conversion of pool arguments to integer to avoid potentially unbounded
    pools (:ticket:`#220`).
  - Cursors :sql:`WITH HOLD` don't begin a new transaction upon move/fetch/close
    (:ticket:`#228`).
  - Cursors :sql:`WITH HOLD` can be used in autocommit (:ticket:`#229`).
  - `~cursor.callproc()` doesn't silently ignore an argument without a length.
  - Fixed memory leak with large objects (:ticket:`#256`).
  - Make sure the internal ``_psycopg.so`` module can be imported stand-alone (to
    allow modules juggling such as the one described in :ticket:`#201`).
  - Work around `pip issue #1630 <https://github.com/pypa/pip/issues/1630>`__
    making installation via ``pip -e git+url`` impossible (:ticket:`#18`).
  - Copy operations correctly set the `cursor.rowcount` attribute
    (:ticket:`#180`).
  - It is now possible to call `get_transaction_status()` on closed connections.
  - Fixed unsafe access to object names causing assertion failures in
    Python 3 debug builds (:ticket:`#188`).
  - Mark the connection closed if found broken on `poll()` (from :ticket:`#192`
    discussion)
  - Fixed handling of dsn and closed attributes in connection subclasses
    failing to connect (from :ticket:`#192` discussion).
  - Added arbitrary but stable order to `Range` objects, thanks to
    Chris Withers (:ticket:`#193`).
  - Avoid blocking async connections on connect (:ticket:`#194`). Thanks to
    Adam Petrovich for the bug report and diagnosis.
  - Don't segfault using poorly defined cursor subclasses which forgot to call
    the superclass init (:ticket:`#195`).
  - Mark the connection closed when a Socket connection is broken, as it
    happens for TCP connections instead (:ticket:`#196`).
  - Fixed overflow opening a lobject with an oid not fitting in a signed int
    (:ticket:`#203`).
  - Fixed handling of explicit default ``cursor_factory=None`` in
    `connection.cursor()` (:ticket:`#210`).
  - Fixed possible segfault in named cursors creation.
  - Fixed debug build on Windows, thanks to James Emerton.
- Add python-Sphinx as BuilrRequires to build documenation. Also adjust
  the build process for html docs.

-------------------------------------------------------------------
Mon Jan 13 13:29:56 UTC 2014 - dmueller@suse.com

- update to 2.5.2:
  - Fixed segfault pickling the exception raised on connection error
  - Meaningful connection errors report a meaningful message
  - Manually creating `lobject` with the wrong parameter doesn't segfault

-------------------------------------------------------------------
Tue Jun 25 11:41:28 UTC 2013 - dmueller@suse.com

- update to 2.5.1:
 - Fixed build on Solaris 10 and 11 where the round() function is already
   declared (:ticket:`#146`).
 - Fixed comparison of `Range` with non-range objects (:ticket:`#164`).
   Thanks to Chris Withers for the patch.
 - Fixed double-free on connection dealloc (:ticket:`#166`). Thanks to
   Gangadharan S.A. for the report and fix suggestion.

-------------------------------------------------------------------
Tue Apr 16 18:05:47 UTC 2013 - jfunk@funktronics.ca

- Update to 2.5:
  - Added JSON adaptation.
  - Added support for PostgreSQL 9.2 range types.
  - `connection` and `cursor` objects can be used in ``with`` statements as
    context managers as specified by recent DBAPI extension.
  - Added `psycopg2.extensions.Diagnostics` object to get extended info from
    a database error.  Many thanks to Matthew Woodcraft for the implementation
    (ticket #149).
  - Added `connection.cursor_factory` attribute to customize the default
    object returned by `connection.cursor()`.
  - Added support for backward scrollable cursors. Thanks to Jon Nelson for
    the initial patch (ticket #108).
  - Added a simple way to customize casting of composite types into Python
    objects other than namedtuples. Many thanks to Ronan Dunklau and Tobias
    Oberstein for the feature development.
  - `connection.reset()` implemented using `DISCARD ALL` on server versions
    supporting it.
  - Properly cleanup memory of broken connections (ticket #148).
  - Fixed bad interaction of ``setup.py`` with other dependencies in
    Distribute projects on Python 3 (ticket #153).
  - Added support for Python 3.3.
  - Dropped support for Python 2.4. Please use Psycopg 2.4.x if you need it.
  - `psycopg2.errorcodes` map updated to PostgreSQL 9.2.
  - Dropped Zope adapter from source repository. ZPsycopgDA now has its own
    project at <http://github.com/psycopg/ZPsycopgDA>.
- Changes from 2.4.6:
  - Fixed 'cursor()' arguments propagation in connection subclasses and
    overriding of the 'cursor_factory' argument. Thanks to Corry Haines for
    the report and the initial patch (ticket #105).
  - Dropped GIL release during string adaptation around a function call
    invoking a Python API function, which could cause interpreter crash.
    Thanks to Manu Cupcic for the report (ticket #110).
  - Close a green connection if there is an error in the callback. Maybe a
    harsh solution but it leaves the program responsive (ticket #113).
  - 'register_hstore()', 'register_composite()', 'tpc_recover()' work with
    RealDictConnection and Cursor (ticket #114).
  - Fixed broken pool for Zope and connections re-init across ZSQL methods in
    the same request (tickets #123, #125, #142).
  - connect() raises an exception instead of swallowing keyword arguments when
    a connection string is specified as well (ticket #131).
  - Discard any result produced by 'executemany()' (ticket #133).
  - Fixed pickling of FixedOffsetTimezone objects (ticket #135).
  - Release the GIL around PQgetResult calls after COPY (ticket #140).
  - Fixed empty strings handling in composite caster (ticket #141).
  - Fixed pickling of DictRow and RealDictRow objects.

-------------------------------------------------------------------
Fri May 25 14:07:21 UTC 2012 - cfarrell@suse.com

- license update: LGPL-3.0+ and (LGPL-3.0+ or ZPL-2.0) and       
  SUSE-GPL-2.0-with-openssl-exception
  See the COPYING file. There are GPL-2.0+ (with openssl linking exceptions
  for pgsql) in the package. Also, the ZPL option is only available for one
  particular subdirectory in the package

-------------------------------------------------------------------
Fri May 25 05:32:01 UTC 2012 - highwaystar.ru@gmail.com

- python3 package added
- minor spec improvement 

-------------------------------------------------------------------
Fri Apr  6 19:05:14 UTC 2012 - jfunk@funktronics.ca

- Update to 2.4.5:
  * The close() methods on connections and cursors don't raise exceptions
    if called on already closed objects.
  * Fixed fetchmany() with no argument in cursor subclasses
    (ticket #84).
  * Use lo_creat() instead of lo_create() when possible for better
    interaction with pgpool-II (ticket #88).
  * Error and its subclasses are picklable, useful for multiprocessing
    interaction (ticket #90).
  * Better efficiency and formatting of timezone offset objects thanks
    to Menno Smits (tickets #94, #95).
  * Fixed 'rownumber' during iteration on cursor subclasses.
    Regression introduced in 2.4.4 (ticket #100).
  * Added support for 'inet' arrays.
  * Fixed 'commit()' concurrency problem (ticket #103).
  * Codebase cleaned up using the GCC Python plugin's static analysis
    tool, which has revealed several unchecked return values, possible
    NULL dereferences, reference counting problems. Many thanks to David
    Malcolm for the useful tool and the assistance provided using it.

-------------------------------------------------------------------
Tue Mar 27 09:27:25 UTC 2012 - saschpe@suse.de

- Can't hurt to suggest postgresql-server

-------------------------------------------------------------------
Mon Mar 12 21:10:27 UTC 2012 - saschpe@gmx.de

- Simplify macro usage
- Remove outdated SUSE version checks

-------------------------------------------------------------------
Mon Feb 13 10:54:08 UTC 2012 - coolo@suse.com

- patch license to follow spdx.org standard

-------------------------------------------------------------------
Thu Jan 12 21:53:36 UTC 2012 - jfunk@funktronics.ca

- Update to 2.4.4:
  * register_composite() also works with the types implicitly defined after a
    table row, not only with the ones created by CREATE TYPE.
  * Values for the isolation level symbolic constants restored to what they
    were before release 2.4.2 to avoid breaking apps using the values instead
    of the constants.
  * Named DictCursor/RealDictCursor honour itersize (ticket #80).
  * Fixed rollback on error on Zope (ticket #73).
  * Raise DatabaseError instead of Error with empty libpq errors, consistently
    with other disconnection-related errors: regression introduced in release
    2.4.1 (ticket #82).
- Version 2.4.3:
  * connect() supports all the keyword arguments supported by the database
  * Added new_array_type() function for easy creation of array typecasters.
  * Added support for arrays of hstores and composite types (ticket #66).
  * Fixed segfault in case of transaction started with connection lost (and
    possibly other events).
  * Fixed adaptation of Decimal type in sub-interpreters, such as in certain
    mod_wsgi configurations (ticket #52).
  * Rollback connections in transaction or in error before putting them back
    into a pool. Also discard broken connections (ticket #62).
  * Lazy import of the slow uuid module, thanks to Marko Kreen.
  * Fixed NamedTupleCursor.executemany() (ticket #65).
  * Fixed --static-libpq setup option (ticket #64).
  * Fixed interaction between RealDictCursor and named cursors (ticket #67).
  * Dropped limit on the columns length in COPY operations (ticket #68).
  * Fixed reference leak with arguments referenced more than once in queries
    (ticket #81).
  * Fixed typecasting of arrays containing consecutive backslashes.
  * errorcodes map updated to PostgreSQL 9.1.

-------------------------------------------------------------------
Wed Sep 21 13:43:29 UTC 2011 - saschpe@suse.de

- Update to version 2.4.2:
  * connection.h: added codec attribute to avoid repeated codec name
    lookups during unicode query/params manipulations.
  * setup.py: bumped to version 2.3.2.dev0
  * psycopg/connection_int.c: applied patch from Marti Raudsepp to close
    ticket #24. Fixed segfault in connection when DateStyle not available
    (e.g.  pgbouncer appars not passing it to the client)
  * psycopg/utils.c: Added psycopg_strdup function.
  - See ChangeLog for more...
- Don't package testsuite
- Fix non-executable script rpmlint warning

-------------------------------------------------------------------
Mon Feb 28 07:52:40 UTC 2011 - saschpe@suse.de

- Spec file changes:
  * Added LICENSE and NEWS files
  * Added ZPL license to preamble (psycopg2 is dual-licensed)
  * Use upstream description
  * Fixed SLE build errors
  * Repacked tarball to bzip2
- Update to version 2.4
  * Added support for Python 3.1 and 3.2. The conversion has also
    brought several improvements:
  * Improvements to the named cusors and data handling
  * Fixed adaptation of None in composite types (ticket #26). Bug
    report by Karsten Hilbert.
  * Fixed several reference leaks in less common code paths.
  * Fixed segfault when a large object is closed and its connection no
    more available.
  * Added missing icon to ZPsycopgDA package, not available in Zope
    2.12.9 (ticket #30). Bug report and patch by Pumukel.
  * Fixed conversion of negative infinity (ticket #40). Bug report and
    patch by Marti Raudsepp.

-------------------------------------------------------------------
Tue Dec 27 15:01:00 UTC 2010 - elchevive@opensuse.org

- Update to version 2.3.2

-------------------------------------------------------------------
Wed Oct 27 02:43:22 UTC 2010 - termim@gmail.com

- Update to 2.2.2:
    Bux fixes:
    * the call to logging.basicConfig() in pool.py has been dropped:
      it was messing with some projects using logging (and a library
      should not initialize the logging system anyway.)
    * psycopg now correctly handles time zones with seconds in the 
      UTC offset. The old register_tstz_w_secs() function is deprecated 
      and will raise a warning if called.
    * Exceptions raised by the column iterator are propagated.
    * Exceptions raised by executemany() interators are propagated.

-------------------------------------------------------------------
Tue Aug 25 13:14:38 UTC 2009 - jnelson-suse@jamponi.net
- Add --optimize=2 to build .pyo files, correct License and Url

-------------------------------------------------------------------
Tue Aug 18 13:14:38 UTC 2009 - jfunk@funktronics.ca

- Update to 2.0.12:
  * psycopg/lobject_int.c: fixed problem with writing large data using
    lo_write: apparently the large objects code does not like non-blocking
    connections.
  * setup.py: fixed version detection for PostgreSQL rc, as
    suggested by Sok Ann Yap.
  * ZPsycopgDA/db.py: applied serialization error retry from Brian
    Sutherland.
  * Implemented connection.reset() method to reset the connection to
    well-know default parameters. This is much faster than closing and
    reopening the connection. (Suggested by a bug report by Glenn
    Maynard.)
  * psycopg/cursor_type.c: unified size macro definitions in COPY TO
    and COPY FROM operations: now the buffer for column names is 8192
    bytes that should be enough even for very large tables.
  * Applied patch from Robert Munro to fix version check
    in ZPsycopgDA.
- Release 2.0.11:
  * lib/extras.py: fixed crash in fetchone() when prefetching using
    a RealDictCursor.
  * psycopg/cursor_ext.c: now raise correct exception when fetching
    using a custom row factory results in an error.
  * lib/extras.py: applied DictRow "diet" patch from Marko Kreen.
  * setup.py: applied patch from Elvis Pranskevichus to make
    PostgreSQL version detection more robust.

-------------------------------------------------------------------
Mon Apr 27 17:23:57 CEST 2009 - lars@linux-schulserver.de

- update to 2.0.10

-------------------------------------------------------------------
Thu Nov 20 16:27:27 AST 2008 - jfunk@funktronics.ca

- Update to 2.0.8

-------------------------------------------------------------------
Wed Nov  5 11:57:40 CET 2008 - poeml@suse.de

- use --record-rpm as setup option, not --record. The latter didn't
  pick up all files on Factory.

-------------------------------------------------------------------
Wed Jun 13 07:56:02 UTC 2007 - judas_iscariote@shorewall.net

- Update to version 2.0.6 see http://initd.org/pub/software/psycopg/ChangeLog
  for details. 

-------------------------------------------------------------------
Wed Oct 19 00:00:00 UTC 2005 - jfunk@funktronics.ca

- Initial release

