<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>c680c3991b44f24c5d271c089ed56c56</srcmd5>
    <version>0.7.1</version>
    <time>1317213894</time>
    <user>saschpe</user>
    <comment>Please add, replaces python-werkzeug</comment>
    <requestid>85043</requestid>
  </revision>
  <revision rev="2" vrev="3">
    <srcmd5>c680c3991b44f24c5d271c089ed56c56</srcmd5>
    <version>0.7.1</version>
    <time>1319182381</time>
    <user>adrianSuSE</user>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>2a886a4124ade063b88b322eb195c7df</srcmd5>
    <version>0.8.1</version>
    <time>1321274303</time>
    <user>coolo</user>
    <comment>- Update to version 0.8.1:
  * Fixed an issue with the memcache not working properly.
  * Fixed an issue for Python 2.7.1 and higher that broke
    copying of multidicts with :func:`copy.copy`.
  * Changed hashing methodology of immutable ordered multi dicts
    for a potential problem with alternative Python implementations.
- Changes from version 0.8:
  * Removed data structure specific KeyErrors for a general
    purpose :exc:`~werkzeug.exceptions.BadRequestKeyError`.
  * Documented :meth:`werkzeug.wrappers.BaseRequest._load_form_data`.
  * The routing system now also accepts strings instead of
    dictionaries for the `query_args` parameter since we're only
    passing them through for redirects.
  * Werkzeug now automatically sets the content length immediately when
    the :attr:`~werkzeug.wrappers.BaseResponse.data` attribute is set
    for efficiency and simplicity reasons.
  * The routing system will now normalize server names to lowercase.
  * The routing system will no longer raise ValueErrors in case the
    configuration for the server name was incorrect.  This should make
    deployment much easier because you can ignore that factor now.
  * Fixed a bug with parsing HTTP digest headers.  It rejected headers
    with missing nc and nonce params.
  * Proxy fix now also updates wsgi.url_scheme based on X-Forwarded-Proto.
  * Added support for key prefixes to the redis cache.
  * Added the ability to supress some auto corrections in the wrappers
    that are now controlled via `autocorrect_location_header` and
    `automatically_set_content_length` on the response objects.
  * Werkzeug now uses a new method to check that the length of incoming
    data is complete and will raise IO errors by itself if the server
    fails to do so.</comment>
    <requestid>90918</requestid>
  </revision>
  <revision rev="4" vrev="2">
    <srcmd5>54be7c11e437d160a7c84d7662170dc1</srcmd5>
    <version>0.8.1</version>
    <time>1323194290</time>
    <user>coolo</user>
    <comment>replace license with spdx.org variant</comment>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>be1396cced687ba5dca3f39b0a2eb6e5</srcmd5>
    <version>0.8.3</version>
    <time>1331627959</time>
    <user>coolo</user>
    <comment>- Update to version 0.8.3:
  - Fixed another issue with :func:`werkzeug.wsgi.make_line_iter`
    where lines longer than the buffer size were not handled
    properly.
  - Restore stdout after debug console finished executing so
    that the debugger can be used on GAE better.
  - Fixed a bug with the redis cache for int subclasses
    (affects bool caching).
  - Fixed an XSS problem with redirect targets coming from
    untrusted sources.
- Changes from version 0.8.2:
  - Fixed a problem with request handling of the builtin server
    not repsonding to socket errors properly.
  - The routing request redirect exception's code attribute is now
    used properly.
  - Fixed a bug with shutdowns on Windows.
  - Fixed a few unicode issues with non-ascii characters being
    hardcoded in URL rules.
  - Fixed two property docstrings being assigned to fdel instead
    of ``__doc__``.
  - Fixed an issue where CRLF line endings could be split into two
    by the line iter function, causing problems with multipart file
    uploads.</comment>
    <requestid>109044</requestid>
  </revision>
  <revision rev="6" vrev="3">
    <srcmd5>be1396cced687ba5dca3f39b0a2eb6e5</srcmd5>
    <version>0.8.3</version>
    <time>1340184034</time>
    <user>adrianSuSE</user>
    <comment>branched from openSUSE:Factory</comment>
  </revision>
  <revision rev="7" vrev="5">
    <srcmd5>be1396cced687ba5dca3f39b0a2eb6e5</srcmd5>
    <version>0.8.3</version>
    <time>1359109991</time>
    <user>adrianSuSE</user>
    <comment>Split 12.3 from Factory</comment>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>9dffc52a8f87f62f7f0d460dbb9577cb</srcmd5>
    <version>0.9.4</version>
    <time>1378238766</time>
    <user>coolo</user>
    <comment>- update to 0.9.4:
  - Fixed an issue with Python 3.3 and an edge case in cookie parsing.
  - Fixed decoding errors not handled properly through the WSGI
    decoding dance.
  - Fixed URI to IRI conversion incorrectly decoding percent signs.
  - Restored beahvior of the ``data`` descriptor of the request class to pre 0.9
    behavior.  This now also means that ``.data`` and ``.get_data()`` have
    different behavior.  New code should use ``.get_data()`` always.
    In addition to that there is now a flag for the ``.get_data()`` method that
    controls what should happen with form data parsing and the form parser will
    honor cached data.  This makes dealing with custom form data more consistent.
  - Added `unsafe` parameter to :func:`~werkzeug.urls.url_quote`.
  - Fixed an issue with :func:`~werkzeug.urls.url_quote_plus` not quoting
    `'+'` correctly.
  - Ported remaining parts of :class:`~werkzeug.contrib.RedisCache` to
    Python 3.3.
  - Ported remaining parts of :class:`~werkzeug.contrib.MemcachedCache` to
    Python 3.3
  - Fixed a deprecation warning in the contrib atom module.
  - Fixed a regression with setting of content types through the
    headers dictionary instead with the content type parameter.
  - Use correct name for stdlib secure string comparision function.
  - Fixed a wrong reference in the docstring of
    :func:`~werkzeug.local.release_local`.
  - Fixed an `AttributeError` that sometimes occurred when accessing the
    :attr:`werkzeug.wrappers.BaseResponse.is_streamed` attribute.
  - Fixed an issue with integers no longer being accepted in certain
    parts of the routing system or URL quoting functions.
  - Fixed an issue with `url_quote` not producing the right escape
    codes for single digit codepoints. (forwarded request 197223 from dirkmueller)</comment>
    <requestid>197224</requestid>
  </revision>
  <revision rev="9" vrev="3">
    <srcmd5>9dffc52a8f87f62f7f0d460dbb9577cb</srcmd5>
    <version>0.9.4</version>
    <time>1379664123</time>
    <user>adrianSuSE</user>
    <comment>Split 13.1 from Factory</comment>
  </revision>
  <revision rev="10" vrev="4">
    <srcmd5>0b4d7d3615cdbb1e8a3df59c358e3323</srcmd5>
    <version>0.9.4</version>
    <time>1382693779</time>
    <user>scarabeus_factory</user>
    <comment></comment>
    <requestid>204687</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>55fb1150514113dd1727758be5902c5a</srcmd5>
    <version>0.9.6</version>
    <time>1405750589</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>241527</requestid>
  </revision>
  <revision rev="12" vrev="3">
    <srcmd5>55fb1150514113dd1727758be5902c5a</srcmd5>
    <version>0.9.6</version>
    <time>1409302811</time>
    <user>adrianSuSE</user>
    <comment>Split 13.2 from Factory</comment>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>0000bb69a2f136ad0bac6fd8075d8bae</srcmd5>
    <version>0.10.4</version>
    <time>1435053661</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>313179</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>33d777a23a58b3554c3e070863eeace4</srcmd5>
    <version>0.11.3</version>
    <time>1455190666</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>358476</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>45b3a2863604efe581c87f25930ce364</srcmd5>
    <version>0.11.11</version>
    <time>1474976680</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>429842</requestid>
  </revision>
  <revision rev="16" vrev="2">
    <srcmd5>33531bf0b09395e4c6c8b0a8be272470</srcmd5>
    <version>0.11.11</version>
    <time>1480341981</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>441852</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>27dcce7e26708bed25d8cbdab5e47672</srcmd5>
    <version>0.12.1</version>
    <time>1493020074</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>487845</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>511148d1baee1fd2e0945d10d1e3d82a</srcmd5>
    <version>0.12.2</version>
    <time>1502707044</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>515246</requestid>
  </revision>
  <revision rev="19" vrev="2">
    <srcmd5>1ea14dc8cf3f8e8abb9e00546d361a7b</srcmd5>
    <version>0.12.2</version>
    <time>1520253226</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>580794</requestid>
  </revision>
  <revision rev="20" vrev="3">
    <srcmd5>e72189c7f65199e37568d6f429c5bacb</srcmd5>
    <version>0.12.2</version>
    <time>1520852912</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>584291</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>d70639202c659fad1aba72f6c6a62aa5</srcmd5>
    <version>0.14.1</version>
    <time>1525611315</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>602327</requestid>
  </revision>
  <revision rev="22" vrev="2">
    <srcmd5>ed1a0a202a67f3dd35abec2896811c7f</srcmd5>
    <version>0.14.1</version>
    <time>1526219811</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>606252</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>081c27ccc187b5493f591dadd2c2d55e</srcmd5>
    <version>0.15.4</version>
    <time>1560861800</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.15.4
- refreshed 0001_create_a_thread_to_reap_death_process.patch
- drop python-Werkzeug-doc package
- last stable update with long Changelog -&gt; please see CHANGELOG.rst</comment>
    <requestid>705643</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>2f4561f27020968191ae4f1d0720ea18</srcmd5>
    <version>0.15.5</version>
    <time>1564484501</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>717006</requestid>
  </revision>
  <revision rev="25" vrev="2">
    <srcmd5>ca12d5af2a52bc2bc85a9e8ac1af0ba6</srcmd5>
    <version>0.15.5</version>
    <time>1565864925</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.15.4 (bsc#1145383, CVE-2019-14806)</comment>
    <requestid>723279</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>fd6c6aff501197087234f82963148519</srcmd5>
    <version>0.15.6</version>
    <time>1569233813</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.15.6:
  * Work around a bug in pip that caused the reloader to fail on Windows when
    the script was an entry point.
  * ProxyFix trusts the X-Forwarded-Proto header by default. :issue:`1630`</comment>
    <requestid>730725</requestid>
  </revision>
  <revision rev="27" vrev="1">
    <srcmd5>d166fe727392f50f4aaef98d7da5ff2f</srcmd5>
    <version>0.16.0</version>
    <time>1569851723</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.16.0:
  * Deprecate most top-level attributes provided by the werkzeug
    module in favor of direct imports. The deprecated imports will
    be removed in version 1.0.
- Rebase patch 0001_create_a_thread_to_reap_death_process.patch</comment>
    <requestid>732906</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>4e7ecb7d9eb02e6b576394f8203fc904</srcmd5>
    <version>1.0.0</version>
    <time>1582642946</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.0.0:
  * Drop support for Python 3.4. (#1478)
  * Remove code that issued deprecation warnings in version 0.15. (#1477)
  * Remove most top-level attributes provided by the werkzeug module in favor of direct imports. For example, instead of import werkzeug; werkzeug.url_quote, do from werkzeug.urls import url_quote. Install version 0.16 first to see deprecation warnings while upgrading. #2, #1640
  * Added utils.invalidate_cached_property() to invalidate cached properties. (#1474)
  * Directive keys for the Set-Cookie response header are not ignored when parsing the Cookie request header. This allows cookies with names such as “expires” and “version”. (#1495)
  * Request cookies are parsed into a MultiDict to capture all values for cookies with the same key. cookies[key] returns the first value rather than the last. Use cookies.getlist(key) to get all values. parse_cookie also defaults to a MultiDict. #1562, #1458
  * Add charset=utf-8 to an HTTP exception response’s CONTENT_TYPE header. (#1526)
  * The interactive debugger handles outer variables in nested scopes such as lambdas and comprehensions. #913, #1037, #1532
  * The user agent for Opera 60 on Mac is correctly reported as “opera” instead of “chrome”. #1556
  * The platform for Crosswalk on Android is correctly reported as “android” instead of “chromeos”. (#1572)
  * Issue a warning when the current server name does not match the configured server name. #760
  * A configured server name with the default port for a scheme will match the current server name without the port if the current scheme matches. #1584
  * InternalServerError has a original_exception attribute that frameworks can use to track the original cause of the error. #1590
  * Headers are tested for equality independent of the header key case, such that X-Foo is the same as x-foo. #1605
  * http.dump_cookie() accepts 'None' as a value for samesite. #1549
  * set_cookie() accepts a samesite argument. #1705
  * Support the Content Security Policy header through the Response.content_security_policy data structure. #1617
  * LanguageAccept will fall back to matching “en” for “en-US” or “en-US” for “en” to better support clients or translations that only match at the primary language tag. #450, #1507
  * MIMEAccept uses MIME parameters for specificity when matching. #458, #1574
  * If the development server is started with an SSLContext configured to verify client certificates, the certificate in PEM format will be available as environ[&quot;SSL_CLIENT_CERT&quot;]. #1469
  * is_resource_modified will run for methods other than GET and HEAD, rather than always returning False. #409
  * SharedDataMiddleware returns 404 rather than 500 when trying to access a directory instead of a file with the package loader. The dependency on setuptools and pkg_resources is removed. #1599
  * Add a response.cache_control.immutable flag. Keep in mind that browser support for this Cache-Control header option is still experimental and may not be implemented. #1185
  * Optional request log highlighting with the development server is handled by Click instead of termcolor. #1235
  * Optional ad-hoc TLS support for the development server is handled by cryptography instead of pyOpenSSL. #1555
  * FileStorage.save() supports pathlib and PEP 519 PathLike objects. #1653
  * The debugger security pin is unique in containers managed by Podman. #1661
  * Building a URL when host_matching is enabled takes into account the current host when there are duplicate endpoints with different hosts. #488
  * The 429 TooManyRequests and 503 ServiceUnavailable HTTP exceptions takes a retry_after parameter to set the Retry-After header. #1657</comment>
    <requestid>777800</requestid>
  </revision>
  <revision rev="29" vrev="2">
    <srcmd5>d166fe727392f50f4aaef98d7da5ff2f</srcmd5>
    <version>0.16.0</version>
    <time>1582725684</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>779352</requestid>
  </revision>
  <revision rev="30" vrev="1">
    <srcmd5>be1b74271eff25853512fe8bf0a7b472</srcmd5>
    <version>1.0.1</version>
    <time>1587325749</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>793341</requestid>
  </revision>
  <revision rev="31" vrev="2">
    <srcmd5>5a65f4df78c5a9c1c96af00226801258</srcmd5>
    <version>1.0.1</version>
    <time>1610633090</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>862678</requestid>
  </revision>
  <revision rev="32" vrev="1">
    <srcmd5>a0f64d8cc524dbd4ea41bac753a51271</srcmd5>
    <version>2.0.1</version>
    <time>1625950420</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>901104</requestid>
  </revision>
  <revision rev="33" vrev="1">
    <srcmd5>99eb52313d62e41e6fd9f18220bf65eb</srcmd5>
    <version>2.0.2</version>
    <time>1634754213</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.0.2:
  * Handle multiple tokens in ``Connection`` header when routing
    WebSocket requests.
  * Set the debugger pin cookie secure flag when on https.
  * Fix type annotation for ``MultiDict.update`` to accept iterable
    values :pr:`2142`
  * Prevent double encoding of redirect URL when ``merge_slash=True``
    for ``Rule.match``.
  * ``CombinedMultiDict.to_dict`` with ``flat=False`` considers all
    component dicts when building value lists. :issue:`2189`
  * ``send_file`` only sets a detected ``Content-Encoding`` if
    ``as_attachment`` is disabled to avoid browsers saving
    decompressed ``.tar.gz`` files.
  * Fix type annotations for ``TypeConversionDict.get`` to not return an
    ``Optional`` value if both ``default`` and ``type`` are not
    ``None``.
  * Fix type annotation for routing rule factories to accept
    ``Iterable[RuleFactory]`` instead of ``Iterable[Rule]`` for the
    ``rules`` parameter. :issue:`2183`
  * Add missing type annotation for ``FileStorage.__getattr__``
  * The debugger pin cookie is set with ``SameSite`` set to ``Strict``
    instead of ``None`` to be compatible with modern browser security.
  * Type annotations use ``IO[bytes]`` and ``IO[str]`` instead of
    ``BinaryIO`` and ``TextIO`` for wider type compatibility.
  * Ad-hoc TLS certs are generated with SAN matching CN. :issue:`2158`
  * Fix memory usage for locals when using Python 3.6 or pre 0.4.17
    greenlet versions. :pr:`2212`
  * Fix type annotation in ``CallbackDict``, because it is not
    utilizing a bound TypeVar. :issue:`2235`
  * Fix setting CSP header options on the response. :pr:`2237`</comment>
    <requestid>925758</requestid>
  </revision>
  <revision rev="34" vrev="1">
    <srcmd5>98aff7782ff255644bfdd6faa1320a7d</srcmd5>
    <version>2.0.3</version>
    <time>1645054196</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.0.3:
  * ``ProxyFix`` supports IPv6 addresses.
  *  Type annotation for ``Response.make_conditional``,
    ``HTTPException.get_response``, and ``Map.bind_to_environ`` accepts
    ``Request`` in addition to ``WSGIEnvironment`` for the first
     parameter.
  * Fix type annotation for ``Request.user_agent_class``.
  * Accessing ``LocalProxy.__class__`` and ``__doc__`` on an unbound
    proxy returns the fallback value instead of a method object.
  * Redirects with the test client set ``RAW_URI`` and ``REQUEST_URI``
    correctly.</comment>
    <requestid>954652</requestid>
  </revision>
  <revision rev="35" vrev="1">
    <srcmd5>e87f6c9fea357641cdb0a09ecfb94a24</srcmd5>
    <version>2.1.1</version>
    <time>1650735921</time>
    <user>dimstar_suse</user>
    <comment>- Update to 2.1.1:
  - ResponseCacheControl.s_maxage converts its value to an int,
    like max_age.
  - Drop support for Python 3.6.
  - Using gevent or eventlet requires greenlet&gt;=1.0 or
    PyPy&gt;=7.3.7. werkzeug.locals and contextvars will not work
    correctly with older versions.
  - Remove previously deprecated code.
     - Remove the non-standard shutdown function from the WSGI
       environ when running the development server. See the docs
       for alternatives.
     - Request and response mixins have all been merged into the
       Request and Response classes.
     - The user agent parser and the useragents module is
       removed. The user_agent module provides an interface that
       can be subclassed to add a parser, such as ua-parser. By
       default it only stores the whole string.
     - The test client returns TestResponse instances and can no
       longer be treated as a tuple. All data is available as
       properties on the response.
     - Remove locals.get_ident and related thread-local code from
       locals, it no longer makes sense when moving to
       a contextvars-based implementation.
     - Remove the python -m werkzeug.serving CLI.
     - The has_key method on some mapping datastructures; use key
       in data instead.
     - Request.disable_data_descriptor is removed, pass
       shallow=True instead.
     - Remove the no_etag parameter from Response.freeze().
     - Remove the HTTPException.wrap class method.
     - Remove the cookie_date function. Use http_date instead.
     - Remove the pbkdf2_hex, pbkdf2_bin, and safe_str_cmp
       functions. Use equivalents in hashlib and hmac modules
       instead.
     - Remove the Href class.
     - Remove the HTMLBuilder class.
     - Remove the invalidate_cached_property function. Use del
       obj.attr instead.
     - Remove bind_arguments and validate_arguments. Use
       Signature.bind() and inspect.signature() instead.
     - Remove detect_utf_encoding, it’s built-in to json.loads.
     - Remove format_string, use string.Template instead.
     - Remove escape and unescape. Use MarkupSafe instead.
    - The multiple parameter of parse_options_header is
      deprecated.
    - Rely on PEP 538 and PEP 540 to handle decoding file names
      with the correct filesystem encoding. The filesystem module
      is removed.
    - Default values passed to Headers are validated the same way
      values added later are.
    - Setting CacheControl int properties, such as max_age, will
      convert the value to an int.
    - Always use socket.fromfd when restarting the dev server.
    - When passing a dict of URL values to Map.build, list values
      do not filter out None or collapse to a single value.
      Passing a MultiDict does collapse single items. This undoes
      a previous change that made it difficult to pass a list, or
      None values in a list, to custom URL converters.
    - run_simple shows instructions for dealing with “address
      already in use” errors, including extra instructions for
      macOS.
    - Extend list of characters considered always safe in URLs
      based on RFC 3986.
    - Optimize the stat reloader to avoid watching unnecessary
      files in more cases. The watchdog reloader is still
      recommended for performance and accuracy.
    - The development server uses Transfer-Encoding: chunked for
      streaming responses when it is configured for HTTP/1.1.
    - The development server uses HTTP/1.1, which enables
      keep-alive connections and chunked streaming responses,
      when threaded or processes is enabled.
    - cached_property works for classes with __slots__ if
      a corresponding _cache_{name} slot is added.
    - Refactor the debugger traceback formatter to use Python’s
      built-in traceback module as much as possible.
    - The TestResponse.text property is a shortcut for
      r.get_data(as_text=True), for convenient testing against
      text instead of bytes.
    - safe_join ensures that the path remains relative if the
      trusted directory is the empty string.
    - Percent-encoded newlines (%0a), which are decoded by WSGI
      servers, are considered when routing instead of terminating
      the match early.
    - The test client doesn’t set duplicate headers for
      CONTENT_LENGTH and CONTENT_TYPE.
    - append_slash_redirect handles PATH_INFO with internal
      slashes.
    - The default status code for append_slash_redirect is 308
      instead of 301. This preserves the request body, and
      matches a previous change to strict_slashes in routing.
    - Fix ValueError: I/O operation on closed file. with the test
      client when following more than one redirect.
    - Response.autocorrect_location_header is disabled by
      default. The Location header URL will remain relative, and
      exclude the scheme and domain, by default.
    - Request.get_json() will raise a 400 BadRequest error if the
      Content-Type header is not application/json. This makes
      a very common source of confusion more visible.
- Add no-network-testing.patch to mark all tests requiring
  network access (so they can be skipped by pytest test runner,
  gh#pallets/werkzeug#2393).
</comment>
    <requestid>970992</requestid>
  </revision>
  <revision rev="36" vrev="2">
    <srcmd5>2574e42a42196d2ed8bde42985618dde</srcmd5>
    <version>2.1.1</version>
    <time>1652039543</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>975271</requestid>
  </revision>
  <revision rev="37" vrev="1">
    <srcmd5>837d82a89ca1aec811b51d29cd329c22</srcmd5>
    <version>2.1.2</version>
    <time>1652389094</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.1.2:
  * The development server does not set ``Transfer-Encoding: chunked``
    for 1xx, 204, 304, and HEAD responses. :issue:`2375`
  * Response HTML for exceptions and redirects starts with
    ``&lt;!doctype html&gt;`` and ``&lt;html lang=en&gt;``. :issue:`2390`
  * Fix ability to set some ``cache_control`` attributes to ``False``.
    :issue:`2379`
  * Disable ``keep-alive`` connections in the development server, which
    are not supported sufficiently by Python's ``http.server``.
    :issue:`2397` 
- drop 2402-dev_server.patch (upstream)</comment>
    <requestid>976285</requestid>
  </revision>
  <revision rev="38" vrev="2">
    <srcmd5>a5fdd5af4408b7260b86f5883e06d161</srcmd5>
    <version>2.1.2</version>
    <time>1659470917</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>991941</requestid>
  </revision>
</revisionlist>
