-------------------------------------------------------------------
Sat Jan  9 20:14:07 UTC 2021 - Arun Persaud <arun@gmx.de>

- specfile:
  * update copyright year
  * remove python2
  * skip six

- update to version 5.0.5:
  * Support deprecated literals for sets, tuples on the command-line:
    nbconvert --TagRemovePreprocessor.remove_cell_tags='{"tag"}'
  * Fix from_string_list for Tuples in general
  * Fix support for List(default_value=None, allow_none=True) and
    other Container traits
  * Fix help output for nested aliases and tuple traits

- changes from version 5.0.4:
  * Support deprecated use of byte-literals for bytes on the
    command-line: ipython kernel --Session.key="b'abc'". The b prefix
    is no longer needed in traitlets 5.0, but is supported for
    backward-compatibility
  * Improve output of configuration errors, especially when help
    output would make it hard to find the helpful error message

- changes from version 5.0.3:
  * Fix regression in handling –opt=None on the CLI for configurable
    traits with allow_none=True

- changes from version 5.0.2:
  * Fix casting bytes to unicode

- changes from version 5.0.0:
  * Major changes are:
    + Removal of Python 2 support,
    + Removal of Python 3.0-3.6 support
    + we now follow NEP 29, and are thus Python 3.7+ only.
    + remove six as a dependency
    + remove funcsig as a dependency.
  * Here is a list of most Pull requests that went into 5.0 and a
    short description.
    + PR #362 , PR #361 introduces: - help for aliases , aliases dict
      values can now be a tuple with (‘target’, ‘help string’) -
      subcommands can now be arbitrary callable and do not need to be
      subclass of Application
    + PR #306 Add compatibility with the trait package for
      Dictionaries and add the key_trait parameters allowing to
      restrict the type of the key of a mapping. The constructor
      parameters trait and traits are renamed to value_trait and
      per_key_traits.
    + PR #319 adds ability to introduce both shot and long version of
      aliases, allowing for short and long options - and --.
    + PR #322 rewrite command line argument parsing to use argparse,
      and allow more flexibility in assigning literals without
      quoting.
    + PR #332 Make it easier to redefined default values of parents
      classes.
    + PR #333 introduces a Callable trait.
    + PR #340 Old way of passing containers in the command line is now
      deprecated, and will emit warning on the command line.
    + PR #341 introduces --Application.show_config=True which will
      make by default any application show it configuration, all the
      files it loaded configuration from, and exit.
    + PR #349 unify ability to declare default values across traitlets
      with a singular method default method, and PR #525 adds a
      warning that Undefined is deprecated.
    + PR #355 fix a random ordering issues in command lines flags.
    + PR #356 allow both self and cls in __new__ method for
      genericity.
    + PR #360 Simplify overwriting and extending the command line
      argument parser.
    + PR #371 introduces a FuzzyEnum trait that allow case insensitive
      and unique prefix matching.
    + PR #384 Ass a trait_values method to extra a mapping of trait
      and their values.
    + PR #393 Link now have a transform attribute (taking two
      functions inverse of each other), that affect how a value is
      mapped between a source and a target.
    + PR #394 Link now have a link method to re-link object after
      unlink has been called.
    + PR #402 rewrite handling of error messages for nested traits.
    + PR #405 all function that use to print help now have an
      equivalent that yields the help lines.
    + PR #413 traits now have a method trait_has_value, returning a
      boolean to know if a value has been assigned to a trait
      (excluding the default), in order to help avoiding circular
      validation at initialisation.
    + PR #416 Explicitly export traitlets in __all__ to avoid exposing
      implementation details.
    + PR #438 introduces .info_rst() to let traitlets overwrite the
      automatically generated rst documentation.
    + PR #458 Add a sphinx extension to automatically document options
      of Application instance in projects using traitlets.
    + PR #509 remove all base except: meaning traitlets will not catch
      a number of BaseException s anymore.
    + PR #515 Add a class decorator to enable tab completion of
      keyword arguments in signature.
    + PR #516 a Sentinel Traitlets was made public by mistake and is
      now deprecated.
    + PR #517 use parent Logger within logggin configurable when
      possible.
    + PR #522 Make loading config files idempotent and expose the list
      of loaded config files for long running services.

-------------------------------------------------------------------
Thu Mar 12 07:59:14 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Fix build without python2

-------------------------------------------------------------------
Tue Nov 12 16:31:49 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to version 4.3.3
  * Adds Application.loaded_config_files property for accessing
    config files that have been loaded and makes the property
    idempotent on multiple loads.

-------------------------------------------------------------------
Wed Jul  5 14:59:37 UTC 2017 - tbechtold@suse.com

- Add missing python-six BuildRequires

-------------------------------------------------------------------
Wed Jul  5 13:35:11 UTC 2017 - tbechtold@suse.com

- Add missing python-six Requires

-------------------------------------------------------------------
Fri Apr 14 17:05:33 UTC 2017 - toddrme2178@gmail.com

- Implement single-spec version.

-------------------------------------------------------------------
Thu Mar 30 18:54:06 UTC 2017 - toddrme2178@gmail.com

- Update to 4.3.2
  * using :meth:`_traitname_default()` without the ``@default``
    decorator is no longer deprecated.
  * Passing ``config=True`` in traitlets constructors is no longer
    deprecated.
- Update to 4.3.1
  * Compatibility fix for Python 3.6a1
  * Fix bug in Application.classes getting extra entries when
    multiple Applications are instantiated in the same process.
- Update to 4.3.0
  * Improve the generated config file output.
  * Allow TRAITLETS_APPLICATION_RAISE_CONFIG_FILE_ERROR env to
    override :attr:`Application.raise_config_file_errors`,
    so that config file errors can result in exiting immediately.
  * Avoid using root logger. If no application logger is registered,
    the ``'traitlets'`` logger will be used instead of the root
    logger.
  * Change/Validation arguments are now Bunch objects, allowing
    attribute-access, in addition to dictionary access.
  * Reduce number of common deprecation messages in certain cases.
  * Ensure command-line options always have higher priority than
    config files.
  * Add bounds on numeric traits.
  * Improves various error messages.
- Update to 4.2.2
  * Partially revert a change in 4.1 that prevented IPython's
    command-line options from taking priority over config files.
- Update to 4.2.1
  * Demotes warning about unused arguments in ``HasTraits.__init__``
    introduced in 4.2.0 to DeprecationWarning.
- Update to 4.2.0
  * :class:`JSONFileConfigLoader` can be used as a context manager
    for updating configuration.
  * If a value in config does not map onto a configurable trait,
    a message is displayed that the value will have no effect.
  * Unused arguments are passed to ``super()`` in
    ``HasTraits.__init__``, improving support for multiple
    inheritance.
  * Various bugfixes and improvements in the new API introduced
    in 4.1.
  * Application subclasses may specify
    ``raise_config_file_errors = True``
    to exit on failure to load config files,
    instead of the default of logging the failures.
- Update to 4.1
  * Decorators are used, rather than magic method names, for
    registering trait-related methods. See :doc:`using_traitlets`
    and :doc:`migration` for more info.
  * Deprecate ``Trait(config=True)`` in favor of
    ``Trait().tag(config=True)``. In general, metadata is added
    via ``tag`` instead of the constructor.
  * Trait attributes initialized with ``read_only=True`` can only
    be set with the ``set_trait`` method.
    Attempts to directly modify a read-only trait attribute raises
    a ``TraitError``.
  * The directional link now takes an optional `transform`
    attribute allowing the modification of the value.
  * Various fixes and improvements to config-file generation
    (fixed ordering, Undefined showing up, etc.)
  * Warn on unrecognized traits that aren't configurable, to avoid
    silently ignoring mistyped config.

-------------------------------------------------------------------
Thu Mar 30 18:53:09 UTC 2017 - toddrme2178@gmail.com

- Update to version 

-------------------------------------------------------------------
Fri Aug 14 07:48:27 UTC 2015 - toddrme2178@gmail.com

- Fix package naming consistency

-------------------------------------------------------------------
Thu Aug 13 13:57:00 UTC 2015 - toddrme2178@gmail.com

- Update dependency names

-------------------------------------------------------------------
Tue Jul 21 13:34:20 UTC 2015 - toddrme2178@gmail.com

- Initial version

