-------------------------------------------------------------------
Thu Sep  2 03:06:51 UTC 2021 - Tina Müller <timueller+perl@suse.de>

- updated to 0.9723
   see /usr/share/doc/packages/perl-Graph/Changes

  0.9723 2021-09-01
  - doc fixes - thanks @xsawyerx
  - fix problem with deep_copy with vertices that are refs - thanks @merkys for report

-------------------------------------------------------------------
Mon Jul  5 03:07:27 UTC 2021 - Tina Müller <timueller+perl@suse.de>

- updated to 0.9722
   see /usr/share/doc/packages/perl-Graph/Changes

  0.9722 2021-07-04
  - fix neighbours et al not returning count in scalar context - thanks @merkys for report

-------------------------------------------------------------------
Mon Apr 19 03:07:02 UTC 2021 - Tina Müller <timueller+perl@suse.de>

- updated to 0.9721
   see /usr/share/doc/packages/perl-Graph/Changes

  0.9721 2021-04-18
  - fix BitMatrix and AdjacencyMatrix problems - thanks @dod38fr for report

-------------------------------------------------------------------
Fri Mar 26 03:06:32 UTC 2021 - Tina Müller <timueller+perl@suse.de>

- updated to 0.9720
   see /usr/share/doc/packages/perl-Graph/Changes

  0.9720 2021-03-25
  - better fix - no mutate inputs

  0.9719 2021-03-25
  - fix all_paths infinite loop on cycle - thanks @tobez for report

-------------------------------------------------------------------
Sun Mar 14 03:08:40 UTC 2021 - Tina Müller <timueller+perl@suse.de>

- updated to 0.9718
   see /usr/share/doc/packages/perl-Graph/Changes

  0.9718 2021-03-13
  - remove doc of deleted average_degree method - thanks @lindleyw for report

-------------------------------------------------------------------
Thu Jan 28 03:06:32 UTC 2021 - Tina Müller <timueller+perl@suse.de>

- updated to 0.9717
   see /usr/share/doc/packages/perl-Graph/Changes

  0.9717 2021-01-27
  - bulk APIs for UnionFind
  - add unionfind config option for util/grand.pl (benchmark-ish script)
  - GRAPH_ALLOW_RECURSION env var to turn off recursion protection
  - "Light" edge-map now uses bit-vectors -> smaller storage
  - directed hypergraphs
  - fix same_biconnected_components logic when given >2 vertices

-------------------------------------------------------------------
Sat Jan  2 03:07:46 UTC 2021 - Tina Müller <timueller+perl@suse.de>

- updated to 0.9716
   see /usr/share/doc/packages/perl-Graph/Changes

  0.9716 2021-01-01
  - use Set::Object
  - {neighbours,successors,predecessors,reachable}_by_radius
  0.9715 2020-12-31
  - fix AdjacencyMap::Light attributes so delete when path deleted
  - fix as_hashes undirected edges: now both directions
  - subgraph_by_radius take multiple vertices
  0.9714 2020-12-25
  - remove "omni*" - hypergraphs are simply directed or undirected
  - as_hashes works with undirected hypergraphs
  - add_edge with != 2 vertices only for undirected hypergraph
  - any_edge
  - delete_*_attributes_by_id (and deleting last attribute) now don't destroy that entity
  - AdjacencyMap::Light can have attributes, so no slowdown if use (eg APSP)
  0.9713 2020-12-19
  - fix edges_at on self-edges in scalar context
  - fix refvertexed_stringified predicate
  - remove "hypervertices": a collection of n vertices is a hyperedge
  - AdjacencyMap.get_paths_by_ids
  - transitive_closure et al no longer re-bless objects to Graph
  - AdjacencyMap.get_ids_by_paths
  - no more uniqedged configurability
  - BitMatrix transpose option
  - Transitive closure records path successor, not predecessor. Method name and docs updated.

-------------------------------------------------------------------
Sun Dec  6 03:06:57 UTC 2020 - Tina Müller <timueller+perl@suse.de>

- updated to 0.9712
   see /usr/share/doc/packages/perl-Graph/Changes

  0.9712 2020-12-05
  - bug-fix: set_edge_attribute_by_id add_edge_by_id if not exist
  - connected_component_by_index behaves same with/without unionfind
  - AdjacencyMatrix handle multiedged
  - reduce redundant sorting for _UNORD, fix AdjacencyMap::Vertex with ID 0
  - AdjacencyMap.stringify
  - allow constructor args to override "prototype" object
  - fix docs for TransitiveClosure to correctly say path_vertices default true
  - AdjacencyMatrix now always creates adjacency matrix (clue in name)
  - remove compat02 features
  - drop untested scalar-context Traversal.postorder mutation behaviour
  - much more lazy-loading of modules
  - set_vertex_attribute_by_id now works on hypervertexed
  - internal AdjacencyMap uses array not hash for mapping index to path
  - successors/predecessors/rename_path work right with multivertex
  - AdjacencyMap array -> stable vertices ordering, TCM performance benefit
  - TransitiveClosure etc handle multiedged
  - all_paths ignore self-loops

-------------------------------------------------------------------
Sat Nov 28 03:06:17 UTC 2020 - Tina Müller <timueller+perl@suse.de>

- updated to 0.9711
   see /usr/share/doc/packages/perl-Graph/Changes

  0.9711 2020-11-27
  - ingest handle multivertexed, multiedged right

  0.9710 2020-11-27
  - all_paths method
  - as_hashes handle multivertexed, multiedged right

-------------------------------------------------------------------
Mon Nov 23 03:06:15 UTC 2020 - Tina Müller <timueller+perl@suse.de>

- updated to 0.9709
   see /usr/share/doc/packages/perl-Graph/Changes

  0.9709 2020-11-22
  - add path_count option to TransitiveClosure
  - get_{edge,vertex}_attributes undef if no such entity, in list context
  - as_hashes method
  - ingest method

-------------------------------------------------------------------
Sat Nov  7 03:16:31 UTC 2020 - Tina Müller <timueller+perl@suse.de>

- updated to 0.9708
   see /usr/share/doc/packages/perl-Graph/Changes

  0.9708 2020-11-06
  - update metadata for Test::More version dep
  - stringify hypervertices right
  - add rename_vertex, rename_vertices

-------------------------------------------------------------------
Sun Nov  1 03:07:25 UTC 2020 - Tina Müller <timueller+perl@suse.de>

- updated to 0.9707
   see /usr/share/doc/packages/perl-Graph/Changes

  0.9707 2020-10-31
  - can't use Safe, ergo Storable, on 5.8

-------------------------------------------------------------------
Wed Oct 21 03:11:11 UTC 2020 - Tina Müller <timueller+perl@suse.de>

- updated to 0.9706
   see /usr/share/doc/packages/perl-Graph/Changes

-------------------------------------------------------------------
Sat Oct 10 08:58:47 UTC 2015 - coolo@suse.com

- updated to 0.9704
   see /usr/share/doc/packages/perl-Graph/Changes

  0.9704 2015-10-07  Jarkko Hietaniemi  <jhi@iki.fi>
      - rt.cpan.org 107567: edges() missing on undirected multiedged graph:
        was broken in 0.96, had been fixed somewhere there and here,
        added the test case
      - rt.cpan.org 107600: no modify Storable $VERSION

-------------------------------------------------------------------
Fri Oct  2 09:08:25 UTC 2015 - coolo@suse.com

- updated to 0.9703
   see /usr/share/doc/packages/perl-Graph/Changes

  0.9703 2015-09-29  Jarkko Hietaniemi  <jhi@iki.fi>
      - document (at user level) the openbsd random problem
      - using the 5.22+ Inf was done the wrong way:
        https://github.com/neilbowers/Graph/issues/1
  
  0.9702 2015-09-28  Jarkko Hietaniemi  <jhi@iki.fi>
      - rt.cpan.org 107394 $Storable::VERSION may contain underscores
      - follow-up to rt.cpan.org 104687: more docs, fixes, and tests for
        diameter/radius/shortest_path/center_vertices/vertex_eccentricity
        for corner cases like empty graph, single-vertex graphs, and
        in general unconnected graphs
      - for perl 5.22 or later one should be able to use Inf for Infinity
      - openbsd before perl 5.20 had nondeterministic rand()

-------------------------------------------------------------------
Wed Sep 23 08:40:24 UTC 2015 - coolo@suse.com

- updated to 0.97
   see /usr/share/doc/packages/perl-Graph/Changes

-------------------------------------------------------------------
Wed Jun  5 05:50:19 UTC 2013 - coolo@suse.com

- updated to 0.96
      * Address rt.cpan.org #85449:
        "Graph-0.94 tests fail under perl 5.18.0"

      * Address rt.cpan.org #82324:
        "Test failures due to hash randomisation in perl 5.17.6"

      The two above fixes were the same: the biconnectedness
      code was rewritten from scratch.  The new code behaves
      differently (but I believe more correctly) on certain
      edge cases, in general it will generate more biconnected
      components and bridges, for example for "a=b=c" it will
      now return the same two biconnected components and bridges
      (cut edges), namely "a=b" and "b=c", the "b" of course being
      the articulation point (cut vertex).

      * Address rt.cpan.org #67213:
        "[PATCH] pod fixes"

      * Remove the t/u_bo.t and t/u_bo1.t since they die in 5.18 due
        to some strange failure, looks unrelated to Graph as such,
        probably some fix/change made by newer Perls. 

      * Release as 0.95.

-------------------------------------------------------------------
Fri Nov 18 11:10:38 UTC 2011 - coolo@suse.com

- use original .tar.gz

-------------------------------------------------------------------
Tue Nov 30 19:20:17 UTC 2010 - coolo@novell.com

- switch to perl_requires macro

-------------------------------------------------------------------
Mon Aug  2 15:36:23 UTC 2010 - chris@computersalat.de

- initial package 0.94
  * created by cpanspec 1.78

