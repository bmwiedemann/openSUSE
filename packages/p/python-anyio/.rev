<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>6fd271565be1cf7c566547b97fb84f14</srcmd5>
    <version>2.0.2</version>
    <time>1612989003</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>868493</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>a8280ed10a9b1a64c85060f5d35c24f3</srcmd5>
    <version>2.2.0</version>
    <time>1615802186</time>
    <user>dimstar_suse</user>
    <comment>- Update to 2.2.0:
  * Added the ``maybe_async()`` and ``maybe_async_cm()`` functions to facilitate forward compatibility with AnyIO 3
  * Fixed socket stream bug on asyncio where receiving a half-close from the peer would shut down the entire connection
  * Fixed native task names not being set on asyncio on Python 3.8+
  * Fixed ``TLSStream.send_eof()`` raising ``ValueError`` instead of the expected ``NotImplementedError``
  * Fixed ``open_signal_receiver()`` on asyncio and curio hanging if the cancel scope was cancelled before the function could run
  * Fixed Trio test runner causing unwarranted test errors on ``BaseException``s
  * Fixed formatted output of ``ExceptionGroup`` containing too many newlines
  * Added the ``spawn_task()`` and ``wrap_async_context_manager()`` methods to ``BlockingPortal``
  * Added the ``handshake_timeout`` and ``error_handler`` parameters to ``TLSListener``
  * Fixed ``Event`` objects on the trio backend not inheriting from ``anyio.abc.Event``
  * Fixed ``run_sync_in_worker_thread()`` raising ``UnboundLocalError`` on asyncio when cancelled
  * Fixed ``send()`` on socket streams not raising any exception on asyncio, and an unwrapped
  * ``BrokenPipeError`` on trio and curio when the peer has disconnected
  * Fixed ``MemoryObjectSendStream.send()`` raising ``BrokenResourceError`` when the last receiver is closed right after receiving the item
  * Fixed ``ValueError: Invalid file descriptor: -1`` when closing a ``SocketListener`` on asyncio</comment>
    <requestid>879046</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>258275cb7c35bd58e063a9470a852845</srcmd5>
    <version>3.1.0</version>
    <time>1626045890</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>897206</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>6ab4bd0b10076a96ffe89aa2615498eb</srcmd5>
    <version>3.3.1</version>
    <time>1631913971</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>919878</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>48add22fa300b860105f358aa07ba36d</srcmd5>
    <version>3.3.3</version>
    <time>1634587145</time>
    <user>dimstar_suse</user>
    <comment>- update to 3.3.3:
  * Fixed UNIX socket listener not setting accepted sockets to non-blocking
    mode on asyncio
  * Changed unconnected UDP sockets to be always bound to a local port (on
    &quot;any&quot; interface) to avoid errors on asyncio + Windows
  * Fixed cancellation problem on asyncio where level-triggered cancellation
    for **all** parent cancel scopes would not resume after exiting a 
    shielded nested scope</comment>
    <requestid>925754</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>2df47aee1bc1855945f224101147024f</srcmd5>
    <version>3.3.4</version>
    <time>1635366061</time>
    <user>dimstar_suse</user>
    <comment>- update to 3.3.4:
  * Fixed ``BrokenResourceError`` instead of ``EndOfStream`` being raised in
   ``TLSStream`` when the peer abruptly closes the connection while
   ``TLSStream`` is receiving data with ``standard_compatible=False`` set</comment>
    <requestid>927591</requestid>
  </revision>
</revisionlist>
