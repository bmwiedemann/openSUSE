<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>7ecea057a791c1e70089df44c9ea4ff6</srcmd5>
    <version>0.32.2</version>
    <time>1569235078</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>732119</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>abc0e65f91bd0c3e7e07249c90df2df5</srcmd5>
    <version>1.4</version>
    <time>1584643997</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>786483</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>224733874deac093f1de48299477ee27</srcmd5>
    <version>1.5</version>
    <time>1587467144</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>795465</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>aae8308d9e3ba4e39ed5da0b5cfe9b49</srcmd5>
    <version>1.5.1</version>
    <time>1591743229</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.5.1
  * Signature generation with `extra: allow` never uses a field name, #1418 by @prettywood
  * Avoid mutating `Field` default value, #1412 by @prettywood</comment>
    <requestid>813030</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>d5e81aaacfba26417019532f374746fa</srcmd5>
    <version>1.6.1</version>
    <time>1596565310</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>824184</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>d5fcd85eb0292a08560f6bdea4042b2e</srcmd5>
    <version>1.6.1</version>
    <time>1603961256</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>841235</requestid>
  </revision>
  <revision rev="7" vrev="3">
    <srcmd5>623e0c861137b5736fb24dc3200301fd</srcmd5>
    <version>1.6.1</version>
    <time>1607801330</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>853456</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>777309a648042f181226c40826889b30</srcmd5>
    <version>1.7.3</version>
    <time>1610381479</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>861664</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>e15bb0587bb9de701eef7eab7022ab23</srcmd5>
    <version>1.8.2</version>
    <time>1621113356</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>892677</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>7428716441ea1b81a1ff3b77b7d67801</srcmd5>
    <version>1.9.0</version>
    <time>1641480676</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>944133</requestid>
  </revision>
  <revision rev="11" vrev="2">
    <srcmd5>6ae9d5aa25d6f0369f613b152125b720</srcmd5>
    <version>1.9.0</version>
    <time>1643926574</time>
    <user>dimstar_suse</user>
    <comment>- Skip some truculent tests. 
- Clean up non-required Python 3.6 {Build,}Requires.</comment>
    <requestid>950593</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>8a6c4971a25a503b839f106d485cdbcb</srcmd5>
    <version>1.9.1</version>
    <time>1655665833</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>983628</requestid>
  </revision>
  <revision rev="13" vrev="2">
    <srcmd5>53d9f3a9070bb16467e2b71bb6fcd379</srcmd5>
    <version>1.9.1</version>
    <time>1659941094</time>
    <user>dimstar_suse</user>
    <comment>- Add patch remove-pkg_resources.patch:
  * Use packaging, not pkg_resources for versions.</comment>
    <requestid>990100</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>bdad2463eaf7f8db3cc6bf7f4419a710</srcmd5>
    <version>1.10.2</version>
    <time>1662740883</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.10.2:
  * Prevent long (length &gt; 4_300) strings/bytes as input to int fields, see
    python/cpython#95778 and CVE-2020-10735
  * fix: dataclass wrapper was not always called
  * Use tomllib on Python 3.11 when parsing mypy configuration
  * Basic fix of GenericModel cache to detect order of arguments in Union models
  * Fix mypy plugin when using bare types like list and dict as default_factory
  * Add __hash__ method to pydancic.color.Color class
  * Refactor the whole pydantic dataclass decorator to really act like its
    standard lib equivalent. It hence keeps __eq__, __hash__, ... and makes
    comparison with its non-validated version possible.
  * Now that Config.extra is supported, dataclass ignores by default extra
    arguments (like BaseModel)
  * Fix PEP487 __set_name__ protocol in BaseModel for PrivateAttrs
  * Allow for custom parsing of environment variables via parse_env_var in
    Config
  * Fix StrictStr does not raise ValidationError when max_length is present
    in Field
  * Make SecretStr and SecretBytes hashable
  * Fix StrictBytes does not raise ValidationError when max_length is present
    in Field
  * Add support for bare type
  * Support Python 3.11, including binaries for 3.11 in PyPI
  * Add support for re.Pattern
  * Fix __post_init_post_parse__ is incorrectly passed keyword arguments when
    no __post_init__ is defined
  * Fix implicitly importing ForwardRef and Callable from pydantic.typing
    instead of typing and also expose MappingIntStrAny
  * remove Any types from the dataclass decorator so it can be used with the
    disallow_any_expr mypy option</comment>
    <requestid>1002215</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>582f79afe194b98d65ebef41644a3c56</srcmd5>
    <version>1.10.4</version>
    <time>1672851194</time>
    <user>dimstar_suse</user>
    <comment>- update to v1.10.4:
  * Change dependency to typing-extensions&gt;=4.2.0, #4885 by @samuelcolvin
  * fix parsing of custom root models, #4883 by @gou177
  * fix: use dataclass proxy for frozen or empty dataclasses, #4878 by
    @PrettyWood
  * Fix schema and schema_json on models where a model instance is a one of
    default values, #4781 by @Bobronium
  * Add Jina AI to sponsors on docs index page, #4767 by @samuelcolvin
  * fix: support assignment on DataclassProxy, #4695 by @PrettyWood
  * Add postgresql+psycopg as allowed scheme for PostgreDsn to make it
    usable with SQLAlchemy 2, #4689 by @morian
  * Allow dict schemas to have both patternProperties and
    additionalProperties, #4641 by @jparise
  * Fixes error passing None for optional lists with unique_items, #4568 by
    @mfulgo
  * Fix GenericModel with Callable param raising a TypeError, #4551 by
    @mfulgo
  * Fix field regex with StrictStr type annotation, #4538 by @sisp
  * Correct dataclass_transform keyword argument name from field_descriptors
    to field_specifiers, #4500 by @samuelcolvin
  * fix: avoid multiple calls of __post_init__ when dataclasses are
    inherited, #4487 by @PrettyWood
  * Reduce the size of binary wheels, #2276 by @samuelcolvin
</comment>
    <requestid>1055778</requestid>
  </revision>
  <revision rev="16" vrev="2">
    <srcmd5>63c0bbf2e1acfd412d2c940baf773526</srcmd5>
    <version>1.10.4</version>
    <time>1679068860</time>
    <user>dimstar_suse</user>
    <comment>- Disable DeprecationWarning in tests to avoid error with the latest
  setuptools and pkg_resources deprecation
</comment>
    <requestid>1072306</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>ea3c405a2f180ae11591c714aef26c9a</srcmd5>
    <version>1.10.7</version>
    <time>1680125192</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.10.7:
  * Fix creating schema from model using `ConstrainedStr` with
    `regex` as dict key
  * Address bug in mypy plugin caused by
    explicit_package_bases=True
  * Add implicit defaults in the mypy plugin for Field with no
    default argument
  * Fix schema generated for Enum values used as Literals in
    discriminated unions
  * Fix mypy failures caused by the pydantic mypy plugin when
    users define `from_orm` in their own classes
  * Fix `InitVar` usage with pydantic dataclasses, mypy version
    `1.1.1` and the custom mypy plugin
  * Implement logic to support creating validators from non
    standard callables by using defaults to identify them and
    unwrapping `functools.partial` and `functools.partialmethod`
    when checking the signature
  * Fix mypy plugin for v1.1.1, and fix `dataclass_transform`
    decorator for pydantic dataclasses
  * Raise `ValidationError`, not `ConfigError`, when a
    discriminator value is unhashable
  * Fix broken parametrized bases handling with `GenericModel`s
    with complex sets of models
  * Invalidate mypy cache if plugin config changes
  * Fix `RecursionError` when deep-copying dataclass types
    wrapped by pydantic
  * Fix `X | Y` union syntax breaking `GenericModel`</comment>
    <requestid>1074635</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>387a843a5577a9b6daa36086cec049eb</srcmd5>
    <version>1.10.8</version>
    <time>1685124899</time>
    <user>dimstar_suse</user>
    <comment>- Update to v1.10.8
  * Fix a bug in `Literal` usage with `typing-extension==4.6.0`, #5826
    by @hramezani
  * This solves the (closed) issue #3849 where aliased fields that use
    discriminated union fail to validate when the data contains the
    non-aliased field name, #5736 by @benwah
  * Update email-validator dependency to &gt;=2.0.0post2, #5627 by
    @adriangb
  * update `AnyClassMethod` for changes in
    [python/typeshed#9771](https://github.com/python/typeshed/issues/9771),
    #5505 by @ITProKyle
</comment>
    <requestid>1088976</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>63532aca6c092032ae3663e4c85b9f1c</srcmd5>
    <version>1.10.9</version>
    <time>1688660886</time>
    <user>favogt_factory</user>
    <comment>- update to 1.10.9:
  * Fix trailing zeros not ignored in Decimal validation
  * Fix mypy plugin for v1.4.0
  * Add future and past date hypothesis strategies
  * Discourage usage of Cython 3 with Pydantic 1.x</comment>
    <requestid>1096962</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>6406cb1009dfc13965b9141920e3dbd5</srcmd5>
    <version>1.10.13</version>
    <time>1704659936</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.10.13:
  * Fix: Add max length check to `pydantic.validate_email`
  * Docs: Fix pip commands to install v1
  * Fixes the `maxlen` property being dropped on `deque`
    validation. Happened only if the deque item has been typed.
    Changes the `_validate_sequence_like` func, #6581 by
  * Importing create_model in tools.py through relative path
    instead of absolute path - so that it doesn't import V2 code
    when copied over to V2 branch, #6361 by @SharathHuddar
  * Add Pydantic `Json` field support to settings management,
  * Fixed literal validator errors for unhashable values
  * Fixed bug with generics receiving forward refs
  * Update install method of FastAPI for internal tests in CI,
    #6117 by @Kludex
- add Fix-Python-3.12-test-failures.patch: fix test fails with
  Python 3.12

  * Use packaging, not pkg_resources for versions.
- Skip some truculent tests.
  * Security fix: Fix date and datetime parsing so passing either 'infinity'
  * BaseSettings now uses the special env settings to define which
  * Change the precedence of aliases so child model aliases override
  * Add support for required Optional with name: Optional[AnyType] = Field(...)
  * alias precedence logic changed so aliases on a field always take</comment>
    <requestid>1137356</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>b18e9024119ff76571ca1939577955d1</srcmd5>
    <version>1.10.14</version>
    <time>1705951852</time>
    <user>anag+factory</user>
    <comment>- update to 1.10.14:
  * Update install.md
  * Fixes ci to only deploy docs on release
  * Fix cached_property handling in dataclasses when copied</comment>
    <requestid>1140422</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>3193f457c131751c298618de21185994</srcmd5>
    <version>2.6.3</version>
    <time>1710434530</time>
    <user>anag+factory</user>
    <comment>- Update to 2.6.3:
  * Fix inheriting `Field` annotations in dataclasses
  * Fix warning for tuple of wrong size in `Union`
  * Fix `computed_field` JSON serializer `exclude_none` behavior
  * Check for `email-validator` version &gt;= 2.0
  * Add `NatsDsn`
  * Add `ConfigDict.ser_json_inf_nan`
  * Support `AliasGenerator` usage
  * Support `yyyy-MM-DD` datetime parsing
  * Added bits conversions to the `ByteSize` class
  * Add `eval_type_backport` to handle union operator
  * Add support for `dataclass` fields `init`
  * Implement pickling for `ValidationError`
  * Add unified tuple validator that can handle &quot;variadic&quot; tuples via PEP-646
  * Drop Python3.7 support
  * Make `@validate_call` return a function instead of a custom descriptor
  * Introducing `classproperty` decorator for `model_computed_fields`
  * Move `getattr` warning in deprecated `BaseConfig`
  * Only hash `model_fields`, not whole `__dict__`
  * Fix overload position of `computed_field`
  * Fix issue `unittest.mock` deprecation warnings 
  * Fix `to_snake` conversion
  * Add support for field `alias` in `dataclass` signature
  * Fix ordering of keys in `__dict__` with `model_construct` call
  * Fix usage of `@deprecated`
  * Add more support for private attributes in `model_construct` call
  * Support `pydantic.Field(repr=False)` in dataclasses
  * Override `dataclass_transform` behavior for `RootModel`
  * Refactor signature generation for simplicity
  * Fix ordering bug of PlainValidator annotation</comment>
    <requestid>1155773</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>9648bb2623ddd8786b5baa3761b30dab</srcmd5>
    <version>2.6.4</version>
    <time>1710776655</time>
    <user>anag+factory</user>
    <comment>- update to 2.6.4:
  * Fix usage of `AliasGenerator` with `computed_field` decorator
  * Fix nested discriminated union schema gen, pt 2
  * Fix bug with no_strict_optional=True caused by API deferral

  * Fix issue `unittest.mock` deprecation warnings</comment>
    <requestid>1158460</requestid>
  </revision>
  <revision rev="24" vrev="2">
    <srcmd5>8a0ea2535813b85c0d470f64f4f98fe9</srcmd5>
    <version>2.6.4</version>
    <time>1713290644</time>
    <user>anag+factory</user>
    <comment>- Update to 2.6.3 (bsc#1222806, CVE-2024-3772):</comment>
    <requestid>1167847</requestid>
  </revision>
</revisionlist>
