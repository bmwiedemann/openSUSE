-------------------------------------------------------------------
Mon Nov 25 11:58:17 UTC 2019 -  <timueller+perl@suse.de>

- updated to 2.2012
   see /usr/share/doc/packages/perl-Moose/Changes

  2.2012   2019-11-22
  
    [TESTS]
  
    - adjust test of missing package to accomodate new diagnostic message in
      perl 5.31.6 (RT#130929)

-------------------------------------------------------------------
Thu May 17 05:39:30 UTC 2018 - coolo@suse.com

- updated to 2.2011
   see /usr/share/doc/packages/perl-Moose/Changes

-------------------------------------------------------------------
Sat Feb 17 06:42:05 UTC 2018 - coolo@suse.com

- updated to 2.2010
   see /usr/share/doc/packages/perl-Moose/Changes

  2.2010   2018-02-16
  
    [OTHER]
  
    - A performance improvement with operator overloads has been made by making
      use of a new Devel::OverloadInfo interface (thanks, ilmari!)

-------------------------------------------------------------------
Thu Dec  7 06:40:11 UTC 2017 - coolo@suse.com

- updated to 2.2009
   see /usr/share/doc/packages/perl-Moose/Changes

  2.2009   2017-11-29
  
    [BUG FIXES]
  
    - Some hash native trait methods (notably clear and delete) were broken in
      various ways when the associated attribute's type allowed for coercion of
      the hash values and coercion was enabled for the hash. Reported by Ralf
      Bartel in RT #12737.
  
    [TESTS]
  
    - fixed tests (new in 2.2008) that sometimes fail under Windows.
  
  2.2008   2017-11-21
  
    [BUG FIXES]
  
    - fixed empty exception messages under -d (new issue in 2.2007)

-------------------------------------------------------------------
Mon Nov 13 06:36:45 UTC 2017 - coolo@suse.com

- updated to 2.2007
   see /usr/share/doc/packages/perl-Moose/Changes

  2.2007   2017-11-12
  
    [DOCUMENTATION]
  
    - The Moose::Manual::Attributes pod has been amended to clarify that
      'required' attributes can be satisfied with a 'default' or 'builder' sub,
      and that 'ro' attributes can be set through the constructor.
  
    - The Moose::Manual::Types pod has been amended to recommend
      Params::ValidationCompiler and Moops instead of older modules (which are
      slow and/or deprecated).
  
    - other small documentation fixes (thanks to Chris Weyl and Anirvan
      Chatterjee!)
  
    [OTHER]
  
    - some dead code has been removed (thanks, Jens Berthold!)
  
    - all Moose exception classes have been made immutable.

-------------------------------------------------------------------
Thu Jul 13 05:48:23 UTC 2017 - coolo@suse.com

- updated to 2.2006
   see /usr/share/doc/packages/perl-Moose/Changes

  2.2006   2017-07-12
  
    [BUG FIXES]
  
    - Passing roles as a mix of role names and role objects to
      Moose::Meta::class->create_anon_class could throw a bogus exception about
      'Roles with parameters cannot be cached ...'. Fixed by Olivier
      MenguÃ©. Based on PR #117.

-------------------------------------------------------------------
Thu May  4 06:12:18 UTC 2017 - coolo@suse.com

- updated to 2.2005
   see /usr/share/doc/packages/perl-Moose/Changes

  2.2005   2017-05-03
  
    [OTHER]
  
    - increased minimum required version of Test::More, to ensure a reliable
      subtest.

-------------------------------------------------------------------
Wed Feb  8 06:10:03 UTC 2017 - coolo@suse.com

- updated to 2.2004
   see /usr/share/doc/packages/perl-Moose/Changes

  2.2004   2017-01-31
  
    [BUG FIXES]
  
    - When an attribute was specified as 'rw' and you also provided an accessor
      name matching the attribute and there was an explicit writer, Moose would
      try to make an additional reader access with the same name as the
      attribute. Then Moose would warn about overwriting an accessor with a
      reader. This is related to the bugs reported in RT #120040.
  
  2.2003   2017-01-30
  
    [BUG FIXES]
  
    - Moose could die when attempting to warn about overwriting an attribute's
      access method in some cases (since version 2.1902) (RT #120040)
  
  2.2002   2017-01-30
  
    [BUG FIXES]
  
    - Creating a Moose subclass of a Moo class with an attribute with a
      delegation would cause a warning (since version 2.1902).

-------------------------------------------------------------------
Mon Jan 30 06:07:42 UTC 2017 - coolo@suse.com

- updated to 2.2001
   see /usr/share/doc/packages/perl-Moose/Changes

  2.2001   2017-01-29
  
    [TESTS]
  
    - fixed variable interpolation in filename in test (RT#120033)
  
  2.2000   2017-01-29
  
    [OTHER]
  
    - increased minimum required version of Sub::Name.
  
  2.1905   2017-01-07 (TRIAL RELEASE)
  
    [ENHANCEMENTS]
  
    - Added support for __no_BUILD__ as a constructor argument to skip calling
      any BUILD subs (used internally by modules like Moo that have their own
      implementation of calling BUILD) (PR#142, Graham Knop)
  
  2.1904   2016-12-22 (TRIAL RELEASE)
  
    [BUG FIXES]
  
    - Slight tweaks to the syntax used for hashes in a few tests, that were
      broken by a recent Test::More release that started using a new namespace
      that clashes with a (bareword) type name in these tests. (PR#141,
      D.Maestro)
  
  2.1903   2016-11-22 (TRIAL RELEASE)
  
    [ENHANCEMENTS]
  
    - When an attribute defines two methods (say a reader and writer) with the
      same name, this now generates a warning.
  
    - The warning when attribute methods overwrite one another is now much more
      informative. It includes the type of accessors involve (reader, writer,
      predicate, etc.) as well as the file and line where each accessor was
      defined. Fixes RT #118325.
  
    [BUG FIXES]
  
    - Brought back the Moose::Meta::Method::Delegation->_get_delegate_accessor
      method for the benefit of MooseX::CurriedDelegation.
  
    - The definition context (package, file, & line) for attributes on
      Class::MOP and Moose metaclasses was wrong in all cases.
  
  2.1902   2016-10-23 (TRIAL RELEASE)
  
    [ENHANCEMENTS]
  
    - The stack trace for an inlined delegation now tells you where the
      delegating attribute was declared (file and line number).
  
  2.1901   2016-10-20 (TRIAL RELEASE)
  
    [TESTS]
  
    - warnings are only checked for in tests under AUTHOR_TESTING, so as to not
      prevent installation when warnings occur in prerequisites.
  
  2.1900   2016-10-09 (TRIAL RELEASE)
  
    [ENHANCEMENTS]
  
    - Most delegations are inlined now. This is not done for speed but rather to
      improve stack traces when the delegated-to method throws an exception or
      when the delegated-to method simply does not exist in the
      delegatee. Previously, this stack trace and associated error were less
      helpful than they could have been. Requested by Tim Bunce, Olaf Alders,
      and Van de Bugger. (RT#46614, RT#98402, and RT#109631).

-------------------------------------------------------------------
Fri Dec 23 06:45:05 UTC 2016 - coolo@suse.com

- updated to 2.1807
   see /usr/share/doc/packages/perl-Moose/Changes

  2.1807   2016-12-22
  
    [BUG FIXES]
  
    - The definition context (package, file, & line) for attributes on
      Class::MOP and Moose metaclasses was wrong in all cases.
  
    - Slight tweaks to the syntax used for hashes in a few tests, that were
      broken by a recent Test::More release that started using a new namespace
      that clashes with a (bareword) type name in these tests. (PR#141,
      D.Maestro)

-------------------------------------------------------------------
Tue Sep 27 05:43:42 UTC 2016 - coolo@suse.com

- updated to 2.1806
   see /usr/share/doc/packages/perl-Moose/Changes

-------------------------------------------------------------------
Mon Sep 26 05:36:06 UTC 2016 - coolo@suse.com

- updated to 2.1806
   see /usr/share/doc/packages/perl-Moose/Changes

  2.1806   2016-09-25
  
    [BUG FIXES}
  
    - A role generated on the fly (as opposed to one in a file on disk) could
      not be used as a trait. Fixed by Aaron Cohen. (RT#92089, PR#47).
  
    [ENHANCEMENTS]
  
    - When a required attribute's init_arg differs from the attribute's name, we
      now include both the attribute name and init_arg in the exception thrown
      when that attribute is not provided. (RT#116814, Gordon Fisher)
  
    - The unimport sub generated by Moose::Exporter can now be called with
      parameters like { into => 'Package' } or { into_level => 1 }, just like
      the import sub it generates. Requested by Dmytro Zagashev. (RT #93666).
  
    - Moose::Meta::Attribute objects created from role attributes keep a
      reference to the Moose::Meta::Role::Attribute which created
      them. Moose::Meta::Attribute now has ->role_attribute and
      ->has_role_attribute methods. RT #84563 and #117586. (Dave Rolsky)
  
    [DOCUMENTATION]
  
    - Updated Moose::Manual::Roles with more detail on role consumption and how
      to deal with various corner cases involving required methods, multiple
      roles, etc.

-------------------------------------------------------------------
Sat Aug 20 05:35:41 UTC 2016 - coolo@suse.com

- updated to 2.1805
   see /usr/share/doc/packages/perl-Moose/Changes

  2.1805   2016-08-19
  
    [BUG FIXES]
  
    - remove inc/Config.pm that should not have appeared in the distribution (an
      issue since 2.1800; RT#117071)

-------------------------------------------------------------------
Sun Jun 12 13:23:17 UTC 2016 - coolo@suse.com

- updated to 2.1804
   see /usr/share/doc/packages/perl-Moose/Changes

  2.1804   2016-06-02
  
    [OTHER]
  
    - restrict Type::Tiny test to versions new enough to support native traits.
  
    - restrict recipe test to perls where Regexp::Common is installable
  
  2.1803   2016-05-31
  
    [BUG FIXES]
  
    - fixed type compatibility with Type::Tiny that was partially lost in
      2.1802.

-------------------------------------------------------------------
Sat May 28 10:12:31 UTC 2016 - coolo@suse.com

- updated to 2.1802
   see /usr/share/doc/packages/perl-Moose/Changes

  2.1802   2016-05-25
  
    [BUG FIXES]
  
    - Fixed test failures if Specio 0.14+ was installed.
  
    [OTHER]
  
    - updated metadata, used by moose-outdated and t/zzz-check-breaks.t,
      to reflect downstream modules affected by the recent removal of
      List::MoreUtils.

-------------------------------------------------------------------
Thu May  5 09:43:06 UTC 2016 - coolo@suse.com

- updated to 2.1801
   see /usr/share/doc/packages/perl-Moose/Changes

  2.1801   2016-05-02
  
    [OTHER]
  
    - bundled an updated ExtUtils::HasCompiler, to support building with a
      noexec $TMPDIR.
  
  2.1800   2016-04-30
  
    [OTHER]
  
    - an increased Data::OptList version has been added to recommended prereqs,
      for greater speed. (Olivier MenguÃ©, PR#123)
  
  2.1705   2016-04-21 (TRIAL RELEASE)
  
    [OTHER]
  
    - build-time compiler sanity checking is now done with ExtUtils::HasCompiler
      instead of ExtUtils::CBuilder.
  
  2.1704   2016-04-13 (TRIAL RELEASE)
  
    [BUG FIXES]
  
    - Fixed method cache regeneration when a class contains a blessed sub
      (RT#113704, Graham Knop, PR#122)
  
    [TESTS]
  
    - restore test on perl 5.8.x when Class::C3::XS is not installed (RT#113704)
  
  2.1703   2016-04-12 (TRIAL RELEASE)
  
    [TESTS]
  
    - skip dysfunctional test on perl 5.8.x when Class::C3::XS is not installed
      (RT#113704)
  
  2.1702   2016-04-08 (TRIAL RELEASE)
  
    [DOCUMENTATION]
  
    - Moose::Meta::Attribute::Native::Trait::Array now documents the return
      value for 'first_index' when there is no match (-1).
  
    [OTHER]
  
    - Moose::Exception's message attribute can now be any defined value, so as
      to allow for objects with a stringification overload in place of a string.
  
  2.1701   2016-04-07 (TRIAL RELEASE)
  
    [OTHER]
  
    - Fixed the last remaining use of List::MoreUtils (RT#113587)
  
  2.1700   2016-04-06 (TRIAL RELEASE)
  
    [OTHER]
  
    - Moose::Exception now has a boolean overload. (Graham Knop, PR#119)
  
    - All uses of List::MoreUtils have been removed, replaced by inlined forms
      or equivalents in List::Util. (Graham Knop, PR#120)

-------------------------------------------------------------------
Fri Feb 19 10:34:37 UTC 2016 - coolo@suse.com

- updated to 2.1605
   see /usr/share/doc/packages/perl-Moose/Changes

  2.1605   2016-02-16
  
    [DOCUMENTATION]
  
    - Fixed references to test files that were renamed when their associated
      documentation files were renamed in 2.0500 (RT#111898)
  
    - Moose::Manual::Roles now contains a section on handling required
      attributes in role application (thanks, Kent Fredric!)
  
    - a few other, very minor, documentation fixes

-------------------------------------------------------------------
Sun Nov  8 09:58:33 UTC 2015 - coolo@suse.com

- updated to 2.1604
   see /usr/share/doc/packages/perl-Moose/Changes

  2.1604   2015-11-07
  
    [OTHER]
  
    - minimum perl requirement is now set in configure-requires, as well as
      runtime-requires, to ensure that smokers bail out early enough to declare
      the installation N/A rather than FAIL.

-------------------------------------------------------------------
Mon Sep 21 05:03:57 UTC 2015 - coolo@suse.com

- updated to 2.1603
   see /usr/share/doc/packages/perl-Moose/Changes

-------------------------------------------------------------------
Tue Apr 14 17:45:34 UTC 2015 - coolo@suse.com

- updated to 2.1403
   see /usr/share/doc/packages/perl-Moose/Changes

  2.1403   2014-12-07
  
    [ENHANCEMENTS]
  
    - Added a section to Moose::Manual::MethodModifiers illustrating how method
      modifiers work with inheritance. (Andreas Koenig, RT #98940)
  
    [DOCUMENTATION]
  
    - Added docs to Moose.pm on the -meta_name import option. This addresses RT
      #98488.
  
    [BUG FIXES]
  
    - Fix a test that fails on MSWin32 systems using nmake
    - fix dev build compilation error when using MSVC (A. Sinan Unur)
  
    [OTHER]
  
    - the modules in the git repository now have a defined $VERSION, to make it
      easier to test MooseX::* and other code under development.
  
  2.1402   2014-11-05
  
    [BUG FIXES]
  
    - Fix a test that was trying to load Test::Exception instead of Test::Fatal.
      (Michael Schout)
  
  2.1401   2014-11-03
  
    [BUG FIXES]
  
    - The core overloading support interacted badly with
      MooseX::MarkAsMethods. If you used MooseX::MarkAsMethods in a role that
      provided overloading, then that overloading would not be properly applied
      to consuming classes, leading to very weird errors of the form:
  
          Can't resolve method "???" overloading """" in package "Class2" ...
  
      Note that the problems that MooseX::MarkAsMethods fixes are no longer
      present if you are using Moose 2.1400+ and namespace::autoclean 0.16+. We
      encourage you to upgrade both of these modules and remove
      MooseX::MarkAsMethods from your code base.
  
  2.1400   2014-10-31
  
    [BUG FIXES]
  
    - Moose exception classes now stringify all stack frames, to avoid issues
      in global destruction (see RT#99811)
  
  2.1307   2014-10-26 (TRIAL RELEASE)
  
    [ENHANCEMENTS]
  
    - Support added to Moose::Exporter for exporting subs by their fully
      qualified name, as well as coderefs. This avoids internal breakage if some
      other module has monkey-patched a sub to be exported and left it anonymous
      (e.g. RT#88669). (Graham Knop, PR#84)
  
    [BUG FIXES]
  
    - Further refined the overloading fixes from 2.1306, fixing fallback
      handling on older perl versions (Dave Rolsky, PR#85)
  
  2.1306   2014-10-25 (TRIAL RELEASE)
  
    [ENHANCEMENTS]
  
    - Rewrote overloading implementation to use a new Class::MOP::Overload
      object. This object properly captures all overloading information. The
      Class::MOP::Method::Overload class has been removed. (Dave Rolsky, PR#83)
  
    [BUG FIXES]
  
    - If a role had method-based overloading but did not actually implement the
      specified method, its overloading was simply ignored when applying
      overloading to other roles or classes. Reported by rjbs. RT #98531.
  
  2.1305   2014-10-22 (TRIAL RELEASE)
  
    [ENHANCEMENTS]
  
    - By default, exceptions thrown from inside Moose now remove most of the
      Moose internals from their stack trace when stringifying. This makes for
      much more readable error messages in most cases. Set the
      MOOSE_FULL_EXCEPTION env var to true to get the complete stack trace.
  
  2.1304   2014-09-25 (TRIAL RELEASE)
  
    [BUG FIXES]
  
     - closed a memory leak in Moose exception objects where captured stack
       trace frames would contain circular references to the exception objects
       themselves (Graham Knop, PR#81)
  
  2.1303   2014-09-19 (TRIAL RELEASE)
  
    [TEST FIXES]
  
    - fix tests that fail on altered warning messages in perl 5.21.4 (RT#98987)
  
  2.1302   2014-08-19 (TRIAL RELEASE)
  
    [BUG FIXES]
  
    - When a role consumes another role and they differ in their overloading
      fallback settings, the consuming role now silently wins instead of
      throwing an exception. This is consistent with how other
      role-consumes-role conflicts are handled.
    - Fixed the docs for overloading conflicts to match reality.  
  
  2.1301   2014-08-19 (TRIAL RELEASE)
  
    [BUG FIXES]
  
    - Conflict detection for overloading operators is now more correct. If a
      class consumed two roles that both had identical overloading methods
      (because they got them from some other role, for example), this caused an
      error, but it shouldn't. GH #4. (rjbs)
    - Similarly, when a role consumes another role, conflicts in overloading
      operators are now silently resolved in favor of the consuming role, just
      as they are with methods. Note that conflicts between the fallback setting
      for roles are still an error.
  
  2.1300   2014-08-11 (TRIAL RELEASE)
  
    [ENHANCEMENTS]
  
    - Moose now has core support for overloading in roles. When a role with
      overloading is applied to classes or other roles, the overloading settings
      are transferred to the consumer. Conflicts between roles are treated much
      like method conflicts. This obviates the need for
      MooseX::Role::WithOverloading. If you are using
      MooseX::Role::WithOverloading, upgrade to version 0.15+ and it will simply
      become a no-op when used with this version of Moose.
  
    [OTHER]
  
    - The overloading info methods for roles and classes no longer treat
      "fallback" as an overloaded op. Instead, there are new
      get_overload_fallback_value() and set_overload_fallback_value() methods to
      deal with this explicitly. This is arguably a bug fix.
  
  2.1213   2014-09-25
  
    [BUG FIXES]
  
     - closed a memory leak in Moose exception objects where captured stack
       trace frames would contain circular references to the exception objects
       themselves (Graham Knop, PR#81)
  
  2.1212   2014-09-19
  
    [TEST FIXES]
  
    - fix tests that fail on altered warning messages in perl 5.21.4 (RT#98987)
  
  2.1211   2014-08-11
  
    [DOCUMENTATION]
  
    - Updated Changes and Moose::Manual::Delta to note when we started removing
      lazy_build from docs. Also added a note in the Moose::Meta::Attribute docs
      stating that use of this feature is discouraged.
    - Added a pointer from the auto_deref feature to
      Moose::Meta::Attribute::Native. This is often a better choice.
  
    [OTHER]
  
    - The subs installed by Moose::Exporter->setup_import_methods are now named
      using Sub::Name (Dave Rolsky, RT#97572)
  
  2.1210   2014-07-03
  
    [DOCUMENTATION]
  
    - Clarify that Moose::Exception exists for internal usage and that user
      code is better off using the Throwable role or Throwable::Error superclass.
    - Moose::Manual::Support policy clarified regarding legacy Perl versions
  
    [OTHER]
  
    - tests have been removed for an alpha branch of Test::Builder that will
      never see the light of day (Exodist)
  
  2.1209   2014-06-04
  
    [OTHER]
  
    - The is_anon method now always returns false when called on
      Moose::Meta::Role::Composite objects. This isn't strictly right, but for
      the purposes of Moose internals, where "is_anon" really means "needs to be
      cleaned up", it's correct. This fixes warnings that were seen when using
      recent Moose (2.1100+) and MooseX::Role::Parameterized roles as part of a
      composite role. These warnings only appear with Perl 5.16 and earlier.
  
  2.1208   2014-06-01
  
    [BUG FIXES]
  
    - fix implementation of throw_exception in internal Class::MOP traits,
      caused by changes in 2.1207 (ether, RT#96112)
  
  2.1207   2014-05-26
  
    [OTHER]
  
    - Fixed Specio support to work with the latest Specio (0.10). This version of
      Specio no longer uses Moose internally.
    - exceptions in Class::MOP no longer use Moose::Util, instead using their
      own private implementation of throw_exception, to avoid needless premature
      loading of Moose logic.
  
  2.1206   2014-05-14
  
    [BUG FIXES]
  
    - exceptions should not throw other exceptions; fixes cases where exceptions
      were reporting the wrong error (Upasana, RT#92818 and RT#94795)
  
    [OTHER]
  
    - prereqs needed strictly for building with Dist::Zilla have been moved from
      develop requires to develop recommends, to simplify automated testing on
      older perls that cannot install all Dist::Zilla components
    - removed instances of metaobjects in exception classes where they're not
      really required

- remove outdated perl-Moose-apply_role.patch

-------------------------------------------------------------------
Fri Apr 25 11:54:56 UTC 2014 - coolo@suse.com

- updated to 2.1205
   [ENHANCEMENTS]
 
   - new utility interface: Moose::Util::is_role
 
   [BUG FIXES]
 
   - better error message provided when trying to load a trait class that does
     not exist in @INC (Upasana, RT#94731)
 
   [OTHER]
 
   - new test added, to run last, which runs `moose-outdated` as a possibly
     more visible mechanism to provide important information to the user
     (re RT#92780)

-------------------------------------------------------------------
Mon Apr 14 08:13:41 UTC 2014 - mcaj@suse.com

updated to 2.1204 
  - bump minimum prereq needed for optional test using MooseX::NonMoose (which
    broke with new Module::Runtime, see 2.1203), so users can install Moose
    and pass tests before updating MooseX::NonMoose.
  - bump prereq on Module::Runtime to properly detect when a module fails to
    load, and fix how we call these subs (Zefram, RT#92770, RT#86394, RT#92791)
  - string comparisons are now possible with Moose exceptions (RT#92232)
  - re-release to index pod files (Moose::Cookbook::*, Moose::Manual::* etc).
  - Releasing 2.1108 as stable (last stable release was 2.1005).
  - fixed distribution manifest
  - minor documentation and metadata updates
  - many additions to the list of conflicting modules (those that require
    updates after installing Moose), reflecting recent API changes
  - now failing early at build time, with a useful error message, if a
    compiler is not available
  - throw_error import cleaned from Moose::Object after use (doy)
  - resolved new circular load issue between Moose::Util and Class::MOP (Kent
    Fredric, RT#89713 and PR#42)
  - legacy throw_error now takes multiple arguments, like confess does
    (Karen Etheridge)
  - Class::MOP::Object::_inline_throw_error is back, used by some MooseX
    modules (Upasana)
  - fix errors in last trial release relating to Moose::Error::Default,
    Moose::Util::throw_error (Upasana)
  - die if a role to consume can't be found -- this restores behaviour as in
    2.1005 (doy)
  - fix test to accomodate Devel::PartialDump possibly not being installed
    (Upasana)
  - Moose string exceptions have been replaced by Moose::Exception objects. See
    Moose::Manual::Delta for details.
  - Class::MOP::load_class, Class::MOP::is_class_loaded, and
    Class::MOP::load_first_existing_class are now deprecated. See
    Moose::Manual::Delta for details.
  - The non-arrayref forms of enum and duck_type have been deprecated. See
    Moose::Manual::Delta for details.
  - Many deprecated features have now been removed:
    - optimize_as for type constraints
    - the "default is" and "default default" features for native delegations
    - setting coerce => 1 on an attribute whose type constraint has no coercion
    - the public version of Moose::Meta::Method::Destructor::initialize_body
  - Creating classes with Moose now always sets the appropriate entry in %INC,
    even if it wasn't loaded from a file. This should make writing classes
    inline easier, and will allow us to be more intelligent about figuring out
    when classes are loaded in the future. See Moose::Manual::Delta for more
    details. Note that this is slightly backwards-incompatible in some edge
    cases.
  - Moose now uses Module::Runtime instead of Class::Load to load classes. This
    means that there are no more issues with the weird heuristics that
    Class::Load does to determine if a class was previously loaded (inheriting
    from an empty package is now possible, for instance). See
    Moose::Manual::Delta for more details. This is also slightly
    backwards-incompatible in some edge cases.
  - add_method now accepts blessed subs (Graham Knop, PR#28)
  - If a role consumed another role, we resolve method conflicts just like a
    class consuming a role, but when metaclass compat tried to fix up
    metaclass roles, we were putting all methods into one composite role and
    allowing methods in the metaclass roles to conflict. Now we resolve them
    as we should. (Jesse Luehrs, PR#27)
  - Some edge cases in tests with base.pm and non-existent module files are
    handled more strictly (see also perl RT#118561) (Graham Knop, PR#25)
  - 2.1003 was released with some bad metadata, which caused the prereq test
    to fail.
  - Releasing 2.0901 as stable.
  - The with_immutable() sub from Test::Moose now passes a boolean value to
    the code block containing tests indicating whether or not the classes have
    been made immutable. This can make for nicer test descriptions. (Dave
    Rolsky)
  - You can now use Specio types instead of Moose builtins or
    MooseX::Types. As a bonus, Specio types inline coercion. However, this
    support is still experimental (as is Specio), so use it with care. (Dave
    Rolsky)
  - Fixed the Num builtin type to reject NaN, Inf, numbers with whitespace,
    and other questionable strings. The MooseX::Types::LaxNum distro
    implements the old behavior. RT#70539 (Upasana)

-------------------------------------------------------------------
Sun Jun  9 14:09:14 UTC 2013 - coolo@suse.com

- updated to 2.0802
   * fix incompatibilities with Test::Builder 1.005+ (Karen Etheridge)
   * Moose::Manual::Contributing updated to reflect the change of primary
     repository from git.moose.perl.org to github.com
 
 2.0801 Thu, Mar 28, 2013
 
   [BUG FIXES]
 
   * properly apply traits at compile time (error introduced in 2.0800,
     RT#77974). (doy)
 
 2.0800 Wed, Mar 27, 2013
 
   [ENHANCEMENTS]
 
   * The super() subroutine now carps if you pass it arguments. These arguments
     are always ignored, but we used to ignore them silently. RT #77383.
 
   * Roles can now override methods from other roles they consume directly,
     without needing to manually exclude them (just like classes can). (mst)
 
   [BUG FIXES]
 
   * Fix false positive when checking for circular references for modules that
     use the "also" parameter with Moose::Exporter. Reported by Jon
     Swartz. Fixed by Matthew Wickline. RT #63818.
 
   * Fix memory leak in type unions. (Karen Etheridge) RT#83929.
 
   * Fix application of traits at compile time. (doy) RT#77974.
 
 2.0604 Wed, Sep 19, 2012
 
   [BUG FIXES]
 
   * Fix nonsensical error message for inlined accessors of required attributes.
     (doy)
 
   * Stop trying to localize a lexical (blead now throws an error for this). RT
     #79257, perl #114628. (sprout)
 
   [OTHER]
 
   * Depend on a version of Carp new enough to have caller_info. RT #79367.
     (pshangov)

-------------------------------------------------------------------
Wed May 30 05:40:33 UTC 2012 - coolo@suse.com

- updated to 2.0602
  [BUG FIXES]

  * Ensure that the Moose::Exporter-generated init_meta returns the same value
    that it did previously. This isn't really a bug, since the return value has
    never been tested or documented, but since the generated init_meta is
    nothing more than a compatibility shim at this point, there's no reason to
    not make it as compatible as possible. Reported by Moritz Onken. (doy)

  [BUG FIXES]

  * Fix init_meta order when multiple also packages are specified (this matters
    when one of them is being used to actually initalize the metaclass,
    typically with also => 'Moose'). Reported by Randy Stauner. (doy)

 ... see Changes

-------------------------------------------------------------------
Fri Mar  2 01:01:06 CET 2012 - ro@suse.de

- remove perl-Moose-old_Test-More.patch and use sed statement
  instead (less likely to break with each package update) 

-------------------------------------------------------------------
Thu Mar  1 01:17:21 CET 2012 - ro@suse.de

- update perl-Moose-old_Test-More.patch 

-------------------------------------------------------------------
Thu Dec 15 14:45:40 UTC 2011 - coolo@suse.com

- do not buildrequire Data::Visitor, it's causing a build cycle

-------------------------------------------------------------------
Tue Nov 29 06:28:55 UTC 2011 - coolo@suse.com

- fix requires

-------------------------------------------------------------------
Sat Nov 26 00:36:50 UTC 2011 - pascal.bleser@opensuse.org

- update to 2.0401:
  * attributes with weak_ref now weaken their associated slot when they are
    initialized through a lazy default or builder
- changes from 2.0302:
  * make make_immutable return value consistent and document it to be true
- changes from 2.0301:
  * a custom error class caused a warning when the class that used it was made
    immutable
  * the enum type will now allow single value enumerations; previously, two or
    more values were required
- changes from 2.0300:
  * the optimize_as option for type constraints has been deprecated; use the
    inline_as option to provide inlining code instead
  * methods to introspect a class's methods will now return methods defined in
    UNIVERSAL (isa, can, etc.); this also means that you can wrap these
    methods with method modifiers; RT#69839
  * the ->parent and ->parents method for a union now return the nearest common
    ancestor of that union's component types; see Moose::Manual::Delta for more
    details
  * the ->parents method used to return an arrayref for union types, and a
    list of one or more types for all other types; now they all return
    lists
  * the ->is_subtype_of and ->is_a_type_of methods have changed their behavior
    for union types: previously, they returned true if any of their member
    types returned true for a given type; now, all of the member types must
    return true; RT#67731
  * the Moose::Exporter module now has a "meta_lookup" option when creating an
    importer: allows you to specify an alternate method for determining the
    metaclass of a caller; this is useful for modules like
    MooseX::Role::Parameterized which generate new metaclasses on the fly
  * added a Moose::Meta::Method->is_stub method
  * a subtype of a union type did not return the right results when you called
    ->is_subtype_of or ->is_a_type_of on it; RT#70322
  * an attribute accessor or delegation method can overwrite a stub method and
    this will no longer throw an error; RT#69988
  * the error generated by unfulfilled method requirements during role
    composition now mentions how to work around imported methods not being
    recognized RT#60583
  * class_type and role_type will now throw errors if you attempt to use them
    to override existing types, just like type and subtype have always done
  * implicitly creating class or role types by using them as the 'isa' or
    'does' parameter to attribute construction will now register the type; this
    means that it cannot later be redefined as something else
  * $class_type->is_subtype_of no longer returns true if passed the name of the
    class that the class type represents when the class type wasn't registered
  * removing anonymous metaclasses prematurely no longer prevents reaping of
    the associated stash
  * the Class::MOP::load_class and Class::MOP::is_class_loaded subroutines are
    no longer documented, and will cause a deprecation warning in the future;
    Moose now uses Class::Load to provide this functionality, and you should as
    well

-------------------------------------------------------------------
Mon Oct 31 15:04:28 UTC 2011 - pascal.bleser@opensuse.org

- update to 2.0205
- now requires Package::DeprecationManager >= 0.11

-------------------------------------------------------------------
Tue Jul  5 11:39:45 UTC 2011 - coolo@novell.com

- update to 2.0010, see Changes:
  * Fix regression in 2.0009 and 2.0103 when applying roles during init_meta in
    an exporter that also re-exports Moose or Moose::Role. (t0m, ilmari)
  * duck_type type constraints now report reasonable errors when given
    something which isn't an instance of an object. (t0m)
  * Moose::Util::apply_all_roles now works even if the applicant is a non-Moose
    class. (perigrin)
  * When an object is reblessed, triggers are called on attributes that are
    set during the reblessing. (Karen Etheridge).
  * Better error message if Moose->init_meta is called with a 'metaclass'
    option when that metaclass hasn't been loaded. (jasonmay)
  * The 'accessor' native delegation for hashrefs now allows setting the value
    to undef. (sugoik, doy)
  * Various generated methods have more useful context information. (doy)

-------------------------------------------------------------------
Wed Jun  8 15:20:10 UTC 2011 - lars@linux-schulserver.de

- skip one subtest in apply_role.t that breaks build on some dists 

-------------------------------------------------------------------
Sat Jun  4 18:59:33 UTC 2011 - lars@linux-schulserver.de

- update to 2.0007, see Changes:
  * Make sure weak attributes remain weak when cloning. (doy, rafl)
  * Only sort the alias keys when determining caching.
  * Sort the list of roles and the alias and excludes parameters when
    determining caching, since their order doesn't matter.
  * Applying multiple role objects (rather than role names) at once no longer
    skips every other role. (rjbs)
  * Caching of anon classes now works more sanely in the presence of role
    application parameters - alias and excludes options are taken into account,
    and caching is disabled entirely if other parameters exist. Asking for
    caching (instead of just not weakening) when parameters are given will
    begin warning in Moose 2.0200. (doy, autarch)
- try to fix build on distributions with old Test::More module
  ( perl-Moose-old_Test-More.patch ) and remove the tests that fail 
  as result

-------------------------------------------------------------------
Fri Apr 29 23:37:20 UTC 2011 - pascal.bleser@opensuse.org

- update to 2.0002:
  * provide definition context information for constructors and destructors, so
    that they will show up as something other than "generated method (unknown
    origin)". Also, add the package that accessors are defined in to their
    definition context.
  * use Devel::PartialDump in type constraint error messages, if it is
    installed
  * stop hiding warnings produced by throwing errors in DEMOLISH methods
  * the 'reset' native delegation for Counter attributes will now also respect
    builders (previously, it only respected defaults)

-------------------------------------------------------------------
Sat Apr 23 06:16:43 UTC 2011 - pascal.bleser@opensuse.org

- update to 2.0001:
  * Anonymous classes and roles now have a unified implementation in
    Class::MOP::Package. This means that anonymous packages are now also
    possible
  * No longer call XSLoader from multiple places, as this causes issues on
    older perls
  * Moose::Meta::Role->create now accepts the 'roles' parameter, as it was
    documented too
  * Depend on Eval::Closure 0.04, which fixes some issues in mod_perl
    environments

-------------------------------------------------------------------
Fri Apr 22 15:17:33 UTC 2011 - coolo@opensuse.org

- fix build and unsplit Class::MOP - too tough to handle

-------------------------------------------------------------------
Tue Apr 12 19:41:58 UTC 2011 - pascal.bleser@opensuse.org

- update to 2.0000: use original sources

-------------------------------------------------------------------
Thu Feb 24 15:33:05 UTC 2011 - pascal.bleser@opensuse.org

- update to 1.24:
  * reverse the order that Moose::Exporter 'also' exports are dispatched; when
    trying to re-export from a package that itself exported a modified set of
    Moose sugar, you'd get the original Moose sugar instead of the overrides

-------------------------------------------------------------------
Mon Feb 14 06:25:01 UTC 2011 - pascal.bleser@opensuse.org

- update to 1.23:
  * when reinitializing meta objects for classes and roles, we failed to
    preserve roles and role applications; this led to weird bugs: many MooseX
    modules end up reinitializing your class or role

- changes from 1.20:
  * the role attribute metaclass did not inherit from Class::MOP::Object,
    which could cause errors when trying to resolve metaclass compatibility
    issues
  * the lazy_build feature was accidentally removed all the docs; now it's
    listed in Moose.pm again

- changes from 1.18:
  * type constraint objects now have an assert_coerce method which will either
    return a valid value or throw an error
  * we now warn when an accessor for one attribute overwrites an accessor for
    another attribute; RT #57510
  * the native Array and Hash delegation methods now coerce individual new
    members if the _member type_ has a coercion; in other words, if the array
    reference is defined as an ArrayRef[DateTime], and you've defined a
    coercion from Int to DateTime, then pushing an integer via a delegation
    method will coerce the integer to a DateTime object; RT #62351
  * an attribute using native delegations did not always properly coerce and
    type check a lazily set default value
  * using a regexp to define delegations for a class which was not yet loaded
    did not actually work, but did not explicitly fail; however, it caused an
    error when the class was loaded later; RT#60596
  * attempting to delegate to a class or role which is not yet loaded will now
    throw an explicit error
  * attempting to set lazy_build in an inherited attribute was ignored;
    RT#62057

- changes from 1.17:
  * make native delegation inlining work with instance metaclasses where slot
    access is an do {} block, like Kioku; this fixes the use of native
    delegations together with Kioku

- changes from 1.15:
  * almost every native delegation method which changes the attribute value
    now has an explicitly documented return value; in general, this return
    value matches what Perl would return for the same operation
  * passing an odd number of args to ->new() now gives a more useful warning
    than Perl's builtin warning
  * allow disabling stack traces by setting an environment variable; see
    Moose::Error::Default for details -- this feature is considered
    experimental, and may change in a future release
  * the deprecation warning for using alias and excludes without a leading
    dash now tells you the role being applied and what it was being applied
    to
  * a number of native trait methods which expected strings as arguments did
    not allow the empty string; this included Array->join, String->match,
    String->replace, and String->substr; RT#61962
  * 'no Moose' no longer inadvertently removes imports it didn't create
    itself; RT #60013
  * roles now support passing an array reference of method names to method
    modifier sugar functions
  * native traits no longer use optimized inlining routines if the instance
    requests it (in particular, if inline_get_slot_value doesn't return
    something that can be assigned to)
  * we now ignore all Class::MOP and Moose classes when determining what
    package called a deprecated feature; this should make the deprecation
    warnings saner, and make it possible to turn them off more easily
  * the deprecated "default is" warning no longer happens if the attribute has
    any accessor method defined (accessor, reader, writer); also, this warning
    only happens when a method that was generated because of the "default is"
    gets called, rather than when the attribute is defined
  * the "default default" code for some native delegations no longer issues a
    deprecation warning when the attribute is required or has a builder
  * setting a "default default" caused a fatal error if you used the builder
    or lazy_build options for the attribute; RT#59613

-------------------------------------------------------------------
Wed Dec  1 13:33:45 UTC 2010 - coolo@novell.com

- switch to perl_requires macro

-------------------------------------------------------------------
Mon Nov 29 18:30:35 UTC 2010 - coolo@novell.com

- remove /var/adm/perl-modules

-------------------------------------------------------------------
Tue Oct 12 09:54:11 CEST 2010 - dmueller@suse.de

- update to 1.15:
  * Major changes to Native Traits, most of which make them act more like
    "normal" attributes. This should be mostly compatible with existing code,
    but see Moose::Manual::Delta for details.
  * A few native traits (String, Counter, Bool) provide default values of "is"
    and "default" when you created an attribute. Allowing them to provide
    these values is now deprecated. Supply the value yourself when creating
    the attribute.
  * New option 'trait_aliases' for Moose::Exporter, which will allow you to
    generate non-global aliases for your traits (and allow your users to
    rename the aliases, etc). (doy)
  * 'use Moose' and 'use Moose::Role' now accept a '-meta_name' option, to
    determine which name to install the 'meta' name under. Passing 'undef'
    to this option will suppress generation of the meta method entirely. (doy)
  * Moose now warns if it overwrites an existing method named "meta" in your
    class when you "use Moose". (doy)

-------------------------------------------------------------------
Mon Aug 30 05:28:36 UTC 2010 - pascal.bleser@opensuse.org

- update to 1.12:
  * BUG FIXES:
    + fix the MANIFEST. Fixes RT #60831

-------------------------------------------------------------------
Sat Aug 28 09:12:24 UTC 2010 - pascal.bleser@opensuse.org

- update to 1.11: http://cpansearch.perl.org/src/DROLSKY/Moose-1.11/Changes
  * API CHANGES:
    + an attribute in a subclass can now override the value of "is"
    + the deprecation warnings for alias and excludes have been turned back off for this release, to give other module authors a chance to tweak their code
  * BUG FIXES:
    + mro::get_linear_isa was being called as a function rather than a method, which caused problems with Perl 5.8.x.
    + union types always created a type constraint, even if their constituent constraints did not have any coercions. This bogus coercion always returned undef, which meant that a union which included Undef as a member always coerced bad values to undef. RT #58411
    + union types with coercions would always fall back to coercing the value to undef (unintentionally). Now if all the coercions for a union type fail, the value returned by the coercion is the original value that we attempted to coerce

-------------------------------------------------------------------
Sun Aug 22 21:47:26 UTC 2010 - pascal.bleser@opensuse.org

- update to 1.10: http://cpansearch.perl.org/src/DROLSKY/Moose-1.10/Changes
  * the long-deprecated alias and excludes options for role applications now issue a deprecation warning: use -alias and -excludes instead
  * inlined code no longer stringifies numeric attribute defaults
  * default => undef now works properly
  * enum type constraints now throw errors if their values are nonsensical
  * optimizations that should help speed up compilation time 

-------------------------------------------------------------------
Mon Jul 26 07:26:01 UTC 2010 - pascal.bleser@opensuse.org

- update to 1.09: http://cpansearch.perl.org/src/DROLSKY/Moose-1.09/Changes

-------------------------------------------------------------------
Wed Jun 16 11:31:08 UTC 2010 - pascal.bleser@opensuse.org

- update to 1.08:
  * refactored a small amount of Moose::Meta::Method::Constructor to allow it to be overridden more easily

-------------------------------------------------------------------
Sat Dec 26 21:30:29 UTC 2009 - lars@linux-schulserver.de

- update to 0.93

-------------------------------------------------------------------
Thu Oct 29 00:00:00 CET 2009 - Pascal Bleser <pascal.bleser@opensuse.org> 0.92

- update to 0.92 

