-------------------------------------------------------------------
Thu Mar 27 05:37:19 UTC 2025 - Tina MÃ¼ller <timueller+perl@suse.de>

- updated to 0.240.0 (0.24)
   see /usr/share/doc/packages/perl-Sys-SigAction/Changes

  Update t/mask.t to skip this test on failing cygwin environments.

  Note:  I'm not programming in perl professionally any more, and have not for
  some time. I would welcome a co-maintainer for this module. Contact me if interested.

-------------------------------------------------------------------
Sun Sep 11 06:07:16 UTC 2016 - coolo@suse.com

- updated to 0.23
   see /usr/share/doc/packages/perl-Sys-SigAction/Changes

-------------------------------------------------------------------
Tue Jul 26 05:53:12 UTC 2016 - coolo@suse.com

- updated to 0.22
   see /usr/share/doc/packages/perl-Sys-SigAction/Changes

  =head2 Changes in Sys::SigAction 0.22  20 Nov 2013
  
  Fix lack of interpolation in Makefile.PL for unsupported MSWin OS.

-------------------------------------------------------------------
Tue Nov 26 07:33:35 UTC 2013 - coolo@suse.com

- updated to 0.21
  Remove erroneous note at the end of the POD related to references to
  this module in DBD:Oracle.  In reality the reference was in DBI, and it
  is still there.
  
  Close pod error bug (which referred to the above paragraph) submitted
  by the Debian Packaging team.

-------------------------------------------------------------------
Tue Aug  6 17:49:06 UTC 2013 - coolo@suse.com

- updated to 0.20
  Even if C<Time::HiRes::ualarm()> exists, it may not necessarily
  work. (There were way too many broken smoke tests with were
  the result of this. One reason for this may bave been that the test
  was looking for too small an interval of sub-second timeouts.  On busy 
  systems, this may have been causing tests to fail.
  
  Got rid of the attempt at tracking broken environments in timeout.t 
  (the hash structure mentioned in the previous change.
  
  The sub-second timer tests now set a timeout at 0.1 seconds, and check
  for a delta time the is less then 0.8 seconds. Proving that they completed
  in under 1 second, but give a wide range of execution time to account
  for busy systems.
  
  Also Makefile.PL now looks for C<Time::HiRes::ualarm()>, and tests it.
  If it works, high resolution timeouts are enabled in Sys
  Makefile.PL reports what it finds, and t/timeout.t reports when high
  resolution tests are disabled, but timeout.t should not fail because of
  this... it will just run fewer tests.
  
  =head2 Changes in Sys::SigAction 0.19  27 Jul 2013
  
  Change sig_alarm() to use HiRes::ualarm() instead of
  HiRes::alarm().  Hoping to fix hires test failures
  on some platforms.
  
  Build a hash structure in timeout.t to disable
  the HiRes tests on certain platforms where these functions may
  to be consistently broken, but disable them for at least
  another round, hoping that the change to using HiRes::ualarm()
  solves the problem. 
  
  Also, restructure timeout.t to hardcode the number of tests
  run.  Apparently Test::More on perl 5.8.x insisteds on getting
  the plan before ANY tests are run.

-------------------------------------------------------------------
Fri Jul 26 05:33:50 UTC 2013 - coolo@suse.com

- updated to 0.18
 Fix "bareword" error on some platforms at least, by explicitly importing
 INT_MAX from POSIX module.
 
 Fix Changes file which listed verson 0.16 twice when it should have
 list version 0.17 for the more recent changes.
 
 =head2 Changes in Sys::SigAction 0.17  22 Jul 2013
 
 Fix timeout.t to use POSIX::pause() instead of select(), which was used
 to optimized the while ( 1 ) loop in the forever function. This caused
 failures on some platforms.  pause() is right solution -- thanks (again)
 to Carsten Gaebler and for the suggestion for handling the Time::HiRes
 request.
 
 More double eval documentation cleanup that had not been previously
 caught in the POD. (bug #79130).
 
 When Time::HiRes is present, allow for long timeouts longer than the
 POSIX::MAX_INT microseconds when Time::HiRes is present.  Just call
 call alarm() instead of ualarm() in the case where input argument
 would result in a msecs value in an argument to ualarm which is
 larger than POSIX::INT_MAX (and, of course, add a test for this in
 timeout.t). (bug/enhancement request #75784)
 
 Fix typos in dbd-oracle-timeout.POD (bug #87141).  It appears that
 the DBD:oracle module may now have internal handling for this problem
 (DBD::oracle not longer references Sys::SigAction).
 
 =head2 Changes in Sys::SigAction 0.16  21 Jul 2013
 
 Thanks to excellent patches from Carsten Gaebler (contact me
 if you want to contact him), timeout_call() now supports
 passing an array of arguments which it will pass to the code
 it executes.
 
 Minor tweak to POD.

-------------------------------------------------------------------
Tue Nov 27 22:25:11 UTC 2012 - crrodriguez@opensuse.org

- skip test suite when building in qemu arm emulator 

-------------------------------------------------------------------
Sun Jan  1 14:43:58 UTC 2012 - coolo@suse.com

- update to 0.15
 No functional changes. Fix for test timeout.t.
 Fix strict undefined symbol error in timeout.t, when Time::HiRes is not present.
 Not sure if constant pragma will exist in all supported perl versions,
  so, we just commented out the use strict in this test

-------------------------------------------------------------------
Wed Dec  1 13:35:27 UTC 2010 - coolo@novell.com

- switch to perl_requires macro

-------------------------------------------------------------------
Sat Jul 25 19:42:25 CEST 2009 - chris@computersalat.de

- spec mods
  * removed ^----------
  * removed ^#---------

-------------------------------------------------------------------
Wed Jul  1 12:52:48 CEST 2009 - chris@computersalat.de

- update to 0.11
- added perl-macros
  o autogen filelist with perl_gen_filelist

