Index: pytsk3-20250729/talloc/replace.h
===================================================================
--- pytsk3-20250729.orig/talloc/replace.h
+++ pytsk3-20250729/talloc/replace.h
@@ -11,7 +11,7 @@
 
 #define _PUBLIC_ extern
 
-typedef int bool;
+typedef int talloc_bool;
 
 #define true 1
 #define false 0
Index: pytsk3-20250729/talloc/talloc.c
===================================================================
--- pytsk3-20250729.orig/talloc/talloc.c
+++ pytsk3-20250729/talloc/talloc.c
@@ -120,8 +120,8 @@ static void *autofree_context;
  * catching use after free errors when valgrind is too slow
  */
 static struct {
-	bool initialised;
-	bool enabled;
+	talloc_bool initialised;
+	talloc_bool enabled;
 	uint8_t fill_value;
 } talloc_fill;
 
@@ -237,7 +237,7 @@ struct talloc_memlimit {
 	size_t cur_size;
 };
 
-static bool talloc_memlimit_check(struct talloc_memlimit *limit, size_t size);
+static talloc_bool talloc_memlimit_check(struct talloc_memlimit *limit, size_t size);
 static void talloc_memlimit_grow(struct talloc_memlimit *limit,
 				size_t size);
 static void talloc_memlimit_shrink(struct talloc_memlimit *limit,
@@ -1582,7 +1582,7 @@ _PUBLIC_ void *_talloc_realloc(const voi
 {
 	struct talloc_chunk *tc;
 	void *new_ptr;
-	bool malloced = false;
+	talloc_bool malloced = false;
 	struct talloc_pool_hdr *pool_hdr = NULL;
 	size_t old_size = 0;
 	size_t new_size = 0;
@@ -2672,7 +2672,7 @@ static size_t _talloc_total_limit_size(c
 					  old_limit, new_limit);
 }
 
-static bool talloc_memlimit_check(struct talloc_memlimit *limit, size_t size)
+static talloc_bool talloc_memlimit_check(struct talloc_memlimit *limit, size_t size)
 {
 	struct talloc_memlimit *l;
 
Index: pytsk3-20250729/sleuthkit/tsk/base/crc.h
===================================================================
--- pytsk3-20250729.orig/sleuthkit/tsk/base/crc.h
+++ pytsk3-20250729/sleuthkit/tsk/base/crc.h
@@ -91,7 +91,7 @@ Status  : Copyright (C) Ross Williams, 1
 #ifndef DONE_STYLE
 
 typedef unsigned long   ulong;
-typedef unsigned        bool;
+typedef unsigned        crc_bool;
 typedef unsigned char * p_ubyte_;
 
 #ifndef TRUE
@@ -120,8 +120,8 @@ typedef struct
    int   cm_width;   /* Parameter: Width in bits [8,32].       */
    ulong cm_poly;    /* Parameter: The algorithm's polynomial. */
    ulong cm_init;    /* Parameter: Initial register value.     */
-   bool  cm_refin;   /* Parameter: Reflect input bytes?        */
-   bool  cm_refot;   /* Parameter: Reflect output CRC?         */
+   crc_bool  cm_refin;   /* Parameter: Reflect input bytes?        */
+   crc_bool  cm_refot;   /* Parameter: Reflect output CRC?         */
    ulong cm_xorot;   /* Parameter: XOR this to output CRC.     */
 
    ulong cm_reg;     /* Context: Context during execution.     */
