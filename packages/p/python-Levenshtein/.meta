<package name="python-Levenshtein" project="openSUSE:Factory">
  <title>Python extension computing string distances and similarities</title>
  <description>The Levenshtein Python C extension module contains functions for fast
computation of

 * Levenshtein (edit) distance, and edit operations
 * string similarity
 * approximate median strings, and generally string averaging
 * string sequence and set similarity

It supports both normal and Unicode strings.

Python 2.2 or newer is required.

StringMatcher.py is an example SequenceMatcher-like class built on the top of
Levenshtein. It misses some SequenceMatcher's functionality, and has some extra
OTOH.

Levenshtein.c can be used as a pure C library, too. You only have to define
NO_PYTHON preprocessor symbol (-DNO_PYTHON) when compiling it. The
functionality is similar to that of the Python extension. No separate docs are
provided yet, RTFS. But they are not interchangeable:

 * C functions exported when compiling with -DNO_PYTHON (see Levenshtein.h) are
   not exported when compiling as a Python extension (and vice versa)
 * Unicode character type used with -DNO_PYTHON is wchar_t, Python
   extension uses Py_UNICODE, they may be the same but don't count on it

Authors:
--------
    mFabrik Research Oy &lt;info at mfabrik com&gt;

</description>
  <devel project="devel:languages:python" package="python-Levenshtein"/>
  <url>http://github.com/miohtama/python-Levenshtein</url>
</package>
