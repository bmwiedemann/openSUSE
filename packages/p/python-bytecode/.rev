<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>1f6fd96e8f34abbbd9f0e6acf741004b</srcmd5>
    <version>0.11.0</version>
    <time>1586467075</time>
    <user>dimstar_suse</user>
    <comment> </comment>
    <requestid>792724</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>6b5670506fd28d77aeac8bf010304b35</srcmd5>
    <version>0.12.0</version>
    <time>1631042482</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>917157</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>1f7799b3cb71bdcf8a3d034cb3d2cf1e</srcmd5>
    <version>0.13.0</version>
    <time>1637535132</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>932773</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>a8432e271482f487db47ef7a4880918d</srcmd5>
    <version>0.14.0</version>
    <time>1670775424</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1042087</requestid>
  </revision>
  <revision rev="5" vrev="2">
    <srcmd5>2e6a583470b7adefc5308fbb2edd9415</srcmd5>
    <version>0.14.0</version>
    <time>1671209524</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1043286</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>c7383938aba96fd14b01ec83ff4fd56e</srcmd5>
    <version>0.14.1</version>
    <time>1681996453</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.14.1:
  * allow to disassemble code containing ``EXTENDED_ARG``
    targeting a ``NOP`` PR #117</comment>
    <requestid>1080283</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>234f90f08d6a1de727d3d30743d9c39f</srcmd5>
    <version>0.14.2</version>
    <time>1685294613</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.14.2:
  * allow to convert a CFG, for which stack sizes have not been
    computed, to Bytecode even in the presence of mergeable
    TryBegin/TryEnd
  * remove spurious TryEnd leftover when going from CFG to
    Bytecode</comment>
    <requestid>1089360</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>58292e04a7e66de851c66932e5abf3c9</srcmd5>
    <version>0.15.0</version>
    <time>1695209200</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.15.0:
  * Add support for Python 3.12 PR #122
  * Support for Python 3.12, comes with a number of changes
    reflecting changes in CPython bytecode itself:
  * handle the ability of ``LOAD_ATTR`` to replace
    ``LOAD_METHOD``
    As a consequence the argument is now a ``tuple[bool, str]``
    similarly ``LOAD_SUPER_ATTR`` which uses the 2 lowest bits as
    flag takes a ``tuple[bool, bool, str]`` as argument
  * ``POP_JUMP_IF_*`` instructions are undirected in Python 3.12
  * ``YIELD_VALUE`` now takes an argument
  * Support for ``CALL_INSTRINSIC_1/2`` led to the addition of 2
    new enums to represent the argument

- Update to 0.14.0
- initial version 0.11.0, required by python-enaml</comment>
    <requestid>1111939</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>f76482dee37251afb9393baf56fd1769</srcmd5>
    <version>0.15.1</version>
    <time>1700078905</time>
    <user>anag+factory</user>
    <comment>- update to 0.15.1:
  * Disallow creating an instruction targeting a
    pseudo/instrumented opcode PR #133
  * Fixes encoding of 0 as a varint PR #132
  * Correct spelling of &quot;INTRINSIC&quot; in several places; this
    affected some ops in Python 3.12.  PR #131</comment>
    <requestid>1126231</requestid>
  </revision>
  <revision rev="10" vrev="2">
    <srcmd5>4bba3a6a775a32d533b64222e5c7fd07</srcmd5>
    <version>0.15.1</version>
    <time>1723803791</time>
    <user>dimstar_suse</user>
    <comment>- use modern python on sle15
- switch to PEP517 build</comment>
    <requestid>1193951</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>7c46ee513813c94103bf29e2664989d6</srcmd5>
    <version>0.16.0</version>
    <time>1730491624</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.16.0:
  * Fix the document for python3.12 by @colinxu2020 in #142
  * fix: handle small try blocks by @P403n1x87 in #145
  * Add support for Python 3.13 by @MatthieuDartiailh in #146</comment>
    <requestid>1220028</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>b4afc6b69756fb136c7d5bc78cdcf2f2</srcmd5>
    <version>0.16.1</version>
    <time>1738615532</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1242862</requestid>
  </revision>
</revisionlist>
