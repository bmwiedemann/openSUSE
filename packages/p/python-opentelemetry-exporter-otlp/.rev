<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>630e6a30ce202690ad0b0196523bc70c</srcmd5>
    <version>1.22.0</version>
    <time>1705437476</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1139045</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>8c4553968a2525097be3968fac05922b</srcmd5>
    <version>1.23.0</version>
    <time>1711397571</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1161427</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>3760e74826d02a49801289ba14405605</srcmd5>
    <version>1.24.0</version>
    <time>1712262299</time>
    <user>anag+factory</user>
    <comment>- update to 1.24.0:
  * Make create_gauge non-abstract method
  * Make `tracer.start_as_current_span()` decorator work with
    async functions
  * Fix python 3.12 deprecation warning
  * bump mypy to 0.982
  * Add support for OTEL_SDK_DISABLED environment variable
  * Fix ValueError message for PeriodicExportingMetricsReader
  * Use `BaseException` instead of `Exception` in
    `record_exception`
  * Make span.record_exception more robust
  * Fix license field in pyproject.toml files</comment>
    <requestid>1164541</requestid>
  </revision>
  <revision rev="4" vrev="2">
    <srcmd5>cadcac33a2fb89bef515b58e47dbeaa9</srcmd5>
    <version>1.24.0</version>
    <time>1714758384</time>
    <user>anag+factory</user>
    <comment>- use modern python on sle15</comment>
    <requestid>1171760</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>5e5c3235e27567bee5c209f5d20286fa</srcmd5>
    <version>1.25.0</version>
    <time>1718807817</time>
    <user>anag+factory</user>
    <comment>- update to 1.25.0:
  * Fix class BoundedAttributes to have RLock rather than Lock
  * Remove thread lock by loading RuntimeContext explicitly.
  * Add to_json method to ExponentialHistogram
  * Fix exponential histograms
  * Fix otlp exporter to export log_record.observed_timestamp
  * Add capture the fully qualified type name for raised
    exceptions in spans
  * Prometheus exporter sort label keys to prevent duplicate
    metrics when user input changes order
  * Rename test objects to avoid pytest warnings
  * Add span flags to OTLP spans and links
  * Record links with invalid SpanContext if either attributes or
    TraceState are not empty
  * Add OpenTelemetry trove classifiers to PyPI packages ([#3913]
    (https://github.com/open-telemetry/opentelemetry-
    python/pull/3913))
  * Fix prometheus metric name and unit conversion (#3924)  -
    this is a breaking change to prometheus metric names so they
    comply with the specification.  - you can temporarily opt-out
    of the unit normalization by setting the environment variable
    `OTEL_PYTHON_EXPERIMENTAL_DISABLE_PROMETHEUS_UNIT_NORMALIZATI
    ON=true`  - common unit abbreviations are converted to
    Prometheus conventions (`s` -&gt; `seconds`), following the
    collector's implementation  - repeated `_` are replaced with
    a single `_`  - unit annotations (enclosed in curly braces
    like `{requests}`) are stripped away  - units with slash are
    converted e.g. `m/s` -&gt; `meters_per_second`.  - The
    exporter's API is not changed
  * Add parameters for Distros and configurators to configure</comment>
    <requestid>1181318</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>11292fc2e8a34074a992764a3d946618</srcmd5>
    <version>1.27.0</version>
    <time>1726066541</time>
    <user>anag+factory</user>
    <comment>- update to 1.27.0:
  * Implementation of Events API
  * Make log sdk add `exception.message` to logRecord for
    exceptions whose argument is an exception not a string
    message
  * Fix use of `link.attributes.dropped`, which may not exist
  * Added py.typed file to top-level module
  * Drop Final annotation from Enum in semantic conventions
  * Update log export example to not use root logger
  * sdk: Add OS resource detector
  * sdk: Accept non URL-encoded headers in
    `OTEL_EXPORTER_OTLP_*HEADERS` to match other languages SDKs
  * Update semantic conventions to version 1.27.0
  * Add support to type bytes for OTLP AnyValue
  * Export ExponentialHistogram and ExponentialHistogramDataPoint
  * Implement Client Key and Certificate File Support for All
    OTLP Exporters
  * Remove `_start_time_unix_nano` attribute from
    `_ViewInstrumentMatch` in favor of using `time_ns()` at the
    moment when the aggregation object is created
- update to 1.26.0:
  * Standardizing timeout calculation in measurement consumer
    collect to nanoseconds
  * optional scope attributes for logger creation
  * optional scope attribute for tracer creation
  * OTLP exporter is encoding invalid span/trace IDs in the logs
  * Update sdk process resource detector `process.command_args`
    attribute to also include the executable itself
  * Fix `start_time_unix_nano` for delta collection for explicit
    bucket histogram aggregation</comment>
    <requestid>1200069</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>f80c068752996b0b8eb9ff4f449cf801</srcmd5>
    <version>1.29.0</version>
    <time>1736431790</time>
    <user>anag+factory</user>
    <comment>- Update to 1.29.0
  * Fix crash exporting a log record with None body
  * Fix metrics export with exemplar and no context and filtering observable instruments
  * Fix recursion error with sdk disabled and handler added to root logger
  * sdk: setup EventLogger when OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED is set
  * api: fix logging of duplicate EventLogger setup warning
  * sdk: fix setting of process owner in ProcessResourceDetector
  * sdk: fix serialization of logs severity_number field to int
  * Remove `TestBase.assertEqualSpanInstrumentationInfo` method,
    use `assertEqualSpanInstrumentationScope` instead
  * sdk: instantiate lazily `ExemplarBucket`s in `ExemplarReservoir`s
  * semantic-conventions: Bump to 1.29.0
- from version 1.28.0
  * Removed superfluous py.typed markers and added them where they were missing
  * Include metric info in encoding exceptions
  * sdk: Add support for log formatting
  * sdk: Add Host resource detector
  * sdk: Implementation of exemplars
  * Implement events sdk
  * Update semantic conventions to version 1.28.0
  * Add support to protobuf 5+ and drop support to protobuf 3 and 4
  * Update environment variable descriptions to match signal
  * Record logger name as the instrumentation scope name
  * Fix memory leak in exporter and reader
  * Drop `OTEL_PYTHON_EXPERIMENTAL_DISABLE_PROMETHEUS_UNIT_NORMALIZATION` environment variable
  * Improve compatibility with other logging libraries that override
    `LogRecord.getMessage()` in order to customize message formatting (forwarded request 1235900 from glaubitz)</comment>
    <requestid>1235915</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>2c52f56fa80ffeb722afbff749385a27</srcmd5>
    <version>1.30.0</version>
    <time>1741178468</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1250266</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>c6bb983c92f3ee3aa7fbfdcbaddf3bf5</srcmd5>
    <version>1.33.1</version>
    <time>1748364248</time>
    <user>anag_factory</user>
    <comment>Forwarded request #1280070 from nkrapp

- Update to 1.33.1
    * Remove log messages from BatchLogRecordProcessor.emit, this caused the
      program to crash at shutdown with a max recursion error
  - Update to 1.33.0
    * Fix intermittent Connection aborted error when using otlp/http exporters
    * opentelemetry-sdk: use stable code attributes:
      code.function -&gt; code.function.name, code.lineno -&gt; code.line.number,
      code.filepath -&gt; code.file.path
    * Fix serialization of extended attributes for logs signal
    * Handle OTEL_PROPAGATORS contains None
    * docs: updated and added to the metrics and log examples
    * Bump semantic conventions to 1.33.0</comment>
    <requestid>1280598</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>eadab5ef3d210ba7a7cc57cbd1df94fb</srcmd5>
    <version>1.37.0</version>
    <time>1758636439</time>
    <user>anag_factory</user>
    <comment>- update to 1.37.0:
  * Add experimental composite samplers
  * Add new environment variables to the SDK `OTEL_PYTHON_EXPORTE
    R_OTLP_{HTTP/GRPC}_{METRICS/TRACES/LOGS}_CREDENTIAL_PROVIDER`
    that can be used to inject a `requests.Session` or
    `grpc.ChannelCredentials` object into OTLP exporters created
    during auto instrumentation #4689.
  * Filter duplicate logs out of some internal `logger`'s logs on
    the export logs path that might otherwise endlessly log or
    cause a recursion depth exceeded issue in cases where logging
    itself results in an exception. (#4695).
  * docs: linked the examples with their github source code
    location and added Prometheus example
  * Permit to override default HTTP OTLP exporters headers
  * semantic-conventions: Bump to 1.37.0
  * opentelemetry-sdk: fix handling of OTEL_ATTRIBUTE_COUNT_LIMIT
    in logs
  * Performance: Cache `importlib_metadata.entry_points`
  * opentelemetry-sdk: fix calling Logger.emit with an API
    LogRecord instance
- update to 1.36.0:
  * Add missing Prometheus exporter documentation
  * Overwrite logging.config.fileConfig and
    logging.config.dictConfig to ensure the OTLP `LogHandler`
    remains attached to the root logger. Fix a bug that can cause
    a deadlock to occur over `logging._lock` in some cases
    (#4636).
  * otlp-http-exporter: set default value for param `timeout_sec`
    in `_export` method
  * Update OTLP gRPC/HTTP exporters: calling shutdown will now</comment>
    <requestid>1306354</requestid>
  </revision>
</revisionlist>
