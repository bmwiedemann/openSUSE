From 68ad4c87aa6435c3c41b859ecd85f70f21e8841f Mon Sep 17 00:00:00 2001
From: Jim Miller <retiefjimm@gmail.com>
Date: Sat, 18 Oct 2025 09:29:14 -0500
Subject: [PATCH] OTW: Fix for site change breaking logged in detection. Closes
 #1263

---
 fanficfare/adapters/base_otw_adapter.py |   10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

Index: FanFicFare-4.49.0/fanficfare/adapters/base_otw_adapter.py
===================================================================
--- FanFicFare-4.49.0.orig/fanficfare/adapters/base_otw_adapter.py	2025-10-18 22:50:28.231730300 +0200
+++ FanFicFare-4.49.0/fanficfare/adapters/base_otw_adapter.py	2025-10-18 22:50:45.661953857 +0200
@@ -27,6 +27,8 @@
 
 from .base_adapter import BaseSiteAdapter, makeDate
 
+LOGOUT_STR='href="/users/logout'
+
 class BaseOTWAdapter(BaseSiteAdapter):
 
     def __init__(self, config, url):
@@ -129,9 +131,9 @@
 
         d = self.post_request(loginUrl, params)
 
-        if 'href="/users/logout"' not in d :
+        if LOGOUT_STR not in d :
             logger.info("Failed to login to URL %s as %s" % (loginUrl,
-                                                              params['user[login]']))
+                                                             params['user[login]']))
             raise exceptions.FailedToLogin(url,params['user[login]'])
             return False
         else:
@@ -184,7 +186,7 @@
         # need to log in for this one, or always_login.
         # logger.debug(data)
         if self.needToLoginCheck(data) or \
-                ( self.getConfig("always_login") and 'href="/users/logout"' not in data ):
+                ( self.getConfig("always_login") and LOGOUT_STR not in data ):
             self.performLogin(url,data)
             data = self.get_request(url,usecache=False)
             meta = self.get_request(metaurl,usecache=False)
@@ -210,7 +212,7 @@
         a = soup.find('a', href=re.compile(r"/works/\d+$"))
         self.story.setMetadata('title',stripHTML(a))
 
-        if self.getConfig("always_login") and 'href="/users/logout"' in data: # check actually is logged.
+        if self.getConfig("always_login") and LOGOUT_STR in data: # check actually is logged.
             # deliberately using always_login instead of checking for
             # actual login so we don't have a case where these show up
             # for a user only when they get user-restricted stories.
