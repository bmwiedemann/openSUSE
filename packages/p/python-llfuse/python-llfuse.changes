-------------------------------------------------------------------
Sun Aug 13 19:56:14 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 1.5.0:
  * Note: this is first pyfuse3 release supporting the Cython
    3.0.0 release.
  * Cythonized using Cython 3.0.0 release.
  * Drop Python 3.5, 3.6, 3.7 support, see #69.
  * Minimum requirement is Python 3.8 now.
  * Get rid of PyEval_InitThreads, #55.
  * CI: also test on python 3.12 / cython 3.0 release
  * Tell Cython that callbacks may raise exceptions, #90.
  * Misc. CI, testing, build related fixes/improvements.
- drop fix-test-for-fusermount.patch (upstream)

-------------------------------------------------------------------
Sun Jul 24 09:03:43 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 1.4.2:
  * cythonize with Cython 0.29.30 (brings python 3.11 support)
  * also test on python 3.10 and 3.11-dev
  * remove "nonempty" default mount option, seems unsupported now. 

-------------------------------------------------------------------
Fri May 21 09:52:19 UTC 2021 - Antonio Larrosa <alarrosa@suse.com>

- Update to version 1.4.1
  * timestamp rounding tests: avoid y2038 issue in test
- Update to version 1.4.0
  * Remove py2 and py3<3.5 support, minimum requirement is
    Python 3.5 now. If you are stuck on Python 2.x or < 3.5, use
    llfuse<1.4.0.
  * setup.py: return rc=2 in error cases, fixes #52. implements
    same behaviour as pyfuse3 for these cases.
  * Use EACCES instead of EPERM for file permission errors,
    fixes #36.
  * Fix long-standing rounding error in file date handling when
    the nanosecond part of file dates were > 999999500, fixes #38.
  * Docs: add link to pyfuse3 porting hints ticket
  * Testing:
    - Add Power support (ppc64le) to travis CI.
    - Move CI to GitHub Actions, except ppc64le.
  * Test fixes for pytest 6.
- Update to version 1.3.8
  * fix compilation on FreeBSD, #28
  * export DEVELOPER_MODE=1 can be used to opt in (default is 0),
    #22
  * twine-based pypi-uploading, Qubes OS support for GPG signing,
    see util/sdist-sign and pypi-upload
- Update to version 1.3.7
  * Rebuild with Cython 0.29.21 for Python 3.9 compatibility.
- Rebase patch:
  * fix-test-for-fusermount.patch

- This update fixes the build failure that provoked the removal
  of the package from TW and boo#1186080.

-------------------------------------------------------------------
Fri May 10 07:11:40 UTC 2019 - simmphonie@opensuse.org

- Update to version 1.3.6
  * Python-LLFUSE is no longer actively maintained. Unless you are stuck
    with Python 2.x or libfuse 2.x, we recommended to use the pyfuse3_
    module instead.
- Remove upstreamed patch fix-char-cast-to-unsigned-int.patch

-------------------------------------------------------------------
Wed Sep 19 15:25:58 UTC 2018 - Antonio Larrosa <alarrosa@suse.com>

- Update to version 1.3.5
  * Add `handle_signals` option to `llfuse.main`
  * Several fixes to `examples/passthroughfs.py`
  * Now compatible with Python 3.7

- Remove patch already in upstream.
  * llfuse-attr-2.4.48.patch

-------------------------------------------------------------------
Mon Aug 13 08:54:50 UTC 2018 - tchvatal@suse.com

- Add patch to build with new attr:
  * llfuse-attr-2.4.48.patch
- Drop contextlib2 dependency
- Run tests unconditionally

-------------------------------------------------------------------
Mon Jun 18 11:43:41 UTC 2018 - alarrosa@suse.com

- Update to version 1.3.4
  * No-change rebuild with Cython 0.28.2.

- Update to version 1.3.3
  * Dropped pytest-catchlog dependency and add support for Pytest 3.3.0.
  * Minor bugfixes.

- Add fix-char-cast-to-unsigned-int.patch to fix a compiler error when
  casting from char to Py_UNICODE (unsigned int) due to a possible change
  of sign.

- Add fix-test-for-fusermount.patch to skip the tests that rely on
  fusermount since it doesn't work in OBS's chroot.

- Add %check section back. It's not possible to check all tests since for
  that, the user that runs the test should be in the trusted group, but
  at least some tests are run.

-------------------------------------------------------------------
Tue Jan  9 12:56:23 UTC 2018 - alarrosa@suse.com

- Remove %check section since it's not checking anything 

-------------------------------------------------------------------
Fri Jan  5 09:12:55 UTC 2018 - alarrosa@suse.com

- Update to version 1.3.2
  * Minor bugfixes.

- Update to version 1.3.1
  * The main loop now terminates properly again when terminated by a signal.

- Update to version 1.3
  * The StatvfsData class now has an !~StatvfsData.f_namemax attribute.
  * EntryAttributes and StatvfsData instances can now be pickled and copied.
    Other llfuse classes now raise an exception when the do not support
    pickling/copying.

-------------------------------------------------------------------
Wed Sep  6 09:09:48 UTC 2017 - alarrosa@suse.com

- Split documentation into a new python-llfuse-docs package.
- Added full changelog in the previous changelog entry

-------------------------------------------------------------------
Thu Aug 24 14:16:40 UTC 2017 - t.gruner@katodev.de

- change spec-file for multi-python build
- Update to version 1.2
  * The attr argument of the ~Operations.setattr handler now contains
    valid values only for the attributes that are to be set.
  * Previously, the documentation assorted that other attributes would
    be set to the original (unchanged) values. However, that was actually
    never the case.

- Release 1.1.1 (2016-07-27)
  * Fixed the description of the ~Operations.lookup handler (should
    return zero if there is no such entry, not a negative value).
  * Fixed the description of the EntryAttributes structure (descriptions
    of ~EntryAttributes.attr_timeout and ~EntryAttributes.entry_timeout
    were switched).

- Release 1.1 (2016-05-23)
  * Added support for nanosecond resolution time-stamps in GNU/kFreeBSD.
  * Fixed another set of build issues on FreeBSD.

- Release 1.0 (2016-03-08)
  * Note: The 1.0 version number does not imply any special stability or
    an API freeze. It's a consequence of switching to semantic versioning,
    where backwards incompatible changes will always result in increased
    major version.
  * Fixed an overflow when accessing the *st_xtime_ns attributes of the
    ~llfuse.EntryAttributes class from Python on 32-bit systems.
  * POTENTIAL COMPATIBILITY BREAK: The ~Operations.destroy handler is
    now called with the global lock acquired.

- Release 0.43 (2016-02-23)
  * Fixed build-failure under OS-X.
  * Fixed some build failures under FreeBSD (hopefully all of them,
    but no testers were available before the release).
  * The workers parameter to llfuse.main may now be None.

- Release 0.42.1 (2016-02-01)
  * Include HTML documentation.

- Release 0.42 (2016-01-30)
  * The documentation has been clarified and extended - please take
    a look even if you're already familiar with Python-LLFUSE.
  * Extended coverage of unit tests.
  * Fixed a compile error under OS-X.
  * Added notify_store function.
  * Added get_sup_groups function.
  * The ~Operations.read handler may now return arbitrary objects that
    as long as they implement the buffer protocol.
  * Implemented a forget_multi handler (used behind the scenes).
  * Many classes were rewritten in Cython for improved performance.
  * Python thread-specific data is now initialized only once rather
    than every time a handler is called.
  * SIGINT (Ctrl-C) now properly terminates llfuse.main also when
    running with multiple workers.
  * The return value of llfuse.main now indicates if the loop was
    terminated due to an unmount request or due to a signal.
  * BACKWARDS INCOMPATIBLE CHANGES:
  * Ducktyping the EntryAttributes class is no longer allowed, Operations
    methods must return instances of this class (rather than any object
    that provides the neccessary attributes).
  * The !st_Xtime attributes of the EntryAttributes have been dropped
    in favor of the !st_Xtime_ns attributes.
  * The setattr method now always receives a completely filled
    EntryAttributes instance. To determine which attributes should be
    changed, a new fields argument has been introduced.
  * The ~Operations.setattr method now also receives an fh parameter.
  * The llfuse.main function now has a workers parameter, and the
    single parameter was dropped.
  * Almost all request handlers now receive a RequestContext instance
    in an additional parameter.

- Release 0.41.1 (2015-08-22)
  * Added some files in :file:`test/` that were missing in the
    0.41 tarball. Tests now support the --installed option, produce
    prettier output, and check for error messages printed to stderr
    or stdout.
  * Python-LLFUSE can now also be built on NetBSD.
  * Added support for FUSE_SET_ATTR_ATIME_NOW and
    FUSE_SET_ATTR_MTIME_NOW setattr flags. Previosly, these would be
    silently ignored.
  * Fixed an AssertionError in :file:`examples/passthroughfs.py`

- Release 0.41 (2015-08-20)
  * Fixed a syntax error in contrib/tmpfs.py
  * Introduced an !llfuse.__version__ attribute.
  * Added more reasonable default values for llfuse.EntryAttributes.
  * Added new minimal example, :file:`examples/lltest.py`.
  * Added unit tests.
  * Added an example for a pass-through file system,
    `examples/passthroughfs.py`.

-------------------------------------------------------------------
Sun Dec  8 18:18:17 UTC 2013 - p.drouand@gmail.com

- Update to version 0.40
  * Re-raising an exception from a request handler now works
    correctly under Python 3. Problems were caused by a Cython bug,
    but llfuse now works around the issue.
  * File atime, ctime and mtime can now also be represented as
    nanosecond integer values for increased resolution.
  * Python-llfuse no longer includes the setuptools/distribute
    bootstrap script. This module thus has to be installed manually
    if not already present on the system.
  * Duck-typing of the Operations instance is now supported.
  * Python-llfuse no longer requires a re-compilation of the
    Cython code (setup.py build_cython step) when compiling for MacOS
    or FreeBSD.
  * Extended attributes are now properly supported under FreeBSD.
- General spec file clean-up

-------------------------------------------------------------------
Thu Oct 24 11:07:53 UTC 2013 - speilicke@suse.com

- Require python-setuptools instead of distribute (upstreams merged)

-------------------------------------------------------------------
Sun Dec 11 18:31:29 UTC 2011 - chris@computersalat.de

- update to 0.37.1
  * Fixed a segfault-causing race condition in Lock.acquire() and
    Lock.yield().
- 2011-12-05, llfuse 0.37
  * Explicitly call fuse_chan_destroy() in llfuse.close(), so
    that the mountpoint becomes inaccessible right away, even
    while the process is still running.
  * Added get_ino_t_bytes() and get_off_t_bytes() that return
    the number of bytes used for representing inode numbers 
    and file offsets.
  * The yield_() method of the global lock now takes an additional
    *count* argument that can be used to yield the lock more than
    once.
  * Changed implementation of global lock. The global lock is
    no longer a mutex, but a boolean variable protected by a mutex,
    and changes are tracked with a condition object. This allows
    lock.yield() to work properly: if there are other threads waiting
    for the lock, they are guaranteed to run. If there are no other
    threads waiting for the lock, execution of the active thread
    continues immediately.
    The previous implementation using sched_yield() was mostly
    broken: threads trying to acquire the global lock were calling
    pthread_mutex_lock, so they got removed from the kernels
    runqueue. However, calls to sched_yield() would just put the
    active thread into the expired runqueue, and calls to
    pthread_mutex_unlock apparently do not synchronously move the
    threads waiting for the lock back to a runqueue. Therefore, most
    of the time the active thread would be the only thread in any
    runqueue and thus continue to run.
  * The Operations.forget() method now receives a list of
    (inode, nlookup) tuples rather than just one such tuple.
  * invalidate_entry() and invalidate_inode() no longer work
    synchronously. Instead, the message is put in a queue and send by
    a background thread.
  * The acquire() method of the global lock now has an optional
    *timeout* parameter.
  * The create() request handler now receives the open flags
    as an additional parameter.
- for more info please see Changes.txt

-------------------------------------------------------------------
Fri May 13 22:49:53 UTC 2011 - pascal.bleser@opensuse.org

- update to 0.31

-------------------------------------------------------------------
Fri Dec 31 12:31:09 CET 2010 - pascal.bleser@opensuse.org

- initial version (0.29.4)

