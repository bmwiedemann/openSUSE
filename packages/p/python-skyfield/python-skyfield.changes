-------------------------------------------------------------------
Sat Sep 26 08:13:08 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update to version 1.29
  * Fix: the new Julian calendar feature was raising an 
    exception in the calendar methods like 
    `skyfield.timelib.Time.tt_calendar()` if the time 
    object was in fact an array of times. #450
  * Fix: trying to iterate over a time object would raise an 
    exception if the time was created through 
    `~skyfield.timelib.Timescale.ut1()`.
- Version 1.28
  * Broken URL: Because the VizieR archive apparently decided 
    to uncompress their copy of the hip_main.dat.gz Hipparcos 
    catalog file, the old URL now returns a 404 error. As an 
    emergency fix, this version of Skyfield switches to their 
    uncompressed hip_main.dat. Hopefully they don’t compress 
    it again and break the new URL! A more permanent solution 
    is discussed at: #454
  * To unblock this release, removed a few deprecated pre-1.0 
    experiments from April 2015 in skyfield.hipparcos and 
    skyfield.named_stars that broke because the Hipparcos 
    catalog is no longer compressed; hopefully no one was 
    using them.
  * In a sweeping internal change, the 
    `~skyfield.timelib.Timescale` and 
    `~skyfield.timelib.Time` objects now offer support 
    for the Julian calendar that’s used by historians for 
    dates preceding the adoption of the Gregorian calendar in 
    1582. See choice of calendars if you want to turn on 
    Julian dates in your application. #450

-------------------------------------------------------------------
Wed Sep 16 09:53:08 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update to version 1.27
  * The printed appearance of both vectors and of vector 
    functions like Earth locations and Earth satellites 
    have been rewritten to be more informative and 
    consistent.
  * Added compute_calendar_date() which lets the caller 
    choose the Julian calendar for ancient dates instead of 
    always using the proleptic Gregorian calendar. This 
    should be particularly useful for historians.
  * Added J() that builds a time array from an array of 
    floating point years. #436
  * Added four new strftime methods for the non-UTC 
    timescales (#443). All four of them support %f for 
    microseconds, and provide a reasonable default format 
    string for callers who don’t wish to concoct their own:
      tai_strftime()
      tt_strftime()
      tdb_strftime()
      ut1_strftime() 
  * Thanks to several fixes, comets and asteroids with 
    parabolic and hyperbolic orbits should now raise fewer 
    errors.
 *  The prototype planetary_magnitude() can now return 
    magnitudes for Uranus without raising an exception. The 
    routine does not yet take into account whether the 
    observer is facing the equator or poles of Uranus, so 
    the magnitude predicted for the planet will only be 
    accurate to within about 0.1 magnitudes.

-------------------------------------------------------------------
Thu Aug  6 14:20:08 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update assay to commit 256.23c18c2 in order to fix non x86 builds

-------------------------------------------------------------------
Sun Aug  2 11:51:04 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update to version 1.26
  * The official ∆T files on NASA’s FTP server have stopped receiving
    updates — they have no new data beyond February, the start of the
    global pandemic.  Unless they are updated by next February, older
    versions of Skyfield will unfortunately download the files all over
    again every time `skyfield.iokit.Loader.timescale()` is called
    (unless the ``builtin=True`` parameter is provided).  To make Skyfield
    less fragile going forward:
    1. The loader’s `skyfield.iokit.Loader.timescale()` method now
        defaults to ``builtin=True``, telling it to use the ∆T and leap
        second files that ship with Skyfield internally.  To download new
        ∆T files from NASA and the leap second file from the International
        Earth Rotation Service, specify ``builtin=False``.
    2. The concept of an “expired” file has been removed from ``load()``.
        Skyfield is now much simpler: if a file with the correct name
        exists, Skyfield uses it.  See `downloading-timescale-files`
        if you still want your application to check the age of your
        timescale files and automatically download new ones.
  * The `ICRF.separation_from()` method now officially supports the
    combination of an array of positions with a single reference position!
    Its previous support for that combination was, alas, accidental, and
    was broken with the 1.23 release.
    `#414 <https://github.com/skyfielders/python-skyfield/issues/414>`
    `#424 <https://github.com/skyfielders/python-skyfield/issues/424>`
  * A prototype `skyfield.magnitudelib.planetary_magnitude()`
    routine has been added with support for several planets.
    `#210 <https://github.com/skyfielders/python-skyfield/issues/210>`
  * The ``utc`` timezone that Skyfield returns in Python datetimes is now
    either the Python Standard Library’s own UTC object, if it supplies
    one, or else is defined by Skyfield itself.  Skyfield no longer
    silently tries importing the whole ``pytz`` package merely to use its
    UTC object — which also means that the timezone returned by Skyfield
    longer offers the non-standard ``localize()`` method.
    `#413 <https://github.com/skyfielders/python-skyfield/issues/413>`
- make builds reproducible gh#skyfielders/python-skyfield#415
    
-------------------------------------------------------------------
Sat Jul 25 11:43:28 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update to version 1.25
  * Added skyfield.data.stellarium.parse_constellations()
    and skyfield.data.stellarium.parse_star_names()
    to load Stellarium star names and constellation lines. 
    Constellation lines are featured in a new example script 
    neowise-chart that produces a finder chart for 
    comet C/2020 F3 NEOWISE.
  * The Hipparcos star catalog should now load faster, having 
    switched behind the scenes to a higher performance Pandas 
    import routine.
  * Fixed the ability of  skyfield.timelib.Timescale.utc()
    to accept a Python datetime.date object as its argument.
    #409
  * Slightly lowered the precision of two tests when they 
    detect that Python is compiled for a 32-bit processor, so 
    the test suite can succeed when contributors package 
    Skyfield for 32-bit Linux. #411
- use upstreams custom test runner 'assay'
  * The runner does not have any releases yet. No package 
    available, so use assay-master-252.79f5d78.tar.gz directly
  * drop skyfield-pr405-replace-assay-by-pytest.patch
  * gh#brandon-rhodes/assay#6, gh#skyfielders/python-skyfield#405
- the unit test expect a truncated hipparcos catalog
  * generate-hipparcos.sh
  * hip_main.dat.gz
- drop skyfield-pr404-comparefloat.patch addressed upstream
  gh#skyfielders/python-skyfield#404
  gh#skyfielders/python-skyfield#411

-------------------------------------------------------------------
Wed Jul 22 14:42:06 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- release precision for i586 test
  gh#skyfielders/python-skyfield#411 

-------------------------------------------------------------------
Wed Jul 22 14:13:46 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update to Version 1.24
  * Added methods :meth:`~skyfield.timelib.Timescale.from_datetime()`
    and :meth:`~skyfield.timelib.Timescale.from_datetimes()` to 
    the :class:`~skyfield.timelib.Timescale` class, to 
    better advertise the ability to build a Skyfield time 
    from a Python datetime — an ability that was previously 
    overloaded into the year parameter of the 
    :meth:`~skyfield.timelib.Timescale.utc()` method (where 
    it is still supported for backwards compatibility, but 
    no longer documented).
  * Fix: improved the accuracy with which velocity is 
    converted between the Earth-fixed ITRF frame that rotates 
    with the Earth and the inertial GCRS frame that does not. 
    In particular, this should make Earth satellite 
    velocities more accurate.
- rebase patches skyfield-pr404-comparefloat.patch
  and skyfield-pr405-replace-assay-by-pytest.patch

-------------------------------------------------------------------
Sun Jul 12 19:12:27 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- fix typo in Patch0 url 

-------------------------------------------------------------------
Sat Jul 11 19:06:39 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- mention python-skyfield-rpmlintrc to specfile: don't warn about
  matplotlib and html5lib in Requires 

-------------------------------------------------------------------
Fri Jul 10 14:51:52 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update to Version 1.23     
  * Added `kepler-orbits` support for generating the positions of comets and 
    asteroids from Minor Planet Center data files.   
  * Added `skyfield.positionlib.ICRF.is_behind_earth()` to determine whether a 
    celestial object is blocked from an Earth satellite’s view by the Earth 
    itself.    
  * Replaced the awkward and hard-to-explain rough_period search parameter with 
    the conceptually simpler step_days parameter, and updated the instructions 
    in `searches` to match.    
  * Made the `skyfield.iokit.Loader.load.tle_file()` import method less strict 
    about Earth satellite names: any text on the line before two lines of TLE 
    data is now saved as the satellite name. A parameter skip_names=True turns 
    this off if, for particular TLE files, this leads to unwanted text being 
    saved
- directly copy downloaded testfiles as sources
- move skyfield-openSUSE-comparefloat.patch to skyfield-PR404-comparefloat.patch
  and submit upstream: gh#skyfielders/python-skyfield#404
- move skyfield-openSUSE-replace-testrunner.patch to 
  skyfield-PR405-replace-assay-by-pytest.patch and submit upstream:
  gh#skyfielders/python-skyfield#405
- disable python2 package
    
-------------------------------------------------------------------
Thu Jul  9 16:51:16 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- initial package. Version 1.22 
- provide a bunch of astronomical testdata which would be downloaded
  by the tests on networking hosts
- skyfield-openSUSE-replace-testrunner.patch:
  replace the author's own test runner 'assay' with regular pytest
- skyfield-openSUSE-comparefloat.patch:
  refine float comparison failing on some flaky platforms
