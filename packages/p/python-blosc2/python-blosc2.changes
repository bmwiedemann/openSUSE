-------------------------------------------------------------------
Sat Jun 29 19:32:43 UTC 2024 - Dirk M端ller <dmueller@suse.com>

- update to 2.7.0:
  * Updated to latest C-Blosc2 2.15.0.
  * Deprecated `LazyExpr.evaluate()`.
  * Fixed `_check_rc` function.

-------------------------------------------------------------------
Fri Apr 26 16:35:25 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Update to 2.6.2
  * Protection when platforms have just one CPU. This caused the
    internal number of threads to be 0, producing a division by zero.
  *  Updated to latest C-Blosc2 2.14.3.
- Release 2.6.0
  * [EXP] New evaluation engine (based on numexpr) for NDArray
    instances. Now, you can evaluate expressions like a + b + 1
    where a and b are NDArray instances. This is a powerful feature
    that allows for efficient computations on compressed data. See
    this example to see how this works. Thanks to @omaech for her
    help in the pow function.
  * As a consequence of the above, there are many new functions to
    operate with NDArray instances. See the function section in
    NDArray API for more information.
  * Support for NumPy 2.0.0 is here! Now, the wheels are built with
    NumPy 2.0.0rc1. Please tell us in case you see any issues with
    this new version.
  * Add **kwargs to load_tensor() function. This allows to pass
    additional parameters to the deserialization function. Thanks
    to @jasam-sheja.
  * Fix vlmeta.to_dict() not honoring tuple encoding. Thanks to
    @ivilata.
  * Check that chunks/blocks computation does not allow a 0 in
    blocks. Thanks to @ivilata.
  * Many improvements in ruff rules and others. Thanks to
    @DimitriPapadopoulos.
  * Remove printing large arrays in notebooks (they use too much
    RAM in recent versions of Jupyter notebook).

-------------------------------------------------------------------
Wed Feb  7 10:52:39 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Update to 2.5.1
  * Updated to latest C-Blosc2 2.13.1.
  * Fixed bug in b2nd.h.
- Release 2.5.0
  * Updated to latest C-Blosc2 2.13.0.
  * Added the filter INT_TRUNC for integer truncation.
  * Added some optimizations for zstd.
  * Now the grok library is initialized when loading the plugin
    from C-Blosc2.
  * Improved doc.
  * Support for slices in blosc2.get_slice_nchunks() when using
    SChunk objects.
- Release 2.4.0
  * Updated to latest C-Blosc2 2.12.0.
  * Added blosc2.get_slice_nchunks() to get array of chunk indexes
    needed to get a slice of a Blosc2 container.
  * Added grok codec plugin.
  * Added imported target with pkg-config to support windows.

-------------------------------------------------------------------
Fri Dec  1 13:36:28 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Update to 2.3.2
  * Support for `pathlib.Path` objects in all the places where
    `urlpath` is used (e.g. `blosc2.open()`). Thanks to Marta
    Iborra.
  * Included docs for `SChunk.fill_special()` and `NDArray.dtype`.
    Thanks to Francesc Alted.

-------------------------------------------------------------------
Sat Nov 25 12:58:13 UTC 2023 - Dirk M端ller <dmueller@suse.com>

- update to 2.3.1:
  * Temporarily disable AVX512 support in C-Blosc2 for wheels
    built by CI until run-time detection works properly.
  * Require at least Cython 3 for building. Using previous
    versions worked but error handling was not correct (wheels
    were being built with Cython 3 anyway).
  * New `NDArray.to_cframe()` method and
    `blosc2.ndarray_from_cframe()` function for serializing and
    deserializing NDArrays to/from contiguous in-memory frames.
    Thanks to Francesc Alted.
  * Add an optional `offset` argument to `blosc2.schunk.open()`,
    to access super-chunks stored in containers like HDF5. Thanks
    to Ivan Vilata.
  * Assorted minor fixes to the blocksize/blockshape computation
    algorithm, avoiding some cases where it resulted in values
    exceeding maximum limits. Thanks to Ivan Vilata.
  * Updated to latest C-Blosc2 2.11.2. It adds AVX512 support for
    the bitshuffle filter, fixes ARM and Raspberry Pi
    compatibility and assorted issues.
  * Add python-blosc2 package definition for Guix. Thanks to Ivan
    Vilata.

-------------------------------------------------------------------
Sat Oct 14 10:53:25 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Update to 2.2.9
  * Support for specifying (plugable) tuner parameters in cparams. Thanks to
    Marta Iborra.
  * Re-add support for Python 3.8. Although we don't provide wheels for it,
    support is there (although it requires compilation time).
  * Avoid duplicate iteration over the same dict. Thanks to Dimitri Papadopoulos.
  * Fix different issues with f-strings. Thanks to Dimitri Papadopoulos.
- Release 2.2.8
  * Support for Python 3.12
  * Different improvements suggested by refurb and pyupgrade.
    Thanks to Dimitri Papadopoulos.
  * Updated to latest C-Blosc2 2.10.4.

-------------------------------------------------------------------
Mon Sep 18 09:17:34 UTC 2023 - Dirk M端ller <dmueller@suse.com>

- update to 2.2.7:
  * Updated to latest C-Blosc2 2.10.3.
  * Added openhtj2k codec plugin.

-------------------------------------------------------------------
Tue Aug 22 18:41:09 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Update to 2.2.6
  * Multithreading checks only apply to Python defined codecs and
    filters. Now it is possible to use multithreading with C codecs
    and filters plugins. See PR #127.
  * New support for dynamic filters registry for Python.
  * Now params for codec and filter plugins are correctly
    initialized when using register_codec and register_filter
    functions.
  * Some fixes for Cython 3.0.0. However,compatibility with Cython
    3.0.0 is not here yet, so build and install scripts are still
    requiring Cython<3.
  * Updated to latest C-Blosc2 2.10.1.
- Release 2.2.5
  * Updated to latest C-Blosc2 2.10.0.
  * Use the new, fixed bytedelta filter introduced in C-Blosc2
    2.10.0.
  * Some small fixes in tutorials.
- Release 2.2.3 and 2.2.4
  * Added a new section of tutorials for a quick get start.
  * Added a new section on how to cite Blosc.
  * New method interchunks_info for SChunk and NDArray classes.
    This iterates through chunks for getting meta info, like
    decompression ratio, whether the chunk is special or not, among
    others. For more information on how this works see this
    example.
  * Now it is possible to register a dynamic plugin by passing None
    as the encoder and decoder arguments in the register_codec
    function.
  * Make shape of scalar slices NDArray objects to follow NumPy
    conventions. See #117.
  * Updated to latest C-Blosc2 2.9.3.

-------------------------------------------------------------------
Fri May 12 13:21:45 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Bump BuildRequires: Does not build with older c-blosc2

-------------------------------------------------------------------
Thu May 11 14:23:12 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Update to 2.2.2
  * Changes relevant for wheels bundling c-blosc2 but not for linux
    packages using the library from system
- Update to 2.2.2
  * Updated to latest C-Blosc2 2.9.1.

-------------------------------------------------------------------
Tue Apr 25 21:45:37 UTC 2023 - Dirk M端ller <dmueller@suse.com>

- update to 2.2.0:
  * New bytedelta filter.  We have blogged about this:
    https://www.blosc.org/posts/bytedelta-enhance-compression-
    toolset/.  See the examples/ndarray/bytedelta_filter.py for a
    sample script.  We also have a short video on how bytedelta
    works: https://www.youtube.com/watch?v=5OXs7w2x6nw
  * `dtype.itemsize` will have preference over typesize in
    cparams (as it was documented).
  * `blosc2.compressor_list(plugins=False)` do not list codec
    plugins by default now.  If you want to list plugins too, you
    need to pass `plugins=True`.
  * Internal C-Blosc2 updated to latest version (2.8.0).

-------------------------------------------------------------------
Thu Mar 30 15:07:57 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Update to 2.1.1
  * New NDArray class for handling multidimensional arrays using
    compression. It includes:
    - Data type handling (fully compatible with NumPy)
    - Double partitioning
  * See examples at:
    https://github.com/Blosc/python-blosc2/tree/main/examples/ndarray
    NDarray docs at:
    https://www.blosc.org/python-blosc2/reference/ndarray_api.html
    Explanatory video on why double partitioning:
    https://youtu.be/LvP9zxMGBng Also, see our blog on C-Blosc2
    NDim counterpart:
    https://www.blosc.org/posts/blosc2-ndim-intro/
- Drop python-blosc2-pr92-debundle.patch
- Drop python-blosc2-pr82-fix-os-release.patch

-------------------------------------------------------------------
Fri Feb 24 05:50:25 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Skip incompatible tests on 32bit

-------------------------------------------------------------------
Fri Feb 17 10:37:29 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Initial specfile for v2.0.0
- Add python-blosc2-pr92-debundle.patch
  * gh#Blosc/python-blosc2#92
  * Fixes gh#Blosc/python-blosc2#15
- Required by python-tables (PyTables)
