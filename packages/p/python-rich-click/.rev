<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>e639c2ae4e8eb5c6b5a7ab356c5b3739</srcmd5>
    <version>1.5.2</version>
    <time>1662063089</time>
    <user>dimstar_suse</user>
    <comment>new dep of django-codemod. c.f. https://build.opensuse.org/package/show/home:jayvdb:branches:devel:languages:python:django/python-django-codemod</comment>
    <requestid>1000584</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>322685841af68878e54f4f6e20eb6176</srcmd5>
    <version>1.6.0</version>
    <time>1671128688</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1042866</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>7e11ea654c4e3cfa1f3c645a7bbb5148</srcmd5>
    <version>1.6.1</version>
    <time>1683295082</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.6.1:
  * Don't show metavars for feature switch options [#100]</comment>
    <requestid>1084861</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>5f02f9461487d99f0f665ecd7df19490</srcmd5>
    <version>1.7.1</version>
    <time>1702488964</time>
    <user>anag+factory</user>
    <comment>- update to 1.7.2:
  * Add support for rich formatting in epilog text [#146]
  * Fix bug with `rich-click` CLI not working with Python 3.12.
    #141
  * Fix compatibility issue with `dbt-core` CLI. [#140]
  * Extends Click's `HelpFormatter` class
  * Creates a `HelpConfiguration` class that doubles the current
    module-level settings
  * Added a decorator that allows the `HelpConfiguration` to be
    passed into Click via the supported `context_settings`
    argument provided by the `Command` and `Group` classes.
  * The Rich Console object can also be configured per command
    and is distinct from the Console instance used internally by
    the formatter. The `RichHelpFormatter` creates a console
    based on the `RichHelpConfiguration` as the tight coupling
    between the Formatter and Click's internals make it difficult
    to allow the Console to be configured externally (i.e. one
    example is that Click expects help formatting to be
    buffered).
  * Created a `RichContext` class to allow creation of the custom
    formatter.
  * The Rich Command, Group, and Context now expose the `Console`
    and `RichHelpConfiguration` properties.
  * Added contributor VSCode settings

- Update to version 1.6.0</comment>
    <requestid>1132837</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>51074bfe47c90dadd1a8bb186a29181b</srcmd5>
    <version>1.7.2</version>
    <time>1703800950</time>
    <user>anag+factory</user>
    <comment>- update to 1.7.2:
  * Add support for rich formatting in epilog text [#146]</comment>
    <requestid>1135339</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>5fde2830af8327a974dc4ba9c7faf5a9</srcmd5>
    <version>1.7.3</version>
    <time>1704919931</time>
    <user>anag+factory</user>
    <comment>- update to 1.7.3:
  * Fix false deprecation warning.</comment>
    <requestid>1137823</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>b4ae366301f72685e731c00d292d992c</srcmd5>
    <version>1.7.4</version>
    <time>1710710134</time>
    <user>anag+factory</user>
    <comment>- update to 1.7.4:
  * Set `legacy_windows` by default to `None`.</comment>
    <requestid>1158508</requestid>
  </revision>
  <revision rev="8" vrev="2">
    <srcmd5>6b65a37d566189d7d58b033641d7009b</srcmd5>
    <version>1.7.4</version>
    <time>1749736453</time>
    <user>anag_factory</user>
    <comment>- Convert to pip-based build and libalternatives</comment>
    <requestid>1285051</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>fe4401858be77fb4e0d57f3da26f6925</srcmd5>
    <version>1.8.9</version>
    <time>1753976814</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.8.9:
  * Fix deprecation warning in Click 8.2.
  * Fix typing incompatibilities with Click 8.2.
  * Fixed no_args_is_help=True with Click 8.2.
  * Added Click 8.2's support for Parameter.deprecated: str | bool
  * Make text wrap instead of using ellipses for overflowing metavars in
    options tables.
  * Added --errors-in-output-format flag to rich-click CLI.
  * Actually fixed regression in stderr handling
  * Add ability to turn off option/command deduplication in groups
  * Fix regression in stderr handling
  * Fix incompatibility with click 8.2.0.
  * Fix issue with error messages not using user-defined styles.
  * Support rich.text.Text() objects for header_text, footer_text,
    errors_suggestion, and errors_epilogue.
  * Support {cmd} as an option/command group key when python -m {cmd} is the
    command_path.
  * Fixed incompatibility with Click 9.
  * Add --rich-config and --output options to the rich-click CLI.
  * Lazy load Rich to reduce overhead when not rendering help text.
  * Added RichHelpConfiguration.load_from_globals() classmethod, which pulls
    all configuration from rich_click.py.
  * Fix bug with regex highlighter for options and switches.
  * RichHelpConfiguration() is now asserted to be JSON serializable, as an
    option for porting configurations.
  * Moved exclusively to pyproject.toml and removed setup.py / setup.cfg
  * Moved to text_markup: Literal[&quot;markdown&quot;, &quot;rich&quot;, &quot;ansi&quot;, None] instead
    of booleans.
  * Fixed issue where error messages would not print to stderr by default.
- Switch to github tarball.</comment>
    <requestid>1296682</requestid>
  </revision>
</revisionlist>
