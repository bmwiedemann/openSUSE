<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>b05b5d765d10cbad91f8ddff4b9b9a09</srcmd5>
    <version>0.1.8</version>
    <time>1567580988</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>727095</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>d51c07bd714784e84997db5327137fcb</srcmd5>
    <version>1.1.1</version>
    <time>1569588695</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.1.1:
  * from_bytes parameters steps and chunk_size were not adapted to sequence len if provided values were not fitted to content
  * Sequence having lenght bellow 10 chars was not checked
  * Legacy detect method inspired by chardet was not returning
  * Various more test updates

- Update to 0.3:
  * Improvement on detection
  * Performance loss to expect
  * Added --threshold option to CLI
  * Bugfix on UTF 7 support
  * Legacy detect(byte_str) method
  * BOM support (Unicode mostly)
  * Chaos prober improved on small text
  * Language detection has been reviewed to give better result
  * Bugfix on jp detection, every jp text was considered chaotic</comment>
    <requestid>733394</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>f64e3a494fb8dc25243976f11761e991</srcmd5>
    <version>1.3.0</version>
    <time>1571209945</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>734952</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>846f128905047b8a38d6cde66577480a</srcmd5>
    <version>1.3.4</version>
    <time>1580205458</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>767923</requestid>
  </revision>
  <revision rev="5" vrev="2">
    <srcmd5>663df7c965fc3c8f3c18120667952edc</srcmd5>
    <version>1.3.4</version>
    <time>1590508192</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>808799</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>b9a16b6de8d3dc26587e78349f84b56e</srcmd5>
    <version>1.3.6</version>
    <time>1617130980</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>870785</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>8b4749bd0e8b56818a034ddbb364de7f</srcmd5>
    <version>1.3.9</version>
    <time>1621531529</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>894589</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>14d3376cf184283fb63eca4305d057a8</srcmd5>
    <version>2.0.7</version>
    <time>1635366065</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.0.7
  * Addition: bento Add support for Kazakh (Cyrillic) language
    detection
  * Improvement: sparkle Further improve inferring the language
    from a given code page (single-byte).
  * Removed: fire Remove redundant logging entry about detected
    language(s).
  * Improvement: zap Refactoring for potential performance
    improvements in loops.
  * Improvement: sparkles Various detection improvement (MD+CD).
  * Bugfix: bug Fix a minor inconsistency between Python 3.5 and
    other versions regarding language detection.
- Update to version 2.0.6
  * Bugfix: bug Unforeseen regression with the loss of the
    backward-compatibility with some older minor of Python 3.5.x.
  * Bugfix: bug Fix CLI crash when using --minimal output in
    certain cases.
  * Improvement: sparkles Minor improvement to the detection
    efficiency (less than 1%).
- Update to version 2.0.5
  * Improvement: sparkles The BC-support with v1.x was improved,
    the old staticmethods are restored.
  * Remove: fire The project no longer raise warning on tiny
    content given for detection, will be simply logged as warning
    instead.
  * Improvement: sparkles The Unicode detection is slightly
    improved, see #93
  * Bugfix: bug In some rare case, the chunks extractor could cut
    in the middle of a multi-byte character and could mislead the
    mess detection.</comment>
    <requestid>927599</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>77291d42265282cc654a6cfd452e53ed</srcmd5>
    <version>2.0.8</version>
    <time>1638388009</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.0.8:
  * Improvement over Vietnamese detection
  * MD improvement on trailing data and long foreign (non-pure latin)
  * Efficiency improvements in cd/alphabet_languages
  * call sum() without an intermediary list following PEP 289 recommendations
  * Code style as refactored by Sourcery-AI
  * Minor adjustment on the MD around european words
  * Remove and replace SRTs from assets / tests
  * Initialize the library logger with a `NullHandler` by default
  * Setting kwarg `explain` to True will add provisionally
  * Fix large (misleading) sequence giving UnicodeDecodeError
  * Avoid using too insignificant chunk
  * Add and expose function `set_logging_handler` to configure a specific
    StreamHandler

- require lower-case name instead of breaking build 

- Use lower-case name of prettytable package</comment>
    <requestid>934519</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>3161aca2c73d8b73a31c589728629c62</srcmd5>
    <version>2.0.9</version>
    <time>1639075518</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.0.9:
  * Moderating the logging impact (since 2.0.8) for specific
    environments
  * Wrong logging level applied when setting kwarg `explain` to True</comment>
    <requestid>936118</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>888e8dc36a26a707b1acaa5b2308af91</srcmd5>
    <version>2.0.10</version>
    <time>1641932236</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.0.10:
  * Fallback match entries might lead to UnicodeDecodeError for large bytes
    sequence
  * Skipping the language-detection (CD) on ASCII</comment>
    <requestid>945443</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>d032ad704b257294861682f60c6c2a8e</srcmd5>
    <version>2.0.12</version>
    <time>1645054197</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.0.12:
  * ASCII miss-detection on rare cases (PR #170) 
  * Explicit support for Python 3.11 (PR #164)
  * The logging behavior have been completely reviewed, now using only TRACE
    and DEBUG levels</comment>
    <requestid>954654</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>28e9650d1827c42812e74c3cd7b83f5b</srcmd5>
    <version>2.1.0</version>
    <time>1658857329</time>
    <user>RBrownFactory</user>
    <comment>- update to 2.1.0:
  * Output the Unicode table version when running the CLI with `--version`
  * Re-use decoded buffer for single byte character sets
  * Fixing some performance bottlenecks
  * Workaround potential bug in cpython with Zero Width No-Break Space located
  * in Arabic Presentation Forms-B, Unicode 1.1 not acknowledged as space
  * CLI default threshold aligned with the API threshold from
  * Support for Python 3.5 (PR #192)
  * Use of backport unicodedata from `unicodedata2` as Python is quickly
    catching up, scheduled for removal in 3.0</comment>
    <requestid>991152</requestid>
  </revision>
  <revision rev="14" vrev="2">
    <srcmd5>7b065ead9a9f9589246c3660f975ba29</srcmd5>
    <version>2.1.0</version>
    <time>1661020065</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>998090</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>fb31a344ba8903d5725f60b5350f56ce</srcmd5>
    <version>2.1.1</version>
    <time>1663515118</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.1.1:
  * Function `normalize` scheduled for removal in 3.0
  * Removed useless call to decode in fn is_unprintable (#206)</comment>
    <requestid>1004361</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>c3230827e1a00f8321b8b3f6348bc27d</srcmd5>
    <version>3.0.0</version>
    <time>1667579490</time>
    <user>dimstar_suse</user>
    <comment>Forwarded request #1031656 from yarunachalam

- Update to 3.0.0 
    Added
    * Extend the capability of explain=True when cp_isolation contains at most two entries (min one), will log in details of the Mess-detector results
      Support for alternative language frequency set in charset_normalizer.assets.FREQUENCIES
      Add parameter language_threshold in from_bytes, from_path and from_fp to adjust the minimum expected coherence ratio
      normalizer --version now specify if current version provide extra speedup (meaning mypyc compilation whl)
    * Changed
      Build with static metadata using 'build' frontend
      Make the language detection stricter
      Optional: Module md.py can be compiled using Mypyc to provide an extra speedup up to 4x faster than v2.1
    * Fixed
      CLI with opt --normalize fail when using full path for files
      TooManyAccentuatedPlugin induce false positive on the mess detection when too few alpha character have been fed to it
      Sphinx warnings when generating the documentation
    * Removed
      Coherence detector no longer return 'Simple English' instead return 'English'
      Coherence detector no longer return 'Classical Chinese' instead return 'Chinese'
      Breaking: Method first() and best() from CharsetMatch
      UTF-7 will no longer appear as &quot;detected&quot; without a recognized SIG/mark (is unreliable/conflict with ASCII)
      Breaking: Class aliases CharsetDetector, CharsetDoctor, CharsetNormalizerMatch and CharsetNormalizerMatches
      Breaking: Top-level function normalize
      Breaking: Properties chaos_secondary_pass, coherence_non_latin and w_counter from CharsetMatch
      Support for the backport unicodedata2</comment>
    <requestid>1032182</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>106ba0d3efb45a4963b1f5541222db75</srcmd5>
    <version>3.0.1</version>
    <time>1670162264</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1039740</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>323a605df03c1369f760364e0261af91</srcmd5>
    <version>3.1.0</version>
    <time>1680125175</time>
    <user>dimstar_suse</user>
    <comment>- update to 3.1.0:
  * Argument `should_rename_legacy` for legacy function `detect`
    and disregard any new arguments without errors (PR #262)
  * Removed Support for Python 3.6 (PR #260)
  * Optional speedup provided by mypy/c 1.0.1</comment>
    <requestid>1074517</requestid>
  </revision>
</revisionlist>
