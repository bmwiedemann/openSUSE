<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>f37bc45baade57ab08dce8ecc947629f</srcmd5>
    <version>0.7.1</version>
    <time>1312462868</time>
    <user>darix</user>
    <comment>Please add</comment>
    <requestid>77040</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>5ae06d00cc3acd176ba1b68ffc81781a</srcmd5>
    <version>0.7.1</version>
    <time>1312462878</time>
    <user>darix</user>
    <comment>Autobuild autoformatter for 77040
</comment>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>8e96e2de726b0b013955456c4510488e</srcmd5>
    <version>0.7.2</version>
    <time>1317024789</time>
    <user>saschpe</user>
    <comment></comment>
    <requestid>84233</requestid>
  </revision>
  <revision rev="4" vrev="3">
    <srcmd5>8e96e2de726b0b013955456c4510488e</srcmd5>
    <version>0.7.2</version>
    <time>1319182380</time>
    <user>adrianSuSE</user>
  </revision>
  <revision rev="5" vrev="4">
    <srcmd5>1b34525e2fd516846252fcfd91c4a338</srcmd5>
    <version>0.7.2</version>
    <time>1322216009</time>
    <user>coolo</user>
    <comment></comment>
    <requestid>93072</requestid>
  </revision>
  <revision rev="6" vrev="5">
    <srcmd5>687631c24990ca61bcad4ef7f6e8d577</srcmd5>
    <version>0.7.2</version>
    <time>1323194270</time>
    <user>coolo</user>
    <comment>replace license with spdx.org variant</comment>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>d4bd6ba9f9e24e1dd0de9865cb5e5701</srcmd5>
    <version>0.7.5</version>
    <time>1329215209</time>
    <user>coolo</user>
    <comment>update to 0.7.5 (forwarded request 103506 from rhafer)</comment>
    <requestid>103514</requestid>
  </revision>
  <revision rev="8" vrev="2">
    <srcmd5>32500c8fe5ab7d73a2c53ad4b430396a</srcmd5>
    <version>0.7.5</version>
    <time>1329922491</time>
    <user>coolo</user>
    <comment>- Fixed SLE_11 build by disabling the testsuite for it (forwarded request 106445 from saschpe)</comment>
    <requestid>106446</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>537a893c03f6719d8b21fef00670a3d5</srcmd5>
    <version>0.7.6</version>
    <time>1336468529</time>
    <user>coolo</user>
    <comment>Resubmit with fixed sources</comment>
    <requestid>116281</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>0cfed04d33c564ab20d30091c5c9e611</srcmd5>
    <version>0.7.7</version>
    <time>1337578240</time>
    <user>coolo</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>121278</requestid>
  </revision>
  <revision rev="11" vrev="2">
    <srcmd5>d7d3ffce0942bd23f1ba574989ac184d</srcmd5>
    <version>0.7.7</version>
    <time>1338280567</time>
    <user>coolo</user>
    <comment>- Fix building on openSUSE 11.4
- spec file cleanups (forwarded request 122292 from TheBlackCat) (forwarded request 122294 from TheBlackCat)</comment>
    <requestid>122295</requestid>
  </revision>
  <revision rev="12" vrev="4">
    <srcmd5>d7d3ffce0942bd23f1ba574989ac184d</srcmd5>
    <version>0.7.7</version>
    <time>1340184032</time>
    <user>adrianSuSE</user>
    <comment>branched from openSUSE:Factory</comment>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>871317efe69fb5dcab4902e9f4e2bea4</srcmd5>
    <version>0.7.9</version>
    <time>1352215320</time>
    <user>coolo</user>
    <comment>Update to 0.7.9 (forwarded request 140019 from termim)</comment>
    <requestid>140296</requestid>
  </revision>
  <revision rev="14" vrev="2">
    <srcmd5>0d55e4599fcbc4958ce55035112d0b2d</srcmd5>
    <version>0.7.9</version>
    <time>1354530636</time>
    <user>coolo</user>
    <comment>Remove openSUSE 11.4 spec file workarounds (forwarded request 143686 from TheBlackCat)</comment>
    <requestid>143687</requestid>
  </revision>
  <revision rev="15" vrev="3">
    <srcmd5>c22a6e8869744ee02effe1da58b3eca5</srcmd5>
    <version>0.7.9</version>
    <time>1356731248</time>
    <user>namtrac</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>146431</requestid>
  </revision>
  <revision rev="16" vrev="5">
    <srcmd5>c22a6e8869744ee02effe1da58b3eca5</srcmd5>
    <version>0.7.9</version>
    <time>1359109984</time>
    <user>adrianSuSE</user>
    <comment>Split 12.3 from Factory</comment>
  </revision>
  <revision rev="17" vrev="6">
    <srcmd5>1c400862ae7eb22149ab81765aa64255</srcmd5>
    <version>0.7.9</version>
    <time>1362732487</time>
    <user>coolo</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>157710</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>7a7245508b59e2fca92c085e31dc4b36</srcmd5>
    <version>0.7.10</version>
    <time>1362746413</time>
    <user>coolo</user>
    <comment>- update to 0.7.10:
  * orm
  + [bug] Fixed Session accounting bug whereby replacing
    a deleted object in the identity map with another
    object of the same primary key would raise a
    &quot;conflicting state&quot; error on rollback(),
    if the replaced primary key were established either
    via non-unitofwork-established INSERT statement
    or by primary key switch of another instance.
    [ticket:2583]
  * oracle
  + [bug] changed the list of cx_oracle types that are
    excluded from the setinputsizes() step to only include
    STRING and UNICODE; CLOB and NCLOB are removed.  This
    is to work around cx_oracle behavior which is broken
    for the executemany() call.  In 0.8, this same change 
    is applied however it is also configurable via the
    exclude_setinputsizes argument. [ticket:2561]
  * mysql
  + [feature] Added &quot;raise_on_warnings&quot; flag to OurSQL
    dialect.  [ticket:2523]
  + [feature] Added &quot;read_timeout&quot; flag to MySQLdb
    dialect.  [ticket:2554]

- update to 0.7.10:
  * orm
  + [bug] Fixed Session accounting bug whereby replacing
    a deleted object in the identity map with another
    object of the same primary key would raise a
    &quot;conflicting state&quot; error on rollback(),</comment>
    <requestid>157972</requestid>
  </revision>
  <revision rev="19" vrev="2">
    <srcmd5>788af9b509e6a7f8ea0decd83c4ad56e</srcmd5>
    <version>0.7.10</version>
    <time>1371651775</time>
    <user>coolo</user>
    <comment>housekeeping sr, necessary due to split between d:l:p and d:l:p3 and (manual) _link removal in Factory.</comment>
    <requestid>179707</requestid>
  </revision>
  <revision rev="20" vrev="3">
    <srcmd5>57ebfcef6cb626cd71c15393e12b850c</srcmd5>
    <version>0.7.10</version>
    <time>1374671407</time>
    <user>coolo</user>
    <comment>fixing build requirement from python-sqlite to python-pysqlite to also build on SLES11 SP3 (forwarded request 183985 from cberendt)</comment>
    <requestid>184054</requestid>
  </revision>
  <revision rev="21" vrev="4">
    <srcmd5>4b3fc0453845f521a216a08115ef5af7</srcmd5>
    <version>0.7.10</version>
    <time>1376393048</time>
    <user>scarabeus_factory</user>
    <comment>- Add SQLAlchemy-0.7.10-SLES-drop-failing-tests.patch: Cheat with 
  dropping tests to fix testsuite on SLE-11</comment>
    <requestid>186709</requestid>
  </revision>
  <revision rev="22" vrev="6">
    <srcmd5>4b3fc0453845f521a216a08115ef5af7</srcmd5>
    <version>0.7.10</version>
    <time>1379664116</time>
    <user>adrianSuSE</user>
    <comment>Split 13.1 from Factory</comment>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>1831b33c71139f3ab6c888481e6d86fb</srcmd5>
    <version>0.8.3</version>
    <time>1383545337</time>
    <user>coolo</user>
    <comment>- Update to version 0.8.3:
  + See http://docs.sqlalchemy.org/en/latest/changelog/changelog_08.html#change-0.8.3
- Drop outdated patches
  + SQLAlchemy-0.7.10-SLES-drop-failing-tests.patch
  + sqlalchemy-0.7-logging.patch

- Require python-setuptools instead of distribute (upstreams merged)</comment>
    <requestid>205263</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>0a5eadf50b9b04b97329783e3018cc6c</srcmd5>
    <version>0.8.6</version>
    <time>1397042149</time>
    <user>coolo</user>
    <comment>- update to 0.8.6:
  + See http://docs.sqlalchemy.org/en/rel_0_9/changelog/changelog_08.html#change-0.8.6 (forwarded request 229362 from dirkmueller)</comment>
    <requestid>229367</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>d5aa3b2dd675abe61f2f98e2127e5c4b</srcmd5>
    <version>0.9.6</version>
    <time>1405573090</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>241014</requestid>
  </revision>
  <revision rev="26" vrev="3">
    <srcmd5>d5aa3b2dd675abe61f2f98e2127e5c4b</srcmd5>
    <version>0.9.6</version>
    <time>1409302803</time>
    <user>adrianSuSE</user>
    <comment>Split 13.2 from Factory</comment>
  </revision>
  <revision rev="27" vrev="1">
    <srcmd5>139276c398382d9a2a6e0f2de9e291e2</srcmd5>
    <version>0.9.7</version>
    <time>1410795658</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>248990</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>4b24d8b9ff0e5d12787d6dde4baaa56f</srcmd5>
    <version>0.9.8</version>
    <time>1420833058</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>280588</requestid>
  </revision>
  <revision rev="29" vrev="1">
    <srcmd5>f22c5ed206da1d125624f6ac872a09fe</srcmd5>
    <version>0.9.9</version>
    <time>1429769094</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>298601</requestid>
  </revision>
  <revision rev="30" vrev="1">
    <srcmd5>51e13d07a91b1a9b25a55d3c52e8014f</srcmd5>
    <version>1.0.4</version>
    <time>1432545236</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>308523</requestid>
  </revision>
  <revision rev="31" vrev="1">
    <srcmd5>2161ed741791a666b1ba7c7a0e5b3eb7</srcmd5>
    <version>1.0.5</version>
    <time>1434550587</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>312318</requestid>
  </revision>
  <revision rev="32" vrev="1">
    <srcmd5>364ca859e8fb9dd5cd0e2addb8592940</srcmd5>
    <version>1.0.8</version>
    <time>1444130863</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>336459</requestid>
  </revision>
  <revision rev="33" vrev="1">
    <srcmd5>58b4a260dbe4db46e2e345f2caf576de</srcmd5>
    <version>1.0.11</version>
    <time>1452535939</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>353053</requestid>
  </revision>
  <revision rev="34" vrev="2">
    <srcmd5>fbfa991420f49048eb1aff19bda5a03d</srcmd5>
    <version>1.0.11</version>
    <time>1455701072</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>358855</requestid>
  </revision>
  <revision rev="35" vrev="1">
    <srcmd5>c09c9d6c53a19c6896f04c8b0975315a</srcmd5>
    <version>1.0.13</version>
    <time>1465336238</time>
    <user>dimstar_suse</user>
    <comment>- fix source url

- update to 1.0.13:
  * see http://docs.sqlalchemy.org/en/latest/changelog/changelog_10.html#change-1.0.12
    and http://docs.sqlalchemy.org/en/latest/changelog/changelog_10.html#change-1.0.13
Remove 0001-fix-sqlite3.10.0-test.patch. Applied upstream.</comment>
    <requestid>400455</requestid>
  </revision>
  <revision rev="36" vrev="1">
    <srcmd5>9499c82d2a008bb41d41e5a69588f5f8</srcmd5>
    <version>1.0.15</version>
    <time>1476109186</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>428019</requestid>
  </revision>
  <revision rev="37" vrev="1">
    <srcmd5>a03056e9a212da8dc660cbd2def27b60</srcmd5>
    <version>1.1.9</version>
    <time>1493368869</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>489145</requestid>
  </revision>
  <revision rev="38" vrev="2">
    <srcmd5>31bb8a18e3a9b040246191d89a8e8fb1</srcmd5>
    <version>1.1.9</version>
    <time>1493819809</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>492343</requestid>
  </revision>
  <revision rev="39" vrev="3">
    <srcmd5>6be4d40bb91dc6a4d6c53b6450ea1a42</srcmd5>
    <version>1.1.9</version>
    <time>1494088275</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>493131</requestid>
  </revision>
  <revision rev="40" vrev="1">
    <srcmd5>704ac3d97022735571cf631d7da7245c</srcmd5>
    <version>1.1.11</version>
    <time>1499754445</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>509133</requestid>
  </revision>
  <revision rev="41" vrev="1">
    <srcmd5>b9be6f95c7cfb38f5078181df96bb8cf</srcmd5>
    <version>1.1.12</version>
    <time>1502366764</time>
    <user>maxlin_factory</user>
    <comment>1</comment>
    <requestid>515249</requestid>
  </revision>
  <revision rev="42" vrev="1">
    <srcmd5>2029b2967a2c17672abd6055577f823d</srcmd5>
    <version>1.1.14</version>
    <time>1506524129</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>528894</requestid>
  </revision>
  <revision rev="43" vrev="1">
    <srcmd5>25b104ee97a68e684bc276f7eb5b244b</srcmd5>
    <version>1.2.0</version>
    <time>1514983207</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>561265</requestid>
  </revision>
  <revision rev="44" vrev="1">
    <srcmd5>fa99c56015dd041bfa624d8508c82932</srcmd5>
    <version>1.2.1</version>
    <time>1516444004</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>566980</requestid>
  </revision>
  <revision rev="45" vrev="1">
    <srcmd5>698ba274a0bc31b9fb59e8fad845597e</srcmd5>
    <version>1.2.2</version>
    <time>1517234335</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>570418</requestid>
  </revision>
  <revision rev="46" vrev="1">
    <srcmd5>5d396b53a5a5f1a4b7e3b322bc911178</srcmd5>
    <version>1.2.3</version>
    <time>1519145678</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>577965</requestid>
  </revision>
  <revision rev="47" vrev="1">
    <srcmd5>84b63dc6f7d1e0f78bdac6fa5064d5f7</srcmd5>
    <version>1.2.4</version>
    <time>1519555616</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>579760</requestid>
  </revision>
  <revision rev="48" vrev="1">
    <srcmd5>1daca908f36f3d0c40d1980f4ea0a821</srcmd5>
    <version>1.2.5</version>
    <time>1520588682</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>584214</requestid>
  </revision>
  <revision rev="49" vrev="1">
    <srcmd5>85cd57de5755801577df39822a5261c9</srcmd5>
    <version>1.2.6</version>
    <time>1523447886</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>594667</requestid>
  </revision>
  <revision rev="50" vrev="1">
    <srcmd5>9c71c14a3ee1b3eec057cb720b428bf8</srcmd5>
    <version>1.2.7</version>
    <time>1524742646</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>599639</requestid>
  </revision>
  <revision rev="51" vrev="1">
    <srcmd5>8b7373995305aa1e0efb2b304a5d04f1</srcmd5>
    <version>1.2.8</version>
    <time>1530087727</time>
    <user>dimstar_suse</user>
    <comment>- add upstream fix_test_reflection.patch to fix tests with new sqlite (forwarded request 619105 from mimi_vx)</comment>
    <requestid>619112</requestid>
  </revision>
  <revision rev="52" vrev="1">
    <srcmd5>01cdace115619ec4799a3e0afea65f3b</srcmd5>
    <version>1.2.9</version>
    <time>1530567189</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>620083</requestid>
  </revision>
  <revision rev="53" vrev="1">
    <srcmd5>5fefc163e714bc9078f97066da352fbd</srcmd5>
    <version>1.2.10</version>
    <time>1531592760</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>622792</requestid>
  </revision>
  <revision rev="54" vrev="1">
    <srcmd5>2ae9c1647ea25fb8003c991571680f7f</srcmd5>
    <version>1.2.11</version>
    <time>1535367583</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>631547</requestid>
  </revision>
  <revision rev="55" vrev="1">
    <srcmd5>75aee618a51fa7a4e3caf3aeeeef6adb</srcmd5>
    <version>1.2.12</version>
    <time>1537964671</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>638276</requestid>
  </revision>
  <revision rev="56" vrev="1">
    <srcmd5>41986c7d36319c0194c40118f31a53fc</srcmd5>
    <version>1.2.13</version>
    <time>1541510937</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>646013</requestid>
  </revision>
  <revision rev="57" vrev="1">
    <srcmd5>11a21449578a30ee98e7fb33d64d7bd4</srcmd5>
    <version>1.2.14</version>
    <time>1542012358</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>648375</requestid>
  </revision>
  <revision rev="58" vrev="2">
    <srcmd5>b301d8c05ab640233a980c47e9bbe07b</srcmd5>
    <version>1.2.14</version>
    <time>1545223931</time>
    <user>dimstar_suse</user>
    <comment>- Remove superfluous devel dependency for noarch package
</comment>
    <requestid>659356</requestid>
  </revision>
  <revision rev="59" vrev="1">
    <srcmd5>80e2025c97850f432e72a85e55e09fea</srcmd5>
    <version>1.2.18</version>
    <time>1551024204</time>
    <user>coolo</user>
    <comment></comment>
    <requestid>678417</requestid>
  </revision>
  <revision rev="60" vrev="1">
    <srcmd5>18ce4a6a252ddb0885b867d9b4a0fe2f</srcmd5>
    <version>1.3.0</version>
    <time>1552039291</time>
    <user>dimstar_suse</user>
    <comment>- Add patch to fix test failure from upstream test.patch

- Update to versrion 1.3.0:
  * See https://docs.sqlalchemy.org/en/latest/changelog/migration_13.html
    for deprecation list with this version
  * For the changes see https://docs.sqlalchemy.org/en/latest/changelog/changelog_13.html</comment>
    <requestid>682172</requestid>
  </revision>
  <revision rev="61" vrev="1">
    <srcmd5>e36f29ce8d9f743b8afd909616500606</srcmd5>
    <version>1.3.1</version>
    <time>1552380370</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>683645</requestid>
  </revision>
  <revision rev="62" vrev="1">
    <srcmd5>65c8e653819aeda17313c2f8f30606cf</srcmd5>
    <version>1.3.2</version>
    <time>1555321817</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>693001</requestid>
  </revision>
  <revision rev="63" vrev="1">
    <srcmd5>f0f45da16b026a263499917d550b099e</srcmd5>
    <version>1.3.3</version>
    <time>1556474381</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>696966</requestid>
  </revision>
  <revision rev="64" vrev="1">
    <srcmd5>1d447a737d577330f36bb4d809c8ea20</srcmd5>
    <version>1.3.4</version>
    <time>1560862097</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>708934</requestid>
  </revision>
  <revision rev="65" vrev="1">
    <srcmd5>a3e4e81d500c2fecb390fea08d46fa32</srcmd5>
    <version>1.3.5</version>
    <time>1561882448</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>711669</requestid>
  </revision>
  <revision rev="66" vrev="1">
    <srcmd5>2247e0afed7f895330cfa83c2fbc0c0b</srcmd5>
    <version>1.3.6</version>
    <time>1564301923</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>717942</requestid>
  </revision>
  <revision rev="67" vrev="2">
    <srcmd5>27aab5b62418023df372a42978379042</srcmd5>
    <version>1.3.6</version>
    <time>1566463977</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>724866</requestid>
  </revision>
  <revision rev="68" vrev="1">
    <srcmd5>229bf54994acd66ebb94db33f54d6392</srcmd5>
    <version>1.3.7</version>
    <time>1566893493</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>725980</requestid>
  </revision>
  <revision rev="69" vrev="1">
    <srcmd5>cd4e5d073348d7ca1de8e7a8087f1609</srcmd5>
    <version>1.3.8</version>
    <time>1567852252</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>727458</requestid>
  </revision>
  <revision rev="70" vrev="1">
    <srcmd5>9421241d39b81aea63c8807c1e7264cf</srcmd5>
    <version>1.3.10</version>
    <time>1572883980</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.3.10:
  * Fixed regression in selectinload loader strategy
  * Passing a plain string expression to Session.query() is deprecated
  * A warning is emitted for a condition in which the Session may
    implicitly swap an object out of the identity map for another one
    with the same primary key</comment>
    <requestid>744192</requestid>
  </revision>
  <revision rev="71" vrev="1">
    <srcmd5>032da1306816aec02d195cc7043b1d80</srcmd5>
    <version>1.3.11</version>
    <time>1574414692</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>749101</requestid>
  </revision>
  <revision rev="72" vrev="1">
    <srcmd5>315feb94aa976e4de3e1878542398330</srcmd5>
    <version>1.3.12</version>
    <time>1577887060</time>
    <user>dimstar_suse</user>
    <comment>- update to version 1.3.12:
  * [orm] [bug] Fixed issue involving lazy=&quot;raise&quot; strategy where an ORM delete
  of an object would raise for a simple “use-get” style many-to-one relationship
  that had lazy=”raise” configured. This is inconsistent vs. the change
  introduced in 1.3 as part of #4353, where it was established that a history
  operation that does not expect emit SQL should bypass the lazy=&quot;raise&quot; check,
  and instead effectively treat it as lazy=&quot;raise_on_sql&quot; for this case. The fix
  adjusts the lazy loader strategy to not raise for the case where the lazy load
  was instructed that it should not emit SQL if the object were not present.
  * [orm] [bug] Fixed regression introduced in 1.3.0 related to the association
  proxy refactor in #4351 that prevented composite() attributes from working in
  terms of an association proxy that references them.
  * [orm] [bug] Setting persistence-related flags on relationship() while also
  setting viewonly=True will now emit a regular warning, as these flags do not
  make sense for a viewonly=True relationship. In particular, the “cascade”
  settings have their own warning that is generated based on the individual
  values, such as “delete, delete-orphan”, that should not apply to a viewonly
  relationship. Note however that in the case of “cascade”, these settings are
  still erroneously taking effect even though the relationship is set up as
  “viewonly”. In 1.4, all persistence-related cascade settings will be disallowed
  on a viewonly=True relationship in order to resolve this issue.
  * [orm] [bug] [py3k] Fixed issue where when assigning a collection to itself
  as a slice, the mutation operation would fail as it would first erase the
  assigned collection inadvertently. As an assignment that does not change the
  contents should not generate events, the operation is now a no-op. Note that
  the fix only applies to Python 3; in Python 2, the __setitem__ hook isn’t
  called in this case; __setslice__ is used instead which recreates the list
  item-by-item in all cases.
  * [orm] [bug] Fixed issue where by if the “begin” of a transaction failed at
  the Core engine/connection level, such as due to network error or database is</comment>
    <requestid>758623</requestid>
  </revision>
  <revision rev="73" vrev="1">
    <srcmd5>bec26437596db347a24e633dd96ba2bf</srcmd5>
    <version>1.3.13</version>
    <time>1580373223</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>767564</requestid>
  </revision>
  <revision rev="74" vrev="1">
    <srcmd5>817dd83997b9ce7cb1417d82fa43d323</srcmd5>
    <version>1.3.15</version>
    <time>1585265282</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.3.15:
  * Adjusted the error message emitted by :meth:`.Query.join` when a left hand
    side can't be located that the :meth:`.Query.select_from` method is the
    best way to resolve the issue.  Also, within the 1.3 series, used a
    deterministic ordering when determining the FROM clause from a given column
    entity passed to :class:`.Query` so that the same expression is determined
    each time.
  * Fixed regression in 1.3.14 due to :ticket:`4849` where a sys.exc_info()
    call failed to be invoked correctly when a flush error would occur. Test
    coverage has been added for this exception case.
  * Fixed bug where a CTE of an INSERT/UPDATE/DELETE that also uses RETURNING
    could then not be SELECTed from directly, as the internal state of the
    compiler would try to treat the outer SELECT as a DELETE statement itself
    and access nonexistent state.
  * Fixed regression caused in 1.3.13 by :ticket:`5056` where a refactor of the
    ORM path registry system made it such that a path could no longer be
    compared to an empty tuple, which can occur in a particular kind of joined
    eager loading path.   The &quot;empty tuple&quot; use case has been resolved so that
    the path registry is compared to a path registry in all cases; 
- Fix build for older distributions by buildrequiring a new-enough pytest

- Fix build without python2</comment>
    <requestid>787144</requestid>
  </revision>
  <revision rev="75" vrev="1">
    <srcmd5>f5c96fc2e74eae70986f3a341cefc82d</srcmd5>
    <version>1.3.16</version>
    <time>1586973158</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>793339</requestid>
  </revision>
  <revision rev="76" vrev="1">
    <srcmd5>10f7e78a5ea6f87a583de4970e842925</srcmd5>
    <version>1.3.17</version>
    <time>1590649759</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>808513</requestid>
  </revision>
  <revision rev="77" vrev="1">
    <srcmd5>94fb5b2528877470806d3812856b4cf4</srcmd5>
    <version>1.3.18</version>
    <time>1593546835</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>817631</requestid>
  </revision>
  <revision rev="78" vrev="1">
    <srcmd5>62e1e0b0e87e4dd2f87ed68ee22a8671</srcmd5>
    <version>1.3.19</version>
    <time>1598351926</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.3.19
 * Adjusted the workings of the Mapper.all_orm_descriptors()
 * The name of the virtual column used when using the AbstractConcreteBase
    and ConcreteBase classes can now be customized
 * Repaired an issue where the “ORDER BY” clause rendering a label name rather
    than a complete expression
 * The LookupError message will now provide the user with up to four possible
    values that a column is constrained to via the Enum
 * Fixed issue where the Connection.execution_options.schema_translate_map
    feature would not take effect when the Sequence.next_value() function
    for a Sequence were used in the Column.server_default parameter
    and the create table DDL were emitted.
 * Added a **kw argument to the DeclarativeMeta.__init__() method</comment>
    <requestid>828161</requestid>
  </revision>
  <revision rev="79" vrev="1">
    <srcmd5>9eda25f3c6fcf945b9d01b06d493d3ba</srcmd5>
    <version>1.3.20</version>
    <time>1603961311</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>842705</requestid>
  </revision>
  <revision rev="80" vrev="1">
    <srcmd5>20cd63c0bb0ef57d1afd7a98bb3d9951</srcmd5>
    <version>1.3.22</version>
    <time>1610736294</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>862340</requestid>
  </revision>
  <revision rev="81" vrev="2">
    <srcmd5>3f60bebba9cf6ad76245f46ae03d8ce8</srcmd5>
    <version>1.3.22</version>
    <time>1611348604</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>865059</requestid>
  </revision>
  <revision rev="82" vrev="3">
    <srcmd5>da75b7a8d1c7487207c774cd50ced327</srcmd5>
    <version>1.3.22</version>
    <time>1611928515</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>867555</requestid>
  </revision>
  <revision rev="83" vrev="1">
    <srcmd5>2517c5842487b5b275a0f60132670213</srcmd5>
    <version>1.3.23</version>
    <time>1614692584</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>874679</requestid>
  </revision>
  <revision rev="84" vrev="1">
    <srcmd5>f170133e30fca6cd6bbf338f2b5c6f90</srcmd5>
    <version>1.4.13</version>
    <time>1620840670</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>891235</requestid>
  </revision>
  <revision rev="85" vrev="1">
    <srcmd5>eb153b902310e4f012d6dbcf6f6ebc87</srcmd5>
    <version>1.4.15</version>
    <time>1621531392</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>893350</requestid>
  </revision>
  <revision rev="86" vrev="1">
    <srcmd5>7a35dc1a6f3af72d2f9b33784f585866</srcmd5>
    <version>1.4.20</version>
    <time>1626466353</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>905788</requestid>
  </revision>
  <revision rev="87" vrev="1">
    <srcmd5>e8870e8a6bb1e03faff787d1e4037575</srcmd5>
    <version>1.4.22</version>
    <time>1627587067</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>908428</requestid>
  </revision>
  <revision rev="88" vrev="1">
    <srcmd5>6355b0afed60c7c9c2715dbfb92b2f12</srcmd5>
    <version>1.4.25</version>
    <time>1635628383</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>927141</requestid>
  </revision>
  <revision rev="89" vrev="1">
    <srcmd5>5073ab96f534a986f87ee5f27ccf0b67</srcmd5>
    <version>1.4.26</version>
    <time>1636218785</time>
    <user>dimstar_suse</user>
    <comment>- update to version 1.4.26:
  * a repair to the workings of the update() statement in an ORM context when
    used with hybrid and composite attributes.
  * Fixes for the with_loader_criteria() ORM option
  * adjustments to the ORM Session interface to accommodate for new API features
  * some new legacy warnings for lesser used patterns with Query.join()
  * SQL / ORM fixes for the use case of selecting from repeated, non-labeled
    column expressions, typically the null() construct when used as a
    placeholder in a UNION statement.
  * For PostgreSQL, refinements to the &quot;expanding IN&quot; SQL feature when used
    with PostgreSQL ARRAY datatypes as well as fixes for the mostly
    PostgreSQL-specific any_() and all_() column methods.
  * For MySQL, repaired support for new behaviors in MariaDB 10.6
  * For SQL Server, reflection fixes and improvements for foreign key
    constraints as well table /view detection. 
</comment>
    <requestid>928869</requestid>
  </revision>
  <revision rev="90" vrev="1">
    <srcmd5>949460b2d73e92860dc7295b4369b27e</srcmd5>
    <version>1.4.27</version>
    <time>1639685953</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>940113</requestid>
  </revision>
  <revision rev="91" vrev="1">
    <srcmd5>014bc8bc3e2afd5dc533cf8b739c0e79</srcmd5>
    <version>1.4.29</version>
    <time>1640690771</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.4.29:
  - truly, just plenty of small bugfixes, see the changelog on the Web
    https://docs.sqlalchemy.org/en/14/changelog/changelog_14.html#change-1.4.29
- update to 1.4.28:
  Bugfixes, see 
  * https://docs.sqlalchemy.org/en/14/changelog/changelog_14.html#change-1.4.28 
</comment>
    <requestid>942807</requestid>
  </revision>
  <revision rev="92" vrev="1">
    <srcmd5>dd6b39ae35f8d393164db446b519c21a</srcmd5>
    <version>1.4.31</version>
    <time>1644188020</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>951392</requestid>
  </revision>
  <revision rev="93" vrev="1">
    <srcmd5>e4debe1ee848f5314297de32c95561b3</srcmd5>
    <version>1.4.32</version>
    <time>1647282911</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>961353</requestid>
  </revision>
  <revision rev="94" vrev="1">
    <srcmd5>8fc06810bb3ebfe05480fa476177a4f5</srcmd5>
    <version>1.4.35</version>
    <time>1649876642</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>969154</requestid>
  </revision>
  <revision rev="95" vrev="2">
    <srcmd5>e20e9d41a95d33469e33cd6dab43eac2</srcmd5>
    <version>1.4.35</version>
    <time>1650657193</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>971122</requestid>
  </revision>
  <revision rev="96" vrev="1">
    <srcmd5>c53a418c8efca3ef37b4f3e617b061ad</srcmd5>
    <version>1.4.36</version>
    <time>1651856291</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.4.36:
  * details on https://docs.sqlalchemy.org/en/14/changelog/changelog_14.html#change-1.4.36
  * Fixed regression where the change made for #7861, released in version
    1.4.33, that brought the Insert construct to be partially recognized as an
    ORM-enabled statement
  * Modified the DeclarativeMeta metaclass to pass cls.__dict__ into the
    declarative scanning process to look for attributes, rather than the
    separate dictionary passed to the type’s __init__() method
  * Fixed a memory leak in the C extensions which could occur when calling upon
    named members of Row when the member does not exist under Python 3
  * Added a warning regarding a bug which exists in the Result.columns() method
    when passing 0 for the index in conjunction with a Result that will return
    a single ORM entity, which indicates that the current behavior of
    Result.columns() is broken in this case as the Result object will yield scalar
    values and not Row objects
  * Fixed bug where ForeignKeyConstraint naming conventions using the
    referred_column_0 naming convention key would not work if the foreign key
    constraint were set up as a ForeignKey object rather than an explicit
    ForeignKeyConstraint object.</comment>
    <requestid>975001</requestid>
  </revision>
  <revision rev="97" vrev="1">
    <srcmd5>7638136b7037c9be622f5969a00b4d82</srcmd5>
    <version>1.4.37</version>
    <time>1655493610</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>982126</requestid>
  </revision>
  <revision rev="98" vrev="1">
    <srcmd5>b2a7989f6ffc8af3b0d6bc52a407fe01</srcmd5>
    <version>1.4.39</version>
    <time>1657617121</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>988284</requestid>
  </revision>
  <revision rev="99" vrev="1">
    <srcmd5>05cfa56d33a7b33fd7e1eff0cb59a2c1</srcmd5>
    <version>1.4.40</version>
    <time>1660834126</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>997497</requestid>
  </revision>
  <revision rev="100" vrev="1">
    <srcmd5>0049eb445fb6d531629c1d5ff3f30722</srcmd5>
    <version>1.4.41</version>
    <time>1663515106</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.4.41:
  * Fixed issue where use of the :func:`_sql.table` construct, passing a string
    for the :paramref:`_sql.table.schema` parameter, would fail to take the
    &quot;schema&quot; string into account when producing a cache key, thus leading to
    caching collisions if multiple, same-named :func:`_sql.table` constructs
    with different schemas were used.
  * Fixed event listening issue where event listeners added to a superclass
    would be lost if a subclass were created which then had its own listeners
    associated. The practical example is that of the :class:`.sessionmaker`
    class created after events have been associated with the
    :class:`_orm.Session` class.
  * Hardened the cache key strategy for the :func:`_orm.aliased` and
    :func:`_orm.with_polymorphic` constructs. While no issue involving actual
    statements being cached can easily be demonstrated (if at all), these two
    constructs were not including enough of what makes them unique in their
    cache keys for caching on the aliased construct alone to be accurate.
  * Fixed regression appearing in the 1.4 series where a joined-inheritance
    query placed as a subquery within an enclosing query for that same entity
    would fail to render the JOIN correctly for the inner query. The issue
    manifested in two different ways prior and subsequent to version 1.4.18
    (related issue :ticket:`6595`), in one case rendering JOIN twice, in the
    other losing the JOIN entirely. To resolve, the conditions under which
    &quot;polymorphic loading&quot; are applied have been scaled back to not be invoked
    for simple joined inheritance queries.
  * Fixed issue in :mod:`sqlalchemy.ext.mutable` extension where collection
    links to the parent object would be lost if the object were merged with
    :meth:`.Session.merge` while also passing :paramref:`.Session.merge.load`
    as False.
  * Fixed issue involving :func:`_orm.with_loader_criteria` where a closure
    variable used as bound parameter value within the lambda would not carry</comment>
    <requestid>1004264</requestid>
  </revision>
  <revision rev="101" vrev="1">
    <srcmd5>7ff564482373acf557921b1784033f43</srcmd5>
    <version>1.4.42</version>
    <time>1666871604</time>
    <user>dimstar_suse</user>
    <comment>- update to version 1.4.42:
  * orm
    + The Session.execute.bind_arguments dictionary is no longer
      mutated when passed to Session.execute() and similar; instead,
      it’s copied to an internal dictionary for state changes. Among
      other things, this fixes and issue where the “clause” passed to
      the Session.get_bind() method would be incorrectly referring to
      the Select construct used for the “fetch” synchronization
      strategy, when the actual query being emitted was a Delete or
      Update. This would interfere with recipes for “routing
      sessions”.  References: #8614
    + A warning is emitted in ORM configurations when an explicit
      remote() annotation is applied to columns that are local to the
      immediate mapped class, when the referenced class does not
      include any of the same table columns. Ideally this would raise
      an error at some point as it’s not correct from a mapping point
      of view.  References: #7094
    + A warning is emitted when attempting to configure a mapped class
      within an inheritance hierarchy where the mapper is not given
      any polymorphic identity, however there is a polymorphic
      discriminator column assigned. Such classes should be abstract
      if they never intend to load directly.  References: #7545
    + Fixed regression for 1.4 in contains_eager() where the “wrap in
      subquery” logic of joinedload() would be inadvertently triggered
      for use of the contains_eager() function with similar statements
      (e.g. those that use distinct(), limit() or offset()), which
      would then lead to secondary issues with queries that used some
      combinations of SQL label names and aliasing. This “wrapping” is
      not appropriate for contains_eager() which has always had the
      contract that the user-defined SQL statement is unmodified with</comment>
    <requestid>1030996</requestid>
  </revision>
  <revision rev="102" vrev="1">
    <srcmd5>06e985db2d6002984599c3e7d6398385</srcmd5>
    <version>1.4.45</version>
    <time>1673443973</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1057161</requestid>
  </revision>
  <revision rev="103" vrev="1">
    <srcmd5>bc38ccbb9a7f7b13c1a933d1538b0205</srcmd5>
    <version>1.4.46</version>
    <time>1676562925</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.4.46:
  * A new deprecation “uber warning” is now emitted at runtime the
    first time any SQLAlchemy 2.0 deprecation warning would
    normally be emitted, but the SQLALCHEMY_WARN_20 environment
    variable is not set.
  see https://docs.sqlalchemy.org/en/20/changelog/changelog_14.html#change-1.4.46</comment>
    <requestid>1065977</requestid>
  </revision>
  <revision rev="104" vrev="2">
    <srcmd5>722e7eb41a52e7c1f8298ae02beabc1c</srcmd5>
    <version>1.4.46</version>
    <time>1682193753</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1082024</requestid>
  </revision>
  <revision rev="105" vrev="1">
    <srcmd5>6803e41ba316a05160beee24baa8f59c</srcmd5>
    <version>2.0.12</version>
    <time>1683630431</time>
    <user>dimstar_suse</user>
    <comment>- update to SQLalchemy 2.0.x:
  * 1.x remains available as SQLAlchemy1
  Long list of changes, see
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.12
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.11
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.10
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.9
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.8
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.7
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.6
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.5
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.4
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.3
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.2
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.1</comment>
    <requestid>1085454</requestid>
  </revision>
  <revision rev="106" vrev="2">
    <srcmd5>d82eace9e63b4aa1a0c33ee38eadf0e6</srcmd5>
    <version>2.0.12</version>
    <time>1683991041</time>
    <user>dimstar_suse</user>
    <comment>- drop unnecessary mypy dependency</comment>
    <requestid>1086773</requestid>
  </revision>
  <revision rev="107" vrev="1">
    <srcmd5>73ec0115ced2a1b82472ecbb9081f899</srcmd5>
    <version>2.0.15</version>
    <time>1685476926</time>
    <user>dimstar_suse</user>
    <comment>- Switch documentation to be within the main package.
- Update to 2.0.15
  # orm
  * As more projects are using new-style “2.0” ORM querying, it’s
    becoming apparent that the conditional nature of “autoflush”,
    being based on whether or not the given statement refers to ORM
    entities, is becoming more of a key behavior. Up until now, the
    “ORM” flag for a statement has been loosely based around
    whether or not the statement returns rows that correspond to
    ORM entities or columns; the original purpose of the “ORM” flag
    was to enable ORM-entity fetching rules which apply
    post-processing to Core result sets as well as ORM loader
    strategies to the statement. For statements that don’t build on
    rows that contain ORM entities, the “ORM” flag was considered
    to be mostly unnecessary.
  * It still may be the case that “autoflush” would be better
    taking effect for all usage of Session.execute() and related
    methods, even for purely Core SQL constructs. However, this
    still could impact legacy cases where this is not expected and
    may be more of a 2.1 thing. For now however, the rules for the
    “ORM-flag” have been opened up so that a statement that
    includes ORM entities or attributes anywhere within, including
    in the WHERE / ORDER BY / GROUP BY clause alone, within scalar
    subqueries, etc. will enable this flag. This will cause
    “autoflush” to occur for such statements and also be visible
    via the ORMExecuteState.is_orm_statement event-level attribute.
    References: #9805
  # postgresql
  * Repaired the base Uuid datatype for the PostgreSQL dialect to</comment>
    <requestid>1089853</requestid>
  </revision>
  <revision rev="108" vrev="1">
    <srcmd5>2896fa1fcd67feebab837010748dcb15</srcmd5>
    <version>2.0.16</version>
    <time>1687379819</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.0.16:
  * Python 3.12 support
  * Fixed regression in the 2.0 series where the default value of
    validates.include_backrefs got changed to False for the
    validates() function
  * Unified the custom PostgreSQL operator definitions
  * Added support for PostgreSQL 10 NULLS NOT DISTINCT feature of
    unique indexes and unique constraints
  * Use proper precedence on PostgreSQL specific operators, such as
    @&gt;
  * see 
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.16</comment>
    <requestid>1093828</requestid>
  </revision>
  <revision rev="109" vrev="1">
    <srcmd5>857df66547647a5de39d3f27efd67462</srcmd5>
    <version>2.0.19</version>
    <time>1690370524</time>
    <user>anag+factory</user>
    <comment>- update to 2.0.19:
  * Various bugfixes, see
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.19</comment>
    <requestid>1100693</requestid>
  </revision>
  <revision rev="110" vrev="2">
    <srcmd5>cbb01fb5f9aa15a82e778d1e9c4c1169</srcmd5>
    <version>2.0.19</version>
    <time>1692379649</time>
    <user>anag+factory</user>
    <comment>- use generic Cython &gt;= 3 buildrequires</comment>
    <requestid>1103749</requestid>
  </revision>
  <revision rev="111" vrev="3">
    <srcmd5>943bf2daba22bedf7dea5eca54428604</srcmd5>
    <version>2.0.19</version>
    <time>1694113963</time>
    <user>anag+factory</user>
    <comment>- Update to 1.4.12 (bsc#1184038):
  * obsoletes sqlalchemy-7293b3dc0e9eb3dae84ffd831494b85355df8e73.patch
    in older dists</comment>
    <requestid>1109329</requestid>
  </revision>
  <revision rev="112" vrev="1">
    <srcmd5>d8a9e4958a4aea2eb6eb7d64033192a0</srcmd5>
    <version>2.0.21</version>
    <time>1696451430</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1114908</requestid>
  </revision>
  <revision rev="113" vrev="1">
    <srcmd5>1c3fdf3e7f5cad7d18b4165b26438746</srcmd5>
    <version>2.0.23</version>
    <time>1701206292</time>
    <user>anag+factory</user>
    <comment>- update to 2.0.23:
  * https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.23
  * https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.22

- use generic Cython &gt;= 3 buildrequires
  https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.19
  * see
    update/delete statements.
    producing the wrong ON clause for the joinedload.
    is common when using ORM Declarative mixins. References: #9773
  * https://docs.sqlalchemy.org/en/20/changelog/changelog_20.html#change-2.0.13
  see https://docs.sqlalchemy.org/en/20/changelog/changelog_14.html#change-1.4.46
  see https://docs.sqlalchemy.org/en/20/changelog/changelog_14.html#change-1.4.45
  Bugfixes, see
  * https://docs.sqlalchemy.org/en/14/changelog/changelog_14.html#change-1.4.28
  * see https://docs.sqlalchemy.org/en/14/changelog/changelog_14.html#change-1.4.27
    constraints as well table /view detection.
    Oracle, PostgreSQL, and MySQL.
  * bugfixes for various engines, see
    stringify correctly. Pull request courtesy Andrzej Bartosiński.
    the path registry is compared to a path registry in all cases;
      invalid configuration, would fail to raise if the
- add upstream fix_test_reflection.patch to fix tests with new sqlite
    + [orm] [bug] Fixed regression in 1.2.7 caused by #4228, which
      callable passed to a Session was assumed to be a subclass of
      Query with class method availability, as opposed to an
      arbitrary callable. In particular, the dogpile caching example
      illustrates query_cls as a function and not a Query subclass.
    + [orm] [bug] Fixed a long-standing regression that occurred in
      version 1.0, which prevented the use of a custom MapperOption</comment>
    <requestid>1129073</requestid>
  </revision>
</revisionlist>
