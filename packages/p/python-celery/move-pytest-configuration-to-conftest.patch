Index: celery-5.0.2/celery/contrib/pytest.py
===================================================================
--- celery-5.0.2.orig/celery/contrib/pytest.py
+++ celery-5.0.2/celery/contrib/pytest.py
@@ -13,16 +13,6 @@ NO_WORKER = os.environ.get('NO_WORKER')
 # Well, they're called fixtures....
 
 
-def pytest_configure(config):
-    """Register additional pytest configuration."""
-    # add the pytest.mark.celery() marker registration to the pytest.ini [markers] section
-    # this prevents pytest 4.5 and newer from issueing a warning about an unknown marker
-    # and shows helpful marker documentation when running pytest --markers.
-    config.addinivalue_line(
-        "markers", "celery(**overrides): override celery configuration for a test case"
-    )
-
-
 @contextmanager
 def _create_app(enable_logging=False,
                 use_trap=False,
Index: celery-5.0.2/t/unit/conftest.py
===================================================================
--- celery-5.0.2.orig/t/unit/conftest.py
+++ celery-5.0.2/t/unit/conftest.py
@@ -40,6 +40,16 @@ CASE_LOG_LEVEL_EFFECT = 'Test {0} modifi
 CASE_LOG_HANDLER_EFFECT = 'Test {0} modified handlers for the root logger'
 
 
+def pytest_configure(config):
+    """Register additional pytest configuration."""
+    # add the pytest.mark.celery() marker registration to the pytest.ini [markers] section
+    # this prevents pytest 4.5 and newer from issueing a warning about an unknown marker
+    # and shows helpful marker documentation when running pytest --markers.
+    config.addinivalue_line(
+        "markers", "celery(**overrides): override celery configuration for a test case"
+    )
+
+
 @pytest.fixture(scope='session')
 def celery_config():
     return {
