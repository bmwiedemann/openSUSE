<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>f8265174e26884cce937279b7364e013</srcmd5>
    <version>0.5.0</version>
    <time>1535538389</time>
    <user>dimstar_suse</user>
    <comment>- Switch to github tarball to get tests
- Run the tests
- Initial release v0.5.0
</comment>
    <requestid>631929</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>8e2020361ab6eb5e75f175228f2749de</srcmd5>
    <version>0.10.0</version>
    <time>1559837890</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.10.0:
  * Various tests and support updates
- Update requirements to match up upstream</comment>
    <requestid>707880</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>c471ab8eb2ad4b5eb564c768abf20285</srcmd5>
    <version>0.11.0</version>
    <time>1563914455</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.11.0:
  * End of Python 3.4 support (#136)
  * Add support for one-of with any type (#133)
  * Modify FlaskOpenAPIRequest to accommodate path variables (#141)
  * Primitive types unmarshallers (#138)
  * attr errors hashable fix (#143)
  * Parameters on path item object support (#144)</comment>
    <requestid>717909</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>39a5a0473b3de4286879cab85876f30d</srcmd5>
    <version>0.11.1</version>
    <time>1568379474</time>
    <user>lnussel_factory</user>
    <comment>- Update to 0.11.1:
  * Path item parameter override (#145)
  * Separate cast and unmarshal (#156)</comment>
    <requestid>730065</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>fa6c7eadfcbafb5a03c3360ca1e2738d</srcmd5>
    <version>0.12.0</version>
    <time>1569523607</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.12.0:
  * OAS validation with JSONSchema (#157)</comment>
    <requestid>733464</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>9cfb2f69d1590697f43198c16d1d18e8</srcmd5>
    <version>0.12.0</version>
    <time>1578606823</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>762508</requestid>
  </revision>
  <revision rev="7" vrev="3">
    <srcmd5>04c7d9f22552a494c54d90090e8e0493</srcmd5>
    <version>0.12.0</version>
    <time>1578675083</time>
    <user>dimstar_suse</user>
    <comment>- Properly conditionalize the python2 drop so it lets us backport
  the packages</comment>
    <requestid>762860</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>3be026dbca6338b8cedc3d20ab1d8ddf</srcmd5>
    <version>0.13.3</version>
    <time>1585667785</time>
    <user>dimstar_suse</user>
    <comment>- version update to 0.13.3
  * lot of changes, see
    https://github.com/p1c2u/openapi-core/releases</comment>
    <requestid>790004</requestid>
  </revision>
  <revision rev="9" vrev="2">
    <srcmd5>df5c22145f23a58b9ff89e58eef8e54e</srcmd5>
    <version>0.13.3</version>
    <time>1591101350</time>
    <user>dimstar_suse</user>
    <comment>- Skip one test so we can use pytest5</comment>
    <requestid>810161</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>5ff56fe02ffa78d287a564dedb94062f</srcmd5>
    <version>0.14.2</version>
    <time>1629706071</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>912672</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>9be3da2183d0a8ea86f2d51aca2e6738</srcmd5>
    <version>0.16.0</version>
    <time>1665034902</time>
    <user>RBrownFactory</user>
    <comment>- Update to 0.16.0:
  * Switch to jsonschema-spec #416
  * Use auto-detect validator proxy #418
  * OpenAPI 3.1 support + Auto-detect proxies and request / response
    validator protocols #419
  * Add py.typed to mark package as supporting typing #420
  * Refuse to cast str or bytes to array #421
  * x-model extension import model class #422
  * Add deepObject support #379
  * Add anyOf support #423
  * Separate werkzeug support #426
  * Starlette support #427
  * Parameter deserialize complex scenario support (#329)
  * Response headers support (#332)
  * Response headers support for contrib (#333)
  * Drop python 2.7 support (#335 #344 #351)
  * Drop python 3.5 support (#339)
  * Drop python 3.6 support #383
  * Add python 3.10 support #383
  * Falcon2 support drop (#353)
  * Django2 support drop (#358)
  * Support basic re_path for Django integration (#337)
  * unused NoValue type removed (#340)
  * attrs remove and use dataclasses backport for python 3.6 (#345)
  * Request validation parameters dataclass (#346)
  * Handle missing MIME type in MediaTypeFinder (#371)
  * Limit openapi dependencies upper bounds #386
  * switch to pathable #389
  * Get rid of create_spec shortcut #393
  * Request and Response protocols #407</comment>
    <requestid>1008090</requestid>
  </revision>
  <revision rev="12" vrev="2">
    <srcmd5>aafedbfa73d4fd486e18df8efab914a3</srcmd5>
    <version>0.16.0</version>
    <time>1665185091</time>
    <user>RBrownFactory</user>
    <comment></comment>
    <requestid>1008633</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>a84e03c3f4a9e9ac906baab62f9a97b8</srcmd5>
    <version>0.16.1</version>
    <time>1670058222</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1039660</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>f25d760761c4b2ef2034041cb75b4f8a</srcmd5>
    <version>0.17.2</version>
    <time>1687272527</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.17.2:
  * Integrations: Add support for aiohttp.web #571
  * Include tests in sdist archives #537
  * add python 3.11 support #538
  * shortcuts high level public api expose #465
  * ParametersError context property deprecated #462
  * Spec.create deprecated #463
  * Validators refactor #457
  * Webhooks support #470
  * Rename UnmarshalContext to ValidationContext #472
  * Fix PATH_PARAMETER_PATTERN for DRF default value pattern. #468
  * Fix falcon response data none #471
  * Shortcuts backward compatible #482
  * RequestValidator and ResponseValidator backward compatibility #487
  * Fix flask decorator function return other types #489
  * Fix integration Request Response factories check types fix #490
  * Fix Requests request dont allow fragments #491
  * Fix openapi packages update and tests #498
  * unmarshallers integration tests #497
  * Unmarshallers and validators refactor #508
  * Shortcuts refactor #517
  * Media type deserializers refactor #518
  * validators public api expose #455
  * allow openapi-schema-validator 0.4 #458
  * better unmarshaller finders with refactor #447
  * werkzeug flask root path fix #449
  * additionalProperties without schema should allow null. #444
- Switch back to PyPI tarball.</comment>
    <requestid>1093845</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>86e867225696008b515681b98ab5be1a</srcmd5>
    <version>0.16.6</version>
    <time>1687379960</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1094230</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>b95931ca030ed97f193a380d15df7095</srcmd5>
    <version>0.18.0</version>
    <time>1690278695</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.18.0:
  * Compatibility with jsonschema 4.18, jsonschema-spec 0.2,
    openapi-schema-validator 0.6 and openapi-spec-validator 0.6 #597
  * spec_url parameter of Spec.from_dict is deprecated. Use base_uri
    instead. #597
  * ref_resolver_handlers parameter of Spec.from_dict is deprecated. Use
    handlers instead. #597
  * Drop python 3.7 support #595
  * Format validators ignore other types and pass (in accordance with the
    specification) #597
  * shortcuts high level public api expose #465
  * ParametersError context property deprecated #462
  * Spec.create deprecated #463
  * Validators refactor #457
  * Webhooks support #470
  * Rename UnmarshalContext to ValidationContext #472
  * Fix PATH_PARAMETER_PATTERN for DRF default value pattern. #468
  * Fix falcon response data none #471
  * Shortcuts backward compatible #482
  * RequestValidator and ResponseValidator backward compatibility #487
  * Fix flask decorator function return other types #489
  * Fix integration Request Response factories check types fix #490
  * Fix Requests request dont allow fragments #491
  * Fix openapi packages update and tests #498
  * unmarshallers integration tests #497
  * Unmarshallers and validators refactor #508
  * Shortcuts refactor #517
  * Media type deserializers refactor #518
  * Schema unmarshalling/validation returns Invalid* exception (InvalidData,
    InvalidParameter, InvalidRequestBody, InvalidHeader). Use __cause__</comment>
    <requestid>1100539</requestid>
  </revision>
  <revision rev="17" vrev="2">
    <srcmd5>cd9420a524a0d3f951e475a6824bba8b</srcmd5>
    <version>0.18.0</version>
    <time>1690743481</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1101373</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>4f83c8ee09013d5f46ed22589ddc7316</srcmd5>
    <version>0.18.1</version>
    <time>1695758477</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1113288</requestid>
  </revision>
</revisionlist>
