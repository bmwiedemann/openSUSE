From 1e818af09e35c9cf9cefdfed3e251fc57502e877 Mon Sep 17 00:00:00 2001
From: Ian Thomas <ianthomas23@gmail.com>
Date: Tue, 14 Sep 2021 11:26:19 +0100
Subject: [PATCH 1/3] Fix Ragged tests

---
 datashader/datatypes.py            |  6 +++--
 datashader/tests/test_datatypes.py | 41 +++++++++++++++++++++++++++---
 2 files changed, 41 insertions(+), 6 deletions(-)

diff --git a/datashader/datatypes.py b/datashader/datatypes.py
index 9a8f8488..94e4b1d3 100644
--- a/datashader/datatypes.py
+++ b/datashader/datatypes.py
@@ -442,7 +442,7 @@ def __getitem__(self, item):
                 # Check mask length is compatible
                 if len(item) != len(self):
                     raise IndexError(
-                        "boolean mask length ({}) doesn't match array length ({})"
+                        "Boolean index has wrong length: {} instead of {}"
                         .format(len(item), len(self))
                     )
 
@@ -584,7 +584,9 @@ def take(self, indices, allow_fill=False, fill_value=None):
                         for i in indices]
         else:
             if len(self) == 0 and len(indices) > 0:
-                raise IndexError("cannot do a non-empty take")
+                raise IndexError(
+                    "cannot do a non-empty take from an empty axes"
+                )
 
             sequence = [self[i] for i in indices]
 
diff --git a/datashader/tests/test_datatypes.py b/datashader/tests/test_datatypes.py
index dbf2e2bd..f8b7ef7e 100644
--- a/datashader/tests/test_datatypes.py
+++ b/datashader/tests/test_datatypes.py
@@ -3,7 +3,6 @@
 import numpy as np
 import pandas as pd
 import pandas.tests.extension.base as eb
-import pandas.util.testing as tm
 
 from datashader.datatypes import RaggedDtype, RaggedArray
 
@@ -703,6 +702,13 @@ def test_item(self, data):
         with pytest.raises(ValueError, match=msg):
             s.item()
 
+    @pytest.mark.skip(
+        reason="Ellipsis not supported in RaggedArray.__getitem__"
+    )
+    def test_getitem_ellipsis_and_slice(self, data):
+        pass
+
+
 class TestRaggedGroupby(eb.BaseGroupbyTests):
     @pytest.mark.parametrize('op', [
         lambda x: 1,
@@ -727,7 +733,18 @@ def test_groupby_extension_apply(self, data_for_grouping, op):
     @pytest.mark.skip(reason="agg not supported")
     def test_groupby_agg_extension(self):
         pass
-        
+
+    @pytest.mark.skip(reason="numpy.ndarray unhashable")
+    def test_groupby_extension_transform(self):
+        pass
+
+    @pytest.mark.skip(reason="agg not supported")
+    def test_groupby_extension_agg(self):
+        pass
+
+    @pytest.mark.skip(reason="not supported")
+    def test_groupby_extension_apply(self):
+        pass
 
 
 class TestRaggedInterface(eb.BaseInterfaceTests):
@@ -743,7 +760,7 @@ def test_array_interface(self, data):
             if np.isscalar(a1):
                 assert np.isnan(a1) and np.isnan(a2)
             else:
-                tm.assert_numpy_array_equal(a2, a1)
+                np.testing.assert_array_equal(a1, a2)
 
     # # NotImplementedError: 'RaggedArray' does not support __setitem__
     @pytest.mark.skip(reason="__setitem__ not supported")
@@ -813,6 +830,10 @@ def test_combine_first(self):
     def test_searchsorted(self):
         pass
 
+    @pytest.mark.skip(reason="ragged cannot be used as categorical")
+    def test_sort_values_frame(self):
+        pass
+
 
 class TestRaggedPrinting(eb.BasePrintingTests):
     pass
@@ -830,6 +851,18 @@ def test_fillna_series(self):
     def test_fillna_frame(self):
         pass
 
+    @pytest.mark.skip(reason="Can't fill with nested sequences")
+    def test_fillna_limit_pad(self):
+        pass
+
+    @pytest.mark.skip(reason="Can't fill with nested sequences")
+    def test_fillna_limit_backfill(self):
+        pass
+
+    @pytest.mark.skip(reason="Can't fill with nested sequences")
+    def test_fillna_series_method(self):
+        pass
+
 
 class TestRaggedReshaping(eb.BaseReshapingTests):
     @pytest.mark.skip(reason="__setitem__ not supported")
@@ -843,4 +876,4 @@ def test_transpose(self):
     @pytest.mark.skip(reason="transpose with numpy array elements seems not supported")
     def test_transpose_frame(self):
         pass
-    
+

From 4de94d86881ddcb7febfb5d1d45554fa16baf3ac Mon Sep 17 00:00:00 2001
From: Ian Thomas <ianthomas23@gmail.com>
Date: Wed, 29 Sep 2021 10:44:26 +0100
Subject: [PATCH 2/3] Remove duplicated test function

---
 datashader/tests/test_datatypes.py | 23 ++---------------------
 1 file changed, 2 insertions(+), 21 deletions(-)

diff --git a/datashader/tests/test_datatypes.py b/datashader/tests/test_datatypes.py
index f8b7ef7e..0f142849 100644
--- a/datashader/tests/test_datatypes.py
+++ b/datashader/tests/test_datatypes.py
@@ -710,26 +710,6 @@ def test_getitem_ellipsis_and_slice(self, data):
 
 
 class TestRaggedGroupby(eb.BaseGroupbyTests):
-    @pytest.mark.parametrize('op', [
-        lambda x: 1,
-        lambda x: [1] * len(x),
-        # # Op below causes a:
-        # # ValueError: Names should be list-like for a MultiIndex
-        # lambda x: pd.Series([1] * len(x)),
-        lambda x: x,
-    ], ids=[
-        'scalar',
-        'list',
-        # 'series',
-        'object'])
-    def test_groupby_extension_apply(self, data_for_grouping, op):
-        df = pd.DataFrame({"A": [1, 1, 2, 2, 3, 3, 1, 4],
-                           "B": data_for_grouping})
-        df.groupby("B").apply(op)
-        df.groupby("B").A.apply(op)
-        df.groupby("A").apply(op)
-        df.groupby("A").B.apply(op)
-
     @pytest.mark.skip(reason="agg not supported")
     def test_groupby_agg_extension(self):
         pass
@@ -742,7 +722,8 @@ def test_groupby_extension_transform(self):
     def test_groupby_extension_agg(self):
         pass
 
-    @pytest.mark.skip(reason="not supported")
+    @pytest.mark.skip(
+        reason="numpy.ndarray unhashable and buffer wrong number of dims")
     def test_groupby_extension_apply(self):
         pass
 

From d20b606bb58e4bfcad2f678c891f43188833c4ee Mon Sep 17 00:00:00 2001
From: "James A. Bednar" <jbednar@users.noreply.github.com>
Date: Wed, 29 Sep 2021 11:37:45 -0500
Subject: [PATCH 3/3] Update datashader/datatypes.py

---
 datashader/datatypes.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/datashader/datatypes.py b/datashader/datatypes.py
index 94e4b1d3..43fd5aa9 100644
--- a/datashader/datatypes.py
+++ b/datashader/datatypes.py
@@ -585,7 +585,7 @@ def take(self, indices, allow_fill=False, fill_value=None):
         else:
             if len(self) == 0 and len(indices) > 0:
                 raise IndexError(
-                    "cannot do a non-empty take from an empty axes"
+                    "Cannot do a non-empty take from an empty axis"
                 )
 
             sequence = [self[i] for i in indices]
