<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>81fcd5cde905e58b8a17cbc9d36c4ea5</srcmd5>
    <version>6.1.1</version>
    <time>1625867796</time>
    <user>dimstar_suse</user>
    <comment>newest SIP version. python-sip will be a metapackage.</comment>
    <requestid>904264</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>f72617ec24b5e4f077e5455d8ad53810</srcmd5>
    <version>6.1.1</version>
    <time>1632173510</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>918872</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>d8ceb74bb7d1bfb95fb47d2e88ddb3d0</srcmd5>
    <version>6.2.0</version>
    <time>1633723484</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>923124</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>fc3b46ffe028babfc999a4d31de1fa83</srcmd5>
    <version>6.3.1</version>
    <time>1634754184</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>926280</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>f9748176359fbef30780a406e2c624a2</srcmd5>
    <version>6.4.0</version>
    <time>1635717336</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>928167</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>1ba4f8de047ba299c9e42f42c7f14340</srcmd5>
    <version>6.5.0</version>
    <time>1638997702</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 6.5.0
  * Added 'UIntEnum' as a value of the /BaseType/ enum annotation
    to support enum.IntEnum types with unsigned values.
  * The latest version of ABI v13 is v13.2.0.
  * Bug fixes.
</comment>
    <requestid>935717</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>759f2eaccae2590fb1a67c3669fd8022</srcmd5>
    <version>6.5.1</version>
    <time>1644435501</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 6.5.1
  * Added the --no-compile command line option to sip-build.
  * Added the --no-version-info command line option to sip-build.
  * The latest version of ABI v13 is v13.2.1.
  * The latest version of ABI v12 is v12.9.1.
  * Bug fixes.
</comment>
    <requestid>951796</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>8aecb13513a17ac2222ca54364cc0822</srcmd5>
    <version>6.6.2</version>
    <time>1656145423</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 6.6.2
  * Enums created with ABI v13 now handle unexpected values by
    creating corresponding pseudo-members.
  * Any config settings passed by a PEP 571 frontend are now used.
  * The 'array' type is now accessible from the sip module.
  * 'array' can now create one dimensional arrays of wrapped types
    that can be modified in situ.
  * Arguments using the /Array/ (and /ArraySize/) annotations will
    now accept 'array' objects of the corresponding type.
  * The latest version of ABI v13 is v13.4.0.
  * The latest version of ABI v12 is v12.11.0.
  * Bug fixes.
- Update to version 6.6.1
  * Python v3.6 is no longer supported.
  * The .sip file parser (created using flex and bison) has been
    replaced with a pure Python implementation using PLY.
  * The latest version of ABI v13 is v13.3.1.
  * The latest version of ABI v12 is v12.10.1.
</comment>
    <requestid>984595</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>5c93df3d7594d3f53f5076d781944992</srcmd5>
    <version>6.7.2</version>
    <time>1665668400</time>
    <user>dimstar_suse</user>
    <comment>- Update to 6.7.2
  * Bug fixes
  * Refactored the structure to create the outputs module.
  * The Python .api generation now produces the same results as the
    old C++ code
  * Established a pattern for class-based object formatters.
  * Fixed a regression in instantiating class templates.
- Update to version 6.7.1
  * Bug fixes
- Drop sip-6.7.0-zipstrict.patch
- Update to version 6.7.0
  * Added the /NoAssignmentOperator/, /NoCopyCtor/ and
    /NoDefaultCtor/ mapped type annotations.
  * Added the --generator-version command line option to
    sip-distinfo.
  * Added the 'generator_version' argument to
    Project.get_sip_distinfo_command_line().
  * The resolver/transform stage has been replaced with a pure
    Python implementation.
  * Bug fixes.
- Add sip-6.7.0-zipstrict.patch
  * https://www.riverbankcomputing.com/pipermail/pyqt/2022-October/044927.html
</comment>
    <requestid>1010240</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>b6464684590cff1b3a90dcc4fd7d0dcf</srcmd5>
    <version>6.7.3</version>
    <time>1667389586</time>
    <user>dimstar_suse</user>
    <comment>- Add sip-hg2860-fixprop.patch
  * https://www.riverbankcomputing.com/hg/sip/rev/2157850bf018
  * https://www.riverbankcomputing.com/pipermail/pyqt/2022-October/045021.html
- Update to 6.7.3
  * This is a very minor bug-fix release but also continues the
    progress of porting the C code to Python.
</comment>
    <requestid>1032704</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>ef779ef8a61cf0a43c0c9016ea6a7507</srcmd5>
    <version>6.7.5</version>
    <time>1673650928</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1058065</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>fdf6d35c446f339941986d526207318a</srcmd5>
    <version>6.7.7</version>
    <time>1676036019</time>
    <user>dimstar_suse</user>
    <comment>- Update to 6.7.7
  * bug-fix release
  * Refactored the handling of composite classes so that they are
    populated properly.
  * Changes to the XML generation to reduce differences to earlier
    versions.
- Revert to 6.7.5
  * breaks Qt import in PyQt5
  * https://www.riverbankcomputing.com/pipermail/pyqt/2023-January/045137.html
- Update to 6.7.6
  * Minor bug-fix release
  * The latest version of ABI v13 is v13.4.1.
  * The latest version of ABI v12 is v12.11.1.
  * Significantly reduced the memory requirements.
</comment>
    <requestid>1063977</requestid>
  </revision>
  <revision rev="13" vrev="2">
    <srcmd5>54ba5dd2bdccc7d2a9c9f1f5dc802b79</srcmd5>
    <version>6.7.7</version>
    <time>1682368248</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1082295</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>250a165465a3bf44775ffee38505c792</srcmd5>
    <version>6.7.9</version>
    <time>1682691727</time>
    <user>dimstar_suse</user>
    <comment>- Update to 6.7.9
  * The latest version of ABI v13 is v13.5.1.
  * The latest version of ABI v12 is v12.12.1.
  * Bug fixes.
- Release v6.7.8 4th April 2023
  * The latest version of ABI v13 is v13.5.0.
  * The latest version of ABI v12 is v12.12.0.
  * The 'wheel-includes' value of the 'tool.sip.project' section of
    pyproject.toml now supports the use of absolute file patterns.
  * Replaced the use of the 'toml' package with the standard library 'tomllib'
    package for Python v3.11 and later, and the 'tomli' package for earlier
    versions of Python.
  * Bug fixes.
</comment>
    <requestid>1083092</requestid>
  </revision>
  <revision rev="15" vrev="2">
    <srcmd5>9bca75c341f757a2aef37abe0b4a9a08</srcmd5>
    <version>6.7.9</version>
    <time>1685294481</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1089147</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>7b3925500a6367d866b584c0e18391e1</srcmd5>
    <version>6.7.11</version>
    <time>1696014784</time>
    <user>anag+factory</user>
    <comment>- Update to 6.7.11
  * Bug fixes.
- Release 6.7.10
  * Added the --minimum-glibc-version command line option to
    sip-wheel.
  * The latest version of ABI v13 is v13.5.2.
  * The latest version of ABI v12 is v12.12.2.
  * Bug fixes.</comment>
    <requestid>1114147</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>185e3c05dc7560008aa84d347b0c9067</srcmd5>
    <version>6.7.12</version>
    <time>1697488389</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1117890</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>a3c6e4378b5705cb9b1ddfa78b39df5d</srcmd5>
    <version>6.8.2</version>
    <time>1706305568</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1141677</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>b7a0351530f1c7a78f2f415c335046da</srcmd5>
    <version>6.8.3</version>
    <time>1712673980</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1166353</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>07b2f1542951ff5bb37f5cd12a0e3106</srcmd5>
    <version>6.8.6</version>
    <time>1729183105</time>
    <user>anag+factory</user>
    <comment>PyQt6 for 6.8. Tested on 15.6 by using retext + webengine. Works! (forwarded request 1208396 from favogt)</comment>
    <requestid>1208406</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>2cfccdc740e7a93801462541e9eca2fd</srcmd5>
    <version>6.9.1</version>
    <time>1736676604</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1236048</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>68bbb6f078bbd5ba0fac3a78745640fd</srcmd5>
    <version>6.12.0</version>
    <time>1750278511</time>
    <user>anag_factory</user>
    <comment>- Update to 6.12.0
  * Support was added for C++11 enum base types. At the moment this
    is limited to base types no larger than ints. Prior to this
    support, all enums were assumed to be int which breaks on
    big-endian systems. Resolves #75
  * Fixed a regression in v6.11.0 affecting class names as template
    arguments. Resolves #77
- Release v6.11.1
  * The PEP 517 build_wheel() hook has been fixed after it
    regressed in v6.11.0. Resolves #73
  * The handling of calls where self is passed as an argument in
    ABI v13 was fixed. Resolves #74
- Release 6.11.0
  * Added the /Movable/ mapped type annotation. When the /Movable/
    annotation is specified for a mapped type, values of that type
    are wrapped in calls to std::move() when passing them as
    arguments to a C++ callable. In addition the /Transfer/
    argument annotation is automatically applied. Resolves #60
  * Support for template arguments in super-classes. It is now
    possible to invoke a class template as a super-class in a class
    template. Resolves #12
  * Determining the version of the limited API to use. The version
    of the limited API to use is now taken from the requires-python
    field of the metadata in a project's pyproject.toml file. If
    this is not specified then (as with previous versions of SIP)
    the version of the oldest supported version of Python is used.
    Resolves #58
  * %Docstring support for namespaces. The %Docstring directive can
    now be specified for C++ namespaces. Resolves #11
  * Support for operator~() in the global scope. operator~() can
    now be specified in the global scope. Resolves #9
  * Use consistent timestamps when creating wheel files. The value
    of the environment variable SOURCE_DATE_EPOCH, if defined, will
    be used as the timestamp for all files included in a wheel.
    This ensures wheel building is repeatable. Pull request #70
  * Bindings support for PEP 639. The project section of
    pyproject.toml files may now use license to specify a valid
    SPDX license expression. license-files, if specified, is a list
    of glob patterns describing the files containing licensing
    information. The old style of license is deprecated. The
    metadata format of the generated PKG-INFO file of an sdist will
    normally be v2.4. If the deprecated form of license is used in
    pyproject.toml then it will be v2.2. License files will be
    installed in the licenses sub-directory of the generated
    .dist-info directory of a wheel. packaging v24.2 is now
    required. Resolves #69
  * Normalised wheel names. The names of wheel files (both those
    generated by sip-wheel and indirectly from the sdists created
    by sip-module) now conform to current PyPA standards. Resolves
    #68
  * pyproject.toml now conforms to PEP 639 The licensing
    information in SIP's pyproject.toml now conforms to PEP 639.
    This means that the minimum setuptools version is v77.
  ## Bug fixes
  * The handling of unknown %Timeline tags in %If directives has
    been fixed. An unknown tag is assumed to refer to a later
    version than all the known tags. Therefore (unknown -) will
    always be false, and (- unknown) will always be true.
  * Generated code will not contain digraphs. This usually affects
    C++ extensions being built with the default setuptools builder.
  * Long deprecation messages are now handled correctly. Pull
    request #67
- Update to 6.10.0
  * Introspection of the sip module ABI version
  * SIP_ABI_VERSION has been added as a module attribute of the sip
    module. This is an integer that represents the ABI version that
    the module implements as a 3 part hexadecimal number.
  * This has been implemented in ABIs v12.17 and v13.10. Resolves
    #62
  * sip-module support for older ABI versions. The ability of
    sip-module to generate sdists for older ABI versions has been
    restored. The oldest that can be generated are v12.9 and v13.1
    which are the oldest non-deprecated versions. The documentation
    now contains brief histories of these versions. Resolves #61
  * Default ABI version. The default minor ABI version to use is
    now the latest minor version for a particular major version
    (rather than 0 as it was previously). Resolves #63
  * Specify the ABI version on the command line. The --abi-version
    command line option has been added to sip-build, sip-install
    and sip-wheel to specify the ABI version of the sip module to
    generate code for. Resolves #64
  * Added the %MinimumABIVersion directive. The %MinimumABIVersion
    directive is used to specify the minimum sip module ABI to
    target in order to ensure that all calls to the public API from
    handwritten code are available. A consequence of this change is
    that passing string values to the /Deprecated/ annotation no
    longer requires an ABI version that supports them to be
    targeted. If the targeted ABI version does not support them
    they are simply ignored. Resolves #65
  * Escaping special characters in string annotations. The value of
    a string annotation uses the ; and : characters to allow
    platform- and feature-specific values to be defined. These
    special characters can now be escaped using a leading \\. This
    capability has now been documented. Resolves #59
  ## Bug fixes
  * The license designator in setup.py for the latest versions of
    the sip module are now correctly specified as BSD-2-Clause.
  * The code generation has been fixed for classes created by
    instantiating mapped type templates using a typedef with the
    /NoTypeName/ annotation. Resolves #66
</comment>
    <requestid>1284341</requestid>
  </revision>
</revisionlist>
