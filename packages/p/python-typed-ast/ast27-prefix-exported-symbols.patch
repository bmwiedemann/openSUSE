From d3c9e7bf235304ce3d92b44e35f04a50b4a855cb Mon Sep 17 00:00:00 2001
From: hauntsaninja <>
Date: Wed, 30 Dec 2020 01:26:23 +0000
Subject: [PATCH] ast27: prefix exported symbols

Fixes #151
---
 ast27/Include/asdl.h | 8 ++++----
 ast27/Python/asdl.c  | 4 ++--
 ast27/Python/ast.c   | 6 +++---
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/ast27/Include/asdl.h b/ast27/Include/asdl.h
index 40df222..571d072 100644
--- a/ast27/Include/asdl.h
+++ b/ast27/Include/asdl.h
@@ -28,11 +28,11 @@ typedef struct {
 } asdl_int_seq;
 
 #if PY_MINOR_VERSION > 3
-#define asdl_seq_new _Py_asdl_seq_new
-#define asdl_int_seq_new _Py_asdl_int_seq_new
+#define asdl_seq_new _Ta27_asdl_seq_new
+#define asdl_int_seq_new _Ta27_asdl_int_seq_new
 #else
-#define _Py_asdl_seq_new asdl_seq_new
-#define _Py_asdl_int_seq_new asdl_int_seq_new
+#define _Ta27_asdl_seq_new asdl_seq_new
+#define _Ta27_asdl_int_seq_new asdl_int_seq_new
 #endif
 asdl_seq *asdl_seq_new(Py_ssize_t size, PyArena *arena);
 asdl_int_seq *asdl_int_seq_new(Py_ssize_t size, PyArena *arena);
diff --git a/ast27/Python/asdl.c b/ast27/Python/asdl.c
index 2bea345..8ea3c5b 100644
--- a/ast27/Python/asdl.c
+++ b/ast27/Python/asdl.c
@@ -2,7 +2,7 @@
 #include "asdl.h"
 
 asdl_seq *
-_Py_asdl_seq_new(Py_ssize_t size, PyArena *arena)
+_Ta27_asdl_seq_new(Py_ssize_t size, PyArena *arena)
 {
     asdl_seq *seq = NULL;
     size_t n;
@@ -33,7 +33,7 @@
 }
 
 asdl_int_seq *
-_Py_asdl_int_seq_new(Py_ssize_t size, PyArena *arena)
+_Ta27_asdl_int_seq_new(Py_ssize_t size, PyArena *arena)
 {
     asdl_int_seq *seq = NULL;
     size_t n;
diff --git a/ast27/Python/ast.c b/ast27/Python/ast.c
index 42f6056..367973c 100644
--- a/ast27/Python/ast.c
+++ b/ast27/Python/ast.c
@@ -292,7 +292,7 @@
             ch = CHILD(n, NCH(n) - 1);
             REQ(ch, ENDMARKER);
             num = NCH(ch);
-            type_ignores = _Py_asdl_seq_new(num, arena);
+            type_ignores = _Ta27_asdl_seq_new(num, arena);
             if (!type_ignores)
                 goto error;
 
@@ -368,7 +368,7 @@
                         num++;
                 }
 
-                argtypes = _Py_asdl_seq_new(num, arena);
+                argtypes = _Ta27_asdl_seq_new(num, arena);
 
                 j = 0;
                 for (i = 0; i < NCH(ch); i++) {
@@ -381,7 +381,7 @@
                 }
             }
             else
-                argtypes = _Py_asdl_seq_new(0, arena);
+                argtypes = _Ta27_asdl_seq_new(0, arena);
 
             ret = ast_for_expr(&c, CHILD(n, NCH(n) - 1));
             if (!ret)

