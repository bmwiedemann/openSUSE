-------------------------------------------------------------------
Sun Jan  3 21:02:37 UTC 2021 - Benjamin Greiner <code@bnavigator.de>

- Update to version 0.3.16
  Added
  * Support PEP-604 style unions in decorator annotations #429
  * Gathering exports in augmented assignment statements #426
  Fixed
  * Don't allow out of order accesses in the global scope #431
  * Handle scope ordering in For statements #430
  * Fix for not parsing subscripts such as cast()["from"] #428
  * Walrus operator's left hand side now has STORE expression 
    context #433
- Changes in 0.3.15
  Added
  * Support Named Unicode Characters and yield in f-strings #424
  Fixed
  * Assignment/access ordering in comprehensions #423
  * Referencing of remaining objects in cast() #422 
- refresh skip_failing_test.patch

-------------------------------------------------------------------
Sun Jan  3 16:38:46 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Add skip_failing_test.patch skipping test_ordering
  (libcst.metadata.tests.test_scope_provider.ScopeProviderTest) which
  doesn't work with Python 3.6 on i586 (gh#Instagram/LibCST#442).

-------------------------------------------------------------------
Sat Nov 21 00:16:24 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update to version 0.3.14
  Fixed
  * Fix is_annotation for types used in classdef base and assign
    value [#406]
  * Visit concatenated f-strings during scope analysis [#411]
  * Correct handling of walrus operator in function args [#417]
  * Allow generator expressions in f-strings [#419]
  * Keep track of assignment/access ordering during scope analysis
    [#413]
  * Handle string type references in cast() during scope analysis 
    [#418]
- 0.3.13
  Fixed
  * Use correct type for AugAssign and AnnAssign target [#396]
  * Support string annotations for type aliases [#401]
- 0.3.12
  Fixed
  * fix RemoveImportsVisitor crash when ImportAlias is 
    inserted without comma [#397]
  * Provide STORE for {Class,Function}Def.name in 
    ExpressionContextProvider [#394]
- 0.3.11
  Added
  * Implement TypeOf matcher [#384]
  Updated
  * Update return type of ParentNodeProvider to be CSTNode [#377]
  * Add source code links to each class/function [#378]
  Fixed
  * Removing an import alias with a trailing standalone 
    comment should preserve the comment [#392]

-------------------------------------------------------------------
Tue Aug 25 11:33:22 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update to v0.3.10
  Added
  * Handle string annotations in ScopeProvider #373
  * Add is_annotation subtype for Access inreferences. #372
  Updated
  * Call pyre query with noninteractive logging #371
  * Replace matchers with explicit visitation in gatherers #366
  * Include missing test data in install #365
  Fixed
  * Spaces around walrus operator are not required #368
  * SaveMachedNode now matches with trailing empty wildcards #356
  * Correctly extract wildcard matchers #355
- clean specfile multibuild
- don't require own package on test flavor
- require dataclasses for Python 3.6 distros
- despite gh#Instagram/LibCST#365 says it's fixed, we still need to
  regenerate the code for tests
  => don't skip tests which actually pass after codegen
- can use plain unittest again, same as upstream
- define skip_python2 for Leap repositories

-------------------------------------------------------------------
Fri Aug 21 09:43:55 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Switch to multibuild in order to avoid buildcycles

-------------------------------------------------------------------
Sat Aug  8 04:41:45 UTC 2020 - John Vandenberg <jayvdb@gmail.com>

- Removed tests depending on optional dependency pyre
- Update to v0.3.9
  * Support string type annotations in RemoveUnusedImports
  * Add scope to ImportAlias
  * Add scope to ClassDef
  * Fixed all pyre related errors
  * Fixed enclosing attribute for attributes in call arguments

-------------------------------------------------------------------
Thu Aug  6 09:47:23 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Enhance codegen to support varied versions of isort
- Update to v0.3.8 
  * Handle type subscripts when applying annotations
  * Added FullRepoManager cache property
  * Added optional args for tox commands
  * Only remove trailing comma if the last alias is removed
  * Fixed inserting imports after module docstring
  * Fixed ParenthesizedWhitespace before params in FuncDef
  * Fixed validation for ImportAlias and Try statements
  * Fixed NotEqual position issue
  * Fixed minor typo in scope_provider.py

-------------------------------------------------------------------
Sat Jul  4 03:47:40 AM UTC 2020 - John Vandenberg <jayvdb@gmail.com>

- Initial spec for v0.3.7
