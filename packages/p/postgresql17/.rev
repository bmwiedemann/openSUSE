<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>81b835f0f239878ff0dff655f7d0d7ad</srcmd5>
    <version>17~rc1</version>
    <time>1727097541</time>
    <user>anag+factory</user>
    <comment>New version 17, which also is the new default.</comment>
    <requestid>1202171</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>35ca7ee1798b3f767250bd6b93de8e49</srcmd5>
    <version>17.0</version>
    <time>1727449842</time>
    <user>anag+factory</user>
    <comment>- Upgrade to 17.0.0:
  * New memory management system for VACUUM, which reduces memory
    consumption and can improve overall vacuuming performance.
  * New SQL/JSON capabilities, including constructors, identity
    functions, and the JSON_TABLE() function, which converts JSON
    data into a table representation.
  * Various query performance improvements, including for
    sequential reads using streaming I/O, write throughput under
    high concurrency, and searches over multiple values in a btree
    index.
  * Logical replication enhancements, including:
    + Failover control
    + pg_createsubscriber, a utility that creates logical replicas
      from physical standbys
    + pg_upgrade now preserves replication slots on both publishers
      and subscribers
  * New client-side connection option, sslnegotiation=direct, that
    performs a direct TLS handshake to avoid a round-trip
    negotiation.
  * pg_basebackup now supports incremental backup.
  * COPY adds a new option, ON_ERROR ignore, that allows a copy
    operation to continue in the event of an error.
  * https://www.postgresql.org/about/news/p-2936/
  * https://www.postgresql.org/docs/17/release-17.html</comment>
    <requestid>1203910</requestid>
  </revision>
  <revision rev="3" vrev="2">
    <srcmd5>287ace9717a1aaf2ecee64df58bacc4e</srcmd5>
    <version>17.0</version>
    <time>1729710525</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1216991</requestid>
  </revision>
  <revision rev="4" vrev="3">
    <srcmd5>1bed58f764b9c7487f84634d5f218592</srcmd5>
    <version>17.0</version>
    <time>1730756828</time>
    <user>anag+factory</user>
    <comment>- Add postgresql17-jsonb_jsonpath.patch as a temporary build fix.</comment>
    <requestid>1220587</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>c19976342042f02aef8858435249814f</srcmd5>
    <version>17.1</version>
    <time>1731681501</time>
    <user>anag+factory</user>
    <comment>- Upgrade to 17.1:
  * CVE-2024-10976, bsc#1233323: Ensure cached plans are marked as
    dependent on the calling role when RLS applies to a
    non-top-level table reference.
  * CVE-2024-10977, bsc#1233325: Make libpq discard error messages
    received during SSL or GSS protocol negotiation.
  * CVE-2024-10978, bsc#1233326: Fix unintended interactions
    between SET SESSION AUTHORIZATION and SET ROLE
  * CVE-2024-10979, bsc#1233327: Prevent trusted PL/Perl code from
    changing environment variables.
  * obsoletes postgresql17-jsonb_jsonpath.patch
  * https://www.postgresql.org/about/news/p-2955/
  * https://www.postgresql.org/docs/release/17.1/

- Upgrade to 17.0:
  * https://www.postgresql.org/about/news/p-2910/</comment>
    <requestid>1224229</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>484131d80cb9e8270c9534bc86f09c50</srcmd5>
    <version>17.2</version>
    <time>1732315850</time>
    <user>anag+factory</user>
    <comment>- Upgrade to 17.2:
  * Repair ABI break for extensions that work with struct
    ResultRelInfo.
  * Restore functionality of ALTER {ROLE|DATABASE} SET role.
  * Fix cases where a logical replication slot's restart_lsn could
    go backwards.
  * Avoid deleting still-needed WAL files during pg_rewind.
  * Fix race conditions associated with dropping shared statistics
    entries.
  * Count index scans in contrib/bloom indexes in the statistics
    views, such as the pg_stat_user_indexes.idx_scan counter.
  * Fix crash when checking to see if an index's opclass options
    have changed.
  * Avoid assertion failure caused by disconnected NFA sub-graphs
    in regular expression parsing.
  * https://www.postgresql.org/about/news/p-2965/
  * https://www.postgresql.org/docs/release/17.2/</comment>
    <requestid>1225748</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>97a65afdb5bd6bf5b544255e471234d5</srcmd5>
    <version>17.2</version>
    <time>1736959347</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1237832</requestid>
  </revision>
  <revision rev="8" vrev="3">
    <srcmd5>bbf96d0535ed8af77f85275151d4d67a</srcmd5>
    <version>17.2</version>
    <time>1738244950</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1241205</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>55546ca324a1ea76aa636f00b2b04d0f</srcmd5>
    <version>17.3</version>
    <time>1739557194</time>
    <user>anag+factory</user>
    <comment>- Fix build, add postgresql-tzdata2025a.patch
- Upgrade to 17.3:
  * bsc#1237093, CVE-2025-1094: Harden PQescapeString and allied
    functions against invalidly-encoded input strings.
  * obsoletes postgresql-tzdata2025a.patch
  * https://www.postgresql.org/docs/release/17.3/
  * https://www.postgresql.org/about/news/-3015/</comment>
    <requestid>1245716</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>41d12c3e2d4723194866efb98d73a77b</srcmd5>
    <version>17.4</version>
    <time>1740170103</time>
    <user>dimstar_suse</user>
    <comment>- Upgrade to 17.4:
  * Improve behavior of libpq's quoting functions:
    The changes made for CVE-2025-1094 had one serious oversight:
    PQescapeLiteral() and PQescapeIdentifier() failed to honor
    their string length parameter, instead always reading to the
    input string's trailing null. This resulted in including
    unwanted text in the output, if the caller intended to
    truncate the string via the length parameter. With very bad
    luck it could cause a crash due to reading off the end of
    memory.
    In addition, modify all these quoting functions so that when
    invalid encoding is detected, an invalid sequence is
    substituted for just the first byte of the presumed
    character, not all of it. This reduces the risk of problems
    if a calling application performs additional processing on
    the quoted string.
  * Fix small memory leak in pg_createsubscriber.
  * https://www.postgresql.org/docs/release/17.4/
  * https://www.postgresql.org/about/news/p-3018/</comment>
    <requestid>1247457</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>704321bb52d8791ef64ce016ba808dce</srcmd5>
    <version>17.5</version>
    <time>1748003289</time>
    <user>anag_factory</user>
    <comment>- Upgrade to 17.5:
  * bsc#1242931, CVE-2025-4207: postgresql: PostgreSQL GB18030
    encoding validation can read one byte past end of allocation
    for text that fails validation.
  * https://www.postgresql.org/docs/release/17.5/
  * https://www.postgresql.org/about/news/p-3072/
- Add postresql-pg_config_paths.patch to Fix a race condition
  while generating pg_config_paths.h.</comment>
    <requestid>1278023</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>14f4442b19b5af2b7941a07bee25752c</srcmd5>
    <version>17.6</version>
    <time>1755369417</time>
    <user>dimstar_suse</user>
    <comment>Forwarded request #1299467 from darix

https://www.postgresql.org/about/news/postgresql-176-1610-1514-1419-1322-and-18-beta-3-released-3118/</comment>
    <requestid>1299472</requestid>
  </revision>
  <revision rev="13" vrev="2">
    <srcmd5>f1ad7f358ffa9913e62811bd5450688d</srcmd5>
    <version>17.6</version>
    <time>1758918256</time>
    <user>anag_factory</user>
    <comment>- Sync spec file with version 18.

- switch library to pg 18</comment>
    <requestid>1307161</requestid>
  </revision>
</revisionlist>
