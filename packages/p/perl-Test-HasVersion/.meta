<package name="perl-Test-HasVersion" project="openSUSE:Factory">
  <title>Check Perl modules have version numbers</title>
  <description>Do you wanna check that every one of your Perl modules in a distribution
has a version number? You wanna make sure you don't forget the brand new
modules you just added? Well, that's the module you have been looking for.
Use it!

Do you wanna check someone else's distribution to make sure the author have
not commited the sin of leaving Perl modules without a version that can be
used to tell if you have this or that feature? 'Test::HasVersion' is also
for you, nasty little fellow.

There's a script _test_version_ which is installed with this distribution.
You may invoke it from within the root directory of a distribution you just
unpacked, and it will check every _.pm_ file in the directory and under
_lib/_ (if any).

  $ test_version

You may also provide directories and files as arguments.

  $ test_version *.pm lib/ inc/
  $ test_version .

(Be warned that many Perl modules in a _t/_ directory do not receive
versions because they are not used outside the distribution.)

Ok. That's not a very useful module by now. But it will be. Wait for the
upcoming releases.

FUNCTIONS
    * PRIVATE *_pm_version*

        $v = _pm_version($pm);

      Parses a PM file and return what it thinks is $VERSION in this file.
      (Actually implemented with 'use ExtUtils::MakeMaker;
      MM-&gt;parse_version($file)'.) '$pm' is the filename (eg.,
      _lib/Data/Dumper.pm_).

    * *pm_version_ok*

        pm_version_ok('Module.pm');
        pm_version_ok('M.pm', 'Has valid version');

      Checks to see if the given file has a valid version. Actually a valid
      version number is defined and not equal to ''undef'' (the string)
      which is return by '_pm_version' if a version cannot be determined.

    * *all_pm_version_ok*

        all_pm_version_ok();
        all_pm_version_ok(@PM_FILES);

      Checks every given file and _.pm_ files found under given directories
      to see if they provide valid version numbers. If no argument is
      given, it defaults to check every file _*.pm_ in the current
      directory and recurses under the _lib/_ directory (if it exists).

      If no test plan was setted, 'Test::HasVersion' will set one after
      computing the number of files to be tested. Otherwise, the plan is
      left untouched.

    * PRIVATE *_list_pm_files*

        @pm_files = _list_pm_files(@dirs);

      Returns all PM files under the given directories.

    * *all_pm_files*

        @files = all_pm_files()
        @files = all_pm_files(@files_and_dirs);

      Implements finding the Perl modules according to the semantics of the
      previous function 'all_pm_version_ok'.</description>
  <devel project="devel:languages:perl" package="perl-Test-HasVersion" />
</package>
