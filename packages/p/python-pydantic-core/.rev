<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>64571a75dd06bc74239dcd951c4dea0d</srcmd5>
    <version>2.16.3</version>
    <time>1709762722</time>
    <user>dimstar_suse</user>
    <comment>- Initial release of 2.16.3</comment>
    <requestid>1155419</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>4f3ec5c3a38d2502840071a0d8447ce2</srcmd5>
    <version>2.16.3</version>
    <time>1710434548</time>
    <user>anag+factory</user>
    <comment>- Sprinkle in multibuild to avoid build cycles. 

- Add %{?sle15_python_module_pythons}</comment>
    <requestid>1157065</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>40e2772679d5c657377bca6b9433f542</srcmd5>
    <version>2.18.2</version>
    <time>1714490740</time>
    <user>anag+factory</user>
    <comment>- update to 2.18.2:
  * Support multiple zeros as an `int`
  * Fix validation of `int`s with leading unary plus
  * Fix interaction between `extra != 'ignore'` and
    `from_attributes=True`
  * Handle error from `Enum`'s `missing` function as
    `ValidationError`
  * Fix memory leak with `Iterable` validation
- update to 2.18.1:
  * allow serialization functions to upgrade warnings to
    exceptions
  * Fix: add `coerce_numbers_to_str option` in `StringSchema`
  * Trim leading zeros before parsing `str` -&gt; `int`
  * Prevent trailing dots in integers
- update to 2.18.0:
  * update to PyO3 0.21 final
  * Add coerce_numbers_to_str option in str_schema
  * caching strings from JSON
  * fix build warnings on python &lt;3.11
  * Fixes for `ser_json_inf_nan` inference
  * Adopt jiter `0.2.0`
- update to 2.17.0:
  * Add benchmarks for serializing model with complete schema
  * Prevent panicking when `__dict__` changes during iteration
  * Fix `TzInfo` equality check based on offset
  * Fix stack overflow due to recursion in some recursive
    serializer schemas.
  * Use PEP570 syntax
  * Fix parsing `BigInt` from `str`
  * Use new typing syntax for `_pydantic_core.pyi`</comment>
    <requestid>1170439</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>730c6870eb399c50fd730d9afbf066bc</srcmd5>
    <version>2.18.4</version>
    <time>1717765352</time>
    <user>anag+factory</user>
    <comment>- update to 2.18.4:
  * Bump uuid from 1.7.0 to 1.8.0
  * Bump serde from 1.0.197 to 1.0.203
  * Bump the python-packages group with 6 updates
  * Uprev `jiter` to v0.4.1
- update to 2.18.3:
  * Bump `serde_json` from 1.0.114 to 1.0.116
  * Bump the python-packages group with 7 updates
  * Bump `regex` from 1.10.3 to 1.10.4
  * Bump `pyo3` from 0.21.1 to 0.21.2
  * Bump `uraimo/run-on-arch-action` from 2.7.1 to 2.7.2</comment>
    <requestid>1179035</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>32418c6b6bb0f98a5f1d302a25276eb3</srcmd5>
    <version>2.20.0</version>
    <time>1719936887</time>
    <user>anag+factory</user>
    <comment>- update to 2.20.0:
  * Tidy up `tagged_union_schema`
  * Improvements in `Union` matching logic during validation
  * Fix `Union` validation logic when `extra='allow'`
  * Add list `fail_fast` config option
  * Update to PyO3 0.22, add Python 3.13 support
- update to 2.19.0:
  * Lower MSRV to 1.75
  * Bump `libc` from 0.2.147 to 0.2.155
  * Make `ValidatorFunctionWrapHandler` positional only
  * Reuse `re.Pattern` object in regex patterns
  * Add ser_json_inf_nan='strings' mode to produce valid JSON</comment>
    <requestid>1184352</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>6a134ffd9377b7c60e44716f491829db</srcmd5>
    <version>2.23.4</version>
    <time>1729876752</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1218161</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>23a44f245ece5bc98245d701d6a1d007</srcmd5>
    <version>2.27.2</version>
    <time>1738163378</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1240303</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>00258ea2b68b5d9fc07c3002f1b0c2f0</srcmd5>
    <version>2.34.1</version>
    <time>1745612274</time>
    <user>anag_factory</user>
    <comment>- Update to 2.34.1:
  * Fixes
    + fix clippy lints for Rust 1.86
    + Allow JSON BigInt to validate against float schema
    + Ensure ValidationInfo.field_name is correct on validator reuse
    + Coerce 'timedelta' schema constraints
    + Add support for extra keys validation for model fields
    + Revert by_alias default value change for to_json() and
      to_jsonable_python()
    + Skip reusing after validators in prebuilt schemas
    + Skip reusing wrap validators / serializers for prebuilt variants
    + Add cls_name to typed-dict schema
    + Coerce validator constraints to their valid type
    + Use core schema fns to initalize SchemaValidators in the test suite
    + Fix enum strict JSON validation when validators are present
    + Add support for validating v7 UUIDs
    + Refactor LookupKey logic to reduce redundancy
    + Add support for UUIDv6 and UUIDv8 validation
    + Remove unneeded Option map in PyMultiHostUrl.build
    + bump to PyO3 0.23.5, support PyPy 3.11
    + Fix strict behavior for unions
    + Improving the alias configuration API for validation and serialization
    + Fix float multiple_of validation for negative numbers
    + Fix wasm preview
    + Raise validation error when unhashable items added to a set
    + Fix condition before using prebuilt validator/serializer
    + minimal upgrade to PyO3 0.23 (ignoring deprecations)
    + Use UserWarning from pyo3
    + Forward default_value calls to the underlying schema for
      DefinitionRefValidator</comment>
    <requestid>1272286</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>9a5f92e232a1e7090b6a5bddff2125b7</srcmd5>
    <version>2.35.1</version>
    <time>1750790760</time>
    <user>anag_factory</user>
    <comment>- Update to 2.35.1:
  * Fix generic issues with ValidationInfo and SerializationInfo by @Viicos in #1736
2.35.0:
  * Do not reuse validator and serializer when unpickling by @Viicos in #1693
  * Remove unnecessary required fields count when exclude_none is set by @Viicos in #1708
  * Update test dependencies after 3.8 dropped support by @Viicos in #1710
  * Mark constructor parameters of exceptions as positional-only by @Viicos in #1699
  * fix: submodel fields with wrap validator affect smart union selection by @weiliddat in #1700
  * use pypa/gh-action-pypi-publish by @samuelcolvin in #1599
  * add critical sections around bytearray reads by @davidhewitt in #1717
  * simplify ser-as-any mechanism by @davidhewitt in #1478
  * Coerce 'time' schema constraints by @Viicos in #1720
  * drop serde-json preserve_order feature by @davidhewitt in #1724
  * Remove core schema validation by @Viicos in #1715
  * Improve uncaught PydanticUseDefault exception message by @Viicos in #1730
  * Add support for Python 3.14 by @Viicos in #1714
  * drop pypy3.9 support, add pypy3.11 support by @davidhewitt in #1726
  * Add ensure_ascii option by @Viicos in #1689
  * Update repr of TzInfo by @Viicos in #1701
  * Make ValidationInfo and SerializationInfo generic for context by @Viicos in #1686</comment>
    <requestid>1287849</requestid>
  </revision>
  <revision rev="10" vrev="2">
    <srcmd5>376afa61704475cc586e3811f0f94cec</srcmd5>
    <version>2.35.1</version>
    <time>1753374879</time>
    <user>dimstar_suse</user>
    <comment>- Skip two tests broken upstream by pytest 8.4.</comment>
    <requestid>1295195</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>875479de8fb1ed66dccbd497ba504222</srcmd5>
    <version>2.39.0</version>
    <time>1755434999</time>
    <user>dimstar_suse</user>
    <comment>- Update to 2.39.0:
  * build: bump pytest to 8.4
  * Add exclude_computed_fields serialization option
  * Switch to PEP 639 license information
  * Simplify ValidationError.from_exception_data() docstring
  * feat: make TzInfo instantiable without any arguments
  * Implement val_temporal_unit for deciding how datetimes and dates timestamps get validated.
  * Add missing entries in missing-sentinel core schema
  * Add MISSING sentinel
  * Implement ser_json_temporal config option
  * Properly coerce fractions as int
  * Add exclude_if logic at the field level</comment>
    <requestid>1299307</requestid>
  </revision>
</revisionlist>
