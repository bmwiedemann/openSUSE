-------------------------------------------------------------------
Fri Dec 30 10:09:12 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update to 1.6.0
  ## New features & Enhancements
  * #559, #560 Improve handling of whitespace in import and
    from-import statements (@lieryan)
  * #566, #567, #597 Fix variables in kwonlyargs and posonlyargs
    not being correctly passed to extracted methods (@lieryan)
  ## Unit Test
  * #589, #596 Fix issue with sample_project() creating directories
    where it shouldn't when running tests (@lieryan)
  * #547 Add config file for linters
  * #593 Remove only_for decorator for all python versions less
    than 3.7 (@edreamleo)
  ## Tech Debt
  ### Code quality
  * #546 Remove unused vars in test (@lieryan, @edreamleo)
  * #551, #552 Numerous flake8 linter complaints (@edreamleo)
  * #558 Fix typos (@kianmeng)
  * #583, #584 More consistent import style (@edreamleo)
  ### Python 2-related tech debt
  * #533 Refactoring to Remove usage of unicode type (@lieryan)
  * #549, #553 Remove rope.base.utils.pycompat (@dreamleo)
  * #555 Fix some python2-isms (@lieryan)
  ### Rope's AST Wrapper
  * #536, #578 walk does not return a value (@edreamleo)
  * #537, #538 Remove special case code from walk (@edreamleo)
  * #581 Remove functions in rope.base.ast that has functionally
    identical implementation in stdlib's ast (@lieryan, @edreamleo)
  * #582 Refactoring rope.base.ast and remove rope.base.astutils
    (@lieryan, @edreamleo)
  ### pynames and pyobjects
  * #569, #572 rename pynames to pynamesdef in pyobjectsdef.ph
    (@edreamleo)
- Release 1.5.1
  * #531 Add alternative way to retrieve version number from
    pyproject.toml
- Release 1.5.0
  * #492 Feat: Global configuration support (@bagel897)
  * #519 Move pytest to pyproject.toml (@gliptak, @bagel897)
  * #509 Fix read/write analysis of the left-hand side of an
    augmented assignment (@lieryan)
  * #522 Implement patchedast parsing of MatchMapping (@lieryan)
  * #514 Fix inlining dictionary with inline comment (@lieryan)
- Release 1.4.0
  * #506, #507 Fix issue with parsing function call args list
  * #411, #505 Fix extracting generator without parens
  * #18, #510 When the function is a builtin function, the call
    parameter's name was sometimes incorrectly identified as an
    AssignedName. This led to rename refactoring incorrectly
    renaming these parameters.
- Release 1.3.0
  * #496, #497 Add MatMul operator to patchedast
  * #495 Fix autoimport collection for compiled modules
  * #501, #502 Autoimport improvements
- Release 1.2.0
  ## New feature
  * #473 Pyproject.toml support (@bageljrkhanofemus)
  * #489 Rope now publishes documentations to rope.readthedocs.org
    (@bageljrkhanofemus)
  * #490 Migrate from setup.py to pyproject.toml
    (@bageljrkhanofemus)
  ## Improvement
  * #479 Add ABC and type hints for TaskHandle and JobSet
    (@bageljrkhanofemus)
  * #486 Drop Python 2 support (@bageljrkhanofemus, @lieryan)
  * #487 Improved value inference of all declaration (@lieryan)
  * #424 Add some basic repr to make it easier for debugging
    (@lieryan)
- Release 1.1.1
  * #476 Fix rope.contrib.autoimport package missing from release
    (@bageljrkhanofemus)
- Release 1.1.0
  ## New feature
  * #464 Add new autoimport implementation that uses a sqllite3
    database, cache all available modules quickly, search for names
    and produce import statements, sort import statements.
    (@bageljrkhanofemus)
  ## Bug fixes
  * #419 Fix bug while moving decorated function (@dryobates)
  * #439 Fix bug while moving decorated class (@dryobates)
  * #461 Fix bug while extracting method with list comprehension in
    class method (@dryobates)
  * #440 Fix bug while inlining function with type hints in
    signature (@dryobates)
  ## Deprecation
  * The pickle-based autoimport implementation is still the
    default, but will be deprecated sometime in the future.
- Release 1.0.0
  * Date: 2022-04-08
  ## Syntax support
  * #400 Drop Python 2.7 support
  ## Bug fixes
  * #459 Fix bug while extracting method with augmented assignment
    to subscript in try block (@dryobates)
- Release 0.23.0
  ## Syntax support
  * #451, $456 Implement structural pattern matching (PEP634)
    (@lieryan)
  * #458 Improve the heuristic for joining lines when extracting
    one line expression (@lieryan)
  ## Bug fixes
  * #134, #453 Preserve newline format when writing files
    (@lieryan)
  * #457 Fix extract info collection for list comprehension with
    multiple targets (@lieryan)

-------------------------------------------------------------------
Sun Feb 20 21:01:54 UTC 2022 - Dirk MÃ¼ller <dmueller@suse.com>

- update to 0.22.0:
  * #443 Implement `yield from` syntax support to patchedast.py
  * #445, #446 Improve empty tuple and handling of parentheses
  around tuple
  * #270, #432 Fix rename import statement with dots and as keyword

-------------------------------------------------------------------
Tue Oct 26 13:44:20 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Update to 0.21.0:
  - #392, #316 Handle `global` keyword when extracting method
    (@climbus)
  - context manager:
    - #387, #433 Implement extract refactoring for code
      containing `async with` (@lieryan)
    - #398, #104 Fix parsing of nested `with` statement/context
      manager (@climbus)
  - list/set/dict/generator comprehension scope issues:
    - #422 Added scopes for comprehension expressions as part of
      #293 (@climbus)
    - #426, #429 Added support for checking scopes by offset as
      part of #293 (@climbus)
    - #293, #430 Fix renaming global var affects list
      comprehension (@climbus)
    - #395, #315 Reuse of variable in comprehensions confuses
      method extraction (@climbus)
    - #436 Fix error `TypeError: 'PyDefinedObject' object is not
      subscriptable` (@lieryan)
  - f-string:
    - #303, #420 Fix inlining into f-string containing quote
      characters (@lieryan)
  - inline assignment/walrus operator:
    - #423 Fix `AttributeError: '_ExpressionVisitor' object has
      no attribute 'defineds'` (@lieryan)
  - #391, #376 Fix improper replacement when extracting attribute
    access expression with `similar=True` (@climbus)
  - #396 Fix improper replacement when extracting index access
    expression with `similar=True` (@lieryan)
  - #434 Move read() to FileSystemCommands
  - #410 Setup all-contributors bot (@lieryan)
  - #404 Blacken source code, rope now follows black code style
    (@climbus)
  - #399 Add Github Actions to enforce black code style
  - #403 Remove plain 'unittest' only runner

-------------------------------------------------------------------
Tue Oct  5 19:48:56 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Update to 0.20.0:
  - Under the new management: @lieryan kindly decided to take
    over the maintaining the package.
  - #377 Added the ability to extract method to
    @staticmethod/@classmethod (@climbus)
  - #374 Changed Organize import to keep variables listed in
    `__all__`
  - Change default .ropeproject/config.py to ignore code in
    folders named .venv and venv (@0x1e02)
  - #372 Add extract method refactoring of code containing `exec`
    (@ceridwen)
  - #389 Add extract method refactoring of code containing `async
    def`, `async for`, and `await`
  - #365, #386 Support extract method of expressions containing
    inline assignment (walrus operator)
  - #380 Fix list of variables that are returned and/or turned
    into argument when extracting method in a loop

-------------------------------------------------------------------
Tue Oct  5 19:48:56 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Update to 0.20.0:
  - Under the new management: @lieryan kindly decided to take
    over the maintaining of the package.
  - #377 Added the ability to extract method to
    @staticmethod/@classmethod (@climbus)
  - #374 Changed Organize import to keep variables listed in
    `__all__`
  - Change default .ropeproject/config.py to ignore code in
    folders named .venv and venv (@0x1e02)
  - #372 Add extract method refactoring of code containing `exec`
    (@ceridwen)
  - #389 Add extract method refactoring of code containing `async
    def`, `async for`, and `await`
  - #365, #386 Support extract method of expressions containing
    inline assignment (walrus operator)
  - #380 Fix list of variables that are returned and/or turned
    into argument when extracting method in a loop

-------------------------------------------------------------------
Sun Apr 18 20:56:15 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Update to 0.19.0:
  - fixes #337
  - Fix AttributeError lineno
  - Python 3.9 ast changes
  - create_generate with goal_resource param
  - Fix relative import offset calculation
  - Fix missinge lineno attribute for AssignedName ast node
  - Added _NamedExpr into `patchedast.py`
  - Add support for the walrus operator.
  - fix test case name for `test_ann_assign_node_without_target`
  - Returned _AnnAssign and checked for support assignment without value
  - fixed version restriction in tests for NamedExpr
  - Removed AnnAssign, added NeamedExpr, testa are made
  - Added _AnnAsign into `patchedast.py`
  - Extract augmented assignment
  - Fix handling of dict rename in Python 2.x
  - Improve handling of generalized dict unpacking during dict rename
  - Add expected failure test for comprehension variable scopes
  - Implement basic scoping and rename for set and dict comprehension
  - Visit subexpressions of comprehensions to collect names for scopes
  - Implement rename of inline assignment expression
  - Implement basic scoping and renaming of list and generator
    comprehension loop variables
  - Implement f-string extract refactoring
  - Refactor consume_joined_string and also fix missing
    ast.JoinedStr/FormattedValue in older python
  - Fix some f-string corner cases
  - Implement PEP-448 generalized dict-unpacking
- Removed upstreamed rope-pr333-py39.patch.

-------------------------------------------------------------------
Wed Mar 31 12:05:06 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Add rope-pr333-py39.patch for python39 compatibility
  gh#python-rope/rope#333

-------------------------------------------------------------------
Mon Oct 19 11:31:41 UTC 2020 - Matej Cepl <mcepl@suse.com>

- Update to 0.18.0:
  - Fix `Worder.get_primary_at` for names that start like
    keywords. <Rob Kelly>
  - Add guess_def_lineno() to get actual function/class
    definition line number <Lie Ryan>
  - Fix SimilarFinder/_ASTMatcher to consider 1/0 and True/False
    to be unequal <Lie Ryan>
  - Compatibility with Python 3.8
  - Add pytest.ini to collect all tests <Lie Ryan> 

-------------------------------------------------------------------
Tue May  5 16:25:43 UTC 2020 - Matej Cepl <mcepl@suse.com>

- Update to 0.17.0:
  - Make tests compatible with Python 3.8
  - Use context manager for open()
  - Donât use UserDict (!!!) and collections.MutableMapping.
  - assertEquals has been deprecated for long time (-> assertEqual)
  - Remove weird escpaing of 's' character, which is the syntax
    error these days.
  - Add testing for Python 3.8 as well
  - Fix pattern for matching short strings
  - Work with deprecated types and using aliased ones.
  - Don't use underscored _ast, but use ast instead
  - Direct import from collections is getting deprecated.
  - Use .is_alive method instead of a deprecated .isAlive
    in threading.Thread
  - Fix simple typo: sitaution -> situation (#287)
  - Two more assertEquals happened.
- Remove all patches, which were now included in the upstream
  tarball:
  - Python38-compatibility.patch
  - assertEquals.patch
  - isAlive_failed_test.patch
  - obsolete_escape_strings.patch

-------------------------------------------------------------------
Mon Mar  9 10:54:00 CET 2020 - Matej Cepl <mcepl@suse.com>

- Add assertEquals.patch, obsolete_escape_strings.patch, and
  Python38-compatibility.patch to deal with various deprecated
  warnings.
- Switch off three tests to make the test suite pass under Python
  3.8.

-------------------------------------------------------------------
Thu Mar  5 12:18:53 UTC 2020 - OndÅej SÃºkup <mimi.vx@gmail.com>

- update to 0.16.0
 * new minor relase with bugfixes.

-------------------------------------------------------------------
Tue Jan 14 15:29:21 CET 2020 - Matej Cepl <mcepl@suse.com>

- Add isAlive_failed_test.patch as a fix for gh#python-rope/rope#283

-------------------------------------------------------------------
Thu Jan  2 10:23:54 UTC 2020 - TomÃ¡Å¡ ChvÃ¡tal <tchvatal@suse.com>

- Run the pytest call only once

-------------------------------------------------------------------
Sat Mar 23 00:17:25 CET 2019 - Matej Cepl <mcepl@suse.com>

- Upgrade to 0.14.0:
  - relicensing to LGPLv3+
  - bugfixes

-------------------------------------------------------------------
Thu Mar  7 11:16:41 UTC 2019 - TomÃ¡Å¡ ChvÃ¡tal <tchvatal@suse.com>

- Fix expansion of test removal

-------------------------------------------------------------------
Mon Feb 11 11:01:31 UTC 2019 - Matej Cepl <mcepl@suse.com>

- Upgrade to 0.12.0:
    * gh#python-rope/rope#218: support for all of the new
      async-related nodes.
    * gh#python-rope/rope#259: fix installation issues on Windows

-------------------------------------------------------------------
Wed Jan 16 17:41:43 CET 2019 - mcepl@suse.com

- Workaround gh#python-rope/rope#247 (some tests fail on Python 3.7)

-------------------------------------------------------------------
Wed Aug 29 11:52:04 UTC 2018 - tchvatal@suse.com

- Fix buildrequires to not require devel
- Run tests without conditional

-------------------------------------------------------------------
Thu Aug  9 07:55:22 UTC 2018 - mcepl@suse.com

- update to 0.11.0
  + Upstream provides no changelog
- Remove patch CVE-2014-3539-disable-doa.patch (included upstream)

-------------------------------------------------------------------
Mon Aug 28 16:14:30 UTC 2017 - toddrme2178@gmail.com

- update to 0.10.7
  + Upstream provides no changelog
- Add tag for CVE-2014-3539-disable-doa.patch

-------------------------------------------------------------------
Fri Jul 21 14:11:18 UTC 2017 - sebix+novell.com@sebix.at

- convert to singlespec
- update to 0.10.5

-------------------------------------------------------------------
Mon Jul 13 13:12:38 UTC 2015 - toddrme2178@gmail.com

- Fix building on SLES 11

-------------------------------------------------------------------
Wed Feb 18 17:05:54 UTC 2015 - jmatejek@suse.com

- update to version 0.10.2
  * new maintainer revives project
  * accumulated bugfixes
  * better test coverage and all tests pass
- disable dynamic object analysis by default, as it is a security risk
  (CVE-2014-3539-disable-doa.patch, CVE-2014-3539, boo#916890)

-------------------------------------------------------------------
Wed Jun  6 11:07:01 UTC 2012 - saschpe@suse.de

- Update to version 0.9.4:
  + Upstream provides no changelog

-------------------------------------------------------------------
Tue Jan 31 10:37:36 UTC 2012 - saschpe@suse.de

- Spec file cleanup

-------------------------------------------------------------------
Mon Dec  5 13:14:57 UTC 2011 - toddrme2178@gmail.com

- Cleaned up spec file formatting

-------------------------------------------------------------------
Tue Jan 25 14:01:04 UTC 2011 - saschpe@suse.de

- Update to version 0.9.3
- Added COPYING to documentation
- Recompressed tarbal with bzip2

-------------------------------------------------------------------
Wed Aug  5 16:03:28 CEST 2009 - hpj@urpla.net

- Initial creation of package python-rope-0.9.2

-------------------------------------------------------------------
Wed Aug  5 16:03:28 CEST 2009 - 
