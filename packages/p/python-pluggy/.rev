<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>9e0e9924bd3dba685ea7f9a405594987</srcmd5>
    <version>0.3.0</version>
    <time>1443684563</time>
    <user>dimstar_suse</user>
    <comment>new dep for pytohn-tox</comment>
    <requestid>334713</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>932fe01a605c3bf45c133ba55548f2d1</srcmd5>
    <version>0.4.0</version>
    <time>1492618122</time>
    <user>dimstar_suse</user>
    <comment>- update for singlespec
- please send to Staging:E, it's a requirement for new python-tox</comment>
    <requestid>486539</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>d361de662c8265df9e8978e8007ce175</srcmd5>
    <version>0.5.2</version>
    <time>1510506001</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>540463</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>821701194970168e89a3e465c5b86ed8</srcmd5>
    <version>0.6.0</version>
    <time>1512216645</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>545892</requestid>
  </revision>
  <revision rev="5" vrev="2">
    <srcmd5>b0f3432e3a4faa898582081ce517aaf9</srcmd5>
    <version>0.6.0</version>
    <time>1514027507</time>
    <user>dimstar_suse</user>
    <comment>- run tests conditionally (fixes bsc#1073845)</comment>
    <requestid>559131</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>022bffc55d4b8416e4495239ba6a2ea9</srcmd5>
    <version>0.7.1</version>
    <time>1533732307</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>627080</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>6744e84e66154c9ef424b4f6e4a9cbdb</srcmd5>
    <version>0.8.0</version>
    <time>1541666367</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.8.0
 * Add get_hookimpls() method to hook callers
 * Add changelog in long package description and documentation.
 * Add a test exemplifying the opt-in nature of spec defined args.
 * Encapsulate hook specifications in a type for easier introspection. (forwarded request 644855 from mimi_vx)</comment>
    <requestid>644857</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>b99879a8060e00c3ba70d68c147a084e</srcmd5>
    <version>0.8.1</version>
    <time>1551024255</time>
    <user>coolo</user>
    <comment>- Update to 0.8.1:
   * #166: Add stacklevel=2 to implprefix warning so that the reported location of warning is the caller of PluginManager.</comment>
    <requestid>674134</requestid>
  </revision>
  <revision rev="9" vrev="2">
    <srcmd5>22196db62f1b57dec5c2d2380472ab25</srcmd5>
    <version>0.8.0</version>
    <time>1551076580</time>
    <user>coolo</user>
    <comment>osc copypac from project:openSUSE:Factory package:python-pluggy revision:7</comment>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>c8bf523f1f20bfbb14623b17d526a678</srcmd5>
    <version>0.9.0</version>
    <time>1551215775</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.9.0:
  * #189: PluginManager.load_setuptools_entrypoints now accepts a name parameter that when given will load only entry points with that name.
  * PluginManager.load_setuptools_entrypoints also now returns the number of plugins loaded by the call, as opposed to the number of all plugins loaded by all calls to this method.

- Switch to multibuild in order to avoid build loop

- Update to 0.8.1:
   * #166: Add stacklevel=2 to implprefix warning so that the reported location of warning is the caller of PluginManager.</comment>
    <requestid>679233</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>79d5af6a0776d7506dcad2fc4b192901</srcmd5>
    <version>0.11.0</version>
    <time>1558515257</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.11.0:
  * Small bugfixes only</comment>
    <requestid>704167</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>2bcaa11d9069371159a392d976b56ff8</srcmd5>
    <version>0.12.0</version>
    <time>1560861910</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.12.0:
  * #215: Switch from pkg_resources to importlib-metadata for entrypoint
    detection for improved performance and import time. This time with .egg support.</comment>
    <requestid>707081</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>2a5970b397cdee517f32b7c86a165636</srcmd5>
    <version>0.13.0</version>
    <time>1569233818</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.13.0:
  * support python 3.8</comment>
    <requestid>730734</requestid>
  </revision>
  <revision rev="14" vrev="2">
    <srcmd5>f44b4ee0b31fcd2731010d50a3a335a1</srcmd5>
    <version>0.13.0</version>
    <time>1576513579</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>756850</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>9901d189213832a438fc6a6563cd33eb</srcmd5>
    <version>0.13.1</version>
    <time>1579194804</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.13.1:
  * Improved documentation, especially with regard to references.</comment>
    <requestid>761138</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>d98d9c3531a58174ad9e9cb20dd4a3b7</srcmd5>
    <version>1.0.0</version>
    <time>1635167824</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>925918</requestid>
  </revision>
  <revision rev="17" vrev="2">
    <srcmd5>309674b07d020dad1abd2b17cd5b4fc4</srcmd5>
    <version>1.0.0</version>
    <time>1682434422</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1082446</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>60676ed5d6e33c655b02dd0a5ed31d80</srcmd5>
    <version>1.3.0</version>
    <time>1699478194</time>
    <user>anag+factory</user>
    <comment>- update to 1.3.0:
  * Python 3.7 is no longer supported.
  * Pluggy now exposes its typings to static type checkers.
  * Some fields and classes are marked ``Final`` and ``@final``.
  * The :ref:`api-reference` is updated to clearly delineate
    pluggy's public API.
    Compatibility aliases are put in place for the renamed types.
    Please note that pluggy is currently unable to provide strong
    typing for hook calls, e.g. ``pm.hook.my_hook(...)``,
    nor to statically check that a hook implementation matches
    the hook specification's type.
  * The new-style hook wrappers, added in the yanked 1.1.0
    release, now require an explicit ``wrapper=True`` designation
    in the ``@hookimpl()`` decorator.

  Deprecations and Removals
    The deprecation was announced in release 0.7.0.
    deprecation was announced in release 0.7.0.
    deprecation was announced in release 0.6.0.
  * fix issue #4: specific HookCallError exception for when a hook call</comment>
    <requestid>1124102</requestid>
  </revision>
</revisionlist>
