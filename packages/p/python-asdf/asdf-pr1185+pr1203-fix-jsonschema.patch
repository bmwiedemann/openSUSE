From ee83878f7bd5072da21928ebcf4c586997767c97 Mon Sep 17 00:00:00 2001
From: William Jamieson <wjamieson@stsci.edu>
Date: Wed, 31 Aug 2022 10:47:21 -0400
Subject: [PATCH 1/5] Fix subclass using a patch

---
 asdf/schema.py | 30 ++++++++++++++++++++++--------
 1 file changed, 22 insertions(+), 8 deletions(-)

diff --git a/asdf/schema.py b/asdf/schema.py
index f62e2b84..7a6ee123 100644
--- a/asdf/schema.py
+++ b/asdf/schema.py
@@ -7,7 +7,6 @@
 from functools import lru_cache
 from numbers import Integral
 
-import attr
 import numpy as np
 import yaml
 from jsonschema import validators as mvalidators
@@ -253,15 +252,25 @@ def _create_validator(validators=YAML_VALIDATORS, visit_repeat_nodes=False):
         }
     )
     id_of = mvalidators.Draft4Validator.ID_OF
-    base_cls = mvalidators.create(
+    ASDFValidator = mvalidators.create(
         meta_schema=meta_schema, validators=validators, type_checker=type_checker, id_of=id_of
     )
 
-    @attr.s
-    class ASDFValidator(base_cls):
-        _context = attr.ib(factory=lambda: _ValidationContext())
-        ctx = attr.ib(default=None)
-        serialization_context = attr.ib(default=None)
+    def _patch_init(cls):
+        original_init = cls.__init__
+
+        def __init__(self, *args, **kwargs):
+            self.ctx = kwargs.pop("ctx", None)
+            self.serialization_context = kwargs.pop("serialization_context", None)
+
+            original_init(self, *args, **kwargs)
+
+        cls.__init__ = __init__
+
+    def _patch_iter_errors(cls):
+        original_iter_errors = cls.iter_errors
+
+        cls._context = _ValidationContext()
 
         def iter_errors(self, instance, *args, **kwargs):
             # We can't validate anything that looks like an external reference,
@@ -308,7 +317,12 @@ def iter_errors(self, instance, *args, **kwargs):
                         for val in instance:
                             yield from self.iter_errors(val)
                 else:
-                    yield from super().iter_errors(instance)
+                    yield from original_iter_errors(self, instance)
+
+        cls.iter_errors = iter_errors
+
+    _patch_init(ASDFValidator)
+    _patch_iter_errors(ASDFValidator)
 
     return ASDFValidator
 

From 8feecb596e967a46d3d65d83f6cfaf5f92502d1d Mon Sep 17 00:00:00 2001
From: William Jamieson <wjamieson@stsci.edu>
Date: Wed, 31 Aug 2022 10:53:36 -0400
Subject: [PATCH 2/5] Unpin jsonschema

---
 pyproject.toml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/pyproject.toml b/pyproject.toml
index bf47ae5b..535fc73d 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -18,7 +18,7 @@ dependencies = [
     'asdf-transform-schemas >=0.2.2',
     'importlib_resources >=3; python_version <"3.9"',
     'jmespath >=0.6.2',
-    'jsonschema >=4.0.1, <4.10.0',
+    'jsonschema >=4.0.1',
     'numpy >=1.10',
     'packaging >=16.0',
     'pyyaml >=3.10',

From fce1a58be0e1bd16c7ce6b3b3602d78887eca584 Mon Sep 17 00:00:00 2001
From: William Jamieson <wjamieson@stsci.edu>
Date: Tue, 11 Oct 2022 11:12:17 -0400
Subject: [PATCH 3/5] Fix bug in docs

---
 docs/asdf/config.rst | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/docs/asdf/config.rst b/docs/asdf/config.rst
index 85b1a7d2..f89ee1fa 100644
--- a/docs/asdf/config.rst
+++ b/docs/asdf/config.rst
@@ -151,7 +151,7 @@ a schema, which can then be used to validate a file:
     ... type: object
     ... properties:
     ...   foo:
-    ...   type: string
+    ...     type: string
     ... required: [foo]
     ... ...
     ... """

From 6f79f620b4632e20178d9bd53528702605d3e976 Mon Sep 17 00:00:00 2001
From: Brett Graham <bgraham@stsci.edu>
Date: Mon, 3 Oct 2022 17:35:04 -0400
Subject: [PATCH 1/5] Unpin jsonschema, fix default validation

Add custom default validator to 'applicable_validators' argument
to jsonschema.validators.create

Tested locally with jsonschema 4.16

update changelog

[pre-commit.ci] auto fixes from pre-commit.com hooks

for more information, see https://pre-commit.ci
---
 CHANGES.rst    |  1 +
 asdf/schema.py | 10 ++++++++++
 2 files changed, 11 insertions(+)

diff --git a/asdf/schema.py b/asdf/schema.py
index 7a6ee123..dd787659 100644
--- a/asdf/schema.py
+++ b/asdf/schema.py
@@ -6,6 +6,7 @@
 from collections.abc import Mapping
 from functools import lru_cache
 from numbers import Integral
+from operator import methodcaller
 
 import numpy as np
 import yaml
@@ -749,6 +750,14 @@ def _validate_default(validator, default, instance, schema):
 
         validators.update({"default": _validate_default})
 
+        def applicable_validators(schema):
+            items = list(schema.items())
+            items.append(("default", ""))
+            return items
+
+    else:
+        applicable_validators = methodcaller("items")
+
     meta_schema_id = schema.get("$schema", YAML_SCHEMA_METASCHEMA_ID)
     meta_schema = _load_schema_cached(meta_schema_id, extension.get_default_resolver(), False, False)
 
@@ -759,6 +768,7 @@ def _validate_default(validator, default, instance, schema):
         validators=validators,
         type_checker=mvalidators.Draft4Validator.TYPE_CHECKER,
         id_of=mvalidators.Draft4Validator.ID_OF,
+        applicable_validators=applicable_validators,
     )
     validator = cls(meta_schema, resolver=resolver)
     validator.validate(schema)
