-------------------------------------------------------------------
Sat Jul 12 11:37:57 UTC 2025 - Dirk M端ller <dmueller@suse.com>

- update to 4.2.0:
  * Allow extra keywords in structured datatype validation.
  * yield instead of raise ValidationError in validate_datatype
    to allow use in schema combiners
  * Support recursive tagged nodes in load_yaml.
  * Allow non-null bytes before the first byte.
  * Fix deepcopy of lazy tree.
  * Improve documentation based on review feedback.
  * Optionally use fsspec for urls (like those for s3 resources)
    provided to asdf.open.
  * Load block index with CSafeLoader if available.
  * Deprecate opening http uris unless fsspec is installed.

-------------------------------------------------------------------
Sun Feb  9 13:23:03 UTC 2025 - Ben Greiner <code@bnavigator.de>

- Update to 4.1.0
  * fix type and filter docs for search by @braingram in #1880
  * improve schema info collection combiner handling by @braingram
    in #1875
  * pyproject.toml: version_file requires setuptools_scm>=8 by
    @wdconinc in #1894
  * Add Converter.to_info to customize info and search by
    @braingram in #1884
- Release 4.0.0
  * This is a major release for asdf that includes removal of
    deprecated features and changes to some defaults.
  ## Feature
  * Switch default ASDF standard to 1.6.0. (#1744)
  * Raise RuntimeError if a Convert subclass supports multiple tags
    but doesn't implement select_tag. (#1853)
  # General
  * Set memmap=False to default for asdf.open and
    AsdfFile.__init__. (#1801)
  ## Removal
  * remove copy_arrays (replaced by memmap) (#1800)
  * Remove deprecated API. See docs for full details. (#1852)
  * Switch default convert_unknown_ndarray_subclasses to False and
    issue deprecation warning if it is enabled. (#1858)

-------------------------------------------------------------------
Tue Nov 12 09:33:58 UTC 2024 - Dirk M端ller <dmueller@suse.com>

- update to 3.5.0:
  * Allow asdf.util.load_yaml to handle recursive objects
  * added issue links to changelog entries
  * Change asdf standard changelog entries to notes to ease
    transition to towncrier
  * fix changelog checker to remove brackets
  * Deprecate ignore_version_mismatch. This option has done
    nothing since asdf 3.0.0 and will be removed in an upcoming
    asdf version

-------------------------------------------------------------------
Thu Aug 29 14:09:01 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Update to 3.4.0
  * Fix issue where roundtripping a masked array with no masked
    values removes the mask [#1803]
  * Use a custom exception AsdfSerializationError to indicate when
    an object in the tree fails to be serialized by asdf (and by
    yaml). This exception currently inherits from
    yaml.representer.RepresenterError to provide backwards
    compatibility. However this inheritance may be dropped in a
    future asdf version. Please migrate to the new
    AsdfSerializationError. [#1809]
  * Drop importlib_metadata as a dependency on Python 3.12 and
    newer [#1810]
  * Bumped minimal requirement on attrs from 20.1.0 to 22.2.0
    [#1815]
- Release 3.3.0
  * Fix __asdf_traverse__ for non-tagged objects [#1739]
  * Deprecate asdf.testing.helpers.format_tag [#1774]
  * Deprecate asdf.versioning.AsdfSpec [#1774]
  * Deprecate asdf.util.filepath_to_url use pathlib.Path.to_uri
    [#1735]
  * Record package providing manifest for extensions used to write
    a file and AsdfPackageVersionWarning when installed
    extension/manifest package does not match that used to write
    the file [#1758]
  * Fix bug where a dictionary containing a key id caused any
    contained references to fail to resolve [#1716]
  * Issue a AsdfManifestURIMismatchWarning during write if a used
    extension was created from a manifest registered with a uri
    that does not match the id in the manifest [#1785]
  * Allow converters to provide types as strings that can resolve
    to public classes (even if the class is implemented in a
    private module). [#1654]
  * Add options to control saving the base array when saving array
    views controlled via AsdfConfig.default_array_save_base,
    AsdfFile.set_array_save_base and
    SerializationContext.set_array_save_base [#1753]
  * Deprecate ignore_implicit_conversion and "implicit conversion"
    [#1724]
  * Add lazy_tree option to asdf.open and asdf.config to allow lazy
    deserialization of ASDF tagged tree nodes to custom objects.
    [#1733]

-------------------------------------------------------------------
Fri Apr 19 20:12:15 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Update to 3.2.0
  * Deprecate AsdfFile.version_map [#1745]
  * Fix numpy.ma.MaskedArray saving for numpy 2.x [#1769]
  * Add float16 support [#1692]
  * Removed unused asdf-unit-schemas dependency [#1767]

-------------------------------------------------------------------
Sun Mar 10 11:45:02 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Update to 3.1.0
  * Cleanup asdf.util including deprecating: human_list
    resolve_name minversion and iter_subclasses [#1688]
  * Deprecate validation on AsdfFile.tree assignment. Please use
    AsdfFile.validate to validate the tree [#1691]
  * Deprecate validation during AsdfFile.resolve_references. Please
    use AsdfFile.validate to validate the tree [#1691]
  * Deprecate asdf.asdf and AsdfFile.resolve_and_inline [#1690]
  * Deprecate automatic calling of AsdfFile.find_references during
    AsdfFile.__init__ and asdf.open [#1708]
  * Allow views of memmapped arrays to keep the backing mmap open
    to avoid segfaults [#1668]
  * Introduce memmap argument to asdf.open that overrides
    copy_arrays with documentation that describes that the default
    for memmap when copy_arrays is removed in an upcoming asdf
    release will be False and asdf will no longer by-default memory
    map arrays. [#1667]
  * Introduce asdf.util.load_yaml to load just the YAML contents of
    an ASDF file (with the option tagged to load the contents as a
    tree of asdf.tagged.Tagged instances to preserve tags) [#1700]
  * Require pytest 7+ and update asdf pytest plugin to be
    compatible with the current development version of pytest (8.1)
    [#1731]
  * Eliminate the use of the legacy tmpdir fixture in favor of the
    new tmp_path fixture for temporary directory creation. [#1759]
  * Remove conversion of warnings to errors in asdf pytest plugin.
    This prevented other warning filters (like those provided with
    -W) from working. If you want these warnings to produce errors
    you can now add your own warning filter [#1757]
  * Only show str representation during info and search if it
    contains a single line (and does not fail) [#1748]


-------------------------------------------------------------------
Sun Feb 11 18:12:12 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Drop removed test dependencies: gwcs throws AsdfWarning about an
  API change in Converter gh#asdf-format/asdf#1594
- Fix some rpmlint

-------------------------------------------------------------------
Sun Feb  4 10:21:15 UTC 2024 - Dirk M端ller <dmueller@suse.com>

- update to 3.0.1:
  * Fix bug in asdftool diff for arrays within a list
  * Drop support for ASDF-in-FITS.
  * Add all_array_storage, all_array_compression and
    all_array_compression_kwargs to asdf.config.AsdfConfig
  * Move built-in tags to converters (except ndarray and
    integer).
  * Add block storage support to Converter
  * Remove deprecated legacy extension API
  * Fix issue opening files that don't support fileno
  * Allow Converters to defer conversion to other Converters by
    returning None in Converter.select_tag
  * Remove deprecated tests.helpers
  * Remove deprecated load_custom_schema
  * Remove deprecated TagDefinition.schema_uri
  * Removed deprecated AsdfFile.open and deprecated asdf.open
    AsdfFile.write_to and AsdfFile.update kwargs
  * Fix AsdfFile.info loading all array data
  * Blank out AsdfFile.tree on close
  * Move ndarray to a converter, add
    convert_unknown_ndarray_subclasses to asdf.config.AsdfConfig,
    move asdf.Stream to asdf.tags.core.Stream, update block
    storage support for Converter and update internal block API
  * Remove deprecated resolve_local_refs argument to load_schema
  * Move IntegerType to converter and drop cache of converted
    values.
  * Remove legacy extension API
  * Fix bug that left out the name of the arrays that differed
    for asdftool diff comparisons

-------------------------------------------------------------------
Mon Oct  2 10:04:59 UTC 2023 - Dirk M端ller <dmueller@suse.com>

- update to 2.15.2:
  * The ASDF Standard is at v1.6.0
  * Add support for python 3.12 [#1641]

-------------------------------------------------------------------
Fri Aug 11 03:06:11 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Update to 2.15.1
  * the ASDF Standard is at v1.6.0
  * Drop Python 3.8 support [#1556]
  * Drop NumPy 1.20, 1.21 support [#1568]
  * Convert numpy scalars to python types during yaml encoding to
    handle NEP51 changes for numpy 2.0 [#1605]
  * Vendorize jsonschema 4.17.3 [#1591]
  * jsonschema vendorization
    - Asdf 2.15.1 includes internally a version of jsonschema
      4.17.3. This inclusion was done to deal with incompatible
      changes in jsonschema 4.18.
    - Many libraries that use asdf import jsonschema to allow
      catching of ValidationError instances that might be raised
      during schema validation. Prior to asdf 2.15 this error type
      was not part of the public asdf API. For 2.15 and later users
      are expected to import ValidationError from asdf.exceptions
      (instead of jsonschema directly).
    - To further ease the transition, asdf will, when possible, use
      exceptions imported from any installed version of jsonschema.
      This means that when the asdf internal jsonschema raises a
      ValidationError on a system where jsonschema was separately
      installed, the internal jsonschema will attempt to use
      ValidationError from the installed version. This should allow
      code that catches exceptions imported from jsonschema to
      continue to work with no changes. However, asdf cannot
      guarantee compatibility with future installed jsonschema
      versions and users are encouraged to update their code to
      import ValidationError from asdf.exceptions.
    - Finally, asdf is temporarily keeping jsonschema as a
      dependency as many libraries expected this to be installed by
      asdf. We expect to drop this requirement soon (likely in
      3.0.0) and this change might occur in a minor or even patch
      version.

-------------------------------------------------------------------
Thu May 18 18:40:12 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Update to 2.15.0
  * Add AsdfProvisionalAPIWarning to warn developers of new
    features that may undergo breaking changes but are likely to be
    included as stable features (without this warning) in a future
    version of ASDF [#1295]
  * Add AsdfDeprecationWarning to AsdfFile.blocks [#1336]
  * Document policy for ASDF release cycle including when support
    for ASDF versions end. Also document dependency support policy.
    [#1323]
  * Update lower pins on numpy (per release policy), packaging, and
    pyyaml to ones that we can successfully build and test against.
    [#1360]
  * Provide more informative filename when failing to open a file
    [#1357]
  * Add new plugin type for custom schema validators. [#1328]
  * Add AsdfDeprecationWarning to asdf.types.CustomType [#1359]
  * Throw more useful error when provided with a path containing an
    extra leading slash [#1356]
  * Add AsdfDeprecationWarning to AsdfInFits. Support for reading
    and writing ASDF in fits files is being moved to stdatamodels.
    [#1337]
  * Add AsdfDeprecationWarning to asdf.resolver [#1362]
  * Add AsdfDeprecationWarning to
    asdf.tests.helpers.assert_extension_correctness [#1388]
  * Add AsdfDeprecationWarning to asdf.type_index [#1403]
  * Add warning to use of asdftool extract and remove-hdu about
    deprecation and impending removal [#1411]
  * Deprecate AsdfFile attributes that use the legacy extension api
    [#1417]
  * Add AsdfDeprecationWarning to asdf.types [#1401]
  * deprecate default_extensions, get_default_resolver and
    get_cached_asdf_extension_list in asdf.extension [#1409]
  * move asdf.types.format_tag to asdf.testing.helpers.format_tag
    [#1433]
  * Deprecate AsdfExtenion, AsdfExtensionList, BuiltinExtension
    [#1429]
  * Add AsdfDeprecationWarning to asdf_extensions entry point
    [#1361]
  * Deprecate asdf.tests.helpers [#1440]
  * respect umask when determining file permissions for written
    files [#1451]
- Release 2.14.4
  * require jsonschema<4.18 [#1487]
- Release 2.14.3
  * Use importlib_metadata for all python versions [#1260]
  * Fix issue #1268, where update could fail to clear memmaps for
    some files [#1269]
  * Bump asdf-transform-schemas version [#1278]
- Release 2.14.2
  * Fix issue #1256, where enum could not be used on tagged
    objects. [#1257]
- Release 2.14.1
  * Fix issue #1239, close memmap with asdf file context [#1241]
- Release 2.14.0
  * Update citation. [#1184]
  * Add search support to ~asdf.AsdfFile.schema_info. [#1187]
  * Add asdf.search.AsdfSearchResult support for
    ~asdf.AsdfFile.schema_info and
    ~asdf.search.AsdfSearchResult.schema_info method. [#1197]
  * Use forc ndarray flag to correctly test for fortran array
    contiguity [#1206]
  * Unpin jsonschema version and fix jsonschema deprecation
    warnings. [#1185]
  * Replace pkg_resources with importlib.metadata. [#1199]
  * Fix default validation for jsonschema 4.10+ [#1203]
  * Add asdf-unit-schemas as a dependency, for backwards
    compatibility. [#1210]
  * Remove stray toplevel packages docker docs and
    compatibility_tests from wheel [#1214]
  * Close files opened during a failed call to asdf.open [#1221]
  * Modify generic_file for fsspec compatibility [#1226]
  * Add fsspec http filesystem support [#1228]
  * Memmap whole file instead of each array [#1230]
  * Fix issue #1232 where array data was duplicated during resaving
    of a fits file [#1234]
- Drop asdf-pr1185+pr1203-fix-jsonschema.patch fixed upstream
- Drop asdf-pr1214-installed-packages.patch fixed upstream

-------------------------------------------------------------------
Thu May 18 16:08:18 UTC 2023 - Dirk M端ller <dmueller@suse.com>

- set sle15_python_module_pythons to build with newer python
  stack on SLE15 on SLE15 on SLE15 on SLE15

-------------------------------------------------------------------
Sat Oct 22 10:00:12 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update to 2.13.0
  * The ASDF Standard is at v1.6.0
  * Add ability to pull information from schema about asdf file
    data, using ~asdf.AsdfFile.schema_info method. [#1167]
- Release 2.12.1
  * Overhaul of the ASDF documentation to make it more consistent
    and readable. [#1142, #1152]
  * Update deprecated instances of abstractproperty to
    abstractmethod [#1148]
  * Move build configuration into pyproject.toml [#1149, #1155]
  * Pin jsonschema to below 4.10.0. [#1171]
- Release 2.12.0
  * Added ability to display title as a comment in using the info()
    functionality. [#1138]
  * Add ability to set asdf-standard version for schema example
    items. [#1143]
- Add asdf-pr1185+pr1203-fix-jsonschema.patch
  * gh#asdf-format/asdf#1185, gh#asdf-format/asdf#1203
- Add asdf-pr1214-installed-packages.patch
  * gh#asdf-format/asdf#1214

-------------------------------------------------------------------
Tue Apr 26 11:36:22 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update to 2.11.1
  * Update minimum astropy version to 5.0.4. [#1133]
  * Update minimum jsonschema version to 4.0.1. [#1105]
- Collect tests from installed sitelib -- gh#pytest-dev/pytest#9765

-------------------------------------------------------------------
Sun Mar 13 07:57:12 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update to 2.10.1
  * Bugfix for circular build dependency for asdf.
  * Fix small bug with handling multiple schema uris per tag.
  * Replace asdf-standard submodule with pypi package. [#1079]
  * Fix deprecation warnings stemming from the release of pytest
    7.0.0.
  * Fix bug in pytest plugin when schemas are not in a directory
    named "schemas".
- Release 2.9
  * The ASDF Standard is at v1.6.0.
  * Fix typo in testing module __init__.py name.
  * Add the capability for classes to expose their contents to
    AsdfFile.info and AsdfFile.search via the __asdf_traverse__
    method.
  * Drop support for Python 3.6.
  * Update setup.py to raise error if "git submodule update --init"
    has not been run.
  * Add ability for tags to correspond to multiple schema_uri, with
    an implied allOf among the schema_uris.
  * Add the URL of the file being parsed to SerializationContext.
  * Add asdf.testing.helpers module with simplified versions of
    test helpers previously available in asdf.tests.helpers.
- Drop patches merged
  * asdf-pr1034-tags.patch
  * asdf-standard-pr289-schema.patch

-------------------------------------------------------------------
Tue Dec 28 18:57:17 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Add patches for working with newer gwcs and asdf-astropy
  * asdf-pr1034-tags.patch
  * asdf-standard-pr289-schema.patch

-------------------------------------------------------------------
Mon Dec 13 18:43:20 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to version 2.8.3
  * Fix array compression for non-native byte order.
  * Fix bug in schema loading when URI is claimed by both legacy
    and new-style extensions.
  * Hide 'name' and 'version' attributes on instances of
    NDArrayType.
  * Fix use of "python" instead of "python3" in compatibility
    tests.
- Unpin pytest<6 -- gh#asdf-format/asdf#1038

-------------------------------------------------------------------
Thu Nov 11 23:33:42 UTC 2021 - Steve Kowalik <steven.kowalik@suse.com>

- Add multibuild to avoid a build loop.

-------------------------------------------------------------------
Mon Jul 19 16:39:42 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to version 2.8.1
  * Fix bug that corrupts ndarray views when a new block is added
    to an existing file in absence of a block index.
- Release 2.8.0
  * New plugin APIs for block compressors, extensions, and schemas.
  * New global configuration mechanism (asdf.get_config()).
  * Support for the asdf:// URI scheme.
  * Drop support for Python 3.5.
  * Support for ASDF Standard 1.6.0, which is available via the
    version argument to AsdfFile.__init__ but not yet the
    default.
  * Values that match defaults defined in schemas are no longer
    automatically removed from the ASDF tree.
  * None values are no longer removed from the tree on write.
  * Remove the asdf.test method and asdf.__githash__ attribute.
  * And more, see CHANGES.rst for details.
- Update build and runtime requirements

-------------------------------------------------------------------
Sat Apr 17 14:21:09 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to version 2.7.3
  * Fix bug resulting in invalid strides values for views over FITS
    arrays.
  * Add pytest plugin options to skip and xfail individual tests
    and xfail the unsupported ndarray-1.0.0 schema example.

-------------------------------------------------------------------
Thu Feb 11 10:18:50 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to version 2.7.2
  * Fix bug causing test collection failures under Python 3.9.
  * Fix bug when decompressing arrays with numpy 1.20.
  * Replace assert statements with raise at the behest
    of the bandit security linter.

-------------------------------------------------------------------
Tue Dec  8 22:37:37 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Fix pytest collection error by importing from source dir
- Fix rpmlint shebang errors

-------------------------------------------------------------------
Mon Sep 14 18:11:01 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update to version 2.7.1
  * Fix bug preventing access to copied array data after
    AsdfFile is closed. [#869]
- Changelog for 2.7.0
  * Fix bug preventing diff of files containing
    ndarray-1.0.0 objects in simplified form. [#786]
  * Fix bug causing duplicate elements to appear when
    calling copy.deepcopy on a TaggedList. [#788]
  * Improve validator performance by skipping unnecessary
    step of copying schema objects. [#784]
  * Fix bug with auto_inline option where inline blocks are
    not converted to internal when they exceed the threshold.
    [#802]
  * Fix misinterpretation of byte order of blocks stored in
    FITS files. [#810]
  * Improve read performance by skipping unnecessary
    rebuild of tagged tree. [#787]
  * Add option to asdf.open and fits_embed.AsdfInFits.open
    that disables validation on read. [#792]
  * Fix bugs and code style found by adding F and W flake8
    checks. [#797]
  * Eliminate warnings in pytest plugin by using
    from_parent when available. [#799]
  * Prevent validation of empty tree when AsdfFile is
    initialized. [#794]
  * All warnings now subclass asdf.exceptions.AsdfWarning.
    [#804]
  * Improve warning message when falling back to an older
    schema, and note that fallback behavior will be removed
    in 3.0. [#806]
  * Drop support for jsonschema 2.x. [#807]
  * Stop traversing oneOf and anyOf combiners when filling
    or removing default values. [#811]
  * Fix bug in version map caching that caused incompatible
    tags to be written under ASDF Standard 1.0.0. [#821]
  * Fix bug that corrupted ndarrays when the underlying
    block array was converted to C order on write. [#827]
  * Fix bug that produced unreadable ASDF files when an
    ndarray in the tree was both offset and broadcasted.
    [#827]
  * Fix bug preventing validation of default values in
    schema.check_schema. [#785]
  *  Add option to disable validation of schema default
    values in the pytest plugin. [#831]
  * Prevent errors when extension metadata contains
    additional properties. [#832]

-------------------------------------------------------------------
Tue Jul  7 11:06:32 UTC 2020 - Marketa Calabkova <mcalabkova@suse.com>

- Update to 2.6.0
  * AsdfDeprecationWarning now subclasses DeprecationWarning. [#710]
  * Resolve external references in custom schemas, and deprecate
    asdf.schema.load_custom_schema.  [#738]
  * Add ``asdf.info`` for displaying a summary of a tree, and
    ``AsdfFile.search`` for searching a tree. [#736]
  * Add pytest plugin option to skip warning when a tag is
    unrecognized. [#771]
  * Fix generic_io ``read_blocks()`` reading past the requested size [#773]
  * Add support for ASDF Standard 1.5.0, which includes several new
    transform schemas. [#776]
  * Enable validation and serialization of previously unhandled numpy
    scalar types. [#778]
  * Fix handling of trees containing implicit internal references and
    reference cycles.  Eliminate need to call ``yamlutil.custom_tree_to_tagged_tree``
    and ``yamlutil.tagged_tree_to_custom_tree`` from extension code,
    and allow ``ExtensionType`` subclasses to return generators. [#777]
  * Fix bug preventing history entries when a file was previously
    saved without them. [#779]
  * Update developer overview documentation to describe design of changes
    to handle internal references and reference cycles. [#781]

-------------------------------------------------------------------
Wed May 27 09:36:04 UTC 2020 - Petr Gajdos <pgajdos@suse.com>

- %python3_only -> %python_alternative

-------------------------------------------------------------------
Mon Apr  6 09:46:30 UTC 2020 - Tom叩邸 Chv叩tal <tchvatal@suse.com>

- Update to 2.5.2:
  * Add schemas that were previously missing from ASDF Standard 1.4.0,
    and fix a variety of minor issues in AsdfType subclasses.
  * Add general and versioning-specific developer documentation.

-------------------------------------------------------------------
Thu Jan 30 14:36:45 UTC 2020 - Todd R <toddrme2178@gmail.com>

- Update to 2.5.1
  * Fix bug in test causing failure when test suite is run against
    an installed asdf package.
- Update to 2.5.0
  * Added asdf-standard 1.4.0 to the list of supported versions.
  * Fix load_schema LRU cache memory usage issue
  * Add convenience method for fetching the default resolver
  * ``SpecItem`` and ``Spec`` were deprecated  in ``semantic_version``
    and were replaced with ``SimpleSpec``.
  * Pinned the minimum required ``semantic_version`` to 2.8.
  * Fix bug causing segfault after update of a memory-mapped file.
- Drop upstream-included allow_recent_semantic_version.patch

-------------------------------------------------------------------
Fri Nov 22 15:12:48 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to 2.4.2
  * Limit the version of semantic_version to <=2.6.0 to work around a Deprecation warning.
- Update to 2.4.1
  * Define the ``in`` operator for top-level ``AsdfFile`` objects.
  * Overhaul packaging infrastructure. Remove use of ``astropy_helpers``.
  * Automatically register schema tester plugin. Do not enable schema tests by
    default. Add configuration setting and command line option to enable schema
    tests.
  * Enable handling of subclasses of known custom types by using decorators for
    convenience.
  * Add support for jsonschema 3.x.
- Add allow_recent_semantic_version.patch to provide support for
  the version of python-semantic_version we have.
  From: https://github.com/spacetelescope/asdf/pull/715
  See: https://github.com/spacetelescope/asdf/issues/702

-------------------------------------------------------------------
Tue Aug  6 14:12:12 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Does not support jsonschema 3 (this will be fixed in version 2.4).

-------------------------------------------------------------------
Fri Jul 26 18:02:11 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Initial version
