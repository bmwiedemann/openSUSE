-------------------------------------------------------------------
Wed Jan  8 10:44:43 UTC 2025 - John Paul Adrian Glaubitz <adrian.glaubitz@suse.com>

- Update to 1.29.0
  * Fix crash exporting a log record with None body
  * Fix metrics export with exemplar and no context and filtering observable instruments
  * Fix recursion error with sdk disabled and handler added to root logger
  * sdk: setup EventLogger when OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED is set
  * api: fix logging of duplicate EventLogger setup warning
  * sdk: fix setting of process owner in ProcessResourceDetector
  * sdk: fix serialization of logs severity_number field to int
  * Remove `TestBase.assertEqualSpanInstrumentationInfo` method,
    use `assertEqualSpanInstrumentationScope` instead
  * sdk: instantiate lazily `ExemplarBucket`s in `ExemplarReservoir`s
  * semantic-conventions: Bump to 1.29.0
- from version 1.28.0
  * Removed superfluous py.typed markers and added them where they were missing
  * Include metric info in encoding exceptions
  * sdk: Add support for log formatting
  * sdk: Add Host resource detector
  * sdk: Implementation of exemplars
  * Implement events sdk
  * Update semantic conventions to version 1.28.0
  * Add support to protobuf 5+ and drop support to protobuf 3 and 4
  * Update environment variable descriptions to match signal
  * Record logger name as the instrumentation scope name
  * Fix memory leak in exporter and reader
  * Drop `OTEL_PYTHON_EXPERIMENTAL_DISABLE_PROMETHEUS_UNIT_NORMALIZATION` environment variable
  * Improve compatibility with other logging libraries that override
    `LogRecord.getMessage()` in order to customize message formatting

-------------------------------------------------------------------
Wed Sep 11 08:23:52 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 1.27.0:
  * Implementation of Events API
  * Make log sdk add `exception.message` to logRecord for
    exceptions whose argument is an exception not a string
    message
  * Fix use of `link.attributes.dropped`, which may not exist
  * Running mypy on SDK resources
  * Added py.typed file to top-level module
  * Drop Final annotation from Enum in semantic conventions
  * Update log export example to not use root logger
  * sdk: Add OS resource detector
  * sdk: Accept non URL-encoded headers in
    `OTEL_EXPORTER_OTLP_*HEADERS` to match other languages SDKs
  * Update semantic conventions to version 1.27.0
  * Add support to type bytes for OTLP AnyValue
  * Export ExponentialHistogram and ExponentialHistogramDataPoint
  * Implement Client Key and Certificate File Support for All
    OTLP Exporters
  * Remove `_start_time_unix_nano` attribute from
    `_ViewInstrumentMatch` in favor of using `time_ns()` at the
    moment when the aggregation object is created

- update to 1.26.0:
  * Standardizing timeout calculation in measurement consumer
    collect to nanoseconds
  * optional scope attributes for logger creation
  * optional scope attribute for tracer creation
  * OTLP exporter is encoding invalid span/trace IDs in the logs
    fix
  * Update sdk process resource detector `process.command_args`
    attribute to also include the executable itself
  * Fix `start_time_unix_nano` for delta collection for explicit
    bucket histogram aggregation
  * Fix `start_time_unix_nano` for delta collection for sum
    aggregation
  * Update opentracing and opencesus docs examples to not use
    JaegerExporter
  * Do not execute Flask Tests in debug mode
  * When encountering an error encoding metric attributes in the
    OTLP exporter, log the key that had an error.
  * Fix `ExponentialHistogramAggregation`
  * Log a warning when a `LogRecord` in `sdk/log` has dropped
    attributes due to reaching limits
  * Fix RandomIdGenerator can generate invalid Span/Trace Ids
  * Add Python 3.12 to tox
  * Improve resource field structure for LogRecords
  * Update Semantic Conventions code generation scripts:  - fix
    namespace exclusion that resulted in dropping  `os` and `net`
    namespaces.  - add `Final` decorator to constants to prevent
    collisions  - enable mypy and fix detected issues  - allow to
    drop specific attributes in preparation for Semantic
    Conventions v1.26.0
  * Update semantic conventions to version 1.26.0.
  * Use semconv exception attributes for record exceptions in
    spans
  * Fix _encode_events assumes events.attributes.dropped exists
  * Validate links at span creation
  * Add attributes field in  `MeterProvider.get_meter` and
    `InstrumentationScope`
  * Fix inaccessible `SCHEMA_URL` constants in `opentelemetry-
    semantic-conventions`

-------------------------------------------------------------------
Mon Jun 17 11:39:29 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 1.25.0:
  * Fix class BoundedAttributes to have RLock rather than Lock
  * Remove thread lock by loading RuntimeContext explicitly.
  * Update proto version to v1.2.0
  * Add to_json method to ExponentialHistogram
  * Bump mypy to 1.9.0
  * Fix exponential histograms
  * Fix otlp exporter to export log_record.observed_timestamp
  * Add capture the fully qualified type name for raised
    exceptions in spans
  * Prometheus exporter sort label keys to prevent duplicate
    metrics when user input changes order
  * Rename test objects to avoid pytest warnings
  * Add span flags to OTLP spans and links
  * Record links with invalid SpanContext if either attributes or
    TraceState are not empty
  * Add OpenTelemetry trove classifiers to PyPI packages ([#3913]
  * Fix prometheus metric name and unit conversion (#3924)
  * Add parameters for Distros and configurators to configure
    autoinstrumentation in addition to existing environment
    variables.

-------------------------------------------------------------------
Wed Apr  3 07:25:46 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 1.24.0:
  * Make create_gauge non-abstract method
  * Make `tracer.start_as_current_span()` decorator work with
    async functions
  * Fix python 3.12 deprecation warning
  * bump mypy to 0.982
  * Add support for OTEL_SDK_DISABLED environment variable
  * Fix ValueError message for PeriodicExportingMetricsReader
  * Use `BaseException` instead of `Exception` in
    `record_exception`
  * Make span.record_exception more robust
  * Fix license field in pyproject.toml files

-------------------------------------------------------------------
Sat Mar 23 22:18:01 UTC 2024 - Jaime Marquínez Ferrándiz <jaime.marquinez.ferrandiz@fastmail.net>

- update to 1.23.0:
  * Use Attribute rather than boundattribute in logrecord (#3567)
  * Fix flush error when no LoggerProvider configured for LoggingHandler (#3608)
  * Fix OTLPMetricExporter ignores preferred_aggregation property (#3603)
  * Logs: set observed_timestamp field (#3565)
  * Add missing Resource SchemaURL in OTLP exporters (#3652)
  * Fix loglevel warning text (#3566)
  * Prometheus Exporter string representation for target_info labels (#3659)
  * Logs: ObservedTimestamp field is missing in console exporter output (#3564)
  * Fix explicit bucket histogram aggregation (#3429)
  * Add code.lineno, code.function and code.filepath to all logs (#3645)
  * Add Synchronous Gauge instrument (#3462)
  * Drop support for 3.7 (#3668)
  * Include key in attribute sequence warning (#3639)
  * Upgrade markupsafe, Flask and related dependencies to dev and test
    environments (#3609)
  * Handle HTTP 2XX responses as successful in OTLP exporters (#3623)
  * Improve Resource Detector timeout messaging (#3645)
  * Add Proxy classes for logging (#3575)
  * Remove dependency on 'backoff' library (#3679)

-------------------------------------------------------------------
Mon Jan 15 21:10:53 UTC 2024 - Dirk Müller <dmueller@suse.com>

- Initial package (1.22.0)
