-------------------------------------------------------------------
Tue Jan 17 18:19:14 UTC 2023 - Tony Jones <tonyj@suse.com>

- Update to version 7.0 (jsc#PED-3032)

  - See https://icl.utk.edu/papi/news/news.html?id=384 for more detail on the following major
    changes in this release.

    * A new "intel_gpu" component with monitoring capabilities support for Intel GPUs (including 
      GPU hardware events and memory performance metrics.

    * A new "sysdetect" component for detecting a machine's architectural details.

    * A major redesign of the "rocm" component for advanced monitoring features for the latest AMD 
      GPUs. 

    * Support for NVIDIA compute capability 7.0 and greater. 

    * A significant redesign of the "sde" component into two separate entities

    * A new C++ interface for "libsde,"

    * New Counter Analysis Toolkit (CAT) benchmarks and refinements of PAPI's CAT data analysis.

    * Support for FUGAKU's A64FX Arm architecture

-------------------------------------------------------------------
Fri Mar  4 21:14:30 UTC 2022 - Tony Jones <tonyj@suse.com>

- Change papi_hl_output_writer.py script to reference Python3 (bsc#1196709)
  New patch: python3.patch

-------------------------------------------------------------------
Thu Feb 11 06:32:54 UTC 2021 - Egbert Eich <eich@suse.com>

- Update PAPI to v6.0.0.1 bugfix release:
  * Fix undefined reference to "pthread_self" in static builds.
  * Fix a bug with "make -j".

-------------------------------------------------------------------
Wed Mar  4 18:55:04 UTC 2020 - Tony Jones <tonyj@suse.com>

- Update to PAPI v6.0
  - Major Changes:
   * Added the rocm component to support performance counters on AMD GPUs.
   * Added the rocm_smi component; SMI is System Management Interface to 
     monitor power usage on AMD GPUs, which is also writeable by the user, 
     e.g. to reduce power consumption on non-critical operations.
    * Added 'io' component to expose I/O statistics exported by the Linux 
      kernel (/proc/self/io).
    * Added 'SDE' component, Software Defined Events, which allows HPC software
      layers to expose internal performance-critical behavior via Software 
      Defined Events (SDEs) through the PAPI interface.
    * Added 'SDE API' to register performance-critical events that originate 
      from HPC software layers, and which are recognized as 'PAPI counters' 
      and, thus, can be monitored with the standard PAPI interface.
    * Added powercap_ppc component to support monitoring and capping of power 
      usage on IBM PowerPC architectures (Power9 and later) using the powercap 
      interface exposed through the Linux kernel.
    * Added 'sensors_ppc' component to support monitoring of system metrics on 
      IBM PowerPC architectures (Power9 and later) using the opal/exports sysfs
      interface.
    * Retired infiniband_umad component, it is superseded by infiniband.
    * Revived PAPI's 'high-level API' to make it more intuitive and effective 
      for novice users and quick event reporting.
    * Added 'counter_analysis_toolkit' sub-directory (CAT): A tool to assist 
      with native performance counter disambiguation through micro-benchmarks, 
      which are used to probe different important aspects of modern CPUs, to 
      aid the classification of native performance events.
    * Other Changes include:
    * Standardized our environment variables and implemented a simplified, 
      unified approach for specifying libraries necessary for components, with 
      overrides possible for special circumstances. Eliminated component level 
      'configure' requirements.
    * Corrected TLS issues (Thread Local Storage) and race conditions.
    * Several bug fixes, documentation fixes and enhancements, improvements to 
      README files for user instruction and code comments.

  - Other Changes:
    * Standardized our environment variables and implemented a simplified, 
      unified approach for specifying libraries necessary for components, with 
      overrides possible for special circumstances. Eliminated component level 
      'configure' requirements.
    * Corrected TLS issues (Thread Local Storage) and race conditions.
    * Several bug fixes, documentation fixes and enhancements, improvements to 
      README files for user instruction and code comments.

  - Drop patch: papi-fix-ldflags.patch (upstream)
  - Clean up spec file, remove unnecessary portions.

-------------------------------------------------------------------
Thu Nov 28 17:06:04 UTC 2019 - Egbert Eich <eich@suse.com>

- Add master package for library in HPC build (boo#1158048).

-------------------------------------------------------------------
Thu Oct 10 13:46:44 UTC 2019 - Tony Jones <tonyj@suse.com>

- Delete patch: papi-codecleanup.patch 
  Patch has been present since first checkin but there is no indication 
  as to it's purpose, no bug reference and it is not needed for successful 
  test run. 

- Refresh patch: papi-fix-ldflags.patch  
  Add proper patch description. Contents pushed upstream. 

-------------------------------------------------------------------
Wed Apr 24 17:28:18 UTC 2019 - Martin Liška <mliska@suse.cz>

- Disable LTO (boo#1133272).

-------------------------------------------------------------------
Thu Apr  4 15:44:09 UTC 2019 - Christian Vögl <christian.voegl@suse.com>

- Update to 5.7.0 (jsc#SLE-8562)
  Major Changes:
  * Validation tests:  A substantial effort to add validation tests to PAPI
    to check and detect problems in the definition of PAPI preset events.  
  * Event testing:  Thorough cleanup of code in the C and Fortran testing to 
    add processor support, cleanup output and make the testing behavior
    consistent.
  * CUDA component:  Updated and rewritten to support CUPTI Metric API
   (combinations of basic events).  This component now supports NVLink 
   information through the Metric API. Updated testing for the component.  
  * NVML component: Updated to support power management limits and improved
    event names. Minor other bug fixes.
  * RAPL component: Added support for: Intel Atom models Goldmont / Gemini_Lake
    / Denverton, Skylake-X / Kabylake
  * PAPI preset events:  Many updates to the PAPI preset event mappings; 
    Skylake X support, initial AMD fam17h, fix AMD fam16h, added 
    more Power8 events, initial Power9 events. 

-------------------------------------------------------------------
Mon Feb 18 17:07:43 UTC 2019 - Egbert Eich <eich@suse.com>

- Expose PAPI_LIB from module also when no devel package is installed
  (bsc#1125825).

-------------------------------------------------------------------
Thu Oct  4 19:16:13 UTC 2018 - Michal Suchanek <msuchanek@suse.de>

- Fix pcp build (boo#1107637).
  libpapi-devel depends on papi which was dynamically linked in the past and
  pulled in libpapi. It is linked statically now so the libpapi dependency
  needs to be added.

-------------------------------------------------------------------
Wed Aug 22 12:49:47 UTC 2018 - msuchanek@suse.com

- Update to 5.6.0 (FATE#321456).

  Major changes:
  * Validation tests:  A substantial effort to add validation tests to PAPI to
    check and detect problems in the definition of PAPI preset events.
  * Event testing:  Thorough cleanup of code in the C and Fortran testing to
    add processor support, cleanup output and make the testing behavior
    consistent.
  * CUDA component:  Updated and rewritten to support CUPTI Metric API
    (combinations of basic events).  This component now supports NVLink
    information through the Metric API. Updated testing for the component.
  * NVML component: Updated to support power management limits and improved
    event names. Minor other bug fixes.
  * RAPL component: Added support for: Intel Atom models Goldmont / Gemini_Lake
    / Denverton, Skylake-X / Kabylake
  * PAPI preset events:  Many updates to the PAPI preset event mappings;
    Skylake X support, initial AMD fam17h, fix AMD fam16h, added more Power8
    events, initial Power9 events.

  Other changes:
  * Updating man and help pages for papi_avail and papi_native_avail.
  * Powercap component:  Added test for setting power caps via PAPI powercap
    component.
  * Infiniband component:  Bugfix for infiniband_umad component.
  * Uncore component:  Updated to support recent processors.
  * Lmsensors component updated to support correct runtime linking, better
    events name, and a number of bug fixes.
  * Updated and fixed timer support for multiple architectures.
  * All components: Cleanup and standardize testing behavior in the components.
  * Build system: Much needed cleanup of configure and make scripts.
  * Support for C++ was enhanced.
  * Enabling optional support for reading events using perfevent-rdpmc on
    recent Linux kernels can speed up PAPI_read() by a factor of 5.
  * Pthread testing limited to avoid excessive CPU consumption on highly
    parallel machines.

- Refresh papi-codecleanup.patch
- Remove papi-power9_event_list_presets.patch:
  obsoleted by update.
- Add papi-fix-ldflags.patch: fix libdl linking errors

-------------------------------------------------------------------
Fri Feb  9 14:46:30 UTC 2018 - cgoll@suse.com

- Fix summary in module files (bnc#1080259)

-------------------------------------------------------------------
Sat Jan  6 14:42:20 UTC 2018 - eich@suse.com

- Fix unexpanded rpm macro in environment module file for HPC (boo#1074897).

-------------------------------------------------------------------
Sun Nov 12 12:28:10 UTC 2017 - eich@suse.com

- Add lua-lmod as dependency to HPC package.

-------------------------------------------------------------------
Mon Oct 30 23:51:35 UTC 2017 - eich@suse.com

- Fix Requires for HPC build.

-------------------------------------------------------------------
Tue Oct 17 13:31:11 UTC 2017 - eich@suse.com

- Add magic to limit the number of flavors built in the
  in the OBS ring.

-------------------------------------------------------------------
Thu Oct 12 05:46:35 UTC 2017 - eich@suse.com

- Generate baselib.conf dynamically and only for the non-HPC
  build: this avoids issues with the source validator.

-------------------------------------------------------------------
Wed Oct 11 20:57:40 UTC 2017 - eich@suse.com

- Work around openSUSE:Factory spec file validation test.

-------------------------------------------------------------------
Fri Sep 11 19:00:50 UTC 2017 - eich@suse.com

- Converted to multibuild.
- Add HPC build using environment modules
  (FATE#321720).

-------------------------------------------------------------------
Mon Sep 11 15:23:35 CEST 2017 - pth@suse.de

- Add papi-power9_event_list_presets.patch from IBM to add support
  for the POWER9 architecture (fate#322255).

-------------------------------------------------------------------
Thu Nov 24 10:45:33 UTC 2016 - mpluskal@suse.com

- Update to version 5.5.1:
  * Support for uncore performance monitoring events on Intel Xeon
    Phi Knights Landing (KNL).
  * Minor bugfixes.

-------------------------------------------------------------------
Thu Sep 15 07:47:31 CEST 2016 - pth@suse.de

- Update to 5.5.0. Changes since 5.4.1 :
  New Platforms:
  * Added  Knights Landing (KNL) core events and preset events.
  * Added Intel Broadwell/Skylake/Knights Landing RAPL support
  * Updated PAPI preset event support for Intel Broadwell/Skylake

  New Implementations:
  * libmsr component: Using LLNL's libmsr library to access Intel
    RAPL (Running Average Power Limit) library adds power capping
    abilities to PAPI.
  * CUDA PC sampling: A new standalone CUDA sampling tool
    (papi_cuda_sampling) has been added to the CUDA component
    (components/cuda/sampling/) and can be used as a preloader to
    perform PC sampling on Nvidia GPUs which support the CUPTI
    sampling interface (e.g. Maxwell).
  * ARM Cortex A53 support: Event definitions added.

  New Component: 
  * Powercap component: PAPI now supports the Linux Power Capping
    Framework which exposes power capping devices and power measurement
    to user space via a sysfs virtual file system interface.

  Enhancements:
  * Added Haswell-EP uncore support
  * Initial Broadwell, Skylake support
  * Added a general CUDA example (components/cuda/test) that uses
    LD_PRELOAD to attach to a running CUcontext.
  * Added "-check" flag to papi_avail and papi_native_avail to
    test counter availability/validity.
  * Add support for multiple flavors of POWER8 processors.
  * Force all processors to check event schedulability by checking that
    PAPI can successfully read the counters.
  * Support for Intel Broadwell-EP, Skylake, Goldmont, Haswell-EP
    inherited from libpfm4.
  * Shared memory object (.so) naming is made more limited so that minor
    updates do not break ABI compatibility.

  Bug Fixes:
  * Clean output from papi_avail tool when there are no user defined events.
  * Support PAPI_GRN_SYS granularity for perf component.
  * Bug fix for infiniband_umad component.
  * Bug fix for vmware component.
  * Bug fix for NVML component.
  * Fixed RAPL component so it reports unsupported inside a guest VM.
  * Cleanup ARM CPU detection.
  * Bug fix for PAPI_overflow issue for multiple eventsets.
  * Increased PERF_EVENT_MAX_MPX_COUNTERS to 192 from 128.
  * Fixed memory leak in papi_preset.c.
  * Free allocated memory in the stealtime component.
  * Improve testlib error messages if a component fails to initialize.
  * Fix _papi_hwi_postfix_calc parsing and robustness.
  * Clean build rules for CUDA sampling subcomponent.
  * Correct IBM Power7 and Power8 computation of PAPI_L1_DCA.
  * Eliminate the sole use of ftests_skip subroutine.
  * Correct the event string names for tenth.c.  
  * Have Fortran test support code report errors more clearly.
  * Cleanup output from libmsr component.
  * PAPI internal functions were marked as static to avoid exposing them
    externally.
  * Multiple component were fixed to make internal functions static
    where possible, to avoid exposing the functions as externally
    accessible entry points.
  * CUDA component configuration bug fixed.

-------------------------------------------------------------------
Wed Mar  4 18:45:26 UTC 2015 - mpluskal@suse.com

- Replace ./configure with macro %configure

-------------------------------------------------------------------
Wed Mar  4 16:28:20 UTC 2015 - mgorse@suse.com

- fix typo in excludearch statement 

-------------------------------------------------------------------
Wed Mar  4 13:38:58 UTC 2015 - mpluskal@suse.com

- Cleanup spec file with spec-cleaner
- Update to 5.4.1
  * Updated support for Intel Haswell and Haswell-EP
  * Added ARM Cortex A7
  * Added ARM 1176 CPU (original Raspberry Pi)
  * Enhance PAPI preset events to allow user defined events.
  * User defined events are set up via a user event definition file.
  * New test demonstrating attaching an eventset to a single CPU 
    rather than a thread.
  * Use the term "event qualifiers" instead of "event masks" to 
    clarify understanding.
  * Added pkg-config support to PAPI.
  * Fixed lustre segfault bug in lustre component.
  * Fixed compilation in the absence of a Fortran compiler.
  * Fixed bug in krental_pthreads ctest to join threads properly 
    on exit.
  * Fixed bug in perf_events where event masks were not getting 
    cleared properly.
  * Fixed memory leak bug in perf_events.

-------------------------------------------------------------------
Tue Nov 18 07:31:28 CET 2014 - pth@suse.de

- Update to 5.4.0:

  New Platforms:
  -------------
      * EMON power component for IBM Blue Gene/Q
      * Support for the Applied Micro X-Gene processor
      * Support for IBM POWER non-virtualized platform
      * RAPL support for Intel Haswell models (60,69,71)

  Enhancements:
  ------------
      * Added list of supported PMU names (core/uncore components)  
      * Support for extended event masks (core/uncore components)
      * Extension of the RAPL energy measurements on Intel via msr-safe
      * Updated IBM POWER7, POWER8 presets
      * 'papi_native_avail --validate' supports events that require
        multiple masks to be valid  

  Bug Fixes:
  ----------
      * HW counter and event count added/fixed for BGPM components
      * Reduce cost of using PAPI_name_to_code
      * Non-null terminated strings fixed
      * Growing list of native events in core/uncore components fixed
      * Cleaned up Intel IvyBridge presets
      * Addressed Coverity reported issues

For specific and detailed information on changes made in this
release, grep ChangeLogP540.txt in the package documentation for
keywords of interest or go directly to the PAPI git repo.

- Remove papi-PPC64-sys_mem_info-array-size-is-wrong.patch:
  obsoleted by update.

-------------------------------------------------------------------
Mon Oct 20 18:07:45 CEST 2014 - pth@suse.de

- Add papi-PPC64-sys_mem_info-array-size-is-wrong.patch from IBM to
  fix access beyond array bounds on POWER8 (bnc#901134).

-------------------------------------------------------------------
Fri Oct  3 16:29:06 UTC 2014 - alinm.elena@gmail.com

- Update to version 5.3.2 

  Changelog:
  - NVML component updates;
  - Addressed appio memory leaks;
  - Support for Haswell-EP added to RAPL component;
  - The perf_event_uncore component event enumeration works now;
  - All components now have appropriate domain and granularities. 

-------------------------------------------------------------------
Wed Dec  4 19:35:13 UTC 2013 - tonyj@suse.com

- Drop patch papi-dont_skip_float_argument.patch (mainline)
- Update to version 5.3.0

  Changelog:
  - Enhancements for Intel MIC (Xeon Phi) architectures, including support 
    for offload code in addition to the previously released support for native 
    code.

  - Add support for Ivy Bridge Floating Point events.

  - Rewrite of linux-rapl component to handle full 32-bits of dynamic range.

  - Rewrite of test suite to determine which tests should be run.

  - Misc bug fixes/enhancements:
    The Intel Haswell event table now supports PAPI_L1_ICM
    AMD Bulldozer now supports Core select masks
    The CUDA component now properly reports the number of native events
    The command_line utility no longer skips the last event on a list
    icc builds no longer add an extraneous -openmp flag

-------------------------------------------------------------------
Thu Aug 22 13:28:40 CEST 2013 - pth@suse.de

- Add papi-dont_skip_float_argument.patch to not skip float arguments
  from the command line.

-------------------------------------------------------------------
Thu Aug  8 17:30:25 CEST 2013 - pth@suse.de

- Update to 5.2.0:

  This release represents a major overhaul of several components.
  Support for Intel Haswell and Power 8 has been added.  Processor
  support code has been moved to the components directory.

  New Platform:
  -------------
      * Intel Haswell (initial support)
      * Power 8 (initial support)

  New Components:
  ---------------
      * Host-side MIC power component

    Enhancements:
    ------------
      * Component tests are now included with install-tests make
        target.
      * Components with external library dependencies load them at
        runtime allowing better distribution (infiniband, cuda,
        vmware, nvml and host-side micpower)
      * Perf_events, perfctr[_ppc] and perfmon2[_ia64] have been
        moved under the components directory
      * (Intel) Uncore support has been split into its own component
      * Lustre component better handles large numbers of filesystems

- Remove papi-use_major_in_soname.patch as the problem has been
  fixed upstream.

-------------------------------------------------------------------
Tue Jun 11 11:47:16 CEST 2013 - pth@suse.de

- Update to 5.1.1. Changes since 5.0.1:
  5.1.0:
    New Platform:
    -------------
      * Intel Xeon Phi ( Knight's Corner or KNC or MIC )

    Bug Fixes:
    ----------
      * Various build system fixes. 
      * NVML component fix.
      * Work around a sampling bug on Power Linux

    Enhancements:
    ------------
      * ARM Cortex A15 support.
      * New API entry, PAPI_get_eventset_component
      * Add options to papi_command_line to print in hex and unsigned formats

    New Components:
    ---------------
    * MIC Power component. 

   5.1.1:
    New Platform:
    -------------
      * Intel IvyBridge-EP

    Bug Fixes:
    ----------
      * Many perf_event fixes
      * Cuda component fixes
      * IA64 and SPARC build fixes

    Enhancements:
    ------------
      * Better logic in run_tests.sh script
      * ARM builds now use pthread_mutexes
      * BG/Q overflow enhancements

  For detailed changes see the files ChangeLogp*.txt in the
  packages documentation directory.

-------------------------------------------------------------------
Tue Jan  8 01:52:04 UTC 2013 - tonyj@suse.com

- Switch to external libpfm.  
  Discussion: http://lists.opensuse.org/opensuse-factory/2013-01/msg00010.html
- Drop papi-no_test_for_pfm_msg_t_type.patch (added in 4.0.0 commit)
- Drop i586-libpfm4-compile-fix.diff (since we are using external libpfm it is
  no longer necessary)

-------------------------------------------------------------------
Fri Dec 28 20:18:48 UTC 2012 - dvaleev@suse.com

- don't run ldconfig during build. As it breaks perfmon headers 
  installation 

-------------------------------------------------------------------
Fri Dec 28 14:49:11 UTC 2012 - dmueller@suse.com

- update to 5.0.1 (fixes build for ARM):
  * This is a major release of PAPI. Parts of both the internal 
  component and external low-level interfaces have changed. This
  will break your 4.4 compliant components and links to shared
  libraries.

  A full detailed description of the changes to PAPI 5.0 can be found here:
  http://web.eecs.utk.edu/~vweaver1/papers/papi/papi_v5_changes.pdf 

- Removed papi-glibc-siginfo.patch, papi-list_components.patch,
  papi-use_as_help_string.patch: Already upstream or not needed

- Removed papi-lmsensors_check.patch: can be replaced by configure
  option
- i586-libpfm4-compile-fix.diff: Fix compile on i586

-------------------------------------------------------------------
Sun Oct 28 08:54:58 UTC 2012 - coolo@suse.com

- do not require libquadmath by old name but by provides, so it
  works in factory too

-------------------------------------------------------------------
Thu Sep 27 11:45:28 UTC 2012 - idonmez@suse.com

- Update baselibs.conf for libpfm4 

-------------------------------------------------------------------
Mon Sep  3 17:19:13 CEST 2012 - pth@suse.de

- Modify spec so that build succeeds (requiring libquadmath versions).

-------------------------------------------------------------------
Mon Sep  3 11:31:43 UTC 2012 - idonmez@suse.com

- Add papi-glibc-siginfo.patch: newer glibc no longer defines
  siginfo, we need to use siginfo_t

-------------------------------------------------------------------
Wed Jul  4 11:45:05 CEST 2012 - pth@suse.de

- libquadmath is only needed/available from 12.1 up.
- Remove patches and files not needed anymore.

-------------------------------------------------------------------
Mon Apr 23 14:21:06 CEST 2012 - pth@suse.de

- Update to 4.4.0:
  New Platforms:
  --------------
  Added PAPI support for Blue Gene/Q.

  Bug Fixes:
  ----------
  * Fix buffer overrun in lmsensors component  
  * libpfm4: Update to current git libpfm4 snapshot
  * Fix broken Pentium 4 Prescott support we were missing the netburst_p 
	declaration in papi_events.csv
  * Fix various locking issues in the threaded code. 
  * Fix multiplexing of large eventsets on perf_events systems.
	This presented when using more than 31 multiplexed events on perf_event  

- Add a devel-static package that contains the static libraries.
- For other changes since 4.2.1 see RELEASENOTES.txt in the packages
  documentation.

-------------------------------------------------------------------
Wed Feb 22 16:21:25 CET 2012 - pth@suse.de

- Update to 4.2.1:
   Bug Fixes:
   ----------
	* multiplexing math errors were fixed in perf_events.c
	* more multiplexing read path errors were identified and fixed
	* Fix SMP ARM issues reported by Harald Servat.
	* src/papi_events.csv: Update the coreduo (not core2) events.  Most
	  notably the FP events were wrong.

	* Modify Intel Sandybridge PAPI_FP_OPS and PAPI_FP_INS events to
	  not count x87 fp instructions.  The problem is that the current
	  predefines were made by adding 5 events.  With the NMI watchdog
	  stealing an event and/or hyperthreading reducing the number of
	  available counters by half, we just couldn't fit.
	  This now raises the potential for people using x87-compiled
	  floating point on Sandybridge and getting 0 FP_OPS.  This is only
	  likely if running a 32-bit kernel and *not* compiling your code
	  with -msse.
	  A long-term solution might be trying to find a better set of FP
	  predefines for sandybridge.
	* Apply patch suggested by Will Cohen to check for system return
	  values.
	* Patch to cleanup dependencies, allowing for parallel makes.

	* Fix two race conditions that are probably the cause of the
	  pthrtough double-free error.
	  When freeing a thread, we remove and free all eventsets belonging
	  to that thread.  This could race with the thread itself removing
	  the evenset, causing some ESI fields to be freed twice.
	  The problem was found by using the Valgrind 3.8 Helgrind tool
	    valgrind --tool=helgrind --free-is-write=yes ctests/pthrtough
	  In order for Helgrind to work, I had to temporarily modify PAPI
	  to use POSIX pthread mutexes for locking.

   Enhancements:
   -------------
	* general doxygen cleanups
	* cleanup output of overflow_allcounters for clarity in debugging
	* updates to most recent (as of Feb 1) libpfm4
	* remove now-opaque event codes from papi_native_avail
	  and papi_xml_event_info
	* Update the component initialization code so that it can handle a
	  PAPI ERROR return gracefully.  Previously there was no way to
	  indicate initialization failure besides just setting
	  num_native_events to 0.
	 
  New Platforms:
  -------------
 	* Support for AMD Family 11.
	* Support for AMD Family 12.
	
  Deprecated Platforms:
  ---------------------
	* remove obsolete ACPI component
	
  New / Improved Components:
  ---------------
	* PAPI CUDA component updated for CUDA / CUPTI 4.1.
		* SetCudaDevice() now works with the latest CUDA 4.1 version.
		* Auto-detection of CUDA version for backward compatibility.
		* PAPI_read() now accumulates event values. This fixes a bug
		in earlier versions.
	* extensive updates and cleanups to the example and coretemp components.
	* significant updates of lustre, and mx components
	* The linux net component underwent extensive updates and cleanups.
  	  In particular, it nows dynamically detects the network
	  interface names [1] and export 16 counters for each interface
  	  (see also src/components/net/{CHANGES,README}).

  Experimental:
  -------------
	* a new vmware component has been added to report a variety of soft events
	  when running as a guest in a VMWare environment

- Add upstream patch for libpfm4 to fix signed/unsigned issues.
- Readd ExcludeArch for s390/s390x as it isn't supported by PAPI.

-------------------------------------------------------------------
Sun Jan 29 16:02:44 UTC 2012 - jengelh@medozas.de

- Remove redundant tags/sections per specfile guideline suggestions
- Remove unexplained s390 exclusion

-------------------------------------------------------------------
Fri Apr 15 20:00:00 CEST 2011 - pth@suse.de

- Adapt patch from IBM to fix the memory info for POWER7 CPUs.

-------------------------------------------------------------------
Fri Apr 15 15:12:37 CEST 2011 - pth@suse.de

- Clean up the patches and remove those that aren't needed anymore.

-------------------------------------------------------------------
Sat Jan 29 18:16:17 UTC 2011 - alexandre@exatati.com.br

- Update to 4.1.2.1:
  * fixed a long-standing subtle bug identified by Richard Strong that caused 
    segfaults when multiplexing
  * fixed several bugs that were causing test failures on POWER6/AIX
  * properly detect Pentium M in configure
  * fixed a problem with perf_events not properly handling overflows; first 
    identified by Mark Krentel
  * fixed a problem where perfctr was silently adding uncountable events
  * fixed a lock bug identified by Martin Schindewolf
  * fixed forking order for {multi|zero}_attach.c
  * updated support for freeBSD submitted by Harald Servat
  * a plethora of code cleanups submitted by Robert Richter
  * addressed compatibility issues in run_tests.sh to make it posix comliant
  * refreshed PAPI_Matlab support
  * reimplemented SUBDBG print capabilities to address an issue first 
    identified by Maynard Johnson
  * refreshed preset event definitions for Nehalem, including implementations 
    for PAPI_HW_INT; submitted by Michel Brown
  * added 3 new error codes: PAPI_EATTR, PAPI_ECOUNT, and PAPI_ECOMBO. 
    These provide more detail on why an event add fails
  * implement cpuid leaf4 mtrics required by Intel Westmere
  * Intel Westmere on perfctr and perf_events
  * libpfm4 support is experimentally available and subject to change
- Added "export SUSE_ASNEEDED=0" to build section.

-------------------------------------------------------------------
Tue Jun 22 19:02:33 UTC 2010 - alexandre@exatati.com.br

- Update to 4.0.1:
  - configure was mis-identifying some Pentium 4 processors
  - the ctests/shlib test now tests against the shared math library, libm.so,
    instead of libpapi.so, which works more predictably with library renaming.
  - multiplexing was silently returning without setting multiplex TRUE in 
    cases where no event had been assigned to an eventset. An event must be
    added to an eventset or PAPI_assign_eventset_component() must be called
    before multiplexing can be enabled. This silent error has been removed. 
  - the perfmon and perf_events counter interfaces were not properly handling 
    event unit masks. This has been fixed.
  - PAPI_name_to_code() was not exiting properly in certain circumstances, 
    failing on events where there should have been a match. This is corrected.
  - a serious but insidious bug in the overflow logic was corrected. This bug 
    would only show up when PAPI_overflow was called between calls to 
    PAPI_add_event. Overflow would only be set for the last call of 
    PAPI_overflow. This has  been corrected.
    - IBM Blue Gene P systems were corrupting stack frames and crashing when the
      papi_get_event_info call was executed. This has been fixed.
    - The PAPI cycles event was not working for IBM Blue Gene P. This is fixed.
      papi_native_avail was exiting improperly when using the -e option. 
      This caused problems with batch execution systems (like Blue Gene P). 
      This has been fixed.
    - a significant number of memory leaks have been purged.
    - compiler warning flags have been tightened and a range of warnings have
      been eliminated.
    - removed implicit type conversions in prototypes.
  - the utils/papi_version utility now reports four digits where the last digit
    matches the patch number.
  - Pentium II and Athlon now use libpfm for event decoding like all other x86
    platforms.
  - Doxygen documentation has been added to the API and components.
  - Component compilation has been completely restructured. See
    /papi/src/components/README for details.
  - PAPI can now be compiled with a no-cpu-counters option
  - the ultrasparc architecture has been resurrected
  - freebsd support was migrated from PAPI 3.7
  - Intel Nehalem EX and Westmere support has been added
  - IBM BG/L has been deprecated.
  - POWER 3 and POWER4 have been deprecate
  - Infiniband: Experimental
  - Lustre: Experimental
  - example: provides simple test case and template code.

-------------------------------------------------------------------
Mon Jun 14 19:01:14 UTC 2010 - alexandre@exatati.com.br

- Add Upstream patch3:
  * the utils/papi_version utility reports PAPI 4.0.0.3, where the last
    digit matches the patch number.
  * the ultrasparc architecture has been resurrected and supported in this
    patch.
  * IBM Blue Gene P systems were corrupting stack frames and crashing when
    the papi_get_event_info call was executed. This has been fixed.
  * papi_native_avail was exiting improperly when using the -e option.
    This caused problems with batch execution systems (like Blue Gene P).
    This has been fixed.
- Spec file cleaned with spec-cleaner.

-------------------------------------------------------------------
Wed Mar 24 19:04:12 UTC 2010 - pth@novell.com

- Don't run testsuite as there are too many reasons why it won't
  work on the build machine.

-------------------------------------------------------------------
Tue Mar 23 15:10:21 CET 2010 - pth@suse.de

- Update to 4.0.0:
  - fixed L3 cache size reporting for AMD Family 10h processors
  - fixed std deviation underflow in sdsc2 and sdsc4 tests
  - fixed bug in counter assignment for FreeBSD Atom implementation
  - updated cache tables for Intel Nehalem i7 processors
  - configure provides better autodetection of 2.6.31 or 2.6.32 kernels and
    perf_counter interface (in most cases)
  - configure provides better detection and autoselection of perfctr or perfmon 
    drivers for linux
  - configure and sources have been modified to support perf_counter on
    kernel 2.6.31 and perf_event on kernel 2.6.32
  - a papi.spec file has been added to simplify creation of rpms
- Add Upstream patch2:
  * the utils/papi_version utility now reports PAPI 4.0.0.2, where the
    last digit matches the patch number.
  * the papi.spec file has a correction for a minor typo in the
    ExcludeArch line.
  * a serious but insidious bug in the overflow logic was corrected. This
    bug would only show up when PAPI_overflow was called between calls to
    PAPI_add_event.  Overflow would only be set for the last call of
    PAPI_overflow.  This has been corrected.
  * configure was mis-identifying some Pentium 4 processors; this has been
    corrected.
  * the ctests/shlib test now tests against the shared math library,
    libm.so, instead of libpapi.so
  * the PAPI_set_multiplex() call was silently returning without setting
    multiplex TRUE in cases where no event had been assigned to an eventset. 
    This silent error has been removed.
  * the perfmon and perf_events counter interfaces were not properly
    handling event unit masks.  This has been fixed.
  * PAPI_name_to_code() was not exiting properly in certain circumstances,
    failing on events where there should have been a match.  This has been
    corrected.
- Add RPM_OPT_FLAG to CFLAGS in configure.
- Initialize variables where the compiler can't determine that they're
  used initialized.
- Add full prototypes to src/ctests/mendes-alt.c
- Delete the test for pfm_msg_t.type in configure for external libpfm instead
  of disabling the test all together.
- Fix all compiler warnings in libpfm.

-------------------------------------------------------------------
Tue Mar  2 15:45:53 CET 2010 - rw@suse.de

- build against libpfm3 on ia64 (bnc#578864)

-------------------------------------------------------------------
Tue Feb 16 00:27:29 CET 2010 - ro@suse.de

- fix filelist for ia64 again, perfmon file is back 

-------------------------------------------------------------------
Tue Feb  2 14:45:58 CET 2010 - pth@suse.de

- Fix dependencies in baselibs.conf (papi-devel-32bit requires
  libpapi-32bit not papi-32bit which doesn't exist) (#bnc565236)

-------------------------------------------------------------------
Thu Jan 21 13:18:11 CET 2010 - sf@suse.de

- add baselibs.conf including libpapi and papi-devel (bnc #565236) 

-------------------------------------------------------------------
Thu Jan 21 11:50:50 CET 2010 - ro@suse.de

- fix typo in last change 

-------------------------------------------------------------------
Wed Jan 13 14:20:26 CET 2010 - sf@suse.de

- fix filelist for ia64 (remove /usr/share/papi), as the only 
  file there does not exist on ia64  

-------------------------------------------------------------------
Fri Dec 18 15:13:30 CET 2009 - ro@suse.de

- fix filelist for ia64 
- remove "," from excludearch

-------------------------------------------------------------------
Tue Dec  8 17:57:16 CET 2009 - pth@suse.de

- Update to 3.7.2:
  Bug Fixes:
  ----------
  * fixed L3 cache size reporting for AMD Family 10h processors
  * fixed std deviation underflow in sdsc2 and sdsc4 tests

  Enhancements:
  -------------
  * updated cache tables for Intel Nehalem i7 processors
  * configure provides better autodetection of 2.6.31 or 2.6.32 kernels and
    perf_counter interface (in most cases)
  * configure provides better detection and autoselection of perfctr or perfmon 
    drivers for linux
  * configure and sources have been modified to support perf_counter on
    kernel 2.6.31 and perf_event on kernel 2.6.32
  * a papi.spec file has been added to simplify creation of rpms

-------------------------------------------------------------------
Fri Nov 20 14:36:26 CET 2009 - pth@suse.de

- Initial package for SLES (fate#307192)
- Include perf_counter.h from kernel because kernel-headers
  doesn't include the file.



