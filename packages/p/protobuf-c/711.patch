--- protobuf-c-1.5.0/protoc-c/c_file.cc	2024-10-21 20:22:31.574369622 +0200
+++ protobuf-c-1.5.0/protoc-c/c_file.cc	2024-10-21 20:22:43.064450125 +0200
@@ -117,14 +117,7 @@
 void FileGenerator::GenerateHeader(io::Printer* printer) {
   std::string filename_identifier = FilenameIdentifier(file_->name());
 
-  int min_header_version = 1000000;
-#if GOOGLE_PROTOBUF_VERSION >= 4023000
-  if (FileDescriptorLegacy(file_).syntax() == FileDescriptorLegacy::SYNTAX_PROTO3) {
-#else
-  if (file_->syntax() == FileDescriptor::SYNTAX_PROTO3) {
-#endif
-    min_header_version = 1003000;
-  }
+  const int min_header_version = 1003000;
 
   // Generate top of header.
   printer->Print(
--- protobuf-c-1.5.0/protoc-c/c_helpers.h	2024-10-21 20:22:31.574369622 +0200
+++ protobuf-c-1.5.0/protoc-c/c_helpers.h	2024-10-21 20:22:43.064450125 +0200
@@ -70,10 +70,6 @@
 #include <protobuf-c/protobuf-c.pb.h>
 #include <google/protobuf/io/printer.h>
 
-#if GOOGLE_PROTOBUF_VERSION >= 4023000
-# include <google/protobuf/descriptor_legacy.h>
-#endif
-
 namespace google {
 namespace protobuf {
 namespace compiler {
@@ -173,13 +169,21 @@
 int compare_name_indices_by_name(const void*, const void*);
 
 // Return the syntax version of the file containing the field.
-// This wrapper is needed to be able to compile against protobuf2.
 inline int FieldSyntax(const FieldDescriptor* field) {
-#if GOOGLE_PROTOBUF_VERSION >= 4023000
-  return FileDescriptorLegacy(field->file()).syntax() == FileDescriptorLegacy::SYNTAX_PROTO3 ? 3 : 2;
-#else
-  return field->file()->syntax() == FileDescriptor::SYNTAX_PROTO3 ? 3 : 2;
-#endif
+  auto proto = FileDescriptorProto();
+  field->file()->CopyTo(&proto);
+
+  if (proto.has_syntax()) {
+    auto syntax = proto.syntax();
+    assert(syntax == "proto2" || syntax == "proto3");
+    if (syntax == "proto2") {
+      return 2;
+    } else if (syntax == "proto3") {
+      return 3;
+    }
+  }
+
+  return 2;
 }
 
 // Work around changes in protobuf >= 22.x without breaking compilation against
