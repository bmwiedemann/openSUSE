-------------------------------------------------------------------
Fri Sep 13 05:36:08 UTC 2024 - ecsos <ecsos@opensuse.org>

- Update to 1.1.0
  * Avoid using floating points during timestamp-datetime conversions in #591
  * use ruff instead of black in #598
  * update Cython and setuptools in #599
  * Add experimental support for Python 3.13 in #600
  * update README in #561
  * update cibuildwheel to 2.17 in #601
  * implement buffer protocol in #602
  * Remove unused code in #603
  * packer: add buf_size option in #604
  * update readme in #605
  * cython: better exception handling in #606
  * better error checks in #607
  * Cleanup code and pyproject in #608
  * Release v1.1.0rc1 in #609
  * do not install cython as build dependency in #610
  * update Cython to 3.0.11 in #617
  * update cibuildwheel to 2.20.0 in #618
  * Release v1.1.0rc2 in #619
  * MNT: use PyLong_* instead of PyInt_* in #620
  * release v1.1.0 in #622

-------------------------------------------------------------------
Mon Jul 22 10:57:59 UTC 2024 - John Paul Adrian Glaubitz <adrian.glaubitz@suse.com>

- Update to 1.0.8
  * Update Cython to 3.0.8. This fixes memory leak when iterating
    ``Unpacker`` object on Python 3.12.
  * Do not include C/Cython files in binary wheels.
- Drop removal of C/Cython files from %install section

-------------------------------------------------------------------
Mon Nov 27 19:33:29 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 1.0.7:
  * remove inline macro for msvc
  * do not fallback on build error
  * fix: build status badge
  * Drop python2 support
  * Drop Python 3.6 support
  * try Cython 3.0
  * sphinx-related work

-------------------------------------------------------------------
Mon May  8 07:20:01 UTC 2023 - Johannes Kastl <kastl@b1-systems.de>

- add sle15_python_module_pythons

-------------------------------------------------------------------
Sun Mar 26 20:05:06 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 1.0.5:
  * Fallback to compiler defines when __BYTE_ORDER is not
    available
  * Fix build error caused by ntohs, ntohl
  * Add python 3.11 wheels
  * fallback: Fix packing multidim memoryview
  * minor type in exception message

-------------------------------------------------------------------
Sun Jun 19 18:30:30 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 1.0.4:
  * Support Python 3.11 (beta)
  * refresh ci settings.
  * Don't define _*ENDIAN macro on Unix.
  * Update setuptools and black
  * Use PyFloat_Pack8() on Python 3.11a7
  * Upgrade black to fix CI
  * Fix Unpacker max_buffer_length handling
  * ci: Update action versions.

-------------------------------------------------------------------
Mon Jan 10 23:20:31 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 1.0.3:
  * add python 3.10 support
  * bugfixes

-------------------------------------------------------------------
Sun Dec 20 13:22:55 UTC 2020 - Dirk Müller <dmueller@suse.com>

- update to 1.0.2:
  * Python 3.9 support
  * bugfixes

-------------------------------------------------------------------
Tue Mar 31 12:18:12 UTC 2020 - pgajdos@suse.com

- version update to 1.0.0
  * Remove Python 2 support from the msgpack/_cmsgpack. msgpack/fallback still supports Python 2.
  * Remove encoding option from the Packer and Unpacker.
  * Unpacker: The default value of max_buffer_type is changed to 100MiB.
  * Unpacker: strict_map_key is True by default now.
  * Unpacker: String map keys are interned.
  * Drop old buffer protocol support.
  * Support Timestamp type.
  * Support serializing and decerializing datetime object with tzinfo.
  * Unpacker: Fix Unpacker.read_bytes() in fallback implementation. (#352)

-------------------------------------------------------------------
Thu Mar 12 07:25:36 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Fix build without python2

-------------------------------------------------------------------
Fri Sep 20 12:47:03 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 0.6.2:
  * Support Python 3.8.
  * Update Cython to 0.29.13 for support Python 3.8.
  * Some small optimizations.

-------------------------------------------------------------------
Thu Mar  7 21:33:19 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.6.1
 * unpackb(data) configures max_*_len options from len(data), instead
    of static default sizes.
 * Unpacker(max_buffer_len=N) configures max_*_len options from N, instead
    of static default sizes.
 * max_bin_len, max_str_len, and max_ext_len are deprecated.
 * unpacker: Default value of input limits are smaller than before to
    avoid DoS attack
 * Unpacker doesn't wrap underlaying ValueError (including UnicodeError)
    into UnpackValueError. If you want to catch all exception during unpack,
    you need to use try ... except Exception with minimum try code block.
 * PackValueError and PackOverflowError are also removed. You need to catch
    normal ValueError and OverflowError.
 * Unpacker has strict_map_key option now. When it is true, only bytes
    and str (unicode in Python 2) are allowed for map keys.
 * Extension modules are merged. There is msgpack._cmsgpack instead
    of msgpack._packer and msgpack._unpacker.
 * Add Unpacker.getbuffer() method.
 * unpacker: msgpack.StackError is raised when input data contains too nested data
 * unpacker: msgpack.FormatError is raised when input data is not valid msgpack format.

-------------------------------------------------------------------
Tue Jan 29 17:19:51 UTC 2019 - alarrosa@suse.com

- Use %license

-------------------------------------------------------------------
Thu Mar  1 22:15:34 UTC 2018 - alarrosa@suse.com

- Update to version 0.5.6 (boo#1123558)
  * Fix fallback.Unpacker.feed() dropped unused data from buffer
  * Resurrect fallback.unpack() and _unpacker.unpack(). They were
    removed at 0.5.5 but it breaks backward compatibility.

- Update to version 0.5.5
  * Fix memory leak in pure Python Unpacker.feed()
  * Fix unpack() didn't support raw option

-------------------------------------------------------------------
Mon Feb 26 12:33:08 UTC 2018 - alarrosa@suse.com

- Provide also python-msgpack-python in the python2 package to
  be able to obsolete the python2-msgpack-python package correctly.

-------------------------------------------------------------------
Mon Feb 12 10:27:18 UTC 2018 - dmueller@suse.com

- fix typo in obsoletes

-------------------------------------------------------------------
Tue Feb  6 06:29:43 UTC 2018 - tbechtold@suse.com

- update to version 0.5.4
  * packer: Use PyUnicode_AsUTF8AndSize() for utf-8 (#272)
  * Fix encoding and unicode_errors (#277)
  * Undeprecate unicode_errors (#278)
  * Packer.pack() reset buffer on exception (#274)
  * Use cython's cast for converting encoding and errors (#279)
  * 0.5.4
  * Add raw_as_bytes option to Unpacker. (#265)
  * s/raw_as_bytes/raw/g (#276)

-------------------------------------------------------------------
Tue Jan 30 23:11:03 UTC 2018 - jengelh@inai.de

- Strip rheotrics from descriptions.

-------------------------------------------------------------------
Sat Jan 27 10:32:32 UTC 2018 - dmueller@suse.com

- update to 0.5.1:
  * Package name on PyPI was changed to msgpack from 0.5.
- rename from msgpack-python

-------------------------------------------------------------------
Wed Apr 19 17:35:24 UTC 2017 - toddrme2178@gmail.com

- Implement single-spec version.

-------------------------------------------------------------------
Tue Nov 15 10:08:12 UTC 2016 - dmueller@suse.com

- update to 0.4.8

-------------------------------------------------------------------
Sat Oct 17 11:24:41 UTC 2015 - mc@suse.com

- build conditionally without tests

-------------------------------------------------------------------
Mon Mar 16 21:03:15 UTC 2015 - hpj@urpla.net

- Update to version 0.4.6
  * fallback.Unpacker: Fix Data corruption when OutOfData. This bug
    only affects "Streaming unpacking."
- Changes from version 0.4.5
  * Fix test failure on pytest 2.3.
  * Fix typos in ChangeLog.
  * Improve README.rst
- Changes from version 0.4.4
  * Fix compile error.
- Changes from version 0.4.3
  * Unpacker may unpack wrong uint32 value on 32bit or LLP64
    environment. (#101)
  * Build failed on Windows Python 2.7.

-------------------------------------------------------------------
Tue Nov 18 13:14:12 UTC 2014 - toddrme2178@gmail.com

- Update to 0.4.2
  Bugfixes
  - Unpacker doesn't increment refcount of ExtType hook.
  - Packer raises no exception for inputs doesn't fit to msgpack format.
- Update to 0.4.1
  Changes
  - fallback.Unpacker.feed() supports bytearray.
  Bugs fixed
  - Unpacker doesn't increment refcount of hooks. Hooks may be GCed while unpacking.
  - Unpacker may read unfilled internal buffer.

-------------------------------------------------------------------
Sun Dec  8 15:02:40 UTC 2013 - p.drouand@gmail.com

- Update to version 0.4.0
  + Raises TypeError instead of ValueError when packer receives
    unsupported type.
  + Support New msgpack spec.
- Use download Url as source
- Add python-argparse requirement for SLE11SP3 to get tests working

-------------------------------------------------------------------
Thu Oct 24 11:08:59 UTC 2013 - speilicke@suse.com

- Require python-setuptools instead of distribute (upstreams merged)

-------------------------------------------------------------------
Thu May  2 10:29:24 UTC 2013 - speilicke@suse.com

- Package COPYING and README.rst
- Run testsuite

-------------------------------------------------------------------
Mon Feb 18 03:47:18 UTC 2013 - alexandre@exatati.com.br

- Update to 0.3.0:
  Incompatible Changes
  - Default value of use_list is True for now. (It was False for
    0.2.x) You should pass it explicitly for compatibility to 0.2.x.
  Changes
  - Pure Python fallback module is added. (thanks to bwesterb)
  - Add .skip() method to Unpacker (thanks to jnothman)
  - Add capturing feature. You can pass the writable object to
    Unpacker.unpack() as a second parameter.
  - Add Packer.pack_array_header and Packer.pack_map_header. These
    methods only pack header of each type.
  - Add autoreset option to Packer (default: True). Packer doesn't
    return packed bytes and clear internal buffer.
  - Add Packer.pack_map_pairs. It packs sequence of pair to map type.

-------------------------------------------------------------------
Mon Jan 14 09:53:10 UTC 2013 - saschpe@suse.de

- Simplify macro usage

-------------------------------------------------------------------
Fri Jan 11 15:24:59 UTC 2013 - p.drouand@gmail.com

- Initial python3 support

-------------------------------------------------------------------
Sat Dec 22 12:02:57 UTC 2012 - alexandre@exatati.com.br

- Update to 0.2.4:
  - Fix SEGV when object_hook or object_pairs_hook raise Exception. (#39)

-------------------------------------------------------------------
Tue Dec 11 15:31:58 UTC 2012 - alexandre@exatati.com.br

- Update to 0.2.3:
  - Warn when use_list is not specified. It's default value will be
    changed in 0.3.
  - Can't pack subclass of dict.

-------------------------------------------------------------------
Fri Sep 21 19:23:50 UTC 2012 - alexandre@exatati.com.br

- Update to 0.2.2:
  - Add use_single_float option to Packer. When it is true, packs
    float object in single precision format.
  - unpack() didn't restores gc state when it called with gc
    disabled. unpack() doesn't control gc now instead of restoring
    gc state collectly. User can control gc state when gc cause
    performance issue.
  - Unpacker's read_size option didn't used.

-------------------------------------------------------------------
Mon Aug 20 01:13:03 UTC 2012 - alexandre@exatati.com.br

- Update to 0.2.1:
  - Add max_buffer_size parameter to Unpacker. It limits internal
    buffer size and allows unpack data from untrusted source safely.
  - Unpacker's buffer reallocation algorithm is less greedy now. It
    cause perforamce derease in rare case but memory efficient and
    don't allocate than max_buffer_size.
  - Fix msgpack didn't work on SPARC Solaris. It was because
    choosing wrong byteorder on compilation time. Use sys.byteorder
    to get correct byte order. Very thanks to Chris Casey for giving
    test environment to me.

-------------------------------------------------------------------
Wed Jun 27 14:58:58 UTC 2012 - alexandre@exatati.com.br

- Update to 0.2.0:
  - Sorry, no changelog.

-------------------------------------------------------------------
Fri Jun 22 20:48:50 UTC 2012 - alexandre@exatati.com.br

- Initial package (0.1.13) for openSUSE.
