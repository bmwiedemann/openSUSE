-------------------------------------------------------------------
Tue Aug  5 08:33:58 UTC 2025 - Daniel Garcia <daniel.garcia@suse.com>

- update to 1.3.4:
  * cdfwrite now uses the numpy byte swap for endian conversion, using
    MUCH less memory.
- 1.3.3:
  * Worked through a backlog of bugs
  # xarray_to_cdf
    - Fixed errors that come up with ISTP compliance when a
      support_data variable has no time variance and depends on
      another support_data variable
    - Fully remove the deprecated flags of from_unixtime,
      from_datetime, unixtime_to_cdftt2000, datetime_to_cdftt2000,
      datetime64_to_cdftt2000
    - Added a check to verify that LABLAXIS/LABL_PTR variables have
      the same dimensions as the data they need to label
  # cdfwrite
    - Now throw an error when np.uint64 data is given, as it is not a
      supported data type
    - Fixed a bug that wrote a record's length incorrectly for certain
      string inputs, causing corrupt CDF files to be generated
  # cdfread
    - Fixed a bug where string data was given an extra dimension once
      read
  # cdf_to_xarray
    - Fixed a bug that caused all data to be squeezed, removing
      dimensions of size 1
  # epochs
    - Fixed a bug that occured in CDF_TT2000 to np.datetime64
      conversion code, which caused all "minutes" to be dropped from
      the dates if the array contained any dates from before 1972
      (which includes all FILLVALs)

-------------------------------------------------------------------
Tue Nov 19 12:29:49 UTC 2024 - Dirk MÃ¼ller <dmueller@suse.com>

- update to 1.3.2:
  * Adding anonymous s3 access to cdflib

-------------------------------------------------------------------
Sat Aug 17 14:34:56 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Update to 1.3.1
  * Added tox to serve as the unit testing infrastructure, and
    changed which unit tests were run (see the github actions to
    see what exactly is running)
  * Added tests to check future versions of numpy and astropy
  * Added back in the remote data unit tests
  * xarray_to_cdf: Added an ISTP check to determine is attribute
    and variable names are compliant
  * cdfwrite: Clearer error message surrounding data type
    conversions to CDF data types
- Version 1.0
  * Version 1.0.0 is a new major version for cdflib, and contains a
    number of breaking changes. These have been made to improve
    consistency across the package, and make it easier to maintain
    and build on the package going forward in the future.
  * Although we have tried our best to not introduce new bugs and
    list all changes below, some things may have slipped through
    the cracks. If you have any issues, please do not hesitate to
    open them at https://github.com/MAVENSDC/cdflib/issues.
  ## Python support
  * cdflib is now only tested on Python 3.8, 3.9, 3.10, and 3.11.
    It may work for older versions of Python, but this is not
    guarenteed. If you need to use cdflib on an older version of
    Python, please open an issue to discuss whether the cdflib
    maintainers can support this.
  ### Returning arrays
  * All to_np keyword arguments have been removed throughout the
    library, and the code now behaves as if to_np=True throughout.
    This change has been made to reduce code omplexity and make
    maintaining the code easier. If you need outputs as lists, call
    .tolist() on the output array.
  *  to_np=True was the deafult in cdfread, so if you weren't
    specifying it behaviour will not change there. to_np=False was
    the default in epochs, so if you weren't specifying it there
    beahviour will change.
  * Changes to CDF method returns Most of the methods that return
    data from the CDF reader class have had their return types
    changed from dictionaries to dataclasses. This allows the
    return type to be more clearly documented (see
    :ref:dataclasses), for internal checks to be made to make sure
    data types are consistent, and a nicer representation when the
    return values are printed.
  * Where previously an item would have been accessed as
    dict["value"], items in the dataclasses can be accessed using
    dataclass.value.
  * The methods that have been updated are:
    - cdflib.cdfread.CDF.vdr_info
    - cdflib.cdfread.CDF.attinq
    - cdflib.cdfread.CDF.attget
    - cdflib.cdfread.CDF.varget
    - cdflib.cdfread.CDF.varinq
   ## Other breaking changes
  * The CDF factory class (cdflib.CDF) has been removed, and
    cdflib.CDF is now the reader class. This change has been made
    to prevent potential confusion when the user makes a mistake in
    specifying the file to open, and cdflib would silently create a
    writer class instead. If you want to create a CDF writer class,
    explicitly import cdflib.cdfwrite.CDF instead.
  * cdflib.cdfread.CDF.varget no longer takes an inq argument.
    Instead use the new method cdflib.cdfread.CDF.vdr_info to get
    the VDR info. getVersion() methods have been removed throughout
    the package. Instead the CDF version can be read from class
    attributes.
  * Removed cdflib.cdfepochs.CDFepoch.getLeapSecondLastUpdated.
  * Directly inspect CDFepoch.LTS instead to get the last date at
    which a leapsecond was added.
  * The expand keyword argument to cdflib.cdfread.CDF.varget has
    been removed.
  * Use CDF.varinq to get variable information instead.
  * The expand keyword argument to CDF.globalattsget and
    CDF.varattsget has been removed.
  * Use cdflib.cdfread.CDF.attinq to get attribute information
    instead.
  * Removed CDF.print_attrs
  * The version, release, and increement attributes of CDF have
    been removed.
  * Removed the record_range_only argument to
    cdflib.cdfread.CDF.varget.
  * Removed CDF.epochrange. Use cdflib.cdfread.CDF.varinq instead
    to get the data ranges.

-------------------------------------------------------------------
Sun Feb  6 13:30:50 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Initial specfile for version 0.3.20
- Required for sunpy testing 
