<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>386f5c2b10278e2c5f54af9efdd73d93</srcmd5>
    <version>3.3.0</version>
    <time>1606648729</time>
    <user>dimstar_suse</user>
    <comment>s is needed in the python36 flavor branch (Staging:N).

It does NOT conflict with python38 standard library.</comment>
    <requestid>850589</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>1017c5944d6dc387b0c6e170712c6295</srcmd5>
    <version>5.2.2</version>
    <time>1632522887</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>920454</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>91fd990900020fc6db7a4e51ef07abaa</srcmd5>
    <version>5.4.0</version>
    <time>1637535095</time>
    <user>dimstar_suse</user>
    <comment>- update to 5.4.0:
  * Test suite now relies entirely on the traversable API.
  * Now raise a ``DeprecationWarning`` for all legacy
    functions. Instead, users should rely on the ``files()``
    API introduced in importlib_resources 1.3. See
  * Updated readme to reflect current behavior and show
    which versions correspond to which behavior in CPython.</comment>
    <requestid>929912</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>e4dbcc8b2ee05850b5fa5ae13f83549e</srcmd5>
    <version>5.9.0</version>
    <time>1663438097</time>
    <user>dimstar_suse</user>
    <comment>- Update to 5.9.0:
  - #228: as_file now also supports a Traversable representing
    a directory and (when needed) renders the full tree to a
    temporary directory.
  - #253: In MultiplexedPath, restore expectation that a compound
    path with a non-existent directory does not raise an
    exception.
  - #250: Now Traversable.joinpath provides a concrete
    implementation, replacing the implementation in .simple and
    converging with the behavior in MultiplexedPath.
  - #249: In simple.ResourceContainer.joinpath, honor names split
    by posixpath.sep.
  - #248: abc.Traversable.joinpath now allows for multiple
    arguments and specifies that posixpath.sep is allowed
    in any argument to accept multiple arguments, matching
    the behavior found in zipfile.Path and pathlib.Path
    simple.ResourceContainer now honors this behavior
  - #244: Add type declarations in ABCs Require Python 3.7 or
    later
  - #243: Fix error when no __pycache__ directories exist when
    testing update-zips.
- Remove BR on python-zipp to break a dependency cycle; it is
  strictly not needed for build (although it is Requires),
  because ZipReader is not tested.
</comment>
    <requestid>1003114</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>58e52fa30bea53849af309b6d01d88e6</srcmd5>
    <version>5.10.0</version>
    <time>1667306428</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1032378</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>ad5d2dcf5f3d9df60b3662b8838bfb6f</srcmd5>
    <version>5.10.1</version>
    <time>1671128652</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1042891</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>0c2948fa1261d7a413ae65ea3b2b7ec2</srcmd5>
    <version>5.10.2</version>
    <time>1672851048</time>
    <user>dimstar_suse</user>
    <comment>- update to 5.10.2:
  * Prefer ``write_bytes`` to context manager as
  proposed in gh-100586.</comment>
    <requestid>1046280</requestid>
  </revision>
  <revision rev="8" vrev="2">
    <srcmd5>fc8ce3d1316e238f1cedfd922715e42e</srcmd5>
    <version>5.10.2</version>
    <time>1675621211</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1063146</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>f3210d160af2cb304e02b27cc4ac509e</srcmd5>
    <version>5.12.0</version>
    <time>1683630430</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1085431</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>9839c57301e7d79247dc518305559805</srcmd5>
    <version>6.0.1</version>
    <time>1691594644</time>
    <user>dimstar_suse</user>
    <comment>- update to 6.0.1:
  * Bugfixes
  * Restored Apache license. (#285)
  * Deprecations and Removals
  * Removed legacy functions deprecated in 5.3. (#80)
  * Features
  * Require Python 3.8 or later</comment>
    <requestid>1102872</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>19e5111d023178d0c8c8719f8060900e</srcmd5>
    <version>6.1.1</version>
    <time>1701972527</time>
    <user>anag+factory</user>
    <comment>- update to 6.1.1:
  * Added missed stream argument in simple.ResourceHandle. Ref
    python/cpython#111775.
  * MultiplexedPath now expects Traversable paths. String
    arguments to MultiplexedPath are now deprecated.
  * Enabled support for resources in namespace packages in zip
    files. (#287)

- Update to v5.10.1
  * #259: files no longer requires the anchor to be specified and can infer the anchor from the caller's scope (defaults to the caller's module).
  * bpo-41490: contents is now also more aggressive about consuming
  * #110 and bpo-41490: path method is more aggressive about
    releasing handles to zipfile objects early, enabling use-cases
    like certifi to leave the context open but delete the
  * Package no longer exposes importlib_resources.__version__.
    Users that wish to inspect the version of importlib_resources
    should instead invoke .version('importlib_resources') from
    importlib-metadata ( stdlib or backport) directly. This change
  * Select pathlib and contextlib imports based on Python version
  * Loaders are no longer expected to implement the
    abc.TraversableResources interface, but are instead expected to
    return TraversableResources from their get_resource_reader
  * Traversable is now a Protocol instead of an Abstract Base Class
  * #79: Temporary files created will now reflect the filename of
  * For improved compatibility, importlib_resources.trees is now
  * Add extensibility support for non-standard loaders to supply
    Traversable resources. Introduces a new abstract base class
    abc.TraversableResources that supersedes (but implements for
    compatibility) abc.ResourceReader. Any loader that implements
    (implicitly or explicitly) the TraversableResources.files</comment>
    <requestid>1129224</requestid>
  </revision>
  <revision rev="12" vrev="2">
    <srcmd5>2b79d76bacb8c387a349189586bfb1fe</srcmd5>
    <version>6.1.1</version>
    <time>1710434549</time>
    <user>anag+factory</user>
    <comment>- Explicitly BuildRequires zipp, it is now used by the testsuite, and
  was pulled in anyway.</comment>
    <requestid>1157096</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>8e0cc8dc64e62fcbcb2aafe261d8062b</srcmd5>
    <version>6.5.2</version>
    <time>1744315051</time>
    <user>anag_factory</user>
    <comment></comment>
    <requestid>1268075</requestid>
  </revision>
</revisionlist>
