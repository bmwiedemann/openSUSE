-------------------------------------------------------------------
Tue Jul 12 17:48:49 UTC 2022 - Matej Cepl <mcepl@suse.com>

- Add 406-google-cloud-speech.patch
  (gh#Uberi/speech_recognition#406) to switch dependency from
  oauth2client and googleclient to google-cloud-speech.

-------------------------------------------------------------------
Thu Nov  7 15:51:16 UTC 2019 - Matej Cepl <mcepl@suse.com>

- Run through spec-cleaner

-------------------------------------------------------------------
Tue Dec  4 12:54:35 UTC 2018 - Matej Cepl <mcepl@suse.com>

- Remove superfluous devel dependency for noarch package

-------------------------------------------------------------------
Thu May  3 15:38:29 UTC 2018 - alarrosa@suse.com

- Run spec_cleaner

-------------------------------------------------------------------
Thu May  3 09:48:57 UTC 2018 - alarrosa@suse.com

- Add fix-readme.patch to keep clear that the flac binaries and third-party
  source files are removed and are not used by the python-SpeechRecognition
  package.

-------------------------------------------------------------------
Fri Jan  5 09:38:06 UTC 2018 - alarrosa@suse.com

- Update to version 3.8.1
  * Snowboy hotwords support for highly efficient, performant listening.
    This is implemented as the snowboy_configuration parameter of
    recognizer_instance.listen.
  * Configurable Pocketsphinx models - you can now specify your own acoustic
    parameters, language model, and phoneme dictionary, using the language
    parameter of recognizer_instance.recognize_sphinx.
  * audio_data_instance.get_segment(start_ms=None, end_ms=None) is a new method
    that can be called on any AudioData instance to get a segment of the audio
    starting at start_ms and ending at end_ms. This is really useful when you
    want to get, say, only the first five seconds of some audio.
  * The stopper function returned by listen_in_background now accepts one
    parameter, wait_for_stop (defaulting to True for backwards compatibility),
    which determines whether the function will wait for the background thread
    to fully shutdown before returning. One advantage is that if wait_for_stop
    is False, you can call the stopper function from any thread!
  * New example, demonstrating how to simultaneously listen to and recognize
    speech with the threaded producer/consumer pattern: threaded_workers.py.
  * Various improvements and bugfixes:
    * Python 3 style type annotations in library documentation.
    * recognize_google_cloud now uses the v1 rather than the beta API.
    * recognize_google_cloud now returns timestamp info when the show_all
      parameter is True.
    * recognize_bing won't time out as often on credential requests, due to a
      longer default timeout.
    * recognize_google_cloud timeouts respect
      recognizer_instance.operation_timeout now.
    * Any recognizers using FLAC audio were broken inside Linux on Docker -
      this is now fixed.
    * Various documentation and lint fixes.
    * Lots of small build system improvements.

-------------------------------------------------------------------
Wed Nov 15 16:20:51 UTC 2017 - alarrosa@suse.com

- Added python-SpeechRecognition-common-en-US package to install the
  pocketsphinx-data directory in a common place for python2 and python3
  packages.

-------------------------------------------------------------------
Mon Sep  4 17:54:27 UTC 2017 - alarrosa@suse.com

- Initial release of python-SpeechRecognition 3.7.1 
