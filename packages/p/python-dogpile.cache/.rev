<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>0193c4b79fff31800ec0c1f86c572731</srcmd5>
    <version>0.5.0</version>
    <time>1378748933</time>
    <user>coolo</user>
    <comment></comment>
    <requestid>197412</requestid>
  </revision>
  <revision rev="2" vrev="3">
    <srcmd5>0193c4b79fff31800ec0c1f86c572731</srcmd5>
    <version>0.5.0</version>
    <time>1379664167</time>
    <user>adrianSuSE</user>
    <comment>Split 13.1 from Factory</comment>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>b911e124b65e01a7a0b8065eb33378d4</srcmd5>
    <version>0.5.1</version>
    <time>1382378498</time>
    <user>scarabeus_factory</user>
    <comment>- update to 0.5.1:
  * The :meth:`.CacheRegion.invalidate` method now supports an option
  ``hard=True|False``.
  * New dogpile-specific exception classes have been added, so that
  issues like &quot;region already configured&quot;, &quot;region unconfigured&quot;,
  raise dogpile-specific exceptions.  Other exception classes have</comment>
    <requestid>204181</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>d1ce1786dfe07546edf98b571e4e2f68</srcmd5>
    <version>0.5.2</version>
    <time>1388480939</time>
    <user>coolo</user>
    <comment>- update to 0.5.2:
  * Added a new argument ``lock_factory`` to the :class:`.DBMBackend`
  * implementation.  This allows for drop-in replacement of the default
  * :class:`.FileLock` backend, which builds on ``os.flock()`` and only
  * supports Unix platforms. (forwarded request 212462 from dirkmueller)</comment>
    <requestid>212464</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>f92639cae7dfce0c6acb67625b83ba07</srcmd5>
    <version>0.5.3</version>
    <time>1389725578</time>
    <user>coolo</user>
    <comment>- update to 0.5.3:
  * Fixed bug where the key_mangler would get in the way of usage of the
  async_creation_runner feature within the :meth:` (forwarded request 213711 from dirkmueller)</comment>
    <requestid>213734</requestid>
  </revision>
  <revision rev="6" vrev="3">
    <srcmd5>f92639cae7dfce0c6acb67625b83ba07</srcmd5>
    <version>0.5.3</version>
    <time>1409302860</time>
    <user>adrianSuSE</user>
    <comment>Split 13.2 from Factory</comment>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>93eb80eb1004130d1ebdbb0431773e8b</srcmd5>
    <version>0.5.4</version>
    <time>1410967519</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>249303</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>d08c9f1efbe5e405d43fdde32f6aa2e2</srcmd5>
    <version>0.5.6</version>
    <time>1430983347</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>305655</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>f1e3ff716ba43da3e0b85c38e3ceab5a</srcmd5>
    <version>0.5.7</version>
    <time>1458333592</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>367839</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>214970ac6b43b0fe1223cce150a4b498</srcmd5>
    <version>0.6.1</version>
    <time>1468360270</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>406264</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>e8586dd47064191af0392d16b75f59c7</srcmd5>
    <version>0.6.2</version>
    <time>1475055012</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>424261</requestid>
  </revision>
  <revision rev="12" vrev="2">
    <srcmd5>991913e69108888c3fe023012213432a</srcmd5>
    <version>0.6.2</version>
    <time>1493363536</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>484806</requestid>
  </revision>
  <revision rev="13" vrev="3">
    <srcmd5>c23993d7362d6438e53724d629cf0e9b</srcmd5>
    <version>0.6.2</version>
    <time>1495442790</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>493156</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>7ff95a402bf08dc30f713905c3c0d230</srcmd5>
    <version>0.6.4</version>
    <time>1503482065</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>517971</requestid>
  </revision>
  <revision rev="15" vrev="2">
    <srcmd5>ea793d1215cc2ca53a4504aa36bcf5d9</srcmd5>
    <version>0.6.4</version>
    <time>1510232814</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>540004</requestid>
  </revision>
  <revision rev="16" vrev="3">
    <srcmd5>e1cfd9408e278572f44e51f7b70d0d46</srcmd5>
    <version>0.6.4</version>
    <time>1519041727</time>
    <user>dimstar_suse</user>
    <comment>- add  dogpile-threading.patch</comment>
    <requestid>577786</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>e15c21e150a29fce083eeffc48a0961b</srcmd5>
    <version>0.6.5</version>
    <time>1522232809</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>591544</requestid>
  </revision>
  <revision rev="18" vrev="2">
    <srcmd5>1c636705cddcc6a9288a74926243050a</srcmd5>
    <version>0.6.5</version>
    <time>1524576812</time>
    <user>dimstar_suse</user>
    <comment>- skip lock tests, they fail frequently (bsc#1086987)

- for testing purposes drop dogpile.cache-tests_more_slow_waiters.patch

- only run generic tests using pytest (bsc#1089564)</comment>
    <requestid>600039</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>992c6eb862c9ff25a3d64a9de4ccfd6f</srcmd5>
    <version>0.6.6</version>
    <time>1540448411</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>642929</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>b3bac8179e70c74a240d0ae22b2ae88d</srcmd5>
    <version>0.6.8</version>
    <time>1544726849</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.6.8:
  * Project hosting has moved to GitHub, under the SQLAlchemy
    organization at https://github.com/sqlalchemy/dogpile.cache
  * Fixed issue in the :meth:`.CacheRegion.get_or_create_multi` method which
    was erroneously considering the cached value as the timestamp field if the
    :meth:`.CacheRegion.invalidate` method had ben used, usually causing a
    ``TypeError`` to occur, or in less frequent cases an invalid result for
    whether or not the cached value was invalid, leading to excessive caching
    or regeneration. The issue was a regression caused by an implementation
    issue in the pluggable invalidation feature added in :ticket:`38`.

- Remove superfluous devel dependency for noarch package</comment>
    <requestid>655471</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>4730060313b1a7d8fb549fc1db8a4f69</srcmd5>
    <version>0.7.1</version>
    <time>1552207238</time>
    <user>coolo</user>
    <comment>- Update to 0.7.1:
  * fix python3 deprecation warnings
  * Restore the API for async_creation_runner in all cases

- Fix fdupes call</comment>
    <requestid>682880</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>bf4bc09e7c610423cc90eb353fd2b0c6</srcmd5>
    <version>0.8.0</version>
    <time>1570285281</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>735296</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>92791fa5c8ed64a864aba88047d1cb14</srcmd5>
    <version>0.9.0</version>
    <time>1576928066</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.9.0
  * Added logging facililities into :class:`.CacheRegion`</comment>
    <requestid>758615</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>cdcc6eef2da4a3a0a6f5ae9a4968182c</srcmd5>
    <version>0.9.2</version>
    <time>1591742759</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.9.2:
   Ensured that the &quot;pyproject.toml&quot; file is not included in builds, as the
   presence of this file indicates to pip that a pep-517 installation process
   should be used.  As this mode of operation appears to be not well supported
   by current tools / distros, these problems are avoided within the scope of
   dogpile.cache installation by omitting the file.
   Added option to the Redis backend
   :paramref:`.RedisBackend.thread_local_lock`, which when set to False will
   disable the use of a threading local  by the ``redis`` module in its
   distributed lock service, which is known to interfere with the lock's
   behavior when used in an &quot;async&quot; use case, within dogpile this would be
   when using the :paramref:`.CacheRegion.async_creation_runner` feature. The
   default is conservatively being left at True, but it's likely this should
   be set to False in all cases, so a warning is emitted if this flag is not
   set to False in conjunction with the distributed lock. Added an optional
   argument to :class:`.RedisBackend` that specifies whether or not a
   thread-local Redis lock should be used.  This is the default, but it breaks
   asynchronous runner compatibility.</comment>
    <requestid>810916</requestid>
  </revision>
  <revision rev="25" vrev="2">
    <srcmd5>c7182eb2b730feb70d42aad2375987cb</srcmd5>
    <version>0.9.2</version>
    <time>1596110781</time>
    <user>dimstar_suse</user>
    <comment>- skip python2 building - 0.9.2 is python 3.x only</comment>
    <requestid>823565</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>51192598e1563c513e5612a528c27b57</srcmd5>
    <version>1.0.2</version>
    <time>1603725478</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.0.2:
  * Added support for TLS connections to the bmemcached backend.
  * dogpile.cache 1.0.0 was released with a minimum Python version of 3.5.
    However, due to a dependency issue, the minimum version is now Python 3.6.
  * Removed the &quot;universal=1&quot; directive from setup.cfg as this would create
    py2/py3 wheels.   dogpile 1.0.x is Python 3 only so a py3-only wheel is now</comment>
    <requestid>844065</requestid>
  </revision>
  <revision rev="27" vrev="1">
    <srcmd5>dedc5fda3f3f1f49f444ac517446e683</srcmd5>
    <version>1.1.1</version>
    <time>1607548366</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>853805</requestid>
  </revision>
  <revision rev="28" vrev="2">
    <srcmd5>c70a0dd607c870ded9c23ee13ce6f81c</srcmd5>
    <version>1.1.1</version>
    <time>1611595453</time>
    <user>dimstar_suse</user>
    <comment>- skip building against python 3.6</comment>
    <requestid>866404</requestid>
  </revision>
  <revision rev="29" vrev="3">
    <srcmd5>6b4a38c63eb406e186ce0f9cba83150b</srcmd5>
    <version>1.1.1</version>
    <time>1615489864</time>
    <user>dimstar_suse</user>
    <comment>- fix build for older distributions with old default-pytest</comment>
    <requestid>878194</requestid>
  </revision>
  <revision rev="30" vrev="1">
    <srcmd5>8d254df99e331238f83ee13238a3f1c2</srcmd5>
    <version>1.1.2</version>
    <time>1619552116</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.1.2:
  * rerelease, no changes</comment>
    <requestid>888748</requestid>
  </revision>
  <revision rev="31" vrev="1">
    <srcmd5>01777bda32d8be52195d202e5ac90e36</srcmd5>
    <version>1.1.3</version>
    <time>1624626089</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>902220</requestid>
  </revision>
  <revision rev="32" vrev="1">
    <srcmd5>889d7a0b32ce6bac67f1954c3c209db4</srcmd5>
    <version>1.1.4</version>
    <time>1630936679</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.1.4:
  * [usecase] [memcached] Added support for pymemcache socket keepalive
    and retrying client.
  * [bug] [general] Fixed Python 3.10 deprecation warning involving
    threading. Pull request
  * [bug] [regression] [tests] Repaired the test suite to work with the
    5.x series of the decorator module, which now appears to make use of
    the __signature__ attribute.
  * [bug] [regression] Fixed regression where ProxyBackend was missing
    several methods that were added as part of the 1.1 release.
  * [feature] [region] Added new region method CacheRegion.key_is_locked().
    Returns True if the given key is subject to the dogpile lock, which
    would indicate that the generator function is running at that time.
  * [feature] [memcached] Added support for the pymemcache backend, using
    the &quot;dogpile.cache.pymemcache&quot; backend identifier.</comment>
    <requestid>916952</requestid>
  </revision>
  <revision rev="33" vrev="2">
    <srcmd5>9f6c3ac7b172f6160bcbb6098519e906</srcmd5>
    <version>1.1.4</version>
    <time>1638740776</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>935756</requestid>
  </revision>
  <revision rev="34" vrev="1">
    <srcmd5>02d9cfff0ecdd80c32e1e84f6a54c3a2</srcmd5>
    <version>1.1.5</version>
    <time>1648665384</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>966023</requestid>
  </revision>
  <revision rev="35" vrev="1">
    <srcmd5>73ee5fb706bebcff952d607b39727ad4</srcmd5>
    <version>1.1.8</version>
    <time>1658395993</time>
    <user>RBrownFactory</user>
    <comment>- update to 1.1.8:
  * Moved the MemcacheArgs.dead_retry argument and the
    MemcacheArgs.socket_timeout argument which were erroneously added to the
    “set_parameters”, where they have no effect, to be part of the Memcached
    connection arguments MemcachedBackend.dead_retry,
    MemcachedBackend.socket_timeout.
  * Added MemcacheArgs.dead_retry and MemcacheArgs.socket_timeout to the
    dictionary of additional keyword arguments that will be passed directly to
    GenericMemcachedBackend().
  * Added RedisBackend.connection_kwargs parameter, which is a dictionary of
    additional keyword arguments that will be passed directly to StrictRedis() or
    StrictRedis.from_url(), in the same way that this parameter works with the
    RedisSentinelBackend already</comment>
    <requestid>990239</requestid>
  </revision>
  <revision rev="36" vrev="1">
    <srcmd5>0a2479e78fc45db120bf394af2f53348</srcmd5>
    <version>1.2.0</version>
    <time>1683728340</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.2.0:
   * Added new construct api.CantDeserializeException which can be
    raised by user-defined deserializer functions which would be
    passed to CacheRegion.deserializer, to indicate a cache value
    that can't be deserialized and therefore should be regenerated.</comment>
    <requestid>1085846</requestid>
  </revision>
  <revision rev="37" vrev="1">
    <srcmd5>56612d28a8ca946cf80e4973cb20b3f0</srcmd5>
    <version>1.2.1</version>
    <time>1685476938</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.2.1:
  * Added py.typed file to root so that typing tools such as Mypy
    recognize dogpile as typed. Pull request courtesy Daverball.</comment>
    <requestid>1089613</requestid>
  </revision>
  <revision rev="38" vrev="1">
    <srcmd5>6a579739af0456897f8511e1f9a959f1</srcmd5>
    <version>1.2.2</version>
    <time>1689710857</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1099099</requestid>
  </revision>
</revisionlist>
