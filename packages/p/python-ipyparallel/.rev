<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>e836fc5dd744d62b091b8e6e8af44267</srcmd5>
    <version>6.2.3</version>
    <time>1558515956</time>
    <user>dimstar_suse</user>
    <comment>- Rename to to match python package naming guidelines.
- Split jupyter components into own subpackage.
- Update to 6.2.3
  * Fix compatibility for execute requests with ipykernel 5
  * require ipykernel &gt;= 4.4
- Update to 6.2.2
  * Fix compatibility with tornado 4, broken in 6.2.0
  * Fix encoding of engine and controller logs in ipcluster --debug on Python 3
  * Fix compatiblity with joblib 0.12
  * Include LICENSE file in wheels
- Update to version 6.2.1
  * Workaround a setuptools issue preventing installation from sdist on Windows
- Update to version 6.2.0
  * Drop support for Python 3.3. IPython parallel now requires Python 2.7 or &gt;= 3.4.
  * Further fixes for compatibility with tornado 5 when run with asyncio (Python 3)
  * Fix for enabling clusters tab via nbextension
  * Multiple fixes for handling when engines stop unexpectedly
  * Installing IPython Parallel enables the Clusters tab extension by default, without any additional commands.
- Switch to wheel-based install
- Run tests in main package
- Remove -doc subpackage and use upstream-build docs
- Update to 6.1.1
  * Fix regression in 6.1.0 preventing BatchSpawners (PBS, etc.) from launching with ipcluster.
- Update to 6.1.0
  + Compatibility fixes with related packages:
    * Fix compatibility with pyzmq 17 and tornado 5.
    * Fix compatibility with IPython ≥ 6.
    * Improve compatibility with dask.distributed ≥ 1.18.
  + New features:
    * Add :attr:`namespace` to BatchSpawners for easier extensibility.
    * Support serializing partial functions.
    * Support hostnames for machine location, not just ip addresses.
    * Add ``--location`` argument to ipcluster for setting the controller location.
      It can be a hostname or ip.
    * Engine rank matches MPI rank if engines are started with ``--mpi``.
    * Avoid duplicate pickling of the same object in maps, etc.
- Update url
- Further improvements to notebook extension handling
- Fix notebook extension handling
- Fix script interpeter.
- Implement single-spec version.
- Clean up update-alternatives usage.
- Update to 6.0.2
  * Upload fixed sdist for 6.0.1.
- Update to 6.0.1
  * Small encoding fix for Python 2.
- Update to 6.0
  * Due to a compatibility change and semver, this is a major release. However, it is not a big release.
  * The main compatibility change is that all timestamps are now timezone-aware UTC timestamps.
  * This means you may see comparison errors if you have code that uses datetime objects without timezone info (so-called naïve datetime objects).
  *  Rename :meth:`Client.become_distributed` to :meth:`Client.become_dask`.
    :meth:`become_distributed` remains as an alias.
  *  import joblib from a public API instead of a private one
    when using IPython Parallel as a joblib backend.
  *  Compatibility fix in extensions for security changes in notebook 4.3
- Update to 5.2
  *  Fix compatibility with changes in ipykernel 4.3, 4.4
  *  Improve inspection of ``@remote`` decorated functions
  *  :meth:`Client.wait` accepts any Future.
  *  Add ``--user`` flag to :command:`ipcluster nbextension`
  *  Default to one core per worker in :meth:`Client.become_distributed`.
    Override by specifying `ncores` keyword-argument.
  *  Subprocess logs are no longer sent to files by default in :command:`ipcluster`.
- Update to 5.1
  * IPython Parallel 5.1 adds integration with other parallel computing tools,
    such as `dask.distributed &lt;https://distributed.readthedocs.io&gt;`_ and `joblib &lt;https://pythonhosted.org/joblib&gt;`__.
  * IPython parallel now supports the notebook-4.2 API for enabling server extensions,
    to provide the IPython clusters tab
      jupyter serverextension enable --py ipyparallel
      jupyter nbextension install --py ipyparallel
      jupyter nbextension enable --py ipyparallel
    though you can still use the more convenient single-call::
      ipcluster nbextension enable
    which does all three steps above.
  * `Slurm &lt;https://computing.llnl.gov/tutorials/linux_clusters&gt;`_ support is added to ipcluster.
- Update to 5.0.1
  *  Fix imports in :meth:`use_cloudpickle`, :meth:`use_dill`.
  *  Various typos and documentation updates to catch up with 5.0.
- specfile:
  * update copyright year
- update to version 5.0.0:
  * The highlight of ipyparallel 5.0 is that the Client has been
    reorganized a bit to use Futures. AsyncResults are now a Future
    subclass, so they can be `yield`ed in coroutines, etc. Views have
    also received an Executor interface. This rewrite better connects
    results to their handles, so the Client.results cache should no
    longer grow unbounded.
    + The Executor API :class:`ipyparallel.ViewExecutor`
    + Creating an Executor from a Client:
      :meth:`ipyparallel.Client.executor`
    + Each View has an :attr:`executor` attribute
  * Part of the Future refactor is that Client IO is now handled in a
    background thread, which means that :meth:`Client.spin_thread` is
    obsolete and deprecated.
  * Other changes:
    + Add :command:`ipcluster nbextension enable|disable` to toggle
    the clusters tab in Jupyter notebook
  * Less interesting development changes for users: Some
    IPython-parallel extensions to the IPython kernel have been moved
    to the ipyparallel package:
    + :mod:`ipykernel.datapub` is now :mod:`ipyparallel.datapub`
    + ipykernel Python serialization is now in
      :mod:`ipyparallel.serialize`
    + apply_request message handling is implememented in a Kernel
      subclass, rather than the base ipykernel Kernel.
- update to version 4.1.0:
  * Add :meth:`.Client.wait_interactive`
  * Improvements for specifying engines with SSH launcher.
- Split documentation into own subpackage to speed up builds.
  
- Build documentation
- Fix conflict.
- Initial version
</comment>
    <requestid>698330</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>7a18b6b84b94f1a7d37ebd81b553dc9c</srcmd5>
    <version>6.2.4</version>
    <time>1560459948</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>709570</requestid>
  </revision>
  <revision rev="3" vrev="2">
    <srcmd5>cf09c4470720894ff9498bbc21a4226a</srcmd5>
    <version>6.2.4</version>
    <time>1566242870</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>722515</requestid>
  </revision>
  <revision rev="4" vrev="3">
    <srcmd5>79a22b12e7d8e7f1701863c2a219c4bf</srcmd5>
    <version>6.2.4</version>
    <time>1566894117</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>725986</requestid>
  </revision>
  <revision rev="5" vrev="4">
    <srcmd5>77f605c56db676bcadd1093d61e76961</srcmd5>
    <version>6.2.4</version>
    <time>1575039389</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>748333</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>800c28f1b167f7deb0480bd0c11facae</srcmd5>
    <version>6.3.0~git.20191010T150914.ce996ae</version>
    <time>1584350398</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>785246</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>0ae0cf859d8fe1a6d54bb1bd99406b81</srcmd5>
    <version>6.3.0~git.20191010T150914.ce996ae</version>
    <time>1587659874</time>
    <user>dimstar_suse</user>
    <comment>- Drop py2 code from py3 only package</comment>
    <requestid>796496</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>4bd2bf00336cfb9f88a9798220e57fbd</srcmd5>
    <version>6.3.0</version>
    <time>1590506413</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>808407</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>59db0107916c4075ee957f634c40ca70</srcmd5>
    <version>7.1.0</version>
    <time>1634587176</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>925913</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>6274820f5e4b2a324ad604433312dc61</srcmd5>
    <version>8.0.0</version>
    <time>1636986402</time>
    <user>dimstar_suse</user>
    <comment>- Update to 8.0.0
  * This is marked as a major revision because of the change to
    pass connection information via environment variables.
    BatchSystem launchers with a custom template will need to make
    sure to set flags that inherit environment variables, such as
    #PBS -V or #SBATCH --export=ALL.
  * More convenient Cluster(engines=&quot;mpi&quot;) signature for setting
    the engine (or controller) launcher class.
  * The first (and usually only) engine set can be accessed as
    .Cluster.engine_set, rather than digging through the
    Cluster.engines dict.
  * Add environment configuration to all Launchers.
  * Support more configuration via environment variables, including
    passing connection info to engines via $IPP_CONNECTION_INFO,
    which is used by default, avoiding the need to send connection
    files to engines in cases of non-shared filesystems.
  * Launchers send connection info to engines via
    $IPP_CONNECTION_INFO by default. This is governed by
    Cluster.send_engines_connection_env, which is True by default.
  * Support EngineLauncher.get_output via output files in batch
    system launchers
  * Capture output in Batch launchers by setting output file
    options in the default templates.
  * LoadBalancedView.imap returns a LazyMapIterator which has a
    .cancel() method, for stopping consumption of the map input.
  * Support for return_when argument in .AsyncResult.wait and
    ~.AsyncResult.wait_interactive, to allow returning on the first
    error, first completed, or (default) all completed.
  * LoadBalancedView.imap(max_outstanding=n) limits the number of
    tasks submitted to the cluster, instead of limiting the number (forwarded request 931406 from bnavigator)</comment>
    <requestid>931407</requestid>
  </revision>
  <revision rev="11" vrev="2">
    <srcmd5>35207d7b83673cb8711534fd5853ed23</srcmd5>
    <version>8.0.0</version>
    <time>1637108030</time>
    <user>dimstar_suse</user>
    <comment>- Skip flaky imap_infinite test
</comment>
    <requestid>931614</requestid>
  </revision>
</revisionlist>
