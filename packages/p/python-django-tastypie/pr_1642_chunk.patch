Index: django-tastypie-0.14.4/tastypie/authentication.py
===================================================================
--- django-tastypie-0.14.4.orig/tastypie/authentication.py
+++ django-tastypie-0.14.4/tastypie/authentication.py
@@ -9,7 +9,15 @@ import warnings
 from django.conf import settings
 from django.contrib.auth import authenticate
 from django.core.exceptions import ImproperlyConfigured
-from django.middleware.csrf import _sanitize_token
+
+try:
+    from django.middleware.csrf import _check_token_format
+
+    _sanitize_token = None
+except ImportError:
+    from django.middleware.csrf import _sanitize_token
+
+    _check_token_format = None
 from django.utils.translation import gettext as _
 
 from six.moves.urllib.parse import urlparse
@@ -310,8 +318,11 @@ class SessionAuthentication(Authenticati
 
         if getattr(request, '_dont_enforce_csrf_checks', False):
             return request.user.is_authenticated
-
-        csrf_token = _sanitize_token(request.COOKIES.get(settings.CSRF_COOKIE_NAME, ''))
+        csrf_token = request.COOKIES.get(settings.CSRF_COOKIE_NAME, '')
+        if _sanitize_token:
+            csrf_token = _sanitize_token(csrf_token)
+        else:
+            _check_token_format(csrf_token)
 
         if request.is_secure():
             referer = request.META.get('HTTP_REFERER')
@@ -326,11 +337,17 @@ class SessionAuthentication(Authenticati
 
         request_csrf_token = request.META.get('HTTP_X_CSRFTOKEN', '')
         try:
-            request_csrf_token = _sanitize_token(request_csrf_token)
+            if _sanitize_token:
+                request_csrf_token = _sanitize_token(request_csrf_token)
+            else:
+                _check_token_format(csrf_token)
         except InvalidTokenFormat:
             return False
 
-        if not compare_sanitized_tokens(request_csrf_token, csrf_token):
+        try:
+            if not compare_sanitized_tokens(request_csrf_token, csrf_token):
+                return False
+        except AssertionError:
             return False
 
         return request.user.is_authenticated
