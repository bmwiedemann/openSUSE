-------------------------------------------------------------------
Sat Jan 28 13:22:23 UTC 2023 - Dirk MÃ¼ller <dmueller@suse.com>

- update to 4.2.2:
  * Disable uri-reference format check in jsonsschema (#2771).
  * Replace iteritems with items due to pandas deprecation (#2683). 

-------------------------------------------------------------------
Wed May 25 15:12:57 UTC 2022 - Matej Cepl <mcepl@suse.com>

- Upgrade to 4.2.0:
  - Pie charts are now supported through the use of mark_arc.
  - Support for the datum encoding specifications from Vega-Lite;
    see Vega-Lite Datum Definition.
  - angle encoding can now be used to control point styles
  - Support for serialising pandas nullable data types for float data
  - Automatically create an empty data object when Chart is
    called without a data parameter
  - Allow the use of pathlib Paths when saving charts
  - Support deepcopy for charts
  - Fix to_dict() for nested selections
  - Fix item access for expressions

-------------------------------------------------------------------
Fri Feb 19 14:36:20 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Skip python36 build: With NumPy 1.20, Tumbleweed no longer 
  provides a python36-numpy (NEP 29)

-------------------------------------------------------------------
Sat Apr 18 21:05:04 UTC 2020 - Arun Persaud <arun@gmx.de>

- update to version 4.1.0:
  * Minimum Python version is now 3.6
  * Update Vega-Lite to version 4.8.1; many new features and bug fixes
    from Vega-Lite versions 4.1 through 4.8; see Vega-Lite Release
    Notes.
  * Enhancements
    + strokeDash encoding can now be used to control line styles
      (Example: Multi Series Line Chart)
    + chart.save() now relies on altair_saver for more flexibility
      (#1943).
    + New chart.show() method replaces chart.serve(), and relies on
      altair_viewer to allow offline viewing of charts (#1988).
  * Bug Fixes
    + Support Python 3.8 (#1958)
    + Support multiple views in JupyterLab (#1986)
    + Support numpy types within specifications (#1914)
    + Support pandas nullable ints and string types (#1924)
  * Maintenance
    + Altair now uses black and flake8 for maintaining code quality &
      consistency.

-------------------------------------------------------------------
Thu Jan 30 17:31:42 UTC 2020 - Todd R <toddrme2178@gmail.com>

- Update to 4.0.1
  * Support for interactive legends
  * Responsive chart width and height
  * Bins responsive to selections
  * New pivot transform
  * New Regression transform
  * New LOESS transform
  * New density transform
  * Image mark
  * New default html renderer, directly compatible with Jupyter Notebook and
    JupyterLab without the need for frontend extensions, as well as tools like
    nbviewer and nbconvert, and related notebook environments such as Zeppelin,
    Colab, Kaggle Kernels, and DataBricks.
  * Support per-corner radius for bar marks
  * Sort-by-field can now use the encoding name directly
  * The rangeStep argument to :class:Scale and :meth:Chart.configure_scale is deprecated.
    instead, use chart.properties(width={"step": rangeStep}) or
    chart.configure_view(step=rangeStep).
  * align, center, spacing, and columns are no longer valid chart properties, but
    are moved to the encoding classes to which they refer.

-------------------------------------------------------------------
Sun Dec  1 19:16:00 UTC 2019 - Arun Persaud <arun@gmx.de>

- update to version 3.3.0:
  * Enhancements
    + Add inheritance structure to low-level schema classes (#1803)
    + Add html renderer which works across frontends (#1793)
    + Support Python 3.8 (#1740, #1781)
    + Add :G shorthand for geojson type (#1714)
    + Add data generator interface: alt.sequence, alt.graticule,
      alt.sphere() (#1667, #1687)
    + Support geographic data sources via __geo_interface__ (#1664)
  * Bug Fixes
    + Support pickle and copy.deepcopy for chart objects (#1805)
    + Fix bug when specifying count() within transform_joinaggregate()
      (#1751)
    + Fix LayerChart.add_selection (#1794)
    + Fix arguments to project() method (#1717)
    + Fix composition of multiple selections (#1707)

-------------------------------------------------------------------
Fri Aug 16 16:10:02 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to version 3.2.0
  Upgraded to Vega-Lite version 3.4
  + Enhancements
    * Selector values can be used directly in expressions
    * Top-level chart repr is now truncated to improve readability of error
      messages
  + Bug Fixes
    *  top-level ``add_selection`` methods now delegate to sub-charts. Previously
       they produced invalid charts
    *  Unsupported ``mark_*()`` methods removed from LayerChart
    *  New encoding channels are properly parsed
    *  Data context is propagated when encodings are specified as lists
  + Backward-Incompatible Changes
    *  ``alz.LayerChart`` no longer has ``mark_*()`` methods, because they never 
       produced valid chart specifications)

-------------------------------------------------------------------
Tue Jul 23 17:47:06 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to Version 3.1.0
  Update includes full compatibility with version 3.3 of Vega-Lite.
  + Enhancements
    * Added support for vega themes via ``alt.themes.enable(theme_name)``
    * Added an ``alt.renderers.disable_max_rows()`` method for disabling the
      maximum rows check
    * Improved user-facing warnings/errors around layering and faceting .
    * ``data`` argument is now properly handled by  ``Chart.properties``
    * Compound charts (layer, concat, hconcat, vconcat) now move data to the top
      level by default. In particular, this means that the ``facet()`` method
      can now be called directly on a layered chart without having to change
      how data is specified.
    * ``alt.LayerChart`` now supports ``mark_*()`` methods. If a layer specifies a
      mark at the top level, all child charts will inherit it (unless they override
      it explicitly).
    * ``alt.Chart.facet()`` now handles wrapped facets; for example:
      chart.facet('column_name', columns=5)
  + Bug fixes
    * Make ``chart.serve()`` and ``chart.save()`` respect the data transformer
      setting
    * Fixed a deserialization bug for certain chart specs in schemapi
  + Backward-Incompatible Changes
    * ``alt.Chart.facet()`` now accepts a wrapped facet encoding as a first positional
      argument, rather than a row encoding. The following are examples of old invocations,
      and the equivalent new invocations:
      > ``chart.facet(row='col1', column='col2')``: unchanged
      > ``chart.facet('col1', 'col2')``: change to ``chart.facet(row='col1', column='col2')``
      > ``chart.facet('col1')``: change to ``chart.facet(row='col1')``
      In each case, the new invocations are compatible back to Altair 2.X.
    * Several of the encoding channels added in 3.0 have had their capitalization
      corrected to better match the names used in the schema:
      > ``alt.Fillopacity`` -> ``alt.FillOpacity``
      > ``alt.Strokeopacity`` -> ``alt.StrokeOpacity``
      > ``alt.Strokewidth`` -> ``alt.StrokeWidth``
      > ``alt.Xerror`` -> ``alt.XError``
      > ``alt.Xerror2`` -> ``alt.XError2``
      > ``alt.Yerror`` -> ``alt.YError``
      > ``alt.Yerror2`` -> ``alt.YError2``
- Update to Version 3.0.1
  * Fix version info bug for HTML output and Colab & Kaggle renderers.

-------------------------------------------------------------------
Mon Apr 29 14:53:58 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Uodate to 3.0.0
  * new compound marks: mark_boxplot(), mark_errorband(), mark_errorbar()
  * new transforms: transform_impute(), transform_joinaggregate(), transform_flatten() transform_fold(), transform_sample(), transform_stack()
  * new facet encoding that is similar to the row and column encoding, but allows for wrapped facets
  * new alt.concat() function that is similar to alt.hconcat and alt.vconcat, but allows for more general wrapped concatenation
  * new columns keyword that allows wrapped faceting, repeating, and concatenation.
  * many, many bug fixes
  * tooltips can now be automatically populated using the tooltip mark configuration.
  * ability to specify initial condisions for selections

-------------------------------------------------------------------
Thu Mar 21 15:44:40 CET 2019 - Matej Cepl <mcepl@suse.com>

- Update to 2.4.1:
  - Several documentation cleanups & new examples
  - Fix incompatibility with pandas version 0.24 (#1315)

-------------------------------------------------------------------
Fri Jan  4 16:35:02 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to version 2.3.0
  * Includes many reworked examples in the example gallery.
  + Enhancements
    * Better errors for non-string column names, as well as automatic conversion
      of ``pandas.RangeIndex`` columns to strings (#1107)
    * Renderers now have set_embed_options() method (#1203)
    * Added kaggle renderer & more HTML output options (#1123)
  + Maintenance
    * fix typing requirement in Python 3.6+ (#1185)
    * Added support & CI testing for Python 3.7 (#1008)
  + Bug fixes
    * Selection predicates now recognize all valid entries (#1143)
    * Python 2 support for `chart.save()` (#1134)
- Update to version 2.2.2
  + Bug Fixes
    * fix missing JSON resource in ``altair.vega.v4`` (#1097)
- Update to version 2.1.0
  + Bug Fixes
    * appropriate handling of InlineData in dataset consolidation (#1092)
    * fix admonition formatting in documentation page (#1094)
- Update to version 2.2.0
  + Enhancements
    * better handling of datetimes and timezones (#1053)
    * all inline datasets are now converted to named datasets and stored at the
      top level of the chart. This behavior can be disabled by setting
      ``alt.data_transformers.consolidate_datasets = False`` (#951 & #1046)
    * more streamlined shorthand syntax for window transforms (#957)
  + Maintenance
    * update from Vega-Lite 2.4.3 to Vega-Lite 2.6.0; see vega-lite change-logs [2.5.0](https://github.com/vega/vega-lite/releases/tag/v2.5.0) [2.5.1](https://github.com/vega/vega-lite/releases/tag/v2.5.1) [2.5.2](https://github.com/vega/vega-lite/releases/tag/v2.5.2) [2.6.0](https://github.com/vega/vega-lite/releases/tag/v2.6.0)
  + Backward-incompatible changes
    * ``alt.SortField`` renamed to ``alt.EncodingSortField`` and
      ``alt.WindowSortField`` renamed to ``alt.SortField`` (#3741)
  + Bug Fixes
    * Fixed serialization of logical operands on selections within
      ``transform_filter()``: (#1075)
    * Fixed sphinx issue which embedded chart specs twice (#1088)
    * Avoid Selenium import until it is actually needed (#982)
- Update to version 2.1.0
  + Enhancements
    * add a ``scale_factor`` argument to ``chart.save()`` to allow the
      size/resolution of saved figures to be adjusted. (#918)
    * add an ``add_selection()`` method to add selections to charts (#832)
    * add ``chart.serve()`` and ``chart.display()`` methods for more flexibility
      in displaying charts (#831)
    * allow multiple fields to be passed to encodings such as ``tooltip``
      and ``detail`` (#830)
    * make ``timeUnit`` specifications more succinct, by parsing them in a manner
      similar to aggregates (#866)
    * make ``to_json()`` and ``to_csv()`` have deterministic filenames, so in json
      mode a single datasets will lead to a single on-disk serialization (#862)
  + Breaking Changes
    * make ``data`` the first argument for all compound chart types to match the
      semantics of ``alt.Chart`` (this includes ``alt.FacetChart``,
      ``alt.LayerChart``, ``alt.RepeatChart``, ``alt.VConcatChart``, and
      ``alt.HConcatChart``) (#895).
    * update vega-lite to version 2.4.3 (#836)
    * Only API change is internal: ``alt.MarkProperties`` is now ``alt.MarkConfig``
  + Maintenance
    * update vega to v3.3 & vega-embed to v3.11 in html output & colab renderer (#838)
- Remove no longer relevant python-altair-pandas.patch

-------------------------------------------------------------------
Fri May 18 09:30:13 UTC 2018 - tchvatal@suse.com

- Remove bogus vega3 dependency

-------------------------------------------------------------------
Thu May 17 14:45:30 UTC 2018 - tchvatal@suse.com

- Version update to 2.0.1:
  * Update all the dependencies to reflect reality
  * Many changes described mostly in the github commitlog

-------------------------------------------------------------------
Thu May 17 14:19:09 UTC 2018 - tchvatal@suse.com

- Add patch to build with new python-pandas:
  * python-altair-pandas.patch

-------------------------------------------------------------------
Thu May  3 14:07:08 UTC 2018 - toddrme2178@gmail.com

- Use %license tag

-------------------------------------------------------------------
Thu Apr 19 06:16:48 UTC 2018 - toddrme2178@gmail.com

- Update to version 1.2.1
  * Support for JupyterLab/nteract through MIME based rendering. Enable this by calling enable_mime_rendering() before rendering visualizations (#216).
  * Change default import in all code and docs to import altair as alt
  * Check for missing and misspelled column names upon exporting or rendering, and raise FieldError (#399) if any problems are found. This can be disabled by setting Chart.validated_columns=False.
  * Raise MaxRowsExceeded if the number of rows in the dataset is larger than Chart.max_rows to guard against sending large datasets to the browser.
  * Move the Vega-Lite 1.x api into altair.v1 to make it easier for us to migrate to Vega-Lite 2.x and continue to support 1.x. No import change are needed as altair.v1 is aliased to altair in this releasealtair.v1 (#377).
  * Moved the example notebooks into a separate repository (https://github.com/altair-viz/altair_notebooks) that has Binder support (#391).
  * Add $schema to top-level JSON spec (#370).
  * Minor documentation revisions.
- Remove upstream-included fix_mockserver_py36.patch

-------------------------------------------------------------------
Tue Aug 22 19:12:23 UTC 2017 - toddrme2178@gmail.com

- Initial version
- Add fix_mockserver_py36.patch
  Should be included in next release
