Index: pyparted-3.12.0/.github/workflows/test.yml
===================================================================
--- pyparted-3.12.0.orig/.github/workflows/test.yml
+++ pyparted-3.12.0/.github/workflows/test.yml
@@ -34,5 +34,4 @@ jobs:
               python3-pytest \
               python3-types-six \
               udev
-          pip install six
           env PYTHON=python3 make test coverage COVERAGE=coverage
Index: pyparted-3.12.0/src/parted/disk.py
===================================================================
--- pyparted-3.12.0.orig/src/parted/disk.py
+++ pyparted-3.12.0/src/parted/disk.py
@@ -56,12 +56,10 @@ class Disk(object):
         self._partitions = CachedList(lambda : self.__getPartitions())
 
     def _hasSameParts(self, other):
-        import six
-
         if len(self.partitions) != len(other.partitions):
             return False
 
-        partIter = six.moves.zip(self.partitions, other.partitions)
+        partIter = zip(self.partitions, other.partitions)
         while True:
             try:
                 (left, right) = next(partIter)
Index: pyparted-3.12.0/tests/test__ped_geometry.py
===================================================================
--- pyparted-3.12.0.orig/tests/test__ped_geometry.py
+++ pyparted-3.12.0/tests/test__ped_geometry.py
@@ -19,7 +19,6 @@
 #
 
 import _ped
-import six
 from tests.baseclass import RequiresDevice
 
 # One class per method, multiple tests per class.  For these simple methods,
@@ -375,4 +374,4 @@ class GeometryStrTestCase(RequiresDevice
         lines = str(self.g).split('\n')
         self.assertEqual(lines[0], '_ped.Geometry instance --')
         self.assertEqual(lines[1], '  start: 10  end: 109  length: 100')
-        six.assertRegex(self, lines[2], '^  device: <_ped.Device object at .*')
+        self.assertRegex(lines[2], '^  device: <_ped.Device object at .*')
