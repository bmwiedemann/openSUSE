-------------------------------------------------------------------
Wed Apr 30 06:22:55 UTC 2025 - Dirk Müller <dmueller@suse.com>

- update to 5.2:
  * Change to the library: fix inoperative `pathname` argument of
    `add_files` method (#135), by @nvinson.
  * Change to the tests: update a test to handle new libarchive
    versions (#131).
- drop libarchive.patch (upstream)

-------------------------------------------------------------------
Tue Nov 12 12:33:08 UTC 2024 - Markéta Machová <mmachova@suse.com>

- Add upstream libarchive.patch to fix tests

-------------------------------------------------------------------
Fri Mar 15 21:09:39 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 5.1:
  * Fix the `format_name` property and move it from the
    `ArchiveEntry` class to the `ArchiveRead` class (#127).

-------------------------------------------------------------------
Thu Dec  7 22:21:33 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 5.0:
  * It is now possible to specify a codec for archive entry
    metadata (`pathname`, `linkpath`, `uname` and `gname`)
  * **BREAKING:** If you use the `archive_read_class` and
    `archive_write_class` arguments, the classes you provide will
    receive a codec name as a second positional argument.
  * The `timestamp_nsec` arguments of the legacy
    `ArchiveEntry.set_{a,c,m}time` methods are now optional
  * Removed obsolete dependencies (`mock` and `six`) from
    `tox.ini` (#119).
  * Always use `UTF-8` when reading the `PKG-INFO` and
    `README.rst` files (#120).
  * Replaced `pytest-xdist` with `pytest-forked` in `tox.ini`
- drop python-libarchive-c-no-mock.patch (upstream)

-------------------------------------------------------------------
Thu Jun  2 12:48:05 UTC 2022 - Marcus Rueckert <mrueckert@suse.de>

- Hardcode libarchive13 for now until we make macro based requires
  work with the python package magic. libarchive13 was the package
  name since sle12.

-------------------------------------------------------------------
Thu Jun  2 12:23:32 UTC 2022 - Marcus Rueckert <mrueckert@suse.de>

- we only need the shared library package for libarchive and not
  the devel package:
  use %requires_file to get the package of the currently installed
  via the libarchive.so symlink in libarchive-devel

-------------------------------------------------------------------
Wed Mar 23 13:50:58 UTC 2022 - pgajdos@suse.com

- version update to 4.0
  4.0
  ---
    BREAKING & SECURITY: The archive extraction functions now pass 3 security flags (SECURE_NODOTDOT, SECURE_NOABSOLUTEPATHS
      and SECURE_SYMLINKS) to libarchive by default, unless the current directory is the root.
    BREAKING: The ArchiveEntry properties atime, mtime, ctime, birthtime and size now have the value None instead of 0 when they're unset.
    BREAKING: The ArchiveEntry.pathname property now attempts to decode bytes using UTF-8. This breaks reading archives that
      contain file names which look like UTF-8 but aren't, if such a thing exists. Proper support of encodings will probably be added
      in the next version.
    Multiple entries from the same archive can now be kept in memory, however only the current entry's content can be read.
    The filetype, linkpath, size, mode, redvmajor, redvminor, uid and gid attributes of an archive entry can now be modified.
    The four time properties of archive entries now have setters, so for example entry.set_mtime(0, 0) can be replaced by entry.mtime = 0.
    Archive entries have 4 new properties: perm, rdev, uname and gname.
    When adding files to an archive, a destination path can now be specified.
    The ArchiveRead class now has a bytes_read property.
    The ArchiveWrite class now has a bytes_written property.
    Python 3.6 is no longer tested.
    The documentation has been improved.
  3.2
  ---
    This release fixes the seek callbacks passed to libarchive by the custom_reader and stream_reader function. See #116 for more details.
  3.1
  ---
  This release is mostly meant to fix #113 (a bug introduced in 3.0), but it also contains the following changes:
    the ffi.archive_error() function now returns an exception instead of raising it
    seekable_stream_reader is now an alias of stream_reader
    the misleadingly named ffi.VOID_CB function has been removed
  3.0
  ---
  Changes to the library:
    BREAKING: dropped support for Python 2.7 (#108)
    implemented reading and writing encrypted archives (#109)
    created a new context manager: seekable_stream_reader (#107)
    added support for 64-bit time_t on 32-bit systems (#101)
    load extra formats and filters when they're requested (#95)
- added patches
  fix https://github.com/Changaco/python-libarchive-c/commit/13b904e2b046db25a42cd63557d259b3d3998323
  + python-libarchive-c-no-mock.patch
- do not require mock

-------------------------------------------------------------------
Wed Apr 15 12:28:28 UTC 2020 - pgajdos@suse.com

- version update to 2.9
  * Changes to the library:
      optimized the ArchiveEntry class (#94)
      added support for the zstd format (#90)
      fixed the top-level __all__ list (7b97d8b)
      updated the code to support Python 3.8 (#88)
      improved the add_file_from_memory method (#85 and #86)
      lowered the level of log messages from warning to info (#83)
  * Tests:
      dropped testing with Python 3.4, added 3.7 and 3.8 (#88)
      fixed unicode handling in entry tests (#84)

-------------------------------------------------------------------
Tue Dec  4 12:50:00 UTC 2018 - Matej Cepl <mcepl@suse.com>

- Remove superfluous devel dependency for noarch package

-------------------------------------------------------------------
Mon Jun 18 00:22:07 UTC 2018 - 9+suse@cirno.systems

- Update to version 2.8
  * add support for setting atime, ctime, mtime and birthtime
  * tell libarchive when writing an archive is aborted due to an
    exception
  * add support for getting uid and gid
  * add support for high resolution timestamps
  * add two new archive readers: stream_reader and custom_reader
  * add missing archive extraction flags
  * add the lz4 and warc formats
  * add support for write options and uid/gid lookup

-------------------------------------------------------------------
Thu Sep  7 22:41:45 UTC 2017 - toddrme2178@gmail.com

- initial version
