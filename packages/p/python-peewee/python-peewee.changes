-------------------------------------------------------------------
Wed Dec 11 08:07:29 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Pull in the full python for sqlite

-------------------------------------------------------------------
Fri Oct 18 10:19:07 UTC 2019 - Marketa Calabkova <mcalabkova@suse.com>

- Update to 3.11.2
  * Implement hash interface for Alias instances, allowing them to be used in multi-source queries.
  * Workaround for MySQL prior to 8 and MariaDB handling of union queries inside of parenthesized expressions (like IN).
  * Be more permissive in letting invalid values be stored in a field whose type is INTEGER or REAL, since Sqlite allows this.
  * Fix for issue #1991 regarding setting intervening models to None. 
  * Fixes the Model._pk and get_id() interfaces so they no longer introduce the possibility of accidentally resolving the FK.

-------------------------------------------------------------------
Wed Sep 11 08:24:43 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 3.10.0:
  * Many bugfixes to enumerate, see CHANGELOG.md

-------------------------------------------------------------------
Tue Jul 23 11:32:26 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 3.9.6:
  * Support nesting the Database instance as a context-manager. The outermost block will handle opening and closing the connection along with wrapping everything in a transaction. Nested blocks will use savepoints.
  * Add new session_start(), session_commit() and session_rollback() interfaces to the Database object to support using transactional controls in situations where a context-manager or decorator is awkward.
  * Fix error that would arise when attempting to do an empty bulk-insert.
  * Set isolation_level=None in SQLite connection constructor rather than afterwards using the setter.
  * Add create_table() method to Select query to implement CREATE TABLE AS.
  * Cleanup some declarations in the Sqlite C extension.
  * Add new example showing how to implement Reddit's ranking algorithm in SQL.

-------------------------------------------------------------------
Sun May 12 20:41:48 UTC 2019 - Alexei Podvalsky <avvissu@yandex.by>

- Update to 3.9.5:
  * Added small helper for setting timezone when using Postgres.
  * Improved SQL generation for VALUES clause.
  * Support passing resolution to TimestampField as a power-of-10.
  * Small improvements to INSERT queries when the primary-key is not
    an auto-incrementing integer, but is generated by the database server (eg uuid).
  * Cleanups to virtual table implementation and python-to-sqlite value conversions.
  * Fixed bug related to binding previously-unbound models to a database using a
    context manager, #1913.
- Change in 3.9.4:
  * Add Model.bulk_update() method for bulk-updating fields across multiple
    model instances. Docs.
  * Add lazy_load parameter to ForeignKeyField. When initialized with lazy_load=False,
    the foreign-key will not use an additional query to resolve the related model instance.
  * Added Model.truncate_table() method.
  * The reflection and pwiz extensions now attempt to be smarter about converting
    database table and column names into snake-case.
  * Bulk insert via insert_many() no longer require specification of the fields
    argument when the inserted rows are lists/tuples. In that case, the fields
    will be inferred to be all model fields except any auto-increment id.
  * Add DatabaseProxy, which implements several of the Database class context managers.
  * Add support for window function frame exclusion and added built-in support for the GROUPS frame type.
  * Add support for chaining window functions by extending a previously-declared window function.
  * Playhouse Postgresql extension TSVectorField.match() method supports an additional argument plain,
    which can be used to control the parsing of the TS query.
  * Added very minimal JSONField to the playhouse MySQL extension.

-------------------------------------------------------------------
Sun Mar 24 05:54:34 UTC 2019 - Alexei Podvalsky <avvissu@yandex.by>

- Update to 3.9.3:
  * Added cross-database support for NULLS FIRST/LAST when specifying
    the ordering for a query. Previously this was only supported for
    Postgres.
  * Added EXCLUDED helper for referring to the EXCLUDED namespace
    used with INSERT...ON CONFLICT queries, when referencing values in
    the conflicting row data.
  * Added helper method to the model Metadata class for setting the
    table name at run-time. Setting the Model._meta.table_name directly
    may have appeared to work in some situations, but could lead to
    subtle bugs. The new API is Model._meta.set_table_name().
  * Enhanced helpers for working with Peewee interactively, see doc.
  * Fix cache invalidation bug in DataSet that was originally reported
    on the sqlite-web project.
  * New example script implementing a hexastore.

-------------------------------------------------------------------
Fri Jan 18 22:09:07 UTC 2019 - Alexei Podvalsky <avvissu@yandex.by>

- Update to 3.8.2:
  * The default row-type for INSERT queries executed with a non-default
    RETURNING clause has changed from tuple to Model instances. This
    makes INSERT behavior consistent with UPDATE and DELETE queries
    that specify a RETURNING clause.
  * Removing support for the table_alias model Meta option.
  * Added playhouse.shortcuts.ReconnectMixin, which can be used to
    implement automatic reconnect under certain error conditions.
  * Fix SQL generation bug when using an inline window function in
    the ORDER BY clause of a query.
  * Fix possible zero-division in user-defined implementation of
    BM25 ranking algorithm for SQLite full-text search.

-------------------------------------------------------------------
Mon Oct  8 20:05:48 UTC 2018 - Alexei Podvalsky <avvissu@yandex.by>

- Update to 3.7.1:
  * Added table_settings model Meta option, which should be a list
    of strings specifying additional options for CREATE TABLE, which
    are placed after the closing parentheses.
  * Allow specification of on_update and on_delete behavior for
    many-to-many relationships when using ManyToManyField.
  * Fixed incorrect SQL generation for Postgresql ON CONFLICT clause
    when the conflict_target is a named constraint (rather than an
    index expression). This introduces a new keyword-argument to the
    on_conflict() method: conflict_constraint, which is currently only
    supported by Postgresql. Refs issue #1737.
  * Fixed incorrect SQL for sub-selects used on the right side of IN
    expressions. Previously the query would be assigned an alias, even
    though an alias was not needed.
  * Fixed incorrect SQL generation for Model indexes which contain SQL
    functions as indexed columns.
  * Fixed bug in the generation of special queries used to perform
    operations on SQLite FTS5 virtual tables.
  * Allow frozenset to be correctly parameterized as a list of values.
  * Allow multi-value INSERT queries to specify columns as a list of
    strings.
  * Support CROSS JOIN for model select queries.

-------------------------------------------------------------------
Sat Jul 28 18:06:40 UTC 2018 - jengelh@inai.de

- Add missing "that".

-------------------------------------------------------------------
Thu Jul 19 15:38:58 UTC 2018 - mcepl@suse.com

- Update to 3.6.4:
  - bugfixes
  - works with python 3.7.0
  - Support for specifying ROWS or RANGE window frame types.
  - Add APIs for user-defined window functions if using
    pysqlite3 and sqlite 3.25.0 or newer.
  - TimestampField now uses 64-bit integer data-type for
    storage.
  - Added support to pwiz and playhouse.reflection to enable
    generating models from VIEWs.
  - Added lower-level database API for introspecting VIEWs.
  - Revamped continuous integration setup for better coverage,
    including 3.7 and 3.8-dev.
  - Allow building C extensions even if Cython is not
    installed, by distributing pre-generated C source files.
- Fixes tests

-------------------------------------------------------------------
Wed Jul  4 13:37:37 UTC 2018 - avvissu@yandex.by

- Update to 3.5.2:
  * New guide to using window functions in Peewee.
  * New and improved table name auto-generation.
  * Allow passing single fields/columns to window function
    order_by and partition_by arguments.
  * Support for FILTER (WHERE...) clauses with window functions
    and aggregates.
  * Added IdentityField class suitable for use with Postgres 10's
    new identity column type.
  * Fixed bug creating indexes on tables that are in attached
    databases (SQLite).
  * Fixed obscure bug when using prefetch() and ModelAlias to
    populate a back-reference related model.
- Change in 3.5.1:
  * New documentation for working with relationships in Peewee.
  * Improved tests and documentation for MySQL upsert functionality.
  * Allow database parameter to be specified with ModelSelect.get()
    method. For discussion, see #1620.
  * Add QualifiedNames helper to peewee module exports.
  * Add temporary= meta option to support temporary tables.
  * Allow a Database object to be passed to constructor of
    DataSet helper.

-------------------------------------------------------------------
Sat Jun 23 19:32:23 UTC 2018 - avvissu@yandex.by

- Update to 3.5.0:
  * see: /usr/share/package/python-peewee/CHANGELOG.md
- Build with dependencies: sqlite3, cython
- Build with python3 and python2 (singlespec)
- Drop the noarch package (arch-independent-package-contains-binary-or-object)
- Spec file cleanup

-------------------------------------------------------------------
Fri Aug 14 15:11:22 UTC 2015 - i@marguerite.su

- update version 2.6.3
  * read https://github.com/coleifer/peewee/releases

-------------------------------------------------------------------
Mon Apr 28 12:41:04 UTC 2014 - i@marguerite.su

- update version 2.2.3
  * New migrations module
  * Added a return value to Model.save() indicating number of rows
    affected.
  * Added a date_trunc() method that works for Sqlite.
  * Added a Model.sqlall() class-method to return all the SQL to
    generate the model/indices.
  * bugfixes

-------------------------------------------------------------------
Sun Apr 20 16:21:08 UTC 2014 - i@marguerite.su

- initial version 2.2.2
  * see https://github.com/coleifer/peewee/commits/master for details

