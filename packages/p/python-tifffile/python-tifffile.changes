-------------------------------------------------------------------
Wed May 31 08:27:38 UTC 2023 - Dirk MÃ¼ller <dmueller@suse.com>

- update to 2023.4.12:
  * Pass 4988 tests.
  * Do not write duplicate ImageDescription tags from extratags
    (breaking).
  * Support multifocal SVS files (#193).
  * Log warning when filtering out extratags.
  * Fix writing OME-TIFF with image description in extratags.
  * Ignore invalid predictor tag value if prediction is not used.
  * Raise KeyError if ZarrStore is missing requested chunk.
  * 2023.3.21
  * Fix reading MMstack with missing data (#187).

-------------------------------------------------------------------
Wed May 24 10:16:40 UTC 2023 - Jan Engelhardt <jengelh@inai.de>

- Drop TM/R marks according to packaging guidelines.

-------------------------------------------------------------------
Sat Apr  1 09:28:28 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Update to 2023.3.15
  * Pass 4980 tests.
  * Fix corruption using tile generators with
    prediction/compression (#185).
  * Add parser for Micro-Manager MMStack series (breaking).
  * Return micromanager_metadata IndexMap as numpy array
    (breaking).
  * Revert optimizations for Micro-Manager OME series.
  * Do not use numcodecs zstd in write_fsspec (kerchunk issue 317).
  * More type annotations.
- Release 2023.2.28
  * Fix reading some Micro-Manager metadata from corrupted files.
  * Speed up reading Micro-Manager indexmap for creation of OME
    series.
- Release 2023.2.27
  * Use Micro-Manager indexmap offsets to create virtual
    TiffFrames.
  * Fixes for future imagecodecs.
- Release 2023.2.3
  * Fix overflow in calculation of databytecounts for large NDPI
    files.
- Release 2023.2.2
  * Fix regression reading layered NDPI files.
  * Add option to specify offset in FileHandle.read_array.
- Release 2023.1.23
  * Support reading NDTiffStorage.
  * Support reading PIXTIFF compression.
  * Support LERC with Zstd or Deflate compression.
  * Do not write duplicate and select extratags.
  * Allow to write uncompressed image data beyond 4 GB in classic
    TIFF.
  * Add option to specify chunkshape and dtype in
    FileSequence.asarray.
  * Add option for imread to write to output in
    FileSequence.asarray (#172).
  * Add function to read GDAL structural metadata.
  * Add function to read NDTiff.index files.
  * Fix IndexError accessing TiffFile.mdgel_metadata in non-MDGEL
    files.
  * Fix unclosed file ResourceWarning in TiffWriter.
  * Fix non-bool predictor arguments (#167).
  * Relax detection of OME-XML (#173).
  * Rename some TiffFrame parameters (breaking).
  * Deprecate squeeze_axes (will change signature).
  * Use defusexml in xml2dict.
- Do not test xarry on python38: not supported anymore

-------------------------------------------------------------------
Tue Feb 21 01:18:38 UTC 2023 - Steve Kowalik <steven.kowalik@suse.com>

- Inject multibuild to fix a bootstrapping issue. 

-------------------------------------------------------------------
Sat Jan 21 13:23:43 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Update to 2022.10.10.
  * Pass 4925 tests.
  * Fix RecursionError in peek_iterator.
  * Fix reading NDTiffv3 summary settings.
  * Fix svs_description_metadata parsing (#149).
  * Fix ImportError if Python was built without zlib or lzma.
  * Fix bool of COMPRESSION and PREDICTOR instances.
  * Deprecate non-sequence extrasamples arguments.
  * Parse SCIFIO metadata as ImageJ.
- Release 2022.8.12
  * Fix writing ImageJ format with hyperstack argument.
  * Fix writing description with metadata disabled.
  * Add option to disable writing shaped metadata in TiffWriter.
- Release 2022.8.8
  * Fix regression using imread out argument (#147).
  * Fix imshow show argument.
  * Support fsspec OpenFile.
- Release 2022.8.3
  * Fix regression writing default resolutionunit (#145).
  * Add strptime function parsing common datetime formats.
- Release 2022.7.31
  * Fix reading corrupted WebP compressed segments missing alpha
    channel (#122).
  * Fix regression reading compressed ImageJ files.
- Release 2022.7.28
  * Rename FileSequence.labels attribute to dims (breaking).
  * Rename tifffile_geodb module to geodb (breaking).
  * Rename TiffFile._astuple method to astuple (breaking).
  * Rename noplots command line argument to maxplots (breaking).
  * Fix reading ImageJ hyperstacks with non-TZC order.
  * Fix colorspace of JPEG segments encoded by Bio-Formats.
  * Fix fei_metadata for HELIOS FIB-SEM (#141, needs test).
  * Add xarray style properties to TiffPage (WIP).
  * Add option to specify OME-XML for TiffFile.
  * Add option to control multiscales in ZarrTiffStore.
  * Support writing to uncompressed ZarrTiffStore.
  * Support writing empty images with tiling.
  * Support overwriting some tag values in NDPI (#137).
  * Support Jetraw compression (experimental).
  * Standardize resolution parameter and property.
  * Deprecate third resolution argument on write (use
    resolutionunit).
  * Deprecate tuple type compression argument on write (use
    compressionargs).
  * Deprecate enums in TIFF namespace (use enums from module).
  * Improve default number of threads to write compressed segments
    (#139).
  * Parse metaseries time values as datetime objects (#143).
  * Increase internal read and write buffers to 256 MB.
  * Convert some warnings to debug messages.
  * Declare all classes final.
  * Add script to generate documentation via Sphinx.
  * Convert docstrings to Google style with Sphinx directives.
- Release 2022.5.4
  * Allow to write NewSubfileType=0 (#132).
  * Support writing iterators of strip or tile bytes.
  * Convert iterables (not iterators) to NumPy arrays when writing.
  * Explicitly specify optional keyword parameters for imread and
    imwrite.
  * Return number of written bytes from FileHandle write functions.
- Release 2022.4.28
  * Add option to specify fsspec version 1 URL template name
    (#131).
  * Ignore invalid dates in UIC tags (#129).
  * Fix zlib_encode and lzma_encode to work with non-contiguous
    arrays (#128).
  * Fix delta_encode to preserve byteorder of ndarrays.
  * Move Imagecodecs fallback functions to private module and add
    tests.
- Release 2022.4.26
  * Fix AttributeError in TiffFile.shaped_metadata (#127).
  * Fix TiffTag.overwrite with pre-packed binary value.
  * Write sparse TIFF if tile iterator contains None.
  * Raise ValueError when writing photometric mode with too few
    samples.
  * Improve test coverage.
- Release 2022.4.22
  * Add type hints for Python 3.10 (WIP).
  * Fix Mypy errors (breaking).
  * Mark many parameters positional-only or keyword-only
    (breaking).
  * Remove deprecated pages parameter from imread (breaking).
  * Remove deprecated compress and ijmetadata write parameters
    (breaking).
  * Remove deprecated fastij and movie parameters from TiffFile
    (breaking).
  * Remove deprecated multifile parameters from TiffFile
    (breaking).
  * Remove deprecated tif parameter from TiffTag.overwrite
    (breaking).
  * Remove deprecated file parameter from FileSequence.asarray
    (breaking).
  * Remove option to pass imread class to FileSequence (breaking).
  * Remove optional parameters from __str__ functions (breaking).
  * Rename TiffPageSeries.offset to dataoffset (breaking)
  * Change TiffPage.pages to None if no SubIFDs are present
    (breaking).
  * Change TiffPage.index to int (breaking).
  * Change TiffPage.is_contiguous, is_imagej, and is_shaped to bool
    (breaking).
  * Add TiffPage imagej_description and shaped_description
    properties.
  * Add TiffFormat abstract base class.
  * Deprecate lazyattr and use functools.cached_property instead
    (breaking).
  * Julian_datetime raises ValueError for dates before year 1
    (breaking).
  * Regressed import time due to typing.
- Release 2022.4.8
  * Add _ARRAY_DIMENSIONS attributes to ZarrTiffStore.
  * Allow C instead of S axis when writing OME-TIFF.
  * Fix writing OME-TIFF with separate samples.
  * Fix reading unsqueezed pyramidal OME-TIFF series.
- Release 2022.3.25
  * Fix another ValueError using ZarrStore with zarr >= 2.11.0
    (tiffslide #25).
  * Add parser for Hamamatsu streak metadata.
  * Improve hexdump.
- Release 2022.3.16
  * Use multi-threading to compress strips and tiles.
  * Raise TiffFileError when reading corrupted strips and tiles
    (#122).
  * Fix ScanImage single channel count (#121).
  * Add parser for AstroTIFF FITS metadata.
- Release 2022.2.9
  * Fix ValueError using multiscale ZarrStore with zarr >= 2.11.0.
  * Raise KeyError if ZarrStore does not contain key.
  * Limit number of warnings for missing files in multifile series.
  * Allow to save colormap to 32-bit ImageJ files (#115).
- Release 2022.2.2
  * Fix TypeError when second ImageDescription tag contains
    non-ASCII (#112).
  * Fix parsing IJMetadata with many IJMetadataByteCounts (#111).
  * Detect MicroManager NDTiffv2 header (not tested).
  * Remove cache from ZarrFileSequenceStore (use
    zarr.LRUStoreCache).
  * Raise limit on maximum number of pages.
  * Use J2K format when encoding JPEG2000 segments.
  * Formally deprecate imsave and TiffWriter.save.
  * Drop support for Python 3.7 and NumPy < 1.19 (NEP29).
- Release 2021.11.2
  * Lazy-load non-essential tag values (breaking).
  * Warn when reading from closed file.
  * Support ImageJ prop metadata type (#103).
  * Support writing indexed ImageJ format.
  * Fix multi-threaded access of multi-page Zarr stores with
    chunkmode 2.
  * Raise error if truncate is used with compression, packints, or
    tile.
  * Read STK metadata without UIC2tag.
  * Improve log and warning messages (WIP).
  * Improve string representation of large tag values.
- Release 2021.10.12
  * Revert renaming of file parameter in FileSequence.asarray
    (breaking).
  * Deprecate file parameter in FileSequence.asarray.
- Release 2021.10.10
  * Disallow letters as indices in FileSequence; use categories
    (breaking).
  * Do not warn of missing files in FileSequence; use files_missing
    property.
  * Support predictors in ZarrTiffStore.write_fsspec.
  * Add option to specify Zarr group name in write_fsspec.
  * Add option to specify categories for FileSequence patterns
    (#76).
  * Add option to specify chunk shape and dtype for
    ZarrFileSequenceStore.
  * Add option to tile ZarrFileSequenceStore and
    FileSequence.asarray.
  * Add option to pass additional zattrs to Zarr stores.
  * Detect Roche BIF files.
- Release 2021.8.30
  * Fix horizontal differencing with non-native byte order.
  * Fix multi-threaded access of memory-mappable, multi-page Zarr
    stores (#67).
- Release 2021.8.8
  * Fix tag offset and valueoffset for NDPI > 4 GB (#96).
- Release 2021.7.30
  * Deprecate first parameter to TiffTag.overwrite (no longer
    required).
  * TiffTag init API change (breaking).
  * Detect Ventana BIF series and warn that tiles are not stitched.
  * Enable reading PreviewImage from RAW formats (#93, #94).
  * Work around numpy.ndarray.tofile is very slow for
    non-contiguous arrays.
  * Fix issues with PackBits compression (requires imagecodecs
    2021.7.30).
- Release 2021.7.2
  * Decode complex integer images found in SAR GeoTIFF.
  * Support reading NDPI with JPEG-XR compression.
  * Deprecate TiffWriter RGB auto-detection, except for RGB24/48
    and RGBA32/64.
- Release 2021.6.14
  * Set stacklevel for deprecation warnings (#89).
  * Fix svs_description_metadata for SVS with double header (#88,
    breaking).
  * Fix reading JPEG compressed CMYK images.
  * Support ALT_JPEG and JPEG_2000_LOSSY compression found in
    Bio-Formats.
  * Log warning if TiffWriter auto-detects RGB mode (specify
    photometric).
- Release 2021.6.6
  * Fix TIFF.COMPESSOR typo (#85).
  * Round resolution numbers that do not fit in 64-bit rationals
    (#81).
  * Add support for JPEG XL compression.
  * Add Numcodecs compatible TIFF codec.
  * Rename ZarrFileStore to ZarrFileSequenceStore (breaking).
  * Add method to export fsspec ReferenceFileSystem from
    ZarrFileStore.
  * Fix fsspec ReferenceFileSystem v1 for multifile series.
  * Fix creating OME-TIFF with micron character in OME-XML.
- Release 2021.4.8
  * Fix reading OJPEG with wrong photometric or samplesperpixel
    tags (#75).
  * Fix fsspec ReferenceFileSystem v1 and JPEG compression.
  * Use TiffTagRegistry for NDPI_TAGS, EXIF_TAGS, GPS_TAGS,
    IOP_TAGS constants.
  * Make TIFF.GEO_KEYS an Enum (breaking).
- Release 2021.3.31
  * Use JPEG restart markers as tile offsets in NDPI.
  * Support version 1 and more codecs in fsspec ReferenceFileSystem
    (untested).
- Release 2021.3.17
  * Fix regression reading multi-file OME-TIFF with missing files
    (#72).
  * Fix fsspec ReferenceFileSystem with non-native byte order
    (#56).
- Release 2021.3.16
  * TIFF is no longer a defended trademark.
  * Add method to export fsspec ReferenceFileSystem from
    ZarrTiffStore (#56).
- Release 2021.3.5
  * Preliminary support for EER format (#68).
  * Do not warn about unknown compression (#68).
- Release 2021.3.4
  * Fix reading multi-file, multi-series OME-TIFF (#67).
  * Detect ScanImage 2021 files (#46).
  * Shape new version ScanImage series according to metadata
    (breaking).
  * Remove Description key from TiffFile.scanimage_metadata dict
    (breaking).
  * Also return ScanImage version from read_scanimage_metadata
    (breaking).
  * Fix docstrings.
- Release 2021.2.26
  * Squeeze axes of LSM series by default (breaking).
  * Add option to preserve single dimensions when reading from
    series (WIP).
  * Do not allow appending to OME-TIFF files.
  * Fix reading STK files without name attribute in metadata.
  * Make TIFF constants multi-thread safe and pickleable (#64).
  * Add detection of NDTiffStorage MajorVersion to
    read_micromanager_metadata.
  * Support ScanImage v4 files in read_scanimage_metadata.
- Release 2021.2.1
  * Fix multi-threaded access of ZarrTiffStores using same TiffFile
    instance.
  * Use fallback zlib and lzma codecs with imagecodecs lite builds.
  * Open Olympus and Panasonic RAW files for parsing, albeit not
    supported.
  * Support X2 and X4 differencing found in DNG.
  * Support reading JPEG_LOSSY compression found in DNG.

-------------------------------------------------------------------
Mon Feb  8 14:28:00 UTC 2021 - MarkÃ©ta MachovÃ¡ <mmachova@suse.com>

- Skip python36 because of imagecodecs

-------------------------------------------------------------------
Sun Jan 31 12:08:11 UTC 2021 - andy great <andythe_great@pm.me>

- Add missing python_alternative.

-------------------------------------------------------------------
Mon Jan 25 09:05:41 UTC 2021 - andy great <andythe_great@pm.me>

- Update to version 2021.1.14.
  * Try ImageJ series if OME series fails
  * Add option to use pages as chunks in ZarrFileStore (experimental).
  * Fix reading from file objects with no readinto function.
- Updates for version 2021.1.11
  * Fix test errors on PyPy.
  * Fix decoding bitorder with imagecodecs >= 2021.1.11.
- Updates for version 2021.1.8
  * Decode float24 using imagecodecs >= 2021.1.8.
  * Consolidate reading of segments if possible.

-------------------------------------------------------------------
Mon Dec 28 19:54:11 UTC 2020 - andy great <andythe_great@pm.me>

- Add zarr dependency.

-------------------------------------------------------------------
Sat Dec 19 19:26:05 UTC 2020 - andy great <andythe_great@pm.me>

- Update to version 2020.12.8.
    Fix corrupted ImageDescription in multi shaped series if buffer too small.
    Fix libtiff warning that ImageDescription contains null byte in value.
    Fix reading invalid files using JPEG compression with palette colorspace.
- Updates for 2020.12.4
    Fix reading some JPEG compressed CFA images.
    Make index of SubIFDs a tuple.
    Pass through FileSequence.imread arguments in imread.
    Do not apply regex flags to FileSequence axes patterns (breaking).
- Updates for 2020.11.26
    Add option to pass axes metadata to ImageJ writer.
    Pad incomplete tiles passed to TiffWriter.write (#38).
    Split TiffTag constructor (breaking).
    Change TiffTag.dtype to TIFF.DATATYPES (breaking).
    Add TiffTag.overwrite method.
    Add script to change ImageDescription in files.
    Add TiffWriter.overwrite_description method (WIP).
- Updates for 2020.11.18
    Support writing SEPARATED color space (#37).
    Use imagecodecs.deflate codec if available.
    Fix SCN and NDPI series with Z dimensions.
    Add TiffReader alias for TiffFile.
    TiffPage.is_volumetric returns True if ImageDepth > 1.
    Zarr store getitem returns numpy arrays instead of bytes.

-------------------------------------------------------------------
Tue Nov 17 13:48:44 UTC 2020 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Add _constraints file to avoid OOM 

-------------------------------------------------------------------
Mon Nov  2 20:06:00 UTC 2020 - andy great <andythe_great@pm.me>

- Update to version 2020.10.1.
  * Formally deprecate unused TiffFile parameters (scikit-image)
- Disabled test test_write_compression_lerc, python-imagecodecs not
  build with lerc support.

-------------------------------------------------------------------
Fri Sep 18 21:20:20 UTC 2020 - andy great <andythe_great@pm.me>

- Update to version 2020.9.3.
  * Do not write contiguous series by default (breaking).
  * Allow to write to SubIFDs (WIP).
  * Fix writing F-contiguous numpy arrays.
- Ignore test_write_ome, test_class_omexml_attributes, 
  test_class_omexml_multiimage, and test_class_omexml because it 
  need network connection.
  
-------------------------------------------------------------------
Fri Aug 28 08:59:26 UTC 2020 - TomÃ¡Å¡ ChvÃ¡tal <tchvatal@suse.com>

- Enable testsuite

-------------------------------------------------------------------
Fri Aug 28 08:50:58 UTC 2020 - TomÃ¡Å¡ ChvÃ¡tal <tchvatal@suse.com>

- Match up versioning to whats in setup.py

-------------------------------------------------------------------
Sat Aug 22 07:28:47 UTC 2020 - andy great <andythe_great@pm.me>

- Clean up spec file.

-------------------------------------------------------------------
Thu Aug 13 13:51:48 UTC 2020 - andy great <andythe_great@pm.me>

- Fix ERROR: download_files is configured to fail when the 
  upstream file is different than the committed file. 

-------------------------------------------------------------------
Sun Aug  9 05:16:14 UTC 2020 - andy great <andythe_great@pm.me>

- Remove build condition.
- Remove unnecessary dependencies.

-------------------------------------------------------------------
Mon Jul 20 18:22:50 UTC 2020 - andy great <andythe_great@pm.me>

- Fix spec file build condition. 

-------------------------------------------------------------------
Tue Jun  2 20:12:38 UTC 2020 - andy great <andythe_great@pm.me>

- Update to version 2020.5.30.
  * Re-add pure Python PackBits decoder. 

-------------------------------------------------------------------
Mon Mar  4 07:37:11 AM UTC 2019 - John Vandenberg <jayvdb@gmail.com>

- Initial spec for v2019.2.22
