<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>ee271dd46a55e9b8e950d5c69dcb99f0</srcmd5>
    <version>0.11.0</version>
    <time>1504103040</time>
    <user>dimstar_suse</user>
    <comment>Add python-yarl to factory. Required by python-vcrpy sr#519533.</comment>
    <requestid>519535</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>4993d9f187979de5e25abae68667a0b7</srcmd5>
    <version>0.13.0</version>
    <time>1510232445</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>538110</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>3e1c3535ba2bd3bca02aa1125ab5d997</srcmd5>
    <version>0.14.2</version>
    <time>1510912486</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>541982</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>02bf23c2e8628e688793128a87c6d176</srcmd5>
    <version>0.15.0</version>
    <time>1511817511</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>545902</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>72d88758e38007b50065df15cd1b7121</srcmd5>
    <version>0.16.0</version>
    <time>1513245393</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>555884</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>e23fe5f453017aebb631f88887945634</srcmd5>
    <version>0.17.0</version>
    <time>1515342176</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>562155</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>ad0295a05aa3a0b6bd441ed6c04cf72a</srcmd5>
    <version>0.18.0</version>
    <time>1515876504</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>563776</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>08c1b009ece75f5915b64d9dde2e49aa</srcmd5>
    <version>1.1.0</version>
    <time>1518597976</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>575874</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>07d81ca7e8af54040307871fdf3117cf</srcmd5>
    <version>1.1.1</version>
    <time>1519683915</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>579945</requestid>
  </revision>
  <revision rev="10" vrev="2">
    <srcmd5>8a5110cba1028a163fdc8c2c9626f716</srcmd5>
    <version>1.1.1</version>
    <time>1535705108</time>
    <user>dimstar_suse</user>
    <comment>- Raise multidict requirement to match up setup.py</comment>
    <requestid>632112</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>3a29c1ed5ec9d61b9318357ac34882a6</srcmd5>
    <version>1.3.0</version>
    <time>1551687841</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.3.0
 * Fix annotations for query parameter
 * An incoming query sequence can have int variables
 * Add URL.explicit_port property
 * Give a friendlier error when port cant be converted to int
 * bool(URL()) now returns False
 * Fix annotations for build
 * Fix annotations for cached_property
 * Accept str subclasses in URL constructor
 * Forbid inheritance, replace __init__ with __new__
 * Support PEP-561 (provide type hinting marker)</comment>
    <requestid>681093</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>b066ec6f070fda49bbdc6c8317904d09</srcmd5>
    <version>1.4.2</version>
    <time>1580842412</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>769628</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>1e3bfc1ddb8f09faecacaa5cdfc18e81</srcmd5>
    <version>1.5.0</version>
    <time>1596204097</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>823367</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>09723edec6f32b5bc4e2a922bc38a42b</srcmd5>
    <version>1.6.0</version>
    <time>1603961175</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.6.0:
  - Allow for int and float subclasses in query, while still denying bool.
    `#492 &lt;https://github.com/aio-libs/yarl/issues/492&gt;`_
  - Do not requote arguments in ``URL.build()``, ``with_xxx()`` and in ``/`` operator.
    `#502 &lt;https://github.com/aio-libs/yarl/issues/502&gt;`_
  - Keep IPv6 brackets in ``origin()``.
    `#504 &lt;https://github.com/aio-libs/yarl/issues/504&gt;`_</comment>
    <requestid>838272</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>5f47d0b5a44212f75533f100f2fbbcca</srcmd5>
    <version>1.6.3</version>
    <time>1608729528</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.6.3:
  - No longer loose characters when decoding incorrect percent-sequences (like
    ``%e2%82%f8``). All non-decodable percent-sequences are now preserved.
  - Provide generated ``.c`` files in TarBall distribution.
  - ``human_repr()`` now always produces valid representation equivalent to the
    original URL (if the original URL is valid).
  - Fixed  requoting a single percent followed by a percent-encoded character
    in the Cython implementation.
  - Fix ValueError when decoding ``%`` which is not followed by two hexadecimal
    digits.
  - Fix decoding ``%`` followed by a space and hexadecimal digit.
  - Fix annotation of ``with_query()``/``update_query()`` methods for
    ``key=[val1, val2]`` case.</comment>
    <requestid>856968</requestid>
  </revision>
  <revision rev="16" vrev="2">
    <srcmd5>9a4eb20a622c1fd6b2814978d06fda5e</srcmd5>
    <version>1.6.3</version>
    <time>1614692581</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>874658</requestid>
  </revision>
  <revision rev="17" vrev="3">
    <srcmd5>de10b45aa27fe3cf22bf351e95e378d4</srcmd5>
    <version>1.6.3</version>
    <time>1616598625</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>880489</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>f60642b1766a4cfe6c50c19f572beef2</srcmd5>
    <version>1.7.2</version>
    <time>1639075521</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>936387</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>89d3cd13f7bd40eaa2d8087eab628120</srcmd5>
    <version>1.8.1</version>
    <time>1661020054</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>998077</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>cc7066c3edcbe5232c4dbb88ddf64344</srcmd5>
    <version>1.8.2</version>
    <time>1670588202</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1041630</requestid>
  </revision>
  <revision rev="21" vrev="2">
    <srcmd5>07153009a0393fc3db508d802554b263</srcmd5>
    <version>1.8.2</version>
    <time>1673359137</time>
    <user>dimstar_suse</user>
    <comment>- Add patch support-python-311.patch:
  * Skip a test under Python 3.11.</comment>
    <requestid>1056959</requestid>
  </revision>
  <revision rev="22" vrev="3">
    <srcmd5>2987b39fccac8bb736805b9e193401f9</srcmd5>
    <version>1.8.2</version>
    <time>1677878658</time>
    <user>dimstar_suse</user>
    <comment>- Refreshed support-python-311.patch: with fix
  of CVE-2023-24329 (bsc#1208471), the test
  test_url_parsing.TestScheme.test_not_a_scheme2 fails on all
  openSUSE/SLE Python interpreters.</comment>
    <requestid>1068657</requestid>
  </revision>
  <revision rev="23" vrev="4">
    <srcmd5>76561c9d367f47a75058be1847f3e399</srcmd5>
    <version>1.8.2</version>
    <time>1682193483</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1081718</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>eb7f1b78a48936b99dffa05bf867263f</srcmd5>
    <version>1.9.2</version>
    <time>1682618344</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 1.9.2
  Fix regression with truediv and absolute URLs with empty paths
  causing the raw path to lack the leading /. ((#854)_)
- update to version 1.9.1
  * Marked tests that fail on older Python patch releases 
   (&lt; 3.7.10, &lt; 3.8.8 and &lt; 3.9.2) as expected to fail due to missing
    a security fix for CVE-2021-23336. ((#850)_)
- Delete support-python-311.patch, not needed anymore
</comment>
    <requestid>1082898</requestid>
  </revision>
  <revision rev="25" vrev="2">
    <srcmd5>5e34555c73c3b88b72a5c31ec416baf6</srcmd5>
    <version>1.9.2</version>
    <time>1688660866</time>
    <user>favogt_factory</user>
    <comment>- Add 882-sq_bracket_in_URL_netloc.patch fixing handling of
  square bracket handling in URL netloc (gh#aio-libs/yarl#876).
</comment>
    <requestid>1096862</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>3e3bf12249d65207ac600d95938848f0</srcmd5>
    <version>1.9.3</version>
    <time>1701206251</time>
    <user>anag+factory</user>
    <comment>- update to 1.9.3:
  * Stopped dropping trailing slashes in
    :py:meth:`~yarl.URL.joinpath`
  * Started accepting string subclasses in ``__truediv__()``
    operations (``URL / segment``)
  * Fixed the human representation of URLs with square brackets
    in usernames and passwords
  * Updated type hints to include ``URL.missing_port()``,
    ``URL.__bytes__()`` and the ``encoding`` argument to
    :py:meth:`~yarl.URL.joinpath`
  * Integrated Cython 3 to enable building *yarl* under Python
    3.12
  * Declared modern ``setuptools.build_meta`` as the :pep:`517`
    build backend in :file:`pyproject.toml` explicitly
  * Converted most of the packaging setup into a declarative
    :file:`setup.cfg`
  * Declared Python 3.12 supported officially in the distribution
    package metadata
  * A regression test for no-host URLs was added per :issue:`821`
  * and :rfc:`3986`
  * MyST is now integrated in Sphinx
- drop 882-sq_bracket_in_URL_netloc.patch (upstream)

  * Marked tests that fail on older Python patch releases
  * Skip a test under Python 3.11.
- Update to version 1.8.2
- needs typing-extensions
  * Enforce building C Accelerated modules when installing from source tarball,
    use YARL_NO_EXTENSIONS environment variable for falling back to (slower)</comment>
    <requestid>1129244</requestid>
  </revision>
  <revision rev="27" vrev="2">
    <srcmd5>1a94b3caa91e6ccd225d3d32c14d9f7c</srcmd5>
    <version>1.9.3</version>
    <time>1702488850</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1132690</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>9e89cd59b67ae3c0414790ec6b1ebfc1</srcmd5>
    <version>1.9.4</version>
    <time>1705353077</time>
    <user>anag+factory</user>
    <comment>- update to 1.9.4:
  * Started raising :py:exc:`TypeError` when a string value is
    passed into :py:meth:`~yarl.URL.build` as the port argument
    -- by :user:`commonism`. Previously the empty string as port
    would create malformed URLs when rendered as string
    representations.
  * Started raising :py:exc:`TypeError` when a string value is
    passed into :py:meth:`~yarl.URL.build` as the port argument
  * Previously the empty string as port would create malformed
    URLs when rendered as string representations. (:issue:`883`)
  * The leading -- has been dropped from the PEP 517 in-tree
    build backend config setting names. --pure-python is now just
    pure-python -- by :user:`webknjaz`. The usage now looks as
    follows:  $ python -m build \     --config-setting=pure-
    python=true \     --config-setting=with-cython-tracing=true
    (:issue:`963`)
  * The leading -- has been dropped from the PEP 517 in-tree
    build backend config setting names. --pure-python is now just
    pure-python -- by :user:`webknjaz`.
  * It is now possible to request line tracing in Cython builds
    using the with-cython-tracing PEP 517 config setting --
    :user:`webknjaz`. This can be used in CI and development
    environment to measure coverage on Cython modules, but is not
    normally useful to the end-users or downstream packagers.
    Here's a usage example:  $ python -Im pip install . --config-
    settings=with-cython-tracing=true  For editable installs,
    this setting is on by default. Otherwise, it's off unless
    requested explicitly. (:issue:`962`)
- drop reproducible.patch (upstream)</comment>
    <requestid>1138583</requestid>
  </revision>
  <revision rev="29" vrev="2">
    <srcmd5>57c965dde68c02a627d304ddf142d69a</srcmd5>
    <version>1.9.4</version>
    <time>1705526094</time>
    <user>anag+factory</user>
    <comment>- restore reproducible.patch to not add a random tmp path
  (boo#1062303)</comment>
    <requestid>1139325</requestid>
  </revision>
  <revision rev="30" vrev="3">
    <srcmd5>b2e90b083dec5f90f4f47bd9965e3e25</srcmd5>
    <version>1.9.4</version>
    <time>1710364605</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1157158</requestid>
  </revision>
  <revision rev="31" vrev="1">
    <srcmd5>7333a92513b04dd0cd5604eb71b6707e</srcmd5>
    <version>1.12.1</version>
    <time>1727795464</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1203564</requestid>
  </revision>
  <revision rev="32" vrev="1">
    <srcmd5>a59bafc1534c670ca825ccd3df516e32</srcmd5>
    <version>1.14.0</version>
    <time>1728658882</time>
    <user>anag+factory</user>
    <comment>- Update to 1.14.0
  * Switched to using the :mod:`propcache &lt;propcache.api&gt;`
    package for property caching
  * Started testing with Hypothesis
  * Improved performance of :py:meth:`~yarl.URL.is_default_port`
    when no explicit port is set
  * Improved performance of converting :class:`~yarl.URL` to
    a string when no explicit port is set
  * Improved performance of the :py:meth:`~yarl.URL.origin` method
  * Improved performance of encoding hosts
- from version 1.13.1
  * Improved performance of calling :py:meth:`~yarl.URL.build`
    with ``authority``
- from version 1.13.0
  * Started rejecting ASCII hostnames with invalid characters. For
    host strings that look like authority strings, the exception
    message includes advice on what to do instead
  * Fixed IPv6 addresses missing brackets when the :class:`~yarl.URL`
    was converted to a string
  * Added :attr:`~yarl.URL.host_subcomponent` which returns
    the :rfc:`3986#section-3.2.2` host subcomponent
- Update BuildRequires from requirements/test.txt</comment>
    <requestid>1206598</requestid>
  </revision>
</revisionlist>
