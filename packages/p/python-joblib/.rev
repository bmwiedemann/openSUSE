<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>8f93de7bc90b9d97e6da0c136f1467df</srcmd5>
    <version>0.11</version>
    <time>1518596931</time>
    <user>dimstar_suse</user>
    <comment>python joblib</comment>
    <requestid>574766</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>0182aaaf4131d8ce7c693c14c7e6f6bd</srcmd5>
    <version>0.12.1</version>
    <time>1532293458</time>
    <user>dimstar_suse</user>
    <comment>- Enable tests

- specfile:
  * remove devel requirement
- update to version 0.12.1:
  * Make sure that any exception triggered when serializing jobs in
    the queue will be wrapped as a PicklingError as in past versions
    of joblib.
  * Fix kwonlydefaults key error in filter_args (#715)
- changes from version 0.12:
  * Implement the 'loky' backend with @ogrisel. This backend relies on
    a robust implementation of concurrent.futures.ProcessPoolExecutor
    with spawned processes that can be reused accross the Parallel
    calls. This fixes the bad interation with third paty libraries
    relying on thread pools, described in
    https://pythonhosted.org/joblib/parallel.html#bad-interaction-of-multiprocessing-and-third-party-libraries
  * Limit the number of threads used in worker processes by
    C-libraries that relies on threadpools. This functionality works
    for MKL, OpenBLAS, OpenMP and Accelerated.
  * Prevent numpy arrays with the same shape and data from hashing to
    the same memmap, to prevent jobs with preallocated arrays from
    writing over each other.
  * Reduce overhead of automatic memmap by removing the need to hash
    the array.
  * Make Memory.cache robust to PermissionError (errno 13) under
    Windows when run in combination with Parallel.
  * The automatic array memory mapping feature of Parallel does no
    longer use /dev/shm if it is too small (less than 2 GB). In
    particular in docker containers /dev/shm is only 64 MB by default
    which would cause frequent failures when running joblib in Docker</comment>
    <requestid>624255</requestid>
  </revision>
  <revision rev="3" vrev="2">
    <srcmd5>a034de8490d837d3153b7c631aba1af5</srcmd5>
    <version>0.12.1</version>
    <time>1532774651</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>625713</requestid>
  </revision>
  <revision rev="4" vrev="3">
    <srcmd5>50736bc777a2210e4187e602e1dc8ad1</srcmd5>
    <version>0.12.1</version>
    <time>1546535368</time>
    <user>dimstar_suse</user>
    <comment>- Disable blas test as it is very flaky outside of x86_64</comment>
    <requestid>662604</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>8f29ab67e5fda52cdc6a035d745fe538</srcmd5>
    <version>0.13.0</version>
    <time>1546946982</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>663428</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>deae1f5d00ae14a47e06b35f288a4a23</srcmd5>
    <version>0.13.1</version>
    <time>1549017944</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>669904</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>c6857d93de059d3032b74d20e186e0e5</srcmd5>
    <version>0.13.1</version>
    <time>1552207024</time>
    <user>coolo</user>
    <comment></comment>
    <requestid>682599</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>90b5c29be338900836e090072422209f</srcmd5>
    <version>0.13.2</version>
    <time>1553636043</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.13.2:
  * Upgrade to cloudpickle 0.8.0
  * Add a non-regression test related to joblib issues #836 and #833, reporting that cloudpickle versions between 0.5.4 and 0.7 introduced a bug where global variables changes in a parent process between two calls to joblib.Parallel would not be propagated into the workers</comment>
    <requestid>688766</requestid>
  </revision>
  <revision rev="9" vrev="2">
    <srcmd5>ad580dbdd03d4eef08a9ab984aece3c4</srcmd5>
    <version>0.13.2</version>
    <time>1559375797</time>
    <user>dimstar_suse</user>
    <comment>- Switch to %pytest
- Add patch to work well with new numpy:
  * numpy16.patch</comment>
    <requestid>706481</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>626472d4ee46b81b63c10a0c30605a5f</srcmd5>
    <version>0.14.1</version>
    <time>1583447083</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>781870</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>48c23c257482233ac460b9da16edd5d8</srcmd5>
    <version>0.15.1</version>
    <time>1593006473</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.15.1:
  - Make joblib work on Python 3 installation that do not ship with the lzma
    package in their standard library.
  - Drop support for Python 2 and Python 3.5. All objects in
    ``joblib.my_exceptions`` and ``joblib.format_stack`` are now deprecated and
    will be removed in joblib 0.16. Note that no deprecation warning will be
    raised for these objects Python &lt; 3.7.
    https://github.com/joblib/joblib/pull/1018
  - Fix many bugs related to the temporary files and folder generated when
    automatically memory mapping large numpy arrays for efficient inter-process
    communication. In particular, this would cause `PermissionError` exceptions
    to be raised under Windows and large leaked files in `/dev/shm` under Linux
    in case of crash.
    https://github.com/joblib/joblib/pull/966
  - Make the dask backend collect results as soon as they complete
    leading to a performance improvement:
    https://github.com/joblib/joblib/pull/1025
  - Fix the number of jobs reported by ``effective_n_jobs`` when ``n_jobs=None``
    called in a parallel backend context.
    https://github.com/joblib/joblib/pull/985
  - Upgraded vendored cloupickle to 1.4.1 and loky to 2.8.0. This allows for
    Parallel calls of dynamically defined functions with type annotations
    in particular.</comment>
    <requestid>810898</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>1e05c5ac2e1e1f33a978e7faaa390830</srcmd5>
    <version>0.16.0</version>
    <time>1595098935</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.16.0
  - Fix a problem in the constructors of of Parallel backends classes that
    inherit from the `AutoBatchingMixin` that prevented the dask backend to
    properly batch short tasks.
    https://github.com/joblib/joblib/pull/1062
  - Fix a problem in the way the joblib dask backend batches calls that would
    badly interact with the dask callable pickling cache and lead to wrong
    results or errors.
    https://github.com/joblib/joblib/pull/1055
  - Prevent a dask.distributed bug from surfacing in joblib's dask backend
    during nested Parallel calls (due to joblib's auto-scattering feature)
    https://github.com/joblib/joblib/pull/1061
  - Workaround for a race condition after Parallel calls with the dask backend
    that would cause low level warnings from asyncio coroutines:
    https://github.com/joblib/joblib/pull/1078</comment>
    <requestid>821624</requestid>
  </revision>
  <revision rev="13" vrev="2">
    <srcmd5>fc2d308f810967e0949793b328429334</srcmd5>
    <version>0.16.0</version>
    <time>1598030098</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>828437</requestid>
  </revision>
  <revision rev="14" vrev="3">
    <srcmd5>dbd13b4317b5597775c7c5b77e43db93</srcmd5>
    <version>0.16.0</version>
    <time>1599770807</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>832923</requestid>
  </revision>
  <revision rev="15" vrev="4">
    <srcmd5>a1879213e92425eefb9d6a12ddb8e0f5</srcmd5>
    <version>0.16.0</version>
    <time>1603645746</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>839590</requestid>
  </revision>
  <revision rev="16" vrev="5">
    <srcmd5>741869385b4927735b0c1ddc2fbfaa16</srcmd5>
    <version>0.16.0</version>
    <time>1604306374</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>845029</requestid>
  </revision>
  <revision rev="17" vrev="6">
    <srcmd5>dc27e561ac5ed6ab631650a2d03de13a</srcmd5>
    <version>0.16.0</version>
    <time>1607801335</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>853473</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>1e45c3e07224bb30b5e479515c5b780f</srcmd5>
    <version>1.0.1</version>
    <time>1613511282</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>872840</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>35406aa7c0b15d71af7694a2b5b100e4</srcmd5>
    <version>1.1.0</version>
    <time>1635628382</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>927139</requestid>
  </revision>
  <revision rev="20" vrev="2">
    <srcmd5>d9db5e76b2f7a8cf54791e1510067219</srcmd5>
    <version>1.1.0</version>
    <time>1658510421</time>
    <user>RBrownFactory</user>
    <comment>- Add patch support-setuptools-62.patch:
  * Support setuptools &gt;= 62 by handling more than one warning in a test
    case.</comment>
    <requestid>990387</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>be6339dfc48f999b0f4a5b101897b3aa</srcmd5>
    <version>1.2.0</version>
    <time>1665591757</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.2.0 (CVE-2022-21797, bsc#1204232)
  * Fix a security issue where eval(pre_dispatch) could potentially
    run arbitrary code. Now only basic numerics are supported.
    #1327
  * Make sure that joblib works even when multiprocessing is not
    available, for instance with Pyodide #1256
  * Avoid unnecessary warnings when workers and main process delete
    the temporary memmap folder contents concurrently. #1263
  * Vendor loky 3.1.0 with several fixes to more robustly forcibly
    terminate worker processes in case of a crash. #1269
  * Fix memory alignment bug for pickles containing numpy arrays.
    This is especially important when loading the pickle with
    mmap_mode != None as the resulting numpy.memmap object would
    not be able to correct the misalignment without performing a
    memory copy. This bug would cause invalid computation and
    segmentation faults with native code that would directly access
    the underlying data buffer of a numpy array, for instance
    C/C++/Cython code compiled with older GCC versions or some old
    OpenBLAS written in platform specific assembly. #1254
  * Vendor cloudpickle 2.2.0 which adds support for PyPy 3.8+.
  * Vendor loky 3.3.0 which fixes a bug with leaking processes in
    case of nested loky parallel calls and more reliability spawn
    the correct number of reusable workers.
- Drop support-setuptools-62.patch</comment>
    <requestid>1010179</requestid>
  </revision>
  <revision rev="22" vrev="2">
    <srcmd5>d360d334d410800ea9a411267584ba72</srcmd5>
    <version>1.2.0</version>
    <time>1686576286</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1092252</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>b73fa80c76ffa687a0925ea31ad8d010</srcmd5>
    <version>1.3.2</version>
    <time>1701121344</time>
    <user>anag+factory</user>
    <comment>- update to 1.3.2:
  * FIX treat n_jobs=None as if left to its default value
  * FIX Init logger parent class in Parallel
  * MNT remove unnecessary .bck file
  * MTN adjust test regex for Python 3.12 improved error message
  * DOC add public documentation for parallel_backend
  * FIX flake8 new E721: type comparison
  * Ensure native byte order for memmap.
  * Drop runtime dependency on `distutils`
  * Add environment variable to change default parallel backend
  * Fix memmapping_reducer when 'os' has no attribute 'statvfs'
  * Move the metadata into `pyproject.toml`
  * TST Close client in test_pickle_in_socket
  * Do not swallow PicklingError
  * FIX Avoid collisions when caching nested functions
  * FIX heisenfailure in doc/memory.rst
  * MAINT Explicit support for Python 3.11
  * MNT Use faulthandler rather than custom autokill logic
  * BENCH add benchmark script for n_jobs=1
  * TST Fix test_nested_parallel_warnings_parent_backend for
    Python nogil
  * TST Fix test_memmapping for Python nogil
  * MAINT Clean deprecations
  * ENH make temp resource cleanup safer
  * MAINT Simplify warning in `_persist_input`
  * MNT Use full flake8 rather than flake8_diff.sh
  * Update Dask backend
  * FIX upload to codecov
  * MTN vendor loky 3.4.0
  * MTN skip thread_bomb mitigation test on PyPy for now</comment>
    <requestid>1128799</requestid>
  </revision>
  <revision rev="24" vrev="2">
    <srcmd5>d7176974df0deb88feb238d1a45c23dd</srcmd5>
    <version>1.3.2</version>
    <time>1701206337</time>
    <user>anag+factory</user>
    <comment>- Add patch avoid-deprecated-ast.patch:
  * Avoid deprecated ast classes.
- Add patch also-filter-new-fork-warning.patch:
  * Filter DeprecationWarning due to calling fork() with multiprocessing.
- Switch to pyproject macros.</comment>
    <requestid>1129277</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>9b5ac214ab6e856871c01785c2217b0c</srcmd5>
    <version>1.4.0</version>
    <time>1713891296</time>
    <user>anag+factory</user>
    <comment>- update to 1.4.0:
  * Allow caching co-routines with Memory.cache.
  * Try to cast n_jobs to int in parallel and raise an error if
    it fails. This means that n_jobs=2.3 will now result in
    effective_n_jobs=2 instead of failing.
  * Ensure that errors in the task generator given to Parallel's
    call are raised in the results consumming thread.
  * Adjust codebase to NumPy 2.0 by changing np.NaN to np.nan and
    importing byte_bounds from np.lib.array_utils.
  * The parameter return_as in joblib.Parallel can now be set to
    generator_unordered. In this case the results will be
    returned in the order of task completion rather than the
    order of submission.
  * dask backend now supports return_as=generator and
    return_as=generator_unordered.
  * Vendor cloudpickle 3.0.0 and end support for Python 3.7 which
    has reached end of life.
- drop avoid-deprecated-ast.patch (upstream)</comment>
    <requestid>1169420</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>12b5cb16e4cf57866992416b4ceb30b6</srcmd5>
    <version>1.4.2</version>
    <time>1715444328</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.4.2:
  * Due to maintenance issues, 1.4.1 was not valid and we bumped
    the version to 1.4.2
  * Fix a backward incompatible change in MemorizedFunc.call
    which needs to return the metadata. Also make sure that
    NotMemorizedFunc.call return an empty dict for metadata for
    consistency. https://github.com/joblib/joblib/pull/1576</comment>
    <requestid>1172881</requestid>
  </revision>
</revisionlist>
