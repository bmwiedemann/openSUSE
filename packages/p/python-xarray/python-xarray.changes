-------------------------------------------------------------------
Fri Mar  4 18:00:26 UTC 2022 - Sebastian Wagner <sebix+novell.com@sebix.at>

- - update to version 2022.03.0:
 - This release brings a number of small improvements, as well as a move to `calendar versioning <https://calver.org/>`_ (:issue:`6176`).:
 - Many thanks to the 16 contributors to the v2022.02.0 release!:
 - Aaron Spring, Alan D. Snow, Anderson Banihirwe, crusaderky, Illviljan, Joe Hamman, Jonas Gliß,:
 - Lukas Pilz, Martin Bergemann, Mathias Hauser, Maximilian Roos, Romain Caneill, Stan West, Stijn Van Hoey,:
 - Tobias Kölling, and Tom Nicholas.:
 - New Features:
  - Enabled multiplying tick offsets by floats. Allows ``float`` ``n`` in
    :py:meth:`CFTimeIndex.shift` if ``shift_freq`` is between ``Day``
    and ``Microsecond``. (:issue:`6134`, :pull:`6135`).
    By `Aaron Spring <https://github.com/aaronspring>`_.
  - Enbable to provide more keyword arguments to `pydap` backend when reading
    OpenDAP datasets (:issue:`6274`).
    By `Jonas Gliß <https://github.com/jgliss>`.
  - Allow :py:meth:`DataArray.drop_duplicates` to drop duplicates along multiple dimensions at once,
    and add :py:meth:`Dataset.drop_duplicates`. (:pull:`6307`)
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
 - Breaking changes:
  - Renamed the ``interpolation`` keyword of all ``quantile`` methods (e.g. :py:meth:`DataArray.quantile`)
    to ``method`` for consistency with numpy v1.22.0 (:pull:`6108`).
    By `Mathias Hauser <https://github.com/mathause>`_.
 - Deprecations:
 - Bug fixes:
  - Variables which are chunked using dask in larger (but aligned) chunks than the target zarr chunk size
    can now be stored using `to_zarr()` (:pull:`6258`) By `Tobias Kölling <https://github.com/d70-t>`_.
  - Multi-file datasets containing encoded :py:class:`cftime.datetime` objects can be read in parallel again (:issue:`6226`, :pull:`6249`, :pull:`6305`).  By `Martin Bergemann <https://github.com/antarcticrainforest>`_ and `Stan West <https://github.com/stanwest>`_.
 - Documentation:
  - Delete files of datasets saved to disk while building the documentation and enable
    building on Windows via `sphinx-build` (:pull:`6237`).
    By `Stan West <https://github.com/stanwest>`_.
 - Internal Changes:
- update to version 0.21.1:
 - This is a bugfix release to resolve (:issue:`6216`, :pull:`6207`).:
 - Bug fixes:
  - Add `packaging` as a dependency to Xarray (:issue:`6216`, :pull:`6207`).
    By `Sebastian Weigand <https://github.com/s-weigand>`_ and `Joe Hamman <https://github.com/jhamman>`_.

-------------------------------------------------------------------
Wed Feb  2 19:56:06 UTC 2022 - Sebastian Wagner <sebix+novell.com@sebix.at>

- - update to version 0.21.1:
 - This is a bugfix release to resolve (:issue:`6216`, :pull:`6207`).:
 - Bug fixes:
  - Add `packaging` as a dependency to Xarray (:issue:`6216`, :pull:`6207`).
    By `Sebastian Weigand <https://github.com/s-weigand>`_ and `Joe Hamman <https://github.com/jhamman>`_.

-------------------------------------------------------------------
Sat Jan 29 09:23:51 UTC 2022 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.21.0:
 - Many thanks to the 20 contributors to the v0.21.0 release!:
 - Abel Aoun, Anderson Banihirwe, Ant Gib, Chris Roat, Cindy Chiao,:
 - Deepak Cherian, Dominik Stańczak, Fabian Hofmann, Illviljan, Jody Klymak, Joseph:
 - K Aicher, Mark Harfouche, Mathias Hauser, Matthew Roeschke, Maximilian Roos,:
 - Michael Delgado, Pascal Bourgault, Pierre, Ray Bell, Romain Caneill, Tim Heap,:
 - Tom Nicholas, Zeb Nicholls, joseph nowak, keewis.:
 - New Features:
  - New top-level function :py:func:`cross`. (:issue:`3279`, :pull:`5365`).
    By `Jimmy Westling <https://github.com/illviljan>`_.
  - ``keep_attrs`` support for :py:func:`where` (:issue:`4141`, :issue:`4682`, :pull:`4687`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Enable the limit option for dask array in the following methods :py:meth:`DataArray.ffill`, :py:meth:`DataArray.bfill`, :py:meth:`Dataset.ffill` and :py:meth:`Dataset.bfill` (:issue:`6112`)
    By `Joseph Nowak <https://github.com/josephnowak>`_.
 - Breaking changes:
  - Rely on matplotlib's default datetime converters instead of pandas' (:issue:`6102`, :pull:`6109`).
    By `Jimmy Westling <https://github.com/illviljan>`_.
  - Improve repr readability when there are a large number of dimensions in datasets or dataarrays by
    wrapping the text once the maximum display width has been exceeded. (:issue:`5546`, :pull:`5662`)
    By `Jimmy Westling <https://github.com/illviljan>`_.
 - Deprecations:
  - Removed the lock kwarg from the zarr and pydap backends, completing the deprecation cycle started in :issue:`5256`.
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
  - Support for ``python 3.7`` has been dropped. (:pull:`5892`)
    By `Jimmy Westling <https://github.com/illviljan>`_.
 - Bug fixes:
  - Preserve chunks when creating a :py:class:`DataArray` from another :py:class:`DataArray`
    (:pull:`5984`). By `Fabian Hofmann <https://github.com/FabianHofmann>`_.
  - Properly support :py:meth:`DataArray.ffill`, :py:meth:`DataArray.bfill`, :py:meth:`Dataset.ffill` and :py:meth:`Dataset.bfill` along chunked dimensions (:issue:`6112`).
    By `Joseph Nowak <https://github.com/josephnowak>`_.
  - Subclasses of ``byte`` and ``str`` (e.g. ``np.str_`` and ``np.bytes_``) will now serialise to disk rather than raising a ``ValueError: unsupported dtype for netCDF4 variable: object`` as they did previously (:pull:`5264`).
    By `Zeb Nicholls <https://github.com/znicholls>`_.
  - Fix applying function with non-xarray arguments using :py:func:`xr.map_blocks`.
    By `Cindy Chiao <https://github.com/tcchiao>`_.
  - No longer raise an error for an all-nan-but-one argument to
    :py:meth:`DataArray.interpolate_na` when using `method='nearest'` (:issue:`5994`, :pull:`6144`).
    By `Michael Delgado <https://github.com/delgadom>`_.
  - `dt.season <https://xarray.pydata.org/en/stable/generated/xarray.DataArray.dt.season.html>`_  can now handle NaN and NaT.  (:pull:`5876`).
    By `Pierre Loicq <https://github.com/pierreloicq>`_.
  - Determination of zarr chunks handles empty lists for encoding chunks or variable chunks that occurs in certain cirumstances (:pull:`5526`). By `Chris Roat <https://github.com/chrisroat>`_.
 - Internal Changes:
  - Replace ``distutils.version`` with ``packaging.version``  (:issue:`6092`).
    By `Mathias Hauser <https://github.com/mathause>`_.
  - Removed internal checks for ``pd.Panel`` (:issue:`6145`).
    By `Matthew Roeschke <https://github.com/mroeschke>`_.
  - Add ``pyupgrade`` pre-commit hook (:pull:`6152`).
    By `Maximilian Roos <https://github.com/max-sixty>`_.

-------------------------------------------------------------------
Mon Jan 24 16:28:40 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Don't test with dask and distributed in python310: not supported
  yet

-------------------------------------------------------------------
Fri Dec 10 08:01:01 UTC 2021 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.20.2:
 - This is a bugfix release to resolve (:issue:`3391`, :issue:`5715`). It also:
 - includes performance improvements in unstacking to a ``sparse`` array and a:
 - number of documentation improvements.:
 - Many thanks to the 20 contributors:
 - Aaron Spring, Alexandre Poux, Deepak Cherian, Enrico Minack, Fabien Maussion,:
 - Giacomo Caria, Gijom, Guillaume Maze, Illviljan, Joe Hamman, Joseph Hardin, Kai:
 - Mühlbauer, Matt Henderson, Maximilian Roos, Michael Delgado, Robert Gieseke,:
 - Sebastian Weigand and Stephan Hoyer.:
 - Breaking changes:
  - Use complex nan when interpolating complex values out of bounds by default (instead of real nan) (:pull:`6019`).
    By `Alexandre Poux <https://github.com/pums974>`_.
 - Performance:
  - Significantly faster unstacking to a ``sparse`` array. :pull:`5577`
    By `Deepak Cherian <https://github.com/dcherian>`_.
 - Bug fixes:
  - :py:func:`xr.map_blocks` and :py:func:`xr.corr` now work when dask is not installed (:issue:`3391`, :issue:`5715`, :pull:`5731`).
    By `Gijom <https://github.com/Gijom>`_.
  - Fix plot.line crash for data of shape ``(1, N)`` in _title_for_slice on format_item (:pull:`5948`).
    By `Sebastian Weigand <https://github.com/s-weigand>`_.
  - Fix a regression in the removal of duplicate backend entrypoints (:issue:`5944`, :pull:`5959`)
    By `Kai Mühlbauer <https://github.com/kmuehlbauer>`_.
 - Documentation:
  - Better examples in docstrings for groupby and resampling reductions (:pull:`5871`).
    By `Deepak Cherian <https://github.com/dcherian>`_,
    `Maximilian Roos <https://github.com/max-sixty>`_,
    `Jimmy Westling <https://github.com/illviljan>`_ .
 - Internal Changes:
  - Use ``importlib`` to replace functionality of ``pkg_resources`` in
    backend plugins tests. (:pull:`5959`).
    By `Kai Mühlbauer <https://github.com/kmuehlbauer>`_.

-------------------------------------------------------------------
Mon Nov 15 14:46:40 UTC 2021 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.20.1:
 - This is a bugfix release to fix :issue:`5930`.:
 - Bug fixes:
  - Fix a regression in the detection of the backend entrypoints (:issue:`5930`, :pull:`5931`)
    By `Justus Magin <https://github.com/keewis>`_.
 - Documentation:
  - Significant improvements to  :ref:`api`. By `Deepak Cherian <https://github.com/dcherian>`_.

-------------------------------------------------------------------
Tue Nov  2 19:44:34 UTC 2021 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.20.0:
 - This release brings improved support for pint arrays, methods for weighted standard deviation, variance,:
 - and sum of squares, the option to disable the use of the bottleneck library, significantly improved performance of:
 - unstack, as well as many bugfixes and internal changes.:
 - Many thanks to the 38 contributors to this release!:
 - Aaron Spring, Akio Taniguchi, Alan D. Snow, arfy slowy, Benoit Bovy, Christian Jauvin, crusaderky, Deepak Cherian,:
 - Giacomo Caria, Illviljan, James Bourbeau, Joe Hamman, Joseph K Aicher, Julien Herzen, Kai Mühlbauer,:
 - keewis, lusewell, Martin K. Scherer, Mathias Hauser, Max Grover, Maxime Liquet, Maximilian Roos, Mike Taves, pmav99,:
 - Pushkar Kopparla, Ray Bell, Rio McMahon, Scott Staniewicz, Spencer Clark, Stefan Bender, Taher Chegini, Thomas Nicholas,:
 - Tomas Chor, Tom Augspurger, Victor Negîrneac, Zachary Moon, and Zeb Nicholls.:
 - New Features:
  - Add ``std``, ``var``,  ``sum_of_squares`` to :py:class:`~core.weighted.DatasetWeighted` and :py:class:`~core.weighted.DataArrayWeighted`.
    By `Christian Jauvin <https://github.com/cjauvin>`_.
  - Added a :py:func:`get_options` method to xarray's root namespace (:issue:`5698`, :pull:`5716`)
    By `Pushkar Kopparla <https://github.com/pkopparla>`_.
  - Xarray now does a better job rendering variable names that are long LaTeX sequences when plotting (:issue:`5681`, :pull:`5682`).
    By `Tomas Chor <https://github.com/tomchor>`_.
  - Add an option (``"use_bottleneck"``) to disable the use of ``bottleneck`` using :py:func:`set_options` (:pull:`5560`)
    By `Justus Magin <https://github.com/keewis>`_.
  - Added ``**kwargs`` argument to :py:meth:`open_rasterio` to access overviews (:issue:`3269`).
    By `Pushkar Kopparla <https://github.com/pkopparla>`_.
  - Added ``storage_options`` argument to :py:meth:`to_zarr` (:issue:`5601`).
    By `Ray Bell <https://github.com/raybellwaves>`_, `Zachary Blackwood <https://github.com/blackary>`_ and
    `Nathan Lis <https://github.com/wxman22>`_.
  - Histogram plots are set with a title displaying the scalar coords if any, similarly to the other plots (:issue:`5791`, :pull:`5792`).
    By `Maxime Liquet <https://github.com/maximlt>`_.
  - Slice plots display the coords units in the same way as x/y/colorbar labels (:pull:`5847`).
    By `Victor Negîrneac <https://github.com/caenrigen>`_.
  - Added a new :py:attr:`Dataset.chunksizes`, :py:attr:`DataArray.chunksizes`, and :py:attr:`Variable.chunksizes`
    property, which will always return a mapping from dimension names to chunking pattern along that dimension,
    regardless of whether the object is a Dataset, DataArray, or Variable. (:issue:`5846`, :pull:`5900`)
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
 - Breaking changes:
  - The minimum versions of some dependencies were changed:
    =============== ====== ====
    Package         Old    New
    =============== ====== ====
    cftime          1.1    1.2
    dask            2.15   2.30
    distributed     2.15   2.30
    lxml            4.5    4.6
    matplotlib-base 3.2    3.3
    numba           0.49   0.51
    numpy           1.17   1.18
    pandas          1.0    1.1
    pint            0.15   0.16
    scipy           1.4    1.5
    seaborn         0.10   0.11
    sparse          0.8    0.11
    toolz           0.10   0.11
    zarr            2.4    2.5
    =============== ====== ====
  - The ``__repr__`` of a :py:class:`xarray.Dataset`'s ``coords`` and ``data_vars``
    ignore ``xarray.set_option(display_max_rows=...)`` and show the full output
    when called directly as, e.g., ``ds.data_vars`` or ``print(ds.data_vars)``
    (:issue:`5545`, :pull:`5580`).
    By `Stefan Bender <https://github.com/st-bender>`_.
 - Deprecations:
  - Deprecate :py:func:`open_rasterio` (:issue:`4697`, :pull:`5808`).
    By `Alan Snow <https://github.com/snowman2>`_.
  - Set the default argument for `roll_coords` to `False` for :py:meth:`DataArray.roll`
    and :py:meth:`Dataset.roll`. (:pull:`5653`)
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
  - :py:meth:`xarray.open_mfdataset` will now error instead of warn when a value for ``concat_dim`` is
    passed alongside ``combine='by_coords'``.
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
 - Bug fixes:
  - Fix ZeroDivisionError from saving dask array with empty dimension (:issue: `5741`).
    By `Joseph K Aicher <https://github.com/jaicher>`_.
  - Fixed performance bug where ``cftime`` import attempted within various core operations if ``cftime`` not
    installed (:pull:`5640`).
    By `Luke Sewell <https://github.com/lusewell>`_
  - Fixed bug when combining named DataArrays using :py:func:`combine_by_coords`. (:pull:`5834`).
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
  - When a custom engine was used in :py:func:`~xarray.open_dataset` the engine
    wasn't initialized properly, causing missing argument errors or inconsistent
    method signatures. (:pull:`5684`)
    By `Jimmy Westling <https://github.com/illviljan>`_.
  - Numbers are properly formatted in a plot's title (:issue:`5788`, :pull:`5789`).
    By `Maxime Liquet <https://github.com/maximlt>`_.
  - Faceted plots will no longer raise a `pint.UnitStrippedWarning` when a `pint.Quantity` array is plotted,
    and will correctly display the units of the data in the colorbar (if there is one) (:pull:`5886`).
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
  - With backends, check for path-like objects rather than ``pathlib.Path``
    type, use ``os.fspath`` (:pull:`5879`).
    By `Mike Taves <https://github.com/mwtoews>`_.
  - ``open_mfdataset()`` now accepts a single ``pathlib.Path`` object (:issue: `5881`).
    By `Panos Mavrogiorgos <https://github.com/pmav99>`_.
  - Improved performance of :py:meth:`Dataset.unstack` (:pull:`5906`). By `Tom Augspurger <https://github.com/TomAugspurger>`_.
 - Documentation:
  - Users are instructed to try ``use_cftime=True`` if a ``TypeError`` occurs when combining datasets and one of the types involved is a subclass of ``cftime.datetime`` (:pull:`5776`).
    By `Zeb Nicholls <https://github.com/znicholls>`_.
  - A clearer error is now raised if a user attempts to assign a Dataset to a single key of
    another Dataset. (:pull:`5839`)
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
 - Internal Changes:
  - Explicit indexes refactor: avoid ``len(index)`` in ``map_blocks`` (:pull:`5670`).
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - Explicit indexes refactor: decouple ``xarray.Index``` from ``xarray.Variable`` (:pull:`5636`).
    By `Benoit Bovy <https://github.com/benbovy>`_.
  - Fix ``Mapping`` argument typing to allow mypy to pass on ``str`` keys (:pull:`5690`).
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - Annotate many of our tests, and fix some of the resulting typing errors. This will
    also mean our typing annotations are tested as part of CI. (:pull:`5728`).
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - Improve the performance of reprs for large datasets or dataarrays. (:pull:`5661`)
    By `Jimmy Westling <https://github.com/illviljan>`_.
  - Use isort's `float_to_top` config. (:pull:`5695`).
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - Remove use of the deprecated ``kind`` argument in
    :py:meth:`pandas.Index.get_slice_bound` inside :py:class:`xarray.CFTimeIndex`
    tests (:pull:`5723`).  By `Spencer Clark <https://github.com/spencerkclark>`_.
  - Refactor `xarray.core.duck_array_ops` to no longer special-case dispatching to
    dask versions of functions when acting on dask arrays, instead relying numpy
    and dask's adherence to NEP-18 to dispatch automatically. (:pull:`5571`)
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
  - Add an ASV benchmark CI and improve performance of the benchmarks (:pull:`5796`)
    By `Jimmy Westling <https://github.com/illviljan>`_.
  - Use ``importlib`` to replace functionality of ``pkg_resources`` such
    as version setting and loading of resources. (:pull:`5845`).
    By `Martin K. Scherer <https://github.com/marscher>`_.

-------------------------------------------------------------------
Tue Sep 21 10:38:39 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Tests require dask[diagnostics] extra now (for Jinja2)

-------------------------------------------------------------------
Tue Jul 27 11:01:52 UTC 2021 - Sebastian Wagner <sebix+novell.com@sebix.at>

- remove xarray-pr5449-dask-meta.patch, merged upstream.
- remove test_resample_loffset.patch, merged upstream.
- update to version 0.19.0:
 - This release brings improvements to plotting of categorical data, the ability to specify how attributes:
 - are combined in xarray operations, a new high-level :py:func:`unify_chunks` function, as well as various:
 - deprecations, bug fixes, and minor improvements.:
 - Many thanks to the 29 contributors to this release!:
 - Andrew Williams, Augustus, Aureliana Barghini, Benoit Bovy, crusaderky, Deepak Cherian, ellesmith88,:
 - Elliott Sales de Andrade, Giacomo Caria, github-actions[bot], Illviljan, Joeperdefloep, joooeey, Julia Kent,:
 - Julius Busecke, keewis, Mathias Hauser, Matthias Göbel, Mattia Almansi, Maximilian Roos, Peter Andreas Entschev,:
 - Ray Bell, Sander, Santiago Soler, Sebastian, Spencer Clark, Stephan Hoyer, Thomas Hirtz, Thomas Nicholas.:
 - New Features:
  - Allow passing argument ``missing_dims`` to :py:meth:`Variable.transpose` and :py:meth:`Dataset.transpose`
    (:issue:`5550`, :pull:`5586`)
    By `Giacomo Caria <https://github.com/gcaria>`_.
  - Allow passing a dictionary as coords to a :py:class:`DataArray` (:issue:`5527`,
    reverts :pull:`1539`, which had deprecated this due to python's inconsistent ordering in earlier versions).
    By `Sander van Rijn <https://github.com/sjvrijn>`_.
  - Added :py:meth:`Dataset.coarsen.construct`, :py:meth:`DataArray.coarsen.construct` (:issue:`5454`, :pull:`5475`).
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - Xarray now uses consolidated metadata by default when writing and reading Zarr
    stores (:issue:`5251`).
    By `Stephan Hoyer <https://github.com/shoyer>`_.
  - New top-level function :py:func:`unify_chunks`.
    By `Mattia Almansi <https://github.com/malmans2>`_.
  - Allow assigning values to a subset of a dataset using positional or label-based
    indexing (:issue:`3015`, :pull:`5362`).
    By `Matthias Göbel <https://github.com/matzegoebel>`_.
  - Attempting to reduce a weighted object over missing dimensions now raises an error (:pull:`5362`).
    By `Mattia Almansi <https://github.com/malmans2>`_.
  - Add ``.sum`` to :py:meth:`~xarray.DataArray.rolling_exp` and
    :py:meth:`~xarray.Dataset.rolling_exp` for exponentially weighted rolling
    sums. These require numbagg 0.2.1;
    (:pull:`5178`).
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - :py:func:`xarray.cov` and :py:func:`xarray.corr` now lazily check for missing
    values if inputs are dask arrays (:issue:`4804`, :pull:`5284`).
    By `Andrew Williams <https://github.com/AndrewWilliams3142>`_.
  - Attempting to ``concat`` list of elements that are not all ``Dataset`` or all ``DataArray`` now raises an error (:issue:`5051`, :pull:`5425`).
    By `Thomas Hirtz <https://github.com/thomashirtz>`_.
  - allow passing a function to ``combine_attrs`` (:pull:`4896`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Allow plotting categorical data (:pull:`5464`).
    By `Jimmy Westling <https://github.com/illviljan>`_.
  - Allow removal of the coordinate attribute ``coordinates`` on variables by setting ``.attrs['coordinates']= None``
    (:issue:`5510`).
    By `Elle Smith <https://github.com/ellesmith88>`_.
  - Added :py:meth:`DataArray.to_numpy`, :py:meth:`DataArray.as_numpy`, and :py:meth:`Dataset.as_numpy`. (:pull:`5568`).
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
  - Units in plot labels are now automatically inferred from wrapped :py:meth:`pint.Quantity` arrays. (:pull:`5561`).
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
 - Breaking changes:
  - The default ``mode`` for :py:meth:`Dataset.to_zarr` when ``region`` is set
    has changed to the new ``mode="r+"``, which only allows for overriding
    pre-existing array values. This is a safer default than the prior ``mode="a"``,
    and allows for higher performance writes (:pull:`5252`).
    By `Stephan Hoyer <https://github.com/shoyer>`_.
  - The main parameter to :py:func:`combine_by_coords` is renamed to `data_objects` instead
    of `datasets` so anyone calling this method using a named parameter will need to update
    the name accordingly (:issue:`3248`, :pull:`4696`).
    By `Augustus Ijams <https://github.com/aijams>`_.
 - Deprecations:
  - Removed the deprecated ``dim`` kwarg to :py:func:`DataArray.integrate` (:pull:`5630`)
  - Removed the deprecated ``keep_attrs`` kwarg to :py:func:`DataArray.rolling` (:pull:`5630`)
  - Removed the deprecated ``keep_attrs`` kwarg to :py:func:`DataArray.coarsen` (:pull:`5630`)
  - Completed deprecation of passing an ``xarray.DataArray`` to :py:func:`Variable` - will now raise a ``TypeError`` (:pull:`5630`)
 - Bug fixes:
  - Fix a minor incompatibility between partial datetime string indexing with a
    :py:class:`CFTimeIndex` and upcoming pandas version 1.3.0 (:issue:`5356`,
    :pull:`5359`).
    By `Spencer Clark <https://github.com/spencerkclark>`_.
  - Fix 1-level multi-index incorrectly converted to single index (:issue:`5384`,
    :pull:`5385`).
    By `Benoit Bovy <https://github.com/benbovy>`_.
  - Don't cast a duck array in a coordinate to :py:class:`numpy.ndarray` in
    :py:meth:`DataArray.differentiate` (:pull:`5408`)
    By `Justus Magin <https://github.com/keewis>`_.
  - Fix the ``repr`` of :py:class:`Variable` objects with ``display_expand_data=True``
    (:pull:`5406`)
    By `Justus Magin <https://github.com/keewis>`_.
  - Plotting a pcolormesh with ``xscale="log"`` and/or ``yscale="log"`` works as
    expected after improving the way the interval breaks are generated (:issue:`5333`).
    By `Santiago Soler <https://github.com/santisoler>`_
  - :py:func:`combine_by_coords` can now handle combining a list of unnamed
    ``DataArray`` as input (:issue:`3248`, :pull:`4696`).
    By `Augustus Ijams <https://github.com/aijams>`_.
 - Internal Changes:
  - Run CI on the first & last python versions supported only; currently 3.7 & 3.9.
    (:pull:`5433`)
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - Publish test results & timings on each PR.
    (:pull:`5537`)
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - Explicit indexes refactor: add a ``xarray.Index.query()`` method in which
    one may eventually provide a custom implementation of label-based data
    selection (not ready yet for public use). Also refactor the internal,
    pandas-specific implementation into ``PandasIndex.query()`` and
    ``PandasMultiIndex.query()`` (:pull:`5322`).
    By `Benoit Bovy <https://github.com/benbovy>`_.

-------------------------------------------------------------------
Fri Jul 16 16:01:56 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Add xarray-pr5449-dask-meta.patch in order to support updated
  dask -- gh#pydata/xarray#5449

-------------------------------------------------------------------
Tue May 25 17:25:46 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Add local_dataset.patch allowing the use of the cached datasets
  (gh#pydata/xarray#5377).
- Add scipy-interpolate.patch adding a missing import
  scipy.interpolate to test_interp.py (gh#pydata/xarray#5375).
- Add test_resample_loffset.patch to fix test_resample_loffset
  test (gh#pydata/xarray#5364).

-------------------------------------------------------------------
Thu May 20 11:58:50 UTC 2021 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.18.2:
 - This release reverts a regression in xarray's unstacking of dask-backed arrays.:
- remove fix_test_resample_loffset.patch, doesn't work

-------------------------------------------------------------------
Wed May 19 13:53:54 UTC 2021 - Sebastian Wagner <sebix+novell.com@sebix.at>

- add fix_test_resample_loffset.patch to fix test fail on i586
  https://github.com/pydata/xarray/issues/5341

-------------------------------------------------------------------
Wed May 19 07:26:03 UTC 2021 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.18.1:
 - This release is intended as a small patch release to be compatible with the new:
2021.5.0 ``dask.distributed`` release. It also includes a new
``drop_duplicates`` method, some documentation improvements, the beginnings of
 - our internal Index refactoring, and some bug fixes.:
 - Thank you to all 16 contributors!:
 - Anderson Banihirwe, Andrew, Benoit Bovy, Brewster Malevich, Giacomo Caria,:
 - Illviljan, James Bourbeau, Keewis, Maximilian Roos, Ravin Kumar, Stephan Hoyer,:
 - Thomas Nicholas, Tom Nicholas, Zachary Moon.:
 - New Features:
  - Implement :py:meth:`DataArray.drop_duplicates`
    to remove duplicate dimension values (:pull:`5239`).
    By `Andrew Huang <https://github.com/ahuang11>`_.
  - Allow passing ``combine_attrs`` strategy names to the ``keep_attrs`` parameter of
    :py:func:`apply_ufunc` (:pull:`5041`)
    By `Justus Magin <https://github.com/keewis>`_.
  - :py:meth:`Dataset.interp` now allows interpolation with non-numerical datatypes,
    such as booleans, instead of dropping them. (:issue:`4761` :pull:`5008`).
    By `Jimmy Westling <https://github.com/illviljan>`_.
  - Raise more informative error when decoding time variables with invalid reference dates.
    (:issue:`5199`, :pull:`5288`). By `Giacomo Caria <https://github.com/gcaria>`_.
 - Bug fixes:
  - Opening netCDF files from a path that doesn't end in ``.nc`` without supplying
    an explicit ``engine`` works again (:issue:`5295`), fixing a bug introduced in
    0.18.0.
    By `Stephan Hoyer <https://github.com/shoyer>`_
 - Documentation:
  - Clean up and enhance docstrings for the :py:class:`DataArray.plot` and ``Dataset.plot.*``
    families of methods (:pull:`5285`).
    By `Zach Moon <https://github.com/zmoon>`_.
  - Explanation of deprecation cycles and how to implement them added to contributors
    guide. (:pull:`5289`)
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
 - Internal Changes:
  - Explicit indexes refactor: add an ``xarray.Index`` base class and
    ``Dataset.xindexes`` / ``DataArray.xindexes`` properties. Also rename
    ``PandasIndexAdapter`` to ``PandasIndex``, which now inherits from
    ``xarray.Index`` (:pull:`5102`).
    By `Benoit Bovy <https://github.com/benbovy>`_.
  - Updated the release guide for developers. Now accounts for actions that are automated via github
    actions. (:pull:`5274`).
    By `Tom Nicholas <https://github.com/TomNicholas>`_.

-------------------------------------------------------------------
Sun May  9 09:46:42 UTC 2021 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.18.0:
 - This release brings a few important performance improvements, a wide range of:
 - usability upgrades, lots of bug fixes, and some new features. These include:
 - a plugin API to add backend engines, a new theme for the documentation,:
 - curve fitting methods, and several new plotting functions.:
 - Many thanks to the 38 contributors to this release: Aaron Spring, Alessandro Amici,:
 - Alex Marandon, Alistair Miles, Ana Paula Krelling, Anderson Banihirwe, Aureliana Barghini,:
 - Baudouin Raoult, Benoit Bovy, Blair Bonnett, David Trémouilles, Deepak Cherian,:
 - Gabriel Medeiros Abrahão, Giacomo Caria, Hauke Schulz, Illviljan, Mathias Hauser, Matthias Bussonnier,:
 - Mattia Almansi, Maximilian Roos, Ray Bell, Richard Kleijn, Ryan Abernathey, Sam Levang, Spencer Clark,:
 - Spencer Jones, Tammas Loughran, Tobias Kölling, Todd, Tom Nicholas, Tom White, Victor Negîrneac,:
 - Xianxiang Li, Zeb Nicholls, crusaderky, dschwoerer, johnomotani, keewis:
 - New Features:
  - apply ``combine_attrs`` on data variables and coordinate variables when concatenating
    and merging datasets and dataarrays (:pull:`4902`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Add :py:meth:`Dataset.to_pandas` (:pull:`5247`)
    By `Giacomo Caria <https://github.com/gcaria>`_.
  - Add :py:meth:`DataArray.plot.surface` which wraps matplotlib's `plot_surface` to make
    surface plots (:issue:`2235` :issue:`5084` :pull:`5101`).
    By `John Omotani <https://github.com/johnomotani>`_.
  - Allow passing multiple arrays to :py:meth:`Dataset.__setitem__` (:pull:`5216`).
    By `Giacomo Caria <https://github.com/gcaria>`_.
  - Add 'cumulative' option to :py:meth:`Dataset.integrate` and
    :py:meth:`DataArray.integrate` so that result is a cumulative integral, like
    :py:func:`scipy.integrate.cumulative_trapezoidal` (:pull:`5153`).
    By `John Omotani <https://github.com/johnomotani>`_.
  - Add ``safe_chunks`` option to :py:meth:`Dataset.to_zarr` which allows overriding
    checks made to ensure Dask and Zarr chunk compatibility (:issue:`5056`).
    By `Ryan Abernathey <https://github.com/rabernat>`_
  - Add :py:meth:`Dataset.query` and :py:meth:`DataArray.query` which enable indexing
    of datasets and data arrays by evaluating query expressions against the values of the
    data variables (:pull:`4984`).
    By `Alistair Miles <https://github.com/alimanfoo>`_.
  - Allow passing ``combine_attrs`` to :py:meth:`Dataset.merge` (:pull:`4895`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Support for `dask.graph_manipulation
    <https://docs.dask.org/en/latest/graph_manipulation.html>`_ (requires dask >=2021.3)
    By `Guido Imperiale <https://github.com/crusaderky>`_
  - Add :py:meth:`Dataset.plot.streamplot` for streamplot plots with :py:class:`Dataset`
    variables (:pull:`5003`).
    By `John Omotani <https://github.com/johnomotani>`_.
  - Many of the arguments for the :py:attr:`DataArray.str` methods now support
    providing an array-like input. In this case, the array provided to the
    arguments is broadcast against the original array and applied elementwise.
  - :py:attr:`DataArray.str` now supports ``+``, ``*``, and ``%`` operators. These
    behave the same as they do for :py:class:`str`, except that they follow
    array broadcasting rules.
  - A large number of new :py:attr:`DataArray.str` methods were implemented,
    :py:meth:`DataArray.str.casefold`, :py:meth:`DataArray.str.cat`,
    :py:meth:`DataArray.str.extract`, :py:meth:`DataArray.str.extractall`,
    :py:meth:`DataArray.str.findall`, :py:meth:`DataArray.str.format`,
    :py:meth:`DataArray.str.get_dummies`, :py:meth:`DataArray.str.islower`,
    :py:meth:`DataArray.str.join`, :py:meth:`DataArray.str.normalize`,
    :py:meth:`DataArray.str.partition`, :py:meth:`DataArray.str.rpartition`,
    :py:meth:`DataArray.str.rsplit`, and  :py:meth:`DataArray.str.split`.
    A number of these methods allow for splitting or joining the strings in an
    array. (:issue:`4622`)
    By `Todd Jennings <https://github.com/toddrjen>`_
  - Thanks to the new pluggable backend infrastructure external packages may now
    use the ``xarray.backends`` entry point to register additional engines to be used in
    :py:func:`open_dataset`, see the documentation in :ref:`add_a_backend`
    (:issue:`4309`, :issue:`4803`, :pull:`4989`, :pull:`4810` and many others).
    The backend refactor has been sponsored with the "Essential Open Source Software for Science"
    grant from the `Chan Zuckerberg Initiative <https://chanzuckerberg.com>`_ and
    developed by `B-Open <https://www.bopen.eu>`_.
    By `Aureliana Barghini <https://github.com/aurghs>`_ and `Alessandro Amici <https://github.com/alexamici>`_.
  - :py:attr:`~core.accessor_dt.DatetimeAccessor.date` added (:issue:`4983`, :pull:`4994`).
    By `Hauke Schulz <https://github.com/observingClouds>`_.
  - Implement ``__getitem__`` for both :py:class:`~core.groupby.DatasetGroupBy` and
    :py:class:`~core.groupby.DataArrayGroupBy`, inspired by pandas'
    :py:meth:`~pandas.core.groupby.GroupBy.get_group`.
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - Switch the tutorial functions to use `pooch <https://github.com/fatiando/pooch>`_
    (which is now a optional dependency) and add :py:func:`tutorial.open_rasterio` as a
    way to open example rasterio files (:issue:`3986`, :pull:`4102`, :pull:`5074`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Add typing information to unary and binary arithmetic operators operating on
    :py:class:`Dataset`, :py:class:`DataArray`, :py:class:`Variable`,
    :py:class:`~core.groupby.DatasetGroupBy` or
    :py:class:`~core.groupby.DataArrayGroupBy` (:pull:`4904`).
    By `Richard Kleijn <https://github.com/rhkleijn>`_.
  - Add a ``combine_attrs`` parameter to :py:func:`open_mfdataset` (:pull:`4971`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Enable passing arrays with a subset of dimensions to
    :py:meth:`DataArray.clip` & :py:meth:`Dataset.clip`; these methods now use
    :py:func:`xarray.apply_ufunc`; (:pull:`5184`).
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - Disable the `cfgrib` backend if the `eccodes` library is not installed (:pull:`5083`).
    By `Baudouin Raoult <https://github.com/b8raoult>`_.
  - Added :py:meth:`DataArray.curvefit` and :py:meth:`Dataset.curvefit` for general curve fitting applications. (:issue:`4300`, :pull:`4849`)
    By `Sam Levang <https://github.com/slevang>`_.
  - Add options to control expand/collapse of sections in display of Dataset and
    DataArray. The function :py:func:`set_options` now takes keyword aguments
    ``display_expand_attrs``, ``display_expand_coords``, ``display_expand_data``,
    ``display_expand_data_vars``, all of which can be one of ``True`` to always
    expand, ``False`` to always collapse, or ``default`` to expand unless over a
    pre-defined limit (:pull:`5126`).
    By `Tom White <https://github.com/tomwhite>`_.
  - Significant speedups in :py:meth:`Dataset.interp` and :py:meth:`DataArray.interp`.
    (:issue:`4739`, :pull:`4740`).
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - Prevent passing `concat_dim` to :py:func:`xarray.open_mfdataset` when
    `combine='by_coords'` is specified, which should never have been possible (as
    :py:func:`xarray.combine_by_coords` has no `concat_dim` argument to pass to).
    Also removes unneeded internal reordering of datasets in
    :py:func:`xarray.open_mfdataset` when `combine='by_coords'` is specified.
    Fixes (:issue:`5230`).
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
  - Implement ``__setitem__`` for ``xarray.core.indexing.DaskIndexingAdapter`` if
    dask version supports item assignment. (:issue:`5171`, :pull:`5174`)
    By `Tammas Loughran <https://github.com/tammasloughran>`_.
 - Breaking changes:
  - The minimum versions of some dependencies were changed:
    ============ ====== ====
    Package      Old    New
    ============ ====== ====
    boto3        1.12   1.13
    cftime       1.0    1.1
    dask         2.11   2.15
    distributed  2.11   2.15
    matplotlib   3.1    3.2
    numba        0.48   0.49
    ============ ====== ====
  - :py:func:`open_dataset` and :py:func:`open_dataarray` now accept only the first argument
    as positional, all others need to be passed are keyword arguments. This is part of the
    refactor to support external backends (:issue:`4309`, :pull:`4989`).
    By `Alessandro Amici <https://github.com/alexamici>`_.
  - Functions that are identities for 0d data return the unchanged data
    if axis is empty. This ensures that Datasets where some variables do
    not have the averaged dimensions are not accidentially changed
    (:issue:`4885`, :pull:`5207`).
    By `David Schwörer <https://github.com/dschwoerer>`_.
  - :py:attr:`DataArray.coarsen` and :py:attr:`Dataset.coarsen` no longer support passing ``keep_attrs``
    via its constructor. Pass ``keep_attrs`` via the applied function, i.e. use
    ``ds.coarsen(...).mean(keep_attrs=False)`` instead of ``ds.coarsen(..., keep_attrs=False).mean()``.
    Further, coarsen now keeps attributes per default (:pull:`5227`).
    By `Mathias Hauser <https://github.com/mathause>`_.
  - switch the default of the :py:func:`merge` ``combine_attrs`` parameter to
    ``"override"``. This will keep the current behavior for merging the ``attrs`` of
    variables but stop dropping the ``attrs`` of the main objects (:pull:`4902`).
    By `Justus Magin <https://github.com/keewis>`_.
 - Deprecations:
  - Warn when passing `concat_dim` to :py:func:`xarray.open_mfdataset` when
    `combine='by_coords'` is specified, which should never have been possible (as
    :py:func:`xarray.combine_by_coords` has no `concat_dim` argument to pass to).
    Also removes unneeded internal reordering of datasets in
    :py:func:`xarray.open_mfdataset` when `combine='by_coords'` is specified.
    Fixes (:issue:`5230`), via (:pull:`5231`, :pull:`5255`).
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
  - The `lock` keyword argument to :py:func:`open_dataset` and :py:func:`open_dataarray` is now
    a backend specific option. It will give a warning if passed to a backend that doesn't support it
    instead of being silently ignored. From the next version it will raise an error.
    This is part of the refactor to support external backends (:issue:`5073`).
    By `Tom Nicholas <https://github.com/TomNicholas>`_ and `Alessandro Amici <https://github.com/alexamici>`_.
 - Bug fixes:
  - Properly support :py:meth:`DataArray.ffill`, :py:meth:`DataArray.bfill`, :py:meth:`Dataset.ffill`, :py:meth:`Dataset.bfill` along chunked dimensions.
    (:issue:`2699`).
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - Fix 2d plot failure for certain combinations of dimensions when `x` is 1d and `y` is
    2d (:issue:`5097`, :pull:`5099`).
    By `John Omotani <https://github.com/johnomotani>`_.
  - Ensure standard calendar times encoded with large values (i.e. greater than
    approximately 292 years), can be decoded correctly without silently overflowing
    (:pull:`5050`).  This was a regression in xarray 0.17.0.
    By `Zeb Nicholls <https://github.com/znicholls>`_.
  - Added support for `numpy.bool_` attributes in roundtrips using `h5netcdf` engine with `invalid_netcdf=True` [which casts `bool`s to `numpy.bool_`] (:issue:`4981`, :pull:`4986`).
    By `Victor Negîrneac <https://github.com/caenrigen>`_.
  - Don't allow passing ``axis`` to :py:meth:`Dataset.reduce` methods (:issue:`3510`, :pull:`4940`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Decode values as signed if attribute `_Unsigned = "false"` (:issue:`4954`)
    By `Tobias Kölling <https://github.com/d70-t>`_.
  - Keep coords attributes when interpolating when the indexer is not a Variable. (:issue:`4239`, :issue:`4839` :pull:`5031`)
    By `Jimmy Westling <https://github.com/illviljan>`_.
  - Ensure standard calendar dates encoded with a calendar attribute with some or
    all uppercase letters can be decoded or encoded to or from
    ``np.datetime64[ns]`` dates with or without ``cftime`` installed
    (:issue:`5093`, :pull:`5180`).  By `Spencer Clark
    <https://github.com/spencerkclark>`_.
  - Warn on passing ``keep_attrs`` to ``resample`` and ``rolling_exp`` as they are ignored, pass ``keep_attrs``
    to the applied function instead (:pull:`5265`).  By `Mathias Hauser <https://github.com/mathause>`_.
    (:issue:`5093`, :pull:`5180`).
    By `Spencer Clark <https://github.com/spencerkclark>`_.
 - Documentation:
  - New section on :ref:`add_a_backend` in the "Internals" chapter aimed to backend developers
    (:issue:`4803`, :pull:`4810`).
    By `Aureliana Barghini <https://github.com/aurghs>`_.
  - Add :py:meth:`Dataset.polyfit` and :py:meth:`DataArray.polyfit` under "See also" in
    the docstrings of :py:meth:`Dataset.polyfit` and :py:meth:`DataArray.polyfit`
    (:issue:`5016`, :pull:`5020`).
    By `Aaron Spring <https://github.com/aaronspring>`_.
  - New sphinx theme & rearrangement of the docs (:pull:`4835`).
    By `Anderson Banihirwe <https://github.com/andersy005>`_.
 - Internal Changes:
  - Enable displaying mypy error codes and ignore only specific error codes using
    ``# type: ignore[error-code]`` (:pull:`5096`).
    By `Mathias Hauser <https://github.com/mathause>`_.
  - Replace uses of ``raises_regex`` with the more standard
    ``pytest.raises(Exception, match="foo")``;
    (:pull:`5188`), (:pull:`5191`).
    By `Maximilian Roos <https://github.com/max-sixty>`_.

-------------------------------------------------------------------
Sat Feb 27 14:38:41 UTC 2021 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.17.0:
 - This release brings a few important performance improvements, a wide range of:
 - usability upgrades, lots of bug fixes, and some new features. These include:
 - better ``cftime`` support, a new quiver plot, better ``unstack`` performance,:
 - more efficient memory use in rolling operations, and some python packaging:
 - improvements. We also have a few documentation improvements (and more planned!).:
 - Many thanks to the 36 contributors to this release: Alessandro Amici, Anderson:
 - Banihirwe, Aureliana Barghini, Ayrton Bourn, Benjamin Bean, Blair Bonnett, Chun:
 - Ho Chow, DWesl, Daniel Mesejo-León, Deepak Cherian, Eric Keenan, Illviljan, Jens:
 - Hedegaard Nielsen, Jody Klymak, Julien Seguinot, Julius Busecke, Kai Mühlbauer,:
 - Leif Denby, Martin Durant, Mathias Hauser, Maximilian Roos, Michael Mann, Ray:
 - Bell, RichardScottOZ, Spencer Clark, Tim Gates, Tom Nicholas, Yunus Sevinchan,:
 - alexamici, aurghs, crusaderky, dcherian, ghislainp, keewis, rhkleijn:
 - Breaking changes:
  - xarray no longer supports python 3.6
    The minimum version policy was changed to also apply to projects with irregular
    releases. As a result, the minimum versions of some dependencies have changed:
    ============ ====== ====
    Package      Old    New
    ============ ====== ====
    Python       3.6    3.7
    setuptools   38.4   40.4
    numpy        1.15   1.17
    pandas       0.25   1.0
    dask         2.9    2.11
    distributed  2.9    2.11
    bottleneck   1.2    1.3
    h5netcdf     0.7    0.8
    iris         2.2    2.4
    netcdf4      1.4    1.5
    pseudonetcdf 3.0    3.1
    rasterio     1.0    1.1
    scipy        1.3    1.4
    seaborn      0.9    0.10
    zarr         2.3    2.4
    ============ ====== ====
    (:issue:`4688`, :pull:`4720`, :pull:`4907`, :pull:`4942`)
  - As a result of :pull:`4684` the default units encoding for
    datetime-like values (``np.datetime64[ns]`` or ``cftime.datetime``) will now
    always be set such that ``int64`` values can be used.  In the past, no units
    finer than "seconds" were chosen, which would sometimes mean that ``float64``
    values were required, which would lead to inaccurate I/O round-trips.
  - Variables referred to in attributes like ``bounds`` and ``grid_mapping``
    can be set as coordinate variables. These attributes are moved to
    :py:attr:`DataArray.encoding` from :py:attr:`DataArray.attrs`. This behaviour
    is controlled by the ``decode_coords`` kwarg to :py:func:`open_dataset` and
    :py:func:`open_mfdataset`.  The full list of decoded attributes is in
    :ref:`weather-climate` (:pull:`2844`, :issue:`3689`)
  - As a result of :pull:`4911` the output from calling :py:meth:`DataArray.sum`
    or :py:meth:`DataArray.prod` on an integer array with ``skipna=True`` and a
    non-None value for ``min_count`` will now be a float array rather than an
    integer array.
 - Deprecations:
  - ``dim`` argument to :py:meth:`DataArray.integrate` is being deprecated in
    favour of a ``coord`` argument, for consistency with :py:meth:`Dataset.integrate`.
    For now using ``dim`` issues a ``FutureWarning``. It will be removed in
    version 0.19.0 (:pull:`3993`).
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
  - Deprecated ``autoclose`` kwargs from :py:func:`open_dataset` are removed (:pull:`4725`).
    By `Aureliana Barghini <https://github.com/aurghs>`_.
  - the return value of :py:meth:`Dataset.update` is being deprecated to make it work more
    like :py:meth:`dict.update`. It will be removed in version 0.19.0 (:pull:`4932`).
    By `Justus Magin <https://github.com/keewis>`_.
 - New Features:
  - :py:meth:`~xarray.cftime_range` and :py:meth:`DataArray.resample` now support
    millisecond (``"L"`` or ``"ms"``) and microsecond (``"U"`` or ``"us"``) frequencies
    for ``cftime.datetime`` coordinates (:issue:`4097`, :pull:`4758`).
    By `Spencer Clark <https://github.com/spencerkclark>`_.
  - Significantly higher ``unstack`` performance on numpy-backed arrays which
    contain missing values; 8x faster than previous versions in our benchmark, and
    now 2x faster than pandas (:pull:`4746`).
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - Add :py:meth:`Dataset.plot.quiver` for quiver plots with :py:class:`Dataset` variables.
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - Add ``"drop_conflicts"`` to the strategies supported by the ``combine_attrs`` kwarg
    (:issue:`4749`, :pull:`4827`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Allow installing from git archives (:pull:`4897`).
    By `Justus Magin <https://github.com/keewis>`_.
  - :py:class:`DataArrayCoarsen` and :py:class:`DatasetCoarsen` now implement a
    ``reduce`` method, enabling coarsening operations with custom reduction
    functions (:issue:`3741`, :pull:`4939`).  By `Spencer Clark
    <https://github.com/spencerkclark>`_.
  - Most rolling operations use significantly less memory. (:issue:`4325`).
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - Add :py:meth:`Dataset.drop_isel` and :py:meth:`DataArray.drop_isel`
    (:issue:`4658`, :pull:`4819`).
    By `Daniel Mesejo <https://github.com/mesejo>`_.
  - Xarray now leverages updates as of cftime version 1.4.1, which enable exact I/O
    roundtripping of ``cftime.datetime`` objects (:pull:`4758`).
    By `Spencer Clark <https://github.com/spencerkclark>`_.
  - :py:func:`open_dataset` and :py:func:`open_mfdataset` now accept ``fsspec`` URLs
    (including globs for the latter) for ``engine="zarr"``, and so allow reading from
    many remote and other file systems (:pull:`4461`)
    By `Martin Durant <https://github.com/martindurant>`_
  - :py:meth:`DataArray.swap_dims` & :py:meth:`Dataset.swap_dims` now accept dims
    in the form of kwargs as well as a dict, like most similar methods.
    By `Maximilian Roos <https://github.com/max-sixty>`_.
 - Bug fixes:
  - Use specific type checks in
    :py:func:`~xarray.core.variable.as_compatible_data` instead of blanket
    access to ``values`` attribute (:issue:`2097`)
    By `Yunus Sevinchan <https://github.com/blsqr>`_.
  - :py:meth:`DataArray.resample` and :py:meth:`Dataset.resample` do not trigger
    computations anymore if :py:meth:`Dataset.weighted` or
    :py:meth:`DataArray.weighted` are applied (:issue:`4625`, :pull:`4668`). By
    `Julius Busecke <https://github.com/jbusecke>`_.
  - :py:func:`merge` with ``combine_attrs='override'`` makes a copy of the attrs
    (:issue:`4627`).
  - By default, when possible, xarray will now always use values of
    type ``int64`` when encoding and decoding ``numpy.datetime64[ns]`` datetimes.  This
    ensures that maximum precision and accuracy are maintained in the round-tripping
    process (:issue:`4045`, :pull:`4684`). It also enables encoding and decoding standard
    calendar dates with time units of nanoseconds (:pull:`4400`).
    By `Spencer Clark <https://github.com/spencerkclark>`_ and `Mark Harfouche
    <http://github.com/hmaarrfk>`_.
  - :py:meth:`DataArray.astype`, :py:meth:`Dataset.astype` and :py:meth:`Variable.astype` support
    the ``order`` and ``subok`` parameters again. This fixes a regression introduced in version 0.16.1
    (:issue:`4644`, :pull:`4683`).
    By `Richard Kleijn <https://github.com/rhkleijn>`_ .
  - Remove dictionary unpacking when using ``.loc`` to avoid collision with ``.sel`` parameters (:pull:`4695`).
    By `Anderson Banihirwe <https://github.com/andersy005>`_.
  - Fix the legend created by :py:meth:`Dataset.plot.scatter` (:issue:`4641`, :pull:`4723`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Fix a crash in orthogonal indexing on geographic coordinates with ``engine='cfgrib'``
    (:issue:`4733` :pull:`4737`).
    By `Alessandro Amici <https://github.com/alexamici>`_.
  - Coordinates with dtype ``str`` or ``bytes`` now retain their dtype on many operations,
    e.g. ``reindex``, ``align``, ``concat``, ``assign``, previously they were cast to an object dtype
    (:issue:`2658` and :issue:`4543`).
    By `Mathias Hauser <https://github.com/mathause>`_.
  - Limit number of data rows when printing large datasets. (:issue:`4736`, :pull:`4750`).
    By `Jimmy Westling <https://github.com/illviljan>`_.
  - Add ``missing_dims`` parameter to transpose (:issue:`4647`, :pull:`4767`).
    By `Daniel Mesejo <https://github.com/mesejo>`_.
  - Resolve intervals before appending other metadata to labels when plotting (:issue:`4322`, :pull:`4794`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Fix regression when decoding a variable with a ``scale_factor`` and ``add_offset`` given
    as a list of length one (:issue:`4631`) by `Mathias Hauser <https://github.com/mathause>`_.
  - Expand user directory paths (e.g. ``~/``) in :py:func:`open_mfdataset` and
    :py:meth:`Dataset.to_zarr` (:issue:`4783`, :pull:`4795`).
    By `Julien Seguinot <https://github.com/juseg>`_.
  - Raise DeprecationWarning when trying to typecast a tuple containing a :py:class:`DataArray`.
    User now prompted to first call `.data` on it (:issue:`4483`).
    By `Chun Ho Chow <https://github.com/chunhochow>`_.
  - Ensure that :py:meth:`Dataset.interp` raises ``ValueError`` when interpolating
    outside coordinate range and ``bounds_error=True`` (:issue:`4854`,
    :pull:`4855`).
    By `Leif Denby <https://github.com/leifdenby>`_.
  - Fix time encoding bug associated with using cftime versions greater than
    1.4.0 with xarray (:issue:`4870`, :pull:`4871`). By `Spencer Clark <https://github.com/spencerkclark>`_.
  - Stop :py:meth:`DataArray.sum` and :py:meth:`DataArray.prod` computing lazy
    arrays when called with a ``min_count`` parameter (:issue:`4898`, :pull:`4911`).
    By `Blair Bonnett <https://github.com/bcbnz>`_.
  - Fix bug preventing the ``min_count`` parameter to :py:meth:`DataArray.sum` and
    :py:meth:`DataArray.prod` working correctly when calculating over all axes of
    a float64 array (:issue:`4898`, :pull:`4911`). By `Blair Bonnett <https://github.com/bcbnz>`_.
  - Fix decoding of vlen strings using h5py versions greater than 3.0.0 with h5netcdf backend (:issue:`4570`, :pull:`4893`).
    By `Kai Mühlbauer <https://github.com/kmuehlbauer>`_.
  - Allow converting :py:class:`Dataset` or :py:class:`DataArray` objects with a ``MultiIndex``
    and at least one other dimension to a ``pandas`` object (:issue:`3008`, :pull:`4442`).
    By `ghislainp <https://github.com/ghislainp>`_.
 - Documentation:
  - Add information about requirements for accessor classes (:issue:`2788`, :pull:`4657`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Start a list of external I/O integrating with ``xarray`` (:issue:`683`, :pull:`4566`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Add concat examples and improve combining documentation (:issue:`4620`, :pull:`4645`).
    By `Ray Bell <https://github.com/raybellwaves>`_ and
    `Justus Magin <https://github.com/keewis>`_.
  - explicitly mention that :py:meth:`Dataset.update` updates inplace (:issue:`2951`, :pull:`4932`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Added docs on vectorized indexing (:pull:`4711`).
    By `Eric Keenan <https://github.com/EricKeenan>`_.
 - Internal Changes:
  - Speed up of the continuous integration tests on azure.
    - Switched to mamba and use matplotlib-base for a faster installation of all dependencies (:pull:`4672`).
    - Use ``pytest.mark.skip`` instead of ``pytest.mark.xfail`` for some tests that can currently not
      succeed (:pull:`4685`).
    - Run the tests in parallel using pytest-xdist (:pull:`4694`).
    By `Justus Magin <https://github.com/keewis>`_ and `Mathias Hauser <https://github.com/mathause>`_.
  - Use ``pyproject.toml`` instead of the ``setup_requires`` option for
    ``setuptools`` (:pull:`4897`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Replace all usages of ``assert x.identical(y)`` with ``assert_identical(x,  y)``
    for clearer error messages (:pull:`4752`).
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - Speed up attribute style access (e.g. ``ds.somevar`` instead of ``ds["somevar"]``) and
    tab completion in IPython (:issue:`4741`, :pull:`4742`).
    By `Richard Kleijn <https://github.com/rhkleijn>`_.
  - Added the ``set_close`` method to ``Dataset`` and ``DataArray`` for backends
    to specify how to voluntary release all resources. (:pull:`#4809`)
    By `Alessandro Amici <https://github.com/alexamici>`_.
  - Update type hints to work with numpy v1.20 (:pull:`4878`).
    By `Mathias Hauser <https://github.com/mathause>`_.
  - Ensure warnings cannot be turned into exceptions in :py:func:`testing.assert_equal` and
    the other ``assert_*`` functions (:pull:`4864`).
    By `Mathias Hauser <https://github.com/mathause>`_.
  - Performance improvement when constructing DataArrays. Significantly speeds up
    repr for Datasets with large number of variables.
    By `Deepak Cherian <https://github.com/dcherian>`_.
- remove xarray-pr4884-dask2021.patch, was never applied and is included upstream.

-------------------------------------------------------------------
Mon Feb 15 12:30:53 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Disable python36 build: python36-numpy is no longer in Tumbleweed
  xarray will follow to drop Python 3.6 support on next release.
  (NEP 29)
- Add xarray-pr4884-dask2021.patch gh#pydata/xarray#4884
- Enable parralel testing with pytest-xdist
- Recommend/Suggest the extras

-------------------------------------------------------------------
Sun Dec 20 16:09:14 UTC 2020 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.16.2:
 - This release brings the ability to write to limited regions of ``zarr`` files, open zarr files with :py:func:`open_dataset` and :py:func:`open_mfdataset`, increased support for propagating ``attrs`` using the ``keep_attrs`` flag, as well as numerous bugfixes and documentation improvements.:
 - Deprecations:
  - :py:attr:`~core.accessor_dt.DatetimeAccessor.weekofyear` and :py:attr:`~core.accessor_dt.DatetimeAccessor.week`
    have been deprecated. Use ``DataArray.dt.isocalendar().week``
    instead (:pull:`4534`). By `Mathias Hauser <https://github.com/mathause>`_,
    `Maximilian Roos <https://github.com/max-sixty>`_, and `Spencer Clark <https://github.com/spencerkclark>`_.
  - :py:attr:`DataArray.rolling` and :py:attr:`Dataset.rolling` no longer support passing ``keep_attrs``
    via its constructor. Pass ``keep_attrs`` via the applied function, i.e. use
    ``ds.rolling(...).mean(keep_attrs=False)`` instead of ``ds.rolling(..., keep_attrs=False).mean()``
    Rolling operations now keep their attributes per default (:pull:`4510`).
    By `Mathias Hauser <https://github.com/mathause>`_.
 - New Features:
  - :py:func:`open_dataset` and :py:func:`open_mfdataset`
    now works with ``engine="zarr"`` (:issue:`3668`, :pull:`4003`, :pull:`4187`).
    By `Miguel Jimenez <https://github.com/Mikejmnez>`_ and `Wei Ji Leong <https://github.com/weiji14>`_.
  - Unary & binary operations follow the ``keep_attrs`` flag (:issue:`3490`, :issue:`4065`, :issue:`3433`, :issue:`3595`, :pull:`4195`).
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - Added :py:meth:`~core.accessor_dt.DatetimeAccessor.isocalendar()` that returns a Dataset
    with year, week, and weekday calculated according to the ISO 8601 calendar. Requires
    pandas version 1.1.0 or greater (:pull:`4534`). By `Mathias Hauser <https://github.com/mathause>`_,
    `Maximilian Roos <https://github.com/max-sixty>`_, and `Spencer Clark <https://github.com/spencerkclark>`_.
  - :py:meth:`Dataset.to_zarr` now supports a ``region`` keyword for writing to
    limited regions of existing Zarr stores (:pull:`4035`).
    See :ref:`io.zarr.appending` for full details.
    By `Stephan Hoyer <https://github.com/shoyer>`_.
  - Added typehints in :py:func:`align` to reflect that the same type received in ``objects`` arg will be returned (:pull:`4522`).
    By `Michal Baumgartner <https://github.com/m1so>`_.
  - :py:meth:`Dataset.weighted` and :py:meth:`DataArray.weighted` are now executing value checks lazily if weights are provided as dask arrays (:issue:`4541`, :pull:`4559`).
    By `Julius Busecke <https://github.com/jbusecke>`_.
  - Added the ``keep_attrs`` keyword to ``rolling_exp.mean()``; it now keeps attributes
    per default. By `Mathias Hauser <https://github.com/mathause>`_ (:pull:`4592`).
  - Added ``freq`` as property to :py:class:`CFTimeIndex` and into the
    ``CFTimeIndex.repr``. (:issue:`2416`, :pull:`4597`)
    By `Aaron Spring <https://github.com/aaronspring>`_.
 - Bug fixes:
  - Fix bug where reference times without padded years (e.g. ``since 1-1-1``) would lose their units when
    being passed by :py:func:`encode_cf_datetime` (:issue:`4422`, :pull:`4506`). Such units are ambiguous
    about which digit represents the years (is it YMD or DMY?). Now, if such formatting is encountered,
    it is assumed that the first digit is the years, they are padded appropriately (to e.g. ``since 0001-1-1``)
    and a warning that this assumption is being made is issued. Previously, without ``cftime``, such times
    would be silently parsed incorrectly (at least based on the CF conventions) e.g. "since 1-1-1" would
    be parsed (via ``pandas`` and ``dateutil``) to ``since 2001-1-1``.
    By `Zeb Nicholls <https://github.com/znicholls>`_.
  - Fix :py:meth:`DataArray.plot.step`. By `Deepak Cherian <https://github.com/dcherian>`_.
  - Fix bug where reading a scalar value from a NetCDF file opened with the ``h5netcdf`` backend would raise a ``ValueError`` when ``decode_cf=True`` (:issue:`4471`, :pull:`4485`).
    By `Gerrit Holl <https://github.com/gerritholl>`_.
  - Fix bug where datetime64 times are silently changed to incorrect values if they are outside the valid date range for ns precision when provided in some other units (:issue:`4427`, :pull:`4454`).
    By `Andrew Pauling <https://github.com/andrewpauling>`_
  - Fix silently overwriting the ``engine`` key when passing :py:func:`open_dataset` a file object
    to an incompatible netCDF (:issue:`4457`). Now incompatible combinations of files and engines raise
    an exception instead. By `Alessandro Amici <https://github.com/alexamici>`_.
  - The ``min_count`` argument to :py:meth:`DataArray.sum()` and :py:meth:`DataArray.prod()`
    is now ignored when not applicable, i.e. when ``skipna=False`` or when ``skipna=None``
    and the dtype does not have a missing value (:issue:`4352`).
    By `Mathias Hauser <https://github.com/mathause>`_.
  - :py:func:`combine_by_coords` now raises an informative error when passing coordinates
    with differing calendars (:issue:`4495`). By `Mathias Hauser <https://github.com/mathause>`_.
  - :py:attr:`DataArray.rolling` and :py:attr:`Dataset.rolling` now also keep the attributes and names of of (wrapped)
    ``DataArray`` objects, previously only the global attributes were retained (:issue:`4497`, :pull:`4510`).
    By `Mathias Hauser <https://github.com/mathause>`_.
  - Improve performance where reading small slices from huge dimensions was slower than necessary (:pull:`4560`). By `Dion Häfner <https://github.com/dionhaefner>`_.
  - Fix bug where ``dask_gufunc_kwargs`` was silently changed in :py:func:`apply_ufunc` (:pull:`4576`). By `Kai Mühlbauer <https://github.com/kmuehlbauer>`_.
 - Documentation:
  - document the API not supported with duck arrays (:pull:`4530`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Mention the possibility to pass functions to :py:meth:`Dataset.where` or
    :py:meth:`DataArray.where` in the parameter documentation (:issue:`4223`, :pull:`4613`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Update the docstring of :py:class:`DataArray` and :py:class:`Dataset`.
    (:pull:`4532`);
    By `Jimmy Westling <https://github.com/illviljan>`_.
  - Raise a more informative error when :py:meth:`DataArray.to_dataframe` is
    is called on a scalar, (:issue:`4228`);
    By `Pieter Gijsbers <https://github.com/pgijsbers>`_.
  - Fix grammar and typos in the :doc:`contributing` guide (:pull:`4545`).
    By `Sahid Velji <https://github.com/sahidvelji>`_.
  - Fix grammar and typos in the :doc:`io` guide (:pull:`4553`).
    By `Sahid Velji <https://github.com/sahidvelji>`_.
  - Update link to NumPy docstring standard in the :doc:`contributing` guide (:pull:`4558`).
    By `Sahid Velji <https://github.com/sahidvelji>`_.
  - Add docstrings to ``isnull`` and ``notnull``, and fix the displayed signature
    (:issue:`2760`, :pull:`4618`).
    By `Justus Magin <https://github.com/keewis>`_.
 - Internal Changes:
  - Optional dependencies can be installed along with xarray by specifying
    extras as ``pip install "xarray[extra]"`` where ``extra`` can be one of ``io``,
    ``accel``, ``parallel``, ``viz`` and ``complete``. See docs for updated
    :ref:`installation instructions <installation-instructions>`.
    (:issue:`2888`, :pull:`4480`).
    By `Ashwin Vishnu <https://github.com/ashwinvis>`_, `Justus Magin
    <https://github.com/keewis>`_ and `Mathias Hauser
    <https://github.com/mathause>`_.
  - Removed stray spaces that stem from black removing new lines (:pull:`4504`).
    By `Mathias Hauser <https://github.com/mathause>`_.
  - Ensure tests are not skipped in the ``py38-all-but-dask`` test environment
    (:issue:`4509`). By `Mathias Hauser <https://github.com/mathause>`_.
  - Ignore select numpy warnings around missing values, where xarray handles
    the values appropriately, (:pull:`4536`);
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - Replace the internal use of ``pd.Index.__or__`` and ``pd.Index.__and__`` with ``pd.Index.union``
    and ``pd.Index.intersection`` as they will stop working as set operations in the future
    (:issue:`4565`). By `Mathias Hauser <https://github.com/mathause>`_.
  - Add GitHub action for running nightly tests against upstream dependencies (:pull:`4583`). 
    By `Anderson Banihirwe <https://github.com/andersy005>`_. 
  - Ensure all figures are closed properly in plot tests (:pull:`4600`).
    By `Yash Saboo <https://github.com/yashsaboo>`_, `Nirupam K N
    <https://github.com/Nirupamkn>`_ and `Mathias Hauser
    <https://github.com/mathause>`_.

-------------------------------------------------------------------
Wed Sep 23 06:23:20 UTC 2020 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.16.1:
 - This patch release fixes an incompatability with a recent pandas change, which:
 - was causing an issue indexing with a ``datetime64``. It also includes:
 - improvements to ``rolling``, ``to_dataframe``, ``cov`` & ``corr`` methods and:
 - bug fixes. Our documentation has a number of improvements, including fixing all :
 - doctests and confirming their accuracy on every commit.:
 - Many thanks to the 36 contributors who contributed to this release:
 - Aaron Spring, Akio Taniguchi, Aleksandar Jelenak, Alexandre Poux,:
 - Caleb, Dan Nowacki, Deepak Cherian, Gerardo Rivera, Jacob Tomlinson, James A.:
 - Bednar, Joe Hamman, Julia Kent, Kai Mühlbauer, Keisuke Fujii, Mathias Hauser,:
 - Maximilian Roos, Nick R. Papior, Pascal Bourgault, Peter Hausamann, Romain:
 - Martinez, Russell Manser, Samnan Rahee, Sander, Spencer Clark, Stephan Hoyer,:
 - Thomas Zilio, Tobias Kölling, Tom Augspurger, alexamici, crusaderky, darikg,:
 - inakleinbottle, jenssss, johnomotani, keewis, and rpgoldman.:
 - Breaking changes:
  - :py:meth:`DataArray.astype` and :py:meth:`Dataset.astype` now preserve attributes. Keep the
    old behavior by passing `keep_attrs=False` (:issue:`2049`, :pull:`4314`).
    By `Dan Nowacki <https://github.com/dnowacki-usgs>`_ and `Gabriel Joel Mitchell <https://github.com/gajomi>`_.
 - New Features:
  - :py:meth:`~xarray.DataArray.rolling` and :py:meth:`~xarray.Dataset.rolling`
    now accept more than 1 dimension. (:pull:`4219`)
    By `Keisuke Fujii <https://github.com/fujiisoup>`_.
  - :py:meth:`~xarray.DataArray.to_dataframe` and :py:meth:`~xarray.Dataset.to_dataframe`
    now accept a ``dim_order`` parameter allowing to specify the resulting dataframe's
    dimensions order (:issue:`4331`, :pull:`4333`).
    By `Thomas Zilio <https://github.com/thomas-z>`_.
  - Support multiple outputs in :py:func:`xarray.apply_ufunc` when using
    ``dask='parallelized'``. (:issue:`1815`, :pull:`4060`).
    By `Kai Mühlbauer <https://github.com/kmuehlbauer>`_.
  - ``min_count`` can be supplied to reductions such as ``.sum`` when specifying
    multiple dimension to reduce over; (:pull:`4356`).
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - :py:func:`xarray.cov` and :py:func:`xarray.corr` now handle missing values; (:pull:`4351`).
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - Add support for parsing datetime strings formatted following the default
    string representation of cftime objects, i.e. YYYY-MM-DD hh:mm:ss, in
    partial datetime string indexing, as well as :py:meth:`~xarray.cftime_range`
    (:issue:`4337`). By `Spencer Clark <https://github.com/spencerkclark>`_.
  - Build ``CFTimeIndex.__repr__`` explicitly as :py:class:`pandas.Index`. Add ``calendar`` as a new
    property for :py:class:`CFTimeIndex` and show ``calendar`` and ``length`` in
    ``CFTimeIndex.__repr__`` (:issue:`2416`, :pull:`4092`)
    By `Aaron Spring <https://github.com/aaronspring>`_.
  - Use a wrapped array's ``_repr_inline_`` method to construct the collapsed ``repr``
    of :py:class:`DataArray` and :py:class:`Dataset` objects and
    document the new method in :doc:`internals`. (:pull:`4248`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Allow per-variable fill values in most functions. (:pull:`4237`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Expose ``use_cftime`` option in :py:func:`~xarray.open_zarr` (:issue:`2886`, :pull:`3229`)
    By `Samnan Rahee <https://github.com/Geektrovert>`_ and `Anderson Banihirwe <https://github.com/andersy005>`_.
 - Bug fixes:
  - Fix indexing with datetime64 scalars with pandas 1.1 (:issue:`4283`).
    By `Stephan Hoyer <https://github.com/shoyer>`_ and
    `Justus Magin <https://github.com/keewis>`_.
  - Variables which are chunked using dask only along some dimensions can be chunked while storing with zarr along previously
    unchunked dimensions (:pull:`4312`) By `Tobias Kölling <https://github.com/d70-t>`_.
  - Fixed a bug in backend caused by basic installation of Dask (:issue:`4164`, :pull:`4318`)
    `Sam Morley <https://github.com/inakleinbottle>`_.
  - Fixed a few bugs with :py:meth:`Dataset.polyfit` when encountering deficient matrix ranks (:issue:`4190`, :pull:`4193`). By `Pascal Bourgault <https://github.com/aulemahal>`_.
  - Fixed inconsistencies between docstring and functionality for :py:meth:`DataArray.str.get`
    and :py:meth:`DataArray.str.wrap` (:issue:`4334`). By `Mathias Hauser <https://github.com/mathause>`_.
  - Fixed overflow issue causing incorrect results in computing means of :py:class:`cftime.datetime`
    arrays (:issue:`4341`). By `Spencer Clark <https://github.com/spencerkclark>`_.
  - Fixed :py:meth:`Dataset.coarsen`, :py:meth:`DataArray.coarsen` dropping attributes on original object (:issue:`4120`, :pull:`4360`). By `Julia Kent <https://github.com/jukent>`_.
  - fix the signature of the plot methods. (:pull:`4359`) By `Justus Magin <https://github.com/keewis>`_.
  - Fix :py:func:`xarray.apply_ufunc` with ``vectorize=True`` and ``exclude_dims`` (:issue:`3890`).
    By `Mathias Hauser <https://github.com/mathause>`_.
  - Fix `KeyError` when doing linear interpolation to an nd `DataArray`
    that contains NaNs (:pull:`4233`).
    By `Jens Svensmark <https://github.com/jenssss>`_
  - Fix incorrect legend labels for :py:meth:`Dataset.plot.scatter` (:issue:`4126`).
    By `Peter Hausamann <https://github.com/phausamann>`_.
  - Fix ``dask.optimize`` on ``DataArray`` producing an invalid Dask task graph (:issue:`3698`) 
    By `Tom Augspurger <https://github.com/TomAugspurger>`_
  - Fix ``pip install .`` when no ``.git`` directory exists; namely when the xarray source
    directory has been rsync'ed by PyCharm Professional for a remote deployment over SSH.
    By `Guido Imperiale <https://github.com/crusaderky>`_
  - Preserve dimension and coordinate order during :py:func:`xarray.concat` (:issue:`2811`, :issue:`4072`, :pull:`4419`).
    By `Kai Mühlbauer <https://github.com/kmuehlbauer>`_.
  - Avoid relying on :py:class:`set` objects for the ordering of the coordinates (:pull:`4409`)
    By `Justus Magin <https://github.com/keewis>`_.
 - Documentation:
  - Update the docstring of :py:meth:`DataArray.copy` to remove incorrect mention of 'dataset' (:issue:`3606`)
    By `Sander van Rijn <https://github.com/sjvrijn>`_.
  - Removed skipna argument from :py:meth:`DataArray.count`, :py:meth:`DataArray.any`, :py:meth:`DataArray.all`. (:issue:`755`)
    By `Sander van Rijn <https://github.com/sjvrijn>`_
  - Update the contributing guide to use merges instead of rebasing and state
    that we squash-merge. (:pull:`4355`). By `Justus Magin <https://github.com/keewis>`_.
  - Make sure the examples from the docstrings actually work (:pull:`4408`).
    By `Justus Magin <https://github.com/keewis>`_.
  - Updated Vectorized Indexing to a clearer example.
    By `Maximilian Roos <https://github.com/max-sixty>`_
 - Internal Changes:
  - Fixed all doctests and enabled their running in CI.
    By `Justus Magin <https://github.com/keewis>`_.
  - Relaxed the :ref:`mindeps_policy` to support:
    - all versions of setuptools released in the last 42 months (but no older than 38.4)
    - all versions of dask and dask.distributed released in the last 12 months (but no
      older than 2.9)
    - all versions of other packages released in the last 12 months
    All are  up from 6 months (:issue:`4295`)
    `Guido Imperiale <https://github.com/crusaderky>`_.
  - Use :py:func:`dask.array.apply_gufunc` instead of :py:func:`dask.array.blockwise` in
    :py:func:`xarray.apply_ufunc` when using ``dask='parallelized'``. (:pull:`4060`, :pull:`4391`, :pull:`4392`)
  - Align ``mypy`` versions to ``0.782`` across ``requirements`` and
    ``.pre-commit-config.yml`` files. (:pull:`4390`)
    By `Maximilian Roos <https://github.com/max-sixty>`_
  - Only load resource files when running inside a Jupyter Notebook
    (:issue:`4294`) By `Guido Imperiale <https://github.com/crusaderky>`_
  - Silenced most ``numpy`` warnings such as ``Mean of empty slice``. (:pull:`4369`)
    By `Maximilian Roos <https://github.com/max-sixty>`_
  - Enable type checking for :py:func:`concat` (:issue:`4238`)
    By `Mathias Hauser <https://github.com/mathause>`_.
  - Updated plot functions for matplotlib version 3.3 and silenced warnings in the
    plot tests (:pull:`4365`). By `Mathias Hauser <https://github.com/mathause>`_.
  - Versions in ``pre-commit.yaml`` are now pinned, to reduce the chances of
    conflicting versions. (:pull:`4388`)
    By `Maximilian Roos <https://github.com/max-sixty>`_

-------------------------------------------------------------------
Wed Jul 15 03:13:15 UTC 2020 - Todd R <toddrme2178@gmail.com>

- Update to version 0.16.0
  Highlights:
  * xarray.cov & xarray.corr for covariance & correlation respectively
  * the idxmax & idxmin methods
  * the polyfit method & xarray.polyval for fitting polynomials
  * a number of documentation improvements, other features, and bug fixes
- Enable now-working tests

-------------------------------------------------------------------
Mon Apr 20 07:11:39 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Package is py3 only -> drop py2 dependency

-------------------------------------------------------------------
Sat Mar 28 16:43:47 UTC 2020 - Arun Persaud <arun@gmx.de>

- update to version 0.15.1:
  * Breaking changes
    + Raise an error when assigning to the .values or .data attribute
      of dimension coordinates i.e. IndexVariable objects. This has
      been broken since v0.12.0. Please use DataArray.assign_coords()
      or Dataset.assign_coords() instead. (GH3470, PR3862) By Deepak
      Cherian
  * New Features
    + Weighted array reductions are now supported via the new
      DataArray.weighted() and Dataset.weighted() methods. See
      Weighted array reductions. (GH422, PR2922). By Mathias Hauser
    + The new jupyter notebook repr (Dataset._repr_html_ and
      DataArray._repr_html_) (introduced in 0.14.1) is now on by
      default. To disable, use
      xarray.set_options(display_style="text"). By Julia Signell.
    + Added support for pandas.DatetimeIndex-style rounding of
      cftime.datetime objects directly via a CFTimeIndex or via the
      DatetimeAccessor. By Spencer Clark
    + Support new h5netcdf backend keyword phony_dims (available from
      h5netcdf v0.8.0 for H5NetCDFStore. By Kai Mühlbauer.
    + Add partial support for unit aware arrays with pint. (PR3706,
      PR3611) By Justus Magin.
    + Dataset.groupby() and DataArray.groupby() now raise a TypeError
      on multiple string arguments. Receiving multiple string
      arguments often means a user is attempting to pass multiple
      dimensions as separate arguments and should instead pass a
      single list of dimensions. (PR3802) By Maximilian Roos
    + map_blocks() can now apply functions that add new unindexed
      dimensions. By Deepak Cherian
    + An ellipsis (...) is now supported in the dims argument of
      Dataset.stack() and DataArray.stack(), meaning all unlisted
      dimensions, similar to its meaning in
      DataArray.transpose(). (PR3826) By Maximilian Roos
    + Dataset.where() and DataArray.where() accept a lambda as a first
      argument, which is then called on the input; replicating pandas’
      behavior. By Maximilian Roos.
    + skipna is available in Dataset.quantile(), DataArray.quantile(),
      core.groupby.DatasetGroupBy.quantile(),
      core.groupby.DataArrayGroupBy.quantile() (GH3843, PR3844) By
      Aaron Spring.
  * Bug fixes
    + Fix Dataset.interp() when indexing array shares coordinates with
      the indexed variable (GH3252). By David Huard.
    + Fix recombination of groups in Dataset.groupby() and
      DataArray.groupby() when performing an operation that changes
      the size of the groups along the grouped dimension. By Eric
      Jansen.
    + Fix use of multi-index with categorical values (GH3674). By
      Matthieu Ancellin.
    + Fix alignment with join="override" when some dimensions are
      unindexed. (GH3681). By Deepak Cherian.
    + Fix Dataset.swap_dims() and DataArray.swap_dims() producing
      index with name reflecting the previous dimension name instead
      of the new one (GH3748, PR3752). By Joseph K Aicher.
    + Use dask_array_type instead of dask_array.Array for type
      checking. (GH3779, PR3787) By Justus Magin.
    + concat() can now handle coordinate variables only present in one
      of the objects to be concatenated when coords="different". By
      Deepak Cherian.
    + xarray now respects the over, under and bad colors if set on a
      provided colormap. (GH3590, PR3601) By johnomotani.
    + coarsen() now respects xr.set_options(keep_attrs=True) to
      preserve attributes. Dataset.coarsen() accepts a keyword
      argument keep_attrs to change this setting. (GH3376, PR3801) By
      Andrew Thomas.
    + Delete associated indexes when deleting coordinate
      variables. (GH3746). By Deepak Cherian.
    + Fix xarray.core.dataset.Dataset.to_zarr() when using append_dim
      and group simultaneously. (GH3170). By Matthias Meyer.
    + Fix html repr on Dataset with non-string keys (PR3807). By
      Maximilian Roos.
  * Documentation
    + Fix documentation of DataArray removing the deprecated mention
      that when omitted, dims are inferred from a
      coords-dict. (PR3821) By Sander van Rijn.
    + Improve the where() docstring. By Maximilian Roos
    + Update the installation instructions: only explicitly list
      recommended dependencies (GH3756). By Mathias Hauser.
  * Internal Changes
    + Remove the internal import_seaborn function which handled the
      deprecation of the seaborn.apionly entry point (GH3747). By
      Mathias Hauser.
    + Don’t test pint integration in combination with datetime
      objects. (GH3778, PR3788) By Justus Magin.
    + Change test_open_mfdataset_list_attr to only run with dask
      installed (GH3777, PR3780). By Bruno Pagani.
    + Preserve the ability to index with method="nearest" with a
      CFTimeIndex with pandas versions greater than 1.0.1 (GH3751). By
      Spencer Clark.
    + Greater flexibility and improved test coverage of subtracting
      various types of objects from a CFTimeIndex. By Spencer Clark.
    + Update Azure CI MacOS image, given pending removal. By
      Maximilian Roos
    + Remove xfails for scipy 1.0.1 for tests that append to netCDF
      files (PR3805). By Mathias Hauser.
    + Remove conversion to pandas.Panel, given its removal in pandas
      in favor of xarray’s objects. By Maximilian Roos

-------------------------------------------------------------------
Sat Feb  1 15:02:10 UTC 2020 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.15.0:
 - This release brings many improvements to xarray's documentation: our examples are now binderized notebooks (`click here <https://mybinder.org/v2/gh/pydata/xarray/master?urlpath=lab/tree/doc/examples/weather-data.ipynb>`_):
 - and we have new example notebooks from our SciPy 2019 sprint (many thanks to our contributors!).:
 - This release also features many API improvements such as a new:
:py:class:`~core.accessor_dt.TimedeltaAccessor` and support for :py:class:`CFTimeIndex` in
:py:meth:`~DataArray.interpolate_na`); as well as many bug fixes.
 - Breaking changes:
  - Bumped minimum tested versions for dependencies:
    - numpy 1.15
    - pandas 0.25
    - dask 2.2
    - distributed 2.2
    - scipy 1.3
  - Remove ``compat`` and ``encoding`` kwargs from ``DataArray``, which
    have been deprecated since 0.12. (:pull:`3650`).
    Instead, specify the ``encoding`` kwarg when writing to disk or set
    the :py:attr:`DataArray.encoding` attribute directly.
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - :py:func:`xarray.dot`, :py:meth:`DataArray.dot`, and the ``@`` operator now
    use ``align="inner"`` (except when ``xarray.set_options(arithmetic_join="exact")``;
    :issue:`3694`) by `Mathias Hauser <https://github.com/mathause>`_.
 - New Features:
  - :py:meth:`DataArray.sel` and :py:meth:`Dataset.sel` now support :py:class:`pandas.CategoricalIndex`. (:issue:`3669`)
    By `Keisuke Fujii <https://github.com/fujiisoup>`_.
  - Support using an existing, opened h5netcdf ``File`` with
    :py:class:`~xarray.backends.H5NetCDFStore`. This permits creating an
    :py:class:`~xarray.Dataset` from a h5netcdf ``File`` that has been opened
    using other means (:issue:`3618`).
    By `Kai Mühlbauer <https://github.com/kmuehlbauer>`_.
  - Implement ``median`` and ``nanmedian`` for dask arrays. This works by rechunking
    to a single chunk along all reduction axes. (:issue:`2999`).
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - :py:func:`~xarray.concat` now preserves attributes from the first Variable.
    (:issue:`2575`, :issue:`2060`, :issue:`1614`)
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - :py:meth:`Dataset.quantile`, :py:meth:`DataArray.quantile` and ``GroupBy.quantile``
    now work with dask Variables.
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - Added the ``count`` reduction method to both :py:class:`~core.rolling.DatasetCoarsen`
    and :py:class:`~core.rolling.DataArrayCoarsen` objects. (:pull:`3500`)
    By `Deepak Cherian <https://github.com/dcherian>`_
  - Add ``meta`` kwarg to :py:func:`~xarray.apply_ufunc`;
    this is passed on to :py:func:`dask.array.blockwise`. (:pull:`3660`)
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - Add ``attrs_file`` option in :py:func:`~xarray.open_mfdataset` to choose the
    source file for global attributes in a multi-file dataset (:issue:`2382`,
    :pull:`3498`). By `Julien Seguinot <https://github.com/juseg>`_.
  - :py:meth:`Dataset.swap_dims` and :py:meth:`DataArray.swap_dims`
    now allow swapping to dimension names that don't exist yet. (:pull:`3636`)
    By `Justus Magin <https://github.com/keewis>`_.
  - Extend :py:class:`~core.accessor_dt.DatetimeAccessor` properties
    and support ``.dt`` accessor for timedeltas
    via :py:class:`~core.accessor_dt.TimedeltaAccessor` (:pull:`3612`)
    By `Anderson Banihirwe <https://github.com/andersy005>`_.
  - Improvements to interpolating along time axes (:issue:`3641`, :pull:`3631`).
    By `David Huard <https://github.com/huard>`_.
    - Support :py:class:`CFTimeIndex` in :py:meth:`DataArray.interpolate_na`
    - define 1970-01-01 as the default offset for the interpolation index for both
      :py:class:`pandas.DatetimeIndex` and :py:class:`CFTimeIndex`,
    - use microseconds in the conversion from timedelta objects to floats to avoid
      overflow errors.
 - Bug fixes:
  - Applying a user-defined function that adds new dimensions using :py:func:`apply_ufunc`
    and ``vectorize=True`` now works with ``dask > 2.0``. (:issue:`3574`, :pull:`3660`).
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - Fix :py:meth:`~xarray.combine_by_coords` to allow for combining incomplete
    hypercubes of Datasets (:issue:`3648`).  By `Ian Bolliger
    <https://github.com/bolliger32>`_.
  - Fix :py:func:`~xarray.combine_by_coords` when combining cftime coordinates
    which span long time intervals (:issue:`3535`).  By `Spencer Clark
    <https://github.com/spencerkclark>`_.
  - Fix plotting with transposed 2D non-dimensional coordinates. (:issue:`3138`, :pull:`3441`)
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - :py:meth:`plot.FacetGrid.set_titles` can now replace existing row titles of a
    :py:class:`~xarray.plot.FacetGrid` plot. In addition :py:class:`~xarray.plot.FacetGrid` gained
    two new attributes: :py:attr:`~xarray.plot.FacetGrid.col_labels` and
    :py:attr:`~xarray.plot.FacetGrid.row_labels` contain :py:class:`matplotlib.text.Text` handles for both column and
    row labels. These can be used to manually change the labels.
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - Fix issue with Dask-backed datasets raising a ``KeyError`` on some computations involving :py:func:`map_blocks` (:pull:`3598`).
    By `Tom Augspurger <https://github.com/TomAugspurger>`_.
  - Ensure :py:meth:`Dataset.quantile`, :py:meth:`DataArray.quantile` issue the correct error
    when ``q`` is out of bounds (:issue:`3634`) by `Mathias Hauser <https://github.com/mathause>`_.
  - Fix regression in xarray 0.14.1 that prevented encoding times with certain
    ``dtype``, ``_FillValue``, and ``missing_value`` encodings (:issue:`3624`).
    By `Spencer Clark <https://github.com/spencerkclark>`_
  - Raise an error when trying to use :py:meth:`Dataset.rename_dims` to
    rename to an existing name (:issue:`3438`, :pull:`3645`)
    By `Justus Magin <https://github.com/keewis>`_.
  - :py:meth:`Dataset.rename`, :py:meth:`DataArray.rename` now check for conflicts with
    MultiIndex level names.
  - :py:meth:`Dataset.merge` no longer fails when passed a :py:class:`DataArray` instead of a :py:class:`Dataset`.
    By `Tom Nicholas <https://github.com/TomNicholas>`_.
  - Fix a regression in :py:meth:`Dataset.drop`: allow passing any
    iterable when dropping variables (:issue:`3552`, :pull:`3693`)
    By `Justus Magin <https://github.com/keewis>`_.
  - Fixed errors emitted by ``mypy --strict`` in modules that import xarray.
    (:issue:`3695`) by `Guido Imperiale <https://github.com/crusaderky>`_.
  - Allow plotting of binned coordinates on the y axis in :py:meth:`plot.line`
    and :py:meth:`plot.step` plots (:issue:`3571`,
    :pull:`3685`) by `Julien Seguinot <https://github.com/juseg>`_.
 - Documentation:
  - Switch doc examples to use `nbsphinx <https://nbsphinx.readthedocs.io>`_ and replace
    ``sphinx_gallery`` scripts with Jupyter notebooks. (:pull:`3105`, :pull:`3106`, :pull:`3121`)
    By `Ryan Abernathey <https://github.com/rabernat>`_.
  - Added :doc:`example notebook <examples/ROMS_ocean_model>` demonstrating use of xarray with
    Regional Ocean Modeling System (ROMS) ocean hydrodynamic model output. (:pull:`3116`)
    By `Robert Hetland <https://github.com/hetland>`_.
  - Added :doc:`example notebook <examples/ERA5-GRIB-example>` demonstrating the visualization of
    ERA5 GRIB data. (:pull:`3199`)
    By `Zach Bruick <https://github.com/zbruick>`_ and
    `Stephan Siemen <https://github.com/StephanSiemen>`_.
  - Added examples for :py:meth:`DataArray.quantile`, :py:meth:`Dataset.quantile` and
    ``GroupBy.quantile``. (:pull:`3576`)
    By `Justus Magin <https://github.com/keewis>`_.
  - Add new :doc:`example notebook <examples/apply_ufunc_vectorize_1d>` example notebook demonstrating
    vectorization of a 1D function using :py:func:`apply_ufunc` , dask and numba.
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - Added example for :py:func:`~xarray.map_blocks`. (:pull:`3667`)
    By `Riley X. Brady <https://github.com/bradyrx>`_.
 - Internal Changes:
  - Make sure dask names change when rechunking by different chunk sizes. Conversely, make sure they
    stay the same when rechunking by the same chunk size. (:issue:`3350`)
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - 2x to 5x speed boost (on small arrays) for :py:meth:`Dataset.isel`,
    :py:meth:`DataArray.isel`, and :py:meth:`DataArray.__getitem__` when indexing by int,
    slice, list of int, scalar ndarray, or 1-dimensional ndarray.
    (:pull:`3533`) by `Guido Imperiale <https://github.com/crusaderky>`_.
  - Removed internal method ``Dataset._from_vars_and_coord_names``,
    which was dominated by ``Dataset._construct_direct``. (:pull:`3565`)
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - Replaced versioneer with setuptools-scm. Moved contents of setup.py to setup.cfg.
    Removed pytest-runner from setup.py, as per deprecation notice on the pytest-runner
    project. (:pull:`3714`) by `Guido Imperiale <https://github.com/crusaderky>`_.
  - Use of isort is now enforced by CI.
    (:pull:`3721`) by `Guido Imperiale <https://github.com/crusaderky>`_

-------------------------------------------------------------------
Fri Nov 22 06:11:38 UTC 2019 - Arun Persaud <arun@gmx.de>

- update to version 0.14.1:
  * Breaking changes
    + Broken compatibility with cftime < 1.0.3 . By Deepak Cherian.
      Warning:
      cftime version 1.0.4 is broken (cftime/126); please use version
      1.0.4.2 instead.
    + All leftover support for dates from non-standard calendars
      through netcdftime, the module included in versions of netCDF4
      prior to 1.4 that eventually became the cftime package, has been
      removed in favor of relying solely on the standalone cftime
      package (PR3450). By Spencer Clark.
  * New Features
    + Added the sparse option to unstack(), unstack(), reindex(),
      reindex() (GH3518). By Keisuke Fujii.
    + Added the fill_value option to DataArray.unstack() and
      Dataset.unstack() (GH3518, PR3541). By Keisuke Fujii.
    + Added the max_gap kwarg to interpolate_na() and
      interpolate_na(). This controls the maximum size of the data gap
      that will be filled by interpolation. By Deepak Cherian.
    + Added Dataset.drop_sel() & DataArray.drop_sel() for dropping
      labels. Dataset.drop_vars() & DataArray.drop_vars() have been
      added for dropping variables (including coordinates). The
      existing Dataset.drop() & DataArray.drop() methods remain as a
      backward compatible option for dropping either labels or
      variables, but using the more specific methods is
      encouraged. (PR3475) By Maximilian Roos
    + Added Dataset.map() & GroupBy.map() & Resample.map() for mapping
      / applying a function over each item in the collection,
      reflecting the widely used and least surprising name for this
      operation. The existing apply methods remain for backward
      compatibility, though using the map methods is
      encouraged. (PR3459) By Maximilian Roos
    + Dataset.transpose() and DataArray.transpose() now support an
      ellipsis (...) to represent all ‘other’ dimensions. For example,
      to move one dimension to the front, use .transpose('x',
      ...). (PR3421) By Maximilian Roos
    + Changed xr.ALL_DIMS to equal python’s Ellipsis (...), and
      changed internal usages to use ... directly. As before, you can
      use this to instruct a groupby operation to reduce over all
      dimensions. While we have no plans to remove xr.ALL_DIMS, we
      suggest using .... (PR3418) By Maximilian Roos
    + xarray.dot(), and DataArray.dot() now support the
      dims=... option to sum over the union of dimensions of all input
      arrays (GH3423) by Mathias Hauser.
    + Added new Dataset._repr_html_() and DataArray._repr_html_() to
      improve representation of objects in Jupyter. By default this
      feature is turned off for now. Enable it with
      xarray.set_options(display_style="html"). (PR3425) by Benoit
      Bovy and Julia Signell.
    + Implement dask deterministic hashing for xarray objects. Note
      that xarray objects with a dask.array backend already used
      deterministic hashing in previous releases; this change
      implements it when whole xarray objects are embedded in a dask
      graph, e.g. when DataArray.map() is invoked. (GH3378, PR3446,
      PR3515) By Deepak Cherian and Guido Imperiale.
    + Add the documented-but-missing
      DatasetGroupBy.quantile(). (GH3525, PR3527). By Justus Magin.
  * Bug fixes
    + Ensure an index of type CFTimeIndex is not converted to a
      DatetimeIndex when calling Dataset.rename(),
      Dataset.rename_dims() and Dataset.rename_vars(). By Mathias
      Hauser. (GH3522).
    + Fix a bug in DataArray.set_index() in case that an existing
      dimension becomes a level variable of MultiIndex. (PR3520). By
      Keisuke Fujii.
    + Harmonize _FillValue, missing_value during encoding and decoding
      steps. (PR3502) By Anderson Banihirwe.
    + Fix regression introduced in v0.14.0 that would cause a crash if
      dask is installed but cloudpickle isn’t (GH3401) by Rhys Doyle
    + Fix grouping over variables with NaNs. (GH2383, PR3406). By
      Deepak Cherian.
    + Make alignment and concatenation significantly more efficient by
      using dask names to compare dask objects prior to comparing
      values after computation. This change makes it more convenient
      to carry around large non-dimensional coordinate variables
      backed by dask arrays. Existing workarounds involving
      reset_coords(drop=True) should now be unnecessary in most
      cases. (GH3068, GH3311, GH3454, PR3453). By Deepak Cherian.
    + Add support for cftime>=1.0.4. By Anderson Banihirwe.
    + Rolling reduction operations no longer compute dask arrays by
      default. (GH3161). In addition, the allow_lazy kwarg to reduce
      is deprecated. By Deepak Cherian.
    + Fix GroupBy.reduce() when reducing over multiple
      dimensions. (GH3402). By Deepak Cherian
    + Allow appending datetime and bool data variables to zarr
      stores. (GH3480). By Akihiro Matsukawa.
    + Add support for numpy >=1.18 (); bugfix mean() on datetime64
      arrays on dask backend (GH3409, PR3537). By Guido Imperiale.
    + Add support for pandas >=0.26 (GH3440). By Deepak Cherian.
    + Add support for pseudonetcdf >=3.1 (PR3485). By Barron
      Henderson.
  * Documentation
    + Fix leap year condition in monthly means example. By Mickaël
      Lalande.
    + Fix the documentation of DataArray.resample() and
      Dataset.resample(), explicitly stating that a datetime-like
      dimension is required. (PR3400) By Justus Magin.
    + Update the Terminology page to address multidimensional
      coordinates. (PR3410) By Jon Thielen.
    + Fix the documentation of Dataset.integrate() and
      DataArray.integrate() and add an example to
      Dataset.integrate(). (PR3469) By Justus Magin.
  * Internal Changes
    + Added integration tests against pint. (PR3238, PR3447, PR3493,
      PR3508) by Justus Magin.
      Note:
      At the moment of writing, these tests as well as the ability to
      use pint in general require a highly experimental version of
      pint (install with pip install
      git+https://github.com/andrewgsavage/pint.git@refs/pull/6/head). Even
      with it, interaction with non-numpy array libraries, e.g. dask
      or sparse, is broken.
    + Use Python 3.6 idioms throughout the codebase. (PR3419) By
      Maximilian Roos
    + Run basic CI tests on Python 3.8. (PR3477) By Maximilian Roos
    + Enable type checking on default sentinel values (PR3472) By
      Maximilian Roos
    + Add Variable._replace() for simpler replacing of a subset of
      attributes (PR3472) By Maximilian Roos

-------------------------------------------------------------------
Thu Oct 24 19:52:12 UTC 2019 - Todd R <toddrme2178@gmail.com>

- update to version 0.14.0
  + Breaking changes
    * Dropped the `drop=False` optional parameter from Variable.isel.
      It was unused and doesn't make sense for a Variable.
  + New functions/methods
    * Added xarray.map_blocks, modeled after dask.array.map_blocks.
      Also added Dataset.unify_chunks, DataArray.unify_chunks and
      testing.assert_chunks_equal
  + Enhancements
    * xarray.core.GroupBy enhancements.
      > Added a repr
      > Added a ``GroupBy.dims`` property that mirrors the dimensions
        of each group.
    * Speed up Dataset.isel up to 33% and DataArray.isel up to 25% for small
      arrays
  + Bug fixes
    * Reintroduce support for weakref (broken in v0.13.0). Support has been
      reinstated for DataArray and Dataset objects only. Internal xarray
      objects remain unaddressable by weakref in order to save memory
    * Line plots with the x or y argument set to a 1D non-dimensional coord
      now plot the correct data for 2D DataArrays
    * Make xarray.concat more robust when merging variables present in some datasets but
      not others.
    * The default behaviour of reducing across all dimensions for
      xarray.core.groupby.DataArrayGroupBy objects has now been properly removed
      as was done for xarray.core.groupby.DatasetGroupBy in 0.13.0.
      Use xarray.ALL_DIMS if you need to replicate previous behaviour.
      Also raise nicer error message when no groups are created.
    * Fix error in concatenating unlabeled dimensions.

-------------------------------------------------------------------
Sat Sep 21 19:53:35 UTC 2019 - Arun Persaud <arun@gmx.de>

- update to version 0.13.0:
  * Breaking changes
    + This release increases the minimum required Python version from
      3.5.0 to 3.5.3 (GH3089). By Guido Imperiale.
    + The isel_points and sel_points methods are removed, having been
      deprecated since v0.10.0. These are redundant with the isel /
      sel methods. See Vectorized Indexing for the details By
      Maximilian Roos
    + The inplace kwarg for public methods now raises an error, having
      been deprecated since v0.11.0. By Maximilian Roos
    + concat() now requires the dim argument. Its indexers, mode and
      concat_over kwargs have now been removed. By Deepak Cherian
    + Passing a list of colors in cmap will now raise an error, having
      been deprecated since v0.6.1.
    + Most xarray objects now define __slots__. This reduces overall
      RAM usage by ~22% (not counting the underlying numpy buffers);
      on CPython 3.7/x64, a trivial DataArray has gone down from 1.9kB
      to 1.5kB.
      Caveats:
      o Pickle streams produced by older versions of xarray can’t be
        loaded using this release, and vice versa.
      o Any user code that was accessing the __dict__ attribute of
        xarray objects will break. The best practice to attach custom
        metadata to xarray objects is to use the attrs dictionary.
      o Any user code that defines custom subclasses of xarray classes
        must now explicitly define __slots__ itself. Subclasses that
        don’t add any attributes must state so by defining __slots__ =
        () right after the class header. Omitting __slots__ will now
        cause a FutureWarning to be logged, and will raise an error in a
        later release.
      (GH3250) by Guido Imperiale.
    + The default dimension for Dataset.groupby(), Dataset.resample(),
      DataArray.groupby() and DataArray.resample() reductions is now
      the grouping or resampling dimension.
    + DataArray.to_dataset() requires name to be passed as a kwarg
      (previously ambiguous positional arguments were deprecated)
    + Reindexing with variables of a different dimension now raise an
      error (previously deprecated)
    + broadcast_array() is removed (previously deprecated in favor of
      broadcast())
    + Variable.expand_dims() is removed (previously deprecated in
      favor of Variable.set_dims())
  * New functions/methods
    + xarray can now wrap around any NEP18 compliant numpy-like
      library (important: read notes about
      NUMPY_EXPERIMENTAL_ARRAY_FUNCTION in the above link). Added
      explicit test coverage for sparse. (GH3117, GH3202). This
      requires sparse>=0.8.0. By Nezar Abdennur and Guido Imperiale.
    + from_dataframe() and from_series() now support sparse=True for
      converting pandas objects into xarray objects wrapping sparse
      arrays. This is particularly useful with sparsely populated
      hierarchical indexes. (GH3206) By Stephan Hoyer.
    + The xarray package is now discoverable by mypy (although typing
      hints coverage is not complete yet). mypy type checking is now
      enforced by CI. Libraries that depend on xarray and use mypy can
      now remove from their setup.cfg the lines:
         [mypy-xarray]
         ignore_missing_imports = True
      (GH2877, GH3088, GH3090, GH3112, GH3117, GH3207) By Guido
      Imperiale and Maximilian Roos.
    + Added DataArray.broadcast_like() and
      Dataset.broadcast_like(). By Deepak Cherian and David Mertz.
    + Dataset plotting API for visualizing dependencies between two
      DataArrays! Currently only Dataset.plot.scatter() is
      implemented. By Yohai Bar Sinai and Deepak Cherian
    + Added DataArray.head(), DataArray.tail() and DataArray.thin();
      as well as Dataset.head(), Dataset.tail() and Dataset.thin()
      methods. (GH319) By Gerardo Rivera.
  * Enhancements
    + Multiple enhancements to concat() and open_mfdataset(). By
      Deepak Cherian
    + Added compat='override'. When merging, this option picks the
      variable from the first dataset and skips all comparisons.
    + Added join='override'. When aligning, this only checks that
      index sizes are equal among objects and skips checking indexes
      for equality.
    + concat() and open_mfdataset() now support the join kwarg. It is
      passed down to align().
    + concat() now calls merge() on variables that are not
      concatenated (i.e. variables without concat_dim when data_vars
      or coords are "minimal"). concat() passes its new compat kwarg
      down to merge(). (GH2064)
    + Users can avoid a common bottleneck when using open_mfdataset()
      on a large number of files with variables that are known to be
      aligned and some of which need not be concatenated. Slow
      equality comparisons can now be avoided, for e.g.:
        data = xr.open_mfdataset(files, concat_dim='time',
                data_vars='minimal',
                coords='minimal', compat='override', join='override')
    + In to_zarr(), passing mode is not mandatory if append_dim is
      set, as it will automatically be set to 'a' internally. By David
      Brochart.
    + Added the ability to initialize an empty or full DataArray with
      a single value. (GH277) By Gerardo Rivera.
    + to_netcdf() now supports the invalid_netcdf kwarg when used with
      engine="h5netcdf". It is passed to h5netcdf.File(). By Ulrich
      Herter.
    + drop() now supports keyword arguments; dropping index labels by
      using both dim and labels or using a DataArrayCoordinates object
      are deprecated (GH2910). By Gregory Gundersen.
    + Added examples of Dataset.set_index() and DataArray.set_index(),
      as well are more specific error messages when the user passes
      invalid arguments (GH3176). By Gregory Gundersen.
    + filter_by_attrs() now filters the coordinates as well as the
      variables. By Spencer Jones.
  * Bug fixes
    + Improve “missing dimensions” error message for apply_ufunc()
      (GH2078). By Rick Russotto.
    + assign_coords() now supports dictionary arguments (GH3231). By
      Gregory Gundersen.
    + Fix regression introduced in v0.12.2 where copy(deep=True) would
      convert unicode indices to dtype=object (GH3094). By Guido
      Imperiale.
    + Improved error handling and documentation for .expand_dims()
      read-only view.
    + Fix tests for big-endian systems (GH3125). By Graham Inggs.
    + XFAIL several tests which are expected to fail on ARM systems
      due to a datetime issue in NumPy (GH2334). By Graham Inggs.
    + Fix KeyError that arises when using .sel method with float
      values different from coords float type (GH3137). By Hasan
      Ahmad.
    + Fixed bug in combine_by_coords() causing a ValueError if the
      input had an unused dimension with coordinates which were not
      monotonic (GH3150). By Tom Nicholas.
    + Fixed crash when applying distributed.Client.compute() to a
      DataArray (GH3171). By Guido Imperiale.
    + Better error message when using groupby on an empty DataArray
      (GH3037). By Hasan Ahmad.
    + Fix error that arises when using open_mfdataset on a series of
      netcdf files having differing values for a variable attribute of
      type list. (GH3034) By Hasan Ahmad.
    + Prevent argmax() and argmin() from calling dask compute
      (GH3237). By Ulrich Herter.
    + Plots in 2 dimensions (pcolormesh, contour) now allow to specify
      levels as numpy array (GH3284). By Mathias Hauser.
    + Fixed bug in DataArray.quantile() failing to keep attributes
      when keep_attrs was True (GH3304). By David Huard
      https://github.com/huard.
  * Documentation
    + Created a PR checklist as a quick reference for tasks before
      creating a new PR or pushing new commits. By Gregory Gundersen.
    + Fixed documentation to clean up unwanted files created in
      ipython examples (GH3227). By Gregory Gundersen.

-------------------------------------------------------------------
Mon Jul 29 21:32:02 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Disable non-functional dask tests

-------------------------------------------------------------------
Mon Jul 15 19:31:13 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.12.3:
 - New functions/methods:
  - New methods :py:meth:`Dataset.to_stacked_array` and
    :py:meth:`DataArray.to_unstacked_dataset` for reshaping Datasets of variables
    with different dimensions
    (:issue:`1317`).
    This is useful for feeding data from xarray into machine learning models,
    as described in :ref:`reshape.stacking_different`.
 - Enhancements:
  - Support for renaming ``Dataset`` variables and dimensions independently
    with :py:meth:`~Dataset.rename_vars` and :py:meth:`~Dataset.rename_dims`
    (:issue:`3026`).
  - Add ``scales``, ``offsets``, ``units`` and ``descriptions``
    attributes to :py:class:`~xarray.DataArray` returned by
    :py:func:`~xarray.open_rasterio`. (:issue:`3013`)
 - Bug fixes:
  - Resolved deprecation warnings from newer versions of matplotlib and dask.
  - Compatibility fixes for the upcoming pandas 0.25 and NumPy 1.17 releases.
  - Fix summaries for multiindex coordinates (:issue:`3079`).
  - Fix HDF5 error that could arise when reading multiple groups from a file at
    once (:issue:`2954`).

-------------------------------------------------------------------
Sun Jun 30 09:29:36 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.12.2:
 - New functions/methods:
  - Two new functions, :py:func:`~xarray.combine_nested` and
    :py:func:`~xarray.combine_by_coords`, allow for combining datasets along any
    number of dimensions, instead of the one-dimensional list of datasets
    supported by :py:func:`~xarray.concat`.
    The new ``combine_nested`` will accept the datasets as a nested
    list-of-lists, and combine by applying a series of concat and merge
    operations. The new ``combine_by_coords`` instead uses the dimension
    coordinates of datasets to order them.
    :py:func:`~xarray.open_mfdataset` can use either ``combine_nested`` or
    ``combine_by_coords`` to combine datasets along multiple dimensions, by
    specifying the argument ``combine='nested'`` or ``combine='by_coords'``.
    The older function :py:func:`~xarray.auto_combine` has been deprecated,
    because its functionality has been subsumed by the new functions.
    To avoid FutureWarnings switch to using ``combine_nested`` or
    ``combine_by_coords``, (or set the ``combine`` argument in
    ``open_mfdataset``). (:issue:`2159`)
    By `Tom Nicholas <http://github.com/TomNicholas>`_.
  - :py:meth:`~xarray.DataArray.rolling_exp` and
    :py:meth:`~xarray.Dataset.rolling_exp` added, similar to pandas'
    ``pd.DataFrame.ewm`` method. Calling ``.mean`` on the resulting object
    will return an exponentially weighted moving average.
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - New :py:func:`DataArray.str <core.accessor_str.StringAccessor>` for string
    related manipulations, based on ``pandas.Series.str``.
    By `0x0L <https://github.com/0x0L>`_.
  - Added ``strftime`` method to ``.dt`` accessor, making it simpler to hand a
    datetime ``DataArray`` to other code expecting formatted dates and times.
    (:issue:`2090`). :py:meth:`~xarray.CFTimeIndex.strftime` is also now
    available on :py:class:`CFTimeIndex`.
    By `Alan Brammer <https://github.com/abrammer>`_ and
    `Ryan May <https://github.com/dopplershift>`_.
  - :py:meth:`~xarray.core.GroupBy.quantile` is now a method of ``GroupBy``
    objects  (:issue:`3018`).
    By `David Huard <https://github.com/huard>`_.
  - Argument and return types are added to most methods on ``DataArray`` and
    ``Dataset``, allowing static type checking both within xarray and external
    libraries. Type checking with `mypy <http://mypy-lang.org/>`_ is enabled in
    CI (though not required yet).
    By `Guido Imperiale <https://github.com/crusaderky>`_
    and `Maximilian Roos <https://github.com/max-sixty>`_.
 - Enhancements to existing functionality:
  - Add ``keepdims`` argument for reduce operations (:issue:`2170`)
    By `Scott Wales <https://github.com/ScottWales>`_.
  - Enable ``@`` operator for DataArray. This is equivalent to :py:meth:`DataArray.dot`
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - Add ``fill_value`` argument for reindex, align, and merge operations
    to enable custom fill values. (:issue:`2876`)
    By `Zach Griffith <https://github.com/zdgriffith>`_.
  - :py:meth:`DataArray.transpose` now accepts a keyword argument
    ``transpose_coords`` which enables transposition of coordinates in the
    same way as :py:meth:`Dataset.transpose`. :py:meth:`DataArray.groupby`
    :py:meth:`DataArray.groupby_bins`, and :py:meth:`DataArray.resample` now
    accept a keyword argument ``restore_coord_dims`` which keeps the order
    of the dimensions of multi-dimensional coordinates intact (:issue:`1856`).
    By `Peter Hausamann <http://github.com/phausamann>`_.
  - Better warning message when supplying invalid objects to ``xr.merge``
    (:issue:`2948`).  By `Mathias Hauser <https://github.com/mathause>`_.
  - Add ``errors`` keyword argument to :py:meth:`Dataset.drop` and :py:meth:`Dataset.drop_dims`
    that allows ignoring errors if a passed label or dimension is not in the dataset
    (:issue:`2994`).
    By `Andrew Ross <https://github.com/andrew-c-ross>`_.
 - IO related enhancements:
  - Implement :py:func:`~xarray.load_dataset` and
    :py:func:`~xarray.load_dataarray` as alternatives to
    :py:func:`~xarray.open_dataset` and :py:func:`~xarray.open_dataarray` to
    open, load into memory, and close files, returning the Dataset or DataArray.
    These functions are helpful for avoiding file-lock errors when trying to
    write to files opened using ``open_dataset()`` or ``open_dataarray()``.
    (:issue:`2887`)
    By `Dan Nowacki <https://github.com/dnowacki-usgs>`_.
  - It is now possible to extend existing :ref:`io.zarr` datasets, by using
    ``mode='a'`` and the new ``append_dim`` argument in
    :py:meth:`~xarray.Dataset.to_zarr`.
    By `Jendrik Jördening <https://github.com/jendrikjoe>`_,
    `David Brochart <https://github.com/davidbrochart>`_,
    `Ryan Abernathey <https://github.com/rabernat>`_ and
    `Shikhar Goenka <https://github.com/shikharsg>`_.
  - ``xr.open_zarr`` now accepts manually specified chunks with the ``chunks=``
    parameter. ``auto_chunk=True`` is equivalent to ``chunks='auto'`` for
    backwards compatibility. The ``overwrite_encoded_chunks`` parameter is
    added to remove the original zarr chunk encoding.
    By `Lily Wang <https://github.com/lilyminium>`_.
  - netCDF chunksizes are now only dropped when original_shape is different,
    not when it isn't found. (:issue:`2207`)
    By `Karel van de Plassche <https://github.com/Karel-van-de-Plassche>`_.
  - Character arrays' character dimension name decoding and encoding handled by
    ``var.encoding['char_dim_name']`` (:issue:`2895`)
    By `James McCreight <https://github.com/jmccreight>`_.
  - open_rasterio() now supports rasterio.vrt.WarpedVRT with custom transform,
    width and height (:issue:`2864`).
    By `Julien Michel <https://github.com/jmichel-otb>`_.
 - Bug fixes:
  - Rolling operations on xarray objects containing dask arrays could silently
    compute the incorrect result or use large amounts of memory (:issue:`2940`).
    By `Stephan Hoyer <https://github.com/shoyer>`_.
  - Don't set encoding attributes on bounds variables when writing to netCDF.
    (:issue:`2921`)
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - NetCDF4 output: variables with unlimited dimensions must be chunked (not
    contiguous) on output. (:issue:`1849`)
    By `James McCreight <https://github.com/jmccreight>`_.
  - indexing with an empty list creates an object with zero-length axis (:issue:`2882`)
    By `Mayeul d'Avezac <https://github.com/mdavezac>`_.
  - Return correct count for scalar datetime64 arrays (:issue:`2770`)
    By `Dan Nowacki <https://github.com/dnowacki-usgs>`_.
  - Fixed max, min exception when applied to a multiIndex (:issue:`2923`)
    By `Ian Castleden <https://github.com/arabidopsis>`_
  - A deep copy deep-copies the coords (:issue:`1463`)
    By `Martin Pletcher <https://github.com/pletchm>`_.
  - Increased support for `missing_value` (:issue:`2871`)
    By `Deepak Cherian <https://github.com/dcherian>`_.
  - Removed usages of `pytest.config`, which is deprecated (:issue:`2988`)
    By `Maximilian Roos <https://github.com/max-sixty>`_.
  - Fixed performance issues with cftime installed (:issue:`3000`)
    By `0x0L <https://github.com/0x0L>`_.
  - Test suite fixes for newer versions of pytest (:issue:`3011`, :issue:`3032`).
    By `Maximilian Roos <https://github.com/max-sixty>`_
    and `Stephan Hoyer <https://github.com/shoyer>`_.
  - update to version 0.12.1:
 - Enhancements:
  - Allow ``expand_dims`` method to support inserting/broadcasting dimensions
    with size > 1. (:issue:`2710`)
    By `Martin Pletcher <https://github.com/pletchm>`_.
 - Bug fixes:
  - Dataset.copy(deep=True) now creates a deep copy of the attrs (:issue:`2835`).
    By `Andras Gefferth <https://github.com/kefirbandi>`_.
  - Fix incorrect ``indexes`` resulting from various ``Dataset`` operations
    (e.g., ``swap_dims``, ``isel``, ``reindex``, ``[]``) (:issue:`2842`,
    :issue:`2856`).
    By `Stephan Hoyer <https://github.com/shoyer>`_.

-------------------------------------------------------------------
Tue May 28 01:54:37 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Disable known failing tests on arm.
  See gh#pydata/xarray#2334

-------------------------------------------------------------------
Tue Apr 23 09:44:22 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Just use %pytest macro

-------------------------------------------------------------------
Sun Apr  7 11:37:34 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- Update to version 0.12.1:
 - Enhancements
  - Allow ``expand_dims`` method to support inserting/broadcasting dimensions
    with size > 1. (:issue:`2710`)
 - Bug fixes
  - Dataset.copy(deep=True) now creates a deep copy of the attrs (:issue:`2835`).
  - Fix incorrect ``indexes`` resulting from various ``Dataset`` operations
    (e.g., ``swap_dims``, ``isel``, ``reindex``, ``[]``) (:issue:`2842`,
    :issue:`2856`).

-------------------------------------------------------------------
Sat Mar 16 22:38:17 UTC 2019 - Arun Persaud <arun@gmx.de>

- specfile:
  * since this version is for python3 only, add a hint to skip python 2 during the build

- update to version 0.12.0:
  * Highlights include:
    + Removed support for Python 2. This is the first version of
      xarray that is Python 3 only!
    + New coarsen() and integrate() methods. See Coarsen large arrays
      and Computation using Coordinates for details.
    + Many improvements to cftime support. See below for details.
  * Deprecations
    + The compat argument to Dataset and the encoding argument to
      DataArray are deprecated and will be removed in a future
      release. (GH1188) By Maximilian Roos.
  * cftime related enhancements
    + Resampling of standard and non-standard calendars indexed by
      CFTimeIndex is now possible. (GH2191). By Jwen Fai Low and
      Spencer Clark.
    + Taking the mean of arrays of cftime.datetime objects, and by
      extension, use of coarsen() with cftime.datetime coordinates is
      now possible. By Spencer Clark.
    + Internal plotting now supports cftime.datetime objects as time
      series. (GH2164) By Julius Busecke and Spencer Clark.
    + cftime_range() now supports QuarterBegin and QuarterEnd offsets
      (GH2663). By Jwen Fai Low
    + open_dataset() now accepts a use_cftime argument, which can be
      used to require that cftime.datetime objects are always used, or
      never used when decoding dates encoded with a standard
      calendar. This can be used to ensure consistent date types are
      returned when using open_mfdataset() (GH1263) and/or to silence
      serialization warnings raised if dates from a standard calendar
      are found to be outside the pandas.Timestamp-valid range
      (GH2754). By Spencer Clark.
    + pandas.Series.dropna() is now supported for a pandas.Series
      indexed by a CFTimeIndex (GH2688). By Spencer Clark.
  * Other enhancements
    + Added ability to open netcdf4/hdf5 file-like objects with
      open_dataset. Requires (h5netcdf>0.7 and h5py>2.9.0). (GH2781)
      By Scott Henderson
    + Add data=False option to to_dict() methods. (GH2656) By Ryan
      Abernathey
    + DataArray.coarsen() and Dataset.coarsen() are newly added. See
      Coarsen large arrays for details. (GH2525) By Keisuke Fujii.
    + Upsampling an array via interpolation with resample is now
      dask-compatible, as long as the array is not chunked along the
      resampling dimension. By Spencer Clark.
    + xarray.testing.assert_equal() and
      xarray.testing.assert_identical() now provide a more detailed
      report showing what exactly differs between the two objects
      (dimensions / coordinates / variables / attributes) (GH1507). By
      Benoit Bovy.
    + Add tolerance option to resample() methods bfill, pad,
      nearest. (GH2695) By Hauke Schulz.
    + DataArray.integrate() and Dataset.integrate() are newly
      added. See Computation using Coordinates for the
      detail. (GH1332) By Keisuke Fujii.
    + Added drop_dims() (GH1949). By Kevin Squire.
  * Bug fixes
    + Silenced warnings that appear when using pandas 0.24. By Stephan
      Hoyer
    + Interpolating via resample now internally specifies
      bounds_error=False as an argument to scipy.interpolate.interp1d,
      allowing for interpolation from higher frequencies to lower
      frequencies. Datapoints outside the bounds of the original time
      coordinate are now filled with NaN (GH2197). By Spencer Clark.
    + Line plots with the x argument set to a non-dimensional coord
      now plot the correct data for 1D DataArrays. (GH27251). By Tom
      Nicholas.
    + Subtracting a scalar cftime.datetime object from a CFTimeIndex
      now results in a pandas.TimedeltaIndex instead of raising a
      TypeError (GH2671). By Spencer Clark.
    + backend_kwargs are no longer ignored when using open_dataset
      with pynio engine (:issue:‘2380’) By Jonathan Joyce.
    + Fix open_rasterio creating a WKT CRS instead of PROJ.4 with
      rasterio 1.0.14+ (GH2715). By David Hoese.
    + Masking data arrays with xarray.DataArray.where() now returns an
      array with the name of the original masked array (GH2748 and
      GH2457). By Yohai Bar-Sinai.
    + Fixed error when trying to reduce a DataArray using a function
      which does not require an axis argument. (GH2768) By Tom
      Nicholas.
    + Concatenating a sequence of DataArray with varying names sets
      the name of the output array to None, instead of the name of the
      first input array. If the names are the same it sets the name to
      that, instead to the name of the first DataArray in the list as
      it did before. (GH2775). By Tom Nicholas.
    + Per CF conventions, specifying 'standard' as the calendar type
      in cftime_range() now correctly refers to the 'gregorian'
      calendar instead of the 'proleptic_gregorian' calendar (GH2761).

-------------------------------------------------------------------
Wed Feb 13 18:04:03 UTC 2019 - Todd R <toddrme2178@gmail.com>

- update to version 0.11.3
  * Saving files with times encoded with reference dates with timezones
    (e.g. '2000-01-01T00:00:00-05:00') no longer raises an error
  * Fixed performance regression with ``open_mfdataset``
  * Fixed supplying an explicit dimension in the ``concat_dim`` argument to
    to ``open_mfdataset``

-------------------------------------------------------------------
Thu Jan  3 17:40:46 UTC 2019 - Sebastian Wagner <sebix+novell.com@sebix.at>

- update to version 0.11.2:
 - Removes inadvertently introduced setup dependency on pytest-runner (:issue:`2641`). Otherwise, this release is exactly equivalent to 0.11.1.
 - Warning:
  - This is the last xarray release that will support Python 2.7. Future releases will be Python 3 only, but older versions of xarray will always be available for Python 2.7 users. For the more details, see:
- update to version 0.11.1:
 - Breaking changes
  - Minimum rasterio version increased from 0.36 to 1.0 (for open_rasterio)
  - Time bounds variables are now also decoded according to CF conventions (:issue:`2565`). The previous behavior was to decode them only if they had specific time attributes, now these attributes are copied automatically from the corresponding time coordinate. This might brake downstream code that was relying on these variables to be not decoded. By Fabien Maussion.
 - Enhancements
  - Ability to read and write consolidated metadata in zarr stores (:issue:`2558`). By Ryan Abernathey.
  - :py:class:`CFTimeIndex` uses slicing for string indexing when possible (like :py:class:`pandas.DatetimeIndex`), which avoids unnecessary copies. By Stephan Hoyer
  - Enable passing rasterio.io.DatasetReader or rasterio.vrt.WarpedVRT to open_rasterio instead of file path string. Allows for in-memory reprojection, see (:issue:`2588`). By Scott Henderson.
  - Like :py:class:`pandas.DatetimeIndex`, :py:class:`CFTimeIndex` now supports "dayofyear" and "dayofweek" accessors (:issue:`2597`). Note this requires a version of cftime greater than 1.0.2. By Spencer Clark.
  - The option 'warn_for_unclosed_files' (False by default) has been added to allow users to enable a warning when files opened by xarray are deallocated but were not explicitly closed. This is mostly useful for debugging; we recommend enabling it in your test suites if you use xarray for IO. By Stephan Hoyer
  - Support Dask HighLevelGraphs by Matthew Rocklin.
  - :py:meth:`DataArray.resample` and :py:meth:`Dataset.resample` now supports the loffset kwarg just like Pandas. By Deepak Cherian
  - Datasets are now guaranteed to have a 'source' encoding, so the source file name is always stored (:issue:`2550`). By Tom Nicholas.
  - The apply methods for DatasetGroupBy, DataArrayGroupBy, DatasetResample and DataArrayResample now support passing positional arguments to the applied function as a tuple to the args argument. By Matti Eskelinen.
  - 0d slices of ndarrays are now obtained directly through indexing, rather than extracting and wrapping a scalar, avoiding unnecessary copying. By Daniel Wennberg.
  - Added support for fill_value with :py:meth:`~xarray.DataArray.shift` and :py:meth:`~xarray.Dataset.shift` By Maximilian Roos
 - Bug fixes
  - Ensure files are automatically closed, if possible, when no longer referenced by a Python variable (:issue:`2560`). By Stephan Hoyer
  - Fixed possible race conditions when reading/writing to disk in parallel (:issue:`2595`). By Stephan Hoyer
  - Fix h5netcdf saving scalars with filters or chunks (:issue:`2563`). By Martin Raspaud.
  - Fix parsing of _Unsigned attribute set by OPENDAP servers. (:issue:`2583`). By Deepak Cherian
  - Fix failure in time encoding when exporting to netCDF with versions of pandas less than 0.21.1 (:issue:`2623`). By Spencer Clark.
  - Fix MultiIndex selection to update label and level (:issue:`2619`). By Keisuke Fujii.

-------------------------------------------------------------------
Tue Nov 13 14:30:03 UTC 2018 - Marketa Calabkova <mcalabkova@suse.com>

- update to version 0.11.0
  * Enhancements
    + xarray.DataArray.plot.line() can now accept multidimensional 
      coordinate variables as input. hue must be a dimension name 
      in this case. (GH2407) By Deepak Cherian.
    + Added support for Python 3.7. (GH2271). By Joe Hamman.
    + Added support for plotting data with pandas.Interval coordinates, 
      such as those created by groupby_bins() By Maximilian Maahn.
    + Added shift() for shifting the values of a CFTimeIndex by a 
      specified frequency. (GH2244). By Spencer Clark.
    + Added support for using cftime.datetime coordinates with 
      differentiate(), differentiate(), interp(), and interp(). 
      By Spencer Clark
    + There is now a global option to either always keep or always 
      discard dataset and dataarray attrs upon operations. The option 
      is set with xarray.set_options(keep_attrs=True), and the default 
      is to use the old behaviour. By Tom Nicholas.
    + Added a new backend for the GRIB file format based on ECMWF 
      cfgrib python driver and ecCodes C-library. (GH2475) By 
      Alessandro Amici, sponsored by ECMWF.
    + Resample now supports a dictionary mapping from dimension to 
      frequency as its first argument, e.g., 
      data.resample({'time': '1D'}).mean(). This is consistent with 
      other xarray functions that accept either dictionaries or 
      keyword arguments. By Stephan Hoyer.
    + The preferred way to access tutorial data is now to load it 
      lazily with xarray.tutorial.open_dataset(). 
      xarray.tutorial.load_dataset() calls Dataset.load() prior to 
      returning (and is now deprecated). This was changed in order 
      to facilitate using tutorial datasets with dask. By Joe Hamman.
  * Bugfixes    
    + FacetGrid now properly uses the cbar_kwargs keyword argument. 
      (GH1504, GH1717) By Deepak Cherian.
    + Addition and subtraction operators used with a CFTimeIndex now 
      preserve the index’s type. (GH2244). By Spencer Clark.
    + We now properly handle arrays of datetime.datetime and 
      datetime.timedelta provided as coordinates. (GH2512) By 
      `Deepak Cherian <https://github.com/dcherian`_.
    + xarray.DataArray.roll correctly handles multidimensional arrays. 
      (GH2445) By Keisuke Fujii.
    + xarray.plot() now properly accepts a norm argument and does not 
      override the norm’s vmin and vmax. (GH2381) By Deepak Cherian.
    + xarray.DataArray.std() now correctly accepts ddof keyword argument. 
      (GH2240) By Keisuke Fujii.
    + Restore matplotlib’s default of plotting dashed negative contours 
      when a single color is passed to DataArray.contour() e.g. 
      colors='k'. By Deepak Cherian.
    + Fix a bug that caused some indexing operations on arrays opened 
      with open_rasterio to error (GH2454). By Stephan Hoyer.
    + Subtracting one CFTimeIndex from another now returns a 
      pandas.TimedeltaIndex, analogous to the behavior for 
      DatetimeIndexes (GH2484). By Spencer Clark.
    + Adding a TimedeltaIndex to, or subtracting a TimedeltaIndex from 
      a CFTimeIndex is now allowed (GH2484). By Spencer Clark.
    + Avoid use of Dask’s deprecated get= parameter in tests by Matthew Rocklin.
    + An OverflowError is now accurately raised and caught during the 
      encoding process if a reference date is used that is so distant that 
      the dates must be encoded using cftime rather than NumPy (GH2272). 
      By Spencer Clark.
    + Chunked datasets can now roundtrip to Zarr storage continually with 
      to_zarr and open_zarr (GH2300). By Lily Wang.

-------------------------------------------------------------------
Wed Sep 26 03:15:12 UTC 2018 - Arun Persaud <arun@gmx.de>

- update to version 0.10.9:
  * Enhancements
    + differentiate() and differentiate() are newly added. (GH1332) By
      Keisuke Fujii.
    + Default colormap for sequential and divergent data can now be
      set via set_options() (GH2394) By Julius Busecke.
    + min_count option is newly supported in sum(), prod() and sum(),
      and prod(). (GH2230) By Keisuke Fujii.
    + plot() now accepts the kwargs xscale, yscale, xlim, ylim,
      xticks, yticks just like Pandas. Also xincrease=False,
      yincrease=False now use matplotlib’s axis inverting methods
      instead of setting limits. By Deepak Cherian. (GH2224)
    + DataArray coordinates and Dataset coordinates and data variables
      are now displayed as a b … y z rather than a b c d …. (GH1186)
      By Seth P.
    + A new CFTimeIndex-enabled cftime_range() function for use in
      generating dates from standard or non-standard calendars. By
      Spencer Clark.
    + When interpolating over a datetime64 axis, you can now provide a
      datetime string instead of a datetime64
      object. E.g. da.interp(time='1991-02-01') (GH2284) By Deepak
      Cherian.
    + A clear error message is now displayed if a set or dict is
      passed in place of an array (GH2331) By Maximilian Roos.
    + Applying unstack to a large DataArray or Dataset is now much
      faster if the MultiIndex has not been modified after stacking
      the indices. (GH1560) By Maximilian Maahn.
    + You can now control whether or not to offset the coordinates
      when using the roll method and the current behavior, coordinates
      rolled by default, raises a deprecation warning unless
      explicitly setting the keyword argument. (GH1875) By Andrew
      Huang.
    + You can now call unstack without arguments to unstack every
      MultiIndex in a DataArray or Dataset. By Julia Signell.
    + Added the ability to pass a data kwarg to copy to create a new
      object with the same metadata as the original object but using
      new values. By Julia Signell.
  * Bug fixes
    + xarray.plot.imshow() correctly uses the origin
      argument. (GH2379) By Deepak Cherian.
    + Fixed DataArray.to_iris() failure while creating DimCoord by
      falling back to creating AuxCoord. Fixed dependency on var_name
      attribute being set. (GH2201) By Thomas Voigt.
    + Fixed a bug in zarr backend which prevented use with datasets
      with invalid chunk size encoding after reading from an existing
      store (GH2278). By Joe Hamman.
    + Tests can be run in parallel with pytest-xdist By Tony Tung.
    + Follow up the renamings in dask; from dask.ghost to dask.overlap
      By Keisuke Fujii.
    + Now raises a ValueError when there is a conflict between
      dimension names and level names of MultiIndex. (GH2299) By
      Keisuke Fujii.
    + Follow up the renamings in dask; from dask.ghost to dask.overlap
      By Keisuke Fujii.
    + Now xr.apply_ufunc() raises a ValueError when the size of
      input_core_dims is inconsistent with the number of
      arguments. (GH2341) By Keisuke Fujii.
    + Fixed Dataset.filter_by_attrs() behavior not matching
      netCDF4.Dataset.get_variables_by_attributes(). When more than
      one key=value is passed into Dataset.filter_by_attrs() it will
      now return a Dataset with variables which pass all the
      filters. (GH2315) By Andrew Barna.

-------------------------------------------------------------------
Wed Jul 18 17:32:13 UTC 2018 - arun@gmx.de

- specfile:
  * updated dependencies according to setup.py
  * removed devel dependency (noarch)
  * be more specific in %files section

- update to version 0.10.8:
  * Xarray no longer supports python 3.4. Additionally, the minimum
    supported versions of the following dependencies has been updated
    and/or clarified:
    + Pandas: 0.18 -> 0.19
    + NumPy: 1.11 -> 1.12
    + Dask: 0.9 -> 0.16
    + Matplotlib: unspecified -> 1.5
    (:issue:`2204`). By Joe Hamman.

  * Enhancements
    + :py:meth:`~xarray.DataArray.interp_like` and
      :py:meth:`~xarray.Dataset.interp_like` methods are newly
      added. (:issue:`2218`) By Keisuke Fujii.
    + Added support for curvilinear and unstructured generic grids to
      :py:meth:`~xarray.DataArray.to_cdms2` and
      :py:meth:`~xarray.DataArray.from_cdms2` (:issue:`2262`). By
      Stephane Raynaud.
  * Bug fixes
    + Fixed a bug in zarr backend which prevented use with datasets
      with incomplete chunks in multiple dimensions
      (:issue:`2225`). By Joe Hamman.
    + Fixed a bug in :py:meth:`~Dataset.to_netcdf` which prevented
      writing datasets when the arrays had different chunk sizes
      (:issue:`2254`). By Mike Neish.
    + Fixed masking during the conversion to cdms2 objects by
      :py:meth:`~xarray.DataArray.to_cdms2` (:issue:`2262`). By
      Stephane Raynaud.
    + Fixed a bug in 2D plots which incorrectly raised an error when
      2D coordinates weren't monotonic (:issue:`2250`). By Fabien
      Maussion.
    + Fixed warning raised in :py:meth:`~Dataset.to_netcdf` due to
      deprecation of effective_get in dask (:issue:`2238`). By Joe
      Hamman.

-------------------------------------------------------------------
Sun Jun 10 20:04:48 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.10.7:
 * Enhancements:
  * Plot labels now make use of metadata that follow CF conventions (:issue:`2135`). By Deepak Cherian and Ryan Abernathey.
  * Line plots now support facetting with row and col arguments (:issue:`2107`). By Yohai Bar Sinai.
  * :py:meth:`~xarray.DataArray.interp` and :py:meth:`~xarray.Dataset.interp` methods are newly added. See :ref:`interpolating values with interp` for the detail. (:issue:`2079`) By Keisuke Fujii.
 * Bug fixes:
  * Fixed a bug in rasterio backend which prevented use with distributed. The rasterio backend now returns pickleable objects (:issue:`2021`).
- update to version 0.10.6:
 * Enhancements:
  * New PseudoNetCDF backend for many Atmospheric data formats including GEOS-Chem, CAMx, NOAA arlpacked bit and many others. See :ref:`io.PseudoNetCDF` for more details. By Barron Henderson.
  * The :py:class:`Dataset` constructor now aligns :py:class:`DataArray` arguments in data_vars to indexes set explicitly in coords, where previously an error would be raised. (:issue:`674`) By Maximilian Roos.
  * :py:meth:`~DataArray.sel`, :py:meth:`~DataArray.isel` & :py:meth:`~DataArray.reindex`, (and their :py:class:`Dataset` counterparts) now support supplying a dict as a first argument, as an alternative to the existing approach of supplying kwargs. This allows for more robust behavior of dimension names which conflict with other keyword names, or are not strings. By Maximilian Roos.
  * :py:meth:`~DataArray.rename` now supports supplying **kwargs, as an alternative to the existing approach of supplying a dict as the first argument. By Maximilian Roos.
  * :py:meth:`~DataArray.cumsum` and :py:meth:`~DataArray.cumprod` now support aggregation over multiple dimensions at the same time. This is the default behavior when dimensions are not specified (previously this raised an error). By Stephan Hoyer
  * :py:meth:`DataArray.dot` and :py:func:`dot` are partly supported with older dask<0.17.4. (related to :issue:`2203`) By Keisuke Fujii.
  * Xarray now uses Versioneer to manage its version strings. (:issue:`1300`). By Joe Hamman.
 * Bug fixes:
  * Fixed a regression in 0.10.4, where explicitly specifying dtype='S1' or dtype=str in encoding with to_netcdf() raised an error (:issue:`2149`). Stephan Hoyer
  * :py:func:`apply_ufunc` now directly validates output variables (:issue:`1931`). By Stephan Hoyer.
  * Fixed a bug where to_netcdf(..., unlimited_dims='bar') yielded NetCDF files with spurious 0-length dimensions (i.e. b, a, and r) (:issue:`2134`). By Joe Hamman.
  * Removed spurious warnings with Dataset.update(Dataset) (:issue:`2161`) and array.equals(array) when array contains NaT (:issue:`2162`). By Stephan Hoyer.
  * Aggregations with :py:meth:`Dataset.reduce` (including mean, sum, etc) no longer drop unrelated coordinates (:issue:`1470`). Also fixed a bug where non-scalar data-variables that did not include the aggregation dimension were improperly skipped. By Stephan Hoyer
  * Fix :meth:`~DataArray.stack` with non-unique coordinates on pandas 0.23 (:issue:`2160`). By Stephan Hoyer
  * Selecting data indexed by a length-1 CFTimeIndex with a slice of strings now behaves as it does when using a length-1 DatetimeIndex (i.e. it no longer falsely returns an empty array when the slice includes the value in the index) (:issue:`2165`). By Spencer Clark.
  * Fix DataArray.groupby().reduce() mutating coordinates on the input array when grouping over dimension coordinates with duplicated entries (:issue:`2153`). By Stephan Hoyer
  * Fix Dataset.to_netcdf() cannot create group with engine="h5netcdf" (:issue:`2177`). By Stephan Hoyer

-------------------------------------------------------------------
Mon May 21 04:03:17 UTC 2018 - arun@gmx.de

- update to version 0.10.4:
  * Documentation
    + New FAQ entry, What other projects leverage xarray?. By Deepak
      Cherian.
    + Assigning values with indexing now includes examples on how to
      select and assign values to a DataArray with .loc. By Chiara
      Lepore.
  * Enhancements
    + Add an option for using a CFTimeIndex for indexing times with
      non-standard calendars and/or outside the Timestamp-valid range;
      this index enables a subset of the functionality of a standard
      pandas.DatetimeIndex. See Non-standard calendars and dates
      outside the Timestamp-valid range for full details. (GH789,
      GH1084, GH1252) By Spencer Clark with help from Stephan Hoyer.
    + Allow for serialization of cftime.datetime objects (GH789,
      GH1084, GH2008, GH1252) using the standalone cftime library. By
      Spencer Clark.
    + Support writing lists of strings as netCDF attributes
      (GH2044). By Dan Nowacki.
    + to_netcdf() with engine='h5netcdf' now accepts h5py encoding
      settings compression and compression_opts, along with the
      NetCDF4-Python style settings gzip=True and complevel. This
      allows using any compression plugin installed in hdf5, e.g. LZF
      (GH1536). By Guido Imperiale.
    + dot() on dask-backed data will now call
      dask.array.einsum(). This greatly boosts speed and allows
      chunking on the core dims. The function now requires dask >=
      0.17.3 to work on dask-backed data (GH2074). By Guido Imperiale.
    + plot.line() learned new kwargs: xincrease, yincrease that change
      the direction of the respective axes. By Deepak Cherian.
    + Added the parallel option to open_mfdataset(). This option uses
      dask.delayed to parallelize the open and preprocessing steps
      within open_mfdataset. This is expected to provide performance
      improvements when opening many files, particularly when used in
      conjunction with dask’s multiprocessing or distributed
      schedulers (GH1981). By Joe Hamman.
    + New compute option in to_netcdf(), to_zarr(), and
      save_mfdataset() to allow for the lazy computation of netCDF and
      zarr stores. This feature is currently only supported by the
      netCDF4 and zarr backends. (GH1784). By Joe Hamman.
  * Bug fixes
    + ValueError is raised when coordinates with the wrong size are
      assigned to a DataArray. (GH2112) By Keisuke Fujii.
    + Fixed a bug in rolling() with bottleneck. Also, fixed a bug in
      rolling an integer dask array. (GH2113) By Keisuke Fujii.
    + Fixed a bug where keep_attrs=True flag was neglected if
      apply_ufunc() was used with Variable. (GH2114) By Keisuke Fujii.
    + When assigning a DataArray to Dataset, any conflicted
      non-dimensional coordinates of the DataArray are now
      dropped. (GH2068) By Keisuke Fujii.
    + Better error handling in open_mfdataset (GH2077). By Stephan
      Hoyer.
    + plot.line() does not call autofmt_xdate() anymore. Instead it
      changes the rotation and horizontal alignment of labels without
      removing the x-axes of any other subplots in the figure (if
      any). By Deepak Cherian.
    + Colorbar limits are now determined by excluding ±Infs too. By
      Deepak Cherian.
    + Fixed to_iris to maintain lazy dask array after conversion
      (GH2046). By Alex Hilson and Stephan Hoyer.

- changes from version 0.10.3:
  * Enhancements
    + isin() and isin() methods, which test each value in the array
      for whether it is contained in the supplied list, returning a
      bool array. See Selecting values with isin for full
      details. Similar to the np.isin function. By Maximilian Roos.
    + Some speed improvement to construct DataArrayRolling object
      (GH1993) By Keisuke Fujii.
    + Handle variables with different values for missing_value and
      _FillValue by masking values for both attributes; previously
      this resulted in a ValueError. (GH2016) By Ryan May.
  * Bug fixes
    + Fixed decode_cf function to operate lazily on dask arrays
      (GH1372). By Ryan Abernathey.
    + Fixed labeled indexing with slice bounds given by xarray objects
      with datetime64 or timedelta64 dtypes (GH1240). By Stephan
      Hoyer.
    + Attempting to convert an xarray.Dataset into a numpy array now
      raises an informative error message. By Stephan Hoyer.
    + Fixed a bug in decode_cf_datetime where int32 arrays weren’t
      parsed correctly (GH2002). By Fabien Maussion.
    + When calling xr.auto_combine() or xr.open_mfdataset() with a
      concat_dim, the resulting dataset will have that one-element
      dimension (it was silently dropped, previously) (GH1988). By Ben
      Root.

-------------------------------------------------------------------
Sat Apr 14 12:41:49 UTC 2018 - sebix+novell.com@sebix.at

- temporarily deactivated tests because of minor issues with netCDF library
  see https://github.com/pydata/xarray/issues/2050
- update to version 0.10.3:
 * Enhancements
  - :py:meth:`~xarray.DataArray.isin` and :py:meth:`~xarray.Dataset.isin` methods,
    which test each value in the array for whether it is contained in the
    supplied list, returning a bool array. See :ref:`selecting values with isin`
    for full details. Similar to the ``np.isin`` function.
    By `Maximilian Roos <https://github.com/maxim-lian>`_.
  - Some speed improvement to construct :py:class:`~xarray.DataArrayRolling`
    object (:issue:`1993`)
    By `Keisuke Fujii <https://github.com/fujiisoup>`_.
  - Handle variables with different values for ``missing_value`` and
    ``_FillValue`` by masking values for both attributes; previously this
    resulted in a ``ValueError``. (:issue:`2016`)
    By `Ryan May <https://github.com/dopplershift>`_.
 * Bug fixes
  - Fixed ``decode_cf`` function to operate lazily on dask arrays
    (:issue:`1372`). By `Ryan Abernathey <https://github.com/rabernat>`_.
  - Fixed labeled indexing with slice bounds given by xarray objects with
    datetime64 or timedelta64 dtypes (:issue:`1240`).
    By `Stephan Hoyer <https://github.com/shoyer>`_.
  - Attempting to convert an xarray.Dataset into a numpy array now raises an
    informative error message.
    By `Stephan Hoyer <https://github.com/shoyer>`_.
  - Fixed a bug in decode_cf_datetime where ``int32`` arrays weren't parsed
    correctly (:issue:`2002`).
    By `Fabien Maussion <https://github.com/fmaussion>`_.
  - When calling `xr.auto_combine()` or `xr.open_mfdataset()` with a `concat_dim`,
    the resulting dataset will have that one-element dimension (it was
    silently dropped, previously) (:issue:`1988`).
    By `Ben Root <https://github.com/WeatherGod>`_.

-------------------------------------------------------------------
Sat Mar 24 00:09:34 UTC 2018 - arun@gmx.de

- update to version 0.10.2:
  * Backwards incompatible changes
    + The addition of __array_ufunc__ for xarray objects (see below)
      means that NumPy ufunc methods (e.g., np.add.reduce) that
      previously worked on xarray.DataArray objects by converting them
      into NumPy arrays will now raise NotImplementedError instead. In
      all cases, the work-around is simple: convert your objects
      explicitly into NumPy arrays before calling the ufunc (e.g.,
      with .values).
  * Enhancements
    + Added dot(), equivalent to np.einsum(). Also, dot() now supports
      dims option, which specifies the dimensions to sum
      over. (GH1951) By Keisuke Fujii.
    + Support for writing xarray datasets to netCDF files (netcdf4
      backend only) when using the dask.distributed scheduler
      (GH1464). By Joe Hamman.
    + Support lazy vectorized-indexing. After this change, flexible
      indexing such as orthogonal/vectorized indexing, becomes
      possible for all the backend arrays. Also, lazy transpose is now
      also supported. (GH1897) By Keisuke Fujii.
    + Implemented NumPy’s __array_ufunc__ protocol for all xarray
      objects (GH1617). This enables using NumPy ufuncs directly on
      xarray.Dataset objects with recent versions of NumPy (v1.13 and
      newer):
         In [1]: ds = xr.Dataset({'a': 1})

         In [2]: np.sin(ds)
         Out[2]:
         <xarray.Dataset>
         Dimensions:  ()
         Data variables:
             a        float64 0.8415

      This obliviates the need for the xarray.ufuncs module, which
      will be deprecated in the future when xarray drops support for
      older versions of NumPy. By Stephan Hoyer.
    + Improve rolling() logic. DataArrayRolling() object now supports
      construct() method that returns a view of the DataArray /
      Dataset object with the rolling-window dimension added to the
      last axis. This enables more flexible operation, such as strided
      rolling, windowed rolling, ND-rolling, short-time FFT and
      convolution. (GH1831, GH1142, GH819) By Keisuke Fujii.
    + line() learned to make plots with data on x-axis if so
      specified. (GH575) By Deepak Cherian.
  * Bug fixes
    + Raise an informative error message when using apply_ufunc with
      numpy v1.11 (GH1956). By Stephan Hoyer.
    + Fix the precision drop after indexing datetime64 arrays
      (GH1932). By Keisuke Fujii.
    + Silenced irrelevant warnings issued by open_rasterio
      (GH1964). By Stephan Hoyer.
    + Fix kwarg colors clashing with auto-inferred cmap (GH1461) By
      Deepak Cherian.
    + Fix imshow() error when passed an RGB array with size one in a
      spatial dimension. By Zac Hatfield-Dodds.

-------------------------------------------------------------------
Sun Mar  4 09:34:18 UTC 2018 - jengelh@inai.de

- Replace future goals and aims by present capabilities.

-------------------------------------------------------------------
Thu Mar  1 11:44:58 UTC 2018 - sebix+novell.com@sebix.at

- update to version 0.10.1:
 * please see upstream changelog at: https://github.com/pydata/xarray/blob/v0.10.1/doc/whats-new.rst
- remove check boundary condition
- run spec-cleaner
- use %license for license

-------------------------------------------------------------------
Tue Aug 15 19:22:58 UTC 2017 - toddrme2178@gmail.com

- Implement single-spec version
- Update to 0.9.6
  * Please see changelog at:
    https://github.com/pydata/xarray/blob/v0.9.6/doc/whats-new.rst

-------------------------------------------------------------------
Thu Jan 28 13:02:36 UTC 2016 - toddrme2178@gmail.com

- Rename package to python3-xray to match upstream naming.
- update to version 0.7.0:
  * The project formerly known as "xray" is now "xarray", pronounced "x-array"!
    This avoids a namespace conflict with the entire field of x-ray science. Renaming
    our project seemed like the right thing to do, especially because some
    scientists who work with actual x-rays are interested in using this project in
    their work. Thanks for your understanding and patience in this transition. 
  * Breaking changes
    - The internal data model used by :py:class:`~xray.DataArray` has been
      rewritten to fix several outstanding issues. Internally, ``DataArray``
      is now implemented in terms of ``._variable`` and ``._coords`` 
      attributes instead of holding variables in a ``Dataset`` object.
    - It is no longer possible to convert a DataArray to a Dataset with
      :py:meth:`xray.DataArray.to_dataset` if it is unnamed. This will now
      raise ``ValueError``. If the array is unnamed, you need to supply the
      ``name`` argument.
  * Enhancements
    - Basic support for :py:class:`~pandas.MultiIndex` coordinates on xray objects, including
      indexing, :py:meth:`~DataArray.stack` and :py:meth:`~DataArray.unstack`:
    - Support for reading GRIB, HDF4 and other file formats via PyNIO_. See
      :ref:`io.pynio` for more details.
    - Better error message when a variable is supplied with the same name as
      one of its dimensions.
    - Plotting: more control on colormap parameters (:issue:`642`). ``vmin`` and
      ``vmax`` will not be silently ignored anymore. Setting ``center=False``
      prevents automatic selection of a divergent colormap.
    - New :py:meth:`~xray.Dataset.shift` and :py:meth:`~xray.Dataset.roll` methods
      for shifting/rotating datasets or arrays along a dimension
    - Assigning a ``pandas`` object directly as a ``Dataset`` variable is now permitted. Its
      index names correspond to the ``dims`` of the ``Dataset``, and its data is aligned.
    - Passing a :py:class:`pandas.DataFrame` or :py:class:`pandas.Panel` to a Dataset constructor
      is now permitted.
    - New function :py:func:`~xray.broadcast` for explicitly broadcasting
      ``DataArray`` and ``Dataset`` objects against each other. 
  * Bug fixes
    - Fixes for several issues found on ``DataArray`` objects with the same name
      as one of their coordinates (see :ref:`v0.7.0.breaking` for more details).
    - ``DataArray.to_masked_array`` always returns masked array with mask being an
      array (not a scalar value) (:issue:`684`)
    - Allows for (imperfect) repr of Coords when underlying index is PeriodIndex (:issue:`645`).
    - Fixes for several issues found on ``DataArray`` objects with the same name
      as one of their coordinates (see :ref:`v0.7.0.breaking` for more details).
    - Attempting to assign a ``Dataset`` or ``DataArray`` variable/attribute using
      attribute-style syntax (e.g., ``ds.foo = 42``) now raises an error rather
      than silently failing (:issue:`656`, :issue:`714`).
    - You can now pass pandas objects with non-numpy dtypes (e.g., ``categorical``
      or ``datetime64`` with a timezone) into xray without an error
      (:issue:`716`).
- update to version 0.6.1:
  * The handling of colormaps and discrete color lists for 2D plots in
    :py:meth:`~xray.DataArray.plot` was changed to provide more
    compatibility with matplotlib's contour and contourf functions
    (:issue:`538`). Now discrete lists of colors should be specified
    using colors keyword, rather than cmap.
  * Faceted plotting through :py:class:`~xray.plot.FacetGrid` and the
    :py:meth:`~xray.plot.plot` method. See :ref:`plotting.faceting`
    for more details and examples.
  * :py:meth:`~xray.Dataset.sel` and :py:meth:`~xray.Dataset.reindex`
    now support the tolerance argument for controlling
    nearest-neighbor selection (:issue:`629`):
    This feature requires pandas v0.17 or newer.
  * New encoding argument in :py:meth:`~xray.Dataset.to_netcdf` for
    writing netCDF files with compression, as described in the new
    documentation section on :ref:`io.netcdf.writing_encoded`.
  * Add :py:attr:`~xray.Dataset.real` and
    :py:attr:`~xray.Dataset.imag` attributes to Dataset and DataArray
    (:issue:`553`).
  * More informative error message with
    :py:meth:`~xray.Dataset.from_dataframe` if the frame has duplicate
    columns.
  * xray now uses deterministic names for dask arrays it creates or
    opens from disk. This allows xray users to take advantage of
    dask's nascent support for caching intermediate computation
    results. See :issue:`555` for an example.
  * Forwards compatibility with the latest pandas release
    (v0.17.0). We were using some internal pandas routines for
    datetime conversion, which unfortunately have now changed upstream
    (:issue:`569`).
  * Aggregation functions now correctly skip NaN for data for
    complex128 dtype (:issue:`554`).
  * Fixed indexing 0d arrays with unicode dtype (:issue:`568`).
  * :py:meth:`~xray.DataArray.name` and Dataset keys must be a string
    or None to be written to netCDF (:issue:`533`).
  * :py:meth:`~xray.DataArray.where` now uses dask instead of numpy if
    either the array or other is a dask array. Previously, if other
    was a numpy array the method was evaluated eagerly.
  * Global attributes are now handled more consistently when loading
    remote datasets using engine='pydap' (:issue:`574`).
  * It is now possible to assign to the .data attribute of DataArray
    objects.
  * coordinates attribute is now kept in the encoding dictionary after
    decoding (:issue:`610`).
  * Compatibility with numpy 1.10 (:issue:`617
- update to version 0.6.0:
  * Plotting methods have been implemented on DataArray objects
    :py:meth:`~xray.DataArray.plot` through integration with matplotlib
    (:issue:`185`). For an introduction, see :ref:`plotting`.
  * Variables in netCDF files with multiple missing values are now decoded as
    NaN after issuing a warning if open_dataset is called with
    mask_and_scale=True.
  * We clarified our rules for when the result from an xray operation is a copy
    vs. a view (see :ref:`copies vs views` for more details).
  * Dataset variables are now written to netCDF files in order of appearance
    when using the netcdf4 backend (:issue:`479`).
  * Added :py:meth:`~xray.Dataset.isel_points` and
    :py:meth:`~xray.Dataset.sel_points` to support pointwise indexing of
    Datasets and DataArrays (:issue:`475`).
  * New :py:meth:`~xray.Dataset.where` method for masking xray objects
    according to some criteria. This works particularly well with
    multi-dimensional data:
  * Added new methods :py:meth:`DataArray.diff <xray.DataArray.diff>` and
    :py:meth:`Dataset.diff <xray.Dataset.diff>` for finite difference
    calculations along a given axis.
  * New :py:meth:`~xray.DataArray.to_masked_array` convenience method for
    returning a numpy.ma.MaskedArray.
  * Added new flag "drop_variables" to :py:meth:`~xray.open_dataset` for
    excluding variables from being parsed. This may be useful to drop variables
    with problems or inconsistent values.
  * Fixed aggregation functions (e.g., sum and mean) on big-endian arrays when
    bottleneck is installed (:issue:`489`).
  * Dataset aggregation functions dropped variables with unsigned integer dtype
    (:issue:`505`).
  * .any() and .all() were not lazy when used on xray objects containing dask
    arrays.
  * Fixed an error when attempting to saving datetime64 variables to netCDF
    files when the first element is NaT (:issue:`528`).
  * Fix pickle on DataArray objects (:issue:`515`).
  * Fixed unnecessary coercion of float64 to float32 when using netcdf3 and
    netcdf4_classic formats (:issue:`526`).

-------------------------------------------------------------------
Tue Jul 14 16:27:58 UTC 2015 - toddrme2178@gmail.com

- Initial version

