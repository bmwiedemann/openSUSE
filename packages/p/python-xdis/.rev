<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>2c077cc7f6427a81c888f2c9021534ca</srcmd5>
    <version>4.0.2</version>
    <time>1562159691</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>713049</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>cd6ce4ca8ca8d4558b5ea08be6767a6a</srcmd5>
    <version>4.0.3</version>
    <time>1567679649</time>
    <user>dimstar_suse</user>
    <comment>- Update to 4.0.3:
  * Support 3.8.0beta2; Code38 type with posonlyargcount field
  * Add Python versions 3.4.10, 3.7.4 and 3.6.9
  * script no longer works to install pydisasm; entry_points still works
  * Add pypy 3.6 opcode formatting for MAKE_FUNCTION and EXTENDED_ARG
  * Add format_CALL_function and use it or pypy36
  * Start using &quot;blacken&quot; to reformat Python files</comment>
    <requestid>724511</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>77cc0719bd73c07792686cdcbd872dac</srcmd5>
    <version>4.0.4</version>
    <time>1570180950</time>
    <user>dimstar_suse</user>
    <comment>- Update to 4.0.4:
  * Add most-recent 3.8 magic number
  * Remove some 3.8 invalid escape warnings</comment>
    <requestid>734940</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>494972443ca92f5fefe38718e2eaeb86</srcmd5>
    <version>4.1.1</version>
    <time>1572542291</time>
    <user>dimstar_suse</user>
    <comment>- Update to 4.1.1:
  * Fix unmarshaling 3.4+ object_ref bugs. A big thanks to Armin Rigo of the PyPy team.
  * Add Pypy 3.6+ disassembly, e.g. pypy3.6-7.1.0 and pypy3.6-7.1.1
  * Add Python 3.7.5, 2.7.16, 2.7.17rc1, and 2.7.15candidate1 as a valid releases
  * convert unmarshal if .. elif code to a dictionary lookup with function entries
  * Handle newer Python importlib - thanks to laike9m
  * Add early bytecodes: 1.0, 1.1, 1.2, and 1.6. Going off of pycdc bytecode since this is the only bytecode for these versions I know of
  * Fix bug in Python 3.x decompiling 2.x that contains strings with non-ascii characters
  * More generally, better handling of non-ascii Python 2 strings in both input and output in Python 3
  * pypy 3.6-7.1.0 tolerance</comment>
    <requestid>744161</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>b20aec402cb291ebfd8f0f66cf424ea1</srcmd5>
    <version>4.1.3</version>
    <time>1575464003</time>
    <user>dimstar_suse</user>
    <comment>- Update to 4.1.3:
  * Various dependency fixes

- Update to 4.1.2:
  * Python 3.8.0 magic changed
  * More Pypy 3.6 tolerance
  * Fixed DeprecationWarning; thanks to laike9m</comment>
    <requestid>753274</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>84257c7e12cd698c40b722e94f883ee2</srcmd5>
    <version>4.2.2</version>
    <time>1581087221</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>770565</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>b73031a2a6f925bc827593a0ddadca85</srcmd5>
    <version>4.2.2</version>
    <time>1583775270</time>
    <user>dimstar_suse</user>
    <comment>py38 fix</comment>
    <requestid>783027</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>693adf6fa0d823bc97b0fdcfbdfad553</srcmd5>
    <version>4.2.3</version>
    <time>1585085855</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>787860</requestid>
  </revision>
</revisionlist>
