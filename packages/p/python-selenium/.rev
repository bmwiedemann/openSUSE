<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>b5283239bd5ed95985f8fd5348e7332a</srcmd5>
    <version>3.6.0</version>
    <time>1507755411</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.6.0
  * Fix package name in python webelement module (#4670)
  * Fix python driver examples (#3872)
  * No need to multiply pause by 1000
  * Add pause to action chains
  * only check for proxyType once
  * lowercase proxy type for w3c payload in python #4574
  * guarding against null return value from find_elements in python #4555
  * remove unnecessary pytest marking, address flake8 issues
  * allow IE WebDriver to accept IE Options
  * add IE Options class
  * convert OSS capabilities to W3C equivalent for W3C payload
  * Add Safari to API docs
  * Numerous test fixes
  * Iterate over capabilities in a way to support py2.7 and py3
  * Fix W3C switching to window by name.
  * Support GeckoDriver addon install/uninstall commands  #4215.
  * Move firefox_profile into moz:firefoxOptions.
  * Filter non-W3C capability names out of alwaysMatch.
  * Honor cmd line args passed to Service ctor (#4167)
  * Add expected conditions based on URL to Python Expected Conditions #4160
  * Add network emulation to Chrome Python bindings (#4011)
  * add warning when saving incorrectly named screenshot (#4141)
- Update to version 3.4.1
  * Add back the ability to set profile when using Firefox 45ESR. Fixes #3897
- Update to version Selenium 3.4.0
  * Correct usage of newSession around `firstMatch` and `alwaysMatch`
  * Remove superfluous capabilities that are not needed
  * Add expected condition that waits for all found elements to be visible (#3532)
  * Allow methods wrapped by EventFiringWebDriver and EventFiringWebElement (#806)
  * Dropping `javascriptEnabled` capability for real browsers
  * Use W3C check from parent object instead of assuming from capabilities
  * Bump example source distribution to match latest release.
  * Replace TypeError with KeyError in remote webdriver error handler code (#3826)
  * When testing Marionette use default capabilities in testing
  * Conform to the api of urllib2 for adding header for a request (#3803)
  * Add `text` key to alert#sendKeys parameters for W3C Endpoint
  * Location once scrolled into view should use W3C executeScript endpoint not JSONWP
  * Fixed the usage information in documentation of &quot;save_screenshot&quot;. (#3804)
  * Add Element Not Interactable exception
  * Clean up imports in error handler
  * flake8 cleanup
- Update to version Selenium 3.3.3
  * make w3c execute_script commands unique
- Update to version Selenium 3.3.2
  * Update window commands to use W3C End points
  * Update Alert when in W3C mode to use W3C Endpoints
  * Update to new W3C Execute Script end points
  * Add setting/getting proxy details to Firefox Options
  * Deprecate the use of browser profile when instantiating a session
  * Update start session to handle the W3C New Session
  * Add get/set window rect commands
  * Add InvalidArgumentException
  * When passing in `text` to send_keys, make sure we send a string not array
  * Fix string decoding in remote connection (#3663)
  * Fix indentation to satisfy PEP8
  * Try use old way of setting page load timeout if new way fails. Fixes #3654
  * fix file uploads for Firefox
  * Run unit tests on Python 3.3, 3.4, and 3.5 (#3638)
  * Fix indentation in double_click.
  * Fix non-W3C page load timeout setting.
- Update to version Selenium 3.3.1
  * Fix encoding of basic auth header when using Python 3 Fixes #3622
  * Add initial unit test suite
  * Update W3C Timeout setting to be in line with the specification
  * support.ui.Select class inherits from object (#3067)
  * fix bug in proxy constructor that some properties are not proper set (#3459)
  * Fix flake8 issues (#3628)
- Update to version Selenium 3.3.0
  ** Note ** If you are updating to this version, please also update GeckoDriver to v0.15.0
  * Fix python HTTPS encoding for python driver (#3379)
  * Allow Firefox preferences to be set directly in Options
  * Fix shutdown and process termination (#3263)
  * Preventing exception if log_path is none or empty. Fixes #3128
  * Add the W3C capability to Firefox for accepting insecure certificates
  * Initial implementation of Pointer Actions
  * Only skip tests if driver name matches a directory name.
  * Update calls that return a pure object with keys to look for 'value' key
  * Initial W3C Actions support
  * fix docs output directory
- Implement single-spec version.
- updated to latest official release 3.0.2
- Workaround for finding binary firefox driver in X86_64 patform
- Update to Selenium 2.53.0 (2.53.6 in Pypi)
    * Adding Options object for use with Python FirefoxDriver
    * Fixed improper usage of super in exceptions module
    * create a temp file for cookies in phantomjs if not specified
    * Pass in the executable that FirefoxBinary finds to the service
      if there isnt one passed in as a kwarg or capability
    * Applied some DRY and extracted out the keys_to_typing()
    * Fix deselecting options in &lt;select&gt;
- Changes from Selenium 2.52.0
    * Fixing case where UnexpectedAlertException doesn't get the
      alert_text in the error object
    * Firefox: Actually use launch_browser timeout Fixes #1300
- Changes from Selenium 2.51.1
    * correcting bundling issue missing README.rst file
- Changes from Selenium 2.51.0
    * Firefox updates (see java changelog)
- Update to Selenium 2.50.1
    * Fixing error message handling. Fixes issue #1497
    * Fixing error message handling. Fixes issue #1507
    * Update webelement to handle W3C commands for size/location and rect
    * rewrite click scrolling tests to match the Java ones
- Changes from Selenium 2.50.0
    * handle potential URLError from sending shutdown, set self.process to None after it's already been quit
    * Add support for submit() with W3C compliant endpoint
- Changes from Selenium 2.49.1
    * Ensure you can close stream before attempting to close it.
    * message response may cause json loads ValueError when it's not actually json
      and just a string (like the message that occurs when firefox driver thinks
      another element will receive the click)
    * Cleanup some error handling when sniffing what protocol you are speaking
- Changes from Selenium 2.49.0
    * Have Firefox service write to a file instead of PIPE
    * on osx for firefox, fallback to checking homebrew install, if the default isn't there
    * Added Firefox path variable for string placeholder
    * Update README to show Python 3.2+
    * refactoring all the service classes to use a common one.
    * Add Firefox specific command to switch context between Browser content and Browser chrome
    * updating files after go copyright:update
    * Use specificationLevel to know that we are speaking GeckoDriver
    * Bug fixes: #1294, #1186
- Changes from Selenium 2.48.0
    * Update error pulling to match spec when we encounter a spec compliant browser.
    * Disable tests that are not working with Marionette when running Marionette tests
    * Add the ability to run python marionette tests
    * Python 3 compatibility for remote Authorization
    * changing casing of children finding tests
- Changes from Selenium 2.47.3
    * Bring back py 3 support
- Changes from Selenium 2.47.2
    * Fix running Edge driver locally on win10
    * adding repr to WebDriver and WebElement
- Changes from Selenium 2.47.1
    * Fix the issue of deleting the profile when shutting down Firefox
    * WebElement __eq__ compares against more types
    * Issues fixed: 850
- Changes from Selenium 2.47.0
    * Add in support for when communicating with a Spec compliant browsers
    * Initial support for Edge using EdgeDriver
    * Issues fixed: 818
- Changes Selenium 2.46.1
    * Adding ability to make remote call for webelement screenshots in accordance to the W3C spec
    * Adding api to authenticate HTTP Auth modal dialogs via driver.switch_to.alert (beta)
    * Add rebeccapurple to Color Object
    * Add element screenshot
    * Add service handler and minimal update to driver to use service for Marionette
    * Add the ability to start FirefoxDriver backed with Marionette via a capability
    * support socket timeout for connections
    * free_port checks if port is available on all interfaces
    * Allow error handling to handle both current errors and w3c errors
    * Update find_elements to match spec
    * phantomjs: service: remove unused import of signal
    * phantomjs: add port information to WebDriverException
    * Issues fixed (Github): 478, 612, 734, 780
- Remove foreign architecture binaries to avoid cross architecture dependencies
- Remove ExclusiveArch as the package is moslty noarch, the only exception
  being optional addon for Firefox.
- Update to 2.46.0:
    * Firefox support up to 38
    * BlackBerry browser support
    * remove Presto-Opera support
    * firefox extension extraction fixes 
    * process management fixes with phantomjs
    * Comparing remote web element for equality does not require a remote command
    * Issues Fixed: (gcode) 8493, 8521, 8498, 8274, 8497, 5923
    * Issues Fixed: (github) 401
- Update to 2.45.0:
  * Firefox support up to 35, support for native events up to 34.
  * Make Opera driver support also the new Blink based Opera
  * README: Fix the Yahoo example
  * WebElement docstring fixes
  * Add debugger_address option to the ChromeDriver options list to optionally instruct ChromeDriver to wait for the target devtools instance to be started at a given host:ip
  * Set default value for PhantomJS process reference
  * Allow setting of FileDetector for send_keys
  * Pass info to TimeoutException in WebDriverWait
  * Issues Fixed: 8065, 8310, 8539
- Update to version 2.43
  * Expand WebElement.get_attribute API docs
  * firefox may be installed without admininstrator privileges
    and therefore there may be no HKEY_LOCAL_MACHINE entry. 
    Issue #7784
  * UnexpectedAlertPresentException should contain the alert text 
    in python too. Issue #7745
  * don't mutate the global 'ignored exceptions', take a copy of 
    the globally specified ones, change the global to be a tuple 
    instead. Issue #7725
  * raise exception when the firefox binary isn't actually found, 
    which usually implies the upgrade failed (on windows) 
    Issue #6092 ,#6847
  * Fixing NameError: global name 'options' is not defined.
  * Remove unused import subprocess.PIPE
  * Redirect Firefox output to /dev/null by default 
    Fixes Issue #7677
  * More flexible management of http timeouts in Selenium RC python 
    client
  * Generate Python API docs for selenium.webdriver.chrome.options. 
    Fixes issue #7471
  * Use 127.0.0.1 as localhost name resolving might fail on some 
    systems
- Update to version 2.42.1
  * Fixed Py3 issues
  * Make firefox_binary.py and firefox_profile.py not executable
  * Make exceptions Python 3 compatible
- Update to version 2.42
  * Support for Firefox 29 Native Events
  * &quot;remote_url&quot; and &quot;remote_browser&quot; parameters for &quot;./go test_remote&quot;.
  * missing __init__ in new android module
  * issue #7304 Fix memory leak caused by __del__ in PhantomJS
  * File upload using remotedriver on python3
  * Updating xpi install to align with mozprofile
  * command_executor should also support unicode strings as well.
- Update to version 2.41
  * Support for Firefox 28
  * deprecating switch_to_* in favour of driver.switch_to.*
- Update to version 2.40
  * Support for Firefox 27
  * Fixes related to http connection
  * Fix for phantomjs running on windows #6736
- Update to version 2.39
  * Support for Firefox 26
- Update to version 2.38.4
  * keep-alive can't be used for phantomjs / IE, fix for that and tested for py3 :)
- Update to version 2.38.3
  * really supporting py3 :)
- Update to version 2.38.2
  * py3 support (once again)
- Update to version 2.38.1
  * fix packaging problem where firefox/webdriver_prefs.json was missing
- Update to version 2.38
  * Support for Firefox 25
  * FirefoxProfile now using common webdriver.json instead of having our own copy in py
  * Set proper 'Accept' request header so that Python bindings work with some old WebDriver implementations that reply 404 to requests with no 'Accept' set.
  * handle redirect response explicitly (since switching to using keep-alive)
  * phantomjs service needs to really kill the spawned process Issue #5921
  * removing old api endpoints from command listing
  * using keep-alive for remote connection
  * adjusting phantomjs subprocess.Popen
  * ActionsChains.send_keys should use &lt;session&gt;/keys endpoint Issue #6348
  * fix TypeError in chrome_options.extensions for Python3.x
  * Other Bugs Fixed: #6531, #6513, #4569, #6454
- Update to version 2.37.2
  + fix regression added with unicode fix
  + Bug fix #6360
- Changes from 2.37.1
  + fix find_elements on webelement using unicode locators and py 2.7
- Changes from 2.37
  + repackage with fix for Firefox native events on Linux
  + fix issue with unicode By locators w/ python 2.7 #6430
- Changes from 2.36
  + Added Safari WebDriver. Fixes issue 5352.
  + fix platform for safari caps
  + Convert all offsets/coordinates/speeds into integers
  + Fix drag and drop by offset behaviour
  + Fix initialization of Proxy by capabilities when proxyType is set
  + Enable SOCKS proxy support
  + Validation of passed locator for find_element(s) methods #5690
  + Adding support for /status, /sessions commands
  + Doc fixes
  + ability to set Chrome extensions by using base64 encoded strings #4013
  + fix logic regarding Select.select_by_visible_text #3910
  + Bugs fixed: #6165, #6231
- Add CHANGES to documentation included in package
- Use download Url as source
- update to 2.35.0:
  * Remove duplicate 'get screenshot as file' methods.  Add method 'get_screenshot_as_png'
  * fixing UnicodeEncodeError on get attribute of webelement
- update to 2.34.0:
 * Corrected webdriverbackedselenium session handling.
 * Corrected use of basestring for python 3.
 * Support for Firefox 22
 * Added support for logging from the browser
 * corrected proxy handling on FirefoxProfile
 * Corrected handling of chrome extensions. Fixes issue 5762
 * getText() ignores elements in the &lt;head&gt;
 * Adding both official and informal string representations to Color object.
 * Replace distutils.dir_util by shutil
 * Allow finding firefox binary at ProgramFiles(x86) on windows(64 bit)
 *  Py3 compatible winreg import and content-type access
- update to 2.32.0:
  * Support for FF20 Native Events
  * Allow easy FirefoxBinary subclassing
- Update to 2.31.0:
  * Support for FF19 native events
  * web element equality is now in conformance with other language
    bindings
- Update to 2.30.0:
  * Allow env to be specified for the chromedriver service.
  * Allow log path to be specified for phantomjs driver service.
  * Bug Fixes: 4608 4940 4974 5034 5075.
- Update to 2.29.0:
  * Allow subclassing of driver and have the ability to send_keys
    Issue 4877, 5017
  * Simplifying save_screenshot and allow phantomjs to take
    screenshots
- Removed LICENSE file from %doc because it was removed from upstream
  source.
- Remove 64bit Firefox blob on 32bit to avoid useless runtime
  dependencies (again)
- Update to 2.28.0:
  * Upstream provides no changelog
- Update to 2.27.0:
  * Added support for phantomjs / ghostdriver
- We're not in Factory, so we can safely install the binary extension
  until this is solved otherwise (bnc#788988)
- Update to 2.26:
  * Added location_when_scrolled_into_view - Bug 4357
- Update to 2.25.0:
  * Jython 2.7 Support - Bug 3988
  * EventFiringWebDriver added to Support module - Bug 2267
  * Added IEDriverServer logging that can be accessed via desired
    capabilities
  * Fixed by data being passed into find_elements - bug 3735
  * Removed deprecated ChromeDriver items around desiredcapabilites
    in favour of chrome options
  * Added default values for a number of action_chains calls
- Aditional changes from 2.24:
  * Removing the ctypes approach of invoking IEDriver, you will need
    to download the IEDriverServer from
    https://code.google.com/p/selenium/downloads/list
- Aditional changes from 2.23:
  * Support for FF13 native events
- Update to 2.22.1:
  - Catch an OSError exception when trying to get the EXIF data of
    a touchy image.
- Update to 2.21.3:
  * Fix for File Upload to remote servers
  * Better handling of typing in input=file. Bug 3831, 3736
  * Better handling of unicode URLS Bug 3740
- Update to 2.21.2:
  * Fix typing to file input when not using Selenium Server. Bug 3736
- Package set to noarch again, since it does not include binaries
  anymore.
- Update to 2.21.1:
  * focusmanager.testmode messes with native events, removing it.
- Aditional changes from 2.21:
  * Local File upload capabilities for non-remote browser 
  * Adding maximize_window api call
  * Updating default firefox profile to set focusmanager.testmode to
    true see https://bugzilla.mozilla.org/show_bug.cgi?id=704583
  * bugs fixed: 3506, 3528, 3607
- Don't install the binary Firefox extension until this is solved
  with upstream
- Use upstream tarball
- Simplified macro usage
- Remove unused Windows DLL files
- The package is noarch, it contains binary Firefox modules for x86_64
  and i586
- Therefore add ExclusiveArch: %x86 x86_64
- Update to 2.20.0:
  * disable native events for FF on Mac by default
  * fix webdriverwait to execute at least once when using 0 timeout
  * Fixed Issue 3438
- Update to 2.19.1:
  - Sorry, no changelog atm.
- Update to 2.18.1:
  - Proxy capabilities passing.
- Update to 2.27.0:
  - Sorry, no changelog atm.
- Update to 2.16.0:
  - Sorry, no changelog atm.
- Update to 2.15.0:
  - Sorry, no changelog atm.
- Update to 2.14.0:
  - Fix for LD_PRELOAD being polluted by WebDriver
  - Added Orientation API
  - A fix for Error Handling
- Update to 2.13.1:
  - Sorry, no changelog atm.
- Update to 2.13.0:
  - Fixed switch_to_window so that it didnt crash Firefox Bug 2633
  - Fixed Screenshot handling to work in all browsers. Bug 2829
  - Force Firefox to the Foreground
- Update to 2.12.1:
  - Sorry, no changelog atm
- Update to 2.11.1:
  - Sorry, no changelog atm.
- Update to 2.11.0:
  - Sorry, no changelog atm.
- Update to 2.10.0:
  - &quot;Choose which apps&quot; dialog has been disabled;
  - Bug Fixes
.
- Update to 2.9.0:
  - Sorry, no changelog atm.
- Update to 2.8.1:
  * Actions updates
  * Bug Fixes
- Update to 2.7.0:
  - Sorry, no changelog atm.
- Update to 2.6.0:
  - Documentation fixes.
- Update to 2.5.0:
  - Sorry, no changelog atm.
- Update to 2.4.0:
  - Sorry, no changelog.
- Update to 2.3.0:
  - Sorry, no changelog.
- Update to 2.1.0:
  - Sorry, no changelog.
- Update to 2.0.1:
  - Sorry, no changelog.
- Regenerate spec file with py2pack.
- Update to 1.0.3;
- Building as noarch for openSUSE &gt;= 11.2;
- Spec file cleaned with spec-cleaner.
- Changed default installation path as x86_64 system was installing
  libraries into /usr/lib/python2.6 which is wrong and is not pythons
  default search path 
- Initial package (1.0.1) for openSUSE.
</comment>
    <requestid>531591</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>f39808c75bc2d5b2f2b2e700b752d38b</srcmd5>
    <version>3.6.0</version>
    <time>1507897155</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>533642</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>6bd36d99ad3d1b362e0cd4d0dc90b064</srcmd5>
    <version>3.8.1</version>
    <time>1516804340</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>568825</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>8e3ce430b19ef7b61e05bfad98e55244</srcmd5>
    <version>3.9.0</version>
    <time>1518597875</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>575265</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>8b15e852536994075a63d58c801037c7</srcmd5>
    <version>3.10.0</version>
    <time>1520588679</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>584212</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>487a17616c5382bdb161a5d14c6b056e</srcmd5>
    <version>3.11.0</version>
    <time>1522226027</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>591710</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>aaa4046a6f0291ea8d5c48904f02410a</srcmd5>
    <version>3.12.0</version>
    <time>1526023118</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>606271</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>1a7effe136410fca2b1ef082f66691d4</srcmd5>
    <version>3.13.0</version>
    <time>1530567193</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>620084</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>041477203f01a2a68063507f15639967</srcmd5>
    <version>3.14.0</version>
    <time>1533412476</time>
    <user>dimstar_suse</user>
    <comment>- Run the tests, taken from upstream git and issue filled upstream

- Update to version 3.14.0
  * [py] Fix doc of URL-related ExpectedCondition (#6236)</comment>
    <requestid>627327</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>39d74287095ae15c9b9a9c39d1fa812a</srcmd5>
    <version>3.14.1</version>
    <time>1537787584</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>637034</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>e64f8d41b696b44dbb3275b07f9dd624</srcmd5>
    <version>3.141.0</version>
    <time>1558515052</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>703772</requestid>
  </revision>
  <revision rev="12" vrev="2">
    <srcmd5>41043bb730a1ba1c9c94b40ef4a7358a</srcmd5>
    <version>3.141.0</version>
    <time>1593378191</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>816847</requestid>
  </revision>
  <revision rev="13" vrev="3">
    <srcmd5>992c2122ff2d73de56b02853186d7473</srcmd5>
    <version>3.141.0</version>
    <time>1598351910</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>828048</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>8fee35ccd5aee89eb2ae776090fa5687</srcmd5>
    <version>4.10.0</version>
    <time>1686336002</time>
    <user>dimstar_suse</user>
    <comment>- Update to 4.10.0:
  * Fix bug preventing proxy from working in Options classes (#12029)
  * Add support for changing pointers in Actions class (#11521)
  * Support newer versions of urllib3 (#11993)
  * Add fine grained control for arguments provided to service subprocesses
    by passing a `popen_kw` mapping for all services.
  * `Options` classes now allow `timeout` to be set partially and no longer
    raise an exception when all values are not provided. (#11623)
  * Fixed a bug in `Service` destructors accessing modules that no longer
    existed during interpreter shutdown.
  * Fix frame_to_be_available_and_switch_to_it() for string inputs (#10963)
  * Use monotonic clock for waits, fixes #10544 (#10550)
  * Use `get_timeout()` for urllib pool manager timeouts in remote
    connection (#10563)
  * update ShadowRoot find element signatures to match those in
    WebElement (#10138)
  * Check the values in NO_PROXY and set the poolmanager accordingly
    (#9925, #9967)
  * Allows None to be set for the sameSite attribute (#9771)
  * Specify that the &quot;find_element_by_* ...&quot; warning is a deprecation
    warning (#9700)
  * Allow 0 coordinates for the window position. Fixes #9574
  * Add the ability to pass in multiple options and have that capabilities
    returned as (first|always)Match
  * Add the ability to pass in different locators to do Relative Locator
    searches
  * Add the ability to enable mobile on options classes
  * Allow overriding the default 250 msecs duration of pointer movement (#9336)
  * Set Chromium Edge to be the default for Edge browsers
  * Add ARIA APIs for getting the role and label of an Element</comment>
    <requestid>1091758</requestid>
  </revision>
  <revision rev="15" vrev="2">
    <srcmd5>e33c515ece02ad615e4e4cbb7f088de8</srcmd5>
    <version>4.10.0</version>
    <time>1687550011</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1094864</requestid>
  </revision>
</revisionlist>
