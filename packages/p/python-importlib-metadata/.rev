<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>f8ae98fdd1ffc9e254d4fe9d3566cda4</srcmd5>
    <version>2.0.0</version>
    <time>1606648701</time>
    <user>dimstar_suse</user>
    <comment>This is needed in the python36 flavor branch (Staging:N).

It does NOT conflict with python38 standard library (see upstream description)</comment>
    <requestid>850139</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>37d994c86a0c2473e4283d7638b7fdca</srcmd5>
    <version>3.1.1</version>
    <time>1608112732</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>853675</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>b110019cf5101a108893cae83b3ff379</srcmd5>
    <version>3.3.0</version>
    <time>1608835246</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>857124</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>6d4127368b66dfb0ee6af6b3faa7c51e</srcmd5>
    <version>3.4.0</version>
    <time>1612182397</time>
    <user>dimstar_suse</user>
    <comment>- update to 3.4.0:
  * Project now declares itself as being typed.
  * Additional performance enhancements to distribution
    discovery.
  * For PyPA projects, add test ensuring that
    ``MetadataPathFinder._search_paths`` honors the needed
    interface. Method is still private.</comment>
    <requestid>866399</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>a33b5fbb55bb1d94225dad14d7f68738</srcmd5>
    <version>3.7.0</version>
    <time>1614948182</time>
    <user>RBrownSUSE</user>
    <comment>- update to 3.7.0:
  * #131: Added ``packages_distributions`` to conveniently
    resolve a top-level package or module to its distribution(s).
  * #284: Introduces new ``EntryPoints`` object, a tuple of
    ``EntryPoint`` objects but with convenience properties for
    selecting and inspecting the results:
    - ``.select()`` accepts ``group`` or ``name`` keyword
      parameters and returns a new ``EntryPoints`` tuple
      with only those that match the selection.
    - ``.groups`` property presents all of the group names.
    - ``.names`` property presents the names of the entry points.
    - Item access (e.g. ``eps[name]``) retrieves a single
      entry point by name.
    ``entry_points`` now accepts &quot;selection parameters&quot;,
    same as ``EntryPoint.select()``.
    ``entry_points()`` now provides a future-compatible
    ``SelectableGroups`` object that supplies the above interface
    but remains a dict for compatibility.
    In the future, ``entry_points()`` will return an
    ``EntryPoints`` object, but provide for backward
    compatibility with a deprecated  ``__getitem__``
    accessor by group and a ``get()`` method.
    If passing selection parameters to ``entry_points``, the
    future behavior is invoked and an ``EntryPoints`` is the
    result.
    Construction of entry points using
    ``dict([EntryPoint, ...])`` is now deprecated and raises
    an appropriate DeprecationWarning and will be removed in
    a future version.
  * #280: ``entry_points`` now only returns entry points for</comment>
    <requestid>876090</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>3c4f146d3cbf670f2510b8d29fd981b7</srcmd5>
    <version>3.7.2</version>
    <time>1619552053</time>
    <user>dimstar_suse</user>
    <comment>- update to 3.7.2:
  * Cleaned up cruft in entry_points docstring.
  * Internal refactoring to facilitate ``entry_points() -&gt; dict``
    deprecation.</comment>
    <requestid>888422</requestid>
  </revision>
</revisionlist>
