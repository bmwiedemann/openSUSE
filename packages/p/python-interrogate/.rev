<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>0415c88d580b2f82b5bffffd2051f467</srcmd5>
    <version>1.2.0</version>
    <time>1602595908</time>
    <user>dimstar_suse</user>
    <comment> </comment>
    <requestid>839736</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>7a6fe7045d69cb47596da9abc0fa062b</srcmd5>
    <version>1.5.0</version>
    <time>1664468030</time>
    <user>RBrownFactory</user>
    <comment></comment>
    <requestid>1006871</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>37c1acef89dbed62f30ea4e6b8d8828b</srcmd5>
    <version>1.7.0</version>
    <time>1713724073</time>
    <user>anag+factory</user>
    <comment>- update to 1.7.0:
  * tomli dependency for Python versions &lt; 3.11, making use of
    tomllib in the standard library with 3.11+ (#150).
  * Support for pyi file extensions (and leave room for other
    file extensions to be added, like maybe ipynb).
  * Support for Google-style docstrings for class __init__
    methods with new --style [sphinx|google] flag (#128).
  * Include support for deleters when ignoring property
    decorators (#126
    &lt;https://github.com/econchick/interrogate/issues/126&gt;_).
  * Support floats for --fail-under values (#114).
  * toml dependency for all Python versions (#150).
  * Add --ignore-overloaded-functions flag to ignore overload
    decorators (#97) â€“ thank you ErwinJunge (via #167) and
    zackyancey.
  * Support for Python 3.11 &amp; 3.12.
  * Support for Python 3.6 &amp; 3.7.</comment>
    <requestid>1169387</requestid>
  </revision>
  <revision rev="4" vrev="2">
    <srcmd5>412e915e0ae1551b2b1a621911e14a20</srcmd5>
    <version>1.7.0</version>
    <time>1748608458</time>
    <user>dimstar_suse</user>
    <comment>- Convert to pip-based build
</comment>
    <requestid>1280875</requestid>
  </revision>
  <revision rev="5" vrev="3">
    <srcmd5>60e2cb5983d379e6953a7a320a1a54b6</srcmd5>
    <version>1.7.0</version>
    <time>1749539218</time>
    <user>anag_factory</user>
    <comment>- Convert to libalternatives</comment>
    <requestid>1284025</requestid>
  </revision>
</revisionlist>
