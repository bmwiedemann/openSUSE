<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>4b6cfc7ef21e6715f11ea9924950ce8f</srcmd5>
    <version>2.4.1</version>
    <time>1564302120</time>
    <user>dimstar_suse</user>
    <comment>Tool to access multiple neuroimaging data formats</comment>
    <requestid>718909</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>dee67395938c10a6405e2cd6148b675b</srcmd5>
    <version>2.4.1</version>
    <time>1564483149</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>719706</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>a42461331dd2a2f2dc3de2716880c337</srcmd5>
    <version>2.5.1</version>
    <time>1574242121</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>749762</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>a68653d532fd6e4726639ad594310c1a</srcmd5>
    <version>3.0.1</version>
    <time>1583526483</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.0.1:
  * Test failed by using array method on tuple. (pr/860) (Ben Darwin, reviewed by CM)
  * Validate ExpiredDeprecationErrors, promoted by 3.0 release from DeprecationWarnings. (pr/857) (CM)
  * Improve testing of data scaling in ArrayProxy API (pr/847) (CM, reviewed by Alejandro de la Vega)
  * Document SpatialImage.slicer interface (pr/846) (CM)
  * get_fdata(dtype=np.float32) will attempt to avoid casting data to np.float64 when scaling parameters would otherwise promote the data type unnecessarily. (pr/833) (CM, reviewed by Ross Markello)
  * ArraySequence now supports a large set of Python operators to combine or update in-place. (pr/811) (MC, reviewed by Serge Koudoro, Philippe Poulin, CM, MB)
  * Warn, rather than fail, on DICOMs with unreadable Siemens CSA tags (pr/818) (Henry Braun, reviewed by CM)
  * Improve clarity of coordinate system tutorial (pr/823) (Egor Panfilov, reviewed by MB)</comment>
    <requestid>782024</requestid>
  </revision>
  <revision rev="5" vrev="2">
    <srcmd5>4440cfd0a05f13f726fae5470d7062ee</srcmd5>
    <version>3.0.1</version>
    <time>1590506423</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>808042</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>8c072547b3c920336f9c868411408e73</srcmd5>
    <version>3.1.1</version>
    <time>1594387939</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>819969</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>94bd91b55574c13090075145c9fbd89d</srcmd5>
    <version>3.1.1</version>
    <time>1613427417</time>
    <user>dimstar_suse</user>
    <comment>- skip python 36</comment>
    <requestid>871459</requestid>
  </revision>
  <revision rev="8" vrev="3">
    <srcmd5>95a2d236588cb993b615eb232769619c</srcmd5>
    <version>3.1.1</version>
    <time>1617279472</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>882372</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>09bce5eb62bfcb89744ae8a77657c699</srcmd5>
    <version>4.0.2</version>
    <time>1665504173</time>
    <user>RBrownFactory</user>
    <comment>- Update to 4.0.2
  * many changes, see Changelog
  * nib-convert CLI tool to make image type and data dtype conversion 
    accessible via the command line.
  * Allow dtypes to be passed to Analyze-like images at __init__() 
    and to_filename()
  * Allow compressed GIFTI images
  * Add zstd compression support
  * Test on Python 3.10
  * Passing (u)int64 arrays to Nifti1Image and subclasses will warn 
    unless a header or dtype option is passed; in the future this will 
    become an error. Additionally, passing int or 'int' to set_data_dtype() 
    now raises an error, requiring an explicit numpy dtype to make 64-bit 
    integer images.
  * Drop support for Python 3.6, Numpy &lt; 1.17
  * Fully removed the APIs, which have raised errors on use since 3.0
- Drop upstreamed 983.patch and purge-nose.patch</comment>
    <requestid>1009448</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>05fcf16f4d4adaa46f5e076180c7facf</srcmd5>
    <version>5.2.0</version>
    <time>1708284200</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1147160</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>0d1795f1324d51e4ef7952c502fd67e3</srcmd5>
    <version>5.2.1</version>
    <time>1711477583</time>
    <user>anag+factory</user>
    <comment>- update to 5.2.1:
  * Support &quot;flat&quot; ASCII-encoded GIFTI DataArrays (pr/1298) (PM,
    reviewed by CM)
  * Tolerate missing ``git`` when reporting version info
    (pr/1286)
  * Handle Siemens XA30 derived DWI DICOMs (pr/1296)
  * Add tool for generating GitHub-friendly release notes
  * Accommodate pytest 8 changes (pr/1297) (CM)

  * nib-convert CLI tool to make image type and data dtype conversion
  * Allow dtypes to be passed to Analyze-like images at __init__()
  * Passing (u)int64 arrays to Nifti1Image and subclasses will warn
    unless a header or dtype option is passed; in the future this will
    become an error. Additionally, passing int or 'int' to set_data_dtype()
    now raises an error, requiring an explicit numpy dtype to make 64-bit
- skip python 36</comment>
    <requestid>1161551</requestid>
  </revision>
  <revision rev="12" vrev="2">
    <srcmd5>808ffb764b87833cb2f70cc2973c7843</srcmd5>
    <version>5.2.1</version>
    <time>1721661516</time>
    <user>anag+factory</user>
    <comment>- Switch to autosetup macro.
- Restrict numpy to &lt; 2 because it isn't currently supported.
- Add patch support-pytest-8.patch:
  * Use pytest setup/teardown methods.</comment>
    <requestid>1188927</requestid>
  </revision>
  <revision rev="13" vrev="3">
    <srcmd5>66eecf1ec36466a069a7a8d865d817fd</srcmd5>
    <version>5.2.1</version>
    <time>1721914774</time>
    <user>dimstar_suse</user>
    <comment>- Remove numpy upper bound.
- Add patch support-numpy-2.patch:
  * Use np.asarray() to support NumPy 2 as well.</comment>
    <requestid>1189472</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>56a9c5ba3a7bf79b423b0ea0a0c8a469</srcmd5>
    <version>5.3.2</version>
    <time>1732650959</time>
    <user>anag+factory</user>
    <comment>- Update to 5.3.2:
  * New features
    + Update NIfTI extension protocol to include .content : bytes, .text :
      str and .json : dict properties for accessing extension contents.
  * Enhancements
    + Ability to read data from many multiframe DICOM files that previously
      generated errors
    + nib-nifti-dx now supports NIfTI-2 files with a --nifti2 flag
    + Update nibabel.streamlines.tractogram to support ragged arrays.
    + Improve error message for for dicomwrapper errors in shape
      calculation
    + Support &quot;flat&quot; ASCII-encoded GIFTI DataArrays
  * Bug fixes
    + Fix location initialization/update in OrthoSlicer3D for permuted axes
    + Fix DICOM scaling, making frame filtering explicit
    + Fixed multiframe DICOM issue where data could be flipped along slice
      dimension relative to the affine
    + Fixed multiframe DICOM issue where image_position and the translation
      component in the affine could be incorrect
  * Maintenance
    + Numpy 2.0 compatibility and addressing deprecations in numpy API
    + Python 3.13 compatibility
    + Testing on Python 3.13 with free-threading
    + Proactively address deprecations in coming Python versions
    + Replace nose-era setup() and teardown() functions with pytest
      equivalents
  * API changes and deprecations
    + Raise HeaderDataError from set_qform if the affine fails to
      decompose. This would previously result in numpy.linalgLinAlgError.
    + The nibabel.onetime.auto_attr module can be replaced by</comment>
    <requestid>1226405</requestid>
  </revision>
  <revision rev="15" vrev="2">
    <srcmd5>4567bd732a045cfc691d8f9caf25d11c</srcmd5>
    <version>5.3.2</version>
    <time>1753976816</time>
    <user>dimstar_suse</user>
    <comment>- Add patch ignore-userwarnings.patch:
  * Ignore any UserWarnings that arise, rather than to trying to swallow
    them with pytest.warns().</comment>
    <requestid>1296683</requestid>
  </revision>
</revisionlist>
