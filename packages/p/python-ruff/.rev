<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>9b21417c605080fcb3666a2d8520fe0e</srcmd5>
    <version>0.0.292</version>
    <time>1697390871</time>
    <user>anag+factory</user>
    <comment>ruff - fast python linter written in rust</comment>
    <requestid>1117694</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>2b9629aa038b926c895139313214c5b4</srcmd5>
    <version>0.1.0</version>
    <time>1697567134</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.0
 * Breaking changes
  + Unsafe fixes are no longer displayed or applied without opt-in
  + Drop formatting specific rules from the default set
  + The deprecated format setting has been removed
  + The format setting cannot be used to configure the output format, use output-format instead
  + The RUFF_FORMAT environment variable is ignored, use RUFF_OUTPUT_FORMAT instead
  + The --format option has been removed from ruff check, use --output-format instead
 * Rule changes
  + Extend reimplemented-starmap (FURB140) to catch calls with a single and starred argument
  + Improve cases covered by RUF015
  + Update SIM15 to allow open followed by close
  + Respect msgspec.Struct default-copy semantics in RUF012
  + Add sqlalchemy methods to `flake8-boolean-trap`` exclusion list
  + Add fix for PLR1714
  + Add fix for PIE804
  + Add fix for PLC0208
  + Add fix for PYI055
  + Update non-pep695-type-alias to require --unsafe-fixes outside of stub files
  + Improve fix message for UP018
  + Update PLW3201 to support Enum sunder names
 * Preview features
  + Only show warnings for empty preview selectors when enabling rules
  + Add unnecessary-key-check to simplify key in dct and dct[key] to dct.get(key)
  + Add assignment-in-assert to prevent walrus expressions in assert statements
  + [refurb] Add single-item-membership-test (FURB171)
  + [pylint] Add and-or-ternary (R1706)
  + New rules are added in preview.
 * Configuration
  + Add unsafe-fixes setting</comment>
    <requestid>1118297</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>e0dbe8af0b95c1a26617642ef35db8b9</srcmd5>
    <version>0.1.1</version>
    <time>1697836724</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.1
 * Rule changes
   * Add unsafe fix for escape-sequence-in-docstring (D301)
 * Configuration
   * Respect #(deprecated) attribute in configuration options
   * Add [format|lint].exclude options
   * Respect tab-size setting in formatter
   * Add lint.preview
 * Preview features
   * [pylint] Implement literal-membership (PLR6201)
   * [pylint] Implement too-many-boolean-expressions (PLR0916)
   * [pylint] Implement misplaced-bare-raise (E0704)
   * [pylint] Implement global-at-module-level (W0604)
   * [pylint] Implement unspecified-encoding (PLW1514)
   * Add fix for triple-single-quotes (D300)
 * Formatter
   * New code style badge for ruff format
   * Fix comments outside expression parentheses
   * Add --target-version to ruff format
   * Skip over parentheses when detecting in keyword
   * Add --diff option to ruff format
   * Insert newline after nested function or class statements
   * Use pass over ellipsis in non-function/class contexts
 * Bug fixes
   * Lazily evaluate all PEP 695 type alias values
   * Avoid failed assertion when showing fixes from stdin
   * Avoid flagging HTTP and HTTPS literals in urllib-open
   * Avoid flagging bad-dunder-method-name for _
   * Remove Python 2-only methods from URLOpen audit
   * Use set bracket replacement for iteration-over-set to preserve whitespace and comments</comment>
    <requestid>1119204</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>c4f14c7e6eae82fc3e94f0afc301f508</srcmd5>
    <version>0.1.2</version>
    <time>1698249877</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1120279</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>08e1d3197eb04742def27636406f56ce</srcmd5>
    <version>0.1.3</version>
    <time>1698438531</time>
    <user>anag+factory</user>
    <comment>- Update to 0.1.3
 * Formatter
   * Avoid space around pow for None, True and False
   * Avoid sorting all paths in the format command
   * Insert necessary blank line between class and leading comments
   * Avoid introducing new parentheses in annotated assignments
   * Refine the warnings about incompatible linter options
   * Add test and basic implementation for formatter preview mode
   * Refine warning about incompatible isort settings
   * Only omit optional parentheses for starting or ending with parentheses
   * Use source type to determine parser mode for formatting
   * Don't warn about magic trailing comma when isort.force-single-line is true
   * Use SourceKind::diff for formatter
   * Fix fmt:off with trailing child comment
   * Formatter parentheses support for IpyEscapeCommand
 * Linter
   * [pylint] Add buffer methods to bad-dunder-method-name (PLW3201) exclusions
   * Match rule prefixes from external codes setting in unused-noqa
   * Use line-length setting for isort in lieu of pycodestyle.max-line-length
   * Update fix for unnecessary-paren-on-raise-exception to unsafe for unknown types
   * Correct quick fix message for W605
 * Documentation
   * Fix typo in max-doc-length documentation
   * Improve documentation around linter-formatter conflicts
   * Fix link to error suppression documentation in unused-noqa
   * Add external option to unused-noqa documentation
   * Add title attribute to icons
   * Clarify unsafe case in RSE102
   * Fix skipping formatting examples
   * docs: fix name of magic-trailing-comma option in README</comment>
    <requestid>1120740</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>d6d8cd251f8693cd51e650cd8230a880</srcmd5>
    <version>0.1.4</version>
    <time>1699388887</time>
    <user>anag+factory</user>
    <comment>- Update to 0.1.4
 * Preview features
   * [flake8-trio] Implement timeout-without-await (TRIO001)
   * [numpy] Implement NumPy 2.0 migration rule (NPY200)
   * [pylint] Implement bad-open-mode (W1501)
   * [pylint] Implement import-outside-toplevel (C0415) rule
   * [pylint] Implement useless-with-lock (W2101)
   * [pyupgrade] Implement timeout-error-alias (UP041)
   * [refurb] Implement isinstance-type-none (FURB168)
   * Detect confusable Unicode-to-Unicode units in RUF001, RUF002, and RUF003
   * Add newline after module docstrings in preview style
 * Formatter
   * Add a note on line-too-long to the formatter docs
   * Preserve trailing statement semicolons when using fmt: skip
   * Preserve trailing semicolons when using fmt: off
   * Avoid duplicating linter-formatter compatibility warnings
   * Avoid inserting a newline after function docstrings
   * Insert newline between docstring and following own line comment
   * Split tuples in return positions by comma first
   * Avoid treating byte strings as docstrings
   * Add --line-length option to format command
   * Avoid parenthesizing unsplittable because of comments
 * CLI
   * Add --output-format to ruff rule and ruff linter
 * Bug fixes
   * Respect --force-exclude in lint.exclude and format.exclude
   * Respect --extend-per-file-ignores on the CLI
   * Extend bad-dunder-method-name to permit __index__
   * Fix panic with 8 in octal escape
   * Avoid raising D300 when both triple quote styles are present</comment>
    <requestid>1123950</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>9aecac61f0953ca41b3b191cfd3c088e</srcmd5>
    <version>0.1.5</version>
    <time>1699994536</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.5
 * Preview features
   * [flake8-bandit] Implement mako-templates (S702)
   * [flake8-trio] Implement TRIO105
   * [flake8-trio] Implement TRIO109
   * [flake8-trio] Implement TRIO110
   * [flake8-trio] Implement TRIO115
   * [refurb] Implement type-none-comparison (FURB169)
   * Flag all comparisons against builtin types in E721
   * Make SIM118 fix as safe when the expression is a known dictionary
 * Formatter
   * Fix multiline lambda expression statement formatting
 * CLI
   * Add hidden --extension to override inference of source type from file extension
   * Configuration
   * Account for selector specificity when merging extend_unsafe_fixes and override extend_safe_fixes
   * Add support for disabling cache with RUFF_NO_CACHE environment variable
 * Bug fixes
   * [E721] Flag comparisons to memoryview
   * Allow collapsed-ellipsis bodies in other statements
   * Avoid D301 autofix for u prefixed strings
   * Only flag flake8-trio rules when trio import is present
   * Reject more syntactically invalid Python programs
   * Avoid raising TRIO115 violations for trio.sleep(...) calls with non-number values
   * Fix F841 false negative on assignment to multiple variables
 * Documentation
   * Fix link to isort known-first-party
   * Add notes on fix safety to a few rules
   * Add missing toml config tabs
   * Add instructions for configuration of Emacs</comment>
    <requestid>1125607</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>57faa40e0426a938dcc394fa683d349c</srcmd5>
    <version>0.1.6</version>
    <time>1700511557</time>
    <user>anag+factory</user>
    <comment>- switch to libalternatives
- drop cargo_config
- update _service for new cargo-vendor service
- update to 0.1.6
 * Preview features
   * [flake8-boolean-trap] Extend boolean-type-hint-positional-argument (FBT001) to include booleans in unions
   * [flake8-pie] Extend reimplemented-list-builtin (PIE807) to dict reimplementations
   * [flake8-pie] Extend unnecessary-pass (PIE790) to include ellipses (...)
   * [flake8-pie] Implement fix for unnecessary-spread (PIE800)
   * [flake8-quotes] Implement unnecessary-escaped-quote (Q004)
   * [pycodestyle] Implement fix for multiple-spaces-after-keyword (E271) and multiple-spaces-before-keyword (E272)
   * [pycodestyle] Implement fix for multiple-spaces-after-operator (E222) and multiple-spaces-before-operator (E221)
   * [pyflakes] Extend is-literal (F632) to include comparisons against mutable initializers
   * [pylint] Implement redefined-argument-from-local (PLR1704)
   * [pylint] Implement fix for unnecessary-lambda (PLW0108)
   * [refurb] Implement if-expr-min-max (FURB136)
   * [refurb] Implement math-constant (FURB152)
 * Rule changes
   * [flake8-annotations] Add autotyping-like return type inference for annotation rules
   * [flake8-future-annotations] Implement fix for future-required-type-annotation (FA102)
   * [flake8-implicit-namespace-package] Avoid missing namespace violations in scripts with shebangs
   * [pydocstyle] Update over-indentation (D208) to preserve indentation offsets when fixing overindented lines
   * [pyupgrade] Refine timeout-error-alias (UP041) to remove false positives
 * Formatter
   * Fix instability in await formatting with fluent style
   * Compare formatted and unformatted ASTs during formatter tests
   * Preserve trailing semicolon for Notebooks
 * CLI
   * Improve debug printing for resolving origin of config settings
   * Write unchanged, excluded files to stdout when read via stdin</comment>
    <requestid>1127488</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>876e25a8f6545af6b6b490c82a168b9a</srcmd5>
    <version>0.1.7</version>
    <time>1702071196</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.7
 * Preview features
   * Implement multiline dictionary and list hugging for preview style
   * Implement the fix_power_op_line_length preview style
   * Use Python version to determine typing rewrite safety
   * [flake8-annotations] Enable auto-return-type involving Optional and Union annotations
   * [flake8-bandit] Implement django-raw-sql (S611)
   * [flake8-bandit] Implement tarfile-unsafe-members (S202)
   * [flake8-pyi] Implement fix for unnecessary-literal-union (PYI030)
   * [flake8-simplify] Extend dict-get-with-none-default (SIM910) to non-literals
   * [pylint] - add unnecessary-list-index-lookup (PLR1736) + autofix
   * [pylint] - implement R0202 and R0203 with autofixes
   * [pylint] Implement repeated-keyword (PLe1132)
   * [pylint] Implement too-many-positional (PLR0917)
   * [pylint] Implement unnecessary-dict-index-lookup (PLR1733)
   * [refurb] Implement redundant-log-base (FURB163)
 * Rule changes
   * [flake8-boolean-trap] Allow booleans in @override methods
   * [flake8-bugbear] Avoid B015,B018 for last expression in a cell
   * [flake8-pie] Allow ellipses for enum values in stub files
   * [flake8-pyi] Check PEP 695 type aliases for snake-case-type-alias and t-suffixed-type-alias
   * [flake8-pyi] Check for kwarg and vararg NoReturn type annotations
   * [flake8-simplify] Omit select context managers from SIM117
   * [pep8-naming] Allow Django model loads in non-lowercase-variable-in-function (N806)
   * [pycodestyle] Avoid E703 for last expression in a cell
   * [pycodestyle] Update E402 to work at cell level for notebooks
   * [pydocstyle] Avoid D100 for Jupyter Notebooks
   * [pylint] Implement fix for unspecified-encoding (PLW1514)
 * Formatter
   * Avoid unstable formatting in ellipsis-only body with trailing comment</comment>
    <requestid>1132059</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>5ac778517e617e4c50dc41b5fc9717c9</srcmd5>
    <version>0.1.8</version>
    <time>1702587824</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.8
 * Preview features
   * Add &quot;preserve&quot; quote-style to mimic Black's skip-string-normalization
   * Implement prefer_splitting_right_hand_side_of_assignments preview style
   * [pycodestyle] Add fix for unexpected-spaces-around-keyword-parameter-equals
   * [pycodestyle] Add fix for comment-related whitespace rules
   * [pycodestyle] Allow sys.path modifications between imports
   * [refurb] Implement hashlib-digest-hex (FURB181)
 * Rule changes
   * Allow flake8-type-checking rules to automatically quote runtime-evaluated references
   * Allow transparent cell magics in Jupyter Notebooks
   * [flake8-annotations] Avoid ANN2xx fixes for abstract methods with empty bodies
   * [flake8-self] Ignore underscore references in type annotations
   * [pep8-naming] Allow class names when apps.get_model is a non-string
   * [pycodestyle] Allow matplotlib.use calls to intersperse imports
   * [pyflakes] Support fixing unused assignments in tuples by renaming variables (F841)
   * [pylint] Add fix for subprocess-run-without-check (PLW1510)
 * Formatter
   * Add docstring-code-format knob to enable docstring snippet formatting
   * Use double quotes for all docstrings, including single-quoted docstrings
   * Implement &quot;dynamic&quot; line width mode for docstring code formatting
   * Support reformatting Markdown code blocks
   * add support for formatting reStructuredText code snippets
   * Avoid trailing comma for single-argument with positional separator
   * Fix handling of trailing target comment
 * CLI
   * Hide unsafe fix suggestions when explicitly disabled
   * Add SARIF support to --output-format
 * Bug fixes
   * Apply unnecessary index rule prior to enumerate rewrite</comment>
    <requestid>1133053</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>5a20b7b15eec01a412bdbacfaa4df246</srcmd5>
    <version>0.1.9</version>
    <time>1703281285</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.9
 * Breaking changes
   * Add site-packages to default exclusions
 * Preview features
   * Fix: Avoid parenthesizing subscript targets and values
   * [pylint] Implement too-many-locals (PLR0914)
   * Implement reimplemented_operator (FURB118)
   * Add a rule to detect string members in runtime-evaluated unions
   * Implement no_blank_line_before_class_docstring preview style
 * Rule changes
   * CONSTANT_CASE variables are improperly flagged for yoda violation (SIM300)
   * [flake8-pyi] Cover ParamSpecs and TypeVarTuples (PYI018)
   * [flake8-bugbear] Add fix for zip-without-explicit-strict (B905)
   * Add fix to automatically remove print and pprint statements (T201, T203)
   * Prefer Never to NoReturn in auto-typing in Python &gt;= 3.11 (ANN201)
 * Formatter
   * can_omit_optional_parentheses: Exit early for unparenthesized expressions
   * Fix dynamic mode with doctests so that it doesn't exceed configured line width
   * Fix can_omit_optional_parentheses for expressions with a right most fstring
   * Add target_version to formatter options
 * CLI
   * Update ruff format --check to display message for already formatted files
 * Bug fixes
   * Reverse order of arguments for operator.contains
   * Iterate over lambdas in deferred type annotations
   * Fix panic in D208 with multibyte indent
   * Add support for NoReturn in auto-return-typing
   * Allow removal of typing from exempt-modules
   * Avoid mutable-class-default violations for Pydantic subclasses
   * Fix dropped union expressions for piped non-types in PYI055 autofix</comment>
    <requestid>1134560</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>fd2c0403fd8696943829157fbac84672</srcmd5>
    <version>0.1.11</version>
    <time>1704753973</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.11
   * [pylint] Implement super-without-brackets (W0245) 
   * Check path string properly in python -m ruff invocations 
 * Documentation
   * Tweak relative-imports message 
   * Add fix safety note for yield-in-for-loop 
 * 0.1.10
 * Preview features
   * Improve dummy_implementations preview style formatting 
   * Normalise Hex and unicode escape sequences in strings 
   * Parenthesize long type annotations in annotated assignments 
   * Parenthesize multi-context managers in with statements 
   * [flake8-pyi] Implement generator-return-from-iter-method (PYI058) 
   * [pylint] Implement empty-comment (PLR2044) 
   * [refurb] Implement bit-count (FURB161) 
   * [ruff] Add never-union rule to detect redundant typing.NoReturn and typing.Never 
 * CLI
   * Add paths to TOML parse errors 
   * Add row and column numbers to formatter parse errors 
   * Improve responsiveness when invoked via Python 
   * Short rule messages should not end with a period 
 * Configuration
   * Respect runtime-required decorators on functions 
 * Bug fixes
   * Avoid asyncio-dangling-task for nonlocal and global bindings 
   * Escape trailing placeholders in rule documentation 
   * Fix continuation detection following multi-line strings 
   * Fix scoping for generators in named expressions in classes 
   * Port from obsolete wsl crate to is-wsl 
   * Remove special pre-visit for module docstrings</comment>
    <requestid>1137528</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>44ae0efd9c9d819ba75965903cbb0641</srcmd5>
    <version>0.1.12</version>
    <time>1705099592</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.12:
 * Preview features
   * Formatter: Hug multiline-strings in preview style
   * [flake8-bandit] Add ssl-with-no-version (S504)
   * [flake8-bandit] Implement ssl-insecure-version (S502)
   * [flake8-bandit] Implement ssl-with-bad-defaults (S503)
   * [flake8-bandit] Implement suspicious import rules (S4XX)
   * [flake8-simplify] Implement zip-dict-keys-and-values (SIM911)
   * [pyflakes] Add a fix for redefined-while-unused (F811)
   * [pylint] Implement unnecessary-dunder-call (C2801)
   * [ruff] Add parenthesize-chained-operators (RUF021) to enforce parentheses in a or b and c
 * Rule changes
   * [flake8-boolean-trap] Allow Boolean positional arguments in setters
   * [flake8-builtins] Restrict builtin-attribute-shadowing (A003) to actual shadowed references
   * [flake8-pyi] Add fix for generator-return-from-iter-method (PYI058)
   * [pyflakes] Don't flag redefined-while-unused (F811) in if branches
   * [pyupgrade] Add some additional Python 3.12 typing members to deprecated-import
   * [ruff] Add fix for parenthesize-chained-operators (RUF021)
   * [ruff] Include subscripts and attributes in static key rule (RUF011)
   * [ruff] Support variable keys in static dictionary key rule (RUF011)
 * Formatter
   * Generate deterministic IDs when formatting notebooks
   * Allow # fmt: skip with interspersed same-line comments
   * Parenthesize breaking named expressions in match guards
 * Bug fixes
   * Add cell indexes to all diagnostics
   * Avoid infinite loop in constant vs. None comparisons
   * Handle raises with implicit alternate branches
   * Ignore trailing quotes for unclosed l-brace errors
   * Respect multi-segment submodule imports when resolving qualified names</comment>
    <requestid>1138312</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>7ab5be737ff864f265fbb16fbd833c37</srcmd5>
    <version>0.1.13</version>
    <time>1705353658</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.13
 * Bug fixes
   * Include base pyproject when initializing cache settings 
   * [flake8-simplify] Account for possibly-empty f-string values in truthiness logic 
   * [pylint] Add the missing period in unnecessary-dunder-call 
   * [pylint] Fix __aenter__ message in unnecessary-dunder-call</comment>
    <requestid>1138846</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>adaaef8935b1eef7bf979c52e948d8e2</srcmd5>
    <version>0.1.14</version>
    <time>1705875044</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.14
 * Preview features
   * [flake8-bugbear] Add fix for duplicate-value (B033) 
   * [flake8-simplify] Implement enumerate-for-loop (SIM113) 
   * [pygrep_hooks] Add fix for deprecated-log-warn (PGH002) 
   * [pylint] Implement import-private-name (C2701) 
   * [refurb] Implement regex-flag-alias with fix (FURB167) 
   * [ruff] Add rule and fix to sort contents of __all__ (RUF022) 
   * [tryceratops] Add fix for error-instead-of-exception (TRY400) 
 * Rule changes
   * [flake8-pyi] Fix PYI047 false negatives on PEP-695 type aliases 
   * [flake8-pyi] Fix PYI049 false negatives on call-based TypedDicts 
   * [pylint] Exclude self and cls when counting method arguments (PLR0917) 
 * CLI
   * --show-settings displays active settings in a far more readable format 
   * Add --extension support to the formatter 
   * Configuration
   * Ignore preview status for fixable and unfixable selectors 
   * [pycodestyle] Use the configured tab size when expanding indents 
 * Bug fixes
   * Recursively visit deferred AST nodes 
   * Visit deferred lambdas before type definitions 
   * [flake8-simplify] Avoid some more enumerate-for-loop false positives (SIM113) 
   * [pandas-vet] Limit inplace diagnostics to methods that accept inplace 
   * [pylint] Add the __prepare__ method to the list of recognized dunder method 
   * [pylint] Ignore unnecessary dunder calls within dunder definitions 
   * [refurb] Avoid bailing when reimplemented-operator is called on function (FURB118) 
   * [ruff] Avoid treating named expressions as static keys (RUF011) 
 * Documentation
   * Add instructions on using noqa with isort rules</comment>
    <requestid>1140308</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>f383ace0be6b6b9a33cf3691524398e6</srcmd5>
    <version>0.1.15</version>
    <time>1706885209</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.15
 * Preview features
   * Error when NURSERY selector is used with --preview 
   * Preserve indentation around multiline strings in formatter 
   * [flake8-return] Add fixes for all rules (RET505, RET506, RET507, RET508) 
   * [flake8-simplify] Add fix for if-with-same-arms (SIM114) 
   * [pycodestyle] Add fix for multiple-imports-on-one-line (E401) 
   * [pylint] Add fix for collapsible-else-if (PLR5501) 
   * [pylint] Add fix for useless-else-on-loop (PLW0120) 
   * [pylint] Implement assigning-non-slot (E0237) 
   * [pylint] Implement potential-index-error (PLE0643) 
   * [pylint] Implement too-many-nested-blocks (PLR1702) 
   * [ruff] Add rule to sort __slots__ and __match_args__ 
   * [ruff] Detect unnecessary dict comprehensions for iterables (RUF025) 
   * [ruff] Guard against use of default_factory as a keyword argument (RUF026) 
   * [ruff] Implement mutable-fromkeys-value (RUF024) 
 * CLI
   * Enable auto-wrapping of --help output 
 * Bug fixes
   * Avoid rendering display-only rules as fixable 
   * Detect automagic-like assignments in notebooks 
   * Generate custom JSON schema for dynamic setting 
   * [flake8-no-pep420] Include global --config when determining namespace packages 
   * [flake8-pie] Omit bound tuples passed to .startswith or .endswith 
   * [flake8-return] Avoid panic when fixing inlined else blocks 
   * [flake8-return] Consider exception suppression in unnecessary assignment 
   * [flake8-return] Take NoReturn annotation into account when analyzing implicit returns 
   * [flake8-simplify] Support inverted returns in needless-bool (SIM103) 
   * [flake8-type-checking] Add Pydantic's BaseConfig to default-copy list 
   * [flake8-type-checking] Avoid marking InitVar as a typing-only annotation</comment>
    <requestid>1143460</requestid>
  </revision>
</revisionlist>
