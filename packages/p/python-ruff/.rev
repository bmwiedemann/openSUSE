<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>9b21417c605080fcb3666a2d8520fe0e</srcmd5>
    <version>0.0.292</version>
    <time>1697390871</time>
    <user>anag+factory</user>
    <comment>ruff - fast python linter written in rust</comment>
    <requestid>1117694</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>2b9629aa038b926c895139313214c5b4</srcmd5>
    <version>0.1.0</version>
    <time>1697567134</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.0
 * Breaking changes
  + Unsafe fixes are no longer displayed or applied without opt-in
  + Drop formatting specific rules from the default set
  + The deprecated format setting has been removed
  + The format setting cannot be used to configure the output format, use output-format instead
  + The RUFF_FORMAT environment variable is ignored, use RUFF_OUTPUT_FORMAT instead
  + The --format option has been removed from ruff check, use --output-format instead
 * Rule changes
  + Extend reimplemented-starmap (FURB140) to catch calls with a single and starred argument
  + Improve cases covered by RUF015
  + Update SIM15 to allow open followed by close
  + Respect msgspec.Struct default-copy semantics in RUF012
  + Add sqlalchemy methods to `flake8-boolean-trap`` exclusion list
  + Add fix for PLR1714
  + Add fix for PIE804
  + Add fix for PLC0208
  + Add fix for PYI055
  + Update non-pep695-type-alias to require --unsafe-fixes outside of stub files
  + Improve fix message for UP018
  + Update PLW3201 to support Enum sunder names
 * Preview features
  + Only show warnings for empty preview selectors when enabling rules
  + Add unnecessary-key-check to simplify key in dct and dct[key] to dct.get(key)
  + Add assignment-in-assert to prevent walrus expressions in assert statements
  + [refurb] Add single-item-membership-test (FURB171)
  + [pylint] Add and-or-ternary (R1706)
  + New rules are added in preview.
 * Configuration
  + Add unsafe-fixes setting</comment>
    <requestid>1118297</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>e0dbe8af0b95c1a26617642ef35db8b9</srcmd5>
    <version>0.1.1</version>
    <time>1697836724</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.1
 * Rule changes
   * Add unsafe fix for escape-sequence-in-docstring (D301)
 * Configuration
   * Respect #(deprecated) attribute in configuration options
   * Add [format|lint].exclude options
   * Respect tab-size setting in formatter
   * Add lint.preview
 * Preview features
   * [pylint] Implement literal-membership (PLR6201)
   * [pylint] Implement too-many-boolean-expressions (PLR0916)
   * [pylint] Implement misplaced-bare-raise (E0704)
   * [pylint] Implement global-at-module-level (W0604)
   * [pylint] Implement unspecified-encoding (PLW1514)
   * Add fix for triple-single-quotes (D300)
 * Formatter
   * New code style badge for ruff format
   * Fix comments outside expression parentheses
   * Add --target-version to ruff format
   * Skip over parentheses when detecting in keyword
   * Add --diff option to ruff format
   * Insert newline after nested function or class statements
   * Use pass over ellipsis in non-function/class contexts
 * Bug fixes
   * Lazily evaluate all PEP 695 type alias values
   * Avoid failed assertion when showing fixes from stdin
   * Avoid flagging HTTP and HTTPS literals in urllib-open
   * Avoid flagging bad-dunder-method-name for _
   * Remove Python 2-only methods from URLOpen audit
   * Use set bracket replacement for iteration-over-set to preserve whitespace and comments</comment>
    <requestid>1119204</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>c4f14c7e6eae82fc3e94f0afc301f508</srcmd5>
    <version>0.1.2</version>
    <time>1698249877</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1120279</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>08e1d3197eb04742def27636406f56ce</srcmd5>
    <version>0.1.3</version>
    <time>1698438531</time>
    <user>anag+factory</user>
    <comment>- Update to 0.1.3
 * Formatter
   * Avoid space around pow for None, True and False
   * Avoid sorting all paths in the format command
   * Insert necessary blank line between class and leading comments
   * Avoid introducing new parentheses in annotated assignments
   * Refine the warnings about incompatible linter options
   * Add test and basic implementation for formatter preview mode
   * Refine warning about incompatible isort settings
   * Only omit optional parentheses for starting or ending with parentheses
   * Use source type to determine parser mode for formatting
   * Don't warn about magic trailing comma when isort.force-single-line is true
   * Use SourceKind::diff for formatter
   * Fix fmt:off with trailing child comment
   * Formatter parentheses support for IpyEscapeCommand
 * Linter
   * [pylint] Add buffer methods to bad-dunder-method-name (PLW3201) exclusions
   * Match rule prefixes from external codes setting in unused-noqa
   * Use line-length setting for isort in lieu of pycodestyle.max-line-length
   * Update fix for unnecessary-paren-on-raise-exception to unsafe for unknown types
   * Correct quick fix message for W605
 * Documentation
   * Fix typo in max-doc-length documentation
   * Improve documentation around linter-formatter conflicts
   * Fix link to error suppression documentation in unused-noqa
   * Add external option to unused-noqa documentation
   * Add title attribute to icons
   * Clarify unsafe case in RSE102
   * Fix skipping formatting examples
   * docs: fix name of magic-trailing-comma option in README</comment>
    <requestid>1120740</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>d6d8cd251f8693cd51e650cd8230a880</srcmd5>
    <version>0.1.4</version>
    <time>1699388887</time>
    <user>anag+factory</user>
    <comment>- Update to 0.1.4
 * Preview features
   * [flake8-trio] Implement timeout-without-await (TRIO001)
   * [numpy] Implement NumPy 2.0 migration rule (NPY200)
   * [pylint] Implement bad-open-mode (W1501)
   * [pylint] Implement import-outside-toplevel (C0415) rule
   * [pylint] Implement useless-with-lock (W2101)
   * [pyupgrade] Implement timeout-error-alias (UP041)
   * [refurb] Implement isinstance-type-none (FURB168)
   * Detect confusable Unicode-to-Unicode units in RUF001, RUF002, and RUF003
   * Add newline after module docstrings in preview style
 * Formatter
   * Add a note on line-too-long to the formatter docs
   * Preserve trailing statement semicolons when using fmt: skip
   * Preserve trailing semicolons when using fmt: off
   * Avoid duplicating linter-formatter compatibility warnings
   * Avoid inserting a newline after function docstrings
   * Insert newline between docstring and following own line comment
   * Split tuples in return positions by comma first
   * Avoid treating byte strings as docstrings
   * Add --line-length option to format command
   * Avoid parenthesizing unsplittable because of comments
 * CLI
   * Add --output-format to ruff rule and ruff linter
 * Bug fixes
   * Respect --force-exclude in lint.exclude and format.exclude
   * Respect --extend-per-file-ignores on the CLI
   * Extend bad-dunder-method-name to permit __index__
   * Fix panic with 8 in octal escape
   * Avoid raising D300 when both triple quote styles are present</comment>
    <requestid>1123950</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>9aecac61f0953ca41b3b191cfd3c088e</srcmd5>
    <version>0.1.5</version>
    <time>1699994536</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.5
 * Preview features
   * [flake8-bandit] Implement mako-templates (S702)
   * [flake8-trio] Implement TRIO105
   * [flake8-trio] Implement TRIO109
   * [flake8-trio] Implement TRIO110
   * [flake8-trio] Implement TRIO115
   * [refurb] Implement type-none-comparison (FURB169)
   * Flag all comparisons against builtin types in E721
   * Make SIM118 fix as safe when the expression is a known dictionary
 * Formatter
   * Fix multiline lambda expression statement formatting
 * CLI
   * Add hidden --extension to override inference of source type from file extension
   * Configuration
   * Account for selector specificity when merging extend_unsafe_fixes and override extend_safe_fixes
   * Add support for disabling cache with RUFF_NO_CACHE environment variable
 * Bug fixes
   * [E721] Flag comparisons to memoryview
   * Allow collapsed-ellipsis bodies in other statements
   * Avoid D301 autofix for u prefixed strings
   * Only flag flake8-trio rules when trio import is present
   * Reject more syntactically invalid Python programs
   * Avoid raising TRIO115 violations for trio.sleep(...) calls with non-number values
   * Fix F841 false negative on assignment to multiple variables
 * Documentation
   * Fix link to isort known-first-party
   * Add notes on fix safety to a few rules
   * Add missing toml config tabs
   * Add instructions for configuration of Emacs</comment>
    <requestid>1125607</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>57faa40e0426a938dcc394fa683d349c</srcmd5>
    <version>0.1.6</version>
    <time>1700511557</time>
    <user>anag+factory</user>
    <comment>- switch to libalternatives
- drop cargo_config
- update _service for new cargo-vendor service
- update to 0.1.6
 * Preview features
   * [flake8-boolean-trap] Extend boolean-type-hint-positional-argument (FBT001) to include booleans in unions
   * [flake8-pie] Extend reimplemented-list-builtin (PIE807) to dict reimplementations
   * [flake8-pie] Extend unnecessary-pass (PIE790) to include ellipses (...)
   * [flake8-pie] Implement fix for unnecessary-spread (PIE800)
   * [flake8-quotes] Implement unnecessary-escaped-quote (Q004)
   * [pycodestyle] Implement fix for multiple-spaces-after-keyword (E271) and multiple-spaces-before-keyword (E272)
   * [pycodestyle] Implement fix for multiple-spaces-after-operator (E222) and multiple-spaces-before-operator (E221)
   * [pyflakes] Extend is-literal (F632) to include comparisons against mutable initializers
   * [pylint] Implement redefined-argument-from-local (PLR1704)
   * [pylint] Implement fix for unnecessary-lambda (PLW0108)
   * [refurb] Implement if-expr-min-max (FURB136)
   * [refurb] Implement math-constant (FURB152)
 * Rule changes
   * [flake8-annotations] Add autotyping-like return type inference for annotation rules
   * [flake8-future-annotations] Implement fix for future-required-type-annotation (FA102)
   * [flake8-implicit-namespace-package] Avoid missing namespace violations in scripts with shebangs
   * [pydocstyle] Update over-indentation (D208) to preserve indentation offsets when fixing overindented lines
   * [pyupgrade] Refine timeout-error-alias (UP041) to remove false positives
 * Formatter
   * Fix instability in await formatting with fluent style
   * Compare formatted and unformatted ASTs during formatter tests
   * Preserve trailing semicolon for Notebooks
 * CLI
   * Improve debug printing for resolving origin of config settings
   * Write unchanged, excluded files to stdout when read via stdin</comment>
    <requestid>1127488</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>876e25a8f6545af6b6b490c82a168b9a</srcmd5>
    <version>0.1.7</version>
    <time>1702071196</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.7
 * Preview features
   * Implement multiline dictionary and list hugging for preview style
   * Implement the fix_power_op_line_length preview style
   * Use Python version to determine typing rewrite safety
   * [flake8-annotations] Enable auto-return-type involving Optional and Union annotations
   * [flake8-bandit] Implement django-raw-sql (S611)
   * [flake8-bandit] Implement tarfile-unsafe-members (S202)
   * [flake8-pyi] Implement fix for unnecessary-literal-union (PYI030)
   * [flake8-simplify] Extend dict-get-with-none-default (SIM910) to non-literals
   * [pylint] - add unnecessary-list-index-lookup (PLR1736) + autofix
   * [pylint] - implement R0202 and R0203 with autofixes
   * [pylint] Implement repeated-keyword (PLe1132)
   * [pylint] Implement too-many-positional (PLR0917)
   * [pylint] Implement unnecessary-dict-index-lookup (PLR1733)
   * [refurb] Implement redundant-log-base (FURB163)
 * Rule changes
   * [flake8-boolean-trap] Allow booleans in @override methods
   * [flake8-bugbear] Avoid B015,B018 for last expression in a cell
   * [flake8-pie] Allow ellipses for enum values in stub files
   * [flake8-pyi] Check PEP 695 type aliases for snake-case-type-alias and t-suffixed-type-alias
   * [flake8-pyi] Check for kwarg and vararg NoReturn type annotations
   * [flake8-simplify] Omit select context managers from SIM117
   * [pep8-naming] Allow Django model loads in non-lowercase-variable-in-function (N806)
   * [pycodestyle] Avoid E703 for last expression in a cell
   * [pycodestyle] Update E402 to work at cell level for notebooks
   * [pydocstyle] Avoid D100 for Jupyter Notebooks
   * [pylint] Implement fix for unspecified-encoding (PLW1514)
 * Formatter
   * Avoid unstable formatting in ellipsis-only body with trailing comment</comment>
    <requestid>1132059</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>5ac778517e617e4c50dc41b5fc9717c9</srcmd5>
    <version>0.1.8</version>
    <time>1702587824</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.8
 * Preview features
   * Add &quot;preserve&quot; quote-style to mimic Black's skip-string-normalization
   * Implement prefer_splitting_right_hand_side_of_assignments preview style
   * [pycodestyle] Add fix for unexpected-spaces-around-keyword-parameter-equals
   * [pycodestyle] Add fix for comment-related whitespace rules
   * [pycodestyle] Allow sys.path modifications between imports
   * [refurb] Implement hashlib-digest-hex (FURB181)
 * Rule changes
   * Allow flake8-type-checking rules to automatically quote runtime-evaluated references
   * Allow transparent cell magics in Jupyter Notebooks
   * [flake8-annotations] Avoid ANN2xx fixes for abstract methods with empty bodies
   * [flake8-self] Ignore underscore references in type annotations
   * [pep8-naming] Allow class names when apps.get_model is a non-string
   * [pycodestyle] Allow matplotlib.use calls to intersperse imports
   * [pyflakes] Support fixing unused assignments in tuples by renaming variables (F841)
   * [pylint] Add fix for subprocess-run-without-check (PLW1510)
 * Formatter
   * Add docstring-code-format knob to enable docstring snippet formatting
   * Use double quotes for all docstrings, including single-quoted docstrings
   * Implement &quot;dynamic&quot; line width mode for docstring code formatting
   * Support reformatting Markdown code blocks
   * add support for formatting reStructuredText code snippets
   * Avoid trailing comma for single-argument with positional separator
   * Fix handling of trailing target comment
 * CLI
   * Hide unsafe fix suggestions when explicitly disabled
   * Add SARIF support to --output-format
 * Bug fixes
   * Apply unnecessary index rule prior to enumerate rewrite</comment>
    <requestid>1133053</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>5a20b7b15eec01a412bdbacfaa4df246</srcmd5>
    <version>0.1.9</version>
    <time>1703281285</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.9
 * Breaking changes
   * Add site-packages to default exclusions
 * Preview features
   * Fix: Avoid parenthesizing subscript targets and values
   * [pylint] Implement too-many-locals (PLR0914)
   * Implement reimplemented_operator (FURB118)
   * Add a rule to detect string members in runtime-evaluated unions
   * Implement no_blank_line_before_class_docstring preview style
 * Rule changes
   * CONSTANT_CASE variables are improperly flagged for yoda violation (SIM300)
   * [flake8-pyi] Cover ParamSpecs and TypeVarTuples (PYI018)
   * [flake8-bugbear] Add fix for zip-without-explicit-strict (B905)
   * Add fix to automatically remove print and pprint statements (T201, T203)
   * Prefer Never to NoReturn in auto-typing in Python &gt;= 3.11 (ANN201)
 * Formatter
   * can_omit_optional_parentheses: Exit early for unparenthesized expressions
   * Fix dynamic mode with doctests so that it doesn't exceed configured line width
   * Fix can_omit_optional_parentheses for expressions with a right most fstring
   * Add target_version to formatter options
 * CLI
   * Update ruff format --check to display message for already formatted files
 * Bug fixes
   * Reverse order of arguments for operator.contains
   * Iterate over lambdas in deferred type annotations
   * Fix panic in D208 with multibyte indent
   * Add support for NoReturn in auto-return-typing
   * Allow removal of typing from exempt-modules
   * Avoid mutable-class-default violations for Pydantic subclasses
   * Fix dropped union expressions for piped non-types in PYI055 autofix</comment>
    <requestid>1134560</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>fd2c0403fd8696943829157fbac84672</srcmd5>
    <version>0.1.11</version>
    <time>1704753973</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.11
   * [pylint] Implement super-without-brackets (W0245) 
   * Check path string properly in python -m ruff invocations 
 * Documentation
   * Tweak relative-imports message 
   * Add fix safety note for yield-in-for-loop 
 * 0.1.10
 * Preview features
   * Improve dummy_implementations preview style formatting 
   * Normalise Hex and unicode escape sequences in strings 
   * Parenthesize long type annotations in annotated assignments 
   * Parenthesize multi-context managers in with statements 
   * [flake8-pyi] Implement generator-return-from-iter-method (PYI058) 
   * [pylint] Implement empty-comment (PLR2044) 
   * [refurb] Implement bit-count (FURB161) 
   * [ruff] Add never-union rule to detect redundant typing.NoReturn and typing.Never 
 * CLI
   * Add paths to TOML parse errors 
   * Add row and column numbers to formatter parse errors 
   * Improve responsiveness when invoked via Python 
   * Short rule messages should not end with a period 
 * Configuration
   * Respect runtime-required decorators on functions 
 * Bug fixes
   * Avoid asyncio-dangling-task for nonlocal and global bindings 
   * Escape trailing placeholders in rule documentation 
   * Fix continuation detection following multi-line strings 
   * Fix scoping for generators in named expressions in classes 
   * Port from obsolete wsl crate to is-wsl 
   * Remove special pre-visit for module docstrings</comment>
    <requestid>1137528</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>44ae0efd9c9d819ba75965903cbb0641</srcmd5>
    <version>0.1.12</version>
    <time>1705099592</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.12:
 * Preview features
   * Formatter: Hug multiline-strings in preview style
   * [flake8-bandit] Add ssl-with-no-version (S504)
   * [flake8-bandit] Implement ssl-insecure-version (S502)
   * [flake8-bandit] Implement ssl-with-bad-defaults (S503)
   * [flake8-bandit] Implement suspicious import rules (S4XX)
   * [flake8-simplify] Implement zip-dict-keys-and-values (SIM911)
   * [pyflakes] Add a fix for redefined-while-unused (F811)
   * [pylint] Implement unnecessary-dunder-call (C2801)
   * [ruff] Add parenthesize-chained-operators (RUF021) to enforce parentheses in a or b and c
 * Rule changes
   * [flake8-boolean-trap] Allow Boolean positional arguments in setters
   * [flake8-builtins] Restrict builtin-attribute-shadowing (A003) to actual shadowed references
   * [flake8-pyi] Add fix for generator-return-from-iter-method (PYI058)
   * [pyflakes] Don't flag redefined-while-unused (F811) in if branches
   * [pyupgrade] Add some additional Python 3.12 typing members to deprecated-import
   * [ruff] Add fix for parenthesize-chained-operators (RUF021)
   * [ruff] Include subscripts and attributes in static key rule (RUF011)
   * [ruff] Support variable keys in static dictionary key rule (RUF011)
 * Formatter
   * Generate deterministic IDs when formatting notebooks
   * Allow # fmt: skip with interspersed same-line comments
   * Parenthesize breaking named expressions in match guards
 * Bug fixes
   * Add cell indexes to all diagnostics
   * Avoid infinite loop in constant vs. None comparisons
   * Handle raises with implicit alternate branches
   * Ignore trailing quotes for unclosed l-brace errors
   * Respect multi-segment submodule imports when resolving qualified names</comment>
    <requestid>1138312</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>7ab5be737ff864f265fbb16fbd833c37</srcmd5>
    <version>0.1.13</version>
    <time>1705353658</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.13
 * Bug fixes
   * Include base pyproject when initializing cache settings 
   * [flake8-simplify] Account for possibly-empty f-string values in truthiness logic 
   * [pylint] Add the missing period in unnecessary-dunder-call 
   * [pylint] Fix __aenter__ message in unnecessary-dunder-call</comment>
    <requestid>1138846</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>adaaef8935b1eef7bf979c52e948d8e2</srcmd5>
    <version>0.1.14</version>
    <time>1705875044</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.14
 * Preview features
   * [flake8-bugbear] Add fix for duplicate-value (B033) 
   * [flake8-simplify] Implement enumerate-for-loop (SIM113) 
   * [pygrep_hooks] Add fix for deprecated-log-warn (PGH002) 
   * [pylint] Implement import-private-name (C2701) 
   * [refurb] Implement regex-flag-alias with fix (FURB167) 
   * [ruff] Add rule and fix to sort contents of __all__ (RUF022) 
   * [tryceratops] Add fix for error-instead-of-exception (TRY400) 
 * Rule changes
   * [flake8-pyi] Fix PYI047 false negatives on PEP-695 type aliases 
   * [flake8-pyi] Fix PYI049 false negatives on call-based TypedDicts 
   * [pylint] Exclude self and cls when counting method arguments (PLR0917) 
 * CLI
   * --show-settings displays active settings in a far more readable format 
   * Add --extension support to the formatter 
   * Configuration
   * Ignore preview status for fixable and unfixable selectors 
   * [pycodestyle] Use the configured tab size when expanding indents 
 * Bug fixes
   * Recursively visit deferred AST nodes 
   * Visit deferred lambdas before type definitions 
   * [flake8-simplify] Avoid some more enumerate-for-loop false positives (SIM113) 
   * [pandas-vet] Limit inplace diagnostics to methods that accept inplace 
   * [pylint] Add the __prepare__ method to the list of recognized dunder method 
   * [pylint] Ignore unnecessary dunder calls within dunder definitions 
   * [refurb] Avoid bailing when reimplemented-operator is called on function (FURB118) 
   * [ruff] Avoid treating named expressions as static keys (RUF011) 
 * Documentation
   * Add instructions on using noqa with isort rules</comment>
    <requestid>1140308</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>f383ace0be6b6b9a33cf3691524398e6</srcmd5>
    <version>0.1.15</version>
    <time>1706885209</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.15
 * Preview features
   * Error when NURSERY selector is used with --preview 
   * Preserve indentation around multiline strings in formatter 
   * [flake8-return] Add fixes for all rules (RET505, RET506, RET507, RET508) 
   * [flake8-simplify] Add fix for if-with-same-arms (SIM114) 
   * [pycodestyle] Add fix for multiple-imports-on-one-line (E401) 
   * [pylint] Add fix for collapsible-else-if (PLR5501) 
   * [pylint] Add fix for useless-else-on-loop (PLW0120) 
   * [pylint] Implement assigning-non-slot (E0237) 
   * [pylint] Implement potential-index-error (PLE0643) 
   * [pylint] Implement too-many-nested-blocks (PLR1702) 
   * [ruff] Add rule to sort __slots__ and __match_args__ 
   * [ruff] Detect unnecessary dict comprehensions for iterables (RUF025) 
   * [ruff] Guard against use of default_factory as a keyword argument (RUF026) 
   * [ruff] Implement mutable-fromkeys-value (RUF024) 
 * CLI
   * Enable auto-wrapping of --help output 
 * Bug fixes
   * Avoid rendering display-only rules as fixable 
   * Detect automagic-like assignments in notebooks 
   * Generate custom JSON schema for dynamic setting 
   * [flake8-no-pep420] Include global --config when determining namespace packages 
   * [flake8-pie] Omit bound tuples passed to .startswith or .endswith 
   * [flake8-return] Avoid panic when fixing inlined else blocks 
   * [flake8-return] Consider exception suppression in unnecessary assignment 
   * [flake8-return] Take NoReturn annotation into account when analyzing implicit returns 
   * [flake8-simplify] Support inverted returns in needless-bool (SIM103) 
   * [flake8-type-checking] Add Pydantic's BaseConfig to default-copy list 
   * [flake8-type-checking] Avoid marking InitVar as a typing-only annotation</comment>
    <requestid>1143460</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>8d6eafd3db80aa89e52856bb369e9a80</srcmd5>
    <version>0.2.0</version>
    <time>1707166903</time>
    <user>anag+factory</user>
    <comment>- update to 0.2.0
 * Breaking changes
   * The NURSERY selector cannot be used anymore
   * Legacy selection of nursery rules by exact codes is no longer allowed without preview enabled
   * See also, the &quot;Remapped rules&quot; section which may result in disabled rules.
 * Deprecations
  * The following rules are now deprecated:
   * missing-type-self (ANN101)
   * missing-type-cls (ANN102)
  * The following command line options are now deprecated:
   * --show-source; use --output-format full instead
   * --no-show-source; use --output-format concise instead
   * --output-format text; use full or concise instead
  * The following settings have moved and the previous name is deprecated:
   * ruff.allowed-confusables → ruff.lint.allowed-confusables
   * ruff.dummy-variable-rgx → ruff.lint.dummy-variable-rgx
   * ruff.explicit-preview-rules → ruff.lint.explicit-preview-rules
   * ruff.extend-fixable → ruff.lint.extend-fixable
   * ruff.extend-ignore → ruff.lint.extend-ignore
   * ruff.extend-per-file-ignores → ruff.lint.extend-per-file-ignores
   * ruff.extend-safe-fixes → ruff.lint.extend-safe-fixes
   * ruff.extend-select → ruff.lint.extend-select
   * ruff.extend-unfixable → ruff.lint.extend-unfixable
   * ruff.extend-unsafe-fixes → ruff.lint.extend-unsafe-fixes
   * ruff.external → ruff.lint.external
   * ruff.fixable → ruff.lint.fixable
   * ruff.flake8-annotations → ruff.lint.flake8-annotations
   * ruff.flake8-bandit → ruff.lint.flake8-bandit
   * ruff.flake8-bugbear → ruff.lint.flake8-bugbear
   * ruff.flake8-builtins → ruff.lint.flake8-builtins</comment>
    <requestid>1144159</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>83ef9158eabe271bac6349dcb99ceefe</srcmd5>
    <version>0.2.1</version>
    <time>1707328245</time>
    <user>anag+factory</user>
    <comment>- update to 0.2.1
 * This release includes support for range formatting
   (i.e., the ability to format specific lines within a source file).
 * Preview features
   * [refurb] Implement missing-f-string-syntax (RUF027) 
   * Format module-level docstrings 
 * Formatter
   * Add --range option to ruff format 
   * Don't trim last empty line in docstrings 
 * Bug fixes
   * Skip empty lines when determining base indentation 
   * Drop __get__ and __set__ from unnecessary-dunder-call 
   * Respect generic Protocol in ellipsis removal 
   * Revert &quot;Use publicly available Apple Silicon runners&quot;
 * Performance
   * Skip LibCST parsing for standard dedent adjustments 
   * Remove CST-based fixer for C408 
   * Add our own ignored-names abstractions 
   * Remove CST-based fixers for C400, C401, C410, and C418 
   * Use AhoCorasick to speed up quote match 
   * Remove CST-based fixers for C405 and C409 
   * Add fast-path for comment detection 
   * Invert order of checks in zero-sleep-call 
   * Short-circuit typing matches based on imports 
   * Run dunder method rule on methods directly 
   * Track top-level module imports in the semantic model 
   * Slight speed-up for lowercase and uppercase identifier checks 
   * Remove LibCST-based fixer for C403 
 * Documentation
   * Update max-pos-args example to max-positional-args</comment>
    <requestid>1144921</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>c2102bf01cf759c67f94e9e320713339</srcmd5>
    <version>0.2.2</version>
    <time>1709145991</time>
    <user>anag+factory</user>
    <comment>Forgot to forward?

- update to 0.2.2
 * Highlights include:
   * Initial support formatting f-strings (in --preview).
   * Support for overriding arbitrary configuration options via the CLI
      through an expanded --config argument (e.g., --config &quot;lint.isort.combine-as-imports=false&quot;).
   * Significant performance improvements in Ruff's lexer, parser, and lint rules.
 * Preview features
   * Implement minimal f-string formatting 
   * [pycodestyle] Add blank line(s) rules (E301, E302, E303, E304, E305, E306) 
   * [refurb] Implement readlines_in_for (FURB129) 
 * Rule changes
   * [ruff] Ensure closing parentheses for multiline sequences are always on their own line (RUF022, RUF023) 
   * [numpy] Add missing deprecation violations (NPY002) 
   * [flake8-bandit] Detect mark_safe usages in decorators 
   * [ruff] Expand asyncio-dangling-task (RUF006) to include new_event_loop 
   * [flake8-pyi] Ignore 'unused' private type dicts in class scopes 
 * Formatter
   * Docstring formatting: Preserve tab indentation when using indent-style=tabs 
   * Disable top-level docstring formatting for notebooks 
   * Stabilize quote-style's preserve mode 
 * CLI
   * Allow arbitrary configuration options to be overridden via the CLI 
 * Bug fixes
   * Make show-settings filters directory-agnostic 
   * Respect duplicates when rewriting type aliases 
   * Respect tuple assignments in typing analyzer 
   * Use atomic write when persisting cache 
   * Use non-parenthesized range for DebugText 
   * [flake8-simplify] Avoid false positive with async for loops (SIM113) 
   * [flake8-trio] Respect async with in timeout-without-await 
   * [perflint] Catch a wider range of mutations in PERF101 
   * [pycodestyle] Fix E30X panics on blank lines with trailing white spaces 
   * [pydocstyle] Allow using parameters as a subsection header (D405) 
   * [pydocstyle] Fix blank-line docstring rules for module-level docstrings 
   * [pylint] Accept 0.0 and 1.0 as common magic values (PLR2004) 
   * [pylint] Avoid suggesting set rewrites for non-hashable types 
   * [ruff] Avoid false negatives with string literals inside of method calls (RUF027) 
   * [ruff] Fix panic on with f-string detection (RUF027) 
   * [ruff] Ignore builtins when detecting missing f-strings 
 * Performance
   * Use memchr for string lexing 
   * Use memchr for tab-indentation detection 
   * Reduce Result&lt;Tok, LexicalError&gt; size by using Box&lt;str&gt; instead of String 
   * Reduce size of Expr from 80 to 64 bytes 
   * Improve trailing comma rule performance 
   * Remove unnecessary string cloning from the parser 
</comment>
    <requestid>1152491</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>ee18a87cdf387c82247dac26f4bdc697</srcmd5>
    <version>0.3.0</version>
    <time>1709762691</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.3.0
 * Preview features
   * [flake8-bandit] Remove suspicious-lxml-import (S410) 
   * [pycodestyle] Allow os.environ modifications between imports (E402) 
   * [pycodestyle] Don't warn about a single whitespace character before a comma in a tuple (E203) 
 * Rule changes
   * [eradicate] Detect commented out case statements (ERA001) 
   * [eradicate] Detect single-line code for try:, except:, etc. (ERA001) 
   * [flake8-boolean-trap] Allow boolean positionals in __post_init__ 
   * [flake8-copyright] Allow © in copyright notices 
   * [isort]: Use one blank line after imports in typing stub files 
   * [pylint] New Rule dict-iter-missing-items (PLE1141) 
   * [pylint] Ignore sys.version and sys.platform (PLR1714) 
   * [pyupgrade] Detect literals with unary operators (UP018) 
   * [ruff] Expand rule for list(iterable).pop(0) idiom (RUF015) 
 * Formatter
  * This release introduces the Ruff 2024.2 style, stabilizing the following changes:
   * Prefer splitting the assignment's value over the target or type annotation 
   * Remove blank lines before class docstrings 
   * Wrap multiple context managers in with parentheses when targeting Python 3.9 or newer 
   * Add a blank line after nested classes with a dummy body (...) in typing stub files 
   * Reduce vertical spacing for classes and functions with a dummy (...) body
   * Add a blank line after the module docstring 
   * Parenthesize long type hints in assignments 
   * Preserve indent for single multiline-string call-expressions 
   * Normalize hex escape and unicode escape sequences 
   * Format module docstrings 
 * CLI
   * Explicitly disallow extend as part of a --config flag 
   * Remove build from the default exclusion list</comment>
    <requestid>1155592</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>5a7c34226b242c8ccd179f60f8628a56</srcmd5>
    <version>0.3.2</version>
    <time>1710434540</time>
    <user>anag+factory</user>
    <comment>- update to 0.3.2
 * Preview features
   * Improve single-with item formatting for Python 3.8 or older 
 * Rule changes
   * [pyupgrade] Allow fixes for f-string rule regardless of line length (UP032) 
   * [pycodestyle] Include actual conditions in E712 diagnostics 
 * Bug fixes
   * Fix trailing kwargs end of line comment after slash 
   * Fix unstable with items formatting 
   * Avoid repeating function calls in f-string conversions 
   * Fix E203 false positive for slices in format strings 
   * Fix incorrect Parameter range for *args and **kwargs 
   * Treat typing.Annotated subscripts as type definitions 
 * 0.3.1
 * Preview features
   * [pycodestyle] Fix E301 not triggering on decorated methods. 
   * [pycodestyle] Respect isort settings in blank line rules (E3*) 
   * [pycodestyle] Make blank lines in typing stub files optional (E3*) 
   * [pylint] Implement singledispatch-method (E1519) 
   * [pylint] Implement useless-exception-statement (W0133) 
 * Rule changes
   * [flake8-debugger] Check for use of debugpy and ptvsd debug modules  
   * [pyupgrade] Generate diagnostic for all valid f-string conversions regardless of line length (UP032) 
   * [pep8_naming] Add fixes for N804 and N805 
 * CLI
   * Colorize the output of ruff format --diff 
   * Make --config and --isolated global flags 
   * Correctly expand tildes and environment variables in paths passed to --config 
 * Configuration
   * Accept a PEP 440 version specifier for required-version</comment>
    <requestid>1156882</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>4fe6db10067c51d516706856fe7334aa</srcmd5>
    <version>0.3.3</version>
    <time>1710965429</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.3.3
 * Preview features
   * [flake8-bandit]: Implement S610 rule 
   * [pycodestyle] Implement blank-line-at-end-of-file (W391) 
   * [pycodestyle] Implement redundant-backslash (E502) 
   * [pylint] - implement redeclared-assigned-name (W0128) 
 * Rule changes
   * [flake8_comprehensions] Handled special case for C400 which also matches C416 
   * [flake8-bandit] Implement upstream updates for S311, S324 and S605 
   * [pyflakes] Remove F401 fix for __init__ imports by default and allow opt-in to unsafe fix 
   * [pylint] Implement invalid-bool-return-type (E304) 
   * [pylint] Include builtin warnings in useless-exception-statement (PLW0133) 
 * CLI
   * Add message on success to ruff check 
 * Bug fixes
   * [PIE970] Allow trailing ellipsis in typing.TYPE_CHECKING 
   * Avoid TRIO115 if the argument is a variable 
   * [F811] Avoid removing shadowed imports that point to different symbols 
   * Fix F821 and F822 false positives in .pyi files 
   * Fix F821 false negatives in .py files when from __future__ import annotations is active 
   * Fix case where Indexer fails to identify continuation preceded by newline #10351 
   * Sort hash maps in Settings display 
   * Track conditional deletions in the semantic model 
   * [C413] Wrap expressions in parentheses when negating 
   * [pycodestyle] Do not ignore lines before the first logical line in blank lines rules. 
   * [pycodestyle] Do not trigger E225 and E275 when the next token is a ')' 
   * [pylint] Avoid false-positive slot non-assignment for __dict__ (PLE0237) 
   * Gate f-string struct size test for Rustc &lt; 1.76 
 * Documentation
   * Use ruff.toml format in README</comment>
    <requestid>1159022</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>5e5a1227c70ab75e241a9363fd4e7802</srcmd5>
    <version>0.3.4</version>
    <time>1711477468</time>
    <user>anag+factory</user>
    <comment>- update ruff to 0.3.4
 * Preview features
   * [flake8-simplify] Detect implicit else cases in needless-bool (SIM103) 
   * [pylint] Implement nan-comparison (PLW0117) 
   * [pylint] Implement nonlocal-and-global (E115) 
   * [pylint] Implement singledispatchmethod-function (PLE5120) 
   * [refurb] Implement list-reverse-copy (FURB187) 
 * Rule changes
   * [flake8-pytest-style] Add automatic fix for pytest-parametrize-values-wrong-type (PT007) 
   * [pycodestyle] Allow SPDX license headers to exceed the line length (E501) 
 * Formatter
   * Fix unstable formatting for trailing subscript end-of-line comment 
 * Bug fixes
   * Avoid code comment detection in PEP 723 script tags 
   * Avoid incorrect tuple transformation in single-element case (C409) 
   * Bug fix: Prevent fully defined links name from being reformatted 
   * Consider raw source code for W605 
   * Docs: Link inline settings when not part of options section 
   * Don't treat annotations as redefinitions in .pyi files 
   * Fix E231 bug: Inconsistent catch compared to pycodestyle, such as when dict nested in list 
   * Fix pylint upstream categories not showing in docs 
   * Add missing Options references to blank line docs 
   * 'Revert &quot;F821: Fix false negatives in .py files when from __future__ import annotations is active &quot;' 
   * Apply NFKC normalization to unicode identifiers in the lexer 
   * Avoid failures due to non-deterministic binding ordering 
   * [flake8-bugbear] Allow tuples of exceptions (B030) 
   * [flake8-quotes] Avoid syntax errors due to invalid quotes (Q000, Q002)</comment>
    <requestid>1160627</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>e53f551224e68460d833b084eb632550</srcmd5>
    <version>0.3.5</version>
    <time>1712764133</time>
    <user>anag+factory</user>
    <comment>- update to 0.3.5
 * Preview features
   * [pylint] Implement modified-iterating-set (E4703) 
   * [refurb] Implement for-loop-set-mutations (FURB142) 
   * [refurb] Implement unnecessary-from-float (FURB164) 
   * [refurb] Implement verbose-decimal-constructor (FURB157) 
 * Rule changes
   * [flake8-comprehensions] Handled special case for C401 which also matches C416 
   * [flake8-pyi] Mark unaliased-collections-abc-set-import fix as &quot;safe&quot; for more cases in stub files (PYI025) 
   * [numpy] Add row_stack to NumPy 2.0 migration rule 
   * [pycodestyle] Allow cell magics before an import (E402) 
   * [pycodestyle] Avoid blank line rules for the first logical line in cell 
 * Configuration
   * Respected nested namespace packages 
   * [flake8-boolean-trap] Add setting for user defined allowed boolean trap 
 * Bug fixes
   * Correctly handle references in __all__ definitions when renaming symbols in autofixes 
   * Track ranges of names inside __all__ definitions 
   * [flake8-bugbear] Avoid false positive for usage after continue (B031) 
   * [flake8-copyright] Accept commas in default copyright pattern 
   * [flake8-datetimez] Allow f-strings with %z for DTZ007 
   * [flake8-pytest-style] Fix PT014 autofix for last item in list 
   * [flake8-quotes] Ignore Q000, Q001 when string is inside forward ref 
   * [isort] Always place non-relative imports after relative imports 
   * [isort] Respect Unicode characters in import sorting 
   * [pyflakes] Fix F821 false negatives when from __future__ import annotations is active (attempt 2) 
   * [pyflakes] Make unnecessary-lambda an always-unsafe fix 
   * [pylint] Fixed false-positive on the rule PLW1641 (eq-without-hash) 
   * [ruff] Fix panic in unused # noqa removal with multi-byte space (RUF100) 
 * Documentation</comment>
    <requestid>1166515</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>53cca3bfe84588345d4d1d850959bd45</srcmd5>
    <version>0.3.7</version>
    <time>1713088423</time>
    <user>anag+factory</user>
    <comment>- update to 0.3.7
 * Preview features
   * [flake8-bugbear] Implement loop-iterator-mutation (B909) 
   * [pylint] Implement rule to prefer augmented assignment (PLR6104) 
   * [pylint] Implement bad-staticmethod-argument (PLW0211) 
   * [pylint] Implement if-stmt-min-max (PLR1730, PLR1731) 
   * [pyupgrade] Replace str,Enum multiple inheritance with StrEnum UP042 
   * [refurb] Implement if-expr-instead-of-or-operator (FURB110) 
   * [refurb] Implement int-on-sliced-str (FURB166) 
   * [refurb] Implement write-whole-file (FURB103) 
   * [refurb] Support itemgetter in reimplemented-operator (FURB118) 
   * [flake8_comprehensions] Add sum/min/max to unnecessary comprehension check (C419) 
 * Rule changes
   * [pydocstyle] Require capitalizing docstrings where the first sentence is a single word (D403) 
   * [pycodestyle] Ignore annotated lambdas in class scopes (E731) 
   * [flake8-pyi] Various improvements to PYI034 
   * [flake8-slots] Flag subclasses of call-based typing.NamedTuples as well as subclasses of collections.namedtuple() (SLOT002) 
   * [pyflakes] Allow forward references in class bases in stub files (F821) 
   * [pygrep-hooks] Improve blanket-noqa error message (PGH004) 
 * CLI
   * Support FORCE_COLOR env var 
 * Configuration
   * Support negated patterns in [extend-]per-file-ignores 
 * Bug fixes
   * Avoid TOCTOU errors in cache initialization 
   * [pylint] Recode nan-comparison rule to W0177 
   * [pylint] Reverse min-max logic in if-stmt-min-max 
   * [flake8-import-conventions] Accept non-aliased (but correct) import in unconventional-import-alias (ICN001) 
   * [flake8-quotes] Add semantic model flag when inside f-string replacement field 
   * [pep8-naming] Recursively resolve TypeDicts for N815 violations</comment>
    <requestid>1167007</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>bc4697108c06fac502584d4b64795973</srcmd5>
    <version>0.4.1</version>
    <time>1713964415</time>
    <user>anag+factory</user>
    <comment>- update to 0.4.1
 * A new, hand-written parser
 * A new language server in Rust
 * ruff server is only in alpha, but it has a lot of features that you can try out today:
   * Lints Python files automatically and shows quick-fixes when available
   * Formats Python files, with support for range formatting
   * Comes with commands for quickly performing actions: ruff.applyAutofix, ruff.applyFormat, and ruff.applyOrganizeImports
   * Supports source.fixAll and source.organizeImports source actions
   * Automatically reloads your project configuration when you change it
   * To setup ruff server with your editor, refer to the README.md.
 * Preview features
   * [pylint] Implement invalid-hash-returned (PLE0309) 
   * [pylint] Implement invalid-index-returned (PLE0305) 
   * [pycodestyle] Do not trigger E3 rules on defs following a function/method with a dummy body 
   * [pylint] Implement invalid-bytes-returned (E0308) 
   * [pylint] Implement invalid-length-returned (E0303) 
   * [pylint] Implement self-cls-assignment (W0642) 
   * [pylint] Omit stubs from invalid-bool and invalid-str-return-type 
   * [ruff] New rule unused-async (RUF029) to detect unneeded async keywords on functions 
 * Rule changes
   * [flake8-bandit] Allow urllib.request.urlopen calls with static Request argument (S310) 
   * [flake8-bugbear] Treat raise NotImplemented-only bodies as stub functions (B006) 
   * [flake8-slots] Respect same-file Enum subclasses (SLOT000) 
   * [pylint] Support inverted comparisons (PLR1730) 
 * Linter
   * Improve handling of builtin symbols in linter rules 
   * Improve display of rules in --show-settings 
   * Improve inference capabilities of the BuiltinTypeChecker 
   * Resolve classes and functions relative to script name 
   * Improve performance of RuleTable::any_enabled</comment>
    <requestid>1169832</requestid>
  </revision>
  <revision rev="27" vrev="1">
    <srcmd5>ea641aa9a7ad89b6a2ca99cafc2561e5</srcmd5>
    <version>0.4.3</version>
    <time>1715097750</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.4.3 
 * Enhancements
   * Add support for PEP 696 syntax 
 * Preview features
   * [refurb] Use function range for reimplemented-operator diagnostics 
   * [refurb] Ignore methods in reimplemented-operator (FURB118) 
   * [refurb] Implement fstring-number-format (FURB116) 
   * [ruff] Implement redirected-noqa (RUF101) 
   * [pyflakes] Distinguish between first-party and third-party imports for fix suggestions 
 * Rule changes
   * [flake8-bugbear] Ignore non-abstract class attributes when enforcing B024 
   * [flake8-logging] Include inline instantiations when detecting loggers 
   * [pylint] Also emit PLR0206 for properties with variadic parameters 
   * [ruff] Detect duplicate codes as part of unused-noqa (RUF100) 
   * [flake8-pyi] Allow for overloaded __exit__ and __aexit__ definitions (PYI036) 
   * [pyupgrade] Catch usages of &quot;%s&quot; % var and provide an unsafe fix (UP031) 
   * [refurb] Implement new rule that suggests min/max over sorted() (FURB192) 
 * Formatter
   * Avoid multiline expression if format specifier is present 
 * LSP
   * Write ruff server setup guide for Helix 
   * ruff server no longer hangs after shutdown 
   * ruff server reads from a configuration TOML file in the user configuration directory if no local configuration exists 
   * ruff server respects per-file-ignores configuration 
   * ruff server: Support a custom TOML configuration file 
   * ruff server: Support setting to prioritize project configuration over editor configuration 
   * Fix an issue with missing diagnostics for Neovim and Helix 
   * Implement hover documentation for noqa codes 
   * Introduce common Ruff configuration options with new server settings 
 * Bug fixes</comment>
    <requestid>1172165</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>c25770e30d3bbd1a8c308668e5f4650e</srcmd5>
    <version>0.4.4</version>
    <time>1715686641</time>
    <user>anag+factory</user>
    <comment>- update to 0.4.4
 * Preview features
   * [pycodestyle] Ignore end-of-line comments when determining blank line rules 
   * [pylint] Detect pathlib.Path.open calls in unspecified-encoding (PLW1514) 
   * [flake8-pyi] Implement PYI059 (generic-not-last-base-class) 
   * [flake8-pyi] Implement PYI062 (duplicate-literal-member) 
 * Rule changes
   * [flake8-boolean-trap] Allow passing booleans as positional-only arguments in code such as set(True) 
   * [flake8-bugbear] Ignore enum classes in cached-instance-method (B019) 
 * Server
   * Expand tildes when resolving Ruff server configuration file 
   * Fix ruff server hanging after Neovim closes 
   * Editor settings are used by default if no file-based configuration exists 
 * Bug fixes
   * [pylint] Consider with statements for too-many-branches (PLR0912) 
   * [flake8-blind-except, tryceratops] Respect logged and re-raised expressions in nested statements (BLE001, TRY201) 
   * Recognise assignments such as __all__ = builtins.list([&quot;foo&quot;, &quot;bar&quot;]) as valid __all__ definitions</comment>
    <requestid>1173634</requestid>
  </revision>
  <revision rev="29" vrev="1">
    <srcmd5>84a9a0f89747f4113eb74ba73ed55b14</srcmd5>
    <version>0.4.8</version>
    <time>1717765341</time>
    <user>anag+factory</user>
    <comment>- update ruff: 
* 0.4.8
 * Performance
    * Linter performance has been improved by around 10% on some microbenchmarks
    *  by refactoring the lexer and parser to maintain synchronicity between them 
 * Preview features
    * [flake8-bugbear] Implement return-in-generator (B901) 
    * [flake8-pyi] Implement PYI063 
    * [pygrep_hooks] Check blanket ignores via file-level pragmas (PGH004) 
 * Rule changes
    * [pyupgrade] Update UP035 for Python 3.13 and the latest version of typing_extensions 
    * [numpy] Update NPY001 rule for NumPy 2.0 
 * Server
    * Formatting a document with syntax problems no longer spams a visible error popup 
 * CLI
    * Add RDJson support for --output-format flag 
 * Bug fixes
    * [pyupgrade] Write empty string in lieu of panic when fixing UP032 
    * [flake8-simplify] Simplify double negatives in SIM103 
    * Ensure the expression generator adds a newline before type statements 
    * Respect per-file ignores for blanket and redirected noqa rules 
* 0.4.7
 * Preview features
    * [flake8-pyi] Implement PYI064 
    * [flake8-pyi] Implement PYI066 
    * [flake8-pyi] Implement PYI057 
    * [pyflakes] Enable F822 in __init__.py files by default 
 * Formatter
    * Fix incorrect placement of trailing stub function comments 
 * Server</comment>
    <requestid>1178989</requestid>
  </revision>
  <revision rev="30" vrev="1">
    <srcmd5>28e3f2e778f01202e41c45ca94198f3c</srcmd5>
    <version>0.4.10</version>
    <time>1719255051</time>
    <user>anag+factory</user>
    <comment>- update to 0.4.10
 * Parser
   * Implement re-lexing logic for better error recovery 
 * Rule changes
   * [flake8-copyright] Update CPY001 to check the first 4096 bytes instead of 1024 
   * [pycodestyle] Update E999 to show all syntax errors instead of just the first one 
 * Server
  * Add tracing setup guide to Helix documentation 
  * Add tracing setup guide to Neovim documentation 
  * Defer notebook cell deletion to avoid an error message 
 * Security
  * Guard against malicious ecosystem comment artifacts

- update to 0.4.9:
  * Preview features
    + [pylint] Implement consider-dict-items (C0206) (#11688)
    +  [refurb] Implement repeated-global (FURB154) (#11187)
  * Rule changes
    + [pycodestyle] Adapt fix for E203 to work identical to ruff
      format (#10999)
  * Formatter
    + Fix formatter instability for lines only consisting of
      zero-width characters (#11748)
  * Server
    + Add supported commands in server capabilities (#11850)
    + Use real file path when available in ruff server (#11800)
    + Improve error message when a command is run on an unavailable
      document (#11823)
    + Introduce the ruff.printDebugInformation command (#11831)
    + Tracing system now respects log level and trace level, with</comment>
    <requestid>1182988</requestid>
  </revision>
  <revision rev="31" vrev="1">
    <srcmd5>5bbc0ceb32b781edef940e8c093f676c</srcmd5>
    <version>0.5.0</version>
    <time>1720102893</time>
    <user>anag+factory</user>
    <comment>- update to 0.5.0:
  * Selecting ALL now excludes deprecated rules
  * The released archives now include an extra level of nesting, which
    can be removed with --strip-components=1 when untarring.
  * The release artifact's file name no longer includes the version
    tag. This enables users to install via /latest URLs on GitHub.
  * The diagnostic ranges for some flake8-bandit rules were modified
  * for details see https://github.com/astral-sh/ruff/releases/tag/0.5.0

   * Implement re-lexing logic for better error recovery
   * [flake8-copyright] Update CPY001 to check the first 4096 bytes instead of 1024
   * [pycodestyle] Update E999 to show all syntax errors instead of just the first one
  * Add tracing setup guide to Helix documentation
  * Add tracing setup guide to Neovim documentation
  * Defer notebook cell deletion to avoid an error message</comment>
    <requestid>1184226</requestid>
  </revision>
  <revision rev="32" vrev="1">
    <srcmd5>d331931a2de8e0bd1206bd15fdbad50b</srcmd5>
    <version>0.5.1</version>
    <time>1720458433</time>
    <user>anag+factory</user>
    <comment>- update to 0.5.1:
  * Enable token-based rules on source with syntax errors
  * \[`flake8-bandit`\] Detect `httpx` for `S113`
  * \[`numpy`\] Update `NPY201` to include exception deprecations
  * \[`pylint`\] Generate autofix for `duplicate-bases`
    (`PLE0241`)
  * Avoid syntax error notification for source code actions
  * Consider the content of the new cells during notebook sync
  * Fix replacement edit range computation
  * Disable auto-fix when source has syntax errors
  * Fix cache key collisions for paths with separators
  * Make `requires-python` inference robust to `==`
  * Use char-wise width instead of `str`-width
  * \[`pycodestyle`\] Avoid `E275` if keyword followed by comma
  * \[`pycodestyle`\] Avoid `E275` if keyword is followed by a
    semicolon
  * \[`pylint`\] Skip dummy variables for `PLR1704`</comment>
    <requestid>1186130</requestid>
  </revision>
  <revision rev="33" vrev="1">
    <srcmd5>27b82912fa4b8e48a57d8951498cc0f8</srcmd5>
    <version>0.5.5</version>
    <time>1722425305</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.5.5
 * server funcionality is now stable
 * big list of changes: https://github.com/astral-sh/ruff/blob/main/CHANGELOG.md</comment>
    <requestid>1190325</requestid>
  </revision>
  <revision rev="34" vrev="1">
    <srcmd5>01113ee5cf4022c7b136ee4635fbd7a2</srcmd5>
    <version>0.5.6</version>
    <time>1723548172</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1192842</requestid>
  </revision>
  <revision rev="35" vrev="1">
    <srcmd5>03322402c7ce9ced7dfa792ad347b0e8</srcmd5>
    <version>0.6.1</version>
    <time>1724163190</time>
    <user>anag+factory</user>
    <comment>- update to 0.6.1:
 * Detect imports in src layouts by default for isort rules 
 * The pytest rules PT001 and PT023 now default to omitting the decorator parentheses when there are no arguments .
 * Lint and format Jupyter Notebook by default .
 * big list of changes: https://github.com/astral-sh/ruff/blob/main/CHANGELOG.md</comment>
    <requestid>1194751</requestid>
  </revision>
  <revision rev="36" vrev="1">
    <srcmd5>1cdae53ff29c13ae177c19fd87450ea3</srcmd5>
    <version>0.6.3</version>
    <time>1725363462</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.6.3:
 * Preview features
   * [flake8-simplify] Extend open-file-with-context-handler to work with other standard-library IO modules (SIM115) 
   * [ruff] Avoid unused-async for functions with FastAPI route decorator (RUF029) 
   * [ruff] Ignore fstring-missing-syntax (RUF027) for fastAPI paths 
   * [ruff] Implement check for Decimal called with a float literal (RUF032) 
   * [flake8-simplify] Extend open-file-with-context-handler to work with dbm.sqlite3 (SIM115) 
   * [pycodestyle] Disable E741 in stub files (.pyi) 
   * [pydoclint] Avoid DOC201 on explicit returns in functions that only return None 
 * Rule changes
   * [flake8-bugbear] Update diagnostic message when expression is at the end of function (B015) 
   * [flake8-pyi] Skip type annotations in string-or-bytes-too-long (PYI053) 
   * [flake8-type-checking] Always recognise relative imports as first-party 
   * [flake8-unused-arguments] Ignore unused arguments on stub functions (ARG001) 
   * [pylint] Ignore augmented assignment for self-cls-assignment (PLW0642) 
   * [flake8-async] Disable check for asyncio before Python 3.11 (ASYNC109) 
 * Bug fixes
   * [pep8-naming] Don't flag from imports following conventional import names (N817) 
   * [pylint] - Allow __new__ methods to have cls as their first argument even if decorated with @staticmethod for bad-staticmethod-argument (PLW0211) 
   * [FastAPI] Avoid introducing invalid syntax in fix for fast-api-non-annotated-dependency (FAST002) 
   * [flake8-implicit-str-concat] Normalize octals before merging concatenated strings in single-line-implicit-string-concatenation (ISC001) 
   * [flake8-pytest-style] Improve help message for pytest-incorrect-mark-parentheses-style (PT023) 
   * [pylint] Avoid autofix for calls that aren't min or max as starred expression (PLW3301) 
   * [ruff] Add datetime.time, datetime.tzinfo, and datetime.timezone as immutable function calls (RUF009) 
   * [ruff] Extend comment deletion for RUF100 to include trailing text from noqa directives while preserving any following comments on the same line, if any 
   * Fix dark theme on initial page load for the Ruff playground 
 * Server
   * Show full context in error log messages 
 * Documentation
   * Add hyperfine installation instructions; update hyperfine code samples</comment>
    <requestid>1198261</requestid>
  </revision>
  <revision rev="37" vrev="1">
    <srcmd5>f5f7e472db3741fca1114656a1076ed0</srcmd5>
    <version>0.6.4</version>
    <time>1725995538</time>
    <user>anag+factory</user>
    <comment>- update to 0.6.4:
  * \[`flake8-builtins`\] Use dynamic builtins list based on
    Python version
  * \[`pydoclint`\] Permit yielding `None` in `DOC402` and
    `DOC403`
  * \[`pylint`\] Update diagnostic message for `PLW3201`
  * \[`ruff`\] Implement `post-init-default` (`RUF033`)
  * \[`ruff`\] Implement useless if-else (`RUF034`)
  * \[`flake8-pyi`\] Respect `pep8_naming.classmethod-decorators`
    settings when determining if a method is a classmethod in
    `custom-type-var-return-type` (`PYI019`)
  * \[`flake8-pyi`\] Teach various rules that annotations might
    be stringized
  * \[`pylint`\] Avoid `no-self-use` for `attrs`-style validators
  * \[`pylint`\] Recurse into subscript subexpressions when
    searching for list/dict lookups (`PLR1733`, `PLR1736`)
  * \[`pyupgrade`\] Detect `aiofiles.open` calls in `UP015`
  * \[`pyupgrade`\] Mark `sys.version_info[0] &lt; 3` and similar
    comparisons as outdated (`UP036`)

   * [flake8-simplify] Extend open-file-with-context-handler to work with other standard-library IO modules (SIM115)
   * [ruff] Avoid unused-async for functions with FastAPI route decorator (RUF029)
   * [ruff] Ignore fstring-missing-syntax (RUF027) for fastAPI paths
   * [ruff] Implement check for Decimal called with a float literal (RUF032)
   * [flake8-simplify] Extend open-file-with-context-handler to work with dbm.sqlite3 (SIM115)
   * [pycodestyle] Disable E741 in stub files (.pyi)
   * [pydoclint] Avoid DOC201 on explicit returns in functions that only return None
   * [flake8-bugbear] Update diagnostic message when expression is at the end of function (B015)
   * [flake8-pyi] Skip type annotations in string-or-bytes-too-long (PYI053)
   * [flake8-type-checking] Always recognise relative imports as first-party</comment>
    <requestid>1199612</requestid>
  </revision>
</revisionlist>
