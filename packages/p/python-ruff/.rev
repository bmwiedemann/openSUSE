<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>9b21417c605080fcb3666a2d8520fe0e</srcmd5>
    <version>0.0.292</version>
    <time>1697390871</time>
    <user>anag+factory</user>
    <comment>ruff - fast python linter written in rust</comment>
    <requestid>1117694</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>2b9629aa038b926c895139313214c5b4</srcmd5>
    <version>0.1.0</version>
    <time>1697567134</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.0
 * Breaking changes
  + Unsafe fixes are no longer displayed or applied without opt-in
  + Drop formatting specific rules from the default set
  + The deprecated format setting has been removed
  + The format setting cannot be used to configure the output format, use output-format instead
  + The RUFF_FORMAT environment variable is ignored, use RUFF_OUTPUT_FORMAT instead
  + The --format option has been removed from ruff check, use --output-format instead
 * Rule changes
  + Extend reimplemented-starmap (FURB140) to catch calls with a single and starred argument
  + Improve cases covered by RUF015
  + Update SIM15 to allow open followed by close
  + Respect msgspec.Struct default-copy semantics in RUF012
  + Add sqlalchemy methods to `flake8-boolean-trap`` exclusion list
  + Add fix for PLR1714
  + Add fix for PIE804
  + Add fix for PLC0208
  + Add fix for PYI055
  + Update non-pep695-type-alias to require --unsafe-fixes outside of stub files
  + Improve fix message for UP018
  + Update PLW3201 to support Enum sunder names
 * Preview features
  + Only show warnings for empty preview selectors when enabling rules
  + Add unnecessary-key-check to simplify key in dct and dct[key] to dct.get(key)
  + Add assignment-in-assert to prevent walrus expressions in assert statements
  + [refurb] Add single-item-membership-test (FURB171)
  + [pylint] Add and-or-ternary (R1706)
  + New rules are added in preview.
 * Configuration
  + Add unsafe-fixes setting</comment>
    <requestid>1118297</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>e0dbe8af0b95c1a26617642ef35db8b9</srcmd5>
    <version>0.1.1</version>
    <time>1697836724</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.1
 * Rule changes
   * Add unsafe fix for escape-sequence-in-docstring (D301)
 * Configuration
   * Respect #(deprecated) attribute in configuration options
   * Add [format|lint].exclude options
   * Respect tab-size setting in formatter
   * Add lint.preview
 * Preview features
   * [pylint] Implement literal-membership (PLR6201)
   * [pylint] Implement too-many-boolean-expressions (PLR0916)
   * [pylint] Implement misplaced-bare-raise (E0704)
   * [pylint] Implement global-at-module-level (W0604)
   * [pylint] Implement unspecified-encoding (PLW1514)
   * Add fix for triple-single-quotes (D300)
 * Formatter
   * New code style badge for ruff format
   * Fix comments outside expression parentheses
   * Add --target-version to ruff format
   * Skip over parentheses when detecting in keyword
   * Add --diff option to ruff format
   * Insert newline after nested function or class statements
   * Use pass over ellipsis in non-function/class contexts
 * Bug fixes
   * Lazily evaluate all PEP 695 type alias values
   * Avoid failed assertion when showing fixes from stdin
   * Avoid flagging HTTP and HTTPS literals in urllib-open
   * Avoid flagging bad-dunder-method-name for _
   * Remove Python 2-only methods from URLOpen audit
   * Use set bracket replacement for iteration-over-set to preserve whitespace and comments</comment>
    <requestid>1119204</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>c4f14c7e6eae82fc3e94f0afc301f508</srcmd5>
    <version>0.1.2</version>
    <time>1698249877</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1120279</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>08e1d3197eb04742def27636406f56ce</srcmd5>
    <version>0.1.3</version>
    <time>1698438531</time>
    <user>anag+factory</user>
    <comment>- Update to 0.1.3
 * Formatter
   * Avoid space around pow for None, True and False
   * Avoid sorting all paths in the format command
   * Insert necessary blank line between class and leading comments
   * Avoid introducing new parentheses in annotated assignments
   * Refine the warnings about incompatible linter options
   * Add test and basic implementation for formatter preview mode
   * Refine warning about incompatible isort settings
   * Only omit optional parentheses for starting or ending with parentheses
   * Use source type to determine parser mode for formatting
   * Don't warn about magic trailing comma when isort.force-single-line is true
   * Use SourceKind::diff for formatter
   * Fix fmt:off with trailing child comment
   * Formatter parentheses support for IpyEscapeCommand
 * Linter
   * [pylint] Add buffer methods to bad-dunder-method-name (PLW3201) exclusions
   * Match rule prefixes from external codes setting in unused-noqa
   * Use line-length setting for isort in lieu of pycodestyle.max-line-length
   * Update fix for unnecessary-paren-on-raise-exception to unsafe for unknown types
   * Correct quick fix message for W605
 * Documentation
   * Fix typo in max-doc-length documentation
   * Improve documentation around linter-formatter conflicts
   * Fix link to error suppression documentation in unused-noqa
   * Add external option to unused-noqa documentation
   * Add title attribute to icons
   * Clarify unsafe case in RSE102
   * Fix skipping formatting examples
   * docs: fix name of magic-trailing-comma option in README</comment>
    <requestid>1120740</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>d6d8cd251f8693cd51e650cd8230a880</srcmd5>
    <version>0.1.4</version>
    <time>1699388887</time>
    <user>anag+factory</user>
    <comment>- Update to 0.1.4
 * Preview features
   * [flake8-trio] Implement timeout-without-await (TRIO001)
   * [numpy] Implement NumPy 2.0 migration rule (NPY200)
   * [pylint] Implement bad-open-mode (W1501)
   * [pylint] Implement import-outside-toplevel (C0415) rule
   * [pylint] Implement useless-with-lock (W2101)
   * [pyupgrade] Implement timeout-error-alias (UP041)
   * [refurb] Implement isinstance-type-none (FURB168)
   * Detect confusable Unicode-to-Unicode units in RUF001, RUF002, and RUF003
   * Add newline after module docstrings in preview style
 * Formatter
   * Add a note on line-too-long to the formatter docs
   * Preserve trailing statement semicolons when using fmt: skip
   * Preserve trailing semicolons when using fmt: off
   * Avoid duplicating linter-formatter compatibility warnings
   * Avoid inserting a newline after function docstrings
   * Insert newline between docstring and following own line comment
   * Split tuples in return positions by comma first
   * Avoid treating byte strings as docstrings
   * Add --line-length option to format command
   * Avoid parenthesizing unsplittable because of comments
 * CLI
   * Add --output-format to ruff rule and ruff linter
 * Bug fixes
   * Respect --force-exclude in lint.exclude and format.exclude
   * Respect --extend-per-file-ignores on the CLI
   * Extend bad-dunder-method-name to permit __index__
   * Fix panic with 8 in octal escape
   * Avoid raising D300 when both triple quote styles are present</comment>
    <requestid>1123950</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>9aecac61f0953ca41b3b191cfd3c088e</srcmd5>
    <version>0.1.5</version>
    <time>1699994536</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.5
 * Preview features
   * [flake8-bandit] Implement mako-templates (S702)
   * [flake8-trio] Implement TRIO105
   * [flake8-trio] Implement TRIO109
   * [flake8-trio] Implement TRIO110
   * [flake8-trio] Implement TRIO115
   * [refurb] Implement type-none-comparison (FURB169)
   * Flag all comparisons against builtin types in E721
   * Make SIM118 fix as safe when the expression is a known dictionary
 * Formatter
   * Fix multiline lambda expression statement formatting
 * CLI
   * Add hidden --extension to override inference of source type from file extension
   * Configuration
   * Account for selector specificity when merging extend_unsafe_fixes and override extend_safe_fixes
   * Add support for disabling cache with RUFF_NO_CACHE environment variable
 * Bug fixes
   * [E721] Flag comparisons to memoryview
   * Allow collapsed-ellipsis bodies in other statements
   * Avoid D301 autofix for u prefixed strings
   * Only flag flake8-trio rules when trio import is present
   * Reject more syntactically invalid Python programs
   * Avoid raising TRIO115 violations for trio.sleep(...) calls with non-number values
   * Fix F841 false negative on assignment to multiple variables
 * Documentation
   * Fix link to isort known-first-party
   * Add notes on fix safety to a few rules
   * Add missing toml config tabs
   * Add instructions for configuration of Emacs</comment>
    <requestid>1125607</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>57faa40e0426a938dcc394fa683d349c</srcmd5>
    <version>0.1.6</version>
    <time>1700511557</time>
    <user>anag+factory</user>
    <comment>- switch to libalternatives
- drop cargo_config
- update _service for new cargo-vendor service
- update to 0.1.6
 * Preview features
   * [flake8-boolean-trap] Extend boolean-type-hint-positional-argument (FBT001) to include booleans in unions
   * [flake8-pie] Extend reimplemented-list-builtin (PIE807) to dict reimplementations
   * [flake8-pie] Extend unnecessary-pass (PIE790) to include ellipses (...)
   * [flake8-pie] Implement fix for unnecessary-spread (PIE800)
   * [flake8-quotes] Implement unnecessary-escaped-quote (Q004)
   * [pycodestyle] Implement fix for multiple-spaces-after-keyword (E271) and multiple-spaces-before-keyword (E272)
   * [pycodestyle] Implement fix for multiple-spaces-after-operator (E222) and multiple-spaces-before-operator (E221)
   * [pyflakes] Extend is-literal (F632) to include comparisons against mutable initializers
   * [pylint] Implement redefined-argument-from-local (PLR1704)
   * [pylint] Implement fix for unnecessary-lambda (PLW0108)
   * [refurb] Implement if-expr-min-max (FURB136)
   * [refurb] Implement math-constant (FURB152)
 * Rule changes
   * [flake8-annotations] Add autotyping-like return type inference for annotation rules
   * [flake8-future-annotations] Implement fix for future-required-type-annotation (FA102)
   * [flake8-implicit-namespace-package] Avoid missing namespace violations in scripts with shebangs
   * [pydocstyle] Update over-indentation (D208) to preserve indentation offsets when fixing overindented lines
   * [pyupgrade] Refine timeout-error-alias (UP041) to remove false positives
 * Formatter
   * Fix instability in await formatting with fluent style
   * Compare formatted and unformatted ASTs during formatter tests
   * Preserve trailing semicolon for Notebooks
 * CLI
   * Improve debug printing for resolving origin of config settings
   * Write unchanged, excluded files to stdout when read via stdin</comment>
    <requestid>1127488</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>876e25a8f6545af6b6b490c82a168b9a</srcmd5>
    <version>0.1.7</version>
    <time>1702071196</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.7
 * Preview features
   * Implement multiline dictionary and list hugging for preview style
   * Implement the fix_power_op_line_length preview style
   * Use Python version to determine typing rewrite safety
   * [flake8-annotations] Enable auto-return-type involving Optional and Union annotations
   * [flake8-bandit] Implement django-raw-sql (S611)
   * [flake8-bandit] Implement tarfile-unsafe-members (S202)
   * [flake8-pyi] Implement fix for unnecessary-literal-union (PYI030)
   * [flake8-simplify] Extend dict-get-with-none-default (SIM910) to non-literals
   * [pylint] - add unnecessary-list-index-lookup (PLR1736) + autofix
   * [pylint] - implement R0202 and R0203 with autofixes
   * [pylint] Implement repeated-keyword (PLe1132)
   * [pylint] Implement too-many-positional (PLR0917)
   * [pylint] Implement unnecessary-dict-index-lookup (PLR1733)
   * [refurb] Implement redundant-log-base (FURB163)
 * Rule changes
   * [flake8-boolean-trap] Allow booleans in @override methods
   * [flake8-bugbear] Avoid B015,B018 for last expression in a cell
   * [flake8-pie] Allow ellipses for enum values in stub files
   * [flake8-pyi] Check PEP 695 type aliases for snake-case-type-alias and t-suffixed-type-alias
   * [flake8-pyi] Check for kwarg and vararg NoReturn type annotations
   * [flake8-simplify] Omit select context managers from SIM117
   * [pep8-naming] Allow Django model loads in non-lowercase-variable-in-function (N806)
   * [pycodestyle] Avoid E703 for last expression in a cell
   * [pycodestyle] Update E402 to work at cell level for notebooks
   * [pydocstyle] Avoid D100 for Jupyter Notebooks
   * [pylint] Implement fix for unspecified-encoding (PLW1514)
 * Formatter
   * Avoid unstable formatting in ellipsis-only body with trailing comment</comment>
    <requestid>1132059</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>5ac778517e617e4c50dc41b5fc9717c9</srcmd5>
    <version>0.1.8</version>
    <time>1702587824</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.8
 * Preview features
   * Add &quot;preserve&quot; quote-style to mimic Black's skip-string-normalization
   * Implement prefer_splitting_right_hand_side_of_assignments preview style
   * [pycodestyle] Add fix for unexpected-spaces-around-keyword-parameter-equals
   * [pycodestyle] Add fix for comment-related whitespace rules
   * [pycodestyle] Allow sys.path modifications between imports
   * [refurb] Implement hashlib-digest-hex (FURB181)
 * Rule changes
   * Allow flake8-type-checking rules to automatically quote runtime-evaluated references
   * Allow transparent cell magics in Jupyter Notebooks
   * [flake8-annotations] Avoid ANN2xx fixes for abstract methods with empty bodies
   * [flake8-self] Ignore underscore references in type annotations
   * [pep8-naming] Allow class names when apps.get_model is a non-string
   * [pycodestyle] Allow matplotlib.use calls to intersperse imports
   * [pyflakes] Support fixing unused assignments in tuples by renaming variables (F841)
   * [pylint] Add fix for subprocess-run-without-check (PLW1510)
 * Formatter
   * Add docstring-code-format knob to enable docstring snippet formatting
   * Use double quotes for all docstrings, including single-quoted docstrings
   * Implement &quot;dynamic&quot; line width mode for docstring code formatting
   * Support reformatting Markdown code blocks
   * add support for formatting reStructuredText code snippets
   * Avoid trailing comma for single-argument with positional separator
   * Fix handling of trailing target comment
 * CLI
   * Hide unsafe fix suggestions when explicitly disabled
   * Add SARIF support to --output-format
 * Bug fixes
   * Apply unnecessary index rule prior to enumerate rewrite</comment>
    <requestid>1133053</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>5a20b7b15eec01a412bdbacfaa4df246</srcmd5>
    <version>0.1.9</version>
    <time>1703281285</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.9
 * Breaking changes
   * Add site-packages to default exclusions
 * Preview features
   * Fix: Avoid parenthesizing subscript targets and values
   * [pylint] Implement too-many-locals (PLR0914)
   * Implement reimplemented_operator (FURB118)
   * Add a rule to detect string members in runtime-evaluated unions
   * Implement no_blank_line_before_class_docstring preview style
 * Rule changes
   * CONSTANT_CASE variables are improperly flagged for yoda violation (SIM300)
   * [flake8-pyi] Cover ParamSpecs and TypeVarTuples (PYI018)
   * [flake8-bugbear] Add fix for zip-without-explicit-strict (B905)
   * Add fix to automatically remove print and pprint statements (T201, T203)
   * Prefer Never to NoReturn in auto-typing in Python &gt;= 3.11 (ANN201)
 * Formatter
   * can_omit_optional_parentheses: Exit early for unparenthesized expressions
   * Fix dynamic mode with doctests so that it doesn't exceed configured line width
   * Fix can_omit_optional_parentheses for expressions with a right most fstring
   * Add target_version to formatter options
 * CLI
   * Update ruff format --check to display message for already formatted files
 * Bug fixes
   * Reverse order of arguments for operator.contains
   * Iterate over lambdas in deferred type annotations
   * Fix panic in D208 with multibyte indent
   * Add support for NoReturn in auto-return-typing
   * Allow removal of typing from exempt-modules
   * Avoid mutable-class-default violations for Pydantic subclasses
   * Fix dropped union expressions for piped non-types in PYI055 autofix</comment>
    <requestid>1134560</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>fd2c0403fd8696943829157fbac84672</srcmd5>
    <version>0.1.11</version>
    <time>1704753973</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.11
   * [pylint] Implement super-without-brackets (W0245) 
   * Check path string properly in python -m ruff invocations 
 * Documentation
   * Tweak relative-imports message 
   * Add fix safety note for yield-in-for-loop 
 * 0.1.10
 * Preview features
   * Improve dummy_implementations preview style formatting 
   * Normalise Hex and unicode escape sequences in strings 
   * Parenthesize long type annotations in annotated assignments 
   * Parenthesize multi-context managers in with statements 
   * [flake8-pyi] Implement generator-return-from-iter-method (PYI058) 
   * [pylint] Implement empty-comment (PLR2044) 
   * [refurb] Implement bit-count (FURB161) 
   * [ruff] Add never-union rule to detect redundant typing.NoReturn and typing.Never 
 * CLI
   * Add paths to TOML parse errors 
   * Add row and column numbers to formatter parse errors 
   * Improve responsiveness when invoked via Python 
   * Short rule messages should not end with a period 
 * Configuration
   * Respect runtime-required decorators on functions 
 * Bug fixes
   * Avoid asyncio-dangling-task for nonlocal and global bindings 
   * Escape trailing placeholders in rule documentation 
   * Fix continuation detection following multi-line strings 
   * Fix scoping for generators in named expressions in classes 
   * Port from obsolete wsl crate to is-wsl 
   * Remove special pre-visit for module docstrings</comment>
    <requestid>1137528</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>44ae0efd9c9d819ba75965903cbb0641</srcmd5>
    <version>0.1.12</version>
    <time>1705099592</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.12:
 * Preview features
   * Formatter: Hug multiline-strings in preview style
   * [flake8-bandit] Add ssl-with-no-version (S504)
   * [flake8-bandit] Implement ssl-insecure-version (S502)
   * [flake8-bandit] Implement ssl-with-bad-defaults (S503)
   * [flake8-bandit] Implement suspicious import rules (S4XX)
   * [flake8-simplify] Implement zip-dict-keys-and-values (SIM911)
   * [pyflakes] Add a fix for redefined-while-unused (F811)
   * [pylint] Implement unnecessary-dunder-call (C2801)
   * [ruff] Add parenthesize-chained-operators (RUF021) to enforce parentheses in a or b and c
 * Rule changes
   * [flake8-boolean-trap] Allow Boolean positional arguments in setters
   * [flake8-builtins] Restrict builtin-attribute-shadowing (A003) to actual shadowed references
   * [flake8-pyi] Add fix for generator-return-from-iter-method (PYI058)
   * [pyflakes] Don't flag redefined-while-unused (F811) in if branches
   * [pyupgrade] Add some additional Python 3.12 typing members to deprecated-import
   * [ruff] Add fix for parenthesize-chained-operators (RUF021)
   * [ruff] Include subscripts and attributes in static key rule (RUF011)
   * [ruff] Support variable keys in static dictionary key rule (RUF011)
 * Formatter
   * Generate deterministic IDs when formatting notebooks
   * Allow # fmt: skip with interspersed same-line comments
   * Parenthesize breaking named expressions in match guards
 * Bug fixes
   * Add cell indexes to all diagnostics
   * Avoid infinite loop in constant vs. None comparisons
   * Handle raises with implicit alternate branches
   * Ignore trailing quotes for unclosed l-brace errors
   * Respect multi-segment submodule imports when resolving qualified names</comment>
    <requestid>1138312</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>7ab5be737ff864f265fbb16fbd833c37</srcmd5>
    <version>0.1.13</version>
    <time>1705353658</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.13
 * Bug fixes
   * Include base pyproject when initializing cache settings 
   * [flake8-simplify] Account for possibly-empty f-string values in truthiness logic 
   * [pylint] Add the missing period in unnecessary-dunder-call 
   * [pylint] Fix __aenter__ message in unnecessary-dunder-call</comment>
    <requestid>1138846</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>adaaef8935b1eef7bf979c52e948d8e2</srcmd5>
    <version>0.1.14</version>
    <time>1705875044</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.14
 * Preview features
   * [flake8-bugbear] Add fix for duplicate-value (B033) 
   * [flake8-simplify] Implement enumerate-for-loop (SIM113) 
   * [pygrep_hooks] Add fix for deprecated-log-warn (PGH002) 
   * [pylint] Implement import-private-name (C2701) 
   * [refurb] Implement regex-flag-alias with fix (FURB167) 
   * [ruff] Add rule and fix to sort contents of __all__ (RUF022) 
   * [tryceratops] Add fix for error-instead-of-exception (TRY400) 
 * Rule changes
   * [flake8-pyi] Fix PYI047 false negatives on PEP-695 type aliases 
   * [flake8-pyi] Fix PYI049 false negatives on call-based TypedDicts 
   * [pylint] Exclude self and cls when counting method arguments (PLR0917) 
 * CLI
   * --show-settings displays active settings in a far more readable format 
   * Add --extension support to the formatter 
   * Configuration
   * Ignore preview status for fixable and unfixable selectors 
   * [pycodestyle] Use the configured tab size when expanding indents 
 * Bug fixes
   * Recursively visit deferred AST nodes 
   * Visit deferred lambdas before type definitions 
   * [flake8-simplify] Avoid some more enumerate-for-loop false positives (SIM113) 
   * [pandas-vet] Limit inplace diagnostics to methods that accept inplace 
   * [pylint] Add the __prepare__ method to the list of recognized dunder method 
   * [pylint] Ignore unnecessary dunder calls within dunder definitions 
   * [refurb] Avoid bailing when reimplemented-operator is called on function (FURB118) 
   * [ruff] Avoid treating named expressions as static keys (RUF011) 
 * Documentation
   * Add instructions on using noqa with isort rules</comment>
    <requestid>1140308</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>f383ace0be6b6b9a33cf3691524398e6</srcmd5>
    <version>0.1.15</version>
    <time>1706885209</time>
    <user>anag+factory</user>
    <comment>- update to 0.1.15
 * Preview features
   * Error when NURSERY selector is used with --preview 
   * Preserve indentation around multiline strings in formatter 
   * [flake8-return] Add fixes for all rules (RET505, RET506, RET507, RET508) 
   * [flake8-simplify] Add fix for if-with-same-arms (SIM114) 
   * [pycodestyle] Add fix for multiple-imports-on-one-line (E401) 
   * [pylint] Add fix for collapsible-else-if (PLR5501) 
   * [pylint] Add fix for useless-else-on-loop (PLW0120) 
   * [pylint] Implement assigning-non-slot (E0237) 
   * [pylint] Implement potential-index-error (PLE0643) 
   * [pylint] Implement too-many-nested-blocks (PLR1702) 
   * [ruff] Add rule to sort __slots__ and __match_args__ 
   * [ruff] Detect unnecessary dict comprehensions for iterables (RUF025) 
   * [ruff] Guard against use of default_factory as a keyword argument (RUF026) 
   * [ruff] Implement mutable-fromkeys-value (RUF024) 
 * CLI
   * Enable auto-wrapping of --help output 
 * Bug fixes
   * Avoid rendering display-only rules as fixable 
   * Detect automagic-like assignments in notebooks 
   * Generate custom JSON schema for dynamic setting 
   * [flake8-no-pep420] Include global --config when determining namespace packages 
   * [flake8-pie] Omit bound tuples passed to .startswith or .endswith 
   * [flake8-return] Avoid panic when fixing inlined else blocks 
   * [flake8-return] Consider exception suppression in unnecessary assignment 
   * [flake8-return] Take NoReturn annotation into account when analyzing implicit returns 
   * [flake8-simplify] Support inverted returns in needless-bool (SIM103) 
   * [flake8-type-checking] Add Pydantic's BaseConfig to default-copy list 
   * [flake8-type-checking] Avoid marking InitVar as a typing-only annotation</comment>
    <requestid>1143460</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>8d6eafd3db80aa89e52856bb369e9a80</srcmd5>
    <version>0.2.0</version>
    <time>1707166903</time>
    <user>anag+factory</user>
    <comment>- update to 0.2.0
 * Breaking changes
   * The NURSERY selector cannot be used anymore
   * Legacy selection of nursery rules by exact codes is no longer allowed without preview enabled
   * See also, the &quot;Remapped rules&quot; section which may result in disabled rules.
 * Deprecations
  * The following rules are now deprecated:
   * missing-type-self (ANN101)
   * missing-type-cls (ANN102)
  * The following command line options are now deprecated:
   * --show-source; use --output-format full instead
   * --no-show-source; use --output-format concise instead
   * --output-format text; use full or concise instead
  * The following settings have moved and the previous name is deprecated:
   * ruff.allowed-confusables → ruff.lint.allowed-confusables
   * ruff.dummy-variable-rgx → ruff.lint.dummy-variable-rgx
   * ruff.explicit-preview-rules → ruff.lint.explicit-preview-rules
   * ruff.extend-fixable → ruff.lint.extend-fixable
   * ruff.extend-ignore → ruff.lint.extend-ignore
   * ruff.extend-per-file-ignores → ruff.lint.extend-per-file-ignores
   * ruff.extend-safe-fixes → ruff.lint.extend-safe-fixes
   * ruff.extend-select → ruff.lint.extend-select
   * ruff.extend-unfixable → ruff.lint.extend-unfixable
   * ruff.extend-unsafe-fixes → ruff.lint.extend-unsafe-fixes
   * ruff.external → ruff.lint.external
   * ruff.fixable → ruff.lint.fixable
   * ruff.flake8-annotations → ruff.lint.flake8-annotations
   * ruff.flake8-bandit → ruff.lint.flake8-bandit
   * ruff.flake8-bugbear → ruff.lint.flake8-bugbear
   * ruff.flake8-builtins → ruff.lint.flake8-builtins</comment>
    <requestid>1144159</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>83ef9158eabe271bac6349dcb99ceefe</srcmd5>
    <version>0.2.1</version>
    <time>1707328245</time>
    <user>anag+factory</user>
    <comment>- update to 0.2.1
 * This release includes support for range formatting
   (i.e., the ability to format specific lines within a source file).
 * Preview features
   * [refurb] Implement missing-f-string-syntax (RUF027) 
   * Format module-level docstrings 
 * Formatter
   * Add --range option to ruff format 
   * Don't trim last empty line in docstrings 
 * Bug fixes
   * Skip empty lines when determining base indentation 
   * Drop __get__ and __set__ from unnecessary-dunder-call 
   * Respect generic Protocol in ellipsis removal 
   * Revert &quot;Use publicly available Apple Silicon runners&quot;
 * Performance
   * Skip LibCST parsing for standard dedent adjustments 
   * Remove CST-based fixer for C408 
   * Add our own ignored-names abstractions 
   * Remove CST-based fixers for C400, C401, C410, and C418 
   * Use AhoCorasick to speed up quote match 
   * Remove CST-based fixers for C405 and C409 
   * Add fast-path for comment detection 
   * Invert order of checks in zero-sleep-call 
   * Short-circuit typing matches based on imports 
   * Run dunder method rule on methods directly 
   * Track top-level module imports in the semantic model 
   * Slight speed-up for lowercase and uppercase identifier checks 
   * Remove LibCST-based fixer for C403 
 * Documentation
   * Update max-pos-args example to max-positional-args</comment>
    <requestid>1144921</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>c2102bf01cf759c67f94e9e320713339</srcmd5>
    <version>0.2.2</version>
    <time>1709145991</time>
    <user>anag+factory</user>
    <comment>Forgot to forward?

- update to 0.2.2
 * Highlights include:
   * Initial support formatting f-strings (in --preview).
   * Support for overriding arbitrary configuration options via the CLI
      through an expanded --config argument (e.g., --config &quot;lint.isort.combine-as-imports=false&quot;).
   * Significant performance improvements in Ruff's lexer, parser, and lint rules.
 * Preview features
   * Implement minimal f-string formatting 
   * [pycodestyle] Add blank line(s) rules (E301, E302, E303, E304, E305, E306) 
   * [refurb] Implement readlines_in_for (FURB129) 
 * Rule changes
   * [ruff] Ensure closing parentheses for multiline sequences are always on their own line (RUF022, RUF023) 
   * [numpy] Add missing deprecation violations (NPY002) 
   * [flake8-bandit] Detect mark_safe usages in decorators 
   * [ruff] Expand asyncio-dangling-task (RUF006) to include new_event_loop 
   * [flake8-pyi] Ignore 'unused' private type dicts in class scopes 
 * Formatter
   * Docstring formatting: Preserve tab indentation when using indent-style=tabs 
   * Disable top-level docstring formatting for notebooks 
   * Stabilize quote-style's preserve mode 
 * CLI
   * Allow arbitrary configuration options to be overridden via the CLI 
 * Bug fixes
   * Make show-settings filters directory-agnostic 
   * Respect duplicates when rewriting type aliases 
   * Respect tuple assignments in typing analyzer 
   * Use atomic write when persisting cache 
   * Use non-parenthesized range for DebugText 
   * [flake8-simplify] Avoid false positive with async for loops (SIM113) 
   * [flake8-trio] Respect async with in timeout-without-await 
   * [perflint] Catch a wider range of mutations in PERF101 
   * [pycodestyle] Fix E30X panics on blank lines with trailing white spaces 
   * [pydocstyle] Allow using parameters as a subsection header (D405) 
   * [pydocstyle] Fix blank-line docstring rules for module-level docstrings 
   * [pylint] Accept 0.0 and 1.0 as common magic values (PLR2004) 
   * [pylint] Avoid suggesting set rewrites for non-hashable types 
   * [ruff] Avoid false negatives with string literals inside of method calls (RUF027) 
   * [ruff] Fix panic on with f-string detection (RUF027) 
   * [ruff] Ignore builtins when detecting missing f-strings 
 * Performance
   * Use memchr for string lexing 
   * Use memchr for tab-indentation detection 
   * Reduce Result&lt;Tok, LexicalError&gt; size by using Box&lt;str&gt; instead of String 
   * Reduce size of Expr from 80 to 64 bytes 
   * Improve trailing comma rule performance 
   * Remove unnecessary string cloning from the parser 
</comment>
    <requestid>1152491</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>ee18a87cdf387c82247dac26f4bdc697</srcmd5>
    <version>0.3.0</version>
    <time>1709762691</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.3.0
 * Preview features
   * [flake8-bandit] Remove suspicious-lxml-import (S410) 
   * [pycodestyle] Allow os.environ modifications between imports (E402) 
   * [pycodestyle] Don't warn about a single whitespace character before a comma in a tuple (E203) 
 * Rule changes
   * [eradicate] Detect commented out case statements (ERA001) 
   * [eradicate] Detect single-line code for try:, except:, etc. (ERA001) 
   * [flake8-boolean-trap] Allow boolean positionals in __post_init__ 
   * [flake8-copyright] Allow © in copyright notices 
   * [isort]: Use one blank line after imports in typing stub files 
   * [pylint] New Rule dict-iter-missing-items (PLE1141) 
   * [pylint] Ignore sys.version and sys.platform (PLR1714) 
   * [pyupgrade] Detect literals with unary operators (UP018) 
   * [ruff] Expand rule for list(iterable).pop(0) idiom (RUF015) 
 * Formatter
  * This release introduces the Ruff 2024.2 style, stabilizing the following changes:
   * Prefer splitting the assignment's value over the target or type annotation 
   * Remove blank lines before class docstrings 
   * Wrap multiple context managers in with parentheses when targeting Python 3.9 or newer 
   * Add a blank line after nested classes with a dummy body (...) in typing stub files 
   * Reduce vertical spacing for classes and functions with a dummy (...) body
   * Add a blank line after the module docstring 
   * Parenthesize long type hints in assignments 
   * Preserve indent for single multiline-string call-expressions 
   * Normalize hex escape and unicode escape sequences 
   * Format module docstrings 
 * CLI
   * Explicitly disallow extend as part of a --config flag 
   * Remove build from the default exclusion list</comment>
    <requestid>1155592</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>5a7c34226b242c8ccd179f60f8628a56</srcmd5>
    <version>0.3.2</version>
    <time>1710434540</time>
    <user>anag+factory</user>
    <comment>- update to 0.3.2
 * Preview features
   * Improve single-with item formatting for Python 3.8 or older 
 * Rule changes
   * [pyupgrade] Allow fixes for f-string rule regardless of line length (UP032) 
   * [pycodestyle] Include actual conditions in E712 diagnostics 
 * Bug fixes
   * Fix trailing kwargs end of line comment after slash 
   * Fix unstable with items formatting 
   * Avoid repeating function calls in f-string conversions 
   * Fix E203 false positive for slices in format strings 
   * Fix incorrect Parameter range for *args and **kwargs 
   * Treat typing.Annotated subscripts as type definitions 
 * 0.3.1
 * Preview features
   * [pycodestyle] Fix E301 not triggering on decorated methods. 
   * [pycodestyle] Respect isort settings in blank line rules (E3*) 
   * [pycodestyle] Make blank lines in typing stub files optional (E3*) 
   * [pylint] Implement singledispatch-method (E1519) 
   * [pylint] Implement useless-exception-statement (W0133) 
 * Rule changes
   * [flake8-debugger] Check for use of debugpy and ptvsd debug modules  
   * [pyupgrade] Generate diagnostic for all valid f-string conversions regardless of line length (UP032) 
   * [pep8_naming] Add fixes for N804 and N805 
 * CLI
   * Colorize the output of ruff format --diff 
   * Make --config and --isolated global flags 
   * Correctly expand tildes and environment variables in paths passed to --config 
 * Configuration
   * Accept a PEP 440 version specifier for required-version</comment>
    <requestid>1156882</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>4fe6db10067c51d516706856fe7334aa</srcmd5>
    <version>0.3.3</version>
    <time>1710965429</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.3.3
 * Preview features
   * [flake8-bandit]: Implement S610 rule 
   * [pycodestyle] Implement blank-line-at-end-of-file (W391) 
   * [pycodestyle] Implement redundant-backslash (E502) 
   * [pylint] - implement redeclared-assigned-name (W0128) 
 * Rule changes
   * [flake8_comprehensions] Handled special case for C400 which also matches C416 
   * [flake8-bandit] Implement upstream updates for S311, S324 and S605 
   * [pyflakes] Remove F401 fix for __init__ imports by default and allow opt-in to unsafe fix 
   * [pylint] Implement invalid-bool-return-type (E304) 
   * [pylint] Include builtin warnings in useless-exception-statement (PLW0133) 
 * CLI
   * Add message on success to ruff check 
 * Bug fixes
   * [PIE970] Allow trailing ellipsis in typing.TYPE_CHECKING 
   * Avoid TRIO115 if the argument is a variable 
   * [F811] Avoid removing shadowed imports that point to different symbols 
   * Fix F821 and F822 false positives in .pyi files 
   * Fix F821 false negatives in .py files when from __future__ import annotations is active 
   * Fix case where Indexer fails to identify continuation preceded by newline #10351 
   * Sort hash maps in Settings display 
   * Track conditional deletions in the semantic model 
   * [C413] Wrap expressions in parentheses when negating 
   * [pycodestyle] Do not ignore lines before the first logical line in blank lines rules. 
   * [pycodestyle] Do not trigger E225 and E275 when the next token is a ')' 
   * [pylint] Avoid false-positive slot non-assignment for __dict__ (PLE0237) 
   * Gate f-string struct size test for Rustc &lt; 1.76 
 * Documentation
   * Use ruff.toml format in README</comment>
    <requestid>1159022</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>5e5a1227c70ab75e241a9363fd4e7802</srcmd5>
    <version>0.3.4</version>
    <time>1711477468</time>
    <user>anag+factory</user>
    <comment>- update ruff to 0.3.4
 * Preview features
   * [flake8-simplify] Detect implicit else cases in needless-bool (SIM103) 
   * [pylint] Implement nan-comparison (PLW0117) 
   * [pylint] Implement nonlocal-and-global (E115) 
   * [pylint] Implement singledispatchmethod-function (PLE5120) 
   * [refurb] Implement list-reverse-copy (FURB187) 
 * Rule changes
   * [flake8-pytest-style] Add automatic fix for pytest-parametrize-values-wrong-type (PT007) 
   * [pycodestyle] Allow SPDX license headers to exceed the line length (E501) 
 * Formatter
   * Fix unstable formatting for trailing subscript end-of-line comment 
 * Bug fixes
   * Avoid code comment detection in PEP 723 script tags 
   * Avoid incorrect tuple transformation in single-element case (C409) 
   * Bug fix: Prevent fully defined links name from being reformatted 
   * Consider raw source code for W605 
   * Docs: Link inline settings when not part of options section 
   * Don't treat annotations as redefinitions in .pyi files 
   * Fix E231 bug: Inconsistent catch compared to pycodestyle, such as when dict nested in list 
   * Fix pylint upstream categories not showing in docs 
   * Add missing Options references to blank line docs 
   * 'Revert &quot;F821: Fix false negatives in .py files when from __future__ import annotations is active &quot;' 
   * Apply NFKC normalization to unicode identifiers in the lexer 
   * Avoid failures due to non-deterministic binding ordering 
   * [flake8-bugbear] Allow tuples of exceptions (B030) 
   * [flake8-quotes] Avoid syntax errors due to invalid quotes (Q000, Q002)</comment>
    <requestid>1160627</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>e53f551224e68460d833b084eb632550</srcmd5>
    <version>0.3.5</version>
    <time>1712764133</time>
    <user>anag+factory</user>
    <comment>- update to 0.3.5
 * Preview features
   * [pylint] Implement modified-iterating-set (E4703) 
   * [refurb] Implement for-loop-set-mutations (FURB142) 
   * [refurb] Implement unnecessary-from-float (FURB164) 
   * [refurb] Implement verbose-decimal-constructor (FURB157) 
 * Rule changes
   * [flake8-comprehensions] Handled special case for C401 which also matches C416 
   * [flake8-pyi] Mark unaliased-collections-abc-set-import fix as &quot;safe&quot; for more cases in stub files (PYI025) 
   * [numpy] Add row_stack to NumPy 2.0 migration rule 
   * [pycodestyle] Allow cell magics before an import (E402) 
   * [pycodestyle] Avoid blank line rules for the first logical line in cell 
 * Configuration
   * Respected nested namespace packages 
   * [flake8-boolean-trap] Add setting for user defined allowed boolean trap 
 * Bug fixes
   * Correctly handle references in __all__ definitions when renaming symbols in autofixes 
   * Track ranges of names inside __all__ definitions 
   * [flake8-bugbear] Avoid false positive for usage after continue (B031) 
   * [flake8-copyright] Accept commas in default copyright pattern 
   * [flake8-datetimez] Allow f-strings with %z for DTZ007 
   * [flake8-pytest-style] Fix PT014 autofix for last item in list 
   * [flake8-quotes] Ignore Q000, Q001 when string is inside forward ref 
   * [isort] Always place non-relative imports after relative imports 
   * [isort] Respect Unicode characters in import sorting 
   * [pyflakes] Fix F821 false negatives when from __future__ import annotations is active (attempt 2) 
   * [pyflakes] Make unnecessary-lambda an always-unsafe fix 
   * [pylint] Fixed false-positive on the rule PLW1641 (eq-without-hash) 
   * [ruff] Fix panic in unused # noqa removal with multi-byte space (RUF100) 
 * Documentation</comment>
    <requestid>1166515</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>53cca3bfe84588345d4d1d850959bd45</srcmd5>
    <version>0.3.7</version>
    <time>1713088423</time>
    <user>anag+factory</user>
    <comment>- update to 0.3.7
 * Preview features
   * [flake8-bugbear] Implement loop-iterator-mutation (B909) 
   * [pylint] Implement rule to prefer augmented assignment (PLR6104) 
   * [pylint] Implement bad-staticmethod-argument (PLW0211) 
   * [pylint] Implement if-stmt-min-max (PLR1730, PLR1731) 
   * [pyupgrade] Replace str,Enum multiple inheritance with StrEnum UP042 
   * [refurb] Implement if-expr-instead-of-or-operator (FURB110) 
   * [refurb] Implement int-on-sliced-str (FURB166) 
   * [refurb] Implement write-whole-file (FURB103) 
   * [refurb] Support itemgetter in reimplemented-operator (FURB118) 
   * [flake8_comprehensions] Add sum/min/max to unnecessary comprehension check (C419) 
 * Rule changes
   * [pydocstyle] Require capitalizing docstrings where the first sentence is a single word (D403) 
   * [pycodestyle] Ignore annotated lambdas in class scopes (E731) 
   * [flake8-pyi] Various improvements to PYI034 
   * [flake8-slots] Flag subclasses of call-based typing.NamedTuples as well as subclasses of collections.namedtuple() (SLOT002) 
   * [pyflakes] Allow forward references in class bases in stub files (F821) 
   * [pygrep-hooks] Improve blanket-noqa error message (PGH004) 
 * CLI
   * Support FORCE_COLOR env var 
 * Configuration
   * Support negated patterns in [extend-]per-file-ignores 
 * Bug fixes
   * Avoid TOCTOU errors in cache initialization 
   * [pylint] Recode nan-comparison rule to W0177 
   * [pylint] Reverse min-max logic in if-stmt-min-max 
   * [flake8-import-conventions] Accept non-aliased (but correct) import in unconventional-import-alias (ICN001) 
   * [flake8-quotes] Add semantic model flag when inside f-string replacement field 
   * [pep8-naming] Recursively resolve TypeDicts for N815 violations</comment>
    <requestid>1167007</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>bc4697108c06fac502584d4b64795973</srcmd5>
    <version>0.4.1</version>
    <time>1713964415</time>
    <user>anag+factory</user>
    <comment>- update to 0.4.1
 * A new, hand-written parser
 * A new language server in Rust
 * ruff server is only in alpha, but it has a lot of features that you can try out today:
   * Lints Python files automatically and shows quick-fixes when available
   * Formats Python files, with support for range formatting
   * Comes with commands for quickly performing actions: ruff.applyAutofix, ruff.applyFormat, and ruff.applyOrganizeImports
   * Supports source.fixAll and source.organizeImports source actions
   * Automatically reloads your project configuration when you change it
   * To setup ruff server with your editor, refer to the README.md.
 * Preview features
   * [pylint] Implement invalid-hash-returned (PLE0309) 
   * [pylint] Implement invalid-index-returned (PLE0305) 
   * [pycodestyle] Do not trigger E3 rules on defs following a function/method with a dummy body 
   * [pylint] Implement invalid-bytes-returned (E0308) 
   * [pylint] Implement invalid-length-returned (E0303) 
   * [pylint] Implement self-cls-assignment (W0642) 
   * [pylint] Omit stubs from invalid-bool and invalid-str-return-type 
   * [ruff] New rule unused-async (RUF029) to detect unneeded async keywords on functions 
 * Rule changes
   * [flake8-bandit] Allow urllib.request.urlopen calls with static Request argument (S310) 
   * [flake8-bugbear] Treat raise NotImplemented-only bodies as stub functions (B006) 
   * [flake8-slots] Respect same-file Enum subclasses (SLOT000) 
   * [pylint] Support inverted comparisons (PLR1730) 
 * Linter
   * Improve handling of builtin symbols in linter rules 
   * Improve display of rules in --show-settings 
   * Improve inference capabilities of the BuiltinTypeChecker 
   * Resolve classes and functions relative to script name 
   * Improve performance of RuleTable::any_enabled</comment>
    <requestid>1169832</requestid>
  </revision>
  <revision rev="27" vrev="1">
    <srcmd5>ea641aa9a7ad89b6a2ca99cafc2561e5</srcmd5>
    <version>0.4.3</version>
    <time>1715097750</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.4.3 
 * Enhancements
   * Add support for PEP 696 syntax 
 * Preview features
   * [refurb] Use function range for reimplemented-operator diagnostics 
   * [refurb] Ignore methods in reimplemented-operator (FURB118) 
   * [refurb] Implement fstring-number-format (FURB116) 
   * [ruff] Implement redirected-noqa (RUF101) 
   * [pyflakes] Distinguish between first-party and third-party imports for fix suggestions 
 * Rule changes
   * [flake8-bugbear] Ignore non-abstract class attributes when enforcing B024 
   * [flake8-logging] Include inline instantiations when detecting loggers 
   * [pylint] Also emit PLR0206 for properties with variadic parameters 
   * [ruff] Detect duplicate codes as part of unused-noqa (RUF100) 
   * [flake8-pyi] Allow for overloaded __exit__ and __aexit__ definitions (PYI036) 
   * [pyupgrade] Catch usages of &quot;%s&quot; % var and provide an unsafe fix (UP031) 
   * [refurb] Implement new rule that suggests min/max over sorted() (FURB192) 
 * Formatter
   * Avoid multiline expression if format specifier is present 
 * LSP
   * Write ruff server setup guide for Helix 
   * ruff server no longer hangs after shutdown 
   * ruff server reads from a configuration TOML file in the user configuration directory if no local configuration exists 
   * ruff server respects per-file-ignores configuration 
   * ruff server: Support a custom TOML configuration file 
   * ruff server: Support setting to prioritize project configuration over editor configuration 
   * Fix an issue with missing diagnostics for Neovim and Helix 
   * Implement hover documentation for noqa codes 
   * Introduce common Ruff configuration options with new server settings 
 * Bug fixes</comment>
    <requestid>1172165</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>c25770e30d3bbd1a8c308668e5f4650e</srcmd5>
    <version>0.4.4</version>
    <time>1715686641</time>
    <user>anag+factory</user>
    <comment>- update to 0.4.4
 * Preview features
   * [pycodestyle] Ignore end-of-line comments when determining blank line rules 
   * [pylint] Detect pathlib.Path.open calls in unspecified-encoding (PLW1514) 
   * [flake8-pyi] Implement PYI059 (generic-not-last-base-class) 
   * [flake8-pyi] Implement PYI062 (duplicate-literal-member) 
 * Rule changes
   * [flake8-boolean-trap] Allow passing booleans as positional-only arguments in code such as set(True) 
   * [flake8-bugbear] Ignore enum classes in cached-instance-method (B019) 
 * Server
   * Expand tildes when resolving Ruff server configuration file 
   * Fix ruff server hanging after Neovim closes 
   * Editor settings are used by default if no file-based configuration exists 
 * Bug fixes
   * [pylint] Consider with statements for too-many-branches (PLR0912) 
   * [flake8-blind-except, tryceratops] Respect logged and re-raised expressions in nested statements (BLE001, TRY201) 
   * Recognise assignments such as __all__ = builtins.list([&quot;foo&quot;, &quot;bar&quot;]) as valid __all__ definitions</comment>
    <requestid>1173634</requestid>
  </revision>
  <revision rev="29" vrev="1">
    <srcmd5>84a9a0f89747f4113eb74ba73ed55b14</srcmd5>
    <version>0.4.8</version>
    <time>1717765341</time>
    <user>anag+factory</user>
    <comment>- update ruff: 
* 0.4.8
 * Performance
    * Linter performance has been improved by around 10% on some microbenchmarks
    *  by refactoring the lexer and parser to maintain synchronicity between them 
 * Preview features
    * [flake8-bugbear] Implement return-in-generator (B901) 
    * [flake8-pyi] Implement PYI063 
    * [pygrep_hooks] Check blanket ignores via file-level pragmas (PGH004) 
 * Rule changes
    * [pyupgrade] Update UP035 for Python 3.13 and the latest version of typing_extensions 
    * [numpy] Update NPY001 rule for NumPy 2.0 
 * Server
    * Formatting a document with syntax problems no longer spams a visible error popup 
 * CLI
    * Add RDJson support for --output-format flag 
 * Bug fixes
    * [pyupgrade] Write empty string in lieu of panic when fixing UP032 
    * [flake8-simplify] Simplify double negatives in SIM103 
    * Ensure the expression generator adds a newline before type statements 
    * Respect per-file ignores for blanket and redirected noqa rules 
* 0.4.7
 * Preview features
    * [flake8-pyi] Implement PYI064 
    * [flake8-pyi] Implement PYI066 
    * [flake8-pyi] Implement PYI057 
    * [pyflakes] Enable F822 in __init__.py files by default 
 * Formatter
    * Fix incorrect placement of trailing stub function comments 
 * Server</comment>
    <requestid>1178989</requestid>
  </revision>
  <revision rev="30" vrev="1">
    <srcmd5>28e3f2e778f01202e41c45ca94198f3c</srcmd5>
    <version>0.4.10</version>
    <time>1719255051</time>
    <user>anag+factory</user>
    <comment>- update to 0.4.10
 * Parser
   * Implement re-lexing logic for better error recovery 
 * Rule changes
   * [flake8-copyright] Update CPY001 to check the first 4096 bytes instead of 1024 
   * [pycodestyle] Update E999 to show all syntax errors instead of just the first one 
 * Server
  * Add tracing setup guide to Helix documentation 
  * Add tracing setup guide to Neovim documentation 
  * Defer notebook cell deletion to avoid an error message 
 * Security
  * Guard against malicious ecosystem comment artifacts

- update to 0.4.9:
  * Preview features
    + [pylint] Implement consider-dict-items (C0206) (#11688)
    +  [refurb] Implement repeated-global (FURB154) (#11187)
  * Rule changes
    + [pycodestyle] Adapt fix for E203 to work identical to ruff
      format (#10999)
  * Formatter
    + Fix formatter instability for lines only consisting of
      zero-width characters (#11748)
  * Server
    + Add supported commands in server capabilities (#11850)
    + Use real file path when available in ruff server (#11800)
    + Improve error message when a command is run on an unavailable
      document (#11823)
    + Introduce the ruff.printDebugInformation command (#11831)
    + Tracing system now respects log level and trace level, with</comment>
    <requestid>1182988</requestid>
  </revision>
  <revision rev="31" vrev="1">
    <srcmd5>5bbc0ceb32b781edef940e8c093f676c</srcmd5>
    <version>0.5.0</version>
    <time>1720102893</time>
    <user>anag+factory</user>
    <comment>- update to 0.5.0:
  * Selecting ALL now excludes deprecated rules
  * The released archives now include an extra level of nesting, which
    can be removed with --strip-components=1 when untarring.
  * The release artifact's file name no longer includes the version
    tag. This enables users to install via /latest URLs on GitHub.
  * The diagnostic ranges for some flake8-bandit rules were modified
  * for details see https://github.com/astral-sh/ruff/releases/tag/0.5.0

   * Implement re-lexing logic for better error recovery
   * [flake8-copyright] Update CPY001 to check the first 4096 bytes instead of 1024
   * [pycodestyle] Update E999 to show all syntax errors instead of just the first one
  * Add tracing setup guide to Helix documentation
  * Add tracing setup guide to Neovim documentation
  * Defer notebook cell deletion to avoid an error message</comment>
    <requestid>1184226</requestid>
  </revision>
  <revision rev="32" vrev="1">
    <srcmd5>d331931a2de8e0bd1206bd15fdbad50b</srcmd5>
    <version>0.5.1</version>
    <time>1720458433</time>
    <user>anag+factory</user>
    <comment>- update to 0.5.1:
  * Enable token-based rules on source with syntax errors
  * \[`flake8-bandit`\] Detect `httpx` for `S113`
  * \[`numpy`\] Update `NPY201` to include exception deprecations
  * \[`pylint`\] Generate autofix for `duplicate-bases`
    (`PLE0241`)
  * Avoid syntax error notification for source code actions
  * Consider the content of the new cells during notebook sync
  * Fix replacement edit range computation
  * Disable auto-fix when source has syntax errors
  * Fix cache key collisions for paths with separators
  * Make `requires-python` inference robust to `==`
  * Use char-wise width instead of `str`-width
  * \[`pycodestyle`\] Avoid `E275` if keyword followed by comma
  * \[`pycodestyle`\] Avoid `E275` if keyword is followed by a
    semicolon
  * \[`pylint`\] Skip dummy variables for `PLR1704`</comment>
    <requestid>1186130</requestid>
  </revision>
  <revision rev="33" vrev="1">
    <srcmd5>27b82912fa4b8e48a57d8951498cc0f8</srcmd5>
    <version>0.5.5</version>
    <time>1722425305</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.5.5
 * server funcionality is now stable
 * big list of changes: https://github.com/astral-sh/ruff/blob/main/CHANGELOG.md</comment>
    <requestid>1190325</requestid>
  </revision>
  <revision rev="34" vrev="1">
    <srcmd5>01113ee5cf4022c7b136ee4635fbd7a2</srcmd5>
    <version>0.5.6</version>
    <time>1723548172</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1192842</requestid>
  </revision>
  <revision rev="35" vrev="1">
    <srcmd5>03322402c7ce9ced7dfa792ad347b0e8</srcmd5>
    <version>0.6.1</version>
    <time>1724163190</time>
    <user>anag+factory</user>
    <comment>- update to 0.6.1:
 * Detect imports in src layouts by default for isort rules 
 * The pytest rules PT001 and PT023 now default to omitting the decorator parentheses when there are no arguments .
 * Lint and format Jupyter Notebook by default .
 * big list of changes: https://github.com/astral-sh/ruff/blob/main/CHANGELOG.md</comment>
    <requestid>1194751</requestid>
  </revision>
  <revision rev="36" vrev="1">
    <srcmd5>1cdae53ff29c13ae177c19fd87450ea3</srcmd5>
    <version>0.6.3</version>
    <time>1725363462</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.6.3:
 * Preview features
   * [flake8-simplify] Extend open-file-with-context-handler to work with other standard-library IO modules (SIM115) 
   * [ruff] Avoid unused-async for functions with FastAPI route decorator (RUF029) 
   * [ruff] Ignore fstring-missing-syntax (RUF027) for fastAPI paths 
   * [ruff] Implement check for Decimal called with a float literal (RUF032) 
   * [flake8-simplify] Extend open-file-with-context-handler to work with dbm.sqlite3 (SIM115) 
   * [pycodestyle] Disable E741 in stub files (.pyi) 
   * [pydoclint] Avoid DOC201 on explicit returns in functions that only return None 
 * Rule changes
   * [flake8-bugbear] Update diagnostic message when expression is at the end of function (B015) 
   * [flake8-pyi] Skip type annotations in string-or-bytes-too-long (PYI053) 
   * [flake8-type-checking] Always recognise relative imports as first-party 
   * [flake8-unused-arguments] Ignore unused arguments on stub functions (ARG001) 
   * [pylint] Ignore augmented assignment for self-cls-assignment (PLW0642) 
   * [flake8-async] Disable check for asyncio before Python 3.11 (ASYNC109) 
 * Bug fixes
   * [pep8-naming] Don't flag from imports following conventional import names (N817) 
   * [pylint] - Allow __new__ methods to have cls as their first argument even if decorated with @staticmethod for bad-staticmethod-argument (PLW0211) 
   * [FastAPI] Avoid introducing invalid syntax in fix for fast-api-non-annotated-dependency (FAST002) 
   * [flake8-implicit-str-concat] Normalize octals before merging concatenated strings in single-line-implicit-string-concatenation (ISC001) 
   * [flake8-pytest-style] Improve help message for pytest-incorrect-mark-parentheses-style (PT023) 
   * [pylint] Avoid autofix for calls that aren't min or max as starred expression (PLW3301) 
   * [ruff] Add datetime.time, datetime.tzinfo, and datetime.timezone as immutable function calls (RUF009) 
   * [ruff] Extend comment deletion for RUF100 to include trailing text from noqa directives while preserving any following comments on the same line, if any 
   * Fix dark theme on initial page load for the Ruff playground 
 * Server
   * Show full context in error log messages 
 * Documentation
   * Add hyperfine installation instructions; update hyperfine code samples</comment>
    <requestid>1198261</requestid>
  </revision>
  <revision rev="37" vrev="1">
    <srcmd5>f5f7e472db3741fca1114656a1076ed0</srcmd5>
    <version>0.6.4</version>
    <time>1725995538</time>
    <user>anag+factory</user>
    <comment>- update to 0.6.4:
  * \[`flake8-builtins`\] Use dynamic builtins list based on
    Python version
  * \[`pydoclint`\] Permit yielding `None` in `DOC402` and
    `DOC403`
  * \[`pylint`\] Update diagnostic message for `PLW3201`
  * \[`ruff`\] Implement `post-init-default` (`RUF033`)
  * \[`ruff`\] Implement useless if-else (`RUF034`)
  * \[`flake8-pyi`\] Respect `pep8_naming.classmethod-decorators`
    settings when determining if a method is a classmethod in
    `custom-type-var-return-type` (`PYI019`)
  * \[`flake8-pyi`\] Teach various rules that annotations might
    be stringized
  * \[`pylint`\] Avoid `no-self-use` for `attrs`-style validators
  * \[`pylint`\] Recurse into subscript subexpressions when
    searching for list/dict lookups (`PLR1733`, `PLR1736`)
  * \[`pyupgrade`\] Detect `aiofiles.open` calls in `UP015`
  * \[`pyupgrade`\] Mark `sys.version_info[0] &lt; 3` and similar
    comparisons as outdated (`UP036`)

   * [flake8-simplify] Extend open-file-with-context-handler to work with other standard-library IO modules (SIM115)
   * [ruff] Avoid unused-async for functions with FastAPI route decorator (RUF029)
   * [ruff] Ignore fstring-missing-syntax (RUF027) for fastAPI paths
   * [ruff] Implement check for Decimal called with a float literal (RUF032)
   * [flake8-simplify] Extend open-file-with-context-handler to work with dbm.sqlite3 (SIM115)
   * [pycodestyle] Disable E741 in stub files (.pyi)
   * [pydoclint] Avoid DOC201 on explicit returns in functions that only return None
   * [flake8-bugbear] Update diagnostic message when expression is at the end of function (B015)
   * [flake8-pyi] Skip type annotations in string-or-bytes-too-long (PYI053)
   * [flake8-type-checking] Always recognise relative imports as first-party</comment>
    <requestid>1199612</requestid>
  </revision>
  <revision rev="38" vrev="1">
    <srcmd5>5b70c092e77c2285c974a121efceb48d</srcmd5>
    <version>0.6.5</version>
    <time>1726773409</time>
    <user>anag+factory</user>
    <comment>- update to 0.6.5:
 * Preview features
   * [pydoclint] Ignore DOC201 when function name is &quot;new&quot; 
   * [refurb] Implement slice-to-remove-prefix-or-suffix (FURB188) 
 * Rule changes
   * [eradicate] Ignore script-comments with multiple end-tags (ERA001) 
   * [pyflakes] Improve error message for UndefinedName when a builtin
       was added in a newer version than specified in Ruff config (F821) 
 * Server
   * Add support for extensionless Python files for server 
   * Fix configuration inheritance for configurations specified in the LSP settings 
 * Bug fixes
   * [ruff] Handle unary operators in decimal-from-float-literal (RUF032) 
 * CLI
   * Only include rules with diagnostics in SARIF metadata 
 * Playground
   * Add &quot;Copy as pyproject.toml/ruff.toml&quot; and &quot;Paste from TOML&quot; 
   * Fix errors not shown for restored snippet on page load</comment>
    <requestid>1201802</requestid>
  </revision>
  <revision rev="39" vrev="1">
    <srcmd5>e4825d242b80ab6069aae2f4964d8870</srcmd5>
    <version>0.6.7</version>
    <time>1727191882</time>
    <user>anag+factory</user>
    <comment>- update to 0.6.7:
  * Add Python version support to ruff analyze CLI
  * Add `exclude` support to `ruff analyze`
  * Fix parentheses around return type annotations
  * \[`pycodestyle`\] Fix: Don't autofix if the first line ends
    in a question mark? (D400)
  * Respect `lint.exclude` in ruff check `--add-noqa`
  * Avoid tracking module resolver files in Salsa
- update to 0.6.6:
  * \[`refurb`\] Skip `slice-to-remove-prefix-or-suffix`
    (`FURB188`) when non-trivial slice steps are present
  * Add a subcommand to generate dependency graphs
  * Fix placement of inline parameter comments
  * Fix off-by one error in the `LineIndex::offset` calculation
  * \[`fastapi`\] Respect FastAPI aliases in route definitions
  * \[`pydocstyle`\] Respect word boundaries when detecting
    function signature in docs

   * [pydoclint] Ignore DOC201 when function name is &quot;new&quot;
   * [refurb] Implement slice-to-remove-prefix-or-suffix (FURB188)
   * [eradicate] Ignore script-comments with multiple end-tags (ERA001)
       was added in a newer version than specified in Ruff config (F821)
   * Add support for extensionless Python files for server
   * Fix configuration inheritance for configurations specified in the LSP settings
   * [ruff] Handle unary operators in decimal-from-float-literal (RUF032)
   * Only include rules with diagnostics in SARIF metadata
   * Add &quot;Copy as pyproject.toml/ruff.toml&quot; and &quot;Paste from TOML&quot;
   * Fix errors not shown for restored snippet on page load</comment>
    <requestid>1202630</requestid>
  </revision>
  <revision rev="40" vrev="1">
    <srcmd5>fa5bd1ba7977208e5cf77f20ea485ff8</srcmd5>
    <version>0.6.8</version>
    <time>1727626147</time>
    <user>anag+factory</user>
    <comment>- update to 0.6.8:
 * Preview features
   * Remove unnecessary parentheses around match case clauses 
   * Parenthesize overlong if guards in match..case clauses 
   * Detect basic wildcard imports in ruff analyze graph 
   * [pylint] Implement boolean-chained-comparison (R1716) 
 * Rule changes
   * [lake8-simplify] Detect SIM910 when using variadic keyword arguments, i.e., **kwargs 
   * [pyupgrade] Avoid false negatives with non-reference shadowed bindings of loop variables (UP028) 
 * Bug fixes
   * Detect tuples bound to variadic positional arguments i.e. *args 
   * Exit gracefully on broken pipe errors 
   * Avoid panic when analyze graph hits broken pipe 
 * Performance
   * Reuse BTreeSets in module resolver 
   * Skip traversal for non-compound statements</comment>
    <requestid>1203894</requestid>
  </revision>
  <revision rev="41" vrev="1">
    <srcmd5>77874b297ea223f6bbd7d56cf1931874</srcmd5>
    <version>0.6.9</version>
    <time>1728400597</time>
    <user>anag+factory</user>
    <comment>- update to 0.6.9
 * Preview features
   * Fix codeblock dynamic line length calculation for indented docstring examples 
   * [refurb] Mark FURB118 fix as unsafe 
 * Rule changes
   * [pydocstyle] Don't raise D208 when last line is non-empty 
   * [pylint] Preserve trivia (i.e. comments) in PLR5501 autofix 
 * Configuration
   * [pyflakes] Add allow-unused-imports setting for unused-import rule (F401) 
 * Bug fixes
   * Support ruff discovery in pip build environments 
   * [flake8-bugbear] Avoid short circuiting B017 for multiple context managers 
   * [pylint] Do not offer an invalid fix for PLR1716 when the comparisons contain parenthesis 
   * [pyupgrade] Fix UP043 to apply to collections.abc.Generator and collections.abc.AsyncGenerator 
   * [refurb] Fix handling of slices in tuples for FURB118, e.g., x[:, 1]</comment>
    <requestid>1206146</requestid>
  </revision>
  <revision rev="42" vrev="1">
    <srcmd5>549c6c25e12a7939df97b8b94fb6685e</srcmd5>
    <version>0.7.0</version>
    <time>1729411739</time>
    <user>anag+factory</user>
    <comment>- update to 0.7.0
 * Breaking changes
   * The pytest rules PT001 and PT023 now default to omitting the decorator parentheses when there are no arguments. This was a change that we attempted to make in Ruff v0.6.0, but only partially made due to an error on our part. See the blog post for more details.
   * The useless-try-except rule (in our tryceratops category) has been recoded from TRY302 to TRY203 . This ensures Ruff's code is consistent with the same rule in the tryceratops linter.
   * The lint.allow-unused-imports setting has been removed . Use lint.pyflakes.allow-unused-imports instead.
 * Formatter preview style
   * Normalize implicit concatenated f-string quotes per part 
 * Preview linter features
   * [refurb] implement hardcoded-string-charset (FURB156) 
   * [refurb] Count codepoints not bytes for slice-to-remove-prefix-or-suffix (FURB188) 
 * Rule changes
   * [pylint] Mark PLE1141 fix as unsafe 
   * [flake8-async] Consider async generators to be &quot;checkpoints&quot; for cancel-scope-no-checkpoint (ASYNC100) 
   * [flake8-bugbear] Do not suggest setting parameter strict= to False in B905 diagnostic message 
   * [flake8-todos] Only flag the word &quot;TODO&quot;, not words starting with &quot;todo&quot; (TD006) 
   * [pycodestyle] Fix whitespace-related false positives and false negatives inside type-parameter lists (E231, E251) 
   * [flake8-simplify] Stabilize preview behavior for SIM115 so that the rule can detect files being opened from a wider range of standard-library functions .
 * CLI
   * Add explanation of fixable in --statistics command 
 * Bug fixes
   * [pyflakes] Allow ipytest cell magic (F401) 
   * [flake8-use-pathlib] Fix PTH123 false positive when open is passed a file descriptor 
   * [flake8-bandit] Detect patterns from multi line SQL statements (S608) 
   * [flake8-pyi] - Fix dropped expressions in PYI030 autofix</comment>
    <requestid>1208873</requestid>
  </revision>
  <revision rev="43" vrev="2">
    <srcmd5>3e7c15ebe4d670141c2213f0c07246a5</srcmd5>
    <version>0.7.0</version>
    <time>1729601461</time>
    <user>anag+factory</user>
    <comment>- add Provides: ruff-%{version}</comment>
    <requestid>1216817</requestid>
  </revision>
  <revision rev="44" vrev="1">
    <srcmd5>cb2e213e02ec8103a082e417438f6b30</srcmd5>
    <version>0.7.1</version>
    <time>1730024657</time>
    <user>anag+factory</user>
    <comment>- update to 0.7.1
 * Preview features
   * Fix E221 and E222 to flag missing or extra whitespace around == operator 
   * Formatter: Alternate quotes for strings inside f-strings in preview 
   * Formatter: Join implicit concatenated strings when they fit on a line 
   * [pylint] Restrict iteration-over-set to only work on sets of literals (PLC0208) 
 * Rule changes
   * [flake8-type-checking] Support auto-quoting when annotations contain quotes 
 * Server
   * Avoid indexing the workspace for single-file mode 
 * Bug fixes
   * Make ARG002 compatible with EM101 when raising NotImplementedError</comment>
    <requestid>1218438</requestid>
  </revision>
  <revision rev="45" vrev="1">
    <srcmd5>159f97bf5d33ca27c9fb4d3214e94877</srcmd5>
    <version>0.7.2</version>
    <time>1730614626</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.7.2 
 * Preview features
   * Fix formatting of single with-item with trailing comment 
   * [pyupgrade] Add PEP 646 Unpack conversion to * with fix (UP044) 
 * Rule changes
   * Regenerate known_stdlibs.rs with stdlibs 2024.10.25 
   * [flake8-no-pep420] Skip namespace package enforcement for PEP 723 scripts (INP001) 
 * Server
   * Fix server panic when undoing an edit 
 * Bug fixes
   * Fix issues in discovering ruff in pip build environments 
   * [flake8-type-checking] Fix false positive for singledispatchmethod (TCH003) 
   * [flake8-type-checking] Treat return type of singledispatch as runtime-required (TCH003) 
 * Documentation
   * [flake8-simplify] Include caveats of enabling if-else-block-instead-of-if-exp (SIM108)</comment>
    <requestid>1220121</requestid>
  </revision>
  <revision rev="46" vrev="1">
    <srcmd5>c0ae31edcb7f16f81cdc3ef034ee9210</srcmd5>
    <version>0.7.3</version>
    <time>1731435589</time>
    <user>anag+factory</user>
    <comment>- update to 0.7.3
 * Preview features
   * Formatter: Disallow single-line implicit concatenated strings 
   * [flake8-pyi] Include all Python file types for PYI006 and PYI066 
   * [flake8-simplify] Implement split-of-static-string (SIM905) 
   * [refurb] Implement subclass-builtin (FURB189) 
   * [ruff] Improve diagnostic messages and docs (RUF031, RUF032, RUF034) 
 * Rule changes
   * Detect items that hash to same value in duplicate sets (B033, PLC0208) 
   * [eradicate] Better detection of IntelliJ language injection comments (ERA001) 
   * [flake8-pyi] Add autofix for docstring-in-stub (PYI021) 
   * [flake8-pyi] Update duplicate-literal-member (PYI062) to alawys provide an autofix 
   * [pyflakes] Detect items that hash to same value in duplicate dictionaries (F601) 
   * [ruff] Fix false positive for decorators (RUF028) 
 * Bug fixes
   * Avoid parsing joint rule codes as distinct codes in # noqa 
   * [eradicate] ignore # language= in commented-out-code rule (ERA001) 
   * [flake8-bugbear] - do not run mutable-argument-default on stubs (B006) 
   * [flake8-builtins] Skip lambda expressions in builtin-argument-shadowing (A002) 
   * [flake8-comprehension] Also remove trailing comma while fixing C409 and C419 
   * [flake8-simplify] Allow open without context manager in return statement (SIM115) 
   * [pylint] Respect hash-equivalent literals in iteration-over-set (PLC0208) 
   * [pylint] Update known dunder methods for Python 3.13 (PLW3201) 
   * [pyupgrade] - ignore kwarg unpacking for UP044 
   * [refurb] Parse more exotic decimal strings in verbose-decimal-constructor (FURB157) 
 * Documentation
   * Add links to missing related options within rule documentations 
   * Add rule short code to mkdocs tags to allow searching via rule codes</comment>
    <requestid>1223378</requestid>
  </revision>
  <revision rev="47" vrev="1">
    <srcmd5>f009a2a242ad163ecff971aa1c448dc7</srcmd5>
    <version>0.7.4</version>
    <time>1731956226</time>
    <user>anag+factory</user>
    <comment>- update to 0.7.4
 * Preview features
   * [flake8-datetimez] Detect usages of datetime.max/datetime.min (DTZ901) 
   * [flake8-logging] Implement root-logger-calls (LOG015) 
   * [flake8-no-pep420] Detect empty implicit namespace packages (INP001) 
   * [flake8-pyi] Add &quot;replace with Self&quot; fix (PYI019) 
   * [perflint] Implement quick-fix for manual-list-comprehension (PERF401) 
   * [pylint] Implement shallow-copy-environ (W1507) 
   * [ruff] Implement none-not-at-end-of-union (RUF036) 
   * [ruff] Implementation unsafe-markup-call from flake8-markupsafe plugin (RUF035) 
   * [ruff] Report problems for attrs dataclasses (RUF008, RUF009) 
 * Rule changes
   * [flake8-boolean-trap] Exclude dunder methods that define operators (FBT001) 
   * [flake8-pyi] Add &quot;replace with Self&quot; fix (PYI034) 
   * [flake8-pyi] Always autofix duplicate-union-members (PYI016) 
   * [flake8-pyi] Improve autofix for nested and mixed type unions for unnecessary-type-union (PYI055) 
   * [flake8-pyi] Mark fix as unsafe when type annotation contains comments for duplicate-literal-member (PYI062) 
 * Server
   * Use the current working directory to resolve settings from ruff.configuration 
 * Bug fixes
   * Avoid conflicts between PLC014 (useless-import-alias) and I002 (missing-required-import) by considering lint.isort.required-imports for PLC014 
   * [flake8-type-checking] Skip quoting annotation if it becomes invalid syntax (TCH001)
   * [flake8-pyi] Avoid using typing.Self in stub files pre-Python 3.11 (PYI034) 
   * [flake8-pytest-style] Flag pytest.raises call with keyword argument expected_exception (PT011) 
   * [flake8-simplify] Infer &quot;unknown&quot; truthiness for literal iterables whose items are all unpacks (SIM222) 
   * [flake8-type-checking] Fix false positives for typing.Annotated (TCH001) 
   * [pylint] Allow await at the top-level scope of a notebook (PLE1142) 
   * [pylint] Fix miscellaneous issues in await-outside-async detection (PLE1142)
   * [pyupgrade Avoid applying PEP 646 rewrites in invalid contexts ()UP044) 
   * [pyupgrade] Detect permutations in redundant open modes (UP015)</comment>
    <requestid>1224610</requestid>
  </revision>
  <revision rev="48" vrev="1">
    <srcmd5>8517bdc88e801946cb3c90b2f178d4bd</srcmd5>
    <version>0.8.1</version>
    <time>1733255139</time>
    <user>anag+factory</user>
    <comment>- update to 0.8.1
 * Preview features
   * Formatter: Avoid invalid syntax for format-spec with quotes for all Python versions 
   * Formatter: Consider quotes inside format-specs when choosing the quotes for an f-string 
   * Formatter: Do not consider f-strings with escaped newlines as multiline 
   * Formatter: Fix f-string formatting in assignment statement 
   * Formatter: Fix unnecessary space around power operator (**) in overlong f-string expressions 
   * [airflow] Avoid implicit schedule argument to DAG and @dag (AIR301) 
   * [flake8-builtins] Exempt private built-in modules (A005) 
   * [flake8-pytest-style] Fix pytest.mark.parametrize rules to check calls instead of decorators 
   * [flake8-type-checking] Implement runtime-cast-value (TC006) 
   * [flake8-type-checking] Implement unquoted-type-alias (TC007) and quoted-type-alias (TC008) 
   * [flake8-use-pathlib] Recommend Path.iterdir() over os.listdir() (PTH208) 
   * [pylint] Extend invalid-envvar-default to detect os.environ.get (PLW1508) 
   * [pylint] Implement len-test (PLC1802) 
   * [refurb] Fix bug where methods defined using lambdas were flagged by FURB118 
   * [ruff] Auto-add r prefix when string has no backslashes for unraw-re-pattern (RUF039) 
   * [ruff] Implement invalid-assert-message-literal-argument (RUF040) 
   * [ruff] Implement unnecessary-nested-literal (RUF041) 
   * [ruff] Implement unnecessary-regular-expression (RUF055) 
 * Rule changes
   * Ignore more rules for stub files 
   * [pep8-naming] Eliminate false positives for single-letter names (N811, N814) 
   * [pyflakes] Avoid false positives in @no_type_check contexts (F821, F722) 
   * [ruff] Detect redirected-noqa in file-level comments (RUF101) 
   * [ruff] Mark fixes for unsorted-dunder-all and unsorted-dunder-slots as unsafe when there are complex comments in the sequence (RUF022, RUF023) 
 * Bug fixes
   * Avoid fixing code to None | None for redundant-none-literal (PYI061) and never-union (RUF020) (#14583, #14589)
   * [flake8-bugbear] Fix mutable-contextvar-default to resolve annotated function calls properly (B039) 
   * [flake8-pyi, ruff] Fix traversal of nested literals and unions (PYI016, PYI051, PYI055, PYI062, RUF041)</comment>
    <requestid>1227743</requestid>
  </revision>
  <revision rev="49" vrev="1">
    <srcmd5>c9ed1096b8efd763091c87f3bcb9a1a7</srcmd5>
    <version>0.8.2</version>
    <time>1733654185</time>
    <user>anag+factory</user>
    <comment>- update to 0.8.2
 * Preview features
   * [airflow] Avoid deprecated values (AIR302) 
   * [airflow] Extend removed names for AIR302 
   * [ruff] Extend unnecessary-regular-expression to non-literal strings (RUF055) 
   * [ruff] Implement used-dummy-variable (RUF052) 
   * [ruff] Implement unnecessary-cast-to-int (RUF046) 
 * Rule changes
   * [airflow] Check AIR001 from builtin or providers operators module 
   * [flake8-pytest-style] Remove @ in pytest.mark.parametrize rule messages 
   * [pandas-vet] Skip rules if the panda module hasn't been seen 
   * [pylint] Fix false negatives for ascii and sorted in len-as-condition (PLC1802) 
   * [refurb] Guard hashlib imports and mark hashlib-digest-hex fix as safe (FURB181) 
 * Configuration
   * [flake8-import-conventions] Improve syntax check for aliases supplied in configuration for unconventional-import-alias (ICN001) 
 * Bug fixes
   * Revert: [pyflakes] Avoid false positives in @no_type_check contexts (F821, F722)  
   * [pep8-naming] Avoid false positive for class Bar(type(foo)) (N804) 
   * [pycodestyle] Handle f-strings properly for invalid-escape-sequence (W605) 
   * [pylint] Ignore @overload in PLR0904 
   * [refurb] Handle non-finite decimals in verbose-decimal-constructor (FURB157) 
   * [ruff] Avoid emitting assignment-in-assert when all references to the assigned variable are themselves inside asserts (RUF018) 
 * Documentation
   * Improve docs for flake8-use-pathlib rules 
   * Improve error messages and docs for flake8-comprehensions rules 
   * [flake8-type-checking] Expands TC006 docs to better explain itself</comment>
    <requestid>1228749</requestid>
  </revision>
  <revision rev="50" vrev="1">
    <srcmd5>3fee43097e1e2f9dbfaaa433cbc57d54</srcmd5>
    <version>0.8.3</version>
    <time>1734459740</time>
    <user>anag+factory</user>
    <comment>-  update to 0.8.3
 * Preview features
   * Fix fstring formatting removing overlong implicit concatenated string in expression part 
   * [airflow] Add fix to remove deprecated keyword arguments (AIR302) 
   * [airflow]: Extend rule to include deprecated names for Airflow 3.0 (AIR302)
   * [flake8-bugbear] Improve error messages for except* (B025, B029, B030, B904) 
   * [flake8-bugbear] itertools.batched() without explicit strict (B911) 
   * [flake8-use-pathlib] Dotless suffix passed to Path.with_suffix() (PTH210) 
   * [pylint] Include parentheses and multiple comparators in check for boolean-chained-comparison (PLR1716) 
   * [ruff] Do not simplify round() calls (RUF046) 
   * [ruff] Don't emit used-dummy-variable on function parameters (RUF052) 
   * [ruff] Implement if-key-in-dict-del (RUF051) 
   * [ruff] Mark autofix for RUF052 as always unsafe 
   * [ruff] Teach autofix for used-dummy-variable about TypeVars etc. (RUF052) 
 * Rule changes
   * [flake8-bugbear] Offer unsafe autofix for no-explicit-stacklevel (B028) 
   * [flake8-pyi] Skip all type definitions in string-or-bytes-too-long (PYI053) 
   * [pyupgrade] Do not report when a UTF-8 comment is followed by a non-UTF-8 one (UP009) 
   * [pyupgrade] Mark fixes for convert-typed-dict-functional-to-class and convert-named-tuple-functional-to-class
       as unsafe if they will remove comments (UP013, UP014) 
 * Bug fixes
   * Raise syntax error for mixing except and except* 
   * [flake8-bugbear] Fix B028 to allow stacklevel to be explicitly assigned as a positional argument 
   * [flake8-bugbear] Skip B028 if warnings.warn is called with *args or **kwargs 
   * [flake8-comprehensions] Skip iterables with named expressions in unnecessary-map (C417) 
   * [flake8-pyi] Also remove self and cls's annotation (PYI034) 
   * [flake8-pytest-style] Fix pytest-parametrize-names-wrong-type (PT006) to edit both argnames and argvalues if both of them are single-element tuples/lists 
   * [perflint] Improve autofix for PERF401 
   * [pylint] Fix PLW1508 false positive for default string created via a mult operation</comment>
    <requestid>1231367</requestid>
  </revision>
  <revision rev="51" vrev="1">
    <srcmd5>1d53db9faaa2332a3812e5535dece0ef</srcmd5>
    <version>0.8.6</version>
    <time>1736279397</time>
    <user>anag+factory</user>
    <comment>- update to 0.8.6 
 * Preview features
   * [format]: Preserve multiline implicit concatenated strings in docstring positions 
   * [ruff] Add rule to detect empty literal in deque call (RUF025) 
   * [ruff] Avoid reporting when ndigits is possibly negative (RUF057) 
 * Rule changes
   * [flake8-todos] remove issue code length restriction (TD003) 
   * [pyflakes] Ignore errors in @no_type_check string annotations (F722, F821) 
 * CLI
   * Show errors for attempted fixes only when passed --verbose 
 * Bug fixes
   * [ruff] Avoid syntax error when removing int over multiple lines (RUF046) 
   * [pyupgrade] Revert &quot;Add all PEP-585 names to UP006 rule&quot; 
 0.8.5
 * Preview features
   * [airflow] Extend names moved from core to provider (AIR303)
   * [airflow] Extend rule to check class attributes, methods, arguments (AIR302)
   * [fastapi] Update FAST002 to check keyword-only arguments 
   * [flake8-type-checking] Disable TC006 and TC007 in stub files 
   * [pylint] Detect nested methods correctly (PLW1641) 
   * [ruff] Detect more strict-integer expressions (RUF046) 
   * [ruff] Implement falsy-dict-get-fallback (RUF056) 
   * [ruff] Implement unnecessary-round (RUF057) 
 * Rule changes
   * Visit PEP 764 inline TypedDict keys as non-type-expressions 
   * [flake8-comprehensions] Skip C416 if comprehension contains unpacking 
   * [flake8-pie] Allow cast(SomeType, ...) (PIE796) 
   * [flake8-simplify] More precise inference for dictionaries (SIM300) 
   * [flake8-use-pathlib] Catch redundant joins in PTH201 and avoid syntax errors 
   * [pycodestyle] Preserve original value format (E731)</comment>
    <requestid>1235139</requestid>
  </revision>
  <revision rev="52" vrev="1">
    <srcmd5>c4bd3af33513c07e73c95bb607f45f43</srcmd5>
    <version>0.9.0</version>
    <time>1736676524</time>
    <user>anag+factory</user>
    <comment>- update to 0.9.0:
  * This release introduces the new 2025 stable style (#13371),
    stabilizing the following changes:
  * Format expressions in f-string elements
  * Alternate quotes for strings inside f-strings
  * Preserve the casing of hex codes in f-string debug
    expressions
  * Choose the quote style for each string literal in an
    implicitly concatenated f-string rather than for the entire
    string
  * Automatically join an implicitly concatenated string into a
    single string literal if it fits on a single line
  * Remove the `ISC001` incompatibility warning
  * Prefer parenthesizing the `assert` message over breaking the
    assertion expression
  * Automatically parenthesize over-long `if` guards in `match`
    `case` clauses
  * More consistent formatting for `match` `case` patterns
  * Avoid unnecessary parentheses around return type annotations
  * Keep the opening parentheses on the same line as the `if`
    keyword for comprehensions where the condition has a leading
    comment
  * More consistent formatting for `with` statements with a
    single context manager for Python 3.8 or older
  * Correctly calculate the line-width for code blocks in
    docstrings when using `max-doc-code-line-length = &quot;dynamic&quot;`

- update to 0.8.6
   * [format]: Preserve multiline implicit concatenated strings in docstring positions
   * [ruff] Add rule to detect empty literal in deque call (RUF025)</comment>
    <requestid>1236832</requestid>
  </revision>
  <revision rev="53" vrev="1">
    <srcmd5>161f36fa5cf7b90ecfc533b508f4c656</srcmd5>
    <version>0.9.1</version>
    <time>1736868077</time>
    <user>anag+factory</user>
    <comment>- update to 0.9.1
 * Preview features
   * [pycodestyle] Run too-many-newlines-at-end-of-file on each cell in notebooks (W391) 
   * [ruff] Omit diagnostic for shadowed private function parameters in used-dummy-variable (RUF052) 
 * Rule changes
   * [flake8-bugbear] Improve assert-raises-exception message (B017) 
 * Formatter
   * Preserve trailing end-of line comments for the last string literal in implicitly concatenated strings 
 * Server
   * Fix a bug where the server and client notebooks were out of sync after reordering cells 
 * Bug fixes
   * [flake8-pie] Correctly remove wrapping parentheses (PIE800) 
   * [pyupgrade] Handle comments and multiline expressions correctly (UP037)</comment>
    <requestid>1237200</requestid>
  </revision>
  <revision rev="54" vrev="1">
    <srcmd5>461c2156e4a4b475135ff46dea789762</srcmd5>
    <version>0.9.2</version>
    <time>1737389649</time>
    <user>anag+factory</user>
    <comment>- Update to 0.9.2
 * Preview features
   * [airflow] Fix typo &quot;security_managr&quot; to &quot;security_manager&quot; (AIR303) 
   * [airflow] extend and fix AIR302 rules 
   * [fastapi] Handle parameters with Depends correctly (FAST003) 
   * [flake8-pytest-style] Implement pytest.warns diagnostics (PT029, PT030, PT031) 
   * [flake8-pytest-style] Test function parameters with default arguments (PT028) 
   * [flake8-type-checking] Avoid false positives for | in TC008 
 * Rule changes
   * [flake8-todos] Allow VSCode GitHub PR extension style links in missing-todo-link (TD003) 
   * [pyflakes] Show syntax error message for F722 
 * Formatter
   * Fix curly bracket spacing around f-string expressions containing curly braces 
   * Fix joining of f-strings with different quotes when using quote style Preserve 
 * Server
   * Avoid indexing the same workspace multiple times 
   * Display context for ruff.configuration errors 
 * Configuration
   * Remove flatten to improve deserialization error messages 
 * Bug fixes
   * Parse triple-quoted string annotations as if parenthesized 
   * [fastapi] Update Annotated fixes (FAST002) 
   * [flake8-bandit] Check for builtins instead of builtin (S102, PTH123) 
   * [flake8-pathlib] Fix --select for os-path-dirname (PTH120) 
   * [ruff] Fix false positive on global keyword (RUF052)</comment>
    <requestid>1238688</requestid>
  </revision>
  <revision rev="55" vrev="1">
    <srcmd5>05e9fb54db585f532e1b87e7b32e4514</srcmd5>
    <version>0.9.3</version>
    <time>1737828606</time>
    <user>dimstar_suse</user>
    <comment>- Upade to 0.9.3
 * Preview features
   * [airflow] Argument fail_stop in DAG has been renamed as fail_fast (AIR302) 
   * [airflow] Extend AIR303 with more symbols 
   * [flake8-bandit] Report all references to suspicious functions (S3) 
   * [flake8-pytest-style] Do not emit diagnostics for empty for loops (PT012, PT031) 
   * [flake8-simplify] Avoid double negations (SIM103) 
   * [pyflakes] Fix infinite loop with unused local import in __init__.py (F401) 
   * [pylint] Do not report methods with only one EM101-compatible raise (PLR6301) 
   * [pylint] Implement redefined-slots-in-subclass (W0244) 
   * [pyupgrade] Add rules to use PEP 695 generics in classes and functions (UP046, UP047)
   * [refurb] Implement for-loop-writes (FURB122) 
   * [ruff] Implement needless-else clause (RUF047)
   * [ruff] Implement starmap-zip (RUF058) 
 * Rule changes
   * [flake8-bugbear] Do not raise error if keyword argument is present and target-python version is less or equals than 3.9 (B903) 
   * [flake8-comprehensions] strip parentheses around generators in unnecessary-generator-set (C401) 
   * [flake8-pytest-style] Rewrite references to .exception (PT027) 
   * [flake8-simplify] Mark fixes as unsafe (SIM201, SIM202) 
   * [flake8-type-checking] Fix some safe fixes being labeled unsafe (TC006,TC008) 
   * [isort] Omit trailing whitespace in unsorted-imports (I001) 
   * [pydoclint] Allow ignoring one line docstrings for DOC rules 
   * [pyflakes] Apply redefinition fixes by source code order (F811) 
   * [pyflakes] Avoid removing too many imports in redefined-while-unused (F811) 
   * [pyflakes] Group redefinition fixes by source statement (F811) 
   * [pylint] Include name of base class in message for redefined-slots-in-subclass (W0244) 
   * [ruff] Update fix for RUF055 to use var == value 
 * Formatter
   * Fix bracket spacing for single-element tuples in f-string expressions 
   * Fix unstable f-string formatting for expressions containing a trailing comma</comment>
    <requestid>1240140</requestid>
  </revision>
  <revision rev="56" vrev="1">
    <srcmd5>92cb583ef97811276f55b0c17befc5d7</srcmd5>
    <version>0.9.4</version>
    <time>1738965411</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1243319</requestid>
  </revision>
  <revision rev="57" vrev="1">
    <srcmd5>65d4ef9330b98bcd248f751cfb64b021</srcmd5>
    <version>0.9.5</version>
    <time>1739204583</time>
    <user>anag+factory</user>
    <comment>- update to 0.9.5
 * Preview features
   * Recognize all symbols named TYPE_CHECKING for in_type_checking_block 
   * [flake8-comprehensions] Handle builtins at top of file correctly for unnecessary-dict-comprehension-for-iterable (C420) 
   * [flake8-logging] .exception() and exc_info= outside exception handlers (LOG004, LOG014) 
   * [flake8-pyi] Fix incorrect behaviour of custom-typevar-return-type preview-mode autofix if typing was already imported (PYI019) 
   * [flake8-pyi] Fix more complex cases (PYI019) 
   * [flake8-pyi] Make PYI019 autofixable for .py files in preview mode as well as stubs 
   * [flake8-pyi] Remove type parameter correctly when it is the last (PYI019) 
   * [pylint] Fix missing parens in unsafe fix for unnecessary-dunder-call (PLC2801) 
   * [pyupgrade] Better messages and diagnostic range (UP015) 
   * [pyupgrade] Rename private type parameters in PEP 695 generics (UP049) 
   * [refurb] Also report non-name expressions (FURB169) 
   * [refurb] Mark fix as unsafe if there are comments (FURB171) 
   * [ruff] Classes with mixed type variable style (RUF053) 
   * [airflow] BashOperator has been moved to airflow.providers.standard.operators.bash.BashOperator (AIR302) 
   * [flake8-pyi] Add autofix for unused-private-type-var (PYI018) 
   * [flake8-pyi] Significantly improve accuracy of PYI019 if preview mode is enabled 
 * Rule changes
   * Preserve triple quotes and prefixes for strings 
   * [flake8-comprehensions] Skip when TypeError present from too many (kw)args for C410,C411, and C418 
   * [flake8-pyi] Rename PYI019 and improve its diagnostic message 
   * [pep8-naming] Ignore @override methods (N803) 
   * [pyupgrade] Reuse replacement logic from UP046 and UP047 to preserve more comments (UP040) 
   * [ruff] Analyze deferred annotations before enforcing mutable-(data)class-default and function-call-in-dataclass-default-argument (RUF008,RUF009,RUF012) 
   * [pycodestyle] Exempt sys.path += ... calls (E402) 
 * Configuration
   * Config error only when flake8-import-conventions alias conflicts with isort.required-imports bound name 
   * Workaround Even Better TOML crash related to allOf 
 * Bug fixes</comment>
    <requestid>1244445</requestid>
  </revision>
  <revision rev="58" vrev="1">
    <srcmd5>fabca03bdbf381b2bd152b7f0f8db275</srcmd5>
    <version>0.9.6</version>
    <time>1739305275</time>
    <user>anag+factory</user>
    <comment>- update to 0.9.6 
 * Preview features
   * [airflow] Add external_task.{ExternalTaskMarker, ExternalTaskSensor} for AIR302 
   * [flake8-builtins] Make strict module name comparison optional (A005) 
   * [flake8-pyi] Extend fix to Python &lt;= 3.9 for redundant-none-literal (PYI061) 
   * [pylint] Also report when the object isn't a literal (PLE1310) 
   * [ruff] Implement indented-form-feed (RUF054) 
   * [ruff] Skip type definitions for missing-f-string-syntax (RUF027) 
 * Rule changes
   * [flake8-annotations] Correct syntax for typing.Union in suggested return type fixes for ANN20x rules 
   * [flake8-builtins] Match upstream module name comparison (A005) 
   * [flake8-comprehensions] Detect overshadowed list/set/dict, ignore variadics and named expressions (C417) 
   * [flake8-pie] Remove following comma correctly when the unpacked dictionary is empty (PIE800) 
   * [flake8-simplify] Only trigger SIM401 on known dictionaries 
   * [pylint] Do not report calls when object type and argument type mismatch, remove custom escape handling logic (PLE1310) 
   * [pyupgrade] Comments within parenthesized value ranges should not affect applicability (UP040) 
   * [pyupgrade] Don't introduce invalid syntax when upgrading old-style type aliases with parenthesized multiline values (UP040) 
   * [pyupgrade] Ensure we do not rename two type parameters to the same name (UP049) 
   * [pyupgrade] [ruff] Don't apply renamings if the new name is shadowed in a scope of one of the references to the binding (UP049, RUF052) 
   * [ruff] Update RUF009 to behave similar to B008 and ignore attributes with immutable types 
 * Server
   * Root exclusions in the server to project root 
 * Bug fixes
   * [flake8-datetime] Ignore .replace() calls while looking for .astimezone 
   * [flake8-type-checking] Avoid TC004 false positive where the runtime definition is provided by __getattr__ 
 * Documentation
   * Improve ruff-lsp migration document 
   * Undeprecate ruff.nativeServer</comment>
    <requestid>1244821</requestid>
  </revision>
  <revision rev="59" vrev="1">
    <srcmd5>142328bcd4f5443f9e81bd2996b938aa</srcmd5>
    <version>0.9.7</version>
    <time>1740664221</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1248763</requestid>
  </revision>
  <revision rev="60" vrev="1">
    <srcmd5>93b27b63160a21349e229d95d89a0af2</srcmd5>
    <version>0.9.10</version>
    <time>1741722234</time>
    <user>anag+factory</user>
    <comment>- update to 0.9.10
 * Preview features
   * [ruff] Add new rule RUF059: Unused unpacked assignment 
   * [syntax-errors] Detect assignment expressions before Python 3.8 
   * [syntax-errors] Named expressions in decorators before Python 3.9 
   * [syntax-errors] Parenthesized keyword argument names after Python 3.8 
   * [syntax-errors] Positional-only parameters before Python 3.8 
   * [syntax-errors] Tuple unpacking in return and yield before Python 3.8 
   * [syntax-errors] Type parameter defaults before Python 3.13 
   * [syntax-errors] Type parameter lists before Python 3.12 
   * [syntax-errors] except* before Python 3.11 
   * [syntax-errors] type statements before Python 3.12 
 * Bug fixes
   * Escape template filenames in glob patterns in configuration 
   * [flake8-simplify] Exempt unittest context methods for SIM115 rule 
   * Formatter: Fix syntax error location in notebooks 
   * [pyupgrade] Do not offer fix when at least one target is global/nonlocal (UP028) 
   * [flake8-builtins] Ignore variables matching module attribute names (A001) 
   * [pylint] Convert code keyword argument to a positional argument in fix for (PLR1722) 
 * CLI
   * Move rule code from description to check_name in GitLab output serializer 
 * Documentation
   * [pydocstyle] Clarify that D417 only checks docstrings with an arguments section 

- update to 0.9.9
 * Preview features
   * Fix caching of unsupported-syntax errors 
   * Start detecting version-related syntax errors in the parser 
 * Rule changes
   * [pylint] Mark fix unsafe (PLW1507)</comment>
    <requestid>1251746</requestid>
  </revision>
  <revision rev="61" vrev="1">
    <srcmd5>9eb3bdc179cda642b4d25b7b1e5e6a19</srcmd5>
    <version>0.10.0</version>
    <time>1742051759</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.10.0
- check out https://astral.sh/blog/ruff-v0.10.0 for migration info
- pretty long changelog please see
 * https://github.com/astral-sh/ruff/blob/main/CHANGELOG.md
 * https://github.com/astral-sh/ruff/blob/main/BREAKING_CHANGES.md</comment>
    <requestid>1253038</requestid>
  </revision>
  <revision rev="62" vrev="1">
    <srcmd5>f184bc15ff6114aa9547be66766dab2b</srcmd5>
    <version>0.11.0</version>
    <time>1742246097</time>
    <user>anag+factory</user>
    <comment>- update to 0.11.0
- This is a follow-up to release 0.10.0. Because of a mistake in the release process,
   the requires-python inference changes were not included in that release.
   Ruff 0.11.0 now includes this change as well as the stabilization of the preview behavior for PGH004.</comment>
    <requestid>1253416</requestid>
  </revision>
  <revision rev="63" vrev="1">
    <srcmd5>7279d8caabe45234a5fbd7bc3df21724</srcmd5>
    <version>0.11.2</version>
    <time>1742936843</time>
    <user>anag+factory</user>
    <comment>- update to 0.11.2
 * Preview features
   * [syntax-errors] Fix false-positive syntax errors emitted for annotations on variadic parameters before Python 3.11 
   * [airflow] Add chain, chain_linear and cross_downstream for AIR302 
   * [syntax-errors] Improve error message and range for pre-PEP-614 decorator syntax errors 
   * [syntax-errors] PEP 701 f-strings before Python 3.12 
   * [syntax-errors] Parenthesized context managers before Python 3.9 
   * [syntax-errors] Star annotations before Python 3.11 
   * [syntax-errors] Star expression in index before Python 3.11 
   * [syntax-errors] Unparenthesized assignment expressions in sets and indexes 
 * Bug fixes
   * Server: Allow FixAll action in presence of version-specific syntax errors 
   * [flake8-bandit] Allow raw strings in suspicious-mark-safe-usage (S308)
   * [refurb] Avoid panicking unwrap in verbose-decimal-constructor (FURB157) 
   * [refurb] Fix starred expressions fix (FURB161) 
   * Fix --statistics reporting for unsafe fixes 
 * Rule changes
   * [flake8-executables] Allow uv run in shebang line for shebang-missing-python (EXE003)
 * CLI
   * Add --exit-non-zero-on-format 
 * Documentation
   * Update Ruff tutorial to avoid non-existent fix in __init__.py 
   * [flake8-gettext] Swap format- and printf-in-get-text-func-call examples (INT002, INT003)</comment>
    <requestid>1255264</requestid>
  </revision>
  <revision rev="64" vrev="1">
    <srcmd5>5f022ef482aae2cff05f277cc5506743</srcmd5>
    <version>0.11.4</version>
    <time>1744127406</time>
    <user>anag_factory</user>
    <comment>- update to 0.11.4
 * Preview features
   * [ruff] Implement invalid-rule-code as RUF102 
   * [syntax-errors] Detect duplicate keys in match mapping patterns 
   * [syntax-errors] Detect duplicate attributes in match class patterns 
   * [syntax-errors] Detect invalid syntax in annotations 
   * [airflow] Add more autofixes for AIR302
   * [airflow] Move AIR301 to AIR002 
   * [airflow] Move AIR302 to AIR301 and AIR303 to AIR302 
   * [flake8-bandit] Mark str and list[str] literals as trusted input (S603) 
   * [ruff] Support slices in RUF005 
   * [syntax-errors] Start detecting compile-time syntax errors 
   * [syntax-errors] Duplicate type parameter names 
   * [syntax-errors] Irrefutable case pattern before final case 
   * [syntax-errors] Multiple assignments in case pattern 
   * [syntax-errors] Single starred assignment target 
   * [syntax-errors] Starred expressions in return, yield, and for 
   * [syntax-errors] Store to or delete __debug__ 
 * Bug fixes
   * [syntax-errors] Fix multiple assignment error for class fields in match patterns 
   * Don't skip visiting non-tuple slice in typing.Annotated subscripts 
   * Error instead of panic! when running Ruff from a deleted directory
   * [syntax-errors] Fix false positive for parenthesized tuple index 
 * CLI
   * Check pyproject.toml correctly when it is passed via stdin 
 * Configuration
   * [flake8-import-conventions] Add import numpy.typing as npt to default flake8-import-conventions.aliases 
   * Documentation
   * [refurb] Document why UserDict, UserList, and UserString are preferred over dict, list, and str (FURB189)</comment>
    <requestid>1267438</requestid>
  </revision>
  <revision rev="65" vrev="1">
    <srcmd5>574db665186c09e69f2bbba29a2b7a62</srcmd5>
    <version>0.11.5</version>
    <time>1744628137</time>
    <user>anag_factory</user>
    <comment>- update to 0.11.5
 * Preview features
   * [airflow] Add missing AIR302 attribute check 
   * [airflow] Expand module path check to individual symbols (AIR302) 
   * [airflow] Extract AIR312 from AIR302 rules (AIR302, AIR312) 
   * [airflow] Update oudated AIR301, AIR302 rules 
   * [syntax-errors] Async comprehension in sync comprehension 
   * [syntax-errors] Check annotations in annotated assignments 
   * [syntax-errors] Extend annotation checks to await 
 * Bug fixes
   * [flake8-pie] Avoid false positive for multiple assignment with auto() (PIE796) 
 * Rule changes
   * [ruff] Fix RUF100 to detect unused file-level noqa directives with specific codes  
   * [flake8-pytest-style] Avoid false positive for legacy form of pytest.raises (PT011) 
 * Documentation
   * Fix formatting of &quot;See Style Guide&quot; link</comment>
    <requestid>1268673</requestid>
  </revision>
  <revision rev="66" vrev="1">
    <srcmd5>8cae03eb4c0a700686c36abfb0b60ac2</srcmd5>
    <version>0.11.6</version>
    <time>1745335543</time>
    <user>anag_factory</user>
    <comment>- update to 0.11.6
 * Preview features
   * Avoid adding whitespace to the end of a docstring after an escaped quote 
   * [airflow] Extract AIR311 from AIR301 rules (AIR301, AIR311)
 * Bug fixes
   * Raise syntax error when \ is at end of file</comment>
    <requestid>1271168</requestid>
  </revision>
  <revision rev="67" vrev="1">
    <srcmd5>3f041fae8494a39ba5bcfc779b4baf52</srcmd5>
    <version>0.11.7</version>
    <time>1745937571</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.11.7:
  * \[`airflow`\] Apply auto fixes to cases where the names have
    changed in Airflow 3 (`AIR301`)
  * \[`perflint`\] Implement fix for `manual-dict-comprehension`
    (`PERF403`)
  * [syntax-errors] Make duplicate parameter names a semantic
    error
  * \[`flake8-type-checking`\] Visit keyword arguments in checks
    involving `typing.cast`/`typing.NewType` arguments
  * \[`pyupgrade`\] Preserve parenthesis when fixing native
    literals containing newlines (`UP018`)
  * \[`refurb`\] Mark the `FURB161` fix unsafe except for
    integers and booleans

   * Avoid adding whitespace to the end of a docstring after an escaped quote
   * Raise syntax error when \ is at end of file
   * [airflow] Add missing AIR302 attribute check
   * [airflow] Expand module path check to individual symbols (AIR302)
   * [airflow] Extract AIR312 from AIR302 rules (AIR302, AIR312)
   * [airflow] Update oudated AIR301, AIR302 rules
   * [syntax-errors] Async comprehension in sync comprehension
   * [syntax-errors] Check annotations in annotated assignments
   * [syntax-errors] Extend annotation checks to await
   * [flake8-pie] Avoid false positive for multiple assignment with auto() (PIE796)
   * [ruff] Fix RUF100 to detect unused file-level noqa directives with specific codes
   * [flake8-pytest-style] Avoid false positive for legacy form of pytest.raises (PT011)
   * Fix formatting of &quot;See Style Guide&quot; link
   * [ruff] Implement invalid-rule-code as RUF102
   * [syntax-errors] Detect duplicate keys in match mapping patterns
   * [syntax-errors] Detect duplicate attributes in match class patterns</comment>
    <requestid>1272955</requestid>
  </revision>
  <revision rev="68" vrev="1">
    <srcmd5>892e4b4509f574ec508333fbcc8ff821</srcmd5>
    <version>0.11.8</version>
    <time>1746638077</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.11.8
 * Preview features
  * \[`airflow`\] Apply auto fixes to cases where the names have changed in Airflow 3 (`AIR302`, `AIR311`)
  * \[`airflow`\] Extend `AIR301` rule 
  * \[`airflow`\] Update existing `AIR302` rules with better suggestions 
  * \[`refurb`\] Mark fix as safe for `readlines-in-for` (`FURB129`) 
  * [syntax-errors] `nonlocal` declaration at module level 
  * [syntax-errors] Detect single starred expression assignment `x = *y` 
 * Bug fixes
  * \[`flake8-pyi`\] Ensure `Literal[None,] | Literal[None,]` is not autofixed to `None | None` (`PYI061`) 
  * \[`flake8-use-pathlib`\] Avoid suggesting `Path.iterdir()` for `os.listdir` with file descriptor (`PTH208`) 
  * \[`flake8-use-pathlib`\] Fix `PTH104` false positive when `rename` is passed a file descriptor 
  * \[`flake8-use-pathlib`\] Fix `PTH116` false positive when `stat` is passed a file descriptor 
  * \[`flake8-use-pathlib`\] Fix `PTH123` false positive when `open` is passed a file descriptor from a function call 
  * \[`pycodestyle`\] Fix duplicated diagnostic in `E712` 
  * \[`pylint`\] Detect `global` declarations in module scope (`PLE0118`) 
  * [syntax-errors] Make `async-comprehension-in-sync-comprehension` more specific 
 * Configuration
  * Add option to disable `typing_extensions` imports 
 * Documentation
  * Fix example syntax for the `lint.pydocstyle.ignore-var-parameters` option 
  * Add fix safety sections (`ASYNC116`, `FLY002`, `D200`, `RUF005`, `RUF017`, `RUF027`, `RUF028`, `RUF057`) 
 * Other changes
  * Add Python 3.14 to configuration options 
  * Make syntax error for unparenthesized except tuples version specific to before 3.14</comment>
    <requestid>1274047</requestid>
  </revision>
  <revision rev="69" vrev="1">
    <srcmd5>7a461f61aa424b09169a16a0e4989f0e</srcmd5>
    <version>0.11.10</version>
    <time>1748003248</time>
    <user>anag_factory</user>
    <comment>- update 0.11.10:
 * Preview features
   * [ruff] Implement a recursive check for RUF060 
   * [airflow] Enable autofixes for AIR301 and AIR311 
   * [airflow] Apply try catch guard to all AIR3 rules 
   * [airflow] Extend AIR311 rules 
 * Bug fixes
   * [flake8-bugbear] Ignore B028 if skip_file_prefixes is present 
   * [flake8-pie] Mark autofix for PIE804 as unsafe if the dictionary contains comments 
   * [flake8-simplify] Correct behavior for str.split/rsplit with maxsplit=0 (SIM905) 
   * [flake8-simplify] Fix SIM905 autofix for rsplit creating a reversed list literal 
   * [flake8-use-pathlib] Suppress diagnostics for all os.* functions that have the dir_fd parameter (PTH) 
   * [refurb] Mark autofix as safe only for number literals (FURB116) 
 * Rule changes
   * [flake8-bandit] Skip S608 for expressionless f-strings 
   * [flake8-pytest-style] Don't recommend usefixtures for parametrize values (PT019) 
   * [pyupgrade] Add resource.error as deprecated alias of OSError (UP024) 
 * CLI
   * Disable jemalloc on Android 
 * Documentation
   * Update Neovim setup docs 
   * [flake8-simplify] Add fix safety section (SIM103) 
   * [flake8-simplify] Add fix safety section (SIM112) 
   * [pylint] Add fix safety section (PLC0414) 
   * [pylint] Add fix safety section (PLE4703) 
   * [pylint] Add fix safety section (PLW1514) 
   * [pylint] Add fix safety section (PLW3301) 
   * [ruff] Add fix safety section (RUF007) 
   * [ruff] Add fix safety section (RUF033)</comment>
    <requestid>1278416</requestid>
  </revision>
  <revision rev="70" vrev="1">
    <srcmd5>cc4ed2fa92ee50741d4fa8e3627d9e08</srcmd5>
    <version>0.11.11</version>
    <time>1748277130</time>
    <user>anag_factory</user>
    <comment>- update to 0.11.11:
 * Preview features
   * [airflow] Add autofixes for AIR302 and AIR312 
   * [airflow] Move rules from AIR312 to AIR302 
   * [airflow] Update AIR301 and AIR311 with the latest Airflow implementations 
   * [flake8-simplify] Enable fix in preview mode (SIM117) 
 * Bug fixes
   * Fix inconsistent formatting of match-case on [] and _ 
   * [pylint] Fix PLW1514 not recognizing the encoding positional argument of codecs.open 
 * CLI
   * Add full option name in formatter warning 
 * Documentation
   * Fix rendering of admonition in docs 
   * [flake8-print] Improve print/pprint docs for T201 and T203 
   * [flake8-simplify] Add fix safety section (SIM110,SIM210)
   * [pylint] Fix docs example that produced different output (PLW0603)</comment>
    <requestid>1279586</requestid>
  </revision>
  <revision rev="71" vrev="1">
    <srcmd5>e2325b9f4efbb6e001e8f8435c6cb2d7</srcmd5>
    <version>0.11.12</version>
    <time>1748894342</time>
    <user>anag_factory</user>
    <comment>- update to 0.11.12:
 * Preview features
   * [airflow] Revise fix titles (AIR3) 
   * [pylint] Implement missing-maxsplit-arg (PLC0207) 
   * [pyupgrade] New rule UP050 (useless-class-metaclass-type) 
   * [flake8-use-pathlib] Replace os.symlink with Path.symlink_to (PTH211) 
 * Bug fixes
   * [flake8-bugbear] Ignore __debug__ attribute in B010 
   * [flake8-async] Fix anyio.sleep argument name (ASYNC115, ASYNC116) 
   * [refurb] Fix FURB129 autofix generating invalid syntax 
 * Rule changes
   * [flake8-implicit-str-concat] Add autofix for ISC003 
   * [pycodestyle] Improve the diagnostic message for E712 
   * [flake8-2020] Fix diagnostic message for != comparisons (YTT201) 
   * [pyupgrade] Make fix unsafe if it deletes comments (UP010) 
 * Documentation
   * Simplify rules table to improve readability 
   * Update editor integrations link in README 
   * [flake8-bugbear] Add fix safety section (B006)</comment>
    <requestid>1281460</requestid>
  </revision>
  <revision rev="72" vrev="1">
    <srcmd5>77ced93915f79e160c6ed3d7236539fe</srcmd5>
    <version>0.11.13</version>
    <time>1749651529</time>
    <user>anag_factory</user>
    <comment>- update to 0.11.13:
  * \[`airflow`\] Add unsafe fix for module moved cases
    (`AIR301`,`AIR311`,`AIR312`,`AIR302`)
  * \[`refurb`\] Add coverage of `set` and `frozenset` calls
    (`FURB171`)
  * \[`refurb`\] Mark `FURB180` fix unsafe when class has bases
  * \[`fastapi`\] Avoid false positive for class dependencies
    (`FAST003`)
  * Support Python 3.14 template strings (t-strings) in formatter
    and parser

   * [airflow] Revise fix titles (AIR3)
   * [pylint] Implement missing-maxsplit-arg (PLC0207)
   * [pyupgrade] New rule UP050 (useless-class-metaclass-type)
   * [flake8-use-pathlib] Replace os.symlink with Path.symlink_to (PTH211)
   * [flake8-bugbear] Ignore __debug__ attribute in B010
   * [flake8-async] Fix anyio.sleep argument name (ASYNC115, ASYNC116)
   * [refurb] Fix FURB129 autofix generating invalid syntax
   * [flake8-implicit-str-concat] Add autofix for ISC003
   * [pycodestyle] Improve the diagnostic message for E712
   * [flake8-2020] Fix diagnostic message for != comparisons (YTT201)
   * [pyupgrade] Make fix unsafe if it deletes comments (UP010)
   * Simplify rules table to improve readability
   * Update editor integrations link in README
   * [flake8-bugbear] Add fix safety section (B006)
   * [airflow] Add autofixes for AIR302 and AIR312
   * [airflow] Move rules from AIR312 to AIR302
   * [airflow] Update AIR301 and AIR311 with the latest Airflow implementations
   * [flake8-simplify] Enable fix in preview mode (SIM117)
   * Fix inconsistent formatting of match-case on [] and _</comment>
    <requestid>1284538</requestid>
  </revision>
  <revision rev="73" vrev="1">
    <srcmd5>9980c9530affe70c35a20d1f86dbcf1d</srcmd5>
    <version>0.12.0</version>
    <time>1750278515</time>
    <user>anag_factory</user>
    <comment>- update to 0.12.0 
 * Breaking changes
   * Detection of more syntax errors
   * New default Python version handling for syntax errors
   * Updated f-string formatting
   * rust-toolchain.toml is no longer included in source distributions
 * Removed Rules
   * suspicious-xmle-tree-usage (S320)
 * Deprecated Rules
   * pandas-df-variable-name
 * Stabilization
   * for-loop-writes (FURB122)
   * check-and-remove-from-set (FURB132)
   * verbose-decimal-constructor (FURB157)
   * fromisoformat-replace-z (FURB162)
   * int-on-sliced-str (FURB166)
   * exc-info-outside-except-handler (LOG014)
   * import-outside-top-level (PLC0415)
   * unnecessary-dict-index-lookup (PLR1733)
   * nan-comparison (PLW0177)
   * eq-without-hash (PLW1641)
   * pytest-parameter-with-default-argument (PT028)
   * pytest-warns-too-broad (PT030)
   * pytest-warns-with-multiple-statements (PT031)
   * invalid-formatter-suppression-comment (RUF028)
   * dataclass-enum (RUF049)
   * class-with-mixed-type-vars (RUF053)
   * unnecessary-round (RUF057)
   * starmap-zip (RUF058)
   * non-pep604-annotation-optional (UP045)</comment>
    <requestid>1286470</requestid>
  </revision>
  <revision rev="74" vrev="1">
    <srcmd5>b3f2012d3191054cb7b69a30001f6804</srcmd5>
    <version>0.12.1</version>
    <time>1751281448</time>
    <user>anag_factory</user>
    <comment>- update to 0.12.1
 * Preview features
   * [flake8-errmsg] Extend EM101 to support byte strings 
   * [flake8-use-pathlib] Add autofix for PTH202 
   * [pygrep-hooks] Add AsyncMock methods to invalid-mock-access (PGH005) 
   * [pylint] Ignore __init__.py files in (PLC0414) 
   * [ruff] Trigger RUF037 for empty string and byte strings 
   * [formatter] Fix missing blank lines before decorated classes in .pyi files 
 * Bug fixes
   * Avoid generating diagnostics with per-file ignores 
   * Handle parenthesized arguments in remove_argument 
   * [flake8-logging] Avoid false positive for exc_info=True outside logger.exception (LOG014) 
   * [flake8-pytest-style] Enforce pytest import for decorators 
   * [flake8-pytest-style] Mark autofix for PT001 and PT023 as unsafe if there's comments in the decorator 
   * [flake8-pytest-style] PT001/PT023 fix makes syntax error on parenthesized decorator 
   * [flake8-raise] Make fix unsafe if it deletes comments (RSE102) 
   * [flake8-simplify] Fix SIM911 autofix creating a syntax error 
   * [flake8-simplify] Fix false negatives for shadowed bindings (SIM910, SIM911) 
   * [flake8-simplify] Preserve original behavior for except () and bare except (SIM105) 
   * [flake8-pyi] Fix PYI041's fix causing TypeError with None | None | ... 
   * [perflint] Fix PERF101 autofix creating a syntax error and mark autofix as unsafe if there are comments in the list call expr 
   * [perflint] Fix false negative in PERF401 
   * [pylint] Avoid flattening nested min/max when outer call has single argument (PLW3301) 
   * [pylint] Fix PLC2801 autofix creating a syntax error 
   * [pylint] Mark PLE0241 autofix as unsafe if there's comments in the base classes 
   * [pylint] Suppress PLE2510/PLE2512/PLE2513/PLE2514/PLE2515 autofix if the text contains an odd number of backslashes 
   * [refurb] Detect more exotic float literals in FURB164 
   * [refurb] Fix FURB163 autofix creating a syntax error for yield expressions 
   * [refurb] Mark FURB129 autofix as unsafe if there's comments in the readlines call 
   * [ruff] Fix false positives and negatives in RUF010</comment>
    <requestid>1288970</requestid>
  </revision>
  <revision rev="75" vrev="1">
    <srcmd5>34a021f84b5bd9dc6ecf4a1aa13e30b8</srcmd5>
    <version>0.12.2</version>
    <time>1751814237</time>
    <user>anag_factory</user>
    <comment>- update to 0.12.2:
  * [`flake8-pyi`] Expand `Optional[A]` to `A | None`
    (`PYI016`)
  * [`pyupgrade`] Mark `UP008` fix safe if no comments are in
    range
  * [`flake8-comprehensions`] Fix `C420` to prepend whitespace
    when needed
  * [`perflint`] Fix `PERF403` panic on attribute or
    subscription loop variable
  * [`pydocstyle`] Fix `D413` infinite loop for parenthesized
    docstring
  * [`pylint`] Fix `PLW0108` autofix introducing a syntax error
    when the lambda's body contains an assignment expression
  * [`refurb`] Fix false positive on empty tuples (`FURB168`)
  * [`ruff`] Allow more `field` calls from `attrs` (`RUF009`)
  * [`ruff`] Fix syntax error introduced for an empty string
    followed by a u-prefixed string (`UP025`)

   * [flake8-errmsg] Extend EM101 to support byte strings
   * [flake8-use-pathlib] Add autofix for PTH202
   * [pygrep-hooks] Add AsyncMock methods to invalid-mock-access (PGH005)
   * [pylint] Ignore __init__.py files in (PLC0414)
   * [ruff] Trigger RUF037 for empty string and byte strings
   * [formatter] Fix missing blank lines before decorated classes in .pyi files
   * Avoid generating diagnostics with per-file ignores
   * Handle parenthesized arguments in remove_argument
   * [flake8-logging] Avoid false positive for exc_info=True outside logger.exception (LOG014)
   * [flake8-pytest-style] Enforce pytest import for decorators
   * [flake8-pytest-style] Mark autofix for PT001 and PT023 as unsafe if there's comments in the decorator
   * [flake8-pytest-style] PT001/PT023 fix makes syntax error on parenthesized decorator</comment>
    <requestid>1290670</requestid>
  </revision>
  <revision rev="76" vrev="1">
    <srcmd5>b2819c55c4461988756fbac76a26c9d2</srcmd5>
    <version>0.12.3</version>
    <time>1752590580</time>
    <user>anag_factory</user>
    <comment>- update to 0.12.3:
 * Preview features
   * [flake8-bugbear] Support non-context-manager calls in B017 
   * [flake8-use-pathlib] Add autofixes for PTH100, PTH106, PTH107, PTH108, PTH110, PTH111, PTH112, PTH113, PTH114, PTH115, PTH117, PTH119, PTH120 
   * [flake8-use-pathlib] Add autofixes for PTH203, PTH204, PTH205 
 * Bug fixes
   * [flake8-return] Fix false-positive for variables used inside nested functions in RET504 
   * Treat form feed as valid whitespace before a line continuation 
   * [flake8-type-checking] Fix syntax error introduced by fix (TC008) 
   * [pyupgrade] Keyword arguments in super should suppress the UP008 fix 
 * Documentation
   * [flake8-pyi] Make example error out-of-the-box (PYI007, PYI008) 
   * [flake8-simplify] Make example error out-of-the-box (SIM116) 
   * [flake8-type-checking] Make example error out-of-the-box (TC001) 
   * [flake8-use-pathlib] Make example error out-of-the-box (PTH210) 
   * [pycodestyle] Make example error out-of-the-box (E272) 
   * [pycodestyle] Make example not raise unnecessary SyntaxError (E114) 
   * [pydoclint] Make example error out-of-the-box (DOC501) 
   * [pylint, pyupgrade] Fix syntax errors in examples (PLW1501, UP028) 
   * [pylint] Update missing-maxsplit-arg docs and error to suggest proper usage (PLC0207) 
   * [flake8-bandit] Make example error out-of-the-box (S412)</comment>
    <requestid>1292499</requestid>
  </revision>
  <revision rev="77" vrev="1">
    <srcmd5>02ba71523027dc276fa6c782663f9a15</srcmd5>
    <version>0.12.4</version>
    <time>1753120720</time>
    <user>anag_factory</user>
    <comment>- update to 0.12.4
 * Preview features
   * [flake8-type-checking, pyupgrade, ruff] Add from __future__ import annotations when it would
      allow new fixes (TC001, TC002, TC003, UP037, RUF013) 
   * [flake8-use-pathlib] Add autofix for PTH109 
   * [pylint] Detect indirect pathlib.Path usages for unspecified-encoding (PLW1514) 
 * Bug fixes
   * [flake8-bugbear] Fix B017 false negatives for keyword exception arguments 
   * [flake8-use-pathlib] Fix false negative on direct Path() instantiation (PTH210) 
   * [flake8-django] Fix DJ008 false positive for abstract models with type-annotated abstract field 
   * [isort] Fix I002 import insertion after docstring with multiple string statements 
   * [isort] Treat form feed as valid whitespace before a semicolon 
   * [pydoclint] Fix SyntaxError from fixes with line continuations (D201, D202) 
   * [refurb] FURB164 fix should validate arguments and should usually be marked unsafe 
 * Rule changes
   * [flake8-use-pathlib] Skip single dots for invalid-pathlib-with-suffix (PTH210) on versions &gt;= 3.14 
   * [pep8_naming] Avoid false positives on standard library functions with uppercase names (N802) 
   * [pycodestyle] Handle brace escapes for t-strings in logical lines 
   * [pylint] Extend invalid string character rules to include t-strings 
   * [ruff] Allow strict kwarg when checking for starmap-zip (RUF058) in Python 3.14+ 
 * Documentation
   * [flake8-type-checking] Make TC010 docs example more realistic 
   * Make more documentation examples error out-of-the-box</comment>
    <requestid>1294441</requestid>
  </revision>
  <revision rev="78" vrev="1">
    <srcmd5>3154759f9975544edaf8a615e9ebca2d</srcmd5>
    <version>0.12.5</version>
    <time>1753626372</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.12.5:
  * \[`flake8-use-pathlib`\] Add autofix for `PTH101`, `PTH104`,
    `PTH105`, `PTH121`
  * \[`ruff`\] Support byte strings (`RUF055`)
  * Fix `unreachable` panic in parser
  * \[`flake8-pyi`\] Skip fix if all `Union` members are `None`
    (`PYI016`)
  * \[`perflint`\] Parenthesize generator expressions (`PERF401`)
  * \[`pylint`\] Handle empty comments after line continuation
    (`PLR2044`)

      allow new fixes (TC001, TC002, TC003, UP037, RUF013)
   * [flake8-use-pathlib] Add autofix for PTH109
   * [pylint] Detect indirect pathlib.Path usages for unspecified-encoding (PLW1514)
   * [flake8-bugbear] Fix B017 false negatives for keyword exception arguments
   * [flake8-use-pathlib] Fix false negative on direct Path() instantiation (PTH210)
   * [flake8-django] Fix DJ008 false positive for abstract models with type-annotated abstract field
   * [isort] Fix I002 import insertion after docstring with multiple string statements
   * [isort] Treat form feed as valid whitespace before a semicolon
   * [pydoclint] Fix SyntaxError from fixes with line continuations (D201, D202)
   * [refurb] FURB164 fix should validate arguments and should usually be marked unsafe
   * [flake8-use-pathlib] Skip single dots for invalid-pathlib-with-suffix (PTH210) on versions &gt;= 3.14
   * [pep8_naming] Avoid false positives on standard library functions with uppercase names (N802)
   * [pycodestyle] Handle brace escapes for t-strings in logical lines
   * [pylint] Extend invalid string character rules to include t-strings
   * [ruff] Allow strict kwarg when checking for starmap-zip (RUF058) in Python 3.14+
   * [flake8-type-checking] Make TC010 docs example more realistic
   * [flake8-bugbear] Support non-context-manager calls in B017
   * [flake8-use-pathlib] Add autofixes for PTH100, PTH106, PTH107, PTH108, PTH110, PTH111, PTH112, PTH113, PTH114, PTH115, PTH117, PTH119, PTH120
   * [flake8-use-pathlib] Add autofixes for PTH203, PTH204, PTH205</comment>
    <requestid>1295811</requestid>
  </revision>
  <revision rev="79" vrev="1">
    <srcmd5>62e0b7c0be0fd1735a6a34f362a01612</srcmd5>
    <version>0.12.7</version>
    <time>1753976701</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.12.7:
  * \[`flake8-commas`\] Add support for trailing comma checks in
    type parameter lists (`COM812`, `COM819`)
  * \[`pylint`\] Implement auto-fix for `missing-maxsplit-arg`
    (`PLC0207`)
  * \[`ruff`\] Offer fixes for `RUF039` in more cases
  * Support `.pyi` files in ruff analyze graph
  * \[`flake8-pyi`\] Preserve inline comment in ellipsis removal
    (`PYI013`)
  * \[`perflint`\] Ignore rule if target is `global` or
    `nonlocal` (`PERF401`)
  * \[`pyupgrade`\] Fix `UP030` to avoid modifying double curly
    braces in format strings
  * \[`refurb`\] Ignore decorated functions for `FURB118`
  * \[`refurb`\] Mark `int` and `bool` cases for
    `Decimal.from_float` as safe fixes (`FURB164`)
  * \[`ruff`\] Fix `RUF033` for named default expressions</comment>
    <requestid>1296552</requestid>
  </revision>
  <revision rev="80" vrev="1">
    <srcmd5>86b2f3d421aa42af4555b25013fd8c5c</srcmd5>
    <version>0.12.8</version>
    <time>1754762355</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.12.8
 * Preview features
  * [flake8-use-pathlib] Expand PTH201 to check all PurePath subclasses 
 * Bug fixes
  * [flake8-blind-except] Change BLE001 to correctly parse exception tuples 
  * [flake8-errmsg] Exclude typing.cast from EM101 
  * [flake8-simplify] Fix raw string handling in SIM905 for embedded quotes 
  * [flake8-import-conventions] Avoid false positives for NFKC-normalized __debug__ import aliases in ICN001 
  * [isort] Fix syntax error after docstring ending with backslash (I002) 
  * [pylint] Mark PLC0207 fixes as unsafe when *args unpacking is present 
  * [pyupgrade] Prevent infinite loop with I002 (UP010, UP035) 
  * [ruff] Parenthesize generator expressions in f-strings (RUF010) 
 * Rule changes
  * [eradicate] Don't flag pyrefly pragmas as unused code (ERA001) 
 * Documentation
  * Replace &quot;associative&quot; with &quot;commutative&quot; in docs for RUF036 
  * Fix copy and line separator colors in dark mode 
  * Fix link to typing documentation 
  * [refurb] Make more examples error out-of-the-box
 * Other changes
  * Include column numbers in GitLab output format 
  * Always expand tabs to four spaces in diagnostics 
  * Update pre-commit's ruff id</comment>
    <requestid>1298595</requestid>
  </revision>
  <revision rev="81" vrev="1">
    <srcmd5>f68257e29aa763445503d11b7fe63b45</srcmd5>
    <version>0.12.9</version>
    <time>1755526052</time>
    <user>anag_factory</user>
    <comment>- update to 0.12.9:
  * \[`airflow`\] Add check for
    `airflow.secrets.cache.SecretCache` (`AIR301`)
  * \[`ruff`\] Offer a safe fix for multi-digit zeros (`RUF064`)
  * \[`flake8-blind-except`\] Fix `BLE001` false-positive on
    `raise ... from None`
  * \[`flake8-comprehensions`\] Fix false positive for `C420`
    with attribute, subscript, or slice assignment targets
  * \[`flake8-simplify`\] Fix handling of U+001C..U+001F
    whitespace (`SIM905`)
  * \[`pylint`\] Use lowercase hex characters to match the
    formatter (`PLE2513`)

  * [flake8-use-pathlib] Expand PTH201 to check all PurePath subclasses
  * [flake8-blind-except] Change BLE001 to correctly parse exception tuples
  * [flake8-errmsg] Exclude typing.cast from EM101
  * [flake8-simplify] Fix raw string handling in SIM905 for embedded quotes
  * [flake8-import-conventions] Avoid false positives for NFKC-normalized __debug__ import aliases in ICN001
  * [isort] Fix syntax error after docstring ending with backslash (I002)
  * [pylint] Mark PLC0207 fixes as unsafe when *args unpacking is present
  * [pyupgrade] Prevent infinite loop with I002 (UP010, UP035)
  * [ruff] Parenthesize generator expressions in f-strings (RUF010)
  * [eradicate] Don't flag pyrefly pragmas as unused code (ERA001)
  * Replace &quot;associative&quot; with &quot;commutative&quot; in docs for RUF036
  * Fix copy and line separator colors in dark mode
  * Fix link to typing documentation
  * Include column numbers in GitLab output format
  * Always expand tabs to four spaces in diagnostics
  * Update pre-commit's ruff id</comment>
    <requestid>1299828</requestid>
  </revision>
  <revision rev="82" vrev="1">
    <srcmd5>4e2ecec0299b5389dc1d9b28dfe4b93c</srcmd5>
    <version>0.12.10</version>
    <time>1756146969</time>
    <user>anag_factory</user>
    <comment>- update to 0.12.10
 * Preview features
  * [flake8-simplify] Implement fix for maxsplit without separator (SIM905) 
  * [flake8-use-pathlib] Add fixes for PTH102 and PTH103 
 * Bug fixes
  * [isort] Handle multiple continuation lines after module docstring (I002) 
  * [pyupgrade] Avoid reporting __future__ features as unnecessary when they are used (UP010) 
  * [pyupgrade] Handle nested Optionals (UP045) 
 * Rule changes
  * [pycodestyle] Make E731 fix unsafe instead of display-only for class assignments 
  * [pyflakes] Add secondary annotation showing previous definition (F811) 
 * Documentation
  * Fix description of global config file discovery strategy 
  * Update outdated links to https://typing.python.org/en/latest/source/stubs.html 
  * [flake8-annotations] Remove unused import in example (ANN401)</comment>
    <requestid>1300962</requestid>
  </revision>
  <revision rev="83" vrev="1">
    <srcmd5>6bb3c15d96275c390533d8076b750ff7</srcmd5>
    <version>0.12.11</version>
    <time>1756485287</time>
    <user>anag_factory</user>
    <comment>- update to 0.12.11 
 * Preview features
  * [airflow] Extend AIR311 and AIR312 rules 
  * [airflow] Replace wrong path airflow.io.storage with airflow.io.store (AIR311) 
  * [flake8-async] Implement blocking-http-call-httpx-in-async-function (ASYNC212) 
  * [flake8-logging-format] Add auto-fix for f-string logging calls (G004) 
  * [flake8-use-pathlib] Add autofix for PTH211 
  * [flake8-use-pathlib] Make PTH100 fix unsafe because it can change behavior 
 * Bug fixes
  * [pyflakes, pylint] Fix false positives caused by __class__ cell handling (F841, PLE0117) 
  * [pyflakes] Fix allowed-unused-imports matching for top-level modules (F401) 
  * [ruff] Fix false positive for t-strings in default-factory-kwarg (RUF026) 
  * [ruff] Preserve relative whitespace in multi-line expressions (RUF033) 
 * Rule changes
  * [ruff] Handle empty t-strings in unnecessary-empty-iterable-within-deque-call (RUF037) 
 * Documentation
  * Fix incorrect D413 links in docstrings convention FAQ 
  * [flake8-use-pathlib] Update links to the table showing the correspondence between os and pathlib</comment>
    <requestid>1301841</requestid>
  </revision>
  <revision rev="84" vrev="2">
    <srcmd5>018b3945acd57675b0661a44c98bb25a</srcmd5>
    <version>0.12.11</version>
    <time>1756926429</time>
    <user>anag_factory</user>
    <comment></comment>
    <requestid>1302462</requestid>
  </revision>
</revisionlist>
