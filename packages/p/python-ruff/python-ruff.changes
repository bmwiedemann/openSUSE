-------------------------------------------------------------------
Fri Sep 26 10:07:43 UTC 2025 - Dirk Müller <dmueller@suse.com>

- update to 0.13.2:
  * [`flake8-async`] Implement `blocking-path-method`
  * [`flake8-bugbear`] Implement `map-without-explicit-strict`
  * [`flake8-bultins`] Detect class-scope builtin shadowing in
    decorators, default args, and attribute initializers (`A003`)
  * [`ruff`] Implement `logging-eager-conversion` (`RUF065`)
  * Include `.pyw` files by default when linting and formatting

-------------------------------------------------------------------
Fri Sep 19 19:26:06 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.13.1
 * Preview features
  * [flake8-simplify] Detect unnecessary None default for additional key expression types (SIM910)
  * [flake8-use-pathlib] Add fix for PTH123
  * [flake8-use-pathlib] Fix PTH101, PTH104, PTH105, PTH121 fixes
  * [flake8-use-pathlib] Make PTH111 fix unsafe because it can change behavior
  * [pycodestyle] Fix E301 to only trigger for functions immediately within a class
  * [refurb] Mark single-item-membership-test fix as always unsafe (FURB171)
 * Bug fixes
  * Handle t-strings for token-based rules and suppression comments
  * [flake8-bandit] Fix truthiness: dict-only ** displays not truthy for shell (S602, S604, S609)
  * [flake8-simplify] Fix diagnostic to show correct method name for str.rsplit calls (SIM905)
  * [flynt] Use triple quotes for joined raw strings with newlines (FLY002)
  * [pyupgrade] Fix false positive when class name is shadowed by local variable (UP008)
  * [pyupgrade] Prevent infinite loop with I002 and UP026
  * [ruff] Recognize t-strings, generators, and lambdas in invalid-index-type (RUF016)
 * Rule changes
  * [RUF102] Respect rule redirects in invalid rule code detection
  * [flake8-bugbear] Mark the fix for unreliable-callable-check as always unsafe (B004)
  * [ruff] Allow dataclass attribute value instantiation from nested frozen dataclass (RUF009)
 * CLI
  * Add fixes to output-format=sarif
  * Treat panics as fatal diagnostics, sort panics last
 * Documentation
  * [ruff] Add analyze.string-imports-min-dots to settings
  * Update README.md with Albumentations new repository URL

-------------------------------------------------------------------
Thu Sep 11 00:23:58 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.13.0
 * Breaking changes
  * Several rules can now add from __future__ import annotations automatically
  * Full module paths are now used to verify first-party modules
  * Deprecated rules must now be selected by exact rule code
  * The deprecated macOS configuration directory fallback has been removed
 * Removed Rules
  * pandas-df-variable-name (PD901)
  * non-pep604-isinstance (UP038)
 * Stabilization
  * airflow-dag-no-schedule-argument (AIR002)
  * airflow3-removal (AIR301)
  * airflow3-moved-to-provider (AIR302)
  * airflow3-suggested-update (AIR311)
  * airflow3-suggested-to-move-to-provider (AIR312)
  * long-sleep-not-forever (ASYNC116)
  * f-string-number-format (FURB116)
  * os-symlink (PTH211)
  * generic-not-last-base-class (PYI059)
  * redundant-none-literal (PYI061)
  * pytest-raises-ambiguous-pattern (RUF043)
  * unused-unpacked-variable (RUF059)
  * useless-class-metaclass-type (UP050)
  * assert-raises-exception (B017) now checks for direct calls to unittest.TestCase.assert_raises
      and pytest.raises instead of only the context manager forms.
  * missing-trailing-comma (COM812) and prohibited-trailing-comma (COM819) now check
      for trailing commas in PEP 695 type parameter lists.
  * raw-string-in-exception (EM101) now also checks for byte strings in exception messages.
  * invalid-mock-access (PGH005) now checks for AsyncMock methods like
      not_awaited in addition to the synchronous variants.
  * useless-import-alias (PLC0414) no longer applies to __init__.py files, where
      it conflicted with one of the suggested fixes for unused-import (F401).
  * bidirectional-unicode (PLE2502) now also checks for U+061C (Arabic Letter Mark).
  * The fix for multiple-with-statements (SIM117) is now marked as always safe.
 * Preview features
  * [pyupgrade] Enable UP043 in stub files
 * Bug fixes
  * [pyupgrade] Apply UP008 only when the __class__ cell exists
  * [ruff] Fix empty f-string detection in in-empty-collection (RUF060)
 * Server
  * Add support for using uv as an alternative formatter backend
 * Documentation
  * [pep8-naming] Fix formatting of __all__ (N816)

-------------------------------------------------------------------
Fri Sep  5 09:19:10 UTC 2025 - Dirk Müller <dmueller@suse.com>

- update to 0.12.12:
  * Show fixes by default
  * [`airflow`] Convert `DatasetOrTimeSchedule(datasets=...)`
    to `AssetOrTimeSchedule(assets=...)` (`AIR311`)
  * [`airflow`] Improve the `AIR002` error message
  * [`airflow`] Move
    `airflow.operators.postgres_operator.Mapping` from `AIR302`
    to `AIR301`
  * [`flake8-async`] Implement `blocking-input` rule
    (`ASYNC250`)
  * [`flake8-use-pathlib`] Make `PTH119` and `PTH120` fixes
    unsafe because they can change behavior
  * [`pylint`] Add U+061C to `PLE2502`
  * [`ruff`] Fix false negative for empty f-strings in `deque`
    calls (`RUF037`)
  * Less confidently mark f-strings as empty when inferring
    truthiness
  * [`fastapi`] Fix false positive for paths with spaces around
    parameters (`FAST003`)
  * [`flake8-comprehensions`] Skip `C417` when lambda contains
    `yield`/`yield from`
  * [`perflint`] Handle tuples in dictionary comprehensions
    (`PERF403`)

-------------------------------------------------------------------
Tue Sep  2 14:04:47 UTC 2025 - Nico Krapp <nico.krapp@suse.com>

- Update vendor tarball to fix CVE-2025-58160 (bsc#1249011)

-------------------------------------------------------------------
Thu Aug 28 21:53:00 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.12.11
 * Preview features
  * [airflow] Extend AIR311 and AIR312 rules
  * [airflow] Replace wrong path airflow.io.storage with airflow.io.store (AIR311)
  * [flake8-async] Implement blocking-http-call-httpx-in-async-function (ASYNC212)
  * [flake8-logging-format] Add auto-fix for f-string logging calls (G004)
  * [flake8-use-pathlib] Add autofix for PTH211
  * [flake8-use-pathlib] Make PTH100 fix unsafe because it can change behavior
 * Bug fixes
  * [pyflakes, pylint] Fix false positives caused by __class__ cell handling (F841, PLE0117)
  * [pyflakes] Fix allowed-unused-imports matching for top-level modules (F401)
  * [ruff] Fix false positive for t-strings in default-factory-kwarg (RUF026)
  * [ruff] Preserve relative whitespace in multi-line expressions (RUF033)
 * Rule changes
  * [ruff] Handle empty t-strings in unnecessary-empty-iterable-within-deque-call (RUF037)
 * Documentation
  * Fix incorrect D413 links in docstrings convention FAQ
  * [flake8-use-pathlib] Update links to the table showing the correspondence between os and pathlib

-------------------------------------------------------------------
Fri Aug 22 11:09:22 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.12.10
 * Preview features
  * [flake8-simplify] Implement fix for maxsplit without separator (SIM905)
  * [flake8-use-pathlib] Add fixes for PTH102 and PTH103
 * Bug fixes
  * [isort] Handle multiple continuation lines after module docstring (I002)
  * [pyupgrade] Avoid reporting __future__ features as unnecessary when they are used (UP010)
  * [pyupgrade] Handle nested Optionals (UP045)
 * Rule changes
  * [pycodestyle] Make E731 fix unsafe instead of display-only for class assignments
  * [pyflakes] Add secondary annotation showing previous definition (F811)
 * Documentation
  * Fix description of global config file discovery strategy
  * Update outdated links to https://typing.python.org/en/latest/source/stubs.html
  * [flake8-annotations] Remove unused import in example (ANN401)

-------------------------------------------------------------------
Fri Aug 15 12:56:45 UTC 2025 - Dirk Müller <dmueller@suse.com>

- update to 0.12.9:
  * \[`airflow`\] Add check for
    `airflow.secrets.cache.SecretCache` (`AIR301`)
  * \[`ruff`\] Offer a safe fix for multi-digit zeros (`RUF064`)
  * \[`flake8-blind-except`\] Fix `BLE001` false-positive on
    `raise ... from None`
  * \[`flake8-comprehensions`\] Fix false positive for `C420`
    with attribute, subscript, or slice assignment targets
  * \[`flake8-simplify`\] Fix handling of U+001C..U+001F
    whitespace (`SIM905`)
  * \[`pylint`\] Use lowercase hex characters to match the
    formatter (`PLE2513`)

-------------------------------------------------------------------
Sat Aug  9 10:13:13 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.12.8
 * Preview features
  * [flake8-use-pathlib] Expand PTH201 to check all PurePath subclasses
 * Bug fixes
  * [flake8-blind-except] Change BLE001 to correctly parse exception tuples
  * [flake8-errmsg] Exclude typing.cast from EM101
  * [flake8-simplify] Fix raw string handling in SIM905 for embedded quotes
  * [flake8-import-conventions] Avoid false positives for NFKC-normalized __debug__ import aliases in ICN001
  * [isort] Fix syntax error after docstring ending with backslash (I002)
  * [pylint] Mark PLC0207 fixes as unsafe when *args unpacking is present
  * [pyupgrade] Prevent infinite loop with I002 (UP010, UP035)
  * [ruff] Parenthesize generator expressions in f-strings (RUF010)
 * Rule changes
  * [eradicate] Don't flag pyrefly pragmas as unused code (ERA001)
 * Documentation
  * Replace "associative" with "commutative" in docs for RUF036
  * Fix copy and line separator colors in dark mode
  * Fix link to typing documentation
  * [refurb] Make more examples error out-of-the-box
 * Other changes
  * Include column numbers in GitLab output format
  * Always expand tabs to four spaces in diagnostics
  * Update pre-commit's ruff id

-------------------------------------------------------------------
Wed Jul 30 09:48:46 UTC 2025 - Dirk Müller <dmueller@suse.com>

- update to 0.12.7:
  * \[`flake8-commas`\] Add support for trailing comma checks in
    type parameter lists (`COM812`, `COM819`)
  * \[`pylint`\] Implement auto-fix for `missing-maxsplit-arg`
    (`PLC0207`)
  * \[`ruff`\] Offer fixes for `RUF039` in more cases
  * Support `.pyi` files in ruff analyze graph
  * \[`flake8-pyi`\] Preserve inline comment in ellipsis removal
    (`PYI013`)
  * \[`perflint`\] Ignore rule if target is `global` or
    `nonlocal` (`PERF401`)
  * \[`pyupgrade`\] Fix `UP030` to avoid modifying double curly
    braces in format strings
  * \[`refurb`\] Ignore decorated functions for `FURB118`
  * \[`refurb`\] Mark `int` and `bool` cases for
    `Decimal.from_float` as safe fixes (`FURB164`)
  * \[`ruff`\] Fix `RUF033` for named default expressions

-------------------------------------------------------------------
Fri Jul 25 15:50:14 UTC 2025 - Dirk Müller <dmueller@suse.com>

- update to 0.12.5:
  * \[`flake8-use-pathlib`\] Add autofix for `PTH101`, `PTH104`,
    `PTH105`, `PTH121`
  * \[`ruff`\] Support byte strings (`RUF055`)
  * Fix `unreachable` panic in parser
  * \[`flake8-pyi`\] Skip fix if all `Union` members are `None`
    (`PYI016`)
  * \[`perflint`\] Parenthesize generator expressions (`PERF401`)
  * \[`pylint`\] Handle empty comments after line continuation
    (`PLR2044`)

-------------------------------------------------------------------
Fri Jul 18 18:45:45 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.12.4
 * Preview features
   * [flake8-type-checking, pyupgrade, ruff] Add from __future__ import annotations when it would
      allow new fixes (TC001, TC002, TC003, UP037, RUF013)
   * [flake8-use-pathlib] Add autofix for PTH109
   * [pylint] Detect indirect pathlib.Path usages for unspecified-encoding (PLW1514)
 * Bug fixes
   * [flake8-bugbear] Fix B017 false negatives for keyword exception arguments
   * [flake8-use-pathlib] Fix false negative on direct Path() instantiation (PTH210)
   * [flake8-django] Fix DJ008 false positive for abstract models with type-annotated abstract field
   * [isort] Fix I002 import insertion after docstring with multiple string statements
   * [isort] Treat form feed as valid whitespace before a semicolon
   * [pydoclint] Fix SyntaxError from fixes with line continuations (D201, D202)
   * [refurb] FURB164 fix should validate arguments and should usually be marked unsafe
 * Rule changes
   * [flake8-use-pathlib] Skip single dots for invalid-pathlib-with-suffix (PTH210) on versions >= 3.14
   * [pep8_naming] Avoid false positives on standard library functions with uppercase names (N802)
   * [pycodestyle] Handle brace escapes for t-strings in logical lines
   * [pylint] Extend invalid string character rules to include t-strings
   * [ruff] Allow strict kwarg when checking for starmap-zip (RUF058) in Python 3.14+
 * Documentation
   * [flake8-type-checking] Make TC010 docs example more realistic
   * Make more documentation examples error out-of-the-box

-------------------------------------------------------------------
Sun Jul 13 11:33:49 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.12.3:
 * Preview features
   * [flake8-bugbear] Support non-context-manager calls in B017
   * [flake8-use-pathlib] Add autofixes for PTH100, PTH106, PTH107, PTH108, PTH110, PTH111, PTH112, PTH113, PTH114, PTH115, PTH117, PTH119, PTH120
   * [flake8-use-pathlib] Add autofixes for PTH203, PTH204, PTH205
 * Bug fixes
   * [flake8-return] Fix false-positive for variables used inside nested functions in RET504
   * Treat form feed as valid whitespace before a line continuation
   * [flake8-type-checking] Fix syntax error introduced by fix (TC008)
   * [pyupgrade] Keyword arguments in super should suppress the UP008 fix
 * Documentation
   * [flake8-pyi] Make example error out-of-the-box (PYI007, PYI008)
   * [flake8-simplify] Make example error out-of-the-box (SIM116)
   * [flake8-type-checking] Make example error out-of-the-box (TC001)
   * [flake8-use-pathlib] Make example error out-of-the-box (PTH210)
   * [pycodestyle] Make example error out-of-the-box (E272)
   * [pycodestyle] Make example not raise unnecessary SyntaxError (E114)
   * [pydoclint] Make example error out-of-the-box (DOC501)
   * [pylint, pyupgrade] Fix syntax errors in examples (PLW1501, UP028)
   * [pylint] Update missing-maxsplit-arg docs and error to suggest proper usage (PLC0207)
   * [flake8-bandit] Make example error out-of-the-box (S412)

-------------------------------------------------------------------
Fri Jul  4 11:36:37 UTC 2025 - Dirk Müller <dmueller@suse.com>

- update to 0.12.2:
  * [`flake8-pyi`] Expand `Optional[A]` to `A | None`
    (`PYI016`)
  * [`pyupgrade`] Mark `UP008` fix safe if no comments are in
    range
  * [`flake8-comprehensions`] Fix `C420` to prepend whitespace
    when needed
  * [`perflint`] Fix `PERF403` panic on attribute or
    subscription loop variable
  * [`pydocstyle`] Fix `D413` infinite loop for parenthesized
    docstring
  * [`pylint`] Fix `PLW0108` autofix introducing a syntax error
    when the lambda's body contains an assignment expression
  * [`refurb`] Fix false positive on empty tuples (`FURB168`)
  * [`ruff`] Allow more `field` calls from `attrs` (`RUF009`)
  * [`ruff`] Fix syntax error introduced for an empty string
    followed by a u-prefixed string (`UP025`)

-------------------------------------------------------------------
Sat Jun 28 16:22:10 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.12.1
 * Preview features
   * [flake8-errmsg] Extend EM101 to support byte strings
   * [flake8-use-pathlib] Add autofix for PTH202
   * [pygrep-hooks] Add AsyncMock methods to invalid-mock-access (PGH005)
   * [pylint] Ignore __init__.py files in (PLC0414)
   * [ruff] Trigger RUF037 for empty string and byte strings
   * [formatter] Fix missing blank lines before decorated classes in .pyi files
 * Bug fixes
   * Avoid generating diagnostics with per-file ignores
   * Handle parenthesized arguments in remove_argument
   * [flake8-logging] Avoid false positive for exc_info=True outside logger.exception (LOG014)
   * [flake8-pytest-style] Enforce pytest import for decorators
   * [flake8-pytest-style] Mark autofix for PT001 and PT023 as unsafe if there's comments in the decorator
   * [flake8-pytest-style] PT001/PT023 fix makes syntax error on parenthesized decorator
   * [flake8-raise] Make fix unsafe if it deletes comments (RSE102)
   * [flake8-simplify] Fix SIM911 autofix creating a syntax error
   * [flake8-simplify] Fix false negatives for shadowed bindings (SIM910, SIM911)
   * [flake8-simplify] Preserve original behavior for except () and bare except (SIM105)
   * [flake8-pyi] Fix PYI041's fix causing TypeError with None | None | ...
   * [perflint] Fix PERF101 autofix creating a syntax error and mark autofix as unsafe if there are comments in the list call expr
   * [perflint] Fix false negative in PERF401
   * [pylint] Avoid flattening nested min/max when outer call has single argument (PLW3301)
   * [pylint] Fix PLC2801 autofix creating a syntax error
   * [pylint] Mark PLE0241 autofix as unsafe if there's comments in the base classes
   * [pylint] Suppress PLE2510/PLE2512/PLE2513/PLE2514/PLE2515 autofix if the text contains an odd number of backslashes
   * [refurb] Detect more exotic float literals in FURB164
   * [refurb] Fix FURB163 autofix creating a syntax error for yield expressions
   * [refurb] Mark FURB129 autofix as unsafe if there's comments in the readlines call
   * [ruff] Fix false positives and negatives in RUF010
   * Fix casing of analyze.direction variant names
 * Rule changes
   * Fix f-string interpolation escaping in generated fixes
   * [flake8-return] Mark RET501 fix unsafe if comments are inside
   * [flake8-async] Fix detection for large integer sleep durations in ASYNC116 rule
   * [flake8-async] Mark autofix for ASYNC115 as unsafe if the call expression contains comments
   * [flake8-bugbear] Mark autofix for B004 as unsafe if the hasattr call expr contains comments
   * [flake8-comprehension] Mark autofix for C420 as unsafe if there's comments inside the dict comprehension
   * [flake8-comprehensions] Handle template strings for comprehension fixes
   * [flake8-future-annotations] Add autofix (FA100)
   * [pyflakes] Mark F504/F522/F523 autofix as unsafe if there's a call with side effect
   * [pylint] Allow fix with comments and document performance implications (PLW3301)
   * [pylint] Detect more exotic NaN literals in PLW0177
   * [pylint] Fix PLC1802 autofix creating a syntax error and mark autofix as unsafe if there's comments in the len call
   * [pyupgrade] Extend version detection to include sys.version_info.major (UP036)
   * [ruff] Add lint rule RUF064 for calling chmod with non-octal integers
   * [ruff] Added cls.__dict__.get('__annotations__') check (RUF063)
   * [ruff] Frozen dataclass default should be valid (RUF009)
 * Server
   * Consider virtual path for various server actions
 * Documentation
   * Add fix safety section
   * Use updated pre-commit id
   * [perflint] Small docs improvement to PERF401
   * [pyupgrade]: Use super(), not __super__ in error messages (UP008)
   * [flake8-pie] Small docs fix to PIE794
   * [flake8-pyi] Correct collections-named-tuple example to use PascalCase assignment
   * [flake8-pie] Add note on type checking benefits to unnecessary-dict-kwargs (PIE804)
   * [pycodestyle] Clarify PEP 8 relationship to whitespace-around-operator rules
 * Other changes
   * Disallow newlines in format specifiers of single quoted f- or t-strings
   * [flake8-logging] Add fix safety section to LOG002
   * [pyupgrade] Add fix safety section to UP010

-------------------------------------------------------------------
Tue Jun 17 22:36:39 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.12.0
 * Breaking changes
   * Detection of more syntax errors
   * New default Python version handling for syntax errors
   * Updated f-string formatting
   * rust-toolchain.toml is no longer included in source distributions
 * Removed Rules
   * suspicious-xmle-tree-usage (S320)
 * Deprecated Rules
   * pandas-df-variable-name
 * Stabilization
   * for-loop-writes (FURB122)
   * check-and-remove-from-set (FURB132)
   * verbose-decimal-constructor (FURB157)
   * fromisoformat-replace-z (FURB162)
   * int-on-sliced-str (FURB166)
   * exc-info-outside-except-handler (LOG014)
   * import-outside-top-level (PLC0415)
   * unnecessary-dict-index-lookup (PLR1733)
   * nan-comparison (PLW0177)
   * eq-without-hash (PLW1641)
   * pytest-parameter-with-default-argument (PT028)
   * pytest-warns-too-broad (PT030)
   * pytest-warns-with-multiple-statements (PT031)
   * invalid-formatter-suppression-comment (RUF028)
   * dataclass-enum (RUF049)
   * class-with-mixed-type-vars (RUF053)
   * unnecessary-round (RUF057)
   * starmap-zip (RUF058)
   * non-pep604-annotation-optional (UP045)
   * non-pep695-generic-class (UP046)
   * non-pep695-generic-function (UP047)
   * private-type-parameter (UP049)
   * collection-literal-concatenation (RUF005) now recognizes slices, in addition to list literals and variables.
   * The fix for readlines-in-for (FURB129) is now marked as always safe.
   * if-else-block-instead-of-if-exp (SIM108) will now further simplify expressions to use or instead of an if expression, where possible.
   * unused-noqa (RUF100) now checks for file-level noqa comments as well as inline comments.
   * subprocess-without-shell-equals-true (S603) now accepts literal strings, as well as lists and tuples of literal strings, as trusted input.
   * boolean-type-hint-positional-argument (FBT001) now applies to types that include bool, like bool | int or typing.Optional[bool], in addition to plain bool annotations.
   * non-pep604-annotation-union (UP007) has now been split into two rules. UP007 now applies only to typing.Union, while non-pep604-annotation-optional (UP045) checks for use of typing.Optional. UP045 has also been stabilized in this release, but you may need to update existing include, ignore, or noqa settings to accommodate this change.
 * Preview features
   * [ruff] Check for non-context-manager use of pytest.raises, pytest.warns, and pytest.deprecated_call (RUF061)
   * [syntax-errors] Raise unsupported syntax error for template strings prior to Python 3.14
 * Bug fixes
   * Add syntax error when conversion flag does not immediately follow exclamation mark
   * Add trailing space around readlines
   * Fix \r and \r\n handling in t- and f-string debug texts
   * Hug closing } when f-string expression has a format specifier
   * [flake8-pyi] Avoid syntax error in the case of starred and keyword arguments (PYI059)
   * [flake8-return] Fix RET504 autofix generating a syntax error
   * [pep8-naming] Suppress fix for N804 and N805 if the recommended name is already used
   * [pycodestyle] Avoid causing a syntax error in expressions spanning multiple lines (E731)
   * [pyupgrade] Suppress UP008 if super is shadowed
   * [refurb] Parenthesize lambda and ternary expressions (FURB122, FURB142)
   * [ruff] Handle extra arguments to deque (RUF037)
   * [ruff] Preserve parentheses around deque in fix for unnecessary-empty-iterable-within-deque-call (RUF037)
   * [ruff] Validate arguments before offering a fix (RUF056)
   * [ruff] Skip fix for RUF059 if dummy name is already bound
   * [pylint] Fix PLW0128 to check assignment targets in square brackets and after asterisks
 * Rule changes
   * Fix false positive on mutations in return statements (B909)
   * Treat ty: comments as pragma comments
   * [flake8-pyi] Apply custom-typevar-for-self to string annotations (PYI019)
   * [pyupgrade] Don't offer a fix for Optional[None] (UP007, UP045)
   * [pyupgrade] Fix super(__class__, self) detection (UP008)
   * [refurb] Make the fix for FURB163 unsafe for log2, log10, *args, and deleted comments
 * Server
   * Support cancellation requests
 * Documentation
   * Drop confusing second * from glob pattern example for per-file-target-version
   * Update Neovim configuration examples
   * [pylint] De-emphasize __hash__ = Parent.__hash__ (PLW1641)
   * [refurb] Add a note about float literal handling (FURB157)

-------------------------------------------------------------------
Tue Jun 10 11:18:15 UTC 2025 - Dirk Müller <dmueller@suse.com>

- update to 0.11.13:
  * \[`airflow`\] Add unsafe fix for module moved cases
    (`AIR301`,`AIR311`,`AIR312`,`AIR302`)
  * \[`refurb`\] Add coverage of `set` and `frozenset` calls
    (`FURB171`)
  * \[`refurb`\] Mark `FURB180` fix unsafe when class has bases
  * \[`fastapi`\] Avoid false positive for class dependencies
    (`FAST003`)
  * Support Python 3.14 template strings (t-strings) in formatter
    and parser

-------------------------------------------------------------------
Fri May 30 15:05:44 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.11.12:
 * Preview features
   * [airflow] Revise fix titles (AIR3)
   * [pylint] Implement missing-maxsplit-arg (PLC0207)
   * [pyupgrade] New rule UP050 (useless-class-metaclass-type)
   * [flake8-use-pathlib] Replace os.symlink with Path.symlink_to (PTH211)
 * Bug fixes
   * [flake8-bugbear] Ignore __debug__ attribute in B010
   * [flake8-async] Fix anyio.sleep argument name (ASYNC115, ASYNC116)
   * [refurb] Fix FURB129 autofix generating invalid syntax
 * Rule changes
   * [flake8-implicit-str-concat] Add autofix for ISC003
   * [pycodestyle] Improve the diagnostic message for E712
   * [flake8-2020] Fix diagnostic message for != comparisons (YTT201)
   * [pyupgrade] Make fix unsafe if it deletes comments (UP010)
 * Documentation
   * Simplify rules table to improve readability
   * Update editor integrations link in README
   * [flake8-bugbear] Add fix safety section (B006)

-------------------------------------------------------------------
Fri May 23 15:14:16 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.11.11:
 * Preview features
   * [airflow] Add autofixes for AIR302 and AIR312
   * [airflow] Move rules from AIR312 to AIR302
   * [airflow] Update AIR301 and AIR311 with the latest Airflow implementations
   * [flake8-simplify] Enable fix in preview mode (SIM117)
 * Bug fixes
   * Fix inconsistent formatting of match-case on [] and _
   * [pylint] Fix PLW1514 not recognizing the encoding positional argument of codecs.open
 * CLI
   * Add full option name in formatter warning
 * Documentation
   * Fix rendering of admonition in docs
   * [flake8-print] Improve print/pprint docs for T201 and T203
   * [flake8-simplify] Add fix safety section (SIM110,SIM210)
   * [pylint] Fix docs example that produced different output (PLW0603)


-------------------------------------------------------------------
Mon May 19 14:18:18 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update 0.11.10:
 * Preview features
   * [ruff] Implement a recursive check for RUF060
   * [airflow] Enable autofixes for AIR301 and AIR311
   * [airflow] Apply try catch guard to all AIR3 rules
   * [airflow] Extend AIR311 rules
 * Bug fixes
   * [flake8-bugbear] Ignore B028 if skip_file_prefixes is present
   * [flake8-pie] Mark autofix for PIE804 as unsafe if the dictionary contains comments
   * [flake8-simplify] Correct behavior for str.split/rsplit with maxsplit=0 (SIM905)
   * [flake8-simplify] Fix SIM905 autofix for rsplit creating a reversed list literal
   * [flake8-use-pathlib] Suppress diagnostics for all os.* functions that have the dir_fd parameter (PTH)
   * [refurb] Mark autofix as safe only for number literals (FURB116)
 * Rule changes
   * [flake8-bandit] Skip S608 for expressionless f-strings
   * [flake8-pytest-style] Don't recommend usefixtures for parametrize values (PT019)
   * [pyupgrade] Add resource.error as deprecated alias of OSError (UP024)
 * CLI
   * Disable jemalloc on Android
 * Documentation
   * Update Neovim setup docs
   * [flake8-simplify] Add fix safety section (SIM103)
   * [flake8-simplify] Add fix safety section (SIM112)
   * [pylint] Add fix safety section (PLC0414)
   * [pylint] Add fix safety section (PLE4703)
   * [pylint] Add fix safety section (PLW1514)
   * [pylint] Add fix safety section (PLW3301)
   * [ruff] Add fix safety section (RUF007)
   * [ruff] Add fix safety section (RUF033)

-------------------------------------------------------------------
Tue May 13 06:39:19 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.11.9:
 * Preview features
   * Default to latest supported Python version for version-related syntax errors
   * Implement deferred annotations for Python 3.14
   * [airflow] Fix SQLTableCheckOperator typo (AIR302)
   * [airflow] Remove airflow.utils.dag_parsing_context.get_parsing_context (AIR301)
   * [airflow] Skip attribute check in try catch block (AIR301)
   * [flake8-bandit] Mark tuples of string literals as trusted input in S603
   * [isort] Check full module path against project root(s) when categorizing first-party imports
   * [ruff] Add new rule in-empty-collection (RUF060)
 * Bug fixes
   * Fix missing combine call for lint.typing-extensions setting
   * [flake8-async] Fix module name in ASYNC110, ASYNC115, and ASYNC116 fixes
   * [pyupgrade] Add spaces between tokens as necessary to avoid syntax errors in UP018 autofix
   * [refurb] Fix false positive for float and complex numbers in FURB116
   * [parser] Flag single unparenthesized generator expr with trailing comma in arguments.
 * Documentation
   * Add instructions on how to upgrade to a newer Rust version
   * Update code of conduct email address
   * Add fix safety sections to PLC2801, PLR1722, and RUF013
   * Add link to check-typed-exception from S110 and S112
 * Other changes
   * Allow passing a virtual environment to ruff analyze graph

-------------------------------------------------------------------
Fri May  2 15:28:43 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.11.8
 * Preview features
  * \[`airflow`\] Apply auto fixes to cases where the names have changed in Airflow 3 (`AIR302`, `AIR311`)
  * \[`airflow`\] Extend `AIR301` rule
  * \[`airflow`\] Update existing `AIR302` rules with better suggestions
  * \[`refurb`\] Mark fix as safe for `readlines-in-for` (`FURB129`)
  * [syntax-errors] `nonlocal` declaration at module level
  * [syntax-errors] Detect single starred expression assignment `x = *y`
 * Bug fixes
  * \[`flake8-pyi`\] Ensure `Literal[None,] | Literal[None,]` is not autofixed to `None | None` (`PYI061`)
  * \[`flake8-use-pathlib`\] Avoid suggesting `Path.iterdir()` for `os.listdir` with file descriptor (`PTH208`)
  * \[`flake8-use-pathlib`\] Fix `PTH104` false positive when `rename` is passed a file descriptor
  * \[`flake8-use-pathlib`\] Fix `PTH116` false positive when `stat` is passed a file descriptor
  * \[`flake8-use-pathlib`\] Fix `PTH123` false positive when `open` is passed a file descriptor from a function call
  * \[`pycodestyle`\] Fix duplicated diagnostic in `E712`
  * \[`pylint`\] Detect `global` declarations in module scope (`PLE0118`)
  * [syntax-errors] Make `async-comprehension-in-sync-comprehension` more specific
 * Configuration
  * Add option to disable `typing_extensions` imports
 * Documentation
  * Fix example syntax for the `lint.pydocstyle.ignore-var-parameters` option
  * Add fix safety sections (`ASYNC116`, `FLY002`, `D200`, `RUF005`, `RUF017`, `RUF027`, `RUF028`, `RUF057`)
 * Other changes
  * Add Python 3.14 to configuration options
  * Make syntax error for unparenthesized except tuples version specific to before 3.14

-------------------------------------------------------------------
Sun Apr 27 14:51:47 UTC 2025 - Dirk Müller <dmueller@suse.com>

- update to 0.11.7:
  * \[`airflow`\] Apply auto fixes to cases where the names have
    changed in Airflow 3 (`AIR301`)
  * \[`perflint`\] Implement fix for `manual-dict-comprehension`
    (`PERF403`)
  * [syntax-errors] Make duplicate parameter names a semantic
    error
  * \[`flake8-type-checking`\] Visit keyword arguments in checks
    involving `typing.cast`/`typing.NewType` arguments
  * \[`pyupgrade`\] Preserve parenthesis when fixing native
    literals containing newlines (`UP018`)
  * \[`refurb`\] Mark the `FURB161` fix unsafe except for
    integers and booleans

-------------------------------------------------------------------
Mon Apr 21 12:16:47 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.11.6
 * Preview features
   * Avoid adding whitespace to the end of a docstring after an escaped quote
   * [airflow] Extract AIR311 from AIR301 rules (AIR301, AIR311)
 * Bug fixes
   * Raise syntax error when \ is at end of file

-------------------------------------------------------------------
Fri Apr 11 13:52:09 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.11.5
 * Preview features
   * [airflow] Add missing AIR302 attribute check
   * [airflow] Expand module path check to individual symbols (AIR302)
   * [airflow] Extract AIR312 from AIR302 rules (AIR302, AIR312)
   * [airflow] Update oudated AIR301, AIR302 rules
   * [syntax-errors] Async comprehension in sync comprehension
   * [syntax-errors] Check annotations in annotated assignments
   * [syntax-errors] Extend annotation checks to await
 * Bug fixes
   * [flake8-pie] Avoid false positive for multiple assignment with auto() (PIE796)
 * Rule changes
   * [ruff] Fix RUF100 to detect unused file-level noqa directives with specific codes
   * [flake8-pytest-style] Avoid false positive for legacy form of pytest.raises (PT011)
 * Documentation
   * Fix formatting of "See Style Guide" link

-------------------------------------------------------------------
Sun Apr  6 18:44:08 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.11.4
 * Preview features
   * [ruff] Implement invalid-rule-code as RUF102
   * [syntax-errors] Detect duplicate keys in match mapping patterns
   * [syntax-errors] Detect duplicate attributes in match class patterns
   * [syntax-errors] Detect invalid syntax in annotations
   * [airflow] Add more autofixes for AIR302
   * [airflow] Move AIR301 to AIR002
   * [airflow] Move AIR302 to AIR301 and AIR303 to AIR302
   * [flake8-bandit] Mark str and list[str] literals as trusted input (S603)
   * [ruff] Support slices in RUF005
   * [syntax-errors] Start detecting compile-time syntax errors
   * [syntax-errors] Duplicate type parameter names
   * [syntax-errors] Irrefutable case pattern before final case
   * [syntax-errors] Multiple assignments in case pattern
   * [syntax-errors] Single starred assignment target
   * [syntax-errors] Starred expressions in return, yield, and for
   * [syntax-errors] Store to or delete __debug__
 * Bug fixes
   * [syntax-errors] Fix multiple assignment error for class fields in match patterns
   * Don't skip visiting non-tuple slice in typing.Annotated subscripts
   * Error instead of panic! when running Ruff from a deleted directory
   * [syntax-errors] Fix false positive for parenthesized tuple index
 * CLI
   * Check pyproject.toml correctly when it is passed via stdin
 * Configuration
   * [flake8-import-conventions] Add import numpy.typing as npt to default flake8-import-conventions.aliases
   * Documentation
   * [refurb] Document why UserDict, UserList, and UserString are preferred over dict, list, and str (FURB189)

-------------------------------------------------------------------
Sat Mar 22 13:29:35 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.11.2
 * Preview features
   * [syntax-errors] Fix false-positive syntax errors emitted for annotations on variadic parameters before Python 3.11
   * [airflow] Add chain, chain_linear and cross_downstream for AIR302
   * [syntax-errors] Improve error message and range for pre-PEP-614 decorator syntax errors
   * [syntax-errors] PEP 701 f-strings before Python 3.12
   * [syntax-errors] Parenthesized context managers before Python 3.9
   * [syntax-errors] Star annotations before Python 3.11
   * [syntax-errors] Star expression in index before Python 3.11
   * [syntax-errors] Unparenthesized assignment expressions in sets and indexes
 * Bug fixes
   * Server: Allow FixAll action in presence of version-specific syntax errors
   * [flake8-bandit] Allow raw strings in suspicious-mark-safe-usage (S308)
   * [refurb] Avoid panicking unwrap in verbose-decimal-constructor (FURB157)
   * [refurb] Fix starred expressions fix (FURB161)
   * Fix --statistics reporting for unsafe fixes
 * Rule changes
   * [flake8-executables] Allow uv run in shebang line for shebang-missing-python (EXE003)
 * CLI
   * Add --exit-non-zero-on-format
 * Documentation
   * Update Ruff tutorial to avoid non-existent fix in __init__.py
   * [flake8-gettext] Swap format- and printf-in-get-text-func-call examples (INT002, INT003)

-------------------------------------------------------------------
Sat Mar 15 22:51:35 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.11.0
- This is a follow-up to release 0.10.0. Because of a mistake in the release process,
   the requires-python inference changes were not included in that release.
   Ruff 0.11.0 now includes this change as well as the stabilization of the preview behavior for PGH004.

-------------------------------------------------------------------
Fri Mar 14 10:43:10 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.10.0
- check out https://astral.sh/blog/ruff-v0.10.0 for migration info
- pretty long changelog please see
 * https://github.com/astral-sh/ruff/blob/main/CHANGELOG.md
 * https://github.com/astral-sh/ruff/blob/main/BREAKING_CHANGES.md

-------------------------------------------------------------------
Mon Mar 10 10:18:59 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.9.10
 * Preview features
   * [ruff] Add new rule RUF059: Unused unpacked assignment
   * [syntax-errors] Detect assignment expressions before Python 3.8
   * [syntax-errors] Named expressions in decorators before Python 3.9
   * [syntax-errors] Parenthesized keyword argument names after Python 3.8
   * [syntax-errors] Positional-only parameters before Python 3.8
   * [syntax-errors] Tuple unpacking in return and yield before Python 3.8
   * [syntax-errors] Type parameter defaults before Python 3.13
   * [syntax-errors] Type parameter lists before Python 3.12
   * [syntax-errors] except* before Python 3.11
   * [syntax-errors] type statements before Python 3.12
 * Bug fixes
   * Escape template filenames in glob patterns in configuration
   * [flake8-simplify] Exempt unittest context methods for SIM115 rule
   * Formatter: Fix syntax error location in notebooks
   * [pyupgrade] Do not offer fix when at least one target is global/nonlocal (UP028)
   * [flake8-builtins] Ignore variables matching module attribute names (A001)
   * [pylint] Convert code keyword argument to a positional argument in fix for (PLR1722)
 * CLI
   * Move rule code from description to check_name in GitLab output serializer
 * Documentation
   * [pydocstyle] Clarify that D417 only checks docstrings with an arguments section

-------------------------------------------------------------------
Tue Mar  4 13:44:16 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.9.9
 * Preview features
   * Fix caching of unsupported-syntax errors
   * Start detecting version-related syntax errors in the parser
 * Rule changes
   * [pylint] Mark fix unsafe (PLW1507)
   * [pylint] Catch case np.nan/case math.nan in match statements (PLW0177)
   * [ruff] Add more Pydantic models variants to the list of default copy semantics (RUF012)
 * Server
   * Avoid indexing the project if configurationPreference is editorOnly
   * Avoid unnecessary info at non-trace server log level
   * Expand ruff.configuration to allow inline config
   * Notify users for invalid client settings
 * Configuration
   * Add per-file-target-version option
 * Bug fixes
   * Only show unsupported-syntax errors in editors when preview mode is enabled
   * [refurb] Do not consider docstring(s) (FURB156)
   * [flake8-self] Ignore attribute accesses on instance-like variables (SLF001)
   * [pylint] Fix false positives, add missing methods, and support positional-only parameters (PLE0302)
   * [flake8-pyi] Mark PYI030 fix unsafe when comments are deleted
 * Documentation
   * Fix example for S611
   * Normalize inconsistent markdown headings in docstrings
   * Document MSRV policy

-------------------------------------------------------------------
Wed Feb 26 12:35:32 UTC 2025 - John Paul Adrian Glaubitz <adrian.glaubitz@suse.com>

- Update to 0.9.7
  * Consider __new__ methods as special function type for enforcing
    class method or static method rules
  * [airflow] Improve the internal logic to differentiate deprecated
    symbols (AIR303)
  * [refurb] Manual timezone monkeypatching (FURB162)
  * [ruff] Implicit class variable in dataclass (RUF045)
  * [ruff] Skip singleton starred expressions for incorrectly-\
    parenthesized-tuple-in-subscript (RUF031)
  * [refurb] Check for subclasses includes subscript expressions (FURB189)
  * [flake8-debugger] Also flag sys.breakpointhook and
    sys.__breakpointhook__ (T100)
  * [pycodestyle] Exempt site.addsitedir(...) calls (E402)
  * Fix unstable formatting of trailing end-of-line comments of
    parenthesized attribute values
  * Fix handling of requests received after shutdown message
  * Ignore source.organizeImports.ruff and source.fixAll.ruff code
    actions for a notebook cell
  * Include document specific debug info for ruff.printDebugInformation
  * Update server to return the debug info as string with
    ruff.printDebugInformation
  * Warn on invalid noqa even when there are no diagnostics
  * Better error messages while loading configuration extends
  * [flake8-comprehensions] Handle trailing comma in C403 fix
  * [flake8-pyi] Avoid flagging custom-typevar-for-self on metaclass
    methods (PYI019)
  * [pydocstyle] Handle arguments with the same names as sections (D417)
  * [pylint] Correct ordering of arguments in fix for if-stmt-min-max (PLR1730)
  * [pylint] Do not offer fix for raw strings (PLE251)
  * [pyupgrade] Do not upgrade functional TypedDicts with private field
    names to the class-based syntax (UP013)
  * [pyupgrade] Handle micro version numbers correctly (UP036)
  * [pyupgrade] Unwrap unary expressions correctly (UP018)
  * [refurb] Correctly handle lengths of literal strings in
    slice-to-remove-prefix-or-suffix (FURB188)
  * [ruff] Skip RUF001 diagnostics when visiting string type definitions
  * Add FAQ entry for source.* code actions in Notebook
  * Add SECURITY.md

-------------------------------------------------------------------
Mon Feb 10 16:29:23 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.9.6
 * Preview features
   * [airflow] Add external_task.{ExternalTaskMarker, ExternalTaskSensor} for AIR302
   * [flake8-builtins] Make strict module name comparison optional (A005)
   * [flake8-pyi] Extend fix to Python <= 3.9 for redundant-none-literal (PYI061)
   * [pylint] Also report when the object isn't a literal (PLE1310)
   * [ruff] Implement indented-form-feed (RUF054)
   * [ruff] Skip type definitions for missing-f-string-syntax (RUF027)
 * Rule changes
   * [flake8-annotations] Correct syntax for typing.Union in suggested return type fixes for ANN20x rules
   * [flake8-builtins] Match upstream module name comparison (A005)
   * [flake8-comprehensions] Detect overshadowed list/set/dict, ignore variadics and named expressions (C417)
   * [flake8-pie] Remove following comma correctly when the unpacked dictionary is empty (PIE800)
   * [flake8-simplify] Only trigger SIM401 on known dictionaries
   * [pylint] Do not report calls when object type and argument type mismatch, remove custom escape handling logic (PLE1310)
   * [pyupgrade] Comments within parenthesized value ranges should not affect applicability (UP040)
   * [pyupgrade] Don't introduce invalid syntax when upgrading old-style type aliases with parenthesized multiline values (UP040)
   * [pyupgrade] Ensure we do not rename two type parameters to the same name (UP049)
   * [pyupgrade] [ruff] Don't apply renamings if the new name is shadowed in a scope of one of the references to the binding (UP049, RUF052)
   * [ruff] Update RUF009 to behave similar to B008 and ignore attributes with immutable types
 * Server
   * Root exclusions in the server to project root
 * Bug fixes
   * [flake8-datetime] Ignore .replace() calls while looking for .astimezone
   * [flake8-type-checking] Avoid TC004 false positive where the runtime definition is provided by __getattr__
 * Documentation
   * Improve ruff-lsp migration document
   * Undeprecate ruff.nativeServer

-------------------------------------------------------------------
Sun Feb  9 00:50:00 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.9.5
 * Preview features
   * Recognize all symbols named TYPE_CHECKING for in_type_checking_block
   * [flake8-comprehensions] Handle builtins at top of file correctly for unnecessary-dict-comprehension-for-iterable (C420)
   * [flake8-logging] .exception() and exc_info= outside exception handlers (LOG004, LOG014)
   * [flake8-pyi] Fix incorrect behaviour of custom-typevar-return-type preview-mode autofix if typing was already imported (PYI019)
   * [flake8-pyi] Fix more complex cases (PYI019)
   * [flake8-pyi] Make PYI019 autofixable for .py files in preview mode as well as stubs
   * [flake8-pyi] Remove type parameter correctly when it is the last (PYI019)
   * [pylint] Fix missing parens in unsafe fix for unnecessary-dunder-call (PLC2801)
   * [pyupgrade] Better messages and diagnostic range (UP015)
   * [pyupgrade] Rename private type parameters in PEP 695 generics (UP049)
   * [refurb] Also report non-name expressions (FURB169)
   * [refurb] Mark fix as unsafe if there are comments (FURB171)
   * [ruff] Classes with mixed type variable style (RUF053)
   * [airflow] BashOperator has been moved to airflow.providers.standard.operators.bash.BashOperator (AIR302)
   * [flake8-pyi] Add autofix for unused-private-type-var (PYI018)
   * [flake8-pyi] Significantly improve accuracy of PYI019 if preview mode is enabled
 * Rule changes
   * Preserve triple quotes and prefixes for strings
   * [flake8-comprehensions] Skip when TypeError present from too many (kw)args for C410,C411, and C418
   * [flake8-pyi] Rename PYI019 and improve its diagnostic message
   * [pep8-naming] Ignore @override methods (N803)
   * [pyupgrade] Reuse replacement logic from UP046 and UP047 to preserve more comments (UP040)
   * [ruff] Analyze deferred annotations before enforcing mutable-(data)class-default and function-call-in-dataclass-default-argument (RUF008,RUF009,RUF012)
   * [pycodestyle] Exempt sys.path += ... calls (E402)
 * Configuration
   * Config error only when flake8-import-conventions alias conflicts with isort.required-imports bound name
   * Workaround Even Better TOML crash related to allOf
 * Bug fixes
   * [flake8-comprehensions] Unnecessary list comprehension (rewrite as a set comprehension) (C403) - Handle extraneous parentheses around list comprehension
   * [flake8-comprehensions] Handle trailing comma in fixes for unnecessary-generator-list/set (C400,C401)
   * [flake8-pyi] Fix several correctness issues with custom-type-var-return-type (PYI019)
   * [pep8-naming] Consider any number of leading underscore for N801
   * [pyflakes] Visit forward annotations in TypeAliasType as types (F401)
   * [pylint] Correct min/max auto-fix and suggestion for (PL1730)
   * [refurb] Handle unparenthesized tuples correctly (FURB122, FURB142)
   * [refurb] Avoid None | None as well as better detection and fix (FURB168)
 * Documentation
   * Add deprecation warning for ruff-lsp related settings
   * Docs (linter.md): clarify that Python files are always searched for in subdirectories
   * Fix a typo in non_pep695_generic_class.rs
   * Improve Docs: Pylint subcategories' codes
   * Remove non-existing lint.extendIgnore editor setting
   * Update black deviations
   * Mention UP049 in UP046 and UP047, add See also section to UP040
   * Add instance variable examples to RUF012
   * Explain precedence for ignore and select config

-------------------------------------------------------------------
Wed Feb  5 09:29:04 UTC 2025 - John Paul Adrian Glaubitz <adrian.glaubitz@suse.com>

- Update to 0.9.4
  * Preview features
    - [airflow] Extend airflow context parameter check for BaseOperator.execute (AIR302) (#15713)
    - [airflow] Update AIR302 to check for deprecated context keys (#15144)
    - [flake8-bandit] Permit suspicious imports within stub files (S4) (#15822)
    - [pylint] Do not trigger PLR6201 on empty collections (#15732)
    - [refurb] Do not emit diagnostic when loop variables are used outside loop body (FURB122) (#15757)
    - [ruff] Add support for more re patterns (RUF055) (#15764)
    - [ruff] Check for shadowed map before suggesting fix (RUF058) (#15790)
    - [ruff] Do not emit diagnostic when all arguments to zip() are variadic (RUF058) (#15744)
    - [ruff] Parenthesize fix when argument spans multiple lines for unnecessary-round (RUF057) (#15703)
  * Rule changes
    - Preserve quote style in generated code (#15726, #15778, #15794)
    - [flake8-bugbear] Exempt NewType calls where the original type is immutable (B008) (#15765)
    - [pylint] Honor banned top-level imports by TID253 in PLC0415. (#15628)
    - [pyupgrade] Ignore is_typeddict and TypedDict for deprecated-import (UP035) (#15800)
  * CLI
    - Fix formatter warning message for flake8-quotes option (#15788)
    - Implement tab autocomplete for ruff config (#15603)
  * Bug fixes
    - [flake8-comprehensions] Do not emit unnecessary-map diagnostic when lambda has different arity (C417) (#15802)
    - [flake8-comprehensions] Parenthesize sorted when needed for unnecessary-call-around-sorted (C413) (#15825)
    - [pyupgrade] Handle end-of-line comments for quoted-annotation (UP037) (#15824)
  * Documentation
    - Add missing config docstrings (#15803)
    - Add references to trio.run_process and anyio.run_process (#15761)
    - Use uv init --lib in tutorial (#15718)

-------------------------------------------------------------------
Fri Jan 24 10:43:17 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- Upade to 0.9.3
 * Preview features
   * [airflow] Argument fail_stop in DAG has been renamed as fail_fast (AIR302)
   * [airflow] Extend AIR303 with more symbols
   * [flake8-bandit] Report all references to suspicious functions (S3)
   * [flake8-pytest-style] Do not emit diagnostics for empty for loops (PT012, PT031)
   * [flake8-simplify] Avoid double negations (SIM103)
   * [pyflakes] Fix infinite loop with unused local import in __init__.py (F401)
   * [pylint] Do not report methods with only one EM101-compatible raise (PLR6301)
   * [pylint] Implement redefined-slots-in-subclass (W0244)
   * [pyupgrade] Add rules to use PEP 695 generics in classes and functions (UP046, UP047)
   * [refurb] Implement for-loop-writes (FURB122)
   * [ruff] Implement needless-else clause (RUF047)
   * [ruff] Implement starmap-zip (RUF058)
 * Rule changes
   * [flake8-bugbear] Do not raise error if keyword argument is present and target-python version is less or equals than 3.9 (B903)
   * [flake8-comprehensions] strip parentheses around generators in unnecessary-generator-set (C401)
   * [flake8-pytest-style] Rewrite references to .exception (PT027)
   * [flake8-simplify] Mark fixes as unsafe (SIM201, SIM202)
   * [flake8-type-checking] Fix some safe fixes being labeled unsafe (TC006,TC008)
   * [isort] Omit trailing whitespace in unsorted-imports (I001)
   * [pydoclint] Allow ignoring one line docstrings for DOC rules
   * [pyflakes] Apply redefinition fixes by source code order (F811)
   * [pyflakes] Avoid removing too many imports in redefined-while-unused (F811)
   * [pyflakes] Group redefinition fixes by source statement (F811)
   * [pylint] Include name of base class in message for redefined-slots-in-subclass (W0244)
   * [ruff] Update fix for RUF055 to use var == value
 * Formatter
   * Fix bracket spacing for single-element tuples in f-string expressions
   * Fix unstable f-string formatting for expressions containing a trailing comma
 * Performance
   * Avoid quadratic membership check in import fixes
 * Server
   * Allow unsafe-fixes settings for code actions
 * Bug fixes
   * [flake8-bandit] Add missing single-line/dotall regex flag (S608)
   * [flake8-import-conventions] Fix infinite loop between ICN001 and I002 (ICN001)
   * [flake8-simplify] Do not emit diagnostics for expressions inside string type annotations (SIM222, SIM223)
   * [pyflakes] Treat arguments passed to the default= parameter of TypeVar as type expressions (F821)
   * [pyupgrade] Avoid syntax error when the iterable is a non-parenthesized tuple (UP028)
   * [ruff] Exempt NewType calls where the original type is immutable (RUF009)
   * Preserve raw string prefix and escapes in all codegen fixes
 * Documentation
   * Generate documentation redirects for lowercase rule codes
   * TRY300: Add some extra notes on not catching exceptions you didn't expect

-------------------------------------------------------------------
Fri Jan 17 19:28:35 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- Update to 0.9.2
 * Preview features
   * [airflow] Fix typo "security_managr" to "security_manager" (AIR303)
   * [airflow] extend and fix AIR302 rules
   * [fastapi] Handle parameters with Depends correctly (FAST003)
   * [flake8-pytest-style] Implement pytest.warns diagnostics (PT029, PT030, PT031)
   * [flake8-pytest-style] Test function parameters with default arguments (PT028)
   * [flake8-type-checking] Avoid false positives for | in TC008
 * Rule changes
   * [flake8-todos] Allow VSCode GitHub PR extension style links in missing-todo-link (TD003)
   * [pyflakes] Show syntax error message for F722
 * Formatter
   * Fix curly bracket spacing around f-string expressions containing curly braces
   * Fix joining of f-strings with different quotes when using quote style Preserve
 * Server
   * Avoid indexing the same workspace multiple times
   * Display context for ruff.configuration errors
 * Configuration
   * Remove flatten to improve deserialization error messages
 * Bug fixes
   * Parse triple-quoted string annotations as if parenthesized
   * [fastapi] Update Annotated fixes (FAST002)
   * [flake8-bandit] Check for builtins instead of builtin (S102, PTH123)
   * [flake8-pathlib] Fix --select for os-path-dirname (PTH120)
   * [ruff] Fix false positive on global keyword (RUF052)

-------------------------------------------------------------------
Sun Jan 12 22:05:39 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.9.1
 * Preview features
   * [pycodestyle] Run too-many-newlines-at-end-of-file on each cell in notebooks (W391)
   * [ruff] Omit diagnostic for shadowed private function parameters in used-dummy-variable (RUF052)
 * Rule changes
   * [flake8-bugbear] Improve assert-raises-exception message (B017)
 * Formatter
   * Preserve trailing end-of line comments for the last string literal in implicitly concatenated strings
 * Server
   * Fix a bug where the server and client notebooks were out of sync after reordering cells
 * Bug fixes
   * [flake8-pie] Correctly remove wrapping parentheses (PIE800)
   * [pyupgrade] Handle comments and multiline expressions correctly (UP037)

-------------------------------------------------------------------
Fri Jan 10 10:47:59 UTC 2025 - Dirk Müller <dmueller@suse.com>

- update to 0.9.0:
  * This release introduces the new 2025 stable style (#13371),
    stabilizing the following changes:
  * Format expressions in f-string elements
  * Alternate quotes for strings inside f-strings
  * Preserve the casing of hex codes in f-string debug
    expressions
  * Choose the quote style for each string literal in an
    implicitly concatenated f-string rather than for the entire
    string
  * Automatically join an implicitly concatenated string into a
    single string literal if it fits on a single line
  * Remove the `ISC001` incompatibility warning
  * Prefer parenthesizing the `assert` message over breaking the
    assertion expression
  * Automatically parenthesize over-long `if` guards in `match`
    `case` clauses
  * More consistent formatting for `match` `case` patterns
  * Avoid unnecessary parentheses around return type annotations
  * Keep the opening parentheses on the same line as the `if`
    keyword for comprehensions where the condition has a leading
    comment
  * More consistent formatting for `with` statements with a
    single context manager for Python 3.8 or older
  * Correctly calculate the line-width for code blocks in
    docstrings when using `max-doc-code-line-length = "dynamic"`

-------------------------------------------------------------------
Mon Jan  6 09:54:30 UTC 2025 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.8.6
 * Preview features
   * [format]: Preserve multiline implicit concatenated strings in docstring positions
   * [ruff] Add rule to detect empty literal in deque call (RUF025)
   * [ruff] Avoid reporting when ndigits is possibly negative (RUF057)
 * Rule changes
   * [flake8-todos] remove issue code length restriction (TD003)
   * [pyflakes] Ignore errors in @no_type_check string annotations (F722, F821)
 * CLI
   * Show errors for attempted fixes only when passed --verbose
 * Bug fixes
   * [ruff] Avoid syntax error when removing int over multiple lines (RUF046)
   * [pyupgrade] Revert "Add all PEP-585 names to UP006 rule"
 0.8.5
 * Preview features
   * [airflow] Extend names moved from core to provider (AIR303)
   * [airflow] Extend rule to check class attributes, methods, arguments (AIR302)
   * [fastapi] Update FAST002 to check keyword-only arguments
   * [flake8-type-checking] Disable TC006 and TC007 in stub files
   * [pylint] Detect nested methods correctly (PLW1641)
   * [ruff] Detect more strict-integer expressions (RUF046)
   * [ruff] Implement falsy-dict-get-fallback (RUF056)
   * [ruff] Implement unnecessary-round (RUF057)
 * Rule changes
   * Visit PEP 764 inline TypedDict keys as non-type-expressions
   * [flake8-comprehensions] Skip C416 if comprehension contains unpacking
   * [flake8-pie] Allow cast(SomeType, ...) (PIE796)
   * [flake8-simplify] More precise inference for dictionaries (SIM300)
   * [flake8-use-pathlib] Catch redundant joins in PTH201 and avoid syntax errors
   * [pycodestyle] Preserve original value format (E731)
   * [pydocstyle] Split on first whitespace character (D403)
   * [pyupgrade] Add all PEP-585 names to UP006 rule
 * Configuration
   * [flake8-type-checking] Improve flexibility of runtime-evaluated-decorators
   * [pydocstyle] Add setting to ignore missing documentation for *args and **kwargs parameters (D417)
   * [ruff] Add an allowlist for unsafe-markup-use (RUF035)
 * Bug fixes
   * Fix type subscript on older python versions
   * Use TypeChecker for detecting fastapi routes
   * [pycodestyle] Avoid false positives and negatives related to type parameter default syntax (E225, E251)
 * Documentation
   * Fix incorrect doc in shebang-not-executable (EXE001) and add git+windows solution to executable bit
   * Rename rules currently not conforming to naming convention
 0.8.4
 * Preview features
   * [airflow] Extend AIR302 with additional functions and classes
   * [airflow] Implement moved-to-provider-in-3 for modules that has been moved to Airflow providers (AIR303)
   * [flake8-use-pathlib] Extend check for invalid path suffix to include the case "." (PTH210)
   * [perflint] Fix panic in PERF401 when list variable is after the for loop
   * [perflint] Simplify finding the loop target in PERF401
   * [pylint] Preserve original value format (PLR6104)
   * [ruff] Avoid false positives for RUF027 for typing context bindings
   * [ruff] Check for ambiguous pattern passed to pytest.raises() (RUF043)
 * Rule changes
   * [flake8-bandit] Check S105 for annotated assignment
   * [flake8-pyi] More autofixes for redundant-none-literal (PYI061)
   * [pydocstyle] Skip leading whitespace for D403
   * [ruff] Skip SQLModel base classes for mutable-class-default (RUF012)
 * Bug
   * [perflint] Parenthesize walrus expressions in autofix for manual-list-comprehension (PERF401)
 * Server
   * Check diagnostic refresh support from client capability which enables dynamic configuration for various editors


-------------------------------------------------------------------
Mon Dec 16 10:04:03 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.8.3
 * Preview features
   * Fix fstring formatting removing overlong implicit concatenated string in expression part
   * [airflow] Add fix to remove deprecated keyword arguments (AIR302)
   * [airflow]: Extend rule to include deprecated names for Airflow 3.0 (AIR302)
   * [flake8-bugbear] Improve error messages for except* (B025, B029, B030, B904)
   * [flake8-bugbear] itertools.batched() without explicit strict (B911)
   * [flake8-use-pathlib] Dotless suffix passed to Path.with_suffix() (PTH210)
   * [pylint] Include parentheses and multiple comparators in check for boolean-chained-comparison (PLR1716)
   * [ruff] Do not simplify round() calls (RUF046)
   * [ruff] Don't emit used-dummy-variable on function parameters (RUF052)
   * [ruff] Implement if-key-in-dict-del (RUF051)
   * [ruff] Mark autofix for RUF052 as always unsafe
   * [ruff] Teach autofix for used-dummy-variable about TypeVars etc. (RUF052)
 * Rule changes
   * [flake8-bugbear] Offer unsafe autofix for no-explicit-stacklevel (B028)
   * [flake8-pyi] Skip all type definitions in string-or-bytes-too-long (PYI053)
   * [pyupgrade] Do not report when a UTF-8 comment is followed by a non-UTF-8 one (UP009)
   * [pyupgrade] Mark fixes for convert-typed-dict-functional-to-class and convert-named-tuple-functional-to-class
       as unsafe if they will remove comments (UP013, UP014)
 * Bug fixes
   * Raise syntax error for mixing except and except*
   * [flake8-bugbear] Fix B028 to allow stacklevel to be explicitly assigned as a positional argument
   * [flake8-bugbear] Skip B028 if warnings.warn is called with *args or **kwargs
   * [flake8-comprehensions] Skip iterables with named expressions in unnecessary-map (C417)
   * [flake8-pyi] Also remove self and cls's annotation (PYI034)
   * [flake8-pytest-style] Fix pytest-parametrize-names-wrong-type (PT006) to edit both argnames and argvalues if both of them are single-element tuples/lists
   * [perflint] Improve autofix for PERF401
   * [pylint] Fix PLW1508 false positive for default string created via a mult operation

-------------------------------------------------------------------
Fri Dec  6 11:34:33 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.8.2
 * Preview features
   * [airflow] Avoid deprecated values (AIR302)
   * [airflow] Extend removed names for AIR302
   * [ruff] Extend unnecessary-regular-expression to non-literal strings (RUF055)
   * [ruff] Implement used-dummy-variable (RUF052)
   * [ruff] Implement unnecessary-cast-to-int (RUF046)
 * Rule changes
   * [airflow] Check AIR001 from builtin or providers operators module
   * [flake8-pytest-style] Remove @ in pytest.mark.parametrize rule messages
   * [pandas-vet] Skip rules if the panda module hasn't been seen
   * [pylint] Fix false negatives for ascii and sorted in len-as-condition (PLC1802)
   * [refurb] Guard hashlib imports and mark hashlib-digest-hex fix as safe (FURB181)
 * Configuration
   * [flake8-import-conventions] Improve syntax check for aliases supplied in configuration for unconventional-import-alias (ICN001)
 * Bug fixes
   * Revert: [pyflakes] Avoid false positives in @no_type_check contexts (F821, F722)
   * [pep8-naming] Avoid false positive for class Bar(type(foo)) (N804)
   * [pycodestyle] Handle f-strings properly for invalid-escape-sequence (W605)
   * [pylint] Ignore @overload in PLR0904
   * [refurb] Handle non-finite decimals in verbose-decimal-constructor (FURB157)
   * [ruff] Avoid emitting assignment-in-assert when all references to the assigned variable are themselves inside asserts (RUF018)
 * Documentation
   * Improve docs for flake8-use-pathlib rules
   * Improve error messages and docs for flake8-comprehensions rules
   * [flake8-type-checking] Expands TC006 docs to better explain itself

-------------------------------------------------------------------
Mon Dec  2 11:13:33 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.8.1
 * Preview features
   * Formatter: Avoid invalid syntax for format-spec with quotes for all Python versions
   * Formatter: Consider quotes inside format-specs when choosing the quotes for an f-string
   * Formatter: Do not consider f-strings with escaped newlines as multiline
   * Formatter: Fix f-string formatting in assignment statement
   * Formatter: Fix unnecessary space around power operator (**) in overlong f-string expressions
   * [airflow] Avoid implicit schedule argument to DAG and @dag (AIR301)
   * [flake8-builtins] Exempt private built-in modules (A005)
   * [flake8-pytest-style] Fix pytest.mark.parametrize rules to check calls instead of decorators
   * [flake8-type-checking] Implement runtime-cast-value (TC006)
   * [flake8-type-checking] Implement unquoted-type-alias (TC007) and quoted-type-alias (TC008)
   * [flake8-use-pathlib] Recommend Path.iterdir() over os.listdir() (PTH208)
   * [pylint] Extend invalid-envvar-default to detect os.environ.get (PLW1508)
   * [pylint] Implement len-test (PLC1802)
   * [refurb] Fix bug where methods defined using lambdas were flagged by FURB118
   * [ruff] Auto-add r prefix when string has no backslashes for unraw-re-pattern (RUF039)
   * [ruff] Implement invalid-assert-message-literal-argument (RUF040)
   * [ruff] Implement unnecessary-nested-literal (RUF041)
   * [ruff] Implement unnecessary-regular-expression (RUF055)
 * Rule changes
   * Ignore more rules for stub files
   * [pep8-naming] Eliminate false positives for single-letter names (N811, N814)
   * [pyflakes] Avoid false positives in @no_type_check contexts (F821, F722)
   * [ruff] Detect redirected-noqa in file-level comments (RUF101)
   * [ruff] Mark fixes for unsorted-dunder-all and unsorted-dunder-slots as unsafe when there are complex comments in the sequence (RUF022, RUF023)
 * Bug fixes
   * Avoid fixing code to None | None for redundant-none-literal (PYI061) and never-union (RUF020) (#14583, #14589)
   * [flake8-bugbear] Fix mutable-contextvar-default to resolve annotated function calls properly (B039)
   * [flake8-pyi, ruff] Fix traversal of nested literals and unions (PYI016, PYI051, PYI055, PYI062, RUF041)
   * [flake8-pyi] Avoid rewriting invalid type expressions in unnecessary-type-union (PYI055)
   * [flake8-type-checking] Avoid syntax errors and type checking problem for quoted annotations autofix (TC003, TC006)
   * [pylint] Do not wrap function calls in parentheses in the fix for unnecessary-dunder-call (PLC2801)
   * [ruff] Handle attrs's auto_attribs correctly (RUF009)
* Breaking changes
   * See also, the "Remapped rules" section which may result in disabled rules.
   * Default to Python 3.9
   * Ruff now defaults to Python 3.9 instead of 3.8 if no explicit Python version is configured using ruff.target-version or project.requires-python
   * Changed location of pydoclint diagnostics
   * pydoclint diagnostics now point to the first-line of the problematic docstring. Previously, this was not the case.
   * If you've opted into these preview rules but have them suppressed using noqa comments in some places, this change may mean that you need to move the noqa suppression comments. Most users should be unaffected by this change.
   * Use XDG (i.e. ~/.local/bin) instead of the Cargo home directory in the standalone installer
   * Previously, Ruff's installer used $CARGO_HOME or ~/.cargo/bin for its target install directory. Now, Ruff will be installed into $XDG_BIN_HOME, $XDG_DATA_HOME/../bin, or ~/.local/bin (in that order).
   * This change is only relevant to users of the standalone Ruff installer (using the shell or PowerShell script). If you installed Ruff using uv or pip, you should be unaffected.
   * Changes to the line width calculation
   * Ruff now uses a new version of the unicode-width Rust crate to calculate the line width. In very rare cases, this may lead to lines containing Unicode characters being reformatted, or being considered too long when they were not before (E501).
 * Removed Rules
  * The following deprecated rules have been removed:
   * missing-type-self (ANN101)
   * missing-type-cls (ANN102)
   * syntax-error (E999)
   * pytest-missing-fixture-name-underscore (PT004)
   * pytest-incorrect-fixture-name-underscore (PT005)
   * unpacked-list-comprehension (UP027)
  * Remapped rules
   * flake8-type-checking: TCH to TC
  * Stabilization
   * builtin-import-shadowing (A004)
   * mutable-contextvar-default (B039)
   * fast-api-redundant-response-model (FAST001)
   * fast-api-non-annotated-dependency (FAST002)
   * dict-index-missing-items (PLC0206)
   * pep484-style-positional-only-parameter (PYI063)
   * redundant-final-literal (PYI064)
   * bad-version-info-order (PYI066)
   * parenthesize-chained-operators (RUF021)
   * unsorted-dunder-all (RUF022)
   * unsorted-dunder-slots (RUF023)
   * assert-with-print-message (RUF030)
   * unnecessary-default-type-args (UP043)
  * The following behaviors have been stabilized:
   * ambiguous-variable-name (E741): Violations in stub files are now ignored. Stub authors typically don't control variable names.
   * printf-string-formatting (UP031): Report all printf-like usages even if no autofix is available
   * zip-instead-of-pairwise (RUF007)
 * Preview features
   * [flake8-datetimez] Exempt min.time() and max.time() (DTZ901)
   * [flake8-pie] Mark fix as unsafe if the following statement is a string literal (PIE790)
   * [flake8-pyi] New rule redundant-none-literal (PYI061)
   * [flake8-pyi] Add autofix for redundant-numeric-union (PYI041)
   * [ruff] New rule map-int-version-parsing (RUF048)
   * [ruff] New rule redundant-bool-literal (RUF038)
   * [ruff] New rule unraw-re-pattern (RUF039)
   * [pycodestyle] Exempt pytest.importorskip() calls (E402)
   * [pylint] Autofix suggests using sets when possible (PLR1714)
 * Rule changes
   * invalid-pyproject-toml (RUF200): Updated to reflect the provisionally accepted PEP 639.
   * [flake8-pyi] Avoid panic in unfixable case (PYI041)
   * [flake8-type-checking] Correctly handle quotes in subscript expression when generating an autofix
   * [pylint] Suggest correct autofix for __contains__ (PLC2801)
 * Configuration
   * Ruff now emits a warning instead of an error when a configuration ignores a rule that has been removed
   * Ruff now validates that lint.flake8-import-conventions.aliases only uses valid module names and aliases

-------------------------------------------------------------------
Sun Nov 17 01:34:46 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.7.4
 * Preview features
   * [flake8-datetimez] Detect usages of datetime.max/datetime.min (DTZ901)
   * [flake8-logging] Implement root-logger-calls (LOG015)
   * [flake8-no-pep420] Detect empty implicit namespace packages (INP001)
   * [flake8-pyi] Add "replace with Self" fix (PYI019)
   * [perflint] Implement quick-fix for manual-list-comprehension (PERF401)
   * [pylint] Implement shallow-copy-environ (W1507)
   * [ruff] Implement none-not-at-end-of-union (RUF036)
   * [ruff] Implementation unsafe-markup-call from flake8-markupsafe plugin (RUF035)
   * [ruff] Report problems for attrs dataclasses (RUF008, RUF009)
 * Rule changes
   * [flake8-boolean-trap] Exclude dunder methods that define operators (FBT001)
   * [flake8-pyi] Add "replace with Self" fix (PYI034)
   * [flake8-pyi] Always autofix duplicate-union-members (PYI016)
   * [flake8-pyi] Improve autofix for nested and mixed type unions for unnecessary-type-union (PYI055)
   * [flake8-pyi] Mark fix as unsafe when type annotation contains comments for duplicate-literal-member (PYI062)
 * Server
   * Use the current working directory to resolve settings from ruff.configuration
 * Bug fixes
   * Avoid conflicts between PLC014 (useless-import-alias) and I002 (missing-required-import) by considering lint.isort.required-imports for PLC014
   * [flake8-type-checking] Skip quoting annotation if it becomes invalid syntax (TCH001)
   * [flake8-pyi] Avoid using typing.Self in stub files pre-Python 3.11 (PYI034)
   * [flake8-pytest-style] Flag pytest.raises call with keyword argument expected_exception (PT011)
   * [flake8-simplify] Infer "unknown" truthiness for literal iterables whose items are all unpacks (SIM222)
   * [flake8-type-checking] Fix false positives for typing.Annotated (TCH001)
   * [pylint] Allow await at the top-level scope of a notebook (PLE1142)
   * [pylint] Fix miscellaneous issues in await-outside-async detection (PLE1142)
   * [pyupgrade Avoid applying PEP 646 rewrites in invalid contexts ()UP044)
   * [pyupgrade] Detect permutations in redundant open modes (UP015)
   * [refurb] Avoid triggering hardcoded-string-charset for reordered sets (FURB156)
   * [refurb] Further special cases added to verbose-decimal-constructor (FURB157)
   * [refurb] Use UserString instead of non-existent UserStr (FURB189)
   * [ruff] Avoid treating lowercase letters as # noqa codes (RUF100)
   * [ruff] Do not report when Optional has no type arguments (RUF013)
 * Documentation
   * Add "Notebook behavior" section for F704, PLE1142
   * Document comment policy around fix safety

-------------------------------------------------------------------
Mon Nov 11 13:34:06 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.7.3
 * Preview features
   * Formatter: Disallow single-line implicit concatenated strings
   * [flake8-pyi] Include all Python file types for PYI006 and PYI066
   * [flake8-simplify] Implement split-of-static-string (SIM905)
   * [refurb] Implement subclass-builtin (FURB189)
   * [ruff] Improve diagnostic messages and docs (RUF031, RUF032, RUF034)
 * Rule changes
   * Detect items that hash to same value in duplicate sets (B033, PLC0208)
   * [eradicate] Better detection of IntelliJ language injection comments (ERA001)
   * [flake8-pyi] Add autofix for docstring-in-stub (PYI021)
   * [flake8-pyi] Update duplicate-literal-member (PYI062) to alawys provide an autofix
   * [pyflakes] Detect items that hash to same value in duplicate dictionaries (F601)
   * [ruff] Fix false positive for decorators (RUF028)
 * Bug fixes
   * Avoid parsing joint rule codes as distinct codes in # noqa
   * [eradicate] ignore # language= in commented-out-code rule (ERA001)
   * [flake8-bugbear] - do not run mutable-argument-default on stubs (B006)
   * [flake8-builtins] Skip lambda expressions in builtin-argument-shadowing (A002)
   * [flake8-comprehension] Also remove trailing comma while fixing C409 and C419
   * [flake8-simplify] Allow open without context manager in return statement (SIM115)
   * [pylint] Respect hash-equivalent literals in iteration-over-set (PLC0208)
   * [pylint] Update known dunder methods for Python 3.13 (PLW3201)
   * [pyupgrade] - ignore kwarg unpacking for UP044
   * [refurb] Parse more exotic decimal strings in verbose-decimal-constructor (FURB157)
 * Documentation
   * Add links to missing related options within rule documentations
   * Add rule short code to mkdocs tags to allow searching via rule codes

-------------------------------------------------------------------
Fri Nov  1 20:52:26 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.7.2
 * Preview features
   * Fix formatting of single with-item with trailing comment
   * [pyupgrade] Add PEP 646 Unpack conversion to * with fix (UP044)
 * Rule changes
   * Regenerate known_stdlibs.rs with stdlibs 2024.10.25
   * [flake8-no-pep420] Skip namespace package enforcement for PEP 723 scripts (INP001)
 * Server
   * Fix server panic when undoing an edit
 * Bug fixes
   * Fix issues in discovering ruff in pip build environments
   * [flake8-type-checking] Fix false positive for singledispatchmethod (TCH003)
   * [flake8-type-checking] Treat return type of singledispatch as runtime-required (TCH003)
 * Documentation
   * [flake8-simplify] Include caveats of enabling if-else-block-instead-of-if-exp (SIM108)

-------------------------------------------------------------------
Fri Oct 25 19:55:52 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.7.1
 * Preview features
   * Fix E221 and E222 to flag missing or extra whitespace around == operator
   * Formatter: Alternate quotes for strings inside f-strings in preview
   * Formatter: Join implicit concatenated strings when they fit on a line
   * [pylint] Restrict iteration-over-set to only work on sets of literals (PLC0208)
 * Rule changes
   * [flake8-type-checking] Support auto-quoting when annotations contain quotes
 * Server
   * Avoid indexing the workspace for single-file mode
 * Bug fixes
   * Make ARG002 compatible with EM101 when raising NotImplementedError

-------------------------------------------------------------------
Mon Oct 21 19:19:25 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- add Provides: ruff-%{version}

-------------------------------------------------------------------
Fri Oct 18 12:17:53 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.7.0
 * Breaking changes
   * The pytest rules PT001 and PT023 now default to omitting the decorator parentheses when there are no arguments. This was a change that we attempted to make in Ruff v0.6.0, but only partially made due to an error on our part. See the blog post for more details.
   * The useless-try-except rule (in our tryceratops category) has been recoded from TRY302 to TRY203 . This ensures Ruff's code is consistent with the same rule in the tryceratops linter.
   * The lint.allow-unused-imports setting has been removed . Use lint.pyflakes.allow-unused-imports instead.
 * Formatter preview style
   * Normalize implicit concatenated f-string quotes per part
 * Preview linter features
   * [refurb] implement hardcoded-string-charset (FURB156)
   * [refurb] Count codepoints not bytes for slice-to-remove-prefix-or-suffix (FURB188)
 * Rule changes
   * [pylint] Mark PLE1141 fix as unsafe
   * [flake8-async] Consider async generators to be "checkpoints" for cancel-scope-no-checkpoint (ASYNC100)
   * [flake8-bugbear] Do not suggest setting parameter strict= to False in B905 diagnostic message
   * [flake8-todos] Only flag the word "TODO", not words starting with "todo" (TD006)
   * [pycodestyle] Fix whitespace-related false positives and false negatives inside type-parameter lists (E231, E251)
   * [flake8-simplify] Stabilize preview behavior for SIM115 so that the rule can detect files being opened from a wider range of standard-library functions .
 * CLI
   * Add explanation of fixable in --statistics command
 * Bug fixes
   * [pyflakes] Allow ipytest cell magic (F401)
   * [flake8-use-pathlib] Fix PTH123 false positive when open is passed a file descriptor
   * [flake8-bandit] Detect patterns from multi line SQL statements (S608)
   * [flake8-pyi] - Fix dropped expressions in PYI030 autofix

-------------------------------------------------------------------
Mon Oct  7 16:55:47 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.6.9
 * Preview features
   * Fix codeblock dynamic line length calculation for indented docstring examples
   * [refurb] Mark FURB118 fix as unsafe
 * Rule changes
   * [pydocstyle] Don't raise D208 when last line is non-empty
   * [pylint] Preserve trivia (i.e. comments) in PLR5501 autofix
 * Configuration
   * [pyflakes] Add allow-unused-imports setting for unused-import rule (F401)
 * Bug fixes
   * Support ruff discovery in pip build environments
   * [flake8-bugbear] Avoid short circuiting B017 for multiple context managers
   * [pylint] Do not offer an invalid fix for PLR1716 when the comparisons contain parenthesis
   * [pyupgrade] Fix UP043 to apply to collections.abc.Generator and collections.abc.AsyncGenerator
   * [refurb] Fix handling of slices in tuples for FURB118, e.g., x[:, 1]

-------------------------------------------------------------------
Thu Sep 26 13:38:35 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.6.8:
 * Preview features
   * Remove unnecessary parentheses around match case clauses
   * Parenthesize overlong if guards in match..case clauses
   * Detect basic wildcard imports in ruff analyze graph
   * [pylint] Implement boolean-chained-comparison (R1716)
 * Rule changes
   * [lake8-simplify] Detect SIM910 when using variadic keyword arguments, i.e., **kwargs
   * [pyupgrade] Avoid false negatives with non-reference shadowed bindings of loop variables (UP028)
 * Bug fixes
   * Detect tuples bound to variadic positional arguments i.e. *args
   * Exit gracefully on broken pipe errors
   * Avoid panic when analyze graph hits broken pipe
 * Performance
   * Reuse BTreeSets in module resolver
   * Skip traversal for non-compound statements

-------------------------------------------------------------------
Mon Sep 23 12:00:29 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 0.6.7:
  * Add Python version support to ruff analyze CLI
  * Add `exclude` support to `ruff analyze`
  * Fix parentheses around return type annotations
  * \[`pycodestyle`\] Fix: Don't autofix if the first line ends
    in a question mark? (D400)
  * Respect `lint.exclude` in ruff check `--add-noqa`
  * Avoid tracking module resolver files in Salsa
- update to 0.6.6:
  * \[`refurb`\] Skip `slice-to-remove-prefix-or-suffix`
    (`FURB188`) when non-trivial slice steps are present
  * Add a subcommand to generate dependency graphs
  * Fix placement of inline parameter comments
  * Fix off-by one error in the `LineIndex::offset` calculation
  * \[`fastapi`\] Respect FastAPI aliases in route definitions
  * \[`pydocstyle`\] Respect word boundaries when detecting
    function signature in docs

-------------------------------------------------------------------
Wed Sep 18 13:41:33 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.6.5:
 * Preview features
   * [pydoclint] Ignore DOC201 when function name is "new"
   * [refurb] Implement slice-to-remove-prefix-or-suffix (FURB188)
 * Rule changes
   * [eradicate] Ignore script-comments with multiple end-tags (ERA001)
   * [pyflakes] Improve error message for UndefinedName when a builtin
       was added in a newer version than specified in Ruff config (F821)
 * Server
   * Add support for extensionless Python files for server
   * Fix configuration inheritance for configurations specified in the LSP settings
 * Bug fixes
   * [ruff] Handle unary operators in decimal-from-float-literal (RUF032)
 * CLI
   * Only include rules with diagnostics in SARIF metadata
 * Playground
   * Add "Copy as pyproject.toml/ruff.toml" and "Paste from TOML"
   * Fix errors not shown for restored snippet on page load

-------------------------------------------------------------------
Mon Sep  9 08:14:16 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 0.6.4:
  * \[`flake8-builtins`\] Use dynamic builtins list based on
    Python version
  * \[`pydoclint`\] Permit yielding `None` in `DOC402` and
    `DOC403`
  * \[`pylint`\] Update diagnostic message for `PLW3201`
  * \[`ruff`\] Implement `post-init-default` (`RUF033`)
  * \[`ruff`\] Implement useless if-else (`RUF034`)
  * \[`flake8-pyi`\] Respect `pep8_naming.classmethod-decorators`
    settings when determining if a method is a classmethod in
    `custom-type-var-return-type` (`PYI019`)
  * \[`flake8-pyi`\] Teach various rules that annotations might
    be stringized
  * \[`pylint`\] Avoid `no-self-use` for `attrs`-style validators
  * \[`pylint`\] Recurse into subscript subexpressions when
    searching for list/dict lookups (`PLR1733`, `PLR1736`)
  * \[`pyupgrade`\] Detect `aiofiles.open` calls in `UP015`
  * \[`pyupgrade`\] Mark `sys.version_info[0] < 3` and similar
    comparisons as outdated (`UP036`)

-------------------------------------------------------------------
Mon Sep  2 09:01:34 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.6.3:
 * Preview features
   * [flake8-simplify] Extend open-file-with-context-handler to work with other standard-library IO modules (SIM115)
   * [ruff] Avoid unused-async for functions with FastAPI route decorator (RUF029)
   * [ruff] Ignore fstring-missing-syntax (RUF027) for fastAPI paths
   * [ruff] Implement check for Decimal called with a float literal (RUF032)
   * [flake8-simplify] Extend open-file-with-context-handler to work with dbm.sqlite3 (SIM115)
   * [pycodestyle] Disable E741 in stub files (.pyi)
   * [pydoclint] Avoid DOC201 on explicit returns in functions that only return None
 * Rule changes
   * [flake8-bugbear] Update diagnostic message when expression is at the end of function (B015)
   * [flake8-pyi] Skip type annotations in string-or-bytes-too-long (PYI053)
   * [flake8-type-checking] Always recognise relative imports as first-party
   * [flake8-unused-arguments] Ignore unused arguments on stub functions (ARG001)
   * [pylint] Ignore augmented assignment for self-cls-assignment (PLW0642)
   * [flake8-async] Disable check for asyncio before Python 3.11 (ASYNC109)
 * Bug fixes
   * [pep8-naming] Don't flag from imports following conventional import names (N817)
   * [pylint] - Allow __new__ methods to have cls as their first argument even if decorated with @staticmethod for bad-staticmethod-argument (PLW0211)
   * [FastAPI] Avoid introducing invalid syntax in fix for fast-api-non-annotated-dependency (FAST002)
   * [flake8-implicit-str-concat] Normalize octals before merging concatenated strings in single-line-implicit-string-concatenation (ISC001)
   * [flake8-pytest-style] Improve help message for pytest-incorrect-mark-parentheses-style (PT023)
   * [pylint] Avoid autofix for calls that aren't min or max as starred expression (PLW3301)
   * [ruff] Add datetime.time, datetime.tzinfo, and datetime.timezone as immutable function calls (RUF009)
   * [ruff] Extend comment deletion for RUF100 to include trailing text from noqa directives while preserving any following comments on the same line, if any
   * Fix dark theme on initial page load for the Ruff playground
 * Server
   * Show full context in error log messages
 * Documentation
   * Add hyperfine installation instructions; update hyperfine code samples
   * Expand note to use Ruff with other language server in Kate
   * Update example for PT001 as per the new default behavior
   * [perflint] Improve docs for try-except-in-loop (PERF203)
   * [pydocstyle] Add reference to lint.pydocstyle.ignore-decorators setting to rule docs

-------------------------------------------------------------------
Mon Aug 19 17:40:41 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.6.1:
 * Detect imports in src layouts by default for isort rules
 * The pytest rules PT001 and PT023 now default to omitting the decorator parentheses when there are no arguments .
 * Lint and format Jupyter Notebook by default .
 * big list of changes: https://github.com/astral-sh/ruff/blob/main/CHANGELOG.md

-------------------------------------------------------------------
Mon Aug  5 13:09:56 UTC 2024 - Soc Virnyl Estela <obs@uncomfyhalomacro.pl>

- update to 0.5.6:
  * Ruff 0.5.6 automatically enables linting and formatting of notebooks in preview mode.
  * Enable notebooks by default in preview mode
  * [flake8-builtins] Implement import, lambda, and module shadowing
  * [pydoclint] Add docstring-missing-returns (DOC201) and docstring-extraneous-returns (DOC202)
  * [flake8-return] Exempt cached properties and other property-like decorators from explicit return rule (RET501)
  * Make server panic hook more error resilient
  * Use $/logTrace for server trace logs in Zed and VS Code
  * Keep track of deleted cells for reorder change request
  * [flake8-implicit-str-concat] Always allow explicit multi-line concatenations when implicit concatenations are banned
  * [flake8-async] Avoid flagging asyncio.timeouts as unused when the context manager includes asyncio.TaskGroup
  * [flake8-slots] Avoid recommending __slots__ for classes that inherit from more than namedtuple
  * [isort] Avoid marking required imports as unused
  * [isort] Preserve trailing inline comments on import-from statements
  * [pycodestyle] Add newlines before comments (E305)
  * [pycodestyle] Don't attach comments with mismatched indents
  * [pyflakes] Fix preview-mode bugs in F401 when attempting to autofix unused first-party submodule imports in an __init__.py file
  * [pylint] Respect start index in unnecessary-list-index-lookup
  * [pyupgrade] Avoid recommending no-argument super in slots=True dataclasses
  * [pyupgrade] Use colon rather than dot formatting for integer-only types
  * Fix NFKC normalization bug when removing unused imports
  * Consider more stdlib decorators to be property-like
  * Improve handling of metaclasses in various linter rules
  * Improve consistency between linter rules in determining whether a function is property

-------------------------------------------------------------------
Mon Jul 29 18:08:59 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.5.5
 * server funcionality is now stable
 * big list of changes: https://github.com/astral-sh/ruff/blob/main/CHANGELOG.md

-------------------------------------------------------------------
Mon Jul  8 09:48:47 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 0.5.1:
  * Enable token-based rules on source with syntax errors
  * \[`flake8-bandit`\] Detect `httpx` for `S113`
  * \[`numpy`\] Update `NPY201` to include exception deprecations
  * \[`pylint`\] Generate autofix for `duplicate-bases`
    (`PLE0241`)
  * Avoid syntax error notification for source code actions
  * Consider the content of the new cells during notebook sync
  * Fix replacement edit range computation
  * Disable auto-fix when source has syntax errors
  * Fix cache key collisions for paths with separators
  * Make `requires-python` inference robust to `==`
  * Use char-wise width instead of `str`-width
  * \[`pycodestyle`\] Avoid `E275` if keyword followed by comma
  * \[`pycodestyle`\] Avoid `E275` if keyword is followed by a
    semicolon
  * \[`pylint`\] Skip dummy variables for `PLR1704`

-------------------------------------------------------------------
Mon Jul  1 08:21:42 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 0.5.0:
  * Selecting ALL now excludes deprecated rules
  * The released archives now include an extra level of nesting, which
    can be removed with --strip-components=1 when untarring.
  * The release artifact's file name no longer includes the version
    tag. This enables users to install via /latest URLs on GitHub.
  * The diagnostic ranges for some flake8-bandit rules were modified
  * for details see https://github.com/astral-sh/ruff/releases/tag/0.5.0

-------------------------------------------------------------------
Mon Jun 24 09:27:54 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.4.10
 * Parser
   * Implement re-lexing logic for better error recovery
 * Rule changes
   * [flake8-copyright] Update CPY001 to check the first 4096 bytes instead of 1024
   * [pycodestyle] Update E999 to show all syntax errors instead of just the first one
 * Server
  * Add tracing setup guide to Helix documentation
  * Add tracing setup guide to Neovim documentation
  * Defer notebook cell deletion to avoid an error message
 * Security
  * Guard against malicious ecosystem comment artifacts

-------------------------------------------------------------------
Mon Jun 17 09:33:37 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 0.4.9:
  * Preview features
    + [pylint] Implement consider-dict-items (C0206) (#11688)
    +  [refurb] Implement repeated-global (FURB154) (#11187)
  * Rule changes
    + [pycodestyle] Adapt fix for E203 to work identical to ruff
      format (#10999)
  * Formatter
    + Fix formatter instability for lines only consisting of
      zero-width characters (#11748)
  * Server
    + Add supported commands in server capabilities (#11850)
    + Use real file path when available in ruff server (#11800)
    + Improve error message when a command is run on an unavailable
      document (#11823)
    + Introduce the ruff.printDebugInformation command (#11831)
    + Tracing system now respects log level and trace level, with
      options to log to a file (#11747)
    + Handle non-printable characters in diff view (#11687)
  * Bug fixes
    + [refurb] Avoid suggesting starmap when arguments are used
      outside call (FURB140)
    + [flake8-bugbear] Avoid panic in B909 when checking large
      loop blocks (#11772)
    + [refurb] Fix misbehavior of operator.itemgetter when getter
      param is a tuple (FURB118) (#11774)

-------------------------------------------------------------------
Thu Jun  6 09:28:05 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update ruff:
* 0.4.8
 * Performance
    * Linter performance has been improved by around 10% on some microbenchmarks
    *  by refactoring the lexer and parser to maintain synchronicity between them
 * Preview features
    * [flake8-bugbear] Implement return-in-generator (B901)
    * [flake8-pyi] Implement PYI063
    * [pygrep_hooks] Check blanket ignores via file-level pragmas (PGH004)
 * Rule changes
    * [pyupgrade] Update UP035 for Python 3.13 and the latest version of typing_extensions
    * [numpy] Update NPY001 rule for NumPy 2.0
 * Server
    * Formatting a document with syntax problems no longer spams a visible error popup
 * CLI
    * Add RDJson support for --output-format flag
 * Bug fixes
    * [pyupgrade] Write empty string in lieu of panic when fixing UP032
    * [flake8-simplify] Simplify double negatives in SIM103
    * Ensure the expression generator adds a newline before type statements
    * Respect per-file ignores for blanket and redirected noqa rules
* 0.4.7
 * Preview features
    * [flake8-pyi] Implement PYI064
    * [flake8-pyi] Implement PYI066
    * [flake8-pyi] Implement PYI057
    * [pyflakes] Enable F822 in __init__.py files by default
 * Formatter
    * Fix incorrect placement of trailing stub function comments
 * Server
    * Respect file exclusions in ruff server
    * Add support for documents not exist on disk
    * Add Vim and Kate setup guide for ruff server
 * Bug fixes
    * Avoid removing newlines between docstring headers and rST blocks
    * Infer indentation with imports when logical indent is absent
    * Use char index rather than position for indent slice
    * [flake8-comprehension] Strip parentheses around generators in C400
    * Mark repeated-isinstance-calls as unsafe on Python 3.10 and later
* 0.4.6
 * Breaking changes
    * Use project-relative paths when calculating GitLab fingerprints
 * Preview features
    * [flake8-async] Sleep with >24 hour interval should usually sleep forever (ASYNC116)
 * Rule changes
    * [numpy] Add missing functions to NumPy 2.0 migration rule
    * [mccabe] Consider irrefutable pattern similar to if .. else for C901
    * Consider match-case statements for C901, PLR0912, and PLR0915
    * Remove empty strings when converting to f-string (UP032)
    * [flake8-bandit] request-without-timeout should warn for requests.request
    * [flake8-self] Ignore sunder accesses in flake8-self rules
    * [pyupgrade] Lint for TypeAliasType usages (UP040)
 * Server
    * Respect excludes in ruff server configuration discovery
    * Use default settings if initialization options is empty or not provided
    * ruff server correctly treats .pyi files as stub files
    * ruff server searches for configuration in parent directories
    * ruff server: An empty code action filter no longer returns notebook source actions
 * Bug fixes
    * [flake8-logging-format] Fix autofix title in logging-warn (G010)
    * [refurb] Avoid recommending operator.itemgetter with dependence on lambda arguments
    * [flake8-simplify] Avoid recommending context manager in __enter__ implementations
    * Create intermediary directories for --output-file
    * Propagate reads on global variables
    * Treat all singledispatch arguments as runtime-required
* 0.4.5
    * Ruff's language server is now in Beta
 * Rule changes
    * [flake8-future-annotations] Reword future-rewritable-type-annotation (FA100) message
    * [pycodestyle] Consider soft keywords for E27 rules
    * [pyflakes] Recommend adding unused import bindings to __all__
    * [pyflakes] Update documentation and deprecate ignore_init_module_imports
    * [pyupgrade] Mark quotes as unnecessary for non-evaluated annotations
 * Formatter
    * Avoid multiline quotes warning with quote-style = preserve
 * Server
    * Support Jupyter Notebook files
    * Support noqa comment code actions
    * Fix automatic configuration reloading
    * Fix several issues with configuration in Neovim and Helix
 * CLI
    * Add --output-format as a CLI option for ruff config
 * Bug fixes
    * Avoid PLE0237 for property with setter
    * Avoid TCH005 for if stmt with elif/else block
    * Avoid flagging __future__ annotations as required for non-evaluated type annotations
    * Check for ruff executable in 'bin' directory as installed by 'pip install --target'.
    * Sort edits prior to deduplicating in quotation fix
    * Treat escaped newline as valid sequence
    * [flake8-pie] Preserve parentheses in unnecessary-dict-kwargs
    * [pylint] Ignore __slots__ with dynamic values
    * [pylint] Remove try body from branch counting
    * [refurb] Respect operator precedence in FURB110
 * Documentation
    * Add --preview to the README
    * Add Python 3.13 to list of allowed Python versions
    * Simplify Neovim setup documentation
    * Update CONTRIBUTING.md to reflect the new parser
    * Update server documentation with new migration guide
    * [pycodestyle] Clarify motivation for E713 and E714
    * [pyflakes] Update docs to describe WAI behavior (F541)
    * [pylint] Clearly indicate what is counted as a branch

-------------------------------------------------------------------
Mon May 13 11:08:03 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.4.4
 * Preview features
   * [pycodestyle] Ignore end-of-line comments when determining blank line rules
   * [pylint] Detect pathlib.Path.open calls in unspecified-encoding (PLW1514)
   * [flake8-pyi] Implement PYI059 (generic-not-last-base-class)
   * [flake8-pyi] Implement PYI062 (duplicate-literal-member)
 * Rule changes
   * [flake8-boolean-trap] Allow passing booleans as positional-only arguments in code such as set(True)
   * [flake8-bugbear] Ignore enum classes in cached-instance-method (B019)
 * Server
   * Expand tildes when resolving Ruff server configuration file
   * Fix ruff server hanging after Neovim closes
   * Editor settings are used by default if no file-based configuration exists
 * Bug fixes
   * [pylint] Consider with statements for too-many-branches (PLR0912)
   * [flake8-blind-except, tryceratops] Respect logged and re-raised expressions in nested statements (BLE001, TRY201)
   * Recognise assignments such as __all__ = builtins.list(["foo", "bar"]) as valid __all__ definitions

-------------------------------------------------------------------
Mon May  6 12:06:13 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.4.3
 * Enhancements
   * Add support for PEP 696 syntax
 * Preview features
   * [refurb] Use function range for reimplemented-operator diagnostics
   * [refurb] Ignore methods in reimplemented-operator (FURB118)
   * [refurb] Implement fstring-number-format (FURB116)
   * [ruff] Implement redirected-noqa (RUF101)
   * [pyflakes] Distinguish between first-party and third-party imports for fix suggestions
 * Rule changes
   * [flake8-bugbear] Ignore non-abstract class attributes when enforcing B024
   * [flake8-logging] Include inline instantiations when detecting loggers
   * [pylint] Also emit PLR0206 for properties with variadic parameters
   * [ruff] Detect duplicate codes as part of unused-noqa (RUF100)
   * [flake8-pyi] Allow for overloaded __exit__ and __aexit__ definitions (PYI036)
   * [pyupgrade] Catch usages of "%s" % var and provide an unsafe fix (UP031)
   * [refurb] Implement new rule that suggests min/max over sorted() (FURB192)
 * Formatter
   * Avoid multiline expression if format specifier is present
 * LSP
   * Write ruff server setup guide for Helix
   * ruff server no longer hangs after shutdown
   * ruff server reads from a configuration TOML file in the user configuration directory if no local configuration exists
   * ruff server respects per-file-ignores configuration
   * ruff server: Support a custom TOML configuration file
   * ruff server: Support setting to prioritize project configuration over editor configuration
   * Fix an issue with missing diagnostics for Neovim and Helix
   * Implement hover documentation for noqa codes
   * Introduce common Ruff configuration options with new server settings
 * Bug fixes
   * Avoid debug assertion around NFKC renames
   * [pyflakes] Prioritize redefined-while-unused over unused-import
   * [ruff] Respect async expressions in comprehension bodies
   * [pygrep_hooks] Fix blanket-noqa panic when last line has noqa with no newline (PGH004)
   * [perflint] Ignore list-copy recommendations for async for loops
   * [pyflakes] Improve invalid-print-syntax documentation
   * Use macos-12 for building release wheels to enable macOS 11 compatibility
   * [flake8-blind-expect] Allow raise from in BLE001
   * [flake8-pyi] Allow simple assignments to None in enum class scopes (PYI026)
   * [flake8-simplify] Avoid raising SIM911 for non-zip attribute calls
   * [refurb] Avoid operator.itemgetter suggestion for single-item tuple
   * [ruff] Respect per-file-ignores for RUF100 with no other diagnostics
   * [ruff] Fix async comprehension false positive (RUF029)
 * Performance
   * Avoid allocations for isort module names
   * Build a separate ARM wheel for macOS
   * Use matchit to resolve per-file settings
 * Documentation
   * [flake8-bugbear] Document explicitly disabling strict zip (B905)
   * [flake8-type-checking] Mention lint.typing-modules in TCH001, TCH002, and TCH003
   * [isort] Improve documentation around custom isort sections
   * [pylint] Fix documentation oversight for invalid-X-returns

-------------------------------------------------------------------
Tue Apr 23 08:02:10 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.4.1
 * A new, hand-written parser
 * A new language server in Rust
 * ruff server is only in alpha, but it has a lot of features that you can try out today:
   * Lints Python files automatically and shows quick-fixes when available
   * Formats Python files, with support for range formatting
   * Comes with commands for quickly performing actions: ruff.applyAutofix, ruff.applyFormat, and ruff.applyOrganizeImports
   * Supports source.fixAll and source.organizeImports source actions
   * Automatically reloads your project configuration when you change it
   * To setup ruff server with your editor, refer to the README.md.
 * Preview features
   * [pylint] Implement invalid-hash-returned (PLE0309)
   * [pylint] Implement invalid-index-returned (PLE0305)
   * [pycodestyle] Do not trigger E3 rules on defs following a function/method with a dummy body
   * [pylint] Implement invalid-bytes-returned (E0308)
   * [pylint] Implement invalid-length-returned (E0303)
   * [pylint] Implement self-cls-assignment (W0642)
   * [pylint] Omit stubs from invalid-bool and invalid-str-return-type
   * [ruff] New rule unused-async (RUF029) to detect unneeded async keywords on functions
 * Rule changes
   * [flake8-bandit] Allow urllib.request.urlopen calls with static Request argument (S310)
   * [flake8-bugbear] Treat raise NotImplemented-only bodies as stub functions (B006)
   * [flake8-slots] Respect same-file Enum subclasses (SLOT000)
   * [pylint] Support inverted comparisons (PLR1730)
 * Linter
   * Improve handling of builtin symbols in linter rules
   * Improve display of rules in --show-settings
   * Improve inference capabilities of the BuiltinTypeChecker
   * Resolve classes and functions relative to script name
   * Improve performance of RuleTable::any_enabled
 * Server
  * This section is devoted to updates for our new language server, written in Rust.
   * Enable ruff-specific source actions
   * Refreshes diagnostics for open files when file configuration is changed
   * Important errors are now shown as popups
   * Introduce settings for directly configuring the linter and formatter
   * Resolve configuration for each document individually
   * Write a setup guide for Neovim
 * Configuration
   * Add RUFF_OUTPUT_FILE environment variable support
 * Bug fixes
   * [pylint] Allow NoReturn-like functions for __str__, __len__, etc. (PLE0307)
   * Parser: Use empty range when there's "gap" in token source
   * [ruff] Ignore stub functions in unused-async (RUF029)
   * Parser: Expect indented case block instead of match stmt
   * Avoid non-augmented-assignment for reversed, non-commutative operators (PLR6104)
   * Limit commutative non-augmented-assignments to primitive data types (PLR6104)
   * Respect per-file-ignores for RUF100 on blanket # noqa
   * Consider if expression for parenthesized with items parsing
   * Consider binary expr for parenthesized with items parsing
   * Reset FOR_TARGET context for all kinds of parentheses

-------------------------------------------------------------------
Fri Apr 12 08:55:20 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.3.7
 * Preview features
   * [flake8-bugbear] Implement loop-iterator-mutation (B909)
   * [pylint] Implement rule to prefer augmented assignment (PLR6104)
   * [pylint] Implement bad-staticmethod-argument (PLW0211)
   * [pylint] Implement if-stmt-min-max (PLR1730, PLR1731)
   * [pyupgrade] Replace str,Enum multiple inheritance with StrEnum UP042
   * [refurb] Implement if-expr-instead-of-or-operator (FURB110)
   * [refurb] Implement int-on-sliced-str (FURB166)
   * [refurb] Implement write-whole-file (FURB103)
   * [refurb] Support itemgetter in reimplemented-operator (FURB118)
   * [flake8_comprehensions] Add sum/min/max to unnecessary comprehension check (C419)
 * Rule changes
   * [pydocstyle] Require capitalizing docstrings where the first sentence is a single word (D403)
   * [pycodestyle] Ignore annotated lambdas in class scopes (E731)
   * [flake8-pyi] Various improvements to PYI034
   * [flake8-slots] Flag subclasses of call-based typing.NamedTuples as well as subclasses of collections.namedtuple() (SLOT002)
   * [pyflakes] Allow forward references in class bases in stub files (F821)
   * [pygrep-hooks] Improve blanket-noqa error message (PGH004)
 * CLI
   * Support FORCE_COLOR env var
 * Configuration
   * Support negated patterns in [extend-]per-file-ignores
 * Bug fixes
   * Avoid TOCTOU errors in cache initialization
   * [pylint] Recode nan-comparison rule to W0177
   * [pylint] Reverse min-max logic in if-stmt-min-max
   * [flake8-import-conventions] Accept non-aliased (but correct) import in unconventional-import-alias (ICN001)
   * [flake8-quotes] Add semantic model flag when inside f-string replacement field
   * [pep8-naming] Recursively resolve TypeDicts for N815 violations
   * [flake8-quotes] Respect Q00* ignores in flake8-quotes rules
   * [flake8-simplify] Show negated condition in needless-bool diagnostics (SIM103)
   * [ruff] Use within-scope shadowed bindings in asyncio-dangling-task (RUF006)
   * [flake8-pytest-style] Fix single-tuple conversion in pytest-parametrize-values-wrong-type (PT007)
   * [flake8-return] Ignore assignments to annotated variables in unnecessary-assign (RET504)
   * [refurb] Do not allow any keyword arguments for read-whole-file in rb mode (FURB101)
   * [pylint] Don't recommend decorating staticmethods with @singledispatch (PLE1519, PLE1520)
   * [pydocstyle] Use section name range for all section-related docstring diagnostics
   * Respect # noqa directives on __all__ openers

-------------------------------------------------------------------
Tue Apr  9 21:33:19 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.3.5
 * Preview features
   * [pylint] Implement modified-iterating-set (E4703)
   * [refurb] Implement for-loop-set-mutations (FURB142)
   * [refurb] Implement unnecessary-from-float (FURB164)
   * [refurb] Implement verbose-decimal-constructor (FURB157)
 * Rule changes
   * [flake8-comprehensions] Handled special case for C401 which also matches C416
   * [flake8-pyi] Mark unaliased-collections-abc-set-import fix as "safe" for more cases in stub files (PYI025)
   * [numpy] Add row_stack to NumPy 2.0 migration rule
   * [pycodestyle] Allow cell magics before an import (E402)
   * [pycodestyle] Avoid blank line rules for the first logical line in cell
 * Configuration
   * Respected nested namespace packages
   * [flake8-boolean-trap] Add setting for user defined allowed boolean trap
 * Bug fixes
   * Correctly handle references in __all__ definitions when renaming symbols in autofixes
   * Track ranges of names inside __all__ definitions
   * [flake8-bugbear] Avoid false positive for usage after continue (B031)
   * [flake8-copyright] Accept commas in default copyright pattern
   * [flake8-datetimez] Allow f-strings with %z for DTZ007
   * [flake8-pytest-style] Fix PT014 autofix for last item in list
   * [flake8-quotes] Ignore Q000, Q001 when string is inside forward ref
   * [isort] Always place non-relative imports after relative imports
   * [isort] Respect Unicode characters in import sorting
   * [pyflakes] Fix F821 false negatives when from __future__ import annotations is active (attempt 2)
   * [pyflakes] Make unnecessary-lambda an always-unsafe fix
   * [pylint] Fixed false-positive on the rule PLW1641 (eq-without-hash)
   * [ruff] Fix panic in unused # noqa removal with multi-byte space (RUF100)
 * Documentation
   * Add PR title format to CONTRIBUTING.md
   * Fix list markup to include blank lines required
   * Put flake8-logging next to the other flake8 plugins in registry
   * [flake8-bandit] Update warning message for rule S305 to address insecure block cipher mode use
   * [flake8-bugbear] Document use of anonymous assignment in useless-expression
   * [flake8-datetimez] Clarify error messages and docs for DTZ rules
   * [pycodestyle] Use same before vs. after numbers for space-around-operator
   * [ruff] Change quadratic-list-summation docs to use iadd consistently

-------------------------------------------------------------------
Fri Mar 22 10:15:55 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update ruff to 0.3.4
 * Preview features
   * [flake8-simplify] Detect implicit else cases in needless-bool (SIM103)
   * [pylint] Implement nan-comparison (PLW0117)
   * [pylint] Implement nonlocal-and-global (E115)
   * [pylint] Implement singledispatchmethod-function (PLE5120)
   * [refurb] Implement list-reverse-copy (FURB187)
 * Rule changes
   * [flake8-pytest-style] Add automatic fix for pytest-parametrize-values-wrong-type (PT007)
   * [pycodestyle] Allow SPDX license headers to exceed the line length (E501)
 * Formatter
   * Fix unstable formatting for trailing subscript end-of-line comment
 * Bug fixes
   * Avoid code comment detection in PEP 723 script tags
   * Avoid incorrect tuple transformation in single-element case (C409)
   * Bug fix: Prevent fully defined links name from being reformatted
   * Consider raw source code for W605
   * Docs: Link inline settings when not part of options section
   * Don't treat annotations as redefinitions in .pyi files
   * Fix E231 bug: Inconsistent catch compared to pycodestyle, such as when dict nested in list
   * Fix pylint upstream categories not showing in docs
   * Add missing Options references to blank line docs
   * 'Revert "F821: Fix false negatives in .py files when from __future__ import annotations is active "'
   * Apply NFKC normalization to unicode identifiers in the lexer
   * Avoid failures due to non-deterministic binding ordering
   * [flake8-bugbear] Allow tuples of exceptions (B030)
   * [flake8-quotes] Avoid syntax errors due to invalid quotes (Q000, Q002)

-------------------------------------------------------------------
Mon Mar 18 13:45:45 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.3.3
 * Preview features
   * [flake8-bandit]: Implement S610 rule
   * [pycodestyle] Implement blank-line-at-end-of-file (W391)
   * [pycodestyle] Implement redundant-backslash (E502)
   * [pylint] - implement redeclared-assigned-name (W0128)
 * Rule changes
   * [flake8_comprehensions] Handled special case for C400 which also matches C416
   * [flake8-bandit] Implement upstream updates for S311, S324 and S605
   * [pyflakes] Remove F401 fix for __init__ imports by default and allow opt-in to unsafe fix
   * [pylint] Implement invalid-bool-return-type (E304)
   * [pylint] Include builtin warnings in useless-exception-statement (PLW0133)
 * CLI
   * Add message on success to ruff check
 * Bug fixes
   * [PIE970] Allow trailing ellipsis in typing.TYPE_CHECKING
   * Avoid TRIO115 if the argument is a variable
   * [F811] Avoid removing shadowed imports that point to different symbols
   * Fix F821 and F822 false positives in .pyi files
   * Fix F821 false negatives in .py files when from __future__ import annotations is active
   * Fix case where Indexer fails to identify continuation preceded by newline #10351
   * Sort hash maps in Settings display
   * Track conditional deletions in the semantic model
   * [C413] Wrap expressions in parentheses when negating
   * [pycodestyle] Do not ignore lines before the first logical line in blank lines rules.
   * [pycodestyle] Do not trigger E225 and E275 when the next token is a ')'
   * [pylint] Avoid false-positive slot non-assignment for __dict__ (PLE0237)
   * Gate f-string struct size test for Rustc < 1.76
 * Documentation
   * Use ruff.toml format in README
   * [RUF008] Make it clearer that a mutable default in a dataclass is only valid if it is typed as a ClassVar
   * [pylint] Extend docs and test in invalid-str-return-type (E307)
   * Remove . from check and format commands

-------------------------------------------------------------------
Mon Mar 11 08:52:49 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.3.2
 * Preview features
   * Improve single-with item formatting for Python 3.8 or older
 * Rule changes
   * [pyupgrade] Allow fixes for f-string rule regardless of line length (UP032)
   * [pycodestyle] Include actual conditions in E712 diagnostics
 * Bug fixes
   * Fix trailing kwargs end of line comment after slash
   * Fix unstable with items formatting
   * Avoid repeating function calls in f-string conversions
   * Fix E203 false positive for slices in format strings
   * Fix incorrect Parameter range for *args and **kwargs
   * Treat typing.Annotated subscripts as type definitions
 * 0.3.1
 * Preview features
   * [pycodestyle] Fix E301 not triggering on decorated methods.
   * [pycodestyle] Respect isort settings in blank line rules (E3*)
   * [pycodestyle] Make blank lines in typing stub files optional (E3*)
   * [pylint] Implement singledispatch-method (E1519)
   * [pylint] Implement useless-exception-statement (W0133)
 * Rule changes
   * [flake8-debugger] Check for use of debugpy and ptvsd debug modules
   * [pyupgrade] Generate diagnostic for all valid f-string conversions regardless of line length (UP032)
   * [pep8_naming] Add fixes for N804 and N805
 * CLI
   * Colorize the output of ruff format --diff
   * Make --config and --isolated global flags
   * Correctly expand tildes and environment variables in paths passed to --config
 * Configuration
   * Accept a PEP 440 version specifier for required-version
   * Implement isort's default-section setting
 * Bug fixes
   * Remove trailing space from CapWords message
   * Respect external codes in file-level exemptions
   * [flake8-raise] Avoid false-positives for parens-on-raise with future.exception() (RSE102)
   * [pylint] Add fix for unary expressions in PLC2801
   * [ruff] Fix RUF028 not allowing # fmt: skip on match cases

-------------------------------------------------------------------
Fri Mar  8 16:57:10 UTC 2024 - Matej Cepl <mcepl@cepl.eu>

- Remove limitations on building (do not exclude any arch beforehand).

-------------------------------------------------------------------
Wed Mar  6 14:20:44 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.3.0
 * Preview features
   * [flake8-bandit] Remove suspicious-lxml-import (S410)
   * [pycodestyle] Allow os.environ modifications between imports (E402)
   * [pycodestyle] Don't warn about a single whitespace character before a comma in a tuple (E203)
 * Rule changes
   * [eradicate] Detect commented out case statements (ERA001)
   * [eradicate] Detect single-line code for try:, except:, etc. (ERA001)
   * [flake8-boolean-trap] Allow boolean positionals in __post_init__
   * [flake8-copyright] Allow © in copyright notices
   * [isort]: Use one blank line after imports in typing stub files
   * [pylint] New Rule dict-iter-missing-items (PLE1141)
   * [pylint] Ignore sys.version and sys.platform (PLR1714)
   * [pyupgrade] Detect literals with unary operators (UP018)
   * [ruff] Expand rule for list(iterable).pop(0) idiom (RUF015)
 * Formatter
  * This release introduces the Ruff 2024.2 style, stabilizing the following changes:
   * Prefer splitting the assignment's value over the target or type annotation
   * Remove blank lines before class docstrings
   * Wrap multiple context managers in with parentheses when targeting Python 3.9 or newer
   * Add a blank line after nested classes with a dummy body (...) in typing stub files
   * Reduce vertical spacing for classes and functions with a dummy (...) body
   * Add a blank line after the module docstring
   * Parenthesize long type hints in assignments
   * Preserve indent for single multiline-string call-expressions
   * Normalize hex escape and unicode escape sequences
   * Format module docstrings
 * CLI
   * Explicitly disallow extend as part of a --config flag
   * Remove build from the default exclusion list
   * Deprecate ruff <path>, ruff --explain, ruff --clean, and ruff --generate-shell-completion
      in favor of ruff check <path>, ruff rule, ruff clean, and ruff generate-shell-completion
   * Remove the deprecated CLI option --format from ruff rule and ruff linter
 * Bug fixes
   * [flake8-bugbear] Avoid adding default initializers to stubs (B006)
   * [flake8-type-checking] Respect runtime-required decorators for function signatures
   * [pycodestyle] Mark fixes overlapping with a multiline string as unsafe (W293)
   * [pydocstyle] Trim whitespace when removing blank lines after section (D413)
   * [pylint] Delete entire statement, including semicolons (PLR0203)
   * [ruff] Avoid f-string false positives in gettext calls (RUF027)
   * Fix ruff crashing on PowerPC systems because of too small page size
 * Performance
   * Add cold attribute to less likely printer queue branches in the formatter
   * Skip unnecessary string normalization in the formatter
 * Documentation
   * Remove "Beta" Label from formatter documentation
   * line-length option: fix link to pycodestyle.max-line-length

-------------------------------------------------------------------
Tue Mar  5 14:12:37 UTC 2024 - Andreas Schwab <schwab@suse.de>

- Enable build on riscv64

-------------------------------------------------------------------
Wed Feb 21 16:49:44 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.2.2
 * Highlights include:
   * Initial support formatting f-strings (in --preview).
   * Support for overriding arbitrary configuration options via the CLI
      through an expanded --config argument (e.g., --config "lint.isort.combine-as-imports=false").
   * Significant performance improvements in Ruff's lexer, parser, and lint rules.
 * Preview features
   * Implement minimal f-string formatting
   * [pycodestyle] Add blank line(s) rules (E301, E302, E303, E304, E305, E306)
   * [refurb] Implement readlines_in_for (FURB129)
 * Rule changes
   * [ruff] Ensure closing parentheses for multiline sequences are always on their own line (RUF022, RUF023)
   * [numpy] Add missing deprecation violations (NPY002)
   * [flake8-bandit] Detect mark_safe usages in decorators
   * [ruff] Expand asyncio-dangling-task (RUF006) to include new_event_loop
   * [flake8-pyi] Ignore 'unused' private type dicts in class scopes
 * Formatter
   * Docstring formatting: Preserve tab indentation when using indent-style=tabs
   * Disable top-level docstring formatting for notebooks
   * Stabilize quote-style's preserve mode
 * CLI
   * Allow arbitrary configuration options to be overridden via the CLI
 * Bug fixes
   * Make show-settings filters directory-agnostic
   * Respect duplicates when rewriting type aliases
   * Respect tuple assignments in typing analyzer
   * Use atomic write when persisting cache
   * Use non-parenthesized range for DebugText
   * [flake8-simplify] Avoid false positive with async for loops (SIM113)
   * [flake8-trio] Respect async with in timeout-without-await
   * [perflint] Catch a wider range of mutations in PERF101
   * [pycodestyle] Fix E30X panics on blank lines with trailing white spaces
   * [pydocstyle] Allow using parameters as a subsection header (D405)
   * [pydocstyle] Fix blank-line docstring rules for module-level docstrings
   * [pylint] Accept 0.0 and 1.0 as common magic values (PLR2004)
   * [pylint] Avoid suggesting set rewrites for non-hashable types
   * [ruff] Avoid false negatives with string literals inside of method calls (RUF027)
   * [ruff] Fix panic on with f-string detection (RUF027)
   * [ruff] Ignore builtins when detecting missing f-strings
 * Performance
   * Use memchr for string lexing
   * Use memchr for tab-indentation detection
   * Reduce Result<Tok, LexicalError> size by using Box<str> instead of String
   * Reduce size of Expr from 80 to 64 bytes
   * Improve trailing comma rule performance
   * Remove unnecessary string cloning from the parser

-------------------------------------------------------------------
Wed Feb  7 10:16:16 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.2.1
 * This release includes support for range formatting
   (i.e., the ability to format specific lines within a source file).
 * Preview features
   * [refurb] Implement missing-f-string-syntax (RUF027)
   * Format module-level docstrings
 * Formatter
   * Add --range option to ruff format
   * Don't trim last empty line in docstrings
 * Bug fixes
   * Skip empty lines when determining base indentation
   * Drop __get__ and __set__ from unnecessary-dunder-call
   * Respect generic Protocol in ellipsis removal
   * Revert "Use publicly available Apple Silicon runners"
 * Performance
   * Skip LibCST parsing for standard dedent adjustments
   * Remove CST-based fixer for C408
   * Add our own ignored-names abstractions
   * Remove CST-based fixers for C400, C401, C410, and C418
   * Use AhoCorasick to speed up quote match
   * Remove CST-based fixers for C405 and C409
   * Add fast-path for comment detection
   * Invert order of checks in zero-sleep-call
   * Short-circuit typing matches based on imports
   * Run dunder method rule on methods directly
   * Track top-level module imports in the semantic model
   * Slight speed-up for lowercase and uppercase identifier checks
   * Remove LibCST-based fixer for C403
 * Documentation
   * Update max-pos-args example to max-positional-args
   * Fixed example code in weak_cryptographic_key.rs
   * Fix references to deprecated ANN rules in changelog
   * Fix default for max-positional-args

-------------------------------------------------------------------
Mon Feb  5 09:40:59 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.2.0
 * Breaking changes
   * The NURSERY selector cannot be used anymore
   * Legacy selection of nursery rules by exact codes is no longer allowed without preview enabled
   * See also, the "Remapped rules" section which may result in disabled rules.
 * Deprecations
  * The following rules are now deprecated:
   * missing-type-self (ANN101)
   * missing-type-cls (ANN102)
  * The following command line options are now deprecated:
   * --show-source; use --output-format full instead
   * --no-show-source; use --output-format concise instead
   * --output-format text; use full or concise instead
  * The following settings have moved and the previous name is deprecated:
   * ruff.allowed-confusables → ruff.lint.allowed-confusables
   * ruff.dummy-variable-rgx → ruff.lint.dummy-variable-rgx
   * ruff.explicit-preview-rules → ruff.lint.explicit-preview-rules
   * ruff.extend-fixable → ruff.lint.extend-fixable
   * ruff.extend-ignore → ruff.lint.extend-ignore
   * ruff.extend-per-file-ignores → ruff.lint.extend-per-file-ignores
   * ruff.extend-safe-fixes → ruff.lint.extend-safe-fixes
   * ruff.extend-select → ruff.lint.extend-select
   * ruff.extend-unfixable → ruff.lint.extend-unfixable
   * ruff.extend-unsafe-fixes → ruff.lint.extend-unsafe-fixes
   * ruff.external → ruff.lint.external
   * ruff.fixable → ruff.lint.fixable
   * ruff.flake8-annotations → ruff.lint.flake8-annotations
   * ruff.flake8-bandit → ruff.lint.flake8-bandit
   * ruff.flake8-bugbear → ruff.lint.flake8-bugbear
   * ruff.flake8-builtins → ruff.lint.flake8-builtins
   * ruff.flake8-comprehensions → ruff.lint.flake8-comprehensions
   * ruff.flake8-copyright → ruff.lint.flake8-copyright
   * ruff.flake8-errmsg → ruff.lint.flake8-errmsg
   * ruff.flake8-gettext → ruff.lint.flake8-gettext
   * ruff.flake8-implicit-str-concat → ruff.lint.flake8-implicit-str-concat
   * ruff.flake8-import-conventions → ruff.lint.flake8-import-conventions
   * ruff.flake8-pytest-style → ruff.lint.flake8-pytest-style
   * ruff.flake8-quotes → ruff.lint.flake8-quotes
   * ruff.flake8-self → ruff.lint.flake8-self
   * ruff.flake8-tidy-imports → ruff.lint.flake8-tidy-imports
   * ruff.flake8-type-checking → ruff.lint.flake8-type-checking
   * ruff.flake8-unused-arguments → ruff.lint.flake8-unused-arguments
   * ruff.ignore → ruff.lint.ignore
   * ruff.ignore-init-module-imports → ruff.lint.ignore-init-module-imports
   * ruff.isort → ruff.lint.isort
   * ruff.logger-objects → ruff.lint.logger-objects
   * ruff.mccabe → ruff.lint.mccabe
   * ruff.pep8-naming → ruff.lint.pep8-naming
   * ruff.per-file-ignores → ruff.lint.per-file-ignores
   * ruff.pycodestyle → ruff.lint.pycodestyle
   * ruff.pydocstyle → ruff.lint.pydocstyle
   * ruff.pyflakes → ruff.lint.pyflakes
   * ruff.pylint → ruff.lint.pylint
   * ruff.pyupgrade → ruff.lint.pyupgrade
   * ruff.select → ruff.lint.select
   * ruff.task-tags → ruff.lint.task-tags
   * ruff.typing-modules → ruff.lint.typing-modules
   * ruff.unfixable → ruff.lint.unfixable
 * Remapped rules
  * The following rules have been remapped to new codes:
   * raise-without-from-inside-except: TRY200 to B904
   * suspicious-eval-usage: PGH001 to S307
   * logging-warn: PGH002 to G010
   * static-key-dict-comprehension: RUF011 to B035
   * runtime-string-union: TCH006 to TCH010
 * Stabilizations
  * The following rules have been stabilized and are no longer in preview:
   * trio-timeout-without-await (TRIO100)
   * trio-sync-call (TRIO105)
   * trio-async-function-with-timeout (TRIO109)
   * trio-unneeded-sleep (TRIO110)
   * trio-zero-sleep-call (TRIO115)
   * unnecessary-escaped-quote (Q004)
   * enumerate-for-loop (SIM113)
   * zip-dict-keys-and-values (SIM911)
   * timeout-error-alias (UP041)
   * flask-debug-true (S201)
   * tarfile-unsafe-members (S202)
   * ssl-insecure-version (S502)
   * ssl-with-bad-defaults (S503)
   * ssl-with-no-version (S504)
   * weak-cryptographic-key (S505)
   * ssh-no-host-key-verification (S507)
   * django-raw-sql (S611)
   * mako-templates (S702)
   * generator-return-from-iter-method (PYI058)
   * runtime-string-union (TCH006)
   * numpy2-deprecation (NPY201)
   * quadratic-list-summation (RUF017)
   * assignment-in-assert (RUF018)
   * unnecessary-key-check (RUF019)
   * never-union (RUF020)
   * direct-logger-instantiation (LOG001)
   * invalid-get-logger-argument (LOG002)
   * exception-without-exc-info (LOG007)
   * undocumented-warn (LOG009)
  * Fixes for the following rules have been stabilized and are now available without preview:
   * triple-single-quotes (D300)
   * non-pep604-annotation (UP007)
   * dict-get-with-none-default (SIM910)
   * in-dict-keys (SIM118)
   * collapsible-else-if (PLR5501)
   * if-with-same-arms (SIM114)
   * useless-else-on-loop (PLW0120)
   * unnecessary-literal-union (PYI030)
   * unnecessary-spread (PIE800)
   * error-instead-of-exception (TRY400)
   * redefined-while-unused (F811)
   * duplicate-value (B033)
   * multiple-imports-on-one-line (E401)
   * non-pep585-annotation (UP006)
  * Fixes for the following rules have been promoted from unsafe to safe:
   * unaliased-collections-abc-set-import (PYI025)
  * The following behaviors have been stabilized:
   * module-import-not-at-top-of-file (E402) allows sys.path modifications between imports
   * reimplemented-container-builtin (PIE807) includes lambdas that can be replaced with dict
   * unnecessary-placeholder (PIE790) applies to unnecessary ellipses (...)
   * if-else-block-instead-of-dict-get (SIM401) applies to if-else expressions
 * Preview features
   * [refurb] Implement metaclass_abcmeta (FURB180)
   * Implement blank_line_after_nested_stub_class preview style
   * The preview rule and-or-ternary (PLR1706) was removed
 * Bug fixes
   * [flake8-async] Take pathlib.Path into account when analyzing async functions
   * [flake8-return] - fix indentation syntax error (RET505)
   * Detect multi-statement lines in else removal
   * RUF022, RUF023: never add two trailing commas to the end of a sequence
   * RUF023: Don't sort __match_args__, only __slots__
   * [flake8-simplify] - Fix syntax error in autofix (SIM114)
   * [pylint] Show verbatim constant in magic-value-comparison (PLR2004)
   * Removing trailing whitespace inside multiline strings is unsafe
   * Support IfExp with dual string arms in invalid-envvar-default
   * [pylint] Add __mro_entries__ to known dunder methods (PLW3201)
 * Documentation
   * Removed rules are now retained in the documentation
   * Deprecated rules are now indicated in the documentation

-------------------------------------------------------------------
Thu Feb  1 18:05:47 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.1.15
 * Preview features
   * Error when NURSERY selector is used with --preview
   * Preserve indentation around multiline strings in formatter
   * [flake8-return] Add fixes for all rules (RET505, RET506, RET507, RET508)
   * [flake8-simplify] Add fix for if-with-same-arms (SIM114)
   * [pycodestyle] Add fix for multiple-imports-on-one-line (E401)
   * [pylint] Add fix for collapsible-else-if (PLR5501)
   * [pylint] Add fix for useless-else-on-loop (PLW0120)
   * [pylint] Implement assigning-non-slot (E0237)
   * [pylint] Implement potential-index-error (PLE0643)
   * [pylint] Implement too-many-nested-blocks (PLR1702)
   * [ruff] Add rule to sort __slots__ and __match_args__
   * [ruff] Detect unnecessary dict comprehensions for iterables (RUF025)
   * [ruff] Guard against use of default_factory as a keyword argument (RUF026)
   * [ruff] Implement mutable-fromkeys-value (RUF024)
 * CLI
   * Enable auto-wrapping of --help output
 * Bug fixes
   * Avoid rendering display-only rules as fixable
   * Detect automagic-like assignments in notebooks
   * Generate custom JSON schema for dynamic setting
   * [flake8-no-pep420] Include global --config when determining namespace packages
   * [flake8-pie] Omit bound tuples passed to .startswith or .endswith
   * [flake8-return] Avoid panic when fixing inlined else blocks
   * [flake8-return] Consider exception suppression in unnecessary assignment
   * [flake8-return] Take NoReturn annotation into account when analyzing implicit returns
   * [flake8-simplify] Support inverted returns in needless-bool (SIM103)
   * [flake8-type-checking] Add Pydantic's BaseConfig to default-copy list
   * [flake8-type-checking] Avoid marking InitVar as a typing-only annotation
   * [pycodestyle] Allow dtype comparisons in type-comparison
   * [pydocstyle] Re-implement last-line-after-section (D413)
 * Documentation
   * [flake8-pytest-style] Add fix safety documentation for duplicate-parameterize-test-cases
   * [pylint] Document literal-membership fix safety conditions
   * [isort] Fix reference to isort rule code

-------------------------------------------------------------------
Sun Jan 21 15:21:29 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.1.14
 * Preview features
   * [flake8-bugbear] Add fix for duplicate-value (B033)
   * [flake8-simplify] Implement enumerate-for-loop (SIM113)
   * [pygrep_hooks] Add fix for deprecated-log-warn (PGH002)
   * [pylint] Implement import-private-name (C2701)
   * [refurb] Implement regex-flag-alias with fix (FURB167)
   * [ruff] Add rule and fix to sort contents of __all__ (RUF022)
   * [tryceratops] Add fix for error-instead-of-exception (TRY400)
 * Rule changes
   * [flake8-pyi] Fix PYI047 false negatives on PEP-695 type aliases
   * [flake8-pyi] Fix PYI049 false negatives on call-based TypedDicts
   * [pylint] Exclude self and cls when counting method arguments (PLR0917)
 * CLI
   * --show-settings displays active settings in a far more readable format
   * Add --extension support to the formatter
   * Configuration
   * Ignore preview status for fixable and unfixable selectors
   * [pycodestyle] Use the configured tab size when expanding indents
 * Bug fixes
   * Recursively visit deferred AST nodes
   * Visit deferred lambdas before type definitions
   * [flake8-simplify] Avoid some more enumerate-for-loop false positives (SIM113)
   * [pandas-vet] Limit inplace diagnostics to methods that accept inplace
   * [pylint] Add the __prepare__ method to the list of recognized dunder method
   * [pylint] Ignore unnecessary dunder calls within dunder definitions
   * [refurb] Avoid bailing when reimplemented-operator is called on function (FURB118)
   * [ruff] Avoid treating named expressions as static keys (RUF011)
 * Documentation
   * Add instructions on using noqa with isort rules
   * Documentation update for URL giving 'page not found'
   * Fix admonition in dark mode
   * Update contributing docs to use cargo bench -p ruff_benchmark
   * Update emacs integration section to include emacs-ruff-format
   * [flake8-blind-except] Document exceptions to blind-except rule

-------------------------------------------------------------------
Mon Jan 15 13:27:02 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.1.13
 * Bug fixes
   * Include base pyproject when initializing cache settings
   * [flake8-simplify] Account for possibly-empty f-string values in truthiness logic
   * [pylint] Add the missing period in unnecessary-dunder-call
   * [pylint] Fix __aenter__ message in unnecessary-dunder-call

-------------------------------------------------------------------
Fri Jan 12 11:48:38 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.1.12:
 * Preview features
   * Formatter: Hug multiline-strings in preview style
   * [flake8-bandit] Add ssl-with-no-version (S504)
   * [flake8-bandit] Implement ssl-insecure-version (S502)
   * [flake8-bandit] Implement ssl-with-bad-defaults (S503)
   * [flake8-bandit] Implement suspicious import rules (S4XX)
   * [flake8-simplify] Implement zip-dict-keys-and-values (SIM911)
   * [pyflakes] Add a fix for redefined-while-unused (F811)
   * [pylint] Implement unnecessary-dunder-call (C2801)
   * [ruff] Add parenthesize-chained-operators (RUF021) to enforce parentheses in a or b and c
 * Rule changes
   * [flake8-boolean-trap] Allow Boolean positional arguments in setters
   * [flake8-builtins] Restrict builtin-attribute-shadowing (A003) to actual shadowed references
   * [flake8-pyi] Add fix for generator-return-from-iter-method (PYI058)
   * [pyflakes] Don't flag redefined-while-unused (F811) in if branches
   * [pyupgrade] Add some additional Python 3.12 typing members to deprecated-import
   * [ruff] Add fix for parenthesize-chained-operators (RUF021)
   * [ruff] Include subscripts and attributes in static key rule (RUF011)
   * [ruff] Support variable keys in static dictionary key rule (RUF011)
 * Formatter
   * Generate deterministic IDs when formatting notebooks
   * Allow # fmt: skip with interspersed same-line comments
   * Parenthesize breaking named expressions in match guards
 * Bug fixes
   * Add cell indexes to all diagnostics
   * Avoid infinite loop in constant vs. None comparisons
   * Handle raises with implicit alternate branches
   * Ignore trailing quotes for unclosed l-brace errors
   * Respect multi-segment submodule imports when resolving qualified names
   * Use DisplayParseError for stdin parser errors
   * Use comment_ranges for isort directive extraction
   * Use transformed source code for diagnostic locations
   * [flake8-pyi] Exclude warnings.deprecated and typing_extensions.deprecated arguments
   * [flake8-pyi] Fix false negative for unused-private-protocol (PYI046) with unused generic protocols
   * [pydocstyle] Disambiguate argument descriptors from section headers
   * [pylint] Homogenize PLR0914 message to match other PLR09XX rules
   * [ruff] Allow Hashable = None in type annotations (RUF013)
 * Documentation
   * Fix admonition hyperlink colouring
   * Add missing preview link

-------------------------------------------------------------------
Mon Jan  8 09:39:09 UTC 2024 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.1.11
   * [pylint] Implement super-without-brackets (W0245)
   * Check path string properly in python -m ruff invocations
 * Documentation
   * Tweak relative-imports message
   * Add fix safety note for yield-in-for-loop
 * 0.1.10
 * Preview features
   * Improve dummy_implementations preview style formatting
   * Normalise Hex and unicode escape sequences in strings
   * Parenthesize long type annotations in annotated assignments
   * Parenthesize multi-context managers in with statements
   * [flake8-pyi] Implement generator-return-from-iter-method (PYI058)
   * [pylint] Implement empty-comment (PLR2044)
   * [refurb] Implement bit-count (FURB161)
   * [ruff] Add never-union rule to detect redundant typing.NoReturn and typing.Never
 * CLI
   * Add paths to TOML parse errors
   * Add row and column numbers to formatter parse errors
   * Improve responsiveness when invoked via Python
   * Short rule messages should not end with a period
 * Configuration
   * Respect runtime-required decorators on functions
 * Bug fixes
   * Avoid asyncio-dangling-task for nonlocal and global bindings
   * Escape trailing placeholders in rule documentation
   * Fix continuation detection following multi-line strings
   * Fix scoping for generators in named expressions in classes
   * Port from obsolete wsl crate to is-wsl
   * Remove special pre-visit for module docstrings
   * Respect __str__ definitions from super classes
   * Respect unused-noqa via per-file-ignores
   * Respect attribute chains when resolving builtin call paths
   * Treat all typing_extensions members as typing aliases
   * Use Display for formatter parse errors
   * Wrap subscripted dicts in parens for f-string conversion
   * [flake8-annotations] Avoid adding return types to stub methods
   * [flake8-annotations] Respect mixed return and raise cases in return-type analysis
   * [flake8-bandit] Don't report violations when SafeLoader is imported from yaml.loader (S506)
   * [pylint] Avoid panic when comment is preceded by Unicode
   * [pylint] Change PLR0917 error message to match other PLR09XX messages
   * [refurb] Avoid false positives for math-constant (FURB152)
 * Documentation
   * Expand target name for better rule documentation
   * Fix typos found by codespell
   * [perflint] Document PERF102 fix un-safety
   * [pyupgrade] Document UP007 fix un-safety

-------------------------------------------------------------------
Thu Dec 21 23:27:31 UTC 2023 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.1.9
 * Breaking changes
   * Add site-packages to default exclusions
 * Preview features
   * Fix: Avoid parenthesizing subscript targets and values
   * [pylint] Implement too-many-locals (PLR0914)
   * Implement reimplemented_operator (FURB118)
   * Add a rule to detect string members in runtime-evaluated unions
   * Implement no_blank_line_before_class_docstring preview style
 * Rule changes
   * CONSTANT_CASE variables are improperly flagged for yoda violation (SIM300)
   * [flake8-pyi] Cover ParamSpecs and TypeVarTuples (PYI018)
   * [flake8-bugbear] Add fix for zip-without-explicit-strict (B905)
   * Add fix to automatically remove print and pprint statements (T201, T203)
   * Prefer Never to NoReturn in auto-typing in Python >= 3.11 (ANN201)
 * Formatter
   * can_omit_optional_parentheses: Exit early for unparenthesized expressions
   * Fix dynamic mode with doctests so that it doesn't exceed configured line width
   * Fix can_omit_optional_parentheses for expressions with a right most fstring
   * Add target_version to formatter options
 * CLI
   * Update ruff format --check to display message for already formatted files
 * Bug fixes
   * Reverse order of arguments for operator.contains
   * Iterate over lambdas in deferred type annotations
   * Fix panic in D208 with multibyte indent
   * Add support for NoReturn in auto-return-typing
   * Allow removal of typing from exempt-modules
   * Avoid mutable-class-default violations for Pydantic subclasses
   * Fix dropped union expressions for piped non-types in PYI055 autofix
   * Enable annotation quoting for multi-line expressions
   * Deduplicate edits when quoting annotations
   * Prevent invalid utf8 indexing in cell magic detection
   * Avoid nested quotations in auto-quoting fix
   * Add base-class inheritance detection to flake8-django rules
   * Avoid asyncio-dangling-task violations on shadowed bindings
 * Documentation
   * Fix blog post URL in changelog
   * Add error suppression hint for multi-line strings
   * Fix typo in SemanticModel.parent_expression docstring
   * Document link between import sorting and formatter

-------------------------------------------------------------------
Thu Dec 14 10:14:53 UTC 2023 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.1.8
 * Preview features
   * Add "preserve" quote-style to mimic Black's skip-string-normalization
   * Implement prefer_splitting_right_hand_side_of_assignments preview style
   * [pycodestyle] Add fix for unexpected-spaces-around-keyword-parameter-equals
   * [pycodestyle] Add fix for comment-related whitespace rules
   * [pycodestyle] Allow sys.path modifications between imports
   * [refurb] Implement hashlib-digest-hex (FURB181)
 * Rule changes
   * Allow flake8-type-checking rules to automatically quote runtime-evaluated references
   * Allow transparent cell magics in Jupyter Notebooks
   * [flake8-annotations] Avoid ANN2xx fixes for abstract methods with empty bodies
   * [flake8-self] Ignore underscore references in type annotations
   * [pep8-naming] Allow class names when apps.get_model is a non-string
   * [pycodestyle] Allow matplotlib.use calls to intersperse imports
   * [pyflakes] Support fixing unused assignments in tuples by renaming variables (F841)
   * [pylint] Add fix for subprocess-run-without-check (PLW1510)
 * Formatter
   * Add docstring-code-format knob to enable docstring snippet formatting
   * Use double quotes for all docstrings, including single-quoted docstrings
   * Implement "dynamic" line width mode for docstring code formatting
   * Support reformatting Markdown code blocks
   * add support for formatting reStructuredText code snippets
   * Avoid trailing comma for single-argument with positional separator
   * Fix handling of trailing target comment
 * CLI
   * Hide unsafe fix suggestions when explicitly disabled
   * Add SARIF support to --output-format
 * Bug fixes
   * Apply unnecessary index rule prior to enumerate rewrite
   * [flake8-err-msg] Allow EM fixes even if msg variable is defined
   * [flake8-pie] Prevent keyword arguments duplication
   * [flake8-pie] Respect trailing comma in unnecessary-dict-kwargs (PIE804)
   * [flake8-raise] Avoid removing parentheses on ctypes.WinError
   * [isort] Avoid invalid combination of force-sort-within-types and lines-between-types
   * [isort] Ensure that from-style imports are always ordered first in __future__
   * [pycodestyle] Allow tab indentation before keyword
   * [pylint] Ignore @overrides and @overloads for too-many-positional
   * [pyupgrade] Enable printf-string-formatting fix with comments on right-hand side
   * [refurb] Make math-constant (FURB152) rule more targeted
   * [refurb] Support floating-point base in redundant-log-base (FURB163)
   * [ruff] Detect unused-asyncio-dangling-task (RUF006) on unused assignments

-------------------------------------------------------------------
Tue Dec  5 08:53:06 UTC 2023 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.1.7
 * Preview features
   * Implement multiline dictionary and list hugging for preview style
   * Implement the fix_power_op_line_length preview style
   * Use Python version to determine typing rewrite safety
   * [flake8-annotations] Enable auto-return-type involving Optional and Union annotations
   * [flake8-bandit] Implement django-raw-sql (S611)
   * [flake8-bandit] Implement tarfile-unsafe-members (S202)
   * [flake8-pyi] Implement fix for unnecessary-literal-union (PYI030)
   * [flake8-simplify] Extend dict-get-with-none-default (SIM910) to non-literals
   * [pylint] - add unnecessary-list-index-lookup (PLR1736) + autofix
   * [pylint] - implement R0202 and R0203 with autofixes
   * [pylint] Implement repeated-keyword (PLe1132)
   * [pylint] Implement too-many-positional (PLR0917)
   * [pylint] Implement unnecessary-dict-index-lookup (PLR1733)
   * [refurb] Implement redundant-log-base (FURB163)
 * Rule changes
   * [flake8-boolean-trap] Allow booleans in @override methods
   * [flake8-bugbear] Avoid B015,B018 for last expression in a cell
   * [flake8-pie] Allow ellipses for enum values in stub files
   * [flake8-pyi] Check PEP 695 type aliases for snake-case-type-alias and t-suffixed-type-alias
   * [flake8-pyi] Check for kwarg and vararg NoReturn type annotations
   * [flake8-simplify] Omit select context managers from SIM117
   * [pep8-naming] Allow Django model loads in non-lowercase-variable-in-function (N806)
   * [pycodestyle] Avoid E703 for last expression in a cell
   * [pycodestyle] Update E402 to work at cell level for notebooks
   * [pydocstyle] Avoid D100 for Jupyter Notebooks
   * [pylint] Implement fix for unspecified-encoding (PLW1514)
 * Formatter
   * Avoid unstable formatting in ellipsis-only body with trailing comment
   * Inline trailing comments for type alias similar to assignments
   * Insert trailing comma when function breaks with single argument
 * CLI
   * Update ruff check and ruff format to default to the current directory
   * Stop at the first resolved parent configuration
 * Configuration
   * [pylint] Default max-positional-args to max-args
   * [pylint] Add allow-dunder-method-names setting for bad-dunder-method-name (PLW3201)
   * [isort] Add support for from-first setting
   * [isort] Add support for length-sort settings
 * Bug fixes
   * Add support for @functools.singledispatch
   * Avoid off-by-one error in stripping noqa following multi-byte char
   * Avoid off-by-one error in with-item named expressions
   * Avoid syntax error via invalid ur string prefix
   * Avoid underflow in get_model matching
   * Avoid unnecessary index diagnostics when value is modified
   * Convert over-indentation rule to use number of characters
   * Detect implicit returns in auto-return-types
   * Fix start >= end error in over-indentation
   * Ignore @overload and @override methods for too-many-arguments checks
   * Lexer start of line is false only for Mode::Expression
   * Mark pydantic_settings.BaseSettings as having default copy semantics
   * Respect dictionary unpacking in NamedTuple assignments
   * Respect local subclasses in flake8-type-checking
   * Support type alias statements in simple statement positions
   * [flake8-annotations] Avoid filtering out un-representable types in return annotation
   * [flake8-pie] Retain extra ellipses in protocols and abstract methods
   * [flake8-pyi] Respect local enum subclasses in simple-defaults (PYI052)
   * [flake8-trio] Use correct range for TRIO115 fix
   * [flake8-trio] Use full arguments range for zero-sleep-call
   * [isort] fix: mark __main__ as first-party import
   * [pep8-naming] Avoid N806 errors for type alias statements
   * [perflint] Avoid PERF101 if there's an append in loop body
   * [pycodestyle] Allow space-before-colon after end-of-slice
   * [pydocstyle] Avoid non-character breaks in over-indentation (D208)
   * [pydocstyle] Ignore underlines when determining docstring logical lines
   * [pylint] Extend self-assigning-variable to multi-target assignments
   * [tryceratops] Avoid repeated triggers in nested tryceratops diagnostics
 * Documentation
   * Add advice for fixing RUF008 when mutability is not desired
   * Added the command to run ruff using pkgx to the installation.md
   * Document fix safety for flake8-comprehensions and some pyupgrade rules
   * Fix doc formatting for zero-sleep-call
   * Remove duplicate imports from os-stat documentation
   * Replace generated reference to MkDocs
   * Update Arch Linux package URL in installation.md
   * [flake8-pyi] Fix error in t-suffixed-type-alias (PYI043) example
   * [flake8-pyi] Improve motivation for custom-type-var-return-type (PYI019)

-------------------------------------------------------------------
Sun Nov 19 03:53:46 UTC 2023 - Ondřej Súkup <mimi.vx@gmail.com>

- switch to libalternatives
- drop cargo_config
- update _service for new cargo-vendor service
- update to 0.1.6
 * Preview features
   * [flake8-boolean-trap] Extend boolean-type-hint-positional-argument (FBT001) to include booleans in unions
   * [flake8-pie] Extend reimplemented-list-builtin (PIE807) to dict reimplementations
   * [flake8-pie] Extend unnecessary-pass (PIE790) to include ellipses (...)
   * [flake8-pie] Implement fix for unnecessary-spread (PIE800)
   * [flake8-quotes] Implement unnecessary-escaped-quote (Q004)
   * [pycodestyle] Implement fix for multiple-spaces-after-keyword (E271) and multiple-spaces-before-keyword (E272)
   * [pycodestyle] Implement fix for multiple-spaces-after-operator (E222) and multiple-spaces-before-operator (E221)
   * [pyflakes] Extend is-literal (F632) to include comparisons against mutable initializers
   * [pylint] Implement redefined-argument-from-local (PLR1704)
   * [pylint] Implement fix for unnecessary-lambda (PLW0108)
   * [refurb] Implement if-expr-min-max (FURB136)
   * [refurb] Implement math-constant (FURB152)
 * Rule changes
   * [flake8-annotations] Add autotyping-like return type inference for annotation rules
   * [flake8-future-annotations] Implement fix for future-required-type-annotation (FA102)
   * [flake8-implicit-namespace-package] Avoid missing namespace violations in scripts with shebangs
   * [pydocstyle] Update over-indentation (D208) to preserve indentation offsets when fixing overindented lines
   * [pyupgrade] Refine timeout-error-alias (UP041) to remove false positives
 * Formatter
   * Fix instability in await formatting with fluent style
   * Compare formatted and unformatted ASTs during formatter tests
   * Preserve trailing semicolon for Notebooks
 * CLI
   * Improve debug printing for resolving origin of config settings
   * Write unchanged, excluded files to stdout when read via stdin
   * Configuration
   * [isort] Support disabling sections with no-sections = true
   * [pep8-naming] Support local and dynamic class- and static-method decorators
   * [pydocstyle] Allow overriding pydocstyle convention rules
 * Bug fixes
   * Avoid syntax error via importing trio.lowlevel
   * Omit unrolled augmented assignments in PIE794
   * Slice source code instead of generating it for EM fixes
   * Allow whitespace around colon in slices for whitespace-before-punctuation (E203)
   * Use function range for no-self-use
   * F-strings doesn't contain bytes literal for PLW0129
   * Improve detection of TYPE_CHECKING blocks imported from typing_extensions or _typeshed
   * Treat display as a builtin in IPython
   * Avoid FURB113 autofix if comments are present
   * Consider the new f-string tokens for flake8-commas
   * Remove erroneous bad-dunder-name reference
   * Avoid recommending Self usages in metaclasses
   * Detect runtime-evaluated base classes defined in the current file
   * Avoid inserting trailing commas within f-strings
   * Remove incorrect deprecation label for stdout and stderr
   * Fix unnecessary parentheses in UP007 fix
   * Remove repeated and erroneous scoped settings headers in docs
   * Trim trailing empty strings when converting to f-strings
   * Fix ordering for force-sort-within-sections
   * Run unicode prefix rule over tokens
   * Update UP032 to unescape curly braces in literal parts of converted strings
   * List all ipython builtins
 * Documentation
   * Document conventions in the FAQ
   * Redirect from rule codes to rule pages in docs
   * Fix permalink to convention setting

-------------------------------------------------------------------
Mon Nov 13 14:21:57 UTC 2023 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.1.5
 * Preview features
   * [flake8-bandit] Implement mako-templates (S702)
   * [flake8-trio] Implement TRIO105
   * [flake8-trio] Implement TRIO109
   * [flake8-trio] Implement TRIO110
   * [flake8-trio] Implement TRIO115
   * [refurb] Implement type-none-comparison (FURB169)
   * Flag all comparisons against builtin types in E721
   * Make SIM118 fix as safe when the expression is a known dictionary
 * Formatter
   * Fix multiline lambda expression statement formatting
 * CLI
   * Add hidden --extension to override inference of source type from file extension
   * Configuration
   * Account for selector specificity when merging extend_unsafe_fixes and override extend_safe_fixes
   * Add support for disabling cache with RUFF_NO_CACHE environment variable
 * Bug fixes
   * [E721] Flag comparisons to memoryview
   * Allow collapsed-ellipsis bodies in other statements
   * Avoid D301 autofix for u prefixed strings
   * Only flag flake8-trio rules when trio import is present
   * Reject more syntactically invalid Python programs
   * Avoid raising TRIO115 violations for trio.sleep(...) calls with non-number values
   * Fix F841 false negative on assignment to multiple variables
 * Documentation
   * Fix link to isort known-first-party
   * Add notes on fix safety to a few rules
   * Add missing toml config tabs
   * Add instructions for configuration of Emacs
   * Improve detail link contrast in dark mode
   * Fix typo in example
   * Added tabs for configuration files in the documentation
   * Recommend project.requires-python over target-version
   * Add singleton escape hatch to B008 documentation
   * Fix tab configuration docs

-------------------------------------------------------------------
Tue Nov  7 11:29:10 UTC 2023 - Ondřej Súkup <mimi.vx@gmail.com>

- Update to 0.1.4
 * Preview features
   * [flake8-trio] Implement timeout-without-await (TRIO001)
   * [numpy] Implement NumPy 2.0 migration rule (NPY200)
   * [pylint] Implement bad-open-mode (W1501)
   * [pylint] Implement import-outside-toplevel (C0415) rule
   * [pylint] Implement useless-with-lock (W2101)
   * [pyupgrade] Implement timeout-error-alias (UP041)
   * [refurb] Implement isinstance-type-none (FURB168)
   * Detect confusable Unicode-to-Unicode units in RUF001, RUF002, and RUF003
   * Add newline after module docstrings in preview style
 * Formatter
   * Add a note on line-too-long to the formatter docs
   * Preserve trailing statement semicolons when using fmt: skip
   * Preserve trailing semicolons when using fmt: off
   * Avoid duplicating linter-formatter compatibility warnings
   * Avoid inserting a newline after function docstrings
   * Insert newline between docstring and following own line comment
   * Split tuples in return positions by comma first
   * Avoid treating byte strings as docstrings
   * Add --line-length option to format command
   * Avoid parenthesizing unsplittable because of comments
 * CLI
   * Add --output-format to ruff rule and ruff linter
 * Bug fixes
   * Respect --force-exclude in lint.exclude and format.exclude
   * Respect --extend-per-file-ignores on the CLI
   * Extend bad-dunder-method-name to permit __index__
   * Fix panic with 8 in octal escape
   * Avoid raising D300 when both triple quote styles are present
   * Consider unterminated f-strings in FStringRanges
   * Avoid including literal shell=True for truthy, non-True diagnostics
   * Avoid triggering single-element test for starred expressions
   * Detect and ignore Jupyter automagics
   * Fix invalid E231 error with f-strings
   * Avoid triggering NamedTuple rewrite with starred annotation
   * Avoid un-setting bracket flag in logical lines
   * Place 'r' prefix before 'f' for raw format strings
   * Remove trailing periods from NumPy 2.0 code actions
   * Fix bug where PLE1307 was raised when formatting %c with characters
   * Remove unicode flag from comparable
   * Improve B015 message
   * Use fixedOverflowWidgets for playground popover
   * Mark byte_bounds as a non-backwards-compatible NumPy 2.0 change
 * Internals
   * Add a dedicated cache directory per Ruff version
   * Allow selective caching for --fix and --diff
   * Improve performance of comment parsing
   * Improve performance of string parsing
   * Use a dedicated sort key for isort import sorting

-------------------------------------------------------------------
Fri Oct 27 07:53:47 UTC 2023 - Ondřej Súkup <mimi.vx@gmail.com>

- Update to 0.1.3
 * Formatter
   * Avoid space around pow for None, True and False
   * Avoid sorting all paths in the format command
   * Insert necessary blank line between class and leading comments
   * Avoid introducing new parentheses in annotated assignments
   * Refine the warnings about incompatible linter options
   * Add test and basic implementation for formatter preview mode
   * Refine warning about incompatible isort settings
   * Only omit optional parentheses for starting or ending with parentheses
   * Use source type to determine parser mode for formatting
   * Don't warn about magic trailing comma when isort.force-single-line is true
   * Use SourceKind::diff for formatter
   * Fix fmt:off with trailing child comment
   * Formatter parentheses support for IpyEscapeCommand
 * Linter
   * [pylint] Add buffer methods to bad-dunder-method-name (PLW3201) exclusions
   * Match rule prefixes from external codes setting in unused-noqa
   * Use line-length setting for isort in lieu of pycodestyle.max-line-length
   * Update fix for unnecessary-paren-on-raise-exception to unsafe for unknown types
   * Correct quick fix message for W605
 * Documentation
   * Fix typo in max-doc-length documentation
   * Improve documentation around linter-formatter conflicts
   * Fix link to error suppression documentation in unused-noqa
   * Add external option to unused-noqa documentation
   * Add title attribute to icons
   * Clarify unsafe case in RSE102
   * Fix skipping formatting examples
   * docs: fix name of magic-trailing-comma option in README
   * Add note about scope of rule changing in versioning policy
   * Document: Fix default lint rules
   * Fix a wrong setting in configuration.md
   * Fix misspelled TOML headers in the tutorial

-------------------------------------------------------------------
Wed Oct 25 12:38:40 UTC 2023 - ecsos <ecsos@opensuse.org>

- Add %{?sle15_python_module_pythons}

-------------------------------------------------------------------
Wed Oct 25 11:04:42 UTC 2023 - Ondřej Súkup <mimi.vx@gmail.com>

- Update to 0.1.2
 * This release includes the Beta version of the Ruff formatter — an extremely
     fast, Black-compatible Python formatter
 * Preview features
   * [pylint] Implement non-ascii-module-import (C2403)
   * [pylint] implement non-ascii-name (C2401)
   * [pylint] Implement unnecessary-lambda (W0108)
   * [refurb] Implement read-whole-file (FURB101)
   * Add fix for E223, E224, and E242
   * Add fix for E225, E226, E227, and E228
   * Add fix for E252
   * Add fix for E261
   * Add fix for E273 and E274
   * Add fix for E275
   * Update SIM401 to catch ternary operations
   * Update E721 to allow is and is not for direct type comparisons
 * Rule changes
   * Add backports.strenum to deprecated-imports
   * Update SIM112 to ignore https_proxy, http_proxy, and no_proxy
   * Update fix for literal-membership (PLR6201) to be unsafe
   * Update fix for  mutable-argument-defaults (B006) to be unsafe
 * Formatter
   * Change line-ending default to auto
   * Respect parenthesized generators in has_own_parentheses
   * Add caching to formatter
   * Remove --line-length option from format command
   * Add formatter to line-length documentation
   * Warn about incompatible formatter options
   * Fix range of unparenthesized tuple subject in match statement
   * Remove experimental formatter warning
   * Don't move type param opening parenthesis comment
   * Update versions in format benchmark script
   * Avoid loading files for cached format results
 * CLI
   * Show the ruff format command in help menus
   * Add ruff version command with long version display
   * Configuration
   * New pycodestyle.max-line-length option
 * Bug fixes
   * Detect sys.version_info slices in outdated-version-block
   * Avoid if-else simplification for TYPE_CHECKING blocks
   * Avoid false-positive print separator diagnostic with starred argument
 * Documentation
   * Fix message for too-many-arguments lint
   * Fix extend-unsafe-fixes and extend-safe-fixes example
   * Add links to flake8-import-conventions options
   * Rework the documentation to incorporate the Ruff formatter
   * Fix Options JSON schema description
   * Fix typo (pytext -> pytest)
   * Improve magic-value-comparison example in docs

-------------------------------------------------------------------
Fri Oct 20 10:09:22 UTC 2023 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.1.1
 * Rule changes
   * Add unsafe fix for escape-sequence-in-docstring (D301)
 * Configuration
   * Respect #(deprecated) attribute in configuration options
   * Add [format|lint].exclude options
   * Respect tab-size setting in formatter
   * Add lint.preview
 * Preview features
   * [pylint] Implement literal-membership (PLR6201)
   * [pylint] Implement too-many-boolean-expressions (PLR0916)
   * [pylint] Implement misplaced-bare-raise (E0704)
   * [pylint] Implement global-at-module-level (W0604)
   * [pylint] Implement unspecified-encoding (PLW1514)
   * Add fix for triple-single-quotes (D300)
 * Formatter
   * New code style badge for ruff format
   * Fix comments outside expression parentheses
   * Add --target-version to ruff format
   * Skip over parentheses when detecting in keyword
   * Add --diff option to ruff format
   * Insert newline after nested function or class statements
   * Use pass over ellipsis in non-function/class contexts
 * Bug fixes
   * Lazily evaluate all PEP 695 type alias values
   * Avoid failed assertion when showing fixes from stdin
   * Avoid flagging HTTP and HTTPS literals in urllib-open
   * Avoid flagging bad-dunder-method-name for _
   * Remove Python 2-only methods from URLOpen audit
   * Use set bracket replacement for iteration-over-set to preserve whitespace and comments
 * Documentation
   * Update tutorial to match revised Ruff defaults
   * Update rule B005 docs
   * Update GitHub actions example in docs to use --output-format
   * Document lint.preview and format.preview
   * Clarify that new rules should be added to RuleGroup::Preview.

-------------------------------------------------------------------
Tue Oct 17 10:38:21 UTC 2023 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.1.0
 * Breaking changes
  + Unsafe fixes are no longer displayed or applied without opt-in
  + Drop formatting specific rules from the default set
  + The deprecated format setting has been removed
  + The format setting cannot be used to configure the output format, use output-format instead
  + The RUFF_FORMAT environment variable is ignored, use RUFF_OUTPUT_FORMAT instead
  + The --format option has been removed from ruff check, use --output-format instead
 * Rule changes
  + Extend reimplemented-starmap (FURB140) to catch calls with a single and starred argument
  + Improve cases covered by RUF015
  + Update SIM15 to allow open followed by close
  + Respect msgspec.Struct default-copy semantics in RUF012
  + Add sqlalchemy methods to `flake8-boolean-trap`` exclusion list
  + Add fix for PLR1714
  + Add fix for PIE804
  + Add fix for PLC0208
  + Add fix for PYI055
  + Update non-pep695-type-alias to require --unsafe-fixes outside of stub files
  + Improve fix message for UP018
  + Update PLW3201 to support Enum sunder names
 * Preview features
  + Only show warnings for empty preview selectors when enabling rules
  + Add unnecessary-key-check to simplify key in dct and dct[key] to dct.get(key)
  + Add assignment-in-assert to prevent walrus expressions in assert statements
  + [refurb] Add single-item-membership-test (FURB171)
  + [pylint] Add and-or-ternary (R1706)
  + New rules are added in preview.
 * Configuration
  + Add unsafe-fixes setting
  + Add extend-safe-fixes and extend-unsafe-fixes for promoting and demoting fixes
 * CLI
  + Added --unsafe-fixes option for opt-in to display and apply unsafe fixes
  + Fix use of deprecated --format option in warning
  + Show changed files when running under --check
  + Write summary messages to stderr when fixing via stdin instead of omitting them
  + Update fix summary message in check --diff to include unsafe fix hints
  + Add notebook cell field to JSON output format
  + Rename applicability levels to Safe, Unsafe, and Display
 * Bug fixes
  + Fix bug where f-strings were allowed in match pattern literal
  + Fix SIM110 with a yield in the condition
  + Preserve trailing comments in C414 fixes
  + Check sequence type before triggering unnecessary-enumerate len suggestion
  + Use correct start location for class/function clause header
  + Fix incorrect fixes for SIM101
  + Format comment before parameter default correctly
  + Fix E251 false positive inside f-strings
  + Allow bindings to be created and referenced within annotations
  + Show per-cell diffs when analyzing notebooks over stdin
  + Avoid curly brace escape in f-string format spec
  + Fix lexing single-quoted f-string with multi-line format spec
  + Consider nursery rules to be in-preview for ruff rule
  + Report precise location for invalid conversion flag
  + Visit pattern match guard as a boolean test
  + Respect --unfixable in ISC rules
  + Fix edge case with PIE804
  + Show custom message in PTH118 for Path.joinpath with starred arguments
  + Fix false negative in outdated-version-block when using greater than comparisons
  + Avoid converting f-strings within Django gettext calls
  + Fix false positive in PLR6301
  + Treat type aliases as typing-only expressions e.g. resolves false positive in TCH004
  + Resolve cache-dir relative to project root
  + Respect subscripted base classes in type-checking rules e.g. resolves false positive in TCH003
  + Fix JSON schema limit for line-length
  + Fix commented-out coalesce keyword
 * Documentation
  + Document reimplemented-starmap performance effects
  + Default to following the system dark/light mode
  + Add documentation for fixes
  + Fix typo in docs of PLR6301
  + Update UP038 docs to note that it results in slower code
  + crlf -> cr-lf
  + Add an example of an unsafe fix
  + Fix documented examples for unnecessary-subscript-reversal
  + Correct error in tuple example in ruff formatter docs
  + Add versioning policy to documentation
  + Fix invalid code in FURB177 example
 * Formatter
  + Less scary ruff format message
  + Remove spaces from import statements
  + Formatter quoting for f-strings with triple quotes
  + Update ruff_python_formatter generate.py comment
  + Document one-call chaining deviation
  + Allow f-string modifications in line-shrinking cases
  + Add trailing comment deviation to README
  + Add trailing zero between dot and exponential
  + Force parentheses for power operations in unary expressions
 * Playground
  + Fix playground Quick Fix action

-------------------------------------------------------------------
Fri Oct 13 16:22:47 UTC 2023 - Ondřej Súkup <mimi.vx@gmail.com>

- initial package
