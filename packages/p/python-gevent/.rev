<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>380bf08332b7c5965ca755778f71b892</srcmd5>
    <version>0.13.6</version>
    <time>1322215973</time>
    <user>coolo</user>
    <comment>please add</comment>
    <requestid>93128</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>7dcb523fd91a374c692b95037fbd25d4</srcmd5>
    <version>0.13.6</version>
    <time>1323194139</time>
    <user>coolo</user>
    <comment>replace license with spdx.org variant</comment>
  </revision>
  <revision rev="3" vrev="3">
    <srcmd5>e5604a1c9cdd1b3aa20a1b0af302fc1e</srcmd5>
    <version>0.13.6</version>
    <time>1334641724</time>
    <user>coolo</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>113767</requestid>
  </revision>
  <revision rev="4" vrev="5">
    <srcmd5>e5604a1c9cdd1b3aa20a1b0af302fc1e</srcmd5>
    <version>0.13.6</version>
    <time>1340184055</time>
    <user>adrianSuSE</user>
    <comment>branched from openSUSE:Factory</comment>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>379b4c10794bc64362fe433ad7c06880</srcmd5>
    <version>0.13.7</version>
    <time>1340726080</time>
    <user>coolo</user>
    <comment>- Update to version 0.13.7:
  + Fixed #94: fallback to buffer if memoryview fails in _get_memory on
    python 2.7.
  + Fixed #103: ``Queue(None).full()`` returns ``False`` now (previously
    it returned ``True``).
  + Fixed #112: threading._sleep is not patched.
  + Fixed #115: _dummy gets unexpected Timeout arg.</comment>
    <requestid>126119</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>4a5479ab736ff1a729b21eb2abcffb7a</srcmd5>
    <version>0.13.8</version>
    <time>1351688624</time>
    <user>coolo</user>
    <comment>updated to version 0.13.8 (forwarded request 139481 from douglarek)</comment>
    <requestid>139689</requestid>
  </revision>
  <revision rev="7" vrev="3">
    <srcmd5>4a5479ab736ff1a729b21eb2abcffb7a</srcmd5>
    <version>0.13.8</version>
    <time>1359110034</time>
    <user>adrianSuSE</user>
    <comment>Split 12.3 from Factory</comment>
  </revision>
  <revision rev="8" vrev="5">
    <srcmd5>4a5479ab736ff1a729b21eb2abcffb7a</srcmd5>
    <version>0.13.8</version>
    <time>1379664184</time>
    <user>adrianSuSE</user>
    <comment>Split 13.1 from Factory</comment>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>501796ac15af0fd15de7b38869a31670</srcmd5>
    <version>1.0</version>
    <time>1387174134</time>
    <user>coolo</user>
    <comment>- Update to version 1.0
  + pywsgi: Pass copy of error list instead of direct reference
  + Ignore the autogenerated doc/gevent.*.rst files.
  + Fix cythonpp.py on Windows.
  + Remove gevent.run (use gevent.wait). (forwarded request 210930 from posophe)</comment>
    <requestid>210931</requestid>
  </revision>
  <revision rev="10" vrev="2">
    <srcmd5>24ae9af75cb5a3f4bee0bbd58bf8b043</srcmd5>
    <version>1.0</version>
    <time>1403176806</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>237623</requestid>
  </revision>
  <revision rev="11" vrev="4">
    <srcmd5>24ae9af75cb5a3f4bee0bbd58bf8b043</srcmd5>
    <version>1.0</version>
    <time>1409302875</time>
    <user>adrianSuSE</user>
    <comment>Split 13.2 from Factory</comment>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>7e0bbb0ccf40454e84b41c8425b28bbe</srcmd5>
    <version>1.0.1</version>
    <time>1416505394</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>262200</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>32a263801eab6f37e6640b5088e6d33f</srcmd5>
    <version>1.0.2</version>
    <time>1435870254</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>314748</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>fab83a1af9b99959f27c7beebef08b05</srcmd5>
    <version>1.1rc3</version>
    <time>1454352969</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>356674</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>d4224de87c574d29cb9898d18253d2b6</srcmd5>
    <version>1.1.0</version>
    <time>1458120922</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>369777</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>d747e949675f015751f20985387fa4db</srcmd5>
    <version>1.1.2</version>
    <time>1485383004</time>
    <user>dimstar_suse</user>
    <comment>- update to 1.1.2:
  * Python 2: ``sendall`` on a non-blocking socket could spuriously fail
    with a timeout.
  * If ``sys.stderr`` has been monkey-patched (not recommended),
    exceptions that the hub reports aren't lost and can still be caught.
    Reported in :issue:`825` by Jelle Smet.
  * :class:`selectors.SelectSelector` is properly monkey-patched
    regardless of the order of imports. Reported in :issue:`835` by
    Przemysław Węgrzyn.
  * Python 2: ``reload(site)`` no longer fails with a ``TypeError`` if
    gevent has been imported. Reported in :issue:`805` by Jake Hilton.
  * Nested callbacks that set and clear an Event no longer cause
    ``wait`` to return prematurely. Reported in :issue:`771` by Sergey
    Vasilyev.
  * Fix build on Solaris 10. Reported in :issue:`777` by wiggin15.
  * The ``ref`` parameter to :func:`gevent.os.fork_and_watch` was being ignored.
  * Python 3: :class:`gevent.queue.Channel` is now correctly iterable, instead of
    raising a :exc:`TypeError`.
  * Python 3: Add support for :meth:`socket.socket.sendmsg`,
    :meth:`socket.socket.recvmsg` and :meth:`socket.socket.recvmsg_into`
    on platforms where they are defined. Initial :pr:`773` by Jakub
    Klama.</comment>
    <requestid>445609</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>0ea0c16842594da71ae280c879d62e4c</srcmd5>
    <version>1.2.1</version>
    <time>1493384868</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>489463</requestid>
  </revision>
  <revision rev="18" vrev="2">
    <srcmd5>a609721194f217811767a1cf2a4b6c15</srcmd5>
    <version>1.2.1</version>
    <time>1496927055</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>501810</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>66e6114892d76b643e1306efe7c116fd</srcmd5>
    <version>1.2.2</version>
    <time>1510761481</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>541223</requestid>
  </revision>
  <revision rev="20" vrev="2">
    <srcmd5>4f31f1cd5e26a30d26b84645ce8ad1d1</srcmd5>
    <version>1.2.2</version>
    <time>1511517234</time>
    <user>dimstar_suse</user>
    <comment>- add greenlet dependency to Python 3 as well (bsc#1055386)</comment>
    <requestid>544433</requestid>
  </revision>
  <revision rev="21" vrev="3">
    <srcmd5>38736ce63e6c2df1e53f17c3727f5d5e</srcmd5>
    <version>1.2.2</version>
    <time>1516804306</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>568591</requestid>
  </revision>
  <revision rev="22" vrev="4">
    <srcmd5>8a6490d6822265ee83ba7c6076507038</srcmd5>
    <version>1.2.2</version>
    <time>1520253434</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>580803</requestid>
  </revision>
  <revision rev="23" vrev="5">
    <srcmd5>8f5afab9b1c3daf9a58a4162a3ce61fb</srcmd5>
    <version>1.2.2</version>
    <time>1520415585</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>583698</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>d3a37142bea1a61cfc1c7238981a6e83</srcmd5>
    <version>1.3.3</version>
    <time>1530303774</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>616610</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>0da74ec278ea6853077e150fa9df8aab</srcmd5>
    <version>1.3.5</version>
    <time>1533887219</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>627917</requestid>
  </revision>
  <revision rev="26" vrev="2">
    <srcmd5>9a323119e4446a35546e54d285641387</srcmd5>
    <version>1.3.5</version>
    <time>1547539854</time>
    <user>dimstar_suse</user>
    <comment>- Switch the condition logic to match the previous changelog

- Use &quot;Requires:&quot; instead of &quot;Recommends:&quot; on older Red Hat platforms</comment>
    <requestid>664024</requestid>
  </revision>
  <revision rev="27" vrev="1">
    <srcmd5>8f0a664e42abbd873a157e7a23fd0f06</srcmd5>
    <version>1.4.0</version>
    <time>1549140346</time>
    <user>coolo</user>
    <comment>- Version update to 1.4.0:
  * generate with cython 0.29
  * Refactored the gevent test runner and test suite to make them more reusable. In particular, the tests are now run with python -m gevent.tests. See issue #1293.
  * Formatting run info no longer includes gevent.local.local objects that have no value in the greenlet. See issue #1275.
  * Fixed negative length in pywsgi’s Input read functions for non chunked body. Reported in issue #1274 by tzickel.
  * Fix opening files in text mode in CPython 2 on Windows by patching libuv. See issue #1282 reported by wiggin15.
  * gevent now depends on greenlet 0.4.14 or above.
  * gevent.local.local subclasses correctly supports @staticmethod functions. Reported by Brendan Powers in issue #1266.
- Do NOT bundle c-ares and libev</comment>
    <requestid>670298</requestid>
  </revision>
  <revision rev="28" vrev="2">
    <srcmd5>8e1a18bee62a9ab55a8a506b5a694407</srcmd5>
    <version>1.4.0</version>
    <time>1549630057</time>
    <user>coolo</user>
    <comment></comment>
    <requestid>671955</requestid>
  </revision>
  <revision rev="29" vrev="3">
    <srcmd5>47cadd1c895f7a8d43aa23d6db7ab142</srcmd5>
    <version>1.4.0</version>
    <time>1551024161</time>
    <user>coolo</user>
    <comment>- Skip the SSL tests as they just only triggers false positives
  with hope upstream sorts it out someday

- Switch to pkgconfig requirements as c-ares was renamed between
  SLE12 and SLE15</comment>
    <requestid>677113</requestid>
  </revision>
  <revision rev="30" vrev="4">
    <srcmd5>67a94653a9dbe669dc0b1109fa04d801</srcmd5>
    <version>1.4.0</version>
    <time>1555237286</time>
    <user>dimstar_suse</user>
    <comment>- Switch off type_https test as it fails with new Python 2.7.16
- Clean up the SPEC file.
</comment>
    <requestid>693757</requestid>
  </revision>
  <revision rev="31" vrev="1">
    <srcmd5>84273eb6d28c6d3d57ea8f00a1e5c699</srcmd5>
    <version>1.5.0~a3</version>
    <time>1583702458</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>766423</requestid>
  </revision>
  <revision rev="32" vrev="1">
    <srcmd5>09839fdbe8fe15415feb1a08244a601e</srcmd5>
    <version>20.9.0</version>
    <time>1603961230</time>
    <user>dimstar_suse</user>
    <comment>- Disable more tests failing for Python 3.6
- Don't bother with python2 tests
- Update to version 20.9.0 (2020-09-22)
  + Features
    * The embedded libev is now asked to detect the availability of
      clock_gettime and use the realtime and/or monotonic clocks,
      if they are available.
    * On Linux, this can reduce the number of system calls libev
      makes. Originally provided by Josh Snyder. See
      :issue:`issue1648`.
  + Bugfixes
    * On CPython, depend on greenlet &gt;= 0.4.17. This version is
      binary incompatible with earlier releases on CPython 3.7 and
      later.
    * On Python 3.7 and above, the module gevent.contextvars is no
      longer monkey-patched into the standard library. contextvars
      are now both greenlet and asyncio task local. See
      :issue:`1656`. See :issue:`issue1674`.
    * The DummyThread objects created automatically by certain
      operations when the standard library threading module is
      monkey-patched now match the naming convention the standard
      library uses (&quot;Dummy-12345&quot;). Previously (since gevent 1.2a2)
      they used &quot;DummyThread-12345&quot;. See :issue:`1659`.
    * Fix compatibility with dnspython 2.
    * Caution!
    * This currently means that it can be imported. But it cannot
      yet be used. gevent has a pinned dependency on dnspython &lt; 2
      for now.
    * See :issue:`1661`.
- Update to version 20.6.2 (2020-06-16)
  + Features
    * It is now possible to build and use the embedded libuv on a
      Cygwin platform.
    * Note that Cygwin is not an officially supported platform of
      upstream libuv and is not tested by gevent, so the actual
      working status is unknown, and this may bitrot in future
      releases.
    * Thanks to berkakinci for the patch. See :issue:`issue1645`.
  + Bugfixes
    * Relax the version constraint for psutil on PyPy.
    * Previously it was pinned to 5.6.3 for PyPy2, except for on
      Windows, where it was excluded. It is now treated the same as
      CPython again. See :issue:`issue1643`.
- Update to version 20.6.1 (2020-06-10)
  + Features
    * gevent's CI is now tested on Ubuntu 18.04 (Bionic), an
      upgrade from 16.04 (Xenial). See :issue:`1623`.
  + Bugfixes
    * On Python 2, the dnspython resolver can be used without
      having selectors2 installed. Previously, an ImportError would
      be raised. See :issue:`issue1641`.
    * Python 3 gevent.ssl.SSLSocket objects no longer attempt to
      catch ConnectionResetError and treat it the same as an
      SSLError with SSL_ERROR_EOF (typically by suppressing it).
    * This was a difference from the way the standard library
      behaved (which is to raise the exception). It was added to
      gevent during early testing of OpenSSL 1.1 and TLS 1.3. See
      :issue:`1637`.
- Update to version 20.6.0 (2020-06-06)
  + Features
    * Add gevent.selectors containing GeventSelector. This selector
      implementation uses gevent details to attempt to reduce
      overhead when polling many file descriptors, only some of
      which become ready at any given time.
    * This is monkey-patched as selectors.DefaultSelector by
      default.
    * This is available on Python 2 if the selectors2 backport is
      installed. (This backport is installed automatically using
      the recommended extra.) When monkey-patching, selectors is
      made available as an alias to this module. See :issue:`1532`.
    * Depend on greenlet &gt;= 0.4.16. This is required for CPython
      3.9 and 3.10a0. See :issue:`1627`.
    * Add support for Python 3.9.
    * No binary wheels are available yet, however. See
      :issue:`1628`.
  + Bugfixes
    * gevent.socket.create_connection and
      gevent.socket.socket.connect no longer ignore IPv6 scope IDs.
    * Any IP address (IPv4 or IPv6) is no longer subject to an
      extra call to getaddrinfo. Depending on the resolver in use,
      this is likely to change the number and order of greenlet
      switches. (On Windows, in particular test cases when there
      are no other greenlets running, it has been observed to lead
      to LoopExit in scenarios that didn't produce that before.)
      See :issue:`1634`.
- Update to version 20.5.2 (2020-05-28)
  + Bugfixes
    * Forking a process that had use the threadpool to run tasks
      that created their own hub would fail to clean up the
      threadpool by raising greenlet.error. See :issue:`1631`.
- Update to version 20.5.1 (2020-05-26)
  + Features
    * Waiters on Event and Semaphore objects that call wait() or
      acquire(), respectively, that find the Event already set, or
      the Semaphore available, no longer &quot;cut in line&quot; and run
      before any previously scheduled greenlets. They now run in
      the order in which they arrived, just as waiters that had to
      block in those methods do. See :issue:`1520`.
    * Update tested PyPy version from 7.3.0 to 7.3.1 on Linux. See
      :issue:`1569`.
    * Make zope.interface, zope.event and (by extension) setuptools
      required dependencies. The events install extra now does
      nothing and will be removed in 2021. See :issue:`1619`.
    * Update bundled libuv from 1.36.0 to 1.38.0. See
      :issue:`1621`.
    * Update bundled c-ares from 1.16.0 to 1.16.1.
    * On macOS, stop trying to adjust c-ares headers to make them
      universal. See :issue:`1624`.
  + Bugfixes
    * Make gevent locks that are monkey-patched usually work across
      native threads as well as across greenlets within a single
      thread. Locks that are only used in a single thread do not
      take a performance hit. While cross-thread locking is
      relatively expensive, and not a recommended programming
      pattern, it can happen unwittingly, for example when using
      the threadpool and logging.
    * Before, cross-thread lock uses might succeed, or, if the lock
      was contended, raise greenlet.error. Now, in the contended
      case, if the lock has been acquired by the main thread at
      least once, it should correctly block in any thread,
      cooperating with the event loop of both threads. In certain
      (hopefully rare) cases, it might be possible for contended
      case to raise LoopExit when previously it would have raised
      greenlet.error; if these cases are a practical concern,
      please open an issue.
    * Also, the underlying Semaphore always behaves in an atomic
      fashion (as if the GIL was not released) when PURE_PYTHON is
      set. Previously, it only correctly did so on PyPy. See
      :issue:`issue1437`.
    * Rename gevent's C accelerator extension modules using a
      prefix to avoid clashing with other C extensions. See
      :issue:`1480`.
    * Using gevent.wait on an Event more than once, when that Event
      is already set, could previously raise an AssertionError.
    * As part of this, exceptions raised in the main greenlet will
      now include a more complete traceback from the failing
      greenlet. See :issue:`1540`.
    * Avoid closing the same Python libuv watcher IO object twice.
      Under some circumstances (only seen on Windows), that could
      lead to program crashes. See :issue:`1587`.
    * gevent can now be built using Cython 3.0a5 and newer. The
      PyPI distribution uses this version.
    * The libev extension was incompatible with this. As part of
      this, certain internal, undocumented names have been changed.
    * (Technically, gevent can be built with Cython 3.0a2 and
      above. However, up through 3.0a4 compiling with Cython 3
      results in gevent's test for memory leaks failing. See this
      Cython issue.) See :issue:`1599`.
    * Destroying a hub after joining it didn't necessarily clean up
      all resources associated with the hub, especially if the hub
      had been created in a secondary thread that was exiting. The
      hub and its parent greenlet could be kept alive.
    * Now, destroying a hub drops the reference to the hub and
      ensures it cannot be switched to again. (Though using a new
      blocking API call may still create a new hub.)
    * Joining a hub also cleans up some (small) memory resources
      that might have stuck around for longer before as well. See
      :issue:`1601`.
    * Fix some potential crashes under libuv when using
      gevent.signal_handler. The crashes were seen running the test
      suite and were non-deterministic. See :issue:`1606`.
- Update to version 20.5.0 (2020-05-01)
  + Features
    * Update bundled c-ares to version 1.16.0. Changes. See
      :issue:`1588`.
    * Update all the bundled config.guess and config.sub scripts.
      See :issue:`1589`.
    * Update bundled libuv from 1.34.0 to 1.36.0. See
      :issue:`1597`.
  + Bugfixes
    * Use ares_getaddrinfo instead of a manual lookup.
    * This requires c-ares 1.16.0.
    * Note that this may change the results, in particular their
      order.
    * As part of this, certain parts of the c-ares extension were
      adapted to use modern Cython idioms.
    * A few minor errors and discrepancies were fixed as well, such
      as gethostbyaddr('localhost') working on Python 3 and failing
      on Python 2. The DNSpython resolver now raises the expected
      TypeError in more cases instead of an AttributeError. See
      :issue:`1012`.
    * The c-ares and DNSPython resolvers now raise exceptions much
      more consistently with the standard resolver. Types and
      errnos are substantially more likely to match what the
      standard library produces.
    * Depending on the system and configuration, results may not
      match exactly, at least with DNSPython. There are still some
      rare cases where the system resolver can raise herror but
      DNSPython will raise gaierror or vice versa. There doesn't
      seem to be a deterministic way to account for this. On PyPy,
      getnameinfo can produce results when CPython raises
      socket.error, and gevent's DNSPython resolver also raises
      socket.error.
    * In addition, several other small discrepancies were
      addressed, including handling of localhost and broadcast host
      names.
    * Note
    * This has been tested on Linux (CentOS and Ubuntu), macOS, and
      Windows. It hasn't been tested on other platforms, so results
      are unknown for them. The c-ares support, in particular, is
      using some additional socket functions and defines. Please
      let the maintainers know if this introduces issues.
    * See :issue:`1459`.
- Update to version 20.04.0 (2020-04-22)
  + Features
    * Let CI (Travis and Appveyor) build and upload release wheels
      for Windows, macOS and manylinux. As part of this, (a subset
      of) gevent's tests can run if the standard library's
      test.support module has been stripped. See :issue:`1555`.
    * Update tested PyPy version from 7.2.0 on Windows to 7.3.1.
      See :issue:`1569`.
  + Bugfixes
    * Fix a spurious warning about watchers and resource leaks on
      libuv on Windows. Reported by Stéphane Rainville. See
      :issue:`1564`.
    * Make monkey-patching properly remove select.epoll and
      select.kqueue. Reported by Kirill Smelkov. See :issue:`1570`.
    * Make it possible to monkey-patch :mod:`contextvars` before
      Python 3.7 if a non-standard backport that uses the same name
      as the standard library does is installed. Previously this
      would raise an error. Reported by Simon Davy. See
      :issue:`1572`.
    * Fix destroying the libuv default loop and then using the
      default loop again. See :issue:`1580`.
    * libuv loops that have watched children can now exit.
      Previously, the SIGCHLD watcher kept the loop alive even if
      there were no longer any watched children. See :issue:`1581`.
  + Deprecations and Removals
    * PyPy no longer uses the Python allocation functions for libuv
      and libev allocations. See :issue:`1569`.
- Use the system libev by default
- Remove fix-tests.patch
- Remove use-libev-cffi.patch
- Greatly reduce the list of non functional tests
- Add fix-no-return-in-nonvoid-function.patch, applied for 15.1 and
  below in order to not fail the build
- Add missing runtime dependencies:
  python-zope.event and python-zope.interface
</comment>
    <requestid>840263</requestid>
  </revision>
  <revision rev="33" vrev="2">
    <srcmd5>836f47279dde0559eb9cfdd00cc70df9</srcmd5>
    <version>20.9.0</version>
    <time>1608112749</time>
    <user>dimstar_suse</user>
    <comment>- mock dependency was actually not needed at all (forwarded request 855335 from mcepl)</comment>
    <requestid>855348</requestid>
  </revision>
  <revision rev="34" vrev="1">
    <srcmd5>2fe7aa744dd7c19e607b431ae326b0b8</srcmd5>
    <version>21.1.2</version>
    <time>1613511232</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>871408</requestid>
  </revision>
  <revision rev="35" vrev="2">
    <srcmd5>9dd04ce68cb20e52dbd0658540d7b99b</srcmd5>
    <version>21.1.2</version>
    <time>1627898691</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>908926</requestid>
  </revision>
  <revision rev="36" vrev="3">
    <srcmd5>15168d43e74571b932ac6b8d11c36e17</srcmd5>
    <version>21.1.2</version>
    <time>1637535107</time>
    <user>dimstar_suse</user>
    <comment>- Skip test__threading_monkey_in_thread as it breaks with Python 3.9.9.</comment>
    <requestid>932425</requestid>
  </revision>
  <revision rev="37" vrev="1">
    <srcmd5>5682fd0cdb7751022eaf5685526de38d</srcmd5>
    <version>21.12.0</version>
    <time>1639685934</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>940551</requestid>
  </revision>
  <revision rev="38" vrev="1">
    <srcmd5>85bde6fdec24d4f63949feca8c0357f3</srcmd5>
    <version>22.10.1</version>
    <time>1666089852</time>
    <user>dimstar_suse</user>
    <comment>- update to 22.10.0:
  * Update bundled libuv to 1.44.2.
    See :issue:`1913`.
  * Upgrade embedded c-ares to 1.18.1.
  * Upgrade bundled libuv to 1.42.0 from 1.40.0.
  * Added preliminary support for Python 3.11 (rc2 and later).
    Some platforms may or may not have binary wheels at this time.
    .. important:: Support for legacy versions of Python, including 2.7
                   and 3.6, will be ending soon. The
                   maintenance burden has become too great and the
                   maintainer's time is too limited.
  
                   Ideally, there will be a release of gevent compatible
                   with a final release of greenlet 2.0 that still
                   supports those legacy versions, but that may not be
                   possible; this may be the final release to support them.
    :class:`gevent.threadpool.ThreadPool` can now optionally expire idle
    threads. This is used by default in the implicit thread pool used for
    DNS requests and other user-submitted tasks; other uses of a
    thread-pool need to opt-in to this.
    See :issue:`1867`.
  * Truly disable the effects of compiling with ``-ffast-math``.</comment>
    <requestid>1011260</requestid>
  </revision>
  <revision rev="39" vrev="2">
    <srcmd5>7a59504bf56b7208e99e77ef73108d0a</srcmd5>
    <version>22.10.1</version>
    <time>1679068943</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1072130</requestid>
  </revision>
  <revision rev="40" vrev="3">
    <srcmd5>a9e3c3ea43dc0b2f7d8041ad9ac8b0df</srcmd5>
    <version>22.10.1</version>
    <time>1682193643</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1081906</requestid>
  </revision>
  <revision rev="41" vrev="1">
    <srcmd5>b0f104c6d31f7368f6f3e7e6b98e9604</srcmd5>
    <version>22.10.2</version>
    <time>1684490121</time>
    <user>dimstar_suse</user>
    <comment>- Add patch handle-python-ssl-changes.patch:
  * Handle Python 3.10 changes where ssl.shared_ciphers() changes
    behaviour. 

- skip one more test from testsuite 

- update to 22.10.2:
  * Update to greenlet 2.0. This fixes a deallocation issue that
    required a change in greenlet's ABI. The design of greenlet 2.0 is
    intended to prevent future fixes and enhancements from
    requiring an ABI change, making it easier to update gevent
    and greenlet independently.

- Switch documentation to be within the main package.</comment>
    <requestid>1087248</requestid>
  </revision>
  <revision rev="42" vrev="2">
    <srcmd5>1f6bfbecb697be8539acd34c1d82c054</srcmd5>
    <version>22.10.2</version>
    <time>1685830339</time>
    <user>dimstar_suse</user>
    <comment>- handle-python-ssl-changes.patch: refresh to handle ssl.shared_ciphers()
  behavior change in python 3.11 as well</comment>
    <requestid>1090162</requestid>
  </revision>
  <revision rev="43" vrev="3">
    <srcmd5>8454d91fe97a22a707fb951587697270</srcmd5>
    <version>22.10.2</version>
    <time>1686505954</time>
    <user>dimstar_suse</user>
    <comment>- skip test__util.py in s390x arch
</comment>
    <requestid>1091775</requestid>
  </revision>
  <revision rev="44" vrev="1">
    <srcmd5>c4b115feadab0ef03ac6f244f0023d12</srcmd5>
    <version>23.7.0</version>
    <time>1692110354</time>
    <user>dimstar_suse</user>
    <comment>- update to 23.7.0:
  * Add preliminary support for Python 3.12, using greenlet
    3.0a1. 
  * Update the bundled c-ares version to 1.19.1.
  * Fix an edge case connecting a non-blocking ``SSLSocket`` that
    could result in an AttributeError. In a change to match
    the standard library, calling ``sock.connect_ex()`` on a
    subclass of ``socket`` no longer calls the subclass's
    ``connect`` method.
  * Make gevent's ``FileObjectThread`` (mostly used on Windows)
    implement ``readinto`` cooperatively.
  * Work around an ``AttributeError`` during cyclic garbage
    collection when Python finalizers (``__del__`` and the like)
    attempt to use gevent APIs. This is not a recommended practice,
    and it is unclear if catching this ``AttributeError`` will fix
    any problems or just shift them.
  * Remove support for obsolete Python versions. This is
    everything prior to 3.8.
  * Stop using ``pkg_resources`` to find entry points (plugins).
    Instead, use ``importlib.metadata``.
  * Honor ``sys.unraisablehook`` when a callback function
    produces an exception, and handling the exception in the hub
    *also* produces an exception.
- drop skip-tests-in-leap.patch handle-python-ssl-changes.patch (obsolete)</comment>
    <requestid>1103820</requestid>
  </revision>
</revisionlist>
