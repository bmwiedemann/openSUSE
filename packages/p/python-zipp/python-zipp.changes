-------------------------------------------------------------------
Fri Oct 10 10:58:09 UTC 2025 - John Paul Adrian Glaubitz <adrian.glaubitz@suse.com>

- Updateto 3.23.0
  * ``str(Path(...))`` now renders ":zipfile" for the filename when a
    zipfile has no filename instead of failing with a TypeError. (#134)
- from version 3.23.0
  * Add a compatibility shim for Python 3.13 and earlier. (#145)
- from version 3.22.0
  * Backported simplified tests from python/cpython#123424. (#142)
  * Fixed ``.name``, ``.stem``, and other basename-based properties
    on Windows when working with a zipfile on disk. (#133)

-------------------------------------------------------------------
Wed Nov 20 17:30:00 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 3.21.0:
  * Improve performances of :meth:`zipfile.Path.open` for non-
    reading modes. (1a1928d)
  * Rely on cached_property to cache values on the instance.
  * Rely on save_method_args to save method args.
  * Make zipp.compat.overlay.zipfile hashable.
  * Replaced SanitizedNames with a more surgical fix for infinite
    loops, restoring support for names with special characters in
    the archive. (python/cpython#123270)
  * Made the zipfile compatibility overlay available as
    zipp.compat.overlay.
  * Also match directories in Path.glob.

-------------------------------------------------------------------
Mon Jun 10 11:06:50 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 3.19.2 (CVE-2024-5569, bsc#1227547):
  * No significant changes.
  * Improved handling of malformed zip files.
  * Implement is_symlink.
  * No significant changes.

-------------------------------------------------------------------
Sat Mar 16 13:12:20 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 3.18.1:
  * No significant changes.

-------------------------------------------------------------------
Thu Mar 14 13:51:41 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 3.18.0:
  * Bypass ZipFile.namelist in glob for better performance.
  * Refactored glob functionality to support a more generalized
    solution with support for platform-specific path separators.

-------------------------------------------------------------------
Mon Nov 27 09:06:16 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 3.17.0:
  * Added ``CompleteDirs.inject`` classmethod to make available
    for use elsewhere.
  * Avoid matching path separators for '?' in glob.
  * In ``Path.match``, Windows path separators are no longer
    honored. The fact that they were was incidental and never
    supported. (#92)
  * Fixed name/suffix/suffixes/stem operations when no filename
    is present and the Path is not at the root of the zipfile.
    (#96)
  * Reworked glob utilizing the namelist directly. (#101)
  * Replaced the ``fnmatch.translate`` with a fresh glob-to-regex
    translator for more correct matching behavior. (#98)
  * Require Python 3.8 or later.

-------------------------------------------------------------------
Fri Apr 21 12:39:13 UTC 2023 - Dirk Müller <dmueller@suse.com>

- add sle15_python_module_pythons (jsc#PED-68)

-------------------------------------------------------------------
Sun Apr 16 14:30:48 UTC 2023 - Matej Cepl <mcepl@suse.com>

- Make calling of %{sle15modernpython} optional.

-------------------------------------------------------------------
Sat Apr 15 10:21:46 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 3.15.0:
  * gh-102209: ``test_implied_dirs_performance`` now tests
  * measures the time complexity experimentally.
  * Minor cleanup in tests, including #93.
  * In tests, add a fallback when ``func_timeout`` isn't
    available.
  * gh-101566: In ``CompleteDirs``, override ``ZipFile.getinfo``
  * to supply a ``ZipInfo`` for implied dirs.
  * gh-101144: Honor ``encoding`` as positional parameter
  * to ``Path.open()`` and ``Path.read_text()``.
  * #85: Added support for new methods on ``Path``:
  * ``match`` * ``glob`` and ``rglob`` * ``relative_to``
  * ``is_symlink``
  * Removed 'print' expression in test_pickle.
  * bpo-43651: Apply ``io.text_encoding`` on Python 3.10 and
    later.
  * #81: ``Path`` objects are now pickleable if they've been
  * constructed from pickleable objects. Any restored objects
  * will re-construct the zip file with the original arguments.

-------------------------------------------------------------------
Fri Aug 26 21:07:51 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Remove deprecated setup.py hack: move to PEP517 build
- Fix requirements
  * Neither jaraco.itertools nor jaraco.tidelift are used outside
    testing or documentation building
- Ignore that upstream requires Python 3.7 or later since version
  3.7.0

-------------------------------------------------------------------
Tue Aug 23 20:33:38 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 3.8.1:
  * enrolled in tidelift

-------------------------------------------------------------------
Sun May 29 19:02:36 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 3.8.0:
  * Removed compatibility code.

-------------------------------------------------------------------
Tue Jan  4 16:40:24 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 3.7.0:
  * Require Python 3.7 or later.

-------------------------------------------------------------------
Tue Jan  4 14:41:33 UTC 2022 - Dirk Müller <dmueller@suse.com>

- add python-rpm-macros buildrequires

-------------------------------------------------------------------
Sat Oct 16 19:42:16 UTC 2021 - Dirk Müller <dmueller@suse.com>

- update to 3.6.0:
  *  Only ``Path`` is exposed in the public API.
  *  Remove news file intended only for CPython.

-------------------------------------------------------------------
Sat Jul 17 13:36:17 UTC 2021 - Dirk Müller <dmueller@suse.com>

- update to 3.5.0:
  * Added ``.suffix``, ``.suffixes``, and ``.stem`` properties.

-------------------------------------------------------------------
Mon Mar  8 09:07:01 UTC 2021 - Dirk Müller <dmueller@suse.com>

- update to 3.4.1:
  * refresh packaging

-------------------------------------------------------------------
Wed Nov 25 14:52:25 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- update to 3.4.0:
  #68 and bpo-42090: ``Path.joinpath`` now takes arbitrary
  positional arguments and no longer accepts ``add`` as a
  keyword argument.
  Updated project metadata including badges.
  bpo-42043: Add tests capturing subclassing requirements.
  #9: ``Path`` objects now expose a ``.filename`` attribute
  and rely on that to resolve ``.name`` and ``.parent`` when
  the ``Path`` object is at the root of the zipfile.

-------------------------------------------------------------------
Mon Sep 28 12:03:20 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- update to 3.2.0:
  * #57 and bpo-40564: Mutate the passed ZipFile object
  type instead of making a copy. Prevents issues when
  both the local copy and the caller's copy attempt to
  close the same file handle.
  * #56 and bpo-41035: ``Path._next`` now honors
  subclasses.
  * #55: ``Path.is_file()`` now returns False for non-existent names.

-------------------------------------------------------------------
Fri Mar 13 07:52:03 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Drop not-removed py2 dependencies

-------------------------------------------------------------------
Mon Mar  9 12:20:53 UTC 2020 - pgajdos@suse.com

- version update to 3.1.0
  * #47: ``.open`` now raises ``FileNotFoundError`` and
    ``IsADirectoryError`` when appropriate.
  * #44: ``zipp.Path.open()`` now supports a compatible signature
    as ``pathlib.Path.open()``, accepting text (default) or binary
    modes and soliciting keyword parameters passed through to
    ``io.TextIOWrapper`` (encoding, newline, etc). The stream is
    opened in text-mode by default now. ``open`` no
    longer accepts ``pwd`` as a positional argument and does not
    accept the ``force_zip64`` parameter at all. This change is
    a backward-incompatible change for that single function.
  * #43: Restored performance of implicit dir computation.
  * #36: Rebuild package with minimum Python version declared both
    in package metadata and in the python tag.
  * #32: For read-only zip files, complexity of ``.exists`` and
    ``joinpath`` is now constant time instead of ``O(n)``, preventing
    quadratic time in common use-cases and rendering large
    zip files unusable for Path. Big thanks to Benjy Weinberger
    for the bug report and contributed fix (#33).

-------------------------------------------------------------------
Thu Aug 29 14:07:59 UTC 2019 - Marketa Calabkova <mcalabkova@suse.com>

- update to 0.6.0
  * When adding implicit dirs, ensure that ancestral directories
    are added and that duplicates are excluded.
  * The library now relies on more_itertools.

-------------------------------------------------------------------
Mon Jul 22 11:23:27 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 0.5.2:
  * #7: Parent of a directory now actually returns the parent.

-------------------------------------------------------------------
Thu Jun  6 15:51:59 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Switch to mulitbuild to avoid build cycle

-------------------------------------------------------------------
Thu May 16 20:56:11 UTC 2019 - ranand@suse.com

- update to 0.5.1
  * Declared package as backport.

-------------------------------------------------------------------
Tue May 14 23:13:22 UTC 2019 - svasudevan@suse.com

- Update to 0.5.0
  * no changelog found
  * Added runtime dependencies python-unittest2 and python-contextlib2

-------------------------------------------------------------------
Mon May  6 08:52:42 UTC 2019 - pgajdos@suse.com

- version update to 0.4.0
  * #4: Add support for zip files with implied directories.

-------------------------------------------------------------------
Thu Jan 31 13:15:49 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Initial commit, needed by importlib-metadata
