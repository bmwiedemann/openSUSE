From 2cc363d015b71b3cbe14f179f19bbb4ea2e6ab0e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lars=20Gr=C3=BCter?= <lagru@mailbox.org>
Date: Sat, 8 Jul 2023 21:09:06 +0200
Subject: [PATCH] Mark NaN-related deprecation warning in np.clip as optional
 (#7052)

We already have our own warning that informs users and this deprecation
didn't really effect the behavior of rescale_intensity. So, mark the
warning as optional until we can remove it. No need for matching the
NumPy version number here.
---
 TODO.txt                                |  3 +++
 skimage/exposure/tests/test_exposure.py | 15 ++++++---------
 2 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/skimage/exposure/tests/test_exposure.py b/skimage/exposure/tests/test_exposure.py
index ed8dd6bc85f..8ec7d13bf7f 100644
--- a/skimage/exposure/tests/test_exposure.py
+++ b/skimage/exposure/tests/test_exposure.py
@@ -368,19 +368,16 @@ def test_rescale_nan_warning(in_range, out_range):
     )
 
     # 2019/11/10 Passing NaN to np.clip raises a DeprecationWarning for
-    # versions above 1.17
-    # TODO: Remove once NumPy removes this DeprecationWarning
+    # versions above 1.17, "|\A\Z" marks as optional warning
+    # TODO: Remove once NumPy 1.25.0 is minimal dependency
     numpy_warning_1_17_plus = (
-        "Passing `np.nan` to mean no clipping in np.clip"
+        "|\\A\\ZPassing `np.nan` to mean no clipping in np.clip"
     )
 
-    if in_range == "image":
-        exp_warn = [msg, numpy_warning_1_17_plus]
-    else:
-        exp_warn = [msg]
+    with expected_warnings([msg, numpy_warning_1_17_plus]):
+        result = exposure.rescale_intensity(image, in_range, out_range)
 
-    with expected_warnings(exp_warn):
-        exposure.rescale_intensity(image, in_range, out_range)
+    assert np.all(np.isnan(result))
 
 
 @pytest.mark.parametrize(
