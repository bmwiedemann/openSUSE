-------------------------------------------------------------------
Wed Apr 09 10:03:57 UTC 2025 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20250403:
  * arb_shading_language_420pack: test uniform block matching
  * arb_bindless_texture: fix undefined behaviour in test
  * replay: Adapt to new S3 proxy
  * replay: Adjust for changed S3 ETags
  * Don't rely on old numpy promotion rules in packing tests
  * Set numpy legacy printing options for builtin function generators
  * ci: run tests on python 3.13 as well
  * cmake: Add Python 3.13 to supported versions

-------------------------------------------------------------------
Wed Mar 12 12:40:54 UTC 2025 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20250305:
  * OVR_multiview: Add GLSL 1.30 test
  * OVR_multiview[2]: Use GLSL 3.3 (NVIDIA)
  * OVR_multiview: Add fb_blit_first_view test
  * OVR_multiview: Add fb_shader_mismatch_draw_errors test
  * OVR_multiview: Add fb_read_errors test
  * OVR_multiview[2]: Add triangle comparison test
  * OVR_multiview2: Add some basic shader tests
  * OVR_multiview: Add fb_attachment_params test
  * OVR_multiview: Add fb_incomplete_view_targets test
  * OVR_multiview: Add fb_incomplete_view_range test
  * OVR_multiview: Add fb_texture_errors test
  * OVR_multiview: Add an additional linker test
  * Add a GL <-> Vulkan ping-pong test
  * ext_external_objects: Enable VK_KHR_timeline_semaphore if available
  * ext_external_objects: Add compute shader infrastructure
  * util: Add a piglit_build_compute_program() helper
  * add test for EXT_multi_draw_arrays

-------------------------------------------------------------------
Wed Feb 19 08:20:11 UTC 2025 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20250217:
  * arb_direct_state_access: disable dithering
  * arb_program_interface_query: set vs_input2[1][0] as valid name
  * perf/pixel-rate: new pixel throughput microbenchmark
  * OVR_multiview: another num_views validation test
  * glx: don't fail test if the X server is inconsistent
  * ovr_multiview: add some basic glsl tests
  * arb_clear_texture: use floating point verification for format type GL_FLOAT
  * glx: don't expect a glx error

-------------------------------------------------------------------
Wed Jan 15 11:19:24 UTC 2025 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20250108:
  * gl/frameworks: Use piglit_set_destroy_func() when gl_fw->destroy is set
  * arb_framebuffer_object: add missing MSAA alpha-to-coverage and alpha-to-one tests
  * ARB_ubo/referenced-by-shader: pass if shader compiler moves UBOs between shaders
  * glsl: test loop unroll with uint overflow
  * glsl-1.30: add more loop unroll tests
  * glsl-1.10: test mesa bug conflict between globals
  * ext_image_dma_buf_import-export-tex: fix multi plane export
  * tests: add ext_image_dma_buf_import-tex-modifier
  * glsl-1.10: test mesa bug with forward declaration

-------------------------------------------------------------------
Tue Nov 12 09:41:51 UTC 2024 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20241111:
  * ARB_clear_texture: fix GL_CLEAR_TEXTURE query check for unsupported formats
  * glsl-1.30: move tests requiring uint from glsl-1.20
  * cl: print the failing value in r600 test
  * framework: call destroy directly instead of using atexit
  * glsl-1.20: loop unroll tests for uint induction var
  * framework: move atexit call closer to init
  * arb_bindless_texture: better test UBOs used as function parms
  * arb_compute_shader: add a compiler test for function inlining
  * cl: Don't use device_infos if num_device_infos == 0
  * cl: extend cl_device_info with OpenCL 3.0 parameters
  * cl: cl_mem_flags has CL_MEM_KERNEL_READ_AND_WRITE since 2.0
  * cl: Fix missing OpenCL 3.0 definition
  * ext_direct_state_access: Fix deprecated-non-prototype warning
  * tests/egl_ext_surface_compression: skip if Wayland display connection fails
  * perf: add a new test that measures shader IO throughput in GB/s
  * perf: remove the glsl-compile-time test
  * perf: remove the vertexrate test
  * cl: fix piglit-util-cl missing clReleaseEvent()
  * cl: fix piglit-util-cl memory leaks
  * cl: install include_test.h
  * tests/egl_ext_surface_compression: fix incorect executable name
  * fix arb_query_buffer_object-coherency to warn on invalid GS results instead of fail
  * tests: add tests for fixed-rate compression extensions
  * registry: update gl.xml
  * cl: Initialize device_config
  * cl: Correct CL_DEVICE_DOUBLE_FP_CONFIG check for OpenCL > 1.2
  * cl: Add imperfect CL_DEVICE_OPENCL_C_VERSION check
  * cl: Compile with OpenCL 3.0 support
  * arb_gpu_shader5: Test bitfieldInsert with a base that is masked

-------------------------------------------------------------------
Mon Aug 26 11:19:37 UTC 2024 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20240826:
  * enqueue-fill-buffer: fill whole buffer with zeroes
  * enqueue-fill-buffer: improve array formatting
  * s3tc: require float-texture support
  * piglit-util: Add a sanity check for subtests
  * glsl: update recently added implicit matching test
  * glsl: test function overload resolution
  * glsl: check for implicit conversion error in glsl 1.10
  * Reapply "arb_bindless_texture: add another function param bindless test"
  * write-after-clear: Add testcases with the zero values
  * Python: Drop Python 3.7 support
  * Python: Test both 1.x and 2.x of NumPy
  * generators: Support NumPy 2.x
  * Python: Support Python 3.12 for tox
  * tests/replayer: Use correct Path.exists() check
  * Python: Lock numpy to 1.x
  * fbo-blending-formats: skip unsupported formats
  * traces: Lock pixelmatch version to pre-ES6
  * arb_bindless_texture: test image/sampler constructors
  * Revert "arb_bindless_texture: add another function param bindless test"
  * arb_gpu_shader5: add linker version of function overloads test
  * arb_bindless_texture: add another function param bindless test
  * glsl: test function linking with implicit param conversions

-------------------------------------------------------------------
Tue Jul 30 08:02:53 UTC 2024 - mpluskal@suse.com

- Update to version 1~20240729:
  * arb_bindless_texture: add basic function param bindless tests
  * generated_tests: fix numpy overflow warnings that are errors in numpy 2.0
  * generated_tests: print mako exceptions
  * arb_texture_buffer_object: don't leak src strings
  * gl-1.0: Add a test for glPushAttrib/glPopAttrib
  * ext_texture_format_bgra8888: test GL_BGRA8_EXT as well
  * perf: port glsl-compile-time perf-test from mesa demos
  * perf: port vertexrate perf-test from mesa demos
  * perf: port vbo perf-test from mesa demos
  * perf: port teximage perf-test from mesa demos

-------------------------------------------------------------------
Tue Jul 30 07:49:38 UTC 2024 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20240729:
  * arb_bindless_texture: add basic function param bindless tests
  * generated_tests: fix numpy overflow warnings that are errors in numpy 2.0
  * generated_tests: print mako exceptions
  * arb_texture_buffer_object: don't leak src strings
  * gl-1.0: Add a test for glPushAttrib/glPopAttrib
  * ext_texture_format_bgra8888: test GL_BGRA8_EXT as well
  * perf: port glsl-compile-time perf-test from mesa demos
  * perf: port vertexrate perf-test from mesa demos
  * perf: port vbo perf-test from mesa demos
  * perf: port teximage perf-test from mesa demos

-------------------------------------------------------------------
Thu Jun  6 13:32:29 UTC 2024 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20240530:
  * glsl-bug-110796: detect missing ES 3.2 support using EGL_BAD_MATCH
  * glsl-bug-110796: distinguish which context creation failed
  * Sync .mailmap from Mesa
  * glsl-bug-110796: check for GL ES 3.2 support
  * egl-terminate-then-unbind-context: simplify
  * egl_khr_create_context: improve skip reporting
  * arb_blend_func_extended: simplify MAX_DUAL_SOURCE_DRAW_BUFFERS detection
  * arb_blend_func_extended: gles: follow the specification requirements
  * arb_texture_multisample: require geometry shaders
  * egl: missing EGLconfig isn't stderr material
  * ext_external_objects: avoid stderr when we skip the test
  * util: remove handwritten defines and drop FIXME
  * texsubimage: fix low bpp formats by expecting less than 8 bits of precision
  * Use GBM_LDFLAGS to get all options
  * fix vk_vert_buf_reuse cleanup
  * arb_texture_view: test for NaN in more cases
  * ext_direct_state_access: Fix deprecated-non-prototype warnings
  * arb_fragment_layer_viewport: don't test out-of-range gl_Layer values
  * glsl-1.30: Test uint to float conversion of sign extended value
  * arb_draw_buffers_blend: Fix deprecated-non-prototype warnings
  * arb_sample_shading: do not actually run mask_in_one if it's not supported
  * clear-stencil: new test to check for problems clearing stencils
  * read_depth_offset: new test to check depth offset calculation
  * replayer: create bin/ everytime
  * Reduce precision in depth clear precision check
  * Add float from half function
  * tests/gbm: Add gbm_device_get_fd() test
  * wayland: Add Wayland dmabuf driver-name test
  * conversion-explicit: use a different value for normalized +/- min
  * cmake: if we specify PIGLIT_BUILD_GL_TESTS OPENGL_FOUND is always true
  * README: recommend Ninja by default and switch to cmake --build
  * cmake: build is compatible up to 3.28
  * cmake: add workaround for CMP0148
  * README: ccmake is not that common, regular cmake is enough to build
  * README: update requirements
  * cmake: WGL doesn't need Waffle, pass the definition without it
  * cmake: remove this 12 years old workaround taking too many lines
  * cmake: implement switch for the EGL tests and simplify test conditions
  * cmake: make PIGLIT_BUILD_DMA_BUF_TESTS aligned with GBM dependency
  * cmake: depend on WGL_TESTS being enabled to build WGL
  * cmake: implement GBM and Wayland controls
  * cmake: fix unusually formated statement
  * cmake: implement X11 option (required for GLX)
  * cmake: move GLX and WGL option to the beggining of the file
  * cmake: move first batch of option() at the beggining of the file
  * cmake: rename default values with prefix DEFAULT_
  * cmake: move defaults into the per-platform section
  * cmake: predefine defaults depending on the system
  * cmake: drop unused CMP0042 policy
  * cmake: respect indentation
  * texturing: add a test for GPU/CPU sync when creating textures
  * util: fix multisample_texture_fs_template
  * tests: add a test for GL_APPLE_sync
  * ci: codespell ignore list is lowercase
  * more spelling fixes accross the whole codebase
  * ci: bump distribution tag
  * arb_multisample: Fix bitwise-instead-of-logical warning
  * ext_texture_storage: Fix memory leak on error path
  * arb_internalformat_query2: fix internalformat selection for max_layers subtest
  * arb_clear_texture: only test float depth textures when supported
  * properly check for libgen.h
  * arb_copy_image-formats: avoid undefined behavior
  * intel/ppgtt: Use getpagesize fallback with MinGW

-------------------------------------------------------------------
Thu Mar 14 14:01:00 UTC 2024 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20240309:
  * README: add Vulkan into the generic description
  * fix arb_query_buffer_object-qbo to warn on invalid GS results instead of fail

-------------------------------------------------------------------
Thu Mar  7 08:12:17 UTC 2024 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20240305:
  * tests: Fix cl test program@execute@builtin@builtin-float-degrees-1.0.generated issue about tolerance.
  * replayer: add ANGLE backend
  * ext_texture_format_bgra8888: test glRenderbufferStorage
  * glsl-1.50: test the copy of an entire ifc block
  * amd_gpu_shader_half_float: varying error check
  * arb_texture_query_lod: fix LOD queries in divergent control flow
  * ext_external_objects: remove gl_cleanup done with atexit

-------------------------------------------------------------------
Mon Feb  5 11:36:27 UTC 2024 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20240202:
  * glsl: test globals are handled correctly across stage
  * Add GL_EXT_texture_storage tests
  * tests/llvmpipe: Fix CMake mis-matching arguments warning.
  * ci: teach codespell to accept my name
  * tests/llvmpipe: don't require git repository, allow running from tarball
  * tests/llvmpipe: drop unused GIT_HEAD_HASH_SHORT
  * test/util: call destroy before reporting the result
  * modifiers: Remove sampler-view tests
  * modifiers: Add QCOM_TILED3
  * ext_transform_feedback: document missing mode in usage
  * arb_copy_image-formats: avoid undefined behavior
  * arb_texture_barrier: allow testing the extension under GL3.0
  * arb_shader_atomic_counters-semantics: use correct output-type
  * egl_khr_create_context: add test for EXT_create_context_robustness and EXT_query_reset_notification_strategy

-------------------------------------------------------------------
Thu Jan  4 07:37:36 UTC 2024 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20231228:
  * ext_render_snorm-render: Fix deprecated-non-prototype warning
  * version-mixing: Fix deprecated-non-prototype warning
  * draw-prim-rate: test more varying counts
  * glsl-1.10/built-in-uniform-state: don't test Infs due to undefined behavior
  * arb_vertex_program/property-bindings: don't test Infs due to undefined behavior
  * glsl-1.40: add a UBO test that I don't remember why I needed it
  * glsl-1.10: test a smooth color input with glShadeModel(GL_FLAT)
  * arb_fragment_layer_viewport: don't test out-of-range gl_Layer values
  * ext_render_snorm-render: lower test ctx version requirement
  * Implement piglit_subprocess for Windows
  * modifiers: Make a single list of the known modifiers.
  * modifiers: Allow specifying format and modifier
  * modifiers: Improve the presentation of results
  * modifiers: Add clear reimport subtest
  * modifiers: Add stress subtest
  * modifiers: Indent an inner loop
  * modifiers: Try to autogenerate dmabufs
  * framework: Add piglit_drm_create_dma_buf_modifiers
  * framework: Add an n_planes field
  * ext_image_dma_buf_import: Add a test for modifiers
  * ext_image_dma_buf_import: Support non-external textures
  * ext_image_dma_buf_import: Require GL_EXT_EGL_image_storage
  * Import the drm_fourcc/drm.h header and use them.
  * arb_tessellation_shader: Add new test tesslevels-indirect
  * ext_image_dma_buf_import: add a multithread refcount test
  * ext_image_dma_buf_import-export-tex: Print normal info to stdout, not stderr.
  * arb_separate_shader_objects/atomic-counter: Add missing GLSL requirement.
  * GL_ARB_arrays_of_arrays: Fix a missing extension requirement.
  * arb_shader_texture_lod: Fix incorrect require directive for the ext.
  * Use piglit_require_minimum_getinteger(GL_MAX_DRAW_BUFFERS) more.
  * fbo-mrt-alphatest: Actually require MRTs to be available.
  * piglit: Make a general helper for required glGetIntegerv values.
  * arb_copy_image: test copying of different mipmap levels of a texture
  * arb_copy_image: test copying of different mipmap levels of a texture
  * rendermode-feedback: fix stack-use-after-scope
  * readme: Update vkrunner link
  * add a test to verify that null attachments don't clamp fb size
  * shader_runner: allow -1 to indicate a null fb attachment
  * delete invalid gl_Layer/gl_Viewport tests
  * shader_runner: support setting GL_CLIP_DISTANCE enums
  * ext_render_snorm-render: test some negative values also
  * arb_blend_func_extended: Don't print expected compile fails to stderr.
  * shaders@glsl-max-varyings: reduce size of pixels
  * ci: test with Python 3.11
  * cmake: Add Python 3.12 to supported versions
  * ext_external_objects: simplification for check_bound_fbo_status
  * ext_external_objects: cleanup, remove some global parameters
  * amd_gpu_shader_half_float: fix modf tests
  * EGL_EXT_image_dma_buf_import: add VYUY format support
  * EGL_EXT_image_dma_buf_import: add YVYU format support
  * EGL_EXT_image_dma_buf_import: add NV21 format support
  * ext_transform_feedback/api-errors: stop xfb before shutdown
  * nv_copy_image-simple: Use red instead of green
  * cmake: workaround BASH_COMPLETION_COMPLETIONSDIR pointing into wrong path
  * bash-completion: Remove #! from non-executable file
  * docs: Fix README link
  * arb_bindless_texture: add additional uniform struct test
  * glsl-1.10: add tests for clamp(abs(x)) and clamp(-x)
  * glsl-1.10: extend glsl-vs-copy-propagation-1 test
  * util: Pass explicit "-" for spirv-as input filename

-------------------------------------------------------------------
Mon Jun 19 13:05:22 UTC 2023 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20230615:
  * cl: fix error in cl-api-create-program-with-binary
  * arb_gpu_shader5: Test a very specific case of bitfieldInsert
- Update _constraints to 10G disk space

-------------------------------------------------------------------
Wed Jun 14 11:35:22 UTC 2023 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20230613:
  * fface-invariant: Make the expected link failure go to stdout.
  * arb_arrays_of_arrays/max-binding: Don't log all the expected fails to stderr.
  * arb_texture_buffer_object: Don't compile the CS if GLSL version too low.
  * arb_blend_func_extended/output-location: Quiet expected link failure.
  * arb_cull_distance/exceed-limits: Don't log to stderr on expected result.
  * piglit: Don't warn about defaulting to GL under EGL if it's explicitly set.
  * gl-3.0-bound-resource-limits: Don't print to stderr on normal operation.
  * fface-invariant: Don't log to stderr when we compile fail as expected.
  * intel_performance_query: request 3.0 context
  * general/depth-clear-with-copy: New test.

-------------------------------------------------------------------
Tue Oct 18 07:41:10 UTC 2022 - pgajdos@suse.com

- python-six is not required
  https://trello.com/c/MO53MocR/143-remove-python3-six

-------------------------------------------------------------------
Wed Jul  7 12:16:31 UTC 2021 - Jozef Pupava <jpupava@suse.com>

- Update suse_qa-skip-tests.txt with tests crashing on 15 SP3
  * arb_arrays_of_arrays/execution/sampler/vs-struct-nonconst-non-opaque-members

-------------------------------------------------------------------
Thu May 27 08:33:43 UTC 2021 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20210326.6a4be9e99:
  * .gitlab-ci.yml: Change pages build to trigger main branch
  * glsl-1.30: test right-shift of a left-shift
  * arb_gpu_shader_int64: test masking after addition
  * arb_gpu_shader_int64: test shift-left of shift-right with same count
  * gl-3.0: add additional case for clearbufferfi correctness
  * ext_external_objects: Another semaphores test
  * ext_external_objects: New semaphores test
  * ext_external_objects: Vulkan framework additions
  * gbm: Add test for multi-planar GBM BOs
  * ext_external_objects: Removed unused varyings from image test
  * gitlab-ci: Build with MinGW cross-compilers.
  * cmake: Package Waffle DLL when provided.
  * appveyor: Remove integration.
  * editorconfig: Add more file extensions.
  * arb_shader_texture_image_samples/builtin-image: use skip as default result
  * draw-prim-rate: add a test for indexed triangle strips
  * glx-multithread-buffer-refcount-bug: new test for a recent bug
  * cmake: Install MinGW CRT DLLs instead of statically linking them.
  * cmake: Use 7-Zip packaging and strip debugging symbols.
  * tests: ignore unsupported texture type + num samples
  * tests: fix test binary name in opengl.py
  * tests/glx: remove unnecessary calls to XMapWindow
  * test/amd_perf_monitor: don't use exit(0)
  * spec/glsl-1.20: Use min and max with NaN
  * ext_external_objects: All supported image usage flags are set
  * ext_external_objects: Replaced TexImage2D with TexSubImage2D in display
  * ext_external_objects: Fix in external buffers
  * tests: speed up gl-1.3-texture-env test
  * util: expose read_pixels_float/compare_pixels_float
  * arb_shader_storage_buffer_object/indirect: add dynamic store test
  * arb_uniform_buffer_object: Migrate to Python 3.
  * arb_fragment_program: Test KIL using result of SLT
  * tests: fix running the replay profile with the --test-list arg
  * opengl.py: fix adj-prims arg construction
  * framework/replay: adapt GFXReconstruct backend to >=0.9.4
  * framework: add P0XX format support for piglit_gbm_buf_create
  * framework/replay: do not raise in compare if no images were dumped
  * tests: fix documentation typos for the replay profile
  * tests: add reproducer for issue 3712
  * ext_external_objects: add mutable flag bit to external images
  * ext_external_objects: fix for image tests
  * EXT_separate_shader_objects: add redeclare built-in variable test
  * ext_external_objects: fix validation error on vertex binding descriptions
  * egl: add the most basic test of EGL_EXT_protected_content
  * tests: Add an EGL test for exporting a texture
  * ext_external_objects: remove VK_IMAGE_USAGE_STORAGE_BIT usage
  * arb_es2_compatibility: Check return value.
  * arb_separate_shader_objects: Check return values.
  * util: Fix draws in ManifestStencil/Depth.
  * arb_derivative_control: verify interaction with flat inputs
  * ext_framebuffer_object: setup max mipmap level to make fbo complete
  * fbo: setup max mipmap level to make fbo complete with 2 levels
  * nv_shader_atomic_int64: add tests that check for namespace pollution
  * arb_gpu_shader_int64: add some tests for up-conversions
  * nv_shader_atomic_int64: don't require GLSL 4.40
  * khr_texture_compression_astc/basic: add texture 3d and 2d array support checks
  * khr_texture_compression_astc/basic: test first the non-extension checks
  * ext_external_objects/vk-image-overwrite: fix in color probe
  * arb_compute_shader: Add test for double-precision arithmetic in combination with large group size.
  * test: add fbo blit + texture view testcase
  * nv_conditional_render: Test a glClear optimization
  * shader_draw_parameters: Add dummy count=0 draws to each glMultiDrawElements call
  * draw-elements: Add dummy count=0 draws to each glMultiDrawElements call
  * ati_fragment_shader/render-ops: Fix format-security warning
  * CMake: Add python 3.9 to supported versions
  * simple-barrier-atomics: properly synchronize access to atomic
  * shader_storage_buffer_object-indirect: require GL_ARB_gpu_shader5
  * tes-gs-max-output: Require GL_ARB_gpu_shader5 to get max GS invocations
  * arb_texture_buffer_range-ranges-2: Fix buffer alignment
  * tests: test depth clear verifying its result using compute shader

-------------------------------------------------------------------
Thu May 20 12:36:37 UTC 2021 - Jozef Pupava <jpupava@suse.com>

- Update suse_qa-skip-tests.txt with tests crashing on 15 SP3

-------------------------------------------------------------------
Mon Dec 28 09:11:29 UTC 2020 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20201223.ff2a7650b:
  * rasterpos: Fix missing termination of program list.
  * ati_fragment_shader: Test alpha channel with fog
  * summary: Add -g/--fixes to console-mode output
  * ati_fragment_shader: Add a test of all the ops and modifiers.
  * arb_gl_spirv: Test using length on an runtime (unsized) array
  * framework: corrected some typos
  * framework/replay: add always the images information to the results
  * framework/replay: rename dump image to include the checksum
  * framework: remove forbidden XML chars for text in the JUnit backend
  * Fix timeout in spec/arb_sync/repeat-wait
  * glsl-1.50,tess: Test passing maximum count of varyings between stages
  * shader_runner: reset glPolygonMode between tests without process isolation
  * arb_framebuffer_object: Add a test for blit-based mipmap generation
  * gen_builtin_packing_tests: Only fill a 10x10 window.
  * fbo-pbo-readpixels-small: add check of depth and stencil data
  * nv_primitive_restart: Add tests using display lists
  * nv_primitive_restart: Add tests for error conditions
  * nv_primitive_restart: Verify that NV_primitive_restart isn't advertised in Core
  * nv_primitive_restart: Move existing NV_primitive_restart tests to a new dir
  * glsl-1.50/execution: add primitive id tests for QUADS and QUAD_STRIP
  * glsl-1.50/execution: add primitive id tests with point and line rasterization mode
  * shader_draw_parameters: Test gl_DrawIDARB with non-MultiDraw and primitive restart
  * shader_draw_parameters: Test gl_DrawIDARB with non-MultiDraw commands
  * shader_draw_parameters: Reduce GLSL requirement back to 1.40
  * shader_draw_parameters: Add missing extension requirements
  * framework: add write method to the junit backend
  * framework: add backends API to write a TestrunResult to a file
  * framework: restore syserr output when loading a junit test result
  * framework: fix loading time start/end in junit test results
  * summary: Add -r/--regressions to console-mode output
  * invalid-es3-queries: Handle GLES2 + {ANGLE,NV}_framebuffer_blit
  * util: Use _exit after failed execve
  * CI: Re-enable Windows with excessive container-stage timeout
  * CI: Windows: Use separate config file for Docker
  * glsl-1.50/prim-restart: fail these tests if no primitives are generated
  * shader_runner: add ssbo float probing support
  * shader_runner: add double type support for ssbos
  * tests: optimize atomicCompSwap tests by exiting ASAP
  * cmake: move the INCLUDE commands after the project command
  * templates: fix summary generation when not all image keys exist
  * gl-3.0/clearbuffer-depth-stencil: Test clamping
  * gl-3.0/clearbuffer-depth: Test required clamping
  * tests: Tweak red in nv_copy_image-simple
  * arb_texture_view: Test NaN for some RGB32 clears
  * gitlab-ci: use parallel jobs syntax for tox jobs
  * ext_external_objects: require export feature flag only when required
  * arb_direct_state_access: do not use core-context
  * ext_external_objects/vk-depth-display: New interoperability test
  * ext_external_objects: Additions to the Vulkan framework
  * Add a test for fast-clearing via glClearTexImage
  * tests: add replay profile
  * framework/tests: add new piglit based test for replayer
  * replayer: add replayer executable
  * unittests: add tests for framework/replay
  * CI: add new functional tests to tox and CIs
  * framework/replay: don't assert, rather raise
  * framework/replay: remove writing the compare results as YAML
  * framework/replay: rename dump image to <checksum>.png in compare
  * functionaltests: adapt compare test to new replayer
  * functionaltests: move replayer functional test to a general location
  * framework/replay: split dump_trace_images in backends
  * framework/replay: remove logging into a file
  * framework/replay: print piglit formatted results
  * framework/replay: more info in stdout for compare
  * framework/replay: keep printing in stdout and stderr the subprocesses
  * framework/replay: add programs module
  * framework/replay: add extra_args piglit.conf option for gfxrecon-replay
  * framework: add piglit.conf options used in the replay module
  * framwork/replay: use core.check_dir whenever possible
  * framework/replay: add global options
  * framework/replay: update the output destination when dumping images
  * framework/replay: allow specifying where to dump the replay output
  * framework/replay: remove upload_utils
  * framework/replay: do stream downloads
  * framework/replay: do not trunc the log file when dumping gfxr traces
  * framework/replay: rename all private functions
  * framework/replay: migrate to piglit module
  * framework/replay: remove unused imports from replay.trace_utils
  * framework/replay: rename some replay files
  * framework/replay: change replay module imports paths
  * framework/replay: main tracie to use query_traces_yaml
  * framework/replay: enable printing the checksum with tracie's query traces
  * framework/replay: add the query_traces_yaml to tracie.py
  * framework/replay: enforce PEP-0008 in query_traces_yaml
  * framework/replay: add commands to tracie so we can replay individual traces
  * framework/replay: tracie's README uses sh syntax highlight in examples
  * framework/replay: use Path only in the API to dump_from_trace in tracie
  * framework/replay: reuse tracie's image checksum utils
  * framework/replay: simplify parameters passing in tracie
  * framework/replay: use argpaarse in renderdoc_dump_images
  * framework/replay: enforce PEP-0008 in some tracie code
  * framework/replay: move downloading and uploading of files to modules
  * framework/replay: remove unused imports from tracie.py
  * framework/replay: add missing license to tracie's python code
  * framework/replay: raw import tracie from mesa
  * lodbias: Reduce the number of glReadPixels calls
  * shader_runner: sscanf fixes
  * ext_external_objects/vk-pix-buf-update-errors: initialization fix
  * arb_enhanced_layouts: add tests for `arrayed` block member locations
  * write-after-clear: Test multi-layer clears
  * write-after-clear: Enable variable z-offset probes
  * write-after-clear: Support multi-layer clears
  * ext_external_objects: Harmonize test skipping
  * framework: have into account the images member in TestResult
  * templates: fix loop iterating over value.images array
  * framework/exceptions.py: return wrapped function in inner function
  * unittests: add missing exception cases for exceptions handler
  * framework: spread core.get_option usage whenever possible
  * framework: make deqp.get_option a core function
  * gitlab-ci: provide python 3.6 and 3.8 for testing with tox
  * tests: Added ssbo tests for nv_shader_atomic_int64
  * shader_runner: Added 64-bit utilities for ssbos
  * tests: Added shared variable tests for nv_shader_atomic_int64
  * ext_external_objects/vulkan framework: Fix a double clean
  * ext_external_objects: Lower OpenGL requirements for i965
  * ext_external_objects: Minor loop optimization
  * ext_external_objects: Lower OpenGL requirements for i965
  * ext_external_objects: fixed initialization issue
  * ext_external_objects: new test to reuse several times a Vulkan VBO
  * ext_external_objects: new test to share a Vulkan vertex buffer
  * ext_external_objects: new test for pixel buffer update errors
  * tests: add reproducer for issue 3271
  * framework: return correct information from XMLProfile itertests
  * glsl-es-1.00: declare some functions that are not builtins in 1.00
  * test: add reproducer for issue 3508
  * shader_runner: reset SPIR-V specializations between tests
  * ext_external_objects/vulkan framework: fix sharing mode
  * ci: disable windows jobs
  * gitlab-ci: add build-windows job
  * gitlab-ci: rename "build" job to "build-debian"
  * gitlab-ci: add docker-image setup for a Windows / MSVC builder
  * ext_external_objects: Use dedicated allocations when required.
  * ext_external_objects: emit barriers for attachments on draw
  * tests: do not use non-standard type uint
  * tests: provide fallback-implementation of htobe32
  * allow msvc
  * util: add NORETURN define for MSVC
  * win32: use _strdup instead of strdup
  * win32: prevent the CRT from defining max
  * provide msvc fallback for getpagesize
  * provide msvc fallback for vasprintf
  * provide msvc fallback for basename
  * provide msvc fallback for usleep
  * provide msvc-fallback for strcasecmp
  * tests: provide MSVC version of getopt
  * util/getopt: drop incorrect license-violation warning
  * util/getopt: use _alloca instead of alloca
  * util/getopt: drop extra _CRT_SECURE_NO_WARNINGS-define
  * util: import getopt for MSVC
  * shaders: generate headers from binary files
  * tests: Added tests for nv_copy_depth_to_color
  * arb_enhanced_layouts: change vs-to-fs to use a vec4[24] instead of vec4[32]
  * correct some typos
  * tests: add GL_NV_half_float extension tests
  * Relax requirement on max value of COMPUTE_SHADER_INVOCATIONS_ARB.
  * arb_vertex_program: Test writing undefined values to the result
  * arb_gpu_shader5: fix gl version requirement for xfb-streams-without-invocations
  * write-after-clear: Test clears of alternating layers
  * write-after-clear: Support 2D array textures
  * arb_gpu_shader5: prevent uniform from being optimized out in samplemaskin-indirect
  * dir-locals.el: move nil block to the bottom
  * Improve the documentation for vkrunner piglit.conf entries
  * framework: use timeouts on Windows
  * prevent long temp-path on windows
  * intel/ppgtt: fix including of unistd
  * arb_timer_query: use piglit_delay_ns
  * dsa: fix error codes for *TextureSubImage* calls
  * ext_external_objects/vk-buf-exchange: New interoperability test
  * ext_external_objects: Vulkan framework additions for external BOs
  * ext_external_objects: changed default tiling mode to linear
  * ext_external_objects/vk-image-display-overwrite: New test
  * ext_external_objects: Additions to the framework and tests
  * glsl-4.50: move a test to the glsl-4.50 dir
  * arb_shader_bit_encoding: move some tests to the arb_shader_bit_encoding dir
  * ext_shader_integer_mix: move some tests to the ext_shader_integer_mix dir
  * glsl-1.30: move some tests to the glsl-1.30 dir
  * glsl-1.20: move a bunch of shaders to the glsl-1.20 dir
  * glsl-1.10: move a whole bunch shader tests to the glsl-1.10 dir
  * glsl-3.30: move glsl 3.30 bug test to the glsl-3.30 dir
  * arb_texture_gather: move test to the arb_texture_gather dir
  * arb_sample_shading: bump gl version for mrt-alpha-to-coverage-combinations
  * glsl-1.50: add extension requirement for spec@glsl-1.50@gs-max-output
  * dsa: fix error codes to reflect GL 4.6 spec.
  * tests: do not use designated initializers in c++
  * tests: fix illegal initializers
  * intel_shader_integer_functions2: ignore overflow errors
  * builtin-functions: ignore RuntimeWarnings from add-tests
  * tests: do not assert framebuffer-completeness
  * tests: do not remove non-existent test
  * primitive-restart: do not assign undefined value
  * tests/texturing: set sample_count
  * glsl-uniform-out-of-bounds-2: silence warning
  * tests: add reproducer for Mesa issue 2946
  * gl-4.1: add a minmax test (v2)
  * ext_shader_image_load_store: fix imageAtomic*Wrap tests
  * ext_shader_image_load_store-image: fix the compile only test
  * Add param to piglit_compile_shader_text_nothrow to not print errors
  * gl-3.1: use glsl 1.40 for mixed-int-float-fbo
  * OES_geometry_shader: Test dynamically non-uniform num vertices
  * glsl-1.10: Test absolute value of a dot-product result
  * glsl-1.10: move tmp array index tests to the glsl-1.10 dir
  * glsl-1.10: move some linking tests to the glsl-1.10 dir
  * glsl-1.10: move some discard tests to the glsl-1.10 dir
  * glsl-1.10: move some move loop tests to the glsl-1.10 dir
  * glsl-1.10: move sampler shader tests to glsl-1.10 dir
  * arb_shader_texture_lod: move test to arb_shader_texture_lod dir
  * arb_gpu_shader_int64: move some unroll tests to the arb_gpu_shader_int64 dir
  * arb_gpu_shader_fp64: move loop unroll test to the arb_gpu_shader_fp64 dir
  * glsl-1.30: move some loop unroll tests to the glsl-1.30 dir
  * glsl-1.10: move loop shader tests to glsl-1.10 dir
  * glsl-4.50: move constant multiply test to glsl-4.50 dir
  * glsl: move vec4 vector indexing tests to glsl-1.10
  * glsl-1.20: move uniform initializer tests to glsl 1.20 dir
  * glsl: move open-coded-bitfieldReverse tests to where they belong
  * glsl-1.30: move builtin trunc test to glsl-1.30 dir
  * glsl-1.10: move builtin tests to the glsl-1.10 dir
  * glsl-1.10: move copy propagation tests to glsl-1.10 dir
  * glsl-1.10: move derivative tests to glsl-1.10 dir
  * glsl-1.20: move const builtin tests to glsl-1.20 dir
  * glsl-1.30: move cosh builtin test to glsl-1.30 dir
  * arb_arrays_of_arrays: move arrays copy size mismatch test to AoA dir
  * glsl-1.20: move array tests to glsl-1.20 dir
  * glsl-1.10: move algebraic tests to glsl-1.10 dir
  * glsl-1.10: move exp2 test to glsl-1.10 dir
  * tests: add reproducer for issue 3140
  * namespace-pollution: fix array out-of-bounds access by glBitmap
  * cl: Add test for i16/f16 inline immediate handling
  * glsl-1.10: test uniform array resizing
  * arb_shader_image_load_store: test storing to two different image formats.
  * glsl-1.10: use correct comment tokens in fs-loop-while-false-03
  * glsl-1.10: Test detection of open-coded "mix" pattern
  * tests/fbo: Disable stencil test prior to glCopyPixels
  * glsl-array-bounds: initialize arrays to avoid optimizing out undefined access
  * glsl-array-bounds: set out-of-bounds array index inside shader
  * glsl-1.10: remove initializer for uniform in fs-loop-while-false-03
  * glsl-arrays: initialize uniforms in shader to avoid errors from elimination
  * glsl-uniform-interstage-limits: New test poking at VS/FS shared uniform files.
  * util: Add a helper for generating formatted shader sources.
  * vulkan: remove glsl450 double precision tests
  * glsl-1.10: Adds additional test for macros redefinitions
  * ext_external_objects: Selecting a queue that supports graphics
  * ext_external_objects: Additions to the Vulkan framework
  * Switch from cElementTree to ElementTree.
  * cmake: install spirv (spv) files
  * ext_external_objects: remove double destroy of objects
  * ext_external_objects: set img,mem objects NULL after destroy
  * ext_external_objects: add error reporting to load_shader
  * ext_external_objects: determine filepaths via PIGLIT_SOURCE_DIR
  * glsl-1.10: remove test that no longer does what is intended
  * write-after-clear: Test linear -> sRGB with sRGB storage
  * write-after-clear: Clear lists of views
  * tests: Add test for texture view writes after fast-clears
  * Switch from collections to collections.abc.
  * cl: fix clGetDeviceInfo build with OCL < 2.0
  * cl: clGetKernelWorkGroupInfo check returned values
  * cl: clGetDeviceInfo check returned values
  * cl: clGetKernelInfo check returned values
  * cl: clSetKernelArg fix CL_INVALID_SAMPLER error message
  * cl: improve clEnqueueFillBuffer tests scope
  * cl: fix clEnqueueFillBuffer CL_INVALID_CONTEXT
  * cl: disable an asm call test on kabini
  * cl: add program need_image_support option
  * cl: manage an offset in retain_release-event
  * cl: require a least OCL 1.2
  * khr_texture_compression_astc: Make array subtests definition static
  * drawoverhead: Allow disabling of the color output.
  * drawoverhead: Allow selecting a specific test.
  * arb_shader_subroutine: Add test for implicitly converted arguments
  * cl: Add test passing large struct with dynamic realignment
  * glsl 4.20 & 4.30: test c-style array initialization
  * ssbo-atomics: Test that there is no implicit conversion of "mem" parameter
  * ext_external_objects: Sets tiling mode for the imported texture
  * cmake: Avoid pkg-config on Windows.
  * shader_runner: fix conditional jump depends on glsl_version
  * ext_external_objects: make libvulkan dependency optional
  * gitlab-ci: add libvulkan-dev to support tests that use Vulkan
  * ext_external_objects/vk-image-display: Add a new Vulkan->OpenGL test
  * ext_external_objects/vk-image-override: New approach to test formats
  * ext_external_objects/vk-image-override: Add a Vulkan-GL test
  * ext_external_objects: Helper structs that map the Vk and GL formats
  * ext_external_objects: Add Vulkan/OpenGL driver compatibility checker
  * ext_external_objects: Extended the interoperability and Vulkan helpers
  * ext_external_objects: Add Vulkan-OpenGL interoperability helpers
  * ext_external_objects: Add Vulkan helpers
  * ext_external_objects: Group external object tests
  * glsl-1.10: remove tests that no longer do what was intended
  * glsl-1.10: initialise texcoord array in test
  * Fix several shared-atomicMin* tests using "draw rect" instead of "compute"
  * tests: add reproducer for issue 2747
  * gl-2.0: remove unnecessary assert
  * glsl-1.10: stop sibling nested loop being eliminated
  * gen_variable_index_write_tests: stop arrays from being optimised away
  * arb_gpu_shader_fp64: fix indirect array access test
  * glsl-1.10: remove undefined behaviour from loop test
  * shader_runner: reset glClipPlane before each subtest
  * framework: Update to Python 3 ConfigParser.
  * tests: Added tests for nv_alpha_to_coverage_dither_control
  * ext_draw_instanced: add test
  * Remove the apitrace testing.
  * framework: remove unused import
  * framework: Replace assert with actual error
  * framework: allow PiglitException's to set a returncode
  * framework: Add env support to some test classes that don't have it
  * arb_texture_query_lod: relax tolerance values
  * framework/cl: Accept additional arguments in init and pass them to parent init
  * GL_ARB_vertex_program: Test that unused attributes don't affect used ones
  * gl-1.1: Test that unused normal array in ff shader doesn't affect other arrays
  * glsl-1.30: add a test with gl_ClipDistance as dead code
  * framework: Add xorg tests
  * framework: Actually deserialize the test environment
  * framework/test: pass env and cwd as optional arguments to Test
  * framework: allow xml profiles from outside the piglit tree
  * nv_viewport_array2: add some compiler, linker, and execution tests
  * shader_runner: allow setting viewports directly
  * nv_viewport_swizzle: add an errors test
  * nv_viewport_swizzle: add basic test
  * shader_runner: add glViewportSwizzleNV support
  * glsl-1.10: test invalid operator on function parameter
  * rgtc: generate some signed data for snorm formats.
  * glsl-1.20: new tests for out-of-bounds array access of vectors/matrices
  * tests: add reproducer for issue 1258
  * glsl-1.10: Add tests for condition on saturated value
  * glsl-1.10: test some arithmetic on non-existing variable
  * tests: add reproducer for issue #2596
  * arb_separate_shader_objects: Check return values.
  * egl-ext_egl_image_storage: Fix resource leak.
  * cmake: export build commands
  * tests: Verify that usage of string literals fails compilation
  * generated_tests: Remove six dependency.
  * arb_gpu_shader_fp64: Remove execution tests from gen_inout_fp64
  * arb_gpu_shader_fp64/int64: Test in/out variables with generator
  * random_ubo: Add GL_ARB_gpu_shader_int64 types
  * random_ubo: Fix python3 errors
  * glsl-4.00: Add tests for loops with mul and ishl incrementation
  * arb_gpu_shader5: test indirect texture access with different formats
  * ext_texture_norm16-render: use piglit_get_gl_enum_name
  * arb_shader_atomic_counters: Add a test for sparsely-used bindings.
  * ARB_gpu_shader5: Verify precise fract of NaN
  * ARB_gpu_shader5: Verify comparisons with precise arithmetic
  * glsl: Verify floating point underflow compared with zero
  * glsl-1.10: Verify sign multiplied by a value with negation, absolute value, or both
  * tests: Added tests for nv_copy_image
  * tests: intel_blackhole: ensure the blackhole state is disabled to readback surfaces
  * arb_shader_storage_buffer_object: Add test for auto setting binding point to an array of SSBOs
  * templates: Remove last remains of the six module
  * cl: Add test for 16-bit bswaps
  * glsl-arrays-copy-size-mismatch: Add test case for nir_opt_find_array_copies
  * cl: Add test for bswap
  * unittests: Properly skip tests if psutil isn't installed
  * CI: remove six from installed packages
  * cmake: remove python six dependency
  * drop python2 support
  * cmake: allow setting python versions via the command line
  * CI: remove python 2.7 and 3.5
  * framework/print-cmd: Fix exclude filter
  * Fix build on 32-bit arch of gen_intel_shader_integer_functions2 tests
  * glx_mesa_query_renderer: Fix error with GCC 10.
  * draw-prim-rate: reorder test execution order
  * draw-prim-rate: move the main loop body into a separate function
  * draw-prim-rate: test the performance of triangle strips
  * draw-prim-rate: don't change vertex attribs every draw call
  * arb_provoking_vertex/clipped-strip-first: New test.
  * util: Remove extra definition of piglit_automatic.
  * arb_internalformat_query2: Move global variable definitions to common.c.
  * gl-4.4/gl_max_vertex_attrib_stride: use a valid buffer offset
  * double_attribs: use a valid offset in glVertexAttribLPointer
  * intel_blackhole_render: test transitions of state in both directions
  * intel_blackhole_render: drop asserts in favor of error reporting
  * Fix scripts to run glcts and gles-cts using piglit runner
  * texturing: Move global variable definitions to common.c.
  * arb_gl_spirv: add some arrays of arrays ubo/ssbo tests
  * arb_gl_spirv: add ubo array test with copy between arrays
  * arb_gl_spirv: add ssbo test using std140 and std430
  * arb_gl_spirv: Add a test for SSBOs with an unsized array
  * arb_gl_spirv: add ubo tests with different matrix/array strides
  * arb_gl_spirv: Add tests for UBOs with explicit offsets
  * arb_gl_spirv: add a array of ubo test, with complex ubo content
  * arb_gl_spirv: add ubo/ssbo tests with matrices
  * shader_runner: add force_no_names mode
  * glsl-es-3.10: remove wrong regression checking test
  * tests: intel_blackhole_render: tests blit command
  * tests: intel_blackhole_render: additional check before enable & after clear
  * tests: intel_blackhole_render: turn asserts into test failures
  * tests: intel_blackhole_render: fix the tests when not run with -auto
  * glsl-1.50: test gl_PrimitiveID xfb
  * intel_performance_query: Build only if EGL is available.
  * oes_egl_image_external_essl3: check if 3.1 es is available
  * tests: add test for assert in INTEL_performance_query
  * Add test for OES_EGL_image_external_essl3
  * intel_shader_integer_functions2: Add generated execution tests for multiply32x16
  * intel_shader_integer_functions2: Add generated execution tests for averageRounded
  * intel_shader_integer_functions2: Add generated execution tests for average
  * intel_shader_integer_functions2: Add generated execution tests for subtractSaturate
  * intel_shader_integer_functions2: Add generated execution tests for addSaturate
  * intel_shader_integer_functions2: Add generated execution tests for countTrailingZeros
  * intel_shader_integer_functions2: Add generated execution tests for countLeadingZeros
  * intel_shader_integer_functions2: Add generated execution tests for absoluteDifference
  * parser_utils: Work around overflow with hex values in strtoll
  * gitlab-ci: Update to current ci-templates
  * rasterpos: first comprehensive test of glRasterPos
  * util/minmax-test: Free memory, allocated for token name
  * arb_clear_texture: Fix memory leak Memory that was allocated for glGetTexImage wasn't freed after comparison.
  * egl: add test for GL_EXT_EGL_image_storage
  * Add test to verify multiplication by a constant

-------------------------------------------------------------------
Tue Sep 15 15:49:00 UTC 2020 - Michel Normand <normand@linux.vnet.ibm.com>

- Add _constraints with 6GB min disk space

-------------------------------------------------------------------
Wed Aug 12 07:28:43 UTC 2020 - Jozef Pupava <jpupava@suse.com>

- update suse_qa-skip-tests.txt bsc#1174531, cleanup obsolete entries
- add Recommends: waffle to fix wfinfo utility not found

-------------------------------------------------------------------
Tue Jul 21 22:49:51 UTC 2020 - Jozef Pupava <jpupava@suse.com>

- Update to version 1~20200721.5db8d7472:
  * dsa: fix error codes for *TextureSubImage* calls
  * ext_external_objects/vk-buf-exchange: New interoperability test
  * ext_external_objects: Vulkan framework additions for external BOs
  * ext_external_objects: changed default tiling mode to linear
  * ext_external_objects/vk-image-display-overwrite: New test
  * ext_external_objects: Additions to the framework and tests
  * glsl-4.50: move a test to the glsl-4.50 dir
  * arb_shader_bit_encoding: move some tests to the arb_shader_bit_encoding dir
  * ext_shader_integer_mix: move some tests to the ext_shader_integer_mix dir
  * glsl-1.30: move some tests to the glsl-1.30 dir
  * glsl-1.20: move a bunch of shaders to the glsl-1.20 dir
  * glsl-1.10: move a whole bunch shader tests to the glsl-1.10 dir
  * glsl-3.30: move glsl 3.30 bug test to the glsl-3.30 dir
  * arb_texture_gather: move test to the arb_texture_gather dir
  * arb_sample_shading: bump gl version for mrt-alpha-to-coverage-combinations
  * glsl-1.50: add extension requirement for spec@glsl-1.50@gs-max-output
  * dsa: fix error codes to reflect GL 4.6 spec.
  * tests: do not use designated initializers in c++
  * tests: fix illegal initializers
  * intel_shader_integer_functions2: ignore overflow errors
  * builtin-functions: ignore RuntimeWarnings from add-tests
  * tests: do not assert framebuffer-completeness
  * tests: do not remove non-existent test
  * primitive-restart: do not assign undefined value
  * tests/texturing: set sample_count
  * glsl-uniform-out-of-bounds-2: silence warning
  * tests: add reproducer for Mesa issue 2946
  * gl-4.1: add a minmax test (v2)
  * ext_shader_image_load_store: fix imageAtomic*Wrap tests
  * ext_shader_image_load_store-image: fix the compile only test
  * Add param to piglit_compile_shader_text_nothrow to not print errors
  * gl-3.1: use glsl 1.40 for mixed-int-float-fbo
  * OES_geometry_shader: Test dynamically non-uniform num vertices
  * glsl-1.10: Test absolute value of a dot-product result
  * glsl-1.10: move tmp array index tests to the glsl-1.10 dir
  * glsl-1.10: move some linking tests to the glsl-1.10 dir
  * glsl-1.10: move some discard tests to the glsl-1.10 dir
  * glsl-1.10: move some move loop tests to the glsl-1.10 dir
  * glsl-1.10: move sampler shader tests to glsl-1.10 dir
  * arb_shader_texture_lod: move test to arb_shader_texture_lod dir
  * arb_gpu_shader_int64: move some unroll tests to the arb_gpu_shader_int64 dir
  * arb_gpu_shader_fp64: move loop unroll test to the arb_gpu_shader_fp64 dir
  * glsl-1.30: move some loop unroll tests to the glsl-1.30 dir
  * glsl-1.10: move loop shader tests to glsl-1.10 dir
  * glsl-4.50: move constant multiply test to glsl-4.50 dir
  * glsl: move vec4 vector indexing tests to glsl-1.10
  * glsl-1.20: move uniform initializer tests to glsl 1.20 dir
  * glsl: move open-coded-bitfieldReverse tests to where they belong
  * glsl-1.30: move builtin trunc test to glsl-1.30 dir
  * glsl-1.10: move builtin tests to the glsl-1.10 dir
  * glsl-1.10: move copy propagation tests to glsl-1.10 dir
  * glsl-1.10: move derivative tests to glsl-1.10 dir
  * glsl-1.20: move const builtin tests to glsl-1.20 dir
  * glsl-1.30: move cosh builtin test to glsl-1.30 dir
  * arb_arrays_of_arrays: move arrays copy size mismatch test to AoA dir
  * glsl-1.20: move array tests to glsl-1.20 dir
  * glsl-1.10: move algebraic tests to glsl-1.10 dir
  * glsl-1.10: move exp2 test to glsl-1.10 dir
  * tests: add reproducer for issue 3140
  * namespace-pollution: fix array out-of-bounds access by glBitmap
  * cl: Add test for i16/f16 inline immediate handling
  * glsl-1.10: test uniform array resizing
  * arb_shader_image_load_store: test storing to two different image formats.
  * glsl-1.10: use correct comment tokens in fs-loop-while-false-03
  * glsl-1.10: Test detection of open-coded "mix" pattern
  * tests/fbo: Disable stencil test prior to glCopyPixels
  * glsl-array-bounds: initialize arrays to avoid optimizing out undefined access
  * glsl-array-bounds: set out-of-bounds array index inside shader
  * glsl-1.10: remove initializer for uniform in fs-loop-while-false-03
  * glsl-arrays: initialize uniforms in shader to avoid errors from elimination
  * glsl-uniform-interstage-limits: New test poking at VS/FS shared uniform files.
  * util: Add a helper for generating formatted shader sources.
  * vulkan: remove glsl450 double precision tests
  * glsl-1.10: Adds additional test for macros redefinitions
  * ext_external_objects: Selecting a queue that supports graphics
  * ext_external_objects: Additions to the Vulkan framework
  * Switch from cElementTree to ElementTree.
  * cmake: install spirv (spv) files
  * ext_external_objects: remove double destroy of objects
  * ext_external_objects: set img,mem objects NULL after destroy
  * ext_external_objects: add error reporting to load_shader
  * ext_external_objects: determine filepaths via PIGLIT_SOURCE_DIR
  * glsl-1.10: remove test that no longer does what is intended
  * write-after-clear: Test linear -> sRGB with sRGB storage
  * write-after-clear: Clear lists of views
  * tests: Add test for texture view writes after fast-clears
  * Switch from collections to collections.abc.
  * cl: fix clGetDeviceInfo build with OCL < 2.0
  * cl: clGetKernelWorkGroupInfo check returned values
  * cl: clGetDeviceInfo check returned values
  * cl: clGetKernelInfo check returned values
  * cl: clSetKernelArg fix CL_INVALID_SAMPLER error message
  * cl: improve clEnqueueFillBuffer tests scope
  * cl: fix clEnqueueFillBuffer CL_INVALID_CONTEXT
  * cl: disable an asm call test on kabini
  * cl: add program need_image_support option
  * cl: manage an offset in retain_release-event
  * cl: require a least OCL 1.2
  * khr_texture_compression_astc: Make array subtests definition static
  * drawoverhead: Allow disabling of the color output.
  * drawoverhead: Allow selecting a specific test.
  * arb_shader_subroutine: Add test for implicitly converted arguments
  * cl: Add test passing large struct with dynamic realignment
  * glsl 4.20 & 4.30: test c-style array initialization
  * ssbo-atomics: Test that there is no implicit conversion of "mem" parameter
  * ext_external_objects: Sets tiling mode for the imported texture
  * cmake: Avoid pkg-config on Windows.
  * shader_runner: fix conditional jump depends on glsl_version
  * ext_external_objects: make libvulkan dependency optional
  * gitlab-ci: add libvulkan-dev to support tests that use Vulkan
  * ext_external_objects/vk-image-display: Add a new Vulkan->OpenGL test
  * ext_external_objects/vk-image-override: New approach to test formats
  * ext_external_objects/vk-image-override: Add a Vulkan-GL test
  * ext_external_objects: Helper structs that map the Vk and GL formats
  * ext_external_objects: Add Vulkan/OpenGL driver compatibility checker
  * ext_external_objects: Extended the interoperability and Vulkan helpers
  * ext_external_objects: Add Vulkan-OpenGL interoperability helpers
  * ext_external_objects: Add Vulkan helpers
  * ext_external_objects: Group external object tests
  * glsl-1.10: remove tests that no longer do what was intended
  * glsl-1.10: initialise texcoord array in test
  * Fix several shared-atomicMin* tests using "draw rect" instead of "compute"
  * tests: add reproducer for issue 2747
  * gl-2.0: remove unnecessary assert
  * glsl-1.10: stop sibling nested loop being eliminated
  * gen_variable_index_write_tests: stop arrays from being optimised away
  * arb_gpu_shader_fp64: fix indirect array access test
  * glsl-1.10: remove undefined behaviour from loop test
  * shader_runner: reset glClipPlane before each subtest
  * framework: Update to Python 3 ConfigParser.
  * tests: Added tests for nv_alpha_to_coverage_dither_control
  * ext_draw_instanced: add test
  * Remove the apitrace testing.
  * framework: remove unused import
  * framework: Replace assert with actual error
  * framework: allow PiglitException's to set a returncode
  * framework: Add env support to some test classes that don't have it
  * arb_texture_query_lod: relax tolerance values
  * framework/cl: Accept additional arguments in init and pass them to parent init
  * GL_ARB_vertex_program: Test that unused attributes don't affect used ones
  * gl-1.1: Test that unused normal array in ff shader doesn't affect other arrays
  * glsl-1.30: add a test with gl_ClipDistance as dead code
  * framework: Add xorg tests
  * framework: Actually deserialize the test environment
  * framework/test: pass env and cwd as optional arguments to Test
  * framework: allow xml profiles from outside the piglit tree
  * nv_viewport_array2: add some compiler, linker, and execution tests
  * shader_runner: allow setting viewports directly
  * nv_viewport_swizzle: add an errors test
  * nv_viewport_swizzle: add basic test
  * shader_runner: add glViewportSwizzleNV support
  * glsl-1.10: test invalid operator on function parameter
  * rgtc: generate some signed data for snorm formats.
  * glsl-1.20: new tests for out-of-bounds array access of vectors/matrices
  * tests: add reproducer for issue 1258
  * glsl-1.10: Add tests for condition on saturated value
  * glsl-1.10: test some arithmetic on non-existing variable
  * tests: add reproducer for issue #2596
  * arb_separate_shader_objects: Check return values.
  * egl-ext_egl_image_storage: Fix resource leak.
  * cmake: export build commands
  * tests: Verify that usage of string literals fails compilation
  * generated_tests: Remove six dependency.
  * arb_gpu_shader_fp64: Remove execution tests from gen_inout_fp64
  * arb_gpu_shader_fp64/int64: Test in/out variables with generator
  * random_ubo: Add GL_ARB_gpu_shader_int64 types
  * random_ubo: Fix python3 errors
  * glsl-4.00: Add tests for loops with mul and ishl incrementation
  * arb_gpu_shader5: test indirect texture access with different formats
  * ext_texture_norm16-render: use piglit_get_gl_enum_name
  * arb_shader_atomic_counters: Add a test for sparsely-used bindings.
  * ARB_gpu_shader5: Verify precise fract of NaN
  * ARB_gpu_shader5: Verify comparisons with precise arithmetic
  * glsl: Verify floating point underflow compared with zero
  * glsl-1.10: Verify sign multiplied by a value with negation, absolute value, or both
  * tests: Added tests for nv_copy_image
  * tests: intel_blackhole: ensure the blackhole state is disabled to readback surfaces
  * arb_shader_storage_buffer_object: Add test for auto setting binding point to an array of SSBOs
  * templates: Remove last remains of the six module
  * cl: Add test for 16-bit bswaps
  * glsl-arrays-copy-size-mismatch: Add test case for nir_opt_find_array_copies
  * cl: Add test for bswap
  * unittests: Properly skip tests if psutil isn't installed
  * CI: remove six from installed packages
  * cmake: remove python six dependency
  * drop python2 support
  * cmake: allow setting python versions via the command line
  * CI: remove python 2.7 and 3.5
  * framework/print-cmd: Fix exclude filter
  * Fix build on 32-bit arch of gen_intel_shader_integer_functions2 tests
  * glx_mesa_query_renderer: Fix error with GCC 10.
  * draw-prim-rate: reorder test execution order
  * draw-prim-rate: move the main loop body into a separate function
  * draw-prim-rate: test the performance of triangle strips
  * draw-prim-rate: don't change vertex attribs every draw call
  * arb_provoking_vertex/clipped-strip-first: New test.
  * util: Remove extra definition of piglit_automatic.
  * arb_internalformat_query2: Move global variable definitions to common.c.
  * gl-4.4/gl_max_vertex_attrib_stride: use a valid buffer offset
  * double_attribs: use a valid offset in glVertexAttribLPointer
  * intel_blackhole_render: test transitions of state in both directions
  * intel_blackhole_render: drop asserts in favor of error reporting
  * Fix scripts to run glcts and gles-cts using piglit runner
  * texturing: Move global variable definitions to common.c.
  * arb_gl_spirv: add some arrays of arrays ubo/ssbo tests
  * arb_gl_spirv: add ubo array test with copy between arrays
  * arb_gl_spirv: add ssbo test using std140 and std430
  * arb_gl_spirv: Add a test for SSBOs with an unsized array
  * arb_gl_spirv: add ubo tests with different matrix/array strides
  * arb_gl_spirv: Add tests for UBOs with explicit offsets
  * arb_gl_spirv: add a array of ubo test, with complex ubo content
  * arb_gl_spirv: add ubo/ssbo tests with matrices
  * shader_runner: add force_no_names mode
  * glsl-es-3.10: remove wrong regression checking test
  * tests: intel_blackhole_render: tests blit command
  * tests: intel_blackhole_render: additional check before enable & after clear
  * tests: intel_blackhole_render: turn asserts into test failures
  * tests: intel_blackhole_render: fix the tests when not run with -auto
  * glsl-1.50: test gl_PrimitiveID xfb
  * intel_performance_query: Build only if EGL is available.
  * oes_egl_image_external_essl3: check if 3.1 es is available
  * tests: add test for assert in INTEL_performance_query
  * Add test for OES_EGL_image_external_essl3
  * intel_shader_integer_functions2: Add generated execution tests for multiply32x16
  * intel_shader_integer_functions2: Add generated execution tests for averageRounded
  * intel_shader_integer_functions2: Add generated execution tests for average
  * intel_shader_integer_functions2: Add generated execution tests for subtractSaturate
  * intel_shader_integer_functions2: Add generated execution tests for addSaturate
  * intel_shader_integer_functions2: Add generated execution tests for countTrailingZeros
  * intel_shader_integer_functions2: Add generated execution tests for countLeadingZeros
  * intel_shader_integer_functions2: Add generated execution tests for absoluteDifference
  * parser_utils: Work around overflow with hex values in strtoll
  * gitlab-ci: Update to current ci-templates
  * rasterpos: first comprehensive test of glRasterPos
  * util/minmax-test: Free memory, allocated for token name
  * arb_clear_texture: Fix memory leak Memory that was allocated for glGetTexImage wasn't freed after comparison.
  * egl: add test for GL_EXT_EGL_image_storage 

-------------------------------------------------------------------
Thu Jun 11 08:54:01 UTC 2020 - Martin Pluskal <mpluskal@suse.com>

- Fix building with gcc10

-------------------------------------------------------------------
Tue Dec 10 13:08:06 UTC 2019 - Martin Pluskal <mpluskal@suse.com>

- Update to version 1~20191210.603cfb975:
  * glsl-es-3.10: add precision statement to a shader missing it
  * ext_dsa: add vao functions tests
  * arb_vertex_attrib_64bit: fix error message in explicit location check
  * Require a GLSL version in fs-shift-left-of-shift-left
  * arb_separate_shader_objects: add linker test for glsl version 1.40
  * ci: update wayland/ci-templates ref
  * glsl-1.50: new GS test for emitted triangle strip orientation
  * arb_blend_func_extended: Make issue-1917 test reproduce issue on BSW
  * arb_program_interface_query: add gl_PerVertex redeclaration
  * ext_disjoint_timer_query: use/test glGetInteger64vEXT call
  * ext_texture_format_bgra8888: changes for effective internal format
  * tbo: include tbo re-init test to opengl.py
  * arb_blend_func_extended: Add test checking corruption on BSW/BDW
  * gitlab-ci: use ccache to speed up builds
  * gitlab-ci: set interruptible to auto-cancel CI pipelines
  * glsl-es-3.10: port arb_shader_atomic_counters tests to glsl-es-3.10
  * arb_shader_atomic_counters: fix buffers needed check
  * arb_gl_spirv: add some simple ubo/ssbo tests
  * arb_gl_spirv: add GL_ACTIVE_UNIFORMS checks
  * tbo: test a re-initialization
  * arb_shading_language_include: delete shader includes on teardown
  * Add new tests for ROL/ROR instruction verification
  * generated_tests: more python fixes
  * tox: hold pytest-mock to version 1.11.2, since 1.12 seems to be broken
  * python: fix collections.abc warning
  * python: fix string tests
  * glsl-es-3.10: add some image load/store tests with predication.
  * piglit-util: expand piglit_integer_texture
  * arb_shading_language_include: fix crash in process isolation
  * cl/create-context-from-type: fix typo in output error text
  * gitlab-ci: avoid pulling all the git history each time
  * gitlab-ci: limit ninja to 4 threads to avoid stealing resources from other jobs
  * ext_occlusion_query_boolean: remove invalid enum check
  * ext_disjoint_timer_query: add GL_QUERY_COUNTER_BITS_EXT tests
  * arb_separate_shader_objects: remove broken test
  * glsl-1.30: Add tests involving isnan() combined with other comparisons
  * arb_sparse_buffer: tests EXT_direct_state_access interactions
  * arb_texture_buffer_range: modify test to also use glTextureBufferRangeEXT
  * ARB_instanced_arrays: Add test for VertexArrayVertexAttribDivisorEXT
  * arb_gpu_shader_fp64: add test for EXT_direct_state_access interactions
  * arb_clear_buffer_object: extends test to use Named functions
  * shader_runner: don't use deleted query objects
  * shader_runner: support query object failures in subtests
  * shader_runner: fix garbled non-unicode output making piglit-run choke on it
  * cmake: use DT_RUNPATH instead of DT_RPATH for executables
  * arb_gl_spirv: add xfb tests for lines and triangles
  * arb_gl_spirv: add xfb tests
  * shader_runner: add xfb query object support
  * shader_runner: add xfb testing support
  * shader_runner: add support for glGetProgram queries
  * Add a test of a select of a negation of an int cast from a float
  * glx: fix pointer type
  * egl: one more s/EGL_NO_CONFIG_MESA/EGL_NO_CONFIG_KHR/
  * s/EGL_NO_CONFIG_MESA/EGL_NO_CONFIG_KHR/
  * cmake: drop egl dependency version
  * Use source code location for Mako's module_directory
  * arb_gpu_shader_int64: add display list test
  * egl: simple test for EGL_EXT_image_flush_external
  * cl/get-device-info: fix variable type for CL_DEVICE_MAX_CONSTANT_BUFFER_SIZE
  * travis: drop overly complicated regular build as it's covered directly by gitlab now
  * add pre-merge gitlab ci :)
  * tox,cmake,travis: Add support and testing for Python 3.8
  * Fix pbo-getteximage to check for GL_ARB_texture_cube_map_array
  * tests: add test for PBO texture downloads
  * arb_bindless_texture: test an unnamed explicitly bound ubo that contains a sampler
  * arb_bindless_texture: test a basic unnamed ubo that contains a sampler
  * glx-egl-switch-context: Do not compile if EGL unavailable
  * glx,egl: Reproduce crash while switching contexts
  * glsl: Verify that open-code bitfieldReverse is not improperly optimized
  * ext_demote_to_helper_invocation: Add extension to [require]
  * ext_demote_to_helper_invocation: avoid requiring GL 4.5
  * arb_texture_view: add test verifying internal _Layer variable is cleared on texture units
  * util-cl: be verbose if platform exposes no devices
  * ext_demote_to_helper_invocation: Add execution tests
  * ext_demote_to_helper_invocation: Add compiler tests
  * glsl-1.20: test incompatible matrices multiplication
  * vulkan: add geometry shader double interpolator test
  * tests: add tests for ARB_texture_storage + EXT_dsa
  * ext_direct_state_access: add test for glNamedCopyBufferSubDataEXT
  * ext_direct_state_access: add glGenerateTextureMipmapEXT/glGenerateMultiTexMipmapEXT test
  * ext_direct_state_access: add tests for EXT_texture_integer interactions
  * GL_OES_EGL_image: be more verbose, correct typos
  * glsl-es-3.10: regression checking for load_shared support on the nir scheduler
  * GL_OES_EGL_image: include EGL_GL_TEXTURE_LEVEL_KHR usage in test
  * glsl-1.10: add infinite loop tests
  * vulkan: add geometry shader vertex overflow test
  * glx-mesa-query-renderer: Fix build error
  * glx-fbconfig-compliance: Drop accumulation buffer requirement
  * glx-query-renderer-coverage: Start adding value sanity tests
  * glx: Test for both strings for EXT_create_context_es{,2}_profile
  * glx-destroycontext-3: Test calling DestroyContext redundantly
  * tests/fp-long-alu: Memory leak in fp-long-alu test
  * tests/texturing: Free miplevel info
  * tests/arb_sample_shading: Multiple memory leaks
  * shader_runner: sscanf returns incorrect value on 32-bit build
  * glx-fbconfig-sanity: memory leak
  * Apply path correction to correct argument
  * generators: Add the default precision for floats in GLSL ES shaders
  * glsl-es-1.00: Test that function return value has precision
  * glsl-es-1.00: Test that mismatched function return precision fails
  * arb_shading_language_include: test interaction with preprocessor defines
  * arb_shading_language_include: compile test features when disabled
  * arb_shading_language_include: add api functionality tests
  * arb_shading_language_include: add api error tests
  * arb_shading_language_include: compile test #line
  * arb_shading_language_include: add compile tests for relative path
  * glslparsertest: add support for setting a relative include path
  * arb_shading_language_include: add explicit path compile tests
  * glslparsertest: add support for adding dummy shader includes
  * arb_shading_language_include: test relative paths
  * shader_runner: add support for glCompileShaderIncludeARB()
  * arb_shading_language_include: add some basic execution tests
  * shader_runner: add basic GL_ARB_shading_language_include support
  * teximage-errors: add TexSubImage variants
  * tox,README,cmake: Remove testing of end-of-life Python 3.4
  * egl: add new test for GL_OES_EGL_image
  * glx/ext_no_config_context: Verify bad attributes are rejected
  * glx/ext_no_config_context: Validate glXQueryContext correctness
  * glx: Fix fbconfig matching in glx-make-glxdrawable-current
  * egl: add additional test for EGL_ANDROID_blob_cache
  * arb_enhanced_layouts: revert testing SPIR-V shaders on arb_enhanced_layouts tests
  * travis: Drop python3.4
  * travis: Schedule cmake build job first
  * glsl-1.10: Add tests for do {} while (false) loops
  * test/logicop: expand tests to also cover MSAA render target
  * gl-1.1: Fix test for vertex counts.
  * Add glsl parser tests for EXT_texture_shadow_lod
  * glsl-1.30: Add a test for bad optimizations of (a << b) << c
  * tests: cleanup potential errors at the end of EXT_dsa test
  * tests: fix EXT_dsa framebuffer test
  * EXT_shader_image_load_store: atomics should be done on single-component images
  * EXT_shader_image_load_store: skip atomics for not-1x32 types
  * shader_runner: allow enabling GL_DEPTH_CLAMP
  * tests: fix test build requiring gles3
  * arb_tessellation_shader: fix broken compat gl_ClipVertex test
  * tests: add EXT_shader_image_load_store tests
  * tests: Reproducer for 110796
  * tests: enable intel_external_sampler_only for iris
  * framework: Also skip logging info utils on EACCES.
  * shader_runner: replace NamedBufferSubdata
  * shader_runner: Add command line option to ignore uniform if it isn't found in shader Reviewed-by: Eric Anholt <eric@anholt.net>
  * cl: Add tests for some cases that were broken with function calls
  * arb_get_program_binary: test restore of SSO program
  * arb_tessellation_shader: add some new gl_ClipVertex tests for compat
  * vulkan/vkrunner: Use the new alternative names for setting uniforms
  * framework/cl: Don't override timeout setting from cmdline
  * tests/ext_frame_buffer_multisample: Release memory allocated by Test
  * Add tests for EXT_dsa NamedProgram functions
  * intel_shader_atomic_float_minmax: Explicitly request std430 layout
  * ssbo/shared: fix min/max tests to specify std430
  * framework/test: Add default 1min timeout to all OpenCL tests
  * shader_runner: some extra skip reasong logging
  * glsl-es-1.00: Only unroll a do-while-false loop once
  * tests/fbo: init texture content
  * tests/arb_direct_state_access: Memory leak
  * util: Optionally validate SPIR-V after assembling
  * util: Assemble SPIR-V with the correct target environment
  * tests: Free memory returned by glXChooseFBConfig
  * test/textureGather: memory leak
  * tests/texelFetch: Memory leak
  * arb_copy_buffer: NULL check for glMapBuffer outcome
  * util/piglit-util-gl: Memory leaks in a number of tests
  * tests/fp-indirections2: Memory isn't freed
  * tests/arb_copy_image: Memory leak
  * arb_texture_buffer_range: Fix buffer alignment in ranges-2 test
  * tests/vertex-program-two-side: Memory leak
  * draw-prim-rate: Fix Clang build error.
  * Add a test that measures primitive rate
  * opengl.py: fix incorrect ext_transform_instanced extension name
  * rendermode-feedback: fix a crash
  * test: fix resource leaking for depthstencil-render-miplevels
  * test: fix core dump for depthstencil-render-miplevels
  * ext_dsa: fix invalid empty shader in test
  * ext_direct_state_access: test glTextureImage* with GL_PROXY_TEXTURE_* targets
  * ext_direct_state_access: verify possible failures when using GL_COMPILE
  * util/dma_buf: allow custom rendernode
  * tests/overlapping-locations-input-attribs: Memory leak
  * tests/line-aa-width: Memory leak
  * fbo-generatemipmap-formats: Modify NPOT tex_width
  * glx-multithread-buffer: Add a new test reproducing a radeonsi bug
  * piglit_drm_dma_buf: fix NV12, YUV420, and YVU420 import tests for radeonsi
  * Revert "cmake: make gbm a required build dependency"
  * shader_runner: don't abort on atomic counter subtest failure
  * cmake: make gbm a required build dependency
  * util/dma_buf: drmGetVersion requires free
  * glsl-1.20: Test various invalid type conversions in uniform initalizers
  * glsl-1.20: Test mix(±1, b, c)
  * Add new test for idiv by const optimizations
  * shader_runner: add 'probe ssbo int'
  * ext_direct_state_access: add tests CompressedMultiTexImage* functions
  * ext_direct_state_access: add test for Framebuffer functions
  * ext_direct_state_access: add test for glNamedFramebufferRenderbufferEXT
  * ext_direct_state_access: add tests for ProgramUniformXXXEXT functions
  * ext_direct_state_access: glGet*IndexedvEXT
  * ext_direct_state_access: add test for glEnableClientStateiEXT / glDisableClientStateiEXT
  * ext_direct_state_access: add test for glCompressedTexture*Image2DEXT
  * ext_direct_state_access: add test for named buffer functions
  * ext_direct_state_access: add test for multitexture functions
  * ext_direct_state_access: add tests for glTexture*EXT functions
  * ext_direct_state_access: add test for matrices functions
  * egl-query-surface: really print the width in the error message
  * egl: ask the X11 WM to keep windows the size we expect
  * Fix drawarrays-vertex-count GL_LINES test
  * Avoid undefined behavior in glsl-routing test
  * s3tc-errors: Fix GCC unused-function warning.
  * arb_blend_func_extended: fix gles3 version glClearDepth usage
  * arb_blend_func_extended: Test dual src blending without second color output
  * texelFetch: Print what miplevel failed.
  * fbo: Silence compiler warnings about const mismatches
  * Fix piglit_loge usage
  * Add format warning attribute for piglit logs functions
  * arb_texture_multisample: Tests working texelFetch() with DSA style
  * Remove dead es3conform.py test suite
  * README.md: add links to the table of contents
  * README.md: fix the table of contents
  * README.md: fix the formatting for the main sections
  * s3tc-errors: Fix GCC unused-variable warning.
  * egl: Fix tests for EGL_EXT_device_base extension list use.
  * ext_shader_image_load_formatted: add a test for the extension
  * amd_compressed_atc_texture: add miptree test
  * arb_separate_shader_objects: add gl_PerVertex tests
  * fbo-blit-check-limits: New test
  * intel/ppgtt: memory alignment test.
  * vec4: add a new test for issue 109759 and 110201
  * packed_depth_stencil: warning for a non-zero 24-bit unused field
  * nv_compute_shader_derivatives: Test textures with implicit LOD
  * nv_compute_shader_derivatives: Test use of derivatives
  * nv_compute_shader_derivatives: Test linker failures
  * nv_compute_shader_derivatives: Test compiler failures
  * nv_compute_shader_derivatives: Test new functions available in CS
  * glsl-1.20: test 'invariant' propagation influence on globals matching
  * glsl-1.20: test that 'invariant' qualifier does not propagate on uniforms
  * ext_image_dma_buf_import: test for exporting imported buffer
  * ext_gpu_shader4: test glBindFragDataLocationEXT and 'varying out'
  * arb_separate_shader_objects: split linker tests
  * ext_gpu_shader4: add compiler tests for everything
  * Test that GL_PRIMITIVES_SUBMITTED queries don't include extra prims.
  * EGL_EXT_image_dma_buf_import: add UYVY format suppor
  * EGL_EXT_image_dma_buf_import: add YUYV format support
  * egl: Add tests for EGL_EXT_device_base.
  * Add a new test for a structure uniform splitting bug with samplers
  * shader_runner: get proper access bitfield when calling MapBufferRange
  * shader_runner: fix error checking on MapBuffer gles workaround
  * fbo-scissor-blit: memory leak
  * gl-1.1: Add a new test for large vertex counts.
  * arb_sample_shading: Test interaction of apha-to-coverage, sample mask and MRT
  * bitmap-heart-dance: Disable shader program before fixed functions
  * egl: add test for EGL_MESA_query_driver
  * ext_semaphore: add check for glGetIntegerv(GL_NUM_DEVICE_UUIDS_EXT)
  * KHR_parallel_shader_compiler: new test (v2)
  * fbo-formats: Reuse piglit_merge_result().
  * arm_shader_image_load_store: Fix strict-aliasing warnings.
  * util: Introduce fui() and uif() helpers for bit-casting floats/uints.
  * fp-unpack-01: Reuse the shared piglit_half_from_float().
  * arb_program_interface_query: use out resource to make it active
  * arb_separate_shader_objects: remove misleading comments
  * arb_program_interface_query: redefine built-ins with SSOs
  * glx_arb_create_context: Fix build against older GL headers.
  * arb_enhanced_layouts: corrected multiple comments
  * glsl-1.10: test for crash in loop analysis
  * arb_enhanced_layouts: add xfb_offset overlap test
  * arb_enhanced_layouts: add another xfb_stride overflow test
  * arb_enhanced_layouts: add component aliasing tests
  * arb_enhanced_layouts: correct component usage with dvec{3,4} tests
  * arb_enhanced_layouts: add aliasing tests with mixed type widths
  * arb_enhanced_layouts: correct interpolation qualifiers
  * arb_enhanced_layouts: GL_ARB_gpu_shader_fp64 requires GLSL 1.50
  * arb_enhanced_layouts: corrected multiple comments
  * arb_separate_shader_objects: add unused location qualified input test
  * arb_separate_shader_objects: add location overlapping tests
  * arb_separate_shader_objects: add rendez-vous-by mismatch tests
  * arb_program_interface_query: correct rendez-vous by name matching
  * arb_program_interface_query: correct tests table indentation
  * tests: Check that count of vertex atomic counters enough for test
  * update URLs after gitlab migration
  * appveyor: Update instructions for personal repositories.
  * appveyor: Fix build with CMake 3.13.3.
  * EGL_EXT_image_dma_buf_import: fix p010, p012 input
  * Add a test for writing to an indirect component of a swizzled vec4 TCS output
  * Add a test for writing to an indirect component of a vec4 TCS output
  * glx: add test for GLX_ARB_create_context_no_error
  * egl: Add test for EGL_KHR_create_context_no_error
  * Make glsl-fface-invariant accept either compile or link errors
  * glsl-fs-discard-mrt: New test for bug 75207
  * fs-texture-select: Fix undefined read of gl_TexCoord[0].
  * getteximage-targets: Fix printing of failing coordinates.
  * arb_indirect_parameters: Test working with conditional rendering
  * glsl-1.10: test unrolling another loop with variable iteration limits
  * arb_gpu_shader_int64: Test extracting individual bytes from 64-bit values
  * shaders: Verify that -int(some_bool) & value is handled correctly
  * viewport-clamp: to test the viewport clamping
  * editorconfig: Add max_line_length property
  * arb_shading_language_420pack: test invalid function return type
  * ARB_shader_storage_buffer_object: check ssbo array optimizations
  * arb_enhanced_layouts: use consistent test names
  * arb_enhanced_layouts: Fix error in subtest result reporting
  * arb_enhanced_layouts: don't call glLinkProgram twice
  * EGL_EXT_image_dma_buf_import: add support for XYUV format
  * glsl-1.10: fix some function call tests
  * ext_color_buffer_float: check fp32 blend enforcement
  * primitive-restart: extend the test to catch regressions of bug-109451
  * tests/shaders/bug-109601: drop ARB_shader_storage_buffer_object requirement
  * shaders: Reproduce a bug in the i965/anv backend compiler
  * EGL_EXT_image_dma_buf_import: test alpha channel for AYUV format
  * EGL_EXT_image_dma_buf_import: add P12, P16 format support
  * EGL_EXT_image_dma_buf_import: add P10 format support
  * map_buffer_range_test: use NULL instead of zero for ClearBuffer
  * map_buffer_range_test: add tests to reproduce u_threaded & radeonsi bugs
  * AMD_texture_texture4: new test
  * Add new API tests for BPTC and RGTC GLES extensions (v2)
  * opengl.py: add run_concurrent=False where needed
  * tex-miplevel-selection: force compatibility when using 430 shader
  * arb_enhanced_layouts: explicit-offset: add more corner cases
  * summary/html: drop trailing slash in <br>
  * summary/html: drop trailing slash in <img>
  * summary/html: specify lang="en" in html tag
  * summary/html: drop type from css-links
  * summary/html: use html5 instead of xhtml
  * arb_gpu_shader5: add more variants of the struct interpolateAt tests
  * summary/html: escape html
  * summary/html: ensure xml-line is the very first line
  * summary/html: open pre-tag instead of closing it
  * summary/html: close the right html-tag
  * util: fix off-by-one when loading source
  * util: simplify string duplication logic
  * fix macro redefinition with libdrm>=2.4.95
  * fbo-3d: test both POT and NPOT depths
  * s3tc: fix error checking when NPOT is not available
  * miptree: test ability to use upside down miptree
  * Test that ES frag shader with invariant outputs compiles
  * arb_tessellation_shader: Test unmatched TCS output usage
  * website: Convert Makefile to build-html.sh shell script
  * README.md: Customize for the piglit project
  * index.rst: Change content to match current piglit website
  * sphinx: Change theme from alabaster to flask
  * conf.py: Customize for the Piglit project
  * .gitlab-ci.yml: Build the website when the docs directory changes
  * docs: Import gitlab sphinx example under docs directory
  * glsl-1.10: test unrolling of loop where max iteration count guessed
  * glsl-1.10: test unrolling loops with variable iteration limits
  * Fix 'piglit resume'
  * Probe pixel colors in bitmap-heart-dance test
  * tests/ext_polygon_offset_clamp-draw: use subtest framework
  * tests/ext_semaphore-api-errors: Fix typo "usigned" -> "unsigned"
  * tests/ext_semaphore-api-errors: Use subtest mechanism
  * tests/ext_semaphore_fd-api-errors: Enumerate subtests
  * tests/ext_transform_feedback-max-varyings: use subtest framework
  * tests/ext_transform_feedback-max-varyings: remove duplicate configs
  * tests/ext_transform_feedback-max-varyings: fix result reporting
  * tests/ext_transform_feedback-max-varyings: Always report subtests
  * tests/ext_window_rectangles-dlist: enumerate subtests
  * tests/gl-1.0-beginend-coverage: enumerate subtests
  * tests/gl-1.0/beginend-coverage: Run nondlist tests
  * tests: use subtest frameowrk in gl-1.0-dlist-beginend
  * tests: use subtest framework for gl-1.0-rendermode-feedback
  * tests: Use a helper function in gl-1.0-rendermode-feedback
  * tests: Fix indent in gl-1.0/vertex-program-two-side
  * tests: Use piglit_run_selected_subtest in gl-3.0-render-integer
  * mesa_pack_invert/readpixels: enumerate subtests
  * nv_image_formats/copy-image-formats: Convert to use subtests
  * test/logicop: Use piglit_subtest mechanism
  * arb_texture_view: fix security format warnings
  * arb_gl_spirv: simple test, use correct reference colors
  * ext_image_dma_buf_import/unsupported_format has no reason to be intel-only
  * make sure 'unsupported format' test always uses an unsupported format
  * tests: only run rounding tests if FE_UPWARD is present
  * EGL_EXT_image_dma_buf_import: drop alpha-one to sample yuv tests
  * travis: reflect new best-practice travis-ci configuration
  * cl: Wait for kernel execution instead of flushing the queue in cl_piglit_execute kernel
  * cl: Add execution event parameter to piglit_cl_enqueue_kernel
  * program_interface_query: don't expect a valid location for TCS output
  * drawoverhead: print results in the CSV format
  * ext_window_rectangles/render: make the test more thorough
  * primitive-restart-draw-mode: draw front and back faces in different colors
  * tests/image_load_store/atomic: use piglit subtest framework
  * texturing: run gles2 variants as well
  * s3tc-errors: port to gles20
  * s3tc-errors: port to gles31
  * s3tc-texsubimage: port to gles2
  * s3tc-teximage: port to gles2
  * texturing: use piglit_draw_rect_tex instead of glBegin/glEnd
  * texturing: make sure s3tc tests require GL 1.1
  * arb_texture_view: Test interaction with ARB_shader_image_load_store
  * EGL_EXT_image_dma_buf_import: set RGBA visual for yuv sampling tests
  * EGL_EXT_image_dma_buf_import: fix error check with unknown drm format
  * vulkan: Prefix group names for VkRunner tests with “vulkan”
  * EGL_EXT_image_dma_buf_import: add AYUV format support
  * remove ext_image_dma_buf_import-intel_external_sampler_with_dma_only
  * khr_debug: fix invalid enum usage on gles3
  * framework: Add support for serializing VkRunner tests
  * framework/test: Use relative paths in the filename for VkRunnerTest
  * framework/test: Set the filename property on VkRunnerTest
  * Cmake: Install vk_shader_test files
  * python: add explicit utf-8 encoding
  * framework: fix python2
  * vulkan: test cases for large local arrays
  * vulkan: Add some tests for glsl450 builtin functions using doubles
  * framework: Add a vulkan tests profile
  * glsl/frexp: fix the incorrect expected values
  * idtech: Fix format-security warning.
  * egl_ext_device_drm: Fix format warning.
  * gles-3.0: test for vertex attribute aliasing
  * egl_ext_device_drm: don't fail the test if open("/dev/dri/cardX") errors
  * piglit: remove unneeded wayland-egl dependency
  * tests: enable test case egl-context-priority on all egl platforms
  * glsl-1.30: update linker test for inter stage in/out vars usage
  * fbo: add a few quirk-tests for format-emulation
  * piglit/vbo: memory leak
  * glsl-1.50: Verify that gl_ClipDistance cannot be redeclared to change qualifier or type
  * glsl-1.30: Verify that gl_ClipDistance cannot be redeclared to change qualifier or type
  * glsl-1.10: Verify that gl_TexCoord cannot be redeclared to change qualifier or type
  * glsl-1.50: Add missing out qualifier on gl_ClipDistance redeclaration
  * Build fix for previous commit
  * arb_tessellation_shader/tes-gs-max-output: new test for TES/GS amplification
  * glsl-1.50/gs-max-output: new test for geometry shader amplification
  * arb_shader_image_load_store: Test format incompatible texture buffer
  * idTech: fix extensions string list
  * glsl-1.10: add tests for an array index on a swizzled vec lvalue
  * glsl-1.10: test some arithmetic on non-existing struct member
  * Add tests for GL_EXTENSION_STRING vs. old idTech2 / idTech3 games
  * sanity: Add some generated tests
  * sanity: Support generated shader tests
  * sanity: Fix test names
  * khr_texture_compression_astc: Add void-extent-dl-bug
  * tests: Split out ASTC formats into a header
  * glsl-1.50: Add test for geometry shader with unused outputs
  * glsl-sdl-sincos-accuracy: Add a new test for a vc4 bug with SDL2.
  * sanity: Don't add generated_tests since they are built later
  * Revert "sanity: Add various shader_runner tests"
  * sanity: Add various shader_runner tests
  * sanity: Turn shader_test list into a tuple
  * framework/wflinfo: delete deprecated interface
  * serializer: serialize new fast-skip attributes
  * framework/test: Convert tests to new fast-skip interface
  * unittests/wflinfo: Update tests for new API
  * wflinfo: Reimplement wflinfo separating the various API's
  * framework/shader_test: GL_NUM_PROGRAM_BINARY_FORMATS >= 1 is not an extension
  * framework/test: Fix whitespace
  * glsl-1.10: add a 'initialization-incompatible-type-propagation' test
  * glsl-1.10: Verify result of sign(a)*sign(b)
  * glsl-1.20/fs-deref-literal-array-of-structs-with-multiple-members-large-array: Fix it
  * fbo-drawbuffers-maxtargets: fix a warning
  * shaders: Reproduce a bug in the i965 backend optimizer
  * tests: Added a new GTF-GL test profile for the Khronos CTS runner
  * tests: Added a new GTF-GLES test profile for the Khronos CTS runner
  * cl: Add test for call stack realignment
  * Add tests for GL_AMD_depth_clamp_separate
  * shader_runner: Take spirv_replaces_glsl into account for current_config
  * egl_khr_create_context: Proper invalid attributes for EGL 1.5
  * arb_vertex_array_object: Add test for deleting object zero
  * glsl-1.10: Put an if-statement in a macro in the false path of an ifdef
  * cl: Add tests for calls with special inputs
  * cl: Add test for respecting byval alignment in call setup
  * arb_fragment_shader_interlock: Additional compile tests
  * arb_fragment_shader_interlock: Simple compiler tests
  * glsl-1.10: add some preprocessor stringification tests
  * arb_tessellation_shader: add GL_EXT_shader_integer_mix on [require]
  * glsl-1.30: add linker test for inter stage in/out vars usage
  * Cmake: Install shader_source files
  * util: stop overallocating shader memory
  * util: avoid leaking memory when caller doesn't ask for it
  * egl: fix uninitialised counter
  * egl: fix uninitialised counter
  * util: fix memory leak
  * arb_gpu_shader5: fix memory leak
  * egl_ext_device_enumeration: check the populate call to eglQueryDevices
  * egl Add new test of EGL_EXT_platform_device
  * egl_mesa_platform_surfaceless: plug some memory leaks
  * egl: Add basic EGL_EXT_device_drm test
  * egl_ext_device_query: plug memory leaks
  * egl_ext_device_query: return PIGLIT_WARN when eglGetDisplay fails
  * egl_ext_device_query: drop unused major/minor from eglInitialize
  * egl: Add basic EGL_MESA_device_software test
  * egl_ext_device_query: check for eglQueryDeviceStringEXT EGL_BAD_DEVICE_EXT
  * arb_gl_spirv: adding basic va64 test
  * util/vbo: Accept integer attribute names
  * arb_enhanced_layouts: Test doubles
  * arb_enhanced_layouts: Test XFB layout qualifiers via SPIR-V
  * arb_gpu_shader5: Add support for testing spirv with XFB streams
  * util: Add utilities to handle shader_test files
  * util: Add a utility to assemble SPIR-V sources
  * arb_gl_spirv: add test that mixes atomic counters with a normal uniform
  * arb_gl_spirv: add tests for atomic counter operations in CS
  * arb_gl_spirv: add tests for atomic counter operations in FS
  * shader_runner: add command 'probe atomic counter buffer'
  * arb_gl_spirv: Add a fiddly test for uniform index calculation
  * arb_gl_spirv: Add a test for an array of structs uniform
  * arb_gl_spirv: Add a test for a uniform struct with struct members
  * arb_gl_spirv: Add a test for a struct uniform
  * arb_gl_spirv: Add a test for non-sequential explicit uniform locations
  * arb_gl_spirv: Add 4 tests for uniform initializers
  * arb_gl_spirv: add two linking tests for uniform multisample images
  * arb_gl_spirv: Add a test for nonconst array of sampler structs
  * arb_gl_spirv: Add a test for a sampler within a struct
  * arb_gl_spirv: Add tests for sampler2D uniform binding initialisers
  * arb_gl_spirv: uniform sampler2D
  * arb_gl_spirv: add execution test for multi-dimensional (aoa) uniform
  * arb_gl_spirv: add a small test with an array of uniforms
  * arb_gl_spirv: add basic test with two uniforms
  * arb_gl_spirv: add basic uniform test without names
  * arb_gl_spirv: basic uniform test with names still present
  * arb_gl_spirv: Add a test using specializations
  * arb_gl_spirv: add really simple execution test
  * shader_runner: debug prints if running on SPIR-V mode.
  * shader_runner/spirv: Add support for SPIR-V specializations
  * shader_runner/spirv: add vertex shader passthrough support on SPIR-V
  * framework: add --glsl option
  * shader_runner/spirv: support loading SPIR-V shaders
  * util: Add a utility to stream data through an external process
  * intel_shader_atomic_float_minmax: Validate NaN behavior of atomicMin and atomicMax
  * intel_shader_atomic_float_minmax: Add test for atomicCompSwap involving NaN
  * intel_shader_atomic_float_minmax: Add tests for atomicCompSwap with -0
  * intel_shader_atomic_float_minmax: Add tests for atomicCompSwap(float, float, float)
  * intel_shader_atomic_float_minmax: Add tests for atomic{Min,Max}(float, float)
  * intel_shader_atomic_float_minmax: Add tests for atomicExchange(float, float)
  * intel_shader_atomic_float_minmax: Simple negative compile tests
  * arb_tessellation_shader: Add test for indirect addressing of TES patch inputs
  * Cmake: Remove Python 3.3 from the list of versions to search for
  * ext_render_snorm-render: test for GL_EXT_render_snorm
  * glsl-1.10: add a 'invalid-array-as-function-param' glslparsertest
  * cl: Add test for CSR VGPRs caused by SGPR spilling
  * cl: Add bigger versions of calls with struct tests
  * cl: Fix types to be unsigned
  * glsl-1.10: add a 'post-increment-in-array-size' glslparsertest
  * CMake: Add Python 3.7 to list of supported python version
  * dispatch: add missing break
  * framework/test/shader_test.py: Remove redundant workaround for python 3.3 mock
  * tox: Add python 3.7 to build matrix
  * README.md: Note that python 2.7 or >=3.4 is supported
  * dispatch: fallback to eglGetProcAddress for core functions
  * dispatch: use do_dlsym() helper on all posix platforms
  * dispatch: move variables/defines where they're used
  * dispatch: kill off RTLD_LOCAL
  * arb_direct_state_access: remove unneeded piglit_dispatch_default_init()
  * util/gl: don't call piglit_dispatch_default_init in piglit_use_*_program
  * egl: add eglCopyBuffers test
  * egl-util: introduce egl_util_create_native_pixmap helper
  * egl-util: use piglit_egl_get_display over eglGetDisplay
  * egl: split out a piglit_egl_get_display helper
  * egl: Call eglBindAPI after eglInitialize
  * Update gl.xml from opengl registry and fix gl.py
  * Add a test for GL_AMD_framebuffer_multisample_advanced
  * ext_texture_norm16-render: read SNORM formats if EXT_render_snorm
  * arb_provoking_vertex: Test flat shading with clipped geometry
  * ext_texture_norm16-render: add more API coverage
  * Test glMultiDrawElementsIndirect with non-VBO attribs
  * Test glMultiDrawArraysIndirect with non-VBO attribs
  * summary/html: generalize info output
  * JSON: move info utilities out of root
  * polygon-mode: also test polygon culling
  * Prevent loop unrolling in a shader test
  * framework: deepcopy TestProfile's filters when copying it
  * tox: remove pytest-warnings and set pytest-timeout to 1.2.1
  * tox: Remove testing of end-of-life Python 3.3
  * generated_tests: Make API a subdir in gen_shader_framebuffer_fetch_tests
  * framework: Make error about mixed GLES and GL more imformative
  * EXT_shader_framebuffer_fetch: Add test cases specific to desktop GL.
  * EXT_shader_framebuffer_fetch: Add tests for framebuffer fetch outputs with invalid layout qualifier.
  * EXT_shader_framebuffer_fetch: Port existing tests to non-coherent extension.
  * EXT_shader_framebuffer_fetch: Pass output type and precision to decl_frag_data macro.
  * EXT_shader_framebuffer_fetch: Parameterize more tests on the GL API version.
  * shader_runner: Add fbfetch barrier command.
  * Update XML for latest version of GL_EXT_shader_framebuffer_fetch.
  * tests/sanity: declare encoding of file for python 2
  * tests: intel_conservative_rasterization: fix invalid draws
  * tests/opengl.py: Replace tabs with spaces
  * tests/opengl: Add nv_image_formats-gles3
  * tests/opengl: Add intel_conservative_rasterization-invalid_gles3
  * tests/opengl: Add glx-swap-copy
  * tests/opengl: Add gl-3.3-vertex-attrib-p-type-size-match
  * tests/opengl: Add gl-3.3-vertex-attrib-p-types
  * tests/opengl: Add arb_texture_view tests for gles3
  * tests/sanity: Rework sanity to be more useful
  * arb_vertex_attrib_64bit: test display list interaction
  * arb_gpu_shader_fp64: Test the sign() function with abs() and negation of its argument
  * glsl-1.10: Test the sign() function with abs() and negation of its argument
  * glsl-1.10: test bug with lessThan() when the input expression has mixed sizes
  * arb_compute_shader: test dispatch functions with display lists
  * framework: add a --timeout parameter
  * ext_texture_norm16-render: support EXT_render_snorm interactions
  * tests/opengl.py: add couple missing arb_get_program_binary tests
  * arb_gpu_shader5: Add a test for instanced GS inputs.
  * compatibility: test vertex color clamping in geom and tess shaders
  * arb_draw_indirect: test when 0 bound to DRAW_INDIRECT_BUFFER in compat
  * general: better test display lists in attribute test
  * nv_fog_distance: Test interactions with GL_FOG_COORDINATE
  * nv_fog_distance: Simple rendering test
  * nv_fog_distance: Simple touch test for the enums
  * gl-1.0-blend: Whitespace and formatting fixes
  * gl-1.0-blend: Trivial code simplification
  * gl-1.0-blend: Enable EXT_blend_subtract tests on implementations that lack EXT_blend_minmax
  * gl-1.0-blend: Fix problems with blend extension detection
  * tests: Add cmake for oes_texture_compression_astc with Desktop GL
  * tests/opengl.py: remove ext_transform-get-buffer-size
  * tests/opengl.py: fix ext_shader_samples_indentical tests
  * tests/opengl.py: Fix name of gl-4.3 test
  * tests/opengl.py: re-remove layout-std140 test
  * tests/opengl.py: Fix misnamed test binaries
  * ARB_get_program_binary: Test that XFB varying info works on program reload
  * deqp: Add Mesa version overrides for khr_gl* testlist generation.
  * arb_tessellation_shader: test GL_PATCHES with immediate mode
  * arb_tessellation_shader: test tes interaction with fixed function fragment shader
  * glsl-1.50: test gs interaction with fixed function fragment shader
  * arb_gpu_shader_fp64: test display list support
  * arb_shader_subroutine: add simple display list test
  * arb_viewport_array: test display list support
  * add GL_ARB_sample_locations
  * gl-1.5-get-array-attribs: exercise glGetIntegerv, etc. with vertex arrays
  * nv_shader_atomic_float: Add tests for atomicExchange(float, float)
  * nv_shader_atomic_float: Add tests for atomicAdd(float, float)
  * nv_shader_atomic_float: Simple negative compile tests
  * nv_shader_atomic_float: Compile tests for all imageAtomic variants
  * arb_compute_shader: Add test for atomicCompSwap(int, int, int)
  * arb_compute_shader: Add tests for atomic{Min,Max}({u,}int, {u,}int)
  * arb_compute_shader: Add test for atomicExchange(int, int)
  * arb_compute_shader: Add test for atomicAdd(int, int)
  * glsl-4.50: Add test for atomicCompSwap(int, int, int)
  * arb_shader_storage_buffer: Add test for atomicCompSwap(int, int, int)
  * arb_shader_storage_buffer: Add tests for atomic{Min,Max}({u,}int, {u,}int)
  * arb_shader_storage_buffer: Add test for atomicExchange(int, int)
  * arb_shader_storage_buffer: Add test for atomicAdd(int, int)
  * shader_runner: Allow initializing integer fields of an SSBO
  * getteximage-simple: Stress an i965 blitter path
  * getteximage-simple: Allow configurable texture parameters
  * getteximage-simple: Switch to parameter passing
  * getteximage-simple: Fix the coordinate printf
  * glsl-4.50: remove duplicate semicolon test
  * glsl-4.60: backdate semicolon test to run from glsl 1.10
  * glsl-1.50: fix glsl-1.50-geometry-primitive-types
  * cmake: Use Policy CMP0072 as OLD by default.
  * gl-1.0: Bitmap test that draws zelda hearts.
  * ARB_get_program_binary: Test that restoring active program takes effect
  * ARB_get_program_binary: Test that uniforms are reset on program reload (API)
  * ARB_get_program_binary: Add some common functions
  * ARB_get_program_binary: Test that uniforms are reset on program reload
  * shader_runner: Add 'program binary save restore' command
  * shader_runner: Support SHADER_RUNNER_GET_PROGRAM_BINARY env var
  * util: Add piglit_env_var_as_boolean
  * shader_runner: Add -get-program-binary parameter
  * shader_runner: Support testing GL_NUM_PROGRAM_BINARY_FORMATS
  * glsl-1.10: fix broken indentation in test
  * glsl-1.10: test loop unrolling when induction variable is inside if branch
  * textureGather: Use piglit_probe_rect_rgba_varying
  * util/gl: Add a helper for probing a rect of varying data
  * util/gl: Use probe_rect instead of hand-rolling
  * util/gl: Add more probe helplers
  * util: Refactor probe_rect_ubyte to allow varying data
  * CMake: fix readme install after readme->readme.md
  * glx-oml-sync-control-timing: Perform initial swap / wait before loop
  * glx-oml-sync-control-timing: Refactor helper functions for swap / wait
  * glx-oml-sync-control-timing: Fix error message if glXWaitForMscOML fails
  * README: Rework documentation for test classes
  * README: Rework lists of test scripts
  * README: Rework the list of test statuses
  * README: Rework environment variables docs
  * README: Remove some unneeded indentation
  * README: Use proper markdown code quoting
  * README: Use proper markdown for the different heading levels
  * README: Move README.md so it gets parsed by GitLab
  * tests/egl: add query test for egl_ext_image_dma_buf_import_modifiers
  * Use _exit() instead of exit() in child processes
  * util: Silence GCC unused-function warning.

-------------------------------------------------------------------
Thu Aug 30 08:27:10 UTC 2018 - msrb@suse.com

- Update suse_qa.py and opensuse_qa.py to work with current piglit.

-------------------------------------------------------------------
Wed Aug 29 08:13:34 UTC 2018 - Ondřej Súkup <mimi.vx@gmail.com>

- use %make_jobs makro instead make_build 

-------------------------------------------------------------------
Wed Jun  6 14:30:34 UTC 2018 - mpluskal@suse.com

- Update to version 1~20180604.cde860ab3:
  * arb_texture_view: convert some more tests to run on ES 3.1
  * util: provide way to read a texture in ES compatible way
  * vertex-program-two-side: Fix GCC format-security warnings.
  * glsl-fs-fogscale: Fix GCC format-security warnings.
  * glsl-1.50: test compat built in constants
  * built-in-constants: fix desktop GL version check for geometry shaders
  * built-in-constants: add support for testing compatibility profile built ins
  * framework/resume: properly parse the no_retry option
  * framework: allow specifying the number of jobs for concurrency
  * framework/html: guard against errors writing individual test results
  * gl-3.0: Remove unused variable.
  * arb_tessellation_shader: test display list support for glPatchParameterfv()
  * arb_tessellation_shader: add basic display list test for glPatchParameteri()
  * shader_runner: add basic display list support
  * ARB_tessellation_shader: test gl_*Color built-ins with tessellation shaders
  * piglit-util-gl: add support for using patches with fixed function attributes
  * gl-3.2-compat: test gl_FogFragCoord built-in with geometry shaders
  * gl-3.2-compat: test gl_ClipVertex built-in with geometry shaders
  * gl-3.2-compat: test gl_TexCoord[] built-in with geometry shaders
  * gl-3.2-compat: test gl_*Color built-ins with geometry shaders
  * glsl-1.40/1.50: basic compiler tests for the compatibility profile
  * glslparsertest: support compatibility profile tests
  * cmake: Bump minimum version to 3.2.
  * Revert "Specify an explicit window size in builtin uniform tests."
  * Specify an explicit window size in builtin uniform tests.
  * Fix bogus assertions in builtin uniform test generator.
  * gl-3.0: test glUniform*ui{v} functions are compiled into display lists
  * util: add includes when building for Wayland
  * tests: Add gpu and quick no_isolation metaprofiles
  * tests: rename shader_*_multi to shader_*.no_isolation
  * profile: add the idea of process-isolated xml file
  * cmake: Set a value for each portability define.
  * glsl-uniform-initializer-7: Fixed uninitialized uniform.
  * ext_packed_float: Add a test that queries GL_RGBA_SIGNED_COMPONENTS_EXT
  * tests/quick_shader.py: Fix test count of quick_shader
  * framework: make use of Filter.run in Profile classes
  * framework: Add filters class
  * framework: ensure that all tests are run before exiting
  * shader_runner: Support PIGLIT_DEFAULT_SIZE env var
  * framework-gl: Export window size override function
  * framework: fix running with mixed concurrency (neither -c or -1)
  * arb_internalformat_query2: test new ARB_ES3_compatibility internalformats
  * util-gl: add ARB_ES3_compatibility internalformats support
  * arb_internalformat_query2: use CompressedTexImage*D for specific compressed formats
  * crucible: if a test has no XML output consider it a crash
  * crucible: use tempfiles to allow running with concurrency
  * crucible: fix getting values from piglit.conf
  * ext_texture_norm16-render: refactor subtest execution
  * find_static_tests.py: fix python2 compatibility
  * name no_error profile depen on shader generation
  * piglit-framework-gl: skip compat test when not supported
  * framework: handle UnicodeDecodeError
  * deqp_egl: add support for mustpass lists
  * khr_gl45: add support for mustpass lists
  * framework: fix grouptools.commonprefix when len(args) == 1
  * profile: use gz to compress profiles
  * Generate xml for builtin profiles
  * tests: Add script to find all hand written test files
  * Add script to serialize profiles to XML
  * opengl.py: Remove exported gl extensions
  * tests/cl.py: fix out of tree serialization
  * fix asmparser test serialization for out of tree builds
  * fix glslparser test for out of tree builds
  * tests/glsl_parser_test.py: fix is_skip for serialized profiles
  * shader_tests: correctly generate xml during out of tree builds
  * tests: use meta profiles
  * tests/quick: fix filtering of vs_in shader tests
  * py_modules: Add support for out of tree builds
  * framework/profile: Add support for meta profiles
  * profile: allow forcing python or xml loading
  * profile: Add support for loading xml based profiles
  * framework/test: make CLProgramTester take relative paths
  * framework/test: make BuiltInConstantTest files relative
  * tests/all: Make asmparser tests path relative
  * framework/test: use relative paths for GLSLParser tests
  * framework/test: Make shader paths relative
  * framework/test: Add class for cl-program-tester
  * framework/test/piglit_test: make cl_concurrency always a boolean
  * framework/test: Split multishader too
  * framework: do the same for shader test
  * framework: use a class method for building test via parsing
  * tests: use BuiltInConstantsClass
  * framework/test: add a test class for built-in constants
  * framework: Use custom class for ASM parser tests
  * framework/profile: Add a __len__ method to TestProfile
  * framework/test: expose required and excluded platforms
  * framework/test: Use getter for altering PiglitBaseTest Command
  * framework/profile: Allow a group manager class to be overwritten
  * test/piglit_test: add ROOT_DIR variable
  * update git ignore for this series
  * draw-vertices-2101010: Don't test BGRA if we don't have the ext.
  * arb_vertex_type_2_10_10_10: Don't test BGRA if we don't have the ext.
  * texture-integer-glsl130: Make sure we use usampler for ui textures.
  * ext_texture_norm16-render: test for GL_EXT_texture_norm16
  * glsl-1.40-compat: add basic compat test for built-in constants
  * shader_runner: allow compat profiles to be explicitly requested
  * summary/console: Add -p / --problems
  * arb_bindless_texture: add test for conversion of bound sampler or image to uvec2
  * arb_bindless_texture: add test where we pass a handle through a function
  * arb_bindless_texture: rename vertex uniform test and add vertex attrib test
  * arb_bindless_texture: add some uvec2 arithmetic test
  * shader_runner: add vertex attrib command for setting bindless texture handles
  * unittests: mustpass is a text list
  * glsl-max-vertex-attrib: fix shader and check for successful link
  * use correct glsl version in tests that use GL_ARB_gpu_shader5
  * glsl-1.20: exercise bug in parameter out handling in Mesa
  * glsl-1.20: move the parameter out tests to glsl-1.20
  * glsl-1.10: add a number of new function parameter tests
  * glsl-1.10: rename function chain test and better test the inout param
  * framework: update deqp mustpass list for text based mustpass
  * arb_get_texture_sub_image: update cube map tests to make textures cube complete
  * arb_get_texture_sub_image: fix depth parameter when performing zero-sized texture queries
  * arb_get_texture_sub_image: fix expected error when querying a level which hasn't been explicitly defined
  * tests: intel_blackhole_render: use GLSL ES 1.0 on ES profiles
  * tests: nv_image_formats: remove unintended new files
  * tests: intel_blackhole_render: require extension in dispatch test
  * tests: fix INTEL_blackhole_render test names
  * arb_framebuffer_srgb/blit: Add source fill modes
  * tex-srgb: Drop unused variables and a stale comment
  * tex-srgb: Also test a cleared texture
  * arb_tessellation_shader: add a test with an array in a struct in a per-vertex TCS out
  * arb_gpu_shader_fp64: add tests for frexp() corner cases
  * arb_gpu_shader_int64: test two operands with indirect access simultaneously
  * arb_shader_ballot: add missing extension
  * glsl-1.50/linker: add explicit "link success" line to test section
  * arb_enhanced_layouts: remove a redundant builtin out block redeclaration
  * arb_texture_query_levels: rename VS input to piglit_vertex
  * glsl-1.20/fs-structure: remove stray varying
  * fs-inout-index-two-level: remove unnecessary and incorrect varying
  * shader_tests: move input/output declarations above functions
  * ext_framebuffer_multisample-interpolation: fix single-sample centroid-edges
  * adj-prims: beef up the test to tease out what nvidia hardware does
  * gl-3.2/adj-prims: fix expected vertex order for triangle strips with adjacency
  * glsl-4.40: add tests for interpolateAt* with swizzles / array subscripts on vectors
  * arb_gpu_shader5: add interpolateAt* tests with input in a struct
  * add new indexing test with dynamic indexing of integer vector
  * glsl: test for LLVM Error: Terminator found in the middle of a basic block
  * glsl-1.10: test that loop unrolling doesnt create an infinite loop
  * util: fix read_pixels_float() on GLES2 when format is not GL_RGBA
  * Add support for Crucible
  * framework: change one missed core.checkDir call to core.check_dir
  * shaders: Use 3-source operations as conditions
  * AMD_performance_monitor: add VC4 specific tests
  * piglit: fix some warnings about no return value from non-void function
  * fbo-drawbuffers2-blend: fix incorrect comments
  * tests: add INTEL_blackhole_render
  * cmake: Use WAYLAND_LDFLAGS instead of WAYLAND_LIBRARIES.
  * arb_gpu_shader5: add interpolateAtSample tests with input in an array
  * arb_gpu_shader5: add execution tests for interpolateAt* with input in an interface block
  * gl-3.0: Basic tests of glTexParameterIiv and friends
  * arb_gpu_shader_fp64/ssbo: fix tests to skip if no vertex ssbos available.
  * s3tc-targeted: Execute every test case
  * s3tc-targeted: Reduce requirements to the minimal set
  * egl: API test for EGL_ANDROID_blob_cache extension
  * glsl-1.10: test divide by zero doesn't crash constant evaluation
  * glsl-fs-pointcoord: add additional FS inputs
  * tests: Added a new NoContext test profile for the Khronos CTS runner
  * tests: Added a new GLES test profile for the Khronos CTS runner
  * internalformat_query*: fix SAMPLES pname checks for RGB9_E5
  * enhanced_layouts/sso: clear before testing.
  * degenerate-prims: fix incorrect return value from test_prim()
  * gl-4.3-get_glsl_versions: new tests of GL_NUM_SHADING_LANGUAGE_VERSIONS
  * gl-2.0-shader-materials: test vertex shader with material attributes
  * gl-1.1-color-material-array: test GL_COLOR_MATERIAL with vertex color array
  * gl-1.1-draw-arrays-start: exercise glDrawArrays with non-zero 'start'
  * texunits: don't test glTexEnv with unusable texture units
  * arb_viewport_array/viewport_indices: allow float precision instead of double
  * cl: Remove extra character in mubuf test
  * shader_draw_parameters: Also test using an indirect draw
  * shader_draw_parameters: Also test using glDrawArrays with first > 0
  * framework: work around tests that skip without skipping subtests
  * tests: update documentation to include GL46 in khr_gl.py
  * travis: add docker based cmake build job
  * arb_sample_shading: Add gl_SampleMaskIn subtest (msaa disabled), fix test
  * arb_internalformat_query2: don't try glGetTexLevelParameteriv() for tex buffers
  * tests: enumerate subtests in linestipple
  * tests: enumerate subtests in degenerate-prims
  * tests: always report subtest results for degenerate-prims
  * tests/fbo-storage-formats: enumerate subtests
  * tests/fbo-storage-formats: print subtest result for skip too
  * tests/fbo-storage-formats: Make subtest names predictable
  * tests/fbo-storage-formats: Always print the same number of subtests
  * tests: enumerate subtests in fbo-incomplete
  * tests: enumerate subtests in gl-2.1-pbo test
  * framework: if a test with subtests crashes mark the offending subtest
  * framework: add support for parsing subtest enumeration
  * framework: use statuses instead of relying on string conversions
  * framework: use an OrderedDict for subtest storage
  * util: Add a function to register subtests
  * util: make piglit_run_selected_subtests print all tests to run.
  * all.py: fix extension/version testing when wflinfo fails
  * arb_texture_compression: test set/get of GL_TEXTURE_COMPRESSION_HINT
  * util: s/3/num_components/ in probe_rect_ubyte()
  * cl: Add test for MUBUF access with a negative vaddr
  * ext_memory_object_fd: add api error tests
  * ext_semaphore_fd: add api error tests
  * ext_memory_object: remove redundant print on failure
  * ext_semaphore: add basic api error checking
  * arb_internalformat_query2: some formats are not compatible with TBOs
  * arb_internalformat_query2: more than one way to support GEOMETRY_TEXTURE
  * arb_internalformat_query2: minmax GL_ALPHA8 deprecated on 3.1+
  * arb_internalformat_query2: avoid bogus error spam about unsupported pnames
  * arb_arrays_of_arrays: add ubo test with explicit binding
  * Revert "framework: Handle crashing subtest."
  * gl-1.0-blend-func: add --quick option
  * gl-1.0-dlist-materials: new test of materials in display lists
  * arb_enhanced_layouts/ssbo: make sure the driver supports vertex ssbos
  * arb_shader_clock: fix use of atomic counters
  * framework: Handle crashing subtest.
  * arb_texture_barrier add test texture-halves-ping-pong-operation-chain
  * gles3: Test transform-feedback to uniform-buffer-object
  * arb_draw_indirect/draw-arrays-prim-restart: Ignore primitive restart.
  * gl 1.0: Stress test GL_LINE_LOOP.
  * Add test for all user defined clip planes
  * util-gl: Remove tolerance from integer pixel probes.
  * util-gl: Add pixel comparison functions.
  * util-gl: Consolidate printing of bad probed pixels.
  * util-gl: Remove piglit prefix from static functions.
  * util-gl: Make piglit_compare_images_color respect x and y arguments.
  * util-gl: Silence some lint warnings.
  * triangle-rasterization: Use util function to probe framebuffer.
  * ignore-adjacent-veritces: Use util function to probe framebuffer.
  * util-gl: Add piglit_probe_rect_two_rgb.
  * util/gl: Print numeric value of unrecognized enums.
  * arb_texture_multisample: stress test of very large textures (v3)
  * teximage-colors: accept -127 instead of -128 for exact snorm up/download
  * arb_texture_buffer_object/indexed: test indexed samplers with tbo
  * built-in-constants: check required GLSL versions for #extensions
  * ssbo/execution: test std140/430 struct deref
  * arb_texture_buffer_object/max-size: skip if the buffer can't be allocated
  * textureSize: add ability to test tess eval stage
  * Remove old ATI_fs test
  * ATI_fs: add some api tests
  * ATI_fs: add render tests
  * ATI_fs: add api error tests
  * Update TODO.
  * arb_clear_texture: Remove GLenum stringification macros.
  * fbo-formats: Remove GLenum stringification macros.
  * util/sized-internalformats: Remove GLenum stringification macros.
  * texturing-texwrap: Remove GLenum stringification macros.
  * EXT_transform_feedback: Remove GLenum stringification macros.
  * ARB_texture_view: Remove GLenum stringification macros.
  * ARB_texture_compression: Remove GLenum stringification macros.
  * ARB_*_program: Remove GLenum stringification macros.
  * compressedteximage: Remove GLenum stringification macros.
  * fbo-depth-tex1d: Remove GLenum stringification macros.
  * fbo-depth: Remove GLenum stringification macros.
  * fbo-stencil: Remove GLenum stringification macros.
  * teximage-colors: Remove GLenum stringification macros.
  * arb_copy_image-formats: Remove GLenum stringification macros.
  * dsa-compressedtextureimage: Remove GLenum stringification macros.
  * depth-stencil-blit: Remove GLenum stringification macros.
  * fbo-stencil8: Remove GLenum stringification macros.
  * Remove GLenum stringification macros.
  * texture packed formats: Remove GLenum string literals.
  * texture-al: Remove GLenum string literals.
  * texture integer glsl130: Remove GLenum string literals.
  * texture integer getTexImage clamping: Remove GLenum string literals.
  * texture integer fbo blending: Remove GLenum string literals.
  * transform feedback2 api query: Remove GLenum string literals.
  * object_purgeable: Remove GLenum string literals.
  * clipflat: Remove GLenum string literals.
  * ARB_pipeline_statistics_query: Remove GLenum string literals.
  * Remove GLenum primitive string literals.
  * Remove GLenum string literals.
  * util/gl: Remove primitive type GLenums from piglit_get_gl_enum_name.
  * draw-vertices-2101010: Accept either SNORM conversion formula.
  * Remove tests/bugs directory.
  * Move vbo-buffer-unmap test from bugs to spec dir.
  * Move tri-tex-crash test from bugs to spec dir.
  * Move fdo31934 test from bugs to spec dir.
  * Move fdo28551 test from bugs to spec dir.
  * Move fdo25614-genmipmap test from bugs to spec dir.
  * Move fdo24066 test from bugs to spec dir.
  * Move fdo23670-drawpix_stencil from bugs to spec dir.
  * Move fdo23670-depth_test from bugs to spec dir.
  * Move fdo23489 test from bugs to spec dir.
  * Move fdo22740 test from bugs to spec dir.
  * Move point-sprite test from bugs to spec dir.
  * Move fdo20701 test from bugs to spec dir.
  * Move tex1d-2dborder test from bugs to spec dir.
  * Move r300-readcache test from bugs to spec dir.
  * Move fdo14575 test from bugs to spec dir.
  * Move fdo10370 test from bugs to spec dir.
  * Move drawbuffer-modes test from bugs to spec dir.
  * Move crash-texparameter-before-teximage test from bugs to spec dir.
  * Move crash-cubemap-order test from bugs to spec dir.
  * framework: Correct comment typo in piglit.conf.example
  * README: Document deqp_gles3.py configuration deprecation
  * README: Fix spelling mistakes
  * completions/bash: Update list of profile completions to match on
  * completions/bash: Fix spelling mistakes
  * ext_framebuffer_object: Fix typo in two copyright blocks
  * travis: add generator unittests
  * unittests: update python generator
  * unittests: correct tessellation typo
  * tox: stick to pytest 3.2.5
  * arb_internalformat_query2: correct tessellation typo
  * arb_texture_view: fix order of vertices in draw_3d_depth()
  * ext_transform_feedback-max-varyings: reduce output upon failures
  * ext_transform_feedback-interleaved: disable unneeded printfs()
  * all.py: add entry for ext_occlusion_query_boolean
  * Update documentation wrt removal of Glean.
  * Remove GleanTest framework.
  * Remove Glean framework.
  * Remove remaining Glean tests.
  * Port negative uniform location subtest of Glean shader api test to Piglit.
  * Port error handling subtest of Glean FBO test to Piglit.
  * Port mipmap subtest of Glean FBO test to Piglit.
  * framework: Make csv summary a subset of formatted summary.
  * framework: Add new formatted summary.
  * textureGather: add new options for testing mirror address modes
  * ext_disjoint_timer_query-simple: basic API test
  * Remove Glean arb_vertex_program test.
  * Port arb_vertex_program numeric stress tests from Glean to Piglit.
  * Port arb_vertex_program position writes tests from Glean to Piglit.
  * Port arb_vertex_program instruction tests from Glean to Piglit.
  * arb_vertex_program: Test matrix property bindings.
  * arb_vertex_program: Test property bindings.
  * gl-1.2: Test normal rescaling with fixed function pipeline.
  * ext_framebuffer_multisample: don't use fixed sample count
  * arb_texture_storage_multisample: don't use fixed sample count
  * arb_texture_multisample: don't use hard-coded sample counts
  * glsl: Fix Normalscale test.
  * Remove Glean GLSL test.
  * Port linker glsl tests from Glean to Piglit.
  * Port glsl 1.20 and 1.30 glean tests to Piglit.
  * Port illegal shader glsl tests from Glean to Piglit.
  * Port preprocessor glsl test from Glean to Piglit.
  * Port struct glsl test from Glean to Piglit.
  * Port matrix glsl tests from Glean to Piglit.
  * shader_runner: Add color command.
  * Port function call glsl tests from Glean to Piglit.
  * Port texture glsl tests from Glean to Piglit.
  * shader_runner: Add simple 1D and 3D texture creation commands.
  * util: Add simple 1D and 3D texture creation functions.
  * Port built-in constants test from Glean to piglit
  * Port logic operator glsl tests from Glean to Piglit.
  * Port "sequence (comma) operator" glsl test from Glean to Piglit.
  * Port "chained assignement" glsl test from Glean to Piglit.
  * Port swizzle and writemask glsl tests from Glean to Piglit.
  * Port simple glsl tests from Glean to Piglit.
  * Add linear fog GLSL test.
  * Test built in uniform matrix state in shader.
  * util: Add matrix inverse and transpose functions.
  * Test built in uniform state in shader.
  * ssbo: fix compiler warnings in layout tests.
  * glx: New test for GLX_EXT_no_config_context
  * tests/egl/egl-context-priority.c: Use piglit_egl_get_default_display
  * fbo-blending-snorm: new test for testing snorm blend behavior
  * ssbo/linker: move some linker tests to using a fragment shader ssbo
  * ssbo: block more tests on lack of vertex ssbo
  * ssbo/linking: add check for vertex ssbo support.
  * ssbo/max-ssbo-size: handle lack of vertex shader ssbo.
  * ssbo: make rendering test work without vertex ssbos.
  * ssbo: make indirect test work on GL3.3
  * ssbo: handle lack of vertex shader ssbo support in test.
  * glx-query-renderer-coverage: Fix broken glXCreateNewContext call
  * unittests: test WflInfo in its own module and correct depending ones
  * generators: fix incorrect generated_tests/spec/glsl-110, etc. dir names
  * cl: Add tests for load lo16 instructions
  * Remove texture unit Glean test
  * Port texture unit test from Glean to Piglit
  * Remove texture coord generation Glean test
  * Port tex coord generation test from Glean to Piglit
  * Remove texture env combine4 Glean test
  * Port texture env combine4 test from Glean to Piglit
  * Remove texture environment Glean test
  * Port texture env test from Glean to Piglit
  * Remove texture env combine Glean test
  * Port texture env combine test from Glean to Piglit
  * Remove point sprite Glean test
  * Port point sprite test from Glean to Piglit
  * isinf-and-isnan: add clamp / min / max tests
  * framework: fix wflinfo GL shading language parsing code
  * all.py: fix version checks in is_feature_directory_supported()
  * arb_sample_shading: don't use gl_FragColor/Data in fragment shaders
  * arb_indirect_parameters: add cast to silence compiler warnings
  * util: const-qualify data parameter to piglit_multisample_texture()
  * util: fix piglit_multisample_texture() parameter type
  * unittests: include new elapsed time from the console summary output
  * framework: specify GL_NEAREST filter for FBO textures
  * gl-1.0-logicop: allow testing single mode on the command line
  * cmake: also install Windows manifest files
  * framework: decrement argc in delete_arg()
  * all.py: use gl_extension_supported() to omit some test groups
  * all.py: filter directories traversed to find shader tests
  * framework: fix wflinfo issues in opengl module
  * framework: move WflInfo class into new wflinfo.py module
  * util: remove -compat from arguments so as not to confuse tests
  * cl: Fix ulp tolerance comparison
  * cl: Fix sinpi expected values
  * cl: Adjust cospi expected values to account for fp32 rounding
  * cl: Adjust sincos expected values to account for fp32 rounding
  * cl: Adjust sin expected values to acount for fp32 rounding
  * cl: Adjust tanpi epxected results to account for fp32 rounding
  * cl: Adjust tan expected values to account for fp32 rounding
  * cl: Adjust cos test expected values to account for fp32 rounding
  * shaders: Test using a bound program after an unsuccessful relink
  * glx_arb_create_context: Learn GLX_ARB_robustness_application_isolation
  * Add tests for GLSL ES 1.00 mismatched uniform precision
  * fbo: add a test for blending with float special values
  * ARB_shader_atomic_counter_ops: fix glsl version
  * arb_texture_buffer_range/ranges-2: add missing extension check
  * arb_shader_ballot: Fix the test values for gl_SubGroupG{e,t}MaskARB
  * egl_khr_create_context: handle Compatibility contexts properly
  * util,shader_runner: random fixes for compatibility profile
  * util: add an option to run an existing test with a compatibility profile
  * cmake: create Win10 manifest files for particular executables
  * framework: improve var names, comments in console() function
  * framework: also print elapsed time with piglit-summary.py
  * framework: include piglit start-up time in time_elapsed computation
  * all.py remove run_concurrent=False from ARB_fragment_program tests
  * fp-fragment-position: use glGenTextures()
  * trinity-fp1: use glGenTextures() instead of hard-coded texture IDs
  * all.py: remove run_concurrent=False from ARB_draw_instanced test
  * all.py: remove run_concurrent=False from ARB_draw_elements_base_vertex tests
  * all.py: remove run_concurrent=False from most GL 3.0 tests
  * gl30basic: configure with requires_displayed_window = true
  * all.py: remove run_concurrent=False from GL 2.0 tests
  * all.py put GL 1.1 tests after GL 1.0 tests
  * gl-3.2: fix sample count in layered rendering tests
  * glsl-1.50: fix sample count in interface-block-centroid.c
  * arb_texture_storage_multisample fix sample count in tex-storage.c
  * arb_direct_state_access: fix sample count in texture-storage-multisample
  * glsl-1.00: Add testcases from the spec about redeclarations.
  * OES_required_internalformat: Add a test for renderbuffer sizing.
  * no-op-paths: Clear between each test.
  * cl: Add missing math tests
  * cl: Implement generating 2input 2output functions
  * cl: Generate aligned vstorea tests
  * cl: Generate aligned vloada tests
  * cl: Fix erfc test
  * cl: Fix erf test
  * gl-minmax: change the glGet functions to accept 64-bit variables
  * framework: remove _DISABLED variable in opengl.py
  * framework: observe PIGLIT_NO_FAST_SKIP in ShaderTest::__init__()
  * util: add casts in strchrnul()
  * all.py: move assignment to groupname out of loop
  * framework: eliminate a goto
  * framework: fix comment typos in opengl.py
  * framework: fix comment typos
  * all.py: add missing argument to arb_sample_shading-samplemask test
  * all.py: run ARB_draw_buffers tests concurrently
  * all.py: run ARB_draw_buffers_blend test concurrently
  * all.py: run EXT_draw_buffers2 tests concurrently
  * all.py: run ARB_blend_func_extended tests concurrently
  * all.py: remove run_concurrent=False from some GLSL 1.30 tests
  * all.py: run ARB_vertex_half_float tests concurrently
  * all.py: run NV_conditional_render tests concurrently
  * all.py: run ARB_seamless_cube_map tests concurrently
  * all.py: run ARB_instanced_arrays tests concurrently
  * all.py: run ati_draw_buffers tests concurrently
  * all.py run ARB_depth_clamp tests concurrently
  * all.py: remove run_concurrent=False from 1.5 tests
  * all.py: remove run_concurrent=False from 1.4 tests
  * all.py: remove run_concurrent=False from 1.3 tests
  * all.py: remove run_concurrent=False from 1.2 tests
  * all.py: remove run_concurrent=False from most 1.1 tests
  * simple-readbuffer: simplify a conditional
  * clear-accum: specify config.requires_displayed_window = true
  * util: change FAIL->SKIP in piglit_fbo_framework_create()
  * util: don't use fbo if test_config->requires_displayed_window is true
  * mingw: build shader_runner with 2MB stack
  * arb_internalformat_query2: don't test TEXTURE_BUFFER against GetTexParameter
  * glx-tfp: Use a nice orange color instead of red
  * compute: add more tests for verifying inter-shader derived values
  * arb_compute_variable_group_size: ensure local size works with fixed
  * compute: add test variants for local_size decls in other shaders
  * tox: use pytest >= 3.0.3
  * arb_compute_variable_group_size: check gl_GlobalInvocationID
  * shader_runner: don't use glMapNamedBufferRange
  * tests/deqp: remove redundant constructors
  * framework: remove outdated comment
  * framework: fix a comment
  * framework: fix outdated comment
  * framework: fix a comment
  * framework: fix typos in comments
  * cl: Add tests for load hi16 instructions
  * cl: Add tests for store hi16 instructions
  * glx: Rerun failing tests in auto mode if there is a pending expose event
  * cl: Improve link program tests
  * cl: Add basic remainder(float, float) builtin tests
  * cl: Fix cospi return value
  * cl: Add tests for clc-1.0 integer atomics
  * arb_sample_shading: uint -> GLuint.
  * arb_query_buffer_object: add additional coherency tests
  * arb_query_buffer_object: extract some common code for running queries
  * arb_sample_shading: run more tests concurrently
  * arb_sample_shading: add more extensive gl_SampleMask(In) tests
  * arb_enhanced_layouts: test packing of floats in the same slots as an array
  * arrays_of_arrays/atomic_counter: check counters limit on linker test.
  * arrays_of_arrays/atomic_counters: set requirements on atomic counter numbers.
  * arb_shader_atomic_counter_ops: declare counters to fix undefined behaviour.
  * cl: Add tests for mad mix
  * ext_occlusion_query_boolean: basic API test
  * cl: Fix incorrect indentation
  * cl: Don't use unsigned long long
  * README: Make initial smoke tests steps internally consistent
  * README: Correct typo deQP -> dEQP
  * README: Update the list of test profiles
  * fbo-viewport: fix false error caused by slight rounding differences
  * arb_gpu_shader_fp64: relax ldexp test due to denorms
  * cl: Add tests for 64 bit integer atomics
  * image_load_store: add a new test for a bug seen on AMD VEGA.
  * framework: fix proces/process_isolation typo
  * framework: fix comment typos on FastSkip class
  * arb_arrays_of_arrays: remove an unused variable
  * glsl-1.10: add some loop unrolling tests with breaks in else branch
  * cl: Add failing case to exp test
  * cl: Add tests for function calls
  * arb_texture_query_lod: add tolerance for some comparisons
  * cl: Fix device_regex feature
  * Add KHR-GL46 to khr_gl.py
  * Fix bogus .50. number in and-clamp.shader_test
  * cl: Add generator for shuffle2 builtins
  * cl: Add generator for shuffle builtins
  * arb_separate_shader_objects: Check piglit_link_check_status results.
  * cl: Fix error message value.
  * glx-multithread-clearbuffer: Check pthread_join return value.
  * textureGather: correct expected result for GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB = 1
  * draw-pixels: fix KHR_no_error logic
  * arb_tessellation_shader/{1,16}in-1out: use colors to detect corruption easily
  * arb_tessellation_shader: new tests for a radeonsi bug
  * arb_shader_storage_buffer_object: don't do out-of-bounds writes
  * cl: Replace handwritten vload tests with a generator
  * cl: Add private and local versions of vstore tests
  * gl-2.0-vertex-attr-0: new test of glVertexAttrib(index=0)
  * gl-2.0-vertex-const-attr: test attribute declaration order
  * glean: remove pointless switch statements from fbo test
  * general: add missing KHR_no_error status
  * gl-4.5: set KHR_no_error status
  * gl-3.3: set KHR_no_error status
  * gl-3.2: set KHR_no_error status
  * gl-3.1: set KHR_no_error status
  * gl-3.0: set KHR_no_error status
  * gl-2.1: set KHR_no_error status
  * gl-2.0: set KHR_no_error status
  * arb_vertex_attrib_64bit: set KHR_no_error status
  * arb_texture_view: set KHR_no_error status
  * arb_texture_storage_multisample: set KHR_no_error status
  * arb_texture_rectangle: set KHR_no_error status
  * arb_texture_cube_map_array: set KHR_no_error status
  * arb_sync: set KHR_no_error status
  * arb_shading_language_420pack: set KHR_no_error status
  * arb_shader_objects: set KHR_no_error status
  * arb_provoking_vertex: set KHR_no_error status
  * arb_occlusion_query: set KHR_no_error status
  * arb_occlusion_query2: set KHR_no_error status
  * arb_internalformat_query2: set KHR_no_error status
  * arb_gpu_shader_fp64: set KHR_no_error status
  * arb_framebuffer_no_attachments: set KHR_no_error status
  * arb_explicit_uniform_location: set KHR_no_error status
  * arb_debug_output: set KHR_no_error status
  * arb_clear_texture: set KHR_no_error status
  * arb_texture_stencil8: set KHR_no_error status
  * nv_conditional_render: set KHR_no_error status
  * khr_debug: set KHR_no_error status
  * arb_get_program_binary: set KHR_no_error status
  * arb_program_interface_query: set KHR_no_error status
  * arb_timer_query: set KHR_no_error status
  * arb_clear_buffer_object: set KHR_no_error status
  * arb_texture_buffer_range: set KHR_no_error status
  * arb_tessellation_shader: set KHR_no_error status
  * arb_texture_storage: set KHR_no_error status
  * arb_transform_feedback3: set KHR_no_error status
  * arb_transform_feedback_overflow_query: set KHR_no_error status
  * arb_vertex_array_bgra: set KHR_no_error status
  * ext_packed_depth_stencil: set KHR_no_error status
  * ext_texture_array: set KHR_no_error status
  * ext_packet_float: set KHR_no_error status
  * ext_texture_format_bgra8888: set KHR_no_error status
  * ext_texture_integer: set KHR_no_error status
  * ext_texture_swizzle: set KHR_no_error status
  * arb_transform_feedback2: set KHR_no_error status
  * arb_robustness: fix KHR_no_error status
  * arb_multisample: fix KHR_no_error status
  * arb_map_buffer_range: fix KHR_no_error status
  * arb_instanced_arrays: fix KHR_no_error status
  * arb_draw_instanced: fix KHR_no_error status
  * arb_draw_elements_base_vertex: fix KHR_no_error status
  * glsl-4.50: add test that makes sure extra semicolons are forbidden
  * glsl-4.60: add a test that allows extra semicolons at global scope
  * util: recognize GLSL 4.60
  * ARB_gpu_shader_int64: test that swizzles of constants work
  * glx: Introduce a glx-swap-copy test v2
  * glx: Fix glx-swap-exchange v3
  * cl: Add more arithmetic tests to exercise 24bit udiv/umod routines
  * gl-3.2/layered-rendering/framebuffertexture: check for MSAA support
  * sync_api: use piglit_get_gl_enum_name()
  * gl30basic: add some extra suspected extension
  * arb_sample_shading: document automatic per-sample FS execution
  * glsl-es-1.00: constant initializer type mismatch causes an error
  * framework: Add --ignore-missing option
  * arb_direct_state_access: adapt to spec fixes in OpenGL 4.6
  * arb_arrays_of_arrays: test struct member offset calculation
  * arb_texture_buffer_object: set KHR_no_error support
  * ext_transform_feedback: set KHR_no_error status
  * texturing: set KHR_no_error status
  * texturing: remove empty test
  * texelFetch: set KHR_no_error status
  * arb_texture_multisample: set KHR_no_error status
  * arb_texture_barrier: set KHR_no_error status
  * arb_shader_texture_lod: set KHR_no_error status
  * ext_framebuffer_multisample: set KHR_no_error status
  * ext_memory_object: add some basic api error checks
  * arb_bindless_texture: add a test which sets mixed texture units/handles
  * registry: update gl.xml
  * registry: update gl.xml
  * cl: Add support for OCL 2.0
  * glean: remove line drawing code from fbo test
  * cl: Add kernel_exec and __kernel_exec macro test
  * cl: Use required format for sampler test
  * arb_transform_feedback_overflow_query-basic: add any_inverted subtest
  * arb_transform_feedback_overflow_query-basic: fix subtest selection
  * Remove MSVC build support.
  * drawoverhead: Fix Windows builds.
  * arb_texture_multisample/sample-mask-execution: check for GL_MAX_SAMPLES >= 4
  * ext_framebuffer_multisample/draw-buffers-common: whitespace fixes
  * fbo: Use glLinkProgram after binding attributes to location.
  * arb_provoking_vertex: test OpenGL profile too
  * arb_shader_group_vote: Add simple vertex shader tests
  * arb_shader_group_vote: Prefix tests with "cs-"
  * framework: Fix the same bug for resume in the previous commit
  * framework: Only sort files for json backend that end in .json
  * unittests: Add tests for file in tests dir not ending in .json
  * unittests/framework: remove 'autouse' from fixture
  * framework: remove duplicate import of framework.exceptions
  * arb_post_depth_coverage: Make multisampling test more robust
  * arb_post_depth_coverage: Don't try sample rates we don't support
  * glsl-1.50: add linker test for unused in out blocks
  * framework: Don't stop resume because no tests are left to be run
  * arb_provoking_vertex: fix quads-follow-provoking-vertex test
  * tests/util: remove unneeded cmake code for WGL
  * clipflat: refactor some code
  * Respect GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT in binding-layout.c.
  * Remove a useless GLU depedency
  * glx-multithread-clearbuffer: new test reproducing amdgpu CS thread deadlock
  * wgl: add new multi-context, multi-window rendering tests
  * wgl: initial check-in of wgl utility code and wgl sanity check program
  * blit-scaled-linear: whitespace fixes
  * blit-scaled-linear: minor shader code improvements
  * glx-multi-window-single-context: new GLX test
  * glx-multi-context-single-window: new GLX test
  * utils/glx: request depth/stencil buffer visual for windows, contexts
  * arb_clear_texture-errors: add more error tests
  * gl-3.1-buffer-bindings: new test of GL buffer binding points
  * egl_mesa_platform_surfaceless: fix compilation warning
  * es3: add tests for verifying overloading behavior
  * glsl-1.50: set KHR_no_error status
  * glsl-1.40: set KHR_no_error status
  * glsl-1.30: set KHR_no_error status
  * glsl-1.30: alphabetise build list
  * arb_sample_shading: set KHR_no_error status
  * arb_gpu_shader5: set KHR_no_error status
  * arb_color_buffer_float: set KHR_no_error status
  * hiz: set KHR_no_error status
  * fast_color_clear: set KHR_no_error status
  * arb_shader_atomic_counters: fix KHR_no_error support for buffer binding test
  * glsl-1.20: better test indirect indexing of literal array of structs
  * util: Avoid asking GL to transpose the ortho_uniform matrix.
  * ARB_blend_func_extended: set KHR_no_error status
  * gl-1.0: set KHR_no_error support for remaining gl-1.0 tests
  * bugs: set KHR_no_error support for remaining bugs tests
  * cmake: Check for linux/sync_file.h for egl_khr_fence_sync.
  * ARB_point_parameters: port glean test pointatten to piglit
  * pbo: Don't assume that GL_MAX_PIXEL_MAP_TABLE is 256
  * fbo: set KHR_no_error compatibility for remaining fbo tests
  * egl_khr_fence_sync: Enable android native fences extension test.
  * egl_khr_fence_sync: Test for wait with zero timeout.
  * egl_khr_fence_sync: Verify that dup() fails on invalid fence.
  * egl_khr_fence_sync: Verify eglDupNativeFenceFDANDROID.
  * egl_khr_fence_sync: Add test to create fence from fd.
  * egl_khr_fence_sync: Add sw_sync lib.
  * egl_khr_fence_sync: add tests for android fence.
  * egl_khr_fence_sync: Prepare to support android native_sync.
  * drawoverhead: test 8 UBOs instead of 4
  * drawoverhead: test images and image buffers
  * drawoverhead: fix primitive restart testing for GL Compatibility
  * drawoverhead: test TBO state changes
  * arb_viewport_array: set KHR_no_error compatibility
  * amd_vertex_shader_viewport_index: set KHR_no_error compatibility
  * arb_clip_control: set KHR_no_error compatibility
  * cmake: bump gbm dependency to 17.1
  * fbo: Require GL_ARB_texture_cube_map
  * Revert "arb_get_texture_sub_image-errors: Fix expected error values"
  * glx/glx-multithread-texture: Use larger color differences
  * glx/glx-multithread-texture: Don't probe an undefined back buffer
  * glx/glx-multithread-texture: Avoid uploading stale data to texture
  * gl-1.0/swapbuffers-behavior: Try avoid reading from real front v2
  * piglit_drm_dma_buf: fix GPU offsets and strides
  * arb_bindless_texture: set KHR_no_error compatibility
  * cmake: Reintroduce version check to gbm_bo_map check
  * polygon-mode: print more info if there's a failure
  * drawoverhead: print test numbers
  * drawoverhead: test more state changes, remove the GL_FRAMEBUFFER_SRGB test
  * igt: Make "warn" status work again as expected
  * tests/igt.py: mark segfaulted IGT process as 'crash'
  * drawoverhead: use GL_TRIANGLES instead of GL_POINTS
  * appveyor: Allow building with MSVC too.
  * appveyor: Build piglit for Windows using MinGW.
  * tests: Added a couple of new test profiles for the Khronos CTS runner
  * Revert "tests: Update integration for khronos CTS runner."
  * util: fix Cygwin stdout/stderr buffering

-------------------------------------------------------------------
Tue Mar 27 11:54:22 UTC 2018 - guillaume.gardet@opensuse.org

- Fix SOURCE5 installation
- Handle properly openGL and openGL ES tests
- Enable Build for %arm and AArch64

-------------------------------------------------------------------
Thu Jun 08 17:58:40 UTC 2017 - mimi.vx@gmail.com

- Update to version 1~20170607.bc6ef16df:
  * arb_shader_storage_buffer_object: add member-memory-qualifiers.frag
  * arb_bindless_texture: add arrays-of-struct.frag compiler tests
  * arb_bindless_texture: add struct-inside-uniform-block.frag compiler tests
  * cl: Add array of structures to program-scope-arrays test
  * cl: Add input dependent test for global_offset
  * egl: API test for EGL_IMG_context_priority extension
  * egl-context-priority: Check eglInitialize result.
  * primitive-restart: run all tests even when there's a failure
  * srgb_conformance: fix error computation
  * util: support instancing with piglit_draw_rect_custom
  * shader_runner: add "draw instanced rect ortho" commands
  * arb_tessellation_shader: test instancing
  * glsl-1.50: test instancing with a geometry shader
  * arb_tessellation_shader: add 3 new trivial tess+gs tests
  * arb_compute_shader: test shaders when only 1 channel of gl_WorkGroupID is used
  * drawoverhead: new microbenchmark
  * shader_runner: add "draw arrays instanced" command
  * shader_runner: add "relative probe rect rgba" command
  * arb_tessellation_shader: test gl_PrimitiveID in instanced draws
  * glsl-1.50: test gl_PrimitiveID in fragment shader when instancing is used
  * util: add MIN3/MAX3 convenience macros
  * arb_sparse_buffer: minmax test
  * arb_sparse_buffer: add basic rendering test
  * arb_sparse_buffer: add an extended commit test
  * arb_sparse_buffer: add tests for various *BufferSubData commands
  * piglit-framework-gl: add KHR_no_error enum to piglit_gl_test_config
  * piglit-framework-gl: skip tests incompatible with KHR_no_error
  * shader_runner: mark as compatible with KHR_no_error testing
  * framework: Add command.setter method to Test
  * tests: add no_error test profile for testing KHR_no_error
  * tests: mark KHR_no_error incompatible tests
  * tests: mark KHR_no_error compatible tests
  * textureSamples: fix printf
  * piglit-framework-gl: add piglit_khr_no_error for detecting when khr_no_error enabled
  * arb_direct_state_access: set KHR_no_error compatibility
  * KHR_no_error: set compatibility status for a bunch of glCompressedTex* tests
  * arb_framebuffer_object: set KHR_no_error compatibility
  * arb_copy_buffer: set KHR_no_error compatibility
  * arb_draw_buffers_blend: set KHR_no_error compatibility
  * arb_compute_variable_group_size: set KHR_no_error compatibility
  * arb_compute_shader: remove misleading headers
  * arb_compute_shader: set KHR_no_error compatibility
  * texturing: Add decompression test for S3TC DXT1
  * arb_bindless_texture: add missing writeonly qualifier to images/inout.frag
  * arb_bindless_texture: add new execution tests with sampler/image arrays
  * shader_runner: add support for setting resident handles to UBO
  * arb_bindless_texture: add ubo-named-block execution tests
  * arb_uniform_buffer_object: add uniform-block-memory-qualifier.frag
  * arb_direct_state_access: Fix memory leaks.
  * arb_sparse_buffer: Fix Coverity unintentional integer overflow defect.
  * cl-api-get-platform-ids: Remove duplicate piglit_cl_check_error.
  * shader_runner: clear resident handles before texture bindings
  * shader_runner: only clear handles that are resident
  * arb_bindless_texture: add new explicit-image-binding.shader_test
  * arb_bindless_texture: fix setting bound/bindless uniforms
  * parser_utils: do not overwrite value when no digits are found
  * shaders/ssa: fix wrong syntax in fs-swap-problem.shader_test
  * shaders: set missing blue color to glsl-const-builtin-distance.shader_test
  * arb_gpu_shader_fp64: set missing 'w' component to glsl-uniform-initializer-4
  * test/gleantest: fix missing --quick property from quick profile
  * test_gleantest: make sure --quick is returned when set in GLOBAL_PARAMS
  * glean: remove test_uniform_multiple_samplers()
  * genned-names: correct the parameter for glBindBufferRange
  * tests: Update integration for khronos CTS runner.
  * util/egl: Honour Surfaceless MESA in get_default_display
  * egl_mesa_platform_surfaceless: Don't use eglGetPlatformDisplay directly
  * egl_mesa_platform_surfaceless: Use EXT functions for surfaces
  * arb_base_instance: set KHR_no_error compatibility
  * gl-4.4: set KHR_no_error compatibility
  * arb_uniform_buffer_object: set KHR_no_error compatibility
  * arb_draw_indirect: set KHR_no_error compatibility
  * arb_indirect_parameters: set KHR_no_error compatibility
  * arb_shader_atomic_counters: set KHR_no_error compatibility
  * arb_shader_storage_buffer_object: set KHR_no_error compatibility
  * arb_get_program_binary: check correctly got_error
  * arb_texture_view: add simple test for rendering to R32UI texture view
  * arb_shader_image_load_store: set KHR_no_error compatibility
  * egl_khr_create_context: Don't expect GL_CONTEXT_FLAGS query to work when it cannot
  * fbo: Fix trivial typo in comment
  * fbo: Require ARB_depth_texture in more tests
  * getteximage-depth: Require ARB_depth_texture
  * texsubimage-depth-formats: Require ARB_depth_texture
  * fbo: Remove support for the checkerboard test pattern
  * fbo: Use renderbuffers instead of textures
  * teximage-errors: Only run the depth texture subtests when depth textures are supported
  * teximage-errors: Fix comment formatting after previous commit
  * glx_ext_import_context: fix comment typo
  * ext_framebuffer_multisample: fix comment typo
  * ARB_invalidate_subdata: set KHR_no_error status
  * gl-3.2/layered-rendering: set KHR_no_error status
  * texturing/tex3d-maxsize: set KHR_no_error status
  * TexSubImage1D tests: set KHR_no_error status
  * gl-2.0/vertex-const-attr: fix comment typo
  * CMake: define GBM_BO_MAP only when symbol is found
  * arb_bindless_texture: add new compiler tests for struct with image arrays

-------------------------------------------------------------------
Sat Apr 29 12:46:41 UTC 2017 - mpluskal@suse.com

- Update to version 1~20170428.dc7571028:
  * gl-4.5/compare-framebuffer-parameter-with-get: add test
  * arb_vertex_buffer_object-combined-vertex-index: new VBO test
  * tests: INTEL_conservative_rasterization: add missing gles3 build file
  * cl: Add sign_extend_inreg test
  * framework/results.py: Copy 'tests' internally to OrderedDict
  * framework/backends/json.py: preserve 'tests' order
  * Add a test for GL_EXT_frag_depth
  * gl-4.5/compare-framebuffer-parameter-with-get: Fix return-type warning.
  * gl-4.5: Fix tautological-compare warning.
  * arb_shader_storage_buffer_object: test unsized vs implicit arrays. This tests the difference between an unsized and an implicitly sized array
  * arb_texture_multisample/minmax: Indent according to piglit style.
  * arb_texture_multisample/minmax: Don't check INTEGER without integer textures.
  * arb_get_texture_sub_image-errors: Fix expected error values
  * gl-4.5: Fix sometimes-uninitialized warning.
  * gles-es-3.10: unsized-array-not-in-last-position
  * glsl-shaders: test correct shader source is use on cache fallback
  * draw-elements: test glMultiDrawElements(GL_UNSIGNED_BYTE)
  * all.py: let VBO tests run concurrently
  * Add arb_transform_feedback_overflow_query tests.
  * arb_transform_feedback_overflow_query: add error tests.
  * primitive-restart: Delete more glDrawArrays tests.
  * arb_transform_feedback_overflow_query: skip QBO subtests if unsupported
  * generated_tests: fix tessellation -> tesselation typo
  * generated_tests: Fix require_extensions for constant_array_size
  * arb_gpu_shader_fp64: fix vs-double-uniform-array-direct-indirect
  * get-active-attrib-array: allocate a sufficiently large buffer
  * builtin_functions: Add more 64-bit integers
  * arb_gpu_shader_fp64: add non-uniform control flow test for indirect addressing
  * shader_runner: make buffer large enough to fit any GL enum
  * arb_shading_language_420pack: check different binding points
  * arb_shader_atomic_counters: check different binding points
  * README: correct flags for 32-on-64 build
  * glsl-1.30: Test large local array (v2)
  * glsl-1.30: Test large vec4 local array
  * glsl-1.30: Test large vec2 local array
  * glsl-1.30: Test large local vec3 array
  * glsl-1.30: Test multiple large local arrays
  * Set non-mipmap filter for CopyImage textures in namespace pollution test
  * Set nearest filter for CopyImage textures in api errors test.
  * arb_vertex_attrib_64bit: remove piglit_ortho_projection() call
  * shader_runner: Add support for "polygon mode"
  * nv_fill_rectangle: add tests
  * arb_shader_ballot: simple ballotARB execution test
  * arb_shader_ballot: add readInvocationARB tests
  * arb_shader_ballot: add readFirstInvocationARB test
  * arb_shader_ballot: test builtin variables
  * arb_shader_ballot: test ballotARB inside if/else control flow
  * arb_shader_ballot: test peeling away the first invocation
  * arb_shader_clock: add basic execution tests
  * arb_cull_distance: Fix sometimes-uninitialized warnings.
  * glslparsertest: Add test case for FDO bug #100438.
  * cl: Unmap mapped cl buffer in buffer-flags test
  * cl: OCL1.1 allows pointers to NULL as valid kernel args
  * glsl-1.50: instance name is not used to match UBO/SSBOs shader interfaces
  * arb_texture_buffer_range: test glTexBufferRange() with wrong target
  * tests/py_modules/constants.py: look for generated_tests in build dir (v2)
  * glsl-1.10: tests return lowering for a loop nested in an if
  * shader_runner: add support for ARB_bindless_texture
  * add API-related tests for ARB_bindless_texture
  * arb_bindless_texture: add compiler-related tests
  * arb_bindless_texture: add linker-related tests
  * arb_bindless_texture: add execution-related tests
  * arb_post_depth_coverage-basic: Add a basic initial test.
  * arb_post_depth_coverage-multisampling: Add a multisampling test.
  * arb_post_depth_coverage-sample-shading: Test sample shading.
  * framework/exceptions: Add an exception class for user errors
  * framework: Exit if a filter removes all tests from a profile
  * Cmake: install comp shaders that are not generated
  * glsl-1.50: new trivial GS test
  * arb_tessellation_shader/execution/trivial: new trivial tess test
  * arb_tessellation_shader/execution/sanity2: new variant of the test
  * arb_blend_func_extended/output-location: require GLSL 1.50
  * arb_enhanced_layouts/component-layout: require GLSL 1.50
  * arb_separate_shader_objects/atomic-counter: require GLSL 1.50
  * arb_shader_draw_parameters: require GLSL 3.30
  * tests/egl: report 'skip' instead of 'fail' if not running under X
  * arb_bindless_texture: Fix memory leaks.
  * gl-1.4: test some glMultiDrawArrays error conditions
  * arb_gpu_shader_int64: add bit-shift tests
  * arb_draw_indirect: add transform-feedback test
  * arb_enhanced_layouts: add test for location aliasing across GS vertex streams
  * arb_shading_language_420pack: test binding different sampler types to the same tex unit
  * arb_enhanced_layouts: Remove unused variable.
  * arb_separate_shader_objects: Check piglit_link_check_status result.
  * glsl-1.40: Print the same expected output used in comparison.
  * gl-1.0-simple-renderbuffer: add a protection from test failure when an user fbo is defined
  * gl-1.0-simple-renderbuffer: fix indentation issues (trivial)
  * arb_fragment_shader_interlock: Test image load/store.
  * framework/test/shader_test: use -fbo option for shader tests
  * glx: add test for drawing to GL_FRONT between glXMakeCurrent()
  * all.py: s/OpenGL 1.1/opengl 1.1/
  * arb_fragment_shader_interlock: fix MinGW build
  * arb_shader_image_load_store: add format-layout-with-non-image-type.frag compiler test
  * arb_shader_image_load_store: add memory-qualifier-with-non-image-type.frag
  * shader_runner: clean up resident handles at exit time
  * arb_bindless_texture: add uniform-block-initializer.frag compiler tests
  * arb_bindless_texture: fix images/inout.frag
  * arb_bindless_texture: consolidate inout-*.frag compiler tests
  * arb_bindless_texture: add inout-non-matching-type.frag compiler tests
  * arb_bindless_texture: add explicit-texture-binding.shader_test
  * arb_bindless_texture: separate execution tests into two directories

-------------------------------------------------------------------
Thu Feb 16 14:20:25 UTC 2017 - jengelh@inai.de

- Update description

-------------------------------------------------------------------
Thu Feb 16 10:03:19 UTC 2017 - mpluskal@suse.com

- Build only on 64 bit architectures

-------------------------------------------------------------------
Wed Feb 08 09:55:33 UTC 2017 - mimi.vx@gmail.com

- Update to version 1~20170207.5bbeed390:
  * framework/test/glsl_parser_test.py: fix python script to run glslparsertest on Windows
  * arb_gpu_shader_int64: allow shift tests to be generated
  * arb_gpu_shader_int64: add testing of unsigned div/mod

-------------------------------------------------------------------
Mon Feb 06 12:35:02 UTC 2017 - mimi.vx@gmail.com

- Update to version 1~20170203.ca58eec0b:
  * CMake: Enable python 3.6
  * glsl-1.20: add a test that gl_ClipVertex actually affects all primitive types
  * glsl-1.30: add a test that gl_ClipDistance actually affects all primitive types
  * cl: Add tests for fdiv with neg/abs inputs
  * cl: Add tests for stored fneg
  * getteximage-formats: Disable dithering during glDrawPixels
  * framework/backends/json: always flush the metadata to the disk
  * egl: test that EGL_BAD_PARAMETER is returned for an invalid EGLImage attrib
  * Rename gen_conversion_fp64 to gen_conversion
  * gen_conversion: explicitly enumerate conversion target types
  * gen_conversion: rename _gen_from/to_double and _double_type
  * gen_conversion: refactor templates to allow multiple extensions
  * gen_conversion: generate tests for 64-bit integers
  * framework/programs/run.py: Allow comments in test-list files.
  * arb_texture_view-texsubimage-levels: correct buffer size
  * util: move SUBTEST and SUBTESTCONDITION to piglit-util
  * gl-3.1/draw-buffer-errors: skip if current Context is > 4.0
  * gl-3.1/draw-buffers-errors: select explicitly default framebuffer
  * gl-4.5/named-framebuffer-draw-buffers-errors: add a new test
  * gl-4.5/named-framebuffer-read-buffer-errors: add test
  * polygon-offset: draw tests in two rows of nine
  * gl-1.4-polygon-offset: print more info on failure.

-------------------------------------------------------------------
Mon Jan 23 10:18:06 UTC 2017 - mimi.vx@gmail.com

- Update to version 1~20170120.9123cb73c:
  * Test multiple inout parameters with indirect array indexing
  * Test multiple inout parameters with arrays of arrays

-------------------------------------------------------------------
Fri Jan 20 12:36:28 UTC 2017 - mimi.vx@gmail.com

- Update to version 1~20170119.9861294a9:
  * unittests: Add new python generator to unittests
  * CI: Add python 3.6 to build matrix

-------------------------------------------------------------------
Thu Jan 19 16:20:57 UTC 2017 - mimi.vx@gmail.com

- Update to version 1~20170119.1004a07bb:
  * egl_khr_gl_image: Add test that clears a shared image
  * glsl-1.10: test min max optimisation pass
  * glsl-1.10: another test for min max optimisation pass
  * deqp: Search stdout and stderr for X connection failure
  * Add GL_INTEL_conservative_rasterization tests
  * generated_tests: new compiler tests for INTEL_conservative_rasterization
  * resume: use the previously-set test-list when resuming
  * shader_runner: Fix MSVC build error.
  * arb_texture_view: Fix MSVC build.
  * PNG files, write mode correction

-------------------------------------------------------------------
Mon Jul 11 10:49:11 UTC 2016 - msrb@suse.com

- Update to latest version.

