<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>f4bd348256e3a52f2ffabf2545d2294c</srcmd5>
    <version>0.9.6</version>
    <time>1527933819</time>
    <user>dimstar_suse</user>
    <comment>Python library for serializing any arbitrary object graph into JSON</comment>
    <requestid>612068</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>eef9786a7a4058d5343323c77fec0043</srcmd5>
    <version>0.9.6</version>
    <time>1545647930</time>
    <user>dimstar_suse</user>
    <comment>Remove superfluous devel dependency for noarch package</comment>
    <requestid>659458</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>ce93214df865f0efc0b739df62a308d4</srcmd5>
    <version>1.1</version>
    <time>1553084364</time>
    <user>dimstar_suse</user>
    <comment>- Add patch to work with sqlalchemy 1.3:
  * sqlalchemy13.patch

- Update to 1.1:
  * Python 3.7 collections.Iterator deprecation warnings have been fixed. (#229).
  * Improved Pandas support for datetime and complex numbers. (#245)
  * NOTE jsonpickle no longer supports Python2.6, or Python3 &lt; 3.4. The officially supported Python versions are now 2.7 and 3.4+.
  * Improved Pandas and Numpy support. (#227)
  * Improved support for pickling iterators. (#216)
  * Better support for the stdlib json module when simplejson is not installed. (#217)
  * jsonpickle will now output python3-style module names when pickling builtins methods or functions. (#223)
  * jsonpickle will always flatten primitives, even when max_depth is reached, which avoids encoding unicode strings into their u'string' representation.
  * Nested classes are now supported on Python 3. (#206, #176).
  * Better support for older (pre-1.9) versions of numpy (#195).</comment>
    <requestid>686312</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>d671948cb74b6b29304eab80c91dc3ae</srcmd5>
    <version>1.2</version>
    <time>1561195377</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.2:
  * support new sqlalchemy
- Remove merged patch sqlalchemy13.patch</comment>
    <requestid>710340</requestid>
  </revision>
  <revision rev="5" vrev="2">
    <srcmd5>046c561adf12d5b6ecae29da33f7e873</srcmd5>
    <version>1.2</version>
    <time>1576062605</time>
    <user>dimstar_suse</user>
    <comment>- Exclude tests failing with python 3.8 (test_thing_with_fd,
  test_list_with_fd, and test_dict_with_fd). gh#jsonpickle/jsonpickle#281</comment>
    <requestid>754492</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>d360cfa23d64e03dbf342de28b03539d</srcmd5>
    <version>1.3</version>
    <time>1583702484</time>
    <user>dimstar_suse</user>
    <comment>- Add PR292-Python38.patch to fix Python 3.8 incompatibilities
  (gh#jsonpickle/jsonpickle#281).</comment>
    <requestid>780358</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>ba504f7aa206dc69d9a9d7b51dafcce5</srcmd5>
    <version>1.3</version>
    <time>1585265029</time>
    <user>dimstar_suse</user>
    <comment>Staging:I py2</comment>
    <requestid>784832</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>8cbb17b3b86cf605d17ebc6f46f374a2</srcmd5>
    <version>2.0.0</version>
    <time>1613511278</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.0.0
  * Major release: the serialized JSON format now preserves
    dictionary identity, which is a subtle change in the
    serialized format. (#351)
  * Dictionary identity is now preserved. For example, if the same
    dictionary appears twice in a list, the reconstituted list
    will now contain two references to the same dictionary. (#255)
    (+332)
- Changes in v1.5.2
  * Patch release to avoid the change in behavior from the
    preservation of dict identity. The next release will be
    v2.0.0. (#351)
  * This relese does not include the performance improvements from
    v1.5.1.
  * Pandas DataFrame objects with multilevel columns are now
    supported. (#346) (+347)
  * Numpy 1.20 is now officially supported. (#336)
  * Python 3.9 is now officially supported. (+348)
  * Achieved a small speedup for _get_flattener by merging type
    checks. (+349)
- Changes in v1.5.1
  * The performance of the unpickler was drastically improved by
    avoiding tag checks for basic Python types. (+340)
  * decode() documentation improvements. (+341)
  * Serialization of Pandas DataFrame objects that contain
    timedelta64[ns] dtypes are now supported. (+330) (#331)
  * Dictionary identity is now preserved. For example, if the same
    dictionary appears twice in a list, the reconstituted list
    will now contain two references to the same dictionary. (#255)
    (+332)
  * Unit tests were added to ensure that sklearn.tree.
    DecisionTreeClassifier objects are properly serialized. (#155)
    (+344)
  * The is_reducible() utility function used by encode() is now 4x
    faster! Objects that provide __getstate__(), __setstate__(),
    and __slots__ benefit most from these improvements. (+343)
  * Improved pickler flatten()/encode() performance. (+345)
- Changes in v1.5.0
  * Previous versions of jsonpickle with make_refs=False would
    emit null when encountering an object it had already seen when
    traversing objects. All instances of the object are now
    serialized. While this is arguably an improvement in the vast
    majority of scenarios, it is a change in behavior and is thus
    considered a minor-level change. (#333) (#334) (#337) (+338)
  * Multiple enums are now serialized correctly with
    make_refs=False. (#235)
- Changes in v1.4.2
  * Use importlib.metadata from the stdlib on Python 3.8. (+305)
    (#303)
  * Micro-optimize type checks to use a set for lookups. (+327)
  * Documentation improvements.
- Changes in v1.4.1
  * Patch release for Python 3.8 importlib_metadata support. (#300)
- Changes in v1.4
  * Python 3.8 support. (#292)
  * jsonpickle.encode now supports the standard indent and
    separators arguments, and passes them through to the active
    JSON backend library. (#183)
  * We now include a custom handler for array.array objects. (#199)
  * Dict key order is preserved when pickling dictionaries on
    Python3. (#193)
  * Improved serialization of dictionaries with non-string keys.
    Previously, using an enum that was both the key and a value in
    a dictionary could end up with incorrect references to other
    objects. The references are now properly maintained for dicts
    with object keys that are also referenced in the dict's
    values. (#286)
  * Improved serialization of pandas.Series objects. (#287)
- Don't test numpy and pandas in python36 flavor, because
  they are no longer available on Tumbleweed (NEP 29)
- Test some extras, but not in lettered staging if they are not
  in Ring1.
- Drop PR292-Python38.patch merged upstream
</comment>
    <requestid>872816</requestid>
  </revision>
  <revision rev="9" vrev="2">
    <srcmd5>3a0e4c57597af41edb350d84e6355f43</srcmd5>
    <version>2.0.0</version>
    <time>1641680584</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>944522</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>6355cf0e3c3d4538fe67caf5ddceac2f</srcmd5>
    <version>3.0.1</version>
    <time>1674585814</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1060582</requestid>
  </revision>
  <revision rev="11" vrev="2">
    <srcmd5>fcd7e43149d6cea10a79aa31c83094be</srcmd5>
    <version>3.0.1</version>
    <time>1686927296</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1093360</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>eedf4be5408cd26f31a9403645f1d769</srcmd5>
    <version>3.0.2</version>
    <time>1702587797</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1132963</requestid>
  </revision>
  <revision rev="13" vrev="2">
    <srcmd5>fe3f9cb1b921097d065af4ce505f3444</srcmd5>
    <version>3.0.2</version>
    <time>1704380329</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1136659</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>8b65d2322fa54bec632661f7173b9427</srcmd5>
    <version>3.0.3</version>
    <time>1711397317</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1160902</requestid>
  </revision>
  <revision rev="15" vrev="2">
    <srcmd5>826aaf9392ea2e4a3d498a5abebcf031</srcmd5>
    <version>3.0.3</version>
    <time>1711630535</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1163290</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>05f0d9562319e2e1cffb65f7ae2ecb1b</srcmd5>
    <version>3.0.4</version>
    <time>1713205029</time>
    <user>anag+factory</user>
    <comment>- update to 3.0.4:
  * Fixed an issue with django.SafeString and other classes
    inheriting from str having read-only attribute errors
  * The test suite was made compatible with pytest-ruff&gt;=0.3.0
  * A `garden.yaml` file was added for use with the
   `garden` command runner.
  * The test suite was updated to avoid deprecated SQLALchemy APIs.
   * The `jaraco.packaging.sphinx` documentation dependency was
     removed.</comment>
    <requestid>1167627</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>724f82eea842d14e917d58568b948d16</srcmd5>
    <version>3.2.1</version>
    <time>1718808049</time>
    <user>anag+factory</user>
    <comment>- update to 3.2.1:
  * The ``ignorereserved`` parameter to the private
    ``_restore_from_dict()`` function has been restored for
    backwards compatibility. (+501)
  * Nested dictionaries in `py/state` are now correctly restored when
    tracking object references. (+501) (#500)
  * `jsonpickle.ext.numpy.register_handlers` now provides options
    that are forwarded to the `NumpyNDArrayHandler` constructor.
  * Fix bug of not handling ``classes`` argument to
    `jsonpickle.decode` being a dict. Previously, the keys were
    ignored and only values were used. (+494)
  * Allow the ``classes`` argument to `jsonpickle.pickle` to have
    class objects as keys. This extends the current functionality
    of only having class name strings as keys. (+494)
  * The ``garden setup/dev`` action and ``requirements-dev.txt``
    requirements file now include test dependencies for use
    during development.
  * Added support for Python 3.13. (+505) (#504)</comment>
    <requestid>1181704</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>98988e51cc264d03fca8554c51f2d55e</srcmd5>
    <version>3.2.2</version>
    <time>1719825704</time>
    <user>dimstar_suse</user>
    <comment>- update to 3.2.2:
  * A bug with the incorrect (de)serialization of NoneType
    objects has been fixed. (+507)
  * tests/benchmark.py was updated to avoid Python 2 syntax.
    (+508)
  * The unpickler was updated to avoid creating temporary
    functions. (+508)
  * Some basic scripts have been made to analyze benchmark
    results. (+511)
  * Fix test suite compatibility with Numpy 2.x (+512)
  * setup.cfg was updated to use license_files instead of
    license_file.</comment>
    <requestid>1184137</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>bf3a43013ae9ed5756a859d0ef159149</srcmd5>
    <version>4.0.0</version>
    <time>1732198435</time>
    <user>anag+factory</user>
    <comment>- update to 4.0.0:
  * Breaking Change: Python 3.7 is no longer supported.
  * Breaking Change: Support for pre-0.7.0 repr-serialized
    objects is no longer enabled by default. The safe option to
    decode() was changed from False to True. Users can still pass
    safe=False to decode() in order to enable this feature for
    the purposes of loading older files, but beware that this
    feature relies on unsafe behavior through its use of eval().
    Users are encouraged to re-pickle old data in order to
    migrate away from the the unsafe loading feature. (+514)
  * The pickler no longer produces py/repr tags when pickling
    modules. py/mod is used instead, as it is clearer and uses
    one less byte. (+514)
  * The test suite no longer uses the deprecated
    datetime.datetime.utcnow() function. (+539)
  * The breaking changes from v4 were inadvertedly included in
    v3.4.1, which has been yanked. This release remedies this by
    reverting the v4 changes.
  * Support decoding pandas dataframes encoded with versions
    3.3.0 and older. (+536)
  * Officially support Python 3.12 in the GitHub Actions testing
    matrix, and update GHA package versions used. (+524)
  * Improve reproducibility of benchmarking commands on Linux by
    using taskset and adding a &quot;HOWTO&quot; run benchmarks section in
    benchmarking/README.md. (+526)
  * The setup.cfg packaging configuration has been replaced by
    pyproject.toml. (+527)
  * yaml is now supported as a jsonpickle backend. (+528)
  * OSSFuzz scripts are now available in the fuzzing/ directory.
    (+525)</comment>
    <requestid>1225333</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>054ad36578cd4595ed37ebbe80e726e7</srcmd5>
    <version>4.0.1</version>
    <time>1738773141</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1243316</requestid>
  </revision>
</revisionlist>
