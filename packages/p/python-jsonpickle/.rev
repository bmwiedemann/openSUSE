<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>f4bd348256e3a52f2ffabf2545d2294c</srcmd5>
    <version>0.9.6</version>
    <time>1527933819</time>
    <user>dimstar_suse</user>
    <comment>Python library for serializing any arbitrary object graph into JSON</comment>
    <requestid>612068</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>eef9786a7a4058d5343323c77fec0043</srcmd5>
    <version>0.9.6</version>
    <time>1545647930</time>
    <user>dimstar_suse</user>
    <comment>Remove superfluous devel dependency for noarch package</comment>
    <requestid>659458</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>ce93214df865f0efc0b739df62a308d4</srcmd5>
    <version>1.1</version>
    <time>1553084364</time>
    <user>dimstar_suse</user>
    <comment>- Add patch to work with sqlalchemy 1.3:
  * sqlalchemy13.patch

- Update to 1.1:
  * Python 3.7 collections.Iterator deprecation warnings have been fixed. (#229).
  * Improved Pandas support for datetime and complex numbers. (#245)
  * NOTE jsonpickle no longer supports Python2.6, or Python3 &lt; 3.4. The officially supported Python versions are now 2.7 and 3.4+.
  * Improved Pandas and Numpy support. (#227)
  * Improved support for pickling iterators. (#216)
  * Better support for the stdlib json module when simplejson is not installed. (#217)
  * jsonpickle will now output python3-style module names when pickling builtins methods or functions. (#223)
  * jsonpickle will always flatten primitives, even when max_depth is reached, which avoids encoding unicode strings into their u'string' representation.
  * Nested classes are now supported on Python 3. (#206, #176).
  * Better support for older (pre-1.9) versions of numpy (#195).</comment>
    <requestid>686312</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>d671948cb74b6b29304eab80c91dc3ae</srcmd5>
    <version>1.2</version>
    <time>1561195377</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.2:
  * support new sqlalchemy
- Remove merged patch sqlalchemy13.patch</comment>
    <requestid>710340</requestid>
  </revision>
  <revision rev="5" vrev="2">
    <srcmd5>046c561adf12d5b6ecae29da33f7e873</srcmd5>
    <version>1.2</version>
    <time>1576062605</time>
    <user>dimstar_suse</user>
    <comment>- Exclude tests failing with python 3.8 (test_thing_with_fd,
  test_list_with_fd, and test_dict_with_fd). gh#jsonpickle/jsonpickle#281</comment>
    <requestid>754492</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>d360cfa23d64e03dbf342de28b03539d</srcmd5>
    <version>1.3</version>
    <time>1583702484</time>
    <user>dimstar_suse</user>
    <comment>- Add PR292-Python38.patch to fix Python 3.8 incompatibilities
  (gh#jsonpickle/jsonpickle#281).</comment>
    <requestid>780358</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>ba504f7aa206dc69d9a9d7b51dafcce5</srcmd5>
    <version>1.3</version>
    <time>1585265029</time>
    <user>dimstar_suse</user>
    <comment>Staging:I py2</comment>
    <requestid>784832</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>8cbb17b3b86cf605d17ebc6f46f374a2</srcmd5>
    <version>2.0.0</version>
    <time>1613511278</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 2.0.0
  * Major release: the serialized JSON format now preserves
    dictionary identity, which is a subtle change in the
    serialized format. (#351)
  * Dictionary identity is now preserved. For example, if the same
    dictionary appears twice in a list, the reconstituted list
    will now contain two references to the same dictionary. (#255)
    (+332)
- Changes in v1.5.2
  * Patch release to avoid the change in behavior from the
    preservation of dict identity. The next release will be
    v2.0.0. (#351)
  * This relese does not include the performance improvements from
    v1.5.1.
  * Pandas DataFrame objects with multilevel columns are now
    supported. (#346) (+347)
  * Numpy 1.20 is now officially supported. (#336)
  * Python 3.9 is now officially supported. (+348)
  * Achieved a small speedup for _get_flattener by merging type
    checks. (+349)
- Changes in v1.5.1
  * The performance of the unpickler was drastically improved by
    avoiding tag checks for basic Python types. (+340)
  * decode() documentation improvements. (+341)
  * Serialization of Pandas DataFrame objects that contain
    timedelta64[ns] dtypes are now supported. (+330) (#331)
  * Dictionary identity is now preserved. For example, if the same
    dictionary appears twice in a list, the reconstituted list
    will now contain two references to the same dictionary. (#255)
    (+332)
  * Unit tests were added to ensure that sklearn.tree.
    DecisionTreeClassifier objects are properly serialized. (#155)
    (+344)
  * The is_reducible() utility function used by encode() is now 4x
    faster! Objects that provide __getstate__(), __setstate__(),
    and __slots__ benefit most from these improvements. (+343)
  * Improved pickler flatten()/encode() performance. (+345)
- Changes in v1.5.0
  * Previous versions of jsonpickle with make_refs=False would
    emit null when encountering an object it had already seen when
    traversing objects. All instances of the object are now
    serialized. While this is arguably an improvement in the vast
    majority of scenarios, it is a change in behavior and is thus
    considered a minor-level change. (#333) (#334) (#337) (+338)
  * Multiple enums are now serialized correctly with
    make_refs=False. (#235)
- Changes in v1.4.2
  * Use importlib.metadata from the stdlib on Python 3.8. (+305)
    (#303)
  * Micro-optimize type checks to use a set for lookups. (+327)
  * Documentation improvements.
- Changes in v1.4.1
  * Patch release for Python 3.8 importlib_metadata support. (#300)
- Changes in v1.4
  * Python 3.8 support. (#292)
  * jsonpickle.encode now supports the standard indent and
    separators arguments, and passes them through to the active
    JSON backend library. (#183)
  * We now include a custom handler for array.array objects. (#199)
  * Dict key order is preserved when pickling dictionaries on
    Python3. (#193)
  * Improved serialization of dictionaries with non-string keys.
    Previously, using an enum that was both the key and a value in
    a dictionary could end up with incorrect references to other
    objects. The references are now properly maintained for dicts
    with object keys that are also referenced in the dict's
    values. (#286)
  * Improved serialization of pandas.Series objects. (#287)
- Don't test numpy and pandas in python36 flavor, because
  they are no longer available on Tumbleweed (NEP 29)
- Test some extras, but not in lettered staging if they are not
  in Ring1.
- Drop PR292-Python38.patch merged upstream
</comment>
    <requestid>872816</requestid>
  </revision>
  <revision rev="9" vrev="2">
    <srcmd5>3a0e4c57597af41edb350d84e6355f43</srcmd5>
    <version>2.0.0</version>
    <time>1641680584</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>944522</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>6355cf0e3c3d4538fe67caf5ddceac2f</srcmd5>
    <version>3.0.1</version>
    <time>1674585814</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1060582</requestid>
  </revision>
  <revision rev="11" vrev="2">
    <srcmd5>fcd7e43149d6cea10a79aa31c83094be</srcmd5>
    <version>3.0.1</version>
    <time>1686927296</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1093360</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>eedf4be5408cd26f31a9403645f1d769</srcmd5>
    <version>3.0.2</version>
    <time>1702587797</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1132963</requestid>
  </revision>
  <revision rev="13" vrev="2">
    <srcmd5>fe3f9cb1b921097d065af4ce505f3444</srcmd5>
    <version>3.0.2</version>
    <time>1704380329</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1136659</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>8b65d2322fa54bec632661f7173b9427</srcmd5>
    <version>3.0.3</version>
    <time>1711397317</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1160902</requestid>
  </revision>
  <revision rev="15" vrev="2">
    <srcmd5>826aaf9392ea2e4a3d498a5abebcf031</srcmd5>
    <version>3.0.3</version>
    <time>1711630535</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1163290</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>05f0d9562319e2e1cffb65f7ae2ecb1b</srcmd5>
    <version>3.0.4</version>
    <time>1713205029</time>
    <user>anag+factory</user>
    <comment>- update to 3.0.4:
  * Fixed an issue with django.SafeString and other classes
    inheriting from str having read-only attribute errors
  * The test suite was made compatible with pytest-ruff&gt;=0.3.0
  * A `garden.yaml` file was added for use with the
   `garden` command runner.
  * The test suite was updated to avoid deprecated SQLALchemy APIs.
   * The `jaraco.packaging.sphinx` documentation dependency was
     removed.</comment>
    <requestid>1167627</requestid>
  </revision>
</revisionlist>
