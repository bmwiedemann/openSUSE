<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>1f85bc50eb28215952a9caadfe156bde</srcmd5>
    <version>1.1.0</version>
    <time>1565694867</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>722820</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>c60b9e84f110e4b18278e633fe595037</srcmd5>
    <version>1.1.0</version>
    <time>1566665369</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>725778</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>1d0bb3a450feb7782816d36b5eafa8dc</srcmd5>
    <version>1.3.0</version>
    <time>1584643801</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.3.0:
  * RQ 1.3.0 (2020-03-09)
    + Support for infinite job timeout. Thanks @theY4Kman!
    + Added __main__ file so you can now do python -m rq.cli. Thanks @bbayles!
    + Fixes an issue that may cause zombie processes. Thanks @wevsty!
    + job_id is now passed to logger during failed jobs. Thanks @smaccona!
    + queue.enqueue_at() and queue.enqueue_in() now supports explicit args and kwargs function invocation. Thanks @selwin!
  * RQ 1.2.2 (2020-01-31)
    + Job.fetch() now properly handles unpickleable return values. Thanks @selwin!
  * RQ 1.2.1 (2020-01-31)
    + enqueue_at() and enqueue_in() now sets job status to scheduled. Thanks @coolhacker170597!
    + Failed jobs data are now automatically expired by Redis. Thanks @selwin!
    + Fixes RQScheduler logging configuration. Thanks @FlorianPerucki!
  * RQ 1.2.0 (2020-01-04)
    + This release also contains an alpha version of RQ's builtin job scheduling mechanism. Thanks @selwin!
    + Various internal API changes in preparation to support multiple job dependencies. Thanks @thomasmatecki!
    + --verbose or --quiet CLI arguments should override --logging-level. Thanks @zyt312074545!
    + Fixes a bug in rq info where it doesn't show workers for empty queues. Thanks @zyt312074545!
    + Fixed queue.enqueue_dependents() on custom Queue classes. Thanks @van-ess0!
    + RQ and Python versions are now stored in job metadata. Thanks @eoranged!
    + Added failure_ttl argument to job decorator. Thanks @pax0r!</comment>
    <requestid>786289</requestid>
  </revision>
</revisionlist>
