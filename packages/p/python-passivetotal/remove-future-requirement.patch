Index: passivetotal-2.5.9/passivetotal/response.py
===================================================================
--- passivetotal-2.5.9.orig/passivetotal/response.py
+++ passivetotal-2.5.9/passivetotal/response.py
@@ -4,7 +4,6 @@
 __author__ = 'Brandon Dixon (PassiveTotal)'
 __version__ = '1.0.0'
 
-from future.utils import iteritems
 import datetime
 import json
 import logging
@@ -44,7 +43,7 @@ class Response(object):
 
     def _boost_properties(self):
         """Make first-class keys attributes of the object."""
-        for key, value in iteritems(self._results):
+        for key, value in self._results.items():
             self.logger.debug("Property: %s, %s" % (key, value))
             setattr(self, key, value)
 
@@ -108,4 +107,4 @@ class Response(object):
 
         :return: STIX formatted data
         """
-        raise NotImplementedError("Subclass must implement this.")
\ No newline at end of file
+        raise NotImplementedError("Subclass must implement this.")
Index: passivetotal-2.5.9/setup.py
===================================================================
--- passivetotal-2.5.9.orig/setup.py
+++ passivetotal-2.5.9/setup.py
@@ -22,7 +22,7 @@ setup(
     author_email="admin@passivetotal.org",
     license="GPLv2",
     packages=find_packages(),
-    install_requires=['requests', 'python-dateutil', 'future', 'tldextract'],
+    install_requires=['requests', 'python-dateutil', 'tldextract'],
     long_description=read('README.md'),
     long_description_content_type="text/markdown",
     classifiers=[],
Index: passivetotal-2.5.9/tests/test_ssl.py
===================================================================
--- passivetotal-2.5.9.orig/tests/test_ssl.py
+++ passivetotal-2.5.9/tests/test_ssl.py
@@ -1,6 +1,5 @@
 from unittest.mock import patch
 import unittest
-from future.utils import iteritems
 
 from .conf import fake_request
 from passivetotal.libs.ssl import SslRequest
@@ -43,7 +42,7 @@ class SslTestCase(unittest.TestCase):
         response = self.client.get_ssl_certificate_details(**payload)
         wrapped = Response(response)
 
-        for key, value in iteritems(response):
+        for key, value in response.items():
             assert (getattr(wrapped, key)) == value
 
     def test_ssl_certificate_search(self):
Index: passivetotal-2.5.9/tests/test_whois.py
===================================================================
--- passivetotal-2.5.9.orig/tests/test_whois.py
+++ passivetotal-2.5.9/tests/test_whois.py
@@ -1,6 +1,5 @@
 from unittest.mock import patch
 import unittest
-from future.utils import iteritems
 
 from .conf import fake_request
 from passivetotal.libs.whois import WhoisRequest
@@ -43,7 +42,7 @@ class WhoisTestCase(unittest.TestCase):
         response = self.client.get_whois_details(**payload)
         wrapped = Response(response)
 
-        for key, value in iteritems(response):
+        for key, value in response.items():
             assert (getattr(wrapped, key)) == value
 
     def test_whois_search(self):
