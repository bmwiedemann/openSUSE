<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>706f7a886c619a759f3838a60d796d21</srcmd5>
    <version>2.4</version>
    <time>1405611095</time>
    <user>coolo</user>
    <comment>I intend to submit python-pandas to openSUSE:Factory.  python-pandas is a tool that makes it easy to do complex data import, export, and manipulation.  It has become one of the critical tools for data analysis in python, like python-numpy, python-scipy, python-matplotlib, and IPython (all of which are in openSUSE:Factory).

This is a dependency of python-pandas.

This package is also useful on its own for greatly increasing the speed of python-numpy operations.  (I know I said the same thing about python-Bottleneck, both accelerate different types of numpy operations in different ways, that is why they are both used here).</comment>
    <requestid>241241</requestid>
  </revision>
  <revision rev="2" vrev="3">
    <srcmd5>706f7a886c619a759f3838a60d796d21</srcmd5>
    <version>2.4</version>
    <time>1409302929</time>
    <user>adrianSuSE</user>
    <comment>Split 13.2 from Factory</comment>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>d793ef152a40a53a98559735e7da0212</srcmd5>
    <version>2.4.3</version>
    <time>1431668632</time>
    <user>coolo</user>
    <comment>1</comment>
    <requestid>306667</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>e5e7318c6022a010dfd7fbde39106c66</srcmd5>
    <version>2.4.6</version>
    <time>1454491183</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>357122</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>08bde0f5504cf9924f978618f843f581</srcmd5>
    <version>2.6.2</version>
    <time>1493819701</time>
    <user>dimstar_suse</user>
    <comment>Update to 2.6.2
Implement single-spec version</comment>
    <requestid>489486</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>bd4de160d25abab0b4a89256938ff00f</srcmd5>
    <version>2.6.4</version>
    <time>1506594890</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>528801</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>26da8caccefe367018e097cf755ca114</srcmd5>
    <version>2.6.4</version>
    <time>1507197524</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>530885</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>f93782d5a927a39ce8a3e2635f1f1bb6</srcmd5>
    <version>2.6.6</version>
    <time>1533627858</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>627751</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>f4f3c2a71be3baf0167e99f49fc2fe30</srcmd5>
    <version>2.6.8</version>
    <time>1536094586</time>
    <user>dimstar_suse</user>
    <comment>- update to version 2.6.8:
  * Add check to make sure that f_locals is not actually f_globals
    when we do the f_locals clear to avoid the #310 memory leak issue.
  * Compare NumPy versions using distutils.version.LooseVersion to
    avoid issue #312 when working with NumPy development versions.
  * As part of multibuild, wheels for Python 3.7 for Linux and MacOSX
    are now available on PyPI.
- changes from version 2.6.7:
  * Thanks to Lehman Garrison for finding and fixing a bug that
    exhibited memory leak-like behavior. The use in numexpr.evaluate
    of sys._getframe combined with .f_locals from that frame object
    results an extra refcount on objects in the frame that calls
    numexpr.evaluate, and not evaluate's frame. So if the calling
    frame remains in scope for a long time (such as a procedural
    script where numexpr is called from the base frame) garbage
    collection would never occur.
  * Imports for the numexpr.test submodule were made lazy in the
    numexpr module.</comment>
    <requestid>632816</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>314cb6cdf3efc43d07992be5bab66461</srcmd5>
    <version>2.6.9</version>
    <time>1546946762</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>660789</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>14d7c26a0b16da5d6f4a559c4c295e3f</srcmd5>
    <version>2.7.0</version>
    <time>1567423563</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>727462</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>627f926013edc3ed15b3c03ace87408c</srcmd5>
    <version>2.7.1</version>
    <time>1578606627</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>761947</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>01d51ccc798cc8208fc5d73b33e9248f</srcmd5>
    <version>2.7.2</version>
    <time>1610381598</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>862129</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>8ac2da5b726ab301e16ac60f5073f953</srcmd5>
    <version>2.7.3</version>
    <time>1615802067</time>
    <user>dimstar_suse</user>
    <comment>- skip python3.6 build (no numpy) 

- update to version 2.7.3:
  * Pinned Numpy versions to minimum supported version in an effort to
    alleviate issues seen in Windows machines not having the same MSVC
    runtime installed as was used to build the wheels.
  * ARMv8 wheels are now available, thanks to odidev for the pull
    request.</comment>
    <requestid>878626</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>192b79a3da07ac7ee5570a0c24cc3a94</srcmd5>
    <version>2.8.1</version>
    <time>1644435491</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>952057</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>c73c2c2f10c5b9a836d4d4fe976f4b5c</srcmd5>
    <version>2.8.3</version>
    <time>1657617129</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>988324</requestid>
  </revision>
  <revision rev="17" vrev="2">
    <srcmd5>a8437cfb7ec60852f3dbdf665eb12aa1</srcmd5>
    <version>2.8.3</version>
    <time>1659612189</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>989833</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>8f5bf97080f310136c64818ae6ca195c</srcmd5>
    <version>2.8.4</version>
    <time>1672754667</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.8.4:
  * Support for Python 3.11 has been added.
  * Thanks to Tobias Hangleiter for an improved accuracy complex `expm1` function.
    While it is 25 % slower, it is significantly more accurate for the real component
    over a range of values and matches NumPy outputs much more closely.
  * Thanks to Kirill Kouzoubov for a range of fixes to constants parsing that was 
    resulting in duplicated constants of the same value.
  * Thanks to Mark Harfouche for noticing that we no longer need `numpy` version 
    checks. `packaging` is no longer a requirement as a result.</comment>
    <requestid>1046267</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>0fb6566edd50fd2eed7bcb2d9be3b5ea</srcmd5>
    <version>2.8.5</version>
    <time>1693235850</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1106397</requestid>
  </revision>
  <revision rev="20" vrev="2">
    <srcmd5>2a11744bf3b3d1b7a514294c481f86d4</srcmd5>
    <version>2.8.4</version>
    <time>1694019418</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1109001</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>469fc47056f3fbea6b1563f5368846ec</srcmd5>
    <version>2.8.7</version>
    <time>1701121508</time>
    <user>anag+factory</user>
    <comment>- update to 2.8.7:
  * More permissive rules in sanitizing regular expression: allow to
    access digits after the . with scientific notation.
  * Don't reject double underscores that are not at the start or end of
    a variable name (pandas uses those), or scientific-notation numbers
    with digits after the decimal point.
  * Do not use numpy.alltrue in the test suite, as it has been
    deprecated (replaced by numpy.all).
  * Python 3.12 support

  * Thanks to Kirill Kouzoubov for a range of fixes to constants parsing that was
  * Thanks to Mark Harfouche for noticing that we no longer need `numpy` version
- skip python3.6 build (no numpy)
- python3 package added
 * Fixed several issues with different platforms not supporting
 * Now, when trying to use pure Python boolean operators, 'and',
 'or' and 'not, an error is issued and suggesting that '&amp;', '|'
- fix requiements for SLE 11</comment>
    <requestid>1129235</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>a5848ca06a7c88745760d2cd0de6c939</srcmd5>
    <version>2.8.8</version>
    <time>1702936591</time>
    <user>anag+factory</user>
    <comment>- update to 2.8.8:
  * Fix re_evaluate not taking global_dict as argument.
  * Fix parsing of simple complex numbers.  Now,
    `ne.evaluate('1.5j')` works.
  * Fixes for upcoming NumPy 2.0</comment>
    <requestid>1133817</requestid>
  </revision>
</revisionlist>
