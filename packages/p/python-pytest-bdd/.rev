<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>3b708097e86eb812b8e14883c4fddd46</srcmd5>
    <version>3.1.0</version>
    <time>1554189632</time>
    <user>dimstar_suse</user>
    <comment>- Convert to single spec
- Use %license
- Update to v3.1.0
- Initial version 0.6.8
</comment>
    <requestid>687369</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>61b488883b5e5dd579f1c37e79cb2a11</srcmd5>
    <version>3.1.1</version>
    <time>1563701621</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.1.1:
  * Allow unicode string in @given() step names when using python2. This makes the transition of projects from python 2 to 3 easier.</comment>
    <requestid>716613</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>e72808251d5e89c7ee105ee2d65ece14</srcmd5>
    <version>3.2.1</version>
    <time>1568066636</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.2.1:
  * python 3.8 support</comment>
    <requestid>729485</requestid>
  </revision>
  <revision rev="4" vrev="2">
    <srcmd5>88aa9a4fb22ab405c0ff609355768583</srcmd5>
    <version>3.2.1</version>
    <time>1583835094</time>
    <user>dimstar_suse</user>
    <comment>- use %pytest macro 
- add test_flaky.patch to fix gerkhin reporter test flakinness</comment>
    <requestid>783248</requestid>
  </revision>
  <revision rev="5" vrev="3">
    <srcmd5>939d2a897dc2d81ddacd2393a93ce270</srcmd5>
    <version>3.2.1</version>
    <time>1587467397</time>
    <user>dimstar_suse</user>
    <comment>- Fix build without python2</comment>
    <requestid>795763</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>6c3e829900511c817c1acab451a54021</srcmd5>
    <version>3.3.0</version>
    <time>1588324154</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.3.0:
  * Require at least pytest 4.3
- Remove merged test_flaky.patch</comment>
    <requestid>798143</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>b3d032a4ec9834af84b6e206ddd1e522</srcmd5>
    <version>3.4.0</version>
    <time>1591742993</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.4.0:
  * Parse multiline steps according to the gherkin specification #365.</comment>
    <requestid>812820</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>5a8966d0c288f3502ab00d2995fa27ea</srcmd5>
    <version>4.0.1</version>
    <time>1600879634</time>
    <user>dimstar_suse</user>
    <comment>- update to 4.0.1
- remove requires on python-enum34, not needed by pytest-bdd
 * Fixed performance regression introduced in 4.0.0 where collection time
    of tests would take way longer than before
 * Strict Gherkin option is removed (@scenario() does not accept
    the strict_gherkin parameter).
 * @scenario() does not accept the undocumented parameter caller_module anymore.
 * Given step is no longer a fixture. The scope parameter is also removed.
 * Fixture parameter is removed from the given step declaration.
 * pytest_bdd_step_validation_error hook is removed.
 * Fix an error with pytest-pylint plugin
 * Fix pytest-xdist 2.0 compatibility
 * Fix compatibility with pytest 6 --import-mode=importlib option.</comment>
    <requestid>836273</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>4b2dbe9d6eda919ebbcdcdf25a86d39b</srcmd5>
    <version>4.0.2</version>
    <time>1614684732</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>875535</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>34205abdffbf0d9505f5c682d4811780</srcmd5>
    <version>5.0.0</version>
    <time>1647031273</time>
    <user>dimstar_suse</user>
    <comment>- Update to 5.0.0:
  * Rewrite the logic to parse Examples for Scenario Outlines. Now the
    substitution of the examples is done during the parsing of Gherkin
    feature files.
  * Removed ``example_converters`` from ``scenario(...)`` signature.
  * Removed ``--cucumberjson-expanded`` and ``--cucumber-json-expanded``
    options. Now the JSON report is always expanded.
  * Removed ``--gherkin-terminal-reporter-expanded`` option.
  * `when` and `then` steps now can provide a `target_fixture`, just like
    `given` does.
  * Drop compatibility for python 2 and officially support only python &gt;= 3.6.
  * Fix error when using `--cucumber-json-expanded` in combination with
    `example_converters` (marcbrossaissogeti).
  * Fix `--generate-missing` not correctly recognizing steps with parsers
- Drop python-mock and python-six from BuildRequires and Requires.
- No longer skip tests that are not broken</comment>
    <requestid>960954</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>d346ba4104fcddb36eb950a0d1ea1596</srcmd5>
    <version>7.1.2</version>
    <time>1715686745</time>
    <user>anag+factory</user>
    <comment>- Update to 7.1.2:
  * Address another compatibility issue with pytest 8.1 (fixture registration). 
  * Address a bug introduced in pytest-bdd 7.1 caused by incorrect pytest
    version check.
  * Address compatibility issue with pytest 8.1. 
  * Fix errors occurring if `pytest_unconfigure` is called before
    `pytest_configure`. 
  * parsers.re now does a fullmatch instead of a partial match. This is to
    make it work just like the other parsers, since they don't ignore
    non-matching characters at the end of the string. 
  * Drop python 3.7 compatibility, as it's no longer supported. 
  * Declare official support for python 3.12 
  * Improve parser performance by 15% 
  * Fix regression introduced in version 6.1.0 where the
    pytest_bdd_after_scenario hook would be called after every step instead
    of after the scenario. 
  * Fix bug where steps without parsers would take precedence over steps
    with parsers. 
  * Step functions can now be decorated multiple times with @given, @when,
    @then. Previously every decorator would override converters and
    target_fixture every at every application. 
  * Require pytest&gt;=6.2 
  * Using modern way to specify hook options to avoid deprecation warnings
    with pytest &gt;=7.2.
  * Add generic step decorator that will be used for all kind of steps 
  * Add stacklevel param to given, when, then, step decorators. This allows
    for programmatic step generation 
  * Hide pytest-bdd internal method in user tracebacks 
  * Make the package PEP 561-compatible 
  * Configuration option bdd_features_base_dir is interpreted as relative</comment>
    <requestid>1172299</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>fb4c60ee95473397e723746f9d97f5bd</srcmd5>
    <version>7.2.0</version>
    <time>1717765485</time>
    <user>anag+factory</user>
    <comment>- update to 7.2.0:
  * Fix compatibility issue with Python 3.13.
  * Declare compatibility with Python 3.13.</comment>
    <requestid>1179139</requestid>
  </revision>
</revisionlist>
