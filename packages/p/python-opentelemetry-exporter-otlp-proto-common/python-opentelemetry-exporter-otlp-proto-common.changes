-------------------------------------------------------------------
Sun Sep 21 15:03:12 UTC 2025 - Dirk Müller <dmueller@suse.com>

- update to 1.37.0:
  * Add experimental composite samplers
  * Add new environment variables to the SDK `OTEL_PYTHON_EXPORTE
    R_OTLP_{HTTP/GRPC}_{METRICS/TRACES/LOGS}_CREDENTIAL_PROVIDER`
    that can be used to inject a `requests.Session` or
    `grpc.ChannelCredentials` object into OTLP exporters created
    during auto instrumentation #4689.
  * Filter duplicate logs out of some internal `logger`'s logs on
    the export logs path that might otherwise endlessly log or
    cause a recursion depth exceeded issue in cases where logging
    itself results in an exception. (#4695).
  * docs: linked the examples with their github source code
    location and added Prometheus example
  * Permit to override default HTTP OTLP exporters headers
  * semantic-conventions: Bump to 1.37.0
  * opentelemetry-sdk: fix handling of OTEL_ATTRIBUTE_COUNT_LIMIT
    in logs
  * Performance: Cache `importlib_metadata.entry_points`
  * opentelemetry-sdk: fix calling Logger.emit with an API
    LogRecord instance
- update to 1.36.0:
  * Add missing Prometheus exporter documentation
  * Overwrite logging.config.fileConfig and
    logging.config.dictConfig to ensure the OTLP `LogHandler`
    remains attached to the root logger. Fix a bug that can cause
    a deadlock to occur over `logging._lock` in some cases
    (#4636).
  * otlp-http-exporter: set default value for param `timeout_sec`
    in `_export` method
  * Update OTLP gRPC/HTTP exporters: calling shutdown will now
    interrupt exporters that are sleeping before a retry attempt,
    and cause them to return failure immediately. Update
    BatchSpan/LogRecordProcessors: shutdown will now complete
    after 30 seconds of trying to finish exporting any buffered
    telemetry, instead of continuing to export until all
    telemetry was exported. (#4638).
- update to 1.35.0:
  * Update OTLP proto to v1.7 #4645.
  * Add `event_name` as a top level field in the `LogRecord`.
    Events are now simply logs with the `event_name` field set,
    the logs SDK should be used to emit events (#4652).
  * Update OTLP gRPC/HTTP exporters: the export timeout is now
    inclusive of all retries and backoffs. A +/-20% jitter was
    added to all backoffs. A pointless 32 second sleep that
    occurred after all retries had completed/failed was removed.
    (#4564).
  * Update ConsoleLogExporter.export to handle LogRecord's
    containing bytes type in the body (#4614).
  * opentelemetry-sdk: Fix invalid `type: ignore` that causes
    mypy to ignore the whole file
  * Add `span_exporter` property back to `BatchSpanProcessor`
    class
  * Fix license field in pyproject.toml files
  * Update logger level to NOTSET in logs example
  * Logging API accepts optional `context`; deprecates
    `trace_id`, `span_id`, `trace_flags`. (#4597) and
  * sdk: use context instead of trace_id,span_id for initializing
    LogRecord
  * Rename LogRecordProcessor.emit to on_emit
  * Logging API hide std_to_otel function to convert python
    logging severity to otel severity
  * proto: relax protobuf version requirement to support v6
  * Bump semantic-conventions to 1.36.0
  * Set expected User-Agent in HTTP headers for grpc OTLP
    exporter

-------------------------------------------------------------------
Mon May 26 07:26:19 UTC 2025 - Nico Krapp <nico.krapp@suse.com>

- Update to 1.33.1
  * Remove log messages from BatchLogRecordProcessor.emit, this caused the
    program to crash at shutdown with a max recursion error
- Update to 1.33.0
  * Fix intermittent Connection aborted error when using otlp/http exporters
  * opentelemetry-sdk: use stable code attributes:
    code.function -> code.function.name, code.lineno -> code.line.number,
    code.filepath -> code.file.path
  * Fix serialization of extended attributes for logs signal
  * Handle OTEL_PROPAGATORS contains None
  * docs: updated and added to the metrics and log examples
  * Bump semantic conventions to 1.33.0

-------------------------------------------------------------------
Tue Feb 25 20:59:31 UTC 2025 - Dirk Müller <dmueller@suse.com>

- update to 1.30.0:
  * Always setup logs sdk,
    OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED only
    controls python `logging` module handler setup
  * Add `attributes` field in `metrics.get_meter` wrapper
    function
  * Add Python 3.13 support
  * sdk: don't log or print warnings when the SDK has been
    disabled
  * Fix span context manager typing by using ParamSpec from
    typing_extensions
  * Fix serialization of None values in logs body to match
    1.31.0+ data model
  * [BREAKING] semantic-conventions: Remove `opentelemetry.semcon
    v.attributes.network_attributes.NETWORK_INTERFACE_NAME`
    introduced by mistake in the wrong module.
  * Add support for explicit bucket boundaries advisory for
    Histograms
  * semantic-conventions: Bump to 1.30.0

-------------------------------------------------------------------
Wed Jan  8 10:15:49 UTC 2025 - John Paul Adrian Glaubitz <adrian.glaubitz@suse.com>

- Update to 1.29.0
  * Fix crash exporting a log record with None body
  * Fix metrics export with exemplar and no context and filtering observable instruments
  * Fix recursion error with sdk disabled and handler added to root logger
  * sdk: setup EventLogger when OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED is set
  * api: fix logging of duplicate EventLogger setup warning
  * sdk: fix setting of process owner in ProcessResourceDetector
  * sdk: fix serialization of logs severity_number field to int
  * Remove `TestBase.assertEqualSpanInstrumentationInfo` method,
    use `assertEqualSpanInstrumentationScope` instead
  * sdk: instantiate lazily `ExemplarBucket`s in `ExemplarReservoir`s
  * semantic-conventions: Bump to 1.29.0
- from version 1.28.0
  * Removed superfluous py.typed markers and added them where they were missing
  * Include metric info in encoding exceptions
  * sdk: Add support for log formatting
  * sdk: Add Host resource detector
  * sdk: Implementation of exemplars
  * Implement events sdk
  * Update semantic conventions to version 1.28.0
  * Add support to protobuf 5+ and drop support to protobuf 3 and 4
  * Update environment variable descriptions to match signal
  * Record logger name as the instrumentation scope name
  * Fix memory leak in exporter and reader
  * Drop `OTEL_PYTHON_EXPERIMENTAL_DISABLE_PROMETHEUS_UNIT_NORMALIZATION` environment variable
  * Improve compatibility with other logging libraries that override
    `LogRecord.getMessage()` in order to customize message formatting

-------------------------------------------------------------------
Wed Sep  4 20:41:24 UTC 2024 - Guang Yee <gyee@suse.com>

- update to 1.27.0:
  * Implementation of Events API
  * Make log sdk add exception.message to logRecord for exceptions whose argument is an exception not a string message
  * Fix use of link.attributes.dropped, which may not exist
  * Running mypy on SDK resources
  * Added py.typed file to top-level module
  * Drop Final annotation from Enum in semantic conventions
  * Update log export example to not use root logger
  * Update semantic conventions to version 1.27.0
  * Add support to type bytes for OTLP AnyValue
  * Export ExponentialHistogram and ExponentialHistogramDataPoint
  * Implement Client Key and Certificate File Support for All OTLP Exporters
  * Remove _start_time_unix_nano attribute from _ViewInstrumentMatch in favor of using time_ns() at the moment when the aggregation object is created

-------------------------------------------------------------------
Mon Jun 17 11:39:29 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 1.25.0:
  * Fix class BoundedAttributes to have RLock rather than Lock
  * Remove thread lock by loading RuntimeContext explicitly.
  * Update proto version to v1.2.0
  * Add to_json method to ExponentialHistogram
  * Bump mypy to 1.9.0
  * Fix exponential histograms
  * Fix otlp exporter to export log_record.observed_timestamp
  * Add capture the fully qualified type name for raised
    exceptions in spans
  * Prometheus exporter sort label keys to prevent duplicate
    metrics when user input changes order
  * Rename test objects to avoid pytest warnings
  * Add span flags to OTLP spans and links
  * Record links with invalid SpanContext if either attributes or
    TraceState are not empty
  * Add OpenTelemetry trove classifiers to PyPI packages ([#3913]
  * Fix prometheus metric name and unit conversion (#3924)
  * Add parameters for Distros and configurators to configure
    autoinstrumentation in addition to existing environment
    variables.

-------------------------------------------------------------------
Fri May  3 13:37:48 UTC 2024 - Dirk Müller <dmueller@suse.com>

- use modern python on sle15

-------------------------------------------------------------------
Wed Apr  3 07:55:21 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 1.24.0:
  * Make create_gauge non-abstract method
  * Make `tracer.start_as_current_span()` decorator work with
    async functions
  * Fix python 3.12 deprecation warning
  * bump mypy to 0.982
  * Add support for OTEL_SDK_DISABLED environment variable
  * Fix ValueError message for PeriodicExportingMetricsReader
  * Use `BaseException` instead of `Exception` in
    `record_exception`
  * Make span.record_exception more robust
  * Fix license field in pyproject.toml files

-------------------------------------------------------------------
Sat Mar 23 22:25:05 UTC 2024 - Jaime Marquínez Ferrándiz <jaime.marquinez.ferrandiz@fastmail.net>

- Update version of dependencies

-------------------------------------------------------------------
Fri Mar 15 21:10:17 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 1.23.0:
  * Use Attribute rather than boundattribute in logrecord
  * Fix flush error when no LoggerProvider configured for
    LoggingHandler
  * Fix `OTLPMetricExporter` ignores `preferred_aggregation`
    property
  * Logs: set `observed_timestamp` field
  * Add missing Resource SchemaURL in OTLP exporters
  * Fix loglevel warning text
  * Prometheus Exporter string representation for target_info
    labels
  * Logs: ObservedTimestamp field is missing in console exporter
    output
  * Fix explicit bucket histogram aggregation
  * Add `code.lineno`, `code.function` and `code.filepath` to all
    logs
  * Add Synchronous Gauge instrument
  * Drop support for 3.7
  * Include key in attribute sequence warning
  * Upgrade markupsafe, Flask and related dependencies to dev and
    test environments
  * Handle HTTP 2XX responses as successful in OTLP exporters
  * Improve Resource Detector timeout messaging
  * Add Proxy classes for logging
  * Remove dependency on 'backoff' library

-------------------------------------------------------------------
Mon Jan 15 20:33:19 UTC 2024 - Dirk Müller <dmueller@suse.com>

- Initial package (1.22.0)
