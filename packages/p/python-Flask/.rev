<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>09a17e64302a622c6814020d48efc14b</srcmd5>
    <version>0.7.2</version>
    <time>1311249876</time>
    <user>darix</user>
    <comment>Replaces python-flask</comment>
    <requestid>76556</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>2b2d2dcc3e99a57535be89a90cdd390c</srcmd5>
    <version>0.7.2</version>
    <time>1311249890</time>
    <user>darix</user>
    <comment>Autobuild autoformatter for 76556
</comment>
  </revision>
  <revision rev="3" vrev="3">
    <srcmd5>67af658cc2e0a9fb8a40bbaf9b7f5777</srcmd5>
    <version>0.7.2</version>
    <time>1317024705</time>
    <user>saschpe</user>
    <comment>- Set license to BSD-3-Clause (SPDX style)
- Require python-distribute instead of python-setuptools
- Remove %clean section</comment>
    <requestid>84392</requestid>
  </revision>
  <revision rev="4" vrev="5">
    <srcmd5>67af658cc2e0a9fb8a40bbaf9b7f5777</srcmd5>
    <version>0.7.2</version>
    <time>1319182378</time>
    <user>adrianSuSE</user>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>af9503285d2c1973e9003eb5c78334e6</srcmd5>
    <version>0.8</version>
    <time>1321274128</time>
    <user>coolo</user>
    <comment>- Update to version 0.8:
  * Refactored session support into a session interface so that
    the implementation of the sessions can be changed without
    having to override the Flask class.
  * Empty session cookies are now deleted properly automatically.
  * View functions can now opt out of getting the automatic
    OPTIONS implementation.
  * HTTP exceptions and Bad Request errors can now be trapped so that they
    show up normally in the traceback.
  * Flask in debug mode is now detecting some common problems and tries to
    warn you about them.
  * Flask in debug mode will now complain with an assertion error if a view
    was attached after the first request was handled.  This gives earlier
    feedback when users forget to import view code ahead of time.
  * Added the ability to register callbacks that are only triggered once at
    the beginning of the first request. (:meth:`Flask.before_first_request`)
  * Malformed JSON data will now trigger a bad request HTTP exception instead
    of a value error which usually would result in a 500 internal server
    error if not handled.  This is a backwards incompatible change.
  * Applications now not only have a root path where the resources and modules
    are located but also an instane path which is the designated place to
    drop files that are modified at runtime (uploads etc.).  Also this is
    conceptionally only instance depending and outside version control so it's
    the perfect place to put configuration files etc.  For more information
    see :ref:`instance-folders`.
  * Added the ``APPLICATION_ROOT`` configuration variable.
  * Implemented :meth:`~flask.testing.TestClient.session_transaction` to
    easily modify sessions from the test environment.
  * Refactored test client internally.  The ``APPLICATION_ROOT`` configuration
    variable as well as ``SERVER_NAME`` are now properly used by the test client</comment>
    <requestid>90912</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>f2b0cffb0415c092eb9e4cee19115b98</srcmd5>
    <version>0.8</version>
    <time>1323194137</time>
    <user>coolo</user>
    <comment>replace license with spdx.org variant</comment>
  </revision>
  <revision rev="7" vrev="4">
    <srcmd5>f2b0cffb0415c092eb9e4cee19115b98</srcmd5>
    <version>0.8</version>
    <time>1340184029</time>
    <user>adrianSuSE</user>
    <comment>branched from openSUSE:Factory</comment>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>922b7f2c88cfdc7e1a6d16a65d5f813e</srcmd5>
    <version>0.9</version>
    <time>1353133652</time>
    <user>coolo</user>
    <comment>- Disable testsuite on SLE_11_SP2

- Update to version 0.9:
  + The :func:flask.Request.on_json_loading_failed now returns a JSON formatted
    response by default.
  + The :func:flask.url_for function now can generate anchors to the
    generated links.
  + The :func:flask.url_for function now can also explicitly generate
    URL rules specific to a given HTTP method.
  + Logger now only returns the debug log setting if it was not set
    explicitly.
  + Unregister a circular dependency between the WSGI environment and
    the request object when shutting down the request.  This means that
    environ werkzeug.request will be None after the response was
    returned to the WSGI server but has the advantage that the garbage
    collector is not needed on CPython to tear down the request unless
    the user created circular dependencies themselves.
  + Session is now stored after callbacks so that if the session payload
    is stored in the session you can still modify it in an after
    request callback.
  + The :class:flask.Flask class will avoid importing the provided import name
    if it can (the required first parameter), to benefit tools which build Flask
    instances programmatically.  The Flask class will fall back to using import
    on systems with custom module hooks, e.g. Google App Engine, or when the
    import name is inside a zip archive (usually a .egg) prior to Python 2.7.
  + Blueprints now have a decorator to add custom template filters application
    wide, :meth:flask.Blueprint.app_template_filter.
  + The Flask and Blueprint classes now have a non-decorator method for adding
    custom template filters application wide,
    :meth:flask.Flask.add_template_filter and</comment>
    <requestid>141541</requestid>
  </revision>
  <revision rev="9" vrev="3">
    <srcmd5>922b7f2c88cfdc7e1a6d16a65d5f813e</srcmd5>
    <version>0.9</version>
    <time>1359109975</time>
    <user>adrianSuSE</user>
    <comment>Split 12.3 from Factory</comment>
  </revision>
  <revision rev="10" vrev="5">
    <srcmd5>922b7f2c88cfdc7e1a6d16a65d5f813e</srcmd5>
    <version>0.9</version>
    <time>1379664102</time>
    <user>adrianSuSE</user>
    <comment>Split 13.1 from Factory</comment>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>13ca487c3f2483cd26727cdae33f5582</srcmd5>
    <version>0.10.1</version>
    <time>1380112621</time>
    <user>coolo</user>
    <comment>- add dependency on itsdangerous (forwarded request 197961 from dirkmueller)</comment>
    <requestid>197962</requestid>
  </revision>
  <revision rev="12" vrev="2">
    <srcmd5>3787b074c3e45fed1b97fcd97a097734</srcmd5>
    <version>0.10.1</version>
    <time>1382692564</time>
    <user>scarabeus_factory</user>
    <comment></comment>
    <requestid>204561</requestid>
  </revision>
  <revision rev="13" vrev="4">
    <srcmd5>3787b074c3e45fed1b97fcd97a097734</srcmd5>
    <version>0.10.1</version>
    <time>1409302788</time>
    <user>adrianSuSE</user>
    <comment>Split 13.2 from Factory</comment>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>ac7580c8efa1370ed767f38d1a855751</srcmd5>
    <version>0.11.1</version>
    <time>1474976674</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>429835</requestid>
  </revision>
  <revision rev="15" vrev="2">
    <srcmd5>c59692ddc46253c2e2546b6785f9e168</srcmd5>
    <version>0.11.1</version>
    <time>1480341974</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>441851</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>57015a0944809d1c02e4697c83a90800</srcmd5>
    <version>0.12.1</version>
    <time>1493368711</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>487844</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>a4001b4284e3323af740446e7c0fa07b</srcmd5>
    <version>0.12.2</version>
    <time>1502707021</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>515228</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>87b1f61fe7aa1500bd55a453d31d67a7</srcmd5>
    <version>1.0</version>
    <time>1525611327</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>602328</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>d1630eb441411377e80f34d7f9657491</srcmd5>
    <version>1.0.2</version>
    <time>1526030761</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>605120</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>e8930075a114c510ee9c43946b5778d9</srcmd5>
    <version>1.0.3</version>
    <time>1560861809</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.0.3:
  * :func:`send_file` encodes filenames as ASCII instead of Latin-1
    (ISO-8859-1). This fixes compatibility with Gunicorn, which is
    stricter about header encodings than PEP 3333. (`#2766`_)
  * Allow custom CLIs using ``FlaskGroup`` to set the debug flag without
    it always being overwritten based on environment variables.
    (`#2765`_)
  * ``flask --version`` outputs Werkzeug's version and simplifies the
    Python version. (`#2825`_)
  * :func:`send_file` handles an ``attachment_filename`` that is a
    native Python 2 string (bytes) with UTF-8 coded bytes. (`#2933`_)
  * A catch-all error handler registered for ``HTTPException`` will not
    handle ``RoutingExcpetion``, which is used internally during
    routing. This fixes the unexpected behavior that had been introduced
    in 1.0. (`#2986`_)
  * Passing the ``json`` argument to ``app.test_client`` does not
    push/pop an extra app context. (`#2900`_)</comment>
    <requestid>705805</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>0326b08367547ae6ee44345c1e6e8c06</srcmd5>
    <version>1.1.1</version>
    <time>1564484590</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.1.1:
  * The flask.json_available flag was added back for compatibility with some
    extensions. It will raise a deprecation warning when used, and will be
    removed in version 2.0.0. #3288

- specfile:
  * updated version of Werkzeug requirement to 0.15
  * AUTHORS file not in tar-ball
  * license file got renamed to LICENSE.rst
  * be more specific in %files section
- update to version 1.1.0:
  * Bump minimum Werkzeug version to &gt;= 0.15.
  * Drop support for Python 3.4.
  * Error handlers for &quot;InternalServerError&quot; or &quot;500&quot; will always be
      passed an instance of &quot;InternalServerError&quot;. If they are invoked
      due to an unhandled exception, that original exception is now
      available as &quot;e.original_exception&quot; rather than being passed
      directly to the handler. The same is true if the handler is for
      the base &quot;HTTPException&quot;. This makes error handler behavior more
      consistent. :pr:`3266`
    + :meth:`Flask.finalize_request` is called for all unhandled
        exceptions even if there is no &quot;500&quot; error handler.
  * :attr:`Flask.logger` takes the same name as :attr:`Flask.name`
      (the value passed as &quot;Flask(import_name)&quot;. This reverts 1.0's
      behavior of always logging to &quot;&quot;flask.app&quot;&quot;, in order to support
      multiple apps in the same process. A warning will be shown if
      old configuration is detected that needs to be
      moved. :issue:`2866`
  * :meth:`flask.RequestContext.copy` includes the current session
      object in the request context copy. This prevents &quot;session&quot;</comment>
    <requestid>717080</requestid>
  </revision>
  <revision rev="22" vrev="2">
    <srcmd5>e87c1afdf7ebf235eda1e9f14ba851b1</srcmd5>
    <version>1.1.1</version>
    <time>1573473630</time>
    <user>dimstar_suse</user>
    <comment>- Add python38-exception-test.patch to fix test failures under Python 3.8</comment>
    <requestid>746453</requestid>
  </revision>
  <revision rev="23" vrev="3">
    <srcmd5>a377141f1170e5e4b17d0e5702ffcf4f</srcmd5>
    <version>1.1.1</version>
    <time>1575727933</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>752962</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>4cb95b0aeb1a5e03c2f4bce873378646</srcmd5>
    <version>1.1.2</version>
    <time>1586466847</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>791758</requestid>
  </revision>
  <revision rev="25" vrev="2">
    <srcmd5>e2811f57e3a1f059c289258ad386b1b6</srcmd5>
    <version>1.1.2</version>
    <time>1591379956</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>809661</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>b82ad747abc875a9553d7829940ebbd2</srcmd5>
    <version>2.0.1</version>
    <time>1625950425</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>901115</requestid>
  </revision>
  <revision rev="27" vrev="1">
    <srcmd5>f334138b083f06f03ba936b42135276b</srcmd5>
    <version>2.0.2</version>
    <time>1635167817</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>924644</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>714eba8e6fcbffb57ae95cfb2ba078e2</srcmd5>
    <version>2.0.3</version>
    <time>1644965827</time>
    <user>dimstar_suse</user>
    <comment>- Update to 2.0.3
  * The test client's ``as_tuple`` parameter is deprecated and will be
    removed in Werkzeug 2.1. It is now also deprecated in Flask, to be
    removed in Flask 2.1, while remaining compatible with both in
    2.0.x. Use ``response.request.environ`` instead. PR#4341
  * Fix type annotation for ``errorhandler`` decorator. #4295
  * Revert a change to the CLI that caused it to hide ``ImportError``
    tracebacks when importing the application. #4307
  * ``app.json_encoder`` and ``json_decoder`` are only passed to
    ``dumps`` and ``loads`` if they have custom behavior. This improves
    performance, mainly on PyPy. #4349
  * Clearer error message when ``after_this_request`` is used outside a
    request context. #4333</comment>
    <requestid>954385</requestid>
  </revision>
  <revision rev="29" vrev="1">
    <srcmd5>ddd01ce7dc70053e6a083ff7816a6829</srcmd5>
    <version>2.1.1</version>
    <time>1650735918</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>970586</requestid>
  </revision>
  <revision rev="30" vrev="1">
    <srcmd5>e5f79aaa73eab051b429626712099ce8</srcmd5>
    <version>2.1.2</version>
    <time>1651424004</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>973776</requestid>
  </revision>
  <revision rev="31" vrev="1">
    <srcmd5>43665753ea6e5816e577c2a3ace5d20a</srcmd5>
    <version>2.1.3</version>
    <time>1658161971</time>
    <user>RBrownFactory</user>
    <comment>- Update to 2.1.3
  * Inline some optional imports that are only used for certain
    CLI commands. #4606
  * Relax type annotation for after_request functions. #4600
  * instance_path for namespace packages uses the path closest to
    the imported submodule. #4610
  * Clearer error message when render_template and render_template_string
    are used outside an application context. #4693
- Add python-Flask-rpmlintrc
</comment>
    <requestid>989104</requestid>
  </revision>
  <revision rev="32" vrev="1">
    <srcmd5>fc375010bf2ae206d4f436db0f4b4196</srcmd5>
    <version>2.2.2</version>
    <time>1669288918</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1034198</requestid>
  </revision>
  <revision rev="33" vrev="2">
    <srcmd5>80723806f38160a349637cf7ad47fd93</srcmd5>
    <version>2.2.2</version>
    <time>1682691732</time>
    <user>dimstar_suse</user>
    <comment>- add sle15_python_module_pythons (jsc#PED-68)</comment>
    <requestid>1083105</requestid>
  </revision>
  <revision rev="34" vrev="1">
    <srcmd5>6903a308b165adcff2f1bd36a871ffe2</srcmd5>
    <version>2.2.5</version>
    <time>1683801115</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.2.5 (bsc#1211246, CVE-2023-30861):
  * Set ``Vary: Cookie`` header when the session is accessed,
    modified, or refreshed.
  * Update for compatibility with Werkzeug 2.3.
  * Autoescape is enabled by default for ``.svg`` template
    files. :issue:`4831`
  * Fix the type of ``template_folder`` to accept
    ``pathlib.Path``. :issue:`4892`
  * Add ``--debug`` option to the ``flask run`` command.
    :issue:`4777`</comment>
    <requestid>1086038</requestid>
  </revision>
  <revision rev="35" vrev="1">
    <srcmd5>e90dc4bda26f04a9371ac871c3f41226</srcmd5>
    <version>2.3.2</version>
    <time>1692045297</time>
    <user>dimstar_suse</user>
    <comment>- Update to 2.3.2:
  * Set ``Vary: Cookie`` header when the session is accessed, modified, or
    refreshed.
  * Update Werkzeug requirement to &gt;=2.3.3 to apply recent bug fixes.
  * Restore deprecated ``from flask import Markup``.
  * Drop support for Python 3.7.
  * Update minimum requirements to the latest versions.
  * Remove previously deprecated code.
  * Importing ``escape`` and ``Markup`` from ``flask`` is deprecated.
  * The ``app.got_first_request`` property is deprecated.
  * The ``locked_cached_property`` decorator is deprecated.
  * Signals are always available. ``blinker&gt;=1.6.2`` is a required dependency.
  * Signals support ``async`` subscriber functions.
  * Remove uses of locks that could cause requests to block each other very
    briefly.
  * Use modern packaging metadata with ``pyproject.toml``.
  * Ensure subdomains are applied with nested blueprints.
  * If a blueprint is created with an empty name it raises a ``ValueError``.
  * ``SESSION_COOKIE_DOMAIN`` does not fall back to ``SERVER_NAME``.
  * The ``routes`` command shows each rule's ``subdomain`` or ``host``
    when domain matching is in use.
  * Use postponed evaluation of annotations.
- Switch to pyproject macros.
- Delete unneeded .gitignore files, update rpmlintrc</comment>
    <requestid>1101890</requestid>
  </revision>
  <revision rev="36" vrev="2">
    <srcmd5>5ff9be06dcda20f6606e7b4cc88edf37</srcmd5>
    <version>2.3.2</version>
    <time>1694019392</time>
    <user>anag+factory</user>
    <comment>- drops CVE-2023-30861-always-vary-cookie.patch in older dists</comment>
    <requestid>1109078</requestid>
  </revision>
  <revision rev="37" vrev="1">
    <srcmd5>0c00e7be5513885a1d29cff8bf3ff94f</srcmd5>
    <version>2.3.3</version>
    <time>1695758443</time>
    <user>anag+factory</user>
    <comment>- Update to 2.3.3:
  * Python 3.12 compatibility.
  * Require Werkzeug &gt;= 2.3.7.
  * Use ``flit_core`` instead of ``setuptools`` as build backend.
  * Refactor how an app's root and instance paths are determined.
- Fiddle with captialisation again, I look forward to this flipping back
  to Flask at some point.</comment>
    <requestid>1113337</requestid>
  </revision>
  <revision rev="38" vrev="1">
    <srcmd5>2eee6d6e01e2b0b27c2d944073bcdb54</srcmd5>
    <version>3.0.1</version>
    <time>1705874836</time>
    <user>anag+factory</user>
    <comment>- update to 3.0.1:
  * Correct type for path argument to send_file. :issue:`5230`
  * Fix a typo in an error message for the flask run --key
    option. :pr:`5344`
  * Session data is untagged without relying on the built-in
    json.loads object_hook. This allows other JSON providers that
    don't implement that. :issue:`5381`
  * Address more type findings when using mypy strict mode.
    :pr:`5383`
  * Remove previously deprecated code. :pr:`5223`
  * Deprecate the __version__ attribute. Use feature detection,
    or importlib.metadata.version(&quot;flask&quot;), instead.
    :issue:`5230`
  * Restructure the code such that the Flask (app) and Blueprint
    classes have Sans-IO bases. :pr:`5127`
  * Allow self as an argument to url_for. :pr:`5264`
  * Require Werkzeug &gt;= 3.0.0.

  * Add an --exclude-patterns option to the flask run CLI command to
  * Relax typing for errorhandler to allow the user to use more precise
  * From Werkzeug, for redirect responses the Location header URL will
  * Add Config.from_prefixed_env() to load config values from environment
    variables that start with FLASK_ or another prefix. This parses values as
  * Fixed the issue where typing requires template global decorators to
    - Set the default encoding to “UTF-8” when loading .env and .flaskenv
    - flask shell sets up tab and history completion like the default
- add dependency on itsdangerous</comment>
    <requestid>1140137</requestid>
  </revision>
  <revision rev="39" vrev="1">
    <srcmd5>cd4e45eb71a4e0da503381c7ed720655</srcmd5>
    <version>3.0.2</version>
    <time>1707233563</time>
    <user>anag+factory</user>
    <comment>- update to 3.0.2:
  * Correct type for jinja_loader property. :issue:`5388`
  * Fix error with --extra-files and --exclude-patterns CLI
    options. :issue:`5391`</comment>
    <requestid>1144168</requestid>
  </revision>
  <revision rev="40" vrev="2">
    <srcmd5>396c5d432cb07bb2ed4f0b3eeab0b5e8</srcmd5>
    <version>3.0.2</version>
    <time>1712764122</time>
    <user>anag+factory</user>
    <comment>- Remove not needed dependency python-contextvars</comment>
    <requestid>1166616</requestid>
  </revision>
  <revision rev="41" vrev="1">
    <srcmd5>f350339eb3efdb4665f2387f6c782776</srcmd5>
    <version>3.0.3</version>
    <time>1725017166</time>
    <user>dimstar_suse</user>
    <comment>Forwarded request #1194157 from yeey

- update to 3.0.3
    * The default hashlib.sha1 may not be available in FIPS builds.
      Don’t access it at import time so the developer has time to
      change the default. :issue:`5448`
    * Don’t initialize the cli attribute in the sansio scaffold,
      but rather in the Flask concrete class. :issue:`5270`</comment>
    <requestid>1197028</requestid>
  </revision>
  <revision rev="42" vrev="1">
    <srcmd5>115ee9ff3f47a62223a5fff39dfdd23c</srcmd5>
    <version>3.1.0</version>
    <time>1739127540</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.1.0:
  * Drop support for Python 3.8.
  * Update minimum dependency versions to latest feature releases.
    Werkzeug &gt;= 3.1, ItsDangerous &gt;= 2.2, Blinker &gt;= 1.9.
  * Provide a configuration option to control automatic option responses.
  * Flask.open_resource/open_instance_resource and Blueprint.open_resource
    take an encoding parameter to use when opening in text mode. It defaults
    to utf-8.
  * Request.max_content_length can be customized per-request instead of only
    through the MAX_CONTENT_LENGTH config.
  * Add support for the Partitioned cookie attribute (CHIPS), with the
    SESSION_COOKIE_PARTITIONED config.
  * -e path takes precedence over default .env and .flaskenv files.
    load_dotenv loads default files in addition to a path unless
    load_defaults=False is passed.
  * Support key rotation with the SECRET_KEY_FALLBACKS config, a list of old
    secret keys that can still be used for unsigning.
  * Fix how setting host_matching=True or subdomain_matching=False interacts
    with SERVER_NAME. Setting SERVER_NAME no longer restricts requests to
    only that domain.
  * Request.trusted_hosts is checked during routing, and can be set through
    the TRUSTED_HOSTS config.</comment>
    <requestid>1244038</requestid>
  </revision>
  <revision rev="43" vrev="1">
    <srcmd5>d70b714eb174313c801df9dcb2b4f32f</srcmd5>
    <version>3.1.1</version>
    <time>1748003230</time>
    <user>anag_factory</user>
    <comment>- Update to 3.1.1 (CVE-2025-47278, bsc#1243163):
  * Fix signing key selection order when key rotation is enabled via
    SECRET_KEY_FALLBACKS. GHSA-4grg-w6v8-c28g
  * Fix type hint for cli_runner.invoke. #5645
  * flask --help loads the app and plugins first to make sure all
    commands are shown. #5673
  * Mark sans-io base class as being able to handle views that return
    AsyncIterable. This is not accurate for Flask, but makes typing
    easier for Quart. #5659
- Update to 3.1.1 (CVE-2025-47278, bsc#1243163):
  * Fix signing key selection order when key rotation is enabled via
    SECRET_KEY_FALLBACKS. GHSA-4grg-w6v8-c28g
  * Fix type hint for cli_runner.invoke. #5645
  * flask --help loads the app and plugins first to make sure all
    commands are shown. #5673
  * Mark sans-io base class as being able to handle views that return
    AsyncIterable. This is not accurate for Flask, but makes typing
    easier for Quart. #5659</comment>
    <requestid>1277662</requestid>
  </revision>
</revisionlist>
