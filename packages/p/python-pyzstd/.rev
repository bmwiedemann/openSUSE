<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>6d98ea07cef9c30def043559ca1050f2</srcmd5>
    <version>0.15.3</version>
    <time>1671889886</time>
    <user>dimstar_suse</user>
    <comment>required by py7zr update</comment>
    <requestid>1044220</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>7290e51e1f7a5406e7a9df99f2091bef</srcmd5>
    <version>0.15.6</version>
    <time>1680884275</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1077874</requestid>
  </revision>
  <revision rev="3" vrev="2">
    <srcmd5>2eaa11964f90e8d0b432aa27089a9266</srcmd5>
    <version>0.15.6</version>
    <time>1687900685</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1095664</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>436ddb68c21251f3c7c2892cefe98979</srcmd5>
    <version>0.15.9</version>
    <time>1690215944</time>
    <user>anag+factory</user>
    <comment>Forwarded request #1099794 from ateixeira

- Update to 0.15.9
    - ZstdFile class related changes:
      * Add SeekableZstdFile class, it's a subclass of ZstdFile, supports
      Zstandard Seekable Format.
      * Add mode argument to ZstdFile.flush() method, now it can flush
      a zstd frame.
      * Add read_size and write_size arguments to ZstdFile.__init__()
      method, can work with Network File Systems better.
      * Optimize ZstdFile performance to C language level.
  - Changes from 0.15.7
    - ZstdDict class changes:
      * Fix these advanced compression parameters may be ignored when
      loading a dictionary: windowLog, hashLog, chainLog, searchLog,
      minMatch, targetLength, strategy, enableLongDistanceMatching,
      ldmHashLog, ldmMinMatch, ldmBucketSizeLog, ldmHashRateLog,
      and some non-public parameters.
      * When compressing, load undigested dictionary instead of digested
      dictionary by default. Loading again an undigested is slower, see
      differences.
      * Add .as_prefix attribute. Can use zstd as a patching engine.</comment>
    <requestid>1099841</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>de291985ff152a033ba48b0a62df37c0</srcmd5>
    <version>0.15.10</version>
    <time>1715249681</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1172892</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>c0de4a479425eaa3c326c819855c4e29</srcmd5>
    <version>0.16.2</version>
    <time>1730208938</time>
    <user>anag+factory</user>
    <comment>- update to 0.16.2:
  * Build wheels for Python 3.13
  * Deprecate support for Python version before 3.9 and stop
    building wheels for them
  * Compatibility with Python 3.13
  * Upgrade zstd source code from v1.5.5 to v1.5.6
  * Fix pyzstd_pep517 parameter name in
    `get_requires_for_build_wheel`
  * Deprecate support for Python version before 3.8 and stop
    building wheels for them
  * Minor fixes in type hints
  * Refactor README &amp; CHANGELOG files</comment>
    <requestid>1218886</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>229af62dcb399665dd95b3d99b975b25</srcmd5>
    <version>0.17.0</version>
    <time>1748003446</time>
    <user>anag_factory</user>
    <comment>Forwarded request #1278681 from glaubitz

- Update to 0.17.0
    * Upgrade zstd source code from v1.5.6 to v1.5.7
    * Raise an exception when attempting to decompress empty data
    * Add `ZstdFile.name` property
    * Deprecate `(de)compress_stream` functions
    * Use a leading `_` for private objects
    * Build wheels for Windows ARM64
    * Support for PyPy 3.11
  - Update BuildRequires and Requires from setup.py</comment>
    <requestid>1278842</requestid>
  </revision>
</revisionlist>
