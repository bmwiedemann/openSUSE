-------------------------------------------------------------------
Fri Sep 18 05:32:09 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to version 0.3.11:
  * PipeWire improvements
    + Properly cleanup the mixer structures when a port is removed,
      this should fix client crashes related to port config changes
      and other random crashes.
    + Optimize the preferred formats in the audio converter. Higher
      quality formats with higher performance are chosen first.
    + Make sure the time reported by pw_stream is always
      increasing, even when the driver and clock changes.
    + There is now also a system service and socket that can be
      used to enable PipeWire systemwide. This is however not
      recommended and disabled by default.
    + Fix channelmixer 5.1 to stereo mix matrix. It was not reading
      the conversion matrix correctly and cause channels to be
      dropped. The channelmixer will now also normalize the volume,
      like what pulseaudio does.
    + The channelmixer will now just copy channels when no layout
      has been given. It has also optimized paths for this. This
      makes it possible for apps to request > 8 channels from the
      alsa plugin (ardour).
    + Port, Node and Link will now also emit an error on the
      resources in addition to updating the error in the info. This
      would make it easier to track negotiation errors in the
      session manager later.
    + many small fixes and cleanups.
    + Fix compatibility:
      - DOSBox: fix crash because of double free in pw_stream
  * Session manager improvements
    + The session manager will now try to configure the client to
      the channel configuration of the sink/source. It will only
      do this for downmixing, never for upmixing and also never
      when the client has the dont-remix property set. It will
      also renegotiate the channel layout when moving a stream to
      a new sink/source.
    + Configuration state is now saved in XDG_CONFIG_HOME.
      Previously it was saved in $HOME/.pipewire-media-session/
      You can migrate the state by moving the files to
      $XDG_CONFIG_HOME/pipewire-media-session (or
      $HOME/.config/pipewire-media-session as a fallback when
      XDG_CONFIG_HOME is not set).
  * Device support
    + Bluetooth sources and sinks should work better now.
    + There is now also a new bluetooth backend using hsphfpd.
    + fix the ALSA UCM Off profile for alsa pcm devices
    + improve ALSA port and profile switching. The ACP device will
      now switch to the best port and profile when availability
      changes.
  * PulseAudio layer improvements
    + Implement some more callbacks. The pulse layer will now also
      notify applications of stream moved, started and latency
      changes.
    + Fix error code when an object was not found. We now return
      PA_ERR_NOENTITY instead of PA_ERR_INVALID.
    + Add some support for loading new null sinks. Applications
      such as pulseeffects use this. Note that pulseeffects does
      not yet work reliably but can start now.
    + Improve handling of profile and port updates, it should work
      much more reliable now. Apps should now also again receive
      volume updates from sinks/sources.
    + Fix compatibility:
  	- openal-soft 1.20
  	- pavucontrol (checks PA_ERR_NOENTITY)
  * JACK layer improvements
    + improve default source and sink handling. It was not updated
      correctly in all cases.
    + add samplerate and period to the pw-jack wrapper to easily
      configure the desired samplerate and perdiod for the app.
  * ALSA plugin improvements
    + Add a mixer entry in the alsa config file.
    + Implement support for planar types, rework the processing
      function to make it more robust.
    + refuse to load the alsa plugin when linked against 0.2. This
      catches some old apps linked against 0.2 that want to use the
      alsa plugin.
    + Fix compatibility:
      - linphone (ALSA SIGFPE when _status() is called
        before _prepare()).
- Add patch from upstream to fix audio stutters in discord and probably
  other applications when using alsa directly.
  * 0001-alsa-dont-change-the-resampler-delay-value.patch

-------------------------------------------------------------------
Thu Aug 27 06:00:06 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to version 0.3.10:
  * Many improvements to the pulse layer.
    + GStreamer pulsesink element now works.
    + Fixes some segfaults.
    + Enable rtkit for client threads.
    + fixes capture of monitor stream by name
    + implement some more extensions, this makes paman
      work and removes some warnings.
  * Many improvements to the GStreamer elements
    + negotiation rework, avoid calling GStreamer methods from
      the PipeWire callbacks because they might block and cause
      deadlocks.
    + Add support for non-string property values.
    + improve stability after buffer and format
      renegotiation.
    + Rework the device provider.
    + pipewiresink can now provide a stream that can
      be consumed by apps like cheese.
  * Many improvements to the JACK layer:
    + Rework the buffer_size callbacks. Make sure we call
      the callback from a 'safe' thread and that we don't
      call the process callback while the application is
      handling the callback. This improves stability in
      apps like Carla when PipeWire dynamically changes
      the buffer size.
    + Improve compatibility with apps that call
      get_buffer_frames() with a 0 size (calfjackrack)
    + JACK can now create nodes that can be set as a
      sink/source in PulseAudio/ALSA apps (you can make an
      effects rack and set that as default sink for
      apps).
  * Added a group id property for nodes. This makes it
    possible to schedule nodes with the same driver even
    when they are otherwise not linked together. To make
    this work well a new flag needed to be added to nodes
    to signal when they are ready for processing.
    Together with the GStreamer fixes, this makes things
    like:
     gst-launch-1.0 -v pipewiresrc path=51 stream-properties="props,node.group=1" !
           audio/x-raw ! pipewiresink stream-properties="props,node.group=1"
    work as expected with PipeWire managing the resampling
    to keep the clocks of the devices in sync.
    This can later also be used to force devices to be grouped
    together to create a JACK-like scheduling group.
  * Streams and filter now use PIPEWIRE_NODE and
    PIPEWIRE_LATENCY env variables as fallback.
  * ACP add per device port list. This makes UCM devices
    expose the right ports.
  * Fix some segfaults in ACP and UCM.
  * make pw-cat use the metadata to find default devices.
  * The media session can now save and load audio device
    Profiles and Routes (volumes), stream volumes and
    the default sink and sources.

-------------------------------------------------------------------
Thu Aug 13 11:28:16 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to version 0.3.9:
  * Fix bad audio in chrome
  * Remove some errors that are not real errors.
  * Fix 100% cpu when disconnecting devices.
  * Improve pulseaudio introspection of formats
  * Fix JACK metadata handling, carla can now monitor the
    port it creates and insert midi.
  * Add a new permission bit (M) that is needed to be able
    to configure metadata on an object. Improve security of
    metadata some more, only allow metadata on objects that
    are visible to the client setting the metadata.
  * Add support for videocrop in the GStreamer elements.
  * Improve handling of the runtime directory for the
    server sockets. Add some reasonable fallback when
    XDG_RUNTIME_DIR is not set, as suggested in the spec.
  * Improve ALSA device names from ACP.
  * Fix various crasher bugs. One in the pulse layer, one in
    the session manager.
  * Make alsa plugin respect the PIPEWIRE_REMOTE env variable.
  * Various compile fixes.

-------------------------------------------------------------------
Fri Jul 31 07:50:45 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to version 0.3.8:
  * Fix an embarrassing crasher in the JACK layer when metadata
    keys were removed.
  * Make it possible to add properties to jack clients with a
    PIPEWIRE_PROPS env variable. This can be used to make JACK
    nodes look like a device (like an effects rack).
  * Improvements in the session manager in how it links ports.
    Now it will try to link matching channels first and be more
    intelligent otherwise. The session manager will also configure
    the stream to the device port configuration when needed.
  * Add ofono backend for Bluetooth HeadSet support.
  * Improve default source and sink handling. They are now stored
    with their id, instead of name, in the metadata. This makes it
    work better with JACK because of JACK's limited name length.
  * Improve environment variables to make it possible to create
    and connect to servers other than "pipewire-0". Implement
    this in pulseaudio, JACK and alsa layers.
  * Add an alsa mixer plugin so that alsamixer works with PipeWire.
    It will configure the default source/sink volumes.
  * Fix capture devices. There was something wrong with how the
    resampler was used that caused corruption in the signal when
    the resampler was active.
  * We now ship alsa card paths, profile-sets configuration files
    and udev rules so that we don't have to rely on the pulseaudio
    ones.
  * Many build and stability fixes.

- Update to version 0.3.7:
  * Improved PulseAudio compatibility. The alsa card profile
    code was reused from PulseAudio. Devices now support
    all profiles, ports, jack detection, UCM and hardware
    mixers that PulseAudio implements. There should not
    be (almost) any difference between PipeWire and PulseAudio
    in how it presents and manages devices.
    Other missing API pieces such as the default sink/source
    and move_stream are implemented now.  At this point
    it should be possible to replace PulseAudio with the
    compatibility layer for those who want to try.
  * Many fixes and improvements to the GStreamer elements.
    pipewiresrc now has the ability to periodically resend
    the last frame. This makes it possible for use-cases like
    screensharing to only update the screen on changes while
    still keeping the client side encoder busy. PipeWire
    elements can now also share a connection between them.
  * Improvements to the bluetooth nodes. Dynamically adding
    and removing devices should work much smoother now. Many
    fixes and improvements to a2dp and sco nodes.
  * Reduced memory usage by using less pre-allocated memory
    where possible. JACK clients are especially using less
    memory.
  * Support for passive links is added again. These are links
    that don't cause the associated driver to become active.
    This makes it possible to have blocks of effects+sinks go
    to suspend as a group when not in use.
  * Both consumers and producers can now ask to renegotiate
    the format. This required some cleanups and improvements
    to how links and node states were handled. More work is
    needed to implement more use cases.
  * Important fixes to how memory is shared with clients. Memory
    was not correctly freed in all cases, which would result
    in reuse of the wrong memory.
  * Support for planar formats for audio and video was added.
  * Improved error handling in the session manager.
  * Metadata is now used to manage default audio source and
    sink devices. The session manager will try to link streams
    to the default device. Changing the default device will
    move streams to the new device. PulseAudio and JACK layers
    respect the default source/sinks.
  * Metadata is used to tag the desired output device for
    a stream and the session manager will move streams when
    the metadata changes. The PulseAudio layer uses this to
    implement the move_stream feature.
  * Many fixes to the security modules. The session manager now
    has a flatpak module that grants permissions to flatpak
    apps. The PulseAudio layer now respects the permissions of
    objects. Security related properties are made read-only
    now. Different access modules can now coexist.
  * The portal module has been split up in 2 parts:
    + a part living in the daemon that monitors the portal
      dbus owner and tags all clients from this PID. This
      part has to run in the daemon in order to securely
      tag the clients.
    + a part in the session manager that uses the permission
      store to manage the permissions of portal managed
      clients.

- Drop patches already included in 0.3.7:
  * 0001-client-node-fix-buffer-size-calculation.patch
  * 0002-gst-fix-proxy-leaks.patch
  * 0003-pulse-fix-pa_card_info-profiles2-array-to-be-NULL-terminated.patch
  * 0004-pulse-fix-size-calculation.patch
  * 0005-jack-fix-crash-on-close-when-metadata-are-not-available.patch
  * 0006-a2dpsink-only-request-new-data-when-buffer-is-done.patch
  * 0007-pulse-fix-counter-while-populating-car_info-profiles.patch
  * 0008-impl-link-reset-state-before-starting-allocation.patch
  * 0009-impl-core-clear-the-mempool.patch
  * 0010-mem-reset-the-map-in-clear.patch
  * 0011-avoid-uninitialized-variables.patch
  * 0012-dlclose-on-errors.patch
  * 0013-stream-handle-NULL-context.patch
  * 0014-state-always-update-state-variables.patch
  * 0015-spa-device-fix-leak-of-properties-in-error-case.patch
  * 0016-alsa-dont-leak-structure-on-error.patch
  * 0017-alsa-dont-leak-properties-on-error.patch
  * 0018-stream-fix-some-more-leaks-in-error-paths.patch
  * 0019-buffers-increase-max-datas-and-metadata-in-buffers.patch
  * 0020-gst-return-NULL-for-unknown-format.patch
- Drop patch and replace it with a sed substitution since the patch
  context includes the package version and would have to be
  modified in every package update:
  * fix-meson-required-version.patch
- Add patch to not install alsa card paths, profile-sets
  configuration files and udev rules which upstream installs
  "so that we don't have to rely on the pulseaudio ones".
  * do-not-install-alsa-config-files.patch

-------------------------------------------------------------------
Wed Jul 15 07:26:01 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Recommend pipewire from libpipewire, so if the library is
  installed the daemon gets pulled in since we want a daemon
  to connect to.
- Require pipewire-spa-plugins from pipewire instead of
  recommending it since the support plugin is actually required
  for most uses (like screen sharing in wayland, which we want to
  support out-of-the-box).
- Enable the pipewire.socket systemd user service in %post
  (using pulseaudio's %post section as an example of how to do it
  since systemd-presets-common-SUSE currently lacks support for
  user services). Also disable it in %preun and %postun.

-------------------------------------------------------------------
Tue Jul 14 08:25:49 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Add patches from upstream to fix many issues mainly related to
  memory leaks, crashes and wrong behaviour:
  * 0001-client-node-fix-buffer-size-calculation.patch
  * 0002-gst-fix-proxy-leaks.patch
  * 0003-pulse-fix-pa_card_info-profiles2-array-to-be-NULL-terminated.patch
  * 0004-pulse-fix-size-calculation.patch
  * 0005-jack-fix-crash-on-close-when-metadata-are-not-available.patch
  * 0006-a2dpsink-only-request-new-data-when-buffer-is-done.patch
  * 0007-pulse-fix-counter-while-populating-car_info-profiles.patch
  * 0008-impl-link-reset-state-before-starting-allocation.patch
  * 0009-impl-core-clear-the-mempool.patch
  * 0010-mem-reset-the-map-in-clear.patch
  * 0011-avoid-uninitialized-variables.patch
  * 0012-dlclose-on-errors.patch
  * 0013-stream-handle-NULL-context.patch
  * 0014-state-always-update-state-variables.patch
  * 0015-spa-device-fix-leak-of-properties-in-error-case.patch
  * 0016-alsa-dont-leak-structure-on-error.patch
  * 0017-alsa-dont-leak-properties-on-error.patch
  * 0018-stream-fix-some-more-leaks-in-error-paths.patch
  * 0019-buffers-increase-max-datas-and-metadata-in-buffers.patch
  * 0020-gst-return-NULL-for-unknown-format.patch

-------------------------------------------------------------------
Fri Jul  3 08:29:04 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Rebase patches used in SLE/Leap:
  * do-not-use-snd_pcm_ioplug_hw_avail.patch
  * fix-memfd_create-call.patch

-------------------------------------------------------------------
Tue Jun 16 09:04:18 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to version 0.3.6 (boo#1171433, jsc#ECO-2308):
  * Extensive memory leak fixing and stress testing was done.
    A big leak in screen sharing with DMA-BUF was fixed.
  * Compile fixes
  * Stability improvements in jack and pulseaudio layers.
  * Added the old portal module to make the Camera portal
    work again. This will be moved to the session manager in
    future versions.
  * Improvements to the GStreamer source and sink shutdown.
  * Fix compatibility with v2 clients again when negotiating
    buffers.
- Disable vulkan if the vulkan package is too old (as in
  SLE 15 SP0 and SP1)
- Add patch to build with meson >= 0.46.0 since 0.50.0 is not
  really needed:
  * fix-meson-required-version.patch

-------------------------------------------------------------------
Thu May 21 08:50:18 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Filter out libpulse.so.0 and libjack.so.0 automatic provides so
  this is not considered an alternative when resolving dependencies
  in the distribution.

-------------------------------------------------------------------
Thu May 21 07:51:29 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Add patch to fix build in SLE/Leap where alsa doesn't have a
  snd_pcm_ioplug_hw_avail function:
  * do-not-use-snd_pcm_ioplug_hw_avail.patch

-------------------------------------------------------------------
Tue May 19 07:54:52 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to version 0.3.5:
  * Compiler fixes
  * Add pw-midiplay and pw-midirecord aliases
  * Add pw-mididump tool
  * Add pw-metadata tool to inspect, add and remove metadata
    for objects.
  * Docs updates, man pages
  * install alsa config files
  * Fix linked sink/source in pulseaudio
  * ratelimit graph processing warnings
  * improve buffer handling in GStreamer elements
  * Fix power usage by removing the queue for the alsa
    sequencer system announce messages.
  * Fix metadata clear() method dispatch.
  * Improve parameter enumeration, make it possible to detect
    missing parameters vs no-compatible parameters so that we
    can use defaults in the first case and error in the second
    case.
  * Fix cleanup of proxy objects. Stability improvements on
    plug/unplug in session manager.
  * Make it possible to set log level from config file
  * improve debug of param negotiation errors. Log the
    parameters to stderr/journal.
  * Make it possible to configure global logger
    implementation.
  * Fix NEON detection
  * JACK and PulseAudio compatibility improvements

- Update to version 0.3.4:
  * A quick update with some important stability fixes.

- Update to version 0.3.3:
  * NEON optimizations for audio conversion (32 and 64 bits)
  * rework of session manager implementation
  * Add option to disable modules in the session manager
  * Release midi hardware devices when suspended
  * various build fixes
  * Clean up options of various utils
  * Stability improvements
  * Mayor improvements in pulseaudio emulation. Improved
    timings and compatibility.
  * Implementation of drain and flush in pulse and alsa
    emulation.
  * Implement poll on file descriptors.
  * Improvement of metadata for jack emulation.
  * Fix memory and thread problems in jack emulation.
  * Simplification of state changes. Should make more use
    cases work in the jack emulation.
  * Improvements in the gstreamer elements. Removal of
    extra internal queue. pipewiresink can now be used to
    play audio.
  * Add pw-jack and pw-pulse scripts to run pulseaudio and
    jack applications with the right library path.

- Replace libpulse* replacement packages with a single
  pipewire-libpulse-0_3 package that includes all libraries
  installed in the non-standard directory
  %{_libdir}/pipewire-0.3/pulse and a new pw-pulse wrapper script.
  Likewise for the jack replacement libraries in a new
  pipewire-libjack-0_3 package.

- Use update-alternatives for the wrapper scripts.

-------------------------------------------------------------------
Wed Apr  1 07:35:48 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Use the License rpm tag to specify that although most of
  pipewire is licensed under MIT,  the pulseaudio replacement
  library is licensed under LGPL-2.1+.

-------------------------------------------------------------------
Tue Mar 31 15:11:45 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Use gcc9 to build in SLE-15 / Leap 15, since at least gcc8 is
  needed now.

-------------------------------------------------------------------
Tue Mar 31 10:48:28 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to version 0.3.2:
  + build fixes
  + Added support for data type negotiation. This makes it
    possible for a client to say that it can handle DMABuf
    and MemFd and then let the server select a compatible
    format.
  + Handle errors when enumerating parameters better.
  + Add support for rate, format, channels and period_bytes
    to the alsa config file to restrict what alsa apps can
    negotiate.
  + Fix JACK midi output.
  + Optimizations in common audio format conversions using
    AVX2. Small optimizations to plugins.
  + Change the vulkan compute example to an MIT licensed
    shader.
  + Remove some hardcoded defaults in the audio and video
    processing and use the values from the processing
    context. This also fixes the vulkan example.
  + Correct the documentation and defaults in the daemon
    config file.
  + Fix alsa and v4l2 buffer recycle. A paused client could
    cause the server to leak all buffers.
  + Remove some warnings that should be ignored.
  + Fix a crash in the bluez5 plugins.
  + Try to select higher quality formats first when
    negotiating a format with an audio device.
  + Fix an infinite loop in udev detection in some cases.
  + Add non-interactive mode to pw-cli. You can now just
    do "pw-cli ls Port" to get a listing of all ports.
    pw-cli will now also connect to the default server by
    default and has options to select a different server.
  + Allow the server to go up to the maximum quantum (8192
    samples or ~=180ms) if a client explicitly wants this.


-------------------------------------------------------------------
Mon Mar 23 13:56:45 UTC 2020 - Bjørn Lie <bjorn.lie@gmail.com>

- Update to version 0.3.1+48:
  + Fix 32bit build.

-------------------------------------------------------------------
Wed Mar 18 16:33:21 UTC 2020 - Bjørn Lie <bjorn.lie@gmail.com>

- Switch to source service, update to explicit head, file with
  non-compliant license replaced.

-------------------------------------------------------------------
Tue Mar 17 10:58:42 UTC 2020 - Bjørn Lie <bjorn.lie@gmail.com>

- Switch license to MIT and actually package it.
- Add doxygen, graphviz and xmltoman BuildRequires and pass docs
  and man = true to meson, build documentation. Package docs in a
  new docs sub-package.
- Add check section and run meson_test macro, run tests during
  build.
- Add fdupes BuildRequires and pass fdupes macro, remove duplicate
  files.

-------------------------------------------------------------------
Mon Mar  9 16:11:08 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to version 0.3.1:
  + This is a bugfix release that is API and ABI compatible
    with previous 0.3.x releases.
  + Don't load the rtkit module by default. It can cause a
    sigkill, which is not desirable for mutter, for example.
    Only enable this for the jack library for now.
  + Don't use pthread cancel by default because it uses a
    signal that might crash some apps. Only use it for
    the jack library because jack clients really expect this.
  + Build fixes for -Werror=suggest-attribute=format
  + improve error messages, don't report harmless errors and
    warnings. Try to send error messages to the proxy that
    started the operation or is the owner of the object.
  + pw-cat: midi improvement, add midi recording and dump
    in verbose mode
  + fix properties when loading spa-nodes from the config
  + Fix and update some examples
  + jack: check arguments and don't crash when invalid
  + Fix buffer memory upload.
  + jack: fix compatibility with zrythm. Fix timemaster
    install, improve sample_rate callback. Fix reposition
    handling.
  + fix crash in port after buffer negotiation error.
  + add support for control ports in pw_filter
  + fix cleanup of the metadata module
  + improve param enumeration.
  + Clear stream buffers when the format is cleared.
  + Add create-object command in the config file to create
    object from a factory.
  + Fix crash after the driver was not removed from unassigned
    nodes. Also properly pause inactive nodes.
  + Use "true" and "false" in properties when we are talking
    about a boolean.
  + pulseaudio: improve compatibility

-------------------------------------------------------------------
Fri Feb 21 15:13:15 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Add patch to build correctly with glibc < 2.27 (like in SLE/Leap):
  * fix-memfd_create-call.patch

-------------------------------------------------------------------
Fri Feb 21 12:32:01 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Add BuildRequires for pkgconfig(sndfile) and pkgconfig(vulkan)
  so the vulkan plugin is built.
- Version the spa-plugins subpackage so different versions of
  the plugins can be co-installed in the future.

-------------------------------------------------------------------
Thu Feb 20 18:54:53 UTC 2020 - Bjørn Lie <bjorn.lie@gmail.com>

- Update to version 0.3.0:
  + The 0.3 release is a major milestone in the developement of
    PipeWire. It features a complete redesign of the scheduling
    mechanisms that make it possible to run a JACK compatibility
    layer with comparable performance to JACK2.
  + The API has been reworked and is declared stable now. All
    developement files and runtime paths are versioned so that
    future incompatible changes can be done without breaking
    exising applications.
  + PipeWire 0.3 also includes a (now mandatory) session manager
    that populates and controls the PipeWire graph. This example
    session manager is very simple and not configurable. It is
    expected that future version will either switch to a more
    flexible session manager (like WirePlumber) or improve the
    configuration options of the example session manager.
  + PipeWire 0.3 includes both PulseAudio, JACK and ALSA
    compatibility libraries that are known to support a wide range
    of applications. The ALSA library is pretty complete at this
    point. The JACK and mostly the PulseAudio compatibility
    libraries need more work. See the Wiki pages for the current
    compatibility problems. We do not yet encourage people to
    switch away from their existing audio solutions (PulseAudio
    or JACK) but we would love to hear from people who try it
    anyways. Future versions will mostly focus on improving
    compatibility further to make PipeWire a drop-in replacement.
    PipeWire comes with some GStreamer plugins to consume and
    produce data for PipeWire. The consumer (pipewiresrc) is
    working well in most cases. The sink (pipewiresink) is known
    to be somewhat problematic for now.
- Add pkgconfig(bluez) and pkgconfig(libpulse) BuildRequires: New
  dependencies.
- Bump libpipewire, apiver and spa_ver define following upstreams
  changes. Also add a new sover define.
- Package new subpackages: libjack-pw0_3_0,
  libpulse-mainloop-glib-pw0_3_0, libpulse-pw0_3_0 and
  libpulse-simple-pw0_3_0, as well as handle them in post(un).
- Adjust options passed to meson following upstreams changes.

-------------------------------------------------------------------
Wed Nov  6 12:29:43 UTC 2019 - Fabian Vogt <fvogt@suse.com>

- Update to version 0.2.7:
  + Add support for alsa-lib 1.1.9 which changed the include path
  + Improve error checking and reporting in the protocol
  + deviceprovider: fix probing without starting
  + add sentinel to some functions
  + compiler fixes for musl
  + Revert object tree permission checks that broke things, this is
    probably not a good idea (and the tree of objects is going to
    be removed later)

-------------------------------------------------------------------
Wed May 22 16:33:08 UTC 2019 - Markus S <kamikazow@opensuse.org>

- Update to version 0.2.6:
  + Improve error checking for threads.
  + Fix some memory and fd leaks.
  + Fix compilation with C++ compilers and clang.
  + DISABLE_RTKIT should now not try to use dbus at all.
  + Camera Portal fixes:
    - add Camera media.role.
    - Rename module-flatpak to module-portal.
    - Use the portal permissions store for camera checks.
  + Actually use the passed fd in pipewiresrc.
  + Make properties with "pipewire." prefix read-only.
  + Add security label to client object.
  + Enforce link permissions.
  + Permissions of objects are now combined with parent
    permissions.
  + Remove libv4l2 dependency, it is not used.
  + Improve format negotiation in autolink #146.
  + Try to avoid list corruption with event emmission #143.
  + Fix destroy of client-node memory corruption.
  + Various small improvements.
- Remove pkgconfig(libv4l2) BuildRequires: follow upstreams cleanup
  of build dependencies.
- Drop avoid-invalid-conversion-error-with-C++.patch: fixed
  upstream.

-------------------------------------------------------------------
Fri Apr 19 14:27:04 UTC 2019 - Fabian Vogt <fabian@ritter-vogt.de>

- Add patch to fix use of headers from C++:
  * avoid-invalid-conversion-error-with-C++.patch

-------------------------------------------------------------------
Thu Feb 21 13:06:16 UTC 2019 - bjorn.lie@gmail.com

- Update to version 0.2.5:
  + Build fixes for systemd.
  + Add cursor and bitmap metadata. This can be used to send a
    cursor sprite with the video stream.
  + Permissions were set too strict for non-flatpak clients.
  + Fix crash in loop caused by thread unsafe hook emission.
  + Add more error checking for thread-loop.
  + Small cleanups and bugfixes.
- Drop libspa define and add spa_ver define, and following this
  drop libspa-lib1 subpackage, no longer built.
- Drop doxygen BuildRequires and manpages source, follow upstream
  in not building docs nor manually installing manpages that have
  to be updated every version bump to ensure they are current.
- Add pkgconfig(libsystemd) BuildRequires: New dependency.
- Update options passed to meson following upstream changes.

-------------------------------------------------------------------
Mon Aug 13 18:55:29 UTC 2018 - bjorn.lie@gmail.com

- Update to version 0.2.2:
  + Add apiversion to pkgconfig as well.
- Add apiver define and set it to 0.2.
- Bump libpipewire define to libpipewire-0_2-1 and libspa define to
  libspa-lib1 following upstream changes.

-------------------------------------------------------------------
Mon Jul 23 19:38:08 UTC 2018 - bjorn.lie@gmail.com

- Update to version 0.2.1:
  + stream: update to latest API.
  + hook: add private data for future expansion.

-------------------------------------------------------------------
Tue Jul 17 15:31:07 UTC 2018 - alarrosa@suse.com

- Update to version 0.2.0
  * No changelog provided by upstream. To see the changes in this
    version, please browse the commit logs at
    https://github.com/PipeWire/pipewire/commits/0.2.0 .

-------------------------------------------------------------------
Tue Mar 13 04:27:43 UTC 2018 - luc14n0@linuxmail.org

- Initial package, version 0.1.9.

