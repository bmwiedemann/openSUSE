From c6a974211f1a13d492bb807ff6d07cefcc948a87 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Micha=C5=82=20G=C3=B3rny?= <mgorny@gentoo.org>
Date: Fri, 12 Jul 2024 08:15:40 +0200
Subject: [PATCH] update test expectations for Python 3.13

Python 3.13 no longer repeats the placeholder for options with multiple
aliases in the help message.  For example, rather than:

    -c CONFIG_FILE, --config CONFIG_FILE

it now outputs:

    -c, --config CONFIG_FILE

Update the regular expressions to account for both possibilities.

Fixes #294
---
 tests/test_configargparse.py | 24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/tests/test_configargparse.py b/tests/test_configargparse.py
index 288e082..e325afd 100644
--- a/tests/test_configargparse.py
+++ b/tests/test_configargparse.py
@@ -271,9 +271,9 @@ def testBasicCase2(self, use_groups=False):
                 '  -h, --help \\s+ show this help message and exit\n'
                 '  --genome GENOME \\s+ Path to genome file\n'
                 '  -v\n'
-                '  -g MY_CFG_FILE, --my-cfg-file MY_CFG_FILE\n'
-                '  -d DBSNP, --dbsnp DBSNP\\s+\\[env var: DBSNP_PATH\\]\n'
-                '  -f FRMT, --format FRMT\\s+\\[env var: OUTPUT_FORMAT\\]\n\n'%OPTIONAL_ARGS_STRING +
+                '  -g( MY_CFG_FILE)?, --my-cfg-file MY_CFG_FILE\n'
+                '  -d( DBSNP)?, --dbsnp DBSNP\\s+\\[env var: DBSNP_PATH\\]\n'
+                '  -f( FRMT)?, --format FRMT\\s+\\[env var: OUTPUT_FORMAT\\]\n\n'%OPTIONAL_ARGS_STRING +
                 7*r'(.+\s*)')
         else:
             self.assertRegex(self.format_help(),
@@ -286,10 +286,10 @@ def testBasicCase2(self, use_groups=False):
                 'g1:\n'
                 '  --genome GENOME \\s+ Path to genome file\n'
                 '  -v\n'
-                '  -g MY_CFG_FILE, --my-cfg-file MY_CFG_FILE\n\n'
+                '  -g( MY_CFG_FILE)?, --my-cfg-file MY_CFG_FILE\n\n'
                 'g2:\n'
-                '  -d DBSNP, --dbsnp DBSNP\\s+\\[env var: DBSNP_PATH\\]\n'
-                '  -f FRMT, --format FRMT\\s+\\[env var: OUTPUT_FORMAT\\]\n\n'%OPTIONAL_ARGS_STRING +
+                '  -d( DBSNP)?, --dbsnp DBSNP\\s+\\[env var: DBSNP_PATH\\]\n'
+                '  -f( FRMT)?, --format FRMT\\s+\\[env var: OUTPUT_FORMAT\\]\n\n'%OPTIONAL_ARGS_STRING +
                 7*r'(.+\s*)')
 
         self.assertParseArgsRaises("invalid choice: 'ZZZ'",
@@ -387,9 +387,9 @@ def testMutuallyExclusiveArgs(self):
             ' \\s*-f2 TYPE2_CFG_FILE\\)\\s+\\(-f FRMT \\| -b\\)\n\n'
             '%s:\n'
             '  -h, --help            show this help message and exit\n'
-            '  -f1 TYPE1_CFG_FILE, --type1-cfg-file TYPE1_CFG_FILE\n'
-            '  -f2 TYPE2_CFG_FILE, --type2-cfg-file TYPE2_CFG_FILE\n'
-            '  -f FRMT, --format FRMT\\s+\\[env var: OUTPUT_FORMAT\\]\n'
+            '  -f1( TYPE1_CFG_FILE)?, --type1-cfg-file TYPE1_CFG_FILE\n'
+            '  -f2( TYPE2_CFG_FILE)?, --type2-cfg-file TYPE2_CFG_FILE\n'
+            '  -f( FRMT)?, --format FRMT\\s+\\[env var: OUTPUT_FORMAT\\]\n'
             '  -b, --bam\\s+\\[env var: BAM_FORMAT\\]\n\n'
             'group1:\n'
             '  --genome GENOME       Path to genome file\n'
@@ -875,7 +875,7 @@ def testConstructor_ConfigFileArgs(self):
             'usage: .* \\[-h\\] -c CONFIG_FILE --genome GENOME\n\n'
             '%s:\n'
             '  -h, --help\\s+ show this help message and exit\n'
-            '  -c CONFIG_FILE, --config CONFIG_FILE\\s+ my config file\n'
+            '  -c( CONFIG_FILE)?, --config CONFIG_FILE\\s+ my config file\n'
             '  --genome GENOME\\s+ Path to genome file\n\n'%OPTIONAL_ARGS_STRING +
             5*r'(.+\s*)')
 
@@ -935,8 +935,8 @@ def test_FormatHelp(self):
             r'\[-w CONFIG_OUTPUT_PATH\]\s* --arg1\s+ARG1\s*\[--flag\]\s*'
             '%s:\\s*'
             '-h, --help \\s* show this help message and exit '
-            r'-c CONFIG_FILE, --config CONFIG_FILE\s+my config file '
-            r'-w CONFIG_OUTPUT_PATH, --write-config CONFIG_OUTPUT_PATH takes '
+            r'-c( CONFIG_FILE)?, --config CONFIG_FILE\s+my config file '
+            r'-w( CONFIG_OUTPUT_PATH)?, --write-config CONFIG_OUTPUT_PATH takes '
             r'the current command line args and writes them '
             r'out to a config file at the given path, then exits '
             r'--arg1 ARG1 Arg1 help text '
