<?xml version="1.0" encoding="UTF-8"?>

<project name="plexus-build-api" default="package" basedir=".">

  <!-- ====================================================================== -->
  <!-- Build environment properties                                           -->
  <!-- ====================================================================== -->

  <property file="build.properties"/>

  <property name="project.artifactId" value="plexus-build-api"/>
  <property name="project.groupId" value="org.sonatype.plexus"/>
  <property name="project.version" value="0.0.7"/>
  <property name="project.url" value="http://forge.sonatype.com/spice-parent/plexus-build-api/"/>
  <property name="project.organization.name" value="Sonatype, Inc."/>

  <property name="spec.version" value="0.0"/>

  <property name="compiler.source" value="1.6"/>
  <property name="compiler.target" value="${compiler.source}"/>

  <property name="build.finalName" value="${project.artifactId}-${project.version}"/>
  <property name="build.dir" value="target"/>
  <property name="build.outputDir" value="${build.dir}/classes"/>
  <property name="build.srcDir" value="src/main/java"/>
  <property name="build.resourceDir" value="src/main/resources"/>
  <property name="reporting.outputDirectory" value="${build.dir}/site"/>

  <!-- ====================================================================== -->
  <!-- Defining classpaths                                                    -->
  <!-- ====================================================================== -->

  <path id="build.classpath">
    <fileset dir="lib">
      <!-- plexus-utils-1.5.8 plexus-container-default-1.0-alpha-9
           classworlds-1.1-alpha-2 -->
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <!-- ====================================================================== -->
  <!-- Cleaning up target                                                     -->
  <!-- ====================================================================== -->

  <target name="clean" description="Clean the output directory">
    <delete dir="${build.dir}"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Compilation target                                                     -->
  <!-- ====================================================================== -->

  <target name="compile" description="Compile the code">
    <mkdir dir="${build.outputDir}"/>
    <javac destdir="${build.outputDir}"
           nowarn="false"
           debug="true"
           optimize="false"
           deprecation="true"
           target="${compiler.target}"
           verbose="false"
           fork="false"
           source="${compiler.source}">
      <src>
        <pathelement location="${build.srcDir}"/>
      </src>
      <classpath refid="build.classpath"/>
    </javac>
    <copy todir="${build.outputDir}">
      <fileset dir="${build.resourceDir}"/>
    </copy>
  </target>

  <!-- ====================================================================== -->
  <!-- Target to generate Plexus component.xml                                -->
  <!-- ====================================================================== -->

  <target name="generate-metadata"
          depends="compile"
          description="Generate Plexus component.xml">
    <mkdir dir="${build.outputDir}/META-INF/plexus"/>
    <exec executable="plexus-metadata-generator" failonerror="true">
      <env key="CLASSPATH" value="${build.outputDir}"/>
      <arg value="-s"/>
      <arg value="${build.srcDir}"/>
      <arg value="-c"/>
      <arg value="${build.outputDir}"/>
      <arg value="-m"/>
      <arg value="${build.outputDir}/META-INF/plexus"/>
      <arg value="-o"/>
      <arg value="${build.outputDir}/META-INF/plexus/components.xml"/>
    </exec>
  </target>

  <!-- ====================================================================== -->
  <!-- Javadoc target                                                         -->
  <!-- ====================================================================== -->

  <target name="javadoc" description="Generates the Javadoc of the application">
    <javadoc sourcepath="${build.srcDir}"
             packagenames="*"
             destdir="${reporting.outputDirectory}/apidocs"
             access="protected"
             source="${compiler.source}"
             verbose="false"
             version="true"
             use="true"
             author="true"
             splitindex="false"
             nodeprecated="false"
             nodeprecatedlist="false"
             notree="false"
             noindex="false"
             nohelp="false"
             nonavbar="false"
             serialwarn="false"
             charset="ISO-8859-1"
             linksource="false"
             breakiterator="false">
      <classpath refid="build.classpath"/>
    </javadoc>
  </target>

  <!-- ====================================================================== -->
  <!-- Package target                                                         -->
  <!-- ====================================================================== -->

  <target name="package" depends="generate-metadata" description="Package the application">
    <jar jarfile="${build.dir}/${build.finalName}.jar"
         compress="true"
         index="false"
         basedir="${build.outputDir}"
         excludes="**/package.html">
      <manifest>
        <attribute name="Implementation-Title" value="${project.artifactId}"/>
        <attribute name="Implementation-URL" value="${project.url}"/>
        <attribute name="Implementation-Vendor" value="${project.organization.name}"/>
        <attribute name="Implementation-Vendor-Id" value="${project.groupId}"/>
        <attribute name="Implementation-Version" value="${project.version}"/>
        <attribute name="JavaPackages-ArtifactId" value="${project.artifactId}"/>
        <attribute name="JavaPackages-GroupId" value="${project.groupId}"/>
        <attribute name="JavaPackages-Version" value="${project.version}"/>
        <attribute name="Specification-Title" value="${project.artifactId}"/>
        <attribute name="Specification-Vendor" value="${project.organization.name}"/>
        <attribute name="Specification-Version" value="0.0"/>
      </manifest>
    </jar>
  </target>

  <!-- ====================================================================== -->
  <!-- A dummy target for the package named after the type it creates         -->
  <!-- ====================================================================== -->

  <target name="jar" depends="package" description="Builds the jar for the application"/>

</project>
