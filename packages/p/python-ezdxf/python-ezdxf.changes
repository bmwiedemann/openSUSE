-------------------------------------------------------------------
Thu Jun  3 13:35:43 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to 0.16.3
  * release notes: https://ezdxf.mozman.at/release-v0-16.html
  * The new command line script ezdxf launches various sub-commands
  * Bounding Box Module bbox
  * Module zoom
  * Support Module disassemble
  * text2path Add-on
  * Extended path sub-package
  * Math Tools
  * DXF Entity Enhancements
- Cythonize
- Update build, test, and runtime requirements

-------------------------------------------------------------------
Sat Jan 16 07:57:51 UTC 2021 - andy great <andythe_great@pm.me>

- Disable build for python36 because scipy dep. 
- Update to version 0.15.1
  * NEW: Spline.audit() audit support for the SPLINE entity
  * NEW: The recover module tolerates malformed group codes and 
    value tags.
  * Changed the Matrix44.matrix attribute in the Python implementation
    to a “private” attribute Matrix44._matrix, because this attribute
    is not available in the Cython implementation
  * BUGFIX: proxy graphic decoding error on big-endian systems
  * BUGFIX: invalid vertex subscript access in dxf2code add-on
  * BUGFIX: cubic_bezier_from_ellipse() recognizes full ellipses
  * BUGFIX: cubic_bezier_from_arc() recognizes full circles
  * BUGFIX: pickle support for C-extensions Vec2, Vec3, Matrix44 
    and Bezier4P
  * BUGFIX: attribute error when exporting matrices in the MATERIAL
    entity 
- Updates for version 0.15
  * NEW: linetype support for matplotlib- and pyqt drawing backend
  * NEW: HATCH island support for matplotlib- and pyqt drawing backend
  * NEW: basic HATCH pattern support for matplotlib- and pyqt 
    drawing backend
  * NEW: Font support for matplotlib- and pyqt drawing backend
  * NEW: POINT mode support for matplotlib- and pyqt drawing backend,
    relative point size is not supported
  * NEW: Proxy graphic support for the drawing add-on
  * NEW: recover misplaced tags of the AcDbEntity subclass 
    (color, layer, linetype, ...), supported by all loading modes
  * NEW: ezdxf.addons.geo module, support for the __geo_interface__,
    see docs and tutorial
  * NEW: GeoData.setup_local_grid() setup geo data for CRS similar 
    to EPSG:3395 World Mercator
  * NEW: MLINE support but without line break and fill break (gaps)
    features
  * NEW: Bezier.flattening() adaptive recursive flattening 
    (approximation)
  * NEW: Bezier4P.flattening() adaptive recursive flattening 
    (approximation)
  * NEW: Path.flattening() adaptive recursive flattening 
    (approximation)
  * NEW: Circle.flattening() approximation determined by a max. 
    sagitta value
  * NEW: Arc.flattening() approximation determined by a max. 
    sagitta value
  * NEW: ConstructionArc.flattening() approximation determined by 
    a max. sagitta value
  * NEW: ezdxf.math.distance_point_line_3d()
  * NEW: ConstructionEllipse.flattening() adaptive recursive 
    flattening (approximation)
  * NEW: Ellipse.flattening() adaptive recursive flattening 
    (approximation)
  * NEW: BSpline.flattening() adaptive recursive flattening 
    (approximation)
  * NEW: Spline.flattening() adaptive recursive flattening 
    (approximation)
  * NEW: matplotlib.qsave(), ltype argument to switch between 
    matplotlib dpi based linetype rendering and AutoCAD like 
    drawing units based linetype rendering
  * NEW: Solid.vertices() returns OCS vertices in correct order 
    (also Trace)
  * NEW: Solid.wcs_vertices() returns WCS vertices in correct order 
    (also Trace)
  * NEW: Face3D.wcs_vertices() compatibility interface to SOLID and
    TRACE
  * NEW: Hatch.paths.external_paths() returns iterable of external 
    boundary paths
  * NEW: Hatch.paths.outermost_paths() returns iterable of outer 
    most boundary paths
  * NEW: Hatch.paths.default_paths() returns iterable of default 
    boundary paths
  * NEW: Hatch.paths.rendering_paths() returns iterable of paths to
    process for rendering
  * NEW: Drawing.units property to get/set document/modelspace units
  * NEW: ezdxf.new() argument units to setup document and modelspace
    units and $MEASUREMENT setting and the linetype setup is based on 
    this $MEASUREMENT setting.
  * NEW: pattern.load(measurement, factor) load scaled hatch pattern
  * NEW: Path.from_hatch_boundary_path()
  * NEW: odafc.export_dwg() new replace option to delete existing 
    DWG files
  * NEW: Style table entry supports extended font data
  * NEW: Point.virtual_entities(), yield POINT entities as DXF 
    primitives
  * NEW: ezdxf.render.point, support module for Point.virtual_entities()
  * NEW: Optional Cython implementation of some low level math 
    classes: Vec2, Vec3, Matrix44, Bezier4P
  * NEW: support for complex linetypes for the Importer add-on
  * CHANGE: Optimized infrastructure for loading DXF attributes
  * CHANGE: Hatch.set_pattern_fill() uses HEADER variable 
    $MEASUREMENT to determine the default scaling of predefined 
    hatch pattern.
  * CHANGE: fix invalid linetype setup - new linetype scaling like 
    common CAD applications
  * CHANGE: ezdxf.colors module will consolidate all 
    color/transparency related features
  * CHANGE: renamed ezdxf.math.Vector to Vec3, but Vector remains 
    as synonym
  * DEPRECATED: ezdxf.tools.rgb module replaced by ezdxf.colors
  * REMOVED: deprecated DXFEntity.transform_to_wcs() interface, use
    DXFEntity.transform(ucs.matrix)
  * REMOVED: deprecated Hatch.edit_boundary() context manager, use
    Hatch.paths attribute
  * REMOVED: deprecated Hatch.get_gradient() method, use 
    Hatch.gradient attribute
  * REMOVED: deprecated Hatch.edit_gradient() context manager, use
    Hatch.gradient attribute
  * REMOVED: deprecated Hatch.edit_pattern() context manager, use
    Hatch.pattern attribute
  * REMOVED: deprecated Hatch.get_seed_points() method, use 
    Hatch.seeds attribute
  * REMOVED: unnecessary argument non_uniform_scaling from 
    Insert.explode()
  * REMOVED: unnecessary argument non_uniform_scaling from 
    Insert.virtual_entities()
  * REMOVED: deprecated Spline.edit_data() context manager, use 
    fit_points, control_points, knots and weights attributes
  * BUGFIX: ezdxf.math.has_clockwise_orientation() returns True for
    counter-clock wise and vice versa
  * BUGFIX: default color for HATCH is 256 (by layer)
  * BUGFIX: fixed broken complex linetype setup
  * BUGFIX: validate loaded handle seed 

-------------------------------------------------------------------
Thu Nov 12 12:22:33 UTC 2020 - Marketa Machova <mmachova@suse.com>

- Update to 0.14.2
  * Recover Module added to provide a more stable and reliable DXF loading function.
  * Support for the start- and end width attributes of LWPOLYLINE and 2D POLYLINE 
    vertices to draw banded 2D lines.
  * Many bugfixes and smaller improvements

-------------------------------------------------------------------
Thu Aug 27 16:44:50 UTC 2020 - andy great <andythe_great@pm.me>

- Remove python-pytest-runner dependency.

-------------------------------------------------------------------
Wed Aug 26 21:14:18 UTC 2020 - andy great <andythe_great@pm.me>

- Initial package release.
