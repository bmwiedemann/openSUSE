<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>b8292f5044e3a2ca8ecb96a623e2ae78</srcmd5>
    <version>16.0</version>
    <time>1695208856</time>
    <user>dimstar_suse</user>
    <comment>Initial build of PostgreSQL 16</comment>
    <requestid>1112307</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>7325b5577faf2b885223e8c4cb140769</srcmd5>
    <version>16.0</version>
    <time>1698333098</time>
    <user>anag+factory</user>
    <comment>- boo#1216022: Call install-alternatives from the devel subpackage
  as well, otherwise the symlink for ecpg might be missing.</comment>
    <requestid>1120248</requestid>
  </revision>
  <revision rev="3" vrev="3">
    <srcmd5>f55bae3295e0322c3e124de86990a567</srcmd5>
    <version>16.0</version>
    <time>1698952838</time>
    <user>anag+factory</user>
    <comment>Revert last change and make the devel package independend</comment>
    <requestid>1121436</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>9900ccebf4fa8221e044cac908a0f639</srcmd5>
    <version>16.1</version>
    <time>1699615744</time>
    <user>anag+factory</user>
    <comment>November 2023 Security Updates</comment>
    <requestid>1124709</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>5f778cd0636060c3184487d32502c4fb</srcmd5>
    <version>16.2</version>
    <time>1707519110</time>
    <user>anag+factory</user>
    <comment>- Upgrade to 16.2:
  * bsc#1219679, CVE-2024-0985: Tighten security restrictions
    within REFRESH MATERIALIZED VIEW CONCURRENTLY.
    One step of a concurrent refresh command was run under weak
    security restrictions. If a materialized view's owner could
    persuade a superuser or other high-privileged user to perform a
    concurrent refresh on that view, the view's owner could control
    code executed with the privileges of the user running REFRESH.
    Fix things so that all user-determined code is run as the
    view's owner, as expected
  * If you use GIN indexes, you may need to reindex after updating
    to this release.
  * LLVM 18 is now supported.
  * https://www.postgresql.org/docs/release/16.2/</comment>
    <requestid>1145268</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>ea3db318c8cef19efedee386c58fa945</srcmd5>
    <version>16.2</version>
    <time>1709660835</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1154714</requestid>
  </revision>
  <revision rev="7" vrev="3">
    <srcmd5>b3101dcf093d87140535ea98f55cbbbc</srcmd5>
    <version>16.2</version>
    <time>1710530901</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1158179</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>80d288662e88946522887651358a9852</srcmd5>
    <version>16.3</version>
    <time>1715444338</time>
    <user>dimstar_suse</user>
    <comment>- Upgrade to 16.3 (bsc#1224051):
  * bsc#1224038, CVE-2024-4317: Restrict visibility of pg_stats_ext
    and pg_stats_ext_exprs entries to the table owner. See the
    release notes for the steps that have to be taken to fix
    existing PostgreSQL instances.
  * Fix incompatibility with LLVM 18.
  * https://www.postgresql.org/docs/release/16.3/
- Prepare for PostgreSQL 17.
- Make sure all compilation and doc generation happens in %build.</comment>
    <requestid>1172960</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>55624790e533e178493c963f14ecd01a</srcmd5>
    <version>16.4</version>
    <time>1727097538</time>
    <user>anag+factory</user>
    <comment>- Don't build the libs and mini flavor anymore to hand over to
  PostgreSQL 17.

- Upgrade to 16.4 (bsc#1229013):
  * bsc#1229013, CVE-2024-7348 PostgreSQL relation replacement
    during pg_dump executes arbitrary SQL
  * https://www.postgresql.org/about/news/postgresql-164-158-1413-1316-1220-and-17-beta-3-released-2910/
  * https://www.postgresql.org/docs/release/16.4/</comment>
    <requestid>1201997</requestid>
  </revision>
  <revision rev="10" vrev="2">
    <srcmd5>ad28c784abac1315b4f56d5b547508db</srcmd5>
    <version>16.4</version>
    <time>1727449840</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1203874</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>ddb5e59963e3d2045f6972ae7e64c131</srcmd5>
    <version>16.5</version>
    <time>1731681796</time>
    <user>anag+factory</user>
    <comment>- Upgrade to 16.5:
  * CVE-2024-10976, bsc#1233323: Ensure cached plans are marked as
    dependent on the calling role when RLS applies to a
    non-top-level table reference.
  * CVE-2024-10977, bsc#1233325: Make libpq discard error messages
    received during SSL or GSS protocol negotiation.
  * CVE-2024-10978, bsc#1233326: Fix unintended interactions
    between SET SESSION AUTHORIZATION and SET ROLE
  * CVE-2024-10979, bsc#1233327: Prevent trusted PL/Perl code from
    changing environment variables.
  * obsoletes postgresql-testsuite-timezone-fix.patch
  * https://www.postgresql.org/about/news/p-2955/
  * https://www.postgresql.org/docs/release/16.5/

- Sync spec file from postgresql17.

  * https://www.postgresql.org/about/news/p-2910/</comment>
    <requestid>1224292</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>ce88ef3b8171d938d716847f82c053b2</srcmd5>
    <version>16.6</version>
    <time>1732315910</time>
    <user>anag+factory</user>
    <comment>- Upgrade to 16.6:
  * Repair ABI break for extensions that work with struct
    ResultRelInfo.
  * Restore functionality of ALTER {ROLE|DATABASE} SET role.
  * Fix cases where a logical replication slot's restart_lsn could
    go backwards.
  * Avoid deleting still-needed WAL files during pg_rewind.
  * Fix race conditions associated with dropping shared statistics
    entries.
  * Count index scans in contrib/bloom indexes in the statistics
    views, such as the pg_stat_user_indexes.idx_scan counter.
  * Fix crash when checking to see if an index's opclass options
    have changed.
  * Avoid assertion failure caused by disconnected NFA sub-graphs
    in regular expression parsing.
  * https://www.postgresql.org/about/news/p-2965/
  * https://www.postgresql.org/docs/release/16.6/</comment>
    <requestid>1225749</requestid>
  </revision>
  <revision rev="13" vrev="2">
    <srcmd5>54d70b1f10ab871bcd2020ab3936b232</srcmd5>
    <version>16.6</version>
    <time>1738080588</time>
    <user>anag+factory</user>
    <comment>- Fix build, add postgresql-tzdata2025a.patch</comment>
    <requestid>1240820</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>41462eee66d0ed30cbdd13efac29d45e</srcmd5>
    <version>16.7</version>
    <time>1739468432</time>
    <user>anag+factory</user>
    <comment>- Upgrade to 16.7:
  * bsc#1237093, CVE-2025-1094: Harden PQescapeString and allied
    functions against invalidly-encoded input strings.
  * obsoletes postgresql-tzdata2025a.patch
  * https://www.postgresql.org/docs/release/16.7/
  * https://www.postgresql.org/about/news/-3015/
- Disable LLVM JIT on loongarch64</comment>
    <requestid>1245715</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>22ddc9b59b203a07875ba75061741c18</srcmd5>
    <version>16.8</version>
    <time>1740077205</time>
    <user>anag+factory</user>
    <comment>- Upgrade to 16.8:
  * Improve behavior of libpq's quoting functions:
    The changes made for CVE-2025-1094 had one serious oversight:
    PQescapeLiteral() and PQescapeIdentifier() failed to honor
    their string length parameter, instead always reading to the
    input string's trailing null. This resulted in including
    unwanted text in the output, if the caller intended to
    truncate the string via the length parameter. With very bad
    luck it could cause a crash due to reading off the end of
    memory.
    In addition, modify all these quoting functions so that when
    invalid encoding is detected, an invalid sequence is
    substituted for just the first byte of the presumed
    character, not all of it. This reduces the risk of problems
    if a calling application performs additional processing on
    the quoted string.
  * Fix small memory leak in pg_createsubscriber.
  * https://www.postgresql.org/docs/release/16.8/
  * https://www.postgresql.org/about/news/p-3018/</comment>
    <requestid>1247459</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>df01f4e9772301cbc561073604df84d6</srcmd5>
    <version>16.9</version>
    <time>1747726506</time>
    <user>anag_factory</user>
    <comment>- Upgrade to 16.9:
  * bsc#1242931, CVE-2025-4207: postgresql: PostgreSQL GB18030
    encoding validation can read one byte past end of allocation
    for text that fails validation.
  * https://www.postgresql.org/docs/release/16.9/
  * https://www.postgresql.org/about/news/p-3072/
- Add postresql-pg_config_paths.patch to Fix a race condition
  while generating pg_config_paths.h.</comment>
    <requestid>1278024</requestid>
  </revision>
</revisionlist>
