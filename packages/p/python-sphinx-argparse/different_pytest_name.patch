--- a/test/test_parser.py
+++ b/test/test_parser.py
@@ -1,4 +1,8 @@
 import argparse
+import os
+import sys
+print("sys.path = {}".format(sys.path))
+
 from sphinxarg.parser import parse_parser, parser_navigate
 
 
@@ -129,6 +133,8 @@ def test_parse_description():
 
 
 def test_parse_nested():
+    pytest_name = os.environ['PYTEST_NAME'] if 'PYTEST_NAME' in os.environ \
+            else 'py.test'
     parser = argparse.ArgumentParser()
     parser.add_argument('foo', default=False, help='foo help')
     parser.add_argument('bar', default=False)
@@ -157,8 +163,8 @@ def test_parse_nested():
         {
             'name': 'install',
             'help': 'install help',
-            'usage': 'usage: py.test install [-h] [--upgrade] ref',
-            'bare_usage': 'py.test install [-h] [--upgrade] ref',
+            'usage': 'usage: {} install [-h] [--upgrade] ref'.format(pytest_name),
+            'bare_usage': '{} install [-h] [--upgrade] ref'.format(pytest_name),
             'action_groups': [
                 {
                     'title': 'Positional Arguments',
@@ -188,6 +194,8 @@ def test_parse_nested():
 
 
 def test_parse_nested_traversal():
+    pytest_name = os.environ['PYTEST_NAME'] if 'PYTEST_NAME' in os.environ \
+            else 'py.test'
     parser = argparse.ArgumentParser()
 
     subparsers1 = parser.add_subparsers()
@@ -223,8 +231,8 @@ def test_parse_nested_traversal():
         {
             'name': 'level3',
             'help': '',
-            'usage': 'usage: py.test level1 level2 level3 [-h] foo bar',
-            'bare_usage': 'py.test level1 level2 level3 [-h] foo bar',
+            'usage': 'usage: {} level1 level2 level3 [-h] foo bar'.format(pytest_name),
+            'bare_usage': '{} level1 level2 level3 [-h] foo bar'.format(pytest_name),
             'action_groups': [
                 {
                     'title': 'Positional Arguments',
