Index: nautilus-python-4.0/src/nautilus-python.c
===================================================================
--- nautilus-python-4.0.orig/src/nautilus-python.c
+++ nautilus-python-4.0/src/nautilus-python.c
@@ -154,8 +154,8 @@ nautilus_python_init_python (void) {
     if (Py_IsInitialized())
         return TRUE;
 
-    debug("g_module_open " PYTHON_LIBPATH);
-    libpython = g_module_open (PYTHON_LIBPATH, 0);
+    debug("g_module_open " PYTHON_LIBNAME);
+    libpython = g_module_open (PYTHON_LIBNAME, 0);
     if (!libpython)
         g_warning("g_module_open libpython failed: %s", g_module_error());
 
Index: nautilus-python-4.0/meson.build
===================================================================
--- nautilus-python-4.0.orig/meson.build
+++ nautilus-python-4.0/meson.build
@@ -26,14 +26,14 @@ python_dep = python3.dependency(embed: t
 nautilus_extension_dir = libnautilus_extension.get_variable('extensiondir', pkgconfig_define: ['libdir', libdir])
 
 py_so_filename = python3.get_variable('INSTSONAME')
-python_libpath = python3.get_variable('LIBDIR') / py_so_filename
 
 conf = configuration_data()
 conf.set_quoted('DATADIR', datadir)
 conf.set('PYGOBJECT_MAJOR_VERSION', pygobject_major_version)
 conf.set('PYGOBJECT_MINOR_VERSION', pygobject_minor_version)
 conf.set('PYGOBJECT_MICRO_VERSION', pygobject_micro_version)
-conf.set_quoted('PYTHON_LIBPATH', python_libpath)
+conf.set_quoted('PYTHON_LIBNAME', py_so_filename)
+conf.set_quoted('PYTHON_LIBPATH', python3.get_variable('LIBDIR'))
 
 configure_file(
   output: 'config.h',
@@ -63,6 +63,6 @@ pkg.generate(
 
 summary({
   'PyGObject Version': 'pygobject-3.0',
-  'Python Library': python_libpath,
+  'Python Library': py_so_filename,
   'Documentation': get_option('docs'),
 })
