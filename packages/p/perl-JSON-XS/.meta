<package name="perl-JSON-XS" project="openSUSE:Factory">
  <title>JSON serialising/deserialising, done correctly and fast</title>
  <description>This module converts Perl data structures to JSON and vice versa. Its
primary goal is to be *correct* and its secondary goal is to be *fast*.
To reach the latter goal it was written in C.

Beginning with version 2.0 of the JSON module, when both JSON and
JSON::XS are installed, then JSON will fall back on JSON::XS (this can
be overridden) with no overhead due to emulation (by inheriting
constructor and methods). If JSON::XS is not available, it will fall
back to the compatible JSON::PP module as backend, so using JSON instead
of JSON::XS gives you a portable JSON API that can be fast when you need
and doesn`t require a C compiler when that is a problem.

As this is the n-th-something JSON module on CPAN, what was the reason
to write yet another JSON module? While it seems there are many JSON
modules, none of them correctly handle all corner cases, and in most
cases their maintainers are unresponsive, gone missing, or not listening
to bug reports for other reasons.

Author:
-------
    Marc Lehmann &lt;schmorp@schmorp.de&gt;</description>
</package>
