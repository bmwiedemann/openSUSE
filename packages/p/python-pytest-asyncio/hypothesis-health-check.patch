From fd57e55db1170c029324a7a9c56f86f14468217e Mon Sep 17 00:00:00 2001
From: Michael Seifert <m.seifert@digitalernachschub.de>
Date: Mon, 18 Sep 2023 09:50:47 +0200
Subject: [PATCH] [test] Addresses a Hypothesis health check that leads to
 failing tests.

Class-based tests that inherit a Hypothesis test case emit a Hypothesis health check warning starting from hypothesis-6.83.2 [0][1]. This is due to inherited tests being run by different Hypothesis executors and may cause issues when replaying examples [2].

Inheriting Hypothesis tests in subclasses is clearly not wanted, so it makes sense to remove the pytest-asyncio test that tests for this feature.

[0] https://hypothesis.readthedocs.io/en/latest/changes.html#v6-83-2
[1] https://github.com/HypothesisWorks/hypothesis/pull/3720
[2] https://github.com/HypothesisWorks/hypothesis/issues/3446

Signed-off-by: Michael Seifert <m.seifert@digitalernachschub.de>
---
 tests/hypothesis/test_inherited_test.py | 20 --------------------
 1 file changed, 20 deletions(-)
 delete mode 100644 tests/hypothesis/test_inherited_test.py

diff --git a/tests/hypothesis/test_inherited_test.py b/tests/hypothesis/test_inherited_test.py
deleted file mode 100644
index a7762264..00000000
--- a/tests/hypothesis/test_inherited_test.py
+++ /dev/null
@@ -1,20 +0,0 @@
-import hypothesis.strategies as st
-import pytest
-from hypothesis import given
-
-
-class BaseClass:
-    @pytest.mark.asyncio
-    @given(value=st.integers())
-    async def test_hypothesis(self, value: int) -> None:
-        pass
-
-
-class TestOne(BaseClass):
-    """During the first execution the Hypothesis test
-    is wrapped in a synchronous function."""
-
-
-class TestTwo(BaseClass):
-    """Execute the test a second time to ensure that
-    the test receives a fresh event loop."""
