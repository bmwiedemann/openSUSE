-------------------------------------------------------------------
Sat Mar 16 09:46:24 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 0.23.5.post1:
  * Declare compatibility with pytest 8
  * Fix typing errors with recent versions of mypy #769
  * Prevent DeprecationWarning about internal use of
    `asyncio.get_event_loop()` from affecting test cases #757

-------------------------------------------------------------------
Sat Mar  2 11:29:53 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Update to 0.23.5
  * Declare compatibility with pytest 8 #737
  * Fix typing errors with recent versions of mypy #769
  * Prevent DeprecationWarning about internal use of
    asyncio.get_event_loop() from affecting test cases #757
  ## Known issues
  * As of v0.23, pytest-asyncio attaches an asyncio event loop to
    each item of the test suite (i.e. session, packages, modules,
    classes, functions) and allows tests to be run in those loops
    when marked accordingly. Pytest-asyncio currently assumes that
    async fixture scope is correlated with the new event loop
    scope. This prevents fixtures from being evaluated
    independently from the event loop scope and breaks some
    existing test suites (see #706). For example, a test suite may
    require all fixtures and tests to run in the same event loop,
    but have async fixtures that are set up and torn down for each
    module. If you're affected by this issue, please continue using
    the v0.21 release, until it is resolved.
- Release 0.23.4
  * pytest-asyncio no longer imports additional, unrelated packages
    during test collection #729
  * Addresses further issues that caused an internal pytest error
    during test collection
  * Declares incompatibility with pytest 8 #737

-------------------------------------------------------------------
Tue Jan  2 12:01:57 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 0.23.3:
  * Fixes a bug that caused event loops to be closed prematurely
    when using async generator fixtures with class scope or wider
    in a function-scoped test #706
  * Fixes various bugs that caused an internal pytest error
    during test collection #711 #713 #719
  * Fixes a bug that caused an internal pytest error when
    collecting .txt files
  * Fixes a bug that caused an internal pytest error when using
    module-level skips #701
    This release is backwards-compatible with v0.21. Changes are
    non-breaking, unless you upgrade from v0.22.
  * BREAKING: The asyncio_event_loop mark has been removed.
    Event loops with class, module, package, and session scopes
    can be requested via the scope keyword argument to the
    _asyncio_ mark. -
    Introduces the event_loop_policy fixture which allows testing
    with non-default or multiple event loops
  * Introduces pytest_asyncio.is_async_test which returns whether
    a test item is managed by pytest-asyncio
  * Removes and pytest trio, mypy, and flaky from the test
    dependencies
  * Deprecate redefinition of the event_loop fixture. #587 Users
    requiring a class-scoped or module-scoped asyncio event loop
    for their tests should mark the corresponding class or module
    with asyncio_event_loop.
  * Test items based on asynchronous generators always exit with
    xfail status and emit a warning during the collection phase.
    This behavior is consistent with synchronous yield tests.
    #642
  * Remove support for Python 3.7
  * Declare support for Python 3.12
- drop hypothesis-health-check.patch (upstream)

-------------------------------------------------------------------
Tue Nov  7 19:34:40 UTC 2023 - Dirk Müller <dmueller@suse.com>

- remove unnecessary dependency on async_generator

-------------------------------------------------------------------
Tue Oct 17 08:19:39 UTC 2023 - Markéta Machová <mmachova@suse.com>

- Add hypothesis-health-check.patch to fix tests

-------------------------------------------------------------------
Mon Jul 24 18:40:25 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 0.21.1:
  * Output a proper error message when an invalid
    ``asyncio_mode`` is selected.
  * Extend warning message about unclosed event loops with
    additional possible cause.
  * Previously, some tests reported "skipped" or "xfailed" as a
    result. Now all tests report a "success" result.

-------------------------------------------------------------------
Thu May  4 22:36:44 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 0.21.0:
  * Drop compatibility with pytest 6.1. Pytest-asyncio now
    depends on pytest 7.0 or newer.
  * pytest-asyncio cleans up any stale event loops when setting
    up and tearing down the event_loop fixture.

-------------------------------------------------------------------
Fri Apr 21 12:31:26 UTC 2023 - Dirk Müller <dmueller@suse.com>

- add sle15_python_module_pythons (jsc#PED-68)

-------------------------------------------------------------------
Thu Apr 13 22:43:58 UTC 2023 - Matej Cepl <mcepl@suse.com>

- Make calling of %{sle15modernpython} optional.

-------------------------------------------------------------------
Fri Dec  9 11:11:04 UTC 2022 - Daniel Garcia <daniel.garcia@suse.com>

- Update to 0.20.3:
  * Prevent DeprecationWarning to bubble up on CPython 3.10.9 and 3.11.1. #460

-------------------------------------------------------------------
Wed Nov 30 07:13:34 UTC 2022 - Daniel Garcia <daniel.garcia@suse.com>

- Update to 0.20.2:
  * Fixes an issue with async fixtures that are defined as methods on a test
    class not being rebound to the actual test instance. #197
  * Replaced usage of deprecated @pytest.mark.tryfirst with
    @pytest.hookimpl(tryfirst=True) #438
- 0.20.1 (22-10-21)
  * Fixes an issue that warned about using an old version of pytest, even
    though the most recent version was installed. #430
- 0.20.0 (22-10-21)
  * BREAKING: Removed legacy mode. If you're upgrading from v0.19 and you
    haven't configured asyncio_mode = legacy, you can upgrade without taking
    any additional action. If you're upgrading from an earlier version or you
    have explicitly enabled legacy mode, you need to switch to auto or strict
    mode before upgrading to this version.
  * Deprecate use of pytest v6.
  * Fixed an issue which prevented fixture setup from being cached. #404

-------------------------------------------------------------------
Fri Aug  5 04:57:24 UTC 2022 - John Vandenberg <jayvdb@gmail.com>

- Update to 0.19.0
  * BREAKING: The default ``asyncio_mode`` is now *strict*.
  * Removes `setup.py` since all relevant configuration is present
    `setup.cfg`.
  * Declare support for Python 3.11

-------------------------------------------------------------------
Wed Jul  6 07:59:54 UTC 2022 - Steve Kowalik <steven.kowalik@suse.com>

- Inject multibuild to defeat a build loop

-------------------------------------------------------------------
Tue Jun 28 19:00:14 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update to 0.18.3
  * Adds pytest-trio to the test dependencies
  * Fixes a bug that caused pytest-asyncio to try to set up async
    pytest_trio fixtures in strict mode. #298
- Release 0.18.2
  * Fix asyncio auto mode not marking static methods. #295
  * Fix a compatibility issue with Hypothesis 6.39.0. #302
- Release 0.18.1
  * Fixes a regression that prevented async fixtures from working
    in synchronous tests. #286
- Release 0.18.0
  * Raise a warning if @pytest.mark.asyncio is applied to non-async
    function. #275
  * Support parametrized event_loop fixture. #278

-------------------------------------------------------------------
Thu Jan 20 16:39:35 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update to 0.17.2
  * Require typing-extensions on Python<3.8 only. #269
  * Fix a regression in tests collection introduced by 0.17.1, the
    plugin works fine with non-python tests again. #267
- Release notes for 0.17.1
  * Fixes a bug that prevents async Hypothesis tests from working
    without explicit asyncio marker when --asyncio-mode=auto is
    set. #258
  * Fixed a bug that closes the default event loop if the loop
    doesn't exist #257
  * Added type annotations. #198
  * Show asyncio mode in pytest report headers. #266
  * Relax asyncio_mode type definition; it allows to support pytest
    6.1+. #262
- Release notes for 0.17.0
  * pytest-asyncio no longer alters existing event loop policies.
    #168, #188
  * Drop support for Python 3.6
  * Fixed an issue when pytest-asyncio was used in combination with
    flaky or inherited asynchronous Hypothesis tests. #178 #231
  * Added flaky to test dependencies
  * Added unused_udp_port and unused_udp_port_factory fixtures
    (similar to unused_tcp_port and unused_tcp_port_factory
    counterparts. #99
  * Added the plugin modes: strict, auto, and legacy. See
    documentation for details. #125
  * Correctly process KeyboardInterrupt during async fixture setup
    phase #219

-------------------------------------------------------------------
Sun Oct 17 13:20:44 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to 0.16.0
  * Add support for Python 3.10
- Drop 0001-removed-support-for-python-3.5.patch not required by
  fakeredis 1.6.0 anymore

-------------------------------------------------------------------
Mon Jul  5 08:38:37 UTC 2021 - Antonio Larrosa <alarrosa@suse.com>

- Add patch to revert a change in 0.15.1 that removed
  async_generator support in upstream together with python 3.5
  support. This revert is needed by python-fakeredis 1.5.2
  * 0001-removed-support-for-python-3.5.patch

-------------------------------------------------------------------
Thu Jun  3 09:53:19 UTC 2021 - Antonio Larrosa <alarrosa@suse.com>

- Update to 0.15.1
  * Hotfix for errors while closing event loops while replacing
    them. #209 #210
- Update to 0.15.0
  * Add support for Python 3.9
  * Abandon support for Python 3.5. If you still require support
    for Python 3.5, please use pytest-asyncio v0.14 or earlier.
  * Set unused_tcp_port_factory fixture scope to 'session'. #163
  * Properly close event loops when replacing them. #208

-------------------------------------------------------------------
Mon Jun 29 09:10:04 UTC 2020 - Marketa Calabkova <mcalabkova@suse.com>

- Update to 0.14.0
  * Fix #162, and event_loop fixture behavior now is coherent on all scopes.

-------------------------------------------------------------------
Tue Jun  9 08:13:59 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 0.12.0:
  * Run the event loop fixture as soon as possible.

-------------------------------------------------------------------
Mon Apr 27 10:36:39 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 0.11.0:
  * Fix with pytest 5.4

-------------------------------------------------------------------
Mon Mar  9 09:37:18 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Fix test run on python 3.8+

-------------------------------------------------------------------
Wed Feb 13 13:14:40 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 0.10.0:
  * support for pytest 4+

-------------------------------------------------------------------
Tue Sep  4 13:10:57 UTC 2018 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.9.0
- use github tarbal due packaging errrors in upstream
 * Python 3.7 support.
 * Remove event_loop_process_pool fixture
     and pytest.mark.asyncio_process_pool marker

-------------------------------------------------------------------
Fri Jan  5 09:47:11 UTC 2018 - alarrosa@suse.com

- Initial release of python-pytest-asyncio 0.8.0
