From e8fdf43ff4b0ba55edbbb83a6822d62f0f755e64 Mon Sep 17 00:00:00 2001
From: Antoine Damhet <xdbob@xdbob.net>
Date: Tue, 13 Aug 2024 17:22:01 +0200
Subject: [PATCH] testUSB1: fix python 3.13 support

PEP 667[1] makes all calls to `locals()` return a snapshot of the local
context. Fix the tests by removing the `local_dict` variable and keep
looking at the latest `locals()` state.

[1]: https://peps.python.org/pep-0667/

Signed-off-by: Antoine Damhet <xdbob@xdbob.net>
---
 usb1/testUSB1.py | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

diff --git a/usb1/testUSB1.py b/usb1/testUSB1.py
index ce33031..cc5503d 100644
--- a/usb1/testUSB1.py
+++ b/usb1/testUSB1.py
@@ -278,15 +278,14 @@ def testDefaultEnumScope(self):
         """
         ENUM_NAME = 'THE_ANSWER'
         ENUM_VALUE = 42
-        local_dict = locals()
         global_dict = globals()
-        self.assertEqual(local_dict.get(ENUM_NAME), None)
+        self.assertEqual(locals().get(ENUM_NAME), None)
         self.assertEqual(global_dict.get(ENUM_NAME), None)
         self.assertEqual(getattr(libusb1, ENUM_NAME, None), None)
         # pylint: disable=unused-variable
         TEST_ENUM = libusb1.Enum({ENUM_NAME: ENUM_VALUE})
         # pylint: enable=unused-variable
-        self.assertEqual(local_dict.get(ENUM_NAME), ENUM_VALUE)
+        self.assertEqual(locals().get(ENUM_NAME), ENUM_VALUE)
         self.assertEqual(global_dict.get(ENUM_NAME), None)
         self.assertEqual(getattr(libusb1, ENUM_NAME, None), None)
 
@@ -296,16 +295,15 @@ def testExplicitEnumScope(self):
         """
         ENUM_NAME = 'THE_ANSWER'
         ENUM_VALUE = 42
-        local_dict = locals()
         global_dict = globals()
-        self.assertEqual(local_dict.get(ENUM_NAME), None)
+        self.assertEqual(locals().get(ENUM_NAME), None)
         self.assertEqual(global_dict.get(ENUM_NAME), None)
         self.assertEqual(getattr(libusb1, ENUM_NAME, None), None)
         # pylint: disable=unused-variable
         TEST_ENUM = libusb1.Enum({ENUM_NAME: ENUM_VALUE}, global_dict)
         # pylint: enable=unused-variable
         try:
-            self.assertEqual(local_dict.get(ENUM_NAME), None)
+            self.assertEqual(locals().get(ENUM_NAME), None)
             self.assertEqual(global_dict.get(ENUM_NAME), ENUM_VALUE)
             self.assertEqual(getattr(libusb1, ENUM_NAME, None), None)
         finally:
