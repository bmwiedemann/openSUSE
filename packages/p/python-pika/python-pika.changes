-------------------------------------------------------------------
Sat Oct  1 14:07:45 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 1.3.0:
  * see https://github.com/pika/pika/milestone/19?closed=1 

-------------------------------------------------------------------
Thu Apr 28 15:23:41 UTC 2022 - pgajdos@suse.com

- version update to 1.2.1
  1.2.1 2022-04-27
  `GitHub milestone <https://github.com/pika/pika/milestone/18?closed=1>`_
  1.2.0 2021-02-04
  `GitHub milestone <https://github.com/pika/pika/milestone/17?closed=1>`_
- python-mock is not required for build

-------------------------------------------------------------------
Fri Apr 17 08:48:25 UTC 2020 - Matej Cepl <mcepl@suse.com>

- Switch from using nosetest runner to pytest

-------------------------------------------------------------------
Tue Jul 23 11:28:43 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 1.1.0:
  * various bugfixes
- Drop merged patch e95001e480ec30f1617c47e77fb92e0384ff9e78.patch

-------------------------------------------------------------------
Tue Jun 18 12:18:02 UTC 2019 - Thomas Bechtold <tbechtold@suse.com>

- Fix build for older distros which fail with
  UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 4575: \
    ordinal not in range(128)
  Added e95001e480ec30f1617c47e77fb92e0384ff9e78.patch

-------------------------------------------------------------------
Thu Apr 18 12:56:39 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 1.0.1
 * API docstring updates
 * Twisted adapter: Add basic_consume Deferred to the call list

-------------------------------------------------------------------
Mon Apr  8 11:44:42 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 1.0.0
 * AsyncioConnection, TornadoConnection and TwistedProtocolConnection
     are no longer auto-imported
 * BlockingConnection.consume now returns (None, None, None) when inactivity
     timeout is reached
 * Python 3.7 support
 * all_channels parameter of the Channel.basic_qos method renamed to global_qos
 *  global_ parameter of the Basic.Qos spec class renamed to global_qos
 * NOTE: heartbeat_interval is removed, use heartbeat instead.
 * NOTE: The backpressure_detection option of ConnectionParameters
     and URLParameters property is REMOVED in favor of Connection.Blocked
     and Connection.Unblocked. See Connection.add_on_connection_blocked_callback

-------------------------------------------------------------------
Wed Mar 13 14:08:31 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 0.13.1:
  * URLParameters with SSL options not working

-------------------------------------------------------------------
Thu Jan 31 08:49:58 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 0.13.0:
  * AsyncioConnection, TornadoConnection and TwistedProtocolConnection are no longer auto-imported
  * Python 3.7 support
- Drop merged patch 1119-increase_timeouts.patch

-------------------------------------------------------------------
Sat Sep 22 14:27:35 UTC 2018 - Matěj Cepl <mcepl@suse.com>

- Add 1119-increase_timeouts.patch to increase timeouts and hopefully
  make tests more resilient.

-------------------------------------------------------------------
Fri Sep 21 12:08:33 CEST 2018 - mcepl@suse.com

- Fix %files section double inclduing egg files.

-------------------------------------------------------------------
Wed Sep 19 10:57:35 UTC 2018 - Tomáš Chvátal <tchvatal@suse.com>

- Switch to github tarball in order to get tests
- Run the tests

-------------------------------------------------------------------
Wed Sep 19 10:56:13 UTC 2018 - Tomáš Chvátal <tchvatal@suse.com>

- Version update to 0.12.0:
  * BlockingConnection now supports the add_callback_threadsafe method which
    allows a function to be executed correctly on the IO loop thread.

-------------------------------------------------------------------
Wed Sep 19 09:57:08 UTC 2018 - Dominik Heidler <dheidler@suse.de>

- Added Dep: Pika requires ssl python module provided by python
- Fix license macro

-------------------------------------------------------------------
Tue Oct 17 19:43:21 UTC 2017 - sean.marlow@suse.com

- Update to 0.11.0:
  * Simplify Travis CI configuration for OS X.
  * Add asyncio connection adapter for Python 3.4 and newer.
  * Connection failures that occur after the socket is opened and
    before the AMQP connection is ready to go are now reported by
    calling the connection error callback. Previously these were
    not consistently reported.
  * In BaseConnection.close, call _handle_ioloop_stop only if the
    connection is already closed to allow the asynchronous close
    operation to complete gracefully.
  * Pass error information from failed socket connection to user
    callbacks on_open_error_callback and on_close_callback with
    result_code=-1.
  * ValueError is raised when a completion callback is passed to an
    asynchronous (nowait) Channel operation. It's an application
    error to pass a non-None completion callback with an
    asynchronous request, because this callback can never be
    serviced in the asynchronous scenario.
  * Channel.basic_reject fixed to allow delivery_tag to be of type
    long as well as int. (by quantum5)
  * Implemented support for blocked connection timeouts in
    pika.connection.Connection. This feature is available to all
    pika adapters. See pika.connection.ConnectionParameters
    docstring to learn more about blocked_connection_timeout
    configuration.
  * Deprecated the heartbeat_interval arg in
    pika.ConnectionParameters in favor of the heartbeat arg for
    consistency with the other connection parameters classes
    pika.connection.Parameters and pika.URLParameters.
  * When the port arg is not set explicitly in ConnectionParameters
    constructor, but the ssl arg is set explicitly, then set the
    port value to to the default AMQP SSL port if SSL is enabled,
    otherwise to the default AMQP plaintext port.
  * URLParameters will raise ValueError if a non-empty URL scheme
    other than {amqp | amqps | http | https} is specified.
  * InvalidMinimumFrameSize and InvalidMaximumFrameSize exceptions
    are deprecated. pika.connection.Parameters.frame_max property
    setter now raises the standard ValueError exception when the
    value is out of bounds.
  * Removed deprecated parameter type in Channel.exchange_declare
    and BlockingChannel.exchnage_declare in favor of the
    exchange_type arg that doesn't overshadow the builtin type
    keyword.
  * Channel.close() on OPENING channel transitions it to CLOSING
    instead of raising ChannelClosed.
  * Channel.close() on CLOSING channel raises
    ChannelAlreadyClosing; used to raise ChannelClosed.
  * Connection.channel() raises ConnectionClosed if connection is
    not in OPEN state.
  * When performing graceful close on a channel and Channel.Close
    from broker arrives while waiting for CloseOk, don't release
    the channel number until CloseOk arrives to avoid race
    condition that may lead to a new channel receiving the CloseOk
    that was destined for the closing channel.
  * The backpressure_detection option of ConnectionParameters and
    URLParameters property is DEPRECATED in favor of
    Connection.Blocked and Connection.Unblocked. See
    Connection.add_on_connection_blocked_callback.

-------------------------------------------------------------------
Tue Aug 22 06:27:00 UTC 2017 - tbechtold@suse.com

- switch to singlespec

-------------------------------------------------------------------
Wed Mar 16 11:20:03 UTC 2016 - tbechtold@suse.com

- update to 0.10.0:
  * LibevConnection: Fixed dict chgd size during iteration
  * SelectConnection: Fixed KeyError exceptions in IOLoop timeout executions
  * BlockingConnection: Add support to make BlockingConnection a Context Manager
  * f72b58f - Fixed failure to purge _ConsumerCancellationEvt from
    BlockingChannel._pending_events during basic_cancel.
  * Change to 3-Clause BSD License
  * Python 3.x support
  * Over 150 commits from 19 contributors
  * Refactoring of SelectConnection ioloop
  * This major release contains certain non-backward-compatible API changes as
    well as significant performance improvements in the BlockingConnection
    adapter.
  * Non-backward-compatible changes in Channel.add_on_return_callback
    callback’s signature.
  * The AsynchoreConnection adapter was retired
  * see also https://pika.readthedocs.org/en/0.10.0/version_history.html
- Add and update LICENSE. It's now BSD-3-Clause
- Remove README.md . It's shipped as README.rst in the upstream tarball

-------------------------------------------------------------------
Wed Mar 25 13:54:36 UTC 2015 - matwey.kornilov@gmail.com

- Update to version 0.9.14
  + Major issue with socket buffer refactor in 0.9.13 (#328) fixes by cooper6581 and Erik Andersson
  + Fix a bug in SelectConnection that did not allow for a IOLoop to be restarted (#337) fix by Ralf Nyrén
  + Fix an issue in BlockingConnection disconnections (#340) fix by Mark Unsworth
  + Add NullHandler to prevent logging warnings when not configured (#339) by Cenk Altı
  + Added Twisted Adapter example (#314) by nolinksoft

-------------------------------------------------------------------
Wed Dec  4 20:39:50 UTC 2013 - p.drouand@gmail.com

- Update to version 0.9.13
  + IPv6 Support
  + Officially remove support for <= Python 2.5 even though it was
    broken already
  + Drop pika.simplebuffer.SimpleBuffer in favor of the Python stdlib
    collections.deque object
  + New default object for receiving content is a “bytes” object which
    is a str wrapper in Python 2, but paves way for Python 3 support
  + New “Raw” mode for frame decoding content frames (#334) addresses
    issues #331, #229
  + Connection and Disconnection logic refactored, allowing for cleaner
    separation of protocol logic and socket handling logic as well as
    connection state management
  + New “on_open_error_callback” argument in creating connection
    objects and new Connection.add_on_open_error_callback method
  + New Connection.connect method to cleanly allow for reconnection code
  + Support for all AMQP field types, using protocol specified
    signed/unsigned unpacking
  + Method signature for creating connection objects has new argument
    “on_open_error_callback” which is positionally before “on_close_callback”
  + Internal callback variable names in connection.Connection have been
    renamed and constants used. If you relied on any of these callbacks
    outside of their internal use, make sure to check out the new constants.
  + Connection._connect method, which was an internal only method is now
    deprecated and will raise a DeprecationWarning. If you relied on 
    this method, your code needs to change.
  + pika.simplebuffer has been removed
  + BlockingConnection consumer generator does not free buffer
    when exited (#328)
  + Unicode body payloads in the blocking adapter raises exception (#333)
  + Support “b” short-short-int AMQP data type (#318)
  + Docstring type fix in adapters/select_connection (#316)
  + IPv6 not supported (#309)
  + Stop the HeartbeatChecker when connection is closed (#307)
  + Unittest fix for SelectConnection (#336)
  + Handle condition where no connection or socket exists but
    SelectConnection needs a timeout for retrying a connection (#322)
  + TwistedAdapter lagging behind BaseConnection changes (#321)
  + Refactored documentation
  + Added Twisted Adapter example (#314)
- Remove CFLAGS definition
- Remove redundant %clean section

-------------------------------------------------------------------
Thu Mar 21 09:45:07 UTC 2013 - matwey.kornilov@gmail.com

- Add REAMDE.md
- Fix License tag

-------------------------------------------------------------------
Thu Mar 21 09:37:32 UTC 2013 - matwey.kornilov@gmail.com

- Update to version 0.9.12:
  - Bugfix: New timeout id hashing was not unique

-------------------------------------------------------------------
Mon Mar 18 16:39:31 UTC 2013 - matwey.kornilov@gmail.com

- Update to version 0.9.11:
- Changes from 0.9.10
  - Address inconsistent channel close callback documentation and add the signature change to the TwistedChannel class (#305)
  - Address a missed timeout related internal data structure name change introduced in the SelectConnection 0.9.10 release. Update all connection adapters to use same signature and docstring (#306).

-------------------------------------------------------------------
Sun Mar 17 09:24:52 UTC 2013 - matwey.kornilov@gmail.com

- Updated to version 0.9.10:
- Changes from 0.9.9 to 0.9.10
  - Fix timeout in twisted adapter (Submitted by cellscape)
  - Fix blocking_connection poll timer resolution to milliseconds (Submitted by cellscape)
  - Fix channel._on_close() without a method frame (Submitted by Richard Boulton)
  - Addressed exception on close (Issue #279 - fix by patcpsc)
  - 'messages' not initialized in BlockingConnection.cancel() (Issue #289 fix by Mik Kocikowski)
  - Make queue_unbind behave like queue_bind (Issue #277)
  - Address closing behavioral issues for connections and channels (Issue #275)
  - Pass a Method frame to Channel._on_close in Connection._on_disconnect (Submitted by Jan Urbański)
  - Fix channel closed callback signature in the Twisted adapter (Submitted by Jan Urbański)
  - Don't stop the IOLoop on connection close for in the Twisted adapter (Submitted by Jan Urbański)
  - Update the asynchronous examples to fix reconnecting and have it work
  - Warn if the socket was closed such as if RabbitMQ dies without a Close frame
  - Fix URLParameters ssl_options (Issue #296)
  - Add state to BlockingConnection addressing (Issue #301)
  - Encode unicode body content prior to publishing (Issue #282)
  - Fix an issue with unicode keys in BasicProperties headers key (Issue #280)
  - Change how timeout ids are generated (Issue #254)
  - Address post close state issues in Channel (Issue #302)
  - Change core connection communication behavior to prefer outbound writes over reads, addressing a recursion issue
  - Update connection on close callbacks, changing callback method signature
  - Update channel on close callbacks, changing callback method signature
  - Give more info in the ChannelClosed exception
  - Change the constructor signature for BlockingConnection, block open/close callbacks
  - Disable the use of add_on_open_callback/add_on_close_callback methods in BlockingConnection
- Changes from 0.9.8 to 0.9.9 - lots of bufixes:
  - Only remove the tornado_connection.TornadoConnection file descriptor from the IOLoop if it’s still open (Issue #221)
  - Allow messages with no body (Issue #227)
  - Allow for empty routing keys (Issue #224)
  - Don’t raise an exception when trying to send a frame to a closed connection (Issue #229)
  - Only send a Connection.CloseOk if the connection is still open. (Issue #236 Fix by noleaf)
  - Fix timeout threshold in blocking connection - (Issue #232 - Fix by Adam Flynn)
  - Fix closing connection while a channel is still open (Issue #230 - Fix by Adam Flynn)
  - Fixed misleading warning and exception messages in BaseConnection (Issue #237 Fix by Tristan Penman)
  - Pluralised and altered the wording of the AMQPConnectionError exception (Issue #237 - Fix by Tristan Penman)
  - Fixed _adapter_disconnect in TornadoConnection class (Issue #237 Fix by Tristan Penman)
  - Fixing hang when closing connection without any channel in BlockingConnection (Issue #244 Fix by Ales Teska)
  - Remove the process_timeouts() call in SelectConnection (Issue #239)
  - Change the string validation to basestring for host connection parameters (Issue #231)
  - Add a poller to the BlockingConnection to address latency issues introduced in Pika 0.9.8 (Issue #242)
  - reply_code and reply_text is not set in ChannelException (Issue #250)
  - Add the missing constraint parameter for Channel._on_return callback processing (Issue #257 - Fix by patcpsc)
  - Channel callbacks not being removed from callback manager when channel is closed or deleted (Issue #261)

-------------------------------------------------------------------
Mon Nov 19 07:24:31 UTC 2012 - matwey.kornilov@gmail.com

- Fixed License: tag

-------------------------------------------------------------------
Mon Nov 19 07:08:02 UTC 2012 - matwey.kornilov@gmail.com

- Updated to version 0.9.8:
- Bugfixes
  - Channel.queue_declare/BlockingChannel.queue_declare not setting up callbacks property for empty queue name (Issue #218)
  - Channel.queue_bind/BlockingChannel.queue_bind not allowing empty routing key
  - Connection._on_connection_closed calling wrong method in Channel (Issue #219)
  - Fix tx_commit and tx_rollback bugs in BlockingChannel (Issue #217)
- Changes from version 0.9.6 to 0.9.7:
- New features
  - generator based consumer in BlockingChannel (See Using the BlockingChannel.consume generator to consume messages for example)
- Changes
  - BlockingChannel._send_method will only wait if explicitly told to
- Bugfixes
  - Added the exchange “type” parameter back but issue a DeprecationWarning
  - Dont require a queue name in Channel.queue_declare()
  - Fixed KeyError when processing timeouts (Issue # 215 - Fix by Raphael De Giusti)
  - Don’t try and close channels when the connection is closed (Issue #216 - Fix by Charles Law)
  - Dont raise UnexpectedFrame exceptions, log them instead
  - Handle multiple synchronous RPC calls made without waiting for the call result (Issues #192, #204, #211)
  - Typo in docs (Issue #207 Fix by Luca Wehrstedt)
  - Only sleep on connection failure when retry attempts are > 0 (Issue #200)
  - Bypass _rpc method and just send frames for Basic.Ack, Basic.Nack, Basic.Reject (Issue #205)

-------------------------------------------------------------------
Tue Oct 30 11:00:41 MSD 2012 - matwey.kornilov@gmail.com
`
- Updated to version 0.9.6
- New features and highlights:
  - Delivery confirmation support
  - New URLParameters class for connecting with AMQP URLs
  - BlockingConnection will raise exceptions for various events, such as
channel and connection closures.
  - New BlockingConnection methods:
    - process_data_events() - Force BlockingConnection to check for pending
events from RabbitMQ
    - sleep() - Sleep without blocking communication with RabbitMQ
  - New BlockingChannel methods:
    - start_consuming()
    - stop_consuming()
  - Back-pressure detection is now optional via a connection parameter
  - Configurable IOLoop stopping on asynchronous adapters
  - Rewritten unit test coverage from the ground up. While not complete, it
is a significant improvement over previous releases.
- Major bugfix areas:
  - Connection handling
  - Blocking functionality in the BlockingConnection
  - SSL
  - UTF-8 Handling
- Things removed:
  - pika.reconnection_strategies
  - pika.channel.ChannelTransport
  - pika.log
  - pika.template
  - examples directory, adding examples to documentation instead.
  - functional tests

-------------------------------------------------------------------
Tue Sep 27 11:56:03 MSD 2011 - matwey.kornilov@gmail.com

- Updated to version 0.9.5
- Spec regenerated from PIP using py2pack

-------------------------------------------------------------------
Fri Feb 12 13:41:24 CET 2010 - jblunck@suse.de

- The entire module is platform-independent, so lets make it noarch.

-------------------------------------------------------------------
Fri Jan  8 11:48:15 CET 2010 - jblunck@suse.de

- Initial package

