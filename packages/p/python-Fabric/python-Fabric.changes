-------------------------------------------------------------------
Tue May  5 12:40:33 UTC 2020 - Marketa Calabkova <mcalabkova@suse.com>

- Add patch fix-executable.patch to fix tests

-------------------------------------------------------------------
Thu Sep 12 12:47:06 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 2.5.0:
  * [Feature] #1989: Reinstate command timeouts, by supporting the
   implementation of that feature in Invoke
  * [Feature]: Allow specifying connection timeouts
  * [Feature] #1985: Add support for explicitly closing remote subprocess’
    stdin when local stdin sees an EOF, by implementing a new command-runner
    method recently added to Invoke; this prevents remote programs that
    ‘follow’ stdin from blocking forever.
  * [Bug]: Anonymous/’remainder’ subprocess execution (eg fab -H host --
    command, as opposed to the use of Connection.run inside tasks)

-------------------------------------------------------------------
Tue Apr  9 06:20:04 UTC 2019 - John Paul Adrian Glaubitz <adrian.glaubitz@suse.com>

- Version update to 2.4.0:
  * [Feature] #1709: Add Group.close to allow closing an entire group’s
    worth of connections at once. Patch via Johannes Löthberg.
  * [Feature] #1780: Add context manager behavior to Group, to match
    the same feature in Connection. Feature request by István Sárándi.
  * [Feature] #1849: Add Connection.from_v1 (and Config.from_v1) for
    easy creation of modern Connection/Config objects from the currently
    configured Fabric 1.x environment. Should make upgrading piecemeal
    much easier for many use cases.
- additional changes from version 2.3.2:
    * [Bug] #1852: Grant internal Connection objects created during
      ProxyJump based gateways/proxies a copy of the outer Connection’s
      configuration object. This was not previously done, which among
      other things meant one could not fully disable SSH config file
      loading (as the internal Connection objects would revert to the
      default behavior). Thanks to Chris Adams for the report.
    * [Bug]: Some debug logging was reusing Invoke’s logger object,
      generating log messages “named” after invoke instead of fabric.
      This has been fixed by using Fabric’s own logger everywhere instead.
    * [Bug] #1850: Skip over ProxyJump configuration directives in SSH
      config data when they would cause self-referential RecursionError
      (e.g. due to wildcard-using Host stanzas which include the jump
      server itself). Reported by Chris Adams.
    * [Bug]: Fix a bug preventing tab completion (using the Invoke-level
      --complete flag) from completing task names correctly (behavior was
      to act as if there were never any tasks present, even if there was
      a valid fabfile nearby).
- Add sed expresion to spec file to remove all vendoring from imports
- Run testsuite using the new %pytest macro

-------------------------------------------------------------------
Sat Aug 11 15:01:48 UTC 2018 - tchvatal@suse.com

- Conflict with python-Fabric3 which is forked implementation

-------------------------------------------------------------------
Sat Aug 11 14:54:57 UTC 2018 - tchvatal@suse.com

- Version update to 2.3.1:
  * Adds support for python3
  * Supports new invoke and invocations modules
- Run tests
- Add all build/runtime dependencies

-------------------------------------------------------------------
Mon Jan 22 11:15:30 UTC 2018 - tchvatal@suse.com

- Add skip_python3 as it is not compatible at all, fixes bsc#1073564
- Drop the Sphinx dep as we can't generate the deps because of py3
  incompatibility
- Run fdupes on install

-------------------------------------------------------------------
Fri Oct  6 14:02:06 UTC 2017 - jengelh@inai.de

- Rectify grammar issues in descriptions.

-------------------------------------------------------------------
Fri Oct  6 13:41:22 UTC 2017 - jmatejek@suse.com

- singlespec auto-conversion
- shortened description
- conditionally enabled tests (they still fail)
- update to 1.14.0
  * minor bugfixes and feature support
  * see ful changelog at http://www.fabfile.org/changelog.html

-------------------------------------------------------------------
Thu Feb 18 15:32:02 UTC 2016 - eshmarnev@suse.com

- update to version 1.10.2:
 * Fix issue with ssh/config not having a cross-platform default path.
 * Recursively unwrap decorators instead of only unwrapping a single 
   decorator level, when obtaining task docstrings.
 * Fix “NameError: free variable referenced before assignment in 
   enclosing scope”.
 * Redirect output of cd to /dev/null so users enabling bash’s 
   CDPATH (or similar features in other shells) don’t have polluted 
   output captures.
 * Fix a couple minor issues with the operation of & demo code for 
   the JobQueue class. 
 * Update functionality added in #1213 so abort error messages don’t 
   get printed twice (once by us, once by sys.exit) but the annotated 
   exception error message is retained. 

-------------------------------------------------------------------
Mon May  4 15:13:35 UTC 2015 - benoit.monin@gmx.fr

- update to version 1.10.1:
  * [Bug] #1226: Update get to ensure that env.user has access to
    tempfiles before changing permissions. Also corrected
    permissions from 404 to 0400 to match comment. Patch by Curtis
    Mattoon; original report from Daniel Watkins.
  * [Support] #1229: Add some missing API doc hyperlink references.
    Thanks to Tony Narlock.
  * [Support] #958: Remove the Git SHA portion of our version
    string generation; it was rarely useful & occasionally caused
    issues for users with non-Git-based source checkouts.
  * [Bug] #1180: Fix issue with unicode steam outputs crashing if
    stream encoding type is None. Thanks to @joekiller for catch &
    patch.
  * [Bug] #1228: Update the CommandTimeout class so it has a useful
    str instead of appearing blank when caught by Fabric’s top
    level exception handling. Catch & patch from Tomaz Muraus.
  * [Support] #1213: Add useful exception message to the implicit
    SystemExit raised by Fabric’s use of sys.exit inside the abort
    function. This allows client code catching SystemExit to have
    better introspection into the error. Thanks to Ioannis Panousis.
  * [Bug] #1019: (also #1022, #1186) Fix “is a tty” tests in
    environments where streams (eg sys.stdout) have been replaced
    with objects lacking a .isatty() method. Thanks to Miki Tebeka
    for the original report, Lele Long for a subsequent patch, and
    Julien Phalip for the final/merged patch.
  * [Bug] #1201: Don’t naively glob all get targets - only glob
    actual directories. This avoids incorrectly yielding permission
    errors in edge cases where a requested file is within a
    directory lacking the read permission bit. Thanks to Sassa Nf
    for the original report.
- additional changes from version 1.10.0:
  * [Feature] #975: Fabric can now be invoked via python -m fabric
    in addition to the typical use of the fab entrypoint. Patch
    courtesy of Jason Coombs.
  * [Feature] #1090: Add option to skip unknown tasks. Credit goes
    to Jonas Lundberg.
  * [Feature] #1098: Add support for dict style roledefs. Thanks to
    Jonas Lundberg.
  * [Feature] #700: Added use_sudo and temp_dir params to get. This
    allows downloading files normally not accessible to the user
    using sudo. Thanks to Jason Coombs for initial report and to
    Alex Plugaru for the patch (#1121).
  * [Bug] #1188: Update local to close non-pipe file descriptors in
    the child process so subsequent calls to local aren’t blocked
    on e.g. already-connected network sockets. Thanks to Tolbkni
    Kao for catch & patch.
- additional changes from version 1.9.1:
  * [Bug] #1167: Add Jinja to test_requires in setup.py for the
    couple of newish tests that now require it. Thanks to Kubilay
    Kocak for the catch.
  * [Bug] #600: Clear out connection caches in full when prepping
    parallel-execution subprocesses. This avoids corner cases
    causing hangs/freezes due to client/socket reuse. Thanks to
    Ruslan Lutsenko for the initial report and Romain Chossart for
    the suggested fix.
  * [Bug] #1026: Fix a typo preventing quiet operation of is_link.
    Caught by @dongweiming.
  * [Bug] #1059: Update IPv6 support to work with link-local
    address formats. Fix courtesy of @obormot.
  * [Bug] #1096: Encode Unicode text appropriately for its target
    stream object to avoid issues on non-ASCII systems. Thanks to
    Toru Uetani for the original patch.
  * [Bug] #852: Fix to respect template_dir for non Jinja2
    templates in upload_template. Thanks to Adam Kowalski for the
    patch and Alex Plugaru for the initial test case.
  * [Bug] #1134: Skip bad hosts when the tasks are executed in
    parallel. Thanks to Igor Maravić @i-maravic.
  * [Bug] #1146: Fix a bug where upload_template failed to honor
    lcd when mirror_local_mode is True. Thanks to Laszlo Marai for
    catch & patch.
  * [Bug] #1147: Use stat instead of lstat when testing
    directory-ness in the SFTP module. This allows recursive
    downloads to avoid recursing into symlinks unexpectedly. Thanks
    to Igor Kalnitsky for the patch.
  * [Bug] #1165: Prevent infinite loop condition when a gateway
    host is enabled & the same host is in the regular target host
    list. Thanks to @CzBiX for catch & patch.
- additional changes from version 1.9.0:
  * [Bug] #965: Tweak IO flushing behavior when in linewise (& thus
    parallel) mode so interwoven output is less frequent. Thanks to
    @akidata for catch & patch.
  * [Feature] #741: Add env.prompts dictionary, allowing users to
    set up custom prompt responses (similar to the built-in sudo
    prompt auto-responder.) Thanks to Nigel Owens and David Halter
    for the patch.
  * [Feature] #1082: Add pty passthrough kwarg to upload_template.
  * [Support]: Modified packaging data to reflect that Fabric
    requires Paramiko < 1.13 (which dropped Python 2.5 support.)
  * [Support] #1105: Enhance setup.py to allow Paramiko 1.13+ under
    Python 2.6+. Thanks to to @Arfrever for catch & patch.
  * [Support] #1106: Fix a misleading/ambiguous example snippet in
    the fab usage docs to be clearer. Thanks to @zed.
  * [Feature] #1101: Reboot operation now supports custom command.
    Thanks to Jonas Lejon.
  * [Feature] #938: Add an env var env.effective_roles specifying
    roles used in the currently executing command. Thanks to Piotr
    Betkier for the patch.
  * [Feature] #1078: Add .command and .real_command attributes to
    local return value. Thanks to Alexander Teves (@alexanderteves)
    and Konrad Hałas (@konradhalas).
- additional changes from version 1.8.4:
  * [Support] #1105: Enhance setup.py to allow Paramiko 1.13+ under
    Python 2.6+. Thanks to to @Arfrever for catch & patch.
  * [Bug] #898: Treat paths that begin with tilde “~” as absolute
    paths instead of relative. Thanks to Alex Plugaru for the patch
    and Dan Craig for the suggestion.
- additional changes from version 1.8.3:
  * [Support]: Modified packaging data to reflect that Fabric
    requires Paramiko < 1.13 (which dropped Python 2.5 support.)
- additional changes from version 1.8.2:
  * [Bug] #1046: Fix typo preventing use of ProxyCommand in some
    situations. Thanks to Keith Yang.
  * [Bug] #917: Correct an issue with put(use_sudo=True, mode=xxx)
    where the chmod was trying to apply to the wrong location.
    Thanks to Remco (@nl5887) for catch & patch.
  * [Bug] #955: Quote directories created as part of put‘s
    recursive directory uploads when use_sudo=True so directories
    with shell meta-characters (such as spaces) work correctly.
    Thanks to John Harris for the catch.
- additional changes from version 1.8.1:
  * [Bug] #948: Handle connection failures due to server load and
    try connecting to hosts a number of times specified in
    env.connection_attempts.
  * [Bug] #957: Fix bug preventing use of env.gateway with targets
    requiring password authentication. Thanks to Daniel González,
    @Bengrunt and @adrianbn for their bug reports.
  * [Bug] #956: Fix pty size detection when running inside Emacs.
    Thanks to @akitada for catch & patch.
- increase required version of paramiko to 1.10
- fix html documentation generation

-------------------------------------------------------------------
Thu Oct 24 11:05:35 UTC 2013 - speilicke@suse.com

- Require python-setuptools instead of distribute (upstreams merged)

-------------------------------------------------------------------
Wed Sep 25 14:27:59 UTC 2013 - p.drouand@gmail.com

- Update to version 1.8.0
  + [Feature] #910: Added a keyword argument to rsync_project to configure
    the default options. Thanks to @moorepants for the patch.
  + [Support] #984: Make this changelog easier to read! Now with per-release
    sections, generated automatically from the old timeline source format.
  + [Feature] #931: Allow overriding of abort behavior via a custom
    exception-returning callable set as env.abort_exception.

-------------------------------------------------------------------
Tue Jul 30 12:50:10 UTC 2013 - speilicke@suse.com

- Update to version 1.7.0:
  + [Feature] #925: Added contrib.files.is_link. Thanks to @jtangas for the patch.
  + [Feature] #922: Task argument strings are now displayed when using fab -d. Thanks to Kevin Qiu for the patch.
  + [Bug] #912: Leaving template_dir un-specified when using upload_template in Jinja mode used to cause 'NoneType' has no attribute 'startswith' errors. This has been fixed. Thanks to Erick Yellott for catch & to Erick Yellott + Kevin Williams for patches.
  + [Feature] #924: Add new env var option colorize_errors to enable coloring errors and warnings. Thanks to Aaron Meurer for the patch.
  + [Bug] #593: Non-ASCII character sets in Jinja templates rendered within upload_template would cause UnicodeDecodeError when uploaded. This has been addressed by encoding as utf-8 prior to upload. Thanks to Sébastien Fievet for the catch.
  + [Feature] #908: Support loading SSH keys from memory. Thanks to Caleb Groom for the patch.
  + [Bug] #171: Added missing cross-references from env variables documentation to corresponding command-line options. Thanks to Daniel D. Beck for the contribution.
  + [Bug] #884: The password cache feature was not working correctly with password-requiring SSH gateway connections. That’s fixed now. Thanks to Marco Nenciarini for the catch.
  + [Feature] #826: Enable sudo extraction of compressed archive via use_sudo kwarg in upload_project. Thanks to @abec for the patch.
  + [Bug] #694: Allow users to work around ownership issues in the default remote login directory: add temp_dir kwarg for explicit specification of which “bounce” folder to use when calling put with use_sudo=True. Thanks to Devin Bayer for the report & Dieter Plaetinck / Jesse Myers for suggesting the workaround.
  + [Bug] #882: Fix a get bug regarding spaces in remote working directory names. Thanks to Chris Rose for catch & patch.
- Changes from version 1.6.1:
  + [Bug] #868: Substantial speedup of parallel tasks by removing an unnecessary blocking timeout in the JobQueue loop. Thanks to Simo Kinnunen for the patch.
  + [Bug] #328: lcd was no longer being correctly applied to upload_template; this has been fixed. Thanks to Joseph Lawson for the catch.
  + [Feature] #812: Add use_glob option to put so users trying to upload real filenames containing glob patterns (*, [ etc) can disable the default globbing behavior. Thanks to Michael McHugh for the patch.
  + [Bug] #844: Allow users to disable Fabric’s auto-escaping in run/sudo. Thanks to Christian Long and Michael McHugh for the patch.
  + [Bug] #84: Fixed problem with missing -r flag in Mac OS X sed version.
  + [Bug] #870: Changes to shell env var escaping highlighted some extraneous and now damaging whitespace in with path():. This has been removed and a regression test added.
  + [Bug] #871: Use of string mode values in put(local, remote, mode="NNNN") would sometimes cause Unsupported operand errors. This has been fixed.
  + [Bug] #84: Fixed problem with missing -r flag in Mac OS X sed version. Thanks to Konrad Hałas for the patch.
  + [Bug] #861: Gracefully handle situations where users give a single string literal to env.hosts. Thanks to Bill Tucker for catch & patch.
  + [Bug] #367: Expand paths with tilde inside (contrib.files). Thanks to Konrad Hałas for catch & patch.
  + [Feature] #845: Downstream synchronization option implemented for rsync_project. Thanks to Antonio Barrero for the patch.

-------------------------------------------------------------------
Sat Mar  2 18:13:35 UTC 2013 - alexandre@exatati.com.br

- Update to 1.6.0:
  - [Bug] #844: Account for SSH config overhaul in Paramiko 1.10
    by e.g. updating treatment of IdentityFile to handle multiple
    values. This and related SSH config parsing changes are
    backwards incompatible; we are including them in this release
    because they do fix incorrect, off-spec behavior.
  - [Bug] #843: Ensure string pool_size values get run through
    int() before deriving final result (stdlib min() has odd
    behavior here...). Thanks to Chris Kastorff for the catch.
  - [Bug] #839: Fix bug in rsync_project where IPv6 address were
    not always correctly detected. Thanks to Antonio Barrero for
    catch & patch.
  - [Bug] #587: Warn instead of aborting when env.use_ssh_config
    is True but the configured SSH conf file doesn’t exist. This
    allows multi-user fabfiles to enable SSH config without causing
    hard stops for users lacking SSH configs. Thanks to Rodrigo
    Pimentel for the report.
  - [Feature] #821: Add remote_tunnel to allow reverse SSH
    tunneling (exposing locally-visible network ports to the
    remote end). Thanks to Giovanni Bajo for the patch.
  - [Feature] #823: Add env.remote_interrupt which controls
    whether Ctrl-C is forwarded to the remote end or is captured
    locally (previously, only the latter behavior was
    implemented). Thanks to Geert Jansen for the patch.

-------------------------------------------------------------------
Tue Jan 29 04:11:26 UTC 2013 - alexandre@exatati.com.br

- Update to 1.5.3:
  - [Bug] #806: Force strings given to getpass during password
    prompts to be ASCII, to prevent issues on some platforms when
    Unicode is encountered. Thanks to Alex Louden for the patch.
  - [Feature] #805: Update shell_env to play nice with Windows
    (7, at least) systems. Thanks to Fernando Macedo for the patch.
  - [Bug] #654: Parallel runs whose sum total of returned data was
    large (e.g. large return values from the task, or simply a
    large number of hosts in the host list) were causing
    frustrating hangs. This has been fixed.
  - [Bug] #791: Cast reboot‘s wait parameter to a numeric type in
    case the caller submitted a string by mistake. Thanks to
    Thomas Schreiber for the patch.

-------------------------------------------------------------------
Wed Jan 16 15:54:20 UTC 2013 - alexandre@exatati.com.br

- Update to 1.5.2:
  - [Bug] #766: Use the variable name of a new-style fabric.tasks.Task
    subclass object when the object name attribute is undefined.
    Thanks to @todddeluca for the patch.
  - [Bug] #604: Fixed wrong treatment of backslashes in put operation
    when uploading directory tree on Windows. Thanks to Jason Coombs
    for the catch and @diresys & Oliver Janik for the patch. for the patch.
  - [Bug] #792: The newish shell_env context manager was incorrectly
    omitted from the fabric.api import endpoint. This has been
    remedied. Thanks to Vishal Rana for the catch.
  - [Bug] #775: Shell escaping was incorrectly applied to the value
    of $PATH updates in our shell environment handling, causing
    (at the very least) local binary paths to become inoperable
    in certain situations. This has been fixed.
  - Added current host string to prompt abort error messages.

-------------------------------------------------------------------
Sat Dec  1 15:34:25 UTC 2012 - saschpe@suse.de

- (Build)require python-paramiko instead of python-ssh, upstream deps
  changed
- Build and install HTML documentation

-------------------------------------------------------------------
Fri Nov 16 11:30:26 UTC 2012 - alexandre@exatati.com.br

- Update to 1.5.1:
  - [Bug] #776: Fixed serious-but-non-obvious bug in direct-tcpip
    driven gatewaying (e.g. that triggered by -g or env.gateway.)
    Should work correctly now.
  - [Bug] #771: Sphinx autodoc helper unwrap_tasks didn’t play
    nice with @task(name=xxx) in some situations. This has been fixed.

-------------------------------------------------------------------
Wed Nov  7 02:03:36 UTC 2012 - alexandre@exatati.com.br

- Update to 1.5.0:
  - [Feature] #684: Update how task wraps task functions to preserve
    additional metadata; this allows decorated functions to play nice
    with Sphinx autodoc. Thanks to Jaka Hudoklin for catch & patch.
  - [Bug] #749: Gracefully work around calls to fabric.version on
    systems lacking /bin/sh (which causes an OSError in
    subprocess.Popen calls.)
  - [Bug] #718: isinstance(foo, Bar) is used in main instead of
    type(foo) == Bar in order to fix some edge cases. Thanks to
    Mikhail Korobov.
  - [Bug] #693: Fixed edge case where abort driven failures within
    parallel tasks could result in a top level exception (a KeyError)
    regarding error handling. Thanks to Marcin Kuźmiński for the report.
  - [Support] #681: Fixed outdated docstring for runs_once which
    claimed it would get run multiple times in parallel mode. That
    behavior was fixed in an earlier release but the docs were not
    updated. Thanks to Jan Brauer for the catch.

-------------------------------------------------------------------
Sat Jul  7 01:55:17 UTC 2012 - alexandre@exatati.com.br

- Update to 1.4.3:
* [Bug] #671 reject-unknown-hosts sometimes resulted in a password
  prompt instead of an abort. This has been fixed. Thanks to Roy Smith for the
  report.
* [Bug] #659 Update docs to reflect that fabric.operations.local currently
  honors 'env.path <env-path>'. Thanks to @floledermann for the catch.
* [Bug] #652 Show available commands when aborting on invalid command names.
* [Support] #651 Added note about nesting 'with' statements on Python 2.6+.
  Thanks to Jens Rantil for the patch.
* [Bug] #649 Don't swallow non-`abort`-driven exceptions in parallel mode.
  Fabric correctly printed such exceptions, and returned them from
  fabric.tasks.execute, but did not actually cause the child or parent
  processes to halt with a nonzero status. This has been fixed.
  fabric.tasks.execute now also honors env.warn_only <warn-only> so
  users may still opt to call it by hand and inspect the returned exceptions,
  instead of encountering a hard stop. Thanks to Matt Robenolt for the catch.
* [Support] #645 Update Sphinx docs to work well when run out of a source
  tarball as opposed to a Git checkout. Thanks again to @Arfrever for the
  catch.
* [Support] #640 (also #644) Update packaging manifest so sdist
  tarballs include all necessary test & doc files. Thanks to Mike Gilbert and
  @Arfrever for catch & patch.
* [Support] #634 Clarified that fabric.context_managers.lcd does no special
  handling re: the user's current working directory, and thus relative paths
  given to it will be relative to os.getcwd(). Thanks to @techtonik
  for the catch.

-------------------------------------------------------------------
Tue May  8 12:20:09 UTC 2012 - alexandre@exatati.com.br

- Update to 1.4.2:
  - [Bug] #562: Agent forwarding would error out or freeze when
    multiple uses of the forwarded agent were used per remote
    invocation (e.g. a single run command resulting in multiple Git
    or SVN checkouts.) This has been fixed thanks to Steven
    McDonald and GitHub user @lynxis.
  - [Support] #626: Clarity updates to the tutorial. Thanks to
    GitHub user m4z for the patches.
  - [Bug] #625: hide/show did not correctly restore prior display
    settings if an exception was raised inside the block. This has
    been fixed.
  - [Bug] #624: Login password prompts did not always display the
    username being authenticated for. This has been fixed. Thanks
    to Nick Zalutskiy for catch & patch.
  - [Bug] #617: Fix the clean_revert behavior of settings so it
    doesn’t KeyError for newly created settings keys. Thanks to
    Chris Streeter for the catch.
  - [Bug] #616: Add port number to the error message displayed upon
    connection failures.
  - [Bug] #609: (and #564) Document and clean up env.sudo_prefix so
    it can be more easily modified by users facing uncommon use
    cases. Thanks to GitHub users 3point2 for the cleanup and
    SirScott for the documentation catch.
  - [Bug] #610: Change detection of env.key_filename‘s type
    (added as part of SSH config support in 1.4) so it supports
    arbitrary iterables. Thanks to Brandon Rhodes for the catch.

-------------------------------------------------------------------
Thu Apr  5 04:20:21 UTC 2012 - alexandre@exatati.com.br

- Update to 1.4.1:
  * Add ``capture`` kwarg to `~fabric.contrib.project.rsync_project`
    to aid in debugging rsync problems.
  * Allow `~fabric.operations.local` to display stdout/stderr when it
    warns/aborts, if it was capturing them.
  * Added :ref:`an FAQ entry <init-scripts-pty>` detailing how to
    handle init scripts which misbehave when a pseudo-tty is allocated.
  * `~fabric.tasks.execute` allowed too much of its internal state
    changes (to variables such as ``env.host_string`` and ``env.parallel``) to
    persist after execution completed; this caused a number of different
    incorrect behaviors. `~fabric.tasks.execute` has been overhauled to clean up
    its own state changes -- while preserving any state changes made by the task
    being executed.
  * `~fabric.contrib.project.upload_project` did not take explicit
    remote directory location into account when untarring, and now uses
    `~fabric.context_managers.cd` to address this. Thanks to Ben Burry for the
    patch.
  * `~fabric.decorators.with_settings` did not perfectly match
    `~fabric.context_managers.settings`, re: ability to inline additional context
    managers. This has been corrected. Thanks to Rory Geoghegan for the patch.
  * `contrib.files.first <fabric.contrib.files.first>` used an
    outdated function signature in its wrapped `~fabric.contrib.files.exists`
    call. This has been fixed. Thanks to Massimiliano Torromeo for catch & patch.
  * `--list <-l>` output now detects terminal window size
    and truncates (or doesn't truncate) accordingly. Thanks to Horacio G. de Oro
    for the initial pull request.
  * Parallel task aborts (as oppposed to unhandled exceptions) now
    correctly print their abort messages instead of tracebacks, and cause the
    parent process to exit with the correct (nonzero) return code. Thanks to Ian
    Langworth for the catch.
  * Remote paths now use posixpath for a separator. Thanks to Jason
    Coombs for the patch.

-------------------------------------------------------------------
Tue Feb 21 11:38:31 UTC 2012 - saschpe@suse.de

- Comment out testsuite requirements for now

-------------------------------------------------------------------
Tue Feb 21 09:05:01 UTC 2012 - saschpe@suse.de

- Disabled testsuite for now, python-fudge is to new ;-)

-------------------------------------------------------------------
Mon Feb 20 22:15:10 UTC 2012 - saschpe@gmx.de

- Update to version 1.4.0:
  * :bug:495 Fixed documentation example showing how to subclass
    ~fabric.tasks.Task. Thanks to Brett Haydon for the catch and Mark Merritt
    for the patch.
  * :bug:410 Fixed a bug where using the ~fabric.decorators.task decorator
    inside/under another decorator such as ~fabric.decorators.hosts could cause
    that task to become invalid when invoked by name (due to how old-style vs
    new-style tasks are detected.) Thanks to Dan Colish for the initial patch.
  * :feature:559 ~fabric.contrib.project.rsync_project now allows users to
    append extra SSH-specific arguments to rsync's --rsh flag.
  * :feature:138 :ref:env.port <port> may now be written to at fabfile module
    level to set a default nonstandard port number. Previously this value was
    read-only.
  * :feature:3 Fabric can now load a subset of SSH config functionality
    directly from your local ~/.ssh/config if :ref:env.use_ssh_config
    <use-ssh-config> is set to True. See :ref:ssh-config for details.
    Thanks to Kirill Pinchuk for the initial patch.
  * :feature:12 Added the ability to try connecting multiple times to
    temporarily-down remote systems, instead of immediately failing. (Default
    behavior is still to only try once.) See :ref:env.timeout <timeout> and
    :ref:env.connection_attempts <connection-attempts> for controlling both
    connection timeouts and total number of attempts. ~fabric.operations.reboot
    has also been overhauled (but practically deprecated -- see its updated
    docs.)
  * :feature:474 ~fabric.tasks.execute now allows you to access the executed
    task's return values, by itself returning a dictionary whose keys are the
    host strings executed against.
  * :bug:487 Overhauled the regular expression escaping performed in
    ~fabric.contrib.files.append and ~fabric.contrib.files.contains to try
    and handle more corner cases. Thanks to Neilen Marais for the patch.
  * :support:532 Reorganized and cleaned up the output of fab --help.
  * :feature:8 Added :option:--skip-bad-hosts/:ref:env.skip_bad_hosts
    <skip-bad-hosts> option to allow skipping past temporarily down/unreachable
    hosts.
  * :feature:13 Env vars may now be set at runtime via the new :option:--set
    command-line flag.
  * :feature:506 A new :ref:output alias <output-aliases>, commands, has
    been added, which allows hiding remote stdout and local "running command X"
    output lines.
  * :feature:72 SSH agent forwarding support has made it into Fabric's SSH
    library, and hooks for using it have been added (disabled by default; use
    :option:-A or :ref:env.forward_agent <forward-agent> to enable.) Thanks
    to Ben Davis for porting an existing Paramiko patch to ssh and providing
    the necessary tweak to Fabric.
- Package AUTHORS and LICENSE
- Run testsuite and add related BuildRequires
- BuildRequire python-ssh

-------------------------------------------------------------------
Fri Jan 13 04:01:33 UTC 2012 - alexandre@exatati.com.br

- Update to 1.3.4:
  - [Bug] #492: @parallel did not automatically trigger linewise
    output, as was intended. This has been fixed. Thanks to Brandon
    Huey for the catch.
  - [Bug] #510: Parallel mode is incompatible with user input, such
    as password/hostname prompts, and was causing cryptic Operation
    not supported by device errors when such prompts needed to be
    displayed. This behavior has been updated to cleanly and obviously
    abort instead.
  - [Bug] #494: Fixed regression bug affecting some env values such
    as env.port under parallel mode. Symptoms included rsync_project
    bailing out due to a None port value when run under @parallel.
    Thanks to Rob Terhaar for the report.
  - [Bug] #339: Don’t show imported colors members in --list output.
    Thanks to Nick Trew for the report.

-------------------------------------------------------------------
Thu Nov 24 00:51:06 UTC 2011 - alexandre@exatati.com.br

- Update to 1.3.3:
  - [Bug] #441: Specifying a task module as a task on the command
    line no longer blows up but presents the usual “no task by that
    name” error message instead. Thanks to Mitchell Hashimoto for
    the catch.
  - [Bug] #475: Allow escaping of equals signs in per-task args/kwargs.
  - [Bug] #450: Improve traceback display when handling
    ImportErrors for dependencies. Thanks to David Wolever for the patches.
  - [Bug] #446: Add QNX to list of secondary-case sed targets.
    Thanks to Rodrigo Madruga for the tip.
  - [Bug] #443: exists didn’t expand tildes; now it does. Thanks to
    Riccardo Magliocchetti for the patch.
  - [Bug] #437: with_settings now correctly preserves the wrapped
    function’s docstring and other attributes. Thanks to Eric Buckley for the catch and Luke Plant for the patch.
  - [Bug] #400: Handle corner case of systems where pwd.getpwuid
    raises KeyError for the user’s UID instead of returning a valid string. Thanks to Dougal Matthews for the catch.
  - [Bug] #397: Some poorly behaved objects in third party modules
    triggered exceptions during Fabric’s “classic or new-style task?” test. A fix has been added which tries to work around these.
  - [Bug] #341: append incorrectly failed to detect that the line(s) given already existed in files hidden to the remote user, and continued appending every time it ran. This has been fixed. Thanks to Dominique Peretti for the catch and Martin Vilcans for the patch.
  - [Bug] #342: Combining cd with put and its use_sudo keyword
    caused an unrecoverable error. This has been fixed. Thanks to
    Egor M for the report.
  - [Bug] #482: Parallel mode should imply linewise output;
    omission of this behavior was an oversight.
  - [Bug] #230: Fix regression re: combo of no fabfile & arbitrary
    command use. Thanks to Ali Saifee for the catch. 

-------------------------------------------------------------------
Thu Nov 10 10:49:23 UTC 2011 - saschpe@suse.de

- Update to version 1.3.2:
  * No upstream-provided changes
- Set license to SPDX-style (BSD-2-Clause)

-------------------------------------------------------------------
Fri Sep  2 07:44:44 UTC 2011 - saschpe@suse.de

- Fixed link expansion error
- Removed some unneeded stuff

-------------------------------------------------------------------
Fri Sep  2 01:19:44 UTC 2011 - alexandre@exatati.com.br

- Update to 1.2.2:
  - [Bug] #252: settings would silently fail to set env values for
    keys which did not exist outside the context manager block. It
    now works as expected. Thanks to Will Maier for the catch and
    suggested solution.
  - [Support] #393: Fixed a typo in an example code snippet in the
    task docs. Thanks to Hugo Garza for the catch.
  - [Bug] #396: --shortlist broke after the addition of --list-format
    and no longer displayed the short list format correctly. This has
    been fixed.
  - [Bug] #373: Re-added missing functionality preventing host exclusion
    from working correctly.
  - [Bug] #303: Updated terminal size detection to correctly skip over
    non-tty stdout, such as when running fab taskname | other_command.
- Aditional changes from version 1.2.1:
  - [Bug] #417: abort_on_prompts would incorrectly abort when set to
    True, even if both password and host were defined. This has been
    fixed. Thanks to Valerie Ishida for the report.
  - [Support] #416: Updated documentation to reflect move from Redmine
    to Github.
  - [Bug] #389: Fixed/improved error handling when Paramiko import
    fails. Thanks to Brian Luft for the catch.

-------------------------------------------------------------------
Thu Aug  4 12:03:36 UTC 2011 - alexandre@exatati.com.br

- Fix License clause in spec file.

-------------------------------------------------------------------
Wed Jul 13 12:48:33 UTC 2011 - alexandre@exatati.com.br

- Update to 1.2.0:
  - 2011-07-12: released Fabric 1.2.0
  - [Feature] #22: Enhanced @task to add aliasing, per-module default
    tasks, and control over the wrapping task class. Thanks to Travis
    Swicegood for the initial work and collaboration.
  - [Bug] #380: Improved unicode support when testing objects for being
    string-like. Thanks to Jiri Barton for catch & patch.
  - [Support] #382: Experimental overhaul of changelog formatting &
    process to make supporting multiple lines of development less of a
    hassle.

-------------------------------------------------------------------
Thu Jun 30 11:10:12 UTC 2011 - alexandre@exatati.com.br

- Update to 1.1.1:
  - The public API for Task mentioned use of the run() method, but
    Fabric’s main execution loop had not been updated to look for
    and call it, forcing users who subclassed Task to define
    __call__() instead. This was an oversight and has been corrected.

-------------------------------------------------------------------
Tue Jun  7 23:21:42 UTC 2011 - alexandre@exatati.com.br

- Rename to python-Fabric as following conventions;
- Now BuildRequires and Requires python-distribute instead of
  python-setuptools.

-------------------------------------------------------------------
Tue Mar 29 01:21:24 UTC 2011 - alexandre@exatati.com.br

- Update to 1.0.1:
  - #301: Fixed a bug in local‘s behavior when capture=False and
    output.stdout (or .stderr) was also False. Thanks to Chris Rose
    for the catch.
  - #310: Update edge case in put where using the mode kwarg
    alongside use_sudo=True runs a hidden sudo command. The mode
    kwarg needs to be octal but was being interpolated in the sudo
    call as a string/integer. Thanks to Adam Ernst for the catch
    and suggested fix.
  - #311: append was supposed to have its partial kwarg’s default
    flipped from True to False. However, only the documentation was
    altered. This has been fixed. Thanks to Adam Ernst for bringing
    it to our attention.
  - #312: Tweak internal I/O related loops to prevent high CPU
    usage and poor screen-printing behavior on some systems. Thanks
    to Kirill Pinchuk for the initial patch.
  - #320: Some users reported problems with dropped input,
    particularly while entering sudo passwords. This was fixed via
    the same change as for #312.
- Regenerate spec file with py2pack;
- Add README file as documentation.

-------------------------------------------------------------------
Sat Mar  5 15:36:59 UTC 2011 - alexandre@exatati.com.br

- Update to 1.0.0:
  - #7: run/sudo now allow full interactivity with the remote end.
    You can interact with remote prompts and similar interfaces,
    making certain tasks much easier, and freeing you from the
    need to find noninteractive solutions if you don’t want to.
    See Interaction with remote programs for more on these changes.
  - put and get received many updates, including but not limited
    to: recursion, globbing, inline sudo capability, and increased
    control over local file paths. See the individual ticket
    line-items below for details. Erich Heine (sophacles on IRC)
    played a large part in implementing and/or collecting these
    changes and deserves much of the credit.
  - Added functionality for loading fabfiles which are Python
    packages (directories) instead of just modules (single files).
    This allows for easier organization of nontrivial fabfiles
    and paves the way for task namespacing in the near future.
    See Fabfile discovery for details.
  - #185: Mostly of interest to those contributing to Fabric
    itself, Fabric now leverages Paramiko to provide a stub SSH
    and SFTP server for use during runs of our test suite. This
    makes quick, configurable full-stack testing of Fabric (and,
    to an extent, user fabfiles) possible.
- To check feature additions and backwards-incompatible changes
  please check:
  http://readthedocs.org/docs/fabric/en/1.0.0/changes/1.0.html

-------------------------------------------------------------------
Sat Feb 19 10:29:31 UTC 2011 - alexandre@exatati.com.br

- Update to 0.9.4:
  - Added documentation for using Fabric as a library.
  - Mentioned our Twitter account on the main docs page.
  - #290: Added escape kwarg to append to allow control over
    previously automatic single-quote escaping.

-------------------------------------------------------------------
Mon Nov 15 23:54:11 UTC 2010 - alexandre@exatati.com.br

- Update to 0.9.3;
- Fixed Requires and BuildRequires in spec file.

-------------------------------------------------------------------
Wed Sep  8 01:26:05 UTC 2010 - alexandre@exatati.com.br

- Update to 0.9.2.

-------------------------------------------------------------------
Sat May 29 11:30:45 UTC 2010 - alexandre@exatati.com.br

- Update to 0.9.1;
- Building as noarch for openSUSE >= 11.2.
- Spec file cleaned with spec-cleaner.

-------------------------------------------------------------------
Fri Mar  5 18:14:25 UTC 2010 - nix@opensuse.org

- Update to 0.9.0

-------------------------------------------------------------------
Tue Sep 15 11:18:46 UTC 2009 - alexandre@exatati.com.br

- Initial package (0.1.1) for openSUSE.

