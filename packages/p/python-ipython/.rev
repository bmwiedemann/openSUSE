<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>1dbd9be3c4988d7d2e83e5689db702cc</srcmd5>
    <version>7.5.0</version>
    <time>1558515869</time>
    <user>dimstar_suse</user>
    <comment>- Update to 7.5.0
  * IPython 7.5.0 consist mostly of bug-fixes, and documentation updates,
    with one minor new feature. The Audio display element can now be
    assigned an element id when displayed in browser.
  * The major outstanding bug fix correct a change of behavior that was
    introduce in 7.4.0 where some cell magics would not be able to access
    or modify global scope when using the @needs_local_scope decorator.
    This was typically encountered with the %%time and %%timeit magics.
- Rename package to follow python package guidelines.
- update to version 7.4.0:
  * Previously, we provided completion for a unicode name with its
    relative symbol.With this, now IPython provides complete
    suggestions to unicode name symbols.
  * Make audio normalization optional
  * Miscelanious
    + Fix improper acceptation of &quot;return&quot; outside of
      functions. :ghpull:`11641`.
    + Fixed PyQt 5.11 backwards incompatibility causing sip import
      failure.  :ghpull:`11613`.
    + Fix Bug where &quot;type?&quot; woudl crash IPython. :ghpull:`1608`.
    + Allow to apply &quot;@needs_local_scope&quot; to cell magics for
      convenience.  :ghpull:`11542`.
- specfile:
  * update copyright year
- update to version 7.3.0:
  * The biggest change to this release is the implementation of the
    &quot;%conda&quot; and &quot;%pip&quot; magics, that will attempt to install packages
    in the **current environment**. You may still need to restart your
    interpreter or kernel for the change to be taken into account, but
    it should simplify installation of packages into remote
    environment. Installing using pip/conda from the command line is
    still the prefer method.
  * The &quot;%pip&quot; magic was already present, but was only printing a
    warning; now it will actually forward commands to pip.
  * Misc bug fixes and improvements:
    + Compatibility with Python 3.8.
    + Do not expand shell variable in execution magics, and added the
      &quot;no_var_expand&quot; decorator for magic requiring a similar
      functionality :ghpull:`11516`
    + Add &quot;%pip&quot; and &quot;%conda&quot; magic :ghpull:`11524`
    + Re-initialize posix aliases after a &quot;%reset&quot; :ghpull:`11528`
    + Allow the IPython command line to run &quot;*.ipynb&quot; files
      :ghpull:`11529`
- Update to version 7.2.0
  * Fix a bug preventing PySide2 GUI integration from working :ghpull:`11464`
  * Run CI on Mac OS ! :ghpull:`11471`
  * Fix IPython &quot;Demo&quot; mode. :ghpull:`11498`
  * Fix ``%run`` magic  with path in name :ghpull:`11499`
  * Fix: add CWD to sys.path *after* stdlib :ghpull:`11502`
  * Better rendering of signatures, especially long ones. :ghpull:`11505`
  * Re-enable jedi by default if it's installed :ghpull:`11506`
  * Add New ``minimal`` exception reporting mode (useful for educational purpose). See :ghpull:`11509`
- Update to version 7.1.0
  + Notable Changes
    * Major update of &quot;latex to unicode&quot; tab completion map (see below)
  + Notable New Features:
    * Restore functionality and documentation of the **sphinx directive**, which
      is now stricter (fail on error by daefault), has new configuration options,
      has a brand new documentation page :ref:`ipython_directive` (which needs
      some cleanup). It is also now *tested* so we hope to have less regressions.
     :ghpull:`11402`
    * ``IPython.display.Video`` now supports ``width`` and ``height`` arguments,
      allowing a custom width and height to be set instead of using the video's
      width and height. :ghpull:`11353`
    * Warn when using ``HTML('&lt;iframe&gt;')`` instead of ``IFrame`` :ghpull:`11350`
    * Allow Dynamic switching of editing mode between vi/emacs and show
      normal/input mode in prompt when using vi. :ghpull:`11390`. Use ``%config
      TerminalInteractiveShell.editing_mode = 'vi'`` or ``%config
      TerminalInteractiveShell.editing_mode = 'emacs'`` to dynamically switch
      between modes.
  + Notable Fixes:
    * Fix entering of **multi-line blocks in terminal** IPython, and various
      crashes in the new input transformation machinery :ghpull:`11354`,
      :ghpull:`11356`, :ghpull:`11358`. These also fix a **Compatibility bug
      with Python 3.7.1**.
    * Fix moving through generator stack in ipdb :ghpull:`11266`
    * %Magic command arguments now support quoting. :ghpull:`11330`
    * Re-add ``rprint`` and ``rprinte`` aliases. :ghpull:`11331`
    * Remove implicit dependency on ``ipython_genutils`` :ghpull:`11317`
    * Make ``nonlocal`` raise ``SyntaxError`` instead of silently failing in async
      mode. :ghpull:`11382`
    * Fix mishandling of magics and ``= !`` assignment just after a dedent in
      nested code blocks :ghpull:`11418`
    * Fix instructions for custom shortcuts :ghpull:`11426`
  + Notable Internals improvements:
    * Use of ``os.scandir`` (Python 3 only) to speed up some file system operations.
      :ghpull:`11365`
    * use ``perf_counter`` instead of ``clock`` for more precise
      timing results with ``%time`` :ghpull:`11376`
- Remove upstream-included fix_test_history.patch
- Update to version 7.0.1
  Highlights
  * IPython 7.0+ now uses prompt_toolkit 2.0
  * IPython can automatically await code at top level, you should
    not need to access an event loop or runner yourself.
  * The magic %autoreload 2 now captures new methods added to
    classes. Earlier, only methods existing as of the initial
    import were being tracked and updated.
  * The autoindent feature that was deprecated in 5.x was
    re-enabled and un-deprecated.
  * Make %run -n -i ... work correctly. Earlier, if %run was
    passed both arguments, -n would be silently ignored.
  * The %%script (as well as %%bash, %%ruby, ... ) cell magics
    now raise by default if the return code of the given code is
    non-zero (thus halting execution of further cells in a
    notebook). The behavior can be disable by passing the 
    --no-raise-error flag.
- Add fix_test_history.patch
  Fixes failure in test_history.py for sqlite &gt;= 3.25
  Should be fixed in next release
  see https://github.com/ipython/ipython/issues/11372
- Update to version 6.5.0
  * Autocompletion fix for modules with out __init__.py :ghpull:`11227`
  * update the %pastebin magic to use dpaste.com instead og GitHub Gist which now requires authentication :ghpull:`11182`
  * Fix crash with multiprocessing :ghpull:`11185`
- Switch to using upstream documentation builds
- Update to version 6.4.0
  * Fix display object not emitting metadata :ghpull:`11106`
  * Comments failing Jedi test :ghpull:`11110` 
- Remove upstream-included disable_jedi_in_tests.patch
- Add disable_jedi_in_tests.patch
  Upstream bug: https://github.com/ipython/ipython/issues/11103
  From: https://github.com/ipython/ipython/pull/11113
  Should be in next release
- specfile:
  * add python-backcall dependency
  * fix 'provides' syntax
- update to version 6.3.1:
  * This is a bugfix release to switch the default completions back to
    IPython's own completion machinery. We discovered some problems
    with the completions from Jedi, including completing column names
    on pandas data frames.
- changes from version 6.3:
  * A new display class :class:`IPython.display.Code` can be used to
    display syntax highlighted code in a notebook (:ghpull:`10978`).
  * The :cellmagic:`html` magic now takes a &quot;--isolated&quot; option to put
    the content in an iframe (:ghpull:`10962`).
  * The code to find completions using the Jedi library has had
    various adjustments. This is still a work in progress, but we hope
    this version has fewer annoyances (:ghpull:`10956`,
    :ghpull:`10969`, :ghpull:`10999`, :ghpull:`11035`,
    :ghpull:`11063`, :ghpull:`11065`).
  * The *post* event callbacks are now always called, even when the
    execution failed (for example because of a &quot;SyntaxError&quot;).
  * The execution info and result objects are now made available in
    the corresponding *pre* or *post* &quot;*_run_cell&quot; :doc:`event
    callbacks &lt;/config/callbacks&gt;` in a backward compatible manner
    (:ghissue:`10774` and :ghpull:`10795`).
  * Performance with very long code cells (hundreds of lines) is
    greatly improved (:ghpull:`10898`). Further improvements are
    planned for IPython 7.
- Update url
- update to version 6.2.1:
  * IPython 6.2.1 ships with two minor fixes leading to no completions
    when using Jedi 0.11+ :ghpull:`10829`, and crash on some linux
    system with virtualenv :ghpull:`10829`
- Fix conflict with old python3-jupyter_ipython-doc
- Update to version 6.2.0
  * Function signature in completions
  * Assignments return values
  * Recursive Call of ipdb
  * System Wide config
  * ProgressBar
  * Fix ``IPython.core.display:Pretty._repr_pretty_`` had the wrong signature.
  * :magic:`timeit` now give a correct ``SyntaxError`` if naked ``return`` used.
  * Prepare the ``:ipython:`` directive to be compatible with Sphinx 1.7.
  * Make IPython work with OpenSSL in FIPS mode; change hash algorithm of input
    from md5 to sha1.
  * Clear breakpoints before running any script with debugger.
  * Document that :magic:`profile` is deprecated, not to be confused with :magic:`prun`.
  * Limit default number of returned completions to 500.
- Implement single-spec version
- Update to version 6.1.0
  * Quotes in a filename are always escaped during tab-completion on non-Windows.
    :ghpull:`10069`
  * Variables now shadow magics in autocompletion. See :ghissue:`4877` and :ghpull:`10542`.
  * Added the ability to add parameters to alias_magic.
  * To suppress log state messages, you can now either use ``%logstart -q``, pass
    ``--LoggingMagics.quiet=True`` on the command line, or set
    ``c.LoggingMagics.quiet=True`` in your configuration file.
  * An additional flag ``--TerminalInteractiveShell.term_title_format`` is
    introduced to allow the user to control the format of the terminal title.  It
    is specified as a python format string, and currently the only variable it
    will format is ``{cwd}``.
  * ``??``/``%pinfo2`` will now show object docstrings if the source can't be retrieved. :ghpull:`10532`
  * ``IPython.display`` has gained a ``%markdown`` cell magic. :ghpull:`10563`
  * ``%config`` options can now be tab completed. :ghpull:`10555`
  * ``%config`` with no arguments are now unique and sorted. :ghpull:`10548`
  * Completion on keyword arguments does not duplicate ``=`` sign if already present. :ghpull:`10547`
  * ``%run -m &lt;module&gt;`` now ``&lt;module&gt;`` passes extra arguments to ``&lt;module&gt;``. :ghpull:`10546`
  * completer now understand &quot;snake case auto complete&quot;: if ``foo_bar_kittens`` is
    a valid completion, I can type ``f_b&lt;tab&gt;`` will complete to it. :ghpull:`10537`
  * tracebacks are better standardized and will compress `/path/to/home` to `~`. :ghpull:`10515`
  * ``TerminalInteractiveShell`` is configurable and can be configured to
    (re)-use the readline interface.
  * objects can now define a ``_repr_mimebundle_``
  * Execution heuristics improve for single line statements
  * ``display()`` can now return a display id to update display areas.
- Update to version 6.0.0
  * A major improvement in the completion machinery which is now capable of
    completing non-executed code. 
  * stop compatibility with Python 2, which is still supported on the bugfix
    only 5.x branch. 
  * Configurable TerminalInteractiveShell, readline interface
  * The :cellmagic:`capture` magic can now capture the result of a cell (from
    an expression on the last line), as well as printed and displayed output.
  * Pressing Ctrl-Z in the terminal debugger now suspends IPython, as it
    already does in the main terminal prompt.
  * Autoreload can now reload ``Enum``.
  * IPython.display has gained a :any:`GeoJSON &lt;IPython.display.GeoJSON&gt;`
    object.
    
- Update to version 5.4.1
  * Released a few hours after 5.4, fix a crash when
    ``backports.shutil-get-terminal-size`` is not installed. :ghissue:`10629`
- Update to version 5.4
  * Configurable TerminalInteractiveShell
  * Define ``_repr_mimebundle_``
  * Execution Heuristics
  * Implement Display IDs
  * Display function
  * ``_mp_main_`` is not reloaded which fixes issues with multiprocessing.
    :ghpull:`10523`
  * Use user colorscheme in Pdb as well :ghpull:`10479`
  * Faster shutdown. :ghpull:`10408` 
  * Fix a crash in reverse search. :ghpull:`10371`
  * added ``Completer.backslash_combining_completions`` boolean option to
    deactivate backslash-tab completion that may conflict with windows path. 
- Fix building on platforms without icoutils
- Fix shebang rpmint errors.
- Add note about LTS status and the end of Python 2 support.
- Add python2- provides.
- Neither HTML nor PDF documentation will ever work again,
  so drop it.
- Update to IPython 5.3
  * Fix a bug in ``set_next_input`` leading to a crash of terminal IPython.
    :ghpull:`10231`, :ghissue:`10296`, :ghissue:`10229`
  * Always wait for editor inputhook for terminal IPython :ghpull:`10239`,
    :ghpull:`10240`
  * Disable ``_ipython_display_`` in terminal :ghpull:`10249`, :ghpull:`10274`
  * Update terminal colors to be more visible by default on windows
    :ghpull:`10260`, :ghpull:`10238`, :ghissue:`10281`
  * Add Ctrl-Z shortcut (suspend) in terminal debugger :ghpull:`10254`,
    :ghissue:`10273`
  * Indent on new line by looking at the text before the cursor :ghpull:`10264`,
    :ghpull:`10275`, :ghissue:`9283`
  * Update QtEventloop integration to fix some matplotlib integration issues
    :ghpull:`10201`, :ghpull:`10311`, :ghissue:`10201`
  * Respect completions display style in terminal debugger :ghpull:`10305`,
    :ghpull:`10313`
  * Add a config option ``TerminalInteractiveShell.extra_open_editor_shortcuts``
    to enable extra shortcuts to open the input in an editor. These are :kbd:`v`
    in vi mode, and :kbd:`C-X C-E` in emacs mode (:ghpull:`10330`).
    The :kbd:`F2` shortcut is always enabled.
- Update to IPython 5.2.2
  * Fix error when starting with ``IPCompleter.limit_to__all__`` configured.
- Update to IPython 5.2.1
  * Fix tab completion in the debugger. :ghpull:`10223`
- Update to IPython 5.2
  * restore IPython's debugger to raise on quit. :ghpull:`10009`
  * The configuration value ``c.TerminalInteractiveShell.highlighting_style`` can
    now directly take a class argument for custom color style. :ghpull:`9848`
  * Correctly handle matplotlib figures dpi :ghpull:`9868`
  * Deprecate ``-e`` flag for the ``%notebook`` magic that had no effects.
    :ghpull:`9872`
  * You can now press F2 while typing at a terminal prompt to edit the contents
    in your favourite terminal editor. Set the :envvar:`EDITOR` environment
    variable to pick which editor is used. :ghpull:`9929`
  * sdists will now only be ``.tar.gz`` as per upstream PyPI requirements.
    :ghpull:`9925`
  * :any:`IPython.core.debugger` have gained a ``set_trace()`` method for
    convenience. :ghpull:`9947`
  * The 'smart command mode' added to the debugger in 5.0 was removed, as more
    people preferred the previous behaviour. Therefore, debugger commands such as
    ``c`` will act as debugger commands even when ``c`` is defined as a variable.
    :ghpull:`10050`
  * Fixes OS X event loop issues at startup, :ghpull:`10150`
  * Deprecate the ``%autoindent`` magic. :ghpull:`10176`
  * Emit a :any:`DeprecationWarning` when setting the deprecated
    ``limit_to_all`` option of the completer. :ghpull:`10198`
  * The :cellmagic:`capture` magic can now capture the result of a cell (from an
    expression on the last line), as well as printed and displayed output.
    :ghpull:`9851`.
- Update to IPython 5.1
  * Broken ``%timeit`` on Python2 due to the use of ``__qualname__``. :ghpull:`9804`
  * Restore ``%gui qt`` to create and return a ``QApplication`` if necessary. :ghpull:`9789`
  * Don't set terminal title by default. :ghpull:`9801`
  * Preserve indentation when inserting newlines with ``Ctrl-O``. :ghpull:`9770`
  * Restore completion in debugger. :ghpull:`9785`
  * Deprecate ``IPython.core.debugger.Tracer()`` in favor of simpler, newer, APIs. :ghpull:`9731`
  * Restore ``NoOpContext`` context manager removed by mistake, and add `DeprecationWarning`. :ghpull:`9765`
  * Add option allowing ``Prompt_toolkit`` to use 24bits colors. :ghpull:`9736`
  * Fix for closing interactive matplotlib windows on OS X. :ghpull:`9854`
  * An embedded interactive shell instance can be used more than once. :ghpull:`9843`
  * More robust check for whether IPython is in a terminal. :ghpull:`9833`
  * Better pretty-printing of dicts on PyPy. :ghpull:`9827`
  * Some coloured output now looks better on dark background command prompts in Windows.
    :ghpull:`9838`
  * Improved tab completion of paths on Windows . :ghpull:`9826`
  * Fix tkinter event loop integration on Python 2 with ``future`` installed. :ghpull:`9824`
  * Restore ``Ctrl-\`` as a shortcut to quit IPython.
  * Make ``get_ipython()`` accessible when modules are imported by startup files. :ghpull:`9818`
  * Add support for running directories containing a ``__main__.py`` file with the
    ``ipython`` command. :ghpull:`9813`
- Update to IPython 5.0
  + IPython 5 features a major upgrade to the terminal interface, bringing live
    syntax highlighting as you type, proper multiline editing and multiline paste,
    and tab completions that don't clutter up your history.
  + Backwards incompatible changes
    * The ``%install_ext`` magic function, deprecated since 4.0, has now been deleted.
      You can distribute and install extensions as packages on PyPI.
    * Callbacks registered while an event is being handled will now only be called
      for subsequent events; previously they could be called for the current event.
      Similarly, callbacks removed while handling an event *will* always get that
      event. See :ghissue:`9447` and :ghpull:`9453`.
    * Integration with pydb has been removed since pydb development has been stopped
      since 2012, and pydb is not installable from PyPI.
    * The ``autoedit_syntax`` option has apparently been broken for many years.
      It has been removed.
    * The overhaul of the terminal interface will probably cause a range of minor
      issues for existing users.
    * IPython no longer uses readline configuration (``~/.inputrc``). We hope that
      the functionality you want (e.g. vi input mode) will be available by configuring
      IPython directly (see :doc:`/config/options/terminal`).
    * The ``PromptManager`` class has been removed, and the prompt machinery simplified.
    * There are new options to configure the colours used in syntax highlighting.
      We have tried to integrate them with our classic  ``--colors`` option and
     ``%colors`` magic, but there's a mismatch in possibilities, so some configurations
     may produce unexpected results. See :ref:`termcolour` for more information.
    * The new interface is not compatible with Emacs 'inferior-shell' feature. To
      continue using this, add the ``--simple-prompt`` flag to the command Emacs
      runs. This flag disables most IPython features, relying on Emacs to provide
      things like tab completion.
  + Provisional Changes
    * When running via the Jupyter notebook interfaces, or other compatible client,
      you can enable rich documentation experimental functionality:
      When the ``docrepr`` package is installed setting the boolean flag
      ``InteractiveShell.sphinxify_docstring`` to ``True``, will process the various
      object through sphinx before displaying them (see the ``docrepr`` package
      documentation for more information.
  + Deprecated Features
    * ``hooks.fix_error_editor`` seems unused and is pending deprecation.
    * `IPython/core/excolors.py:ExceptionColors` is  deprecated.
    * `IPython.core.InteractiveShell:write()` is deprecated; use `sys.stdout` instead.
    * `IPython.core.InteractiveShell:write_err()` is deprecated; use `sys.stderr` instead.
    * The `formatter` keyword argument to `Inspector.info` in `IPython.core.oinspec` has no effect.
    * The `global_ns` keyword argument of IPython Embed was deprecated, and has no effect. Use `module` keyword argument instead.
- Update to IPython 4.2
  * Fix ``ipython -i`` on errors, which was broken in 4.1.
  * The delay meant to highlight deprecated commands that have moved to jupyter has been removed.
  * Improve compatibility with future versions of traitlets and matplotlib.
  * Use stdlib :func:`python:shutil.get_terminal_size` to measure terminal width when displaying tracebacks
    (provided by ``backports.shutil_get_terminal_size`` on Python 2).
- Update to IPython 4.1.2
  * fixes installation issues with some versions of setuptools.
- specfile:
  * update copyright year
  * Simplify tests for determining whether to build pdf documentation
- update to version 4.1.1:
  * Backport #9209: Don't import IPython to check version number in
    setup
- Update to 4.1.0
  * Release February, 2016. IPython 4.1 contain mostly bug fixes.
    It though contain a few improvement.
  * IPython debugger (IPdb) now supports the number of context
    lines for the where (and w) commands. The context keyword is
    also available in various APIs. See PR :ghpull:`9097`
  * YouTube video will now show thumbnail when exported to a media
    that do not support video. (:ghpull:`9086`)
  * Add warning when running ipython &lt;subcommand&gt; when subcommand
    is deprecated. jupyter should now be used.
  * Code in %pinfo (also known as ??) are now highlighter
    (:ghpull:`8947`)
  * %aimport now support module completion. (:ghpull:`8884`)
  * ipdb output is now colored ! (:ghpull:`8842`)
  * Add ability to transpose columns for completion:
    (:ghpull:`8748`)
  * Many many docs improvements and bug fixes
- update to version 4.0.3:
  * Python 3.5 bug in that could crash during shutdown, triggered by
    deprecations in traitlets 4.1.
  * Typo in deprecation message for nbconvert
- update to version 4.0.2:
  * Fix backward-compatiblity shim for &quot;IPython.Config&quot;, which
    should have been deprecated instead of removed. This will be
    removed in 5.0.
- update to version 4.0.1:
  * Installation on some systems
  * Compatibility with CPython 3.4.4
  * Compatibility with Qt5
- Build documentation
  This is in a separate spec file to avoid dependency loops
- Obsolete IPython
- Split the iptest executable into its own subpackage
  This has a bunch of testing dependencies that are not otherwise
  necessary.
- Update to 7.5.0
  * IPython 7.5.0 consist mostly of bug-fixes, and documentation updates,
    with one minor new feature. The Audio display element can now be
    assigned an element id when displayed in browser.
  * The major outstanding bug fix correct a change of behavior that was
    introduce in 7.4.0 where some cell magics would not be able to access
    or modify global scope when using the @needs_local_scope decorator.
    This was typically encountered with the %%time and %%timeit magics.
- Rename package to follow python package guidelines.
- update to version 7.4.0:
  * Previously, we provided completion for a unicode name with its
    relative symbol.With this, now IPython provides complete
    suggestions to unicode name symbols.
  * Make audio normalization optional
  * Miscelanious
    + Fix improper acceptation of &quot;return&quot; outside of
      functions. :ghpull:`11641`.
    + Fixed PyQt 5.11 backwards incompatibility causing sip import
      failure.  :ghpull:`11613`.
    + Fix Bug where &quot;type?&quot; woudl crash IPython. :ghpull:`1608`.
    + Allow to apply &quot;@needs_local_scope&quot; to cell magics for
      convenience.  :ghpull:`11542`.
- specfile:
  * update copyright year
- update to version 7.3.0:
  * The biggest change to this release is the implementation of the
    &quot;%conda&quot; and &quot;%pip&quot; magics, that will attempt to install packages
    in the **current environment**. You may still need to restart your
    interpreter or kernel for the change to be taken into account, but
    it should simplify installation of packages into remote
    environment. Installing using pip/conda from the command line is
    still the prefer method.
  * The &quot;%pip&quot; magic was already present, but was only printing a
    warning; now it will actually forward commands to pip.
  * Misc bug fixes and improvements:
    + Compatibility with Python 3.8.
    + Do not expand shell variable in execution magics, and added the
      &quot;no_var_expand&quot; decorator for magic requiring a similar
      functionality :ghpull:`11516`
    + Add &quot;%pip&quot; and &quot;%conda&quot; magic :ghpull:`11524`
    + Re-initialize posix aliases after a &quot;%reset&quot; :ghpull:`11528`
    + Allow the IPython command line to run &quot;*.ipynb&quot; files
      :ghpull:`11529`
- Update to version 7.2.0
  * Fix a bug preventing PySide2 GUI integration from working :ghpull:`11464`
  * Run CI on Mac OS ! :ghpull:`11471`
  * Fix IPython &quot;Demo&quot; mode. :ghpull:`11498`
  * Fix ``%run`` magic  with path in name :ghpull:`11499`
  * Fix: add CWD to sys.path *after* stdlib :ghpull:`11502`
  * Better rendering of signatures, especially long ones. :ghpull:`11505`
  * Re-enable jedi by default if it's installed :ghpull:`11506`
  * Add New ``minimal`` exception reporting mode (useful for educational purpose). See :ghpull:`11509`
- Update to version 7.1.0
  + Notable Changes
    * Major update of &quot;latex to unicode&quot; tab completion map (see below)
  + Notable New Features:
    * Restore functionality and documentation of the **sphinx directive**, which
      is now stricter (fail on error by daefault), has new configuration options,
      has a brand new documentation page :ref:`ipython_directive` (which needs
      some cleanup). It is also now *tested* so we hope to have less regressions.
     :ghpull:`11402`
    * ``IPython.display.Video`` now supports ``width`` and ``height`` arguments,
      allowing a custom width and height to be set instead of using the video's
      width and height. :ghpull:`11353`
    * Warn when using ``HTML('&lt;iframe&gt;')`` instead of ``IFrame`` :ghpull:`11350`
    * Allow Dynamic switching of editing mode between vi/emacs and show
      normal/input mode in prompt when using vi. :ghpull:`11390`. Use ``%config
      TerminalInteractiveShell.editing_mode = 'vi'`` or ``%config
      TerminalInteractiveShell.editing_mode = 'emacs'`` to dynamically switch
      between modes.
  + Notable Fixes:
    * Fix entering of **multi-line blocks in terminal** IPython, and various
      crashes in the new input transformation machinery :ghpull:`11354`,
      :ghpull:`11356`, :ghpull:`11358`. These also fix a **Compatibility bug
      with Python 3.7.1**.
    * Fix moving through generator stack in ipdb :ghpull:`11266`
    * %Magic command arguments now support quoting. :ghpull:`11330`
    * Re-add ``rprint`` and ``rprinte`` aliases. :ghpull:`11331`
    * Remove implicit dependency on ``ipython_genutils`` :ghpull:`11317`
    * Make ``nonlocal`` raise ``SyntaxError`` instead of silently failing in async
      mode. :ghpull:`11382`
    * Fix mishandling of magics and ``= !`` assignment just after a dedent in
      nested code blocks :ghpull:`11418`
    * Fix instructions for custom shortcuts :ghpull:`11426`
  + Notable Internals improvements:
    * Use of ``os.scandir`` (Python 3 only) to speed up some file system operations.
      :ghpull:`11365`
    * use ``perf_counter`` instead of ``clock`` for more precise
      timing results with ``%time`` :ghpull:`11376`
- Remove upstream-included fix_test_history.patch
- Update to version 7.0.1
  Highlights
  * IPython 7.0+ now uses prompt_toolkit 2.0
  * IPython can automatically await code at top level, you should
    not need to access an event loop or runner yourself.
  * The magic %autoreload 2 now captures new methods added to
    classes. Earlier, only methods existing as of the initial
    import were being tracked and updated.
  * The autoindent feature that was deprecated in 5.x was
    re-enabled and un-deprecated.
  * Make %run -n -i ... work correctly. Earlier, if %run was
    passed both arguments, -n would be silently ignored.
  * The %%script (as well as %%bash, %%ruby, ... ) cell magics
    now raise by default if the return code of the given code is
    non-zero (thus halting execution of further cells in a
    notebook). The behavior can be disable by passing the 
    --no-raise-error flag.
- Add fix_test_history.patch
  Fixes failure in test_history.py for sqlite &gt;= 3.25
  Should be fixed in next release
  see https://github.com/ipython/ipython/issues/11372
- Fix prompt_toolkit dependency.
- Update to version 6.5.0
  * Autocompletion fix for modules with out __init__.py :ghpull:`11227`
  * update the %pastebin magic to use dpaste.com instead og GitHub Gist which now requires authentication :ghpull:`11182`
  * Fix crash with multiprocessing :ghpull:`11185`
- Switch to using upstream documentation builds
- Not compatible with prompt_toolkit 2.x
- Update to version 6.4.0
  * Fix display object not emitting metadata :ghpull:`11106`
  * Comments failing Jedi test :ghpull:`11110` 
- Remove upstream-included disable_jedi_in_tests.patch
- Add disable_jedi_in_tests.patch
  Upstream bug: https://github.com/ipython/ipython/issues/11103
  From: https://github.com/ipython/ipython/pull/11113
  Should be in next release
- Add backcall dependency
- update to version 6.3.1:
  * This is a bugfix release to switch the default completions back to
    IPython's own completion machinery. We discovered some problems
    with the completions from Jedi, including completing column names
    on pandas data frames.
- changes from version 6.3:
  * A new display class :class:`IPython.display.Code` can be used to
    display syntax highlighted code in a notebook (:ghpull:`10978`).
  * The :cellmagic:`html` magic now takes a &quot;--isolated&quot; option to put
    the content in an iframe (:ghpull:`10962`).
  * The code to find completions using the Jedi library has had
    various adjustments. This is still a work in progress, but we hope
    this version has fewer annoyances (:ghpull:`10956`,
    :ghpull:`10969`, :ghpull:`10999`, :ghpull:`11035`,
    :ghpull:`11063`, :ghpull:`11065`).
  * The *post* event callbacks are now always called, even when the
    execution failed (for example because of a &quot;SyntaxError&quot;).
  * The execution info and result objects are now made available in
    the corresponding *pre* or *post* &quot;*_run_cell&quot; :doc:`event
    callbacks &lt;/config/callbacks&gt;` in a backward compatible manner
    (:ghissue:`10774` and :ghpull:`10795`).
  * Performance with very long code cells (hundreds of lines) is
    greatly improved (:ghpull:`10898`). Further improvements are
    planned for IPython 7.
- Update url
- update to version 6.2.1:
  * IPython 6.2.1 ships with two minor fixes leading to no completions
    when using Jedi 0.11+ :ghpull:`10829`, and crash on some linux
    system with virtualenv :ghpull:`10829`
- Update to version 6.2.0
  * Function signature in completions
  * Assignments return values
  * Recursive Call of ipdb
  * System Wide config
  * ProgressBar
  * Fix ``IPython.core.display:Pretty._repr_pretty_`` had the wrong signature.
  * :magic:`timeit` now give a correct ``SyntaxError`` if naked ``return`` used.
  * Prepare the ``:ipython:`` directive to be compatible with Sphinx 1.7.
  * Make IPython work with OpenSSL in FIPS mode; change hash algorithm of input
    from md5 to sha1.
  * Clear breakpoints before running any script with debugger.
  * Document that :magic:`profile` is deprecated, not to be confused with :magic:`prun`.
  * Limit default number of returned completions to 500.
- Implement single-spec version
- Update to version 6.1.0
  * Quotes in a filename are always escaped during tab-completion on non-Windows.
    :ghpull:`10069`
  * Variables now shadow magics in autocompletion. See :ghissue:`4877` and :ghpull:`10542`.
  * Added the ability to add parameters to alias_magic.
  * To suppress log state messages, you can now either use ``%logstart -q``, pass
    ``--LoggingMagics.quiet=True`` on the command line, or set
    ``c.LoggingMagics.quiet=True`` in your configuration file.
  * An additional flag ``--TerminalInteractiveShell.term_title_format`` is
    introduced to allow the user to control the format of the terminal title.  It
    is specified as a python format string, and currently the only variable it
    will format is ``{cwd}``.
  * ``??``/``%pinfo2`` will now show object docstrings if the source can't be retrieved. :ghpull:`10532`
  * ``IPython.display`` has gained a ``%markdown`` cell magic. :ghpull:`10563`
  * ``%config`` options can now be tab completed. :ghpull:`10555`
  * ``%config`` with no arguments are now unique and sorted. :ghpull:`10548`
  * Completion on keyword arguments does not duplicate ``=`` sign if already present. :ghpull:`10547`
  * ``%run -m &lt;module&gt;`` now ``&lt;module&gt;`` passes extra arguments to ``&lt;module&gt;``. :ghpull:`10546`
  * completer now understand &quot;snake case auto complete&quot;: if ``foo_bar_kittens`` is
    a valid completion, I can type ``f_b&lt;tab&gt;`` will complete to it. :ghpull:`10537`
  * tracebacks are better standardized and will compress `/path/to/home` to `~`. :ghpull:`10515`
  * ``TerminalInteractiveShell`` is configurable and can be configured to
    (re)-use the readline interface.
  * objects can now define a ``_repr_mimebundle_``
  * Execution heuristics improve for single line statements
  * ``display()`` can now return a display id to update display areas.
- Update to version 6.0.0
  * A major improvement in the completion machinery which is now capable of
    completing non-executed code. 
  * stop compatibility with Python 2, which is still supported on the bugfix
    only 5.x branch. 
  * Configurable TerminalInteractiveShell, readline interface
  * The :cellmagic:`capture` magic can now capture the result of a cell (from
    an expression on the last line), as well as printed and displayed output.
  * Pressing Ctrl-Z in the terminal debugger now suspends IPython, as it
    already does in the main terminal prompt.
  * Autoreload can now reload ``Enum``.
  * IPython.display has gained a :any:`GeoJSON &lt;IPython.display.GeoJSON&gt;`
    object.
- Update to version 5.4.1
  * Released a few hours after 5.4, fix a crash when
    ``backports.shutil-get-terminal-size`` is not installed. :ghissue:`10629`
- Update to version 5.4
  * Configurable TerminalInteractiveShell
  * Define ``_repr_mimebundle_``
  * Execution Heuristics
  * Implement Display IDs
  * Display function
  * ``_mp_main_`` is not reloaded which fixes issues with multiprocessing.
    :ghpull:`10523`
  * Use user colorscheme in Pdb as well :ghpull:`10479`
  * Faster shutdown. :ghpull:`10408` 
  * Fix a crash in reverse search. :ghpull:`10371`
  * added ``Completer.backslash_combining_completions`` boolean option to
    deactivate backslash-tab completion that may conflict with windows path. 
- Fix building on platforms without icoutils
- Fix shebang rpmint errors.
- Add note about LTS status and the end of Python 2 support.
- Add python2- provides.
- Neither HTML nor PDF documentation will ever work again,
  so drop it.
- Install icons.
- Install .desktop file.
- Update to IPython 5.3
  * Fix a bug in ``set_next_input`` leading to a crash of terminal IPython.
    :ghpull:`10231`, :ghissue:`10296`, :ghissue:`10229`
  * Always wait for editor inputhook for terminal IPython :ghpull:`10239`,
    :ghpull:`10240`
  * Disable ``_ipython_display_`` in terminal :ghpull:`10249`, :ghpull:`10274`
  * Update terminal colors to be more visible by default on windows
    :ghpull:`10260`, :ghpull:`10238`, :ghissue:`10281`
  * Add Ctrl-Z shortcut (suspend) in terminal debugger :ghpull:`10254`,
    :ghissue:`10273`
  * Indent on new line by looking at the text before the cursor :ghpull:`10264`,
    :ghpull:`10275`, :ghissue:`9283`
  * Update QtEventloop integration to fix some matplotlib integration issues
    :ghpull:`10201`, :ghpull:`10311`, :ghissue:`10201`
  * Respect completions display style in terminal debugger :ghpull:`10305`,
    :ghpull:`10313`
  * Add a config option ``TerminalInteractiveShell.extra_open_editor_shortcuts``
    to enable extra shortcuts to open the input in an editor. These are :kbd:`v`
    in vi mode, and :kbd:`C-X C-E` in emacs mode (:ghpull:`10330`).
    The :kbd:`F2` shortcut is always enabled.
- Update to IPython 5.2.2
  * Fix error when starting with ``IPCompleter.limit_to__all__`` configured.
- Update to IPython 5.2.1
  * Fix tab completion in the debugger. :ghpull:`10223`
- Update to IPython 5.2
  * restore IPython's debugger to raise on quit. :ghpull:`10009`
  * The configuration value ``c.TerminalInteractiveShell.highlighting_style`` can
    now directly take a class argument for custom color style. :ghpull:`9848`
  * Correctly handle matplotlib figures dpi :ghpull:`9868`
  * Deprecate ``-e`` flag for the ``%notebook`` magic that had no effects.
    :ghpull:`9872`
  * You can now press F2 while typing at a terminal prompt to edit the contents
    in your favourite terminal editor. Set the :envvar:`EDITOR` environment
    variable to pick which editor is used. :ghpull:`9929`
  * sdists will now only be ``.tar.gz`` as per upstream PyPI requirements.
    :ghpull:`9925`
  * :any:`IPython.core.debugger` have gained a ``set_trace()`` method for
    convenience. :ghpull:`9947`
  * The 'smart command mode' added to the debugger in 5.0 was removed, as more
    people preferred the previous behaviour. Therefore, debugger commands such as
    ``c`` will act as debugger commands even when ``c`` is defined as a variable.
    :ghpull:`10050`
  * Fixes OS X event loop issues at startup, :ghpull:`10150`
  * Deprecate the ``%autoindent`` magic. :ghpull:`10176`
  * Emit a :any:`DeprecationWarning` when setting the deprecated
    ``limit_to_all`` option of the completer. :ghpull:`10198`
  * The :cellmagic:`capture` magic can now capture the result of a cell (from an
    expression on the last line), as well as printed and displayed output.
    :ghpull:`9851`.
- Update to IPython 5.1
  * Broken ``%timeit`` on Python2 due to the use of ``__qualname__``. :ghpull:`9804`
  * Restore ``%gui qt`` to create and return a ``QApplication`` if necessary. :ghpull:`9789`
  * Don't set terminal title by default. :ghpull:`9801`
  * Preserve indentation when inserting newlines with ``Ctrl-O``. :ghpull:`9770`
  * Restore completion in debugger. :ghpull:`9785`
  * Deprecate ``IPython.core.debugger.Tracer()`` in favor of simpler, newer, APIs. :ghpull:`9731`
  * Restore ``NoOpContext`` context manager removed by mistake, and add `DeprecationWarning`. :ghpull:`9765`
  * Add option allowing ``Prompt_toolkit`` to use 24bits colors. :ghpull:`9736`
  * Fix for closing interactive matplotlib windows on OS X. :ghpull:`9854`
  * An embedded interactive shell instance can be used more than once. :ghpull:`9843`
  * More robust check for whether IPython is in a terminal. :ghpull:`9833`
  * Better pretty-printing of dicts on PyPy. :ghpull:`9827`
  * Some coloured output now looks better on dark background command prompts in Windows.
    :ghpull:`9838`
  * Improved tab completion of paths on Windows . :ghpull:`9826`
  * Fix tkinter event loop integration on Python 2 with ``future`` installed. :ghpull:`9824`
  * Restore ``Ctrl-\`` as a shortcut to quit IPython.
  * Make ``get_ipython()`` accessible when modules are imported by startup files. :ghpull:`9818`
  * Add support for running directories containing a ``__main__.py`` file with the
    ``ipython`` command. :ghpull:`9813`
- Update to IPython 5.0
  + IPython 5 features a major upgrade to the terminal interface, bringing live
    syntax highlighting as you type, proper multiline editing and multiline paste,
    and tab completions that don't clutter up your history.
  + Backwards incompatible changes
    * The ``%install_ext`` magic function, deprecated since 4.0, has now been deleted.
      You can distribute and install extensions as packages on PyPI.
    * Callbacks registered while an event is being handled will now only be called
      for subsequent events; previously they could be called for the current event.
      Similarly, callbacks removed while handling an event *will* always get that
      event. See :ghissue:`9447` and :ghpull:`9453`.
    * Integration with pydb has been removed since pydb development has been stopped
      since 2012, and pydb is not installable from PyPI.
    * The ``autoedit_syntax`` option has apparently been broken for many years.
      It has been removed.
    * The overhaul of the terminal interface will probably cause a range of minor
      issues for existing users.
    * IPython no longer uses readline configuration (``~/.inputrc``). We hope that
      the functionality you want (e.g. vi input mode) will be available by configuring
      IPython directly (see :doc:`/config/options/terminal`).
    * The ``PromptManager`` class has been removed, and the prompt machinery simplified.
    * There are new options to configure the colours used in syntax highlighting.
      We have tried to integrate them with our classic  ``--colors`` option and
     ``%colors`` magic, but there's a mismatch in possibilities, so some configurations
     may produce unexpected results. See :ref:`termcolour` for more information.
    * The new interface is not compatible with Emacs 'inferior-shell' feature. To
      continue using this, add the ``--simple-prompt`` flag to the command Emacs
      runs. This flag disables most IPython features, relying on Emacs to provide
      things like tab completion.
  + Provisional Changes
    * When running via the Jupyter notebook interfaces, or other compatible client,
      you can enable rich documentation experimental functionality:
      When the ``docrepr`` package is installed setting the boolean flag
      ``InteractiveShell.sphinxify_docstring`` to ``True``, will process the various
      object through sphinx before displaying them (see the ``docrepr`` package
      documentation for more information.
  + Deprecated Features
    * ``hooks.fix_error_editor`` seems unused and is pending deprecation.
    * `IPython/core/excolors.py:ExceptionColors` is  deprecated.
    * `IPython.core.InteractiveShell:write()` is deprecated; use `sys.stdout` instead.
    * `IPython.core.InteractiveShell:write_err()` is deprecated; use `sys.stderr` instead.
    * The `formatter` keyword argument to `Inspector.info` in `IPython.core.oinspec` has no effect.
    * The `global_ns` keyword argument of IPython Embed was deprecated, and has no effect. Use `module` keyword argument instead.
- Update to IPython 4.2
  * Fix ``ipython -i`` on errors, which was broken in 4.1.
  * The delay meant to highlight deprecated commands that have moved to jupyter has been removed.
  * Improve compatibility with future versions of traitlets and matplotlib.
  * Use stdlib :func:`python:shutil.get_terminal_size` to measure terminal width when displaying tracebacks
    (provided by ``backports.shutil_get_terminal_size`` on Python 2).
- Update to IPython 4.1.2
  * fixes installation issues with some versions of setuptools.
- do not Recommend jupyter_nbconvert (which pulls in texlive)
- specfile:
  * update copyright year
  * Simplify tests for determining whether to build pdf documentation
- update to version 4.1.1:
  * Backport #9209: Don't import IPython to check version number in
    setup
- Update to 4.1.0
  * Release February, 2016. IPython 4.1 contain mostly bug fixes.
    It though contain a few improvement.
  * IPython debugger (IPdb) now supports the number of context
    lines for the where (and w) commands. The context keyword is
    also available in various APIs. See PR :ghpull:`9097`
  * YouTube video will now show thumbnail when exported to a media
    that do not support video. (:ghpull:`9086`)
  * Add warning when running ipython &lt;subcommand&gt; when subcommand
    is deprecated. jupyter should now be used.
  * Code in %pinfo (also known as ??) are now highlighter
    (:ghpull:`8947`)
  * %aimport now support module completion. (:ghpull:`8884`)
  * ipdb output is now colored ! (:ghpull:`8842`)
  * Add ability to transpose columns for completion:
    (:ghpull:`8748`)
  * Many many docs improvements and bug fixes
- update to version 4.0.3:
  * Python 3.5 bug in that could crash during shutdown, triggered by
    deprecations in traitlets 4.1.
  * Typo in deprecation message for nbconvert
- update to version 4.0.2:
  * Fix backward-compatiblity shim for &quot;IPython.Config&quot;, which
    should have been deprecated instead of removed. This will be
    removed in 5.0.
- update to version 4.0.1:
  * Installation on some systems
  * Compatibility with CPython 3.4.4
  * Compatibility with Qt5
- Build documentation
  This is in a separate spec file to avoid dependency loops
- Obsolete IPython
- Split the iptest executable into its own subpackage
  This has a bunch of testing dependencies that are not otherwise
  necessary.
- Add conflict with older versions of IPython
- Initial version
</comment>
    <requestid>698301</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>c1e8bef3899e44cab3129e0e41480518</srcmd5>
    <version>7.6.0</version>
    <time>1562590875</time>
    <user>dimstar_suse</user>
    <comment>- Update to 7.6.0
  IPython 7.6.0 contains a couple of bug fixes and number of small features
  additions as well as some compatibility with the current development version of
  Python 3.8.
  * Add a ``-l`` option to :magic:`psearch` to list the available search
    types.
  * Support ``PathLike`` for ``DisplayObject`` and ``Image``.
  * Configurability of timeout in the test suite for slow platforms.
  * Accept any casing for matplotlib backend.
  * Properly skip test that requires numpy to be installed
  * More support for Python 3.8 and positional only arguments (pep570)
  * Unicode names for the completion are loaded lazily on first use which
    should decrease startup time.
  * Autoreload now update the types of reloaded objects; this for example allow
    pickling of reloaded objects.
  * Fix a big where ``%%time`` magic would suppress cell output.
- Update to 7.6.0
  IPython 7.6.0 contains a couple of bug fixes and number of small features
  additions as well as some compatibility with the current development version of
  Python 3.8.
  * Add a ``-l`` option to :magic:`psearch` to list the available search
    types.
  * Support ``PathLike`` for ``DisplayObject`` and ``Image``.
  * Configurability of timeout in the test suite for slow platforms.
  * Accept any casing for matplotlib backend.
  * Properly skip test that requires numpy to be installed
  * More support for Python 3.8 and positional only arguments (pep570)
  * Unicode names for the completion are loaded lazily on first use which
    should decrease startup time.
  * Autoreload now update the types of reloaded objects; this for example allow
    pickling of reloaded objects.
  * Fix a big where ``%%time`` magic would suppress cell output.
</comment>
    <requestid>713120</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>89d17a85323a415a7df9a9ce441fcb66</srcmd5>
    <version>7.7.0</version>
    <time>1564483061</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>719016</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>fe0b679be3357d1283d9e8e374418d05</srcmd5>
    <version>7.9.0</version>
    <time>1573647175</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>747919</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>068d6eafa322df8391b5cf9117ee795e</srcmd5>
    <version>7.11.1</version>
    <time>1579464019</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>764785</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>c58038531db641a390e79a7ef7ce1e4f</srcmd5>
    <version>7.12.0</version>
    <time>1581693918</time>
    <user>okurz-factory</user>
    <comment></comment>
    <requestid>773064</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>3ccadaaee1e2bbe3fa0da2c8404299c9</srcmd5>
    <version>7.13.0</version>
    <time>1583702529</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>781249</requestid>
  </revision>
  <revision rev="8" vrev="2">
    <srcmd5>ba909f8c2b72049c1d1005aecfffb373</srcmd5>
    <version>7.13.0</version>
    <time>1585484704</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>788909</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>ff638cedadd453acc1fe93a219c7f331</srcmd5>
    <version>7.14.0</version>
    <time>1590649743</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>808404</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>f516870e5f4becd4d88ef58c5f2c0250</srcmd5>
    <version>7.15.0</version>
    <time>1591879076</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>810548</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>f2a2a3fda967da8724f4c6b6004c7629</srcmd5>
    <version>7.16.1</version>
    <time>1593546823</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>817629</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>f5bc880a2facd0ed2ec25c12a028e897</srcmd5>
    <version>7.17.0</version>
    <time>1596727954</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>824571</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>5ecf05dd1050812caf263c2ae1e3a4e1</srcmd5>
    <version>7.18.0</version>
    <time>1599210109</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>830695</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>7d6e1f291548f98b784961ef7d8c72b9</srcmd5>
    <version>7.18.1</version>
    <time>1599666405</time>
    <user>dimstar_suse</user>
    <comment>- update to version 7.18.1:
  * Backport PR #12413: catch unrecoverable error
  * Revert &quot;Backport PR #12207 on branch 7.x (Bump jedi to at least
    0.16.0 and fix deprecated function usage)&quot;
</comment>
    <requestid>832538</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>77e516cf581132936e7b367379c70790</srcmd5>
    <version>7.19.0</version>
    <time>1604702636</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>845467</requestid>
  </revision>
  <revision rev="16" vrev="2">
    <srcmd5>f303421e0fe2a29339083eca6cfb48ab</srcmd5>
    <version>7.19.0</version>
    <time>1607113645</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>852845</requestid>
  </revision>
  <revision rev="17" vrev="3">
    <srcmd5>4266aed3725652d2ba48ded45be0ac7a</srcmd5>
    <version>7.19.0</version>
    <time>1607876960</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>854661</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>8739384258cba82ed518c84f28e2cdfa</srcmd5>
    <version>7.20.0</version>
    <time>1612466603</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>868550</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>2dafbec4ae0b9c8ee75c9bbb3ab84c23</srcmd5>
    <version>7.21.0</version>
    <time>1615905748</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>878957</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>5f1558d71608192f1771f9b802df5c39</srcmd5>
    <version>7.22.0</version>
    <time>1618061150</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>882364</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>290f9d297e0d530fba2795030817f193</srcmd5>
    <version>7.25.0</version>
    <time>1625950430</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>902996</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>c2f1e5976f1d1dec1d809eac2b2b1b36</srcmd5>
    <version>7.27.0</version>
    <time>1632685701</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>920898</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>7109ad0742488d3e8875b6274eb6905a</srcmd5>
    <version>7.28.0</version>
    <time>1635167816</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 7.28.0:
  * async with doesn’t allow newlines PR #13090
  * Dynamically changing to vi mode via %config magic) PR #13091
  * init_virtualenv now uses Pathlib PR #12548
  * Fix Improper path comparison of virtualenv directories
    PR #13140
  * Fix virtual environment user warning for lower case pathes
    PR #13094
  * Adapt to all sorts of drive names for cygwin PR #13153
  * enable autoplay in embed YouTube player PR #13133 (forwarded request 924563 from bnavigator)</comment>
    <requestid>924564</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>2eb751d867cac6133821edc1b4ee1bc3</srcmd5>
    <version>7.29.0</version>
    <time>1636986370</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>931191</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>20febe044b27d06cfb055c6c0e354cc3</srcmd5>
    <version>7.30.1</version>
    <time>1640459792</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>941688</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>ca0c510c60a4349a5ce1029daead3dfe</srcmd5>
    <version>8.0.1</version>
    <time>1642835878</time>
    <user>dimstar_suse</user>
    <comment>- Update to 8.0.1
  * Security fix CVE-2022-21699: change some default values in
    order to prevent potential Execution with Unnecessary
    Privileges.
  * Almost all version of IPython looks for configuration and
    profiles in current working directory. Since IPython was
    developed before pip and environments existed it was used a
    convenient way to load code/packages in a project dependant
    way.
  * In 2022, it is not necessary anymore, and can lead to confusing
    behavior where for example cloning a repository and starting
    IPython or loading a notebook from any Jupyter-Compatible
    interface that has ipython set as a kernel can lead to code
    execution.
  * The current working directory is not searched anymore for
    profiles or configurations files.
  * Added a __patched_cves__ attribute (set of strings) to IPython
    module that contain the list of fixed CVE. This is
    informational only.
- Fixes boo#1194936, CVE-2022-21699
- Update requirements.
- Requires the full stdlib including sqlite3
- Revert some spec-cleaner edits
- Update to 8.0.0:
  - Minimum supported traitlets version if now 5+
  - we now require stack_data
  - Minimal Python is now 3.8
  - pytest replaces nose.
  - iptest/iptest3 cli entrypoints do not exists anymore.
  - minimum officially support numpy version has been bumped, but
    this should not have much effect on packaging.
  - Backport some fixes for Python 3.10 (PR #13412)
  - use full-alpha transparency on dvipng rendered LaTeX (PR #13372)
  - Traceback improvements
  - Autosuggestons
  - Show pinfo information in ipdb using “?” and “??”
  - Autoreload 3 feature
  - Auto formatting with black in the CLI
  - History Range Glob feature
  - Don’t start a multi line cell with sunken parenthesis
  - IPython shell for ipdb interact
  - Automatic Vi prompt stripping
  - Empty History Ranges
  - Windows time-implementation: Switch to process_time
  - Re-added support for XDG config directories
- Add skip-network-test.patch to skip (gh#ipython/ipython#13468).
</comment>
    <requestid>947675</requestid>
  </revision>
  <revision rev="27" vrev="2">
    <srcmd5>c24bb2e072488542f4d13b55b349d7d7</srcmd5>
    <version>8.0.1</version>
    <time>1644188016</time>
    <user>dimstar_suse</user>
    <comment>- Add ipython-pr13466-display.patch -- gh#ipython/ipython#13466
  * fixes plotly test failures</comment>
    <requestid>951380</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>e8191246bd4faca56834f34741c4965a</srcmd5>
    <version>8.1.0</version>
    <time>1646073798</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>957853</requestid>
  </revision>
  <revision rev="29" vrev="1">
    <srcmd5>57f2c60dce81037e3ca4448a97c197d4</srcmd5>
    <version>8.1.1</version>
    <time>1646676276</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>959669</requestid>
  </revision>
  <revision rev="30" vrev="1">
    <srcmd5>a6b74fbf6ba41a76247879e59febec4f</srcmd5>
    <version>8.2.0</version>
    <time>1648570450</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>965216</requestid>
  </revision>
  <revision rev="31" vrev="1">
    <srcmd5>ef2d47480563589160e5ef5b249d8c10</srcmd5>
    <version>8.4.0</version>
    <time>1654506600</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>980869</requestid>
  </revision>
  <revision rev="32" vrev="2">
    <srcmd5>8e53aa2a4f9d943499efa13aaa30dcff</srcmd5>
    <version>8.4.0</version>
    <time>1659721826</time>
    <user>dimstar_suse</user>
    <comment>- Add ipython-pr13714-xxlimited.patch gh#ipython/ipython#13714

- Remove nbformat from the :test flavor. Run locally
  `--with localtests` for not skipping the tests.</comment>
    <requestid>993332</requestid>
  </revision>
  <revision rev="33" vrev="1">
    <srcmd5>585b0d7f06bcc70d8883903d5724faa4</srcmd5>
    <version>8.5.0</version>
    <time>1663515105</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1004233</requestid>
  </revision>
  <revision rev="34" vrev="1">
    <srcmd5>9858da2706cfafec40a7e7b81c9bf480</srcmd5>
    <version>8.6.0</version>
    <time>1667825483</time>
    <user>dimstar_suse</user>
    <comment>- update to version 8.6.0:
  * The install_ext and related functions have been removed after
    being deprecated for years. You can use pip to install
    extensions. pip did not exists when install_ext was
    introduced. You can still load local extensions without installing
    them. Just set your sys.path for example. :ghpull:`13744`
  * The completer matcher API have been improved. See
    :ghpull:`13745`. This should improve the type inference and
    improve dict keys completions in many use case. Tanks @krassowski
    for all the works, and the D.E. Shaw group for sponsoring it.
  * The color of error nodes in tracebacks can now be customized. See
    :ghpull:`13756`. This is a private attribute until someone find
    the time to properly add a configuration option. Note that with
    Python 3.11 that also show the relevant nodes in traceback, it
    would be good to leverage this informations (plus the &quot;did you
    mean&quot; info added on attribute errors). But that's likely work I
    won't have time to do before long, so contributions welcome.
  * As we follow NEP 29, we removed support for numpy 1.19
    :ghpull:`13760`.
  * The open() function present in the user namespace by default will
    now refuse to open the file descriptors 0,1,2 (stdin, out, err),
    to avoid crashing IPython. This mostly occurs in teaching context
    when incorrect values get passed around.
  * The ?, ??, and corresponding pinfo, pinfo2 magics can now find
    objects insides arrays. That is to say, the following now works:
     &gt;&gt;&gt; def my_func(*arg, **kwargs):pass
     &gt;&gt;&gt; container = [my_func]
     &gt;&gt;&gt; container[0]?
  * If container define a custom getitem, this __will__ trigger the
    custom method. So don't put side effects in your getitems. Thanks
    the D.E. Shaw group for the request and sponsoring the work.
</comment>
    <requestid>1033843</requestid>
  </revision>
  <revision rev="35" vrev="1">
    <srcmd5>d033782776df2039d1df6934b1dd4c3c</srcmd5>
    <version>8.7.0</version>
    <time>1672221253</time>
    <user>dimstar_suse</user>
    <comment>- Update to 8.7.0
  * PR #13834 bump the minimum prompt toolkit to 3.0.11.
  * IPython shipped with the py.typed marker now, and we are
    progressively adding more types. PR #13831
  * PR #13817 add configuration of code blacks formatting.
- Move to PEP517 build</comment>
    <requestid>1045320</requestid>
  </revision>
  <revision rev="36" vrev="1">
    <srcmd5>c0eacb04a35c2e3dbea7cb8bd2507cec</srcmd5>
    <version>8.8.0</version>
    <time>1672852230</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1046566</requestid>
  </revision>
  <revision rev="37" vrev="1">
    <srcmd5>e4111e46479c3486af19a2a6d8cc6ee4</srcmd5>
    <version>8.9.0</version>
    <time>1675689318</time>
    <user>dimstar_suse</user>
    <comment>- Update to 8.9.0
  * Second release of IPython in 2023, last Friday of the month, we
    are back on track. This is a small release with a few
    bug-fixes, and improvements, mostly with respect to terminal
    shortcuts.
  * The biggest improvement for 8.9 is a drastic amelioration if
    the auto-suggestions sponsored by D.E. Shaw and implemented by
    the more and more active contributor @krassowski.
    - right accepts a single character from suggestion
    - ctrl+right accepts a semantic token (macos default shortcuts
      take precedence and need to be disabled to make this work)
    - backspace deletes a character and resumes hinting
      autosuggestions
    - ctrl-left accepts suggestion and moves cursor left one
      character.
    - backspace deletes a character and resumes hinting
      autosuggestions
    - down moves to suggestion to later in history when no lines
      are present below the cursors.
    - up moves to suggestion from earlier in history when no lines
      are present above the cursor.
  * This is best described by the Gif posted by @krassowski, and in
    the PR itself PR gh#ipython/ipython#13888.
  * Please report any feedback in order for us to improve the user
    experience. In particular we are also working on making the
    shortcuts configurable.
  * If you are interested into better terminal shortcut, I also
    invite you to participate in issue gh#ipython/iüythpn#13879.
</comment>
    <requestid>1063285</requestid>
  </revision>
  <revision rev="38" vrev="1">
    <srcmd5>cd9e69a49f636d69ab6d9dcf84caf465</srcmd5>
    <version>8.12.0</version>
    <time>1680884171</time>
    <user>dimstar_suse</user>
    <comment>- Update to 8.12.0
   * PR #13957 brings updates to the Qt integration, particularly
     for Qt6.
   * PR #13960 fixes the %debug magic command to give access to the
     local scope.
   * PR #13964 fixes some crashes with the new fast traceback code.
     Note that there are still some issues with the fast traceback
     code, and I a, likely to fix and tweak behavior.
   * PR #13973 We are slowly migrating IPython internals to use
     proper type objects/dataclasses instead of dictionaries to
     allow static typing checks. These are technically public API
     and could lead to breakage, so please let us know if that’s
     the case and I’ll mitigate.
   * PR #13990, PR #13991, PR #13994 all improve keybinding and
     shortcut configurability.
- Release 8.11
  * Faster Traceback Highlighting
  * Autoreload verbosity
  * Terminal shortcuts customization
  * %gui should now support PySide6. PR #13864
  * Cli shortcuts can now be configured PR #13928, see above. (note
    that there might be an issue with prompt_toolkit 3.0.37 and
    shortcut configuration).
  * Capture output should now respect ; semicolon to suppress
    output. PR #13940
  * Base64 encoded images (in jupyter frontend), will not have
    trailing newlines. PR #13941
- Release 8.10
  * bump minimum numpy to &gt;=1.21 version following NEP29. PR #13930
  * fix for compatibility with MyPy 1.0. PR #13933</comment>
    <requestid>1077235</requestid>
  </revision>
  <revision rev="39" vrev="1">
    <srcmd5>0dded2446e3829f10b9b54c423a82e17</srcmd5>
    <version>8.13.1</version>
    <time>1683037098</time>
    <user>dimstar_suse</user>
    <comment>- Update to 8.13.1
  * This release is significant in that it not only has a number of
    bugfixes, but also drop support for Python 3.8 as per NEP 29
    (PR #14023).
  * Pretty reprensentation for Counter has been fixed to match the
    Python one and be in decreasing order. PR #14032
  * Module completion is better when jedi is disabled PR #14029.
  * Improvment of %%bash magic that would get stuck PR #14019
  * PR #14004 Fix a bug introduced in IPython 8.12 that crash when
    inspecting some docstrings.
  * PR #14010 Fix fast traceback code that was not working in some
    case.
  * PR #14014 Fix %page magic broken in some case.
  * PR #14026, PR #14027 Tweak default shortcut with respect to
    autosuggestions.
  * PR #14033 add back the ability to use .get() on OInfo object
    for backward compatibility with h5py (this will be
    re-deprecated later, and h5py will also get a fix).
</comment>
    <requestid>1083899</requestid>
  </revision>
  <revision rev="40" vrev="1">
    <srcmd5>ec1d18dbca505b42bca5e275eccf059b</srcmd5>
    <version>8.13.2</version>
    <time>1685889688</time>
    <user>dimstar_suse</user>
    <comment>- Update to 8.13.2
  * UI fixes, with respect to right arrow not working in some case
    in the terminal (forwarded request 1090492 from bnavigator)</comment>
    <requestid>1090493</requestid>
  </revision>
  <revision rev="41" vrev="1">
    <srcmd5>9a70cdd613f7f93ff1b6d8fb99889a77</srcmd5>
    <version>8.14.0</version>
    <time>1686576299</time>
    <user>dimstar_suse</user>
    <comment>- Update to 8.14.0
  * PR #14080 fixes some shortcuts issues.
  * PR #14056 Add option to %autoreload to hide errors when
    reloading code.
  * PR #14039 (and PR #14040) to show exception notes in
    tracebacks.
  * PR #14076 Add option to EventManager to prevent printing
  ## SPEC 0 and SPEC 4
  * You’ve heard about the NEPs, (NumPy enhancement Proposal),
    having a NEP for something non-numpy specific was sometime
    confusing. Long live the SPECs.
  * We are now trying to follow SPEC 0 (aka old NEP 29) for of
    support of upstream libraries.
  * We also now try to follow SPEC 4 (test and publish nightly on a
    centralized nightly repository). We encourage you to do so as
    well in order to report breakage, and contribute to the SPEC
    process !
  ## Python 3.12 compatibility ?
  * Python 3.12 changed its tokenizer to have better support for
    f-strings and allow arbitrary expression. This is a great new
    feature and performance improvement in python 3.12.
  * Unfortunately this means the new tokenizer does not support
    incomplete or invalid Python which will break many features of
    IPython. Thus compatibility of IPython with Python 3.12 is not
    guarantied. It is unclear to which extent IPython is affected,
    and whether we can/should try to still support magics, shell
    escape (! ....), …, as well as how to do it if we can.
  * In addition even if we there is technical feasibility to do so,
    it is no clear we have the resources to do it. We are thus
    looking for your help if you can _test_ on Python 3.12 to see
    to which extent this affects users and which features are
    critical.
  * We are not going to pin IPython to Python &lt;3.12 as otherwise on
    install pip would downgrade/resolve to IPython 8.13, so if you
    plan to update to Python 3.12 after its release, we encourage
    for extra care.
- Skip potential future python312 because of the above
- Add %{?sle15_python_module_pythons}
</comment>
    <requestid>1092420</requestid>
  </revision>
  <revision rev="42" vrev="1">
    <srcmd5>b7aea35c513d074bcec9346bec6fb58c</srcmd5>
    <version>8.15.0</version>
    <time>1695664796</time>
    <user>anag+factory</user>
    <comment>- Update to 8.15.0
  * Improve compatibility with future version of Python 3.12/3.13
    :ghpull:`14107`, gh#`14139`,
  * Improve support for ExceptionGroups, gh#`14108`
  * Fix hangs in %gui osx, gh#`14125`
  * Fix memory lead with %reset, gh#`14133`
  * Unstable config option to modify traceback highlighting that is
    sometime hard to read gh#`14138`
  * Support . in ipdb as an argument to the list command gh#`14121`
  * Workroud parso showing warning message when the default logger
    level is changed gh#`14119`
  * Fix multiple issues with matplotlib interactive mode, qt5/qt6
    gh#`14128`
  ## Whatsnew
  * Support for PEP-678 Exception Notes
  * Native fallback for displaying ExceptionGroup
  * AST-based macros
  * Allow IPdb/Pdb to move between chained exceptions</comment>
    <requestid>1113222</requestid>
  </revision>
  <revision rev="43" vrev="1">
    <srcmd5>64247617f7673b73b8bc0022cf09bf19</srcmd5>
    <version>8.16.1</version>
    <time>1696760239</time>
    <user>anag+factory</user>
    <comment>- Update to 8.16.1
  * Small double release of IPython (with the 8.12.3 release notes
    just below). Mostly bug fixes and cleanups, and type
    annotations. Of interest for users:
  * #14153 Fix a bug of the new iPdb chained traceback where some
    Exception would not have any traceback. (see upstream fix in
    CPython for more details).
  * #14168 Fix case with spurious message about event loops when
    using matplotlib.
- Remove skip_python312 (see changelog for 8.15)</comment>
    <requestid>1116206</requestid>
  </revision>
  <revision rev="44" vrev="2">
    <srcmd5>518b199d72ef9f9dbe57d09232404226</srcmd5>
    <version>8.16.1</version>
    <time>1700250551</time>
    <user>anag+factory</user>
    <comment>- Remove the dependency on python-curio, we don’t actually need
  it, tests can run without it.
</comment>
    <requestid>1127169</requestid>
  </revision>
  <revision rev="45" vrev="1">
    <srcmd5>0f0d60a79ebb39ececd14cc1b1c5ffca</srcmd5>
    <version>8.18.0</version>
    <time>1701121358</time>
    <user>anag+factory</user>
    <comment>- Update to 8.18.0
  * Small release of IPython that fixes a small number of
    inconveniences.
  * PR #14251 Fix a memory leak in qt event loop integration by
    setting the Loop parent to None.
  * PR #14252 Pickleshare was made an optional dependency in 8.17,
    this leads to warnings in some installations when using modules
    completions. The warning has been silenced.
  * PR #14241 Update event loop code for compatibility with more
    recent prompt_toolkit due to deprecations in Python 3.12.
  * PR #14245 Fix doc example on Pygments styles
  * PR #14238 Remove dependency on app_nope, this is actually only
    a dependency of IPykernel.
- Release 8.17, 8.17.1
  * Medium-sized release of IPython that includes some cleanup
    (backcall, python2 leftovers) and some refactoring improvements
    (typing, pathlib) and a fix on completion.
  * PR #14216 remove backcall dependency
  * PR #14217 make pickleshare dependency optional
  * PR #14185 support completion based on type annotations of calls
  * Reverted in 8.17.1:PR #14190 remove support for python 2 in
    lexers (reverted in  8.17.1 as it is imported by
    qtconsole/spyder)
  * Mamba and Micromamba magic: In addition to the conda command to
    manage conda environment, mamba and micromamba can now be used
    using the corresponding magic in IPython. Since these commands
    are compatible with conda, they are following the same logic.
    These two magic require to have the corresponding commands
    available either in the conda environment or system wide. PR
    #14191</comment>
    <requestid>1128952</requestid>
  </revision>
  <revision rev="46" vrev="1">
    <srcmd5>171134da87c0ba7da46c1fa6b8c3ca1d</srcmd5>
    <version>8.21.0</version>
    <time>1709762576</time>
    <user>dimstar_suse</user>
    <comment>- Update to 8.21.0
  * Few new features are present, but the codebase has been
    cleaned, and a couple of API are _considered_ for deprecation.
    They are not deprecated yet, but as they do not seem to be
    quite used, they may emit a warning, in which case please
    comment on the relevant issue to inform me of _which_ project
    use those feature and how you use them. Depending on the
    feedback I might change the timeline for deprecation.
  ## Deprecations
  * PR #14307 Pending Deprecation of
    ColorSchemeTable.set_active_scheme(...)’s case_sensitive
    Parameter.
  * PR #14305 Pending Deprecation of constructing ColorScheme via
    kwargs, in favor passing a single dict.
  ## Fixes
  * PR #14284 TerminalIPythonApp’s would warn that auto_create
    option is not recognized.
  * PR #14286 Fix a crash with NotOneValueFound when rendering
    complex tracebacks.
  * PR #14287 Partial Python 3.13 compatibility
  * PR #14290 Docs/Typos.
  * PR #14289 ipdb.set_trace() now accepts header= for better
  ## Changes
    compatibility with pdb.set_trace()
  * PR #14300 and PR #14301 Add hooking ability to produce
    mimebundle. It is now possible to extend the ?/?? operator to
    return more mimetypes to render richer help in frontends that
    support it. In particular you could send a json representation
    of the help that could be displayed in a customizable way.
- Release 8.20.0
  * The crux of this release is PR #14274 (Inspect continuation
    prompt signature and pass only viable arguments), the rest of
    the changes are mostly type annotation, and a few compatibility
    issues with Python 3.13 that are getting addressed.
- Update to 8.19.0
  * New release of IPython a bit before the end of the month, and
    end of the year.
  * Mostly cleanup and deprecation, due to upstream deprecation and
    removal.
  * A bit later than originally plan, IPython 8.19 does not support
    Python 3.9 anymore, as well as the few conditional code that
    were executing only on Python 3.9. #14254
  * We used the opportunity to deprecate IPython.utils.tz #14256,
    due to upstream deprecation of some timezone utilities. It will
    be removed at a later date.
  * Thanks to the contribution of cohml, IPython CLI now support
    absolute and relative line numbers in both vi and emacs prompt,
    use for example
    c.TerminalInteractiveShell
     .prompt_line_number_format='{line:4d}/{rel_line:+03d} | '
    configuration option to display both in a custom format.
</comment>
    <requestid>1147879</requestid>
  </revision>
  <revision rev="47" vrev="1">
    <srcmd5>324df9c41687031364a3ecf20317d7c8</srcmd5>
    <version>8.22.2</version>
    <time>1712068656</time>
    <user>anag+factory</user>
    <comment>- Update to 8.22.2
  * Fix recently introduced bug with the store magic.
  * Fix issues with multiple call to
    matplotlib.pyplot.switch_backend
  * Fix crashing IPython when some tracebacks encounter dynamically
    evaluated code.
  * IPython 8.22.1 increase the minimal traitlets version, and
    8.22.2 fix a critical bug on emscripten preventing to use some
    magics like %matplotlib on jupyter-light.
  * As usual you can find the full list of PRs on GitHub under the
    8.22 milestone.
  ## API changes
  * One of the largest change is the update the mimehooks and
    inspector API, see 14342. It should be backward compatible, but
    many hooks now receive a single object with many fields
    allowing us flexibility to update the API later.
  ## Packaging changes
  * Thanks to @mkoppe, we are slowly getting rid of setup.py
    finally migrating to pyproject.toml. There is still quite a bit
    of work, and please open an issue if you encounter any problem.
  ## Deprecation
  * A number of unused functions have been marked deprecated or
    pending deprecation. Please let us know if you encounter any of
    those deprecation messages for us to adjust the removal
    timeline.

  ## Changes</comment>
    <requestid>1163560</requestid>
  </revision>
  <revision rev="48" vrev="1">
    <srcmd5>1d29a36a1cb04901d217e359f055999e</srcmd5>
    <version>8.25.0</version>
    <time>1718199443</time>
    <user>anag+factory</user>
    <comment>- Reenable testing matplotlib
- Update to 8.25.0:
  * Rplaces the unicode micro symbol with greek letter mu, visually
    identical but should fix nfkc normalisations issues.
  * Introduces intersphinx_registry as a new dependency which is recommended
    only to build documentation.
  * Improve inference from return type annotations in completer and the
    introduction of the optional target ipython[matplotlib] to explicitly
    request the matplotlib optional dependencies.
  * Move of the matplotlib backend handling from IPython to matplotlib.
  * pytest 8 compatibility.
  * typing-extension now needs 4.6 or newer. It was already the case, but
    not explicated.
  * Attempt to speed running code under debugger in some cases.
</comment>
    <requestid>1178448</requestid>
  </revision>
  <revision rev="49" vrev="1">
    <srcmd5>26b9a08348fbcfde832a8ac7eb8e6fe6</srcmd5>
    <version>8.27.0</version>
    <time>1725211254</time>
    <user>dimstar_suse</user>
    <comment>- Update to 8.27.0
  * autocall was beeing call getitem, PR #14486
  * Only copy files in startup dir if we just created it. PR #14497
  * Fix some tests on Python 3.13 RC1 PR #14504
- IPython 8.26
  * PR #14453 bugfix for call to structured_traceback
  * R #14466 fixed honoring custom repr for NamedTuple if assigned
    by partialmethod
  * PR #14451 Convert matplotlib gui name in enable_gui</comment>
    <requestid>1197786</requestid>
  </revision>
  <revision rev="50" vrev="1">
    <srcmd5>60404b9e003ff612f94e14697ae937ea</srcmd5>
    <version>8.29.0</version>
    <time>1731956230</time>
    <user>anag+factory</user>
    <comment>- Update to 8.29
  * Misc Python 3.13 compatibility #14536, #14559
  * Add a uv line magic #14537
  * Add support for WEBP to IPython.display.Image. #14526
  * And many more bugfixes and quality of life improvements.
- IPython 8.28
  * #14480 AssertionError: assert _xterm_term_title_saved in WSL
    It is unclear why the terminal title is not saved in WSL, if
    you've WSL experience we'd love your feedback and help to not
    just ignore an error
  * #14510 Fix use of pyside6 &gt;= 6.7.0
  * #14518 Make values public (_tb_highlight &amp; _tb_highlight_style)
  * #14515 Use environment variable to identify conda / mamba
- Remove deprecated %suse_update_desktop_file
  * https://en.opensuse.org/openSUSE:Update-desktop-files_deprecation
  * nothing relevant to upstream</comment>
    <requestid>1224684</requestid>
  </revision>
  <revision rev="51" vrev="1">
    <srcmd5>ec37a9765ff757501a28590eb0160d7f</srcmd5>
    <version>8.30.0</version>
    <time>1733947263</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1229867</requestid>
  </revision>
  <revision rev="52" vrev="1">
    <srcmd5>183937d0b25c17c7f77463eedb23e0d3</srcmd5>
    <version>8.31.0</version>
    <time>1738244956</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1241190</requestid>
  </revision>
</revisionlist>
