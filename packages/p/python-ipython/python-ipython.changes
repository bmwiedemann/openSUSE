-------------------------------------------------------------------
Thu Jan 20 10:19:48 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update to 8.0.1
  * Security fix CVE-2022-21699: change some default values in
    order to prevent potential Execution with Unnecessary
    Privileges.
  * Almost all version of IPython looks for configuration and
    profiles in current working directory. Since IPython was
    developed before pip and environments existed it was used a
    convenient way to load code/packages in a project dependant
    way.
  * In 2022, it is not necessary anymore, and can lead to confusing
    behavior where for example cloning a repository and starting
    IPython or loading a notebook from any Jupyter-Compatible
    interface that has ipython set as a kernel can lead to code
    execution.
  * The current working directory is not searched anymore for
    profiles or configurations files.
  * Added a __patched_cves__ attribute (set of strings) to IPython
    module that contain the list of fixed CVE. This is
    informational only.
- Fixes boo#1194936, CVE-2022-21699

-------------------------------------------------------------------
Sat Jan 15 22:58:17 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update requirements.

-------------------------------------------------------------------
Sat Jan 15 15:40:59 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Requires the full stdlib including sqlite3
- Revert some spec-cleaner edits

-------------------------------------------------------------------
Fri Jan 14 18:19:27 UTC 2022 - Matej Cepl <mcepl@suse.com>

- Update to 8.0.0:
  - Minimum supported traitlets version if now 5+
  - we now require stack_data
  - Minimal Python is now 3.8
  - pytest replaces nose.
  - iptest/iptest3 cli entrypoints do not exists anymore.
  - minimum officially support numpy version has been bumped, but
    this should not have much effect on packaging.
  - Backport some fixes for Python 3.10 (PR #13412)
  - use full-alpha transparency on dvipng rendered LaTeX (PR #13372)
  - Traceback improvements
  - Autosuggestons
  - Show pinfo information in ipdb using “?” and “??”
  - Autoreload 3 feature
  - Auto formatting with black in the CLI
  - History Range Glob feature
  - Don’t start a multi line cell with sunken parenthesis
  - IPython shell for ipdb interact
  - Automatic Vi prompt stripping
  - Empty History Ranges
  - Windows time-implementation: Switch to process_time
  - Re-added support for XDG config directories
- Add skip-network-test.patch to skip (gh#ipython/ipython#13468).

-------------------------------------------------------------------
Mon Dec 20 18:35:45 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Add patches for Python 3.10
  * ipython-pr13282-py310-inspect.patch -- gh#ipython/ipython#13282
  * ipython-pr13371-py310-oserror.patch -- gh#ipython/ipython#13371
  * gh#ipython/ipython#13412

-------------------------------------------------------------------
Sun Dec 19 19:24:08 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to 7.30.1
  * IPython 7.30 fixes a couple of bugs introduce in previous
    releases (in particular with respect to path handling), and
    introduce a few features and improvements:
  * Notably we will highlight PR #13267 “Document that %run can
    execute notebooks and ipy scripts.”, which is the first commit
    of Fernando Pérez since mid 2016 (IPython 5.1). If you are new
    to IPython, Fernando created IPython in 2001. The other most
    recent contribution of Fernando to IPython itself was May 2018,
    by reviewing and merging PRs. I want to note that Fernando is
    still active but mostly as a mentor and leader of the whole
    Jupyter organisation, but we’re still happy to see him
    contribute code !
  * PR #13290 “Use sphinxify (if available) in object_inspect_mime
    path” should allow richer Repr of docstrings when using
    jupyterlab inspector.
  * PR #13311 make the debugger use ThreadPoolExecutor for debugger
    cmdloop. This should fix some issues/infinite loop, but let us
    know if you come across any regressions. In particular this
    fixes issues with kmaork/madbg, a remote debugger for IPython.
  * Note that this is likely the ante-penultimate release of
    IPython 7.x as a stable branch, as I hope to release IPython
    8.0 as well as IPython 7.31 next month/early 2022.

-------------------------------------------------------------------
Fri Nov 12 21:30:44 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to 7.29.0
  * IPython 7.29 brings a couple of new functionalities to IPython
    and a number of bugfixes. It is one of the largest recent
    release, relatively speaking, with close to 15 Pull Requests.
  * fix an issue where base64 was returned instead of bytes when
    showing figures
  * fix compatibility with PyQt6, PySide 6. This
    may be of interest if you are running on Apple Silicon as only
    qt6.2+ is natively compatible.
  * fix matplotlib qtagg eventloop
  * Multiple docs fixes, typos, ... etc.
  * Debugger will now exit by default on SigInt
    this will be useful in notebook/lab if you forgot to exit the
    debugger. "Interrupt Kernel" will now exist the debugger.
  * It give Pdb the ability to skip code in decorators. If
    functions contain a special value names __debuggerskip__ =
    True|False, the function will not be stepped into, and Pdb will
    step into lower frames only if the value is set to False. The
    exact behavior is still likely to have corner cases and will be
    refined in subsequent releases. Feedback welcome. See the
    debugger module documentation for more info. Thanks to the D.
    E. Shaw group for funding this feature.

-------------------------------------------------------------------
Sun Oct 10 19:39:47 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to version 7.28.0:
  * async with doesn’t allow newlines PR #13090
  * Dynamically changing to vi mode via %config magic) PR #13091
  * init_virtualenv now uses Pathlib PR #12548
  * Fix Improper path comparison of virtualenv directories
    PR #13140
  * Fix virtual environment user warning for lower case pathes
    PR #13094
  * Adapt to all sorts of drive names for cygwin PR #13153
  * enable autoplay in embed YouTube player PR #13133

-------------------------------------------------------------------
Mon Oct  4 08:59:34 UTC 2021 - Stefan Schubert <schubi@suse.de>

- Use libalternatives instead of update-alternatives.

-------------------------------------------------------------------
Wed Sep 15 05:36:58 UTC 2021 - Arun Persaud <arun@gmx.de>

- update to version 7.27.0:
  * Add support for GTK4 :ghpull:`131011`
  * Add support for Qt6 :ghpull:`13085`
  * Fix an issue with pip magic on windows :ghpull:`13093`

- changes from version 7.26.0:
  * We'll highlight this issue
    <https://github.com/ipython/ipython/issues/13039> pointing out we
    were including and refereeing to code from Stack Overflow which
    was CC-BY-SA, hence incompatible with the BSD license of
    IPython. This lead us to a rewriting of the corresponding logic
    which in our case was done in a more efficient way (in our case we
    were searching string prefixes instead of full strings).
  * You will notice also a number of documentation improvements and
    cleanup.
  * Of particular interest are the following Pull-requests:
    + The IPython directive now uses Sphinx logging for
      warnings. :ghpull:`13030`.
    + Add expiry days option to pastebin magic and change http
      protocol to https. :ghpull:`13056`
    + Make Ipython.utils.timing work with jupyterlite :ghpull:`13050`.

-------------------------------------------------------------------
Sat Jun 26 14:45:40 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to version 7.25.0
  * debugger bug fix
- Release 7.24
  * Fix an issue where %recall would both succeeded and print an
    error message it failed.
  * Drop support for NumPy 1.16 – practically has no effect beyond
    indicating in package metadata that we do not support it.
  * Debugger improvements
- Release 7.23
  * We have a new dependency: matplotlib-inline, which try to
    extract matplotlib inline backend specific behavior. It is
    available on PyPI and conda-forge thus should not be a problem
    to upgrade to this version. If you are a package maintainer
    that might be an extra dependency to package first.

-------------------------------------------------------------------
Sun Mar 28 16:53:58 UTC 2021 - Arun Persaud <arun@gmx.de>

- update to version 7.22.0:
  * Fix some sys.excepthook shenanigan when embedding with qt,
    recommended if you – for example – use napari. :ghpull:`12842`.
  * Fix bug when using the new ipdb %context magic :ghpull:`12844`
  * Couples of deprecation cleanup :ghpull:`12868`
  * Update for new dpast.com api if you use the %pastbin
    magic. :ghpull:`12712`
  * Remove support for numpy before 1.16. :ghpull:`12836`

-------------------------------------------------------------------
Sat Mar 13 13:06:24 UTC 2021 - Benjamin Greiner <code@bnavigator.de>

- As of now, iptest still needs nose until the removal is complete
  gh#ipython/ipython#12840

-------------------------------------------------------------------
Mon Mar  1 18:27:17 UTC 2021 - Matej Cepl <mcepl@suse.com>

- Update to version 7.21.0:
  - New "context" command in ipdb
    It is now possible to change the number of lines shown in the
    backtrace information in ipdb using "context" command.
  - Compatibility with Xeus-Python for debugger protocol
  - Misc docs fixes for compatibility and uniformity with Numpydoc.

-------------------------------------------------------------------
Mon Feb  1 23:25:34 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to version 7.20.0
  https://ipython.readthedocs.io/en/stable/whatsnew/version7.html
  * Support for PyQt5 >= 5.11 PR #12715
  * %reset remove imports more agressively PR #12718
  * fix the %conda magic PR #12739
  * compatibility with Jedi 0.18, and bump minimum Jedi version. 
    PR #12793 

-------------------------------------------------------------------
Thu Dec 10 20:14:51 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update requirement to python >= 3.7, which is officially the case
  since ipython > 7.15
- remove python3_only macro override not compatible with rpm 4.16
  * provide ipython3 its manpage and iptest3 through alternatives
    for possible multiple python3 flavors

-------------------------------------------------------------------
Wed Dec  2 21:38:05 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Prepare for upcoming python multiflavor
  * gh#openSUSE/python-rpm-macros#66
  * Skip python36 flavor
  * Provide ipython3 and iptest3 for primary python3 flavor only
    (in case that more than python38 is present, e.g. python39)

-------------------------------------------------------------------
Fri Oct 30 22:35:05 UTC 2020 - Arun Persaud <arun@gmx.de>

- update to version 7.19.0:
  * Fix to restore the ability to specify more than one extension
    using command line flags when using traitlets 5.0 :ghpull:`12543`
  * Docs docs formatting that make the install commands work on zsh
    :ghpull:`12587`
  * Always display the last frame in tracebacks even if hidden with
    __traceback_hide__ :ghpull:`12601`
  * Avoid an issue where a callback can be registered multiple
    times. :ghpull:`12625`
  * Avoid an issue in debugger mode where frames changes could be
    lost. :ghpull:`12627`
  * Never hide the frames that invoke a debugger, even if marked as
    hidden by __traceback_hide__ :ghpull:`12631`
  * Fix calling the debugger in a recursive manner :ghpull:`12659`

-------------------------------------------------------------------
Sat Sep  5 16:19:34 UTC 2020 - Arun Persaud <arun@gmx.de>

- update to version 7.18.1:
  * Backport PR #12413: catch unrecoverable error
  * Revert "Backport PR #12207 on branch 7.x (Bump jedi to at least
    0.16.0 and fix deprecated function usage)"

-------------------------------------------------------------------
Sat Aug 29 16:14:09 UTC 2020 - Arun Persaud <arun@gmx.de>

- update to version 7.18.0:
  * IPython 7.18 is a minor release that mostly contains bugfixes.
    + CRLF is now handled by magics my default; solving some issues
      due to copy pasting on windows. :ghpull:`12475`
    + Requiring pexpect >=4.3 as we are Python 3.7+ only and earlier
      version of pexpect will be incompatible. :ghpull:`12510`
    + Minimum jedi version is now 0.16. :ghpull:`12488`

-------------------------------------------------------------------
Sat Aug  1 22:10:57 UTC 2020 - Arun Persaud <arun@gmx.de>

- update to version 7.17.0:
  * IPython 7.17 brings a couple of new improvements to API and a
    couple of user facing changes to make the terminal experience more
    user friendly.
  * :ghpull:`12407` introduces the ability to pass extra argument to
    the IPython debugger class; this is to help a new project from
    kmaork (https://github.com/kmaork/madbg) to feature a fully remote
    debugger.
  * :ghpull:`12410` finally remove support for 3.6, while the codebase
    is still technically compatible; IPython will not install on
    Python 3.6.
  * lots of work on the debugger and hidden frames from @impact27 in
    :ghpull:`12437`, :ghpull:`12445`, :ghpull:`12460` and in
    particular :ghpull:`12453` which make the debug magic more robust
    at handling spaces.
  * Biggest API addition is code transformation which is done before
    code execution; IPython allows a number of hooks to catch
    non-valid Python syntax (magic, prompt
    stripping...etc). Transformers are usually called many time;
    typically:
    + When trying to figure out whether the code is complete and valid
      (should we insert a new line or execute ?)
    + During actual code execution pass before giving the code to
      Python's exec.
  * This lead to issues when transformer might have had side effects;
    or do external queries. Starting with IPython 7.17 you can expect
    your transformer to be called less time.
  * Input transformers are now called only once in the execution path
    of InteractiveShell, allowing to register transformer that
    potentially have side effects (note that this is not
    recommended). Internal methods should_run_async, and
    run_cell_async now take a recommended optional transformed_cell,
    and preprocessing_exc_tuple parameters that will become mandatory
    at some point in the future; that is to say cells need to be
    explicitly transformed to be valid Python syntax ahead of trying
    to run them. :ghpull:`12440`;
  * input_transformers can now also have an attribute has_side_effects
    set to True, when this attribute is present; this will prevent the
    transformers from being ran when IPython is trying to guess
    whether the user input is complete. Note that this may means you
    will need to explicitly execute in some case where your
    transformations are now not ran; but will not affect users with no
    custom extensions.

-------------------------------------------------------------------
Sun Jun 28 19:06:05 UTC 2020 - Arun Persaud <arun@gmx.de>

- update to version 7.16.1:
  * Noticeable changes:
    + Exceptions are now (re)raised when running notebooks via the
      :magic:`%run`, helping to catch issues in workflows and
      pipelines. :ghpull:`12301`
    + Fix inputhook for qt 5.15.0 :ghpull:`12355`
    + Fix wx inputhook :ghpull:`12375`
    + Add handling for malformed pathext env var (Windows)
      :ghpull:`12367`
    + use $SHELL in system_piped :ghpull:`12360` for uniform behavior
      with ipykernel.
  * Reproducible Build

-------------------------------------------------------------------
Sat May 30 23:53:32 UTC 2020 - Arun Persaud <arun@gmx.de>

- specfile:
  * removed opensuse-disable-net-test.patch, wikipedia file is not accessed anymore

- update to version 7.15.0:
  * Misc Noticeable changes:
    + Long completion name have better elision in terminal
      :ghpull:`12284`
    + I've started to test on Python 3.9 :ghpull:`12307` and fix some
      errors.
    + Hi DPI scaling of figures when using qt eventloop
      :ghpull:`12314`
    + Document the ability to have systemwide configuration for
      IPython. :ghpull:`12328`
    + Fix issues with input autoformatting :ghpull:`12336`
    + IPython.core.debugger.Pdb is now interruptible (:ghpull:`12168`,
      in 7.14 but forgotten in release notes)
    + Video HTML attributes (:ghpull:`12212`, in 7.14 but forgotten in
      release notes)
  * Reproducible Build
  * NEP29: Last version to support Python 3.6
  * Highlighted features
    + Increase Tab Completion Menu Height
    + Autoformat Code in the terminal

-------------------------------------------------------------------
Sat May  2 14:44:45 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update to version 7.14.0
  IPython  7.14 is a minor release that fix a couple of bugs and prepare
  compatibility with new or future versions of some libraries. 
  * Fix compatibility with Sphinx 3+
    gh#ipython/ipython#12235
  * Remove deprecated matplotlib parameter usage, compatibility with
    matplotlib3.3+ 
    gh#ipython/ipython#12250
  * set ``.py`` extension when editing current buffer in vi/emacs.
    gh#ipython/ipython#12167
  * support for unicode identifiers in ``?``/``??``
    gh#ipython/ipython#12208
  * add extra options to the ``Video`` Rich objects
    gh#ipython/ipython#12212
  * add pretty-printing to ``SimpleNamespace``
    gh#ipython/ipython#12230 
- add opensuse-disable-net-test.patch to disable network access
  during new test_embed_svg_url

-------------------------------------------------------------------
Thu Mar 19 11:38:34 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- update dep version of python-prompt_toolkit 

-------------------------------------------------------------------
Tue Mar  3 14:29:15 UTC 2020 - Todd R <toddrme2178@gmail.com>

- Run tests using multibuild instead of running them in a separate
  subpackage.  This greatly simplifies the spec file and makes
  updating the package much easier.
- Drop doc subpackage due to rapid changes in readthedocs download
  urls.  This was only around to let the tests be run in a
  separate subpackage to avoid dependency loops.

-------------------------------------------------------------------
Sun Mar  1 07:13:22 UTC 2020 - Arun Persaud <arun@gmx.de>

- update to version 7.13.0:
  * Fix inability to run PDB when inside an event loop :ghpull:`12141`
  * Fix ability to interrupt some processes on windows :ghpull:`12137`
  * Fix debugger shortcuts :ghpull:`12132`
  * improve tab completion when inside a string by removing irrelevant
    elements :ghpull:`12128`
  * Fix display of filename tab completion when the path is long
    :ghpull:`12122`
  * Many removal of Python 2 specific code path :ghpull:`12110`
  * displaying wav files do not require NumPy anymore, and is 5x to
    30x faster :ghpull:`12113`

-------------------------------------------------------------------
Sat Feb  8 22:41:18 UTC 2020 - Arun Persaud <arun@gmx.de>

- update to version 7.12.0:
  * Exit non-zero when ipython is given a file path to run that
    doesn't exist :ghpull:`12074`
  * Test PR on ARM64 with Travis-CI :ghpull:`12073`
  * Update CI to work with latest Pytest :ghpull:`12086`
  * Add infrastructure to run ipykernel eventloop via trio
    :ghpull:`12097`
  * Support git blame ignore revs :ghpull:`12091`
  * Start multi-line __repr__ s on their own line :ghpull:`12099`

-------------------------------------------------------------------
Wed Jan 15 15:41:15 UTC 2020 - Todd R <toddrme2178@gmail.com>

- Update to 7.11.1
  * A couple of deprecated functions (no-op) have been reintroduces in py3compat as
   Cython was still relying on them, and will be removed in a couple of versions.
- Update to 7.11.0
  * A number of function in the ``py3compat`` have been removed; a number of types
    in the IPython code base are now non-ambiguous and now always ``unicode``
    instead of ``Union[Unicode,bytes]``; many of the relevant code path have thus
    been simplified/cleaned and types annotation added.
  * IPython support several verbosity level from exceptions. ``xmode plain`` now
    support chained exceptions.
  * We are starting to remove ``shell=True`` in some usages of subprocess. While not directly
    a security issue (as IPython is made to run arbitrary code anyway) it is not good
    practice and we'd like to show the example.
  * Work around some bugs in Python 3.9 tokenizer
  * IPython will now print its version after a crash.
- Update to 7.10.2
  * IPython 7.10.2 fix a couple of extra incompatibility between IPython, ipdb,
    asyncio and Prompt Toolkit 3.
- Update to IPython 7.10.1
  * IPython 7.10.1 fix a couple of incompatibilities with Prompt toolkit 3 (please
    update Prompt toolkit to 3.0.2 at least), and fixes some interaction with
    headless IPython.
- Update to IPython 7.10.0
  * Stop Support for Python 3.5 – Adopt NEP 29
  * Support for Prompt Toolkit 3.0
  * Prompt Rendering Performance improvements
  * Code autoformatting
  * Arbitrary Mimetypes Handing in Terminal (Aka inline images in terminal)
  * Completions can define their own ordering
  * Enable Plotting in the same cell than the one that import matplotlib
  * Allow to store and restore multiple variables at once

-------------------------------------------------------------------
Tue Nov 12 16:26:46 UTC 2019 - Todd R <toddrme2178@gmail.com>

- update to version 7.9.0:
  * Update trio and curio dependencies eagerly.
  * restore terminal title on exit (xterm)
  * Easier empty, updatable display
  * %env: hide likely secrets by default
  * Prevent caching outputs in _, __, ___ when cache_size isn't positive
  * switching update_instance() to gc.get_referrers()
  * Fix for Python 4
  * Autoreload slow

-------------------------------------------------------------------
Sat Sep 14 16:27:03 UTC 2019 - Arun Persaud <arun@gmx.de>

- update to version 7.8.0:
  * Enable changing the font color for LaTeX rendering
  * and Re-Expose some PDB API

-------------------------------------------------------------------
Sat Jul 27 03:20:00 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to 7.7.0
  * Fix a bug introduced in 7.6 where the ``%matplotlib`` magic would fail on
    previously acceptable arguments
  * Fix the manage location on freebsd
  * Fix error message about aliases after ``%reset`` call in ipykernel
  * Fix Duplication completions in emacs

-------------------------------------------------------------------
Wed Jul  3 01:48:08 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to 7.6.0
  IPython 7.6.0 contains a couple of bug fixes and number of small features
  additions as well as some compatibility with the current development version of
  Python 3.8.
  * Add a ``-l`` option to :magic:`psearch` to list the available search
    types.
  * Support ``PathLike`` for ``DisplayObject`` and ``Image``.
  * Configurability of timeout in the test suite for slow platforms.
  * Accept any casing for matplotlib backend.
  * Properly skip test that requires numpy to be installed
  * More support for Python 3.8 and positional only arguments (pep570)
  * Unicode names for the completion are loaded lazily on first use which
    should decrease startup time.
  * Autoreload now update the types of reloaded objects; this for example allow
    pickling of reloaded objects.
  * Fix a big where ``%%time`` magic would suppress cell output.

-------------------------------------------------------------------
Thu Apr 25 20:45:20 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to 7.5.0
  * IPython 7.5.0 consist mostly of bug-fixes, and documentation updates,
    with one minor new feature. The Audio display element can now be
    assigned an element id when displayed in browser.
  * The major outstanding bug fix correct a change of behavior that was
    introduce in 7.4.0 where some cell magics would not be able to access
    or modify global scope when using the @needs_local_scope decorator.
    This was typically encountered with the %%time and %%timeit magics.

-------------------------------------------------------------------
Thu Apr 25 01:59:57 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Rename package to follow python package guidelines.

-------------------------------------------------------------------
Sun Mar 24 01:20:20 UTC 2019 - Arun Persaud <arun@gmx.de>

- update to version 7.4.0:
  * Previously, we provided completion for a unicode name with its
    relative symbol.With this, now IPython provides complete
    suggestions to unicode name symbols.
  * Make audio normalization optional
  * Miscelanious
    + Fix improper acceptation of "return" outside of
      functions. :ghpull:`11641`.
    + Fixed PyQt 5.11 backwards incompatibility causing sip import
      failure.  :ghpull:`11613`.
    + Fix Bug where "type?" woudl crash IPython. :ghpull:`1608`.
    + Allow to apply "@needs_local_scope" to cell magics for
      convenience.  :ghpull:`11542`.

-------------------------------------------------------------------
Fri Mar  1 18:00:07 UTC 2019 - Arun Persaud <arun@gmx.de>

- specfile:
  * update copyright year

- update to version 7.3.0:
  * The biggest change to this release is the implementation of the
    "%conda" and "%pip" magics, that will attempt to install packages
    in the **current environment**. You may still need to restart your
    interpreter or kernel for the change to be taken into account, but
    it should simplify installation of packages into remote
    environment. Installing using pip/conda from the command line is
    still the prefer method.
  * The "%pip" magic was already present, but was only printing a
    warning; now it will actually forward commands to pip.
  * Misc bug fixes and improvements:
    + Compatibility with Python 3.8.
    + Do not expand shell variable in execution magics, and added the
      "no_var_expand" decorator for magic requiring a similar
      functionality :ghpull:`11516`
    + Add "%pip" and "%conda" magic :ghpull:`11524`
    + Re-initialize posix aliases after a "%reset" :ghpull:`11528`
    + Allow the IPython command line to run "*.ipynb" files
      :ghpull:`11529`

-------------------------------------------------------------------
Sat Dec 22 06:33:27 UTC 2018 - Todd R <toddrme2178@gmail.com>

- Update to version 7.2.0
  * Fix a bug preventing PySide2 GUI integration from working :ghpull:`11464`
  * Run CI on Mac OS ! :ghpull:`11471`
  * Fix IPython "Demo" mode. :ghpull:`11498`
  * Fix ``%run`` magic  with path in name :ghpull:`11499`
  * Fix: add CWD to sys.path *after* stdlib :ghpull:`11502`
  * Better rendering of signatures, especially long ones. :ghpull:`11505`
  * Re-enable jedi by default if it's installed :ghpull:`11506`
  * Add New ``minimal`` exception reporting mode (useful for educational purpose). See :ghpull:`11509`
- Update to version 7.1.0
  + Notable Changes
    * Major update of "latex to unicode" tab completion map (see below)
  + Notable New Features:
    * Restore functionality and documentation of the **sphinx directive**, which
      is now stricter (fail on error by daefault), has new configuration options,
      has a brand new documentation page :ref:`ipython_directive` (which needs
      some cleanup). It is also now *tested* so we hope to have less regressions.
     :ghpull:`11402`
    * ``IPython.display.Video`` now supports ``width`` and ``height`` arguments,
      allowing a custom width and height to be set instead of using the video's
      width and height. :ghpull:`11353`
    * Warn when using ``HTML('<iframe>')`` instead of ``IFrame`` :ghpull:`11350`
    * Allow Dynamic switching of editing mode between vi/emacs and show
      normal/input mode in prompt when using vi. :ghpull:`11390`. Use ``%config
      TerminalInteractiveShell.editing_mode = 'vi'`` or ``%config
      TerminalInteractiveShell.editing_mode = 'emacs'`` to dynamically switch
      between modes.
  + Notable Fixes:
    * Fix entering of **multi-line blocks in terminal** IPython, and various
      crashes in the new input transformation machinery :ghpull:`11354`,
      :ghpull:`11356`, :ghpull:`11358`. These also fix a **Compatibility bug
      with Python 3.7.1**.
    * Fix moving through generator stack in ipdb :ghpull:`11266`
    * %Magic command arguments now support quoting. :ghpull:`11330`
    * Re-add ``rprint`` and ``rprinte`` aliases. :ghpull:`11331`
    * Remove implicit dependency on ``ipython_genutils`` :ghpull:`11317`
    * Make ``nonlocal`` raise ``SyntaxError`` instead of silently failing in async
      mode. :ghpull:`11382`
    * Fix mishandling of magics and ``= !`` assignment just after a dedent in
      nested code blocks :ghpull:`11418`
    * Fix instructions for custom shortcuts :ghpull:`11426`
  + Notable Internals improvements:
    * Use of ``os.scandir`` (Python 3 only) to speed up some file system operations.
      :ghpull:`11365`
    * use ``perf_counter`` instead of ``clock`` for more precise
      timing results with ``%time`` :ghpull:`11376`
- Remove upstream-included fix_test_history.patch

-------------------------------------------------------------------
Tue Oct 16 01:17:20 UTC 2018 - Todd R <toddrme2178@gmail.com>

- Update to version 7.0.1
  Highlights
  * IPython 7.0+ now uses prompt_toolkit 2.0
  * IPython can automatically await code at top level, you should
    not need to access an event loop or runner yourself.
  * The magic %autoreload 2 now captures new methods added to
    classes. Earlier, only methods existing as of the initial
    import were being tracked and updated.
  * The autoindent feature that was deprecated in 5.x was
    re-enabled and un-deprecated.
  * Make %run -n -i ... work correctly. Earlier, if %run was
    passed both arguments, -n would be silently ignored.
  * The %%script (as well as %%bash, %%ruby, ... ) cell magics
    now raise by default if the return code of the given code is
    non-zero (thus halting execution of further cells in a
    notebook). The behavior can be disable by passing the 
    --no-raise-error flag.
- Add fix_test_history.patch
  Fixes failure in test_history.py for sqlite >= 3.25
  Should be fixed in next release
  see https://github.com/ipython/ipython/issues/11372

-------------------------------------------------------------------
Tue Oct  9 17:43:22 UTC 2018 - Todd R <toddrme2178@gmail.com>

- Fix prompt_toolkit dependency.

-------------------------------------------------------------------
Fri Sep  7 17:17:02 UTC 2018 - toddrme2178@gmail.com

- Update to version 6.5.0
  * Autocompletion fix for modules with out __init__.py :ghpull:`11227`
  * update the %pastebin magic to use dpaste.com instead og GitHub Gist which now requires authentication :ghpull:`11182`
  * Fix crash with multiprocessing :ghpull:`11185`
- Switch to using upstream documentation builds

-------------------------------------------------------------------
Sun Jul 22 08:44:57 UTC 2018 - toddrme2178@gmail.com

- Not compatible with prompt_toolkit 2.x

-------------------------------------------------------------------
Fri May 18 18:51:12 UTC 2018 - toddrme2178@gmail.com

- Update to version 6.4.0
  * Fix display object not emitting metadata :ghpull:`11106`
  * Comments failing Jedi test :ghpull:`11110` 
- Remove upstream-included disable_jedi_in_tests.patch

-------------------------------------------------------------------
Thu May  3 17:13:50 UTC 2018 - toddrme2178@gmail.com

- Add disable_jedi_in_tests.patch
  Upstream bug: https://github.com/ipython/ipython/issues/11103
  From: https://github.com/ipython/ipython/pull/11113
  Should be in next release

-------------------------------------------------------------------
Thu Apr 19 05:23:32 UTC 2018 - toddrme2178@gmail.com

- Add backcall dependency

-------------------------------------------------------------------
Thu Apr 12 20:43:21 UTC 2018 - arun@gmx.de

- update to version 6.3.1:
  * This is a bugfix release to switch the default completions back to
    IPython's own completion machinery. We discovered some problems
    with the completions from Jedi, including completing column names
    on pandas data frames.

- changes from version 6.3:
  * A new display class :class:`IPython.display.Code` can be used to
    display syntax highlighted code in a notebook (:ghpull:`10978`).
  * The :cellmagic:`html` magic now takes a "--isolated" option to put
    the content in an iframe (:ghpull:`10962`).
  * The code to find completions using the Jedi library has had
    various adjustments. This is still a work in progress, but we hope
    this version has fewer annoyances (:ghpull:`10956`,
    :ghpull:`10969`, :ghpull:`10999`, :ghpull:`11035`,
    :ghpull:`11063`, :ghpull:`11065`).
  * The *post* event callbacks are now always called, even when the
    execution failed (for example because of a "SyntaxError").
  * The execution info and result objects are now made available in
    the corresponding *pre* or *post* "*_run_cell" :doc:`event
    callbacks </config/callbacks>` in a backward compatible manner
    (:ghissue:`10774` and :ghpull:`10795`).
  * Performance with very long code cells (hundreds of lines) is
    greatly improved (:ghpull:`10898`). Further improvements are
    planned for IPython 7.

-------------------------------------------------------------------
Tue Feb 13 19:47:23 UTC 2018 - toddrme2178@gmail.com

- Update url

-------------------------------------------------------------------
Tue Oct  3 01:20:57 UTC 2017 - arun@gmx.de

- update to version 6.2.1:
  * IPython 6.2.1 ships with two minor fixes leading to no completions
    when using Jedi 0.11+ :ghpull:`10829`, and crash on some linux
    system with virtualenv :ghpull:`10829`

-------------------------------------------------------------------
Tue Sep 19 20:18:04 UTC 2017 - toddrme2178@gmail.com

- Update to version 6.2.0
  * Function signature in completions
  * Assignments return values
  * Recursive Call of ipdb
  * System Wide config
  * ProgressBar
  * Fix ``IPython.core.display:Pretty._repr_pretty_`` had the wrong signature.
  * :magic:`timeit` now give a correct ``SyntaxError`` if naked ``return`` used.
  * Prepare the ``:ipython:`` directive to be compatible with Sphinx 1.7.
  * Make IPython work with OpenSSL in FIPS mode; change hash algorithm of input
    from md5 to sha1.
  * Clear breakpoints before running any script with debugger.
  * Document that :magic:`profile` is deprecated, not to be confused with :magic:`prun`.
  * Limit default number of returned completions to 500.

-------------------------------------------------------------------
Wed Sep  6 21:33:36 UTC 2017 - toddrme2178@gmail.com

- Implement single-spec version
- Update to version 6.1.0
  * Quotes in a filename are always escaped during tab-completion on non-Windows.
    :ghpull:`10069`
  * Variables now shadow magics in autocompletion. See :ghissue:`4877` and :ghpull:`10542`.
  * Added the ability to add parameters to alias_magic.
  * To suppress log state messages, you can now either use ``%logstart -q``, pass
    ``--LoggingMagics.quiet=True`` on the command line, or set
    ``c.LoggingMagics.quiet=True`` in your configuration file.
  * An additional flag ``--TerminalInteractiveShell.term_title_format`` is
    introduced to allow the user to control the format of the terminal title.  It
    is specified as a python format string, and currently the only variable it
    will format is ``{cwd}``.
  * ``??``/``%pinfo2`` will now show object docstrings if the source can't be retrieved. :ghpull:`10532`
  * ``IPython.display`` has gained a ``%markdown`` cell magic. :ghpull:`10563`
  * ``%config`` options can now be tab completed. :ghpull:`10555`
  * ``%config`` with no arguments are now unique and sorted. :ghpull:`10548`
  * Completion on keyword arguments does not duplicate ``=`` sign if already present. :ghpull:`10547`
  * ``%run -m <module>`` now ``<module>`` passes extra arguments to ``<module>``. :ghpull:`10546`
  * completer now understand "snake case auto complete": if ``foo_bar_kittens`` is
    a valid completion, I can type ``f_b<tab>`` will complete to it. :ghpull:`10537`
  * tracebacks are better standardized and will compress `/path/to/home` to `~`. :ghpull:`10515`
  * ``TerminalInteractiveShell`` is configurable and can be configured to
    (re)-use the readline interface.
  * objects can now define a ``_repr_mimebundle_``
  * Execution heuristics improve for single line statements
  * ``display()`` can now return a display id to update display areas.
- Update to version 6.0.0
  * A major improvement in the completion machinery which is now capable of
    completing non-executed code. 
  * stop compatibility with Python 2, which is still supported on the bugfix
    only 5.x branch. 
  * Configurable TerminalInteractiveShell, readline interface
  * The :cellmagic:`capture` magic can now capture the result of a cell (from
    an expression on the last line), as well as printed and displayed output.
  * Pressing Ctrl-Z in the terminal debugger now suspends IPython, as it
    already does in the main terminal prompt.
  * Autoreload can now reload ``Enum``.
  * IPython.display has gained a :any:`GeoJSON <IPython.display.GeoJSON>`
    object.

-------------------------------------------------------------------
Fri Aug 11 13:34:20 UTC 2017 - toddrme2178@gmail.com

- Update to version 5.4.1
  * Released a few hours after 5.4, fix a crash when
    ``backports.shutil-get-terminal-size`` is not installed. :ghissue:`10629`
- Update to version 5.4
  * Configurable TerminalInteractiveShell
  * Define ``_repr_mimebundle_``
  * Execution Heuristics
  * Implement Display IDs
  * Display function
  * ``_mp_main_`` is not reloaded which fixes issues with multiprocessing.
    :ghpull:`10523`
  * Use user colorscheme in Pdb as well :ghpull:`10479`
  * Faster shutdown. :ghpull:`10408` 
  * Fix a crash in reverse search. :ghpull:`10371`
  * added ``Completer.backslash_combining_completions`` boolean option to
    deactivate backslash-tab completion that may conflict with windows path. 
- Fix building on platforms without icoutils

-------------------------------------------------------------------
Thu Jul 13 02:33:23 UTC 2017 - toddrme2178@gmail.com

- Fix shebang rpmint errors.

-------------------------------------------------------------------
Mon Apr 24 22:37:05 UTC 2017 - toddrme2178@gmail.com

- Add note about LTS status and the end of Python 2 support.
- Add python2- provides.
- Neither HTML nor PDF documentation will ever work again,
  so drop it.

-------------------------------------------------------------------
Fri Apr  7 03:42:45 UTC 2017 - toddrme2178@gmail.com

- Install icons.
- Install .desktop file.

-------------------------------------------------------------------
Thu Mar 30 19:35:24 UTC 2017 - toddrme2178@gmail.com

- Update to IPython 5.3
  * Fix a bug in ``set_next_input`` leading to a crash of terminal IPython.
    :ghpull:`10231`, :ghissue:`10296`, :ghissue:`10229`
  * Always wait for editor inputhook for terminal IPython :ghpull:`10239`,
    :ghpull:`10240`
  * Disable ``_ipython_display_`` in terminal :ghpull:`10249`, :ghpull:`10274`
  * Update terminal colors to be more visible by default on windows
    :ghpull:`10260`, :ghpull:`10238`, :ghissue:`10281`
  * Add Ctrl-Z shortcut (suspend) in terminal debugger :ghpull:`10254`,
    :ghissue:`10273`
  * Indent on new line by looking at the text before the cursor :ghpull:`10264`,
    :ghpull:`10275`, :ghissue:`9283`
  * Update QtEventloop integration to fix some matplotlib integration issues
    :ghpull:`10201`, :ghpull:`10311`, :ghissue:`10201`
  * Respect completions display style in terminal debugger :ghpull:`10305`,
    :ghpull:`10313`
  * Add a config option ``TerminalInteractiveShell.extra_open_editor_shortcuts``
    to enable extra shortcuts to open the input in an editor. These are :kbd:`v`
    in vi mode, and :kbd:`C-X C-E` in emacs mode (:ghpull:`10330`).
    The :kbd:`F2` shortcut is always enabled.
- Update to IPython 5.2.2
  * Fix error when starting with ``IPCompleter.limit_to__all__`` configured.
- Update to IPython 5.2.1
  * Fix tab completion in the debugger. :ghpull:`10223`
- Update to IPython 5.2
  * restore IPython's debugger to raise on quit. :ghpull:`10009`
  * The configuration value ``c.TerminalInteractiveShell.highlighting_style`` can
    now directly take a class argument for custom color style. :ghpull:`9848`
  * Correctly handle matplotlib figures dpi :ghpull:`9868`
  * Deprecate ``-e`` flag for the ``%notebook`` magic that had no effects.
    :ghpull:`9872`
  * You can now press F2 while typing at a terminal prompt to edit the contents
    in your favourite terminal editor. Set the :envvar:`EDITOR` environment
    variable to pick which editor is used. :ghpull:`9929`
  * sdists will now only be ``.tar.gz`` as per upstream PyPI requirements.
    :ghpull:`9925`
  * :any:`IPython.core.debugger` have gained a ``set_trace()`` method for
    convenience. :ghpull:`9947`
  * The 'smart command mode' added to the debugger in 5.0 was removed, as more
    people preferred the previous behaviour. Therefore, debugger commands such as
    ``c`` will act as debugger commands even when ``c`` is defined as a variable.
    :ghpull:`10050`
  * Fixes OS X event loop issues at startup, :ghpull:`10150`
  * Deprecate the ``%autoindent`` magic. :ghpull:`10176`
  * Emit a :any:`DeprecationWarning` when setting the deprecated
    ``limit_to_all`` option of the completer. :ghpull:`10198`
  * The :cellmagic:`capture` magic can now capture the result of a cell (from an
    expression on the last line), as well as printed and displayed output.
    :ghpull:`9851`.
- Update to IPython 5.1
  * Broken ``%timeit`` on Python2 due to the use of ``__qualname__``. :ghpull:`9804`
  * Restore ``%gui qt`` to create and return a ``QApplication`` if necessary. :ghpull:`9789`
  * Don't set terminal title by default. :ghpull:`9801`
  * Preserve indentation when inserting newlines with ``Ctrl-O``. :ghpull:`9770`
  * Restore completion in debugger. :ghpull:`9785`
  * Deprecate ``IPython.core.debugger.Tracer()`` in favor of simpler, newer, APIs. :ghpull:`9731`
  * Restore ``NoOpContext`` context manager removed by mistake, and add `DeprecationWarning`. :ghpull:`9765`
  * Add option allowing ``Prompt_toolkit`` to use 24bits colors. :ghpull:`9736`
  * Fix for closing interactive matplotlib windows on OS X. :ghpull:`9854`
  * An embedded interactive shell instance can be used more than once. :ghpull:`9843`
  * More robust check for whether IPython is in a terminal. :ghpull:`9833`
  * Better pretty-printing of dicts on PyPy. :ghpull:`9827`
  * Some coloured output now looks better on dark background command prompts in Windows.
    :ghpull:`9838`
  * Improved tab completion of paths on Windows . :ghpull:`9826`
  * Fix tkinter event loop integration on Python 2 with ``future`` installed. :ghpull:`9824`
  * Restore ``Ctrl-\`` as a shortcut to quit IPython.
  * Make ``get_ipython()`` accessible when modules are imported by startup files. :ghpull:`9818`
  * Add support for running directories containing a ``__main__.py`` file with the
    ``ipython`` command. :ghpull:`9813`
- Update to IPython 5.0
  + IPython 5 features a major upgrade to the terminal interface, bringing live
    syntax highlighting as you type, proper multiline editing and multiline paste,
    and tab completions that don't clutter up your history.
  + Backwards incompatible changes
    * The ``%install_ext`` magic function, deprecated since 4.0, has now been deleted.
      You can distribute and install extensions as packages on PyPI.
    * Callbacks registered while an event is being handled will now only be called
      for subsequent events; previously they could be called for the current event.
      Similarly, callbacks removed while handling an event *will* always get that
      event. See :ghissue:`9447` and :ghpull:`9453`.
    * Integration with pydb has been removed since pydb development has been stopped
      since 2012, and pydb is not installable from PyPI.
    * The ``autoedit_syntax`` option has apparently been broken for many years.
      It has been removed.
    * The overhaul of the terminal interface will probably cause a range of minor
      issues for existing users.
    * IPython no longer uses readline configuration (``~/.inputrc``). We hope that
      the functionality you want (e.g. vi input mode) will be available by configuring
      IPython directly (see :doc:`/config/options/terminal`).
    * The ``PromptManager`` class has been removed, and the prompt machinery simplified.
    * There are new options to configure the colours used in syntax highlighting.
      We have tried to integrate them with our classic  ``--colors`` option and
     ``%colors`` magic, but there's a mismatch in possibilities, so some configurations
     may produce unexpected results. See :ref:`termcolour` for more information.
    * The new interface is not compatible with Emacs 'inferior-shell' feature. To
      continue using this, add the ``--simple-prompt`` flag to the command Emacs
      runs. This flag disables most IPython features, relying on Emacs to provide
      things like tab completion.
  + Provisional Changes
    * When running via the Jupyter notebook interfaces, or other compatible client,
      you can enable rich documentation experimental functionality:
      When the ``docrepr`` package is installed setting the boolean flag
      ``InteractiveShell.sphinxify_docstring`` to ``True``, will process the various
      object through sphinx before displaying them (see the ``docrepr`` package
      documentation for more information.
  + Deprecated Features
    * ``hooks.fix_error_editor`` seems unused and is pending deprecation.
    * `IPython/core/excolors.py:ExceptionColors` is  deprecated.
    * `IPython.core.InteractiveShell:write()` is deprecated; use `sys.stdout` instead.
    * `IPython.core.InteractiveShell:write_err()` is deprecated; use `sys.stderr` instead.
    * The `formatter` keyword argument to `Inspector.info` in `IPython.core.oinspec` has no effect.
    * The `global_ns` keyword argument of IPython Embed was deprecated, and has no effect. Use `module` keyword argument instead.
- Update to IPython 4.2
  * Fix ``ipython -i`` on errors, which was broken in 4.1.
  * The delay meant to highlight deprecated commands that have moved to jupyter has been removed.
  * Improve compatibility with future versions of traitlets and matplotlib.
  * Use stdlib :func:`python:shutil.get_terminal_size` to measure terminal width when displaying tracebacks
    (provided by ``backports.shutil_get_terminal_size`` on Python 2).
- Update to IPython 4.1.2
  * fixes installation issues with some versions of setuptools.

-------------------------------------------------------------------
Thu Mar 16 14:31:41 UTC 2017 - jmatejek@suse.com

- do not Recommend jupyter_nbconvert (which pulls in texlive)

-------------------------------------------------------------------
Wed Feb 17 14:43:15 UTC 2016 - toddrme2178@gmail.com

- specfile:
  * update copyright year
  * Simplify tests for determining whether to build pdf documentation
- update to version 4.1.1:
  * Backport #9209: Don't import IPython to check version number in
    setup
- Update to 4.1.0
  * Release February, 2016. IPython 4.1 contain mostly bug fixes.
    It though contain a few improvement.
  * IPython debugger (IPdb) now supports the number of context
    lines for the where (and w) commands. The context keyword is
    also available in various APIs. See PR :ghpull:`9097`
  * YouTube video will now show thumbnail when exported to a media
    that do not support video. (:ghpull:`9086`)
  * Add warning when running ipython <subcommand> when subcommand
    is deprecated. jupyter should now be used.
  * Code in %pinfo (also known as ??) are now highlighter
    (:ghpull:`8947`)
  * %aimport now support module completion. (:ghpull:`8884`)
  * ipdb output is now colored ! (:ghpull:`8842`)
  * Add ability to transpose columns for completion:
    (:ghpull:`8748`)
  * Many many docs improvements and bug fixes
- update to version 4.0.3:
  * Python 3.5 bug in that could crash during shutdown, triggered by
    deprecations in traitlets 4.1.
  * Typo in deprecation message for nbconvert
- update to version 4.0.2:
  * Fix backward-compatiblity shim for "IPython.Config", which
    should have been deprecated instead of removed. This will be
    removed in 5.0.
- update to version 4.0.1:
  * Installation on some systems
  * Compatibility with CPython 3.4.4
  * Compatibility with Qt5

-------------------------------------------------------------------
Thu Oct  1 12:50:43 UTC 2015 - toddrme2178@gmail.com

- Build documentation
  This is in a separate spec file to avoid dependency loops
- Obsolete IPython
- Split the iptest executable into its own subpackage
  This has a bunch of testing dependencies that are not otherwise
  necessary.

-------------------------------------------------------------------
Fri Aug 21 11:09:45 UTC 2015 - toddrme2178@gmail.com

- Add conflict with older versions of IPython

-------------------------------------------------------------------
Mon Aug 17 08:14:39 UTC 2015 - toddrme2178@gmail.com

- Initial version

