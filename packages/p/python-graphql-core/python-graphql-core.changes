-------------------------------------------------------------------
Wed Nov 13 11:03:21 UTC 2024 - John Paul Adrian Glaubitz <adrian.glaubitz@suse.com>

- Update to 3.2.5
  * Patch-release GraphQL-core v3.2.5, based on GraphQL.js v16.8.2.
  * This patch-release supports Python 3.6 to 3.13.
- from version 3.2.4
  * Patch-release GraphQL-core v3.2.4, based on GraphQL.js v16.8.2.
  * This patch-release supports Python 3.6 to 3.12 and includes these changes:
    + Fix invalid original_error propagation in custom scalars
    + Fix performance degradation in OverlappingFieldsCanBeMergedRule
    + Support fourfold nested lists in introspection
    + Avoid various deprecation warnings with newer Python versions
- Adjust upstream source name in spec file

-------------------------------------------------------------------
Tue Jun 13 12:09:58 UTC 2023 - ecsos <ecsos@opensuse.org>

- Add %{?sle15_python_module_pythons}

-------------------------------------------------------------------
Fri Oct 28 17:25:12 UTC 2022 - Yogalakshmi Arunachalam <yarunachalam@suse.com>

- Update to 3.2.3 
  Patch-release GraphQL-core v3.2.3, based on GraphQL.js v16.6.0.
  This patch-releases includes only one change in GraphQL.js v16.6.0:
  The parser now allows to limit the number of tokens
  Thanks to all who are sponsoring me (@Cito) for maintaining this project.

- Update to 3.2.2
  Patch-release GraphQL-core v3.2.2, based on GraphQL.js v16.4.0.
  This patch-releases includes the changes in GraphQL.js v16.4.0, and the following fixes:
  Require typing extensions when needed
  Recommend using poetry instead of pipenv in the docs (#161)
  Cast error message to string to handle proxy objects (#175)
  Remove newline in description (#180)

-------------------------------------------------------------------
Wed Sep 28 21:51:38 UTC 2022 - Yogalakshmi Arunachalam <yarunachalam@suse.com>

- Update to 3.2.1
  Patch-release GraphQL-core v3.2.1, based on GraphQL.js v16.3.0.
  This patch-releases includes the changes in GraphQL.js v16.3.0, and the following fix:
  Serialize with maximum precision when converting float to FloatValue (#164)
  Thanks to @bennyweise for contributing and all who are sponsoring me (@Cito) for maintaining this project.

- Update to 3.2.0
  Final release of GraphQL-core v3.2.0, based on GraphQL.js v16.2.0.
  See v3.2.0rc1, v3.2.0rc2, v3.2.0rc3, v3.2.0rc4, v3.2.0rc5 and the changelog of GraphQL.js for a complete list of changes.
  Thanks to all who contributed and are sponsoring me (@Cito) for maintaining this project.

-------------------------------------------------------------------
Sun May 22 13:59:41 UTC 2022 - Ferdinand Thiessen <rpm@fthiessen.de>

- Update to 3.1.7
  * Patch based on GraphQL.js v15.8.0.
  * Set enum value values to value names in build_client_schema
  * Fix camel to snake case conversion with digits
  * Preserve deprecation_reason on GraphQLInputFields
  * Add missing __Directive.args(includeDeprecated)
  * Fix original_error.extensions overriding extensions argument
- Update to 3.1.6
  * Patch release based on GraphQL.js v15.5.1.
- Update to 3.1.5
  * Default parse_literal of GraphQLScalarType now handles variables
  * build_ast_schema now matches order of default types and directives
  * Return formatted errors in formatted execution result
  * The is_deprecated property is now deprecated itself
  * Input fields and arguments can now be marked as deprecated
  * Handle case when MapAsyncIterator is cancelled
  * Improve return type for complete_list_value
  * Replace resolved types in lexicographic schema sort
  * EventEmitter helper class has been replaces by SimplePubSub
  * print_ast now breaks arguments over multiple lines
- Update to 3.1.4
  * Fix enum values
- Update to 3.1.3
  * Python 3.9 is now officially suported by GraphQL-core.
  * build_schema: allow to reference introspection types
  * Custom validation rules for "no schema introspection" and "no deprecated"
  * Added execute_sync() as synchronous version of execute()
  * Support deep copy of GraphQL schema
  * build_ast_schema now sets internal enum values
  * Do not double-wrap resolver errors any more
  * Use newer Sphinx version, fix for various autodoc issues
  * Fix example in docstring of GraphQLUnionType
  * Let default resolver check for Mapping instead of dict

-------------------------------------------------------------------
Mon Jan 25 02:15:12 UTC 2021 - John Vandenberg <jayvdb@gmail.com>

- Update to v3.1.2
  * match GrapqhQL.js v15.1.0 
  * Use proper type hints for serializers
  * Add @SpecifiedBy directive
  * Simplify get_operation_type_node function
  * Simplify monkey-patching the did_you_mean function
  * Add enum type for visitor return values
  * Add all missing type definitions
  * Switch to SDL for validation tests
  * Support visitors with class and static methods
  * block_string: print multi line for trailing backslash
  * test_block_string: add fuzzing test for 'print_block_string'
  * Simplify gen_fuzz_strings using itertools
  * Make documentation for get_field_def more accurate
  * Lists in AST nodes should not be optional
  * Add test for custom scalars
  * build_ast_schema: pass empty schema as literal

-------------------------------------------------------------------
Sat Jun  6 07:24:00 UTC 2020 - John Vandenberg <jayvdb@gmail.com>

- Update to v3.1.1

-------------------------------------------------------------------
Tue Jan  7 09:18:44 AM UTC 2020 - John Vandenberg <jayvdb@gmail.com>

- Initial spec for v3.0.1
