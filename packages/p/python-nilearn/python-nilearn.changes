-------------------------------------------------------------------
Tue Feb 20 19:57:05 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Update to 0.10.3
  ## Highlights
  * API Allow passing arguments to first_level_from_bids to build
    first level models that include specific set of confounds by
    relying on the strategies from load_confounds (#4103 by Rémi
    Gau).
  * Support passing t and F contrasts to compute_contrast that that
    have fewer columns than the number of estimated parameters.
    Remaining columns are padded with zero (#4067 by Rémi Gau).
  * NiftiSpheresMasker now has generate_report method (#3102 by
    Yasmin Mzayek and Nicolas Gensollen).
  * Update the CompCor strategy in load_confounds and
    load_confounds_strategy to support fmriprep 21.x series and
    above. (#3285 by Hao-Ting Wang).
  * Allow setting vmin in plot_glass_brain and plot_stat_map (#3993
    by Michelle Wang).
  * When plotting thresholded statistical maps with a colorbar, the
    threshold value(s) will now be displayed as tick labels on the
    colorbar (##2833 by Nicolas Gensollen).
  * Combine GLM examples plot_fixed_effect and plot_fiac_analysis
    into a a single example plot_two_runs_model (#3191 by Taylor
    Salo and Rémi Gau).
  ## New
  * The temp_file_lifetime parameter of interactive plots’
    open_in_browser method is deprecated and has no effect (#4180
    by Jerome Dockes)..
  ## Fixes
  * MultiNiftiMasker can now call generate_report which will
    generate a report for the first subject in the list of subjects
    (#4001 by Yasmin Mzayek).
  * Make sure that all atlases and datasets fetchers return a
    description (#4215 Rémi Gau).
  * Update the CompCor strategy in load_confounds and
    load_confounds_strategy to support fmriprep 21.x series and
    above. (#3285 by Hao-Ting Wang).
  * Fix SimpleRegressionResults to accommodate for the lack of a
    model attribute (#4071 Rémi Gau)
  * clean_img can now use kwargs clean__sample_mask argument to
    correctly reshape the nifti image to the dimensions of the mask
    in the output (#4051 by Mia Zwally).
  * Fix plotting of an image with color bar when maximum value is
    exactly zero (#4204 by Rémi Gau).
  * Code Fix PSC normalisation method applied by standardize_signal
    in signal (#4116 by Hao-Ting Wang and Yasmin Mzayek).
  * Fixed inheritance of decoder classes to keep compatibility with
    scikit-learn>v1.3 (#4188 by Yasmin Mzayek).
  * Make sure that all the fetchers for atlas and func from
    nilearn.datasets return a sklearn.utils.Bunch. Add new behavior
    to fetch_language_localizer_demo_dataset to return output as
    Bunch. This behavior will become the default in version 0.13.0
    (#4233 by Rémi Gau).
  ## Enhancements
  * NiftiSpheresMasker now has generate_report method (#3102 by
    Yasmin Mzayek and Nicolas Gensollen).
  * Allow passing Pandas Series of image filenames to
    SecondLevelModel (#4070 by Rémi Gau).
  * Allow passing arguments to first_level_from_bids to build first
    level models that include specific set of confounds by relying
    on the strategies from load_confounds (#4103 by Rémi Gau).
  * Support passing t and F contrasts to compute_contrast that that
    have fewer columns than the number of estimated parameters.
    Remaining columns are padded with zero (#4067 by Rémi Gau).
  * Multi-subject maskers’ generate_report method no longer fails
    with 5D data but instead shows report of first subject. User
    can index input list to show report for different subjects
    (#3935 by Yasmin Mzayek).
  * Allow global_signal parameter in load_confounds_strategy in
    denoise_strategy='compcor' (#4225 by Hao-Ting Wang).
  * Add two_sided option for binarize_img (#4121 by Steven
    Meisler).
  * generate_report now uses appropriate cut coordinates when
    functional image is provided (#4099 by Yasmin Mzayek and
    Nicolas Gensollen).
  * Mention the classification type (all-vs-one) in Decoding of a
    dataset after GLM fit for signal extraction (#4122 by Tamer
    Gezici).
  * Add backslash to homogenize Parcellations
- Release 0.10.2
  ## Higlights
  * Volume plotting functions like plotting.plot_img now have an
    optional radiological parameter, defaulting to False. If True,
    this will invert the x-axis and L and R annotations to confirm
    to radiological conventional view..
  * Update Decoder objects to use the more efficient
    LogisticRegressionCV.
  * Add LassoCV as a new estimator option for Decoder objects
  * Add vmin and symmetric_cbar arguments to
    nilearn.plotting.plot_img_on_surf.
  * Improve contrasts allowing fixed effects on F contrasts
  * New experimental surface API to facilitate working with surface
    data in downstream surface-based analyses. We provide this API
    as a nilearn.experimental.surface module as it is still
    incomplete and subject to change without a deprecation cycle..
  ## NEW
  * Volume plotting functions like plotting.plot_img now have an
    optional radiological parameter, defaulting to False. If True,
    this will invert the x-axis and L and R annotations to confirm
    to radiological conventional view..
  * New experimental surface API to facilitate working with surface
    data in downstream surface-based analyses. We provide this API
    as a nilearn.experimental.surface module as it is still
    incomplete and subject to change without a deprecation cycle..
  ## Fixes
  * Fix bug in method transform_imgs of
    maskers.MultiNiftiMapsMasker and maskers.MultiNiftiLabelsMasker
    that would raise an error if a list of sample_mask was
    specified to fit_transform.
  * Fix bug in nilearn.plotting.surf_plotting._plot_surf_matplotlib
    that would make vertices transparent when saving in PDF or SVG
    format.
  * Fix bug that would prevent using symmetric_cmap=True or the
    avg_method argument with plotting.plot_surf_roi.
  * Fixes a bug that would lead to an error when loading a
    fsaverage surface while relying on numpy >= 1.24.x.
  * Fix bug that would prevent loading the confounds of a gifti
    file in actual fmriprep datasets.
  * Fix bug that prevented using dataframes as input for second
    level GLM when computing contrasts.
  * Fix bug in glm.first_level.first_level_from_bids that returned
    no confound files if the corresponding bold files contained
    derivatives BIDS entities.
  * Fix bug in glm.first_level.first_level_from_bids that would
    throw a warning about slice_time_ref not being provided even
    when it was.
  * Fix bug where the cv_params_ attribute of fitter Decoder
    objects sometimes had missing entries if grid_param is a
    sequence of dicts with different keys.
  * Make the nilearn.interfaces.fmriprep.load_confounds confounds
    file selection more generic.
  * Change default figure sizes to prevent titles from overlapping
    figure content
  * Relax the nilearn.interfaces.fmriprep.load_confounds confounds
    selection on cosine as not all confound files contained the
    variables.
  * Fix pathlib.Path not being counted as Niimg-like object in
    image.new_img_like.
  * Fix fit_transform behavior to match when fit method is passed
    image data
  * Allow using both vmin and threshold with "plotly" engine to be
    consistent with "matplotlib" behavior
  * Set edgecolors to be the same as facecolors in
    plotting.plot_surf_contours so that ROI contours are rendered
    clearly
  * Refactor deprecation of behavior of
    datasets.fetch_atlas_craddock_2012,
    datasets.fetch_atlas_smith_2009 and
    datasets.fetch_atlas_basc_multiscale_2015 fetchers including
    using API consistent maps key
  ## Enhancements
  * Add cross-reference links to type definitions in public surface
    functions.
  * Update Decoder objects to use the more efficient
    LogisticRegressionCV.
  * Throw warning in glm.first_level.first_level_from_bids when
    using event.tsv files with no trial type column.
  * Make return key names in the description file of destrieux
    surface consistent with datasets.fetch_atlas_surf_destrieux.
  * Add LassoCV as a new estimator option for Decoder objects
  * Add vmin and symmetric_cbar arguments to
    nilearn.plotting.plot_img_on_surf.
  * Improve generate_report method of maskers by allowing users to
    pass a cmap argument for plotting image
  * Improve contrasts allowing fixed effects on F contrasts
  ## Changes
  * Validate the content of events files before plotting them.
  * nilearn.glm.first_level.experimental_paradigm.check_events will
    now throw a warning if some events have a 0 second duration and
    will throw an error if an event has NaN onset or duration.
  * Removed old files and test code from deprecated datasets COBRE
    and NYU resting state.
  * PEP8 and isort compliance extended to the whole nilearn
    codebase..
  * Finish applying black formatting to most of the codebase..
  * Empty region signals resulting from applying mask_img in
    maskers.NiftiLabelsMasker will no longer be kept in release
    0.15. Meanwhile, use keep_masked_labels parameter when
    initializing the maskers.NiftiLabelsMasker object to
    enable/disable this behavior..
  * Empty region signals resulting from applying mask_img in
    maskers.NiftiMapsMasker will no longer be kept in release 0.15.
    Meanwhile, use keep_masked_maps parameter when initializing the
    maskers.NiftiMapsMasker object to enable/disable this
    behavior..
  * Removed mention of license in "header".
  * Configure plots in example gallery for better rendering
  * Make one_mesh_info and full_brain_info into private functions
    _one_mesh_info and _full_brain_info
  * Refactor error raising tests using context managers
  * Added warning to deprecate darkness in
    surf_plotting._compute_facecolors_matplotlib and
    html_surface._get_vertexcolor
  * Replace skipped doctests with default code-blocks
  * Move the ~nilearn.plotting.html_surface._mix_colormaps to cm.py
    in nilearn.plotting
  * Remove deprecation decorator from ~nilearn.glm.regression
  * Expose standardize in plotting.plot_carpet and
    connectome.ConnectivityMeasure to handle "zscore" deprecation.
  * Example
    :ref:sphx_glr_auto_examples_01_plotting_plot_prob_atlas.py is
    shortened to speed up build time
- Drop numpy-1.25.patch
- Drop warning-based-sklearn-version.patch

-------------------------------------------------------------------
Thu Aug 10 09:12:46 UTC 2023 - Daniel Garcia <daniel.garcia@suse.com>

- Add numpy-1.25.patch, upstream patch gh#nilearn/nilearn#3746
- Add warning-based-sklearn-version.patch, upstream patch gh#nilearn/nilearn#3763

-------------------------------------------------------------------
Tue Jun 27 10:58:39 UTC 2023 - Markéta Machová <mmachova@suse.com>

- Update to 0.10.1
  * New function load_sample_motor_activation_image to load example
    contrast map
  * fsaverage meshes accessed through fetch_surf_fsaverage now come
    with flat maps for all resolutions
  * Improve how first_level_from_bids handles fetching slice timing
    metadata and add additional input validation. In release 0.12
    the default slice_time_ref will be None instead of 0
  * Fixes several bugs in first_level_from_bids.
  * Add correct “zscore_sample” strategy to signal._standardize
    which will replace the default “zscore” strategy in release 0.13
  * Moved packaging from setup.py and setuptools build backend to
    pyproject.toml and hatchling backend.
  * Restore resample_img compatibility with all nibabel.spatialimages.SpatialImage objects

-------------------------------------------------------------------
Fri Apr 14 08:53:23 UTC 2023 - Steve Kowalik <steven.kowalik@suse.com>

- Skip a failing array test.

-------------------------------------------------------------------
Mon Feb  6 11:41:58 UTC 2023 - Daniel Garcia <daniel.garcia@suse.com>

- Update to 0.10.0
  * New classes MultiNiftiLabelsMasker and MultiNiftiMapsMasker create maskers
    to extract signals from a list of subjects with 4D images using
    parallelization (#3237 by Yasmin Mzayek).
  * Updated docs with a new theme using furo (#3125 by Alexis Thual).
  * permuted_ols and non_parametric_inference now support TFCE statistic (#3196
    by Taylor Salo).
  * permuted_ols and non_parametric_inference now support cluster-level
    Family-wise error correction (#3181 by Taylor Salo).
  * save_glm_to_bids has been added, which writes model outputs to disk
    according to BIDS convention (#2715 by Taylor Salo).

-------------------------------------------------------------------
Tue Oct 11 22:59:44 UTC 2022 - John Vandenberg <jayvdb@gmail.com>

- Remove fix-test-decoder.patch merged upstream
- Remove use of pytest-xdist which makes failures harder to see
- Update to v0.9.2
  * save_glm_to_bids has been added, which writes model outputs to
    disk according to BIDS convention
  * permuted_ols and non_parametric_inference now support TFCE statistic
  * permuted_ols and non_parametric_inference now support cluster-level
    Family-wise error correction
  * Updated docs with a new theme using furo
  * Fix _NEUROVAULT_BASE_URL and _NEUROSYNTH_FETCH_WORDS_URL in
    nilearn/datasets/neurovault.py by using https instead of http
  * Convert references in nilearn/mass_univariate/permuted_least_squares.py
    to use bibtex format
  * Update Craddock 2012 parcellation url in nilearn/datasets/atlas.py
  * plot_roi failed before when used with the “contours” view type
    and passing a list of cut coordinates in display mode “x”, “y” or “z”;
    this has been corrected
  * plot_markers can now plot a single scatter point
  * Fix title display for plot_surf_stat_map. The title argument does
    not set the figure title anymore but the axis title.
  * load_surf_mesh loaded FreeSurfer specific surface files (e.g. .pial)
    with a shift in the coordinates. This is fixed by adding the c_ras
    coordinates to the mesh coordinates
  * Function nilearn.glm.second_level.second_level._check_second_level_input
    now raises an error when flm_object argument is False and
    second_level_input is a list of FirstLevelModel
  * Function resample_img now warns the user if the provided image has
    an sform code equal to 0 or None
  * Fix usage of scipy.stats.gamma.pdf in _gamma_difference_hrf function
    under nilearn/glm/first_level/hemodynamic_models.py, which resulted
    in slight distortion of HRF
  * Fix bug introduced due to a fix in the pre-release version of scipy
    (1.9.0rc1) which now enforces that elements of a band-pass filter must
    meet condition Wn[0] < Wn[1]. Now if band-pass elements are equal
    butterworth returns an unfiltered signal with a warning
  * The parameter alpha is now correctly passed to plot_glass_brain in
    plot_connectome
  * Fix plotting of background image in view_img when the background is
    not the MNI template
  * Fix the typographic error on the page Default Mode Network
    extraction of ADHD dataset
  * Add sample_masks to fit for censoring time points
  * Function run_glm and class FirstLevelModel now accept a random_state
    parameter, which allows users to seed the KMeans cluster model used
    to estimate AR coefficients
  * Conform seeding and docstrings in module _utils.data_gen
  * Docstrings of module second_level were improved
  * In get_clusters_table, when the center of mass of a binary
    cluster falls outside the cluster, report the nearest within-cluster
    voxel instead
  * Add n_elements_ attribute to masker classes
  * Functions expecting string filesystem paths now also accept
    path-like objects
  * Contributing guidelines now include a recommendation to run flake8
    locally on the branch diff with main
  * Improvements to permuted_ols and non_parametric_inference with TFCE
    statistic runtime
  * NiftiLabelsMasker now accepts 1-dimensional arrays in its
    inverse_transform method
  * Function plot_carpet argument cmap now respects behaviour specified
    by docs and changes the color of the carpet_plot. Changing the label
    colors is now delegated to a new variable cmap_labels
  * Function fetch_surf_fsaverage no longer supports the previously
    deprecated option fsaverage5_sphere
  * Classes RegressionResults, SimpleRegressionResults, OLSModel,
    and LikelihoodModelResults no longer support deprecated shortened
    attribute names, including df_resid, wdesign, wresid, norm_resid,
    resid, and wY
  * Function fetch_openneuro_dataset_index is now deprecated in favor
    of the new fetch_ds000030_urls function
  * 64-bit integers in Nifti files: some tools such as FSL, SPM and
    AFNI cannot handle Nifti images containing 64-bit integers.
    To avoid compatibility issues, it is best to avoid writing such
    images and in the future trying to create them with nibabel
    without explicitly specifying a data type will result in an error.
    To avoid this, new_img_like now warns when given int64 arrays
    and converts them to int32 when possible (ie when it would not
    result in an overflow). Moreover, any atlas fetcher that returned
    int64 images now produces images containing smaller ints.
  * Refactors fmriprep confound loading such that that the parsing
    of the relevant image file and the loading of the confounds are
    done in separate steps
  * Private submodules, functions, and classes from the decomposition
    module now start with a “_” character to make it clear that they
    are not part of the public API
  * Convert references in nilearn/glm/regression.py and
    nilearn/glm/thresholding.py to use footcite/footbibliography
  * Boolean input data in new_img_like now defaults to np.uint8
    instead of np.int8
  * The current behavior of maskers’ transform on 3D niimg inputs,
    in which a 2D array is returned, is deprecated, and 1D arrays
    will be returned starting in version 0.12

-------------------------------------------------------------------
Fri Sep 16 12:01:19 UTC 2022 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Disable multi-thread tests until fixed upstream -- gh#nilearn/nilearn#3359

-------------------------------------------------------------------
Tue Jul 12 14:02:31 UTC 2022 - Markéta Machová <mmachova@suse.com>

- Update to 0.9.1
  * Python 3.6 is deprecated and will be removed in release 0.10
  * Nibabel 2.x is no longer supported
  * Surface plotting functions can now produce interactive plots
    with Plotly
  * New module nilearn.interfaces to implement loading and saving
    utilities with various interfaces
  * New functions load_confounds and load_confounds_strategy to
    load confound variables easily from fMRIPrep outputs
  * New class HierarchicalKMeans which yields more balanced
    clusters than KMeans. It is also callable through Parcellations
    using method=hierarchical_kmeans
  * Masker objects like NiftiMasker now belong to the new module
    nilearn.maskers. The old import style, through the module
    input_data, still works but has been deprecated
  * Class NiftiMapsMasker can now generate HTML reports in the same
    way as NiftiMasker and NiftiLabelsMasker
  * The contributing documentation and maintenance pages were improved
  * many more changes, see upstream changelog
- Add upstream patch fix-test-decoder.patch
- Delete upstreamed patches:
  * nilearn-pr3136-pythoncall.patch
  * nilearn-pr3094-py310.patch

-------------------------------------------------------------------
Thu Jan 20 21:17:06 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update to 0.8.1
  * New atlas fetcher nilearn.datasets.fetch_atlas_juelich to
    download Juelich atlas from FSL.
  * New grey and white-matter template and mask loading functions:
    nilearn.datasets.load_mni152_gm_template,
    nilearn.datasets.load_mni152_wm_template,
    nilearn.datasets.load_mni152_gm_mask, and
    nilearn.datasets.load_mni152_wm_mask
  * Nilearn development process has been reworked. It now provides
    insights on nilearn organization as a project as well as more
    explicit Contribution Guidelines.
  * nilearn.image.binarize_img binarizes images into 0 and 1.
  * nilearn.input_data.NiftiLabelsMasker can now generate HTML
    reports in the same way as nilearn.input_data.NiftiMasker.
  * nilearn.signal.clean accepts new parameter sample_mask. shape:
    (number of scans - number of volumes removed, )
  * All inherent classes of nilearn.input_data.BaseMasker can use
    parameter sample_mask for sub-sample masking.
  * Fetcher nilearn.datasets.fetch_surf_fsaverage now accepts
    fsaverage3, fsaverage4 and fsaverage6 as values for parameter
    mesh, so that all resolutions of fsaverage from 3 to 7 are now
    available.
  * Fetcher nilearn.datasets.fetch_surf_fsaverage now provides
    attributes {area, curv, sphere, thick}_{left, right} for all
    fsaverage resolutions.
  * nilearn.glm.first_level.run_glm now allows auto regressive
    noise models of order greater than one.
  * Support for Nibabel 2.x is deprecated and will be removed in
    the 0.9 release.
- Add nilearn-pr3094-py310.patch -- gh#nilearn/nilearn#3094
- Add nilearn-pr3136-pythoncall.patch -- gh#nilearn/nilearn#3136
- Only test on 64-bit platforms
  -- http://nilearn.github.io/introduction.html#installation

-------------------------------------------------------------------
Fri Apr  9 11:54:35 UTC 2021 - Markéta Machová <mmachova@suse.com>

- Update to 0.7.1
  * New atlas fetcher nilearn.datasets.fetch_atlas_difumo to download
    Dictionaries of Functional Modes, or “DiFuMo”, that can serve as
    atlases to extract functional signals with different dimensionalities.
  * nilearn.decoding.Decoder and nilearn.decoding.DecoderRegressor is now
    implemented with random predictions to estimate a chance level.
  * Some functions are now implemented with new display mode Mosaic. That
    implies plotting 3D maps in multiple columns and rows in a single axes.
- Drop nilearn-fix-aarch64.patch

-------------------------------------------------------------------
Fri Jan 29 18:40:13 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Skip python36 build because Tumbleweed updates to SciPy 1.6.0
  which dropped support for Python 3.6 (NEP 29)

-------------------------------------------------------------------
Fri Nov 20 08:18:25 UTC 2020 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Add runtime deps: python-requests

-------------------------------------------------------------------
Mon Nov 16 08:30:47 UTC 2020 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Update to 0.7.0
- Add patch to fix aarch64 test:
  * nilearn-fix-aarch64.patch
- Drop upstreamed patches:
  * fix-test_save_cmap.patch
  * update-numpy-warning.patch
- Disable 'test_clean_confounds' and 'test_reorder_img_mirror '
  until we have a fix. See:
    https://github.com/nilearn/nilearn/issues/2608
    https://github.com/nilearn/nilearn/issues/2610

-------------------------------------------------------------------
Wed Oct 14 11:42:18 UTC 2020 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Backport patches to fix some tests:
  * update-numpy-warning.patch - https://github.com/nilearn/nilearn/pull/2530
  * fix-test_save_cmap.patch   - https://github.com/nilearn/nilearn/pull/2543

-------------------------------------------------------------------
Wed Apr 29 12:53:13 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Use xdist to speedup the tests to take less than 30 mins

-------------------------------------------------------------------
Thu Jan 30 15:59:31 UTC 2020 - Todd R <toddrme2178@gmail.com>

- Update to version 0.6.1
  + ENHANCEMENTS
    * html pages use the user-provided plot title, if any, as their title
  + Fixes
    * Fetchers for developmental_fmri and localizer datasets resolve URLs correctly.

-------------------------------------------------------------------
Mon Jan  6 15:55:04 UTC 2020 - Todd R <toddrme2178@gmail.com>

- Update to version 0.6.0
  + HIGHLIGHTS
    * Python2 and 3.4 are no longer supported. We recommend upgrading to Python 3.6 minimum.
    * Support for Python3.5 wil be removed in the 0.7.x release.
      Users with a Python3.5 environment will be warned at their first Nilearn import.
    * joblib is now a dependency
    * Minimum supported versions of packages have been bumped up.
      > Matplotlib -- v2.0
      > Scikit-learn -- v0.19
      > Scipy -- v0.19
  + NEW
    * A new method for :class:`nilearn.input_data.NiftiMasker` instances
      for generating reports viewable in a web browser, Jupyter Notebook, or VSCode.
    * A new function :func:`nilearn.image.get_data` to replace the deprecated
      nibabel method `Nifti1Image.get_data`. Now use `nilearn.image.get_data(img)`
      rather than `img.get_data()`. This is because Nibabel is removing the
      `get_data` method. You may also consider using the Nibabel
      `Nifti1Image.get_fdata`, which returns the data cast to floating-point.
      See https://github.com/nipy/nibabel/wiki/BIAP8 .
      As a benefit, the `get_data` function works on niimg-like objects such as
      filenames (see http://nilearn.github.io/manipulating_images/input_output.html ).
    * Parcellation method ReNA: Fast agglomerative clustering based on recursive
      nearest neighbor grouping.
      Yields very fast & accurate models, without creation of giant
      clusters.
    * Plot connectome strength
      Use :func:`nilearn.plotting.plot_connectome_strength` to plot the strength of a
      connectome on a glass brain.  Strength is absolute sum of the edges at a node.
    * Optimization to image resampling
    * New brain development fMRI dataset fetcher
      :func:`nilearn.datasets.fetch_development_fmri` can be used to download
      movie-watching data in children and adults. A light-weight dataset
      implemented for teaching and usage in the examples. All the connectivity examples
      are changed from ADHD to brain development fmri dataset.
  + ENHANCEMENTS
    * :func:`nilearn.plotting.view_img_on_surf`, :func:`nilearn.plotting.view_surf`
      and :func:`nilearn.plotting.view_connectome` can display a title, and allow
      disabling the colorbar, and setting its height and the fontsize of its ticklabels.
    * Rework of the standardize-options of :func:`nilearn.signal.clean` and the various Maskers
      in `nilearn.input_data`. You can now set `standardize` to `zscore` or `psc`. `psc` stands
      for `Percent Signal Change`, which can be a meaningful metric for BOLD.
    * Class :class:`nilearn.input_data.NiftiLabelsMasker` now accepts an optional
      `strategy` parameter which allows it to change the function used to reduce
      values within each labelled ROI. Available functions include mean, median,
      minimum, maximum, standard_deviation and variance.
      This change is also introduced in :func:`nilearn.regions.img_to_signals_labels`.
    * :func:`nilearn.plotting.view_surf` now accepts surface data provided as a file
      path.
  + CHANGES
    * :func:`nilearn.plotting.plot_img` now has explicit keyword arguments `bg_img`,
      `vmin` and `vmax` to control the background image and the bounds of the
      colormap. These arguments were already accepted in `kwargs` but not documented
      before.
  + FIXES
    * :class:`nilearn.input_data.NiftiLabelsMasker` no longer truncates region means to their integral part
      when input images are of integer type.
    * The arg `version='det'` in :func:`nilearn.datasets.fetch_atlas_pauli_2017` now  works as expected.
    * `pip install nilearn` now installs the necessary dependencies.
    * Lots of other fixes in documentation and examples. More detailed change list follows:
- Drop python2 support

-------------------------------------------------------------------
Fri Jul 26 18:00:50 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Initial version
