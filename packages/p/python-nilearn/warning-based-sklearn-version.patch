Index: nilearn-0.10.1/nilearn/decoding/tests/test_decoder.py
===================================================================
--- nilearn-0.10.1.orig/nilearn/decoding/tests/test_decoder.py
+++ nilearn-0.10.1/nilearn/decoding/tests/test_decoder.py
@@ -22,6 +22,7 @@ import warnings
 
 import numpy as np
 import pytest
+import sklearn
 from nilearn._utils.param_validation import check_feature_screening
 from nilearn.decoding.decoder import (
     Decoder,
@@ -36,6 +37,7 @@ from nilearn.decoding.decoder import (
 )
 from nilearn.decoding.tests.test_same_api import to_niimgs
 from nilearn.maskers import NiftiMasker
+from nilearn._utils import _compare_version
 from numpy.testing import assert_array_almost_equal
 from sklearn.datasets import load_iris, make_classification, make_regression
 from sklearn.dummy import DummyClassifier, DummyRegressor
@@ -626,8 +628,18 @@ def test_decoder_error_unknown_scoring_m
 
     model = Decoder(estimator=dummy_classifier, mask=mask, scoring="foo")
 
-    with pytest.raises(ValueError, match="'foo' is not a valid scoring value"):
-        model.fit(X, y)
+    if _compare_version(sklearn.__version__, ">", "1.2.2"):
+        with pytest.raises(
+            ValueError,
+            match="The 'scoring' parameter of check_scoring "
+            "must be a str among",
+        ):
+            model.fit(X, y)
+    else:
+        with pytest.raises(
+            ValueError, match="'foo' is not a valid scoring value"
+        ):
+            model.fit(X, y)
 
 
 def test_decoder_dummy_classifier_default_scoring():
