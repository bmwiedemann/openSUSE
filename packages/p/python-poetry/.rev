<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>8b8c65195190951e7b17694b44390e81</srcmd5>
    <version>1.0.0</version>
    <time>1576676820</time>
    <user>dimstar_suse</user>
    <comment>Initial packaging effort.</comment>
    <requestid>757719</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>88fc2bbd32f0a7ffa389998a2045c7e1</srcmd5>
    <version>1.0.0</version>
    <time>1576927874</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>758306</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>35bfe9b4bd75a71af418aafdec227c57</srcmd5>
    <version>1.0.5</version>
    <time>1585342619</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>787752</requestid>
  </revision>
  <revision rev="4" vrev="2">
    <srcmd5>ebcf771fa9001b749f7290f27d1d818c</srcmd5>
    <version>1.0.5</version>
    <time>1589892556</time>
    <user>dimstar_suse</user>
    <comment>- Don't use %python3_only command, but properly use alternatives.</comment>
    <requestid>807041</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>fe2c1a4e0d11616dcf0bbeae49142fc1</srcmd5>
    <version>1.0.9</version>
    <time>1594045794</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>818847</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>f4e230f92d223bb8082383a09fafcca3</srcmd5>
    <version>1.0.9</version>
    <time>1594706312</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>820530</requestid>
  </revision>
  <revision rev="7" vrev="3">
    <srcmd5>5d2382536aa4730b83003655b388921f</srcmd5>
    <version>1.0.9</version>
    <time>1596036993</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>823428</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>dcb15b294568c9bce31a88c41eeebce9</srcmd5>
    <version>1.0.10</version>
    <time>1596652150</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>824493</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>cfd964b470066948d71805e7e9a20be9</srcmd5>
    <version>1.1.4</version>
    <time>1603961346</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>844318</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>e46019edbf8fd0ad7ab4ca2351e7b041</srcmd5>
    <version>1.1.6</version>
    <time>1618775084</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>885595</requestid>
  </revision>
  <revision rev="11" vrev="2">
    <srcmd5>db20ddfc2bc9f2fd95d8f8c4912c6cb1</srcmd5>
    <version>1.1.6</version>
    <time>1624136504</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>900345</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>86b9c4a31fd735dd6b36b8b2ee559f5b</srcmd5>
    <version>1.1.10</version>
    <time>1632685699</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>920874</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>e3062e029c057bee4a024761722ed4eb</srcmd5>
    <version>1.1.12</version>
    <time>1639075509</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>935714</requestid>
  </revision>
  <revision rev="14" vrev="2">
    <srcmd5>e353854612c1ae80555cc3daa496b8c4</srcmd5>
    <version>1.1.12</version>
    <time>1640108424</time>
    <user>dimstar_suse</user>
    <comment>- Add poetry-3544-py310.patch for compatibility with Python 3.10
  gh#python-poetry/poetry#3544 (forwarded request 941282 from bnavigator)</comment>
    <requestid>941283</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>3411891f233ffa01375964fdbd39768b</srcmd5>
    <version>1.1.13</version>
    <time>1647806081</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.1.13
  * Fixed an issue where envs in MSYS2 always reported as broken
    (#4942)
  * Fixed an issue where conda envs in windows are always reported
    as broken(#5008)
  * Fixed an issue where Poetry doesn't find its own venv on poetry
    self update (#5048)
- Refresh use-new-name-of-MockFixture.patch
- Drop poetry-3544-py310.patch (forwarded request 962669 from bnavigator)</comment>
    <requestid>962670</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>2e2f7157f0bba26dc13ed3a38b386927</srcmd5>
    <version>1.1.14</version>
    <time>1657487715</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.1.14
  * Fixed an issue where dependencies hashes could not be retrieved
    when locking due to a breaking change on PyPI JSON API (#5973) (forwarded request 987967 from bnavigator)</comment>
    <requestid>987968</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>1bb6c49d93bd1329e6ae7669df0e2154</srcmd5>
    <version>1.1.15</version>
    <time>1661593806</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.1.15
  * Poetry now fallback to gather metadata for dependencies via
    pep517 if parsing pyproject.toml fail (#6206)
  * Extras and extras dependencies are now sorted in lock file
    (#6207)</comment>
    <requestid>999443</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>4053ab84cf6828fa83167ac43bf3d598</srcmd5>
    <version>1.2.2</version>
    <time>1666011449</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.2.2
  * Add forward compatibility for lock file format 2.0, which will
    be used by Poetry 1.3 (#6608).
  * Allow poetry lock to re-generate the lock file when invalid or
    incompatible (#6753).
  * Fix an issue where the deprecated JSON API was used to query
    PyPI for available versions of a package (#6081).
  * Fix an issue where versions were escaped wrongly when building
    the wheel name (#6476).
  * Fix an issue where the installation of dependencies failed if
    pip is a dependency and is updated in parallel to other
    dependencies (#6582).
  * Fix an issue where the names of extras were not normalized
    according to PEP 685 (#6541).
  * Fix an issue where sdist names were not normalized (#6621).
  * Fix an issue where invalid constraints, which are ignored, were
    only reported in a debug message instead of a warning (#6730). (forwarded request 1009616 from bnavigator)</comment>
    <requestid>1009617</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>6a46adb4e8a2592b1dd50531fe7a2f1e</srcmd5>
    <version>1.3.1</version>
    <time>1671132540</time>
    <user>dimstar_suse</user>
    <comment>- Fix python-tomli requirement, there's no release &gt; 2.0.1 yet.
- Update to 1.3.1 
  * Fix an issue where an explicit dependency on lockfile was
    missing, resulting in a broken Poetry in rare circumstances
    (7169).
- Catch up with upstream dependencies changed in previous updates
- Update to 1.3.0 
  Added
  * Mark the lock file with an @generated comment as used by common tooling (#2773).
  * poetry check validates trove classifiers and warns for deprecations (#2881).
  * Introduce a top level -C, --directory option to set the working path (#6810).
  Changed
  * New lock file format (version 2.0) (#6393).
  * Path dependency metadata is unconditionally re-locked (#6843).
  * URL dependency hashes are locked (#7121).
  * poetry update and poetry lock should now resolve dependencies more similarly (#6477).
  * poetry publish will report more useful errors when a file does not exist (#4417).
  * poetry add will check for duplicate entries using canonical names (#6832).
  * Wheels are preferred to source distributions when gathering metadata (#6547).
  * Git dependencies of extras are only fetched if the extra is requested (#6615).
  * Invoke pip with --no-input to prevent hanging without feedback (#6724, #6966).
  * Invoke pip with --isolated to prevent the influence of user configuration (#6531).
  * Interrogate environments with Python in isolated (-I) mode (#6628).
  * Raise an informative error when multiple version constraints overlap and are incompatible (#7098).
  Fixed
  * Fix an issue where concurrent instances of Poetry would corrupt the artifact cache (#6186).
  * Fix an issue where Poetry can hang after being interrupted due to stale locking in cache (#6471).
  * Fix an issue where the output of commands executed with --dry-run contained duplicate entries (#4660).
  * Fix an issue where requestsâ€™s pool size did not match the number of installer workers (#6805).
  * Fix an issue where poetry show --outdated failed with a runtime error related to direct origin dependencies (#6016).
  * Fix an issue where only the last command of an ApplicationPlugin is registered (#6304).
  * Fix an issue where git dependencies were fetched unnecessarily when running poetry lock --no-update (#6131).
  * Fix an issue where stdout was polluted with messages that should go to stderr (#6429).
  * Fix an issue with poetry shell activation and zsh (#5795).
  * Fix an issue where a url dependencies were shown as outdated (#6396).
  * Fix an issue where the source field of a dependency with extras was ignored (#6472).
  * Fix an issue where a package from the wrong source was installed for a multiple-constraints dependency with different sources (#6747).
  * Fix an issue where dependencies from different sources where merged during dependency resolution (#6679).
  * Fix an issue where experimental.system-git-client could not be used via environment variable (#6783).
  * Fix an issue where Poetry fails with an AssertionError due to distribution.files being None (#6788).
  * Fix an issue where poetry env info did not respect virtualenvs.prefer-active-python (#6986).
  * Fix an issue where poetry env list does not list the in-project environment (#6979).
  * Fix an issue where poetry env remove removed the wrong environment (#6195).
  * Fix an issue where the return code of a script was not relayed as exit code (#6824).
  * Fix an issue where the solver could silently swallow ValueError (#6790).
  Docs
  * Improve documentation of package sources (#5605).
  * Correct the default cache path on Windows (#7012). 
</comment>
    <requestid>1042957</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>5ef61257141c63efb7071b222289473b</srcmd5>
    <version>1.3.2</version>
    <time>1673888345</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.3.2
  * Fix a performance regression when locking dependencies from
    PyPI (#7232).
  * Fix an issue where passing a relative path via -C, --directory
    fails (#7266).
- Fix multibuild test src.rpm package names</comment>
    <requestid>1058560</requestid>
  </revision>
  <revision rev="21" vrev="2">
    <srcmd5>30ccb716a5747d706b6c4309e712f8ab</srcmd5>
    <version>1.3.2</version>
    <time>1677878919</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1069157</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>f000874e3b9d4f8908146bf46697bd6d</srcmd5>
    <version>1.4.2</version>
    <time>1682452488</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.4.2
  * When trying to install wheels with invalid RECORD files, Poetry does
    not fail anymore but only prints a warning.
    This mitigates an unintended change introduced in Poetry 1.4.1 (#7694).
  * Fix an issue where relative git submodule urls were not parsed correctly (#7017).
  * Fix an issue where Poetry could freeze when building a project with a build
    script if it generated enough output to fill the OS pipe buffer (#7699).
- Changes in 1.4.0
  * Add a modern installer (installer.modern-installation) for
    faster installation of packages and independence from pip
    (#6205).
  * Add support for Private :: trove classifiers (#7271).
  * Add the version of poetry in the @generated comment at the
    beginning of the lock file (#7339).
  * Add support for virtualenvs.prefer-active-python when running
    poetry new and poetry init (#7100).
  * Deprecate the old installer, i.e. setting
    experimental.new-installer to false (#7358).
  * Remove unused platform field from cached package info and bump
    the cache version (#7304).
  * Extra dependencies of the root project are now sorted in the
    lock file (#7375).
  * Remove upper boundary for importlib-metadata dependency
    (#7434).
  * Validate path dependencies during use instead of during
    construction (#6844).
  * Remove the deprecated repository modules (#7468).</comment>
    <requestid>1082802</requestid>
  </revision>
  <revision rev="23" vrev="2">
    <srcmd5>bb886551d5c55ad2159beaf69ef74510</srcmd5>
    <version>1.4.2</version>
    <time>1683111432</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1084123</requestid>
  </revision>
  <revision rev="24" vrev="3">
    <srcmd5>c14d6f9dcc74edc8f20b96eb51ca7e13</srcmd5>
    <version>1.4.2</version>
    <time>1683630508</time>
    <user>dimstar_suse</user>
    <comment>- Sync requests-toolbelt clamps with python metadata
  * Add poetry-pr7893-unpin-requests-toolbelt.patch
  * gh#python-poetry/poetry#7893
- Remove python-requests-toolbelt upper version limit to make it work
  with latest request (1.0.0)
- add sle15_python_module_pythons
</comment>
    <requestid>1085570</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>4810f7688c97e3a121e43fe87959d940</srcmd5>
    <version>1.5.0</version>
    <time>1684846461</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.5.0
  ## Added
  * Introduce the new source priorities explicit and supplemental
    (#7658, #6879).
  * Introduce the option to configure the priority of the implicit
    PyPI source (#7801).
  * Add handling for corrupt cache files (#7453).
  * Improve caching of URL and git dependencies (#7693, #7473).
  * Add option to skip installing directory dependencies (#6845,
    #7923).
  * Add --executable option to poetry env info (#7547).
  * Add --top-level option to poetry show (#7415).
  * Add --lock option to poetry remove (#7917).
  * Add experimental POETRY_REQUESTS_TIMEOUT option (#7081).
  * Improve performance of wheel inspection by avoiding unnecessary
    file copy operations (#7916).
  ## Changed
  * Remove the old deprecated installer and the corresponding
    setting experimental.new-installer (#7356).
  * Introduce priority key for sources and deprecate flags default
    and secondary (#7658).
  * Deprecate poetry run &lt;entry point&gt; if the entry point was not
    previously installed via poetry install (#7606).
  * Only write the lock file if the installation succeeds (#7498).
  * Do not write the unused package category into the lock file
    (#7637).
  ## Fixed
  * Fix an issue where Poetry's internal pyproject.toml continually
    grows larger with empty lines (#7705).
  * Fix an issue where Poetry crashes due to corrupt cache files</comment>
    <requestid>1088458</requestid>
  </revision>
</revisionlist>
