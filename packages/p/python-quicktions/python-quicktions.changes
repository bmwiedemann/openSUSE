-------------------------------------------------------------------
Mon Jun 10 09:45:47 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 1.18:
  * New binary wheels were added built with gcc 12
    (manylinux_2_28).
- use PEP517/wheel build

-------------------------------------------------------------------
Mon Mar 25 12:27:02 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 1.17:
  * Math operations were sped up by inlined binary GCD
    calculation.

-------------------------------------------------------------------
Sun Jan 21 11:21:45 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 1.16:
  * Formatting support was improved, following CPython 3.13a3 as
    of https://github.com/python/cpython/pull/111320
  * Add support for Python 3.13 by using Cython 3.0.8 and calling
    math.gcd().

-------------------------------------------------------------------
Fri Dec  8 12:06:23 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 1.15:
  * Add support for Python 3.12 by using Cython 3.0.2.

-------------------------------------------------------------------
Sun Aug 13 21:40:59 UTC 2023 - Dirk Müller <dmueller@suse.com>

- use generic Cython dependency >= 3.0

-------------------------------------------------------------------
Mon Mar 20 06:44:40 UTC 2023 - Daniel Garcia <daniel.garcia@suse.com>

- Enable python 3.11 build again, now is supported
- Update to 1.14
  - Implement __format__ for Fraction, following python/cpython#100161
  - Implement Fraction.is_integer(), following python/cpython#100488
  - Fraction.limit_denominator() is faster, following
    python/cpython#93730
  - Internal creation of result Fractions is about 10% faster if the
    calculated numerator/denominator pair is already normalised,
    following python/cpython#101780
  - Built using Cython 3.0.0b1.
- 1.13
  - Parsing very long numbers from a fraction string was very slow,
    even slower than fractions.Fraction. The parser is now faster in
    all cases (and still much faster for shorter numbers).
  - Fraction did not implement __int__.
    https://bugs.python.org/issue44547
- 1.12
  - Faster and more space friendly pickling and unpickling.
    https://bugs.python.org/issue44154
  - Algorithmically faster arithmetic for large denominators, although
    slower for small fraction components.
    https://bugs.python.org/issue43420 Original patch for CPython by
    Sergey B. Kirpichev and Raymond Hettinger.
  - Make sure bool(Fraction) always returns a bool.
    https://bugs.python.org/issue39274
  - Built using Cython 3.0.0a10.

-------------------------------------------------------------------
Tue Feb 21 08:50:45 UTC 2023 - Daniel Garcia <daniel.garcia@suse.com>

- Skip python 3.11, it's not supported yet
  gh#scoder/quicktions#6

-------------------------------------------------------------------
Fri Mar 20 08:37:42 UTC 2020 - pgajdos@suse.com

- version update to 1.11
  * Fix ``OverflowError`` when parsing string values with long decimal parts.

-------------------------------------------------------------------
Tue Sep 10 10:58:23 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 1.10:
  * New method fraction.as_integer_ratio()
  * python 3.8 fixes

-------------------------------------------------------------------
Tue May 14 18:27:23 UTC 2019 - John Jolly <jjolly@suse.com>

- Update to 1.9
  + Substantially faster normalisation (and therefore instantiation)
    in Py3.5+.
  + // (floordiv) now follows the expected rounding behaviour when used
    with floats (by converting to float first), and is much faster for
    integer operations.
  + Fix return type of divmod(), where the first item should be an integer.
  + Further speed up mod and divmod operations.
- Update to 1.8
  + Faster mod and divmod calculation.
- Update to 1.7
  + Faster normalisation and fraction string parsing.
  + Add support for Python 3.7.
  + Built using Cython 0.29.
- Changed %check to use %pytest_arch

-------------------------------------------------------------------
Fri Jun 15 20:40:25 UTC 2018 - toddrme2178@gmail.com

- Use more compatible py.test syntax.

-------------------------------------------------------------------
Wed May 16 15:36:31 UTC 2018 - toddrme2178@gmail.com

- Update to 1.6
  * Speed up Fraction creation from a string value by 3-5x.
  * Built using Cython 0.28.1.
- Update to 1.5
  * Result of power operator (``**``) was not normalised for negative values.
  * Built using Cython 0.27.2.
- Update to 1.4
  * Rebuilt using Cython 0.26.1 to improve support of Python 3.7.
- Update to 1.3
  * repair the faster instantiation from Decimal values in Python 3.6
  * avoid potential glitch for certain large numbers in normalisation under Python 2.x
- Update to 1.2
  * change hash function in Python 2.x to match that of ``fractions.Fraction``
- Update to 1.1
  * faster instantiation from float values
  * faster instantiation from Decimal values in Python 3.6
- Update to 1.0
  * ``Fraction.imag`` property could return non-zero
  * parsing strings with long fraction parts could use an incorrect scale
- Implement single-spec version

-------------------------------------------------------------------
Thu Sep  3 14:34:44 UTC 2015 - toddrme2178@gmail.com

- Update to 0.7 (2014-10-09)
  * faster instantiation from float and string values
    fix test in Python 2.x
- Update to 0.6 (2014-10-09)
  * faster normalisation (and thus instantiation)

-------------------------------------------------------------------
Wed Oct  8 13:27:43 UTC 2014 - toddrme2178@gmail.com

- Initial version

