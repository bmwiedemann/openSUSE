<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>e7b6c33d28434697f134c0cf7ad51354</srcmd5>
    <version>1.6</version>
    <time>1527582511</time>
    <user>dimstar_suse</user>
    <comment>Fast fractions data type for rational numbers</comment>
    <requestid>609891</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>68022439b2c45296c4d45c5815ff4023</srcmd5>
    <version>1.6</version>
    <time>1529402605</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>617148</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>126d871bf41e5668662a28addeab6d76</srcmd5>
    <version>1.9</version>
    <time>1558520379</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>702947</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>397d4f7d33c7cd4f1e68aaf2a202b2e2</srcmd5>
    <version>1.10</version>
    <time>1568190956</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.10:
  * New method fraction.as_integer_ratio()
  * python 3.8 fixes</comment>
    <requestid>729803</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>0d74cbc4a0e6db45c1819ebea0b42b29</srcmd5>
    <version>1.11</version>
    <time>1584745035</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>786785</requestid>
  </revision>
  <revision rev="6" vrev="2">
    <srcmd5>b8f2d20dc3aed77a59bfa6b99f28ec99</srcmd5>
    <version>1.11</version>
    <time>1676990186</time>
    <user>dimstar_suse</user>
    <comment>- Skip python 3.11, it's not supported yet
  gh#scoder/quicktions#6
</comment>
    <requestid>1066942</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>b4d0e4bef5327c07f7a220d8f4454295</srcmd5>
    <version>1.14</version>
    <time>1679416841</time>
    <user>dimstar_suse</user>
    <comment>- Enable python 3.11 build again, now is supported
- Update to 1.14
  - Implement __format__ for Fraction, following python/cpython#100161
  - Implement Fraction.is_integer(), following python/cpython#100488
  - Fraction.limit_denominator() is faster, following
    python/cpython#93730
  - Internal creation of result Fractions is about 10% faster if the
    calculated numerator/denominator pair is already normalised,
    following python/cpython#101780
  - Built using Cython 3.0.0b1.
- 1.13
  - Parsing very long numbers from a fraction string was very slow,
    even slower than fractions.Fraction. The parser is now faster in
    all cases (and still much faster for shorter numbers).
  - Fraction did not implement __int__.
    https://bugs.python.org/issue44547
- 1.12
  - Faster and more space friendly pickling and unpickling.
    https://bugs.python.org/issue44154
  - Algorithmically faster arithmetic for large denominators, although
    slower for small fraction components.
    https://bugs.python.org/issue43420 Original patch for CPython by
    Sergey B. Kirpichev and Raymond Hettinger.
  - Make sure bool(Fraction) always returns a bool.
    https://bugs.python.org/issue39274
  - Built using Cython 3.0.0a10.
</comment>
    <requestid>1073017</requestid>
  </revision>
</revisionlist>
