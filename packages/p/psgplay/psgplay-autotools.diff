--- acinclude.m4
+++ acinclude.m4
@@ -7,15 +7,21 @@
 dnl AM_PATH_ESD([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]]])
 dnl Test for ESD, and define ESD_CFLAGS and ESD_LIBS
 dnl
-AC_DEFUN(AM_PATH_ESD,
+AC_DEFUN([AM_PATH_ESD],
 [dnl 
 dnl Get the cflags and libraries from the esd-config script
 dnl
-AC_ARG_WITH(esd-prefix,[  --with-esd-prefix=PFX   Prefix where ESD is installed (optional)],
+AC_PREREQ(2.57)
+AC_ARG_WITH(esd-prefix,AC_HELP_STRING([--with-esd-prefix=PFX],
+				      [Prefix where ESD is installed (optional)]),
             esd_prefix="$withval", esd_prefix="")
-AC_ARG_WITH(esd-exec-prefix,[  --with-esd-exec-prefix=PFX Exec prefix where ESD is installed (optional)],
+
+AC_ARG_WITH(esd-exec-prefix, AC_HELP_STRING([--with-esd-exec-prefix=PFX],
+					    [Exec prefix where ESD is installed (optional)]),
             esd_exec_prefix="$withval", esd_exec_prefix="")
-AC_ARG_ENABLE(esdtest, [  --disable-esdtest       Do not try to compile and run a test ESD program],
+
+AC_ARG_ENABLE(esdtest, AC_HELP_STRING([--disable-esdtest],
+				      [Do not try to compile and run a test ESD program]),
 		    , enable_esdtest=yes)
 
   if test x$esd_exec_prefix != x ; then
@@ -79,7 +85,7 @@
   return new_str;
 }
 
-int main ()
+int main (void)
 {
   int major, minor, micro;
   char *tmp_version;
@@ -166,8 +172,9 @@
 dnl PSG_FIXED_MATH
 dnl Check wheter to use integer math instead of floating-point math.
 
-AC_DEFUN(PSG_FIXED_MATH,
-[AC_CACHE_CHECK(whether integer math is much faster than floating-point math, ac_cv_psg_fixed_math,
+AC_DEFUN([PSG_FIXED_MATH],
+[AC_PREREQ(2.57)
+AC_CACHE_CHECK(whether integer math is much faster than floating-point math, ac_cv_psg_fixed_math,
 [
 OLD_CFLAGS="$CFLAGS"
 CFLAGS=""
@@ -203,7 +210,7 @@
   t2 -= t1;
   return t2;
 }
-int main ()
+int main (void)
 {
   int i;
   time_t t1, t2;
@@ -222,6 +229,6 @@
 ], ac_cv_psg_fixed_math=yes, ac_cv_psg_fixed_math=no, ac_cv_psg_fixed_math=no)])
 CFLAGS="$OLD_CFLAGS"
 if test $ac_cv_psg_fixed_math = yes; then
-  AC_DEFINE(FIXED_MATH, 1)
+  AC_DEFINE(FIXED_MATH, 1, [Define if integer math is considerably than floating-point math])
 fi
 ])
