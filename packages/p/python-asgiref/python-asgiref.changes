-------------------------------------------------------------------
Wed Nov 29 13:04:33 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 3.7.2:
  * The type annotations for SyncToAsync and AsyncToSync have been
    changed to more accurately reflect the kind of callables they
    return.
  * On Python 3.10 and below, the version of the "typing_extensions"
    package is now constrained to be at least version 4 (as we depend
    on functionality in that version and above)
  * Contextvars are now required for the implementation of `sync`
    as Python 3.6 is now no longer a supported version.
  * sync_to_async and async_to_sync now pass-through
  * Debug and Lifespan State extensions have resulted in a typing
    change for some request and response types. This change should
    be backwards-compatible.
  * ``asgiref`` frames will now be hidden in Django tracebacks
    by default.
  * Raw performance and garbage collection improvements in Local,
    SyncToAsync, and AsyncToSync.

-------------------------------------------------------------------
Fri Apr 21 12:22:02 UTC 2023 - Dirk Müller <dmueller@suse.com>

- add sle15_python_module_pythons (jsc#PED-68)

-------------------------------------------------------------------
Thu Apr 13 22:39:57 UTC 2023 - Matej Cepl <mcepl@suse.com>

- Make calling of %{sle15modernpython} optional.

-------------------------------------------------------------------
Sat Jan  7 09:11:28 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 3.6.0:
  * Two new functions are added to the ``asgiref.sync`` module:
    ``iscoroutinefunction()`` and ``markcoroutinefunction()``.
  * Python 3.12 deprecates ``asyncio.iscoroutinefunction()`` as an alias for
    ``inspect.iscoroutinefunction()``, whilst also removing the
    ``_is_coroutine`` marker.  The latter is replaced with the
    ``inspect.markcoroutinefunction`` decorator.
  * The new ``asgiref.sync`` functions are compatibility shims for these
    functions that can be used until Python 3.12 is the minimum supported
    version.
  * The ``loop`` argument to ``asgiref.timeout.timeout`` is deprecated. As per
    other ``asyncio`` based APIs, the running event loop is used by default.
    Note that ``asyncio`` provides timeout utilities from Python 3.11, and
    these should be preferred where available.
  * Support for the ``ASGI_THREADS`` environment variable, used by
    ``SyncToAsync``, is removed. In general, a running event-loop is not
    available to `asgiref` at import time, and so the default thread pool
    executor cannot be configured. Protocol servers, or applications, should set
    the default executor as required when configuring the event loop at
    application startup.

-------------------------------------------------------------------
Sat Jun  4 15:28:14 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 3.5.2:
  * Fix async-to-async typo
  * Add tests for sync_to_async
  * Improved docs - Starlette supports WebSockets
  * Use get_event_loop in class-level code
  * Changed how StatelessServer handles event loops
  * Fixed pytest_asyncio deprecation warning.
  * Drop python 3.6, add python 3.10
  * Fix allowed values for spec_version
  * Rewrote multiprocessing test to use no local functions
  * Fixed a typographical error
  * Remove SOCK_NONBLOCK from socket creation on tests
  * Preserve CurrentThreadExecutor across create_task
  * Don't warn 'non-async-marked callable' for async callable instance
  * Disallow async callable class instances as callable
  * Fix root_path in WebSocket Connection Scope

-------------------------------------------------------------------
Tue Aug 31 19:28:56 UTC 2021 - Torsten Gruner <simmphonie@opensuse.org>

- Update to 3.4.1
  * Fixed an issue with the deadlock detection where it had false positives
    during exception handling- Release to 3.4.0
- Release to 3.4.0
  * Calling sync_to_async directly from inside itself (which causes a deadlock
    when in the default, thread-sensitive mode) now has deadlock detection.
  * asyncio usage has been updated to use the new versions of get_event_loop,
    ensure_future, wait and gather, avoiding deprecation warnings in Python 3.10.
    Python 3.6 installs continue to use the old versions; this is only for 3.7+
  * sync_to_async and async_to_sync now have improved type hints that pass
    through the underlying function type correctly.
  * All Websocket* types are now spelled WebSocket, to match our specs and the
    official spelling. The old names will work until release 3.5.0, but will
    raise deprecation warnings.
  * The typing for WebSocketScope and HTTPScope's `extensions` key has been
    fixed.

-------------------------------------------------------------------
Wed Jul  7 09:46:52 UTC 2021 - Markéta Machová <mmachova@suse.com>

- Adjust requirements to work also on Leap

-------------------------------------------------------------------
Wed May  5 17:30:59 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Update to 3.3.4
  * The async_to_sync type error is now a warning due the
    high false negative rate when trying to detect
    coroutine-returning callables in Python.
- Release to 3.3.3
  * The sync conversion functions now correctly detect
    functools.partial and other wrappers around async
    functions on earlier Python releases.
- Release to 3.3.2
  * SyncToAsync now takes an optional "executor" argument if
    you want to supply your own executor rather than using
    the built-in one.
  * async_to_sync and sync_to_async now check their
    arguments are functions of the correct type.
  * Raising CancelledError inside a SyncToAsync function no
    longer stops a future call from functioning.
  * ThreadSensitive now provides context hooks/override
    options so it can be made to be sensitive in a unit
    smaller than threads (e.g. per request)

-------------------------------------------------------------------
Thu Jan 14 04:31:06 UTC 2021 - Steve Kowalik <steven.kowalik@suse.com>

- Update to 3.3.1
  * Updated StatelessServer to use ASGI v3 single-callable applications.
  * sync_to_async now defaults to thread-sensitive mode being on
  * async_to_sync now works inside of forked processes
  * WsgiToAsgi now correctly clamps its response body when Content-Length
    is set

-------------------------------------------------------------------
Wed Jul  1 04:59:38 UTC 2020 - Steve Kowalik <steven.kowalik@suse.com>

- Update to 3.2.10:
  * Fixed bugs due to bad WeakRef handling introduced in 3.2.8
  * Fixed regression with exception handling in 3.2.8 related to the
    contextvars fix.
  * Fixed small memory leak in local.Local
  * contextvars are now persisted through AsyncToSync

-------------------------------------------------------------------
Fri Apr 24 06:47:42 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Execute tests

-------------------------------------------------------------------
Thu Apr 23 16:53:45 UTC 2020 - Marcus Rueckert <mrueckert@suse.de>

- initial package
