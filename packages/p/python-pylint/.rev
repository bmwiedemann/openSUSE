<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>1f17a1de98aa3464329c51cce07afa85</srcmd5>
    <version>1.6.4</version>
    <time>1486389818</time>
    <user>dimstar_suse</user>
    <comment>Package for certbot. The Letsencrypt client.</comment>
    <requestid>449881</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>1a09f72f6920d762528ea39df0edfae6</srcmd5>
    <version>1.7.0~git.1489322553.d78e0130</version>
    <time>1492714162</time>
    <user>dimstar_suse</user>
    <comment>- uninstall alternatives in %postun
- add update-alternatives requires

- update for singlespec
- enable test suite for all pythons
- update to 1.7.0 git pre-release, for python 3.6 support
  (boo#1026174)
  * multitude of new checkers
  * support for namespace packages
  * dropped pylint-gui
  * see changes in /usr/share/doc/packages/python-pylint/ChangeLog

- Update to version 1.6.5
  see changes in /usr/share/doc/packages/python-pylint/ChangeLog</comment>
    <requestid>483385</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>e8dba972d0680a8301f9a9cd9bcab41d</srcmd5>
    <version>1.8.2</version>
    <time>1516880250</time>
    <user>dimstar_suse</user>
    <comment>- Switch to regular releases again
- Update to 1.8.3:
  * Various false positives were fixed
  * Many additional python3 tweaks
  * For more see ChangeLog
- Drop test conditional as it is always on
- Add py2 and py3 bconds to allow building in the respective
  enviroments
- Run only python3 tests it takes ages to finish and we should focus
  only on one variant
  * Also few tests currently fail and upstream is aware so put there
    ||:
    https://github.com/PyCQA/pylint/issues/1847</comment>
    <requestid>568903</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>8bcb709d0cc2d68b0a01b6d9e3a98055</srcmd5>
    <version>1.9.2</version>
    <time>1532160464</time>
    <user>dimstar_suse</user>
    <comment>- Enable tests and make sure they pass

- Update to 1.9.2:
  * New Python 3 checkers
  * Added two new Python 3 porting checks
  * Added a new deprecated-sys-function check
  * Added xreadlines-attribute check

- Update to 1.8.2:</comment>
    <requestid>623129</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>90f712e22f357957fe579106c6470097</srcmd5>
    <version>2.1.1</version>
    <time>1537966422</time>
    <user>dimstar_suse</user>
    <comment>- Depend on typed-ast as it is used in testsuite

- Version update to 2.1.1:
  * latest release supports only python3
  * Require 2.0 series astroid</comment>
    <requestid>636828</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>cd38bcae89ca7b1d31c44223959d4eb6</srcmd5>
    <version>2.2.2</version>
    <time>1544816794</time>
    <user>dimstar_suse</user>
    <comment>- Update to 2.2.2:
  * Black is more used
  * Many bugfixes
  * For details see Changelog

- Fix fdupes call</comment>
    <requestid>655711</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>222fc0dbc4d0e44994fa111ff7a1a75d</srcmd5>
    <version>2.2.2</version>
    <time>1546946220</time>
    <user>dimstar_suse</user>
    <comment>- Fix build on SLE12</comment>
    <requestid>662457</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>130415dba4f33faceb3096e11ceab6d2</srcmd5>
    <version>2.3.1</version>
    <time>1552039286</time>
    <user>dimstar_suse</user>
    <comment>- Update to 2.3.1:
  * Compat with astroid 2.2</comment>
    <requestid>682155</requestid>
  </revision>
  <revision rev="9" vrev="2">
    <srcmd5>190d435621de4adad71a23bde7670767</srcmd5>
    <version>2.3.1</version>
    <time>1560459619</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>708745</requestid>
  </revision>
  <revision rev="10" vrev="3">
    <srcmd5>b8b32c76d6c8e2d24f3123fddb856b9c</srcmd5>
    <version>2.3.1</version>
    <time>1565178871</time>
    <user>dimstar_suse</user>
    <comment>- Do not install tests on system</comment>
    <requestid>720100</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>03373f8307d489617e1e175bad316fee</srcmd5>
    <version>2.4.2</version>
    <time>1570701165</time>
    <user>dimstar_suse</user>
    <comment>- Update to 2.4.2:
  * Various bugfixes and compat with newer releases of astroid

- Skip pylint/test/extensions/test_redefined.py::test_types_redefined
  (gh#PyCQA/pylint#3171)</comment>
    <requestid>736468</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>a8c4cf09da502f01038937a5f64a33af</srcmd5>
    <version>2.4.3</version>
    <time>1572883750</time>
    <user>dimstar_suse</user>
    <comment>- Update to 2.4.3:
  * Fix an issue with ``unnecessary-comprehension`` in comprehensions with additional repacking of elements.
  * ``import-outside-toplevel`` is emitted for ``ImportFrom`` nodes as well.
  * Do not emit ``no-method-argument`` for functions using positional only args.
  * ``consider-using-sys-exit`` is no longer emitted when `exit` is imported in the local scope.
  * `invalid-overridden-method` takes `abc.abstractproperty` in account
  * Fixed ``missing-yield-type-doc`` getting incorrectly raised when
  a generator does not document a yield type but has a type annotation.
  * ``typing.overload`` functions are exempted from ``too-many-function-args``</comment>
    <requestid>743455</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>060175cbdd36af512fa4923c2699137c</srcmd5>
    <version>2.4.4</version>
    <time>1574414776</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>750019</requestid>
  </revision>
  <revision rev="14" vrev="2">
    <srcmd5>2a818f11510e4f7848c592b83189c3b5</srcmd5>
    <version>2.4.4</version>
    <time>1585265380</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>788345</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>89dcbce0272ec390d520705ba920ab4f</srcmd5>
    <version>2.5.2</version>
    <time>1590649669</time>
    <user>maxlin_factory</user>
    <comment></comment>
    <requestid>807165</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>9ed4a5eb068b216b1e45e1c86fe283a3</srcmd5>
    <version>2.5.3</version>
    <time>1591879511</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>812777</requestid>
  </revision>
  <revision rev="17" vrev="2">
    <srcmd5>f52a710ee78a11d971a8bd7c04cb9cb9</srcmd5>
    <version>2.5.3</version>
    <time>1593458064</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>816633</requestid>
  </revision>
  <revision rev="18" vrev="3">
    <srcmd5>63cc85c2434df7740832097f1cb8116d</srcmd5>
    <version>2.5.3</version>
    <time>1594808041</time>
    <user>dimstar_suse</user>
    <comment>- Added both_isort_4_5.patch (gh#PyCQA/pylint#3725) allowing
  work with both versions of isort.</comment>
    <requestid>820769</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>126b492fa54dcde663e98a2c11b8d310</srcmd5>
    <version>2.6.0</version>
    <time>1599209836</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>829032</requestid>
  </revision>
  <revision rev="20" vrev="2">
    <srcmd5>f9ebada6559d778991a44371f3628b0c</srcmd5>
    <version>2.6.0</version>
    <time>1608550508</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>856770</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>9df83d4d9e98bf8755b27c983be908dc</srcmd5>
    <version>2.6.2</version>
    <time>1613511280</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>872839</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>2b6948432cc2ff3a8fcc3aa427e42d50</srcmd5>
    <version>2.7.2</version>
    <time>1617279350</time>
    <user>RBrownSUSE</user>
    <comment>- Update to 2.7.2
  * Fix False Positive on ``Enum.__members__.items()``,
  ``Enum.__members__.values``, and ``Enum.__members__.keys``
  * Properly strip dangerous sys.path entries (not just the first
    one)
  * Workflow and packaging improvements
- Release 2.7.1
  * Expose ``UnittestLinter`` in pylint.testutils
  * Don't check directories starting with '.' when using
    register_plugins
- Release 2.7.0
  * Introduce DeprecationMixin for reusable deprecation checks.
  * Fix false positive for ``builtin-not-iterating`` when ``map``
    receives iterable
  * Python 3.6+ is now required.
  * Fix false positive for ``builtin-not-iterating`` when ``zip``
    receives iterable
  * Add ``nan-comparison`` check for NaN comparisons
  * Bug fix for empty-comment message line number.
  * Only emit ``bad-reversed-sequence`` on dictionaries if below
    py3.8
  * Handle class decorators applied to function.
  * Add check for empty comments
  * Fix minor documentation issue in contribute.rst
  * Enums are now required to be named in UPPER_CASE by
    ``invalid-name``.
  * Add missing checks for deprecated functions.
  * Postponed evaluation of annotations are now recognized by
    default if python version is above 3.10
  * Fix column metadata for anomalous backslash lints
  * Drop support for Python 3.5
  * Add support for pep585 with postponed evaluation
  * Check alternative union syntax - PEP 604
  * Fix multiple false positives with assignment expressions
  * Fix TypedDict inherit-non-class false-positive Python 3.9+
  * Fix issue with nested PEP 585 syntax
  * Fix issue with nested PEP 604 syntax
  * Fix a crash in ``undefined-variable`` caused by chained
    attributes in metaclass
  * Fix false positive for ``not-async-context-manager`` when
    ``contextlib.asynccontextmanager`` is used
  * Fix linter multiprocessing pool shutdown (triggered warnings
    when runned in parallels with other pytest plugins)
  * Fix a false-positive emission of ``no-self-use`` and
    ``unused-argument`` for methods of generic structural types
    (`Protocol[T]`)
  * Fix bug that lead to duplicate messages when using
    ``--jobs 2`` or more.
  * Adds option ``check-protected-access-in-special-methods`` in
    the ClassChecker to activate/deactivate
    ``protected-access`` message emission for single underscore
      prefixed attribute in special methods.
  * Fix vulnerable regular expressions in ``pyreverse``
  * ``inconsistent-return-statements`` message is now emitted if
    one of ``try/except`` statement is not returning explicitly
    while the other do.
  * Fix ``useless-super-delegation`` false positive when default
    keyword argument is a dictionnary.
  * Fix a crash when a specified config file does not exist
  * Add support to ``ignored-argument-names`` in
    DocstringParameterChecker and adds ``useless-param-doc`` and
    ``useless-type-doc`` messages.
  * Enforce docparams consistently when docstring is not present
  * Fix ``duplicate-code`` false positive when lines only contain
    whitespace and non-alphanumeric characters (e.g. parentheses,
    bracket, comman, etc.)
  * Improve lint message for ``singleton-comparison`` with bools
  * Fix spell-checker crash on indented docstring lines that look
    like # comments
  * Fix AttributeError in checkers/refactoring.py
  * Improve sphinx directives spelling filter
  * Fix a bug with postponed evaluation when using aliases for
    annotations.
  * Fix minor documentation issues
  * Improve the performance of the line length check.
  * Removed incorrect deprecation of ``inspect.getfullargspec``
  * Fix ``signature-differs`` false positive for functions with
    variadics
  * Fix a crash in ``consider-using-enumerate`` when encountering
   ``range()`` without arguments
  * ``len-as-conditions`` is now triggered only for classes that
    are inheriting directly from list, dict, or set and not
    implementing the ``__bool__`` function, or from generators
    like range or list/dict/set comprehension. This should reduce
    the false positives for other classes, like pandas's DataFrame
    or numpy's Array.
  * Fixes duplicate-errors not working with -j2+
  * ``generated-members`` now matches the qualified name of members
  * Add check for bool function to ``len-as-condition``
  * Add ``simplifiable-condition`` check for extraneous constants
    in conditionals using and/or.
  * Add ``condition-evals-to-constant`` check for conditionals
    using and/or that evaluate to a constant.
  * Changed setup.py to work with distlib
  * New check: ``consider-using-generator``
    This check warns when a comprehension is used inside an
    ``any`` or ``all`` function, since it is unnecessary and
    should be replaced by a generator instead. Using a generator
    would be less code and way faster.   
  * Add Github Actions to replace Travis and AppVeyor in the 
    future 
</comment>
    <requestid>880752</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>f5fe115b4d67e90e46c4635befec4aac</srcmd5>
    <version>2.8.2</version>
    <time>1620840676</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>891395</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>64ecfd38862cc4e4a482d1261af10ab9</srcmd5>
    <version>2.8.3</version>
    <time>1623443415</time>
    <user>dimstar_suse</user>
    <comment>
- update to 2.8.3:
  * pin astroid to 2.5.6</comment>
    <requestid>897841</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>9cea339fd026ff5157c99d23712ea351</srcmd5>
    <version>2.9.6</version>
    <time>1629795244</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>913352</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>9d96f3ce331598f3f071a8b525d758ef</srcmd5>
    <version>2.11.1</version>
    <time>1634754203</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>925644</requestid>
  </revision>
  <revision rev="27" vrev="1">
    <srcmd5>eeff82671a03ebed0b4bfb8e575e7e78</srcmd5>
    <version>2.12.2</version>
    <time>1640459784</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>940014</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>de883fb1d38c3cdd065bb20df4ad05b9</srcmd5>
    <version>2.15.0</version>
    <time>1662322306</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1001087</requestid>
  </revision>
  <revision rev="29" vrev="1">
    <srcmd5>0ee69a2b369197743d9ba58ed60c10f1</srcmd5>
    <version>2.15.2</version>
    <time>1663074578</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.15.2:
  * Fixed a case where custom plugins specified by command line could silently fail.
  * Fix ``used-before-assignment`` for functions/classes defined in type checking guard.
  * Update ``modified_iterating`` checker to fix a crash with ``for`` loops on empty list.
  * The ``docparams`` extension now considers typing in Numpy style docstrings
  * Fix false positive for ``unused-variable`` and ``unused-import`` when a name is only used in a string literal type annotation.
  * Fix false positive for ``too-many-function-args`` when a function call is assigned to a class attribute inside the class where the function is defined.
  * Fix ``used-before-assignment`` for functions/classes defined in type checking guard.
  * Fix ignored files being linted when passed on stdin.
  * ``missing-return-doc``, ``missing-raises-doc`` and ``missing-yields-doc`` now respect
  * Don't crash on ``OSError`` in config file discovery.
  * ``disable-next`` is now correctly scoped to only the succeeding line.
  * Update ``modified_iterating`` checker to fix a crash with ``for`` loops on empty list.</comment>
    <requestid>1003053</requestid>
  </revision>
  <revision rev="30" vrev="1">
    <srcmd5>7eefd0029ad9758881a52cf2972ece68</srcmd5>
    <version>2.15.3</version>
    <time>1663935317</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1005486</requestid>
  </revision>
  <revision rev="31" vrev="2">
    <srcmd5>9c63e38159a6d64a9600357548f88764</srcmd5>
    <version>2.15.3</version>
    <time>1664210875</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1005711</requestid>
  </revision>
  <revision rev="32" vrev="1">
    <srcmd5>53f733ec81630e21a9b142819de207fa</srcmd5>
    <version>2.15.4</version>
    <time>1666089900</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1012118</requestid>
  </revision>
  <revision rev="33" vrev="1">
    <srcmd5>eb3bcedc15516bdc019d73bc28aa9d51</srcmd5>
    <version>2.15.9</version>
    <time>1673108390</time>
    <user>dimstar_suse</user>
    <comment>- update to v2.15.9:
  * Fix false-positive for used-before-assignment in pattern matching with a
    guard.
  * Pylint will no longer deadlock if a parallel job is killed but fail
    immediately instead.
  * When pylint exit due to bad arguments being provided the exit code will
    now be the expected 32.
  * Fixes a ModuleNotFound exception when running pylint on a Django project
    with the pylint_django plugin enabled.
  * Document a known false positive for useless-suppression when disabling
  * line-too-long in a module with only comments and no code.
  * Fix logging-fstring-interpolation false positive raised when logging and
    f-string with %s formatting.
  * Fixes false positive abstract-method on Protocol classes.
  * Fix missing-param-doc false positive when function parameter has an
    escaped underscore.
  * multiple-statements no longer triggers for function stubs using inlined
    ....
  * Fix deprecated-method false positive when alias for method is similar to
  * name of deprecated method.
  * Fix a false positive for used-before-assignment for imports guarded by
  * typing.TYPE_CHECKING later used in variable annotations.
  * Other Bug Fixes
  * Pylint will now filter duplicates given to it before linting. The output
  * should be the same whether a file is given/discovered multiple times or
    not.
  * Fixes a crash in stop-iteration-return when the next builtin is
  * called without arguments.
  * Fix false positive for unhashable-member when subclassing dict and
  * using the subclass as a dictionary key.</comment>
    <requestid>1056749</requestid>
  </revision>
  <revision rev="34" vrev="1">
    <srcmd5>84414f6ac57fb0121ace12eda269e042</srcmd5>
    <version>2.15.10</version>
    <time>1673281453</time>
    <user>dimstar_suse</user>
    <comment>- update to v2.15.10:
  * Fix use-sequence-for-iteration when unpacking a set with *.
  * Fix false positive assigning-non-slot when a class attribute is
  * re-assigned.
  * Fixes used-before-assignment false positive when the walrus operator
  * is used in a ternary operator.
  * Prevent used-before-assignment when imports guarded by if TYPE_CHECKING
  * are guarded again when used.
  * Using custom braces in msg-template will now work properly.</comment>
    <requestid>1057060</requestid>
  </revision>
  <revision rev="35" vrev="1">
    <srcmd5>8f63dfe9b138479389ee90a4dff1e1c1</srcmd5>
    <version>2.17.2</version>
    <time>1682002142</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.17.2:
  * invalid-name now allows for integers in typealias
    names: 
    * now valid: Good2Name, GoodName2.
    * still invalid: _1BadName.
  * No longer consider Union as type annotation as type alias
    for naming checks.
  * unnecessary-lambda no longer warns on lambdas which use
    its parameters in their body (other than the final arguments),
    e.g. lambda foo: (bar if foo else baz)(foo).
  * Fix a crash in pyreverse when &quot;/&quot; characters are used in the
    output filename e.g pyreverse -o png -p name/ path/to/project.
  * Add new option (--show-stdlib, -L) to pyreverse.
  * This is similar to the behavior of --show-builtin in that
    standard library modules are now not included by default,
    and this option will include them.
  * Adds asyncSetUp to the default defining-attr-methods
    list to silence
    * attribute-defined-outside-init warning when using
    * unittest.IsolatedAsyncioTestCase.
  * invalid-name now allows for integers in typealias
    names:
    * now valid: Good2Name, GoodName2.
    * still invalid: _1BadName.
  * No longer consider Union as type annotation as type alias
    for naming checks.
  * unnecessary-lambda no longer warns on lambdas which use
    its parameters in their body (other than the final arguments),
    e.g. lambda foo: (bar if foo else baz)(foo).
  * --clear-cache-post-run now also clears LRU caches for</comment>
    <requestid>1080001</requestid>
  </revision>
  <revision rev="36" vrev="1">
    <srcmd5>56967a4e28b49eb70b57704a2edc2931</srcmd5>
    <version>2.17.4</version>
    <time>1684239377</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1087260</requestid>
  </revision>
</revisionlist>
