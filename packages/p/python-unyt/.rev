<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>9551ca2f1bb2160c833201a275c2971f</srcmd5>
    <version>2.7.2</version>
    <time>1598983712</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>830789</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>17225008b3069421c4d16130599f14b0</srcmd5>
    <version>2.8.0</version>
    <time>1619552107</time>
    <user>dimstar_suse</user>
    <comment>- Update to 2.8.0:
  * Dropped support for Python 3.5.
  * Add delta_degC and delta_degF units to support temperature difference arithmetic. See PR #152. Thank you to Lee Johnston (@l-johnston on GitHub) for the contribution.
  * Fix an issue where a subsequent load of the unit registry with units that are equal but not identical leads to a crash. See PR #158. Thank you to Matthew Turk (@matthewturk on GitHub) for the initial bug report and fix.
  * Add force unit kip and pressure unit psi. Thank you to P. Talley (@otaithleigh on GitHub) for the contribution. See PR #162.
  * Fix an issue where arithmetic operations on units defined in different registries and having the conversion defined in one direction would lead to a crash. See PR #164. Thank you to Clément Robert (@neutrinoceros on GitHub) for the initial bug report and fix. 
- Do not build for Python 2, since no longer supported by upstream, and also
  do not build for Python 3.6, due to no NumPy.</comment>
    <requestid>888647</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>73fb7b53fb9b5d6de1285271ce58aaf5</srcmd5>
    <version>2.9.4</version>
    <time>1675873230</time>
    <user>dimstar_suse</user>
    <comment>- Update to 2.9.4:
  * Make unyt_quantity.from_string parse ints. See PR #278. Thank you to Nahan
    Goldbaum (@ngoldbaum on GitHub) for the contribution.
  * TST: migrate from tox-pyenv to tox-gh-actions #344 See PR #344. Thank you
    to Clément Robert (@neutrinoceros on GitHub) for the contribution.
  * Correctly test string comparison depending on numpy version #358 See PR
    #358. Thank you to Clément Robert (@neutrinoceros on GitHub) for the
    contribution.
  * Multiple fixes for unyt_quantity.from_string
    - fix a bug where unyt_quantity.from_string would drop part of the unit
      expression
    - fix a bug where unyt_quantity.from_string would choke on unit expressions
      starting with '*' or '/'
    - fix a bug where unyt_quantity.from_string would choke on space-separated
      unit expressions
    - fix roundtrip for unyt_quantity.from_string and unyt_quantity.to_string
      methods
    - simplify unit regexp ('**/2' isn't a valid exponent)
    - fix a bug where malformed string input would be incorrectly parsed by
      unyt_quantity.from_string
- 2.9.3:
  * Fix a future incompatibility with numpy 1.25 (unreleased) where comparing
    unyt_array objects to non-numeric objects (e.g. strings) would cause a
    crash. See PR #333. Thank you to Clément Robert (@neutrinoceros on GitHub)
    and Nathan Goldbaum (@ngoldbaum on GitHub) for the contribution.
- 2.9.2:
  * Fix an issue where taking powers of units was backwards-incompatible with
    previous versions of unyt when the exponent is not zero. See PR #249. Thank
    you to Clément Robert (@neutrinoceros on GitHub) for the contribution.
  * The import time for unyt has been reduced by skipping version checking of
    other packages. See PR #251. Thank you to Clément Robert (@neutrinoceros on
    GitHub) for the contribution.
- 2.9.0:
  * Dropped support for Python 3.6 and 3.7.
  * Added support for Python 3.8, 3.9 and 3.10.
  * Fix an issue where SI prefixes of the degC units would give incorrect
    values in conversions. See PR #176. Thank you to Lee Johnston (@l-johnston
    on GitHub) for the contribution.
  * Fix an issue when using matplotlib_support, plot an empty unyt array, would
    result in an error when changing units. See PR #180. Thank you to Josh
    Borrow (@JBorrow on GitHub) for the contribution.
  * Fix an issue where units would be printed twice in formatted strings with
    an unyt_array embedded. See PR #188. Thank you to Clément Robert
    (@neutrinoceros on GitHub) for the contribution.
  * Add a method to parse a unyt_quantity from a string expression. See PR
    #191. Thank you to Clément Robert (@neutrinoceros on GitHub) for the
    contribution.
  * Fix an issue where a unyt_array with dtype int8 could not be converted to a
    different unit. See PR #197. Thank you to Clément Robert (@neutrinoceros on
    GitHub) for the contribution.
  * The import time for unyt has been reduced. See PR #199. Thank you to
    Clément Robert (@neutrinoceros on GitHub) for the contribution.
  * Fix an issue where taking an unyt_array or unyt_quantity to a zero power
    would retain the units of the original array or quantity instead of
    converting to a dimensionless array. See PR #204. Thank you to Josh Borrow
    (@JBorrow on GitHub) for the contribution.
  * Add support for coercing iterables of unyt_array objects with nonuniform
    dimensionally equivalent units to a single unyt_array. See PR #211. Thank
    you to Nathan Goldbaum (@ngoldbaum on GitHub) for the contribution.
  * Add the civil engineering units pli, plf, psf, kli, klf, and ksf. See PR
    #217. Thank you to @osnippet on GitHub for the contribution.
  * Fix typos in constants and unit prefixes. See PR #218. Thank you to Clément
    Robert (@neutrinoceros on GitHub) for the contribution.
  * Fix an issue where multiplying a 1-element unyt_array would return a
    unyt_quantity. See PR #225. Thank you to Clément Robert (@neutrinoceros on
    GitHub) for the contribution.
  * Add the Rydberg constant R_∞ and unit Ry, add the dimension
    angular_frequency and the unit rpm, and increase the precision of
    Avogadro's number. See PR #228.
  * Fix an issue where np.divide.reduce would return incorrect units for
    unyt_array instances. See PR #230. Thank you to Kyle Oman (@kyleaoman on
    GitHub) for the contribution.
</comment>
    <requestid>1063758</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>5aeea2e82612e6b667bee832f756a248</srcmd5>
    <version>2.9.5</version>
    <time>1685562886</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.9.5:
  * Fix a regression where arrays elements with dtype ``'int8'``
    would not compare to floats as intended.
  * Raise an error in case an array element is assigned to a new
    value with incompatible units.</comment>
    <requestid>1089953</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>9bb3468e891b2f2498f7539114f290bc</srcmd5>
    <version>3.0.1</version>
    <time>1708027277</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1146748</requestid>
  </revision>
</revisionlist>
