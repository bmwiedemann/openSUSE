-------------------------------------------------------------------
Sat Mar 16 16:29:02 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 3.0.2:
  * BUG: explicitly forbid destructive edits to the default unit
    registry
  * BLD: fix minimal requirement on setuptools_scm
  * TST: cleanup an unused skip condition
  * TST: fix usage of legacy numpy.random API in tests
  * BUG: fix an issue where array functions would raise
    UnitInconsistencyError when operands' units differ by some
    dimensionless factor
  * (NEP 18) Implement and test array functions new in numpy 2.0
  * BUG: fix compat with numpy dev for np.trapezoid (previously
    named np.trapz)
  * BUG: implement missing support for `np.cbrt`
  * BUG: fix compatibility with numpy 2.0 copy semantics
  * REL: prepare release 3.0.2

-------------------------------------------------------------------
Wed Feb 14 21:33:26 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Update to 3.0.1
  * BUG: fix backward compatibility for calling np.histogram with
    implicit range units by @neutrinoceros in #466
  * BUG: fix an issue where array functions would raise
    UnitConsistencyError on unyt arrays using non-default unit
    registries by @neutrinoceros in #463
  * TST: minimize build time in tox runs by @neutrinoceros in #426
  * BUG: fix an issue where array functions would crash
    (AttributeError) when passed non-ndarray array like objects
    (e.g. Python lists) by @neutrinoceros in #464
- Release 3.0.0
  * This new major release of unyt fixes a number of issues and
    adds a number of new features. Major contributions include:
  * Support for Python 3.8 has been dropped.
  * Support for Python 3.12 has been added.
  * Support for NumPy <1.19.3 has been dropped.
  * Support for SymPy <1.7 has been dropped.
  * NEP 18 support
  * A new unyt_dask_array class, which implements a subclass of
    standard dask arrays with units attached, has been added (PR
    #185). See :ref:`dask` for more details. Thank you to Chris
    Havlin (@chrishavlin on Github) for the contribution.
  * A number of new metric and non-metric units have been added in
    PR #441. Thank you to John ZuHone (@jzuhone on GitHub) for the
    contribution.
  * A number of common values for the solar metallicity found in
    the literature have been added as new metallicity units (PR
    #315). See :ref:`metal_conversions` for more details. Thank you
    to John ZuHone (@jzuhone on GitHub) for the contribution.
  * The "liter" unit has been added (PR #305). Thank you to Nathan
    Goldbaum (@ngoldbaum on GitHub) for the contribution.
  * The following common systems engineering units for energy have
    been added: MMBTU, therm, quad, and Wh (PR #294). Thank you to
    Sam Dotson (@samgdotson on GitHub) for the contribution.
  * The @returns decorator (documented in :ref:`checking_units`)
    now allows dimension-checking of multiple return values (PR
    #435). Thank you to Daniel Bates (@db434 on GitHub) for the
    contribution.
  * A fix for for the LaTeX representation of Planck units (PR
    #379). Thank you to Peter Hayman (@haymanpf on GitHub) for the
    contribution.
  * A fix for a bug that prevented the conversion of dimensionless
    arrays to their corresponding AstroPy Quantities (PR #437).
    Thank you to Clément Robert (@neutrinoceros on GitHub) for the
    contribution.
  * A fix for a bug in subtraction of temperature quantities that
    resulted in degC units being returned instead of delta_degC
    units (PR #413). Thank you to Clément Robert (@neutrinoceros on
    GitHub) for the contribution.
  * Fixes for issues with the comparison of temperature quantities
    (PR #408 and PR #412). Thank you to Clément Robert
    (@neutrinoceros on GitHub) for the contribution.
  * Support for versions of NumPy < 1.19 has been dropped in this
    version (PR #403). Thank you to Clément Robert (@neutrinoceros
    on GitHub) for the contribution.
  * Support NumPy 2.0

-------------------------------------------------------------------
Wed May 31 08:21:34 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 2.9.5:
  * Fix a regression where arrays elements with dtype ``'int8'``
    would not compare to floats as intended.
  * Raise an error in case an array element is assigned to a new
    value with incompatible units.

-------------------------------------------------------------------
Wed Feb  8 09:22:01 UTC 2023 - Daniel Garcia <daniel.garcia@suse.com>

- Update to 2.9.4:
  * Make unyt_quantity.from_string parse ints. See PR #278. Thank you to Nahan
    Goldbaum (@ngoldbaum on GitHub) for the contribution.
  * TST: migrate from tox-pyenv to tox-gh-actions #344 See PR #344. Thank you
    to Clément Robert (@neutrinoceros on GitHub) for the contribution.
  * Correctly test string comparison depending on numpy version #358 See PR
    #358. Thank you to Clément Robert (@neutrinoceros on GitHub) for the
    contribution.
  * Multiple fixes for unyt_quantity.from_string
    - fix a bug where unyt_quantity.from_string would drop part of the unit
      expression
    - fix a bug where unyt_quantity.from_string would choke on unit expressions
      starting with '*' or '/'
    - fix a bug where unyt_quantity.from_string would choke on space-separated
      unit expressions
    - fix roundtrip for unyt_quantity.from_string and unyt_quantity.to_string
      methods
    - simplify unit regexp ('**/2' isn't a valid exponent)
    - fix a bug where malformed string input would be incorrectly parsed by
      unyt_quantity.from_string
- 2.9.3:
  * Fix a future incompatibility with numpy 1.25 (unreleased) where comparing
    unyt_array objects to non-numeric objects (e.g. strings) would cause a
    crash. See PR #333. Thank you to Clément Robert (@neutrinoceros on GitHub)
    and Nathan Goldbaum (@ngoldbaum on GitHub) for the contribution.
- 2.9.2:
  * Fix an issue where taking powers of units was backwards-incompatible with
    previous versions of unyt when the exponent is not zero. See PR #249. Thank
    you to Clément Robert (@neutrinoceros on GitHub) for the contribution.
  * The import time for unyt has been reduced by skipping version checking of
    other packages. See PR #251. Thank you to Clément Robert (@neutrinoceros on
    GitHub) for the contribution.
- 2.9.0:
  * Dropped support for Python 3.6 and 3.7.
  * Added support for Python 3.8, 3.9 and 3.10.
  * Fix an issue where SI prefixes of the degC units would give incorrect
    values in conversions. See PR #176. Thank you to Lee Johnston (@l-johnston
    on GitHub) for the contribution.
  * Fix an issue when using matplotlib_support, plot an empty unyt array, would
    result in an error when changing units. See PR #180. Thank you to Josh
    Borrow (@JBorrow on GitHub) for the contribution.
  * Fix an issue where units would be printed twice in formatted strings with
    an unyt_array embedded. See PR #188. Thank you to Clément Robert
    (@neutrinoceros on GitHub) for the contribution.
  * Add a method to parse a unyt_quantity from a string expression. See PR
    #191. Thank you to Clément Robert (@neutrinoceros on GitHub) for the
    contribution.
  * Fix an issue where a unyt_array with dtype int8 could not be converted to a
    different unit. See PR #197. Thank you to Clément Robert (@neutrinoceros on
    GitHub) for the contribution.
  * The import time for unyt has been reduced. See PR #199. Thank you to
    Clément Robert (@neutrinoceros on GitHub) for the contribution.
  * Fix an issue where taking an unyt_array or unyt_quantity to a zero power
    would retain the units of the original array or quantity instead of
    converting to a dimensionless array. See PR #204. Thank you to Josh Borrow
    (@JBorrow on GitHub) for the contribution.
  * Add support for coercing iterables of unyt_array objects with nonuniform
    dimensionally equivalent units to a single unyt_array. See PR #211. Thank
    you to Nathan Goldbaum (@ngoldbaum on GitHub) for the contribution.
  * Add the civil engineering units pli, plf, psf, kli, klf, and ksf. See PR
    #217. Thank you to @osnippet on GitHub for the contribution.
  * Fix typos in constants and unit prefixes. See PR #218. Thank you to Clément
    Robert (@neutrinoceros on GitHub) for the contribution.
  * Fix an issue where multiplying a 1-element unyt_array would return a
    unyt_quantity. See PR #225. Thank you to Clément Robert (@neutrinoceros on
    GitHub) for the contribution.
  * Add the Rydberg constant R_∞ and unit Ry, add the dimension
    angular_frequency and the unit rpm, and increase the precision of
    Avogadro's number. See PR #228.
  * Fix an issue where np.divide.reduce would return incorrect units for
    unyt_array instances. See PR #230. Thank you to Kyle Oman (@kyleaoman on
    GitHub) for the contribution.

-------------------------------------------------------------------
Tue Apr 27 05:38:31 UTC 2021 - Steve Kowalik <steven.kowalik@suse.com>

- Update to 2.8.0:
  * Dropped support for Python 3.5.
  * Add delta_degC and delta_degF units to support temperature difference arithmetic. See PR #152. Thank you to Lee Johnston (@l-johnston on GitHub) for the contribution.
  * Fix an issue where a subsequent load of the unit registry with units that are equal but not identical leads to a crash. See PR #158. Thank you to Matthew Turk (@matthewturk on GitHub) for the initial bug report and fix.
  * Add force unit kip and pressure unit psi. Thank you to P. Talley (@otaithleigh on GitHub) for the contribution. See PR #162.
  * Fix an issue where arithmetic operations on units defined in different registries and having the conversion defined in one direction would lead to a crash. See PR #164. Thank you to Clément Robert (@neutrinoceros on GitHub) for the initial bug report and fix.
- Do not build for Python 2, since no longer supported by upstream, and also
  do not build for Python 3.6, due to no NumPy.

-------------------------------------------------------------------
Mon Aug 31 12:01:54 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Initial commit, needed by python-yt
