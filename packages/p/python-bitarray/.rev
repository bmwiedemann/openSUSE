<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>39921f00fa42e1f4d949e2ba13b37cb0</srcmd5>
    <version>1.2.1</version>
    <time>1585176375</time>
    <user>dimstar_suse</user>
    <comment> </comment>
    <requestid>788099</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>a21bd42d02516dc70415905b1e7fe4b5</srcmd5>
    <version>1.3.0</version>
    <time>1594228374</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>819132</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>2e7e213c7a3eb4e332ccf9c3be72046b</srcmd5>
    <version>1.4.2</version>
    <time>1596652101</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.4.2:
  * C-level:
      - simplify pack/unpack code
      - fix memory leak in `~` operation (bitarray_cpinvert)
  * add official Python 3.9 support
  * improve many docstrings
  * add DeprecationWarning for `bitdiff()`
  * add DeprecationWarning when trying to extend bitarrays
    from bytes on Python 3 (`bitarrays(b'011')` and `.extend(b'110')`)
  * C-level:
      - rewrote `.fromfile()` and `.tofile()` implementation,
        such that now the same code is used for Python 2 and 3.
        The new implementation is more memoery efficient on
        Python 3.
      - use memcmp() in richcompare to shortcut EQ/NE, when
        comparing two very large bitarrays for equality the
        speedup can easily be 100x
      - simplify how unpacking is handled
  * add more tests
  * add `.clear()` method (Python 3.3 added this method to lists)
  * avoid overallocation when bitarray objects are initially created
  * raise BufferError when resizing bitarrays which is exporting buffers
  * add example to study the resize() function
  * improve some error messages
  * raise `NotImplementedError` with (useful message) when trying to call
    the `.fromstring()` or `.tostring()` methods, which have been removed
    in the last release</comment>
    <requestid>824394</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>94beff9957b4f1c007f00e70e0952444</srcmd5>
    <version>1.5.2</version>
    <time>1598885450</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.5.2: 
  * add PyType_Ready usage, issue #66
  * speedup search() for bitarrays with length 1 in sparse bitarrays,
    see issue #67
  * add tests
  * support signed integers in `util.ba2int()` and `util.int2ba()`,
    see issue #85
  * deprecate `.length()` in favor of `len()`
  * Use `Py_ssize_t` for bitarray index.  This means that on 32bit
    systems, the maximun number of elements in a bitarray is 2 GBits.
    We used to have a special 64bit index type for all architectures, but
    this prevented us from using Python's sequence, mapping and number
    methods, and made those method lookups slow.
  * speedup slice operations when step size = 1 (if alignment allows
    copying whole bytes)
  * Require equal endianness for operations: `&amp;`, `|`, `^`, `&amp;=`, `|=`, `^=`.
    This should have always been the case but was overlooked in the past.
  * raise TypeError when tring to create bitarray from boolean
  * This will be last release to still support Python 2.6 (which was retired
    in 2013).  We do NOT plan to stop support for Python 2.7 anytime soon.</comment>
    <requestid>830624</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>7f63466ff82fe0fe727907dc2494258e</srcmd5>
    <version>1.5.3</version>
    <time>1601488461</time>
    <user>dimstar_suse</user>
    <comment>- Update to 1.5.3:
  * add optional index parameter to `.index()` to invert single bit
  * fix `sys.getsizeof(bitarray)` by adding `.__sizeof__()`, see issue #100</comment>
    <requestid>838633</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>110e3a69fc2df606a7741c4ff9a7af90</srcmd5>
    <version>1.6.1</version>
    <time>1604865550</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>846885</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>a64ac89c4fd60f9ba03e08b2dd2d2dee</srcmd5>
    <version>1.9.2</version>
    <time>1618223849</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>884519</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>6706ccd08ecadb4fabd716b618ac33b6</srcmd5>
    <version>2.1.1</version>
    <time>1623521292</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>899598</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>922aa4abed45249c7361262f690cd072</srcmd5>
    <version>2.1.2</version>
    <time>1626788371</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>907194</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>bba85b283314b7b363dd817b1a520dfa</srcmd5>
    <version>2.3.0</version>
    <time>1629471474</time>
    <user>RBrownSUSE</user>
    <comment></comment>
    <requestid>913269</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>5d1bf4e2511763458b1f2c129078c1eb</srcmd5>
    <version>2.4.0</version>
    <time>1649014270</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>966668</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>7717f194d2f07c71ab35d6064d91f3e4</srcmd5>
    <version>2.6.0</version>
    <time>1663935321</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1005519</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>af780d3899848bbc8e17acfc0cb1c6a4</srcmd5>
    <version>2.6.2</version>
    <time>1672754719</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.6.2:
  * optimize `richcompare()` for opposite endianness
  * improve some docstrings add tests
  * add documentation on shift operators, #181
  * fix typo in iterable initializer description, #179
  * optimize `richcompare()`</comment>
    <requestid>1046261</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>5bed3e42c2f08d27f351a60edf4eb23e</srcmd5>
    <version>2.7.0</version>
    <time>1676036163</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.7.0:
  * add util.sc_encode() and util.sc_decode() for
    compression of sparse bitarrays
  * add util.any_and()
  * add util.intervals()
  * move functionality of the following utility functions
    entirely to C:
    hex2ba(), base2ba(), deserialize(), vl_decode(), zeros()
  * improve error checking for unpickling
  * add distance metrics</comment>
    <requestid>1064212</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>b0d3b6eea283ed580034cea45f0801b5</srcmd5>
    <version>2.7.1</version>
    <time>1676149032</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.7.1:
  * optimize ``util.sc_encode()``</comment>
    <requestid>1064329</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>6c3e4fd1cb4b0d447176a0ad99577d09</srcmd5>
    <version>2.7.2</version>
    <time>1676562944</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.7.2:
  * speedup all count functionality by using
    ``__builtin_popcountll`` when available
  * add ``popcount64()`` to ``bitarray.h`` - we assume now that
    ``uint64_t`` is always available
  * improve testing</comment>
    <requestid>1065971</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>e155d382eea5aa34858aa6818b2e1482</srcmd5>
    <version>2.7.3</version>
    <time>1678204206</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.7.3:
  * allow running ``python setup.py test``
  * add official Python 3.12 support
  * simplify count functionality in util module
  * retire ``bitcount_lookup[256]`` table
  * improve ``util.count_n()`` error messages
  * avoid ``util`` module tests from being run more than once in
    each call to ``bitarray.test()`` when called multiple times in
    the same Python process
  * improve testing</comment>
    <requestid>1069754</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>a62c27fea227f9d2f50f721840bd2f64</srcmd5>
    <version>2.7.5</version>
    <time>1686576358</time>
    <user>dimstar_suse</user>
    <comment>- update to 2.7.5:
  * fix for pypy3.9-v7.3.11
  * register ``bitarray`` as ``abc.MutableSequence``
  * improve documentation regarding type when indexing single
  * bitarray items</comment>
    <requestid>1092275</requestid>
  </revision>
</revisionlist>
