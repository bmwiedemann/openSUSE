-------------------------------------------------------------------
Tue Jul  2 05:13:27 UTC 2024 - Steve Kowalik <steven.kowalik@suse.com>

- Add patch support-numpy-2.patch:
  * Remove reference to a now-removed warning.

-------------------------------------------------------------------
Fri Feb 16 19:45:28 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Update to 0.13.2
  * This is a minor release containing internal changes that adapt
    to upcoming deprecations in pandas.
- Release 0.13.1
  * This is a minor release with some bug fixes and a couple new
    features.
  * Added support for weighted mean estimation (with boostrap CIs)
    in lineplot, barplot, pointplot, and objects.Est (#3580,
    #3586).
  * Added the extent option in objects.Plot.layout (#3552).
  * Fixed a regression in v0.13.0 that triggered an exception when
    working with non-numpy data types (#3516).
  * Fixed a bug in objects.Plot so that tick labels are shown for
    wrapped axes that aren't in the bottom-most row (#3600).
  * Fixed a bug in catplot where a blank legend would be added when
    hue was redundantly assigned (#3540).
  * Fixed a bug in catplot where the edgecolor parameter was
    ignored with kind="bar" (#3547).
  * Fixed a bug in boxplot where an exception was raised when using
    the matplotlib bootstrap option (#3562).
  * Fixed a bug in lineplot where an exception was raised when hue
    was assigned with an empty dataframe (#3569).
  * Fixed a bug in multiple categorical plots that raised with
    hue=None and dodge=True; this is now has no effect (#3605).
- Release 0.13.0
  * This is a major release with a number of important new features
    and changes. The highlight is a major overhaul to seaborn's
    categorical plotting functions, providing them with many new
    capabilities and better aligning their API with the rest of the
    library. There is also provisional support for alternate
    dataframe libraries like polars, a new theme and display
    configuration system for objects.Plot, and many smaller
    bugfixes and enhancements.
  * Major enhancements to categorical plots
  * Support for alternate dataframe libraries
  * Improved configuration for the objects interface
  * For a complete description see
    https://seaborn.pydata.org/whatsnew/v0.13.0.html
- Drop obsolete patches
  * inf_as_na.patch
  * numpy-1.25.patch
  * statsmodels-0.14.patch

-------------------------------------------------------------------
Thu Sep 14 12:40:47 UTC 2023 - Markéta Machová <mmachova@suse.com>

- Add inf_as_na.patch to fix tests again, this time with pandas

-------------------------------------------------------------------
Tue Aug  8 10:53:03 UTC 2023 - Daniel Garcia <daniel.garcia@suse.com>

- Skip broken tests in i586

-------------------------------------------------------------------
Tue Aug  8 10:32:06 UTC 2023 - Daniel Garcia <daniel.garcia@suse.com>

- Add numpy-1.25.patch gh#mwaskom/seaborn#3391
- Add statsmodels-0.14.patch gh#mwaskom/seaborn#3356

-------------------------------------------------------------------
Wed Jan 11 11:52:38 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Update to 0.12.2
  * |Feature| Added the objects.KDE stat (#3111).
  * |Feature| Added the objects.Boolean scale (#3205).
  * |Enhancement| Improved user feedback for failures during plot
    compilation by catching exceptions and re-raising with a
    PlotSpecError that provides additional context. (#3203).
  * |Fix| Improved calculation of automatic mark widths with
    unshared facet axes (#3119).
  * |Fix| Improved robustness to empty data in several components
    of the objects interface (#3202).
  * |Fix| Fixed a bug where legends for numeric variables with
    large values would be incorrectly shown (i.e. with a missing
    offset or exponent; #3187).
  * |Fix| Fixed a regression in v0.12.0 where manually-added labels
    could have duplicate legend entries (#3116).
  * |Fix| Fixed a bug in histplot with kde=True and log_scale=True
    where the curve was not scaled properly (#3173).
  * |Fix| Fixed a bug in relplot where inner axis labels would be
    shown when axis sharing was disabled (#3180).
  * |Fix| Fixed a bug in objects.Continuous to avoid an exception
    with boolean data (#3190).
- Release 0.12.1
  * Added the objects.Text mark (#3051).
  * Added the objects.Dash mark (#3074).
  * Added the objects.Perc stat (#3063).
  * Added the objects.Count stat (#3086).
  * The objects.Band and objects.Range marks will now cover the
    full extent of the data if min / max variables are not
    explicitly assigned or added in a transform (#3056).
  * The objects.Jitter move now applies a small amount of jitter by
    default (#3066).
  * Axes with a objects.Nominal scale now appear like categorical
    axes in classic seaborn, with fixed margins, no grid, and an
    inverted y axis (#3069).
  * The objects.Continuous.label method now accepts base=None to
    override the default formatter with a log transform (#3087).
  * Marks that sort along the orient axis (e.g. objects.Line) now
    use a stable algorithm (#3064).
  * Added a label parameter to pointplot, which addresses a
    regression in 0.12.0 when pointplot is passed to FacetGrid
    (#3016).
  * Fixed a bug that caused an exception when more than two layers
    with the same mappings were added to objects.Plot (#3055).
  * Made objects.PolyFit robust to missing data (#3010).
  * Fixed a bug in objects.Plot that occurred when data assigned to
    the orient coordinate had zero variance (#3084).
  * Fixed a regression in kdeplot where passing cmap for an
    unfilled bivariate plot would raise an exception (#3065).
  * Addressed a performance regression in lineplot with a large
    number of unique x values (#3081).
  * Seaborn no longer contains doctest-style examples, simplifying
    the testing infrastructure (#3034).
- Release 0.12.0
  ## Introduction of the objects interface
  * This release debuts the seaborn.objects interface, an entirely
    new approach to making plots with seaborn. It is the product of
    several years of design and 16 months of implementation work.
    The interface aims to provide a more declarative, composable,
    and extensible API for making statistical graphics. It is
    inspired by Wilkinson's grammar of graphics, offering a
    Pythonic API that is informed by the design of libraries such
    as ggplot2 and vega-lite along with lessons from the past 10
    years of seaborn's development.
  * For more information and numerous examples, see the tutorial
    chapter and API reference.
  * This initial release should be considered "experimental". While
    it is stable enough for serious use, there are definitely some
    rough edges, and some key features remain to be implemented. It
    is possible that breaking changes may occur over the next few
    minor releases. Please be patient with any limitations that you
    encounter and help the development by reporting issues when you
    find behavior surprising.
  ## Keyword-only arguments
  * Seaborn's plotting functions now require explicit keywords for
    most arguments, following the deprecation of positional
    arguments in v0.11.0. With this enforcement, most functions
    have also had their parameter lists rearranged so that data is
    the first and only positional argument. This adds consistency
    across the various functions in the library. It also means that
    calling func(data) will do something for nearly all functions
    (those that support wide-form data) and that pandas.DataFrame
    can be piped directly into a plot. It is possible that the
    signatures will be loosened a bit in future releases so that x
    and y can be positional, but minimal support for positional
    arguments after this change will reduce the chance of
    inadvertent mis-specification (2804).
  ## Modernization of categorical scatterplots
  * This release begins the process of modernizing the categorical
    plots, beginning with stripplot and swarmplot. These functions
    are sporting some enhancements that alleviate a few
    long-running frustrations (2413, 2447):
  * The new native_scale parameter allows numeric or datetime
    categories to be plotted with their original scale rather than
    converted to strings and plotted at fixed intervals.
  * The new formatter parameter allows more control over the string
    representation of values on the categorical axis. There should
    also be improved defaults for some types, such as dates.
  * It is now possible to assign hue when using only one coordinate
    variable (i.e. only x or y).
  * It is now possible to disable the legend.
  * The updates also harmonize behavior with functions that have
    been more recently introduced. This should be relatively
    non-disruptive, although a few defaults will change:
  * The functions now hook into matplotlib's unit system for
    plotting categorical data. (Seaborn's categorical functions
    actually predate support for categorical data in matplotlib.)
    This should mostly be transparent to the user, but it may
    resolve a few edge cases. For example, matplotlib interactivity
    should work better (e.g., for showing the data value under the
    cursor).
  * A color palette is no longer applied to levels of the
    categorical variable by default. It is now necessary to
    explicitly assign hue to see multiple colors (i.e., assign the
    same variable to x/y and hue). Passing palette without hue will
    continue to be honored for one release cycle.
  * Numeric hue variables now receive a continuous mapping by
    default, using the same rules as scatterplot. Pass
    palette="deep" to reproduce previous defaults.
  * The plots now follow the default property cycle; i.e. calling
    an axes-level function multiple times with the same active axes
    will produce different-colored artists.
  * Currently, assigning hue and then passing a color will produce
    a gradient palette. This is now deprecated, as it is easy to
    request a gradient with, e.g. palette="light:blue".
  * Similar enhancements / updates should be expected to roll out
    to other categorical plotting functions in future releases.
    There are also several function-specific enhancements:
  * In stripplot, a "strip" with a single observation will be
    plotted without jitter (2413)
  * In swarmplot, the points are now swarmed at draw time, meaning
    that the plot will adapt to further changes in axis scaling or
    tweaks to the plot layout (2443).
  * In swarmplot, the proportion of points that must overlap before
    issuing a warning can now be controlled with the warn_thresh
    parameter (2447).
  * In swarmplot, the order of the points in each swarm now matches
    the order in the original dataset; previously they were sorted.
    This affects only the underlying data stored in the matplotlib
    artist, not the visual representation (2443).
  ## More flexible errorbars
  * Increased the flexibility of what can be shown by the
    internally-calculated errorbars for lineplot, barplot, and
    pointplot.
  * With the new errorbar parameter, it is now possible to select
    bootstrap confidence intervals, percentile / predictive
    intervals, or intervals formed by scaled standard deviations or
    standard errors. The parameter also accepts an arbitrary
    function that maps from a vector to an interval. There is a new
    user guide chapter demonstrating these options and explaining
    when you might want to use each one.
  * As a consequence of this change, the ci parameter has been
    deprecated. Note that regplot retains the previous API, but it
    will likely be updated in a future release (2407, 2866).
  ## Other updates
  * It is now possible to aggregate / sort a lineplot along the y
    axis using orient="y" (2854).
  * Made it easier to customize FacetGrid / PairGrid / JointGrid
    with a fluent (method-chained) style by adding apply/ pipe
    methods. Additionally, fixed the tight_layout and refline
    methods so that they return self (2926).
  * Added FacetGrid.tick_params and PairGrid.tick_params to
    customize the appearance of the ticks, tick labels, and
    gridlines of all subplots at once (2944).
  * Added a width parameter to barplot (2860).
  * It is now possible to specify estimator as a string in barplot
    and pointplot, in addition to a callable (2866).
  * Error bars in regplot now inherit the alpha value of the points
    they correspond to (2540).
  * When using pairplot with corner=True and diag_kind=None, the
    top left y axis label is no longer hidden (2850).
  * It is now possible to plot a discrete histplot as a step
    function or polygon (2859).
  * It is now possible to customize the appearance of elements in a
    boxenplot with box_kws/line_kws/flier_kws (2909).
  * Improved integration with the matplotlib color cycle in most
    axes-level functions (2449).
  * Fixed a regression in 0.11.2 that caused some functions to
    stall indefinitely or raise when the input data had a duplicate
    index (2776).
  * Fixed a bug in histplot and kdeplot where weights were not
    factored into the normalization (2812).
  * Fixed two edgecases in histplot when only binwidth was provided
    (2813).
  * Fixed a bug in violinplot where inner boxes/points could be
    missing with unpaired split violins (2814).
  * Fixed a bug in PairGrid where an error would be raised when
    defining hue only in the mapping methods (2847).
  * Fixed a bug in scatterplot where an error would be raised when
    hue_order was a subset of the hue levels (2848).
  * Fixed a bug in histplot where dodged bars would have different
    widths on a log scale (2849).
  * In lineplot, allowed the dashes keyword to set the style of a
    line without mapping a style variable (2449).
  * Improved support in relplot for "wide" data and for faceting
    variables passed as non-pandas objects (2846).
  * Subplot titles will no longer be reset when calling
    FacetGrid.map or FacetGrid.map_dataframe (2705).
  * Added a workaround for a matplotlib issue that caused
    figure-level functions to freeze when plt.show was called
    (2925).
  * Improved robustness to numerical errors in kdeplot (2862).
  * Fixed a bug where rugplot was ignoring expand_margins=False
    (2953).
  * The patch.facecolor rc param is no longer set by set_palette
    (or set_theme). This should have no general effect, because the
    matplotlib default is now "C0" (2906).
  * Made scipy an optional dependency and added <span class="...
- Move to PEP517 build with flit-core
- Drop seaborn-pr2562-clustermap-colors.patch

-------------------------------------------------------------------
Mon Nov 14 09:38:03 UTC 2022 - pgajdos@suse.com

- python-six is not required

-------------------------------------------------------------------
Fri Jan 14 22:05:32 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update to 0.11.2
  * This is a minor release that addresses issues in the v0.11
    series and adds a small number of targeted enhancements. It is
    a recommended upgrade for all users.
  * |Docs| A paper describing seaborn has been published in the
    Journal of Open Source Software. The paper serves as an
    introduction to the library and can be used to cite seaborn if
    it has been integral to a scientific publication.
  * |API| |Feature| In lmplot, added a new facet_kws
    parameter and deprecated the sharex, sharey, and legend_out
    parameters from the function signature; pass them in a
    facet_kws dictionary instead (#2576).
  * |Feature| Added a move_legend convenience function for
    repositioning the legend on an existing axes or figure, along
    with updating its properties. This function should be preferred
    over calling ax.legend with no legend data, which does not
    reliably work across seaborn plot types (#2643).
  * |Feature| In histplot, added stat="percent" as an option
    for normalization such that bar heights sum to 100 and
    stat="proportion" as an alias for the existing
    stat="probability" (#2461, #2634).
  * |Feature| Added FacetGrid.refline and JointGrid.refline
    methods for plotting horizontal and/or vertical reference lines
    on every subplot in one step (#2620).
  * |Feature| In kdeplot, added a warn_singular parameter to
    silence the warning about data with zero variance (#2566).
  * |Enhancement| In histplot, improved performance with large
    datasets and many groupings/facets (#2559, #2570).
  * |Enhancement| The FacetGrid, PairGrid, and JointGrid
    objects now reference the underlying matplotlib figure with a
    .figure attribute. The existing .fig attribute still exists but
    is discouraged and may eventually be deprecated. The effect is
    that you can now call obj.figure on the return value from any
    seaborn function to access the matplotlib object (#2639).
  * |Enhancement| In FacetGrid and functions that use it,
    visibility of the interior axis labels is now disabled, and
    exterior axis labels are no longer erased when adding
    additional layers. This produces the same results for plots
    made by seaborn functions, but it may produce different
    (better, in most cases) results for customized facet plots
    (#2583).
  * |Enhancement| In FacetGrid, PairGrid, and functions that
    use them, the matplotlib figure.autolayout parameter is
    disabled to avoid having the legend overlap the plot (#2571).
  * |Enhancement| The load_dataset helper now produces a more
    informative error when fed a dataframe, easing a common
    beginner mistake (#2604).
  * |Fix| |Enhancement| Improved robustness to missing
    data, including some additional support for the pd.NA type
    (#2417, #2435).
  * |Fix| In ecdfplot and rugplot, fixed a bug where results
    were incorrect if the data axis had a log scale before plotting
    (#2504).
  * |Fix| In histplot, fixed a bug where using shrink with
    non-discrete bins shifted bar positions inaccurately (#2477).
  * |Fix| In displot, fixed a bug where common_norm=False was
    ignored when faceting was used without assigning hue (#2468).
  * |Fix| In histplot, fixed two bugs where automatically
    computed edge widths were too thick for log-scaled histograms
    and for categorical histograms on the y axis (#2522).
  * |Fix| In histplot and kdeplot, fixed a bug where the alpha
    parameter was ignored when fill=False (#2460).
  * |Fix| In histplot and kdeplot, fixed a bug where the
    multiple parameter was ignored when hue was provided as a
    vector without a name (#2462).
  * |Fix| In displot, the default alpha value now adjusts to a
    provided multiple parameter even when hue is not assigned
    (#2462).
  * |Fix| In displot, fixed a bug that caused faceted 2D
    histograms to error out with common_bins=False (#2640).
  * |Fix| In rugplot, fixed a bug that prevented the use of
    datetime data (#2458).
  * |Fix| In relplot and displot, fixed a bug where the
    dataframe attached to the returned FacetGrid object dropped
    columns that were not used in the plot (#2623).
  * |Fix| In relplot, fixed an error that would be raised when
    one of the column names in the dataframe shared a name with one
    of the plot variables (#2581).
  * |Fix| In the relational plots, fixed a bug where legend
    entries for the size semantic were incorrect when size_norm
    extrapolated beyond the range of the data (#2580).
  * |Fix| In lmplot and regplot, fixed a bug where the x axis
    was clamped to the data limits with truncate=True (#2576).
  * |Fix| In lmplot, fixed a bug where sharey=False did not
    always work as expected (#2576).
  * |Fix| In heatmap, fixed a bug where vertically-rotated
    y-axis tick labels would be misaligned with their rows (#2574).
  * |Fix| Fixed an issue that prevented Python from running in
    -OO mode while using seaborn (#2473).
  * |Docs| Improved the API documentation for theme-related
    functions (#2573).
  * |Docs| Added docstring pages for all methods on documented
    classes (#2644).
- Skip tests failing on Matplotlib 3.5
  * gh#mwaskom/seaborn#2663

-------------------------------------------------------------------
Sat Apr 24 15:09:58 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Add seaborn-pr2562-clustermap-colors.patch for matplotlib 3.4
  compatibility gh#mwaskom/seaborn#2562

-------------------------------------------------------------------
Fri Jan 22 19:13:36 UTC 2021 - Benjamin Greiner <code@bnavigator.de>

- Disable python36 build because SciPy dropped Python 3.6 and
  NumPy will do the same in 1.20
- Remove nose dependency

-------------------------------------------------------------------
Tue Jan 19 10:41:07 UTC 2021 - andy great <andythe_great@pm.me>

- Update to version 0.11.1.
  * Enhancement Reduced the use of matplotlib global state in the 
    multi-grid classes.
  * Fix Restored support for using tuples or numeric keys to 
    reference fields in a long-form data object.
  * Fixed a bug in lineplot() where NAs were propagating into the 
    confidence interval, sometimes erasing it from the plot.
  * Fixed a bug in PairGrid/pairplot() where diagonal axes would 
    be empty when the grid was not square and the diagonal axes 
    did not contain the marginal plots.
  * Fixed a bug in PairGrid/pairplot() where off-diagonal plots
    would not appear when column names in data had non-string type.
  * Fixed a bug where categorical dtype information was ignored 
    when data consisted of boolean or boolean-like values.
  * Fixed a bug in FacetGrid where interior tick labels would be 
    hidden when only the orthogonal axis was shared.
  * Fixed a bug in FacetGrid that caused an error when 
    legend_out=False was set.
  * Fixed a bug in kdeplot() where common_norm=True was ignored if
    hue was not assigned.
  * Fixed a bug in displot() where the row_order and col_order 
    parameters were not used.
  * Fixed a bug in PairGrid/pairplot() that caused an exception 
    when using corner=True and diag_kind=None.
  * Fixed a bug in clustermap() where annot=False was ignored.
  * Fixed a bug in clustermap() where row/col color annotations 
    could not have a categorical dtype.
  * Fixed a bug in boxenplot() where the linewidth parameter was
    ignored.
  * Fix Raise a more informative error in PairGrid/pairplot() when 
    no variables can be found to define the rows/columns of the grid.
  * Fix Raise a more informative error from clustermap() if row/col 
    color objects have semantic index but data object does not.

-------------------------------------------------------------------
Wed Sep 23 13:56:51 UTC 2020 - Dirk Mueller <dmueller@suse.com>

- update to 0.11.0:
  * major release with several important new features, enhancements to existing
  functions, and changes to the library. Highlights include an overhaul and
  modernization of the distributions plotting functions, more flexible data
  specification, new colormaps, and better narrative documentation. 
  https://medium.com/@michaelwaskom/announcing-the-release-of-seaborn-0-11-3df0341af042

-------------------------------------------------------------------
Sat May  9 16:25:42 UTC 2020 - Arun Persaud <arun@gmx.de>

- specfile:
  * removed use_platform_int.patch included upstream

- update to version 0.10.1:
  * Fixed a bug that appeared within the bootstrapping algorithm on
    32-bit systems.
  * Fixed a bug where :func:`regplot` would crash on singleton
    inputs. Now a crash is avoided and regression estimation/plotting
    is skipped.
  * Fixed a bug where :func:`heatmap` would ignore user-specified
    under/over/bad values when recentering a colormap.
  * Fixed a bug where :func:`heatmap` would use values from masked
    cells when computing default colormap limits.
  * Fixed a bug where :func:`despine` would cause an error when trying
    to trim spines on a matplotlib categorical axis.
  * Adapted to a change in matplotlib that caused problems with single
    swarm plots.
  * Added the "showfliers" parameter to :func:`boxenplot` to suppress
    plotting of outlier data points, matching the API of
    :func:`boxplot`.
  * Avoided seeing an error from statmodels when data with an IQR of 0
    is passed to :func:`kdeplot`.
  * Added the "legend.title_fontsize" to the :func:`plotting_context`
    definition.
  * Deprecated several utility functions that are no longer used
    internally ("percentiles", "sig_stars", "pmf_hist", and
    "sort_df").

-------------------------------------------------------------------
Thu Jan 30 19:24:13 UTC 2020 - Todd R <toddrme2178@gmail.com>

- Update to 0.10.0
  * Most notably, all support for Python 2 has now been dropped.
  * Support for Python 3.5 has also been dropped.
  * Minimally supported versions of the dependent PyData libraries have also been increased, in some cases substantially.
  * This release also removes a few previously-deprecated features:
    > The ``tsplot`` function and ``seaborn.timeseries`` module have been removed. Recall that ``tsplot`` was replaced with :func:`lineplot`.
    > The ``seaborn.apionly`` entry-point has been removed.
    > The ``seaborn.linearmodels`` module (previously renamed to ``seaborn.regression``) has been removed.
- Update to 0.9.1
  + New features
    * Added more control over the arrangement of the elements drawn by :func:`clustermap` with the ``{dendrogram,colors}_ratio`` and ``cbar_pos`` parameters. Additionally, the default organization and scaling with different figure sizes has been improved.
    * Added the ``corner`` option to :class:`PairGrid` and :func:`pairplot` to make a grid without the upper triangle of bivariate axes.
    * Added the ability to seed the random number generator for the bootstrap used to define error bars in several plots. Relevant functions now have a ``seed`` parameter, which can take either fixed seed (typically an ``int``) or a numpy random number generator object (either the newer :class:`numpy.random.Generator` or the older :class:`numpy.random.mtrand.RandomState`).
    * Generalized the idea of "diagonal" axes in :class:`PairGrid` to any axes that share an x and y variable.
    * In :class:`PairGrid`, the ``hue`` variable is now excluded from the default list of variables that make up the rows and columns of the grid.
    * Exposed the ``layout_pad`` parameter in :class:`PairGrid` and set a smaller default than what matptlotlib sets for more efficient use of space in dense grids.
    * It is now possible to force a categorical interpretation of the ``hue`` varaible in a relational plot by passing the name of a categorical palette (e.g. ``"deep"``, or ``"Set2"``). This complements the (previously supported) option of passig a list/dict of colors.
    * Added the ``tree_kws`` parameter to :func:`clustermap` to control the properties of the lines in the dendrogram.
    * Added the ability to pass hierarchical label names to the :class:`FacetGrid` legend, which also fixes a bug in :func:`relplot` when the same label appeared in diffent semantics.
    * Improved support for grouping observations based on pandas index information in categorical plots.
  + Bug fixes and adaptations
    * Avoided an error when singular data is passed to :func:`kdeplot`, issuing a warning instead. This makes :func:`pairplot` more robust.
    * Fixed the behavior of ``dropna`` in :class:`PairGrid` to properly exclude null datapoints from each plot when set to ``True``.
    * Fixed an issue where :func:`regplot` could interfere with other axes in a multi-plot matplotlib figure.
    * Semantic variables with a ``category`` data type will always be treated as categorical in relational plots.
    * Avoided a warning about color specifications that arose from :func:`boxenplot` on newer matplotlibs.
    * Adapted to a change in how matplotlib scales axis margins, which caused multiple calls to :func:`regplot` with ``truncate=False`` to progressively expand the x axis limits. Because there are currently limitations on how autoscaling works in matplotlib, the default value for ``truncate`` in seaborn has also been changed to ``True``.
    * Relational plots no longer error when hue/size data are inferred to be numeric but stored with a string datatype.
    * Relational plots now consider semantics with only a single value that can be interpreted as boolean (0 or 1) to be categorical, not numeric.
    * Relational plots now handle list or dict specifications for ``sizes`` correctly.
    * Fixed an issue in :func:`pointplot` where missing levels of a hue variable would cause an exception after a recent update in matplotlib.
    * Fixed a bug when setting the rotation of x tick labels on a :class:`FacetGrid`.
    * Fixed a bug where values would be excluded from categorical plots when only one variable was a pandas ``Series`` with a non-default index.
    * Fixed a bug when using ``Series`` objects as arguments for ``x_partial`` or ``y_partial`` in :func:`regplot`.
    * Fixed a bug when passing a ``norm`` object and using color annotations in :func:`clustermap`.
    * Fixed a bug where annotations were not rearranged to match the clustering in :func:`clustermap`.
    * Fixed a bug when trying to call :func:`set` while specifying a list of colors for the palette.
    * Fixed a bug when resetting the color code short-hands to the matplotlib default.
    * Avoided errors from stricter type checking in upcoming ``numpy`` changes.
    * Avoided error/warning in :func:`lineplot` when plotting categoricals with empty levels.
    * Allowed ``colors`` to be passed through to a bivariate :func:`kdeplot`.
    * Standardized the output format of custom color palette functions.
    * Fixed a bug where legends for numerical variables in a relational plot could show a surprisingly large number of decimal places.
    * Improved robustness to missing values in distribution plots.
    * Made it possible to specify the location of the :class:`FacetGrid` legend using matplotlib keyword arguments.
- Drop upstream-included fix_labels_rotation.patch
- Add use_platform_int.patch to fix 32bit builds
  See https://github.com/mwaskom/seaborn/pull/1952

-------------------------------------------------------------------
Wed Jan  8 17:57:48 UTC 2020 - Todd R <toddrme2178@gmail.com>

- Disable tests that are incompatible with numpy 1.18
  See: https://github.com/mwaskom/seaborn/issues/1917

-------------------------------------------------------------------
Fri Dec  6 18:44:56 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Disable python2 support since dependencies dropped python2
- Re-enable Disable TestHeatmap.test_heatmap_axes and 
  TestDendrogram.test_dendrogram_rotate since matplotlib has been
  updated.

-------------------------------------------------------------------
Mon Nov  4 16:25:29 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Disable TestHeatmap.test_heatmap_axes and 
  TestDendrogram.test_dendrogram_rotate, which fail on matplotlib
  3.1.1 but should be fixed in next matplotlib release.
  See: https://github.com/mwaskom/seaborn/issues/1773

-------------------------------------------------------------------
Mon Jun  3 19:34:12 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Add fix_labels_rotation.patch
  See gh#mwaskom/seaborn/#1598
  Patch from gh#mwaskom/seaborn/#1716
- Fix jupyter dependencies.

-------------------------------------------------------------------
Tue Mar  5 15:04:22 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Disable tests for python 2.7 due to unicode issues.
  See: https://github.com/mwaskom/seaborn/issues/1675

-------------------------------------------------------------------
Tue Sep 25 16:07:09 UTC 2018 - Todd R <toddrme2178@gmail.com>

- Temporarily disable one test failing due to matplotlib 3.

-------------------------------------------------------------------
Fri Jul 20 15:29:09 UTC 2018 - arun@gmx.de

- specfile:
  * update copyright year
  * use pytest to run tests
  * remove devel requirement for noarch
  * be more specific in %file section

- update to version 0.9.0:
  * New relational plots
    + Three completely new plotting functions have been added:
      :func:`catplot`, :func:`scatterplot`, and :func:`lineplot`. The
      first is a figure-level interface to the latter two that
      combines them with a :class:`FacetGrid`. The functions bring the
      high-level, dataset-oriented API of the seaborn categorical
      plotting functions to more general plots (scatter plots and line
      plots).
  * Updates to themes and palettes
    + Several changes have been made to the seaborn style themes,
      context scaling, and color palettes. In general the aim of these
      changes was to make the seaborn styles more consistent with the
      `style updates in matplotlib 2.0
      <https://matplotlib.org/users/dflt_style_changes.html>`_ and to
      leverage some of the new style parameters for better
      implementation of some aspects of the seaborn styles. Here is a
      list of the changes:
    + Reorganized and updated some
      :func:`axes_style`/:func:`plotting_context` parameters to take
      advantage of improvements in the matplotlib 2.0 update. The
      biggest change involves using several new parameterss in the
      "style" spec while moving parameters that used to implement the
      corresponding aesthetics to the "context" spec. For example,
      axes spines and ticks are now off instead of having their
      width/length zeroed out for the darkgrid style. That means the
      width/length of these elements can now be scaled in different
      contexts. The effect is a more cohesive appearance of the plots,
      especially in larger contexts. These changes include only
      minimal support for the 1.x matplotlib series. Users who are
      stuck on matplotlib 1.5 but wish to use seaborn styling may want
      to use the seaborn parameters that can be accessed through the
      `matplotlib stylesheet interface
      <https://matplotlib.org/users/style_sheets.html>`_.
    + Updated the seaborn palettes ("deep", "muted", "colorblind",
      etc.) to correspond with the new 10-color matplotlib
      default. The legacy palettes are now available at "deep6",
      "muted6", "colorblind6", etc. Additionally, a few individual
      colors were tweaked for better consistency, aesthetics, and
      accessibility.
    + Calling :func:`color_palette` (or :func:`set_palette`) with a
      named qualitative palettes (i.e. one of the seaborn palettes,
      the colorbrewer qualitative palettes, or the matplotlib
      matplotlib tableau-derived palettes) and no specified number of
      colors will return all of the colors in the palette. This means
      that for some palettes, the returned list will have a different
      length than it did in previous versions.
    + Enhanced :func:`color_palette` to accept a parameterized
      specification of a cubehelix palette in in a string, prefixed
      with ""ch:"" (e.g. ""ch:-.1,.2,l=.7""). Note that keyword
      arguments can be spelled out or referenced using only their
      first letter. Reversing the palette is accomplished by appending
      ""_r"", as with other matplotlib colormaps. This specification
      will be accepted by any seaborn function with a "palette="
      parameter.
    + Slightly increased the base font sizes in
      :func:`plotting_context` and increased the scaling factors for
      ""talk"" and ""poster"" contexts.
    + Calling :func:`set` will now call :func:`set_color_codes` to
      re-assign the single letter color codes by default
  * API changes
    + The "factorplot" function has been renamed to
      :func:`catplot`. The new name ditches the original R-inflected
      terminology to use a name that is more consistent with
      terminology in pandas and in seaborn itself. This change should
      hopefully make :func:`catplot` easier to discover, and it should
      make more clear what its role is. "factorplot" still exists and
      will pass its arguments through to :func:`catplot` with a
      warning. It may be removed eventually, but the transition will
      be as gradual as possible.
    + The other reason that the "factorplot" name was changed was to
      ease another alteration which is that the default "kind" in
      :func:`catplot` is now ""strip"" (corresponding to
      :func:`stripplot`). This plots a categorical scatter plot which
      is usually a much better place to start and is more consistent
      with the default in :func:`relplot`. The old default style in
      "factorplot" (""point"", corresponding to :func:`pointplot`)
      remains available if you want to show a statistical estimation.
    + The "lvplot" function has been renamed to :func:`boxenplot`. The
      "letter-value" terminology that was used to name the original
      kind of plot is obscure, and the abbreviation to "lv" did not
      help anything. The new name should make the plot more
      discoverable by describing its format (it plots multiple boxes,
      also known as "boxen"). As with "factorplot", the "lvplot"
      function still exists to provide a relatively smooth transition.
    + Renamed the "size" parameter to "height" in multi-plot grid
      objects (:class:`FacetGrid`, :class:`PairGrid`, and
      :class:`JointGrid`) along with functions that use them
      ("factorplot", :func:`lmplot`, :func:`pairplot`, and
      :func:`jointplot`) to avoid conflicts with the "size" parameter
      that is used in "scatterplot" and "lineplot" (necessary to make
      :func:`relplot` work) and also makes the meaning of the
      parameter a bit more clear.
    + Changed the default diagonal plots in :func:`pairplot` to use
      `func`:kdeplot` when a ""hue"" dimension is used.
    + Deprecated the statistical annotation component of
      :class:`JointGrid`. The method is still available but will be
      removed in a future version.
    + Two older functions that were deprecated in earlier versions,
      "coefplot" and "interactplot", have undergone final removal from
      the code base.
  * Documentation improvements
    + There has been some effort put into improving the
      documentation. The biggest change is that the :ref:`introduction
      to the library <introduction>` has been completely rewritten to
      provide much more information and, critically, examples. In
      addition to the high-level motivation, the introduction also
      covers some important topics that are often sources of
      confusion, like the distinction between figure-level and
      axes-level functions, how datasets should be formatted for use
      in seaborn, and how to customize the appearance of the plots.
    + Other improvements have been made throughout, most notably a
      thorough re-write of the :ref:`categorical tutorial
      <categorical_tutorial>`.
  * Other small enhancements and bug fixes
    + Changed :func:`rugplot` to plot a matplotlib "LineCollection"
      instead of many "Line2D" objects, providing a big speedup for
      large arrays.
    + Changed the default off-diagonal plots to use
      :func:`scatterplot`. (Note that the ""hue"" currently draws
      three separate scatterplots instead of using the hue semantic of
      the scatterplot function).
    + Changed color handling when using :func:`kdeplot` with two
      variables. The default colormap for the 2D density now follows
      the color cycle, and the function can use "color" and "label"
      kwargs, adding more flexibility and avoiding a warning when
      using with multi-plot grids.
    + Added the "subplot_kws" parameter to :class:`PairGrid` for more
      flexibility.
    + Removed a special case in :class:`PairGrid` that defaulted to
      drawing stacked histograms on the diagonal axes.
    + Fixed :func:`jointplot`/:class:`JointGrid` and :func:`regplot`
      so that they now accept list inputs.
    + Fixed a bug in :class:`FacetGrid` when using a single row/column
      level or using "col_wrap=1".
    + Fixed functions that set axis limits so that they preserve
      auto-scaling state on matplotlib 2.0.
    + Avoided an error when using matplotlib backends that cannot
      render a canvas (e.g. PDF).
    + Changed the install infrastructure to explicitly declare
      dependencies in a way that "pip" is aware of. This means that
      "pip install seaborn" will now work in an empty
      environment. Additionally, the dependencies are specified with
      strict minimal versions.
    + Updated the testing infrastructure to execute tests with `pytest
      <https://docs.pytest.org/en/latest/>`_ (although many individual
      tests still use nose assertion).

-------------------------------------------------------------------
Thu Nov  2 02:07:08 UTC 2017 - arun@gmx.de

- update to version 0.8.1:
  * Added a warning in :class:`FacetGrid` when passing a categorical
    plot function without specifying "order" (or "hue_order" when
    "hue" is used), which is likely to produce a plot that is
    incorrect.
  * Improved compatibility between :class:`FacetGrid` or
    :class:`PairGrid` and interactive matplotlib backends so that the
    legend no longer remains inside the figure when using
    "legend_out=True".
  * Changed categorical plot functions with small plot elements to use
    :func:`dark_palette` instead of :func:`light_palette` when
    generating a sequential palette from a specified color.
  * Improved robustness of :func:`kdeplot` and :func:`distplot` to
    data with fewer than two observations.
  * Fixed a bug in :func:`clustermap` when using "yticklabels=False".
  * Fixed a bug in :func:`pointplot` where colors were wrong if
    exactly three points were being drawn.
  * Fixed a bug in :func:`pointplot` where legend entries for missing
    data appeared with empty markers.
  * Fixed a bug in :func:`clustermap` where an error was raised when
    annotating the main heatmap and showing category colors.
  * Fixed a bug in :func:`clustermap` where row labels were not being
    properly rotated when they overlapped.
  * Fixed a bug in :func:`kdeplot` where the maximum limit on the
    density axes was not being updated when multiple densities were
    drawn.
  * Improved compatibility with future versions of pandas.

-------------------------------------------------------------------
Thu Aug 17 14:44:57 UTC 2017 - toddrme2178@gmail.com

- Update to version 0.8.0
  * The default style is no longer applied when seaborn is 
    imported. It is now necessary to explicitly call set() or one
    or more of set_style(), set_context(), and set_palette().
    Correspondingly, the seaborn.apionly module has been
    deprecated.
  * Changed the behavior of heatmap() (and by extension
    clustermap()) when plotting divergent dataesets (i.e. when
    the center parameter is used). Instead of extending the lower
    and upper limits of the colormap to be symettrical around the
    center value, the colormap is modified so that its middle color
    corresponds to center. This means that the full range of the
    colormap will not be used (unless the data or specified vmin
    and vmax are symettric), but the upper and lower limits of
    the colorbar will correspond to the range of the data. See the
    Github pull request (#1184) for examples of the behavior.
  * Removed automatic detection of diverging data in heatmap()
    (and by extension clustermap()). If you want the colormap to
    be treated as diverging (see above), it is now necessary to
    specify the center value. When no colormap is specified,
    specifying center will still change the default to be one that
    is more appropriate for displaying diverging data.
  * Added four new colormaps, created using viscm for perceptual
    uniformity. The new colormaps include two sequential colormaps
    (“rocket” and “mako”) and two diverging colormaps (“icefire”
    and “vlag”). These colormaps are registered with matplotlib on
    seaborn input and the colormap objects can be accessed in the
    seaborn.cm namespace.
  * Changed the default heatmap() colormaps to be “rocket” (in the
    case of sequential data) or “icefire” (in the case of diverging
    data). Note that this change reverses the direction of the
    luminance ramp from the previous defaults. While potentially
    confusing and disruptive, this change better aligns the seaborn
    defaults with the new matplotlib default colormap (“viridis”)
    and arguably better aligns the semantics of a “heat” map with
    the appearance of the colormap.
  * Added "auto" as a (default) option for tick labels in heatmap()
    and clustermap(). This will try to estimate how many ticks can
    be labeled without the text objects overlapping, which should
    improve performance for larger matrices.
  * Added the dodge parameter to boxplot(), violinplot(), and
    barplot() to allow use of hue without changing the position or
    width of the plot elements, as when the hue varible is not
    nested within the main categorical variable.
  * Correspondingly, the split parameter for stripplot() and
    swarmplot() has been renamed to dodge for consistency with the
    other categorical functions (and for differentiation from the
    meaning of split in violinplot()).
  * Added the ability to draw a colorbar for a bivariate kdeplot()
    with the cbar parameter (and related cbar_ax and cbar_kws
    parameters).
  * Added the ability to use error bars to show standard deviations
    rather than bootstrap confidence intervals in most statistical
    functions by putting ci="sd".
  * Allow side-specific offsets in despine().
  * Figure size is no longer part of the seaborn plotting context
    parameters.
  * Put a cap on the number of bins used in jointplot() for
    type=="hex" to avoid hanging when the reference rule prescribes
    too many.
  * Turn off dendrogram axes in clustermap() rather than setting
    the background color to white.
  * New matplotlib qualitative palettes (e.g. “tab10”) are now
    handled correctly.
  * Some modules and functions have been internally reorganized;
    there should be no effect on code that uses the seaborn
    namespace.
  * Added a deprecation warning to tsplot() function to indicate
    that it will be removed or replaced with a substantially
    altered version in a future release.
  * The interactplot and coefplot functions are officially
    deprecated and will be removed in a future release.

-------------------------------------------------------------------
Thu May  4 20:16:19 UTC 2017 - toddrme2178@gmail.com

- Implement singlespec version.

-------------------------------------------------------------------
Wed Mar  1 17:07:07 UTC 2017 - toddrme2178@gmail.com

- Temporarily disable tests.  There are multiple spurious test
  failures due to upstream changes that do not affect real-world
  usage.  Tests should be re-enabled in next release.

-------------------------------------------------------------------
Mon Sep 19 18:12:42 UTC 2016 - toddrme2178@gmail.com

- update to version 0.7.1:
  * Added the ability to put "caps" on the error bars that are drawn
    by :func:`barplot` or :func:`pointplot` (and, by extension,
    :func:`factorplot`). Additionally, the line width of the error
    bars can now be controlled. These changes involve the new
    parameters "capsize" and "errwidth". See the `github pull request
    <https://github.com/mwaskom/seaborn/pull/898>`_ for examples of
    usage.
  * Improved the row and column colors display in
    :func:`clustermap`. It is now possible to pass Pandas objects for
    these elements and, when possible, the semantic information in the
    Pandas objects will be used to add labels to the plot. When Pandas
    objects are used, the color data is matched against the main
    heatmap based on the index, not on position. This is more
    accurate, but it may lead to different results if current code
    assumed positional matching.
  * Improved the luminance calculation that determines the annotation
    color in :func:`heatmap`.
  * The "annot" parameter of :func:`heatmap` now accepts a rectangular
    dataset in addition to a boolean value. If a dataset is passed,
    its values will be used for the annotations, while the main
    dataset will be used for the heatmap cell colors.
  * Fixed a bug in :class:`FacetGrid` that appeared when using
    "col_wrap" with missing "col" levels.
  * Made it possible to pass a tick locator object to the
    :func:`heatmap` colorbar.
  * Made it possible to use different styles (e.g., step) for
    :class:`PairGrid` histograms when there are multiple hue levels.
  * Fixed a bug in scipy-based univariate kernel density bandwidth
    calculation.
  * The :func:`reset_orig` function (and, by extension, importing
    "seaborn.apionly") resets matplotlib rcParams to their values at
    the time seaborn itself was imported, which should work better
    with rcParams changed by the jupyter notebook backend.
  * Removed some objects from the top-level "seaborn" namespace.
  * Improved unicode compatibility in :class:`FacetGrid`.
- Update to 0.7.0
   - Added the :func:`swarmplot` function, which draws beeswarm 
     plots. These are categorical scatterplots, similar to those
     produced by :func:`stripplot`, but position of the points on
     the categorical axis is chosen to avoid overlapping points.
   - Changed some of the :func:`stripplot` defaults to be closer
     to :func:`swarmplot`. Points are now somewhat smaller, have
     no outlines, and are not split by default when using ``hue``.
     These settings remain customizable through function
     parameters.
   - Added an additional rule when determining category order in
     categorical plots. Now, when numeric variables are used in a
     categorical role, the default behavior is to sort the unique
     levels of the variable (i.e they will be in proper numerical
     order). This can still be overridden by the appropriate 
     ``{*_}order`` parameter, and variables with a ``category``
     datatype will still follow the category order even if the
     levels are strictly numerical.
   - Changed how :func:`stripplot` draws points when using
   ``hue`` nesting with ``split=False`` so that the different
   ``hue`` levels are not drawn strictly on top of each other.
   - Improve performance for large dendrograms in 
     :func:`clustermap`.
   - Added ``font.size`` to the plotting context definition so
     that the default output from ``plt.text`` will be scaled
     appropriately. 
   - Fixed a bug in :func:`clustermap` when ``fastcluster`` is
     not installed.
   - Fixed a bug in the zscore calculation in
     :func:`clustermap`.
   - Fixed a bug in :func:`distplot` where sometimes the default
     number of bins would not be an integer.
   - Fixed a bug in :func:`stripplot` where a legend item would
     not appear for a ``hue`` level if there were no observations
     in the first group of points.
   - Heatmap colorbars are now rasterized for better performance
     in vector plots.
   - Added workarounds for some matplotlib boxplot issues, such as
     strange colors of outlier points.
   - Added workarounds for an issue where violinplot edges would be
     missing or have random colors.
   - Added a workaround for an issue where only one :func:`heatmap`
     cell would be annotated on some matplotlib backends.
   - Fixed a bug on newer versions of matplotlib where a colormap
     would be erroneously applied to scatterplots with only three
     observations.
   - Updated seaborn for compatibility with matplotlib 1.5.
   - Added compatibility for various IPython (and Jupyter) versions
     in functions that use widgets.
- Add python3-seaborn-0.7.0-remove_color_list _from_dendrogram_call_in_tests.patch
  to fix compatibility with python3-scipy 0.17.0

-------------------------------------------------------------------
Wed Jul  1 12:15:21 UTC 2015 - toddrme2178@gmail.com

- Update to 0.6.0
  * Changed plotting functions
    - In version 0.6, the "categorical" plots have been unified with a common 
      API
    - Changes to :func:`boxplot` and :func:`violinplot` will probably be the 
      most disruptive. Both functions maintain backwards-compatibility in 
      terms of the kind of data they can accept, but the syntax has changed to 
      be more similar to other seaborn functions. These functions are now 
      invoked with ``x`` and/or  ``y`` parameters that are either vectors of 
      data or names of variables in a  long-form DataFrame passed to the new 
      ``data`` parameter. You can still pass wide-form DataFrames or arrays to 
      ``data``, but it is no longer the first  positional argument. See the 
      `github pull request <https://github.com/mwaskom/seaborn/pull/410>`_ for 
      more information on these  changes and the logic behind them.
    - As :func:`pointplot` and :func:`barplot` can now plot with the major 
      categorical variable on the y axis, the ``x_order`` parameter has been 
      renamed to ``order``.
    - Added a ``hue`` argument to :func:`boxplot` and :func:`violinplot`, 
      which allows for nested grouping the plot elements by a third 
      categorical variable. For :func:`violinplot`, this nesting can also be 
      accomplished by splitting the violins when there are two levels of the 
      ``hue`` variable (using ``split=True``). To make this functionality 
      feasible, the ability to specify where the plots will be draw in data 
      coordinates has been removed. These plots now are drawn at set 
      positions, like (and identical to) :func:`barplot` and :func:`pointplot`.
    - Added a ``palette`` parameter to :func:`boxplot`/:func:`violinplot`. The 
      ``color`` parameter still exists, but no longer does double-duty in 
      accepting the name of a seaborn palette. ``palette`` supersedes 
      ``color`` so that it can be used with a :class:`FacetGrid`.
    - The default rules for ordering the categories has changed. Instead of 
      automatically sorting the category levels, the plots now show the levels 
      in the order they appear in the input data (i.e., the order given by 
      ``Series.unique()``). Order can be specified when plotting with the 
      ``order`` and ``hue_order`` parameters. Additionally, when variables are 
      pandas objects with a "categorical" dtype, the category order is 
      inferred from the data object. This change also affects 
      :class:`FacetGrid` and :class:`PairGrid`.
    - Added the ``scale`` and ``scale_hue`` parameters to :func:`violinplot`. 
      These control how the width of the violins are scaled. The default is 
      ``area``, which is different from how the violins used to be drawn. Use 
      ``scale='width'`` to get the old behavior.
    - Used a different style for the ``box`` kind of interior plot in 
      :func:`violinplot`, which shows the whisker range in addition to the 
      quartiles. Use ``inner='quartile'`` to get the old style.
  * New plotting functions
    - Added the :func:`stripplot` function, which draws a scatterplot where 
      one of the variables is categorical. This plot has the same API as 
      :func:`boxplot` and :func:`violinplot`. It is useful both on its own and 
      when composed with one of these other plot kinds to show both the 
      observations and underlying distribution.
    - Added the :func:`countplot` function, which uses a bar plot 
      representation to show counts of variables in one or more categorical 
      bins. This replaces the old approach of calling :func:`barplot` without 
      a numeric variable.
  * Other additions and changes
    - The :func:`corrplot` and underlying :func:`symmatplot` functions have 
      been deprecated in favor of :func:`heatmap`, which is much more flexible 
      and robust. These two functions are still available in version 0.6, but 
      they will be removed in a future version.
    - Added the :func:`set_color_codes` function and the ``color_codes`` 
      argument to :func:`set` and :func:`set_palette`. This changes the 
      interpretation of shorthand color codes (i.e. "b", "g", k", etc.) within 
      matplotlib to use the values from one of the named seaborn palettes 
      (i.e. "deep", "muted", etc.). That makes it easier to have a more 
      uniform look when using matplotlib functions directly with seaborn 
      imported. This could be disruptive to existing plots, so it does not 
      happen by default. It is possible this could change in the future.
    - The :func:`color_palette` function no longer trims palettes that are 
      longer than 6 colors when passed into it.
    - Added the ``as_hex`` method to color palette objects, to return a list 
      of hex codes rather than rgb tuples.
    - :func:`jointplot` now passes additional keyword arguments to the 
      function used to draw the plot on the joint axes.
    - Changed the default ``linewidths`` in :func:`heatmap` and 
      :func:`clustermap` to 0 so that larger matrices plot correctly. This 
      parameter still exists and can be used to get the old effect of lines 
      demarcating each cell in the heatmap (the old default ``linewidths`` was 
      0.5).
    - :func:`heatmap` and :func:`clustermap` now automatically use a mask for 
      missing values, which previously were shown with the "under" value of 
      the colormap per default `plt.pcolormesh` behavior.
    - Added the ``seaborn.crayons`` dictionary and the :func:`crayon_palette` 
      function to define colors from the 120 box (!) of `Crayola crayons 
      <http://en.wikipedia.org/wiki/List_of_Crayola_crayon_colors>`_.
    - Added the ``line_kws`` parameter to :func:`residplot` to change the 
      style of the lowess line, when used.
    - Added open-ended ``**kwargs`` to the ``add_legend`` method on 
      :class:`FacetGrid` and :class:`PairGrid`, which will pass additional 
      keyword arguments through when calling the legend function on the 
      ``Figure`` or ``Axes``.
    - Added the ``gridspec_kws`` parameter to :class:`FacetGrid`, which allows 
      for control over the size of individual facets in the grid to emphasize 
      certain plots or account for differences in variable ranges.
    - The interactive palette widgets now show a continuous colorbar, rather 
      than a discrete palette, when `as_cmap` is True.
    - The default Axes size for :func:`pairplot` and :class:`PairGrid` is now 
      slightly smaller.
    - Added the ``shade_lowest`` parameter to :func:`kdeplot` which will set 
      the alpha for the lowest contour level to 0, making it easier to plot 
      multiple bivariate distributions on the same axes.
    - The ``height`` parameter of :func:`rugplot` is now interpreted as a 
      function of the axis size and is invariant to changes in the data scale 
      on that axis. The rug lines are also slightly narrower by default.
    - Added a catch in :func:`distplot` when calculating a default number of 
      bins. For highly skewed data it will now use sqrt(n) bins, where 
      previously the reference rule would return "infinite" bins and cause an 
      exception in matplotlib.
    - Added a ceiling (50) to the default number of bins used for 
      :func:`distplot` histograms. This will help avoid confusing errors with 
      certain kinds of datasets that heavily violate the assumptions of the 
      reference rule used to get a default number of bins. The ceiling is not 
      applied when passing a specific number of bins.
    - The various property dictionaries that can be passed to ``plt.boxplot`` 
      are now applied after the seaborn restyling to allow for full 
      customizability.
    - Added a ``savefig`` method to :class:`JointGrid` that defaults to a 
      tight bounding box to make it easier to save figures using this class, 
      and set a tight bbox as the default for the ``savefig`` method on other 
      Grid objects.
    - You can now pass an integer to the ``xticklabels`` and ``yticklabels`` 
      parameter of :func:`heatmap` (and, by extension, :func:`clustermap`). 
      This will make the plot use the ticklabels inferred from the data, but 
      only plot every ``n`` label, where ``n`` is the number you pass. This 
      can help when visualizing larger matrices with some sensible ordering to 
      the rows or columns of the dataframe.
    - Added `"figure.facecolor"` to the style parameters and set the default 
      to white.
    - The :func:`load_dataset` function now caches datasets locally after 
      downloading them, and uses the local copy on subsequent calls.
  * Bug fixes
    - Fixed bugs in :func:`clustermap` where the mask and specified ticklabels 
      were not being reorganized using the dendrograms.
    - Fixed a bug in :class:`FacetGrid` and :class:`PairGrid` that lead to 
      incorrect legend labels when levels of the ``hue`` variable appeared in 
      ``hue_order`` but not in the data.
    - Fixed a bug in :meth:`FacetGrid.set_xticklabels` or 
      :meth:`FacetGrid.set_yticklabels` when ``col_wrap`` is being used.
    - Fixed a bug in :class:`PairGrid` where the ``hue_order`` parameter was 
      ignored.
    - Fixed two bugs in :func:`despine` that caused errors when trying to trim 
      the spines on plots that had inverted axes or no ticks.
    - Improved support for the ``margin_titles`` option in :class:`FacetGrid`, 
      which can now be used with a legend.
      
-------------------------------------------------------------------
Fri Nov 28 11:45:16 UTC 2014 - toddrme2178@gmail.com

- Initial version

