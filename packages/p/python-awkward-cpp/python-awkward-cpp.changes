-------------------------------------------------------------------
Fri Dec 15 15:46:14 UTC 2023 - Atri Bhattacharya <badshah400@gmail.com>

- Update to version 27:
  * Remove obsolete cuda_kernels (gh#scikit-hep/awkward#2876).

-------------------------------------------------------------------
Tue Nov 14 12:04:54 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 26:
  * Keep Document value unchanged on parse error (#439)
  * Add missing return statement (#450)
  * Fix Document::Parse(const Ch*) for transcoding (#478)
  * encodings.h: fix typo in preprocessor condition (#495)
  * Custom Microsoft headers are necessary only for Visual Studio
    2012 and lower (#559)
  * Fix memory leak for invalid regex
    (26e69ffde95ba4773ab06db6457b78f308716f4b)
  * Fix a bug in schema minimum/maximum keywords for 64-bit
    integer (e7149d665941068ccf8c565e77495521331cf390)
  * Fix a crash bug in regex (#605)
  * Fix schema "required" keyword cannot handle duplicated keys

-------------------------------------------------------------------
Thu Oct  5 11:30:41 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 24:
  * CMakeLists for include as a thirdparty in projects
  * Change Document::ParseStream() to use stack allocator for
    Reader

-------------------------------------------------------------------
Sun Sep 17 15:14:47 UTC 2023 - Atri Bhattacharya <badshah400@gmail.com>

- Update to version 23:
  * refactor: set flags on targets
  * fix: restore std
  * fix: drop more references to CXX_EXTENSIONS et al.

-------------------------------------------------------------------
Mon Sep 11 21:23:04 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 22:
  * Add iostream wrapper (#530)
  * Add Jsonx example for converting JSON into JSONx (a XML
    format) (#531)
  * Add optional unresolvedTokenIndex parameter to Pointer::Get()
    (#532)
  * Add encoding validation option for Writer/PrettyWriter (#534)
  * Add Writer::SetMaxDecimalPlaces() (#536)
  * Support {0, } and {0, m} in Regex (#539)
  * Add Value::Get/SetFloat(), Value::IsLossLessFloat/Double()
    (#540)
  * Add stream position check to reader unit tests (#541)
  * Add Templated accessors and range-based for (#542)
  * Add (Pretty)Writer::RawValue() (#543)
  * Add Document::Parse(std::string), Document::Parse(const
    char*, size_t length) and related APIs. (#553)
  * Add move constructor for GenericSchemaDocument (#554)
  * Add VS2010 and VS2015 to AppVeyor CI (#555)
  * Add parse-by-parts example (#556, #562)
  * Support parse number as string (#564, #589)
  * Add kFormatSingleLineArray for PrettyWriter (#577)
  * Added optional support for trailing commas (#584)
  * Added filterkey and filterkeydom examples (#615)
  * Added npm docs (#639)
  * Allow options for writing and parsing NaN/Infinity (#641)
  * Add std::string overload to PrettyWriter::Key() when
    RAPIDJSON_HAS_STDSTRING is defined (#698)

-------------------------------------------------------------------
Thu Jul 27 10:26:00 UTC 2023 - Dirk Müller <dmueller@suse.com>

- mark as python311 on sle15 as it requires >= 3.8

-------------------------------------------------------------------
Mon Jul 10 17:53:20 UTC 2023 - Atri Bhattacharya <badshah400@gmail.com>

- Update to version 21:
  * Bug fix: added kernel specializations for
    awkward_ListOffsetArray_reduce_local_nextparents_64
    [gh#scikit-hep/awkward#2572].
- Now requires python >= 3.8.

-------------------------------------------------------------------
Sat Jul  1 21:04:29 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 18:
  * update pyodide parts a bit

-------------------------------------------------------------------
Tue Jun 20 16:37:16 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 17:
  * Make GenericSchemaDocument constructor explicit (#674)
  * Optimize FindMember when use std::string (#690)

-------------------------------------------------------------------
Sun Jun 11 08:23:12 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 16:
  * Add GenericDocument ctor overload to specify JSON type (#369)
  * Add FAQ (#372, #373, #374, #376)
  * Add forward declaration header `fwd.h`
  * Add @PlatformIO Library Registry manifest file (#400)
  * Implement assignment operator for BigInteger (#404)
  * Add comments support (#443)
  * Adding coapp definition (#460)
  * documenttest.cpp: EXPECT_THROW when checking empty allocator
    (470)
  * GenericDocument: add implicit conversion to ParseResult
    (#480)
  * Use <wchar.h> with C++ linkage on Windows ARM (#485)
  * Detect little endian for Microsoft ARM targets
  * Check Nan/Inf when writing a double (#510)
  * Add JSON Schema Implementation (#522)
  * Add iostream wrapper (#530)
  * Add Jsonx example for converting JSON into JSONx (a XML
    format) (#531)
  * Add optional unresolvedTokenIndex parameter to Pointer::Get()
    (#532)
  * Add encoding validation option for Writer/PrettyWriter (#534)
  * Add Writer::SetMaxDecimalPlaces() (#536)
  * Support {0, } and {0, m} in Regex (#539)
  * Add Value::Get/SetFloat(), Value::IsLossLessFloat/Double()
    (#540)
  * Add stream position check to reader unit tests (#541)
  * Add Templated accessors and range-based for (#542)
  * Add (Pretty)Writer::RawValue() (#543)
  * Add Document::Parse(std::string), Document::Parse(const
    char*, size_t length) and related APIs. (#553)
  * Add move constructor for GenericSchemaDocument (#554)
  * Add VS2010 and VS2015 to AppVeyor CI (#555)
  * Add parse-by-parts example (#556, #562)
  * Support parse number as string (#564, #589)
  * Add kFormatSingleLineArray for PrettyWriter (#577)
  * Added optional support for trailing commas (#584)

-------------------------------------------------------------------
Wed May  3 21:28:51 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 15:
  * Add parse-by-parts example (#556, #562)
  * Support parse number as string (#564, #589)
  * Add kFormatSingleLineArray for PrettyWriter (#577)
  * Added optional support for trailing commas (#584)
  * Added filterkey and filterkeydom examples (#615)
  * Added npm docs (#639)
  * Allow options for writing and parsing NaN/Infinity (#641)

-------------------------------------------------------------------
Fri Feb 10 12:24:55 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 8:
  * Add GenericDocument ctor overload to specify JSON type
  * Add FAQ
  * Add forward declaration header `fwd.h`
  * Add @PlatformIO Library Registry manifest file
  * Implement assignment operator for BigInteger
  * Add comments support
  * Adding coapp definition
  * documenttest.cpp: EXPECT_THROW when checking empty allocator
  * GenericDocument: add implicit conversion to ParseResult
  * Use <wchar.h> with C++ linkage on Windows ARM
  * Detect little endian for Microsoft ARM targets
  * Check Nan/Inf when writing a double
  * Add JSON Schema Implementation
  * Add iostream wrapper
  * Add Jsonx example for converting JSON into JSONx (a XML
    format)
  * Add optional unresolvedTokenIndex parameter to Pointer::Get()
  * Add encoding validation option for Writer/PrettyWriter
  * Add Writer::SetMaxDecimalPlaces()
  * Support {0, } and {0, m} in Regex
  * Add Value::Get/SetFloat(), Value::IsLossLessFloat/Double()
  * Add stream position check to reader unit tests
  * Add Templated accessors and range-based for
  * Add (Pretty)Writer::RawValue()
  * Add Document::Parse(std::string), Document::Parse(const
    char*, size_t length) and related APIs.
  * Add move constructor for GenericSchemaDocument
  * Add VS2010 and VS2015 to AppVeyor CI
  * Add parse-by-parts example
  * Support parse number as string

-------------------------------------------------------------------
Fri Jan 27 17:59:03 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Initial specfile for v7
- Required by awkward 2
