<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>58ab43a8f5856aa63e3aa7a044d2ee8f</srcmd5>
    <version>7</version>
    <time>1674927858</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1061724</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>7ebc9474a86bfc6f25257f8915840185</srcmd5>
    <version>8</version>
    <time>1676148993</time>
    <user>dimstar_suse</user>
    <comment>- update to 8:
  * Add GenericDocument ctor overload to specify JSON type
  * Add FAQ
  * Add forward declaration header `fwd.h`
  * Add @PlatformIO Library Registry manifest file
  * Implement assignment operator for BigInteger
  * Add comments support
  * Adding coapp definition
  * documenttest.cpp: EXPECT_THROW when checking empty allocator
  * GenericDocument: add implicit conversion to ParseResult
  * Use &lt;wchar.h&gt; with C++ linkage on Windows ARM
  * Detect little endian for Microsoft ARM targets
  * Check Nan/Inf when writing a double
  * Add JSON Schema Implementation
  * Add iostream wrapper
  * Add Jsonx example for converting JSON into JSONx (a XML
    format)
  * Add optional unresolvedTokenIndex parameter to Pointer::Get()
  * Add encoding validation option for Writer/PrettyWriter
  * Add Writer::SetMaxDecimalPlaces()
  * Support {0, } and {0, m} in Regex
  * Add Value::Get/SetFloat(), Value::IsLossLessFloat/Double()
  * Add stream position check to reader unit tests
  * Add Templated accessors and range-based for
  * Add (Pretty)Writer::RawValue()
  * Add Document::Parse(std::string), Document::Parse(const
    char*, size_t length) and related APIs.
  * Add move constructor for GenericSchemaDocument
  * Add VS2010 and VS2015 to AppVeyor CI
  * Add parse-by-parts example</comment>
    <requestid>1064235</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>0a03e28ebd585393c535091cc098e7fc</srcmd5>
    <version>15</version>
    <time>1683295096</time>
    <user>dimstar_suse</user>
    <comment>- update to 15:
  * Add parse-by-parts example (#556, #562)
  * Support parse number as string (#564, #589)
  * Add kFormatSingleLineArray for PrettyWriter (#577)
  * Added optional support for trailing commas (#584)
  * Added filterkey and filterkeydom examples (#615)
  * Added npm docs (#639)
  * Allow options for writing and parsing NaN/Infinity (#641)</comment>
    <requestid>1084909</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>409582149497dd78dba035c1ad35cd2a</srcmd5>
    <version>16</version>
    <time>1686506154</time>
    <user>dimstar_suse</user>
    <comment>- update to 16:
  * Add GenericDocument ctor overload to specify JSON type (#369)
  * Add FAQ (#372, #373, #374, #376)
  * Add forward declaration header `fwd.h`
  * Add @PlatformIO Library Registry manifest file (#400)
  * Implement assignment operator for BigInteger (#404)
  * Add comments support (#443)
  * Adding coapp definition (#460)
  * documenttest.cpp: EXPECT_THROW when checking empty allocator
    (470)
  * GenericDocument: add implicit conversion to ParseResult
    (#480)
  * Use &lt;wchar.h&gt; with C++ linkage on Windows ARM (#485)
  * Detect little endian for Microsoft ARM targets
  * Check Nan/Inf when writing a double (#510)
  * Add JSON Schema Implementation (#522)
  * Add iostream wrapper (#530)
  * Add Jsonx example for converting JSON into JSONx (a XML
    format) (#531)
  * Add optional unresolvedTokenIndex parameter to Pointer::Get()
    (#532)
  * Add encoding validation option for Writer/PrettyWriter (#534)
  * Add Writer::SetMaxDecimalPlaces() (#536)
  * Support {0, } and {0, m} in Regex (#539)
  * Add Value::Get/SetFloat(), Value::IsLossLessFloat/Double()
    (#540)
  * Add stream position check to reader unit tests (#541)
  * Add Templated accessors and range-based for (#542)
  * Add (Pretty)Writer::RawValue() (#543)
  * Add Document::Parse(std::string), Document::Parse(const</comment>
    <requestid>1092134</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>2f86aeb27ceab2e937078ce5444dc427</srcmd5>
    <version>17</version>
    <time>1687379958</time>
    <user>dimstar_suse</user>
    <comment>- update to 17:
  * Make GenericSchemaDocument constructor explicit (#674)
  * Optimize FindMember when use std::string (#690)</comment>
    <requestid>1094143</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>417c4d4217305a9bb9252a3c7bf87dc0</srcmd5>
    <version>18</version>
    <time>1688398940</time>
    <user>dimstar_suse</user>
    <comment>- update to 18:
  * update pyodide parts a bit</comment>
    <requestid>1096326</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>d133962c0a08078d0e8e194f98624004</srcmd5>
    <version>21</version>
    <time>1689175606</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 21:
  * Bug fix: added kernel specializations for 
    awkward_ListOffsetArray_reduce_local_nextparents_64
    [gh#scikit-hep/awkward#2572].
- Now requires python &gt;= 3.8.
</comment>
    <requestid>1098033</requestid>
  </revision>
  <revision rev="8" vrev="2">
    <srcmd5>94c931b8f6ab1da9d305bc00cade9ae8</srcmd5>
    <version>21</version>
    <time>1690469603</time>
    <user>anag+factory</user>
    <comment>- mark as python311 on sle15 as it requires &gt;= 3.8</comment>
    <requestid>1101047</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>fc278e845dca2eb198134d97640acf71</srcmd5>
    <version>22</version>
    <time>1694545361</time>
    <user>anag+factory</user>
    <comment>- update to 22:
  * Add iostream wrapper (#530)
  * Add Jsonx example for converting JSON into JSONx (a XML
    format) (#531)
  * Add optional unresolvedTokenIndex parameter to Pointer::Get()
    (#532)
  * Add encoding validation option for Writer/PrettyWriter (#534)
  * Add Writer::SetMaxDecimalPlaces() (#536)
  * Support {0, } and {0, m} in Regex (#539)
  * Add Value::Get/SetFloat(), Value::IsLossLessFloat/Double()
    (#540)
  * Add stream position check to reader unit tests (#541)
  * Add Templated accessors and range-based for (#542)
  * Add (Pretty)Writer::RawValue() (#543)
  * Add Document::Parse(std::string), Document::Parse(const
    char*, size_t length) and related APIs. (#553)
  * Add move constructor for GenericSchemaDocument (#554)
  * Add VS2010 and VS2015 to AppVeyor CI (#555)
  * Add parse-by-parts example (#556, #562)
  * Support parse number as string (#564, #589)
  * Add kFormatSingleLineArray for PrettyWriter (#577)
  * Added optional support for trailing commas (#584)
  * Added filterkey and filterkeydom examples (#615)
  * Added npm docs (#639)
  * Allow options for writing and parsing NaN/Infinity (#641)
  * Add std::string overload to PrettyWriter::Key() when
    RAPIDJSON_HAS_STDSTRING is defined (#698)

  * Bug fix: added kernel specializations for
  * update pyodide parts a bit</comment>
    <requestid>1110377</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>f9b02f227c9f5def07ff349e051e44b3</srcmd5>
    <version>23</version>
    <time>1695209230</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1112027</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>59cbc291c82ba8c1528381b61f142d24</srcmd5>
    <version>24</version>
    <time>1696964350</time>
    <user>anag+factory</user>
    <comment>- update to 24:
  * CMakeLists for include as a thirdparty in projects
  * Change Document::ParseStream() to use stack allocator for
    Reader</comment>
    <requestid>1116396</requestid>
  </revision>
</revisionlist>
