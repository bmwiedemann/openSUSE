<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>58ab43a8f5856aa63e3aa7a044d2ee8f</srcmd5>
    <version>7</version>
    <time>1674927858</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1061724</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>7ebc9474a86bfc6f25257f8915840185</srcmd5>
    <version>8</version>
    <time>1676148993</time>
    <user>dimstar_suse</user>
    <comment>- update to 8:
  * Add GenericDocument ctor overload to specify JSON type
  * Add FAQ
  * Add forward declaration header `fwd.h`
  * Add @PlatformIO Library Registry manifest file
  * Implement assignment operator for BigInteger
  * Add comments support
  * Adding coapp definition
  * documenttest.cpp: EXPECT_THROW when checking empty allocator
  * GenericDocument: add implicit conversion to ParseResult
  * Use &lt;wchar.h&gt; with C++ linkage on Windows ARM
  * Detect little endian for Microsoft ARM targets
  * Check Nan/Inf when writing a double
  * Add JSON Schema Implementation
  * Add iostream wrapper
  * Add Jsonx example for converting JSON into JSONx (a XML
    format)
  * Add optional unresolvedTokenIndex parameter to Pointer::Get()
  * Add encoding validation option for Writer/PrettyWriter
  * Add Writer::SetMaxDecimalPlaces()
  * Support {0, } and {0, m} in Regex
  * Add Value::Get/SetFloat(), Value::IsLossLessFloat/Double()
  * Add stream position check to reader unit tests
  * Add Templated accessors and range-based for
  * Add (Pretty)Writer::RawValue()
  * Add Document::Parse(std::string), Document::Parse(const
    char*, size_t length) and related APIs.
  * Add move constructor for GenericSchemaDocument
  * Add VS2010 and VS2015 to AppVeyor CI
  * Add parse-by-parts example</comment>
    <requestid>1064235</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>0a03e28ebd585393c535091cc098e7fc</srcmd5>
    <version>15</version>
    <time>1683295096</time>
    <user>dimstar_suse</user>
    <comment>- update to 15:
  * Add parse-by-parts example (#556, #562)
  * Support parse number as string (#564, #589)
  * Add kFormatSingleLineArray for PrettyWriter (#577)
  * Added optional support for trailing commas (#584)
  * Added filterkey and filterkeydom examples (#615)
  * Added npm docs (#639)
  * Allow options for writing and parsing NaN/Infinity (#641)</comment>
    <requestid>1084909</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>409582149497dd78dba035c1ad35cd2a</srcmd5>
    <version>16</version>
    <time>1686506154</time>
    <user>dimstar_suse</user>
    <comment>- update to 16:
  * Add GenericDocument ctor overload to specify JSON type (#369)
  * Add FAQ (#372, #373, #374, #376)
  * Add forward declaration header `fwd.h`
  * Add @PlatformIO Library Registry manifest file (#400)
  * Implement assignment operator for BigInteger (#404)
  * Add comments support (#443)
  * Adding coapp definition (#460)
  * documenttest.cpp: EXPECT_THROW when checking empty allocator
    (470)
  * GenericDocument: add implicit conversion to ParseResult
    (#480)
  * Use &lt;wchar.h&gt; with C++ linkage on Windows ARM (#485)
  * Detect little endian for Microsoft ARM targets
  * Check Nan/Inf when writing a double (#510)
  * Add JSON Schema Implementation (#522)
  * Add iostream wrapper (#530)
  * Add Jsonx example for converting JSON into JSONx (a XML
    format) (#531)
  * Add optional unresolvedTokenIndex parameter to Pointer::Get()
    (#532)
  * Add encoding validation option for Writer/PrettyWriter (#534)
  * Add Writer::SetMaxDecimalPlaces() (#536)
  * Support {0, } and {0, m} in Regex (#539)
  * Add Value::Get/SetFloat(), Value::IsLossLessFloat/Double()
    (#540)
  * Add stream position check to reader unit tests (#541)
  * Add Templated accessors and range-based for (#542)
  * Add (Pretty)Writer::RawValue() (#543)
  * Add Document::Parse(std::string), Document::Parse(const</comment>
    <requestid>1092134</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>2f86aeb27ceab2e937078ce5444dc427</srcmd5>
    <version>17</version>
    <time>1687379958</time>
    <user>dimstar_suse</user>
    <comment>- update to 17:
  * Make GenericSchemaDocument constructor explicit (#674)
  * Optimize FindMember when use std::string (#690)</comment>
    <requestid>1094143</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>417c4d4217305a9bb9252a3c7bf87dc0</srcmd5>
    <version>18</version>
    <time>1688398940</time>
    <user>dimstar_suse</user>
    <comment>- update to 18:
  * update pyodide parts a bit</comment>
    <requestid>1096326</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>d133962c0a08078d0e8e194f98624004</srcmd5>
    <version>21</version>
    <time>1689175606</time>
    <user>dimstar_suse</user>
    <comment>- Update to version 21:
  * Bug fix: added kernel specializations for 
    awkward_ListOffsetArray_reduce_local_nextparents_64
    [gh#scikit-hep/awkward#2572].
- Now requires python &gt;= 3.8.
</comment>
    <requestid>1098033</requestid>
  </revision>
  <revision rev="8" vrev="2">
    <srcmd5>94c931b8f6ab1da9d305bc00cade9ae8</srcmd5>
    <version>21</version>
    <time>1690469603</time>
    <user>anag+factory</user>
    <comment>- mark as python311 on sle15 as it requires &gt;= 3.8</comment>
    <requestid>1101047</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>fc278e845dca2eb198134d97640acf71</srcmd5>
    <version>22</version>
    <time>1694545361</time>
    <user>anag+factory</user>
    <comment>- update to 22:
  * Add iostream wrapper (#530)
  * Add Jsonx example for converting JSON into JSONx (a XML
    format) (#531)
  * Add optional unresolvedTokenIndex parameter to Pointer::Get()
    (#532)
  * Add encoding validation option for Writer/PrettyWriter (#534)
  * Add Writer::SetMaxDecimalPlaces() (#536)
  * Support {0, } and {0, m} in Regex (#539)
  * Add Value::Get/SetFloat(), Value::IsLossLessFloat/Double()
    (#540)
  * Add stream position check to reader unit tests (#541)
  * Add Templated accessors and range-based for (#542)
  * Add (Pretty)Writer::RawValue() (#543)
  * Add Document::Parse(std::string), Document::Parse(const
    char*, size_t length) and related APIs. (#553)
  * Add move constructor for GenericSchemaDocument (#554)
  * Add VS2010 and VS2015 to AppVeyor CI (#555)
  * Add parse-by-parts example (#556, #562)
  * Support parse number as string (#564, #589)
  * Add kFormatSingleLineArray for PrettyWriter (#577)
  * Added optional support for trailing commas (#584)
  * Added filterkey and filterkeydom examples (#615)
  * Added npm docs (#639)
  * Allow options for writing and parsing NaN/Infinity (#641)
  * Add std::string overload to PrettyWriter::Key() when
    RAPIDJSON_HAS_STDSTRING is defined (#698)

  * Bug fix: added kernel specializations for
  * update pyodide parts a bit</comment>
    <requestid>1110377</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>f9b02f227c9f5def07ff349e051e44b3</srcmd5>
    <version>23</version>
    <time>1695209230</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1112027</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>59cbc291c82ba8c1528381b61f142d24</srcmd5>
    <version>24</version>
    <time>1696964350</time>
    <user>anag+factory</user>
    <comment>- update to 24:
  * CMakeLists for include as a thirdparty in projects
  * Change Document::ParseStream() to use stack allocator for
    Reader</comment>
    <requestid>1116396</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>83ace188160e5f8a0c22962f4171d08c</srcmd5>
    <version>26</version>
    <time>1700598779</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1127907</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>9d6b254e51aec7104ffaf3a92e7bf4f7</srcmd5>
    <version>27</version>
    <time>1702845148</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1133622</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>c4528b623b0a2b75a27058f9458e056a</srcmd5>
    <version>28</version>
    <time>1705353675</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1138855</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>ba401577911cb922d1ee43114e83b598</srcmd5>
    <version>30</version>
    <time>1710776719</time>
    <user>anag+factory</user>
    <comment>- Update to version 30:
  * No changelog available.</comment>
    <requestid>1158838</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>008d620b0367fbf03f167d2a19fa96a6</srcmd5>
    <version>32</version>
    <time>1714406300</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1170770</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>d99aceb98ae61dcc5fb76f9c782010c5</srcmd5>
    <version>33</version>
    <time>1715249292</time>
    <user>dimstar_suse</user>
    <comment>- update to 33:
  * Fix a crash bug in regex
  * Fix schema &quot;required&quot; keyword cannot handle duplicated keys
  * Fix cmake CMP0054 warning
  * Added missing include guards in istreamwrapper.h and
    ostreamwrapper.h
  * Fix undefined behaviour
  * Fix buffer overrun using PutN
  * Fix rapidjson::value::Get&lt;std::string&gt;() may returns wrong
    data
  * Add Flush() for all value types
  * Handle malloc() fail in PoolAllocator
  * Fix builds on x32 platform. #703</comment>
    <requestid>1172679</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>f2b30f157033209c0bd946c2063d6616</srcmd5>
    <version>34</version>
    <time>1717765385</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1178901</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>ce44c7130aee53329af1c5cfefa4b9df</srcmd5>
    <version>38</version>
    <time>1726501552</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1201402</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>87c64003d5eb5d3188a958afbe46c8c7</srcmd5>
    <version>41</version>
    <time>1732969696</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1227333</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>6b2eac17698802e49efc297e67c23f0a</srcmd5>
    <version>44</version>
    <time>1740324393</time>
    <user>dimstar_suse</user>
    <comment>- Update to 44
  * no changelog available
  * this release corresponds to python-awkward 2.7.4</comment>
    <requestid>1247854</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>695a67f00944d413dfbd3a57167c214f</srcmd5>
    <version>46</version>
    <time>1750065160</time>
    <user>anag_factory</user>
    <comment></comment>
    <requestid>1285920</requestid>
  </revision>
  <revision rev="23" vrev="1">
    <srcmd5>fbaf4a9a1258a461f1f6163579cdbbe1</srcmd5>
    <version>50</version>
    <time>1760629143</time>
    <user>anag_factory</user>
    <comment>- Update to version 50:
  * No changelog available.</comment>
    <requestid>1311607</requestid>
  </revision>
</revisionlist>
