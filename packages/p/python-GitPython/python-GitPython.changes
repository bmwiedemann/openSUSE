-------------------------------------------------------------------
Wed Mar  5 12:41:24 UTC 2025 - Johannes Kastl <opensuse_buildservice@ojkastl.de>

- update to 3.1.44:
  * What's Changed
    - Fix typo in _get_exe_extensions PATHEXT fallback by
      @EliahKagan in #1890
    - Don't suppress pytest warning summaries by @EliahKagan in
      #1892
    - Update the comment about --mixed and paths by @EliahKagan in
      #1894
    - Fixed an error updating shallow submodules by @EduardTalanov
      in #1899
    - Initial Migration of Fuzz Tests & Integration Scripts From
      the OSS-Fuzz Project Repo by @DaveLak in #1901
    - Fuzzer Migration Follow-ups by @DaveLak in #1903
    - Dockerize "Direct Execution of Fuzz Targets" by @DaveLak in
      #1904
    - Fix Fuzzer Crash in ClusterFuzz Due to Missing Git Executable
      by @DaveLak in #1906
    - Add GitPython's Standard License Header Comments to Shell
      Scripts by @DaveLak in #1907
    - Fix IndexError in GitConfigParser When a Quoted Config Value
      Contains a Trailing New Line by @DaveLak in #1908
    - Attempt 2 - Fix Missing Git Executable Causing ClusterFuzz
      Crash by @DaveLak in #1909
    - Replace the Suboptimal fuzz_tree.py Harness With a Better
      Alternative by @DaveLak in #1910
    - Add git.Blob Fuzz Target by @DaveLak in #1911
    - lint: switch order Ruff's hooks fix -> format by @Borda in
      #1912
    - Update OSS-Fuzz Scripts to Use New QA-Assets Repo Structure
      by @DaveLak in #1913
    - Add Diff Fuzz Target by @DaveLak in #1914
    - Instrument test utility functions to increase fuzzer
      efficiency by @DaveLak in #1915
    - Add the .git subdir as another safe.directory on Cygwin CI by
      @EliahKagan in #1916
    - Bump Vampire/setup-wsl from 3.0.0 to 3.1.0 by @dependabot in
      #1917
    - Add Submodules Fuzz Target by @DaveLak in #1919
    - Add graceful handling of expected exceptions in
      fuzz_submodule.py by @DaveLak in #1922
    - precommit: enable validate-pyproject by @Borda in #1921
    - typing fixes - DiffIndex generic type and IndexFile items by
      @Andrej730 in #1925
    - Fix Improper Import Order Breaking fuzz_submodule Fuzzer by
      @DaveLak in #1926
    - Fix iter_change_type diff renamed property to prevent warning
      by @kamilkrzyskow in #1918
    - fixed doc to not faulty do #1924 by @zerothi in #1932
    - fix: fix incoherent beginning whitespace by @cardoeng in
      #1933
    - Change aliases to work around mypy issue. by @PatrickMassot
      in #1935
    - precommit: enable end-of-file-fixer by @Borda in #1920
    - lint: add typos check by @Borda in #1888
    - Add type of change to files_dict of a commit by @JonasScharpf
      in #1943
    - Enable Python 3.8 and 3.9 on M1 runners by @EliahKagan in
      #1944
    - Use Alpine Linux in WSL on CI by @EliahKagan in #1945
    - Remove the non-ARM macOS CI jobs by @EliahKagan in #1946
    - Fix Several Bugs in the fuzz_submodule Causing a lot of False
      Alarms in the OSS-Fuzz Bug Tracker by @DaveLak in #1950
    - Gracefully handle PermissionError exceptions that crash
      fuzzer by @DaveLak in #1951
    - Fuzzing: Gracefully Handle Uninteresting Error to Fix
      OSS-Fuzz Issue by @DaveLak in #1952
    - Update and adjust pre-commit hooks by @EliahKagan in #1953
    - Upgrade sphinx to ~7.1.2 by @EliahKagan in #1954
    - Don't support building documentation on Python 3.7 by
      @EliahKagan in #1956
    - _to_relative_path to support mixing slashes and backslashes
      by @Andrej730 in #1961
    - Update base.py by @alex20230721 in #1965
    - Fix Fetch progress bar by @fvalette-ledger in #1971
    
-------------------------------------------------------------------
Mon Nov 18 21:31:25 UTC 2024 - Anton Smorodskyi <anton.smorodskyi@suse.com>

- drop of CVE-2023-41040.patch because it included in upstream version
- drop of test-skips.patch
- drop of test_blocking_lock_file-extra-time.patch
- Update to version 3.1.43:
  * Issue and test deprecation warnings by @EliahKagan in #1886
  * Fix version_info cache invalidation, typing, parsing, and serialization by @EliahKagan in #1838
  * Document manual refresh path treatment by @EliahKagan in #1839
  * Improve static typing and docstrings related to git object types by @EliahKagan in #1859
  * Fix release link in changelog by @PeterJCLaw in #1795
  * Remove test dependency on sumtypes library by @EliahKagan in #1798
  * Pin Sphinx plugins to compatible versions by @EliahKagan in #1803
  * fix: treeNotSorted issue by @et-repositories in #1799
  * Remove git.util.NullHandler by @EliahKagan in #1807
  * Clarify why GIT_PYTHON_GIT_EXECUTABLE may be set on failure by @EliahKagan in #1810
  * Report actual attempted Git command when Git.refresh fails by @EliahKagan in #1812
  * Don't suppress messages when logging is not configured by @EliahKagan in #1813
  * Pin Python 3.9.16 on Cygwin CI by @EliahKagan in #1814
  * Have initial refresh use a logger to warn by @EliahKagan in #1815
  * Omit warning prefix in "Bad git executable" message by @EliahKagan in #1816
  * Test with M1 macOS CI runner by @EliahKagan in #1817
  * Bump pre-commit/action from 3.0.0 to 3.0.1 by @dependabot in #1818
  * Bump Vampire/setup-wsl from 2.0.2 to 3.0.0 by @dependabot in #1819
  * Remove deprecated section in README.md by @marcm-ml in #1823
  * Keep temp files out of project dir and improve cleanup by @EliahKagan in #1825
  * Add __all__ in git.exc by @EliahKagan in #1719
  * Set submodule update cadence to weekly by @EliahKagan in #1721
  * Never modify sys.path by @EliahKagan in #1720
  * Bump git/ext/gitdb from 8ec2390 to ec58b7e by @dependabot in #1722
  * Revise comments, docstrings, some messages, and a bit of code by @EliahKagan in #1725
  * Use zero-argument super() by @EliahKagan in #1726
  * Remove obsolete note in _iter_packed_refs by @EliahKagan in #1727
  * Reorganize test_util and make xfail marks precise by @EliahKagan in #1729
  * Clarify license and make module top comments more consistent by @EliahKagan in #1730
  * Deprecate compat.is_, rewriting all uses by @EliahKagan in #1732
  * Revise and restore some module docstrings by @EliahKagan in #1735
  * Make the rmtree callback Windows-only by @EliahKagan in #1739
  * List all non-passing tests in test summaries by @EliahKagan in #1740
  * Document some minor subtleties in test_util.py by @EliahKagan in #1749
  * Always read metadata files as UTF-8 in setup.py by @EliahKagan in #1748
  * Test native Windows on CI by @EliahKagan in #1745
  * Test macOS on CI by @EliahKagan in #1752
  * Let close_fds be True on all platforms by @EliahKagan in #1753
  * Fix IndexFile.from_tree on Windows by @EliahKagan in #1751
  * Remove unused TASKKILL fallback in AutoInterrupt by @EliahKagan in #1754
  * Don't return with operand when conceptually void by @EliahKagan in #1755
  * Group .gitignore entries by purpose by @EliahKagan in #1758
  * Adding dubious ownership handling by @marioaag in #1746
  * Avoid brittle assumptions about preexisting temporary files in tests by @EliahKagan in #1759
  * Overhaul noqa directives by @EliahKagan in #1760
  * Clarify some Git.execute kill_after_timeout limitations by @EliahKagan in #1761
  * Bump actions/setup-python from 4 to 5 by @dependabot in #1763
  * Don't install black on Cygwin by @EliahKagan in #1766
  * Extract all "import gc" to module level by @EliahKagan in #1765
  * Extract remaining local "import gc" to module level by @EliahKagan in #1768
  * Replace xfail with gc.collect in TestSubmodule.test_rename by @EliahKagan in #1767
  * Enable CodeQL by @EliahKagan in #1769
  * Replace some uses of the deprecated mktemp function by @EliahKagan in #1770
  * Bump github/codeql-action from 2 to 3 by @dependabot in #1773
  * Run some Windows environment variable tests only on Windows by @EliahKagan in #1774
  * Fix TemporaryFileSwap regression where file_path could not be Path by @EliahKagan in #1776
  * Improve hooks tests by @EliahKagan in #1777
  * Fix if items of Index is of type PathLike by @stegm in #1778
  * Better document IterableObj.iter_items and improve some subclasses by @EliahKagan in #1780
  * Revert "Don't install black on Cygwin" by @EliahKagan in #1783
  * Add missing pip in $PATH on Cygwin CI by @EliahKagan in #1784
  * Shorten Iterable docstrings and put IterableObj first by @EliahKagan in #1785
  * Fix incompletely revised Iterable/IterableObj docstrings by @EliahKagan in #1786
  * Pre-deprecate setting Git.USE_SHELL by @EliahKagan in #1782
  * Deprecate Git.USE_SHELL by @EliahKagan in #1787
  * In handle_process_output don't forward finalizer result by @EliahKagan in #1788
  * Fix mypy warning "Missing return statement" by @EliahKagan in #1789
  * Fix two remaining Windows untrusted search path cases by @EliahKagan in #1792
  * Add missing assert keywords by @EliahKagan in #1678
  * Make clear every test's status in every CI run by @EliahKagan in #1679
  * Fix new link to license in readme by @EliahKagan in #1680
  * Drop unneeded flake8 suppressions by @EliahKagan in #1681
  * Update instructions and test helpers for git-daemon by @EliahKagan in #1684
  * Fix Git.execute shell use and reporting bugs by @EliahKagan in #1687
  * No longer allow CI to select a prerelease for 3.12 by @EliahKagan in #1689
  * Clarify Git.execute and Popen arguments by @EliahKagan in #1688
  * Ask git where its daemon is and use that by @EliahKagan in #1697
  * Fix bugs affecting exception wrapping in rmtree callback by @EliahKagan in #1700
  * Fix dynamically-set all variable by @DeflateAwning in #1659
  * Fix small #1662 regression due to #1659 by @EliahKagan in #1701
  * Drop obsolete info on yanking from security policy by @EliahKagan in #1703
  * Have Dependabot offer submodule updates by @EliahKagan in #1702
  * Bump git/ext/gitdb from 49c3178 to 8ec2390 by @dependabot in #1704
  * Bump git/ext/gitdb from 8ec2390 to 6a22706 by @dependabot in #1705
  * Update readme for milestone-less releasing by @EliahKagan in #1707
  * Run Cygwin CI workflow commands in login shells by @EliahKagan in #1709
  * Improve Python version and OS compatibility, fixing deprecations by @EliahKagan in #1654
  * Better document env_case test/fixture and cwd by @EliahKagan in #1657
  * Remove spurious executable permissions by @EliahKagan in #1658
  * Fix up checks in Makefile and make them portable by @EliahKagan in #1661
  * Fix URLs that were redirecting to another license by @EliahKagan in #1662
  * Assorted small fixes/improvements to root dir docs by @EliahKagan in #1663
  * Use venv instead of virtualenv in test_installation by @EliahKagan in #1664
  * Omit py_modules in setup by @EliahKagan in #1665
  * Don't track code coverage temporary files by @EliahKagan in #1666
  * Configure tox by @EliahKagan in #1667
  * Format tests with black and auto-exclude untracked paths by @EliahKagan in #1668
  * Upgrade and broaden flake8, fixing style problems and bugs by @EliahKagan in #1673
  * Fix rollback bug in SymbolicReference.set_reference by @EliahKagan in #1675
  * Remove @NoEffect annotations by @EliahKagan in #1677
  * Add more checks for the validity of refnames by @facutuesca in #1672
  * Bump actions/checkout from 3 to 4 by @dependabot in #1643
  * Fix 'Tree' object has no attribute '_name' when submodule path is normal path by @CosmosAtlas in #1645
  * Fix CVE-2023-41040 by @facutuesca in #1644
  * Only make config more permissive in tests that need it by @EliahKagan in #1648
  * Added test for PR #1645 submodule path by @CosmosAtlas in #1647
  * Fix Windows environment variable upcasing bug by @EliahKagan in #1650



-------------------------------------------------------------------
Tue Sep  5 08:30:24 UTC 2023 - Daniel Garcia <daniel.garcia@suse.com>

- Add CVE-2023-41040.patch to fix directory traversal attack
  vulnerability gh#gitpython-developers/GitPython#1644
  bsc#1214810

-------------------------------------------------------------------
Tue Sep 05 06:34:12 UTC 2023 - daniel.garcia@suse.com

- Update _service to use manualrun, disabledrun is deprecated now.
- Update to version 3.1.34.1693646983.2a2ae77:
  * prepare patch release
  * util: close lockfile after opening successfully
  * update instructions for how to create a release
  * prepare for next release
  * Skip now permanently failing test with note on how to fix it
  * Don't check form of version number
  * Add a unit test for CVE-2023-40590
  * Fix CVE-2023-40590
  * feat: full typing for "progress" parameter
  * Creating a lock now uses python built-in "open()" method to work around docker virtiofs issue
  * Disable merge_includes in config writers
  * Apply straight-forward typing fixes
  * Add missing type annotation
  * Run black and exclude submodule
  * Allow explicit casting even when slightly redundant
  * Ignore remaining [unreachable] type errors
  * Define supported version for mypy
  * Do not typecheck submodule
  * typo
  * added more resources section
  * generic hash
  * redundant code cell
  * redundant line
  * fixed tabbing
  * tabbed all code-blocks
  * added new section for diffs and formatting
  * formatting wip
  * change to formatting - removed = bash cmds
  * Added new section to print prev file
  * WIP major changes to structure to improve readability
  * Removed all reference to source code
  * Updated generic sha hash
  * Added warning about index add
  * Made trees and blobs the first section
  * refactored print git tree
  * clarified comment
  * draft of description
  * replaced hash with generic
  * replaced output cell to generic commit ID
  * removed unnecessary variables
  * convert from --all flag to all=True
  * correct way to get the latest commit tree
  * removed try/except and updated sample url
  * Updated the sample repo URL
  * Made variable names more intuitive
  * try to fix CI by making it deal with tags forcefully.
  * Removed code from RST
  * added quickstart to toctree to fix sphinx warning
  * added quickstart to toctree and fixed sphinx warning
  * fixed some indentation
  * finished code for quickstart
  * finished code for quickstart
  * Finishing touches for Repo quickstart
  * Added git clone & git add
  * Made the init repo section of quickdoc

-------------------------------------------------------------------
Mon Aug 21 04:36:14 UTC 2023 - Steve Kowalik <steven.kowalik@suse.com>

- Update to version 3.1.32.1689011721.5d45ce2:
  * Block insecure non-multi options in clone/clone_from Follow-up to #1521
    (bsc#1214174, CVE-2023-40267)
  * Name top-level exceptions as private variables
  * Revert the removal of Commit.trailers property.
  * Specify encoding in Commit.trailer_list.
  * Update Commit.trailer_list to return tuples.
  * Deprecate Commit.trailers.
  * Add trailers_list and trailers_list methods to fix the commit trailers
    functionality.
- Switch to pyproject macros.

-------------------------------------------------------------------
Thu May 11 13:59:44 UTC 2023 - mcepl@suse.com

- Update to version 3.1.31.1676565040.f253335:
  * prepare next release
  * Add test asserting that get_values works by itself
  * Update cmd.py
  * Fix RecursionError when iterating streams
  * Update docs
  * Add additional assertions to test_base.py
  * Updated diff test to use different similarity thresholds
  * Add check to test bare repo
  * Added diff test to disable rename detection
  * fixed lint error
  * Enable user to override default diff -M arg
  * Remove optional from two member variables
  * Fix timezone parsing functions for non-hour timezones
  * Raise exception if return code from check-ignore is not 1
  * Add test to verify GitCommandError is raised when check-ignore is run against a file behind a symlink
  * Add test_ignored_items_reported
  * Lint with Flake8 via pre-commit
  * Upgrade Python syntax with pyupgrade --py37-plus
  * Fix typo
  * Declare support for Python 3.11
  * fix files list on file rename
  * get_values eagerly loads sections before return
  * Fix some resource leaks by open file handles
  * fix clone_from_unsafe_protocol tests
  * replace tempfile.mkdtemp w/ tempfile.TemporaryDirectory
  * fix/add allow_unsafe_* params in docstrings + fix typo
  * tests: Use `command -v` instead of third-party `which` program
  * Fix Sphinx rendering errors

-------------------------------------------------------------------
Fri Apr 21 12:20:42 UTC 2023 - Dirk Müller <dmueller@suse.com>

- add sle15_python_module_pythons (jsc#PED-68)

-------------------------------------------------------------------
Thu Apr 13 22:41:36 UTC 2023 - Matej Cepl <mcepl@suse.com>

- Make calling of %{sle15modernpython} optional.

-------------------------------------------------------------------
Wed Jan  4 06:33:38 UTC 2023 - Steve Kowalik <steven.kowalik@suse.com>

- Update to version 3.1.30.1672298042.141cd65:
  * Make injections of command-invocations harder or impossible for clone and
    others. See #1518 for details. Note that this might constitute a breaking
    change for some users. (bsc#1206099, CVE-2022-24439)
  * Prohibit insecure options and protocols by default, which is potentially a
    breaking change, but a necessary fix for #1515.
  * Make the git.__version__ re-appear.
  * Reduced startup time due to optimized imports.
  * Fix a vulenerability that could cause great slowdowns when encountering
    long remote path names when pulling/fetching.
  * Newly added timeout flag is not be enabled by default, and was renamed
    to kill_after_timeout
  * drop support for python 3.5 to reduce maintenance burden on typing.
  * Add more static typing information
  * git.Commit objects now have a replace method that will return a copy of
    the commit with modified attributes.
  * Add python 3.9 support
  * Drop python 3.4 support
- Refresh patches.

-------------------------------------------------------------------
Mon Nov  7 23:35:37 UTC 2022 - Matej Cepl <mcepl@suse.com>

- Setting proper configuration variable allows to run previously
  skipped tests.

-------------------------------------------------------------------
Mon Nov  7 14:50:21 UTC 2022 - Matej Cepl <mcepl@suse.com>

- Skip failing tests (gh#gitpython-developers/GitPython#1511).

-------------------------------------------------------------------
Thu Jan 14 14:19:01 UTC 2021 - mmachova@suse.com

- Update to version 3.1.12.1610074031.f653af66:
  * fix flake
  * fix tests the fast way
  * First attempt to fix failing test of #1103

-------------------------------------------------------------------
Sun Jan 10 17:13:24 UTC 2021 - mliska@suse.cz

- Update to version 3.1.12.1609914640.3dd71d3e:
  * prepare release
  * Fix handle_diff_line for -z option.
  * try fixing up test fixtures and implementation
  * Add '-z' on top of '--raw' to avoid path name mangling
  * fix universal_newlines TypeError
  * docs: fix simple typo, repostory -> repository
  * Added ability to define git environment in submodule add/update methods
  * change decode type and add replace flag
  * bump patch level
  * Fix default actor name handling
  * bump patch level
  * Get system user id in a lazy manner
  * Keep flake happy
  * Do not break convention when updating sys.path
  * Bump patch level
  * rename sublist to subset
  * Rename get_ignored to ignored and fix the documentation
  * Find paths ignored in .gitignore
  * Add venv to gitignore
  * git/repo/base.py: is_dirty(): Fix pathspec handling
  * Fix typo
  * Update release verification instructions as suggested in #1055
  * Adjust signature key - please read if you verify installs/packages
  * bump patch level
  * Ensure that detached HEAD does not raise when comparing branch name.
  * Reformat code to remove unnecessary indentation
  * Remove name as not necessary to track down authors.
  * update contribution guidelines to be a little less concise and more polite
  * Add missing blank line
  * Add missing rules to match hierarchy path
  * Update AUTHOR to respect to contributing guidelines.
  * Add unit tests
  * Fix logic to properly compare glob pattern to value
  * Add method to retrieve all possible paths to include
  * Add reference to repository to config.
  * Update check method to find all includes
  * Add Regex to match content of "includeIf" section
  * inform about Gitoxide
  * add myself to authors
  * accept datetime instances as dates
  * Ensure only fully matching symrefs are deleted
  * Fixed all warnings in documentation and updated Makefile to treat warnings as errors.
  * Added nose to test-requirements

-------------------------------------------------------------------
Thu Aug 20 10:32:30 UTC 2020 - mimi.vx@gmail.com

- Update to version 3.1.7.1594621338.176838a3:
- refresed test-skips.patch and test_blocking_lock_file-extra-time.patch
- used pytest as test runner
  * bump patch level
  * Fixed broken file paths.
  * bump patch level
  * test: add installation test
  * tools: update tool scripts after moving tests
  * MANIFEST.in: update to exclude tests
  * setup.py: exclude all test files
  * tests: move to root dir
  * bump patch level
  * Revert moving tests out of 'git' folder, related to #1030
  * bump patch level
  * tools: update tool scripts after moving tests
  * MANIFEST.in: update to exclude tests
  * setup.py: exclude all test files
  * tests: move to root dir
  * Add Ram Rachum to AUTHORS
  * Fix exception causes all over the codebase
  * Fix exception causes in 7 modules
  * Fix exception causes in cmd.py

-------------------------------------------------------------------
Sun Jun 14 08:43:10 UTC 2020 - dmueller@suse.com

- Update to version 3.1.3.1590895281.24cd6da:
  * Bump patch level
  * BF: tollerate errors while parsing fetch lines
  * Fix flake8 errors
  * Improve unfortunate wording

-------------------------------------------------------------------
Tue Jun 02 16:41:06 UTC 2020 - dmueller@suse.com

- Update to version 3.1.2.1588659169.f14903a:
  * Bump patch level, this time with known signature
  * Accept that this arguably simple feature can't be tested easily…
  * allow setting depth when cloning a submodule
  * add test case for submodule depth parameter
  * add myself to AUTHORS
  * Change signing key back to what it was
  * bump patch level
  * Remove forced verbosity when fetching from a remote
  * Now it should really start working - go, doctests, go!
  * Maybe this fixes the doc tests

-------------------------------------------------------------------
Mon May 04 09:21:39 UTC 2020 - johannes.grassler@suse.com

- Update to version 3.1.1.1586590969.b860d1873a25:
  * bump patch level
  * Remove forced verbosity when fetching from a remote
  * Now it should really start working - go, doctests, go!
  * Maybe this fixes the doc tests
  * This should fix tests, as tree[0] is not a tree anymore
  * Test for PyOxidizer and avoid trying to use __file__ if present
  * Satisfy flake8 requirement related to #1000
  * Try again to apply patch related to #1000
  * make clear that appveyor and travis are not used anymore
  * Remove code-coverage from requirements - codecov wants way too many permissions…

-------------------------------------------------------------------
Thu Apr  2 11:03:10 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Disable three more tests on git submodules:
  * https://github.com/gitpython-developers/GitPython/issues/597
  * test-skips.patch

-------------------------------------------------------------------
Mon Mar 30 10:40:09 UTC 2020 - tchvatal@suse.com

- Update to version 3.1.0.1582544583.8c9da73:
  * Replace invalid bytes when decoding TagObject stream
  * Use UTF-8 encoding when getting information about a symbolic reference
  * Remove and replace references to nose with unittest in documentation
  * Remove nose from test requirements
  * Replace nose with unittest in tox configuration
  * Replace nose with unittest in Travis CI script
  * Added changelog for unreleased changes
  * Restrict gitdb2 version to <4
  * Remove test.lib.asserts and use unittest.mock.patch directly
  * Replace assert_false with assertFalse
  * Replace assert_true with assertTrue
  * Replace raises with assertRaises
  * Replace assert_raises with assertRaises
  * Replace assert_not_equal with assertNotEqual
  * Replace assert_equal with assertEqual
  * Remove and replace assert_match with assertRegex
  * Remove old, no longer used assert methods
  * Remove references to old mock library in documentation
  * Remove outdated checks for unittest.mock existence
  * Fix Python version requirement in documentation
  * Remove badges for no longer existing Waffle site from README
  * Add support for Python 3.8
  * Replace deprecated Logger.warn with Logger.warning
  * Replace deprecated assertRaisesRegexp alias with assertRaisesRegex
  * Replace deprecated assertNotEquals alias with assertNotEqual
  * Replace deprecated assertEquals alias with assertEqual in TestGit
  * Replace deprecated assertRegexpMatches alias with assertRegex
  * Replace deprecated failUnlessRaises alias with assertRaises in tests
  * Improve requirements.txt format
  * Remove checks for pathlib existence in TestRepo for Python < 3.4
  * Improve README Python requirement specificity
  * Simplify Travis CI configuration
  * Require latest gitdb version (with dropped python 2 support)
  * Fix spelling in Dockerfile description LABEL
  * Fix Repo.__repr__ when subclassed
  * Apparently -s must be there, even if --sign-with is specified??
  * Sign with a different key for now, it's USB-C and can be used
  * disable signing - don't have a USB-A to -C adapter :(
  * Remove now unused is_invoking_git variable in test
  * Fix requirements.txt formatting
  * Remove unnecessary check for PermissionError for Python < 3.3
  * Improve setup.py python_requires
  * Remove unnecessary check for logging.NullHandler for Python 2.6
  * Remove check for Python 2.7
- Rebase patch test-skips.patch and test_blocking_lock_file-extra-time.patch
- Give up on tests for now, gh#gitpython-developers/GitPython#914

-------------------------------------------------------------------
Sat Nov 16 16:40:59 UTC 2019 - Arun Persaud <arun@gmx.de>

- specfile:
  * be more explicit in %files section
  * updated line numbers in patches

- update to version 3.0.5:
  * Remove duplicate license parameter
  * Fix/deepsource issues
  * Check if submodule exists before referencing
  * Fix cloning to path with unicode
  * Global ConfigParser
  * Fix 'PushInfo' object has no attribute 'name'
  * Reading and writing global configuration parameters acknowledged
    help wanted
  * Added Git Gud to projects
  * Git.AutoInterrupt.__del__() OSError: [WinError 6] The handle is
    invalid acknowledged help wanted tag.Windows

- changes from version 3.0.4:
  * Fix repo.index.diff("HEAD", create_patch=True) always returning an
    empty list
  * Fix how Diff handles commits that contain submodule changes
  * Fix pickling of tzoffset
  * Add support for 'C'-type diffs
  * Fixed#731
  * Update .deepsource.toml
  * Allow single item for index.addremovemove

-------------------------------------------------------------------
Mon Oct 07 13:33:58 UTC 2019 - tchvatal@suse.com

- Update to version 3.0.3.1570041589.23b83cd:
  * Prepare v3.0.3
  * git: repo: base: update clone_from env argument description
  * remove previously added debug code from test_doc.py
  * Revert "Remove control character stripping."
  * Try to fix tests; get more debug output
  * Update util.py
  * Update util.py
  * Remove control character stripping.
  * add type check to git.Remote.__eq__
  * Take advantage of universal newlines.
  * Parse rejected deletes.
  * Remove assert that can fail erroneously.
  * Fix test_commit_msg_hook_success.
  * fix decoding problem
  * Fix #889: Add DeepSource config and fix some major issues

-------------------------------------------------------------------
Tue Sep 24 09:03:41 UTC 2019 - tchvatal@suse.com

- Update to version 3.0.2.1566444429.0765792:
  * prepare next release
  * BF: remove ddt from requirements.txt since no ddt required at run time.
  * Bump version to 3.0.1
  * Remove dependency on 'gitdb'; fixes #908
  * Changelog information
  * Adding test
  * Returning commit object instead of hash value
  * Snack case as requested in #903
  * Method stating which commit is being played during an halted rebase
  * Fix performance regression, see #906
- Drop merged patch merged_pr_793.patch
- Rebase patch test-skips.patch

-------------------------------------------------------------------
Fri Mar 15 13:52:47 UTC 2019 - tchvatal@suse.com

- Update to version 2.1.11.1531661757.92a4819:
  * Bump version to 2.1.11
  * fix whitespace violation
  * Update test_docs.py
  * Dedent code blocks in tutorial.
  * Allow pathlib.Path in Repo.__init__
  * Fix small typo
  * Fix exception on import in MacOS
  * Bump to 2.1.10
  * Add change in type support
  * Get correcly rename change_type.
- Simplify the service file and generating of the tarball
  and base everything on a tag

-------------------------------------------------------------------
Wed Mar 13 12:09:51 UTC 2019 - John Vandenberg <jayvdb@gmail.com>

- Activate test suite and remove bcond test
- Add merged_pr_793.patch already merged upstream to fix Python 3.7,
  especially git submodules
- Add test_blocking_lock_file-extra-time.patch to avoid an
  indeterministic timing failure
- Add test-skips.patch to skip one expected failure and workaround
  two unknown failures
- Remove test suite from the runtime package
- Add doc/source/*.rst to %docs
- Remove dependency on python3-mock
- Set build dependency ddt minimum version 1.1.1

-------------------------------------------------------------------
Tue Dec  4 12:48:28 UTC 2018 - Matej Cepl <mcepl@suse.com>

- Remove superfluous devel dependency for noarch package

-------------------------------------------------------------------
Thu Sep 27 11:17:43 UTC 2018 - comurphy@suse.com

- Require git-core instead of git

-------------------------------------------------------------------
Tue Aug  7 14:58:46 UTC 2018 - toddrme2178@gmail.com

- update to 2.1.11
  * Update test_docs.py
  * Dedent code blocks in tutorial.
  * Exception when constructing a Repo() from a pathlib.Path acknowledged help wanted
  * Allow pathlib.Path in Repo.__init__
  * Fix exception on import in MacOS
  * Failed import raises non-ImportError exception on MacOS
- update to 2.1.10
  * Fix rename change type & support 'change in type' acknowledged
  * Configurable chunk size
  * Avoid from_timestamp() function to raise an exception when the offset…
  * Adding files to repository that is located directly in the root acknowledged
  * git: index: base: use os.path.relpath

-------------------------------------------------------------------
Sat Apr 14 17:16:15 UTC 2018 - arun@gmx.de

- update to version 2.1.9:
  * Drop support for EOL Python 2.6 and 3.3
  * Allow mmap not just for py2.6, 2.7 and 3.6+ but also 3.0+
  * Fix doc typos

-------------------------------------------------------------------
Wed Jan 17 16:12:22 UTC 2018 - toddrme2178@gmail.com

- Implement single-spec version
- Update to version 2.1.8
  * bugfixes
- Update to version 2.1.6
  * bugfixes
  * support for worktrees
- Update to version 2.1.3
  * bugfixes
- Update to version 2.1.1
  * bugfixes
- Update to version 2.1.0
  * Much better windows support!
  * The `GIT_DIR` environment variable does not override the `path` argument when
    initializing a `Repo` object anymore. However, if said `path` unset, `GIT_DIR`
    will be used to fill the void.
- Update to version 2.0.9
  * Bugfixes
  * `tag.commit` will now resolve commits deeply.
  * `Repo` objects can now be pickled, which helps with multi-processing.
  * `Head.checkout()` now deals with detached heads, which is when it will return
    the `HEAD` reference instead.
  * `DiffIndex.iter_change_type(...)` produces better results when diffing

-------------------------------------------------------------------
Wed Aug 31 17:27:54 UTC 2016 - dmueller@suse.com

- update to 2.0.8:
  * Py2.6 support dropped
  * lots of new features and bugfixes

-------------------------------------------------------------------
Wed May  6 09:41:17 UTC 2015 - benoit.monin@gmx.fr

- update to version 1.0.1:
  * A list of all issues can be found on github
- additional changes from version 1.0.0:
  * This version is equivalent to v0.3.7, but finally acknowledges
    that GitPython is stable and production ready
- additional changes from version 0.3.7:
  * IndexFile.add() will now write the index without any extension
    data by default
  * Renamed ignore_tree_extension_data keyword argument in
    IndexFile.write(...) to ignore_extension_data
  * If the git command executed during Remote.push(...)|fetch(...)
    returns with an non-zero exit code and GitPython didn't obtain
    any head-information, the corresponding GitCommandError will be
    raised
  * If the git executable can't be found in the PATH or at the path
    provided by GIT_PYTHON_GIT_EXECUTABLE, this is made obvious by
    throwing GitCommandNotFound, both on unix and on windows.
  * A list of all issues can be found on github
- additional changes from version 0.3.6:
  * special members like __init__ are now listed in the API
    documentation
  * tutorial section was revised entirely, more advanced examples
    were added
  * As rev_parse will now throw BadName as well as BadObject,
    client code will have to catch both exception types
  * Repo.working_tree_dir now returns None if it is bare
  * IndexFile.add() previously raised AssertionError when paths
    where used with bare repository, now it raises
    InvalidGitRepositoryError
  * Added Repo.merge_base() implementation. See the respective
    issue on github
  * [include] sections in git configuration files are now respected
  * Added GitConfigParser.rename_section()
  * Added Submodule.rename()
  * A list of all issues can be found on github
- additional changes from version 0.3.5:
  * push/pull/fetch operations will not block anymore
  * diff() can now properly detect renames, both in patch and raw
    format
  * repo.odb.update_cache() is now called automatically after fetch
    and pull operations
  * Repo(path) will not automatically search upstream anymore and
    find any git directory on its way up
  * IndexFile.commit() now runs the pre-commit and post-commit hooks
  * A list of all issues can be found on github
- additional changes from version 0.3.4:
  * Internally, hexadecimal SHA1 are treated as ascii encoded
    strings
  * Id attribute of Commit objects is now hexsha, instead of binsha
  * IMPORTANT: If you were using the config_writer(), you
    implicitly relied on __del__ to work as expected to flush
    changes. To be sure changes are flushed under PY3, you will
    have to call the new release() method to trigger a flush
  * The Tree now has a .join('name') method which is equivalent to
    tree / 'name'
- additional changes from version 0.3.3:
  * When fetching, pulling or pushing, and an error occours, it
    will not be reported on stdout anymore
  * Code Cleanup (in preparation for python 3 support)
- additional changes from version 0.3.2.1:
  * Fix for #207
- additional changes from version 0.3.2:
  * Release of most recent version as non-RC build, just to allow
    pip to install the latest version right away.
- update project URL
- point the source URL to pypi
- set a minimum version for python-gitdb and add it to
  BuildRequires to validate dependencies at build time.
- add python-ordereddict as dependency for SLE11 (python 2.6)
- remove outdated py_requires

-------------------------------------------------------------------
Thu Sep 26 13:13:58 UTC 2013 - speilicke@suse.com

- Require git-core for the cgit backend (bnc#841684)

-------------------------------------------------------------------
Tue Jun 26 09:55:59 UTC 2012 - saschpe@suse.de

- Spec file cleanup

-------------------------------------------------------------------
Wed Jul  6 20:34:02 UTC 2011 - alexandre@exatati.com.br

- Update to 0.3.2.RC1;
- Regenerate spec file with py2pack;
- Building as noarch now.

-------------------------------------------------------------------
Tue Sep  7 13:31:06 UTC 2010 - alexandre@exatati.com.br

- Update to 0.3.0-beta2;
- Bzip2 source file.

-------------------------------------------------------------------
Thu Jul  8 15:11:43 UTC 2010 - alexandre@exatati.com.br

- Update to 0.3.0-beta1.

-------------------------------------------------------------------
Wed Apr  7 11:58:12 UTC 2010 - alexandre@exatati.com.br

- Update to 0.2.0-beta1;
- Spec file cleaned with spec-cleaner.

-------------------------------------------------------------------
Tue Nov 24 11:21:41 UTC 2009 - alexandre@exatati.com.br

- Initial pacakge (0.1.6) for openSUSE.
