diff --git a/cairocffi/test_cairo.py b/cairocffi/test_cairo.py
index 867c9cf..e086415 100644
--- a/cairocffi/test_cairo.py
+++ b/cairocffi/test_cairo.py
@@ -236,8 +236,8 @@ def test_device_scale():
     assert surface.get_device_scale() == (2, 3)
 
 
-@pytest.mark.xfail(cairo_version() < 11504,
-                   reason='Cairo version too low')
+@pytest.mark.xfail(not (11504 <= cairo_version() < 11706),
+                   reason='Cairo version too bad')
 def test_metadata():
     file_obj = io.BytesIO()
     surface = PDFSurface(file_obj, 1, 1)
@@ -261,8 +261,8 @@ def test_metadata():
     assert b'/ModDate (20130721234600Z)' in pdf_bytes
 
 
-@pytest.mark.xfail(cairo_version() < 11504,
-                   reason='Cairo version too low')
+@pytest.mark.xfail(not (11504 <= cairo_version() < 11706),
+                   reason='Cairo version too bad')
 def test_outline():
     file_obj = io.BytesIO()
     surface = PDFSurface(file_obj, 1, 1)
@@ -276,8 +276,8 @@ def test_outline():
     assert b'/Title (title 2)' in pdf_bytes
 
 
-@pytest.mark.xfail(cairo_version() < 11504,
-                   reason='Cairo version too low')
+@pytest.mark.xfail(not (11504 <= cairo_version() < 11706),
+                   reason='Cairo version too bad')
 def test_page_label():
     file_obj = io.BytesIO()
     surface = PDFSurface(file_obj, 1, 1)
@@ -287,8 +287,8 @@ def test_page_label():
     assert b'/P (abc)' in pdf_bytes
 
 
-@pytest.mark.xfail(cairo_version() < 11504,
-                   reason='Cairo version too low')
+@pytest.mark.xfail(not (11504 <= cairo_version() < 11706),
+                   reason='Cairo version too bad')
 def test_tag():
     file_obj = io.BytesIO()
     surface = PDFSurface(file_obj, 10, 10)
@@ -327,8 +327,8 @@ def test_thumbnail_size():
     assert len(pdf_bytes1) < len(pdf_bytes2)
 
 
-@pytest.mark.xfail(cairo_version() < 11510,
-                   reason='Cairo version too low')
+@pytest.mark.xfail(not (11510 <= cairo_version() < 11706),
+                   reason='Cairo version too bad')
 def test_document_unit():
     surface = SVGSurface(None, 1, 2)
     assert surface.get_document_unit() == SVG_UNIT_PT
@@ -395,8 +395,8 @@ def test_png():
         surface = ImageSurface.create_from_png(io.BytesIO(b''))
 
 
-@pytest.mark.xfail(cairo_version() < 11000,
-                   reason='Cairo version too low')
+@pytest.mark.xfail(not (11000 <= cairo_version() < 11706),
+                   reason='Cairo version too bad')
 def test_pdf_versions():
     assert set(PDFSurface.get_versions()) >= set([
         cairocffi.PDF_VERSION_1_4, cairocffi.PDF_VERSION_1_5])
@@ -417,6 +417,8 @@ def test_pdf_versions():
     assert file_obj.getvalue().startswith(b'%PDF-1.4')
 
 
+@pytest.mark.xfail(not (cairo_version() < 11706),
+                   reason='Cairo version too bad')
 def test_pdf_surface():
     with temp_directory() as tempdir:
         filename = os.path.join(tempdir, 'foo.pdf')

