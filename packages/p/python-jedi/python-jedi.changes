-------------------------------------------------------------------
Fri Jul 17 21:43:14 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update to version 0.17.2
  * Added an option to pass environment variables to ``Environment``
  * ``Project(...).path`` exists now
  * Support for Python 3.9
  * A few bugfixes
- rpmlint zero length django-stubs

-------------------------------------------------------------------
Sat Jun 20 12:15:53 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update to version 0.17.1
  * Django ``Model`` meta class support
  * Django Manager support (completion on Managers/QuerySets)
  * Added Django Stubs to Jedi, thanks to all contributors of the
    `Django Stubs <https://github.com/typeddjango/django-stubs>`_ project
  * Added ``SyntaxError.get_message``
  * Python 3.9 support
  * Bugfixes (mostly towards Generics) 
- drop jedi-pr1543-sorttest.patch merged upstream

-------------------------------------------------------------------
Sun May 24 08:30:33 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Skip two tests on leap not just sp1+

-------------------------------------------------------------------
Wed Apr 15 10:03:54 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- Update to v0.17.0
  * Added ``Project`` support. This allows a user to specify which
    folders Jedi should work with.
  * Added support for Refactoring. The following refactorings have
    been implemented: ``Script.rename``, ``Script.inline``,
    ``Script.extract_variable`` and ``Script.extract_function``.
  * Added ``Script.get_syntax_errors`` to display syntax errors in
    the current script.
  * Added code search capabilities both for individual files and
    projects. The new functions are ``Project.search``,
    ``Project.complete_search``,  ``Script.search`` and
    ``Script.complete_search``.
  * Added ``Script.help`` to make it easier to display a help
    window to people. Now returns pydoc information as well for
    Python keywords/operators.  This means that on the class 
    keyword it will now return the docstring of Python's builtin
    function ``help('class')``.
  * The API documentation is now way more readable and complete.
    Check it out under https://jedi.readthedocs.io. A lot of it
    has been rewritten.
  * Removed Python 3.4 support
  * Many bugfixes 
- back to regular releases, no git service needed anymore
- jedi-pr1543-sorttest.patch gh#davidhalter/jedi#1543
    
-------------------------------------------------------------------
Mon Apr 13 10:01:10 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- tell Leap 15.1 and SLE 15 SP1 pytest to ignore test/__init__.py
  so that a test file with purposely placed syntax errors does not
  trip the entire discovery

-------------------------------------------------------------------
Thu Apr  9 18:59:55 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- reenable (most) unittests
- remove unbundle.patch -- according to upstream, typeshed is meant
  to be bundled.

-------------------------------------------------------------------
Tue Mar 17 21:45:28 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- fix version string to 0.16.0+git55.17b3611c

-------------------------------------------------------------------
Mon Mar 16 09:20:12 UTC 2020 - tchvatal@suse.com

- Update to version v0.16.0+git55.17b3611c:
  * Included statement as a possible return type for BaseDefinition.type

-------------------------------------------------------------------
Mon Mar 16 09:20:01 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Disable tests

-------------------------------------------------------------------
Sat Mar 14 10:22:47 UTC 2020 - tchvatal@suse.com

- Update to version v0.16.0+git54.0888dd46:
  * Fix partialmethod issues
  * Make sure partialmethod tests are only executed for Python 3
  * Refactor stdlib PartialObject
  * Fix PartialMethodObject (WIP)
  * Changed semantics of ClassVar attributes in classes, fixes #1502
  * Avoid duplicate definitions for goto, fixes #1514
  * Merge _remove_statements and infer_expr_stmt, fixes #1504
  * Add partialmethod, fixes #1519
  * Attempt at a test of completion of filepath after ~.
  * Complete path after ~.

-------------------------------------------------------------------
Sat Mar 14 10:16:25 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Remove patches from git in preparation to switch to git service:
  * delete.patch
  * typing.patch

-------------------------------------------------------------------
Fri Mar  6 11:55:48 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- add typing.patch - fix test_sys_getwindowsversion with new parso 

-------------------------------------------------------------------
Tue Feb  4 09:38:03 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.16.0
- add delete.patch
 * Added Script.get_context to get information where you currently are.
 * Completions/type inference of Pytest fixtures.
 * Tensorflow, Numpy and Pandas completions should now be about 4-10x faster after the first time they are used.
 * Dict key completions are working now. e.g. d = {1000: 3}; d[10 will expand to 1000.
 * Completion for “proxies” works now. These are classes that have a __getattr__(self, name) method that does a return getattr(x, name). after loading them initially.
 * Goto on a function/attribute in a class now goes to the definition in its super class.
 * Big Script API Changes:
   + The line and column parameters of jedi.Script are now deprecated
   + completions deprecated, use complete instead
   + goto_assignments deprecated, use goto instead
   + goto_definitions deprecated, use infer instead
   + call_signatures deprecated, use get_signatures instead
   + usages deprecated, use get_references instead
   + jedi.names deprecated, use jedi.Script(...).get_names()
 * BaseDefinition.goto_assignments renamed to BaseDefinition.goto
 * Add follow_imports to Definition.goto. Now its signature matches Script.goto.
 * Python 2 support deprecated. For this release it is best effort. Python 2 has reached the end of its life and now it’s just about a smooth transition. Bugs for Python 2 will not be fixed anymore and a third of the tests are already skipped.
 * Removed settings.no_completion_duplicates. It wasn’t tested and nobody was probably using it anyway.
 * Removed settings.use_filesystem_cache and settings.additional_dynamic_modules, they have no usage anymore. Pretty much nobody was probably using them. 

-------------------------------------------------------------------
Sat Dec 28 15:02:12 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.15.2
- skip tests based on bundled typeshed
- refreshed unbundle.patch
 * Call signatures are now detected a lot better
 * Add fuzzy completions with Script(...).completions(fuzzy=True)
 * Files bigger than one MB (about 20kLOC) get cropped to avoid
    getting stuck completely.
 * A big refactoring around contexts/values

-------------------------------------------------------------------
Sat Nov 23 17:06:14 CET 2019 - Matej Cepl <mcepl@suse.com>

- So, this is completely boring, non-offensive changelog record,
  which says, that I have also add previously missing skip over
  test_compiled_signature test case, because of
  gh#davidhalter/jedi#1429

-------------------------------------------------------------------
Thu Oct 24 20:07:37 CEST 2019 - Matej Cepl <mcepl@suse.com>

- Skip TestSetupReadline.test_import because of gh#davidhalter/jedi#1429

-------------------------------------------------------------------
Thu Sep 12 17:43:32 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Skip another time based test test_os_path_join

-------------------------------------------------------------------
Wed Sep 11 12:03:10 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Skip flaky test test_static_analysis

-------------------------------------------------------------------
Sun Aug 25 17:56:17 UTC 2019 - Arun Persaud <arun@gmx.de>

- update to version 0.15.1:
  * Small bugfix and removal of a print statement

- changes from version 0.15.0:
  * Added file path completions, there's a new "Completion.type" path,
    now. Example: '/ho -> '/home/
  * *args/**kwargs resolving. If possible Jedi replaces the parameters
    with the actual alternatives.
  * Better support for enums/dataclasses
  * When using Interpreter, properties are now executed, since a lot
    of people have complained about this. Discussion in #1299, #1347.
  * New APIs:
    + Definition.get_signatures() -> List[Signature]. Signatures are
      similar to CallSignature. Definition.params is therefore
      deprecated.
    + Signature.to_string() to format call signatures.
    + Signature.params -> List[ParamDefinition], ParamDefinition has
      the following additional attributes infer_default(),
      infer_annotation(), to_string(), and kind.
    + Definition.execute() -> List[Definition], makes it possible to
      infer return values of functions.

-------------------------------------------------------------------
Tue Jul 16 10:41:56 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.14.1
 * CallSignature.index should now be working a lot better
 * A couple of smaller bugfixes

-------------------------------------------------------------------
Thu Jul  4 11:12:49 UTC 2019 - Ondřej Súkup <mimi.vx@gmail.com>

- update to 0.14.0
- enable tests
- add unbundle.patch
 * Added goto_*(prefer_stubs=True) as well as goto_*(prefer_stubs=True)
 * Stubs are used now for type inference
 * Typeshed is used for better type inference
 * Reworked Definition.full_name, should have more correct return values

-------------------------------------------------------------------
Wed May 29 12:51:13 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Disable tests as it is not working at all on python 3.7

-------------------------------------------------------------------
Tue Mar 26 10:48:44 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Do not bother condition for typing, on 3.7+ it is provided by base

-------------------------------------------------------------------
Sat Mar  2 15:12:14 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 0.13.3:
  * Fixed an issue with embedded Python see https://github.com/davidhalter/jedi-vim/issues/870

-------------------------------------------------------------------
Thu Feb 14 12:05:41 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Fix the typing dependency
- Really run the tests

-------------------------------------------------------------------
Sun Jan  6 22:27:01 UTC 2019 - Arun Persaud <arun@gmx.de>

- specfile:
  * update copyright year

- update to version 0.13.2:
  * Fixed a bug that led to Jedi spawning a lot of subprocesses.

-------------------------------------------------------------------
Thu Oct 11 18:46:48 UTC 2018 - Todd R <toddrme2178@gmail.com>

- update to version 0.13.1
  * Bugfixes, because tensorflow completions were still slow.
- update to version 0.13.0
  * A small release. Some bug fixes.
  * Remove Python 3.3 support. Python 3.3 support has been dropped by the Python
    foundation.
  * Default environments are now using the same Python version as the Python
    process. In 0.12.x, we used to load the latest Python version on the system.
  * Added ``include_builtins`` as a parameter to usages.
  * ``goto_assignments`` has a new ``follow_builtin_imports`` parameter that
    changes the previous behavior slightly.
- Remove test_requrements.patch, no longer needed

-------------------------------------------------------------------
Mon Jul  2 01:09:29 UTC 2018 - arun@gmx.de

- specfile:
  * require parso >= 0.3.0
  * remove python-devel requirement

- update to version 0.12.1:
  * This release forces you to upgrade parso. If you don't, nothing
    will work anymore. Otherwise changes should be limited to bug
    fixes. Unfortunately Jedi still uses a few internals of parso that
    make it hard to keep compatibility over multiple releases. Parso
    >=0.3.0 is going to be needed.

-------------------------------------------------------------------
Thu Apr 19 17:18:37 UTC 2018 - toddrme2178@gmail.com

- Update to version 0.12.0
  * Virtualenv/Environment support
  * F-String Completion/Goto Support
  * Cannot crash with segfaults anymore
  * Cleaned up import logic
  * Understand async/await and autocomplete it (including async generators)
  * Better namespace completions
  * Passing tests for Windows (including CI for Windows)
  * Remove Python 2.6 support
- Update to version 0.11.1
  * Parso update - the caching layer was broken
  * Better usages - a lot of internal code was ripped out and improved.
- Remove upstream-included test_requrements.patch
- Add new test_requrements.patch to avoid limit on pytest version.
- Disable tests, they don't work in most situations.

-------------------------------------------------------------------
Fri Nov 10 13:40:12 UTC 2017 - mimi.vx@gmail.com

- fix requires 

-------------------------------------------------------------------
Fri Nov 10 12:59:53 UTC 2017 - mimi.vx@gmail.com

- fix tests to run on current python3
- added test_requrements.patch to allow newer versions of python-parso

-------------------------------------------------------------------
Fri Nov 10 12:43:52 UTC 2017 - mimi.vx@gmail.com

- fix test conditions 

-------------------------------------------------------------------
Tue Sep 26 05:19:34 UTC 2017 - arun@gmx.de

- specfile:
  * require python-parso
  * require python-numpydoc for tests

- update to version 0.11.0:
  * Split Jedi's parser into a separate project called parso.
  * Avoiding side effects in REPL completion.
  * Numpy docstring support should be much better.
  * Moved the settings.*recursion* away, they are no longer usable.

-------------------------------------------------------------------
Mon Jun 19 18:58:25 UTC 2017 - sebix+novell.com@sebix.at

- only require python3-typing if necessary

-------------------------------------------------------------------
Fri Apr 28 17:16:29 UTC 2017 - jengelh@inai.de

- Grammatical corrections to description.
  Replace historic focus by current focus.

-------------------------------------------------------------------
Thu Apr 27 18:17:53 UTC 2017 - toddrme2178@gmail.com

- Fix license.

-------------------------------------------------------------------
Thu Apr 27 15:47:45 UTC 2017 - toddrme2178@gmail.com

- Disable tests on non-x86/x86_64 platforms.

-------------------------------------------------------------------
Tue Apr 25 15:40:49 UTC 2017 - toddrme2178@gmail.com

- Update to version 0.10.2
  * Python Packaging sucks. Some files were not included in 0.10.1.
- Update to version 0.10.1
  * Fixed a few very annoying bugs.
  * Prepared the parser to be factored out of Jedi.
- Update to version 0.10.0
  * Actual semantic completions for the complete Python syntax.
  * Basic type inference for ``yield from`` PEP 380.
  * PEP 484 support (most of the important features of it).
  * Added ``get_line_code`` to ``Definition`` and ``Completion``
    objects.
  * Completely rewritten the type inference engine.
  * A new and better parser for (fast) parsing diffs of Python
    code.
- Implement single-spec version

-------------------------------------------------------------------
Thu Nov  5 10:32:32 UTC 2015 - toddrme2178@gmail.com

- Fix tests

-------------------------------------------------------------------
Wed May  6 16:34:44 UTC 2015 - benoit.monin@gmx.fr

- update to version 0.9.0:
  * The import logic has been rewritten to look more like Python's.
    There is now an Evaluator.modules import cache, which resembles
    sys.modules.
  * Integrated the parser of 2to3. This will make refactoring
    possible. It will also be possible to check for error messages
    (like compiling an AST would give) in the future.
  * With the new parser, the evaluation also completely changed.
    It's now simpler and more readable.
  * Completely rewritten REPL completion.
  * Added jedi.names, a command to do static analysis. Thanks to
    that sourcegraph guys for sponsoring this!
  * Alpha version of the linter.
- remove "-final0" appended to source version
- add python-unittest2 as a test dependency for SLE11
- skip failing tests in test_integration_import.py

-------------------------------------------------------------------
Wed Aug 13 11:03:20 UTC 2014 - toddrme2178@gmail.com

- Update to version 0.8.1
  * Bugfix release, the last release forgot to include files that 
    improve autocompletion for builtin libraries. Fixed.
- Update to version 0.8.0
  * Memory Consumption for compiled modules (e.g. builtins, sys) 
    has been reduced drastically. Loading times are down as well 
    (it takes basically as long as an import).
  * REPL completion is starting to become usable.
  * Various small API changes. Generally this released focuses on 
    stability and refactoring of internal APIs.
  * Introducing operator precedence, which makes calculating 
    correct Array indices and __getattr__ strings possible.

-------------------------------------------------------------------
Sun Dec  8 19:52:44 UTC 2013 - p.drouand@gmail.com

- Update to version 0.7.0
  * switched from LGPL to MIT license
  * added an Interpreter class to the API to make autocompletion
    in REPL possible.
  * added autocompletion support for namespace packages
  * add sith.py, a new random testing method
- Change License to MIT
- Drop old python3 stuff

-------------------------------------------------------------------
Thu Oct 24 11:07:13 UTC 2013 - speilicke@suse.com

- Require python-setuptools instead of distribute (upstreams merged)

-------------------------------------------------------------------
Thu Aug 15 14:03:53 UTC 2013 - mvyskocil@suse.com

- update to 0.6.0
  * Created find_module helper to handle compatibility with python 3.3 
  * Fixed caching issues
  * More robust source encoding detection
  * Improved documentantion
  * and lot of bugfixes
- drop pre-checkin.sh
- drop a dependency on rpmbuild > 4.10, we don't need no ~ in version

-------------------------------------------------------------------
Thu May  9 07:53:19 UTC 2013 - mvyskocil@suse.com

- package python3 variant via pre_checkin.sh

-------------------------------------------------------------------
Thu May  2 09:16:31 UTC 2013 - mvyskocil@suse.com

- first packaging of jedi 0.5b5 for SUSE 

