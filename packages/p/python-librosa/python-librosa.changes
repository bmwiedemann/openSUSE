-------------------------------------------------------------------
Thu Jan 30 15:57:15 UTC 2020 - Todd R <toddrme2178@gmail.com>

- Update to version 0.7.2
  + New Features
    * added liftering support to MFCC inversion. *Ayoub Malek*
    * added `pathlib` support to `core.load`. *Stef van der Struijk*
    * added "mu-law" compression and expansion (companding). *Brian McFee*
  + Bug fixes
    * fixed errors in dynamic time warping with `NaN` inputs and detection
      of invalid warping paths. *Frank Zalkow, Brian McFee*
    * fixed frame-length normalization in spectrogram-based RMS energy
      calculation. *Shunsuke Hidaka*
    * fixed the length of signals produced by `core.tone`. *Brian McFee*
  + Documentation
    * removed math formatting from documentation. *Vincent Lostanlen*
    * corrected documentation for DTW. *Eric Semeniuc*
    * corrected typos in time-frequency reassignment spectrogram
      documentation. *Scott Seyfarth*
    * removed `dct_type=None` as an option in MFCC documentation. *Brian McFee*
  + Other changes
    * expanded normalization modes in Mel basis construction. *Brian McFee*

-------------------------------------------------------------------
Fri Dec  6 18:44:56 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Disable python2 support since dependencies dropped python2

-------------------------------------------------------------------
Thu Nov 21 04:36:07 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Use github source

-------------------------------------------------------------------
Tue Nov 19 20:52:02 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to version 0.7.1
  + New Features
    * `util.frame` now supports multidimensional data. Includes a new helper function `util.stack` for contiguous concatenation.
    * `core.griffinlim_cqt`: Phase retrieval from constant-Q magnitude spectra.
    * Enhanced compatibility with HTK's MFCC implementation: `effects.preemphasis` and `lifter=` parameter in MFCC.
    * `util.shear` utility for shear-transforming 2D arrays.
    * `core.reassigned_spectrogram`: time-frequency reassigned spectrogram.
  + Bug fixes
    * Added a missing parameter to `griffinlim_cqt`.
    * Correct FFT normalization discrepancy in rms calculation.
    * Corrected an error in automatic tuning correction for CQT.
    * Fixed seeking behavior in `librosa.stream` when operating on file-handle inputs.
    * Fixed a boundary condition check in full-sequence DTW.
  + Documentation
    * Fixed a typo in `stream` documentation.
    * Visualization of reassigned spectrograms.
    * Improved documentation for `core.stft`.
    * Expanded documentation of `feature.melspectrogram`.
  + Other changes
    * Expose frame parameters in `onset` and `chroma_stft` functions.
    * Removed warning filter reset, and changed the Python2 deprecation
     warning to class `FutureWarning`.
    * Fixed an upstream deprecation warning from `np.asscalar()`.
    * Beat and tempo estimation now support prior distributions.
    * `util.valid_audio` now enforces memory contiguity.
    * Improved x-axis decoration types in `display.waveplot`.
    * Ensure memory contiguity of audio buffers after resampling.
    * Code-base audit for proper usage of `times_like`.
    * Deprecated `core.ifgram` in favor of `reassigned_spectrogram`.
    * Allow initial phase estimates for `griffinlim` methods.
    * Accelerated `segment.lag_to_recurrence` and `segment.recurrence_to_lag`. Deprecated `util.roll_sparse`.
    * `A440=` parameter has been deprecated across the library in favor of a standardized `tuning=` parameter.

-------------------------------------------------------------------
Thu Jul 25 20:34:49 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to version 0.7.0
  + New features
    * `librosa.core.stream`: Stream generator to process long audio files into smaller pieces. *Brian McFee*
    * `librosa.core.load`: Replaced the default audio decoder with `pysoundfile`, and only use `audioread` as backup. *Brian McFee*
    * `librosa.core.griffinlim`: Phase retrieval from magnitude spectrograms using the (accelerated) Griffin-Lim method. *Brian McFee*
    * `librosa.feature.inverse`: New module for feature inversion, based on the Griffin-Lim phase retrieval algorithm. Includes `mel_to_audio` and `mfcc_to_audio`. *Brian McFee*
    * `librosa.core.lpc`: Linear prediction coefficients (LPC). *Adam Weiss*
    * `librosa.sequence.rqa`: Recurrence Quantification Analysis (RQA) for sequence alignment. *Brian McFee*
    * `librosa.beat.plp`: Predominant local pulse (PLP) for variable-tempo beat tracking. *Brian McFee*
    * `librosa.feature.fourier_tempogram`: Fourier Tempogram for representing rhythm in the frequency domain. *Brian McFee*
    * `librosa.core.pcen` Per-channel energy normalization (PCEN) now allows logarithmic range compression at the limit power->0. *Vincent Lostanlen*
    * `librosa.effects.pitch_shift` supports custom resampling modes. *Taewoon Kim*
    * `librosa.core.cqt` and `librosa.core.icqt` Forward and inverse constant-Q transform now support custom resampling modes. *Brian McFee*
    * `librosa.segment.path_enhance`: Near-diagonal path enhancement for recurrence, self- or cross-similarity matrices. *Brian McFee*
    * `librosa.segment.recurrence_matrix` now supports a keyword argument, `self=False`. If set to `True`, the recurrence matrix includes self-loops. *Brian McFee*
    * `librosa.core.piptrack` now supports a keyword argument, `ref=None`, allowing users to override the reference thresholding behavior for determining which bins correspond to pitches. *Brian McFee*
    * `librosa.segment.cross_similarity`: Cross-similarity function for comparing two feature sequences. *Rachel Bittner, Brian McFee*
    * `librosa.onset.onset_strength_multi` now supports a user-specified reference spectrum via the `ref` keyword argument. *Brian McFee*
    * `librosa.core.resample` now supports `mode='polyphase'`. *Brian McFee*
    * `librosa.onset.onset_strength_multi`: Setting `aggregate=False` disables the aggregation of onset strengths across frequency bins. *Brian McFee*
  + Bug fixes
    * `librosa.effects.pitch_shift` now preserves length. *Vincent Lostanlen*
    * `librosa.core.pcen` Dynamic range compression in PCEN is more numerically stable for small values of the exponent. *Vincent Lostanlen*
    * `librosa.core.ifgram` Instantaneous frequency spectrogram now correctly estimates center frequencies when using windows other than `hann`. *Brian McFee*
    * `librosa.sequence.dtw` Fixed a bug in dynamic time warping when `subseq=True`. *Viktor Andreevitch Morozov*
    * `librosa.core.pcen` now initializes its autoregressive filtering in the steady state, not with silence. *Jan Schlüter, Brian McFee*
    * `librosa.segment.recurrence_matrix`: `width` parameter now cannot exceed data length. *Brian McFee*
    * Filter bank constructors `mel`, `chroma`, `constant_q`, and `cq_to_chroma` are now type-stable. *Vincent Lostanlen, Brian McFee*
    * `librosa.core.icqt` Inverse constant-Q transform has been completely rewritten and is more numerically stable. *Brian McFee*
  + Removed features (deprecated in v0.6)
    * Discrete cosine transform. We recommend using `scipy.fftpack.dct`
    * The `delta` function no longer support the `trim` keyword argument. 
    * Root mean square error (`rmse`) has been renamed to `rms`.
    * `iirt` now uses `sos` mode by default.
  + Documentation
    * Improved the documentation of PCEN. *Vincent Lostanlen*
    * Improved installation documentation. *Darío Hereñú*
    * Improved code style for plot generation. *Alex Metsai*
    * Improved the documentation of spectral features. *Brian McFee*
    * Improved the documentation of MFCC. *Brian McFee*
    * Removed a redundant link in the `util` documentation. *Keunwoo Choi*
    * Improved the docstring of `recurrence_matrix`. *Brian McFee*
    * Improved the docstring of `load`. *Andy Sarroff*
  + Other changes
    * The `output` module is now deprecated, and will be removed in version 0.8.
    * More informative exception handling. *Jack Mason*
    * `librosa.core.resample()` now supports `mode='fft'`, equivalent to the previous `scipy` mode. *Brian McFee*
    * More efficient length-aware ISTFT and ICQT. *Vincent Lostanlen*
    * Nine librosa functions now store jit-compiled, numba-accelerated caches across sessions. *Brian McFee*
    * `librosa.core.load` no longer relies on `realpath()`. *Brian McFee*
    * All spectral feature extractors now expose all STFT parameters. *Brian McFee*
    * Refactored `librosa.cache`. *Brian McFee*
    * Thanks to `np.fft.rfft`, functions `stft`, `istft`, `ifgram`, and `fmt` are faster and have a reduced memory footprint. *Brian McFee*


-------------------------------------------------------------------
Wed Feb 20 19:30:09 CET 2019 - Matej Cepl <mcepl@suse.com>

- Upgrade to 0.6.3:
  - This release contains a few minor bugfixes and many
    improvements to documentation and usability.
- Also, SPEC file is run through spec-cleaner.

-------------------------------------------------------------------
Fri Nov  2 04:48:42 UTC 2018 - Todd R <toddrme2178@gmail.com>

- Initial version
