<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>3dfb9a43f824ccbe39d9a6424657861c</srcmd5>
    <version>1.0.14</version>
    <time>1491896465</time>
    <user>maxlin_factory</user>
    <comment>python-python-prompt-toolkit updated and renamed to match upstream</comment>
    <requestid>484888</requestid>
  </revision>
  <revision rev="2" vrev="2">
    <srcmd5>1f99c53689e8d264d15da73571520850</srcmd5>
    <version>1.0.14</version>
    <time>1495034084</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>493098</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>3bab441eed73cb57f1b6e3575ed2e4f7</srcmd5>
    <version>1.0.15</version>
    <time>1505920409</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>527414</requestid>
  </revision>
  <revision rev="4" vrev="2">
    <srcmd5>1d6cb2f68ab961d422f41fddff9a17a5</srcmd5>
    <version>1.0.15</version>
    <time>1527582673</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>610479</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>77139b4bebd0d3bed32fe7cf80b03c6b</srcmd5>
    <version>2.0.3</version>
    <time>1531813297</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>622916</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>6c5d22bb6455562caf394d7799e3da5a</srcmd5>
    <version>2.0.4</version>
    <time>1532361729</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>624650</requestid>
  </revision>
  <revision rev="7" vrev="3">
    <srcmd5>e9d5f2d4cc260b4211888c19677c3c1d</srcmd5>
    <version>1.0.15</version>
    <time>1532774655</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>625714</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>479536b7c6e02fb4202ad5da25c01838</srcmd5>
    <version>2.0.6</version>
    <time>1539589475</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>641863</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>90496e2db003c15a76604969453da3f6</srcmd5>
    <version>2.0.7</version>
    <time>1541510954</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>646016</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>ae885a104f08aca8a2ac33a883ac39c6</srcmd5>
    <version>2.0.9</version>
    <time>1551687761</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>680789</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>fff07d070fb268bf66709135c8c88945</srcmd5>
    <version>2.0.10</version>
    <time>1572883512</time>
    <user>dimstar_suse</user>
    <comment>- Update to 2.0.10:
  * minor bugfixes around</comment>
    <requestid>736809</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>9aed5be9e4f576337c0246b69a35a64c</srcmd5>
    <version>3.0.4</version>
    <time>1587325303</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>786244</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>c4f93c4d8ae8746adbc34771e5e4e86a</srcmd5>
    <version>3.0.5</version>
    <time>1592758213</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>813482</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>abf2fd3b4d5bab8e6fa7b26eeaffc81f</srcmd5>
    <version>3.0.8</version>
    <time>1608729552</time>
    <user>dimstar_suse</user>
    <comment>- update to 3.0.8:
  - Added `validator` parameter to `input_dialog`.
  - New &quot;placeholder&quot; parameter added to `PromptSession`.
  - Fixes
  - The SSH/Telnet adaptors have been refactored and improved in several ways.
    See issues #876 and PR #1150 and #1184 on GitHub.
    * Handle terminal types for both telnet and SSH sessions.
    * Added pipe input abstraction. (base class for `PosixPipeInput` and
      `Win32PipeInput`).
    * The color depth logic has been refactored and moved to the `Output`
      implementations. Added `get_default_color_depth` method to `Output`
      objects.
    * All line feets are now preceded by a carriage return in the telnet
      connection stdout.
  - Introduce `REPLACE_SINGLE` input mode for Vi key bindings.
  - Improvements to the checkbox implementation:
      * Hide the scrollbar for a single checkbox.
      * Added a &quot;checked&quot; setter to the checkbox.
  - Expose `KeyPressEvent` in key_binding/__init__.py (often used in type
    annotations).
  - The renderer has been optimized so that no trailing spaces are generated
    (this improves copying in some terminals).</comment>
    <requestid>857115</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>43943ded332825670dd4e98f6044c848</srcmd5>
    <version>3.0.26</version>
    <time>1644435490</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>951926</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>3f1f332e78449b42a43e8c00ff7abb3c</srcmd5>
    <version>3.0.28</version>
    <time>1648570434</time>
    <user>dimstar_suse</user>
    <comment>- update to 3.0.28:
  - Support format specifiers for HTML and ANSI formatted text.
  - Accept defaults for checkbox and radio list, and their corresponding dialogs.
  - Fix resetting of cursor shape after the application terminates.
  - Support for cursor shapes. The cursor shape for prompts/applications can now
    be configured, either as a fixed cursor shape, or in case of Vi input mode,
    according to the current input mode.
  - Handle &quot;cursor forward&quot; command in ANSI formatted text. This makes it
    possible to render many kinds of generated ANSI art.
  - Accept `align` attribute in `Label` widget.
  - Added `PlainTextOutput`: an output implementation that doesn't render any
    ANSI escape sequences. This will be used by default when redirecting stdout
    to a file.
  - Added `create_app_session_from_tty`: a context manager that enforces
    input/output to go to the current TTY, even if stdin/stdout are attached to
    pipes.
  - Added `to_plain_text` utility for converting formatted text into plain text.
  - Don't automatically use `sys.stderr` for output when `sys.stdout` is not a
    TTY, but `sys.stderr` is. The previous behavior was confusing, especially
    when rendering formatted text to the output, and we expect it to follow</comment>
    <requestid>965076</requestid>
  </revision>
  <revision rev="17" vrev="1">
    <srcmd5>2121e0867b45e4794faf70c6e1ee651f</srcmd5>
    <version>3.0.30</version>
    <time>1657015725</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>986469</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>2760aaa83b58ec2b28a5941e7aa2f89c</srcmd5>
    <version>3.0.31</version>
    <time>1665420251</time>
    <user>favogt_factory</user>
    <comment></comment>
    <requestid>1008170</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>897ebe327d0841ae41fbbef39b21a825</srcmd5>
    <version>3.0.32</version>
    <time>1668271223</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1035182</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>42b9258ebab05462137c0223dc9bd1c8</srcmd5>
    <version>3.0.33</version>
    <time>1670430884</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1040748</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>fda137a3e7e247ad2a250fe7278a3697</srcmd5>
    <version>3.0.36</version>
    <time>1671128645</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1042877</requestid>
  </revision>
  <revision rev="22" vrev="1">
    <srcmd5>c9aae83a1a41a703246620a4a584e43b</srcmd5>
    <version>3.0.38</version>
    <time>1680884179</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1077423</requestid>
  </revision>
  <revision rev="23" vrev="2">
    <srcmd5>aadea07811873b7dad1acd66f290dbb6</srcmd5>
    <version>3.0.38</version>
    <time>1682193573</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1081824</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>0895487bf8bca5516c9a07e68f94e5bb</srcmd5>
    <version>3.0.41</version>
    <time>1701972533</time>
    <user>anag+factory</user>
    <comment>-  Update to 3.0.41 (bsc#1217693):
  - Fix regression regarding IPython input hook (%gui) integration.
- 3.0.40
  * Fixes:
    - Improved Python 3.12 support (fixes event loop `DeprecationWarning`).
  * New features:
    - Vi key bindings: `control-t` and `control-d` for indent/unindent
      in insert mode.
    - Insert partial suggestion when `control+right` is pressed,
      similar to Fish.
    - Use sphinx-nefertiti theme for the docs.
- 3.0.39
  * Fixes:
    - Fix `RuntimeError` when `__breakpointhook__` is called from
      another thread.
    - Fix memory leak in filters usage.
    - Ensure that key bindings are handled in the right context (when
      using contextvars).
  * New features:
    - Accept `in_thread` keyword in `prompt_toolkit.shortcuts.prompt()`.
    - Support the `NO_COLOR` environment variable.
</comment>
    <requestid>1130986</requestid>
  </revision>
  <revision rev="25" vrev="1">
    <srcmd5>e174549ff8a6d7f92d9c7d5276998385</srcmd5>
    <version>3.0.43</version>
    <time>1704491912</time>
    <user>dimstar_suse</user>
    <comment>- update to 3.0.43:
  * Fix regression on Pypy: Don't use `ctypes.pythonapi` to
    restore SIGINT if not available.
  * Make `formatted_text.split_lines()` accept an iterable
    instead of lists only.
  * Disable the IPython workaround (from 3.0.41) for IPython &gt;=
    8.18.
  * Restore signal.SIGINT handler between prompts.

- Update to version 3.0.36
- Update to version 3.0.33:
- Update to version 3.0.32:</comment>
    <requestid>1135791</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>5d62803d508c815af84fd511cef2441f</srcmd5>
    <version>3.0.46</version>
    <time>1717765310</time>
    <user>anag+factory</user>
    <comment>- update to 3.0.46:
  * Fix pytest capsys fixture compatibility.
  * Improve performance of `GrammarCompleter` (faster
    deduplication of completions).
  * Accept `os.PathLike` in `FileHistory` (typing fix).
  * Fix memory leak in filters.
  * Improve performance of progress bar formatters.
  * Fix compatibility when a SIGINT handler is installed by non-
    Python (Rust, C).
  * Limit number of completions in buffer to 10k by default (for
    performance).</comment>
    <requestid>1179075</requestid>
  </revision>
  <revision rev="27" vrev="1">
    <srcmd5>4904341e1257252042f815f47fd465a3</srcmd5>
    <version>3.0.47</version>
    <time>1724163152</time>
    <user>anag+factory</user>
    <comment>- update to 3.0.47:
  * Allow passing exception classes for `KeyboardInterrupt` and
    `EOFError` in  `PromptSession`.
  * Compute padding parameters for `Box` widget lazily.</comment>
    <requestid>1194587</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>57cee3a64fd3ab09d9bdfad1732b45cc</srcmd5>
    <version>3.0.48</version>
    <time>1729412020</time>
    <user>anag+factory</user>
    <comment>- update to 3.0.48:
  * Typing improvements:
  * Add `@overload` to
    `contrib.regular_languages.compiler.Variables.get`.
  * Use `Sequence` instead of `list` for `words` argument in
    completers.
  * Improve `ModalCursorShapeConfig`:
  * Display an &quot;underscore&quot; cursor in Vi's &quot;replace single&quot; mode,
    like &quot;replace&quot; mode.
  * Display an &quot;beam&quot; cursor in Emacs (insert) mode.</comment>
    <requestid>1208844</requestid>
  </revision>
  <revision rev="29" vrev="2">
    <srcmd5>6409e34550e26ab700c98622b4b83418</srcmd5>
    <version>3.0.48</version>
    <time>1732315868</time>
    <user>anag+factory</user>
    <comment>- add compat provides on the safe name</comment>
    <requestid>1225843</requestid>
  </revision>
  <revision rev="30" vrev="1">
    <srcmd5>35118825c8487cbd5709749e79f9380e</srcmd5>
    <version>3.0.51</version>
    <time>1746032546</time>
    <user>dimstar_suse</user>
    <comment>- update to 3.0.51:
  * Use pyproject.toml instead of setup.py.
  * Fix edge case in `formatted_text.split_lines` when the input
    starts with a line ending.
  * Fixes non user impacting regression on the output rendering.
    Don't render cursor hide/show ANSI escape codes if not needed.
  * On Windows, use virtual terminal input when available.
  * Support for multiline suggestions.
  * Handle `InvalidStateError` during termination when using
    `run_in_terminal`/`patch_stdout`. This can happen in some
    cases during cancellation, probably when using anyio.
  * Fix cursor that remains in hidden state when the application
    exits. This can happen when the application doesn't show the
    cursor and `erase_when_done` is being used.
  * Drop support for Python 3.7:</comment>
    <requestid>1273208</requestid>
  </revision>
</revisionlist>
