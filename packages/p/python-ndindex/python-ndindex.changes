-------------------------------------------------------------------
Fri Nov 15 09:48:03 UTC 2024 - Nico Krapp <nico.krapp@suse.com>

- Update to 1.9.2
  * Fixes an issue with pickle and deepcopy serialization introduced 
    in ndindex 1.9.
- Update to 1.9.1
  * This version is identical to 1.9, but includes some fixes to the
    release scripts to ensure that wheels are properly uploaded to PyPI.
- Update to 1.9.0
  * ndindex now uses a C extension (using Cython). Currently the 
    constructors for {class}~.Slice and {class}~.Tuple have been Cythonized,
    meaning constructing and using those classes is now much faster. In the 
    future, additional parts of ndindex will be Cythonized as performance 
    needs dictate. This does not have any user-facing changes to 
    functionality.
  * Python 3.8 is no longer supported.
  * The documentation now includes a documentation guide for all NumPy 
    index types, extending the previous guide for slices. The slices 
    guide has also been improved and now has diagrams built using 
    HTML/CSS instead of MathJAX.
  * Some fixes to incorrect usage of __slots__.
  * Raise an exception earlier for invalid index in 
    {any}ChunkSize.num_subchunks().
  * The CYTHONIZE_NDINDEX environment variable for building has been 
    removed, as Cython support is now required.
  * Fix a compatibility issue with NumPy 2.0.
  * {func}~.normalize_skip_axes will now raise AxisError before 
    ValueError for non-unique axes.
  * Keep track of when a Slice has been reduced (with no shape) to 
    avoid recomputing it.
  * Various improvements in the tests.

-------------------------------------------------------------------
Sun Mar 24 09:22:54 UTC 2024 - Dirk Müller <dmueller@suse.com>

- update to 1.8:
  * Breaking broadcast_shapes() no longer returns None in the place
    of skipped axes. The result is now just the non-skipped axes
    broadcasted together.
  * The skip_axes flag to iter_indices() and broadcast_shapes() can
    now be a list of tuples, of skipped axes, which apply to each
    respective shape independently.
  * Mixing negative and nonnegative skip_axes in iter_indices() and
    broadcast_shapes() is now supported. The only restriction is
    that skip axes must refer to unique dimensions for each shape.
  * New index method selected_indices(), which iterates indices
    corresponding to each element selected by the given index on an
    array of a given shape.
  * ndindex indices can now be constructed by slicing the ndindex()
    constructor function, like ndindex[0:10]. This is generally
    preferred for indices with explicit slices, as this allows using
    the usual : slice syntax instead of requiring slices to be spelled
    out with the slice function.
  * Add a negative_int flag to reduce, which makes it normalize
    integer indices to negative integers when a shape is provided.
  * Slice objects now hash to the same hash value as their
    corresponding raw slice in Python 3.12, which now allows native
    slice objects to be hashed.
  * Fix an incorrect result from ChunkSize.as_subchunks() and
    ChunkSize.num_subchunks() when using multiple array indices or a
    boolean array index with multiple dimensions.
- drop ndindex-pr159-py312.patch (upstream)

-------------------------------------------------------------------
Wed Feb  7 09:59:37 UTC 2024 - Ben Greiner <code@bnavigator.de>

- Update to 1.7
  * Breaking: the skip_axes argument iter_indices() function now
    applies the skipped axes before broadcasting, not after. This
    behavior is more generally useful and matches how functions
    with stacking work (e.g., np.cross or np.matmul). The best way
    to get the old behavior is to broadcast the arrays/shapes
    together first. The skip_axes in iter_indices must be either
    all negative or all nonnegative to avoid ambiguity. A future
    version may add support for specifying different skip axes for
    each shape.
  * iter_indices() no longer requires the skipped axes specified by
    skip_axes to be broadcast compatible.
  * New method isvalid() to check if an index is valid on a given
    shape.
  * New function broadcast_shapes() which is the same as
    np.broadcast_shapes() except it also allows specifying a set of
    skip_axes which will be ignored when broadcasting.
  * New exceptions BroadcastError and AxisError which are used by
    iter_indices() and broadcast_shapes().
  * Fix some test failures with the latest version of NumPy.
  * Fix some tests that didn’t work properly when run against the
  * sdist.
  * The sdist now includes relevant testing files.
- Drop patches fixed upstream
  * ndindex-pr133-ragged.patch gh#Quansight-Labs/ndindex#133
  * ndindex-pr147-numpy.patch gh#Quansight-Labs/ndindex#147
- Refresh custom-pytest.patch gh#Quansight-Labs/ndindex#150
- Add ndindex-pr159-py312.patch gh#Quansight-Labs/ndindex#159

-------------------------------------------------------------------
Fri Mar 31 09:06:35 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Skip a flaky test in i586

-------------------------------------------------------------------
Thu Mar 30 15:20:45 UTC 2023 - Ben Greiner <code@bnavigator.de>

- Initial specfile for v1.6
- Required by python-blosc2 2.1.1
- Add ndindex-pr133-ragged.patch gh#Quansight-Labs/ndindex#133
- Add ndindex-pr147-numpy.patch gh#Quansight-Labs/ndindex#147
- Add custom-pytest.patch
