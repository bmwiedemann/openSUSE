<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>1df202f0601a551da3171e9c46ae17d4</srcmd5>
    <version>1.6</version>
    <time>1681150606</time>
    <user>dimstar_suse</user>
    <comment>required by python-blosc2 2.1</comment>
    <requestid>1077584</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>35e638214be99c3ebba0bf70ffa45889</srcmd5>
    <version>1.7</version>
    <time>1707415327</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1145092</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>2ae079985e964323a214aa63dfcb11e8</srcmd5>
    <version>1.8</version>
    <time>1711397401</time>
    <user>anag+factory</user>
    <comment>- update to 1.8:
  * Breaking broadcast_shapes() no longer returns None in the place
    of skipped axes. The result is now just the non-skipped axes
    broadcasted together.
  * The skip_axes flag to iter_indices() and broadcast_shapes() can
    now be a list of tuples, of skipped axes, which apply to each
    respective shape independently.
  * Mixing negative and nonnegative skip_axes in iter_indices() and
    broadcast_shapes() is now supported. The only restriction is
    that skip axes must refer to unique dimensions for each shape.
  * New index method selected_indices(), which iterates indices
    corresponding to each element selected by the given index on an
    array of a given shape.
  * ndindex indices can now be constructed by slicing the ndindex()
    constructor function, like ndindex[0:10]. This is generally
    preferred for indices with explicit slices, as this allows using
    the usual : slice syntax instead of requiring slices to be spelled
    out with the slice function.
  * Add a negative_int flag to reduce, which makes it normalize
    integer indices to negative integers when a shape is provided.
  * Slice objects now hash to the same hash value as their
    corresponding raw slice in Python 3.12, which now allows native
    slice objects to be hashed.
  * Fix an incorrect result from ChunkSize.as_subchunks() and
    ChunkSize.num_subchunks() when using multiple array indices or a
    boolean array index with multiple dimensions.
- drop ndindex-pr159-py312.patch (upstream)</comment>
    <requestid>1161095</requestid>
  </revision>
</revisionlist>
