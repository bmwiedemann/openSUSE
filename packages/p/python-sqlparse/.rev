<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>8bfeae89011d82e542d3662d5a3d286b</srcmd5>
    <version>0.1.10</version>
    <time>1387382118</time>
    <user>coolo</user>
    <comment></comment>
    <requestid>207025</requestid>
  </revision>
  <revision rev="2" vrev="3">
    <srcmd5>8bfeae89011d82e542d3662d5a3d286b</srcmd5>
    <version>0.1.10</version>
    <time>1409302998</time>
    <user>adrianSuSE</user>
    <comment>Split 13.2 from Factory</comment>
  </revision>
  <revision rev="3" vrev="4">
    <srcmd5>2494bf8a0054e2eef34727d15bb6be7c</srcmd5>
    <version>0.1.10</version>
    <time>1416347112</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>261637</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>0f53b09759d4302f8f23d0bcfd7a995e</srcmd5>
    <version>0.1.15</version>
    <time>1431980788</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>307589</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>94e7f3343adc87226cb21f78a66e2f7a</srcmd5>
    <version>0.2.3</version>
    <time>1504617265</time>
    <user>dimstar_suse</user>
    <comment>1</comment>
    <requestid>509673</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>45139be342a00880219c457fdb70cd10</srcmd5>
    <version>0.2.4</version>
    <time>1535123475</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>631152</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>3a0466b17e8af4c290d3e1d0f4bb8924</srcmd5>
    <version>0.3.0</version>
    <time>1552571681</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>684138</requestid>
  </revision>
  <revision rev="8" vrev="2">
    <srcmd5>2ef18b6ed65134f8938b51f6d3822652</srcmd5>
    <version>0.3.0</version>
    <time>1555691738</time>
    <user>dimstar_suse</user>
    <comment>- Use %pytest macro</comment>
    <requestid>695140</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>08d9cf90020b493bd84e698adb9cb586</srcmd5>
    <version>0.3.1</version>
    <time>1583948727</time>
    <user>dimstar_suse</user>
    <comment>- update to v0.3.1:
  * Add HQL keywords (pr475, by matwalk).
  * Add support for time zone casts (issue489).
  * Enhance formatting of AS keyword (issue507, by john-bodley).
  * Stabilize grouping engine when parsing invalid SQL statements.
  * Fix splitting of SQL with multiple statements inside
    parentheses (issue485, pr486 by win39).
  * Correctly identify NULLS FIRST / NULLS LAST as keywords (issue487).
  * Fix splitting of SQL statements that contain dollar signs in
    identifiers (issue491).
  * Remove support for parsing double slash comments introduced in
    0.3.0 (issue456) as it had some side-effects with other dialects and
    doesn't seem to be widely used (issue476).
  * Restrict detection of alias names to objects that acutally could
    have an alias (issue455, adopted some parts of pr509 by john-bodley).
  * Fix parsing of date/time literals (issue438, by vashek).
  * Fix initialization of TokenList (issue499, pr505 by john-bodley).
  * Fix parsing of LIKE (issue493, pr525 by dbczumar).
  * Improve parsing of identifiers (pr527 by liulk).</comment>
    <requestid>783018</requestid>
  </revision>
  <revision rev="10" vrev="2">
    <srcmd5>74c5c48d6e270b5f56155d0b9dbaba6d</srcmd5>
    <version>0.3.1</version>
    <time>1585265325</time>
    <user>dimstar_suse</user>
    <comment>- Add stdout-encoding-set.patch to use sys.stdout.reconfigure() if
  the stream is an instance of TextIOWrapper to support a pytest change.</comment>
    <requestid>787620</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>679430fdceda3e2100b0ab99655d6c91</srcmd5>
    <version>0.4.1</version>
    <time>1606648741</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.4.1:
  * Python 3.9 support
  * Remove support for end-of-life Python 2.7 and 3.4. Python 3.5+ is now
  required.
  * Remaining strings that only consist of whitespaces are not treated as
  statements anymore. Code that ignored the last element from
  sqlparse.split() should be updated accordingly since that function
  now doesn't return an empty string as the last element in some
  cases (issue496).
- remove non-upstream stdout-encoding-set.patch patch</comment>
    <requestid>850920</requestid>
  </revision>
  <revision rev="12" vrev="2">
    <srcmd5>5bb525f1c333d233e71141b972628bec</srcmd5>
    <version>0.4.1</version>
    <time>1612182360</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>867445</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>5cd44bf77db453aa54fb6f1afb4b3c5a</srcmd5>
    <version>0.4.2</version>
    <time>1634754192</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>922565</requestid>
  </revision>
  <revision rev="14" vrev="1">
    <srcmd5>bba56aa3b1049ae95f756e7066847c74</srcmd5>
    <version>0.4.3</version>
    <time>1664908634</time>
    <user>RBrownFactory</user>
    <comment>- update to 0.4.3:
  * Add support for DIV operator.
  * Add support for additional SPARK keywords.
  * Avoid tokens copy.
  * Add REGEXP as a comparision.
  * Add DISTINCTROW keyword for MS Access.
  * Improve parsing of CREATE TABLE AS SELECT.
  * Fix spelling of INDICATOR keyword.
  * Fix formatting error in EXTRACT function.
  * Fix bad parsing of create table statements that use lower case.
  * Handle backtick as valid quote char.
  * Allow any unicode character as valid identifier name.</comment>
    <requestid>1007717</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>fa819fd1fe7ae1645dc6a5be00cc74b6</srcmd5>
    <version>0.4.4</version>
    <time>1685124928</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.4.4:
  * IMPORTANT: This release fixes a security vulnerability in
    the parser where a regular expression vulnerable to ReDOS
    (Regular Expression Denial of Service) was used. See the
    security advisory for details (CVE-2023-30608, bsc#1210617,
    https://github.com/andialbrecht/sqlparse/security/advisories/GHSA-rrm6-wvj7-cwh2)
    The vulnerability was discovered by @erik-krogh from GitHub
    Security Lab (GHSL). Thanks for reporting!
  * Revert a change from 0.4.0 that changed IN to be a comparison
    (issue694).  The primary expectation is that IN is treated as
    a keyword and not as a comparison operator. That also follows
    the definition of reserved keywords for the major SQL syntax
    definitions.
  * Fix regular expressions for string parsing.
  * sqlparse now uses pyproject.toml instead of setup.cfg
    (issue685).
</comment>
    <requestid>1089053</requestid>
  </revision>
  <revision rev="16" vrev="2">
    <srcmd5>e640c4c538927db5c0c7f59a003c399a</srcmd5>
    <version>0.4.4</version>
    <time>1686576268</time>
    <user>dimstar_suse</user>
    <comment>- Add %{?sle15_python_module_pythons}</comment>
    <requestid>1092212</requestid>
  </revision>
  <revision rev="17" vrev="3">
    <srcmd5>623d1f766507380a62a11956de9c1a11</srcmd5>
    <version>0.4.4</version>
    <time>1709762589</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1154920</requestid>
  </revision>
  <revision rev="18" vrev="1">
    <srcmd5>a2529f3cb5f3d8e825f72c1ca6099e26</srcmd5>
    <version>0.5.0</version>
    <time>1715161119</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.5.0:
  * Notable Changes
    + Drop support for Python 3.5, 3.6, and 3.7.
    + Python 3.12 is now supported.
    + IMPORTANT: Fixes a potential denial of service attack (DOS) due to
      recursion error for deeply nested statements.
      (CVE-2024-2430, bsc#1223603)
  * Enhancements:
    + Splitting statements now allows to remove the semicolon at the end.
      Some database backends love statements without semicolon.
    + Support TypedLiterals in get_parameters.
    + Improve splitting of Transact SQL when using GO keyword.
    + Support for some JSON operators.
    + Improve formatting of statements containing JSON operators.
    + Support for BigQuery and Snowflake keywords.
    + Support parsing of OVER clause.
  * Bug Fixes
    + Ignore dunder attributes when creating Tokens.
    + Allow operators to precede dollar-quoted strings.
    + Fix parsing of nested order clauses.
    + Thread-safe initialization of Lexer class.
    + Classify TRUNCATE as DDL and GRANT/REVOKE as DCL keywords.
    + Fix parsing of PRIMARY KEY.
  * Other
    + Optimize performance of matching function.</comment>
    <requestid>1172288</requestid>
  </revision>
  <revision rev="19" vrev="1">
    <srcmd5>9e88e3b123937a58e006721e98be4c5b</srcmd5>
    <version>0.5.1</version>
    <time>1724163168</time>
    <user>anag+factory</user>
    <comment>- update to 0.5.1:
  * New &quot;compact&quot; option for formatter. If set, the formatter
    tries to produce a more compact output by avoiding some line
    breaks
  * The strip comments filter was a bit greedy and removed too
    much whitespace (issue772). Note: In some cases you might want
    to add `strip_whitespace=True` where you previously used just
    `strip_comments=True`.  `strip_comments` did some of the
    work that `strip_whitespace` should do.
  * Fix error when splitting statements that contain multiple
    CASE clauses within a BEGIN block (issue784).
  * Fix whitespace removal with nested expressions (issue782).
  * Fix parsing and formatting of ORDER clauses containing NULLS
    FIRST or NULLS LAST (issue532).</comment>
    <requestid>1194657</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>2310e6ed7c45605f5538c9dd4fe3f9e9</srcmd5>
    <version>0.5.3</version>
    <time>1740497965</time>
    <user>dimstar_suse</user>
    <comment>- update to 0.5.3:
  * EXTENSION is now recognized as a keyword (issue785).
  * SQL hints are not removed when removing comments (issue262,
    by skryzh).</comment>
    <requestid>1248061</requestid>
  </revision>
</revisionlist>
