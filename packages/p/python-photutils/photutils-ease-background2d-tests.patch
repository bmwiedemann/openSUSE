Index: photutils-1.0.1/photutils/background/tests/test_background_2d.py
===================================================================
--- photutils-1.0.1.orig/photutils/background/tests/test_background_2d.py
+++ photutils-1.0.1/photutils/background/tests/test_background_2d.py
@@ -82,8 +82,8 @@ class TestBackground2D:
                           bkg_estimator=MeanBackground(), edge_method='crop')
         b2 = Background2D(DATA, (23, 22), filter_size=filter_size,
                           bkg_estimator=MeanBackground(), edge_method='pad')
-        assert_allclose(b1.background, b2.background)
-        assert_allclose(b1.background_rms, b2.background_rms)
+        assert_allclose(b1.background, b2.background, rtol=2e-5)
+        assert_allclose(b1.background_rms, b2.background_rms, rtol=2e-5)

     @pytest.mark.parametrize('box_size', ([(25, 25), (23, 22)]))
     def test_background_mask(self, box_size):
@@ -98,13 +98,13 @@ class TestBackground2D:
         mask[25:50, 25:50] = True
         b = Background2D(data, box_size, filter_size=(1, 1), mask=mask,
                          bkg_estimator=MeanBackground())
-        assert_allclose(b.background, DATA)
-        assert_allclose(b.background_rms, BKG_RMS)
+        assert_allclose(b.background, DATA, rtol=2e-5)
+        assert_allclose(b.background_rms, BKG_RMS, rtol=2e-5)

         # test edge crop with
         b2 = Background2D(data, box_size, filter_size=(1, 1), mask=mask,
                           bkg_estimator=MeanBackground(), edge_method='crop')
-        assert_allclose(b2.background, DATA)
+        assert_allclose(b2.background, DATA, rtol=2e-5)

     def test_mask(self):
         data = np.copy(DATA)
@@ -156,8 +156,8 @@ class TestBackground2D:
         """Test case where padding is added only on one axis."""

         b = Background2D(DATA, (25, 22), filter_size=(1, 1))
-        assert_allclose(b.background, DATA)
-        assert_allclose(b.background_rms, BKG_RMS)
+        assert_allclose(b.background, DATA, rtol=2e-5)
+        assert_allclose(b.background_rms, BKG_RMS, rtol=2e-5)
         assert b.background_median == 1.0
         assert b.background_rms_median == 0.0

