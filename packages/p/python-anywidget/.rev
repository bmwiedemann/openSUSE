<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>7ad6a3691ce2824f27ec200ece70b898</srcmd5>
    <version>0.6.3</version>
    <time>1694113984</time>
    <user>anag+factory</user>
    <comment>- Initial release of 0.6.3.</comment>
    <requestid>1109382</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>2bc323e756242e6c8fe4e45efc433c0c</srcmd5>
    <version>0.6.5</version>
    <time>1695664953</time>
    <user>anag+factory</user>
    <comment>- Update to 0.6.5
  * fix: disable auto-reloading in dist-packages (#276)
  * When the package is located in dist-packages, auto-reloading is
    now disabled. This prevents unnecessary warnings when the
    package is used in environments like Google Colab which are
    likely non-development installs.
- Release 0.6.4
  * fix: Keep support for binary traitlets (#274)
  * Uses structuredClone to ensure binary data is automatically
    serialized, correctly. Applies changes reverted in ipywidgets
    8.1.1.</comment>
    <requestid>1113219</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>7717db271f805029bbdfcee9c630dc8c</srcmd5>
    <version>0.7.0</version>
    <time>1697390845</time>
    <user>anag+factory</user>
    <comment>- Update to 0.7.0
  * feat(experimental)!: Require include in _get_anywidget_state
    signature (#317)
  * Allows implementors to avoid re-serializing fields which aren't
    needed to send to the front end. This is a BREAKING change
    because it requires implementors of _get_anywidget_state to
    account for include in the function signature.</comment>
    <requestid>1117777</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>acbcce48067e28467442c04bd9f61466</srcmd5>
    <version>0.7.1</version>
    <time>1701121374</time>
    <user>anag+factory</user>
    <comment>- Update to 0.7.1
  * feat: Raise Python error when file is missing (#345)
</comment>
    <requestid>1128955</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>3214676d972668e6bc23fa33eba57c50</srcmd5>
    <version>0.8.0</version>
    <time>1703527542</time>
    <user>anag+factory</user>
    <comment>- Update to 0.8.0
  * Remove re-export of @anywidget/vite from main package (#398)
  * Breaking change. If using our Vite plugin, please make sure to
    install @anywidget/vite (rather than importing from anywidget
    main package). This change allows us to version the Vite plugin
    and anywidget's core separately.
    
    // vite.config.mjs
    import { defineConfig } from &quot;vite&quot;;
    -- import anywidget from &quot;anywidget/vite&quot;;
    ++ import anywidget from &quot;@anywidget/vite&quot;;
    
    If you are already using @anywidget/vite, there are no changes
    necessary.</comment>
    <requestid>1134918</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>30f1ea3a1f5c184e29d1765254d41358</srcmd5>
    <version>0.8.1</version>
    <time>1705875016</time>
    <user>anag+factory</user>
    <comment>- Update to 0.8.1
  * fix: Skip Promise serialization for ipywidget's layout/style
    traits (#412)</comment>
    <requestid>1140282</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>26b030145431abe984732517a87e3ef2</srcmd5>
    <version>0.9.0</version>
    <time>1707662767</time>
    <user>anag+factory</user>
    <comment>- Update to 0.9.0
  * Require ANYWIDGET_HMR to opt-in to HMR during development
  * Introduce front-end widget lifecycle methods (#395)
  * Deprecation Notice: Exporting a render from the front-end
    widget will trigger a deprecation notice in the browser
    console. The preferred way to define a widget's front-end code
    is now with a default object export.
  * These methods introduce lifecycle hooks for widget developers:
    - initialize: is executed once in the lifetime of a widget. It
      has access to the only the model to setup non-view event
      handlers or state to share across views.
    - render: is executed once per view, or for each notebook
      output cell. It has access to the model and a unique el DOM
      element. This method should be familiar and is used to setup
      event handlers or access state specific to that view.
  * Fix serialization of layout trait (#426)
- Add anywidget-pr439-py312mock.patch gh#manzt/anywidget#439</comment>
    <requestid>1145690</requestid>
  </revision>
  <revision rev="8" vrev="2">
    <srcmd5>90ea6ad60ce8481f27c8df5e4be726ba</srcmd5>
    <version>0.9.0</version>
    <time>1709762682</time>
    <user>dimstar_suse</user>
    <comment>- Skip python39: no longer supported since ipython 8.19 (through
  ipywidgets)</comment>
    <requestid>1155331</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>cca4e04f904e9da55754fcf65d2895dc</srcmd5>
    <version>0.9.3</version>
    <time>1711714209</time>
    <user>anag+factory</user>
    <comment>- Update to 0.9.3
  * Updated JS dependencies
- Release 0.9.2
  * Add Python 3.12 Support (#441)
  * feat(experimental): Add @dataclass decorator (#222)
  * Add error boundaries with nicer stack traces (#445)
- Release 0.9.1
 * refactor: Use signals for HMR runtime (#438)
- Drop anywidget-pr439-py312mock.patch</comment>
    <requestid>1163384</requestid>
  </revision>
  <revision rev="10" vrev="1">
    <srcmd5>0c5e9eb6b4d5eecc02d61fb77e293222</srcmd5>
    <version>0.9.10</version>
    <time>1715010845</time>
    <user>anag+factory</user>
    <comment>- Update to 0.9.10
  * fix: Bring back anywidget.json to support notebook v6 discovery
    (#553)
- Releases 0.9.4 to 0.9.9
  * Make a blanket _repr_mimbundle_ implementation (#546)
  * experimental Ensure anywidget.experimental.command is called
    with self (#545)
  * experimental Replace invoke timeout with more flexible
    AbortSignal (#540)
  * Refactor AnyWidget command registration (#526)
  * feat: Suppress errors when inspecting widget for commands
    (#522)
  * Add experimental invoke API to call Python functions from the
    front end and (#453) await the response.
  * Bumped dependencies</comment>
    <requestid>1172013</requestid>
  </revision>
  <revision rev="11" vrev="1">
    <srcmd5>f3f52a5aea54246eec028eba9fa2a584</srcmd5>
    <version>0.9.13</version>
    <time>1725211273</time>
    <user>dimstar_suse</user>
    <comment>- Update to 0.9.13
  * Improve legacy ESM deprecation notice with widget provenance
    and Python migration instruction (#609)
- Release 0.9.12
  * Add IPython Cell Magic for HMR (#594). New %%vfile cell magic
    for prototyping widgets in notebooks. Enables syntax
    highlighting and anywidget's Hot Module Replacement (HMR)
    directly within the notebook. Previously, front-end code had to
    be inline strings or file paths, causing loss of widget state
    when editing inline-strings in notebooks. The new %%vfile cell
    magic allows editing front-end code within the notebook with
    live reloading on cell re-execution. Use %%vfile &lt;filename&gt; to
    create a virtual file for either JavaScript or CSS, and use
    vfile:&lt;filename&gt; in _esm or _css attributes of an AnyWidget
    subclass to reference the virtual file. Anywidget applies HMR
    updates automatically on cell re-execution.
- Release 0.9.11
  * Relax version pinning for anywidget front end (#521)
  * Adopted ~major.minor.* notation for more flexible version
    compatibility in the front end, mirroring practices improve
    compatability in environments where bumping the front-end
    versions is not possible for end users (i.e., JupyterHub). This
    change is intended to enhance adaptability without causing
    disruptions. If issues arise, please report them on our issues
    page.</comment>
    <requestid>1197745</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>a6767e11f14cef796d9a2e7141b2d08c</srcmd5>
    <version>0.9.18</version>
    <time>1750683793</time>
    <user>anag_factory</user>
    <comment>- Update to 0.9.18
  * experimental Fix descriptor API to send initial state on comm
    creation (#832)
  * Refactor: Manage front-end HMR runtimes with web
    AbortController (#826)
  * Improve robustness of HMR file watching (#831)
  * Handles cases where atomic saves (e.g. by VS Code) temporarily
    delete and replace the file. The watcher now ensures the file
    does not exist on Change.delete events, preventing unexpected
    drops in hot reload behavior.
  * Fix: Use temporary polyfill for Promise.withResolvers for
    Safari compat (#824)
  * Move @anywidget/types from devDependencies to dependencies
    (#812)
  * Comm messages sent quickly after the creation of a widget could
    be lost because custom widgets' models were loaded
    asynchronously (#804)</comment>
    <requestid>1287577</requestid>
  </revision>
</revisionlist>
