<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>7ad6a3691ce2824f27ec200ece70b898</srcmd5>
    <version>0.6.3</version>
    <time>1694113984</time>
    <user>anag+factory</user>
    <comment>- Initial release of 0.6.3.</comment>
    <requestid>1109382</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>2bc323e756242e6c8fe4e45efc433c0c</srcmd5>
    <version>0.6.5</version>
    <time>1695664953</time>
    <user>anag+factory</user>
    <comment>- Update to 0.6.5
  * fix: disable auto-reloading in dist-packages (#276)
  * When the package is located in dist-packages, auto-reloading is
    now disabled. This prevents unnecessary warnings when the
    package is used in environments like Google Colab which are
    likely non-development installs.
- Release 0.6.4
  * fix: Keep support for binary traitlets (#274)
  * Uses structuredClone to ensure binary data is automatically
    serialized, correctly. Applies changes reverted in ipywidgets
    8.1.1.</comment>
    <requestid>1113219</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>7717db271f805029bbdfcee9c630dc8c</srcmd5>
    <version>0.7.0</version>
    <time>1697390845</time>
    <user>anag+factory</user>
    <comment>- Update to 0.7.0
  * feat(experimental)!: Require include in _get_anywidget_state
    signature (#317)
  * Allows implementors to avoid re-serializing fields which aren't
    needed to send to the front end. This is a BREAKING change
    because it requires implementors of _get_anywidget_state to
    account for include in the function signature.</comment>
    <requestid>1117777</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>acbcce48067e28467442c04bd9f61466</srcmd5>
    <version>0.7.1</version>
    <time>1701121374</time>
    <user>anag+factory</user>
    <comment>- Update to 0.7.1
  * feat: Raise Python error when file is missing (#345)
</comment>
    <requestid>1128955</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>3214676d972668e6bc23fa33eba57c50</srcmd5>
    <version>0.8.0</version>
    <time>1703527542</time>
    <user>anag+factory</user>
    <comment>- Update to 0.8.0
  * Remove re-export of @anywidget/vite from main package (#398)
  * Breaking change. If using our Vite plugin, please make sure to
    install @anywidget/vite (rather than importing from anywidget
    main package). This change allows us to version the Vite plugin
    and anywidget's core separately.
    
    // vite.config.mjs
    import { defineConfig } from &quot;vite&quot;;
    -- import anywidget from &quot;anywidget/vite&quot;;
    ++ import anywidget from &quot;@anywidget/vite&quot;;
    
    If you are already using @anywidget/vite, there are no changes
    necessary.</comment>
    <requestid>1134918</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>30f1ea3a1f5c184e29d1765254d41358</srcmd5>
    <version>0.8.1</version>
    <time>1705875016</time>
    <user>anag+factory</user>
    <comment>- Update to 0.8.1
  * fix: Skip Promise serialization for ipywidget's layout/style
    traits (#412)</comment>
    <requestid>1140282</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>26b030145431abe984732517a87e3ef2</srcmd5>
    <version>0.9.0</version>
    <time>1707662767</time>
    <user>anag+factory</user>
    <comment>- Update to 0.9.0
  * Require ANYWIDGET_HMR to opt-in to HMR during development
  * Introduce front-end widget lifecycle methods (#395)
  * Deprecation Notice: Exporting a render from the front-end
    widget will trigger a deprecation notice in the browser
    console. The preferred way to define a widget's front-end code
    is now with a default object export.
  * These methods introduce lifecycle hooks for widget developers:
    - initialize: is executed once in the lifetime of a widget. It
      has access to the only the model to setup non-view event
      handlers or state to share across views.
    - render: is executed once per view, or for each notebook
      output cell. It has access to the model and a unique el DOM
      element. This method should be familiar and is used to setup
      event handlers or access state specific to that view.
  * Fix serialization of layout trait (#426)
- Add anywidget-pr439-py312mock.patch gh#manzt/anywidget#439</comment>
    <requestid>1145690</requestid>
  </revision>
  <revision rev="8" vrev="2">
    <srcmd5>90ea6ad60ce8481f27c8df5e4be726ba</srcmd5>
    <version>0.9.0</version>
    <time>1709762682</time>
    <user>dimstar_suse</user>
    <comment>- Skip python39: no longer supported since ipython 8.19 (through
  ipywidgets)</comment>
    <requestid>1155331</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>cca4e04f904e9da55754fcf65d2895dc</srcmd5>
    <version>0.9.3</version>
    <time>1711714209</time>
    <user>anag+factory</user>
    <comment>- Update to 0.9.3
  * Updated JS dependencies
- Release 0.9.2
  * Add Python 3.12 Support (#441)
  * feat(experimental): Add @dataclass decorator (#222)
  * Add error boundaries with nicer stack traces (#445)
- Release 0.9.1
 * refactor: Use signals for HMR runtime (#438)
- Drop anywidget-pr439-py312mock.patch</comment>
    <requestid>1163384</requestid>
  </revision>
</revisionlist>
