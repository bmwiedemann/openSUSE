-------------------------------------------------------------------
Wed Jan  4 22:18:00 UTC 2023 - Dirk Müller <dmueller@suse.com>

- update to 2.8.8:
  * Fix warnings from running tests in randomized order 
  * Update pydata-sphinx-theme 
  * update secutiry link to tidelift 
  * Update numpydoc 
  * Support Python 3.11 
  * Minor updates to expanders generator tests 
  * Add missing asserts to tests 
  * fixes #6036 
  * Improve test coverage expanders line graph generators solved (PR for issue #6034) 
  * Replace .A call with .toarray for sparse array in example. 
  * Improve test coverage for algorithms/richclub.py 
  * Tested boykov_kolmogorov and dinitz with cutoff 
  * Improve test coverage for multigraph class 
  * Improve test coverage for algorithms in dominating_set.py (PR for issue 6032) 
  * Improve test coverage for graph class 
  * added coverage in generators/tree.py 
  * DOC: Specifically branch off main, instead of current branch 
  * Improve test coverage for multidigraph class 
  * Improve test coverage for digraph class 
  * Improve test coverage for algorithms in dispersion.py 
  * Test on Python 3.11 
  * Improve test coverage in algorithms shortest paths unweighted.py 
  * Increased test coverage algorithms/matching.py 
  * Renamed test functions in test_lowest_common_ancestors 
  * Increase covering coverage 
  * Add example for fiedler_vector 
  * Improve test coverage for cycles.py 
  * Added an example in all_pairs_node_connectivity  
  * Amount of nodes and edges have mistakes when reading adjlist file 

-------------------------------------------------------------------
Sun Oct  2 09:32:51 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 2.8.7:
  * Fixed unused root argument in has_bridges (#5846)
  * docstring updates for `union`, `disjoint_union`, and `compose` (#5892)
  * Updated networkx/classes/function.py . Solves Issue #5463 (#5474)
  * Improved documentation for all_simple_paths (#5944)
  * Change is_path to return False when node not in G instead of raising exception (#5943)
  * Minor docstring touchups and test refactor for `is_path` (#5967)
  * Update documentation header links for latest pydata-sphinx-theme (#5966)
  * Fix failing example due to mpl 3.6 colorbar. (#5994)
  * Add Tidelift security vulnerability link (#6001)
  * Update linters (#6006)
  * ``is_path`` used to raise a `KeyError` when the ``path`` argument contained
    a node that was not in the Graph. The behavior has been updated so that
    ``is_path`` returns `False` in this case rather than raising the exception.

-------------------------------------------------------------------
Sat Sep 10 13:23:22 UTC 2022 - Arun Persaud <arun@gmx.de>

- update to version 2.8.6:
  * Highlights
    + Minor documentation and bug fixes.
  * Merged PRs
    + Add random_spanning_tree to documentation (#5810)
    + DOC: Switch to enumerated list in quotient_graph docstring
      (#5837)
    + Add warning to nx_agraph about layout nondeterminism. (#5832)
    + Update docs to include description of the return_seen kwarg
      (#5891)
    + Add cache reset for when G._node is changed (#5894)
    + Allow classes to relabel nodes – casting (#5903)
    + Update lattice.py (#5914)
    + Add to about_us.rst (#5919)
    + Update precommit hooks (#5923)
    + Remove old Appveyor cruft (#5924)
    + signature change for node_link functions: for issue #5787
      (#5899)
    + Allow unsortable nodes in approximation.treewidth functions
      (#5921)
    + Fix Louvain_partitions by yielding a copy of the sets in the
      partition gh-5901 (#5902)
    + Adds `nx.bfs_layers` method (#5879)
    + Add function bfs_layers to docs (#5932)
    + Propose to make new node_link arguments keyword only. (#5928)
    + Bump nodelink args deprecation expiration to v3.2 (#5933)
    + Add examples to lowest common ancestors algorithms (#5531)
    + Naive lowest common ancestor implementation (#5736)
    + Add examples for the condensation function (#5452)
    + Minor doc fixups (#5868)
    + update all_pairs_lca docstrings (#5876)
    + Improve LCA input validation (#5877)
    + Replace LCA with naive implementations (#5883)
    + Update release notes
    + docstring update to lexicographical_topological_sort issue 5681
      (#5930)
    + Support matplotlb 3.6rc1 failure (#5937)
  * Improvements
    + [#5883] Replace the implementation of lowest_common_ancestor and
      all_pairs_lowest_common_ancestor with a “naive” algorithm to fix
      several bugs and improve performance.

-------------------------------------------------------------------
Sun Aug 14 14:22:33 UTC 2022 - Arun Persaud <arun@gmx.de>

- specfile:
  * set required python version to >= 3.8
  * update version of requirements

- update to version 2.8.5:
  * Check that nodes have “pos” attribute in geometric_edges (#5707)
  * Correct louvain formula, solve infinite loops (#5713)
  * Add more comprehensive tests for pydot (#5792)
  * Compute is_strongly_connected lazily (#5793)
  * Compute is_weakly_connected lazily (#5795)
  * Updated astar docstring (#5797)
  * Fix typo in bipartite closeness_centrality and thought-o in tests
    (#5800)
  * Fix pydot colon check node-to-str conversion (#5809)
  * Temporary fix for failing tests w/ scipy1.9. (#5816)
  * Update distance parameter description. (#5819)
  * Fix #5817 (#5822)
  * Attempt to reverse slowdown from hasattr needed for
    cached_property (#5836)
  * Update tests in base class and simple rename in convert.py (#5848)
  * Move factory attributes to the class instead of instance. (#5850)
  * Point to the latest URL for the description. (#5852)
  * Gallery example: Morse code alphabet as a prefix tree (#5867)
  * make lazy_import private and remove its internal use (#5878)
  * Run CI against v2.8 branch
  * CI: add explicit path while installing pygraphviz wheels on macOS
    in GHA (#5805)
  * Deploy docs on v2.8 branch

- changes from version 2.8.4:
  * Clean up maximal_independent_set tests (#5567)
  * MAINT: Cleanup centrality module, remove unused variables (#5308)
  * importorskip scipy instead of numpy for total spanning tree
    (#5693)
  * Add initial_graph parameter to scale_free_graph and deprecate
    create_using (#5697)
  * Add docstring example for attr transfer to linegraph. (#5698)
  * Update ISMAGS.analyze_symmetry docstring. (#5696)
  * Add default value p=2 for minkowski distance metric. (#5700)
  * Update inline code to inline math in docstring (#5701)
  * Update multigraph docstrings to reflect remove_edges_from
    behavior. (#5699)
  * Update simple_cycles docstring w/ yields and examples (#5709)
  * Chromatic polynomial (#5675)
  * Catch ‘:’ explicitly while working with pydot (#5710)
  * Revert “Add workaround for pytest failures on 3.11b2” (#5717)
  * Default to lightmode for documentation (#5715)
  * Dont compute all biconnected components in is_biconnected()
    (#5688)
  * Some more changes to make pytest-randomly happy (#5719)
  * Add durations flag to coverage run on CI. (#5718)
  * Recover order of layers in multipartite_layout when layers are
    sortable (#5705)
  * Update doc requirements (#5711)
  * Touchups to MG and MDG edges docstrings. (#5708)
  * Add PendingDeprecation for pydot (#5721)
  * Add example of topo_order kwarg to dag_longest_path (#5728)
  * CI: add pytest-randomly workflow. (#4553)

- changes from version 2.8.3:
  * Update release process
  * added example to closeness.py (#5645)
  * Extract valid kwds from the function signature for draw_networkx_*
    (#5660)
  * Error out when pydot fails to correctly parse node names (#5667)
  * Remove redundant py2 numeric conversions (#5661)
  * Correcting a typo in the references (#5677)
  * Add workaround for pytest failures on 3.11-beta2 (#5680)
  * Moved random_spanning_tree to public API (#5656)
  * More tests for clustering (upstreaming from graphblas-algorithms)
    (#5673)
  * Remove unused logic in nonisomorphic_trees (#5682)
  * equitable_coloring: Get lazily first item instead of creating
    whole list (#5668)
  * Update subgraph views tests to pass with out of order execution
    (#5683)
  * Use isort with pre-commit to enforce import guidelines (#5659)
  * ignore isort commit from git blame (#5684)
  * Another catch by pytest-randomly (#5685)
  * Remove unused file from utils.test (#5687)
  * Update release requirements (#5690)
  * Update developer requirements (#5689)
  * Fix old release notes

-------------------------------------------------------------------
Sat Jun  4 17:48:20 UTC 2022 - Dirk Müller <dmueller@suse.com>

- update to 2.8.2:
  * Fix doc deploy
  * Bump release version
  * MAINT: Update dfs_test with more comprehensive tests (#5654)
  * Bump release version
  * Fix __setstate__ for OutEdgeView subclasses, read _adjdict from state (#5657)
  * Add examples & improve documentation of voterank (#5500)
  * Change default value of arrowstyle for undirected graphs (#5514)
  * added edge labels in weighted graph (#5521)
  * Added examples in is_forest() and is_tree() (#5524)
  * a hack to force self edges to be ignored on the first node inspected (#5516)
  * De-Regression: eagerly evaluate not_implemented_for in decorated generators (#5537)
  * Improve documentation of PlanarEmbedding class (#5523)
  * PlanarEmbedding in autosummary instead of autoclass. (#5548)
  * Added examples in tournament and tree functions (#5536)
  * Fixup PlanarEmbedding See Also (#5556)
  * Fix min_edge_cover in special cases (#5538)  and correct documentation (#5549)
  * Add is_planar function.  Solves issue #5109 (#5544)
  * Improve bridges documentation (#5519)
  * fix greedy_modularity when multiple components exist. (#5550)
  *  Fix issue probably-meant-fstring found at https://codereview.doctor (#5574)
  * MAINT: Fix sphinx build errors and warnings (#5571)
  * replace induced_subgraph example with directly relevant example (#5576)
  * Add examples to compose operation (#5583)
  * Fix reference in label_propagation_communities docstring (#5588)
  * Use sets instead of lists for collecting flowfuncs in tests. (#5589)
  * Update .degree() docs: outdated return type (#5529)
  * Update numpydoc (#5580)
  * Add a space in an error (#5601)
  * improve docstring for read_doc, see issue #5604 (#5605)
  * Cache `nodes` property on Graph (#5600)
  * Fixes #5403: Errors on non-distinct bipartite node sets (#5442)
  * Added documentation for branching_weight() solving issue #5553 (#5558)
  * Distance measures example (#5608)
  * Corrected the documentation of find_negative_cycle() solving issue #5610 (#5613)
  * Added examples in connected and strongly connected functions (#5559)
  * Update GH actions (#5622)
  * Remove `_mat_spect_approx` in favor of simpler procedure (#5624)
  * Replace np.flip with indexing in layouts. (#5623)
  * Cache edges, degree, adj properties of Graph classes (#5614)
  * Disallow isolated nodes for Eulerian Path (#5616)
  * Fix triadic census (#5575)
  * Adjust the usage of nodes_or_number decorator (#5599)
  * Use new ubunut LTS release (#5630)
  * Build docs with Py 3.9 (#5632)
  * added example on moral graph (#5633)
  * Added examples in weakly_connected.py (#5593)
  * Designate 2.8.1rc1 release
  * Bump release version
  * Rm unnecessary input validation from moral_graph. (#5638)
  * DOC: fix up links, remove references to directed graphs, add proper cites (#5635)
  * Added example under unary operators (#5625)
  * Added docstring examples to matching functions (#5617)
  * doc: fix typos in docstring and comment (#5647)
  * DOC: remove note re: non-existant param (#5648)
  * added examples to covering.py (#5646)
  * added examples on chain decomposition (#5641)
  * Fix typo (#5652)
  * Add Generator support to create_py_random_state. (#5380)
  * modulartiy_max: introduce enforce_n_communities parameter (#5227)
  * First draft. (#5359)
  * Updated MultiDiGraph documentation to include more examples of actually (#5387)
  * Multigraph docs update (#5389)
  * Updates to greedy_modularity_communities docs (#5390)
  * Finish up NXEP 4 first draft (#5391)
  * Correct typo in docstring (int -> float) (#5398)
  * DOC: examples code blacks needs a blank line (#5401)
  * Add support for multigraphs to nx.bridges. (#5397)
  * Update extrema bounding method for compute="eccentricities" parameter (#5409)
  * Add Tutte polynomial (#5265)
  * Update sparse6 urls to use https (#5424)
  * Deprecate extrema bounding (#5422)
  * Add NXEP4 to developer toctree and fix broken links (#5420)
  * Rm _inherit_doc - default behavior as of Python 3.5. (#5416)
  * Minor improvements from general code readthrough (#5414)
  * Ignore formatting changes with black, pep8 for git blame (#5405)
  * Deprecate dict to numpy helpers (#5427)
  * Deprecate `to_tuple` (#5430)
  * Fix average_neighbor_degree calculations for directed graph (#5404)
  * Parametrize tutte polynomial tests (#5431)
  * Update black (#5438)
  * Ignore black formatting (#5440)
  * Update sphinx (#5439)
  * Use https links for conference.scipy.org (#5441)
  * Don't use graph6 with directed graphs (#5443) (#5444)
  * Fix min_weight_matching to convert edge weights without reciprocal (#5394)
  * Make sympy extra dep (#5454)
  * Optimize prim for mst (#5455)
  * Adding more examples for to_numpy_array method's usage (#5451)
  * MAINT: Prim MST test didn't pass algorithm name to all unit tests (#5457)
  * Fixed wrong dict factory usage on MultiDiGraph (#5456)
  * added extra condition for fancy arrow colors (#5407)
  * Update dependencies (#5468)
  * Update release notes
  * Designate 2.8rc1 release
  * Bump release version
  * DOCS: add some guidelines for references (#5476)
  * Fix for issue 5212 (#5471)
  * shortest_path() example (#5491)
  * Rm incorrect reference from spiral_layout docstring. (#5503)
  * Improve docstring for bethe_hessian_matrix (#5458)
  * Add notes about NumPy/SciPy integration to NX 2->3 migration guide (#5505)
  * Run black on docs (#5513)
  * Support `comments=None` in read/parse edgelist (#5051)
  * Add see also refs to de/stringizers in gml docstrings. (#5053)
  * Add weisfeiler lehman subgraph hashing (#4946)
  * Deprecate `random_state` decorator (#5055)
  * Bug fix for issue #5023 :  corner-case bug in single_source_dijkstra (#5033)
  * More informative GraphML exceptions (#5058)
  * Minor updates to tutorial.rst and add docstring for data method of nodes/edges (#5039)
  * Document `geometric_edges` and add it to main namespace (#5045)
  * Fix small typo in `trophic_levels` documentation (#5087)
  * Refactor `transitive_closure` (#5052)
  * Fix fast_gnp_random_graph for directed graphs (issue #3389) (#5077)
  * Get number of edges by calling the proper method (#5095)
  * Update mentored projects section in docs (#5056)
  * Parametrize shortest path node-checking tests. (#5078)
  * Create FUNDING.yml
  * Deprecate union name param (#5114)
  * Update FUNDING.yml
  * vertex_cover: Added support for self-loop nodes (#5104)
  * Update core dev team (#5119)
  * Faster operators in algorithms/operators/all.py (#5121)
  * DOC: Add links to proposals for completed projects (#5122)
  * Consistent return type in dictionary output of rescale_layout and rescale_layout_dict (#5091)
  * Change exception varname e to err (#5130)
  * minor tweaks in assortativity docs and code (#5129)
  * Allow edge style to be a list of styles for DiGraphs (#5131)
  * Add examples and minor documentaion refactor for operators/binary.py (#5099)
  * Improve random graphs test suite for gnp generators (issue #5092) (#5115)
  * Add note about checking for path existence to all_simple_paths. (#5059)
  * Fix message of raised exception in decorators. (#5136)
  * Refactor linestyle test for FancyArrowPatches. (#5132)
  * Drop Py37 (#5143)
  * Use math.hypot (#5145)
  * Add pyupgrade to pre-commit (#5146)
  * Test on Python 3.10 (#4807)
  * Use black 21.9b0 (#5148)
  * Use sphinx 4.2 (#5150)
  * Update example requirements (#5151)
  * Update nx_pylab drawing edge color and width tests (#5134)
  * Refactor node_classification to improve conciseness and readability (#5144)
  * Add temporary pyparsing pin to fix CI. (#5156)
  * Add option for arrowsize to be a list (#5154)
  * List policies (#5159)
  * Bugfix for issue 5123 (#5153)
  * Test scipy and pandas on py3.10 (#5174)
  * Deprecate `hmn` and `lgc` modules from the `node_classification` package (#5166)
  * Rm passing ax.transOffset to LineCollection. (#5173)
  * Add a function to find the negative cycle using bellman_ford (#5089)
  * Add a Q&A to the contributor FAQ about algorithm acceptance policy. (#5177)
  * DOC: Fix typo in docs for weighted shortest paths (#5181)
  * Revert "Add temporary pyparsing pin to fix CI. (#5156)" (#5180)
  * Only compute shortest path lengths when used (#5183)
  * Add Mypy type checking infrastructure (#5127)
  * xfail pydot tests. (#5187)
  * Remove unused internal solver from algebraicconnectivity (#5190)
  * Remove check/comment for scipy 1.1 behavior. (#5191)
  * Test on Python 3.10 (#5185)
  * Add regression test for ancestors/descedants w/ undir. G. (#5188)
  * Rm internal function, use advanced indexing instead. (#5197)
  * Fix missing import + tests in laplacian fns. (#5194)
  * Investigate pre-release test failures (#5208)
  * Rm assertion method in favor of assert statements. (#5214)
  * Remove unused variable in mycielski.py (#5210)
  * used queue instead of ordinary list (#5217)
  * Add FutureWarning about matrix->array output to `google_matrix` (#5219)
  * A few `np.matrix` cleanups (#5218)
  * Rm internal laplacian in favor of laplacian_matrix. (#5196)
  * [MRG] Create plot_subgraphs.py example (#5165)
  * Add traveling salesman problem to example gallery (#4874)
  * Fixed inconsistent documentation for nbunch parameter in DiGraph.edges() (#5037)
  * Compatibility updates from testing with numpy/scipy/pytest rc's (#5226)
  * Replace internal `close` fn with `math.isclose`. (#5224)
  * Fix Python 3.10 deprecation warning w/ int div. (#5231)
  * Touchups and suggestions for subgraph gallery example (#5225)
  * Use new package name (#5234)
  * Allowing None edges in weight function of bidirectional Dijkstra (#5232)
  * Add an FAQ about assigning issues. (#5182)
  * Update dev deps (#5243)
  * Update minor doc issues with tex notation (#5244)
  * Minor changes to speed up asynchronous label propagation for community detection. (#5247)
  * Docstrings for the small.py module (#5240)
  * Use scipy.sparse array datastructure (#5139)
  * Update sphinx (#5272)
  * Update year (#5273)
  * Update extra dependencies (#5263)
  * Update gexf website link in documentation (#5275)
  * Update numpydoc (#5274)
  * Initial setup of lazy_import functions. (#4909)
  * Deprecate scipy sparse matrix conversion functions (#5262)
  * Fix lowest_common_ancestors (issue #4942) (#5086)
  * Make small graph generator node test more specific. (#5282)
  * Use from_dict_of_lists instead of make_small_graph in generators.small (#5267)
  * Refactor `to_numpy_array` with advanced indexing (#5250)
  * Fix: Update louvain_partitions for threshold (update mod to new_mod in each level) (#5284)
  * Add exception for unconnected graph (#5287)
  * Fixing Tarjan's strongly connected components algorithm implementation to have `O(|E|+|V|)` time complexity instead of `O(|V|^3)`. (#5288)
  * Add weights to karate club graph (#5285)
  * Fix functions appearing in variables `__all__` but not in docs for NX2.7 (#5289)
  * Update to stable version of black (#5296)
  * Add FutureWarning to `attr_matrix` to notify users of return type change (#5300)
  * DOC: change status to accepted for NXEP2, add resolution (#5297)
  * Update test requirements (#5304)
  * Update scipy (#5276)
  * DOC: Update documentation to include callables for weight argument (#5307)
  * Update pygraphviz (#5314)
  * Document default dtype in to_numpy_recarray docstring. (#5315)
  * Rm unused AbstractSet. (#5317)
  * Deprecate `make_small_graph` and `make_small_undirected_graph` (#5283)
  * Update `draw_<layout>` docstrings with usage examples (#5264)
  * More numpy.matrix cleanups for NX2.7 (#5319)
  * MAINT: Cleanup assortativity module, remove unused variables (#5301)
  * Add informative exception for drawing multiedge labels. (#5316)
  * Potential resolution to full paths to functions in docs (#5049)
  * MAINT: Cleanup link analysis module, remove unused variables (#5306)
  * Use pytest-mpl (#4579)
  * Keep omega within [-1, 1] bounds (#5216)
  * Add support for finding maximal cliques containing a set of nodes (#5172)
  * MAINT: Remove unnecessary helper functions, use inbuilt methods for line graph generator (#5327)
  * sampling from dict_keys objects is deprecated. (#5337)
  * Add support for `numpy.random.Generator` (#5336)
  * Update matching functions for error validation and speed (#4897)
  * Update release requirements (#5338)
  * Add structured dtypes to `to_numpy_array` (#5324)
  * Deprecate `to_numpy_recarray` (#5330)
  * First pass at 2.7 release notes. (#5342)
  * Add pickle and yaml migration info (#5345)
  * Deprecate info (#5341)
  * Fix pandas warning (#5346)
  * Test on 3.11-dev (#5339)
  * Designate 2.7rc1 release
  * Bump release version
  * Update release process (#5348)
  * Update mentored project info with the expected time commitment (#5349)
  * Use np.random.default_rng in example + other updates. (#5356)
  * Remove stuff conda doesn't support (#5361)
  * Fix spiral_layout when equidistant=True (#5354)
  * Fix docs (#5364)
- drop xfail-pydot-tests.patch, obsolete

-------------------------------------------------------------------
Tue Feb 22 10:01:47 UTC 2022 - Dirk Müller <dmueller@suse.com>

- skip pydot tests for older dists 

-------------------------------------------------------------------
Tue Dec  7 08:06:03 UTC 2021 - Steve Kowalik <steven.kowalik@suse.com>

- Add patch xfail-pydot-tests.patch:
  * From upstream, survive pydot test failures.

-------------------------------------------------------------------
Wed Oct 13 22:37:10 CEST 2021 - Fabrice Bauzac <noon@mykolab.com>

- update to 2.6.3:
  * Fix modularity functions (gh#networkx/networkx#5072)
  * CI/MAINT: drop gdal tests (gh#networkx/networkx#5068)
  * modularity_max: provide labels to get_edge_data (gh#networkx/networkx#4965)
  * Improvements to greedy_modularity_community (gh#networkx/networkx#4996)
  * use weight arg instead of 'weight' key at greedy_modularity_communities()
  * modularity_max: breaking the loop when given community size is reached (gh#networkx/networkx#4950)
  * modularity_max: allow input of desired number of communities
  * greedy_modularity_communities with digraphs and multi(di)graphs (gh#networkx/networkx#5007) (gh#networkx/networkx#5007)
  * Allow greedy_modularity_communities to use floating point weights or resolution (gh#networkx/networkx#5065)
  * change i,j,k notation to u,v,w (no indexes since gh#networkx/networkx#5007)

-------------------------------------------------------------------
Mon Aug  2 07:28:15 UTC 2021 - Dirk Müller <dmueller@suse.com>

- require pandas 

-------------------------------------------------------------------
Wed Jul 28 23:30:34 UTC 2021 - Dirk Müller <dmueller@suse.com>

- update to 2.6.2:
  * This release is the result of 11 months of work with over 363 pull requests by
    91 contributors. Highlights include:

  * Dropped support for Python 3.6.
  * NumPy, SciPy, Matplotlib, and pandas are now default requirements.
  * NetworkX no longer depends on the library "decorator".
  * Improved example gallery
  * Removed code for supporting Jython/IronPython
  * The __str__ method for graph objects is more informative and concise.
  * Improved import time
  * Improved test coverage
  * New documentation theme
  * Add functionality for drawing self-loop edges
  * Add approximation algorithms for Traveling Salesman Problem
- drop 0001-Replace-hash-function-for-test-of-weighted-astar.patch,
  yaml-loader.patch (merged upstream)

-------------------------------------------------------------------
Tue May 18 21:51:38 UTC 2021 - Dirk Müller <dmueller@suse.com>

- update to 2.5.1:
  * pin requirements

-------------------------------------------------------------------
Tue Feb 23 18:12:59 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Refine the optional test dependencies. We want to test python39 
  in the future.

-------------------------------------------------------------------
Sat Feb 20 05:07:31 UTC 2021 - John Vandenberg <jayvdb@gmail.com>

- Re-enable Python 3.6 builds without optional dependencies
- Add test dependencies lxml, pandas and pygraphviz

-------------------------------------------------------------------
Mon Feb  1 14:05:38 UTC 2021 - Benjamin Greiner <code@bnavigator.de>

- Disable python36 build for good. Next up is SciPy 1.6.0 dropping
  Python 3.6 because of NEP 29.
- Mark the doc package files as doc.

-------------------------------------------------------------------
Sat Jan 30 01:42:49 UTC 2021 - Ben Greiner <code@bnavigator.de>

- Temporarily reenable python36 build until SciPy is updated,
  because the PyYAML fix needs to be merged first

-------------------------------------------------------------------
Wed Jan 27 12:55:26 UTC 2021 - Markéta Machová <mmachova@suse.com>

- Add yaml-loader.patch adding support for new PyYAML

-------------------------------------------------------------------
Mon Jan 18 01:43:05 UTC 2021 - Benjamin Greiner <code@bnavigator.de>

- Skip python36 because of SciPy 1.6.0

-------------------------------------------------------------------
Tue Oct  6 11:47:47 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Add patch from upstream that fixes gh#networkx/networkx#4203)
  * 0001-Replace-hash-function-for-test-of-weighted-astar.patch
- Drop patch that is not needed anymore:
  * disable-test-failing-in-i586.patch

-------------------------------------------------------------------
Fri Sep 11 06:08:25 UTC 2020 - Antonio Larrosa <alarrosa@suse.com>

- Update to 2.5:
  * Highlights:
    + Dropped support for Python 3.5.
    + add Pathlib support to work with files.
    + improve performance.
    + Updated docs and tests.
    + Removed code designed to work with Python 2.
  * New Functions:
    + lukes_partitioning
    + triadic analysis functions
    + functions for trophic levels analysis
    + d_separated
    + is_regular and other regular graph measures
    + graph_hash using Weisfeiler Lehman methods
    + common_neighbor_centrality (CCPA link prediction)
    + max_weight_clique
    + path_weight and is_path
    + rescale_layout_dict
    + junction_tree
  * New generators:
    + paley_graph
    + interval_graph
  * New layouts:
    + multipartite_layout
- To see improvements, API changes and deprecations, please visit:
  https://networkx.github.io/documentation/stable/release/release_2.5.html
- Dropped patches already included by upstream:
  * numpy-38-test.patch
  * matplotlib.patch
  * networkx-pr4012-use-mpl.patch
- Add patch to remove a failing test in i586. The issue was
  submitted to upstream at gh#networkx/networkx#4203:
  * disable-test-failing-in-i586.patch

-------------------------------------------------------------------
Tue Jul 21 16:10:13 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

-  gh#networkx/networkx#4012 networkx-pr4012-use-mpl.patch
   new matplotlib removed keyword argument 'warn' for mpl.use()

-------------------------------------------------------------------
Tue Jul  7 20:31:26 UTC 2020 - Matej Cepl <mcepl@suse.com>

- We don't need to skip TestKatzCentralityDirectedNumpy when we don't
  use -n auto parameter of pytest (gh#networkx/networkx#4030)

-------------------------------------------------------------------
Mon Jun 29 10:01:59 UTC 2020 - Matej Cepl <mcepl@suse.com>

- Skipping over test_subgraph_centrality_big_graph is not
  necessary anymore (gh#networkx/networkx#3304)

-------------------------------------------------------------------
Wed Apr  1 08:38:55 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Add patch to fix matplotlib deprecation:
  * matplotlib.patch
- Skip two tests that keep failing everywhere

-------------------------------------------------------------------
Fri Nov 22 00:41:03 UTC 2019 - steven.kowalik@suse.com

- Drop incorrectly calculated dependency on python33
- Switch to using %pytest macro

-------------------------------------------------------------------
Sun Nov 17 23:53:12 UTC 2019 - Steve Kowalik <steven.kowalik@suse.com>

- Update to version 2.4
  Highlights:
  * Remove deprecated code from 1.x
  * Support for Python 3.8
  * Switched to pytest for testing
  * Last release to support Python 3.5
  * Fifteen new fuctions, including onion decomposition and linear prufing
  * Three new generators, such as a directed joint degree generator
- Add numpy-38-test.patch, to correct test failure under Python 3.8  
- Update URL, upstream changed to tarballs from zipfiles.

-------------------------------------------------------------------
Tue Jul 23 17:28:58 UTC 2019 - Todd R <toddrme2178@gmail.com>

- Update to version 2.3
  Highlights:
  * Dropped support for Python 2. We are no longer supporting Python 2.7 and we will
    start changing code to take advantage of Python 3 features we couldn't before.
  * Added some Moral Graph analysis functions.
  * Enable matplotlib drawing using curved arrows via connectionstyle parameter.
  * Remove ticks and axes labels from matplotlib plots.
  * Two new generators of Harary Graphs.
  * Added Dual Barabasi-Albert model
  * Added VoteRank algorithm
  * Added Equitable coloring algorithms
  * Added planar layout algorithms
  * Les Miserables network example
  * Javascript example update

-------------------------------------------------------------------
Tue Jan 22 11:33:30 UTC 2019 - Matej Cepl <mcepl@suse.com>

- Switch off test_subgraph_centrality_big_graph test, as it leads to
  crashes on i586, gh#networkx/networkx#3304.

-------------------------------------------------------------------
Fri Jan  4 14:41:26 UTC 2019 - Jan Engelhardt <jengelh@inai.de>

- Fix incomplete summary. Trim filler wording from description.

-------------------------------------------------------------------
Wed Jan  2 13:55:25 UTC 2019 - Martin Pluskal <mpluskal@suse.com>

- Update to version 2.2:
  * Add support for Python 3.7. This is the last release to support
    Python 2.
  * Uniform random number generator (RNG) handling which defaults
    to global RNGs but allows specification of a single RNG for all
    random numbers in NX.
  * Improved GraphViews to ease subclassing and remove cyclic
    references which caused trouble with deepcopy and pickle.
  * New Graph method G.update(H)
- Run tests
- Update project url

-------------------------------------------------------------------
Sun Sep  2 17:28:03 UTC 2018 - arun@gmx.de

- specfile:
  * update copyright year
  * removed devel from noarch package

- update to version 2.1:
  * Highlights
    + Arrows for drawing DiGraph edges are vastly improved! And an
      example to show them.
    + More than 12 new functions for graph generation, manipulation
      and/or new graph algorithms.
       o Add a large clique size heuristic function (#2830)
       o Add rooted product function (#2825)
       o Label Propagation Community Detection (#2821)
       o Minimum cycle basis (#2823)
       o Add Mycielski Operator (#2785)
       o Adds prefix_tree, dag_to_branching, and example. (#2784)
       o Add inverse_line_graph generator from #2241 (#2782)
       o Steiner tree and metric closure. (#2252)
       o Add flow based node and edge disjoint paths. (#2063)
       o Update geometric networks with new models (#2498)
       o Graph edit distance (#2729)
       o Added function for finding a k-edge-augmentation (#2572)
    + G.name is no longer processed by graph operators. It remains as
      a property mechanism to access G.graph['name'] but the user is
      in charge of updating or changing it for copies, subgraphs,
      unions and other graph operations.

-------------------------------------------------------------------
Tue Oct 31 03:14:26 UTC 2017 - arun@gmx.de

- specfile:
  * changes from tar.gz to zip
  * updated sed
  * INSTALL doesn't seem to be packaged anymore, deleted "rm" command

- update to version 2.0:
  * Highlights
    + This release is the result of over two years of work with 1212
      commits and 193 merges by 86 contributors. Highlights include:
    + We have made major changes to the methods in the Multi/Di/Graph
      classes. There is a migration guide for people moving from 1.X
      to 2.0.
    + We updated the documentation system.
  * full release notes at
    https://networkx.github.io/documentation/stable/release/release_2.0.html

-------------------------------------------------------------------
Sun Aug  6 04:46:44 UTC 2017 - toddrme2178@gmail.com

- Fix shebangs

-------------------------------------------------------------------
Thu May 11 03:12:50 UTC 2017 - toddrme2178@gmail.com

- Implement single-spec version.
- Fix source URL.

-------------------------------------------------------------------
Wed Aug 17 08:35:56 UTC 2016 - tbechtold@suse.com

update to version networkx-1.11
  * Update release and news info for v1.10.1
  * Use utils.testing to handle testing edge and node equality
  * Update news to include 1.10 release highlights
  * Remove spurious line due to typo.
  * Fix algebraicconnectivity float conversion
  * Fix python3 numpy wont read in {}.values to array.
  * update requirements.txt on v1.11 branch
  * update doc/requirements.txt to point Sphinx-origin_stable
  * Update license, readme, and release.py for networkx-1.11
  * adjust tutorial to mention import write_dot
  * Revert some API changes in layout.py due to bugs.
  * Update news and api for v1.11
  * Update authors, copyrights and EOL space
  * Add release date in news
  * Add tests, convert center to np.array, fix domain_size
  * Put graphviz install outside check for python2.7
  * Activate Appveyor-CI
  * Add layout tests and minor docs
  * networkx-1.11rc2 label
  * Remove all the symbolic links from the 'examples/' directory
  * v1.11 Add utils functions to flow variable __all__
  * Fix Sphinx for v1.11
  * Prepare release number and news.rst for v1.11
  * simplify pydot imports, use testing.utils routines
  * Get the month right.
  * update release docs files for v1.11
  * Use pydotplus for all supported python versions
  * Add note about pyggraphviz and pydotplus import changes
  * Modified release.py
  * change copyright year in doc build
  * For v1.11 drop support for python3.2 and add 3.5
  * Update news.rst for v1.11
  * Examples and doc changes
  * Re-add scaling inside fruchterman_reingold
  * Update conf.py to point to make_examples_rst.py
  * Reinstate v1.10 layout except center. Fix bugs
  * Adjust imports in drawing layouts with graphviz
  * Doc tweak on edges for v1.11

-------------------------------------------------------------------
Sun Mar 13 21:28:48 UTC 2016 - dmueller@suse.com

- add license/readme

-------------------------------------------------------------------
Wed Sep  9 12:32:21 UTC 2015 - tbechtold@suse.com

- update to 1.10:
  * connected_components, weakly_connected_components, and
    strongly_connected_components return now a generator of
    sets of nodes. Previously the generator was of lists of
    nodes. This PR also refactored the connected_components
    and weakly_connected_components implementations making them
    faster, especially for large graphs.
  * The func_iter functions in Di/Multi/Graphs classes are slated
    for removal in NetworkX 2.0 release. func will behave like func_iter
    and return an iterator instead of list. These functions are deprecated
    in NetworkX 1.10 release.
  * A enumerate_all_cliques function is added in the clique package
    (networkx.algorithms.clique) for enumerating all cliques
    (including nonmaximal ones) of undirected graphs.
  * A coloring package (networkx.algorithms.coloring) is created for graph
    coloring algorithms. Initially, a greedy_color function is provided
    for coloring graphs using various greedy heuristics.
  * A new generator edge_dfs, added to networkx.algorithms.traversal, implements
    a depth-first traversal of the edges in a graph. This complements
    functionality provided by a depth-first traversal of the nodes in
    a graph. For multigraphs, it allows the user to know precisely which
    edges were followed in a traversal. All NetworkX graph types are
    supported. A traversal can also reverse edge orientations or ignore them.
  * A find_cycle function is added to the networkx.algorithms.cycles package
    to find a cycle in a graph. Edge orientations can be optionally
    reversed or ignored.
  * Add a random generator for the duplication-divergence model.
  * A new networkx.algorithms.dominance package is added for dominance/dominator
    algorithms on directed graphs. It contains a immediate_dominators
    function for computing immediate dominators/dominator trees and a
    dominance_frontiers function for computing dominance frontiers.
  * The GML reader/parser and writer/generator are rewritten to remove
    the dependence on pyparsing and enable handling of arbitrary graph data.
  * The network simplex method in the networkx.algorithms.flow package is
    rewritten to improve its performance and support multi- and disconnected
    networks. For some cases, the new implementation is two or three orders
    of magnitude faster than the old implementation.
  * Added the Margulis--Gabber--Galil graph to networkx.generators.
  * Added the chordal p-cycle graph, a mildly explicit algebraic construction of
    a family of 3-regular expander graphs. Also, moves both the existing
    expander graph generator function (for the Margulis-Gabber-Galil expander)
    and the new chordal cycle graph function to a new module,
    networkx.generators.expanders.
  * Allow overwriting of base class dict with dict-like: OrderedGraph, ThinGraph,
    LogGraph, etc.
  * Added to_pandas_dataframe and from_pandas_dataframe.
  * Added the Hopcroft--Karp algorithm for finding a maximum cardinality
    matching in bipartite graphs.
  * Expanded data keyword in G.edges and added default keyword.
  * Added support for finding optimum branchings and arborescences.
  * Added a from_pandas_dataframe function that accepts Pandas DataFrames
    and returns a new graph object. At a minimum, the DataFrame must have two
    columns, which define the nodes that make up an edge. However, the function
    can also process an arbitrary number of additional columns as edge
    attributes, such as 'weight'.
  * Expanded layout functions to add flexibility for drawing subsets of nodes
    with distinct layouts and for centering each layout around given coordinates.
  * Added ordered variants of default graph class.
  * Added harmonic centrality to network.algorithms.centrality.
  * The generators.bipartite have been moved to algorithms.bipartite.generators.
    The functions are not imported in the main namespace, so to use it,
    the bipartite package has to be imported.
  * Added Kanevsky's algorithm for finding all minimum-size separating node
    sets in an undirected graph. It is implemented as a generator of node
    cut sets.
  * Added power function for simple graphs
  * Added fast approximation for node connectivity based on White and Newman's
    approximation algorithm for finding node independent paths between two nodes.
  * Added transitive closure and antichains function for directed acyclic graphs
     in algorithms.dag. The antichains function was contributed by Peter Jipsen
     and Franco Saliola and originally developed for the SAGE project.
  * Added generator function for the complete multipartite graph.
  * Added nonisomorphic trees generator.
  * Added a generator function for circulant graphs to the
    networkx.generators.classic module.
  * Added function for computing quotient graphs; also created a new module,
    networkx.algorithms.minors.
  * Added longest_path and longest_path_length for DAG.
  * Added node and edge contraction functions to networkx.algorithms.minors.
  * Added a new modularity matrix module to networkx.linalg, and associated
    spectrum functions to the networkx.linalg.spectrum module.
  * Added function to generate all simple paths starting with the shortest ones
    based on Yen's algorithm for finding k shortest paths at
    algorithms.simple_paths.
  * Added the directed modularity matrix to the
    networkx.linalg.modularity_matrix module.
  * Adds triadic_census function; also creates a new module,
    networkx.algorithms.triads.
  * Adds functions for testing if a graph has weighted or negatively weighted
    edges. Also adds a function for testing if a graph is empty. These are
    is_weighted, is_negatively_weighted, and is_empty.
  * Added Johnson's algorithm; one more algorithm for shortest paths. It solves
    all pairs shortest path problem. This is johnson at
    algorithms.shortest_paths
  * Added Moody and White algorithm for identifying k_components in a graph,
    which is based on Kanevsky's algorithm for finding all minimum-size node
    cut-sets (implemented in all_node_cuts #1391).
  * Added fast approximation for k_components to the
    networkx.approximation package. This is based on White and Newman
    approximation algorithm for finding node independent paths between two
    nodes (see #1405).
  * The legacy ford_fulkerson maximum flow function is removed.
    Use edmonds_karp instead.
  * Support for Python 2.6 is dropped.

-------------------------------------------------------------------
Sat Jul 25 12:36:58 UTC 2015 - seife+obs@b1-systems.com

- fix rhel build by conditionalizing "Recommends:" tags
- do not hardcode /usr/share/doc/packages but use %_docdir

-------------------------------------------------------------------
Wed Apr 29 14:25:15 UTC 2015 - tbechtold@suse.com

- Don't BuildRequires python-pygraphviz. It's not needed.

-------------------------------------------------------------------
Thu Oct 30 10:46:52 UTC 2014 - tbechtold@suse.com

- update to version 1.9.1:
  * Bugfix release for minor installation and documentation issues
- Don't BuildRequire/Recommend matplotlib and scipy on SLE11
  and SLE12. Both are not available there.

-------------------------------------------------------------------
Fri Oct 24 09:35:49 UTC 2014 - toddrme2178@gmail.com

- Add python-decorator in requires to buildrequires

-------------------------------------------------------------------
Mon Sep 15 14:49:41 UTC 2014 - tbechtold@suse.com

- update to version 1.9:
  * The flow package (networkx.algorithms.flow) is completely rewritten
    with backward incompatible changes. It introduces a new interface
    to flow algorithms. Existing code that uses the flow package will
     not work unmodified with NetworkX 1.9.
  * We added two new maximum flow algorithms (preflow_push and
    shortest_augmenting_path) and rewrote All maximum flow algorithm
    implementations (including the legacy ford_fulkerson) output now
    a residual network (i.e., a DiGraph) after computing the maximum
    flow. See maximum_flow documentation for the details on the
    conventions that NetworkX uses for defining a residual network.
  * We removed the old max_flow and min_cut functions. The main entry
    points to flow algorithms are now the functions maximum_flow,
    maximum_flow_value, minimum_cut and minimum_cut_value, which have
    new parameters that control maximum flow computation: flow_func
    for specifying the algorithm that will do the actual computation
    (it accepts a function as argument that implements a maximum flow
    algorithm), cutoff for suggesting a maximum flow value at which the
    algorithm stops, value_only for stopping the computation as soon as
    we have the value of the flow, and residual that accepts as argument
    a residual network to be reused in repeated maximum flow computation.
  * All flow algorithms are required to accept arguments for these parameters
    but may selectively ignored the inapplicable ones. For instance,
    preflow_push algorithm can stop after the preflow phase without computing
    a maximum flow if we only need the flow value, but both edmonds_karp and
    shortest_augmenting_path always compute a maximum flow to obtain the
    low value.
  * The new function minimum_cut returns the cut value and a node partition
    that defines the minimum cut. The function minimum_cut_value returns
    only the value of the cut, which is what the removed min_cut function
    used to return before 1.9.
  * The functions that implement flow algorithms (i.e., preflow_push,
    edmonds_karp, shortest_augmenting_path and ford_fulkerson) are not
    imported to the base NetworkX namespace. You have to explicitly import
    them from the flow package.
  * We also added a capacity-scaling minimum cost flow algorithm: capacity
    scaling. It supports MultiDiGraph and disconnected networks.
- Add python-decorator as Requires

-------------------------------------------------------------------
Mon Dec  9 13:26:37 UTC 2013 - toddrme2178@gmail.com

- Add optional dependencies as Recommends

-------------------------------------------------------------------
Sun Dec  8 13:49:40 UTC 2013 - p.drouand@gmail.com

- Update to version 1.8.1
  + No changelog available

-------------------------------------------------------------------
Tue Jan 31 14:42:25 UTC 2012 - saschpe@suse.de

- Don't package INSTALL.txt and other docs twice

-------------------------------------------------------------------
Thu Jan 12 14:52:26 UTC 2012 - saschpe@suse.de

- Spec file cosmetics

-------------------------------------------------------------------
Wed Jan 11 14:56:08 UTC 2012 - toddrme2178@gmail.com

- Cleaned up spec file
- Renamed package from python-NetworkX to python-networkx to match the module name

-------------------------------------------------------------------
Thu Sep  8 20:27:43 UTC 2011 - alinm.elena@gmail.com

- initial commit 

-------------------------------------------------------------------
Fri Feb  6 00:00:00 UTC 2009 - urs.beyerle@env.ethz.ch

- update to 0.99

-------------------------------------------------------------------
Thu Jun 26 00:00:00 UTC 2008 - ti.eugene@gmail.com

- Initial build
