-------------------------------------------------------------------
Fri Sep 25 09:19:58 UTC 2020 - Benjamin Greiner <code@bnavigator.de>

- require a default ttf font gh#pytest-dev/pytest-qt#317
- move to %pytest macro and use pytest-xvfb plugin
- drop skip-timeout-tests.patch; deselect by pytest -k parameter

-------------------------------------------------------------------
Mon Jan  6 13:07:28 UTC 2020 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 3.3.0:
  * Improve message in uncaught exceptions by mentioning the Qt event loop instead of Qt virtual methods (#255).
  * pytest-qt now requires pytest version >= 3.0.
  * qtbot.addWiget now supports an optional before_close_func keyword-only argument, which if given is a function which is called before the widget is closed, with the widget as first argument.

-------------------------------------------------------------------
Thu Jan 31 09:05:27 UTC 2019 - Tomáš Chvátal <tchvatal@suse.com>

- Update to 3.2.2:
  * Fix Off-by-one error in modeltester (#249). Thanks @ext-jmmugnes for the PR.

-------------------------------------------------------------------
Fri Dec  7 19:04:18 UTC 2018 - Todd R <toddrme2178@gmail.com>

- Update to version 3.2.1
  * Fixed compatibility with PyQt5 5.11.3
- Update to version 3.2.0
  * The ``CallbackBlocker`` returned by ``qtbot.waitCallback()`` now has a new
    ``assert_called_with(...)`` convenience method.
- Update to version 3.1.0
  * If Qt's model tester implemented in C++ is available (PyQt5 5.11 or newer),
    the ``qtmodeltester`` fixture now uses that instead of the Python
    implementation. This can be turned off by passing  ``force_py=True`` to
    ``qtmodeltester.check()``.
  * The Python code used by ``qtmodeltester`` is now based on the latest Qt
    modeltester. This also means that the ``data_display_may_return_none``
    attribute for ``qtmodeltester`` isn't used anymore.
  * New ``qtbot.waitCallback()`` method that returns a ``CallbackBlocker``, which
    can be used to wait for a callback to be called.
  * ``qtbot.assertNotEmitted`` now has a new ``wait`` parameter which can be used
    to make sure asynchronous signals aren't emitted by waiting after the code in
    the ``with`` block finished.
  * The ``qt_wait_signal_raising`` option was renamed to ``qt_default_raising``.
    The old name continues to work, but is deprecated.
  * The docs still referred to ``SignalTimeoutError`` in some places, despite it
    being renamed to ``TimeoutError`` in the 2.1 release. This is now corrected.
  * Improve debugging output when no Qt wrapper was found.
  * When no context is available for warnings on Qt 5, no ``None:None:0`` line is
    shown anymore.
  * The ``no_qt_log`` marker is now registered with pytest so ``--strict`` can be
    used.
  * ``qtbot.waitSignal`` with timeout ``0`` now expects the signal to arrive
    directly in the code enclosed by it.
- Update to version 3.0.2
  * Another fix related to ``QtInfoMsg`` objects during logging (`#225`_).
- Update to version 3.0.1
  * Fix handling of ``QtInfoMsg`` objects during logging (`#225`_).
    Thanks `@willsALMANJ`_ for the report.
- Update to version 3.0.0
  * Removed ``qtbot.mouseEvent`` proxy, it was an internal Qt function which has
    now been removed in PyQt 5.11 (`#219`_). Thanks `@mitya57`_ for the PR.
  * Fix memory leak when tests raised an exception inside Qt virtual methods (`#187`_).
    Thanks `@fabioz`_ for the report and PR.
- Rebase skip-timeout-tests.patch

-------------------------------------------------------------------
Thu May 31 16:01:42 UTC 2018 - toddrme2178@gmail.com

- Update to 2.3.2
  * Use new pytest 3.6 marker API when possible.

-------------------------------------------------------------------
Sun May 13 08:24:32 UTC 2018 - tchvatal@suse.com

- Enable tests
- Add patch skip-timeout-tests.patch to skip test randomly
  failing in OBS

-------------------------------------------------------------------
Sat May 12 16:24:16 UTC 2018 - arun@gmx.de

- specfile:
  * update copyright year

- update to version 2.3.1:
  * PYTEST_QT_API environment variable correctly wins over qt_api ini
    variable if both are set at the same time (#196). Thanks @mochick
    for the PR.

- changes from version 2.3.0:
  * New qapp_args fixture which can be used to pass custom arguments
    to QApplication. Thanks @The-Compiler for the PR.

- changes from version 2.2.1:
  * modeltester now accepts QBrush for BackgroundColorRole and
    TextColorRole (#189). Thanks @p0las for the PR.

- changes from version 2.2.0:
  * pytest-qt now supports PySide2 thanks to @rth!

-------------------------------------------------------------------
Mon Aug 28 17:13:21 UTC 2017 - toddrme2178@gmail.com

- Initial version
