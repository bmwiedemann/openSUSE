Index: DBD-SQLite-1.70/Makefile.PL
===================================================================
--- DBD-SQLite-1.70.orig/Makefile.PL
+++ DBD-SQLite-1.70/Makefile.PL
@@ -129,7 +129,7 @@ SCOPE: {
 # a system sqlite is also sophisticated enough to have a patching system
 # that can change the if ( 0 ) to if ( 1 )
 my ($sqlite_local, $sqlite_base, $sqlite_lib, $sqlite_inc);
-if ( 0 ) {
+if ( 1 ) {
 	require File::Spec;
 	if ( $sqlite_base = (grep(/SQLITE_LOCATION=.*/, @ARGV))[0] ) {
 		$sqlite_base =~ /=(.*)/;
Index: DBD-SQLite-1.70/t/51_table_column_metadata.t
===================================================================
--- DBD-SQLite-1.70.orig/t/51_table_column_metadata.t
+++ DBD-SQLite-1.70/t/51_table_column_metadata.t
@@ -19,7 +19,7 @@ for my $call_func (@CALL_FUNCS) {
 		my $data = $dbh->$call_func(undef, 'foo', 'id', 'table_column_metadata');
 		ok $data && ref $data eq ref {}, "got a metadata";
 		ok $data->{auto_increment}, "id is auto incremental";
-		is $data->{data_type} => 'integer', "data type is correct";
+		is $data->{data_type} => 'INTEGER', "data type is correct";
 		ok $data->{primary}, "id is a primary key";
 		ok !$data->{not_null}, "id is not null";
 	}
