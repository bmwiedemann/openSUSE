<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>e1ce3079067429c989da6608fedcbe86</srcmd5>
    <version>3.9.0b4</version>
    <time>1597855698</time>
    <user>dimstar_suse</user>
    <comment>Packaging is still Alpha, the tarball is still beta, so this is considered technical preview for testing.</comment>
    <requestid>821965</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>c067ef9632df457b17e5e1c95701f81c</srcmd5>
    <version>3.9.0b5</version>
    <time>1597955344</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>827942</requestid>
  </revision>
  <revision rev="3" vrev="2">
    <srcmd5>c937aa7ec99519caf7671bad53367612</srcmd5>
    <version>3.9.0b5</version>
    <time>1598029891</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>828415</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>39b66c5bb67244c9fcc3ad2a39c75984</srcmd5>
    <version>3.9.0rc1</version>
    <time>1599210607</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.9.0rc1:
  * Core and Builtins
      - bpo-38156: Handle interrupts that come after EOF
        correctly in PyOS_StdioReadline.
  * Library
      - bpo-41497: Fix potential UnicodeDecodeError in dis
        module.
      - bpo-41490: Update ensurepip to install pip 20.2.1 and
        setuptools 49.2.1.
      - bpo-41467: On Windows, fix asyncio recv_into() return
        value when the socket/pipe is closed (BrokenPipeError):
        return 0 rather than an empty byte string (b'').
      - bpo-41425: Make tkinter doc example runnable.
      - bpo-41384: Raise TclError instead of TypeError when an
        unknown option is passed to tkinter.OptionMenu.
      - bpo-38731: Fix NameError in command-line interface of
        py_compile.
      - bpo-41317: Use add_done_callback() in
        asyncio.loop.sock_accept() to unsubscribe reader early on
        cancellation.
      - bpo-41364: Reduce import overhead of uuid.
      - bpo-41341: Recursive evaluation of typing.ForwardRef in
        get_type_hints.
      - bpo-41182: selector: use DefaultSelector based upon
        implementation
      - bpo-40726: Handle cases where the end_lineno is None on
        ast.increment_lineno().
  * Documentation
      - bpo-41045: Add documentation for debug feature of
        f-strings.
      - bpo-41314: Changed the release when from __future__
        import annotations becomes the default from 4.0 to 3.10
        (following a change in PEP 563).
  * Windows
      - bpo-41492: Fixes the description that appears in UAC
        prompts.
      - bpo-40948: Improve post-install message to direct people
        to the “py” command.
      - bpo-41412: The installer will now fail to install on
        Windows 7 and Windows 8. Further, the UCRT dependency is
        now always downloaded on demand.
      - bpo-40741: Update Windows release to include SQLite
        3.32.3.
  * IDLE
      - bpo-41468: Improve IDLE run crash error message (which
        users should never see).
      - bpo-41373: Save files loaded with no line ending, as when
        blank, or different line endings, by setting its line
        ending to the system default. Fix regression in 3.8.4 and
        3.9.0b4.
- Synchronize formatting and fixes with python38.
</comment>
    <requestid>831521</requestid>
  </revision>
  <revision rev="5" vrev="2">
    <srcmd5>24e0c223f67fab714a3a99b528a259fc</srcmd5>
    <version>3.9.0rc1</version>
    <time>1601200184</time>
    <user>dimstar_suse</user>
    <comment>- Buildrequire timezone only for general flavor. It's used in this
  flavor for the test suite.</comment>
    <requestid>837378</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>adff90b2a76f28b120681162a77fcf13</srcmd5>
    <version>3.9.0</version>
    <time>1603448495</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>842480</requestid>
  </revision>
  <revision rev="7" vrev="2">
    <srcmd5>18aa4a8fb8ab7305af0236f55971c332</srcmd5>
    <version>3.9.0</version>
    <time>1605450366</time>
    <user>dimstar_suse</user>
    <comment>- Don't require packages which break build on SLE-15 although we really
  don't need them (python3-python-docs-theme and
  python3-sphinxcontrib-qthelp).
</comment>
    <requestid>848385</requestid>
  </revision>
  <revision rev="8" vrev="3">
    <srcmd5>59923093f0694c01cecf35455def9e40</srcmd5>
    <version>3.9.0</version>
    <time>1607349618</time>
    <user>dimstar_suse</user>
    <comment>- Add patch sphinx-update-removed-function.patch to no longer call
  a now removed function and to make documentation build independent of
  the Sphinx version (bsc#1179630, gh#python/cpython#13236).
</comment>
    <requestid>853313</requestid>
  </revision>
  <revision rev="9" vrev="4">
    <srcmd5>e4213780feecab52a70d1e49d20296a3</srcmd5>
    <version>3.9.0</version>
    <time>1607877034</time>
    <user>dimstar_suse</user>
    <comment>- Update sphinx-update-removed-function.patch patch to the latest
  version in python36.
- Last try before this results in an editwar:
  * remove importlib_resources and importlib-metadata 
    provides/obsoletes
  * import importlib_resources is not the same as
    import importlib.resources, same for metadata
  * The backport packages from PyPI needed for older flavors are
    specified as such for setuptools or in pyproject.toml. If a
    package requires them they typically add them with a python
    version qualifier and the packages have their own version
    numbers.
</comment>
    <requestid>855482</requestid>
  </revision>
  <revision rev="10" vrev="5">
    <srcmd5>0f4655140e4c81cfc36a7e6198c9f9f0</srcmd5>
    <version>3.9.0</version>
    <time>1610051005</time>
    <user>dimstar_suse</user>
    <comment>- (bsc#1180125) We really don't Require python-rpm-macros package.
  Unnecessary dependency.
- Make python39-doc building again
- Add no-skipif-doctests.patch, because SLE-15 version of Sphinx
  doesn't know about skipif directive in doctests.
</comment>
    <requestid>860827</requestid>
  </revision>
  <revision rev="11" vrev="6">
    <srcmd5>fe2205371650b5e2902ad94d51fe44bc</srcmd5>
    <version>3.9.0</version>
    <time>1612108341</time>
    <user>dimstar_suse</user>
    <comment>- Add CVE-2021-3177-buf_ovrfl_PyCArg_repr.patch fixing
  bsc#1181126 (CVE-2021-3177) buffer overflow in PyCArg_repr in
  _ctypes/callproc.c, which may lead to remote code execution.
</comment>
    <requestid>868032</requestid>
  </revision>
  <revision rev="12" vrev="1">
    <srcmd5>065a965152451d7d9fbb166452fa03d5</srcmd5>
    <version>3.9.1</version>
    <time>1613511604</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>872780</requestid>
  </revision>
  <revision rev="13" vrev="1">
    <srcmd5>1a0143670f97525534801e460e4463e2</srcmd5>
    <version>3.9.2</version>
    <time>1614274010</time>
    <user>RBrownSUSE</user>
    <comment>- Update to 3.9.2:
  - bpo#42938 (bsc#1181126): Avoid static buffers when computing
    the repr of ctypes.c_double and ctypes.c_longdouble
    values. This issue was assigned CVE-2021-3177.
  - bpo#42967 (bso#1182379): Fix web cache poisoning
    vulnerability by defaulting the query args separator to &amp;,
    and allowing the user to choose a custom separator. This
    issue was assigned CVE-2021-23336.
- Upstreamed patches were removed:
  - CVE-2021-3177-buf_ovrfl_PyCArg_repr.patch
  - bsc1167501-invalid-alignment.patch
  - skip_random_failing_tests.patch
  - CVE-2019-5010-null-defer-x509-cert-DOS.patch
</comment>
    <requestid>874156</requestid>
  </revision>
  <revision rev="14" vrev="2">
    <srcmd5>fa3ad94c9f2f968de24a3add0d7c81e5</srcmd5>
    <version>3.9.2</version>
    <time>1618498596</time>
    <user>dimstar_suse</user>
    <comment>Fix changes file (bso -&gt; bsc abbreviation).</comment>
    <requestid>878395</requestid>
  </revision>
  <revision rev="15" vrev="1">
    <srcmd5>a6991b26779bdcd194ac8e4addb7bd09</srcmd5>
    <version>3.9.4</version>
    <time>1619973320</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.9.4:
  - bpo#43710: Reverted the fix for https://bugs.python.org/issue42500
    as it changed the PyThreadState struct size and broke the 3.9.x ABI
    in the 3.9.3 release (visible on 32-bit platforms using binaries
    compiled using an earlier version of Python 3.9.x headers).
  - bpo#26053: Fixed bug where the pdb interactive run command echoed
    the args from the shell command line, even if those have been
    overridden at the pdb prompt.
  - bpo#42988 (bsc#1183374) CVE-2021-3426: Remove the getfile
    feature of the pydoc module which could be abused to read
    arbitrary files on the disk (directory traversal
    vulnerability). Moreover, even source code of Python modules
    can contain sensitive data like passwords. Vulnerability
    reported by David Schwörer.
  - bpo#43285: ftplib no longer trusts the IP address value
    returned from the server in response to the PASV command by
    default. This prevents a malicious FTP server from using the
    response to probe IPv4 address and port combinations on the
    client network. Code that requires the former vulnerable
    behavior may set a trust_server_pasv_ipv4_address attribute
    on their ftplib.FTP instances to True to re-enable it.
  - bpo#43439: Add audit hooks for gc.get_objects(),
    gc.get_referrers() and gc.get_referents(). Patch by Pablo
    Galindo.
  - bpo#43660: Fix crash that happens when replacing sys.stderr
    with a callable that can remove the object while an exception
    is being printed. Patch by Pablo Galindo.
  - bpo#43555: Report the column offset for SyntaxError for
    invalid line continuation characters. Patch by Pablo Galindo.
  - bpo#43517: Fix misdetection of circular imports when using</comment>
    <requestid>889130</requestid>
  </revision>
  <revision rev="16" vrev="1">
    <srcmd5>653e4dfab3aec5c1f0f50f2a5eb8b822</srcmd5>
    <version>3.9.5</version>
    <time>1620840666</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>890781</requestid>
  </revision>
  <revision rev="17" vrev="2">
    <srcmd5>dae7a41e9a8fc59e491e8ebcfd832f06</srcmd5>
    <version>3.9.5</version>
    <time>1623443397</time>
    <user>dimstar_suse</user>
    <comment>- Revert previous skip over test_capi
- Add skip-test_pyobject_freed_is_freed.patch to skip failing
  test on SLE-15.
- allow build with Sphinx &gt;= 3.x 
- Exclude test_capi on Leap (test fails there)
- Stop providing &quot;python&quot; symbol (bsc#1185588), which means
  python2 currently.
</comment>
    <requestid>899025</requestid>
  </revision>
  <revision rev="18" vrev="3">
    <srcmd5>85b88aae0651dbfb09844e39ff59c132</srcmd5>
    <version>3.9.5</version>
    <time>1624462686</time>
    <user>dimstar_suse</user>
    <comment>- Add bpo44426-complex-keyword-sphinx.patch allowing generating
  documentation with Sphinx 4 (bpo#44426).
</comment>
    <requestid>900835</requestid>
  </revision>
  <revision rev="19" vrev="4">
    <srcmd5>a485d0060687a2ed170cebdb1d687a1e</srcmd5>
    <version>3.9.5</version>
    <time>1628189256</time>
    <user>dimstar_suse</user>
    <comment>- Use versioned python-Sphinx to avoid dependency on other
  version of Python (bsc#1183858).
</comment>
    <requestid>909796</requestid>
  </revision>
  <revision rev="20" vrev="1">
    <srcmd5>4d4724fae8b5d9984b02505a008b7c45</srcmd5>
    <version>3.9.6</version>
    <time>1628751669</time>
    <user>RBrownSUSE</user>
    <comment>- Update to 3.9.6:
  * Security
    - bpo-44022: mod:http.client now avoids infinitely reading
      potential HTTP headers after a 100 Continue status response
      from the server.
  * Core and Builtins
    - bpo-44168: Fix error message in the parser involving keyword
      arguments with invalid expressions. Patch by Pablo Galindo
    - bpo-44114: Fix incorrect dictkeys_reversed and
      dictitems_reversed function signatures in C code, which broke
      webassembly builds.
    - bpo-44070: No longer eagerly makes import filenames absolute,
      except for extension modules, which was introduced in 3.9.5.
    - bpo-28146: Fix a confusing error message in str.format().
    - bpo-11105: When compiling ast.AST objects with recursive
      references through compile(), the interpreter doesn’t crash
      anymore instead it raises a RecursionError.
  * Library
    - bpo-43972: When http.server.SimpleHTTPRequestHandler sends a
      301 (Moved Permanently) for a directory path not ending with
      /, add a Content-Length: 0 header. This improves the behavior
      for certain clients.
    - bpo-43776: When subprocess.Popen args are provided as a
      string or as pathlib.Path, the Popen instance repr now shows
      the right thing.
    - bpo-43318: Fix a bug where pdb does not always echo cleared
      breakpoints.
    - bpo-43295: datetime.datetime.strptime() now raises ValueError
      instead of IndexError when matching 'z' with the %z format
      specifier.</comment>
    <requestid>911061</requestid>
  </revision>
  <revision rev="21" vrev="1">
    <srcmd5>29e22e55acd1ac2602964664a11ab59f</srcmd5>
    <version>3.9.7</version>
    <time>1631391853</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>917360</requestid>
  </revision>
  <revision rev="22" vrev="2">
    <srcmd5>9877d3032b1c48a93152aa5d964e2e00</srcmd5>
    <version>3.9.7</version>
    <time>1632173524</time>
    <user>dimstar_suse</user>
    <comment>    - bpo-44022 (bsc#1189241, CVE-2021-3737): http.client now
      avoids infinitely reading potential HTTP headers after
      a 100 Continue status response from the server.
    - bpo-43075 (CVE-2021-3733, bsc#1189287): Fix Regular
      Expression Denial of Service (ReDoS) vulnerability in
      urllib.request.AbstractBasicAuthHandler. The
      ReDoS-vulnerable regex has quadratic worst-case complexity
      and it allows cause a denial of service when identifying
      crafted invalid RFCs. This ReDoS issue is on the client
      side and needs remote attackers to control the HTTP server.</comment>
    <requestid>919259</requestid>
  </revision>
  <revision rev="23" vrev="3">
    <srcmd5>ff1a66adb22de9de3acfaaf5d95e3d60</srcmd5>
    <version>3.9.7</version>
    <time>1635167804</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>925076</requestid>
  </revision>
  <revision rev="24" vrev="1">
    <srcmd5>70d931c2188d8448e3a3d0c8b7d96a07</srcmd5>
    <version>3.9.9</version>
    <time>1637535102</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.9.9:
  * Core and Builtins
    + bpo-30570: Fixed a crash in issubclass() from infinite recursion when searching pathological __bases__ tuples.
    + bpo-45494: Fix parser crash when reporting errors involving invalid continuation characters. Patch by Pablo Galindo.
    + bpo-45385: Fix reference leak from descr_check. Patch by Dong-hee Na.
    + bpo-45167: Fix deepcopying of types.GenericAlias objects.
    + bpo-44219: Release the GIL while performing isatty system calls on arbitrary file descriptors. In particular, this affects os.isatty(), os.device_encoding() and io.TextIOWrapper. By extension, io.open() in text mode is also affected. This change solves a deadlock in os.isatty(). Patch by Vincent Michel in bpo-44219.
    + bpo-44959: Added fallback to extension modules with ‘.sl’ suffix on HP-UX
    + bpo-44050: Extensions that indicate they use global state (by setting m_size to -1) can again be used in multiple interpreters. This reverts to behavior of Python 3.8.
    + bpo-45121: Fix issue where Protocol.__init__ raises RecursionError when it’s called directly or via super(). Patch provided by Yurii Karabas.
    + bpo-45083: When the interpreter renders an exception, its name now has a complete qualname. Previously only the class name was concatenated to the module name, which sometimes resulted in an incorrect full name being displayed.
    + bpo-45738: Fix computation of error location for invalid continuation characters in the parser. Patch by Pablo Galindo.
    + Library
    + bpo-45678: Fix bug in Python 3.9 that meant functools.singledispatchmethod failed to properly wrap the attributes of the target method. Patch by Alex Waygood.
    + bpo-45679: Fix caching of multi-value typing.Literal. Literal[True, 2] is no longer equal to Literal[1, 2].
    + bpo-45438: Fix typing.Signature string representation for generic builtin types.
    + bpo-45581: sqlite3.connect() now correctly raises MemoryError if the underlying SQLite API signals memory error. Patch by Erlend E. Aasland.
    + bpo-39679: Fix bug in functools.singledispatchmethod that caused it to fail when attempting to register a classmethod() or staticmethod() using type annotations. Patch contributed by Alex Waygood.
    + bpo-45515: Add references to zoneinfo in the datetime documentation, mostly replacing outdated references to dateutil.tz. Change by Paul Ganssle.
    + bpo-45467: Fix incremental decoder and stream reader in the “raw-unicode-escape” codec. Previously they failed if the escape sequence was split.
    + bpo-45461: Fix incremental decoder and stream reader in the “unicode-escape” codec. Previously they failed if the escape sequence was split.
    + bpo-45239: Fixed email.utils.parsedate_tz() crashing with UnboundLocalError on certain invalid input instead of returning None. Patch by Ben Hoyt.
    + bpo-44904: Fix bug in the doctest module that caused it to fail if a docstring included an example with a classmethod property. Patch by Alex Waygood.
    + bpo-45406: Make inspect.getmodule() catch FileNotFoundError raised by :’func:inspect.getabsfile, and return None to indicate that the module could not be determined.
    + bpo-45262: Prevent use-after-free in asyncio. Make sure the cached running loop holder gets cleared on dealloc to prevent use-after-free in get_running_loop
    + bpo-45386: Make xmlrpc.client more robust to C runtimes where the underlying C strftime function results in a ValueError when testing for year formatting options.
    + bpo-45371: Fix clang rpath issue in distutils. The UnixCCompiler now uses correct clang option to add a runtime library directory (rpath) to a shared library.
    + bpo-20028: Improve error message of csv.Dialect when initializing. Patch by Vajrasky Kok and Dong-hee Na.
    + bpo-45343: Update bundled pip to 21.2.4 and setuptools to 58.1.0
    + bpo-41710: On Unix, if the sem_clockwait() function is available in the C library (glibc 2.30 and newer), the threading.Lock.acquire() method now uses the monotonic clock (time.CLOCK_MONOTONIC) for the timeout, rather than using the system clock (time.CLOCK_REALTIME), to not be affected by system clock changes. Patch by Victor Stinner.</comment>
    <requestid>931924</requestid>
  </revision>
  <revision rev="25" vrev="2">
    <srcmd5>201b1f1cf111e6b890cc634ddde6b3dc</srcmd5>
    <version>3.9.9</version>
    <time>1639075504</time>
    <user>dimstar_suse</user>
    <comment>- Remove shebangs from from python-base libraries in _libdir
  (bsc#1193179).
- Readjust patches:
  - bpo-31046_ensurepip_honours_prefix.patch
  - decimal.patch
  - python-3.3.0b1-fix_date_time_compiler.patch

- rpm-build-python dependency is available on the current
  Factory, not with SLE.</comment>
    <requestid>934643</requestid>
  </revision>
  <revision rev="26" vrev="1">
    <srcmd5>7fafa98fbec5bc5c5d366e18dcf9561d</srcmd5>
    <version>3.9.10</version>
    <time>1642951540</time>
    <user>dimstar_suse</user>
    <comment>THIS SHOULD GO TO STAGING:D (TOGETHER WITH SR#947585)

- Update to 3.9.10:
  Bugfix-only release
</comment>
    <requestid>947754</requestid>
  </revision>
  <revision rev="27" vrev="2">
    <srcmd5>26fca0d8423da492b1b0f69613899319</srcmd5>
    <version>3.9.10</version>
    <time>1645629935</time>
    <user>dimstar_suse</user>
    <comment>- Add patch support-expat-245.patch:
  * Support Expat &gt;= 2.4.5</comment>
    <requestid>956584</requestid>
  </revision>
  <revision rev="28" vrev="1">
    <srcmd5>f966c8604a2954f11c4f4abe9e0cdd29</srcmd5>
    <version>3.9.12</version>
    <time>1648841686</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.9.12:
  - bpo-46968: Check for the existence of the “sys/auxv.h” header
    in faulthandler to avoid compilation problems in systems
    where this header doesn’t exist. Patch by Pablo Galindo
  - bpo-47101: hashlib.algorithms_available now lists only
    algorithms that are provided by activated crypto providers on
    OpenSSL 3.0. Legacy algorithms are not listed unless the
    legacy provider has been loaded into the default OSSL
    context.
  - bpo-23691: Protect the re.finditer() iterator from
    re-entering.
  - bpo-42369: Fix thread safety of zipfile._SharedFile.tell() to
    avoid a “zipfile.BadZipFile: Bad CRC-32 for file” exception
    when reading a ZipFile from multiple threads.
  - bpo-38256: Fix binascii.crc32() when it is compiled to use
    zlib’c crc32 to work properly on inputs 4+GiB in length
    instead of returning the wrong result. The workaround prior
    to this was to always feed the function data in increments
    smaller than 4GiB or to just call the zlib module function.
  - bpo-39394: A warning about inline flags not at the start of
    the regular expression now contains the position of the flag.
  - bpo-47061: Deprecate the various modules listed by PEP 594:
  - aifc, asynchat, asyncore, audioop, cgi, cgitb, chunk, crypt,
    imghdr, msilib, nntplib, nis, ossaudiodev, pipes, smtpd,
    sndhdr, spwd, sunau, telnetlib, uu, xdrlib
  - bpo-2604: Fix bug where doctests using globals would fail
    when run multiple times.
  - bpo-45997: Fix asyncio.Semaphore re-aquiring FIFO order.
  - bpo-47022: The asynchat, asyncore and smtpd modules have been
    deprecated since at least Python 3.6. Their documentation has</comment>
    <requestid>965121</requestid>
  </revision>
  <revision rev="29" vrev="1">
    <srcmd5>557f2a775438064e4eb90110c74d8d1b</srcmd5>
    <version>3.9.13</version>
    <time>1653243991</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.9.13:
  - Core and Builtins
    - gh-92311: Fixed a bug where setting frame.f_lineno to jump
      over a list comprehension could misbehave or crash.
    - gh-92112: Fix crash triggered by an evil custom mro() on
      a metaclass.
    - gh-92036: Fix a crash in subinterpreters related to the
      garbage collector. When a subinterpreter is deleted,
      untrack all objects tracked by its GC. To prevent a crash
      in deallocator functions expecting objects to be tracked by
      the GC, leak a strong reference to these objects on
      purpose, so they are never deleted and their deallocator
      functions are not called. Patch by Victor Stinner.
    - gh-91421: Fix a potential integer overflow in
      _Py_DecodeUTF8Ex.
    - bpo-46775: Some Windows system error codes(&gt;= 10000) are
      now mapped into the correct errno and may now raise
      a subclass of OSError. Patch by Dong-hee Na.
    - bpo-46962: Classes and functions that unconditionally
      declared their docstrings ignoring the
      --without-doc-strings compilation flag no longer do so.
    - The classes affected are pickle.PickleBuffer,
      testcapi.RecursingInfinitelyError, and types.GenericAlias.
    - The functions affected are 24 methods in ctypes.
    - Patch by Oleg Iarygin.
    - bpo-36819: Fix crashes in built-in encoders with error
      handlers that return position less or equal than the
      starting position of non-encodable characters.
  - Library
    - gh-91581: utcfromtimestamp() no longer attempts to resolve
      fold in the pure Python implementation, since the fold is
      never 1 in UTC. In addition to being slightly faster in the
      common case, this also prevents some errors when the
      timestamp is close to datetime.min. Patch by Paul Ganssle.
    - gh-92530: Fix an issue that occurred after interrupting
      threading.Condition.notify().
    - gh-92049: Forbid pickling constants re._constants.SUCCESS
      etc. Previously, pickling did not fail, but the result
      could not be unpickled.
    - bpo-47029: Always close the read end of the pipe used by
      multiprocessing.Queue after the last write of buffered data
      to the write end of the pipe to avoid BrokenPipeError at
      garbage collection and at multiprocessing.Queue.close()
      calls. Patch by Géry Ogam.
    - gh-91910: Add missing f prefix to f-strings in error
      messages from the multiprocessing and asyncio modules.
    - gh-91810: ElementTree method write() and function
      tostring() now use the text file’s encoding (“UTF-8” if not
      available) instead of locale encoding in XML declaration
      when encoding=&quot;unicode&quot; is specified.
    - gh-91832: Add required attribute to argparse.Action repr
      output.
    - gh-91734: Fix OSS audio support on Solaris.
    - gh-91700: Compilation of regular expression containing
      a conditional expression (?(group)...) now raises an
      appropriate re.error if the group number refers to not
      defined group. Previously an internal RuntimeError was
      raised.
    - gh-91676: Fix unittest.IsolatedAsyncioTestCase to shutdown
      the per test event loop executor before returning from its
      run method so that a not yet stopped or garbage collected
      executor state does not persist beyond the test.
    - gh-90568: Parsing \N escapes of Unicode Named Character
      Sequences in a regular expression raises now re.error
      instead of TypeError.
    - gh-91595: Fix the comparison of character and integer
      inside Tools.gdb.libpython.write_repr(). Patch by Yu Liu.
    - gh-90622: Worker processes for
      concurrent.futures.ProcessPoolExecutor are no longer
      spawned on demand (a feature added in 3.9) when the
      multiprocessing context start method is &quot;fork&quot; as that can
      lead to deadlocks in the child processes due to a fork
      happening while threads are running.
    - gh-91575: Update case-insensitive matching in the re module
      to the latest Unicode version.
    - gh-91581: Remove an unhandled error case in the
      C implementation of calls to datetime.fromtimestamp with no
      time zone (i.e. getting a local time from an epoch
      timestamp). This should have no user-facing effect other
      than giving a possibly more accurate error message when
      called with timestamps that fall on 10000-01-01 in the
      local time. Patch by Paul Ganssle.
    - bpo-34480: Fix a bug where _markupbase raised an
      UnboundLocalError when an invalid keyword was found in
      marked section. Patch by Marek Suscak.
    - bpo-27929: Fix asyncio.loop.sock_connect() to only resolve
      names for socket.AF_INET or socket.AF_INET6 families.
      Resolution may not make sense for other families, like
      socket.AF_BLUETOOTH and socket.AF_UNIX.
    - bpo-43323: Fix errors in the email module if the charset
      itself contains undecodable/unencodable characters.
    - bpo-46787: Fix concurrent.futures.ProcessPoolExecutor
      exception memory leak
    - bpo-46415: Fix ipaddress.ip_{address,interface,network}
      raising TypeError instead of ValueError if given invalid
      tuple as address parameter.
    - bpo-44911: IsolatedAsyncioTestCase will no longer throw an
      exception while cancelling leaked tasks. Patch by Bar
      Harel.
    - bpo-44493: Add missing terminated NUL in sockaddr_un’s
      length
    - This was potentially observable when using non-abstract
      AF_UNIX datagram sockets to processes written in another
      programming language.
    - bpo-42627: Fix incorrect parsing of Windows registry proxy
      settings
    - bpo-36073: Raise ProgrammingError instead of segfaulting on
      recursive usage of cursors in sqlite3 converters. Patch by
      Sergey Fedoseev.
  - Documentation
    - gh-91888: Add a new gh role to the documentation to link to
      GitHub issues.
    - gh-91783: Document security issues concerning the use of
      the function shutil.unpack_archive()
    - gh-91547: Remove “Undocumented modules” page.
    - bpo-44347: Clarify the meaning of dirs_exist_ok, a kwarg of
      shutil.copytree().
    - bpo-38668: Update the introduction to documentation for
      os.path to remove warnings that became irrelevant after the
      implementations of PEP 383 and PEP 529.
    - bpo-47138: Pin Jinja to a version compatible with Sphinx
      version 2.4.4.
    - bpo-46962: All docstrings in code snippets are now wrapped
      into PyDoc_STR() to follow the guideline of PEP 7’s
      Documentation Strings paragraph. Patch by Oleg Iarygin.
    - bpo-26792: Improve the docstrings of runpy.run_module() and
      runpy.run_path(). Original patch by Andrew Brezovsky.
    - bpo-45790: Adjust inaccurate phrasing in Defining Extension
      Types: Tutorial about the ob_base field and the macros used
      to access its contents.
    - bpo-42340: Document that in some circumstances
      KeyboardInterrupt may cause the code to enter an
      inconsistent state. Provided a sample workaround to avoid
      it if needed.
    - bpo-41233: Link the errnos referenced in
      Doc/library/exceptions.rst to their respective section in
      Doc/library/errno.rst, and vice versa. Previously this was
      only done for EINTR and InterruptedError. Patch by Yan
      “yyyyyyyan” Orestes.
    - bpo-38056: Overhaul the Error Handlers documentation in
      codecs.
    - bpo-13553: Document tkinter.Tk args.
  - Tests
    - gh-91607: Fix test_concurrent_futures to test the correct
      multiprocessing start method context in several cases where
      the test logic mixed this up.
    - bpo-47205: Skip test for sched_getaffinity() and
      sched_setaffinity() error case on FreeBSD.
    - bpo-29890: Add tests for ipaddress.IPv4Interface and
      ipaddress.IPv6Interface construction with tuple arguments.
      Original patch and tests by louisom.
  - Build
    - bpo-47103: Windows PGInstrument builds now copy a required
      DLL into the output directory, making it easier to run the
      profile stage of a PGO build.
  - Windows
    - bpo-47194: Update zlib to v1.2.12 to resolve
      CVE-2018-25032.
    - bpo-46785: Fix race condition between os.stat() and
      unlinking a file on Windows, by using errors codes returned
      by FindFirstFileW() when appropriate in win32_xstat_impl.
    - bpo-40859: Update Windows build to use xz-5.2.5
  - Tools/Demos
    - gh-91583: Fix regression in the code generated by Argument
      Clinic for functions with the defining_class parameter.
- Add patch support-expat-245.patch:
  * Support Expat &gt;= 2.4.4 (jsc#SLE-21253)
</comment>
    <requestid>978332</requestid>
  </revision>
  <revision rev="30" vrev="2">
    <srcmd5>d36c94c34b3a7dfc8626ef88e183f9ee</srcmd5>
    <version>3.9.13</version>
    <time>1655665834</time>
    <user>dimstar_suse</user>
    <comment>- Add CVE-2015-20107-mailcap-unsafe-filenames.patch to avoid
  CVE-2015-20107 (bsc#1198511, gh#python/cpython#68966), the
  command injection in the mailcap module.
- Fix building of documentation and the universal configuration of the
  %primary_interpreter.
- (bsc#1196784, CVE-2022-25236) Rename patch:
  support-expat-245.patch to support-expat-CVE-2022-25236-patched.patch
  and update the patch to detect expat &gt;= 2.4.4 instead of &gt;= 2.4.5
  as it was fully patched against CVE-2022-25236.

    22.0.4, bnc#1186819, CVE-2021-3572)</comment>
    <requestid>983632</requestid>
  </revision>
  <revision rev="31" vrev="3">
    <srcmd5>2a8761e87f0c160a6a9f8be5d2614d5b</srcmd5>
    <version>3.9.13</version>
    <time>1656511252</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>985337</requestid>
  </revision>
  <revision rev="32" vrev="4">
    <srcmd5>9749865eb3a63536694c12febd97db4a</srcmd5>
    <version>3.9.13</version>
    <time>1659106017</time>
    <user>RBrownFactory</user>
    <comment>- Switch from %primary_interpreter to prjconf-defined
  %primary_python (gh#openSUSE/python-rpm-macros#127).
</comment>
    <requestid>990683</requestid>
  </revision>
  <revision rev="33" vrev="5">
    <srcmd5>1dfb156052b564f85a6d963ef655dac4</srcmd5>
    <version>3.9.13</version>
    <time>1662239912</time>
    <user>dimstar_suse</user>
    <comment>- Add patch CVE-2021-28861-double-slash-path.patch:
  * http.server: Fix an open redirection vulnerability in the HTTP server
    when an URI path starts with //. (bsc#1202624, CVE-2021-28861)</comment>
    <requestid>1000771</requestid>
  </revision>
  <revision rev="34" vrev="1">
    <srcmd5>142a11c4a73278980f377c9c6ea59f53</srcmd5>
    <version>3.9.14</version>
    <time>1663438093</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.9.14:
  - (CVE-2020-10735, bsc#1203125). Converting between int
    and str in bases other than 2 (binary), 4, 8 (octal), 16
    (hexadecimal), or 32 such as base 10 (decimal) now raises a
    ValueError if the number of digits in string form is above a
    limit to avoid potential denial of service attacks due to the
    algorithmic complexity.
    This new limit can be configured or disabled by environment
    variable, command line flag, or sys APIs. See the integer
    string conversion length limitation documentation. The
    default limit is 4300 digits in string form.
  - Also other bug fixes:
    - http.server: Fix an open redirection vulnerability in the
      HTTP server when an URI path starts with //. Vulnerability
      discovered, and initial fix proposed, by Hamza Avvan.
    - Fix contextvars HAMT implementation to handle iteration
      over deep trees. The bug was discovered and fixed by Eli
      Libman. See MagicStack/immutables#84 for more details.
    - Fix binding of unix socket to empty address on Linux to use
      an available address from the abstract namespace, instead
      of “0”.
    - Suppress writing an XML declaration in open files
      in ElementTree.write() with encoding='unicode' and
      xml_declaration=None.
    - Fix the formatting for await x and not x in the operator
      precedence table when using the help() system.
    - Fix ensurepip environment isolation for subprocess running
      pip.
    - Fix problem with test_ssl test_get_ciphers on systems that
      require perfect forward secrecy (PFS) ciphers.</comment>
    <requestid>1003029</requestid>
  </revision>
  <revision rev="35" vrev="1">
    <srcmd5>0bc9d8ebd1c380b30bc82f2879327c8a</srcmd5>
    <version>3.9.15</version>
    <time>1666978114</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1031408</requestid>
  </revision>
  <revision rev="36" vrev="2">
    <srcmd5>8c264ce73f22da335847bf39d1287353</srcmd5>
    <version>3.9.15</version>
    <time>1667655991</time>
    <user>dimstar_suse</user>
    <comment>- Add CVE-2022-42919-loc-priv-mulitproc-forksrv.patch to avoid
  CVE-2022-42919 (bsc#1204886) avoiding Linux specific local
  privilege escalation via the multiprocessing forkserver start
  method.
</comment>
    <requestid>1033552</requestid>
  </revision>
  <revision rev="37" vrev="3">
    <srcmd5>83b67abf3cc63ce3bafc6d1b8733b5c3</srcmd5>
    <version>3.9.15</version>
    <time>1668271198</time>
    <user>dimstar_suse</user>
    <comment>- Add CVE-2022-45061-DoS-by-IDNA-decode.patch to avoid
  CVE-2022-45061 (bsc#1205244) allowing DoS by IDNA decoding
  extremely long domain names.
</comment>
    <requestid>1034968</requestid>
  </revision>
  <revision rev="38" vrev="1">
    <srcmd5>548aa2492076ca7b8a7fb467cf006806</srcmd5>
    <version>3.9.16</version>
    <time>1670588209</time>
    <user>dimstar_suse</user>
    <comment>- Update to 3.9.16:
  - python -m http.server no longer allows terminal control
    characters sent within a garbage request to be printed to the
    stderr server log.
    This is done by changing the http.server
    BaseHTTPRequestHandler .log_message method to replace control
    characters with a \xHH hex escape before printing.
  - Avoid publishing list of active per-interpreter audit hooks
    via the gc module
  - The IDNA codec decoder used on DNS hostnames by socket or
    asyncio related name resolution functions no longer involves
    a quadratic algorithm. This prevents a potential CPU denial
    of service if an out-of-spec excessive length hostname
    involving bidirectional characters were decoded. Some
    protocols such as urllib http 3xx redirects potentially allow
    for an attacker to supply such a name (CVE-2015-20107).
  - Update bundled libexpat to 2.5.0
  - Port XKCP’s fix for the buffer overflows in SHA-3
    (CVE-2022-37454).
  - On Linux the multiprocessing module returns to using
    filesystem backed unix domain sockets for communication with
    the forkserver process instead of the Linux abstract socket
    namespace. Only code that chooses to use the “forkserver”
    start method is affected.
    Abstract sockets have no permissions and could allow any
    user on the system in the same network namespace (often
    the whole system) to inject code into the multiprocessing
    forkserver process. This was a potential privilege
    escalation. Filesystem based socket permissions restrict this
    to the forkserver process user as was the default in Python
    3.8 and earlier.
    This prevents Linux CVE-2022-42919.
  - The deprecated mailcap module now refuses to inject unsafe
    text (filenames, MIME types, parameters) into shell
    commands. Instead of using such text, it will warn and act
    as if a match was not found (or for test commands, as if the
    test failed).
- Removed upstreamed patches:
  - CVE-2015-20107-mailcap-unsafe-filenames.patch
  - CVE-2022-42919-loc-priv-mulitproc-forksrv.patch
  - CVE-2022-45061-DoS-by-IDNA-decode.patch
</comment>
    <requestid>1041648</requestid>
  </revision>
  <revision rev="39" vrev="2">
    <srcmd5>89071b4b548ab95c2283003ed1ec02d7</srcmd5>
    <version>3.9.16</version>
    <time>1673801874</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1058286</requestid>
  </revision>
  <revision rev="40" vrev="3">
    <srcmd5>4cf006fe0be8ccfc59c1324ce85c029d</srcmd5>
    <version>3.9.16</version>
    <time>1674997809</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1061593</requestid>
  </revision>
  <revision rev="41" vrev="4">
    <srcmd5>3779d259379418d55f7a8c442388f425</srcmd5>
    <version>3.9.16</version>
    <time>1677075672</time>
    <user>dimstar_suse</user>
    <comment>- Add provides for readline and sqlite3 to the main Python
  package.
</comment>
    <requestid>1067030</requestid>
  </revision>
  <revision rev="42" vrev="5">
    <srcmd5>ab258e7a40023620dfc6e0432b68b1d4</srcmd5>
    <version>3.9.16</version>
    <time>1677878651</time>
    <user>dimstar_suse</user>
    <comment>- Add CVE-2023-24329-blank-URL-bypass.patch (CVE-2023-24329,
  bsc#1208471) blocklists bypass via the urllib.parse component
  when supplying a URL that starts with blank characters
</comment>
    <requestid>1068564</requestid>
  </revision>
  <revision rev="43" vrev="6">
    <srcmd5>6552b45d4bbacf0266be894dce79264d</srcmd5>
    <version>3.9.16</version>
    <time>1681996409</time>
    <user>dimstar_suse</user>
    <comment>- Use python3 modules to build the documentation.</comment>
    <requestid>1080041</requestid>
  </revision>
  <revision rev="44" vrev="7">
    <srcmd5>8a9bebf18cb55d1f920b129385417518</srcmd5>
    <version>3.9.16</version>
    <time>1684688878</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1087859</requestid>
  </revision>
  <revision rev="45" vrev="8">
    <srcmd5>40141788c617ff5fb95f426cb396f968</srcmd5>
    <version>3.9.16</version>
    <time>1685830338</time>
    <user>dimstar_suse</user>
    <comment></comment>
    <requestid>1085861</requestid>
  </revision>
  <revision rev="46" vrev="1">
    <srcmd5>fd04e3d5ecae7f15a2a2ea32e3bef39e</srcmd5>
    <version>3.9.17</version>
    <time>1688246281</time>
    <user>dimstar_suse</user>
    <comment>- Add downport-Sphinx-features.patch to make documentation
  buildable even on SLE-15.

- Update to 3.9.17:
  - gh-103142: The version of OpenSSL used in Windows and
    Mac installers has been upgraded to 1.1.1u to address
    CVE-2023-2650, CVE-2023-0465, CVE-2023-0466, CVE-2023-0464,
    as well as CVE-2023-0286, CVE-2022-4303, and CVE-2022-4303
    fixed previously in 1.1.1t (gh-101727).
  - gh-102153: urllib.parse.urlsplit() now strips leading C0
    control and space characters following the specification for
    URLs defined by WHATWG in response to CVE-2023-24329
    (bsc#1208471).
  - gh-99889: Fixed a security in flaw in uu.decode() that could
    allow for directory traversal based on the input if no
    out_file was specified.
  - gh-104049: Do not expose the local on-disk
    location in directory indexes produced by
    http.client.SimpleHTTPRequestHandler.
  - gh-103935: trace.__main__ now uses io.open_code() for files
    to be executed instead of raw open().
  - gh-102953: The extraction methods in tarfile, and
    shutil.unpack_archive(), have a new filter argument that
    allows limiting tar features than may be surprising or
    dangerous, such as creating files outside the destination
    directory. See Extraction filters for details (fixing
    CVE-2007-4559, bsc#1203750).
  - gh-102126: Fixed a deadlock at shutdown when clearing thread
    states if any finalizer tries to acquire the runtime head
    lock.</comment>
    <requestid>1096213</requestid>
  </revision>
  <revision rev="47" vrev="2">
    <srcmd5>c1c6c4d51e643eee41fdbe121d68b2c6</srcmd5>
    <version>3.9.17</version>
    <time>1690469391</time>
    <user>anag+factory</user>
    <comment>- Add gh-78214-marshal_stabilize_FLAG_REF.patch to marshal.c for
  stabilizing FLAG_REF usage (required for reproduceability;
  bsc#1213463).
- Revert faulty fix for CVE-2023-27043 (gh#python/cpython#106669)
</comment>
    <requestid>1100886</requestid>
  </revision>
  <revision rev="48" vrev="3">
    <srcmd5>b1f30e2e81a0168934061849801dbc6a</srcmd5>
    <version>3.9.17</version>
    <time>1690892134</time>
    <user>maxlin_factory</user>
    <comment>- Add bpo-37596-make-set-marshalling.patch making marshalling of
  `set` and `frozenset` deterministic (bsc#1211765).
</comment>
    <requestid>1101338</requestid>
  </revision>
  <revision rev="49" vrev="4">
    <srcmd5>871f676d32431260776aa04e11545ce9</srcmd5>
    <version>3.9.17</version>
    <time>1691332154</time>
    <user>dimstar_suse</user>
    <comment>- IT MEANS THAT bsc#1210638 STILL HAS NOT BEEN FIXED!
- Add Revert-gh105127-left-tests.patch (gh#python/cpython!106941)
  partially reverting CVE-2023-27043-email-parsing-errors.patch,
  because of the regression in gh#python/cpython#106669.
- (bsc#1210638, CVE-2023-27043) Add
  CVE-2023-27043-email-parsing-errors.patch, which detects email
  address parsing errors and returns empty tuple to indicate the
  parsing error (old API). (The patch is faulty,
  gh#python/cpython#106669, but upstream decided not to just
  revert it).</comment>
    <requestid>1102236</requestid>
  </revision>
  <revision rev="50" vrev="1">
    <srcmd5>3ddc88878abeafb5caf08b78bf8275cd</srcmd5>
    <version>3.9.18</version>
    <time>1694344149</time>
    <user>anag+factory</user>
    <comment>- Update to 3.9.18 (bsc#1214692):
  - gh-108310: Fixed an issue where instances of ssl.SSLSocket were
    vulnerable to a bypass of the TLS handshake and included
    protections (like certificate verification) and treating sent
    unencrypted data as if it were post-handshake TLS encrypted data.
    Security issue reported as CVE-2023-40217 by Aapo Oksman. Patch by
    Gregory P. Smith.
  - gh-107845: tarfile.data_filter() now takes the location of
    symlinks into account when determining their target, so it will no
    longer reject some valid tarballs with
    LinkOutsideDestinationError.
  - gh-107565: Update multissltests and GitHub CI workflows to use
    OpenSSL 1.1.1v, 3.0.10, and 3.1.2.
</comment>
    <requestid>1109203</requestid>
  </revision>
  <revision rev="51" vrev="2">
    <srcmd5>105d43e8085e17407398ea632777a54d</srcmd5>
    <version>3.9.18</version>
    <time>1698001264</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1119266</requestid>
  </revision>
  <revision rev="52" vrev="3">
    <srcmd5>37d5e97b00caa5a4b5f898bfa7a5c7b8</srcmd5>
    <version>3.9.18</version>
    <time>1708027162</time>
    <user>anag+factory</user>
    <comment></comment>
    <requestid>1146870</requestid>
  </revision>
  <revision rev="53" vrev="4">
    <srcmd5>36f4671b1011e2212f92a36fab774d7a</srcmd5>
    <version>3.9.18</version>
    <time>1709145874</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1152789</requestid>
  </revision>
  <revision rev="54" vrev="5">
    <srcmd5>6bf658efdde4e0fa9bb7cf617e13e769</srcmd5>
    <version>3.9.18</version>
    <time>1709332445</time>
    <user>dimstar_suse</user>
    <comment>- Update SPEC file to build on SLE-15-SP5 (jsc#PED-7886).

- (bsc#1219666, CVE-2023-6597) Add
  CVE-2023-6597-TempDir-cleaning-symlink.patch (patch from
  gh#python/cpython!99930) fixing symlink bug in cleanup of
  tempfile.TemporaryDirectory.
- Repurpose skip-failing-tests.patch to increase timeout for
  test.test_asyncio.test_tasks.TimeoutTests.test_timeout_time,
  which fails on slow machines in IBS (s390x).
 

  - (bsc#1215454, gh-108310) Fixed an issue where instances
- Refresh all patches:
  - 98437-sphinx.locale._-as-gettext-in-pyspecific.patch
  - 99366-patch.dict-can-decorate-async.patch
  - Revert-gh105127-left-tests.patch
  - bpo-31046_ensurepip_honours_prefix.patch
  - decimal.patch
  - distutils-reproducible-compile.patch
  - gh-78214-marshal_stabilize_FLAG_REF.patch
  - python-3.3.0b1-localpath.patch
  - python-3.3.0b1-test-posix_fadvise.patch
  - python3-imp-returntype.patch
  - subprocess-raise-timeout.patch
  - support-expat-CVE-2022-25236-patched.patch
  - downport-Sphinx-features.patch</comment>
    <requestid>1153059</requestid>
  </revision>
  <revision rev="55" vrev="6">
    <srcmd5>0f20a9555dbe27901675d596d0d9c698</srcmd5>
    <version>3.9.18</version>
    <time>1710434560</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1157648</requestid>
  </revision>
  <revision rev="56" vrev="1">
    <srcmd5>8819880258c03e8766833c037179190a</srcmd5>
    <version>3.9.19</version>
    <time>1711477480</time>
    <user>anag+factory</user>
    <comment>- Add old-libexpat.patch making the test suite work with
  libexpat &lt; 2.6.0 (gh#python/cpython#117187).
- Update to 3.9.19:
  - Security
    - gh-115398: Allow controlling Expat &gt;=2.6.0 reparse deferral
      (CVE-2023-52425, bsc#1219559) by adding five new methods:
        xml.etree.ElementTree.XMLParser.flush()
        xml.etree.ElementTree.XMLPullParser.flush()
        xml.parsers.expat.xmlparser.GetReparseDeferralEnabled()
        xml.parsers.expat.xmlparser.SetReparseDeferralEnabled()
        xml.sax.expatreader.ExpatParser.flush()
    - gh-115399: Update bundled libexpat to 2.6.0
    - gh-113659: Skip .pth files with names starting with a dot
      or hidden file attribute.
  - Core and Builtins
    - gh-102388: Fix a bug where iso2022_jp_3 and iso2022_jp_2004
      codecs read out of bounds
  - Library
    - gh-115197: urllib.request no longer resolves the hostname
      before checking it against the system’s proxy bypass list
      on macOS and Windows.
    - gh-115133: Fix tests for XMLPullParser with Expat 2.6.0.
    - gh-81194: Fix a crash in socket.if_indextoname() with
      specific value (UINT_MAX). Fix an integer overflow in
      socket.if_indextoname() on 64-bit non-Windows platforms.
    - gh-109858: Protect zipfile from “quoted-overlap”
      zipbomb. It now raises BadZipFile when try to read an
      entry that overlaps with other entry or central directory
      (CVE-2024-0450, bsc#1221854).
    - gh-107077: Seems that in some conditions, OpenSSL will
      return SSL_ERROR_SYSCALL instead of SSL_ERROR_SSL
      when a certification verification has failed, but
      the error parameters will still contain ERR_LIB_SSL
      and SSL_R_CERTIFICATE_VERIFY_FAILED. We are now
      detecting this situation and raising the appropiate
      ssl.SSLCertVerificationError. Patch by Pablo Galindo
    - gh-91133: Fix a bug in tempfile.TemporaryDirectory cleanup,
      which now no longer dereferences symlinks when working
      around file system permission errors (CVE-2023-6597,
      bsc#1219666).
  - Documentation
    - gh-115399: Document CVE-2023-52425 of Expat &lt;2.6.0 under
      “XML vulnerabilities”.
  - Tools/Demos
    - gh-109991: Update GitHub CI workflows to use OpenSSL 3.0.11
      and multissltests to use 1.1.1w and 3.0.11.
- Remove upstreamed patches:
  - CVE-2023-6597-TempDir-cleaning-symlink.patch
  - libexpat260.patch
- Refreshed patches:
  - F00251-change-user-install-location.patch
  - python-3.3.0b1-localpath.patch
</comment>
    <requestid>1161042</requestid>
  </revision>
  <revision rev="57" vrev="2">
    <srcmd5>0814c62f38794acbe6e3c3dc39be798f</srcmd5>
    <version>3.9.19</version>
    <time>1719055404</time>
    <user>anag+factory</user>
    <comment>- Add CVE-2024-0397-memrace_ssl.SSLContext_cert_store.patch
  fixing bsc#1226447 (CVE-2024-0397) by removing memory race
  condition in ssl.SSLContext certificate store methods.</comment>
    <requestid>1182485</requestid>
  </revision>
  <revision rev="58" vrev="3">
    <srcmd5>184e2430706f056e94ab1553ad0dc236</srcmd5>
    <version>3.9.19</version>
    <time>1719497040</time>
    <user>anag+factory</user>
    <comment>- Add CVE-2024-4032-private-IP-addrs.patch to fix bsc#1226448
  (CVE-2024-4032) rearranging definition of private v global IP
  addresses.</comment>
    <requestid>1183504</requestid>
  </revision>
  <revision rev="59" vrev="4">
    <srcmd5>8e7fbeb2134968ad51cb0cd74a5d7242</srcmd5>
    <version>3.9.19</version>
    <time>1721661553</time>
    <user>anag+factory</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1189045</requestid>
  </revision>
  <revision rev="60" vrev="5">
    <srcmd5>f14ebdacd553387026cd2a45bcc8dcb4</srcmd5>
    <version>3.9.19</version>
    <time>1722333304</time>
    <user>dimstar_suse</user>
    <comment>Automatic submission by obs-autosubmit</comment>
    <requestid>1190346</requestid>
  </revision>
  <revision rev="61" vrev="6">
    <srcmd5>6dcfcc19e36b44036f909d69e3c2d8c9</srcmd5>
    <version>3.9.19</version>
    <time>1723212952</time>
    <user>dimstar_suse</user>
    <comment>- Add CVE-2024-6923-email-hdr-inject.patch to prevent email
  header injection due to unquoted newlines (bsc#1228780,
  CVE-2024-6923).
- Adding bso1227999-reproducible-builds.patch fixing bsc#1227999
  adding reproducibility patches from gh#python/cpython!121872
  and gh#python/cpython!121883.
- Add CVE-2024-5642-OpenSSL-API-buf-overread-NPN.patch removing
  support for anything but OpenSSL 1.1.1 or newer (bsc#1227233,
  CVE-2024-5642).
- %{profileopt} variable is set according to the variable
  %{do_profiling} (bsc#1227999)</comment>
    <requestid>1192673</requestid>
  </revision>
  <revision rev="62" vrev="7">
    <srcmd5>48cdce2dbd8e6d2734600294dd8c5b9d</srcmd5>
    <version>3.9.19</version>
    <time>1724939057</time>
    <user>dimstar_suse</user>
    <comment>- Add CVE-2024-8088-inf-loop-zipfile_Path.patch to prevent
  malformed payload to cause infinite loops in zipfile.Path
  (bsc#1229704, CVE-2024-8088).</comment>
    <requestid>1197416</requestid>
  </revision>
</revisionlist>
