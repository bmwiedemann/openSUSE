From d8ff80ee7d2e64c5e1daf50cc38eb99663f1b1ac Mon Sep 17 00:00:00 2001
From: Alex Hall <alex.mojaki@gmail.com>
Date: Fri, 26 Feb 2021 15:49:29 +0200
Subject: [PATCH] Make 3.9 support official, fix tests fo 3.9 involving starred
 expressions (#66)

* Handle starred expressions in tests
* Make 3.9 support official
* pypy2 instead of pypy2.7
* pypy3 instead of pypy3.5
---
 .travis.yml               | 6 +++---
 asttokens/util.py         | 5 +++++
 setup.cfg                 | 1 +
 tests/test_mark_tokens.py | 3 +++
 4 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/asttokens/util.py b/asttokens/util.py
index c29dd07..79ac430 100644
--- a/asttokens/util.py
+++ b/asttokens/util.py
@@ -142,6 +142,11 @@ def is_joined_str(node):
   return node.__class__.__name__ == 'JoinedStr'
 
 
+def is_starred(node):
+  """Returns whether node is a starred expression node."""
+  return node.__class__.__name__ == 'Starred'
+
+
 def is_slice(node):
   """Returns whether node represents a slice, e.g. `1:2` in `x[1:2]`"""
   # Before 3.9, a tuple containing a slice is an ExtSlice,
diff --git a/tests/test_mark_tokens.py b/tests/test_mark_tokens.py
index a0f68b2..90cff20 100644
--- a/tests/test_mark_tokens.py
+++ b/tests/test_mark_tokens.py
@@ -728,9 +728,12 @@ def parse_snippet(self, text, node):
     # For expressions and statements, we add a dummy statement '_' before it because if it's just a
     # string contained in an astroid.Const or astroid.Expr it will end up in the doc attribute and be
     # a pain to extract for comparison
+    # For starred expressions, e.g. `*args`, we wrap it in a function call to make it parsable.
     indented = re.match(r'^[ \t]+\S', text)
     if indented:
       return self.module.parse('def dummy():\n' + text).body[0].body[0]
+    if util.is_starred(node):
+      return self.module.parse('f(' + text + ')').body[0].value.args[0]
     if util.is_expr(node):
       return self.module.parse('_\n(' + text + ')').body[1].value
     if util.is_module(node):
