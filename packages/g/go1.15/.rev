<revisionlist>
  <revision rev="1" vrev="1">
    <srcmd5>8bcd8cab7483bc1fd09f7f0a39bdc3ba</srcmd5>
    <version>1.15</version>
    <time>1597306657</time>
    <user>dimstar_suse</user>
    <comment>- go1.15 (released 2020-08-11) Go 1.15 is a major release of Go.
  go1.15.x minor releases will be provided through August 2021.
  https://github.com/golang/go/wiki/Go-Release-Cycle
  Most changes are in the implementation of the toolchain, runtime,
  and libraries. As always, the release maintains the Go 1 promise
  of compatibility. We expect almost all Go programs to continue to
  compile and run as before.
  Refs boo#1175132 go1.15 release tracking</comment>
    <requestid>826099</requestid>
  </revision>
  <revision rev="2" vrev="1">
    <srcmd5>1343e92b2883888af7061a22c7605a3c</srcmd5>
    <version>1.15.1</version>
    <time>1599088567</time>
    <user>dimstar_suse</user>
    <comment>- go1.15.1 (released 2020-09-01) includes security fixes to the
  net/http/cgi, net/http/fcgi packages.
  CVE-2020-24553
  Refs boo#1175132 go1.15 release tracking
  * boo#1176031 CVE-2020-24553
  * go#41165 net/http/cgi,net/http/fcgi: Cross-Site Scripting (XSS) when Content-Type is not specified (forwarded request 831302 from jfkw)</comment>
    <requestid>831307</requestid>
  </revision>
  <revision rev="3" vrev="1">
    <srcmd5>396a06302586ce9e6004f093a8468bba</srcmd5>
    <version>1.15.2</version>
    <time>1600078762</time>
    <user>dimstar_suse</user>
    <comment>- go1.15.2 (released 2020-09-09) includes fixes to the compiler,
  runtime, documentation, the go command, and the net/mail, os,
  sync, and testing packages.
  Refs boo#1175132 go1.15 release tracking
  * go#41193 net/http/fcgi: race detected during execution of TestResponseWriterSniffsContentType test
  * go#41178 doc: include fix for #34437 in Go 1.14 release notes
  * go#41034 testing: Cleanup races with Logf and Errorf
  * go#41011 sync: sync.Map keys will never be garbage collected
  * go#40934 runtime: checkptr incorrectly -race flagging when using &amp;amp;^ arithmetic
  * go#40900 internal/poll: CopyFileRange returns EPERM on CircleCI Docker Host running 4.10.0-40-generic
  * go#40868 cmd/compile: R12 can be clobbered for write barrier call on PPC64
  * go#40849 testing: &quot;=== PAUSE&quot; lines do not change the test name for the next log line
  * go#40845 runtime: Panic if newstack at runtime.acquireLockRank
  * go#40805 cmd/test2json: tests that panic are marked as passing
  * go#40804 net/mail: change in behavior of ParseAddressList(&quot;&quot;) in 1.15
  * go#40802 cmd/go: in 1.15: change in &quot;go test&quot; argument parsing
  * go#40798 cmd/compile: inline marker targets not reachable after assembly on arm
  * go#40772 cmd/compile: compiler crashes in ssa: isNonNegative bad type
  * go#40767 cmd/compile: inline marker targets not reachable after assembly on ppc64x
  * go#40739 internal/poll: CopyFileRange returns ENOTSUP on Linux 3.10.0 kernel on NFS mount
  * go#40412 runtime: Windows service lifecycle events behave incorrectly when called within a golang environment
- Add missing '?' before 'suse_version' test by Xia Lei &amp;lt;emricg2@gmail.com&amp;gt;

- replace binutils-gold requires by recommends for aarch64 on SLE. (bsc#1170826) (forwarded request 833831 from jfkw)</comment>
    <requestid>833838</requestid>
  </revision>
  <revision rev="4" vrev="1">
    <srcmd5>e236fa4d18657f55e52887c99ed1ee26</srcmd5>
    <version>1.15.3</version>
    <time>1603031182</time>
    <user>dimstar_suse</user>
    <comment>- go1.15.3 (released 2020-10-14) includes fixes to cgo, the
  compiler, runtime, the go command, and the bytes, plugin, and
  testing packages.
  * go#41871 cmd/cgo: support other GOARCH values in 1.15
  * go#41797 runtime: memory corruption from stack-allocated defer on 32-bit
  * go#41720 cmd/compile: invalid instruction: MOVL $11553462026240, AX
  * go#41620 memory corruption on linux/386 with float32 arithmetic, GO386=387, buildmode pie/c-archive
  * go#41595 internal/bytealg: SIGILL on s390x [1.15 backport] CherryPickApproved
  * go#41543 cmd/compile: 1.15 heap allocations regression when calling Write on os.Stdout
  * go#41464 cmd/go: breakage with go version command and GOFLAGS environment variable
  * go#41453 cmd/addr2line: TestAddr2Line fails with double / in $GOROOT_FINAL
  * go#41432 cmd/cgo: jmethodID/jfieldID is not mapped to uintptr if building with the Android NDK
  * go#41317 runtime: &quot;fatal error: unexpected signal during runtime execution&quot; on windows-amd64-longtest builder of Go 1.15.2 commit
  * go#40881 testing: summary and test output interleaved
  * go#40742 runtime: pcdata is -2 and 12 locals stack map entries error on nil pointer
  * go#40693 plugin: program on linux/s390x sometimes hangs after calling &quot;plugin.Open&quot;
  * go#40643 runtime: race between stack shrinking and channel send/recv leads to bad sudog values (forwarded request 841836 from jfkw)</comment>
    <requestid>841838</requestid>
  </revision>
  <revision rev="5" vrev="1">
    <srcmd5>eb554249d186860c071dcc80e85f05cc</srcmd5>
    <version>1.15.4</version>
    <time>1604926640</time>
    <user>dimstar_suse</user>
    <comment>- go1.15.4 (released 2020-11-05) includes fixes to cgo, the
  compiler, linker, runtime, and the compress/flate, net/http,
  reflect, and time packages.
  Refs boo#1175132 go1.15 release tracking
  * go#42169 cmd/compile, runtime, reflect: pointers to go:notinheap types must be stored indirectly in interfaces
  * go#42151 cmd/cgo: opaque struct pointers are broken since Go 1.15.3
  * go#42138 time: Location interprets wrong timezone (DST) with slim zoneinfo
  * go#42113 x/net/http2: the first write error on a connection will cause all subsequent write requests to fail blindly
  * go#41914 net/http: request.Clone doesn't deep copy TransferEncoding
  * go#41704 runtime: macOS syscall.Exec can get SIGILL due to preemption signal
  * go#41463 compress/flate: deflatefast produces corrupted output
  * go#41387 x/net/http2: connection-level flow control not returned if stream errors, causes server hang
  * go#40974 cmd/link: sectionForAddress(0xA9D67F) address not in any section file (forwarded request 846529 from jfkw)</comment>
    <requestid>846533</requestid>
  </revision>
  <revision rev="6" vrev="1">
    <srcmd5>36b47fb431a18a567e48df1b24128d69</srcmd5>
    <version>1.15.5</version>
    <time>1605450098</time>
    <user>dimstar_suse</user>
    <comment>- go1.15.5 (released 2020-11-12) includes security fixes to the
  cmd/go and math/big packages.
  CVE-2020-28362 CVE-2020-28367 CVE-2020-28366
  Refs boo#1175132 go1.15 release tracking
  * boo#1178750 CVE-2020-28362
  * go#42554 math/big: panic during recursive division of very large numbers
  * boo#1178752 CVE-2020-28367
  * go#42562 cmd/go: arbitrary code can be injected into cgo generated files
  * boo#1178753 CVE-2020-28366
  * go#42558 cmd/go: improper validation of cgo flags can lead to remote code execution at build time (forwarded request 848224 from jfkw)</comment>
    <requestid>848227</requestid>
  </revision>
  <revision rev="7" vrev="1">
    <srcmd5>ad7758c55031ef175592976f26e94df0</srcmd5>
    <version>1.15.6</version>
    <time>1607196911</time>
    <user>dimstar_suse</user>
    <comment>- go1.15.6 (released 2020-12-03) includes fixes to the compiler,
  linker, runtime, the go command, and the io package.
  Refs boo#1175132 go1.15 release tracking
  * go#42948 cmd/link: unexpected bindingNone in '_go.buildid'
  * go#42753 cmd/compile: ICE due to bad ORL constant
  * go#42636 runtime: infinite loop in lockextra on linux/amd64
  * go#42567 cmd/go: allow flags in CGO_LDFLAGS environment variable not in security allowlist
  * go#42550 io: Copy leaves file zero bytes in Azure AKS with CIFS - Go1.15 regression
  * go#42521 cmd/link: debug_line can contain multiple entries for the same PC address in Go 1.15.4
  * go#42369 internal/poll: CopyFileRange returns EIO on CentOS 7 ( Linux Kernel 3.10.0-1127) when io.Copy in mounted CIFS</comment>
    <requestid>852978</requestid>
  </revision>
  <revision rev="8" vrev="1">
    <srcmd5>c2cd9f950eac87b4d648d0c5cc4eef95</srcmd5>
    <version>1.15.7</version>
    <time>1611348555</time>
    <user>dimstar_suse</user>
    <comment>- go1.15.7 (released 2021-01-19) includes security fixes to the
  cmd/go and crypto/elliptic packages.
  CVE-2021-3114 CVE-2021-3115
  Refs boo#1175132 go1.15 release tracking
  * boo#1181145 CVE-2021-3114
  * go#43788 crypto/elliptic: incorrect operations on the P-224 curve
  * boo#1181146 CVE-2021-3115
  * go#43785 cmd/go: packages using cgo can cause arbitrary code execution on Windows (forwarded request 864486 from jfkw)</comment>
    <requestid>864487</requestid>
  </revision>
  <revision rev="9" vrev="1">
    <srcmd5>8124a5f913219e5ebd79316fe1d80257</srcmd5>
    <version>1.15.8</version>
    <time>1613044029</time>
    <user>dimstar_suse</user>
    <comment>- go1.15.8 (released 2021-02-04) includes fixes to the compiler,
  linker, runtime, the go command, and the net/http package.
  Refs boo#1175132 go1.15 release tracking
  * go#43861 cmd/go: TestScript/get_update_unknown_protocol test fails
  * go#43860 cmd/go: handle space in path to C compiler
  * go#43833 runtime: SIGSEGV in runtime.deltimer on linux-mips-rtrk during ReadMemStats
  * go#43797 cmd/go: TestScript/mod_get_fallback relies on x/tools not being tagged
  * go#43793 internal/execabs: disable tests on js-wasm
  * go#43575 cmd/compile: 32-bit random data corruption
  * go#43406 x/mobile/cmd/gomobile: gomobile build on simple program returns &quot;ld: error: duplicate symbol: x_cgo_inittls&quot;
  * go#43214 cmd/link: panic: runtime error: slice bounds out of range [::1751306] with length 1048576
  * go#42539 net/http: race in http2Transport
  * go#42384 cmd/link: PE linker segfaults in addpersrc when cross-compiling (forwarded request 869616 from jfkw)</comment>
    <requestid>869618</requestid>
  </revision>
</revisionlist>
