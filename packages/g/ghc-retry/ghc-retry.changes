-------------------------------------------------------------------
Fri Nov  8 16:14:36 UTC 2019 - Peter Simons <psimons@suse.com>

- Drop obsolete group attributes.

-------------------------------------------------------------------
Sat Oct 12 02:02:04 UTC 2019 - psimons@suse.com

- Update retry to version 0.8.1.0.
  0.8.1.0
  * Add `retryingDynamic` and `recoveringDynamic`. [PR 65](https://github.com/Soostone/retry/pull/65)

-------------------------------------------------------------------
Sat Sep 28 02:01:09 UTC 2019 - psimons@suse.com

- Update retry to version 0.8.0.2.
  0.8.0.2
  * Update docs for default retry policy. [PR 64](https://github.com/Soostone/retry/pull/64)

-------------------------------------------------------------------
Thu May  2 02:00:58 UTC 2019 - psimons@suse.com

- Update retry to version 0.8.0.1.
  0.8.0.1
  * Loosen upper bounds

-------------------------------------------------------------------
Thu Jan 31 03:01:49 UTC 2019 - psimons@suse.com

- Update retry to version 0.8.0.0.
  0.8.0.0
  * Remove dependency on data-default-class

-------------------------------------------------------------------
Sat Oct 20 11:31:57 UTC 2018 - Peter Simons <psimons@suse.com>

- Use https URL to refer to bugs.opensuse.org.

-------------------------------------------------------------------
Thu Aug 30 15:29:10 UTC 2018 - psimons@suse.com

- Update retry to version 0.7.7.0.
  0.7.7.0
  * Add `natTransformRetryPolicy`

-------------------------------------------------------------------
Fri Aug 17 09:43:21 UTC 2018 - psimons@suse.com

- Update retry to version 0.7.6.3.
  0.7.6.3
  * Documentation fix on `recoverAll`

-------------------------------------------------------------------
Wed Jul 18 14:26:39 UTC 2018 - psimons@suse.com

- Cosmetic: replace tabs with blanks, strip trailing white space,
  and update copyright headers with spec-cleaner.

-------------------------------------------------------------------
Mon May 14 17:02:11 UTC 2018 - psimons@suse.com

- Update retry to version 0.7.6.2.
  * Clarify the semantics of `limitRetriesByDelay`.
  * Add `limitRetriesByCumulativeDelay`
  * Improve haddocks for fullJitterBackoff.
  * Add Semigroup instance when the Semigroup class is available through base.
  * Loosen dependency upper bounds.
  * Add skipAsyncExceptions helper function

-------------------------------------------------------------------
Thu Aug  3 15:38:38 UTC 2017 - psimons@suse.com

- Updated with latest spec-cleaner version 0.9.8-8-geadfbbf.

-------------------------------------------------------------------
Tue Nov 29 11:31:08 UTC 2016 - psimons@suse.com

- Update to version 0.7.4.2 with cabal2obs.

-------------------------------------------------------------------
Fri Jul 22 05:57:39 UTC 2016 - psimons@suse.com

- Update to version 0.7.4.1 revision 0 with cabal2obs.

-------------------------------------------------------------------
Sun Jul 10 16:55:31 UTC 2016 - psimons@suse.com

- Update to version 0.7.4 revision 0 with cabal2obs.

-------------------------------------------------------------------
Thu Jun  2 04:51:45 UTC 2016 - mimi.vx@gmail.com

- update to 0.7.4
* Widen transformers dependency

-------------------------------------------------------------------
Mon May 30 09:57:28 UTC 2016 - mimi.vx@gmail.com

- update to 0.7.3
* Widen ghc-prim dependency for GHC 8

-------------------------------------------------------------------
Wed May  4 07:11:22 UTC 2016 - mimi.vx@gmail.com

- update to 0.7.2
* Fix premature integer overflow

-------------------------------------------------------------------
Fri Jan 15 10:08:09 UTC 2016 - mimi.vx@gmail.com

- update to 0.7.1
* Various documentation updates.
* Add stepping combinator for manual retries.
* Add applyPolicy and applyAndDelay
* Add Read instance for RetryStatus
* Fix logic bug in rsPreviousDelay in first retry

-------------------------------------------------------------------
Wed Dec 23 16:32:10 UTC 2015 - mimi.vx@gmail.com

- update to 0.7.0.1
* RetryPolicy has become RetryPolicyM, allowing for policy logic to consult the
        monad context.
* RetryPolicyM now takes a RetryStatus value. Use the function rsIterNum to
        preserve existing behavior of RetryPolicy only receiving the number.
* The monadic action now gets the RetryStatus on each try. Use const if you
         don't need it.
* recoverAll explicitly does not handle the standard async exceptions. Users are
        encouraged to do the same when using recovering, as catching async exceptions
        can be hazardous.
* We no longer re-export (<>) from Monoid.
* Utility functions simulatePolicy and simulatePolicyPP have been added which help
        predict how a policy will behave on each iteration.

-------------------------------------------------------------------
Thu Nov 19 13:26:04 UTC 2015 - mimi.vx@gmail.com

- initial commit
