From bb692b2c723c5e87cc8f89f445928e97594d5b8f Mon Sep 17 00:00:00 2001
From: Matthijs Kooijman <matthijs@stdin.nl>
Date: Fri, 30 Oct 2020 18:03:28 +0100
Subject: [PATCH] Fix #5: Do not use uint for command id (#6)

Since gcc 10, comparing this variable with -1 in a switch produces a
narrowing conversion error, breaking the build. Since `find_command`
returns an int, better to just store it as such as well.

This also makes some other casts unneeded, so remove those as well.
---
 src/command.cpp | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/command.cpp b/src/command.cpp
index 9aa0e14..1f32cf1 100644
--- a/src/command.cpp
+++ b/src/command.cpp
@@ -300,8 +300,9 @@ bool parse_comment(const string&line){
 		break;
 	case BEAUTIFY:{
 		commandstream>>command_part;
-		uint val=find_command(command_part,beaut),togglebit;
-		if(val!=(uint)-1&&val!=OFF)_commandState.beautifier=true;
+		int val=find_command(command_part,beaut);
+		uint togglebit;
+		if(val!=-1&&val!=OFF)_commandState.beautifier=true;
 		switch(val){
 		case -1:
 			IssueMessage(0,COMMAND_INVALID_ARG,gen[BEAUTIFY].name);
@@ -372,7 +373,7 @@ bool parse_comment(const string&line){
 dotoggle:
 			commandstream>>command_part;
 			val=find_command(command_part,beaut);
-			if(!commandstream||val==(uint)-1){
+			if(!commandstream||val==-1){
 				IssueMessage(0,COMMAND_INVALID_ARG,gen[BEAUTIFY].name);
 				return true;
 			}
