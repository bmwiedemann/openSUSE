Index: gdbm-1.18.1/src/gdbm_dump.c
===================================================================
--- gdbm-1.18.1.orig/src/gdbm_dump.c	2018-05-30 11:39:15.000000000 +0200
+++ gdbm-1.18.1/src/gdbm_dump.c	2020-01-20 17:48:28.838317331 +0100
@@ -19,8 +19,6 @@
 # include "gdbmapp.h"
 # include "gdbmdefs.h"
 
-char *parseopt_program_doc = "dump a GDBM database to a file";
-char *parseopt_program_args = "DB_FILE [FILE]";
 struct gdbm_option optab[] = {
   { 'H', "format", "binary|ascii|0|1", N_("select dump format") },
   { 0 }
@@ -43,6 +41,8 @@ main (int argc, char **argv)
   textdomain (PACKAGE);
 
   set_progname (argv[0]);
+  parseopt_program_doc = "dump a GDBM database to a file";
+  parseopt_program_args = "DB_FILE [FILE]";
 
   for (opt = parseopt_first (argc, argv, optab);
        opt != EOF;
Index: gdbm-1.18.1/src/gdbm_load.c
===================================================================
--- gdbm-1.18.1.orig/src/gdbm_load.c	2018-05-30 11:39:15.000000000 +0200
+++ gdbm-1.18.1/src/gdbm_load.c	2020-01-20 17:49:03.454509733 +0100
@@ -29,8 +29,6 @@ int mode;
 uid_t owner_uid;
 gid_t owner_gid;
 
-char *parseopt_program_doc = "load a GDBM database from a file";
-char *parseopt_program_args = "FILE [DB_FILE]";
 struct gdbm_option optab[] = {
   { 'r', "replace", NULL, N_("replace records in the existing database") },
   { 'm', "mode", N_("MODE"), N_("set file mode") },
@@ -107,6 +105,8 @@ main (int argc, char **argv)
   textdomain (PACKAGE);
 
   set_progname (argv[0]);
+  parseopt_program_doc = "load a GDBM database from a file";
+  parseopt_program_args = "FILE [DB_FILE]";
 
   for (opt = parseopt_first (argc, argv, optab);
        opt != EOF;
Index: gdbm-1.18.1/src/gdbmtool.c
===================================================================
--- gdbm-1.18.1.orig/src/gdbmtool.c	2018-10-18 14:48:12.000000000 +0200
+++ gdbm-1.18.1/src/gdbmtool.c	2020-01-20 17:50:08.118869170 +0100
@@ -1535,8 +1535,6 @@ command_lookup (const char *str, struct
   return found->tok;
 }
 
-char *parseopt_program_doc = N_("examine and/or modify a GDBM database");
-char *parseopt_program_args = N_("DBFILE [COMMAND [ARG ...]]");
 
 enum {
   OPT_LEX_TRACE = 256,
@@ -2054,6 +2052,8 @@ main (int argc, char *argv[])
   instream_t input = NULL;
   
   set_progname (argv[0]);
+  parseopt_program_doc = N_("examine and/or modify a GDBM database");
+  parseopt_program_args = N_("DBFILE [COMMAND [ARG ...]]");
 #if GDBM_DEBUG_ENABLE
   gdbm_debug_printer = debug_printer;
 #endif
