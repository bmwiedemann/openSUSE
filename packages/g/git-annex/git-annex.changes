-------------------------------------------------------------------
Tue May 20 14:30:35 UTC 2025 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20250520.
  git-annex (10.20250520) upstream; urgency=medium

    * Preferred content now supports "balanced=groupname:lackingcopies"
      to make files be evenly balanced amoung as many repositories as are
      needed to satisfy numcopies.
    * map: Fix buggy handling of remotes that are bare git repositories
      accessed via ssh.
    * map: Avoid looping forever with mutually recursive paths between
      repositories accessed via ssh.
    * whereused: Fix bug that could find matches from grafts
      in remote git-annex branches.
    * Windows: Fix bug that can cause git status to show annexed files as
      modified when built with OsPath.

   -- Joey Hess <id@joeyh.name>  Tue, 20 May 2025 10:25:47 -0400

-------------------------------------------------------------------
Wed Apr 16 17:35:22 UTC 2025 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20250416.
  git-annex (10.20250416) upstream; urgency=medium

    * Added the mask special remote.
    * updatecluster, updateproxy: When a remote that has no annex-uuid is
      configured as annex-cluster-node, warn and avoid writing bad data to
      the git-annex branch.
    * Fix build without the assistant.
    * fsck: Avoid complaining about required content of dead repositories.
    * drop: Avoid redundant object directory thawing.
    * httpalso: Windows url fix.
    * Added remote.name.annex-web-options config, which is a per-remote
      version of the annex.web-options config.
    * migrate: Fix --remove-size to work when a file is not present.
      Fixes reversion introduced in version 10.20231129.
    * Support git remotes that use a IPV6 link-local address with a zone ID.
    * Support git remotes that use an url with a user name that is URL
      encoded, or in the case of an "scp-style" url, a user name that must be
      encoded to be legal in an URL.
    * Fix git-lfs special remote ssh endpoint discovery when the repository
      path is URL encoded.

   -- Joey Hess <id@joeyh.name>  Wed, 16 Apr 2025 13:34:40 -0400

-------------------------------------------------------------------
Thu Mar 20 17:11:33 UTC 2025 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20250320.
  git-annex (10.20250320) upstream; urgency=medium

    * Added the compute special remote.
    * addcomputed: New command, adds a file that is generated by a compute
      special remote.
    * recompute: New command, recomputes computed files.
    * findcomputed: New command, displays information about computed files.
    * Support help.autocorrect settings "prompt", "never", and "immediate".
    * Allow setting remote.foo.annex-tracking-branch to a branch name
      that contains "/", as long as it's not a remote tracking branch.
    * Added OsPath build flag, which speeds up git-annex's operations on files.
    * git-lfs: Added an optional apiurl parameter.
      (This needs version 1.2.5 of the haskell git-lfs library to be used.)
    * fsck: Remember the files that are checked, so a later run with --more
      will skip them, without needing to use --incremental.

   -- Joey Hess <id@joeyh.name>  Thu, 20 Mar 2025 13:10:48 -0400

-------------------------------------------------------------------
Wed Jan 15 16:38:16 UTC 2025 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20250115.

    * Improve handing of ssh connection problems during
      remote annex.uuid discovery.
    * log: Support --key, as well as --branch and --unused.
    * Avoid verification error when addurl --verifiable is used
      with an url claimed by a special remote other than the web.
    * Fix installation on Android.
    * Allow enableremote of an existing webdav special remote that has
      read-only access.
    * git-remote-annex: Use enableremote rather than initremote.
    * Windows: Fix permission denied error when dropping files that
      have the readonly attribute set.
    * Added freezecontent-annex and thawcontent-annex hooks that
      correspond to the git configs annex.freezecontent and
      annex.thawcontent.
    * Added secure-erase-annex hook that corresponds to the git config
      annex.secure-erase-command.
    * Added commitmessage-annex hook that corresponds to the git config
      annex.commitmessage-command.
    * Added http-headers-annex hook that corresponds to the git config
      annex.http-headers-command.
    * Added git configs annex.post-update-command and annex.pre-commit-command
      that correspond to the post-update-annex and pre-commit-annex hooks.
    * Added annex.pre-init-command git config and pre-init-annex hook
      that is run before git-annex repository initialization.
    * Linux standalone builds' bundled rsync updated to fix security holes.

-------------------------------------------------------------------
Thu Jan  2 16:32:11 UTC 2025 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20250102.

    * Added config `url.<base>.annexInsteadOf` corresponding to git's
      `url.<base>.pushInsteadOf`, to configure the urls to use for accessing
      the git-annex repositories on a server without needing to configure
      remote.name.annexUrl in each repository.
    * Work around git hash-object --stdin-paths's odd stripping of carriage
      return from the end of the line (some windows infection), avoiding
      crashing when the repo contains a filename ending in a carriage return.
    * Document that settting preferred content to "" is the same as the
      default unset behavior.
    * sync: Avoid misleading warning about future preferred content
      transition when preferred content is set to "".
    * Honor annex.addunlocked configuration when importing a tree from a
      special remote.
    * Removed the i386ancient standalone tarball build for linux, which
      was increasingly unable to support new git-annex features.
    * Removed support for building with ghc older than 9.0.2,
      and with older versions of haskell libraries than are in current Debian
      stable.
    * stack.yaml: Update to lts-23.2.

- Refresh "0001-persistent-2.12.0.1-include-the-code-from-persistent.patch".
  Most patches to git-annex itself are now unnecessary. We only need to drop
  persistent-templates from the list of build dependencies.

-------------------------------------------------------------------
Mon Dec  2 16:37:14 UTC 2024 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20241202.
  git-annex (10.20241202) upstream; urgency=medium

    * add: Consistently treat files in a dotdir as dotfiles, even
      when ran inside that dotdir.
    * add: When adding a dotfile as a non-large file, mention that it's a
      dotfile.
    * p2phttp: Added --directory option which serves multiple git-annex
      repositories located inside a directory.
    * When remote.name.annexUrl is an annex+http(s) url, that
      uses the same hostname as remote.name.url, which is itself a http(s)
      url, they are assumed to share a username and password. This avoids
      unnecessary duplicate password prompts.
    * git-remote-annex: Fix a reversion introduced in version 10.20241031
      that broke cloning from a special remote.
    * git-remote-annex: Fix cloning from a special remote on a crippled
      filesystem.
    * git-remote-annex: Fix buggy behavior when annex.stalldetection is
      configured.
    * git-remote-annex: Require git version 2.31 or newer, since old
      ones had a buggy git bundle command.
    * S3: Support versioning=yes with a readonly bucket.
      (Needs aws-0.24.3)
    * S3: Send git-annex or other configured User-Agent.
      (Needs aws-0.24.3)
    * S3: Fix infinite loop and memory blowup when importing from an
      unversioned S3 bucket that is large enough to need pagination.
    * S3: Use significantly less memory when importing from a
      versioned S3 bucket.
    * vpop: Only update state after successful checkout.

   -- Joey Hess <id@joeyh.name>  Mon, 02 Dec 2024 12:31:08 -0400

-------------------------------------------------------------------
Thu Oct 31 21:20:43 UTC 2024 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20241031.
  git-annex (10.20241031) upstream; urgency=medium

    * Sped up proxied downloads from special remotes, by streaming.
    * Added GETORDERED request to external special remote protocol.
      When the external special remote responds with ORDERED, it can stream
      through a proxy.
    * p2phttp: Support serving unauthenticated users while requesting
      authentication for operations that need it. Eg, --unauth-readonly
      can be combined with --authenv.
    * p2phttp: Allow unauthenticated users to lock content by default.
    * p2phttp: Added --unauth-nolocking option to prevent unauthenticated
      users from locking content.
    * Allow enabling the servant build flag with older versions of stm,
      allowing building with ghc 9.0.2.
    * git-remote-annex: Fix bug that prevented using it with external special
      remotes, leading to protocol error messages involving "GITMANIFEST".
    * adjust: Allow any order of options when combining --hide-missing with
      options like --unlock.
    * Support P2P protocol version 4. This allows DATA-PRESENT to be sent
      after PUT (and in the HTTP P2P protocol, v4/put has a data-present
      parameter). When used with a proxy to a special remote like a S3
      bucket, this allows a custom client to upload content to S3 itself,
      and then use the P2P protocol to inform the proxy that the content has
      been stored there, which will result in the same git-annex branch state
      updates as sending DATA via the proxy.
    * Fix hang when receiving a large file into a proxied special remote.

   -- Joey Hess <id@joeyh.name>  Thu, 31 Oct 2024 17:19:56 -0400

-------------------------------------------------------------------
Mon Sep 30 23:17:41 UTC 2024 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20240927.
  git-annex (10.20240927) upstream; urgency=medium

    * Detect when a preferred content expression contains "not present",
      which would lead to repeatedly getting and then dropping files,
      and make it never match. This also applies to
      "not balanced" and "not sizebalanced".
    * Fix --explain display of onlyingroup preferred content expression.
    * Allow maxsize to be set to 0 to stop checking maxsize for a repository.
    * Fix bug that prevented anything being stored in an empty
      repository whose preferred content expression uses sizebalanced.
    * sim: New command, can be used to simulate networks of repositories
      and see how preferred content and other configuration makes file
      content flow through it.

   -- Joey Hess <id@joeyh.name>  Mon, 30 Sep 2024 19:15:35 -0400

-------------------------------------------------------------------
Sat Aug 31 23:51:02 UTC 2024 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20240831.
  git-annex (10.20240831) upstream; urgency=medium

    * Special remotes configured with exporttree=yes annexobjects=yes
      can store objects in .git/annex/objects, as well as an exported tree.
    * Support proxying to special remotes configured with
      exporttree=yes annexobjects=yes, and allow such remotes to be used as
      cluster nodes.
    * post-retrieve: When proxying is enabled for an exporttree=yes
      special remote (or it is a cluster node) and the configured
      remote.name.annex-tracking-branch is received, the tree is
      exported to the special remote.
    * Support "balanced=", "fullybalanced=", "sizebalanced=" and
      "fullysizebalanced=" in preferred content expressions.
    * Added --rebalance option.
    * Added the annex.fullybalancedthreshhold git config.
    * maxsize: New command to tell git-annex how large the expected maximum
      size of a repository is, and to display repository sizes.
    * vicfg: Include maxsize configuration.
    * info: Improved speed by using new repository size tracking.
    * lookupkey: Allow using --ref in a bare repository.
    * export: Added --from option.
    * git-remote-annex: Store objects in exportree=yes special remotes
      in the same paths used by annexobjects=yes. This is a backwards
      compatible change.
    * updateproxy, updatecluster: Prevent using an exporttree=yes special
      remote that does not have annexobjects=yes, since it will not work.
    * The config versioning=true is now reserved for use by versioned special
      remotes. External special remotes should not use that config for their
      own purposes.

   -- Joey Hess <id@joeyh.name>  Sat, 31 Aug 2024 19:48:17 -0400

-------------------------------------------------------------------
Thu Aug  8 19:27:29 UTC 2024 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20240808.
  git-annex (10.20240808) upstream; urgency=medium

    * Remove debug output (to stderr) accidentially included in
      last version.
    * When getting from a P2P HTTP remote, prompt for credentials when
      required, instead of failing.
    * When proxying an upload to a special remote, verify the hash.
    * Avoid loading cluster log at startup.

   -- Joey Hess <id@joeyh.name>  Thu, 08 Aug 2024 15:26:26 -0400

-------------------------------------------------------------------
Wed Jul 31 18:05:34 UTC 2024 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20240731.
  git-annex (10.20240731) upstream; urgency=medium

    * New HTTP API that is equivilant to the P2P protocol.
    * New p2phttp command to serve the HTTP API.
    * annex+http and annex+https urls can be configured for
      remote.name.annexUrl to use the HTTP API to communicate with a server.
      This supports writable repositories, as well as accessing clusters
      and proxied remotes over HTTP.
    * When a http remote has annex.url set to an annex+http url in
      the git config file on the website, it will be copied into
      remote.name.annexUrl the first time git-annex uses the remote.
    * assistant: Fix a race condition that could cause a pointer file to
      get ingested into the annex.
    * Avoid potential data loss in unlikely situations where git-annex-shell
      or git-annex remotedaemon is killed while locking a key to prevent its
      removal.
    * When proxying a download from a special remote, avoid unncessary hashing.
    * When proxying an upload to a special remote, verify the hash.
    * Propagate --force to git-annex transferrer.
    * Added a build flag for servant, enabling annex+http urls and
      git-annex p2phttp.
    * Added a dependency on the haskell clock library.
    * Updated stack.yaml to nightly-2024-07-29.

   -- Joey Hess <id@joeyh.name>  Wed, 31 Jul 2024 14:02:21 -0400

-------------------------------------------------------------------
Tue Jul  2 16:31:40 UTC 2024 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20240701.
  git-annex (10.20240701) upstream; urgency=medium

    * git-annex remotes can now act as proxies that provide access to
      their remotes. Configure this with remote.name.annex-proxy
      and the git-annex update proxy command.
    * Clusters are now supported. These are collections of nodes that can
      be accessed as a single entity, accessed by one or more gateway
      repositories.
    * Added git-annex initcluster, updatecluster, and extendcluster commands.
    * Fix a bug where interrupting git-annex while it is updating the
      git-annex branch for an export could later lead to git fsck
      complaining about missing tree objects.
    * Tab completion of options like --from now includes special remotes,
      as well as proxied remotes and clusters.
    * Tab completion of many commands like info and trust now includes
      remotes.
    * P2P protocol version 2.
    * Fix Windows build with Win32 2.13.4+
      Thanks, Oleg Tolmatcev
    * When --debugfilter or annex.debugfilter is set, avoid propigating
      debug output from git-annex-shell, since it cannot be filtered.

   -- Joey Hess <id@joeyh.name>  Mon, 01 Jul 2024 15:11:48 -0400

-------------------------------------------------------------------
Fri May 31 16:33:01 UTC 2024 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20240531.
  Upstream has edited the change log file since the last release in
  a non-trivial way, i.e. they did more than just add a new entry
  at the top. You can review the file at:
  http://hackage.haskell.org/package/git-annex-10.20240531/src/CHANGELOG

-------------------------------------------------------------------
Tue Apr 30 19:27:54 UTC 2024 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20240430.
  Upstream has edited the change log file since the last release in
  a non-trivial way, i.e. they did more than just add a new entry
  at the top. You can review the file at:
  http://hackage.haskell.org/package/git-annex-10.20240430/src/CHANGELOG

-------------------------------------------------------------------
Tue Feb 27 17:02:42 UTC 2024 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20240227.
  git-annex (10.20240227) upstream; urgency=medium

    * importfeed: Added --scrape option, which uses yt-dlp to screen scrape
      the equivilant of an RSS feed.
    * importfeed --force: Don't treat it as a failure when an already
      downloaded file exists. (Fixes a behavior change introduced in
      10.20230626.)
    * importfeed --force: Avoid creating duplicates of existing
      already downloaded files when yt-dlp or a special remote was used.
    * addurl, importfeed: Added --raw-except option.
    * stack.yaml: Update to lts-22.9 and use crypton.
    * assistant, undo: When committing, let the usual git commit
      hooks run.
    * Added annex.commitmessage-command config.
    * pre-commit: Avoid committing the git-annex branch
      (except when a commit is made in a view, which changes metadata).
    * Pass --no-warnings to yt-dlp.

   -- Joey Hess <id@joeyh.name>  Tue, 27 Feb 2024 12:58:30 -0400

-------------------------------------------------------------------
Mon Jan 29 18:12:40 UTC 2024 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20240129.
  git-annex (10.20240129) upstream; urgency=medium

    * info: Added "annex sizes of repositories" table to the overall display.
    * import: Sped up import from special remotes.
    * import: Added --message/-m option.
    * Support using commands that implement the Stateless OpenPGP command line
      interface, as an alternative to gpg.
      Currently only supported for encryption=shared special remotes,
      when annex.shared-sop-command is configured.
    * test: Test a specified Stateless OpenPGP command when
      run with eg --test-git-config annex.shared-sop-command=sqop
    * Improve disk free space checking when transferring unsized keys to
      local git remotes.
    * Added configs annex.stalldetection-download, annex.stalldetection-upload,
      annex.bwlimit-download, annex.bwlimit-upload,
      and similar per-remote configs.
    * Improve annex.stalldetection to handle remotes that update progress
      less frequently than the configured time period.
    * external: Monitor file size when getting content from external
      special remotes and use that to update the progress meter,
      in case the external special remote program does not report progress.
    * Added --expected-present file matching option.
    * webapp: Added --port option, and annex.port config.
    * assistant: When generating a gpg secret key, avoid hardcoding the
      key algorithm and size.

   -- Joey Hess <id@joeyh.name>  Mon, 29 Jan 2024 13:12:00 -0400

  git-annex (10.20231227) upstream; urgency=medium

    * migrate: Support distributed migrations by recording each migration,
      and adding a --update option that updates the local repository
      incrementally, hard linking annex objects to their new keys.
    * pull, sync: When operating on content, automatically handle
      distributed migrations.
    * Added annex.syncmigrations config that can be set to false to prevent
      pull and sync from migrating object content.
    * migrate: Added --apply option that (re)applies all recorded
      distributed migrations to the objects in repository.
    * migrate: Support adding size to URL keys that were added with
      --relaxed, by running eg: git-annex migrate --backend=URL foo
    * When importing from a special remote, support preferred content
      expressions that use terms that match on keys (eg "present", "copies=1").
      Such terms are ignored when importing, since the key is not known yet.
      Before, such expressions caused the import to fail.
    * Support git-annex copy/move --from-anywhere --to remote.
    * Make git-annex get/copy/move --from foo override configuration of
      remote.foo.annex-ignore, as documented.
    * Lower precision of timestamps in git-annex branch, which can reduce the
      size of the branch by up to 8%.
    * sync: Fix locking problems during merge when annex.pidlock is set.
    * Avoid a problem with temp file names ending in "." on certian
      filesystems that have problems with such filenames.
    * sync, push: Avoid trying to send individual files to special remotes
      configured with importtree=yes exporttree=no, which would always fail.
    * Fix a crash opening sqlite databases when run in a non-unicode locale.
      (Needs persistent-sqlite 2.13.3.)

   -- Joey Hess <id@joeyh.name>  Wed, 27 Dec 2023 19:27:37 -0400

  git-annex (10.20231129) upstream; urgency=medium

    * Fix bug in git-annex copy --from --to that skipped files that were
      locally present.
    * Make git-annex copy --from --to --fast actually fast.
    * Fix crash of enableremote when the special remote has embedcreds=yes.
    * Ignore directories and other unusual files in .git/annex/journal/
    * info: Added calculation of combined annex size of all repositories.
    * log: Added options --sizesof, --sizes and --totalsizes that
      display how the size of repositories changed over time.
    * log: Added options --interval, --bytes, --received, and --gnuplot
      to tune the output of the above added options.
    * findkeys: Support --largerthan and --smallerthan.
    * importfeed: Use caching database to avoid needing to list urls
      on every run, and avoid using too much memory.
    * Improve memory use of --all when using annex.private.
    * lookupkey: Sped up --batch.
    * Windows: Consistently avoid ending standard output lines with CR.
      This matches the behavior of git on Windows.
    * Windows: Fix CRLF handling in some log files.
    * Windows: When git-annex init is installing hook scripts, it will
      avoid ending lines with CR for portability. Existing hook scripts
      that do have CR line endings will not be changed.

   -- Joey Hess <id@joeyh.name>  Wed, 29 Nov 2023 15:59:20 -0400

-------------------------------------------------------------------
Thu Nov 16 13:31:34 UTC 2023 - Peter Simons <psimons@suse.com>

- Update build dependencies for ghc-9.6.x.

-------------------------------------------------------------------
Tue Sep 26 17:36:33 UTC 2023 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20230926.
  git-annex (10.20230926) upstream; urgency=medium

    * Fix more breakage caused by git's fix for CVE-2022-24765, this time
      involving a remote (either local or ssh) that is a repository not owned
      by the current user.
    * Fix using git remotes that are bare when git is configured with
      safe.bareRepository = explicit.
    * Fix linker optimisation in linux standalone tarballs.
    * adb: Avoid some problems with unusual characters in exporttree
      filenames that confuse adb shell commands.
    * push: When on an adjusted branch, propagate changes to parent branch
      before updating export remotes.
    * lookupkey: Added --ref option.
    * enableremote: Avoid overwriting existing git remote when passed the uuid
      of a specialremote that was earlier initialized with the same name.
    * Support being built with crypton rather than the no-longer maintained
      cryptonite.
    * Removed the vendored git-lfs and the GitLfs build flag.

   -- Joey Hess <id@joeyh.name>  Tue, 26 Sep 2023 13:23:37 -0400

-------------------------------------------------------------------
Mon Aug 28 17:04:40 UTC 2023 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20230828.
  git-annex (10.20230828) upstream; urgency=medium

    * oldkeys: New command that lists the keys used by old versions of a file.
    * Fix behavior of onlyingroup.
    * info: Added --dead-repositories option.
    * Significant startup speed increase by avoiding repeatedly checking
      if some remote git-annex branch refs need to be merged.
    * Fix behavior when importing a tree from a directory remote when the
      directory does not exist. An empty tree was imported, rather than the
      import failing.
    * sync, assist, push, pull: Skip more types of remotes when they
      are not available due to eg being on a drive that is offline.
      (directory, borg, bup, ddar, gcrypt, rsync)
    * info: Added available to the info displayed for a remote.
    * Added AVAILABILITY UNAVAILABLE and the UNAVAILABLERESPONSE extension
      to the external special remote protocol.
    * The remote.name.annex-availability git config is no longer used.
    * Avoid using curl when annex.security.allowed-ip-addresses is set
      but neither annex.web-options nor annex.security.allowed-url-schemes
      is set to a value that needs curl.
    * Stop bundling curl in the OSX dmg and linux standalone image.
    * diffdriver: Added --get option.
    * diffdriver: Refuse to run when not in a git-annex repository.

   -- Joey Hess <id@joeyh.name>  Mon, 28 Aug 2023 12:40:37 -0400

-------------------------------------------------------------------
Wed Aug  2 20:09:47 UTC 2023 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20230802.
  Upstream has edited the change log file since the last release in
  a non-trivial way, i.e. they did more than just add a new entry
  at the top. You can review the file at:
  http://hackage.haskell.org/package/git-annex-10.20230802/src/CHANGELOG

-------------------------------------------------------------------
Mon Jun 26 15:55:00 UTC 2023 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20230626.
  git-annex (10.20230626) upstream; urgency=medium

    * Split out two new commands, git-annex pull and git-annex push.
      Those plus a git commit are equivilant to git-annex sync.
      (Note that the new commands default to syncing content, unless
      annex.synccontent is explicitly set to false.)
    * assist: New command, which is the same as git-annex sync but with
      new files added and content transferred by default.
    * sync: Started a transition to --content being enabled by default.
      When used without --content or --no-content, warn about the upcoming
      transition, and suggest using one of the options, or setting
      annex.synccontent.
    * sync: Added -g as a short option for --no-content.
    * Many commands now quote filenames that contain unusual characters the
      same way that git does, to avoid exposing control characters to the
      terminal.
    * Support core.quotePath, which can be set to false to display utf8
      characters as-is in filenames.
    * Control characters in non-filename data coming from the repository or
      other possible untrusted sources are filtered out of the display of many
      commands. When the command output is intended for use in scripting,
      control characters are only filtered out when displaying to the
      terminal.
    * find, findkeys, examinekey: When outputting to a terminal and --format
      is not used, quote control characters. Output to a pipe is unchanged.
      (Similar to the behavior of GNU find.)
    * addurl --preserve-filename now rejects filenames that contain other
      control characters, besides the escape sequences it already rejected.
    * init: Avoid autoenabling special remotes that have control characters
      in their names.
    * Support core.sharedRepository=0xxx at long last.
    * Support --json and --json-error-messages in many more commands
      (addunused, configremote, dead, describe, dropunused, enableremote,
      expire, fix, importfeed, init, initremote, log, merge, migrate, reinit,
      reinject, rekey, renameremote, rmurl, semitrust, setpresentkey, trust,
      unannex, undo, uninit, untrust, unused, upgrade)
    * importfeed: Support -J
    * importfeed: Support --json-progress
    * httpalso: Support being used with special remotes that use chunking.
    * Several significant speedups to importing large trees from special
      remotes. Imports that took over an hour now take only a few minutes.
    * Cache negative lookups of global numcopies and mincopies.
      Speeds up eg git-annex sync --content by up to 50%.
    * Speed up sync in an adjusted branch by avoiding re-adjusting the branch
      unncessarily, particularly when it is adjusted with --hide-missing
      or --unlock-present.
    * config: Added the --show-origin and --for-file options.
    * config: Support annex.numcopies and annex.mincopies.
    * whereused: Fix display of branch:file when run in a subdirectory.
    * enableremote: Support enableremote of a git remote (that was previously
      set up with initremote) when additional parameters such as autoenable=
      are passed.
    * configremote: New command, currently limited to changing autoenable=
      setting of a special remote.
    * Honor --force option when operating on a local git remote.
    * When a nonexistant file is passed to a command and
      --json-error-messages is enabled, output a JSON object indicating the
      problem. (But git ls-files --error-unmatch still displays errors about
      such files in some situations.)
    * Bug fix: Create .git/annex/, .git/annex/fsckdb,
      .git/annex/sentinal, .git/annex/sentinal.cache, and
      .git/annex/journal/* with permissions configured by core.sharedRepository.
    * Bug fix: Lock files were created with wrong modes for some combinations
      of core.sharedRepository and umask.
    * initremote: Avoid creating a remote that is not encrypted when gpg is
      broken.
    * log: When --raw-date is used, display only seconds from the epoch, as
      documented, omitting a trailing "s" that was included in the output
      before.
    * addunused: Displays the names of the files that it adds.
    * reinject: Fix support for operating on multiple pairs of files and keys.
    * sync: Fix buggy handling of --no-pull and --no-push when syncing
      --content. With --no-pull, avoid downloading content, and with
      --no-push avoid uploading content. This was done before, but
      inconsistently.
    * uninit: Avoid buffering the names of all annexed files in memory.
    * Fix bug in -z handling of trailing NUL in input.
    * version: Avoid error message when entire output is not read.
    * Fix excessive CPU usage when parsing yt-dlp (or youtube-dl) progress
      output fails.
    * Use --progress-template with yt-dlp to fix a failure to parse
      progress output when only an estimated total size is known.
    * When yt-dlp is available, default to using it in preference to
      youtube-dl. Using youtube-dl is now deprecated, and git-annex no longer
      tries to parse its output to display download progress
    * Improve resuming interrupted download when using yt-dlp or youtube-dl.
    * assistant: Add dotfiles to git by default, unless annex.dotfiles
      is configured, the same as git-annex add does.
    * assistant --autostop: Avoid crashing when ~/.config/git-annex/autostart
      lists a directory that it cannot chdir to.
    * Fix display when run with -J1.
    * assistant: Fix a crash when a small file is deleted immediately after
      being created.
    * repair: Fix handling of git ref names on Windows.
    * repair: Fix a crash when .git/annex/journal/ does not exist.
    * Support building with optparse-applicative 0.18.1
      (Thanks, Peter Simons)

- Drop "0001-Adapt-code-to-optparse-applicative-0.18.1-and-later.patch",
  which has become obsolete.

-------------------------------------------------------------------
Wed Jun 21 14:52:10 UTC 2023 - Peter Simons <psimons@suse.com>

- Apply "0001-Adapt-code-to-optparse-applicative-0.18.1-and-later.patch"
  to allow git-annex to build with the latest release of the
  optparse-applicative library.

-------------------------------------------------------------------
Fri Apr  7 17:37:48 UTC 2023 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20230407.
  git-annex (10.20230407) upstream; urgency=medium

    * Fix laziness bug introduced in last release that breaks use
      of --unlock-present and --hide-missing adjusted branches.
    * Support user.useConfigOnly git config.
    * registerurl, unregisterurl: Added --remote option.
    * registerurl: When an url is claimed by a special remote other than the
      web, update location tracking for that special remote.
      (This was the behavior before version 6.20181011)
    * Sped up sqlite inserts 2x when built with persistent 2.14.5.0
    * git-annex.cabal: Prevent building with unix-compat 0.7 which
      removed System.PosixCompat.User.

   -- Joey Hess <id@joeyh.name>  Fri, 07 Apr 2023 13:36:23 -0400

-------------------------------------------------------------------
Thu Mar 30 17:09:14 UTC 2023 - Peter Simons <psimons@suse.com>

- Updated spec file to conform with ghc-rpm-macros-2.5.2.

-------------------------------------------------------------------
Wed Mar 29 20:09:41 UTC 2023 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20230329.
  * sync: Fix parsing of gcrypt::rsync:// urls that use a relative path.
  * Avoid failure to update adjusted branch --unlock-present after git-annex
    drop when annex.adjustedbranchrefresh=1
  * Avoid leaving repo with a detached head when there is a failure
    checking out an updated adjusted branch.
  * view: Support annex.maxextensionlength when generating filenames for
    the view branch.
  * Windows: Support urls like "file:///c:/path"
  * addurl, importfeed: Fix failure when annex.securehashesonly is set.
  * Copy with a reflink when exporting a tree to a directory special remote.
  * Fix bug that caused broken protocol to be used with external remotes
    that use exporttree=yes. In some cases this could result in the wrong
    content being exported to, or retrieved from the remote.
  * Support VERSION 2 in the external special remote protocol, which is
    identical to VERSION 1, but avoids external remote programs neededing
    to work around the above bug. External remote program that support
    exporttree=yes are recommended to be updated to send VERSION 2.
  * Using git-annex view in an adjusted branch, or git-annex adjust in a
    view branch, will enter an adjusted view branch.
  * sync: Fix a reversion that prevented sending files to exporttree=yes
    remotes when annex-tracking-branch was configured to branch:subdir
    (Introduced in version 10.20230214)
  * status: This command is deprecated because it was only needed in direct
    mode; git status --short is very similar.
  * Windows: Support long filenames in more (possibly all) of the code.
  * Added arm64 build for ancient kernels, needed to support Android phones
    whose kernels are too old to support kernels used by the current arm64
    build.
  * importfeed: Display feed title.
  * init: Support being ran in a repository that has a newline in its path.
  * copy: When --from and --to are combined and the content is already
    present on the destination remote, update location tracking as
    necessary.
  * Fixed spelling of some messages and added a .codespellrc
    Thanks, Yaroslav Halchenko
  * Fix more breakage caused by git's fix for CVE-2022-24765, this time
    involving a remote that is a local bare repository not owned by the
    current user.
  * info: Fix reversion in last release involving handling of unsupported
    input by continuing to handle any other inputs, before exiting nonzero
    at the end.
  * git-annex.cabal: Move webapp build deps under the Assistant build flag
    so git-annex can be built again without yesod etc installed.
  * Improve error message when unable to read a sqlite database due to
    permissions problem.
  * sync: Fix a bug that caused files to be removed from an
    importtree=yes exporttree=yes special remote when the remote's
    annex-tracking-branch was not the currently checked out branch.
  * S3: Support a region= configuration useful for some non-Amazon S3
    implementations. This feature needs git-annex to be built with aws-0.24.
  * view: New field?=glob and ?tag syntax that includes a directory "_"
    in the view for files that do not have the specified metadata set.
  * Added annex.viewunsetdirectory git config to change the name of the
    "_" directory in a view.
  * Changed the name of view branches to include the parent branch.
    Existing view branches checked out using an old name will still work.
  * sync: Avoid pushing view branches to remotes.
  * sync: When run in a view branch, refresh the view branch to reflect any
    changes that have been made to the parent branch or metadata.
  * sync: When run in a view branch, avoid updating synced/ branches,
    or trying to merge anything from remotes.
  * Support http urls that contain ":" that is not followed by a port
    number, the same as git does.
  * sync: Warn when the adjusted basis ref cannot be found, as happens eg when
    the user has renamed branches.
  * Sped up view branch construction by 50%.
  * info, enableremotemote, renameremote: Avoid a confusing message when more
    than one repository matches the user provided name.
  * info: Exit nonzero when the input is not supported.

- Apply "0001-persistent-2.12.0.1-include-the-code-from-persistent.patch"
  to avoid depending on the obsolete persistent-templates package.

-------------------------------------------------------------------
Thu Jan 26 19:34:35 UTC 2023 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20230126.
  git-annex (10.20230126) upstream; urgency=medium

    * Change --metadata comparisons < > <= and >= to fall back to
      lexicographical comparisons when one or both values being compared
      are not numbers.
    * Improve handling of some .git/annex/ subdirectories being on other
      filesystems, in the bittorrent special remote, and youtube-dl
      integration, and git-annex addurl.
    * Added --anything (and --nothing). Eg, git-annex find --anything
      will list all annexed files whether or not the content is present.
      This is slightly faster and clearer than --include=* or --exclude=*
    * Speed up git-annex upgrade (from v5) and init in a repository that has
      submodules.
    * Added libgcc_s.so.1 to the linux standalone build so pthread_cancel
      will work.
    * Speed up initial scanning for annexed files when built
      with persistent-2.14.4.1
    * Allow initremote of additional special remotes with type=web,
      in addition to the default web special remote. When --sameas=web is used,
      these provide additional names for the web special remote, and may
      also have their own additional configuration and cost.
    * web: Add urlinclude and urlexclude configuration settings.
    * Added an optional cost= configuration to all special remotes.
    * adb: Support the remote.name.cost and remote.name.cost-command configs.
    * findkeys: New command, very similar to git-annex find but operating on
      keys.
    * move, copy: Support combining --from and --to, which will send content
      from one remote across to another remote.

   -- Joey Hess <id@joeyh.name>  Thu, 26 Jan 2023 15:26:22 -0400

-------------------------------------------------------------------
Mon Dec 12 16:53:17 UTC 2022 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20221212.
  git-annex (10.20221212) upstream; urgency=medium

    * Fix a hang that occasionally occurred during commands such as move,
      when operating on unlocked files. (A bug introduced in 10.20220927)
    * When youtube-dl is not available in PATH, use yt-dlp instead.
    * Support parsing yt-dpl output to display download progress.
    * init: Avoid scanning for annexed files, which can be lengthy in a
      large repository. Instead that scan is done on demand.
    * Sped up the initial scan for annexed files by 21%.
    * test: Add --test-debug option.
    * Support quettabyte and yottabyte.

   -- Joey Hess <id@joeyh.name>  Mon, 12 Dec 2022 12:20:06 -0400

  git-annex (10.20221104) upstream; urgency=medium

    * export: Fix a bug that left a file on a special remote when
      two files with the same content were both deleted in the exported tree.
    * S3: Support signature=anonymous to access a S3 bucket anonymously.
      This can be used, for example, with importtree=yes to import from
      a public bucket.
      This feature needs git-annex to be built with aws-0.23.

   -- Joey Hess <id@joeyh.name>  Thu, 03 Nov 2022 14:07:31 -0400

-------------------------------------------------------------------
Thu Nov  3 18:09:01 UTC 2022 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20221103.
  git-annex (10.20221103) upstream; urgency=medium

    * Doubled the speed of git-annex drop when operating on many files,
      and of git-annex get when operating on many tiny files.
    * trust, untrust, semitrust, dead: Fix behavior when provided with
      multiple repositories to operate on.
    * trust, untrust, semitrust, dead: When provided with no parameters,
      do not operate on a repository that has an empty name.
    * move: Fix openFile crash with -J
      (Fixes a reversion in 8.20201103)
    * S3: Speed up importing from a large bucket when fileprefix= is set,
      by only asking for files under the prefix.
    * When importing from versioned remotes, fix tracking of the content
      of deleted files.
    * More robust handling of ErrorBusy when writing to sqlite databases.
    * Avoid hanging when a suspended git-annex process is keeping a sqlite
      database locked.
    * Make --batch mode handle unstaged annexed files consistently
      whether the file is unlocked or not. Note that this changes the
      behavior of --batch when it is provided with locked files that are
      in the process of being added to the repository, but have not yet been
      staged in git.
    * Make git-annex enable-tor work when using the linux standalone build.

   -- Joey Hess <id@joeyh.name>  Thu, 03 Nov 2022 14:07:31 -0400

-------------------------------------------------------------------
Mon Oct  3 17:25:08 UTC 2022 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20221003.
  git-annex (10.20221003) upstream; urgency=medium

    * Avoid displaying warning about git-annex restage needing to be run
      in situations where it does not.
    * Fix the annex.adviceNoSshCaching config, which has never worked.
      Thanks, Reiko Asakura

   -- Joey Hess <id@joeyh.name>  Mon, 03 Oct 2022 12:38:48 -0400

  git-annex (10.20220927) upstream; urgency=medium

    * Fix a bug in the last release that caused v8 repositories to upgrade
      immediately to v10, rather than taking the scheduled 1 year to do so.
    * annex.diskreserve default increased from 1 mb to 100 mb.
    * Include the assistant and webapp when building with cabal 3.4.1.0.
    * Merged the webapp build flag into the assistant build flag.
    * Optimise linker in linux standalone tarballs.
    * Fix crash importing from a directory special remote that contains
      a broken symlink.
    * When accessing a git remote over http needs a git credential
      prompt for a password, cache it for the lifetime of the git-annex
      process, rather than repeatedly prompting.
    * Use curl for downloads from git remotes when annex.url-options is set.
    * Fix a reversion that made dead keys not be skipped when operating on
      all keys via --all or in a bare repo.
      (Introduced in version 8.20200720)
    * vicfg: Include mincopies configuration.
    * Improve handling of directory special remotes with importtree=yes whose
      ignoreinode setting has been changed. When getting a file from such a
      remote, accept the content that would have been accepted with the
      previous ignoreinode setting.
    * directory, adb: Fixed a bug with importtree=yes and multiple files
      in the special remote have the same content, that caused it to
      refuse to get a file from the special remote, incorrectly complaining
      that it had changed, due to only accepting the inode+mtime of one file
      (that was since modified or deleted) and not accepting the inode+mtime
      of other duplicate files.
    * Fix a reversion that prevented git-annex from working in a
      repository when --git-dir or GIT_DIR is specified to relocate the git
      directory to somewhere else.
      (Introduced in version 10.20220525)
    * Improved handling of --time-limit when combined with -J
    * Fix updating git index file after getting an unlocked file
      when annex.stalldetection is set.
    * restage: New git-annex command, handles restaging unlocked files.
    * test: Added --test-with-git-config option.
    * Run annex.freezecontent-command and annex.thawcontent-command
      when on a crippled filesystem.
      Thanks, Reiko Asakura
    * enable-tor: Fix breakage caused by git's fix for CVE-2022-24765.
    * Let GIT_DIR and --git-dir override git's protection against operating
      in a repository owned by another user.
    * p2p: Pass wormhole the --appid option before the receive/send command,
      as it does not accept that option after the command
    * Support "inbackend" in preferred content expressions.

   -- Joey Hess <id@joeyh.name>  Tue, 27 Sep 2022 13:31:18 -0400

-------------------------------------------------------------------
Mon Aug 22 16:08:54 UTC 2022 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20220822.
  Upstream has edited the change log file since the last release in
  a non-trivial way, i.e. they did more than just add a new entry
  at the top. You can review the file at:
  http://hackage.haskell.org/package/git-annex-10.20220822/src/CHANGELOG

-------------------------------------------------------------------
Mon Jul 25 18:08:17 UTC 2022 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20220724.
  git-annex (10.20220724) upstream; urgency=medium

    * filter-process: Fix a bug involving handling of empty files,
      that caused git to kill git-annex filter-process.
    * add: Fix reversion when adding an annex link that has been moved to
      another directory. (Introduced in version 10.20220624)
    * Added annex.alwayscompact setting which can be unset to speed up
      writes to the git-annex branch in some cases. See its documentation
      for important notes on when it's appropariate to use.
    * adb: Added configuration setting oldandroid=true to avoid using
      find -printf, which was first supported in Android around 2019-2020.
      This may need to be enabled for old android devices that used to work
      without it being set, since version 10.20220222 started using
      find -printf.
    * --backend is no longer a global option, and is only accepted by
      commands that actually need it.
    * Improve handling of parallelization with -J when copying content
      from/to a git remote that is a local path.
    * S3: Avoid writing or checking the uuid file in the S3 bucket when
      importtree=yes or exporttree=yes.
    * Fix a reversion that prevented --batch commands (and the assistant)
      from noticing data written to the journal by other commands.
    * Fix building with the Assistant build flag disabled but the Webapp
      build flag enabled.

   -- Joey Hess <id@joeyh.name>  Mon, 25 Jul 2022 12:55:38 -0400

-------------------------------------------------------------------
Thu Jun 23 18:00:23 UTC 2022 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20220624.
  git-annex (10.20220624) upstream; urgency=medium

    * init: Added --no-autoenable option.
    * info: Added --autoenable option.
    * initremote: Improve handling of type=git special remotes.
      The location value no longer needs to match the url of an existing
      git remote, and locations not using ssh:// will work now, including
      both paths and host:/path
    * Fix retrival of an empty file that is stored in a special remote with
      chunking enabled.
      (Fixes a reversion in 8.20201103)
    * move: Improve resuming a move that succeeded in transferring the
      content, but where dropping failed due to eg a network problem,
      in cases where numcopies checks prevented the resumed
      move from dropping the object from the source repository.
    * add, fix, lock, rekey: When several files were being processed,
      replacing an annex symlink of a file that was already processed
      with a new large file could sometimes cause that large file to be
      added to git. These races have been fixed.
    * add: Also fix a similar race that could cause a large file be added
      to git when a small file was modified or overwritten while it was
      being added.
    * add --batch: Fix handling of a file that is skipped due to being
      gitignored.

   -- Joey Hess <id@joeyh.name>  Thu, 23 Jun 2022 13:31:22 -0400

-------------------------------------------------------------------
Wed May 25 18:02:14 UTC 2022 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20220525.
  git-annex (10.20220525) upstream; urgency=medium

    * Special remotes with importtree=yes or exporttree=yes are once again
      treated as untrusted, since files stored in them can be deleted or
      modified at any time.
      (Fixes a reversion in 8.20201129)
    * Added support for "megabit" and related bandwidth units
      in annex.stalldetection and everywhere else that git-annex parses
      data units. Note that the short form is "Mbit" not "Mb" because
      that differs from "MB" only in case, and git-annex parses units
      case-insensitively.
    * Special remotes using exporttree=yes and/or importtree=yes now
      checksum content while it is being retrieved, instead of in a separate
      pass at the end.
    * fsck: Fix situations where the annex object file is stored in a
      directory structure other than where annex symlinks point to.
    * Deal with git's recent changes to fix CVE-2022-24765, which prevent
      using git in a repository owned by someone else.
    * Improve an error message displayed in that situation.
    * Prevent git-annex init incorrectly reinitializing the repository in
      that situation.
    * test: When limiting tests to run with -p, work around tasty limitation
      by automatically including dependent tests.

   -- Joey Hess <id@joeyh.name>  Wed, 25 May 2022 13:44:46 -0400

  git-annex (10.20220504) upstream; urgency=medium

    * Ignore annex.numcopies set to 0 in gitattributes or git config,
      or by git-annex numcopies or by --numcopies, since that
      configuration would make git-annex easily lose data.
      Same for mincopies.
    * assistant: When annex.autocommit is set, notice commits that
      the user makes manually, and push them out to remotes promptly.
    * multicast: Support uftp 5.0 by switching from aes256-cbc to
      aes256-gcm.
    * Fix test failure on NFS when cleaning up gpg temp directory.
    * Fix a build failure with ghc 9.2.2.
      Thanks, gnezdo for the patch.
    * rsync 3.2.4 broke backwards-compatability by preventing exposing
      filenames to the shell. Made the rsync and gcrypt special remotes
      detect this and disable shellescape. Closes: #1010397
    * repair: Avoid treating refs/annex/last-index or other refs that
      are not commit objects as evidence of repository corruption.

   -- Joey Hess <id@joeyh.name>  Wed, 04 May 2022 11:45:27 -0400

-------------------------------------------------------------------
Tue Mar 22 17:57:22 UTC 2022 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20220322.
  git-annex (10.20220322) upstream; urgency=medium

    * Directory special remotes with importtree=yes have changed to once more
      take inodes into account. This will cause extra work when importing
      from a directory on a FAT filesystem that changes inodes on every
      mount. To avoid that extra work, set ignoreinodes=yes when initializing
      a new directory special remote, or change the configuration of your
      existing remote:
        git-annex enableremote foo ignoreinodes=yes
    * add: Avoid unncessarily converting a newly unlocked file to be stored
      in git when it is not modified, even when annex.largefiles does not
      match it.
    * The above change to add fixes a reversion in version 10.20220222,
      where git-annex unlock followed by git-annex add, followed by git
      commit file could result in git thinking the file was modified
      after the commit.
    * Detect when an unlocked file whose content is not present has gotten
      some other content appended to it, and avoid treating it as a pointer
      file, so that appended content will not be checked into git, but will
      be annexed like any other file.
    * smudge: Warn when encountering a pointer file that has other content
      appended to it.
    * When annex.freezecontent-command is set, and the filesystem does not
      support removing write bits, avoid treating it as a crippled
      filesystem.
    * Run annex.thawcontent-command before deleting an object file,
      in case annex.freezecontent-command did something that would prevent
      deletion.
    * Fix propagation of nonzero exit status from git ls-files when a specified
      file does not exist, or a specified directory does not contain
      any files checked into git.
    * Fix build with aeson 2.0.
      Thanks, sternenseemann for the patch.
    * Avoid git-annex test being very slow when run from within the
      standalone linux tarball or OSX app.
    * test: Runs tests in parallel to speed up the test suite.
    * test: Added --jobs option.
    * Removed vendored copy of http-client-restricted, and removed the
      HttpClientRestricted build flag that avoided that dependency.
    * Removed the NetworkBSD build flag.

   -- Joey Hess <id@joeyh.name>  Tue, 22 Mar 2022 13:56:12 -0400

-------------------------------------------------------------------
Tue Feb 22 17:35:50 UTC 2022 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20220222.
  git-annex (10.20220222) upstream; urgency=medium

    * annex.skipunknown now defaults to false, so commands like
      `git annex get foo*` will not silently skip over files/dirs that are
      not checked into git.
    * info: Allow using matching options in more situations. File matching
      options like --include will be rejected in situations where there is
      no filename to match against.
    * adb: Avoid find failing with "Argument list too long"
    * Fix git-annex forget propagation between repositories.
      (reversion introduced in version 7.20190122)
    * registerurl, unregisterurl: Improved output when reading from stdin
      to be more like other batch commands.
    * registerurl, unregisterurl: Added --json and --json-error-messages options.
    * Avoid git status taking a long time after git-annex unlock of many files.
    * Pass --no-textconv when running git diff internally.

   -- Joey Hess <id@joeyh.name>  Tue, 22 Feb 2022 13:01:20 -0400

-------------------------------------------------------------------
Thu Jan 27 18:55:05 UTC 2022 - Peter Simons <psimons@suse.com>

- Update git-annex to version 10.20220127.
  git-annex (10.20220127) upstream; urgency=medium

    * New v10 repository version (with v9 as a stepping-stone to it).
      v8 remains the default version for now.
    * In v10, object files are locked using separate lock files. This allows
      the object files to be kept non-writable even in repositories where
      core.sharedRepository is set.
    * The v10 upgrade will happen automatically, one year after the v9
      upgrade, in order to allow time for any old git-annex processes that
      are not aware of the locking change to finish. Or git-annex upgrade
      can be used to upgrade to v10 immediately.
    * In v9 upgrade, set filter.annex.process. This makes git add/checkout faster
      when there are a lot of unlocked annexed files or non-annexed files, but can
      also make git add of large files to the annex somewhat slower.
      If this tradeoff does not work for your use case, you can still unset
      filter.annex.process.
    * export: When a non-annexed symlink is in the tree to be exported, skip it.
    * import: When the previously exported tree contained a non-annexed symlink,
      preserve it in the imported tree so it does not get deleted.
    * enableremote, renameremote: Better handling of the unusual case where
      multiple special remotes have been initialized with the same name.
    * Recover from corrupted content being received from a git remote,
      by deleting the temporary file when it fails to verify. This prevents
      a retry from failing again.
      (reversion introduced in version 8.20210903)
    * adb: Added ignorefinderror configuration parameter.
    * Avoid crashing when run in a bare git repo that somehow contains an
      index file.
    * Reject combinations of --batch (or --batch-keys) with options like
      --all or --key or with filenames.

   -- Joey Hess <id@joeyh.name>  Thu, 27 Jan 2022 13:25:19 -0400

-------------------------------------------------------------------
Wed Jan 19 12:40:15 UTC 2022 - Ben Greiner <code@bnavigator.de>

- Update git-annex to version 8.20211231.
  * Improved support for using git-annex in a read-only repository,
    git-annex branch information from remotes that cannot be merged
    into the git-annex branch will now not crash it, but will be
    merged in memory.
  * addurl, youtube-dl: When --check-raw prevents downloading an
    url, still continue with any downloads that come after it,
    rather than erroring out.
  * Fix locking problems when annex.pidlock is set and concurrency
    is enabled eg with -J.
  * Improve error message display when autoinit fails due to eg, a
    permissions problem.
  * export: Avoid unncessarily re-exporting non-annexed files that
    were already exported.
  * Improve git command queue flushing so that eg, addurl of
    several large files that take time to download will update the
    index for each file, rather than deferring the index updates to
    the end.
  * sync: Better error message when unable to export to a remote
    because remote.name.annex-tracking-branch is configured to a
    ref that does not exist.
  * Fix build with ghc 9.0.1
  * Fix build with old versions of feed library.
- git-annex 8.20211123 was released with these changes:
  * Bugfix: When -J was enabled, getting files could leak an
    ever-growing number of git cat-file processes.
  * Support git's new "ort" resolver, which became the default in
    git 2.34.0, and broke the test suite and automatic merge
    resolution of a conflict between an annexed file and a
    non-annexed file.
  * importfeed: Display url before starting youtube-dl download.
- Move to _service checking out the upstream source directly
- Avoid compiling and linking the binary a second time in the
  install phase and a third time in the check phase

-------------------------------------------------------------------
Sat Nov 20 17:31:42 UTC 2021 - psimons@suse.com

- Update git-annex to version 8.20211117.
  git-annex (8.20211117) upstream; urgency=medium

    * filter-process: New command that can make git add/checkout faster when
      there are a lot of unlocked annexed files or non-annexed files, but that
      also makes git add of large annexed files slower. Use it by running:
      git config filter.annex.process 'git-annex filter-process'
    * Fix a typo in the name of youtube-dl
      (reversion introduced in version 8.20210903)
    * git-lfs: Fix interoperability with gitlab's implementation of the
      git-lfs protocol, which requests Content-Encoding chunked.
    * importfeed: Fix a crash when used in a non-unicode locale.
    * migrate: New --remove-size option.
    * uninit: Avoid error message when no commits have been made to the
      repository yet.
    * uninit: Avoid error message when there is no git-annex branch.
    * metadata --batch: Avoid crashing when a non-annexed file is input,
      instead output a blank line like other batch commands do.
    * metadata --batch --json: Reject input whose "fields" does not consist
      of arrays of strings. Such invalid input used to be silently ignored.

   -- Joey Hess <id@joeyh.name>  Wed, 17 Nov 2021 12:18:49 -0400

-------------------------------------------------------------------
Mon Nov  1 08:26:45 UTC 2021 - psimons@suse.com

- Update git-annex to version 8.20211028.
  git-annex (8.20211028) upstream; urgency=medium

    * Removed support for accessing git remotes that use versions of
      git-annex older than 6.20180312.
    * git-annex-shell: Removed several commands that were only needed to
      support git-annex versions older than 6.20180312.
    * Negotiate P2P protocol version with tor remotes, allowing
      use of protocol version 1. This negotiation is not supported
      by versions of git-annex older than 6.20180312.
    * Fix bug that caused stale git-annex branch information to read
      when annex.private or remote.name.annex-private is set.
    * git-annex get when run as the first git-annex command in a new repo
      did not populate all unlocked files.
      (Reversion in version 8.20210621)
    * Fix using lookupkey and info inside a subdirectory of the git repository.
      (Reversion in version 8.20211011)
    * Avoid some sqlite crashes on Windows SubSystem for Linux (WSL).
    * Call annex.freezecontent-command on the annex object file
      after it has been moved into place in annex/objects/. This allows
      the hook to freeze the file in ways that prevent moving it, such as
      removing the Windows delete permission.
      Thanks, Reiko Asakura.
    * addurl: Support adding the same url to multiple files at the same
      time when using -J with --batch --with-files.
    * When retrieval from a chunked remote fails, display the error that
      occurred when downloading the chunk, rather than the error that
      occurred when trying to download the unchunked content, which is less
      likely to actually be stored in the remote.
    * Avoid crashing tilde expansion on user who does not exist.
    * test: Put gpg temp home directory in system temp directory,
      not filesystem being tested.

   -- Joey Hess <id@joeyh.name>  Thu, 28 Oct 2021 11:58:29 -0400

-------------------------------------------------------------------
Tue Oct 12 10:51:25 UTC 2021 - psimons@suse.com

- Update git-annex to version 8.20211011.
  git-annex (8.20211011) upstream; urgency=medium

    * Added annex.bwlimit and remote.name.annex-bwlimit config to limit
      the bandwidth of transfers. It works for git remotes and many
      but not all special remotes.
    * Bug fix: Git configs such as annex.verify were incorrectly overriding
      per-remote git configs such as remote.name.annex-verify.
      (Reversion in version 4.20130323)
    * borg: Significantly improved memory use when a borg repository
      contains many archives.
    * borg: Avoid trying to extract xattrs, ACLS, and bsdflags when
      retrieving from a borg repository.
    * Sped up git-annex smudge --clean by 25%.
    * Resume where it left off when copying a file to/from a local git remote
      was interrupted.
    * sync --content: Avoid a redundant checksum of a file that was
      incrementally verified, when used on NTFS and perhaps other filesystems.
    * reinject: Fix crash when reinjecting a file from outside the repository.
      (Reversion in version 8.20210621)
    * Avoid cursor jitter when updating progress display.

   -- Joey Hess <id@joeyh.name>  Mon, 11 Oct 2021 12:52:14 -0400

-------------------------------------------------------------------
Sun Sep  5 17:54:01 UTC 2021 - psimons@suse.com

- Update git-annex to version 8.20210903.
  git-annex (8.20210903) upstream; urgency=medium

    * Deal with clock skew, both forwards and backwards, when logging
      information to the git-annex branch.
    * GIT_ANNEX_VECTOR_CLOCK can now be set to a fixed value (eg 1)
      rather than needing to be advanced each time a new change is made.
    * Misuse of GIT_ANNEX_VECTOR_CLOCK will no longer confuse git-annex.
    * add: When adding a dotfile, avoid treating its name as an extension.
    * rsync special remote: Stop displaying rsync progress, and use
      git-annex's own progress display.
    * Many special remotes now checksum content while it is being retrieved,
      instead of in a separate pass at the end. This is supported for all
      special remotes on Linux (except for bittorrent), and for many
      on other OS's (except for adb, external, gcrypt, hook, and rsync).
    * unused: Skip the refs/annex/last-index ref that git-annex recently
      started creating.
    * Fix test suite failure on Windows.
    * New --batch-keys option added to these commands:
      get, drop, move, copy, whereis
    * Added annex.youtube-dl-command config. This can be used to run some
      forks of youtube-dl.
    * Run cp -a with --no-preserve=xattr, to avoid problems with copied
      xattrs, including them breaking permissions setting on some NFS
      servers.
    * add, import: Detect when xattrs or perhaps ACLs prevent removing
      write permissions from an annexed file, and fail with an informative
      message.
    * Fix support for readonly git remotes.
      (Reversion in version 8.20210621)
    * When downloading urls fail, explain which urls failed for which
      reasons.
    * web: Avoid displaying a warning when downloading one url failed
      but another url later succeeded.

   -- Joey Hess <id@joeyh.name>  Fri, 03 Sep 2021 12:00:46 -0400

-------------------------------------------------------------------
Wed Aug  4 10:32:07 UTC 2021 - psimons@suse.com

- Update git-annex to version 8.20210803.
  git-annex (8.20210803) upstream; urgency=medium

    * whereused: New command, finds what files use a key, or where a key
      was used historically.
    * Fix a bug that prevented getting content from a repository that
      started out as a bare repository, or had annex.crippledfilesystem
      set, and was converted to a non-bare repository.
    * Fix retrieval of content from borg repos accessed over ssh.
    * sync: When --quiet is used, run git commit, push, and pull without
      their ususual output.
    * merge: When --quiet is used, run git merge without its usual output.
    * sync, merge, post-receive: Avoid merging unrelated histories,
      which used to be allowed only to support direct mode repositories.
      (However, sync does still merge unrelated histories when importing
      trees from special remotes, and the assistant still merges unrelated
      histories.)
    * sync, merge: Added --allow-unrelated-histories option, which
      is the same as the git merge option.
    * Fix bug that caused some transfers to incorrectly fail with
      "content changed while it was being sent", when the content was not
      changed.
    * Fix bug that could prevent pointer files from being populated,
      in a repository that was upgraded from v7.
    * fsck: Detect and correct stale or missing inode caches.
    * Fix a rounding bug in display of data sizes.
    * git-annex get when run as the first git-annex command in a new repo
      did not populate unlocked files.
      (Reversion in version 8.20210621)

   -- Joey Hess <id@joeyh.name>  Tue, 03 Aug 2021 12:20:09 -0400

-------------------------------------------------------------------
Thu Jul 15 16:15:36 UTC 2021 - psimons@suse.com

- Update git-annex to version 8.20210714.
  git-annex (8.20210714) upstream; urgency=medium

    * assistant: Avoid unncessary git repository repair in a situation where
      git fsck gets confused about a commit that is made while it's running.
    * addurl: Avoid crashing when used on beegfs.
    * --debug output goes to stderr again, not stdout.
      (Reversion in version 8.20210428)
    * init: Fix misbehavior when core.sharedRepository = group that
      caused it to enter an adjusted branch and set annex.crippledfilesystem
      (Reversion in version 8.20210630)
    * assistant: When adding non-large files to git, honor annex.delayadd
      configuration. Also, don't add non-large files to git when they
      are still being written to.

   -- Joey Hess <id@joeyh.name>  Wed, 14 Jul 2021 12:22:55 -0400

-------------------------------------------------------------------
Thu Jul  1 12:52:52 UTC 2021 - psimons@suse.com

- Update git-annex to version 8.20210630.
  git-annex (8.20210630) upstream; urgency=medium

    * Fixed bug that interrupting git-annex repair (or assistant) while
      it was fixing repository corruption would lose objects that were
      contained in pack files. Also the assistant might sometimes have
      crashed with the same result.
    * repair: Fix reversion in version 8.20200522 that prevented fetching
      missing objects from remotes.
    * sync: Partly work around github behavior that first branch to be pushed
      to a new repository is assumed to be the head branch, by not pushing
      synced/git-annex first.
    * Added annex.freezecontent-command and annex.thawcontent-command
      configs.
    * Improve display of errors when transfers fail.
    * Dropping an unused object with drop --unused or dropunused will
      mark it as dead, preventing fsck --all from complaining about it
      after it's been dropped from all repositories.
    * addurl, importfeed: Added --no-raw option that forces download
      with youtube-dl or a special remote. In particular this can avoid
      falling back to raw download when youtube-dl is blocked for some
      reason.

   -- Joey Hess <id@joeyh.name>  Wed, 30 Jun 2021 11:48:16 -0400

-------------------------------------------------------------------
Tue Jun 22 07:42:31 UTC 2021 - psimons@suse.com

- Update git-annex to version 8.20210621.
  git-annex (8.20210621) upstream; urgency=medium

    * New matching options --excludesamecontent and --includesamecontent
    * When two files have the same content, and a required content expression
      matches one but not the other, dropping the latter file will fail as it
      would also remove the content of the required file.
    * drop, move, mirror: When two files have the same content, and
      different numcopies or requiredcopies values, use the higher value.
    * drop --auto: When two files have the same content, and a preferred content
      expression matches one but not the other, do not drop the content.
    * sync --content, assistant: When two unlocked files have the same
      content, and a preferred content expression matches one but not the
      other, do not drop the content. (This was already the case for locked
      files.)
    * sync --content, assistant: Fix an edge case where a file that is not
      preferred content did not get dropped.
    * filter-branch: New command, useful to produce a filtered version of the
      git-annex branch, eg when splitting a repository.
    * fromkey: Create an unlocked file when used in an adjusted branch
      where the file should be unlocked, or when configured by annex.addunlocked.
    * Fix behavior of several commands, including reinject, addurl, and rmurl
      when given an absolute path to an unlocked file, or a relative path
      that leaves and re-enters the repository.
    * smudge: Fix a case where an unlocked annexed file that annex.largefiles
      does not match could get its unchanged content checked into git,
      due to git running the smudge filter unecessarily.
    * reinject: Error out when run on a file that is not annexed, rather
      than silently skipping it.
    * assistant: Fix a crash on startup by avoiding using forkProcess.
    * init: When annex.commitmessage is set, use that message for the commit
      that creates the git-annex branch.
    * Added annex.adviceNoSshCaching config.
    * Added --size-limit option.
    * Future proof activity log parsing.
    * Fix an exponential slowdown when large numbers of duplicate files are
      being added in unlocked form.

   -- Joey Hess <id@joeyh.name>  Mon, 21 Jun 2021 12:17:24 -0400

-------------------------------------------------------------------
Thu Apr 29 09:42:49 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

-  drop persistent.patch

-------------------------------------------------------------------
Thu Apr 29 09:27:23 UTC 2021 - psimons@suse.com

- Update git-annex to version 8.20210428.
  git-annex (8.20210428) upstream; urgency=medium

    * New annex.private and remote.name.annex-private configs that can
      prevent storing information about a repository and remotes in the
      git-annex branch.
    * initremote: Added --private option to set up a private special remote.
    * importfeed: Made "checking known urls" phase run 12 times faster.
    * Added --debugfilter (and annex.debugfilter)
    * diffdriver: Support unlocked files.
    * forget: Preserve currently exported trees, avoiding problems with
      exporttree remotes in some unusual circumstances.
    * fsck: When downloading content from a remote, if the content is able
      to be verified during the transfer, skip checksumming it a second time.
    * directory: When cp supports reflinks, use it.
    * Avoid excess commits to the git-annex branch when stall detection is
      enabled.
    * git-annex-config: Allow setting annex.securehashesonly, which has
      otherwise been supported since 2019, but was missing from the list of
      allowed repo-global configs.
    * init: Fix a crash when the repo's was cloned from a repo that had an
      adjusted branch checked out, and the origin remote is not named "origin".
    * Fix some bugs that made git-annex not see recently recorded status
      information when configured with annex.alwayscommit=false.
    * When mincopies is set to a larger value than numcopies, make sure that
      mincopies is satisfied. Before, it assumed a sane configuration would
      have numcopies larger or equal to mincopies. It's still a good idea
      not to configure git-annex this way.
    * Avoid more than 1 gpg password prompt at the same time, which
      could happen occasionally before when concurrency is enabled.
    * Fix build with persistent-2.12.0.1

   -- Joey Hess <id@joeyh.name>  Wed, 28 Apr 2021 12:13:24 -0400

-------------------------------------------------------------------
Tue Apr  6 08:36:35 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

- add persistent.patch - support new persistent library

-------------------------------------------------------------------
Wed Mar 31 14:32:42 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

- drop atto.patch

-------------------------------------------------------------------
Wed Mar 31 14:28:17 UTC 2021 - psimons@suse.com

- Update git-annex to version 8.20210330.
  git-annex (8.20210330) upstream; urgency=medium

    * Behavior change: When autoenabling special remotes of type S3, weddav,
      or glacier, do not take login credentials from environment variables,
      as the user may not be expecting the autoenable to happen, or may
      have those set for other purposes and not intend git-annex to use them.
    * New annex.supportunlocked config that can be set to false to avoid
      some expensive things needed to support unlocked files, if you do not
      use them.
    * Fix bug importing from a special remote into a subdirectory more than
      one level deep, which generated unusual git trees that could confuse
      git merge.
    * borg: Fix a bug that prevented importing keys of type URL and WORM.
    * borg: Support importing files that are hard linked in the borg backup.
    * export: When a submodule is in the tree to be exported, skip it.
    * import: When the previously exported tree contained a submodule,
      preserve it in the imported tree so it does not get deleted.
    * export --json: Fill in the file field.
    * rmurl: When youtube-dl was used for an url, it no longer needs to be
      prefixed with "yt:" in order to be removed.
    * rmurl: If an url is both used by the web and also claimed by another
      special remote, fix a bug that caused the url to to not be removed.
    * unregisterurl: Fix a bug that caused an url to not be unregistered
      when it is claimed by a special remote other than the web.
    * whereis: Don't include yt: prefix when showing url to content
      retrieved with youtube-dl.
    * webdav: Work around some buggy webdav server behavior involving
      renaming files.
    * Make --debug also enable debugging in child git-annex processes.
    * fsck: When --from is used in combination with --all or similar options,
      do not verify required content, which can't be checked properly when
      operating on keys.
    * Sped up git-annex init in a clone of an existing repository.
    * Improved display of errors when accessing a git http remote fails.
    * Fix build with attoparsec-0.14.

   -- Joey Hess <id@joeyh.name>  Tue, 30 Mar 2021 13:01:17 -0400

-------------------------------------------------------------------
Thu Mar 25 09:47:23 UTC 2021 - Ondřej Súkup <mimi.vx@gmail.com>

- add atto.patch fixing build with attoparsec-0.14+

-------------------------------------------------------------------
Thu Mar 11 08:23:16 UTC 2021 - psimons@suse.com

- Update git-annex to version 8.20210310.
  git-annex (8.20210310) upstream; urgency=medium

    * When non-annexed files in a tree are exported to a special remote,
      importing from the special remote keeps the files non-annexed,
      as long as their content has not changed, rather than converting
      them to annexed files.
      (Such a conversion will still happen when importing from a remote
      an old git-annex exported such a tree to before; export the tree
      with the new git-annex before importing to avoid that.)
    * Added support for git-remote-gcrypt's rsync URIs, which access a remote
      using rsync over ssh, and which git pushes to much more efficiently
      than ssh urls.
    * unregisterurl: New command.
    * registerurl: Allow it to be used in a bare repository.
    * Prevent combinations of options such as --all with --include.
    * Fixed handling of --mimetype or --mimeencoding combined with
      options like --all or --unused.
    * Fix handling of --branch combined with --unlocked or --locked.
    * Fix support for local gcrypt repositories with a space in their URI.
    * uninit: Fix a small bug that left a lock file in .git/annex
    * Windows: Correct the path to the html help file for 64 bit build.
    * OSX dmg: Updated bundled git to 2.30.2 which fixes CVE-2021-21300.

   -- Joey Hess <id@joeyh.name>  Wed, 10 Mar 2021 13:58:15 -0400

-------------------------------------------------------------------
Tue Feb 23 20:57:41 UTC 2021 - psimons@suse.com

- Update git-annex to version 8.20210223.
  git-annex (8.20210223) upstream; urgency=medium

    * annex.stalldetection can now be set to "true" to make git-annex
      do automatic stall detection when it detects a remote is updating its
      transfer progress consistently enough for stall detection to work.
    * When annex.stalldetection is not enabled and a likely stall is
      detected, display a suggestion to enable it.
    * Commands can be added to git-annex, by installing a program in PATH
      with a name starting with "git-annex-"
    * Fix a reversion that made import of a tree from a special remote
      result in a merge that deleted files that were not preferred content
      of that special remote.
    * Bugfix: fsck --from a ssh remote did not actually check that the
      content on the remote is not corrupted.
    * unannex, uninit: When an annexed file is modified, don't overwrite
      the modified version with an older version from the annex.
    * When adding files to an adjusted branch set up by --unlock-present,
      add them unlocked, not locked.
    * Fix an oddity in matching options and preferred content expressions
      such as "foo (bar or baz)", which was incorrectly handled as if
      it were "(foo or bar) and baz)" rather than the intended
      "foo and (bar or baz)"
    * Checksum as content is received from a remote git-annex repository,
      rather than doing it in a second pass.
    * Tahoe: Avoid verifying hash after download, since tahoe does sufficient
      verification itself.
    * unannex, uninit: Don't run git rm once per annexed file,
      for a large speedup.
    * When a git remote is configured with an absolute path, use that
      path, rather than making it relative.
    * get: Improve output when failing to get a file fails.
    * Fix build on openbsd.
      Thanks, James Cook for the patch.
    * Include libkqueue.h file needed to build the assistant on BSDs.

   -- Joey Hess <id@joeyh.name>  Tue, 23 Feb 2021 14:40:14 -0400

-------------------------------------------------------------------
Thu Feb 18 08:39:26 UTC 2021 - Guillaume GARDET <guillaume.gardet@opensuse.org>

- Update _constraints

-------------------------------------------------------------------
Wed Jan 27 19:36:03 UTC 2021 - psimons@suse.com

- Update git-annex to version 8.20210127.
  git-annex (8.20210127) upstream; urgency=medium

    * Added mincopies configuration. This is like numcopies, but is
      enforced even more strictly. While numcopies can be violated in
      concurrent drop situations involving special remotes that do not
      support locking, mincopies cannot be. The default value has always
      been 1, but now it can be set to higher values if desired.
    * Behavior change: When numcopies is set to 0, git-annex used to drop
      content without requiring any copies. Now to get that (highly unsafe)
      behavior, mincopies also needs to be set to 0.
    * Behavior change: git-annex trust now needs --force, since unconsidered
      use of trusted repositories can lead to data loss.
    * Behavior change: --trust and --trust-glacier options no longer overrides
      trust, since that can lead to data loss, which should never be enabled
      by an option other than --force.
    * add: Significantly speed up adding lots of non-large files to git,
      by disabling the annex smudge filter when running git add.
    * add --force-small: Run git add rather than updating the index itself,
      so any other smudge filters than the annex one that may be enabled will
      be used.
    * Fix --time-limit, which got broken in several ways by some optimisations
      in version 8.20201007.
    * When syncing changes back from an adjusted branch to the basis branch,
      include deletions of submodules.
      Thanks, Kyle Meyer for the patch.
    * Bug fix: export with -J could fail when two files had the same content.
    * Bug fix: Fix tilde expansion in ssh urls when the tilde is the last
      character in the url.
      Thanks, Grond for the patch.
    * Avoid crashing when there are remotes using unparseable urls.
      Including the non-standard URI form that git-remote-gcrypt uses for rsync.
    * Directory special remotes with importtree=yes now avoid unncessary
      hashing when inodes of files have changed, as happens whenever a FAT
      filesystem gets remounted.
    * Fix a bug that prevented git-annex init from working in a submodule.
    * Fix a bug in view filename generation when a metadata value ended with
      "/" (or ":" or "\" on Windows)
    * adjust: Fix some bad behavior when unlocked files use URL keys.
    * smudge: Fix some bad behavior when git add is run on an unlocked
      file that used an URL key.
    * Added GETGITREMOTENAME to external special remote protocol.
    * Windows: Work around win32 length limits when dealing with lock files.

   -- Joey Hess <id@joeyh.name>  Wed, 27 Jan 2021 11:09:25 -0400

-------------------------------------------------------------------
Tue Dec 29 21:16:10 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20201129.
  git-annex (8.20201129) upstream; urgency=medium

    * New borg special remote. This is a new kind of remote, that examines
      borg backups of git-annex repositories, learns what files have been
      backed up, and can restore files from the backup and so on. As well
      as backups, it can be useful for archival storage, since borg can
      efficiently store many related versions of files.
    * New config annex.stalldetection, remote.name.annex-stalldetection,
      which can be used to deal with remotes that stall during transfers,
      or are sometimes too slow to want to use.
    * Support special remotes that are configured with importtree=yes but
      without exporttree=yes.
    * Fix bug that made the next download after an empty file from a ssh
      or tor remote fail.
    * Avoid spurious "verification of content failed" message when downloading
      content from a ssh or tor remote fails due to the remote no longer
      having a copy of the content.
    * Fix bug that matched include= and exclude= in preferred/required content
      expressions relative to the current directory, rather than the path
      from the top of the repository.
      (Reversion introduced in version 8.20201116.)
    * Fix hang on shutdown of external special remote using ASYNC protocol
      extension.
      (Reversion introduced in version 8.20201007.)
    * Guard against running in a repo where annex.uuid is set but
      annex.version is not set, or vice-versa.
    * Avoid autoinit when a repo does not have annex.version or annex.uuid
      set, but has a git-annex objects directory, suggesting it was used
      by git-annex before, and the git config may have been lost.
    * importfeed: Avoid using youtube-dl when a feed does not contain an
      enclosure, but only a link to an url which youtube-dl does not support.
    * initremote: Prevent enabling encryption with exporttree=yes or
      importtree=yes.
    * Windows: include= and exclude= containing '/' will also match filenames
      that are written using '\'. (And vice-versa, but it's better to use '/'
      for portability.)
    * Fix a bug that could prevent getting files from an importtree=yes
      remote, because the imported tree was allowed to be garbage collected.
    * stack.yaml: Updated to lts-16.27.

   -- Joey Hess <id@joeyh.name>  Tue, 29 Dec 2020 12:52:58 -0400

-------------------------------------------------------------------
Thu Dec 17 12:20:00 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- disable %{ix86} build

-------------------------------------------------------------------
Sun Nov 29 15:48:14 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20201127.
  git-annex (8.20201127) upstream; urgency=medium

    * adjust: New --unlock-present mode which locks files whose content is not
      present (so the broken symlink is visible), while unlocking files whose
      content is present.
    * Added annex.adjustedbranchrefresh git config to update adjusted
      branches set up by git-annex adjust --unlock-present/--hide-missing.
    * Fix hang when an external special remote program exited but
      the stderr pipe to it was left open, due to a daemon having inherited
      the file descriptor.
    * Fix a bug that could make resuming a download from the web fail
      when the entire content of the file is actually already present
      locally.
    * examinekey: Added a "file" format variable for consistency with find,
      and for easier scripting.
    * init: When writing hook scripts, set all execute bits, not only
      the user execute bit.
    * upgrade: Support an edge case upgrading a v5 direct mode repo
      where nothing had ever been committed to the head branch.
    * Made the test suite significantly less noisy, only displaying command
      output when something failed.
    * Fix building without the torrent library.
      Thanks, Kyle Meyer.
    * Fix build on Windows.
    * Prevent windows assistant from trying (and failing) to upgrade
      itself, which has never been supported on windows.

   -- Joey Hess <id@joeyh.name>  Fri, 27 Nov 2020 12:54:11 -0400

-------------------------------------------------------------------
Tue Nov 17 15:41:20 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- drop 0001-enable-extensions-needed-by-new-version-of-persistent.patch

-------------------------------------------------------------------
Mon Nov 16 21:55:38 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20201116.
  git-annex (8.20201116) upstream; urgency=medium

    * move: Fix a regression in the last release that made move --to not
      honor numcopies settings.
    * sync --content: Fix a bug where a file that was not preferred content
      could be transferred to a remote. This happened when the file got deleted
      after the sync started running.
    * Warn when adding a annex symlink or pointer file that uses a key that
      is not known to the repository, to prevent confusion if the user has
      copied it from some other repository.
    * examinekey: Added two new format variables: objectpath and objectpointer
    * examinekey: Added --migrate-to-backend

   -- Joey Hess <id@joeyh.name>  Mon, 16 Nov 2020 09:36:35 -0400

-------------------------------------------------------------------
Sat Nov  7 22:15:09 UTC 2020 - Ondřej Súkup <mimi.vx@gmail.com>

- add ./0001-enable-extensions-needed-by-new-version-of-persisten.patch

-------------------------------------------------------------------
Sat Nov  7 15:34:35 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20201103.
  Upstream has edited the change log file since the last release in
  a non-trivial way, i.e. they did more than just add a new entry
  at the top. You can review the file at:
  http://hackage.haskell.org/package/git-annex-8.20201103/src/CHANGELOG

-------------------------------------------------------------------
Thu Oct  8 02:00:42 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20201007.
  git-annex (8.20201007) upstream; urgency=medium

    * --json output now includes a new field "input" which is the input
      value (filename, url, etc) that caused a json object to be output.
    * --batch combined with -J now runs batch requests concurrently for many
      commands. Before, the combination was accepted, but did not enable
      concurrency. Since the output of batch requests can be in any order,
      --json with the new "input" field is recommended to be used,
      to determine which batch request each response corresponds to.
    * aws-0.22 improved its support for setting etags, which improves
      support for versioned S3 buckets.
    * Serialize use of C magic library, which is not thread safe.
      This fixes failures uploading to S3 when using -J.
    * add, addurl, importfeed, import: Added --no-check-gitignore option
      for finer grained control than using --force.
    * import: Check gitignores when importing trees from special remotes.
    * addunused: Don't check .gitignores when adding files.
    * Improve the "Try making some of these repositories available"
      message, with some hints for the user for what to do.
    * Improve --debug output to show pid of processes that are started and
      stopped.
    * sync --all: Sped up seeking to around twice as fast, by avoiding a
      pass over the worktree files when preferred content expressions of the
      local repo and remotes don't use include=/exclude=.
    * Sped up seeking for files to operate on, when using options like
      --copies or --in, by around 20%
    * import --no-content: Check annex.largefiles, and import small
      files into git, the same as is done when importing with content.
      If the largefiles expression needs the file content available
      (due to mimetype or mimeencoding being used), the import will fail.
    * sync: When run without --content, import without copying from
      importtree=yes directory special remotes.
      (Other special remotes may support this later as well.)
    * addurl: Avoid a redundant git ignores check for speed.
    * upgrade: Avoid an upgrade failure of a bare repo in unusual circumstances.
    * httpalso: Support being used with special remotes that do not have
      encryption= in their config.
    * Parse youtube-dl progress output, which lets progress be displayed
      when doing concurrent downloads.
    * Fix build with Benchmark build flag.
    * Enable building with git-annex benchmark by default, only turning it
      off when the criterion library is not installed.
    * runshell: Fix a edge case where rm errors were sent to stdout, which
      could confuse things parsing git-annex output.
    * runshell: Update files atomically when preparing to run git-annex.
    * Fix a build failure on Windows.

   -- Joey Hess <id@joeyh.name>  Wed, 07 Oct 2020 12:19:05 -0400

-------------------------------------------------------------------
Tue Sep 15 14:54:15 UTC 2020 - Michel Normand <normand@linux.vnet.ibm.com>

- Add _constraints 4GB min disk space

-------------------------------------------------------------------
Wed Sep  9 02:00:54 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20200908.
  Upstream has edited the change log file since the last release in
  a non-trivial way, i.e. they did more than just add a new entry
  at the top. You can review the file at:
  http://hackage.haskell.org/package/git-annex-8.20200908/src/CHANGELOG

-------------------------------------------------------------------
Tue Aug 18 10:46:50 UTC 2020 - Peter Simons <psimons@suse.com>

- Replace %setup -q with the more modern %autosetup macro.

-------------------------------------------------------------------
Tue Aug 11 02:00:33 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20200810.
  git-annex (8.20200810) upstream; urgency=medium

    * Added support for external backend programs. So if you want a hash
      that git-annex doesn't support, or something stranger, you can write a
      small program to implement it.
    * Fix a bug in find --branch in the previous version.
    * importfeed: Fix reversion that caused some '.' in filenames to be
      replaced with '_'
    * Fix a lock file descriptor leak that could occur when running commands
      like git-annex add with -J. Bug was introduced as part of a different FD
      leak fix in version 6.20160318.
    * Fix a hang when using git-annex with an old openssh 7.2p2, which had
      some weird inheriting of ssh FDs by sshd. Bug was introduced in
      git-annex version 7.20200202.7.
    * move, copy --to: Sped up seeking files by 2x.
    * drop: Sped up seeking files to drop by 2x, and also some performance
      improvements to checking numcopies.
    * Deal with unusual IFS settings in the shell scripts for linux
      standalone and OSX app.
      Thanks, Yaroslav Halchenko
    * Avoid complaining that a file with "is beyond a symbolic link"
      when the filepath is absolute and the symlink in question is not
      actually inside the git repository.
    * Slightly sped up the linux standalone bundle.
    * Support building with dlist-1.0

- Drop obsolete 0001-fix-build-with-dlist-1.0.patch.

-------------------------------------------------------------------
Thu Aug  6 07:58:47 UTC 2020 - Peter Simons <psimons@suse.com>

- Apply 0001-fix-build-with-dlist-1.0.patch to add support for
  building with dlist version 1.x.

-------------------------------------------------------------------
Tue Jul 21 08:29:13 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20200720.1.
  git-annex (8.20200720.1) upstream; urgency=medium

    * Fix a bug in find --batch in the previous version.

   -- Joey Hess <id@joeyh.name>  Mon, 20 Jul 2020 19:39:11 -0400

  git-annex (8.20200720) upstream; urgency=medium

    * import: Added --no-content option, which avoids downloading files
      from a special remote. Currently only supported by the directory
      special remote.
    * Honor annex.largefiles when importing a tree from a special remote.
      (Except for when --no-content is used.)
    * Fix a deadlock that could occur after git-annex got an unlocked
      file, causing the command to hang indefinitely. Known to happen on
      vfat filesystems, possibly others.
    * Build with the http-client-restricted and git-lfs libraries when
      available, otherwise use the vendored copy as before.
    * testremote: Fix over-allocation of resources and bad caching,
      including starting up a large number of external special remote processes.
      (Regression introduced in version 8.20200501)
    * test: Fix some test cases that assumed git's default branch name.
    * importfeed: Added some additional --template variables:
      itempubyear, itempubmonth, itempubday, itempubhour,
      itempubminute, itempubsecond.
    * Made several special remotes support locking content on them,
      which allows dropping from other special remotes in some situations
      where it was not possible before. Supported special remotes:
      S3 (with versioning=yes), git-lfs, tahoe
    * Fix reversion that broke passing annex.* and remote.*.annex-*
      git configs with -c. (Since version 8.20200330.)
    * Bring back git-annex branch read cache. This speeds up some operations,
      eg git-annex sync --content --all gets 20% faster.
    * Fix a recently introduced bug that could cause a "fork: resource exhausted"
      after getting several thousand files.
    * Sped up the --all option by 2x to 16x by using git cat-file --buffer.
      Thanks to Lukey for finding this optimisation.
    * Sped up seeking for annexed files to operate on by a factor of nearly 2x.
    * Sped up sync --content by 2x and other commands like fsck --fast and
      whereis by around 50%, by using git cat-file --buffer.
    * importfeed: Made checking known urls step around 15% faster.
    * fsck: Detect if WORM keys contain a carriage return, and recommend
      upgrading the key. (git-annex could have maybe created such keys back
      in 2013).
    * When on an adjust --hide-missing branch, fix handling of files that
      have been deleted but the deletion is not yet staged.

   -- Joey Hess <id@joeyh.name>  Mon, 20 Jul 2020 14:40:51 -0400

-------------------------------------------------------------------
Thu Jun 18 02:00:26 UTC 2020 - psimons@suse.com

- Update git-annex to version 8.20200617.
  git-annex (8.20200617) upstream; urgency=medium

    * Added annex.skipunknown git config, that can be set to false to change
      the behavior of commands like `git annex get foo*`, to not skip
      over files/dirs that are not checked into git and are explicitly listed in
      the command line.
    * annex.skipunknown is planned to change to default to false in a
      git-annex release in early 2022. If you prefer the current behavior,
      you can explicitly set it to true.
    * Try to enable special remotes configured with autoenable=yes
      when git-annex auto-initialization happens in a new clone of an
      existing repo. Previously, git-annex init had to be explicitly run to
      enable them. Special remotes cannot display anything when autoenabled
      this way, to avoid interfering with the output of git-annex query
      commands.
    * export: Added options for json output.
    * import: Added --json-progress.
    * addurl: Make --preserve-filename also apply when eg a torrent contains
      multiple files.
    * Fix a crash or potentially not all files being exported when
      sync -J --content is used with an export remote.
    * export: Let concurrent transfers be done with -J or annex.jobs.
    * move --to, copy --to, mirror --to: When concurrency is enabled, run
      cleanup actions in separate job pool from uploads.
    * init: If lock probing stalls for a long time (eg a broken NFS server),
      display a message to let the user know what's taking so long.
    * init: When annex.pidlock is set, skip lock probing.
    * Fix file descriptor leak when importing from a directory special remote
      that is configured with exporttree=yes.
    * Note that external special remote programs should not block SIGINT or
      SIGTERM.
    * Avoid creating the keys database during init when there are no unlocked
      files, to prevent init failing when sqlite does not work in the
      filesystem.
    * import: Avoid using some strange names for temporary keys,
      which broke importing from a directory special remote onto a vfat
      filesystem.
    * S3: The REDUCED_REDUNDANCY storage class is no longer cheaper so
      stop documenting it, and stop offering it as a choice in the assistant.
    * Improve display of problems auto-initializing or upgrading local git
      remotes.
    * When a local git remote cannot be initialized because it has no
      git-annex branch or a .noannex file, avoid displaying a message about it.
    * checkpresentkey: When no remote is specified, try all remotes, not
      only ones that the location log says contain the key. This is what
      the documentation has always said it did.
    * Fix regression in external special remote handling: GETCONFIG did not
      return a value that was set with SETCONFIG immediately before.
      (Regression introduced in version 7.20200202.7)
    * Fix bug that made initremote of extrnal special remotes with
      embedcreds=yes or gpg encryption not store the creds in the git-annex
      branch. git-annex-remote-googledrive one was special remote affected by
      this bug.
      (Regression introduced in version 7.20200202.7)
    * Fix bug that made creds not be stored in git when a special remote
      was initialized with gpg encryption, but without an explicit
      embedcreds=yes.
      (Regression introduced in version 7.20200202.7)
    * Fix a annex.pidlock issue that made eg git-annex get of an unlocked
      file hang until the annex.pidlocktimeout and then fail.

   -- Joey Hess <id@joeyh.name>  Wed, 17 Jun 2020 15:58:59 -0400

-------------------------------------------------------------------
Tue Jun  9 09:26:18 UTC 2020 - psimons@suse.com

- Add git-annex at version 8.20200522.
